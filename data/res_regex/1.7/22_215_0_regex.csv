"('Description.java', 'org.junit.runner.Description', 'getClassName', '(.*)\\((.*)\\)', 'testParser[61](com.akiban.sql.parser.SQLParserTest)')",[25135]
"('Description.java', 'org.junit.runner.Description', 'getClassName', '(.*)\\((.*)\\)', 'testParser[126](com.akiban.sql.parser.SQLParserTest)')",[28385]
"('Description.java', 'org.junit.runner.Description', 'parseMethod', '(.*)\\((.*)\\)', 'testParser[149](com.akiban.sql.parser.SQLParserTest)')",[29510]
"('Description.java', 'org.junit.runner.Description', 'getClassName', '(.*)\\((.*)\\)', 'testUnparser[55](com.akiban.sql.unparser.NodeToStringTest)')",[33249]
"('Description.java', 'org.junit.runner.Description', 'getClassName', '(.*)\\((.*)\\)', 'com.akiban.sql.parser.RowCtorTest')","[34775, 34820, 34866, 34911]"
"('Description.java', 'org.junit.runner.Description', 'getClassName', '(.*)\\((.*)\\)', 'testUnparser[56](com.akiban.sql.unparser.NodeToStringTest)')",[33299]
"('Description.java', 'org.junit.runner.Description', 'getClassName', '(.*)\\((.*)\\)', 'testParser[81](com.akiban.sql.parser.SQLParserTest)')",[26135]
"('RegexFilenameFilter.java', 'com.akiban.sql.RegexFilenameFilter', 'accept', '.*\\.sql', 'select-6g.sql')",[21825]
"('Description.java', 'org.junit.runner.Description', 'parseMethod', '(.*)\\((.*)\\)', 'testParser[55](com.akiban.sql.parser.SQLParserTest)')",[24810]
"('Description.java', 'org.junit.runner.Description', 'parseMethod', '(.*)\\((.*)\\)', 'testUnparser[32](com.akiban.sql.unparser.NodeToStringTest)')",[32074]
"('RegexFilenameFilter.java', 'com.akiban.sql.RegexFilenameFilter', 'accept', '.*\\.sql', 'create-procedure-1.expected')","[13320, 19620]"
"('Description.java', 'org.junit.runner.Description', 'getClassName', '(.*)\\((.*)\\)', 'testUnparser[19](com.akiban.sql.unparser.NodeToStringTest)')",[31449]
"('Description.java', 'org.junit.runner.Description', 'getClassName', '(.*)\\((.*)\\)', 'testUnparser[1](com.akiban.sql.unparser.NodeToStringTest)')",[30549]
"('Description.java', 'org.junit.runner.Description', 'parseMethod', '(.*)\\((.*)\\)', 'testParser[116](com.akiban.sql.parser.SQLParserTest)')",[27860]
"('Description.java', 'org.junit.runner.Description', 'parseMethod', '(.*)\\((.*)\\)', 'testParser[105](com.akiban.sql.parser.SQLParserTest)')",[27310]
"('RegexFilenameFilter.java', 'com.akiban.sql.RegexFilenameFilter', 'accept', '.*\\.sql', 'update-returning-2.sql')",[2880]
"('Description.java', 'org.junit.runner.Description', 'parseMethod', '(.*)\\((.*)\\)', 'testUnparser[16](com.akiban.sql.unparser.NodeToStringTest)')",[31274]
"('Description.java', 'org.junit.runner.Description', 'parseMethod', '(.*)\\((.*)\\)', 'testParser[151](com.akiban.sql.parser.SQLParserTest)')",[29610]
"('RegexFilenameFilter.java', 'com.akiban.sql.RegexFilenameFilter', 'accept', '.*\\.sql', 'create-table-add-geo-index-1.expected')",[5400]
"('RegexFilenameFilter.java', 'com.akiban.sql.RegexFilenameFilter', 'accept', '.*\\.sql', 'create-procedure-3.sql')",[13005]
"('Description.java', 'org.junit.runner.Description', 'parseMethod', '(.*)\\((.*)\\)', 'testParser[113](com.akiban.sql.parser.SQLParserTest)')",[27710]
"('RegexFilenameFilter.java', 'com.akiban.sql.RegexFilenameFilter', 'accept', '.*\\.sql', 'select-limit-2.sql')",[7560]
"('RegexFilenameFilter.java', 'com.akiban.sql.RegexFilenameFilter', 'accept', '.*\\.sql', 'create-procedure-2.expected')","[1710, 15480]"
"('Description.java', 'org.junit.runner.Description', 'getClassName', '(.*)\\((.*)\\)', 'testParser[54](com.akiban.sql.parser.SQLParserTest)')",[24785]
"('RegexFilenameFilter.java', 'com.akiban.sql.RegexFilenameFilter', 'accept', '.*\\.sql', 'select-sequence-1.expected')",[810]
"('RegexFilenameFilter.java', 'com.akiban.sql.RegexFilenameFilter', 'accept', '.*\\.sql', 'alter-table-constraint-2.expected')",[11340]
"('RegexFilenameFilter.java', 'com.akiban.sql.RegexFilenameFilter', 'accept', '.*\\.sql', 'insert-1.expected')","[13950, 20070]"
"('RegexFilenameFilter.java', 'com.akiban.sql.RegexFilenameFilter', 'accept', '.*\\.sql', 'group-concat-1.sql')","[11115, 18585]"
"('RegexFilenameFilter.java', 'com.akiban.sql.RegexFilenameFilter', 'accept', '.*\\.sql', 'drop-sequence-2.expected')",[5265]
"('Description.java', 'org.junit.runner.Description', 'getClassName', '(.*)\\((.*)\\)', 'testParser[159](com.akiban.sql.parser.SQLParserTest)')",[30035]
"('RegexFilenameFilter.java', 'com.akiban.sql.RegexFilenameFilter', 'accept', '.*\\.sql', 'select-14.sql')",[19845]
"('Description.java', 'org.junit.runner.Description', 'getClassName', '(.*)\\((.*)\\)', 'testParser[38](com.akiban.sql.parser.SQLParserTest)')",[23985]
"('RegexFilenameFilter.java', 'com.akiban.sql.RegexFilenameFilter', 'accept', '.*\\.sql', 'create-table-9.expected')",[1260]
"('RegexFilenameFilter.java', 'com.akiban.sql.RegexFilenameFilter', 'accept', '.*\\.sql', 'alter-table-add-column-4.error')",[2115]
"('Description.java', 'org.junit.runner.Description', 'getClassName', '(.*)\\((.*)\\)', 'testParser[161](com.akiban.sql.parser.SQLParserTest)')",[30135]
"('Description.java', 'org.junit.runner.Description', 'parseMethod', '(.*)\\((.*)\\)', 'testParser[67](com.akiban.sql.parser.SQLParserTest)')",[25410]
"('RegexFilenameFilter.java', 'com.akiban.sql.RegexFilenameFilter', 'accept', '.*\\.sql', 'alter-table-rename-4.sql')",[11970]
"('Description.java', 'org.junit.runner.Description', 'parseMethod', '(.*)\\((.*)\\)', 'testParser[140](com.akiban.sql.parser.SQLParserTest)')",[29060]
"('Description.java', 'org.junit.runner.Description', 'getClassName', '(.*)\\((.*)\\)', 'testParser[8](com.akiban.sql.parser.SQLParserTest)')",[22485]
"('RegexFilenameFilter.java', 'com.akiban.sql.RegexFilenameFilter', 'accept', '.*\\.sql', 'create-table-serial.sql')",[5940]
"('RegexFilenameFilter.java', 'com.akiban.sql.RegexFilenameFilter', 'accept', '.*\\.sql', 'rename-table-2.expected')",[18675]
"('RegexFilenameFilter.java', 'com.akiban.sql.RegexFilenameFilter', 'accept', '.*\\.sql', 'alter-table-drop-4.expected')",[6930]
"('RegexFilenameFilter.java', 'com.akiban.sql.RegexFilenameFilter', 'accept', '.*\\.sql', 'update-2.sql')",[4140]
"('Description.java', 'org.junit.runner.Description', 'parseMethod', '(.*)\\((.*)\\)', 'testParser[111](com.akiban.sql.parser.SQLParserTest)')",[27610]
"('RegexFilenameFilter.java', 'com.akiban.sql.RegexFilenameFilter', 'accept', '.*\\.sql', 'mysql-3.features')",[10080]
"('Description.java', 'org.junit.runner.Description', 'parseMethod', '(.*)\\((.*)\\)', 'testBeginTokenSome(com.akiban.sql.parser.StringCharStreamTest)')",[21987]
"('RegexFilenameFilter.java', 'com.akiban.sql.RegexFilenameFilter', 'accept', '.*\\.sql', 'create-schema-1.expected')",[4725]
"('RegexFilenameFilter.java', 'com.akiban.sql.RegexFilenameFilter', 'accept', '.*\\.sql', 'alter-group-add-2a.expected')",[3825]
"('Description.java', 'org.junit.runner.Description', 'parseMethod', '(.*)\\((.*)\\)', 'testParser[0](com.akiban.sql.parser.SQLParserTest)')",[22060]
"('Description.java', 'org.junit.runner.Description', 'getClassName', '(.*)\\((.*)\\)', 'testParser[43](com.akiban.sql.parser.SQLParserTest)')",[24235]
"('Description.java', 'org.junit.runner.Description', 'parseMethod', '(.*)\\((.*)\\)', 'testParser[92](com.akiban.sql.parser.SQLParserTest)')",[26660]
"('Description.java', 'org.junit.runner.Description', 'parseMethod', '(.*)\\((.*)\\)', 'testParser[118](com.akiban.sql.parser.SQLParserTest)')",[27960]
"('RegexFilenameFilter.java', 'com.akiban.sql.RegexFilenameFilter', 'accept', '.*\\.sql', 'alter-group-add-1b.expected')",[9000]
"('RegexFilenameFilter.java', 'com.akiban.sql.RegexFilenameFilter', 'accept', '.*\\.sql', 'mysql-4x.sql')",[8955]
"('RegexFilenameFilter.java', 'com.akiban.sql.RegexFilenameFilter', 'accept', '.*\\.sql', 'alter-table-rename-2.sql')",[1215]
"('Description.java', 'org.junit.runner.Description', 'parseMethod', '(.*)\\((.*)\\)', 'testParser[3](com.akiban.sql.parser.SQLParserTest)')",[22210]
"('RegexFilenameFilter.java', 'com.akiban.sql.RegexFilenameFilter', 'accept', '.*\\.sql', 'create-geo-index-3.sql')",[18360]
"('RegexFilenameFilter.java', 'com.akiban.sql.RegexFilenameFilter', 'accept', '.*\\.sql', 'alter-table-drop-6.expected')",[2250]
"('Description.java', 'org.junit.runner.Description', 'getClassName', '(.*)\\((.*)\\)', 'testParser[7](com.akiban.sql.parser.SQLParserTest)')",[22435]
"('RegexFilenameFilter.java', 'com.akiban.sql.RegexFilenameFilter', 'accept', '.*\\.sql', 'alter-table-drop-index-1.sql')",[1485]
"('RegexFilenameFilter.java', 'com.akiban.sql.RegexFilenameFilter', 'accept', '.*\\.sql', 'rename-table-1.sql')","[14625, 20250]"
"('RegexFilenameFilter.java', 'com.akiban.sql.RegexFilenameFilter', 'accept', '.*\\.sql', 'create-table-8.expected')",[9765]
"('RegexFilenameFilter.java', 'com.akiban.sql.RegexFilenameFilter', 'accept', '.*\\.sql', 'update-returning-1.sql')",[3600]
"('Description.java', 'org.junit.runner.Description', 'parseMethod', '(.*)\\((.*)\\)', 'testParser[69](com.akiban.sql.parser.SQLParserTest)')",[25510]
"('RegexFilenameFilter.java', 'com.akiban.sql.RegexFilenameFilter', 'accept', '.*\\.sql', 'select-9.expected')",[17550]
"('Description.java', 'org.junit.runner.Description', 'getClassName', '(.*)\\((.*)\\)', 'testParser[102](com.akiban.sql.parser.SQLParserTest)')",[27185]
"('Description.java', 'org.junit.runner.Description', 'parseMethod', '(.*)\\((.*)\\)', 'testParseMultiple[4](com.akiban.sql.unparser.ParseMultipleTest)')",[33674]
"('Description.java', 'org.junit.runner.Description', 'getClassName', '(.*)\\((.*)\\)', 'testParser[31](com.akiban.sql.parser.SQLParserTest)')",[23635]
"('RegexFilenameFilter.java', 'com.akiban.sql.RegexFilenameFilter', 'accept', '.*\\.sql', 'find-depth-3.expected')",[11925]
"('RegexFilenameFilter.java', 'com.akiban.sql.RegexFilenameFilter', 'accept', '.*\\.sql', 'select-limit-4.sql')",[12195]
"('Description.java', 'org.junit.runner.Description', 'parseMethod', '(.*)\\((.*)\\)', 'testUnparser[24](com.akiban.sql.unparser.NodeToStringTest)')",[31674]
"('Description.java', 'org.junit.runner.Description', 'getClassName', '(.*)\\((.*)\\)', 'testParser[37](com.akiban.sql.parser.SQLParserTest)')",[23935]
"('Description.java', 'org.junit.runner.Description', 'parseMethod', '(.*)\\((.*)\\)', 'testParser[134](com.akiban.sql.parser.SQLParserTest)')",[28760]
"('RegexFilenameFilter.java', 'com.akiban.sql.RegexFilenameFilter', 'accept', '.*\\.sql', 'rename-index-2.expected')",[1530]
"('RegexFilenameFilter.java', 'com.akiban.sql.RegexFilenameFilter', 'accept', '.*\\.sql', 'alter-server-disconnect-1.expected')",[1125]
"('RegexFilenameFilter.java', 'com.akiban.sql.RegexFilenameFilter', 'accept', '.*\\.sql', 'transactions-2.sql')",[20385]
"('Description.java', 'org.junit.runner.Description', 'parseMethod', '(.*)\\((.*)\\)', 'regularCase(com.akiban.sql.parser.RowCtorTest)')",[30257]
"('Description.java', 'org.junit.runner.Description', 'getClassName', '(.*)\\((.*)\\)', 'testParseMultiple[6](com.akiban.sql.unparser.ParseMultipleTest)')",[33799]
"('Description.java', 'org.junit.runner.Description', 'parseMethod', '(.*)\\((.*)\\)', 'testParser[122](com.akiban.sql.parser.SQLParserTest)')",[28160]
"('Description.java', 'org.junit.runner.Description', 'parseMethod', '(.*)\\((.*)\\)', 'testParser[102](com.akiban.sql.parser.SQLParserTest)')",[27160]
"('RegexFilenameFilter.java', 'com.akiban.sql.RegexFilenameFilter', 'accept', '.*\\.sql', 'create-procedure-2.sql')","[2205, 15615]"
"('Description.java', 'org.junit.runner.Description', 'parseMethod', '(.*)\\((.*)\\)', 'testParser[65](com.akiban.sql.parser.SQLParserTest)')",[25310]
"('RegexFilenameFilter.java', 'com.akiban.sql.RegexFilenameFilter', 'accept', '.*\\.sql', 'select-9.sql')",[15525]
"('Description.java', 'org.junit.runner.Description', 'parseMethod', '(.*)\\((.*)\\)', 'testUnparser[51](com.akiban.sql.unparser.NodeToStringTest)')",[33024]
"('RegexFilenameFilter.java', 'com.akiban.sql.RegexFilenameFilter', 'accept', '.*\\.sql', 'select-8.expected')","[17370, 21285]"
"('Description.java', 'org.junit.runner.Description', 'parseMethod', '(.*)\\((.*)\\)', 'testParser[17](com.akiban.sql.parser.SQLParserTest)')",[22910]
"('Description.java', 'org.junit.runner.Description', 'parseMethod', '(.*)\\((.*)\\)', 'testParser[97](com.akiban.sql.parser.SQLParserTest)')",[26910]
"('RegexFilenameFilter.java', 'com.akiban.sql.RegexFilenameFilter', 'accept', '.*\\.sql', 'copy-4.sql')",[9585]
"('RegexFilenameFilter.java', 'com.akiban.sql.RegexFilenameFilter', 'accept', '.*\\.sql', 'rename-2.expected')",[4410]
"('Description.java', 'org.junit.runner.Description', 'parseMethod', '(.*)\\((.*)\\)', 'testParser[161](com.akiban.sql.parser.SQLParserTest)')",[30110]
"('Description.java', 'org.junit.runner.Description', 'parseMethod', '(.*)\\((.*)\\)', 'testParser[93](com.akiban.sql.parser.SQLParserTest)')",[26710]
"('RegexFilenameFilter.java', 'com.akiban.sql.RegexFilenameFilter', 'accept', '.*\\.sql', 'mysql-2.sql')",[11430]
"('RegexFilenameFilter.java', 'com.akiban.sql.RegexFilenameFilter', 'accept', '.*\\.sql', 'create-table-add-index-3.sql')",[19350]
"('Description.java', 'org.junit.runner.Description', 'parseMethod', '(.*)\\((.*)\\)', 'testParser[107](com.akiban.sql.parser.SQLParserTest)')",[27410]
"('Description.java', 'org.junit.runner.Description', 'getClassName', '(.*)\\((.*)\\)', 'testParser[62](com.akiban.sql.parser.SQLParserTest)')",[25185]
"('RegexFilenameFilter.java', 'com.akiban.sql.RegexFilenameFilter', 'accept', '.*\\.sql', 'mysql-4.features')",[14535]
"('RegexFilenameFilter.java', 'com.akiban.sql.RegexFilenameFilter', 'accept', '.*\\.sql', 'fetch-3.sql')","[6075, 17010]"
"('RegexFilenameFilter.java', 'com.akiban.sql.RegexFilenameFilter', 'accept', '.*\\.sql', 'delete-2.expected')","[5670, 20520]"
"('RegexFilenameFilter.java', 'com.akiban.sql.RegexFilenameFilter', 'accept', '.*\\.sql', 'create-table-sequence-3.expected')",[4860]
"('Description.java', 'org.junit.runner.Description', 'parseMethod', '(.*)\\((.*)\\)', 'testUnparser[50](com.akiban.sql.unparser.NodeToStringTest)')",[32974]
"('Description.java', 'org.junit.runner.Description', 'parseMethod', '(.*)\\((.*)\\)', 'testParser[156](com.akiban.sql.parser.SQLParserTest)')",[29860]
"('RegexFilenameFilter.java', 'com.akiban.sql.RegexFilenameFilter', 'accept', '.*\\.sql', 'drop-group-1.sql')",[13500]
"('Description.java', 'org.junit.runner.Description', 'parseMethod', '(.*)\\((.*)\\)', 'testParser[32](com.akiban.sql.parser.SQLParserTest)')",[23660]
"('Description.java', 'org.junit.runner.Description', 'parseMethod', '(.*)\\((.*)\\)', 'testParser[153](com.akiban.sql.parser.SQLParserTest)')",[29710]
"('RegexFilenameFilter.java', 'com.akiban.sql.RegexFilenameFilter', 'accept', '.*\\.sql', 'create-table-2.sql')","[6435, 17100]"
"('Description.java', 'org.junit.runner.Description', 'getClassName', '(.*)\\((.*)\\)', 'testParser[22](com.akiban.sql.parser.SQLParserTest)')",[23185]
"('Description.java', 'org.junit.runner.Description', 'parseMethod', '(.*)\\((.*)\\)', 'testParser[30](com.akiban.sql.parser.SQLParserTest)')",[23560]
"('Description.java', 'org.junit.runner.Description', 'getClassName', '(.*)\\((.*)\\)', 'testParser[29](com.akiban.sql.parser.SQLParserTest)')",[23535]
"('Description.java', 'org.junit.runner.Description', 'parseMethod', '(.*)\\((.*)\\)', 'testParser[106](com.akiban.sql.parser.SQLParserTest)')",[27360]
"('RegexFilenameFilter.java', 'com.akiban.sql.RegexFilenameFilter', 'accept', '.*\\.sql', 'insert-1r.sql')",[16290]
"('RegexFilenameFilter.java', 'com.akiban.sql.RegexFilenameFilter', 'accept', '.*\\.sql', 'select-limit-1.sql')",[7470]
"('RegexFilenameFilter.java', 'com.akiban.sql.RegexFilenameFilter', 'accept', '.*\\.sql', 'alter-table-drop-1.expected')",[3060]
"('RegexFilenameFilter.java', 'com.akiban.sql.RegexFilenameFilter', 'accept', '.*\\.sql', 'select-2.sql')","[9495, 18315, 21510]"
"('RegexFilenameFilter.java', 'com.akiban.sql.RegexFilenameFilter', 'accept', '.*\\.sql', 'alter-server-set-1.sql')",[4500]
"('RegexFilenameFilter.java', 'com.akiban.sql.RegexFilenameFilter', 'accept', '.*\\.sql', 'mysql-1x.error')",[9990]
"('Description.java', 'org.junit.runner.Description', 'getClassName', '(.*)\\((.*)\\)', 'testUnparser[54](com.akiban.sql.unparser.NodeToStringTest)')",[33199]
"('RegexFilenameFilter.java', 'com.akiban.sql.RegexFilenameFilter', 'accept', '.*\\.sql', 'create-table-sequence-3.sql')",[3105]
"('RegexFilenameFilter.java', 'com.akiban.sql.RegexFilenameFilter', 'accept', '.*\\.sql', 'select-8.sql')","[19035, 21645]"
"('Description.java', 'org.junit.runner.Description', 'getClassName', '(.*)\\((.*)\\)', 'testParser[23](com.akiban.sql.parser.SQLParserTest)')",[23235]
"('Description.java', 'org.junit.runner.Description', 'getClassName', '(.*)\\((.*)\\)', 'testParser[40](com.akiban.sql.parser.SQLParserTest)')",[24085]
"('Description.java', 'org.junit.runner.Description', 'getClassName', '(.*)\\((.*)\\)', 'testParseMultiple[2](com.akiban.sql.unparser.ParseMultipleTest)')",[33599]
"('Description.java', 'org.junit.runner.Description', 'getClassName', '(.*)\\((.*)\\)', 'testParser[154](com.akiban.sql.parser.SQLParserTest)')",[29785]
"('Description.java', 'org.junit.runner.Description', 'parseMethod', '(.*)\\((.*)\\)', 'testParser[91](com.akiban.sql.parser.SQLParserTest)')",[26610]
"('Description.java', 'org.junit.runner.Description', 'parseMethod', '(.*)\\((.*)\\)', 'testUnparser[47](com.akiban.sql.unparser.NodeToStringTest)')",[32824]
"('Description.java', 'org.junit.runner.Description', 'parseMethod', '(.*)\\((.*)\\)', 'testParser[90](com.akiban.sql.parser.SQLParserTest)')",[26560]
"('Description.java', 'org.junit.runner.Description', 'parseMethod', '(.*)\\((.*)\\)', 'testUnparser[38](com.akiban.sql.unparser.NodeToStringTest)')",[32374]
"('Description.java', 'org.junit.runner.Description', 'parseMethod', '(.*)\\((.*)\\)', 'testParser[144](com.akiban.sql.parser.SQLParserTest)')",[29260]
"('RegexFilenameFilter.java', 'com.akiban.sql.RegexFilenameFilter', 'accept', '.*\\.sql', 'rename-table-1.expected')","[12960, 19305]"
"('Description.java', 'org.junit.runner.Description', 'getClassName', '(.*)\\((.*)\\)', 'testParser[47](com.akiban.sql.parser.SQLParserTest)')",[24435]
"('RegexFilenameFilter.java', 'com.akiban.sql.RegexFilenameFilter', 'accept', '.*\\.sql', 'create-geo-index-1.sql')","[3420, 15930]"
"('Description.java', 'org.junit.runner.Description', 'getClassName', '(.*)\\((.*)\\)', 'testParser[55](com.akiban.sql.parser.SQLParserTest)')",[24835]
"('Description.java', 'org.junit.runner.Description', 'getClassName', '(.*)\\((.*)\\)', 'testParser[92](com.akiban.sql.parser.SQLParserTest)')",[26685]
"('RegexFilenameFilter.java', 'com.akiban.sql.RegexFilenameFilter', 'accept', '.*\\.sql', 'create-table-add-geo-index-1.sql')",[13860]
"('Description.java', 'org.junit.runner.Description', 'parseMethod', '(.*)\\((.*)\\)', 'testParser[87](com.akiban.sql.parser.SQLParserTest)')",[26410]
"('Description.java', 'org.junit.runner.Description', 'parseMethod', '(.*)\\((.*)\\)', 'testParser[49](com.akiban.sql.parser.SQLParserTest)')",[24510]
"('RegexFilenameFilter.java', 'com.akiban.sql.RegexFilenameFilter', 'accept', '.*\\.sql', 'alter-table-add-column-6.expected')",[14670]
"('Description.java', 'org.junit.runner.Description', 'parseMethod', '(.*)\\((.*)\\)', 'testParser[53](com.akiban.sql.parser.SQLParserTest)')",[24710]
"('Description.java', 'org.junit.runner.Description', 'getClassName', '(.*)\\((.*)\\)', 'testUnparser[2](com.akiban.sql.unparser.NodeToStringTest)')",[30599]
"('Description.java', 'org.junit.runner.Description', 'parseMethod', '(.*)\\((.*)\\)', 'testUnparser[53](com.akiban.sql.unparser.NodeToStringTest)')",[33124]
"('Description.java', 'org.junit.runner.Description', 'getClassName', '(.*)\\((.*)\\)', 'testParser[104](com.akiban.sql.parser.SQLParserTest)')",[27285]
"('RegexFilenameFilter.java', 'com.akiban.sql.RegexFilenameFilter', 'accept', '.*\\.sql', 'select-13.sql')",[15120]
"('Description.java', 'org.junit.runner.Description', 'parseMethod', '(.*)\\((.*)\\)', 'testParser[126](com.akiban.sql.parser.SQLParserTest)')",[28360]
"('RegexFilenameFilter.java', 'com.akiban.sql.RegexFilenameFilter', 'accept', '.*\\.sql', 'create-table-3.sql')","[9090, 18135]"
"('RegexFilenameFilter.java', 'com.akiban.sql.RegexFilenameFilter', 'accept', '.*\\.sql', 'declare-2.expected')","[5490, 16695]"
"('RegexFilenameFilter.java', 'com.akiban.sql.RegexFilenameFilter', 'accept', '.*\\.sql', 'rename-index-1.sql')","[11835, 18900]"
"('Description.java', 'org.junit.runner.Description', 'getClassName', '(.*)\\((.*)\\)', 'testParser[63](com.akiban.sql.parser.SQLParserTest)')",[25235]
"('Description.java', 'org.junit.runner.Description', 'getClassName', '(.*)\\((.*)\\)', 'testParser[94](com.akiban.sql.parser.SQLParserTest)')",[26785]
"('RegexFilenameFilter.java', 'com.akiban.sql.RegexFilenameFilter', 'accept', '.*\\.sql', 'insert-1m.expected')",[12060]
"('RegexFilenameFilter.java', 'com.akiban.sql.RegexFilenameFilter', 'accept', '.*\\.sql', 'alter-server-interrupt-1.expected')",[3960]
"('Description.java', 'org.junit.runner.Description', 'getClassName', '(.*)\\((.*)\\)', 'testParser[157](com.akiban.sql.parser.SQLParserTest)')",[29935]
"('Description.java', 'org.junit.runner.Description', 'parseMethod', '(.*)\\((.*)\\)', 'testParser[135](com.akiban.sql.parser.SQLParserTest)')",[28810]
"('Description.java', 'org.junit.runner.Description', 'parseMethod', '(.*)\\((.*)\\)', 'testNormalizer[6](com.akiban.sql.compiler.BooleanNormalizerTest)')",[34174]
"('Description.java', 'org.junit.runner.Description', 'getClassName', '(.*)\\((.*)\\)', 'testUnparser[39](com.akiban.sql.unparser.NodeToStringTest)')",[32449]
"('RegexFilenameFilter.java', 'com.akiban.sql.RegexFilenameFilter', 'accept', '.*\\.sql', 'select-4.sql')","[4275, 16380, 21150]"
"('Description.java', 'org.junit.runner.Description', 'parseMethod', '(.*)\\((.*)\\)', 'testParser[94](com.akiban.sql.parser.SQLParserTest)')",[26760]
"('Description.java', 'org.junit.runner.Description', 'parseMethod', '(.*)\\((.*)\\)', 'testParser[101](com.akiban.sql.parser.SQLParserTest)')",[27110]
"('RegexFilenameFilter.java', 'com.akiban.sql.RegexFilenameFilter', 'accept', '.*\\.sql', 'multiple-2.expected')",[20835]
"('Description.java', 'org.junit.runner.Description', 'getClassName', '(.*)\\((.*)\\)', 'testParser[88](com.akiban.sql.parser.SQLParserTest)')",[26485]
"('Description.java', 'org.junit.runner.Description', 'getClassName', '(.*)\\((.*)\\)', 'testNormalizer[3](com.akiban.sql.compiler.BooleanNormalizerTest)')",[34049]
"('Description.java', 'org.junit.runner.Description', 'parseMethod', '(.*)\\((.*)\\)', 'testParser[16](com.akiban.sql.parser.SQLParserTest)')",[22860]
"('RegexFilenameFilter.java', 'com.akiban.sql.RegexFilenameFilter', 'accept', '.*\\.sql', 'select-sequence-2.sql')",[13635]
"('RegexFilenameFilter.java', 'com.akiban.sql.RegexFilenameFilter', 'accept', '.*\\.sql', 'mysql-1.expected')",[10980]
"('Description.java', 'org.junit.runner.Description', 'getClassName', '(.*)\\((.*)\\)', 'testParser[123](com.akiban.sql.parser.SQLParserTest)')",[28235]
"('Description.java', 'org.junit.runner.Description', 'getClassName', '(.*)\\((.*)\\)', 'testParseMultiple[1](com.akiban.sql.unparser.ParseMultipleTest)')",[33549]
"('RegexFilenameFilter.java', 'com.akiban.sql.RegexFilenameFilter', 'accept', '.*\\.sql', 'mysql-4.expected')",[9540]
"('Description.java', 'org.junit.runner.Description', 'getClassName', '(.*)\\((.*)\\)', 'testUnparser[12](com.akiban.sql.unparser.NodeToStringTest)')",[31099]
"('RegexFilenameFilter.java', 'com.akiban.sql.RegexFilenameFilter', 'accept', '.*\\.sql', 'select-mysql-1.expected')",[1845]
"('RegexFilenameFilter.java', 'com.akiban.sql.RegexFilenameFilter', 'accept', '.*\\.sql', 'select-2.expected')","[13545, 19710, 21735]"
"('Description.java', 'org.junit.runner.Description', 'parseMethod', '(.*)\\((.*)\\)', 'testParser[23](com.akiban.sql.parser.SQLParserTest)')",[23210]
"('Description.java', 'org.junit.runner.Description', 'parseMethod', '(.*)\\((.*)\\)', 'testParser[121](com.akiban.sql.parser.SQLParserTest)')",[28110]
"('RegexFilenameFilter.java', 'com.akiban.sql.RegexFilenameFilter', 'accept', '.*\\.sql', 'select-6g.expected')",[21915]
"('Description.java', 'org.junit.runner.Description', 'parseMethod', '(.*)\\((.*)\\)', 'testParser[77](com.akiban.sql.parser.SQLParserTest)')",[25910]
"('RegexFilenameFilter.java', 'com.akiban.sql.RegexFilenameFilter', 'accept', '.*\\.sql', 'execute-2.sql')","[5220, 16560]"
"('RegexFilenameFilter.java', 'com.akiban.sql.RegexFilenameFilter', 'accept', '.*\\.sql', 'select-limit-1.expected')",[14490]
"('Description.java', 'org.junit.runner.Description', 'parseMethod', '(.*)\\((.*)\\)', 'testParser[162](com.akiban.sql.parser.SQLParserTest)')",[30160]
"('Description.java', 'org.junit.runner.Description', 'getClassName', '(.*)\\((.*)\\)', 'testUnparser[4](com.akiban.sql.unparser.NodeToStringTest)')",[30699]
"('RegexFilenameFilter.java', 'com.akiban.sql.RegexFilenameFilter', 'accept', '.*\\.sql', 'select-sequence-2.expected')",[4185]
"('Description.java', 'org.junit.runner.Description', 'getClassName', '(.*)\\((.*)\\)', 'testParser[0](com.akiban.sql.parser.SQLParserTest)')",[22085]
"('Description.java', 'org.junit.runner.Description', 'getClassName', '(.*)\\((.*)\\)', 'testParser[5](com.akiban.sql.parser.SQLParserTest)')",[22335]
"('Description.java', 'org.junit.runner.Description', 'parseMethod', '(.*)\\((.*)\\)', 'testParseMultiple[5](com.akiban.sql.unparser.ParseMultipleTest)')",[33724]
"('RegexFilenameFilter.java', 'com.akiban.sql.RegexFilenameFilter', 'accept', '.*\\.sql', 'insert-3.expected')",[13185]
"('Description.java', 'org.junit.runner.Description', 'getClassName', '(.*)\\((.*)\\)', 'testParser[119](com.akiban.sql.parser.SQLParserTest)')",[28035]
"('Description.java', 'org.junit.runner.Description', 'getClassName', '(.*)\\((.*)\\)', 'com.akiban.sql.CompareWithoutHashesTest')","[34963, 35014, 35066, 35117]"
"('RegexFilenameFilter.java', 'com.akiban.sql.RegexFilenameFilter', 'accept', '.*\\.sql', 'create-table-add-index-3.expected')",[15705]
"('Description.java', 'org.junit.runner.Description', 'parseMethod', '(.*)\\((.*)\\)', 'testParser[100](com.akiban.sql.parser.SQLParserTest)')",[27060]
"('RegexFilenameFilter.java', 'com.akiban.sql.RegexFilenameFilter', 'accept', '.*\\.sql', 'create-table-4.expected')","[6840, 17460]"
"('RegexFilenameFilter.java', 'com.akiban.sql.RegexFilenameFilter', 'accept', '.*\\.sql', 'create-index-1.sql')","[13050, 19395]"
"('Description.java', 'org.junit.runner.Description', 'parseMethod', '(.*)\\((.*)\\)', 'testUnparser[40](com.akiban.sql.unparser.NodeToStringTest)')",[32474]
"('RegexFilenameFilter.java', 'com.akiban.sql.RegexFilenameFilter', 'accept', '.*\\.sql', 'create-schema-2.sql')",[3330]
"('RegexFilenameFilter.java', 'com.akiban.sql.RegexFilenameFilter', 'accept', '.*\\.sql', 'select-limit-2.expected')",[5445]
"('Description.java', 'org.junit.runner.Description', 'parseMethod', '(.*)\\((.*)\\)', 'testParser[9](com.akiban.sql.parser.SQLParserTest)')",[22510]
"('Description.java', 'org.junit.runner.Description', 'getClassName', '(.*)\\((.*)\\)', 'testUnparser[13](com.akiban.sql.unparser.NodeToStringTest)')",[31149]
"('Description.java', 'org.junit.runner.Description', 'getClassName', '(.*)\\((.*)\\)', 'testParser[125](com.akiban.sql.parser.SQLParserTest)')",[28335]
"('Description.java', 'org.junit.runner.Description', 'parseMethod', '(.*)\\((.*)\\)', 'testUnparser[42](com.akiban.sql.unparser.NodeToStringTest)')",[32574]
"('Description.java', 'org.junit.runner.Description', 'parseMethod', '(.*)\\((.*)\\)', 'testParser[79](com.akiban.sql.parser.SQLParserTest)')",[26010]
"('Description.java', 'org.junit.runner.Description', 'getClassName', '(.*)\\((.*)\\)', 'testUnparser[25](com.akiban.sql.unparser.NodeToStringTest)')",[31749]
"('RegexFilenameFilter.java', 'com.akiban.sql.RegexFilenameFilter', 'accept', '.*\\.sql', 'alter-server-shutdown-2.sql')",[13140]
"('Description.java', 'org.junit.runner.Description', 'parseMethod', '(.*)\\((.*)\\)', 'testParser[150](com.akiban.sql.parser.SQLParserTest)')",[29560]
"('Description.java', 'org.junit.runner.Description', 'getClassName', '(.*)\\((.*)\\)', 'testUnparser[44](com.akiban.sql.unparser.NodeToStringTest)')",[32699]
"('RegexFilenameFilter.java', 'com.akiban.sql.RegexFilenameFilter', 'accept', '.*\\.sql', 'alter-table-drop-5.sql')",[1935]
"('Description.java', 'org.junit.runner.Description', 'parseMethod', '(.*)\\((.*)\\)', 'testUnparser[45](com.akiban.sql.unparser.NodeToStringTest)')",[32724]
"('RegexFilenameFilter.java', 'com.akiban.sql.RegexFilenameFilter', 'accept', '.*\\.sql', 'create-view-2.expected')",[10485]
"('Description.java', 'org.junit.runner.Description', 'getClassName', '(.*)\\((.*)\\)', 'testUnparser[42](com.akiban.sql.unparser.NodeToStringTest)')",[32599]
"('RegexFilenameFilter.java', 'com.akiban.sql.RegexFilenameFilter', 'accept', '.*\\.sql', 'deallocate-1.sql')","[2385, 15660]"
"('Description.java', 'org.junit.runner.Description', 'parseMethod', '(.*)\\((.*)\\)', 'testParser[59](com.akiban.sql.parser.SQLParserTest)')",[25010]
"('Description.java', 'org.junit.runner.Description', 'getClassName', '(.*)\\((.*)\\)', 'testUnparser[7](com.akiban.sql.unparser.NodeToStringTest)')",[30849]
"('RegexFilenameFilter.java', 'com.akiban.sql.RegexFilenameFilter', 'accept', '.*\\.sql', 'multiple-1.sql')",[20700]
"('Description.java', 'org.junit.runner.Description', 'parseMethod', '(.*)\\((.*)\\)', 'testParser[73](com.akiban.sql.parser.SQLParserTest)')",[25710]
"('RegexFilenameFilter.java', 'com.akiban.sql.RegexFilenameFilter', 'accept', '.*\\.sql', 'alter-table-add-column-5.expected')",[10755]
"('Description.java', 'org.junit.runner.Description', 'parseMethod', '(.*)\\((.*)\\)', 'testUnparser[29](com.akiban.sql.unparser.NodeToStringTest)')",[31924]
"('Description.java', 'org.junit.runner.Description', 'getClassName', '(.*)\\((.*)\\)', 'testParser[93](com.akiban.sql.parser.SQLParserTest)')",[26735]
"('RegexFilenameFilter.java', 'com.akiban.sql.RegexFilenameFilter', 'accept', '.*\\.sql', 'insert-returning-1.expected')",[13590]
"('Description.java', 'org.junit.runner.Description', 'getClassName', '(.*)\\((.*)\\)', 'testParser[120](com.akiban.sql.parser.SQLParserTest)')",[28085]
"('Description.java', 'org.junit.runner.Description', 'parseMethod', '(.*)\\((.*)\\)', 'testParser[148](com.akiban.sql.parser.SQLParserTest)')",[29460]
"('Description.java', 'org.junit.runner.Description', 'parseMethod', '(.*)\\((.*)\\)', 'testBeginTokenAll(com.akiban.sql.parser.StringCharStreamTest)')",[21939]
"('RegexFilenameFilter.java', 'com.akiban.sql.RegexFilenameFilter', 'accept', '.*\\.sql', 'multiple-2.sql')",[20925]
"('Description.java', 'org.junit.runner.Description', 'getClassName', '(.*)\\((.*)\\)', 'testParser[128](com.akiban.sql.parser.SQLParserTest)')",[28485]
"('Description.java', 'org.junit.runner.Description', 'getClassName', '(.*)\\((.*)\\)', 'testParser[89](com.akiban.sql.parser.SQLParserTest)')",[26535]
"('Description.java', 'org.junit.runner.Description', 'parseMethod', '(.*)\\((.*)\\)', 'testParser[62](com.akiban.sql.parser.SQLParserTest)')",[25160]
"('RegexFilenameFilter.java', 'com.akiban.sql.RegexFilenameFilter', 'accept', '.*\\.sql', 'drop-schema-2.expected')",[7875]
"('Description.java', 'org.junit.runner.Description', 'parseMethod', '(.*)\\((.*)\\)', 'testNormalizer[7](com.akiban.sql.compiler.BooleanNormalizerTest)')",[34224]
"('Description.java', 'org.junit.runner.Description', 'parseMethod', '(.*)\\((.*)\\)', 'testUnparser[37](com.akiban.sql.unparser.NodeToStringTest)')",[32324]
"('RegexFilenameFilter.java', 'com.akiban.sql.RegexFilenameFilter', 'accept', '.*\\.sql', 'create-table-1.expected')","[2655, 15750]"
"('Description.java', 'org.junit.runner.Description', 'getClassName', '(.*)\\((.*)\\)', 'testParser[153](com.akiban.sql.parser.SQLParserTest)')",[29735]
"('RegexFilenameFilter.java', 'com.akiban.sql.RegexFilenameFilter', 'accept', '.*\\.sql', 'drop-procedure-1.sql')",[14040]
"('Description.java', 'org.junit.runner.Description', 'parseMethod', '(.*)\\((.*)\\)', 'testParser[26](com.akiban.sql.parser.SQLParserTest)')",[23360]
"('Description.java', 'org.junit.runner.Description', 'parseMethod', '(.*)\\((.*)\\)', 'testParser[80](com.akiban.sql.parser.SQLParserTest)')",[26060]
"('Description.java', 'org.junit.runner.Description', 'parseMethod', '(.*)\\((.*)\\)', 'testParser[158](com.akiban.sql.parser.SQLParserTest)')",[29960]
"('Description.java', 'org.junit.runner.Description', 'parseMethod', '(.*)\\((.*)\\)', 'testParser[123](com.akiban.sql.parser.SQLParserTest)')",[28210]
"('Description.java', 'org.junit.runner.Description', 'parseMethod', '(.*)\\((.*)\\)', 'testParser[41](com.akiban.sql.parser.SQLParserTest)')",[24110]
"('RegexFilenameFilter.java', 'com.akiban.sql.RegexFilenameFilter', 'accept', '.*\\.sql', 'alter-table-rename-3.sql')",[12870]
"('RegexFilenameFilter.java', 'com.akiban.sql.RegexFilenameFilter', 'accept', '.*\\.sql', 'create-schema-4.expected')",[9855]
"('Description.java', 'org.junit.runner.Description', 'parseMethod', '(.*)\\((.*)\\)', 'testUnparser[11](com.akiban.sql.unparser.NodeToStringTest)')",[31024]
"('RegexFilenameFilter.java', 'com.akiban.sql.RegexFilenameFilter', 'accept', '.*\\.sql', 'drop-table-2.expected')",[4770]
"('RegexFilenameFilter.java', 'com.akiban.sql.RegexFilenameFilter', 'accept', '.*\\.sql', 'mysql-4x.error')",[6120]
"('Description.java', 'org.junit.runner.Description', 'getClassName', '(.*)\\((.*)\\)', 'testUnparser[18](com.akiban.sql.unparser.NodeToStringTest)')",[31399]
"('Description.java', 'org.junit.runner.Description', 'parseMethod', '(.*)\\((.*)\\)', 'testUnparser[54](com.akiban.sql.unparser.NodeToStringTest)')",[33174]
"('Description.java', 'org.junit.runner.Description', 'getClassName', '(.*)\\((.*)\\)', 'testParser[24](com.akiban.sql.parser.SQLParserTest)')",[23285]
"('Description.java', 'org.junit.runner.Description', 'getClassName', '(.*)\\((.*)\\)', 'testUnparser[17](com.akiban.sql.unparser.NodeToStringTest)')",[31349]
"('Description.java', 'org.junit.runner.Description', 'parseMethod', '(.*)\\((.*)\\)', 'testNormalizer[4](com.akiban.sql.compiler.BooleanNormalizerTest)')",[34074]
"('Description.java', 'org.junit.runner.Description', 'parseMethod', '(.*)\\((.*)\\)', 'testParser[40](com.akiban.sql.parser.SQLParserTest)')",[24060]
"('RegexFilenameFilter.java', 'com.akiban.sql.RegexFilenameFilter', 'accept', '.*\\.sql', 'close-1.sql')","[5535, 16740]"
"('Description.java', 'org.junit.runner.Description', 'parseMethod', '(.*)\\((.*)\\)', 'testUnparser[12](com.akiban.sql.unparser.NodeToStringTest)')",[31074]
"('Description.java', 'org.junit.runner.Description', 'parseMethod', '(.*)\\((.*)\\)', 'testParser[64](com.akiban.sql.parser.SQLParserTest)')",[25260]
"('Description.java', 'org.junit.runner.Description', 'getClassName', '(.*)\\((.*)\\)', 'testParser[50](com.akiban.sql.parser.SQLParserTest)')",[24585]
"('Description.java', 'org.junit.runner.Description', 'getClassName', '(.*)\\((.*)\\)', 'testUnparser[22](com.akiban.sql.unparser.NodeToStringTest)')",[31599]
"('RegexFilenameFilter.java', 'com.akiban.sql.RegexFilenameFilter', 'accept', '.*\\.sql', 'alter-server-shutdown-1.expected')",[12330]
"('Description.java', 'org.junit.runner.Description', 'getClassName', '(.*)\\((.*)\\)', 'testUnparser[9](com.akiban.sql.unparser.NodeToStringTest)')",[30949]
"('RegexFilenameFilter.java', 'com.akiban.sql.RegexFilenameFilter', 'accept', '.*\\.sql', 'declare-2.sql')","[11205, 18630]"
"('Description.java', 'org.junit.runner.Description', 'getClassName', '(.*)\\((.*)\\)', 'testParser[65](com.akiban.sql.parser.SQLParserTest)')",[25335]
"('Description.java', 'org.junit.runner.Description', 'getClassName', '(.*)\\((.*)\\)', 'testParser[75](com.akiban.sql.parser.SQLParserTest)')",[25835]
"('Description.java', 'org.junit.runner.Description', 'getClassName', '(.*)\\((.*)\\)', 'testParser[1](com.akiban.sql.parser.SQLParserTest)')",[22135]
"('Description.java', 'org.junit.runner.Description', 'parseMethod', '(.*)\\((.*)\\)', 'testUnparser[39](com.akiban.sql.unparser.NodeToStringTest)')",[32424]
"('RegexFilenameFilter.java', 'com.akiban.sql.RegexFilenameFilter', 'accept', '.*\\.sql', 'create-table-7.sql')",[1395]
"('RegexFilenameFilter.java', 'com.akiban.sql.RegexFilenameFilter', 'accept', '.*\\.sql', 'alter-table-add-index-1.sql')",[11385]
"('Description.java', 'org.junit.runner.Description', 'parseMethod', '(.*)\\((.*)\\)', 'testParser[147](com.akiban.sql.parser.SQLParserTest)')",[29410]
"('Description.java', 'org.junit.runner.Description', 'parseMethod', '(.*)\\((.*)\\)', 'testParser[81](com.akiban.sql.parser.SQLParserTest)')",[26110]
"('Description.java', 'org.junit.runner.Description', 'getClassName', '(.*)\\((.*)\\)', 'testUnparser[27](com.akiban.sql.unparser.NodeToStringTest)')",[31849]
"('Description.java', 'org.junit.runner.Description', 'getClassName', '(.*)\\((.*)\\)', 'testParser[57](com.akiban.sql.parser.SQLParserTest)')",[24935]
"('Description.java', 'org.junit.runner.Description', 'getClassName', '(.*)\\((.*)\\)', 'testParser[158](com.akiban.sql.parser.SQLParserTest)')",[29985]
"('Description.java', 'org.junit.runner.Description', 'getClassName', '(.*)\\((.*)\\)', 'testParser[100](com.akiban.sql.parser.SQLParserTest)')",[27085]
"('RegexFilenameFilter.java', 'com.akiban.sql.RegexFilenameFilter', 'accept', '.*\\.sql', 'mysql-2.expected')",[4815]
"('RegexFilenameFilter.java', 'com.akiban.sql.RegexFilenameFilter', 'accept', '.*\\.sql', 'find-depth-3.sql')",[12645]
"('RegexFilenameFilter.java', 'com.akiban.sql.RegexFilenameFilter', 'accept', '.*\\.sql', 'delete-1.expected')","[14760, 20295]"
"('Description.java', 'org.junit.runner.Description', 'getClassName', '(.*)\\((.*)\\)', 'testParser[12](com.akiban.sql.parser.SQLParserTest)')",[22685]
"('Description.java', 'org.junit.runner.Description', 'getClassName', '(.*)\\((.*)\\)', 'testParser[97](com.akiban.sql.parser.SQLParserTest)')",[26935]
"('Description.java', 'org.junit.runner.Description', 'parseMethod', '(.*)\\((.*)\\)', 'testParser[11](com.akiban.sql.parser.SQLParserTest)')",[22610]
"('RegexFilenameFilter.java', 'com.akiban.sql.RegexFilenameFilter', 'accept', '.*\\.sql', 'select-0.sql')",[15300]
"('Description.java', 'org.junit.runner.Description', 'parseMethod', '(.*)\\((.*)\\)', 'testUnparser[25](com.akiban.sql.unparser.NodeToStringTest)')",[31724]
"('RegexFilenameFilter.java', 'com.akiban.sql.RegexFilenameFilter', 'accept', '.*\\.sql', 'create-schema-4.sql')",[7920]
"('Description.java', 'org.junit.runner.Description', 'parseMethod', '(.*)\\((.*)\\)', 'testParser[38](com.akiban.sql.parser.SQLParserTest)')",[23960]
"('Description.java', 'org.junit.runner.Description', 'parseMethod', '(.*)\\((.*)\\)', 'testParser[35](com.akiban.sql.parser.SQLParserTest)')",[23810]
"('RegexFilenameFilter.java', 'com.akiban.sql.RegexFilenameFilter', 'accept', '.*\\.sql', 'create-table-3u.expected')",[18990]
"('RegexFilenameFilter.java', 'com.akiban.sql.RegexFilenameFilter', 'accept', '.*\\.sql', 'alter-group-add-1a.expected')",[8730]
"('Description.java', 'org.junit.runner.Description', 'parseMethod', '(.*)\\((.*)\\)', 'testParser[20](com.akiban.sql.parser.SQLParserTest)')",[23060]
"('Description.java', 'org.junit.runner.Description', 'getClassName', '(.*)\\((.*)\\)', 'testUnparser[49](com.akiban.sql.unparser.NodeToStringTest)')",[32949]
"('RegexFilenameFilter.java', 'com.akiban.sql.RegexFilenameFilter', 'accept', '.*\\.sql', 'copy-2.sql')",[585]
"('RegexFilenameFilter.java', 'com.akiban.sql.RegexFilenameFilter', 'accept', '.*\\.sql', 'alter-table-rename-3.expected')",[14580]
"('RegexFilenameFilter.java', 'com.akiban.sql.RegexFilenameFilter', 'accept', '.*\\.sql', 'drop-schema-error.error')",[11070]
"('RegexFilenameFilter.java', 'com.akiban.sql.RegexFilenameFilter', 'accept', '.*\\.sql', 'create-sequence-2.sql')",[10935]
"('Description.java', 'org.junit.runner.Description', 'parseMethod', '(.*)\\((.*)\\)', 'testBackup(com.akiban.sql.parser.StringCharStreamTest)')",[22035]
"('Description.java', 'org.junit.runner.Description', 'parseMethod', '(.*)\\((.*)\\)', 'testParser[130](com.akiban.sql.parser.SQLParserTest)')",[28560]
"('RegexFilenameFilter.java', 'com.akiban.sql.RegexFilenameFilter', 'accept', '.*\\.sql', 'explain-2.expected')",[18720]
"('Description.java', 'org.junit.runner.Description', 'getClassName', '(.*)\\((.*)\\)', 'testParser[111](com.akiban.sql.parser.SQLParserTest)')",[27635]
"('Description.java', 'org.junit.runner.Description', 'parseMethod', '(.*)\\((.*)\\)', 'testParser[88](com.akiban.sql.parser.SQLParserTest)')",[26460]
"('Description.java', 'org.junit.runner.Description', 'parseMethod', '(.*)\\((.*)\\)', 'testParser[45](com.akiban.sql.parser.SQLParserTest)')",[24310]
"('Description.java', 'org.junit.runner.Description', 'getClassName', '(.*)\\((.*)\\)', 'testParser[140](com.akiban.sql.parser.SQLParserTest)')",[29085]
"('Description.java', 'org.junit.runner.Description', 'getClassName', '(.*)\\((.*)\\)', 'testParser[130](com.akiban.sql.parser.SQLParserTest)')",[28585]
"('Description.java', 'org.junit.runner.Description', 'parseMethod', '(.*)\\((.*)\\)', 'testUnparser[55](com.akiban.sql.unparser.NodeToStringTest)')",[33224]
"('Description.java', 'org.junit.runner.Description', 'getClassName', '(.*)\\((.*)\\)', 'testNormalizer[1](com.akiban.sql.compiler.BooleanNormalizerTest)')",[33949]
"('RegexFilenameFilter.java', 'com.akiban.sql.RegexFilenameFilter', 'accept', '.*\\.sql', 'insert-1.sql')","[5625, 16830]"
"('Description.java', 'org.junit.runner.Description', 'parseMethod', '(.*)\\((.*)\\)', 'testUnparser[46](com.akiban.sql.unparser.NodeToStringTest)')",[32774]
"('RegexFilenameFilter.java', 'com.akiban.sql.RegexFilenameFilter', 'accept', '.*\\.sql', 'alter-table-drop-3.sql')",[14175]
"('Description.java', 'org.junit.runner.Description', 'parseMethod', '(.*)\\((.*)\\)', 'testUnparser[15](com.akiban.sql.unparser.NodeToStringTest)')",[31224]
"('Description.java', 'org.junit.runner.Description', 'getClassName', '(.*)\\((.*)\\)', 'testParser[114](com.akiban.sql.parser.SQLParserTest)')",[27785]
"('Description.java', 'org.junit.runner.Description', 'parseMethod', '(.*)\\((.*)\\)', 'testUnparser[58](com.akiban.sql.unparser.NodeToStringTest)')",[33374]
"('RegexFilenameFilter.java', 'com.akiban.sql.RegexFilenameFilter', 'accept', '.*\\.sql', 'copy-1.expected')",[2745]
"('Description.java', 'org.junit.runner.Description', 'getClassName', '(.*)\\((.*)\\)', 'testParser[69](com.akiban.sql.parser.SQLParserTest)')",[25535]
"('Description.java', 'org.junit.runner.Description', 'getClassName', '(.*)\\((.*)\\)', 'com.akiban.sql.parser.StringCharStreamTest')","[34401, 34452, 34504, 34555]"
"('Description.java', 'org.junit.runner.Description', 'parseMethod', '(.*)\\((.*)\\)', 'testParser[43](com.akiban.sql.parser.SQLParserTest)')",[24210]
"('Description.java', 'org.junit.runner.Description', 'getClassName', '(.*)\\((.*)\\)', 'testParser[118](com.akiban.sql.parser.SQLParserTest)')",[27985]
"('Description.java', 'org.junit.runner.Description', 'parseMethod', '(.*)\\((.*)\\)', 'testParser[48](com.akiban.sql.parser.SQLParserTest)')",[24460]
"('Description.java', 'org.junit.runner.Description', 'getClassName', '(.*)\\((.*)\\)', 'testUnparser[58](com.akiban.sql.unparser.NodeToStringTest)')",[33399]
"('RegexFilenameFilter.java', 'com.akiban.sql.RegexFilenameFilter', 'accept', '.*\\.sql', 'copy-5.sql')","[8370, 18000]"
"('Description.java', 'org.junit.runner.Description', 'getClassName', '(.*)\\((.*)\\)', 'testParser[162](com.akiban.sql.parser.SQLParserTest)')","[30185, 34642, 34729]"
"('Description.java', 'org.junit.runner.Description', 'parseMethod', '(.*)\\((.*)\\)', 'testParser[61](com.akiban.sql.parser.SQLParserTest)')",[25110]
"('RegexFilenameFilter.java', 'com.akiban.sql.RegexFilenameFilter', 'accept', '.*\\.sql', 'copy-3.expected')","[270, 14940]"
"('RegexFilenameFilter.java', 'com.akiban.sql.RegexFilenameFilter', 'accept', '.*\\.sql', 'create-index-3.expected')",[10890]
"('Description.java', 'org.junit.runner.Description', 'getClassName', '(.*)\\((.*)\\)', 'testParser[53](com.akiban.sql.parser.SQLParserTest)')",[24735]
"('RegexFilenameFilter.java', 'com.akiban.sql.RegexFilenameFilter', 'accept', '.*\\.sql', 'create-schema-3.expected')",[7155]
"('RegexFilenameFilter.java', 'com.akiban.sql.RegexFilenameFilter', 'accept', '.*\\.sql', 'deallocate-1.expected')","[12690, 19215]"
"('RegexFilenameFilter.java', 'com.akiban.sql.RegexFilenameFilter', 'accept', '.*\\.sql', 'drop-index-1.sql')",[10215]
"('Description.java', 'org.junit.runner.Description', 'getClassName', '(.*)\\((.*)\\)', 'testParseMultiple[4](com.akiban.sql.unparser.ParseMultipleTest)')",[33699]
"('Description.java', 'org.junit.runner.Description', 'parseMethod', '(.*)\\((.*)\\)', 'testParser[137](com.akiban.sql.parser.SQLParserTest)')",[28910]
"('RegexFilenameFilter.java', 'com.akiban.sql.RegexFilenameFilter', 'accept', '.*\\.sql', 'insert-2c.sql')",[8235]
"('Description.java', 'org.junit.runner.Description', 'parseMethod', '(.*)\\((.*)\\)', 'testParser[132](com.akiban.sql.parser.SQLParserTest)')",[28660]
"('RegexFilenameFilter.java', 'com.akiban.sql.RegexFilenameFilter', 'accept', '.*\\.sql', 'alter-server-disconnect-1.sql')",[7110]
"('RegexFilenameFilter.java', 'com.akiban.sql.RegexFilenameFilter', 'accept', '.*\\.sql', 'select-6.sql')","[8145, 17910, 21375]"
"('RegexFilenameFilter.java', 'com.akiban.sql.RegexFilenameFilter', 'accept', '.*\\.sql', 'select-order-by-1.sql')",[8100]
"('Description.java', 'org.junit.runner.Description', 'getClassName', '(.*)\\((.*)\\)', 'testParser[134](com.akiban.sql.parser.SQLParserTest)')",[28785]
"('Description.java', 'org.junit.runner.Description', 'getClassName', '(.*)\\((.*)\\)', 'testParser[11](com.akiban.sql.parser.SQLParserTest)')",[22635]
"('RegexFilenameFilter.java', 'com.akiban.sql.RegexFilenameFilter', 'accept', '.*\\.sql', 'create-schema-error.sql')",[5085]
"('RegexFilenameFilter.java', 'com.akiban.sql.RegexFilenameFilter', 'accept', '.*\\.sql', 'alter-table-add-column-7.sql')",[11160]
"('RegexFilenameFilter.java', 'com.akiban.sql.RegexFilenameFilter', 'accept', '.*\\.sql', 'find-depth-2.sql')",[12240]
"('RegexFilenameFilter.java', 'com.akiban.sql.RegexFilenameFilter', 'accept', '.*\\.sql', 'close-1.expected')","[10035, 18450]"
"('Description.java', 'org.junit.runner.Description', 'getClassName', '(.*)\\((.*)\\)', 'testParser[49](com.akiban.sql.parser.SQLParserTest)')",[24535]
"('RegexFilenameFilter.java', 'com.akiban.sql.RegexFilenameFilter', 'accept', '.*\\.sql', 'alter-table-constraint-3.sql')",[8775]
"('RegexFilenameFilter.java', 'com.akiban.sql.RegexFilenameFilter', 'accept', '.*\\.sql', 'alter-table-rename-2.expected')",[10620]
"('RegexFilenameFilter.java', 'com.akiban.sql.RegexFilenameFilter', 'accept', '.*\\.sql', 'insert-3.sql')",[9225]
"('Description.java', 'org.junit.runner.Description', 'parseMethod', '(.*)\\((.*)\\)', 'testUnparser[7](com.akiban.sql.unparser.NodeToStringTest)')",[30824]
"('Description.java', 'org.junit.runner.Description', 'getClassName', '(.*)\\((.*)\\)', 'testParser[10](com.akiban.sql.parser.SQLParserTest)')",[22585]
"('Description.java', 'org.junit.runner.Description', 'parseMethod', '(.*)\\((.*)\\)', 'testParser[28](com.akiban.sql.parser.SQLParserTest)')",[23460]
"('Description.java', 'org.junit.runner.Description', 'getClassName', '(.*)\\((.*)\\)', 'testParser[44](com.akiban.sql.parser.SQLParserTest)')",[24285]
"('Description.java', 'org.junit.runner.Description', 'parseMethod', '(.*)\\((.*)\\)', 'testUnparser[20](com.akiban.sql.unparser.NodeToStringTest)')",[31474]
"('RegexFilenameFilter.java', 'com.akiban.sql.RegexFilenameFilter', 'accept', '.*\\.sql', 'execute-1.expected')","[8325, 17955]"
"('Description.java', 'org.junit.runner.Description', 'parseMethod', '(.*)\\((.*)\\)', 'testParser[85](com.akiban.sql.parser.SQLParserTest)')",[26310]
"('Description.java', 'org.junit.runner.Description', 'getClassName', '(.*)\\((.*)\\)', 'testParser[6](com.akiban.sql.parser.SQLParserTest)')",[22385]
"('Description.java', 'org.junit.runner.Description', 'parseMethod', '(.*)\\((.*)\\)', 'testParser[154](com.akiban.sql.parser.SQLParserTest)')",[29760]
"('Description.java', 'org.junit.runner.Description', 'getClassName', '(.*)\\((.*)\\)', 'testUnparser[41](com.akiban.sql.unparser.NodeToStringTest)')",[32549]
"('RegexFilenameFilter.java', 'com.akiban.sql.RegexFilenameFilter', 'accept', '.*\\.sql', 'create-index-1g.sql')",[18855]
"('Description.java', 'org.junit.runner.Description', 'parseMethod', '(.*)\\((.*)\\)', 'testUnparser[28](com.akiban.sql.unparser.NodeToStringTest)')",[31874]
"('RegexFilenameFilter.java', 'com.akiban.sql.RegexFilenameFilter', 'accept', '.*\\.sql', 'transactions-1.expected')",[20565]
"('Description.java', 'org.junit.runner.Description', 'parseMethod', '(.*)\\((.*)\\)', 'testParseMultiple[7](com.akiban.sql.unparser.ParseMultipleTest)')",[33824]
"('Description.java', 'org.junit.runner.Description', 'getClassName', '(.*)\\((.*)\\)', 'testNormalizer[6](com.akiban.sql.compiler.BooleanNormalizerTest)')",[34199]
"('Description.java', 'org.junit.runner.Description', 'getClassName', '(.*)\\((.*)\\)', 'testParser[136](com.akiban.sql.parser.SQLParserTest)')",[28885]
"('Description.java', 'org.junit.runner.Description', 'getClassName', '(.*)\\((.*)\\)', 'testParser[26](com.akiban.sql.parser.SQLParserTest)')",[23385]
"('RegexFilenameFilter.java', 'com.akiban.sql.RegexFilenameFilter', 'accept', '.*\\.sql', 'create-table-serial.expected')",[12420]
"('Description.java', 'org.junit.runner.Description', 'getClassName', '(.*)\\((.*)\\)', 'testBeginTokenAll(com.akiban.sql.parser.StringCharStreamTest)')",[21963]
"('Description.java', 'org.junit.runner.Description', 'parseMethod', '(.*)\\((.*)\\)', 'testParser[120](com.akiban.sql.parser.SQLParserTest)')",[28060]
"('Description.java', 'org.junit.runner.Description', 'getClassName', '(.*)\\((.*)\\)', 'testParser[155](com.akiban.sql.parser.SQLParserTest)')",[29835]
"('RegexFilenameFilter.java', 'com.akiban.sql.RegexFilenameFilter', 'accept', '.*\\.sql', 'alter-table-add-column-5.sql')",[3150]
"('Description.java', 'org.junit.runner.Description', 'parseMethod', '(.*)\\((.*)\\)', 'testParseMultiple[2](com.akiban.sql.unparser.ParseMultipleTest)')",[33574]
"('Description.java', 'org.junit.runner.Description', 'parseMethod', '(.*)\\((.*)\\)', 'testParser[128](com.akiban.sql.parser.SQLParserTest)')",[28460]
"('Description.java', 'org.junit.runner.Description', 'getClassName', '(.*)\\((.*)\\)', 'testParser[36](com.akiban.sql.parser.SQLParserTest)')",[23885]
"('Description.java', 'org.junit.runner.Description', 'getClassName', '(.*)\\((.*)\\)', 'testParseMultiple[3](com.akiban.sql.unparser.ParseMultipleTest)')",[33649]
"('RegexFilenameFilter.java', 'com.akiban.sql.RegexFilenameFilter', 'accept', '.*\\.sql', 'insert-returning-2.sql')",[14130]
"('RegexFilenameFilter.java', 'com.akiban.sql.RegexFilenameFilter', 'accept', '.*\\.sql', 'alter-table-rename-4.expected')",[1890]
"('RegexFilenameFilter.java', 'com.akiban.sql.RegexFilenameFilter', 'accept', '.*\\.sql', 'multiple-3.expected')",[20745]
"('Description.java', 'org.junit.runner.Description', 'parseMethod', '(.*)\\((.*)\\)', 'testParser[129](com.akiban.sql.parser.SQLParserTest)')",[28510]
"('Description.java', 'org.junit.runner.Description', 'getClassName', '(.*)\\((.*)\\)', 'testParser[148](com.akiban.sql.parser.SQLParserTest)')",[29485]
"('Description.java', 'org.junit.runner.Description', 'parseMethod', '(.*)\\((.*)\\)', 'testParser[24](com.akiban.sql.parser.SQLParserTest)')",[23260]
"('Description.java', 'org.junit.runner.Description', 'getClassName', '(.*)\\((.*)\\)', 'testUnparser[14](com.akiban.sql.unparser.NodeToStringTest)')",[31199]
"('Description.java', 'org.junit.runner.Description', 'getClassName', '(.*)\\((.*)\\)', 'testParser[144](com.akiban.sql.parser.SQLParserTest)')",[29285]
"('RegexFilenameFilter.java', 'com.akiban.sql.RegexFilenameFilter', 'accept', '.*\\.sql', 'parameters-1.expected')",[20475]
"('Description.java', 'org.junit.runner.Description', 'getClassName', '(.*)\\((.*)\\)', 'testParser[41](com.akiban.sql.parser.SQLParserTest)')",[24135]
"('Description.java', 'org.junit.runner.Description', 'parseMethod', '(.*)\\((.*)\\)', 'testUnparser[33](com.akiban.sql.unparser.NodeToStringTest)')",[32124]
"('Description.java', 'org.junit.runner.Description', 'getClassName', '(.*)\\((.*)\\)', 'testUnparser[11](com.akiban.sql.unparser.NodeToStringTest)')",[31049]
"('RegexFilenameFilter.java', 'com.akiban.sql.RegexFilenameFilter', 'accept', '.*\\.sql', 'drop-index-2.expected')",[14715]
"('RegexFilenameFilter.java', 'com.akiban.sql.RegexFilenameFilter', 'accept', '.*\\.sql', 'alter-server-shutdown-1.sql')",[6885]
"('Description.java', 'org.junit.runner.Description', 'getClassName', '(.*)\\((.*)\\)', 'testParser[129](com.akiban.sql.parser.SQLParserTest)')",[28535]
"('Description.java', 'org.junit.runner.Description', 'getClassName', '(.*)\\((.*)\\)', 'testUnparser[30](com.akiban.sql.unparser.NodeToStringTest)')",[31999]
"('Description.java', 'org.junit.runner.Description', 'getClassName', '(.*)\\((.*)\\)', 'testParser[84](com.akiban.sql.parser.SQLParserTest)')",[26285]
"('Description.java', 'org.junit.runner.Description', 'getClassName', '(.*)\\((.*)\\)', 'testUnparser[32](com.akiban.sql.unparser.NodeToStringTest)')",[32099]
"('Description.java', 'org.junit.runner.Description', 'getClassName', '(.*)\\((.*)\\)', 'testParser[83](com.akiban.sql.parser.SQLParserTest)')",[26235]
"('Description.java', 'org.junit.runner.Description', 'parseMethod', '(.*)\\((.*)\\)', 'testParser[75](com.akiban.sql.parser.SQLParserTest)')",[25810]
"('Description.java', 'org.junit.runner.Description', 'parseMethod', '(.*)\\((.*)\\)', 'testUnparser[19](com.akiban.sql.unparser.NodeToStringTest)')",[31424]
"('RegexFilenameFilter.java', 'com.akiban.sql.RegexFilenameFilter', 'accept', '.*\\.sql', 'delete-1.sql')","[7740, 17775]"
"('Description.java', 'org.junit.runner.Description', 'parseMethod', '(.*)\\((.*)\\)', 'testParser[13](com.akiban.sql.parser.SQLParserTest)')",[22710]
"('RegexFilenameFilter.java', 'com.akiban.sql.RegexFilenameFilter', 'accept', '.*\\.sql', 'alter-table-add-column-2.expected')",[11295]
"('RegexFilenameFilter.java', 'com.akiban.sql.RegexFilenameFilter', 'accept', '.*\\.sql', 'mysql-3.expected')",[8010]
"('RegexFilenameFilter.java', 'com.akiban.sql.RegexFilenameFilter', 'accept', '.*\\.sql', 'drop-table-2.sql')",[3015]
"('RegexFilenameFilter.java', 'com.akiban.sql.RegexFilenameFilter', 'accept', '.*\\.sql', 'select-mysql-3.expected')",[2295]
"('RegexFilenameFilter.java', 'com.akiban.sql.RegexFilenameFilter', 'accept', '.*\\.sql', 'drop-group-1.expected')",[11610]
"('RegexFilenameFilter.java', 'com.akiban.sql.RegexFilenameFilter', 'accept', '.*\\.sql', 'alter-table-add-index-1.expected')",[14445]
"('Description.java', 'org.junit.runner.Description', 'getClassName', '(.*)\\((.*)\\)', 'testParser[132](com.akiban.sql.parser.SQLParserTest)')",[28685]
"('RegexFilenameFilter.java', 'com.akiban.sql.RegexFilenameFilter', 'accept', '.*\\.sql', 'create-geo-index-1.expected')","[1305, 15345]"
"('RegexFilenameFilter.java', 'com.akiban.sql.RegexFilenameFilter', 'accept', '.*\\.sql', 'select-6i.sql')",[21060]
"('RegexFilenameFilter.java', 'com.akiban.sql.RegexFilenameFilter', 'accept', '.*\\.sql', 'mysql-3.sql')",[13725]
"('RegexFilenameFilter.java', 'com.akiban.sql.RegexFilenameFilter', 'accept', '.*\\.sql', 'create-table-7.expected')",[2925]
"('RegexFilenameFilter.java', 'com.akiban.sql.RegexFilenameFilter', 'accept', '.*\\.sql', 'alter-table-rename-1.expected')",[1800]
"('RegexFilenameFilter.java', 'com.akiban.sql.RegexFilenameFilter', 'accept', '.*\\.sql', 'copy-3.sql')","[4320, 16425]"
"('Description.java', 'org.junit.runner.Description', 'getClassName', '(.*)\\((.*)\\)', 'testParser[13](com.akiban.sql.parser.SQLParserTest)')",[22735]
"('Description.java', 'org.junit.runner.Description', 'parseMethod', '(.*)\\((.*)\\)', 'testParser[138](com.akiban.sql.parser.SQLParserTest)')",[28960]
"('RegexFilenameFilter.java', 'com.akiban.sql.RegexFilenameFilter', 'accept', '.*\\.sql', 'drop-index-3.expected')",[10845]
"('RegexFilenameFilter.java', 'com.akiban.sql.RegexFilenameFilter', 'accept', '.*\\.sql', 'insert-returning-4.expected')",[11790]
"('Description.java', 'org.junit.runner.Description', 'getClassName', '(.*)\\((.*)\\)', 'testParser[35](com.akiban.sql.parser.SQLParserTest)')",[23835]
"('RegexFilenameFilter.java', 'com.akiban.sql.RegexFilenameFilter', 'accept', '.*\\.sql', 'alter-server-kill-1.sql')",[12285]
"('RegexFilenameFilter.java', 'com.akiban.sql.RegexFilenameFilter', 'accept', '.*\\.sql', 'drop-schema-1.sql')",[10350]
"('RegexFilenameFilter.java', 'com.akiban.sql.RegexFilenameFilter', 'accept', '.*\\.sql', 'create-geo-index-3.expected')",[19890]
"('RegexFilenameFilter.java', 'com.akiban.sql.RegexFilenameFilter', 'accept', '.*\\.sql', 'alter-server-shutdown-2.expected')",[11745]
"('RegexFilenameFilter.java', 'com.akiban.sql.RegexFilenameFilter', 'accept', '.*\\.sql', 'prepare-1.expected')","[13275, 19575]"
"('Description.java', 'org.junit.runner.Description', 'getClassName', '(.*)\\((.*)\\)', 'testParser[101](com.akiban.sql.parser.SQLParserTest)')",[27135]
"('Description.java', 'org.junit.runner.Description', 'parseMethod', '(.*)\\((.*)\\)', 'testParser[57](com.akiban.sql.parser.SQLParserTest)')",[24910]
"('Description.java', 'org.junit.runner.Description', 'parseMethod', '(.*)\\((.*)\\)', 'testParser[143](com.akiban.sql.parser.SQLParserTest)')",[29210]
"('Description.java', 'org.junit.runner.Description', 'parseMethod', '(.*)\\((.*)\\)', 'testParser[131](com.akiban.sql.parser.SQLParserTest)')",[28610]
"('Description.java', 'org.junit.runner.Description', 'parseMethod', '(.*)\\((.*)\\)', 'nestedRows(com.akiban.sql.parser.RowCtorTest)')",[30281]
"('Description.java', 'org.junit.runner.Description', 'parseMethod', '(.*)\\((.*)\\)', 'mistmatchColumnTest(com.akiban.sql.parser.RowCtorTest)')",[30353]
"('RegexFilenameFilter.java', 'com.akiban.sql.RegexFilenameFilter', 'accept', '.*\\.sql', 'alter-table-1.error')",[10260]
"('Description.java', 'org.junit.runner.Description', 'parseMethod', '(.*)\\((.*)\\)', 'testParseMultiple[1](com.akiban.sql.unparser.ParseMultipleTest)')",[33524]
"('RegexFilenameFilter.java', 'com.akiban.sql.RegexFilenameFilter', 'accept', '.*\\.sql', 'drop-index-2.sql')",[2430]
"('Description.java', 'org.junit.runner.Description', 'getClassName', '(.*)\\((.*)\\)', 'testParser[14](com.akiban.sql.parser.SQLParserTest)')",[22785]
"('RegexFilenameFilter.java', 'com.akiban.sql.RegexFilenameFilter', 'accept', '.*\\.sql', 'group-2.expected')",[20655]
"('RegexFilenameFilter.java', 'com.akiban.sql.RegexFilenameFilter', 'accept', '.*\\.sql', 'explain-1.sql')","[1440, 15390]"
"('RegexFilenameFilter.java', 'com.akiban.sql.RegexFilenameFilter', 'accept', '.*\\.sql', 'select-3.sql')","[8820, 18090, 21465]"
"('Description.java', 'org.junit.runner.Description', 'parseMethod', '(.*)\\((.*)\\)', 'testParser[98](com.akiban.sql.parser.SQLParserTest)')",[26960]
"('RegexFilenameFilter.java', 'com.akiban.sql.RegexFilenameFilter', 'accept', '.*\\.sql', 'alter-table-drop-2.expected')",[11880]
"('Description.java', 'org.junit.runner.Description', 'parseMethod', '(.*)\\((.*)\\)', 'testParser[110](com.akiban.sql.parser.SQLParserTest)')",[27560]
"('RegexFilenameFilter.java', 'com.akiban.sql.RegexFilenameFilter', 'accept', '.*\\.sql', 'alter-table-2.sql')",[8280]
"('Description.java', 'org.junit.runner.Description', 'parseMethod', '(.*)\\((.*)\\)', 'testParser[84](com.akiban.sql.parser.SQLParserTest)')",[26260]
"('RegexFilenameFilter.java', 'com.akiban.sql.RegexFilenameFilter', 'accept', '.*\\.sql', 'create-schema-3.sql')",[9630]
"('RegexFilenameFilter.java', 'com.akiban.sql.RegexFilenameFilter', 'accept', '.*\\.sql', 'drop-sequence-2.sql')",[8460]
"('RegexFilenameFilter.java', 'com.akiban.sql.RegexFilenameFilter', 'accept', '.*\\.sql', 'insert-2m.sql')",[17415]
"('Description.java', 'org.junit.runner.Description', 'getClassName', '(.*)\\((.*)\\)', 'testParser[9](com.akiban.sql.parser.SQLParserTest)')",[22535]
"('Description.java', 'org.junit.runner.Description', 'parseMethod', '(.*)\\((.*)\\)', 'testParser[95](com.akiban.sql.parser.SQLParserTest)')",[26810]
"('Description.java', 'org.junit.runner.Description', 'parseMethod', '(.*)\\((.*)\\)', 'testParseMultiple[0](com.akiban.sql.unparser.ParseMultipleTest)')",[33474]
"('RegexFilenameFilter.java', 'com.akiban.sql.RegexFilenameFilter', 'accept', '.*\\.sql', 'alter-table-update-1.sql')",[360]
"('RegexFilenameFilter.java', 'com.akiban.sql.RegexFilenameFilter', 'accept', '.*\\.sql', 'select-limit-3.sql')",[10170]
"('Description.java', 'org.junit.runner.Description', 'parseMethod', '(.*)\\((.*)\\)', 'testParser[5](com.akiban.sql.parser.SQLParserTest)')",[22310]
"('Description.java', 'org.junit.runner.Description', 'parseMethod', '(.*)\\((.*)\\)', 'testParseMultiple[6](com.akiban.sql.unparser.ParseMultipleTest)')",[33774]
"('Description.java', 'org.junit.runner.Description', 'getClassName', '(.*)\\((.*)\\)', 'testUnparser[38](com.akiban.sql.unparser.NodeToStringTest)')",[32399]
"('Description.java', 'org.junit.runner.Description', 'parseMethod', '(.*)\\((.*)\\)', 'testParser[119](com.akiban.sql.parser.SQLParserTest)')",[28010]
"('RegexFilenameFilter.java', 'com.akiban.sql.RegexFilenameFilter', 'accept', '.*\\.sql', 'create-geo-index-4.sql')",[17595]
"('RegexFilenameFilter.java', 'com.akiban.sql.RegexFilenameFilter', 'accept', '.*\\.sql', 'create-view-1.expected')","[3510, 16065]"
"('RegexFilenameFilter.java', 'com.akiban.sql.RegexFilenameFilter', 'accept', '.*\\.sql', 'mysql-2x.sql')",[7245]
"('Description.java', 'org.junit.runner.Description', 'getClassName', '(.*)\\((.*)\\)', 'testParser[121](com.akiban.sql.parser.SQLParserTest)')",[28135]
"('Description.java', 'org.junit.runner.Description', 'getClassName', '(.*)\\((.*)\\)', 'testParser[95](com.akiban.sql.parser.SQLParserTest)')",[26835]
"('RegexFilenameFilter.java', 'com.akiban.sql.RegexFilenameFilter', 'accept', '.*\\.sql', 'select-1.expected')","[4905, 16470, 21195]"
"('RegexFilenameFilter.java', 'com.akiban.sql.RegexFilenameFilter', 'accept', '.*\\.sql', 'create-geo-index-5.sql')",[16875]
"('RegexFilenameFilter.java', 'com.akiban.sql.RegexFilenameFilter', 'accept', '.*\\.sql', 'alter-table-drop-1.sql')",[675]
"('Description.java', 'org.junit.runner.Description', 'parseMethod', '(.*)\\((.*)\\)', 'testUnparser[48](com.akiban.sql.unparser.NodeToStringTest)')",[32874]
"('RegexFilenameFilter.java', 'com.akiban.sql.RegexFilenameFilter', 'accept', '.*\\.sql', 'create-index-7.expected')",[8685]
"('Description.java', 'org.junit.runner.Description', 'parseMethod', '(.*)\\((.*)\\)', 'testParser[99](com.akiban.sql.parser.SQLParserTest)')",[27010]
"('Description.java', 'org.junit.runner.Description', 'parseMethod', '(.*)\\((.*)\\)', 'testParser[42](com.akiban.sql.parser.SQLParserTest)')",[24160]
"('RegexFilenameFilter.java', 'com.akiban.sql.RegexFilenameFilter', 'accept', '.*\\.sql', 'select-mysql-2.expected')",[5850]
"('Description.java', 'org.junit.runner.Description', 'getClassName', '(.*)\\((.*)\\)', 'testParser[82](com.akiban.sql.parser.SQLParserTest)')",[26185]
"('Description.java', 'org.junit.runner.Description', 'parseMethod', '(.*)\\((.*)\\)', 'testUnparser[5](com.akiban.sql.unparser.NodeToStringTest)')",[30724]
"('Description.java', 'org.junit.runner.Description', 'parseMethod', '(.*)\\((.*)\\)', 'testParser[152](com.akiban.sql.parser.SQLParserTest)')",[29660]
"('Description.java', 'org.junit.runner.Description', 'parseMethod', '(.*)\\((.*)\\)', 'testParser[141](com.akiban.sql.parser.SQLParserTest)')",[29110]
"('Description.java', 'org.junit.runner.Description', 'parseMethod', '(.*)\\((.*)\\)', 'testUnparser[4](com.akiban.sql.unparser.NodeToStringTest)')",[30674]
"('RegexFilenameFilter.java', 'com.akiban.sql.RegexFilenameFilter', 'accept', '.*\\.sql', 'drop-index-3.sql')",[945]
"('Description.java', 'org.junit.runner.Description', 'parseMethod', '(.*)\\((.*)\\)', 'testParser[71](com.akiban.sql.parser.SQLParserTest)')",[25610]
"('RegexFilenameFilter.java', 'com.akiban.sql.RegexFilenameFilter', 'accept', '.*\\.sql', 'create-index-5.sql')",[9945]
"('RegexFilenameFilter.java', 'com.akiban.sql.RegexFilenameFilter', 'accept', '.*\\.sql', 'update-2.expected')",[7695]
"('RegexFilenameFilter.java', 'com.akiban.sql.RegexFilenameFilter', 'accept', '.*\\.sql', 'execute-2.expected')","[5130, 16515]"
"('RegexFilenameFilter.java', 'com.akiban.sql.RegexFilenameFilter', 'accept', '.*\\.sql', 'alter-table-update-2.expected')",[4455]
"('Description.java', 'org.junit.runner.Description', 'parseMethod', '(.*)\\((.*)\\)', 'testUnparser[0](com.akiban.sql.unparser.NodeToStringTest)')",[30474]
"('Description.java', 'org.junit.runner.Description', 'getClassName', '(.*)\\((.*)\\)', 'testParser[39](com.akiban.sql.parser.SQLParserTest)')",[24035]
"('RegexFilenameFilter.java', 'com.akiban.sql.RegexFilenameFilter', 'accept', '.*\\.sql', 'select-6.expected')","[12825, 19260, 21690]"
"('RegexFilenameFilter.java', 'com.akiban.sql.RegexFilenameFilter', 'accept', '.*\\.sql', 'create-index-4.expected')",[13995]
"('RegexFilenameFilter.java', 'com.akiban.sql.RegexFilenameFilter', 'accept', '.*\\.sql', 'mysql-1x.sql')",[2790]
"('RegexFilenameFilter.java', 'com.akiban.sql.RegexFilenameFilter', 'accept', '.*\\.sql', 'alter-table-update-1.expected')",[3780]
"('Description.java', 'org.junit.runner.Description', 'getClassName', '(.*)\\((.*)\\)', 'testParser[142](com.akiban.sql.parser.SQLParserTest)')",[29185]
"('Description.java', 'org.junit.runner.Description', 'parseMethod', '(.*)\\((.*)\\)', 'testNormalizer[2](com.akiban.sql.compiler.BooleanNormalizerTest)')",[33974]
"('Description.java', 'org.junit.runner.Description', 'getClassName', '(.*)\\((.*)\\)', 'testUnparser[37](com.akiban.sql.unparser.NodeToStringTest)')",[32349]
"('RegexFilenameFilter.java', 'com.akiban.sql.RegexFilenameFilter', 'accept', '.*\\.sql', 'set-schema-1.sql')",[14355]
"('Description.java', 'org.junit.runner.Description', 'getClassName', '(.*)\\((.*)\\)', 'testParser[150](com.akiban.sql.parser.SQLParserTest)')",[29585]
"('RegexFilenameFilter.java', 'com.akiban.sql.RegexFilenameFilter', 'accept', '.*\\.sql', 'delete-2.sql')","[12915, 20790]"
"('RegexFilenameFilter.java', 'com.akiban.sql.RegexFilenameFilter', 'accept', '.*\\.sql', 'create-index-2.sql')",[14850]
"('RegexFilenameFilter.java', 'com.akiban.sql.RegexFilenameFilter', 'accept', '.*\\.sql', 'drop-group-2.sql')",[4950]
"('Description.java', 'org.junit.runner.Description', 'parseMethod', '(.*)\\((.*)\\)', 'testUnparser[3](com.akiban.sql.unparser.NodeToStringTest)')",[30624]
"('Description.java', 'org.junit.runner.Description', 'getClassName', '(.*)\\((.*)\\)', 'testUnparser[46](com.akiban.sql.unparser.NodeToStringTest)')",[32799]
"('RegexFilenameFilter.java', 'com.akiban.sql.RegexFilenameFilter', 'accept', '.*\\.sql', 'alter-table-constraint-1.sql')",[1350]
"('Description.java', 'org.junit.runner.Description', 'getClassName', '(.*)\\((.*)\\)', 'testParser[28](com.akiban.sql.parser.SQLParserTest)')",[23485]
"('Description.java', 'org.junit.runner.Description', 'getClassName', '(.*)\\((.*)\\)', 'testNormalizer[2](com.akiban.sql.compiler.BooleanNormalizerTest)')",[33999]
"('Description.java', 'org.junit.runner.Description', 'getClassName', '(.*)\\((.*)\\)', 'testParser[76](com.akiban.sql.parser.SQLParserTest)')",[25885]
"('RegexFilenameFilter.java', 'com.akiban.sql.RegexFilenameFilter', 'accept', '.*\\.sql', 'insert-returning-3.expected')",[3645]
"('RegexFilenameFilter.java', 'com.akiban.sql.RegexFilenameFilter', 'accept', '.*\\.sql', 'insert-returning-1.sql')",[5040]
"('Description.java', 'org.junit.runner.Description', 'parseMethod', '(.*)\\((.*)\\)', 'testUnparser[26](com.akiban.sql.unparser.NodeToStringTest)')",[31774]
"('RegexFilenameFilter.java', 'com.akiban.sql.RegexFilenameFilter', 'accept', '.*\\.sql', 'select-10.sql')",[19530]
"('Description.java', 'org.junit.runner.Description', 'getClassName', '(.*)\\((.*)\\)', 'testUnparser[31](com.akiban.sql.unparser.NodeToStringTest)')",[32049]
"('Description.java', 'org.junit.runner.Description', 'parseMethod', '(.*)\\((.*)\\)', 'testWithTables(com.akiban.sql.parser.RowCtorTest)')",[30305]
"('Description.java', 'org.junit.runner.Description', 'parseMethod', '(.*)\\((.*)\\)', 'testParser[78](com.akiban.sql.parser.SQLParserTest)')",[25960]
"('Description.java', 'org.junit.runner.Description', 'getClassName', '(.*)\\((.*)\\)', 'testUnparser[28](com.akiban.sql.unparser.NodeToStringTest)')",[31899]
"('Description.java', 'org.junit.runner.Description', 'parseMethod', '(.*)\\((.*)\\)', 'testUnparser[43](com.akiban.sql.unparser.NodeToStringTest)')",[32624]
"('RegexFilenameFilter.java', 'com.akiban.sql.RegexFilenameFilter', 'accept', '.*\\.sql', 'update-returning-2.expected')",[1665]
"('Description.java', 'org.junit.runner.Description', 'parseMethod', '(.*)\\((.*)\\)', 'testParser[39](com.akiban.sql.parser.SQLParserTest)')",[24010]
"('Description.java', 'org.junit.runner.Description', 'getClassName', '(.*)\\((.*)\\)', 'testNormalizer[5](com.akiban.sql.compiler.BooleanNormalizerTest)')",[34149]
"('RegexFilenameFilter.java', 'com.akiban.sql.RegexFilenameFilter', 'accept', '.*\\.sql', 'group-concat-1.expected')","[9450, 18225]"
"('RegexFilenameFilter.java', 'com.akiban.sql.RegexFilenameFilter', 'accept', '.*\\.sql', 'fetch-2.expected')","[3735, 16110]"
"('RegexFilenameFilter.java', 'com.akiban.sql.RegexFilenameFilter', 'accept', '.*\\.sql', 'copy-6.expected')",[19440]
"('Description.java', 'org.junit.runner.Description', 'parseMethod', '(.*)\\((.*)\\)', 'testParser[86](com.akiban.sql.parser.SQLParserTest)')",[26360]
"('Description.java', 'org.junit.runner.Description', 'getClassName', '(.*)\\((.*)\\)', 'testUnparser[15](com.akiban.sql.unparser.NodeToStringTest)')",[31249]
"('Description.java', 'org.junit.runner.Description', 'getClassName', '(.*)\\((.*)\\)', 'testNormalizer[4](com.akiban.sql.compiler.BooleanNormalizerTest)')",[34099]
"('RegexFilenameFilter.java', 'com.akiban.sql.RegexFilenameFilter', 'accept', '.*\\.sql', 'create-sequence-1.expected')",[4005]
"('Description.java', 'org.junit.runner.Description', 'getClassName', '(.*)\\((.*)\\)', 'testParser[4](com.akiban.sql.parser.SQLParserTest)')",[22285]
"('RegexFilenameFilter.java', 'com.akiban.sql.RegexFilenameFilter', 'accept', '.*\\.sql', 'create-table-9.sql')",[7065]
"('Description.java', 'org.junit.runner.Description', 'parseMethod', '(.*)\\((.*)\\)', 'testNormalizer[9](com.akiban.sql.compiler.BooleanNormalizerTest)')",[34324]
"('Description.java', 'org.junit.runner.Description', 'parseMethod', '(.*)\\((.*)\\)', 'testUnparser[10](com.akiban.sql.unparser.NodeToStringTest)')",[30974]
"('RegexFilenameFilter.java', 'com.akiban.sql.RegexFilenameFilter', 'accept', '.*\\.sql', 'alter-server-kill-1.expected')",[3240]
"('Description.java', 'org.junit.runner.Description', 'getClassName', '(.*)\\((.*)\\)', 'testParser[86](com.akiban.sql.parser.SQLParserTest)')",[26385]
"('RegexFilenameFilter.java', 'com.akiban.sql.RegexFilenameFilter', 'accept', '.*\\.sql', 'alter-table-add-column-2.sql')",[10530]
"('Description.java', 'org.junit.runner.Description', 'parseMethod', '(.*)\\((.*)\\)', 'testParser[60](com.akiban.sql.parser.SQLParserTest)')",[25060]
"('Description.java', 'org.junit.runner.Description', 'getClassName', '(.*)\\((.*)\\)', 'testUnparser[53](com.akiban.sql.unparser.NodeToStringTest)')",[33149]
"('RegexFilenameFilter.java', 'com.akiban.sql.RegexFilenameFilter', 'accept', '.*\\.sql', 'create-table-6.expected')",[10125]
"('RegexFilenameFilter.java', 'com.akiban.sql.RegexFilenameFilter', 'accept', '.*\\.sql', 'copy-4.expected')",[7380]
"('RegexFilenameFilter.java', 'com.akiban.sql.RegexFilenameFilter', 'accept', '.*\\.sql', 'mysql-2x.error')",[9675]
"('Description.java', 'org.junit.runner.Description', 'getClassName', '(.*)\\((.*)\\)', 'testMatch_String_String(com.akiban.sql.CompareWithoutHashesTest)')",[30425]
"('Description.java', 'org.junit.runner.Description', 'getClassName', '(.*)\\((.*)\\)', 'testParser[147](com.akiban.sql.parser.SQLParserTest)')",[29435]
"('RegexFilenameFilter.java', 'com.akiban.sql.RegexFilenameFilter', 'accept', '.*\\.sql', 'select-limit-3.expected')",[225]
"('RegexFilenameFilter.java', 'com.akiban.sql.RegexFilenameFilter', 'accept', '.*\\.sql', 'select-14.expected')",[16020]
"('Description.java', 'org.junit.runner.Description', 'parseMethod', '(.*)\\((.*)\\)', 'testParser[56](com.akiban.sql.parser.SQLParserTest)')",[24860]
"('Description.java', 'org.junit.runner.Description', 'parseMethod', '(.*)\\((.*)\\)', 'testParser[25](com.akiban.sql.parser.SQLParserTest)')",[23310]
"('RegexFilenameFilter.java', 'com.akiban.sql.RegexFilenameFilter', 'accept', '.*\\.sql', 'insert-1r.expected')",[18495]
"('RegexFilenameFilter.java', 'com.akiban.sql.RegexFilenameFilter', 'accept', '.*\\.sql', 'create-geo-index-2.expected')",[16650]
"('RegexFilenameFilter.java', 'com.akiban.sql.RegexFilenameFilter', 'accept', '.*\\.sql', 'alter-server-interrupt-1.sql')",[9270]
"('Description.java', 'org.junit.runner.Description', 'parseMethod', '(.*)\\((.*)\\)', 'testMatch_String_String(com.akiban.sql.CompareWithoutHashesTest)')",[30401]
"('RegexFilenameFilter.java', 'com.akiban.sql.RegexFilenameFilter', 'accept', '.*\\.sql', 'select-7.expected')","[20160, 21870]"
"('Description.java', 'org.junit.runner.Description', 'getClassName', '(.*)\\((.*)\\)', 'testParser[105](com.akiban.sql.parser.SQLParserTest)')",[27335]
"('Description.java', 'org.junit.runner.Description', 'getClassName', '(.*)\\((.*)\\)', 'testUnparser[29](com.akiban.sql.unparser.NodeToStringTest)')",[31949]
"('RegexFilenameFilter.java', 'com.akiban.sql.RegexFilenameFilter', 'accept', '.*\\.sql', 'alter-table-add-column-1.sql')",[12105]
"('Description.java', 'org.junit.runner.Description', 'getClassName', '(.*)\\((.*)\\)', 'testParser[20](com.akiban.sql.parser.SQLParserTest)')",[23085]
"('RegexFilenameFilter.java', 'com.akiban.sql.RegexFilenameFilter', 'accept', '.*\\.sql', 'create-table-1.sql')","[10710, 18540]"
"('RegexFilenameFilter.java', 'com.akiban.sql.RegexFilenameFilter', 'accept', '.*\\.sql', 'alter-server-set-1.expected')",[45]
"('RegexFilenameFilter.java', 'com.akiban.sql.RegexFilenameFilter', 'accept', '.*\\.sql', 'alter-group-drop-1b.expected')",[3915]
"('RegexFilenameFilter.java', 'com.akiban.sql.RegexFilenameFilter', 'accept', '.*\\.sql', 'create-table-5.sql')",[11655]
"('Description.java', 'org.junit.runner.Description', 'parseMethod', '(.*)\\((.*)\\)', 'nonNestedRowsWithParens(com.akiban.sql.parser.RowCtorTest)')",[30377]
"('Description.java', 'org.junit.runner.Description', 'parseMethod', '(.*)\\((.*)\\)', 'testUnparser[31](com.akiban.sql.unparser.NodeToStringTest)')",[32024]
"('Description.java', 'org.junit.runner.Description', 'parseMethod', '(.*)\\((.*)\\)', 'testParser[142](com.akiban.sql.parser.SQLParserTest)')",[29160]
"('Description.java', 'org.junit.runner.Description', 'getClassName', '(.*)\\((.*)\\)', 'testParser[68](com.akiban.sql.parser.SQLParserTest)')",[25485]
"('Description.java', 'org.junit.runner.Description', 'parseMethod', '(.*)\\((.*)\\)', 'testParser[29](com.akiban.sql.parser.SQLParserTest)')",[23510]
"('Description.java', 'org.junit.runner.Description', 'parseMethod', '(.*)\\((.*)\\)', 'testParser[27](com.akiban.sql.parser.SQLParserTest)')",[23410]
"('Description.java', 'org.junit.runner.Description', 'getClassName', '(.*)\\((.*)\\)', 'testParser[17](com.akiban.sql.parser.SQLParserTest)')",[22935]
"('Description.java', 'org.junit.runner.Description', 'getClassName', '(.*)\\((.*)\\)', 'testParser[113](com.akiban.sql.parser.SQLParserTest)')",[27735]
"('RegexFilenameFilter.java', 'com.akiban.sql.RegexFilenameFilter', 'accept', '.*\\.sql', 'alter-table-constraint-1.expected')",[90]
"('RegexFilenameFilter.java', 'com.akiban.sql.RegexFilenameFilter', 'accept', '.*\\.sql', 'alter-table-1.sql')",[6660]
"('RegexFilenameFilter.java', 'com.akiban.sql.RegexFilenameFilter', 'accept', '.*\\.sql', 'rename-1.sql')",[8550]
"('Description.java', 'org.junit.runner.Description', 'parseMethod', '(.*)\\((.*)\\)', 'testNormalizer[3](com.akiban.sql.compiler.BooleanNormalizerTest)')",[34024]
"('RegexFilenameFilter.java', 'com.akiban.sql.RegexFilenameFilter', 'accept', '.*\\.sql', 'alter-table-add-geo-index-1.expected')",[10440]
"('Description.java', 'org.junit.runner.Description', 'parseMethod', '(.*)\\((.*)\\)', 'testParser[51](com.akiban.sql.parser.SQLParserTest)')",[24610]
"('Description.java', 'org.junit.runner.Description', 'getClassName', '(.*)\\((.*)\\)', 'testParser[45](com.akiban.sql.parser.SQLParserTest)')",[24335]
"('Description.java', 'org.junit.runner.Description', 'getClassName', '(.*)\\((.*)\\)', 'testParser[110](com.akiban.sql.parser.SQLParserTest)')",[27585]
"('RegexFilenameFilter.java', 'com.akiban.sql.RegexFilenameFilter', 'accept', '.*\\.sql', 'select-12.expected')",[14895]
"('Description.java', 'org.junit.runner.Description', 'getClassName', '(.*)\\((.*)\\)', 'testParser[67](com.akiban.sql.parser.SQLParserTest)')",[25435]
"('RegexFilenameFilter.java', 'com.akiban.sql.RegexFilenameFilter', 'accept', '.*\\.sql', 'update-returning-1.expected')",[5355]
"('RegexFilenameFilter.java', 'com.akiban.sql.RegexFilenameFilter', 'accept', '.*\\.sql', 'create-index-6.expected')",[12510]
"('RegexFilenameFilter.java', 'com.akiban.sql.RegexFilenameFilter', 'accept', '.*\\.sql', 'create-table-sequence-1.sql')",[12375]
"('RegexFilenameFilter.java', 'com.akiban.sql.RegexFilenameFilter', 'accept', '.*\\.sql', 'fetch-1.expected')","[1170, 15255]"
"('RegexFilenameFilter.java', 'com.akiban.sql.RegexFilenameFilter', 'accept', '.*\\.sql', 'insert-2m.expected')",[17865]
"('Description.java', 'org.junit.runner.Description', 'getClassName', '(.*)\\((.*)\\)', 'testParser[52](com.akiban.sql.parser.SQLParserTest)')",[24685]
"('Description.java', 'org.junit.runner.Description', 'parseMethod', '(.*)\\((.*)\\)', 'testParser[14](com.akiban.sql.parser.SQLParserTest)')",[22760]
"('Description.java', 'org.junit.runner.Description', 'parseMethod', '(.*)\\((.*)\\)', 'testParser[96](com.akiban.sql.parser.SQLParserTest)')",[26860]
"('RegexFilenameFilter.java', 'com.akiban.sql.RegexFilenameFilter', 'accept', '.*\\.sql', 'alter-group-drop-1a.sql')",[2070]
"('Description.java', 'org.junit.runner.Description', 'parseMethod', '(.*)\\((.*)\\)', 'testParser[54](com.akiban.sql.parser.SQLParserTest)')",[24760]
"('Description.java', 'org.junit.runner.Description', 'getClassName', '(.*)\\((.*)\\)', 'testParser[66](com.akiban.sql.parser.SQLParserTest)')",[25385]
"('Description.java', 'org.junit.runner.Description', 'getClassName', '(.*)\\((.*)\\)', 'testParser[48](com.akiban.sql.parser.SQLParserTest)')",[24485]
"('RegexFilenameFilter.java', 'com.akiban.sql.RegexFilenameFilter', 'accept', '.*\\.sql', 'transactions-1.sql')",[20880]
"('Description.java', 'org.junit.runner.Description', 'getClassName', '(.*)\\((.*)\\)', 'testParser[117](com.akiban.sql.parser.SQLParserTest)')",[27935]
"('RegexFilenameFilter.java', 'com.akiban.sql.RegexFilenameFilter', 'accept', '.*\\.sql', 'fetch-1.sql')","[7200, 17640]"
"('RegexFilenameFilter.java', 'com.akiban.sql.RegexFilenameFilter', 'accept', '.*\\.sql', 'alter-group-add-2b.sql')",[9810]
"('RegexFilenameFilter.java', 'com.akiban.sql.RegexFilenameFilter', 'accept', '.*\\.sql', 'create-table-sequence-2.sql')",[8865]
"('Description.java', 'org.junit.runner.Description', 'parseMethod', '(.*)\\((.*)\\)', 'testParser[114](com.akiban.sql.parser.SQLParserTest)')",[27760]
"('RegexFilenameFilter.java', 'com.akiban.sql.RegexFilenameFilter', 'accept', '.*\\.sql', 'drop-table-1.expected')",[12015]
"('Description.java', 'org.junit.runner.Description', 'getClassName', '(.*)\\((.*)\\)', 'testParser[96](com.akiban.sql.parser.SQLParserTest)')",[26885]
"('Description.java', 'org.junit.runner.Description', 'getClassName', '(.*)\\((.*)\\)', 'testParser[160](com.akiban.sql.parser.SQLParserTest)')",[30085]
"('Description.java', 'org.junit.runner.Description', 'getClassName', '(.*)\\((.*)\\)', 'testParseMultiple[0](com.akiban.sql.unparser.ParseMultipleTest)')",[33499]
"('RegexFilenameFilter.java', 'com.akiban.sql.RegexFilenameFilter', 'accept', '.*\\.sql', 'alter-server-set-2.expected')",[11025]
"('RegexFilenameFilter.java', 'com.akiban.sql.RegexFilenameFilter', 'accept', '.*\\.sql', 'drop-table-3.sql')",[12600]
"('RegexFilenameFilter.java', 'com.akiban.sql.RegexFilenameFilter', 'accept', '.*\\.sql', 'select-5.expected')","[7605, 17730, 21330]"
"('RegexFilenameFilter.java', 'com.akiban.sql.RegexFilenameFilter', 'accept', '.*\\.sql', 'prepare-1.sql')","[5895, 16920]"
"('Description.java', 'org.junit.runner.Description', 'getClassName', '(.*)\\((.*)\\)', 'testParser[137](com.akiban.sql.parser.SQLParserTest)')",[28935]
"('RegexFilenameFilter.java', 'com.akiban.sql.RegexFilenameFilter', 'accept', '.*\\.sql', 'create-index-error.error')",[13095]
"('RegexFilenameFilter.java', 'com.akiban.sql.RegexFilenameFilter', 'accept', '.*\\.sql', 'rename-2.sql')",[8190]
"('Description.java', 'org.junit.runner.Description', 'getClassName', '(.*)\\((.*)\\)', 'testParser[141](com.akiban.sql.parser.SQLParserTest)')",[29135]
"('Description.java', 'org.junit.runner.Description', 'getClassName', '(.*)\\((.*)\\)', 'testParser[109](com.akiban.sql.parser.SQLParserTest)')",[27535]
"('RegexFilenameFilter.java', 'com.akiban.sql.RegexFilenameFilter', 'accept', '.*\\.sql', 'insert-returning-5.expected')",[14220]
"('RegexFilenameFilter.java', 'com.akiban.sql.RegexFilenameFilter', 'accept', '.*\\.sql', 'create-table-2.expected')","[3870, 16200]"
"('RegexFilenameFilter.java', 'com.akiban.sql.RegexFilenameFilter', 'accept', '.*\\.sql', 'select-10.expected')",[15885]
"('Description.java', 'org.junit.runner.Description', 'parseMethod', '(.*)\\((.*)\\)', 'testParser[2](com.akiban.sql.parser.SQLParserTest)')",[22160]
"('RegexFilenameFilter.java', 'com.akiban.sql.RegexFilenameFilter', 'accept', '.*\\.sql', 'alter-table-add-column-8.sql')",[7830]
"('RegexFilenameFilter.java', 'com.akiban.sql.RegexFilenameFilter', 'accept', '.*\\.sql', 'alter-table-add-column-8.error')",[11250]
"('RegexFilenameFilter.java', 'com.akiban.sql.RegexFilenameFilter', 'accept', '.*\\.sql', 'insert-1c.sql')",[20205]
"('RegexFilenameFilter.java', 'com.akiban.sql.RegexFilenameFilter', 'accept', '.*\\.sql', 'alter-group-add-1b.sql')",[1575]
"('Description.java', 'org.junit.runner.Description', 'parseMethod', '(.*)\\((.*)\\)', 'testParser[31](com.akiban.sql.parser.SQLParserTest)')",[23610]
"('Description.java', 'org.junit.runner.Description', 'parseMethod', '(.*)\\((.*)\\)', 'testParser[112](com.akiban.sql.parser.SQLParserTest)')",[27660]
"('Description.java', 'org.junit.runner.Description', 'parseMethod', '(.*)\\((.*)\\)', 'testParser[155](com.akiban.sql.parser.SQLParserTest)')",[29810]
"('Description.java', 'org.junit.runner.Description', 'getClassName', '(.*)\\((.*)\\)', 'testParser[42](com.akiban.sql.parser.SQLParserTest)')",[24185]
"('Description.java', 'org.junit.runner.Description', 'getClassName', '(.*)\\((.*)\\)', 'testUnparser[5](com.akiban.sql.unparser.NodeToStringTest)')",[30749]
"('RegexFilenameFilter.java', 'com.akiban.sql.RegexFilenameFilter', 'accept', '.*\\.sql', 'select-0.expected')",[18270]
"('RegexFilenameFilter.java', 'com.akiban.sql.RegexFilenameFilter', 'accept', '.*\\.sql', 'create-table-8.sql')",[4545]
"('RegexFilenameFilter.java', 'com.akiban.sql.RegexFilenameFilter', 'accept', '.*\\.sql', 'create-table-add-index-1.expected')","[6525, 17190]"
"('Description.java', 'org.junit.runner.Description', 'parseMethod', '(.*)\\((.*)\\)', 'matchingColumn(com.akiban.sql.parser.RowCtorTest)')",[30329]
"('Description.java', 'org.junit.runner.Description', 'parseMethod', '(.*)\\((.*)\\)', 'testParser[70](com.akiban.sql.parser.SQLParserTest)')",[25560]
"('RegexFilenameFilter.java', 'com.akiban.sql.RegexFilenameFilter', 'accept', '.*\\.sql', 'drop-procedure-1.expected')",[12150]
"('Description.java', 'org.junit.runner.Description', 'parseMethod', '(.*)\\((.*)\\)', 'testParser[63](com.akiban.sql.parser.SQLParserTest)')",[25210]
"('Description.java', 'org.junit.runner.Description', 'parseMethod', '(.*)\\((.*)\\)', 'testNormalizer[0](com.akiban.sql.compiler.BooleanNormalizerTest)')",[33874]
"('RegexFilenameFilter.java', 'com.akiban.sql.RegexFilenameFilter', 'accept', '.*\\.sql', 'create-index-6.sql')",[405]
"('RegexFilenameFilter.java', 'com.akiban.sql.RegexFilenameFilter', 'accept', '.*\\.sql', 'insert-1c.expected')",[16245]
"('Description.java', 'org.junit.runner.Description', 'parseMethod', '(.*)\\((.*)\\)', 'testUnparser[41](com.akiban.sql.unparser.NodeToStringTest)')",[32524]
"('RegexFilenameFilter.java', 'com.akiban.sql.RegexFilenameFilter', 'accept', '.*\\.sql', 'select-3.expected')","[8415, 18045, 21420]"
"('Description.java', 'org.junit.runner.Description', 'getClassName', '(.*)\\((.*)\\)', 'testUnparser[0](com.akiban.sql.unparser.NodeToStringTest)')",[30499]
"('Description.java', 'org.junit.runner.Description', 'parseMethod', '(.*)\\((.*)\\)', 'testUnparser[52](com.akiban.sql.unparser.NodeToStringTest)')",[33074]
"('RegexFilenameFilter.java', 'com.akiban.sql.RegexFilenameFilter', 'accept', '.*\\.sql', 'create-table-sequence-1.expected')",[14400]
"('Description.java', 'org.junit.runner.Description', 'getClassName', '(.*)\\((.*)\\)', 'testParser[115](com.akiban.sql.parser.SQLParserTest)')",[27835]
"('Description.java', 'org.junit.runner.Description', 'getClassName', '(.*)\\((.*)\\)', 'testNormalizer[0](com.akiban.sql.compiler.BooleanNormalizerTest)')",[33899]
"('RegexFilenameFilter.java', 'com.akiban.sql.RegexFilenameFilter', 'accept', '.*\\.sql', 'insert-returning-3.sql')",[7335]
"('Description.java', 'org.junit.runner.Description', 'parseMethod', '(.*)\\((.*)\\)', 'testParser[146](com.akiban.sql.parser.SQLParserTest)')",[29360]
"('Description.java', 'org.junit.runner.Description', 'getClassName', '(.*)\\((.*)\\)', 'testUnparser[21](com.akiban.sql.unparser.NodeToStringTest)')",[31549]
"('Description.java', 'org.junit.runner.Description', 'parseMethod', '(.*)\\((.*)\\)', 'testUnparser[18](com.akiban.sql.unparser.NodeToStringTest)')",[31374]
"('Description.java', 'org.junit.runner.Description', 'parseMethod', '(.*)\\((.*)\\)', 'testParser[117](com.akiban.sql.parser.SQLParserTest)')",[27910]
"('Description.java', 'org.junit.runner.Description', 'getClassName', '(.*)\\((.*)\\)', 'testUnparser[43](com.akiban.sql.unparser.NodeToStringTest)')",[32649]
"('RegexFilenameFilter.java', 'com.akiban.sql.RegexFilenameFilter', 'accept', '.*\\.sql', 'alter-table-add-column-1.expected')",[2700]
"('RegexFilenameFilter.java', 'com.akiban.sql.RegexFilenameFilter', 'accept', '.*\\.sql', 'drop-schema-2.sql')",[9405]
"('Description.java', 'org.junit.runner.Description', 'parseMethod', '(.*)\\((.*)\\)', 'testNormalizer[8](com.akiban.sql.compiler.BooleanNormalizerTest)')",[34274]
"('Description.java', 'org.junit.runner.Description', 'parseMethod', '(.*)\\((.*)\\)', 'testParseMultiple[3](com.akiban.sql.unparser.ParseMultipleTest)')",[33624]
"('Description.java', 'org.junit.runner.Description', 'parseMethod', '(.*)\\((.*)\\)', 'testParser[36](com.akiban.sql.parser.SQLParserTest)')",[23860]
"('Description.java', 'org.junit.runner.Description', 'parseMethod', '(.*)\\((.*)\\)', 'testParser[18](com.akiban.sql.parser.SQLParserTest)')",[22960]
"('Description.java', 'org.junit.runner.Description', 'parseMethod', '(.*)\\((.*)\\)', 'testUnparser[8](com.akiban.sql.unparser.NodeToStringTest)')",[30874]
"('Description.java', 'org.junit.runner.Description', 'parseMethod', '(.*)\\((.*)\\)', 'testParser[76](com.akiban.sql.parser.SQLParserTest)')",[25860]
"('Description.java', 'org.junit.runner.Description', 'getClassName', '(.*)\\((.*)\\)', 'testParser[124](com.akiban.sql.parser.SQLParserTest)')",[28285]
"('RegexFilenameFilter.java', 'com.akiban.sql.RegexFilenameFilter', 'accept', '.*\\.sql', 'create-index-1.expected')","[11475, 18765]"
"('Description.java', 'org.junit.runner.Description', 'getClassName', '(.*)\\((.*)\\)', 'testParser[72](com.akiban.sql.parser.SQLParserTest)')",[25685]
"('Description.java', 'org.junit.runner.Description', 'getClassName', '(.*)\\((.*)\\)', 'testUnparser[6](com.akiban.sql.unparser.NodeToStringTest)')",[30799]
"('Description.java', 'org.junit.runner.Description', 'parseMethod', '(.*)\\((.*)\\)', 'testParser[136](com.akiban.sql.parser.SQLParserTest)')",[28860]
"('Description.java', 'org.junit.runner.Description', 'parseMethod', '(.*)\\((.*)\\)', 'testUnparser[57](com.akiban.sql.unparser.NodeToStringTest)')",[33324]
"('RegexFilenameFilter.java', 'com.akiban.sql.RegexFilenameFilter', 'accept', '.*\\.sql', 'copy-1.sql')",[1035]
"('Description.java', 'org.junit.runner.Description', 'getClassName', '(.*)\\((.*)\\)', 'testNormalizer[8](com.akiban.sql.compiler.BooleanNormalizerTest)')",[34299]
"('Description.java', 'org.junit.runner.Description', 'getClassName', '(.*)\\((.*)\\)', 'testUnparser[51](com.akiban.sql.unparser.NodeToStringTest)')",[33049]
"('Description.java', 'org.junit.runner.Description', 'getClassName', '(.*)\\((.*)\\)', 'testParser[87](com.akiban.sql.parser.SQLParserTest)')",[26435]
"('Description.java', 'org.junit.runner.Description', 'getClassName', '(.*)\\((.*)\\)', 'testParser[73](com.akiban.sql.parser.SQLParserTest)')",[25735]
"('Description.java', 'org.junit.runner.Description', 'getClassName', '(.*)\\((.*)\\)', 'testUnparser[33](com.akiban.sql.unparser.NodeToStringTest)')",[32149]
"('Description.java', 'org.junit.runner.Description', 'getClassName', '(.*)\\((.*)\\)', 'testUnparser[26](com.akiban.sql.unparser.NodeToStringTest)')",[31799]
"('Description.java', 'org.junit.runner.Description', 'parseMethod', '(.*)\\((.*)\\)', 'testParser[160](com.akiban.sql.parser.SQLParserTest)')",[30060]
"('RegexFilenameFilter.java', 'com.akiban.sql.RegexFilenameFilter', 'accept', '.*\\.sql', 'multiple')",[15075]
"('RegexFilenameFilter.java', 'com.akiban.sql.RegexFilenameFilter', 'accept', '.*\\.sql', 'junk-1.sql')",[6975]
"('Description.java', 'org.junit.runner.Description', 'parseMethod', '(.*)\\((.*)\\)', 'testUnparser[30](com.akiban.sql.unparser.NodeToStringTest)')",[31974]
"('RegexFilenameFilter.java', 'com.akiban.sql.RegexFilenameFilter', 'accept', '.*\\.sql', 'create-view-2.sql')",[13410]
"('RegexFilenameFilter.java', 'com.akiban.sql.RegexFilenameFilter', 'accept', '.*\\.sql', 'alter-group-drop-1b.sql')",[2520]
"('Description.java', 'org.junit.runner.Description', 'getClassName', '(.*)\\((.*)\\)', 'testParser[51](com.akiban.sql.parser.SQLParserTest)')",[24635]
"('Description.java', 'org.junit.runner.Description', 'getClassName', '(.*)\\((.*)\\)', 'testParser[16](com.akiban.sql.parser.SQLParserTest)')",[22885]
"('RegexFilenameFilter.java', 'com.akiban.sql.RegexFilenameFilter', 'accept', '.*\\.sql', 'drop-sequence-1.expected')",[4995]
"('RegexFilenameFilter.java', 'com.akiban.sql.RegexFilenameFilter', 'accept', '.*\\.sql', 'create-table-error-1.sql')",[12555]
"('Description.java', 'org.junit.runner.Description', 'parseMethod', '(.*)\\((.*)\\)', 'testUnparser[14](com.akiban.sql.unparser.NodeToStringTest)')",[31174]
"('Description.java', 'org.junit.runner.Description', 'getClassName', '(.*)\\((.*)\\)', 'testParser[91](com.akiban.sql.parser.SQLParserTest)')",[26635]
"('RegexFilenameFilter.java', 'com.akiban.sql.RegexFilenameFilter', 'accept', '.*\\.sql', 'create-sequence-2.expected')",[4635]
"('Description.java', 'org.junit.runner.Description', 'parseMethod', '(.*)\\((.*)\\)', 'testConverter(com.akiban.sql.CompareWithoutHashesTest)')",[30449]
"('Description.java', 'org.junit.runner.Description', 'getClassName', '(.*)\\((.*)\\)', 'testParser[127](com.akiban.sql.parser.SQLParserTest)')",[28435]
"('Description.java', 'org.junit.runner.Description', 'getClassName', '(.*)\\((.*)\\)', 'testUnparser[59](com.akiban.sql.unparser.NodeToStringTest)')","[33449, 35220, 35323]"
"('RegexFilenameFilter.java', 'com.akiban.sql.RegexFilenameFilter', 'accept', '.*\\.sql', 'insert-2.expected')","[6795, 17325]"
"('Description.java', 'org.junit.runner.Description', 'getClassName', '(.*)\\((.*)\\)', 'testParser[138](com.akiban.sql.parser.SQLParserTest)')",[28985]
"('Description.java', 'org.junit.runner.Description', 'getClassName', '(.*)\\((.*)\\)', 'testParser[33](com.akiban.sql.parser.SQLParserTest)')",[23735]
"('Description.java', 'org.junit.runner.Description', 'parseMethod', '(.*)\\((.*)\\)', 'testParser[83](com.akiban.sql.parser.SQLParserTest)')",[26210]
"('RegexFilenameFilter.java', 'com.akiban.sql.RegexFilenameFilter', 'accept', '.*\\.sql', 'alter-table-rename-1.sql')",[6705]
"('Description.java', 'org.junit.runner.Description', 'getClassName', '(.*)\\((.*)\\)', 'testParser[149](com.akiban.sql.parser.SQLParserTest)')",[29535]
"('RegexFilenameFilter.java', 'com.akiban.sql.RegexFilenameFilter', 'accept', '.*\\.sql', 'create-geo-index-2.sql')",[19080]
"('Description.java', 'org.junit.runner.Description', 'parseMethod', '(.*)\\((.*)\\)', 'testParser[127](com.akiban.sql.parser.SQLParserTest)')",[28410]
"('RegexFilenameFilter.java', 'com.akiban.sql.RegexFilenameFilter', 'accept', '.*\\.sql', 'alter-table-drop-3.expected')",[12735]
"('RegexFilenameFilter.java', 'com.akiban.sql.RegexFilenameFilter', 'accept', '.*\\.sql', 'drop-group-2.expected')",[5715]
"('Description.java', 'org.junit.runner.Description', 'getClassName', '(.*)\\((.*)\\)', '[7]')","[35375, 35478]"
"('Description.java', 'org.junit.runner.Description', 'getClassName', '(.*)\\((.*)\\)', 'testParser[56](com.akiban.sql.parser.SQLParserTest)')",[24885]
"('Description.java', 'org.junit.runner.Description', 'getClassName', '(.*)\\((.*)\\)', 'testParser[46](com.akiban.sql.parser.SQLParserTest)')",[24385]
"('RegexFilenameFilter.java', 'com.akiban.sql.RegexFilenameFilter', 'accept', '.*\\.sql', 'create-index-2.expected')",[5760]
"('RegexFilenameFilter.java', 'com.akiban.sql.RegexFilenameFilter', 'accept', '.*\\.sql', 'create-schema-2.expected')",[10305]
"('RegexFilenameFilter.java', 'com.akiban.sql.RegexFilenameFilter', 'accept', '.*\\.sql', 'mysql-2x.features')",[3285]
"('RegexFilenameFilter.java', 'com.akiban.sql.RegexFilenameFilter', 'accept', '.*\\.sql', 'declare-1.expected')","[2970, 15840]"
"('Description.java', 'org.junit.runner.Description', 'getClassName', '(.*)\\((.*)\\)', 'testParser[143](com.akiban.sql.parser.SQLParserTest)')",[29235]
"('Description.java', 'org.junit.runner.Description', 'getClassName', '(.*)\\((.*)\\)', 'testParser[131](com.akiban.sql.parser.SQLParserTest)')",[28635]
"('Description.java', 'org.junit.runner.Description', 'getClassName', '(.*)\\((.*)\\)', 'testParser[27](com.akiban.sql.parser.SQLParserTest)')",[23435]
"('Description.java', 'org.junit.runner.Description', 'getClassName', '(.*)\\((.*)\\)', 'testParser[58](com.akiban.sql.parser.SQLParserTest)')",[24985]
"('RegexFilenameFilter.java', 'com.akiban.sql.RegexFilenameFilter', 'accept', '.*\\.sql', 'fetch-2.sql')","[1080, 15210]"
"('RegexFilenameFilter.java', 'com.akiban.sql.RegexFilenameFilter', 'accept', '.*\\.sql', 'select-mysql-2.sql')",[10665]
"('Description.java', 'org.junit.runner.Description', 'getClassName', '(.*)\\((.*)\\)', 'testUnparser[20](com.akiban.sql.unparser.NodeToStringTest)')",[31499]
"('RegexFilenameFilter.java', 'com.akiban.sql.RegexFilenameFilter', 'accept', '.*\\.sql', 'alter-group-add-2b.expected')",[990]
"('Description.java', 'org.junit.runner.Description', 'parseMethod', '(.*)\\((.*)\\)', 'testParser[103](com.akiban.sql.parser.SQLParserTest)')",[27210]
"('RegexFilenameFilter.java', 'com.akiban.sql.RegexFilenameFilter', 'accept', '.*\\.sql', 'insert-2.sql')","[7785, 17820]"
"('Description.java', 'org.junit.runner.Description', 'getClassName', '(.*)\\((.*)\\)', '[162]')","[34599, 34686]"
"('Description.java', 'org.junit.runner.Description', 'getClassName', '(.*)\\((.*)\\)', 'testParser[34](com.akiban.sql.parser.SQLParserTest)')",[23785]
"('Description.java', 'org.junit.runner.Description', 'getClassName', '(.*)\\((.*)\\)', '[9]')","[35554, 35603]"
"('Description.java', 'org.junit.runner.Description', 'parseMethod', '(.*)\\((.*)\\)', 'testNormalizer[1](com.akiban.sql.compiler.BooleanNormalizerTest)')",[33924]
"('RegexFilenameFilter.java', 'com.akiban.sql.RegexFilenameFilter', 'accept', '.*\\.sql', 'rename-table-2.sql')",[19800]
"('Description.java', 'org.junit.runner.Description', 'parseMethod', '(.*)\\((.*)\\)', 'testParser[52](com.akiban.sql.parser.SQLParserTest)')",[24660]
"('RegexFilenameFilter.java', 'com.akiban.sql.RegexFilenameFilter', 'accept', '.*\\.sql', 'select-11.sql')",[20025]
"('RegexFilenameFilter.java', 'com.akiban.sql.RegexFilenameFilter', 'accept', '.*\\.sql', 'alter-table-add-column-6.sql')",[6030]
"('RegexFilenameFilter.java', 'com.akiban.sql.RegexFilenameFilter', 'accept', '.*\\.sql', 'select-4.expected')","[2835, 15795, 21105]"
"('Description.java', 'org.junit.runner.Description', 'parseMethod', '(.*)\\((.*)\\)', 'testUnparser[17](com.akiban.sql.unparser.NodeToStringTest)')",[31324]
"('RegexFilenameFilter.java', 'com.akiban.sql.RegexFilenameFilter', 'accept', '.*\\.sql', 'create-schema-1.sql')",[10800]
"('Description.java', 'org.junit.runner.Description', 'parseMethod', '(.*)\\((.*)\\)', 'testParser[15](com.akiban.sql.parser.SQLParserTest)')",[22810]
"('Description.java', 'org.junit.runner.Description', 'parseMethod', '(.*)\\((.*)\\)', 'testWithBoolOp1(com.akiban.sql.parser.RowCtorTest)')",[30209]
"('RegexFilenameFilter.java', 'com.akiban.sql.RegexFilenameFilter', 'accept', '.*\\.sql', 'drop-schema-error.sql')",[3375]
"('RegexFilenameFilter.java', 'com.akiban.sql.RegexFilenameFilter', 'accept', '.*\\.sql', 'copy-5.expected')","[13365, 19665]"
"('Description.java', 'org.junit.runner.Description', 'getClassName', '(.*)\\((.*)\\)', 'testParser[74](com.akiban.sql.parser.SQLParserTest)')",[25785]
"('Description.java', 'org.junit.runner.Description', 'parseMethod', '(.*)\\((.*)\\)', 'testRead(com.akiban.sql.parser.StringCharStreamTest)')",[22011]
"('Description.java', 'org.junit.runner.Description', 'getClassName', '(.*)\\((.*)\\)', 'testParser[108](com.akiban.sql.parser.SQLParserTest)')",[27485]
"('RegexFilenameFilter.java', 'com.akiban.sql.RegexFilenameFilter', 'accept', '.*\\.sql', 'select-11.expected')",[16155]
"('RegexFilenameFilter.java', 'com.akiban.sql.RegexFilenameFilter', 'accept', '.*\\.sql', 'alter-server-set-2.sql')",[2340]
"('Description.java', 'org.junit.runner.Description', 'parseMethod', '(.*)\\((.*)\\)', 'testParser[66](com.akiban.sql.parser.SQLParserTest)')",[25360]
"('RegexFilenameFilter.java', 'com.akiban.sql.RegexFilenameFilter', 'accept', '.*\\.sql', 'insert-1m.sql')",[4680]
"('RegexFilenameFilter.java', 'com.akiban.sql.RegexFilenameFilter', 'accept', '.*\\.sql', 'mysql-1.sql')",[180]
"('Description.java', 'org.junit.runner.Description', 'getClassName', '(.*)\\((.*)\\)', 'testParser[3](com.akiban.sql.parser.SQLParserTest)')",[22235]
"('RegexFilenameFilter.java', 'com.akiban.sql.RegexFilenameFilter', 'accept', '.*\\.sql', 'create-table-add-index-2.sql')","[6750, 17280]"
"('Description.java', 'org.junit.runner.Description', 'parseMethod', '(.*)\\((.*)\\)', 'testParser[74](com.akiban.sql.parser.SQLParserTest)')",[25760]
"('RegexFilenameFilter.java', 'com.akiban.sql.RegexFilenameFilter', 'accept', '.*\\.sql', 'insert-sequence-1.sql')",[6255]
"('RegexFilenameFilter.java', 'com.akiban.sql.RegexFilenameFilter', 'accept', '.*\\.sql', 'select-limit-5.sql')",[5805]
"('Description.java', 'org.junit.runner.Description', 'getClassName', '(.*)\\((.*)\\)', 'testUnparser[48](com.akiban.sql.unparser.NodeToStringTest)')",[32899]
"('Description.java', 'org.junit.runner.Description', 'getClassName', '(.*)\\((.*)\\)', 'testUnparser[23](com.akiban.sql.unparser.NodeToStringTest)')",[31649]
"('RegexFilenameFilter.java', 'com.akiban.sql.RegexFilenameFilter', 'accept', '.*\\.sql', 'explain-2.sql')",[18945]
"('Description.java', 'org.junit.runner.Description', 'getClassName', '(.*)\\((.*)\\)', 'testParser[19](com.akiban.sql.parser.SQLParserTest)')",[23035]
"('Description.java', 'org.junit.runner.Description', 'getClassName', '(.*)\\((.*)\\)', 'testParser[70](com.akiban.sql.parser.SQLParserTest)')",[25585]
"('Description.java', 'org.junit.runner.Description', 'getClassName', '(.*)\\((.*)\\)', 'testUnparser[24](com.akiban.sql.unparser.NodeToStringTest)')",[31699]
"('Description.java', 'org.junit.runner.Description', 'parseMethod', '(.*)\\((.*)\\)', 'testParser[12](com.akiban.sql.parser.SQLParserTest)')",[22660]
"('RegexFilenameFilter.java', 'com.akiban.sql.RegexFilenameFilter', 'accept', '.*\\.sql', 'junk-1.error')",[2475]
"('Description.java', 'org.junit.runner.Description', 'parseMethod', '(.*)\\((.*)\\)', 'testParser[37](com.akiban.sql.parser.SQLParserTest)')",[23910]
"('Description.java', 'org.junit.runner.Description', 'parseMethod', '(.*)\\((.*)\\)', 'testParser[109](com.akiban.sql.parser.SQLParserTest)')",[27510]
"('RegexFilenameFilter.java', 'com.akiban.sql.RegexFilenameFilter', 'accept', '.*\\.sql', 'select-6i.expected')",[21600]
"('Description.java', 'org.junit.runner.Description', 'getClassName', '(.*)\\((.*)\\)', 'testParser[152](com.akiban.sql.parser.SQLParserTest)')",[29685]
"('RegexFilenameFilter.java', 'com.akiban.sql.RegexFilenameFilter', 'accept', '.*\\.sql', 'select-5.sql')","[11520, 18810, 21555]"
"('RegexFilenameFilter.java', 'com.akiban.sql.RegexFilenameFilter', 'accept', '.*\\.sql', 'create-table-error-1.expected')",[540]
"('RegexFilenameFilter.java', 'com.akiban.sql.RegexFilenameFilter', 'accept', '.*\\.sql', 'insert-order-by-1.expected')",[9180]
"('Description.java', 'org.junit.runner.Description', 'parseMethod', '(.*)\\((.*)\\)', 'testParser[6](com.akiban.sql.parser.SQLParserTest)')",[22360]
"('Description.java', 'org.junit.runner.Description', 'getClassName', '(.*)\\((.*)\\)', 'testParser[107](com.akiban.sql.parser.SQLParserTest)')",[27435]
"('Description.java', 'org.junit.runner.Description', 'getClassName', '(.*)\\((.*)\\)', 'testUnparser[52](com.akiban.sql.unparser.NodeToStringTest)')",[33099]
"('Description.java', 'org.junit.runner.Description', 'getClassName', '(.*)\\((.*)\\)', 'testUnparser[35](com.akiban.sql.unparser.NodeToStringTest)')",[32249]
"('RegexFilenameFilter.java', 'com.akiban.sql.RegexFilenameFilter', 'accept', '.*\\.sql', 'create-table-sequence-2.expected')",[9900]
"('RegexFilenameFilter.java', 'com.akiban.sql.RegexFilenameFilter', 'accept', '.*\\.sql', 'alter-group-drop-1a.expected')",[7515]
"('RegexFilenameFilter.java', 'com.akiban.sql.RegexFilenameFilter', 'accept', '.*\\.sql', 'alter-group-add-1a.sql')",[6390]
"('RegexFilenameFilter.java', 'com.akiban.sql.RegexFilenameFilter', 'accept', '.*\\.sql', 'find-depth-2.expected')",[14265]
"('RegexFilenameFilter.java', 'com.akiban.sql.RegexFilenameFilter', 'accept', '.*\\.sql', 'create-index-error.sql')",[12780]
"('RegexFilenameFilter.java', 'com.akiban.sql.RegexFilenameFilter', 'accept', '.*\\.sql', 'set-configuration-1.sql')",[19125]
"('RegexFilenameFilter.java', 'com.akiban.sql.RegexFilenameFilter', 'accept', '.*\\.sql', 'find-depth-1.sql')",[135]
"('Description.java', 'org.junit.runner.Description', 'getClassName', '(.*)\\((.*)\\)', 'testParser[139](com.akiban.sql.parser.SQLParserTest)')",[29035]
"('RegexFilenameFilter.java', 'com.akiban.sql.RegexFilenameFilter', 'accept', '.*\\.sql', 'create-table-add-index-2.expected')","[7020, 17505]"
"('Description.java', 'org.junit.runner.Description', 'parseMethod', '(.*)\\((.*)\\)', 'testUnparser[36](com.akiban.sql.unparser.NodeToStringTest)')",[32274]
"('Description.java', 'org.junit.runner.Description', 'parseMethod', '(.*)\\((.*)\\)', 'testUnparser[35](com.akiban.sql.unparser.NodeToStringTest)')",[32224]
"('Description.java', 'org.junit.runner.Description', 'getClassName', '(.*)\\((.*)\\)', 'testParser[156](com.akiban.sql.parser.SQLParserTest)')",[29885]
"('Description.java', 'org.junit.runner.Description', 'getClassName', '(.*)\\((.*)\\)', 'testParser[106](com.akiban.sql.parser.SQLParserTest)')",[27385]
"('Description.java', 'org.junit.runner.Description', 'getClassName', '(.*)\\((.*)\\)', 'testParser[18](com.akiban.sql.parser.SQLParserTest)')",[22985]
"('RegexFilenameFilter.java', 'com.akiban.sql.RegexFilenameFilter', 'accept', '.*\\.sql', 'declare-1.sql')","[5580, 16785]"
"('RegexFilenameFilter.java', 'com.akiban.sql.RegexFilenameFilter', 'accept', '.*\\.sql', 'alter-table-drop-index-1.expected')",[2025]
"('Description.java', 'org.junit.runner.Description', 'getClassName', '(.*)\\((.*)\\)', 'testUnparser[36](com.akiban.sql.unparser.NodeToStringTest)')",[32299]
"('Description.java', 'org.junit.runner.Description', 'getClassName', '(.*)\\((.*)\\)', 'testParseMultiple[7](com.akiban.sql.unparser.ParseMultipleTest)')","[33849, 35426, 35529]"
"('Description.java', 'org.junit.runner.Description', 'parseMethod', '(.*)\\((.*)\\)', 'testParser[133](com.akiban.sql.parser.SQLParserTest)')",[28710]
"('RegexFilenameFilter.java', 'com.akiban.sql.RegexFilenameFilter', 'accept', '.*\\.sql', 'insert-2c.expected')",[10395]
"('RegexFilenameFilter.java', 'com.akiban.sql.RegexFilenameFilter', 'accept', '.*\\.sql', 'mysql-1.features')",[2610]
"('Description.java', 'org.junit.runner.Description', 'getClassName', '(.*)\\((.*)\\)', 'testParser[32](com.akiban.sql.parser.SQLParserTest)')",[23685]
"('RegexFilenameFilter.java', 'com.akiban.sql.RegexFilenameFilter', 'accept', '.*\\.sql', 'alter-table-drop-4.sql')",[1755]
"('Description.java', 'org.junit.runner.Description', 'getClassName', '(.*)\\((.*)\\)', 'testParser[112](com.akiban.sql.parser.SQLParserTest)')",[27685]
"('RegexFilenameFilter.java', 'com.akiban.sql.RegexFilenameFilter', 'accept', '.*\\.sql', 'execute-1.sql')","[6570, 17235]"
"('RegexFilenameFilter.java', 'com.akiban.sql.RegexFilenameFilter', 'accept', '.*\\.sql', 'create-table-3.expected')","[14085, 20115]"
"('RegexFilenameFilter.java', 'com.akiban.sql.RegexFilenameFilter', 'accept', '.*\\.sql', 'create-procedure-3.expected')",[4590]
"('Description.java', 'org.junit.runner.Description', 'getClassName', '(.*)\\((.*)\\)', 'testParser[30](com.akiban.sql.parser.SQLParserTest)')",[23585]
"('RegexFilenameFilter.java', 'com.akiban.sql.RegexFilenameFilter', 'accept', '.*\\.sql', 'alter-table-drop-5.expected')",[13770]
"('Description.java', 'org.junit.runner.Description', 'parseMethod', '(.*)\\((.*)\\)', 'testParser[22](com.akiban.sql.parser.SQLParserTest)')",[23160]
"('Description.java', 'org.junit.runner.Description', 'parseMethod', '(.*)\\((.*)\\)', 'testParser[89](com.akiban.sql.parser.SQLParserTest)')",[26510]
"('RegexFilenameFilter.java', 'com.akiban.sql.RegexFilenameFilter', 'accept', '.*\\.sql', 'delete-returning-1.sql')",[9720]
"('Description.java', 'org.junit.runner.Description', 'getClassName', '(.*)\\((.*)\\)', 'testParser[78](com.akiban.sql.parser.SQLParserTest)')",[25985]
"('Description.java', 'org.junit.runner.Description', 'getClassName', '(.*)\\((.*)\\)', 'testNormalizer[7](com.akiban.sql.compiler.BooleanNormalizerTest)')",[34249]
"('RegexFilenameFilter.java', 'com.akiban.sql.RegexFilenameFilter', 'accept', '.*\\.sql', 'select-mysql-1.sql')",[8640]
"('Description.java', 'org.junit.runner.Description', 'parseMethod', '(.*)\\((.*)\\)', 'testParser[4](com.akiban.sql.parser.SQLParserTest)')",[22260]
"('Description.java', 'org.junit.runner.Description', 'getClassName', '(.*)\\((.*)\\)', 'testUnparser[10](com.akiban.sql.unparser.NodeToStringTest)')",[30999]
"('Description.java', 'org.junit.runner.Description', 'getClassName', '(.*)\\((.*)\\)', 'testUnparser[47](com.akiban.sql.unparser.NodeToStringTest)')",[32849]
"('Description.java', 'org.junit.runner.Description', 'getClassName', '(.*)\\((.*)\\)', 'testNormalizer[9](com.akiban.sql.compiler.BooleanNormalizerTest)')","[34349, 35578, 35627]"
"('RegexFilenameFilter.java', 'com.akiban.sql.RegexFilenameFilter', 'accept', '.*\\.sql', 'update-1.expected')","[13815, 19980]"
"('RegexFilenameFilter.java', 'com.akiban.sql.RegexFilenameFilter', 'accept', '.*\\.sql', 'insert-returning-2.expected')",[14310]
"('Description.java', 'org.junit.runner.Description', 'parseMethod', '(.*)\\((.*)\\)', 'testParser[159](com.akiban.sql.parser.SQLParserTest)')",[30010]
"('RegexFilenameFilter.java', 'com.akiban.sql.RegexFilenameFilter', 'accept', '.*\\.sql', 'drop-table-1.sql')",[12465]
"('Description.java', 'org.junit.runner.Description', 'parseMethod', '(.*)\\((.*)\\)', 'testParser[1](com.akiban.sql.parser.SQLParserTest)')",[22110]
"('RegexFilenameFilter.java', 'com.akiban.sql.RegexFilenameFilter', 'accept', '.*\\.sql', 'create-index-4.sql')",[7965]
"('Description.java', 'org.junit.runner.Description', 'getClassName', '(.*)\\((.*)\\)', 'testParser[145](com.akiban.sql.parser.SQLParserTest)')",[29335]
"('Description.java', 'org.junit.runner.Description', 'parseMethod', '(.*)\\((.*)\\)', 'testUnparser[13](com.akiban.sql.unparser.NodeToStringTest)')",[31124]
"('Description.java', 'org.junit.runner.Description', 'parseMethod', '(.*)\\((.*)\\)', 'testUnparser[2](com.akiban.sql.unparser.NodeToStringTest)')",[30574]
"('Description.java', 'org.junit.runner.Description', 'getClassName', '(.*)\\((.*)\\)', 'testParser[25](com.akiban.sql.parser.SQLParserTest)')",[23335]
"('Description.java', 'org.junit.runner.Description', 'getClassName', '(.*)\\((.*)\\)', 'testParser[116](com.akiban.sql.parser.SQLParserTest)')",[27885]
"('Description.java', 'org.junit.runner.Description', 'getClassName', '(.*)\\((.*)\\)', 'testParser[151](com.akiban.sql.parser.SQLParserTest)')",[29635]
"('Description.java', 'org.junit.runner.Description', 'getClassName', '(.*)\\((.*)\\)', 'testUnparser[16](com.akiban.sql.unparser.NodeToStringTest)')",[31299]
"('RegexFilenameFilter.java', 'com.akiban.sql.RegexFilenameFilter', 'accept', '.*\\.sql', 'insert-order-by-1.sql')",[9360]
"('Description.java', 'org.junit.runner.Description', 'parseMethod', '(.*)\\((.*)\\)', 'testParser[47](com.akiban.sql.parser.SQLParserTest)')",[24410]
"('RegexFilenameFilter.java', 'com.akiban.sql.RegexFilenameFilter', 'accept', '.*\\.sql', 'create-geo-index-5.expected')",[18180]
"('Description.java', 'org.junit.runner.Description', 'parseMethod', '(.*)\\((.*)\\)', 'testParser[50](com.akiban.sql.parser.SQLParserTest)')",[24560]
"('RegexFilenameFilter.java', 'com.akiban.sql.RegexFilenameFilter', 'accept', '.*\\.sql', 'fetch-3.expected')","[2160, 15570]"
"('Description.java', 'org.junit.runner.Description', 'parseMethod', '(.*)\\((.*)\\)', 'testUnparser[56](com.akiban.sql.unparser.NodeToStringTest)')",[33274]
"('RegexFilenameFilter.java', 'com.akiban.sql.RegexFilenameFilter', 'accept', '.*\\.sql', 'multiple-3.sql')",[20340]
"('Description.java', 'org.junit.runner.Description', 'parseMethod', '(.*)\\((.*)\\)', 'testUnparser[23](com.akiban.sql.unparser.NodeToStringTest)')",[31624]
"('RegexFilenameFilter.java', 'com.akiban.sql.RegexFilenameFilter', 'accept', '.*\\.sql', 'delete-returning-1.expected')",[9045]
"('Description.java', 'org.junit.runner.Description', 'parseMethod', '(.*)\\((.*)\\)', 'testUnparser[59](com.akiban.sql.unparser.NodeToStringTest)')",[33424]
"('Description.java', 'org.junit.runner.Description', 'parseMethod', '(.*)\\((.*)\\)', 'testUnparser[27](com.akiban.sql.unparser.NodeToStringTest)')",[31824]
"('Description.java', 'org.junit.runner.Description', 'getClassName', '(.*)\\((.*)\\)', 'testParser[79](com.akiban.sql.parser.SQLParserTest)')",[26035]
"('Description.java', 'org.junit.runner.Description', 'parseMethod', '(.*)\\((.*)\\)', 'testParser[68](com.akiban.sql.parser.SQLParserTest)')",[25460]
"('RegexFilenameFilter.java', 'com.akiban.sql.RegexFilenameFilter', 'accept', '.*\\.sql', 'drop-sequence-1.sql')",[4095]
"('RegexFilenameFilter.java', 'com.akiban.sql.RegexFilenameFilter', 'accept', '.*\\.sql', 'group-2.sql')",[20610]
"('Description.java', 'org.junit.runner.Description', 'getClassName', '(.*)\\((.*)\\)', 'testParser[98](com.akiban.sql.parser.SQLParserTest)')",[26985]
"('Description.java', 'org.junit.runner.Description', 'parseMethod', '(.*)\\((.*)\\)', 'testUnparser[1](com.akiban.sql.unparser.NodeToStringTest)')",[30524]
"('RegexFilenameFilter.java', 'com.akiban.sql.RegexFilenameFilter', 'accept', '.*\\.sql', 'drop-index-1.expected')",[4230]
"('Description.java', 'org.junit.runner.Description', 'parseMethod', '(.*)\\((.*)\\)', 'testUnparser[9](com.akiban.sql.unparser.NodeToStringTest)')",[30924]
"('RegexFilenameFilter.java', 'com.akiban.sql.RegexFilenameFilter', 'accept', '.*\\.sql', 'update-1.sql')","[5310, 16605]"
"('RegexFilenameFilter.java', 'com.akiban.sql.RegexFilenameFilter', 'accept', '.*\\.sql', 'select-13.expected')",[16335]
"('Description.java', 'org.junit.runner.Description', 'parseMethod', '(.*)\\((.*)\\)', 'testParser[108](com.akiban.sql.parser.SQLParserTest)')",[27460]
"('RegexFilenameFilter.java', 'com.akiban.sql.RegexFilenameFilter', 'accept', '.*\\.sql', 'create-index-5.expected')",[7290]
"('RegexFilenameFilter.java', 'com.akiban.sql.RegexFilenameFilter', 'accept', '.*\\.sql', 'alter-table-add-column-4.sql')",[765]
"('Description.java', 'org.junit.runner.Description', 'parseMethod', '(.*)\\((.*)\\)', 'testParser[46](com.akiban.sql.parser.SQLParserTest)')",[24360]
"('Description.java', 'org.junit.runner.Description', 'getClassName', '(.*)\\((.*)\\)', 'testParser[135](com.akiban.sql.parser.SQLParserTest)')",[28835]
"('RegexFilenameFilter.java', 'com.akiban.sql.RegexFilenameFilter', 'accept', '.*\\.sql', 'select-1.sql')","[5985, 16965, 21240]"
"('Description.java', 'org.junit.runner.Description', 'parseMethod', '(.*)\\((.*)\\)', 'testParser[157](com.akiban.sql.parser.SQLParserTest)')",[29910]
"('Description.java', 'org.junit.runner.Description', 'getClassName', '(.*)\\((.*)\\)', 'testParser[80](com.akiban.sql.parser.SQLParserTest)')",[26085]
"('RegexFilenameFilter.java', 'com.akiban.sql.RegexFilenameFilter', 'accept', '.*\\.sql', 'create-table-6.sql')",[6210]
"('Description.java', 'org.junit.runner.Description', 'parseMethod', '(.*)\\((.*)\\)', 'testParser[58](com.akiban.sql.parser.SQLParserTest)')",[24960]
"('RegexFilenameFilter.java', 'com.akiban.sql.RegexFilenameFilter', 'accept', '.*\\.sql', 'set-configuration-1.expected')",[14985]
"('RegexFilenameFilter.java', 'com.akiban.sql.RegexFilenameFilter', 'accept', '.*\\.sql', 'create-table-4.sql')","[450, 15030]"
"('RegexFilenameFilter.java', 'com.akiban.sql.RegexFilenameFilter', 'accept', '.*\\.sql', 'transactions-2.expected')",[21015]
"('Description.java', 'org.junit.runner.Description', 'getClassName', '(.*)\\((.*)\\)', 'testParser[64](com.akiban.sql.parser.SQLParserTest)')",[25285]
"('Description.java', 'org.junit.runner.Description', 'parseMethod', '(.*)\\((.*)\\)', 'testParser[21](com.akiban.sql.parser.SQLParserTest)')",[23110]
"('Description.java', 'org.junit.runner.Description', 'getClassName', '(.*)\\((.*)\\)', 'testParseMultiple[5](com.akiban.sql.unparser.ParseMultipleTest)')",[33749]
"('RegexFilenameFilter.java', 'com.akiban.sql.RegexFilenameFilter', 'accept', '.*\\.sql', 'copy-2.expected')",[1980]
"('Description.java', 'org.junit.runner.Description', 'parseMethod', '(.*)\\((.*)\\)', 'testParser[8](com.akiban.sql.parser.SQLParserTest)')",[22460]
"('Description.java', 'org.junit.runner.Description', 'parseMethod', '(.*)\\((.*)\\)', 'testParser[34](com.akiban.sql.parser.SQLParserTest)')",[23760]
"('Description.java', 'org.junit.runner.Description', 'parseMethod', '(.*)\\((.*)\\)', 'testUnparser[44](com.akiban.sql.unparser.NodeToStringTest)')",[32674]
"('RegexFilenameFilter.java', 'com.akiban.sql.RegexFilenameFilter', 'accept', '.*\\.sql', 'create-table-5.expected')",[315]
"('Description.java', 'org.junit.runner.Description', 'getClassName', '(.*)\\((.*)\\)', 'testParser[21](com.akiban.sql.parser.SQLParserTest)')",[23135]
"('RegexFilenameFilter.java', 'com.akiban.sql.RegexFilenameFilter', 'accept', '.*\\.sql', 'delete-returning-2.expected')",[6345]
"('RegexFilenameFilter.java', 'com.akiban.sql.RegexFilenameFilter', 'accept', '.*\\.sql', 'alter-table-constraint-2.sql')",[10575]
"('Description.java', 'org.junit.runner.Description', 'getClassName', '(.*)\\((.*)\\)', 'testParser[85](com.akiban.sql.parser.SQLParserTest)')",[26335]
"('Description.java', 'org.junit.runner.Description', 'parseMethod', '(.*)\\((.*)\\)', 'testParser[7](com.akiban.sql.parser.SQLParserTest)')",[22410]
"('RegexFilenameFilter.java', 'com.akiban.sql.RegexFilenameFilter', 'accept', '.*\\.sql', 'select-limit-5.expected')",[5175]
"('RegexFilenameFilter.java', 'com.akiban.sql.RegexFilenameFilter', 'accept', '.*\\.sql', 'select-sequence-1.sql')",[8505]
"('RegexFilenameFilter.java', 'com.akiban.sql.RegexFilenameFilter', 'accept', '.*\\.sql', 'parameters-1.sql')",[20970]
"('Description.java', 'org.junit.runner.Description', 'getClassName', '(.*)\\((.*)\\)', 'testParser[99](com.akiban.sql.parser.SQLParserTest)')",[27035]
"('RegexFilenameFilter.java', 'com.akiban.sql.RegexFilenameFilter', 'accept', '.*\\.sql', 'copy-6.sql')",[17685]
"('RegexFilenameFilter.java', 'com.akiban.sql.RegexFilenameFilter', 'accept', '.*\\.sql', 'create-index-3.sql')",[630]
"('Description.java', 'org.junit.runner.Description', 'getClassName', '(.*)\\((.*)\\)', 'testParser[103](com.akiban.sql.parser.SQLParserTest)')",[27235]
"('Description.java', 'org.junit.runner.Description', 'getClassName', '(.*)\\((.*)\\)', 'testParser[15](com.akiban.sql.parser.SQLParserTest)')",[22835]
"('Description.java', 'org.junit.runner.Description', 'getClassName', '(.*)\\((.*)\\)', 'testParser[77](com.akiban.sql.parser.SQLParserTest)')",[25935]
"('Description.java', 'org.junit.runner.Description', 'getClassName', '(.*)\\((.*)\\)', 'testWithBoolOp1(com.akiban.sql.parser.RowCtorTest)')",[30233]
"('RegexFilenameFilter.java', 'com.akiban.sql.RegexFilenameFilter', 'accept', '.*\\.sql', 'alter-table-constraint-3.expected')",[6480]
"('Description.java', 'org.junit.runner.Description', 'getClassName', '(.*)\\((.*)\\)', 'testParser[122](com.akiban.sql.parser.SQLParserTest)')",[28185]
"('Description.java', 'org.junit.runner.Description', 'parseMethod', '(.*)\\((.*)\\)', 'testParser[19](com.akiban.sql.parser.SQLParserTest)')",[23010]
"('Description.java', 'org.junit.runner.Description', 'getClassName', '(.*)\\((.*)\\)', 'testParser[71](com.akiban.sql.parser.SQLParserTest)')",[25635]
"('Description.java', 'org.junit.runner.Description', 'parseMethod', '(.*)\\((.*)\\)', 'testParser[125](com.akiban.sql.parser.SQLParserTest)')",[28310]
"('Description.java', 'org.junit.runner.Description', 'parseMethod', '(.*)\\((.*)\\)', 'testParser[145](com.akiban.sql.parser.SQLParserTest)')",[29310]
"('RegexFilenameFilter.java', 'com.akiban.sql.RegexFilenameFilter', 'accept', '.*\\.sql', 'multiple-1.expected')",[20430]
"('RegexFilenameFilter.java', 'com.akiban.sql.RegexFilenameFilter', 'accept', '.*\\.sql', 'create-procedure-1.sql')","[1620, 15435]"
"('RegexFilenameFilter.java', 'com.akiban.sql.RegexFilenameFilter', 'accept', '.*\\.sql', 'create-view-1.sql')","[6165, 17055]"
"('Description.java', 'org.junit.runner.Description', 'getClassName', '(.*)\\((.*)\\)', 'testUnparser[40](com.akiban.sql.unparser.NodeToStringTest)')",[32499]
"('Description.java', 'org.junit.runner.Description', 'parseMethod', '(.*)\\((.*)\\)', 'testUnparser[22](com.akiban.sql.unparser.NodeToStringTest)')",[31574]
"('RegexFilenameFilter.java', 'com.akiban.sql.RegexFilenameFilter', 'accept', '.*\\.sql', 'alter-table-drop-6.sql')",[4050]
"('Description.java', 'org.junit.runner.Description', 'getClassName', '(.*)\\((.*)\\)', 'testParser[2](com.akiban.sql.parser.SQLParserTest)')",[22185]
"('Description.java', 'org.junit.runner.Description', 'getClassName', '(.*)\\((.*)\\)', 'testUnparser[3](com.akiban.sql.unparser.NodeToStringTest)')",[30649]
"('RegexFilenameFilter.java', 'com.akiban.sql.RegexFilenameFilter', 'accept', '.*\\.sql', 'create-schema-error.error')",[6300]
"('RegexFilenameFilter.java', 'com.akiban.sql.RegexFilenameFilter', 'accept', '.*\\.sql', 'mysql-4.sql')",[3555]
"('Description.java', 'org.junit.runner.Description', 'parseMethod', '(.*)\\((.*)\\)', 'testParser[115](com.akiban.sql.parser.SQLParserTest)')",[27810]
"('RegexFilenameFilter.java', 'com.akiban.sql.RegexFilenameFilter', 'accept', '.*\\.sql', 'create-index-1g.expected')",[19935]
"('RegexFilenameFilter.java', 'com.akiban.sql.RegexFilenameFilter', 'accept', '.*\\.sql', 'insert-sequence-1.expected')",[13905]
"('RegexFilenameFilter.java', 'com.akiban.sql.RegexFilenameFilter', 'accept', '.*\\.sql', 'insert-returning-4.sql')",[13680]
"('RegexFilenameFilter.java', 'com.akiban.sql.RegexFilenameFilter', 'accept', '.*\\.sql', 'create-table-3u.sql')",[18405]
"('Description.java', 'org.junit.runner.Description', 'getClassName', '(.*)\\((.*)\\)', 'testUnparser[50](com.akiban.sql.unparser.NodeToStringTest)')",[32999]
"('RegexFilenameFilter.java', 'com.akiban.sql.RegexFilenameFilter', 'accept', '.*\\.sql', 'create-index-7.sql')",[3195]
"('Description.java', 'org.junit.runner.Description', 'getClassName', '(.*)\\((.*)\\)', 'testParser[59](com.akiban.sql.parser.SQLParserTest)')",[25035]
"('RegexFilenameFilter.java', 'com.akiban.sql.RegexFilenameFilter', 'accept', '.*\\.sql', 'select-limit-4.expected')",[8595]
"('Description.java', 'org.junit.runner.Description', 'getClassName', '(.*)\\((.*)\\)', 'testUnparser[45](com.akiban.sql.unparser.NodeToStringTest)')",[32749]
"('Description.java', 'org.junit.runner.Description', 'parseMethod', '(.*)\\((.*)\\)', 'testParser[10](com.akiban.sql.parser.SQLParserTest)')",[22560]
"('Description.java', 'org.junit.runner.Description', 'parseMethod', '(.*)\\((.*)\\)', 'testParser[44](com.akiban.sql.parser.SQLParserTest)')",[24260]
"('Description.java', 'org.junit.runner.Description', 'parseMethod', '(.*)\\((.*)\\)', 'testUnparser[6](com.akiban.sql.unparser.NodeToStringTest)')",[30774]
"('Description.java', 'org.junit.runner.Description', 'getClassName', '(.*)\\((.*)\\)', 'testUnparser[8](com.akiban.sql.unparser.NodeToStringTest)')",[30899]
"('RegexFilenameFilter.java', 'com.akiban.sql.RegexFilenameFilter', 'accept', '.*\\.sql', 'rename-index-1.expected')","[3465, 15975]"
"('Description.java', 'org.junit.runner.Description', 'parseMethod', '(.*)\\((.*)\\)', 'testUnparser[49](com.akiban.sql.unparser.NodeToStringTest)')",[32924]
"('Description.java', 'org.junit.runner.Description', 'parseMethod', '(.*)\\((.*)\\)', 'testParser[72](com.akiban.sql.parser.SQLParserTest)')",[25660]
"('Description.java', 'org.junit.runner.Description', 'parseMethod', '(.*)\\((.*)\\)', 'testParser[82](com.akiban.sql.parser.SQLParserTest)')",[26160]
"('Description.java', 'org.junit.runner.Description', 'parseMethod', '(.*)\\((.*)\\)', 'testParser[124](com.akiban.sql.parser.SQLParserTest)')",[28260]
"('Description.java', 'org.junit.runner.Description', 'parseMethod', '(.*)\\((.*)\\)', 'testNormalizer[5](com.akiban.sql.compiler.BooleanNormalizerTest)')",[34124]
"('Description.java', 'org.junit.runner.Description', 'parseMethod', '(.*)\\((.*)\\)', 'testParser[33](com.akiban.sql.parser.SQLParserTest)')",[23710]
"('RegexFilenameFilter.java', 'com.akiban.sql.RegexFilenameFilter', 'accept', '.*\\.sql', 'alter-group-add-2a.sql')",[3690]
"('Description.java', 'org.junit.runner.Description', 'getClassName', '(.*)\\((.*)\\)', '[59]')","[35169, 35272]"
"('RegexFilenameFilter.java', 'com.akiban.sql.RegexFilenameFilter', 'accept', '.*\\.sql', 'rename-index-2.sql')",[855]
"('Description.java', 'org.junit.runner.Description', 'getClassName', '(.*)\\((.*)\\)', 'testUnparser[57](com.akiban.sql.unparser.NodeToStringTest)')",[33349]
"('RegexFilenameFilter.java', 'com.akiban.sql.RegexFilenameFilter', 'accept', '.*\\.sql', 'drop-table-3.expected')",[13455]
"('RegexFilenameFilter.java', 'com.akiban.sql.RegexFilenameFilter', 'accept', '.*\\.sql', 'create-geo-index-4.expected')",[17145]
"('RegexFilenameFilter.java', 'com.akiban.sql.RegexFilenameFilter', 'accept', '.*\\.sql', 'alter-table-update-2.sql')",[11565]
"('RegexFilenameFilter.java', 'com.akiban.sql.RegexFilenameFilter', 'accept', '.*\\.sql', 'drop-schema-1.expected')",[4365]
"('Description.java', 'org.junit.runner.Description', 'parseMethod', '(.*)\\((.*)\\)', 'testUnparser[21](com.akiban.sql.unparser.NodeToStringTest)')",[31524]
"('RegexFilenameFilter.java', 'com.akiban.sql.RegexFilenameFilter', 'accept', '.*\\.sql', 'insert-returning-5.sql')",[2565]
"('Description.java', 'org.junit.runner.Description', 'parseMethod', '(.*)\\((.*)\\)', 'testUnparser[34](com.akiban.sql.unparser.NodeToStringTest)')",[32174]
"('RegexFilenameFilter.java', 'com.akiban.sql.RegexFilenameFilter', 'accept', '.*\\.sql', 'create-table-add-index-1.sql')","[13230, 19485]"
"('Description.java', 'org.junit.runner.Description', 'getClassName', '(.*)\\((.*)\\)', 'testParser[146](com.akiban.sql.parser.SQLParserTest)')",[29385]
"('Description.java', 'org.junit.runner.Description', 'getClassName', '(.*)\\((.*)\\)', 'testParser[133](com.akiban.sql.parser.SQLParserTest)')",[28735]
"('RegexFilenameFilter.java', 'com.akiban.sql.RegexFilenameFilter', 'accept', '.*\\.sql', 'select-mysql-3.sql')",[8910]
"('RegexFilenameFilter.java', 'com.akiban.sql.RegexFilenameFilter', 'accept', '.*\\.sql', 'delete-returning-2.sql')",[6615]
"('Description.java', 'org.junit.runner.Description', 'getClassName', '(.*)\\((.*)\\)', 'testParser[90](com.akiban.sql.parser.SQLParserTest)')",[26585]
"('RegexFilenameFilter.java', 'com.akiban.sql.RegexFilenameFilter', 'accept', '.*\\.sql', 'explain-1.expected')","[720, 15165]"
"('Description.java', 'org.junit.runner.Description', 'getClassName', '(.*)\\((.*)\\)', 'testUnparser[34](com.akiban.sql.unparser.NodeToStringTest)')",[32199]
"('RegexFilenameFilter.java', 'com.akiban.sql.RegexFilenameFilter', 'accept', '.*\\.sql', 'alter-table-add-column-7.error')",[7650]
"('RegexFilenameFilter.java', 'com.akiban.sql.RegexFilenameFilter', 'accept', '.*\\.sql', 'rename-1.expected')",[14805]
"('RegexFilenameFilter.java', 'com.akiban.sql.RegexFilenameFilter', 'accept', '.*\\.sql', 'create-sequence-1.sql')",[495]
"('Description.java', 'org.junit.runner.Description', 'getClassName', '(.*)\\((.*)\\)', 'testParser[60](com.akiban.sql.parser.SQLParserTest)')",[25085]
"('RegexFilenameFilter.java', 'com.akiban.sql.RegexFilenameFilter', 'accept', '.*\\.sql', 'find-depth-1.expected')",[11700]
"('RegexFilenameFilter.java', 'com.akiban.sql.RegexFilenameFilter', 'accept', '.*\\.sql', 'select-order-by-1.expected')",[9135]
"('RegexFilenameFilter.java', 'com.akiban.sql.RegexFilenameFilter', 'accept', '.*\\.sql', 'alter-table-add-geo-index-1.sql')",[8055]
"('RegexFilenameFilter.java', 'com.akiban.sql.RegexFilenameFilter', 'accept', '.*\\.sql', 'select-12.sql')",[19170]
"('RegexFilenameFilter.java', 'com.akiban.sql.RegexFilenameFilter', 'accept', '.*\\.sql', 'set-schema-1.expected')",[9315]
"('RegexFilenameFilter.java', 'com.akiban.sql.RegexFilenameFilter', 'accept', '.*\\.sql', 'alter-table-2.error')",[900]
"('RegexFilenameFilter.java', 'com.akiban.sql.RegexFilenameFilter', 'accept', '.*\\.sql', 'alter-table-drop-2.sql')",[7425]
"('Description.java', 'org.junit.runner.Description', 'parseMethod', '(.*)\\((.*)\\)', 'testParser[139](com.akiban.sql.parser.SQLParserTest)')",[29010]
"('Description.java', 'org.junit.runner.Description', 'parseMethod', '(.*)\\((.*)\\)', 'testParser[104](com.akiban.sql.parser.SQLParserTest)')",[27260]
"('RegexFilenameFilter.java', 'com.akiban.sql.RegexFilenameFilter', 'accept', '.*\\.sql', 'select-7.sql')","[19755, 21780]"
