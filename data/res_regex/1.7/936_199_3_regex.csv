"('Description.java', 'org.junit.runner.Description', 'methodAndClassNamePatternGroupOrDefault', '(.*)\\((.*)\\)', 'testWithOutOfRange(com.sirma.itt.javacourse.exceptions.readnumbers.ReadNumbersTest)')","[181, 914]"
"('Description.java', 'org.junit.runner.Description', 'methodAndClassNamePatternGroupOrDefault', '(.*)\\((.*)\\)', 'testDifferentBigDecimal(com.sirma.itt.javacourse.objects.sumator.SumatorTest)')","[578, 1292]"
"('Description.java', 'org.junit.runner.Description', 'methodAndClassNamePatternGroupOrDefault', '(.*)\\((.*)\\)', 'testGreatBigIntegers(com.sirma.itt.javacourse.objects.sumator.SumatorTest)')","[620, 1334]"
"('Description.java', 'org.junit.runner.Description', 'methodAndClassNamePatternGroupOrDefault', '(.*)\\((.*)\\)', 'testCorrectIntegers(com.sirma.itt.javacourse.exceptions.readnumbers.ReadNumbersTest)')","[202, 935]"
"('Description.java', 'org.junit.runner.Description', 'methodAndClassNamePatternGroupOrDefault', '(.*)\\((.*)\\)', 'testBigDecimalSpecialTransfer(com.sirma.itt.javacourse.objects.sumator.SumatorTest)')","[683, 1397]"
"('Description.java', 'org.junit.runner.Description', 'methodAndClassNamePatternGroupOrDefault', '(.*)\\((.*)\\)', 'testOtherFloatPoint(com.sirma.itt.javacourse.objects.sumator.SumatorTest)')","[494, 1208]"
"('Description.java', 'org.junit.runner.Description', 'methodAndClassNamePatternGroupOrDefault', '(.*)\\((.*)\\)', 'com.sirma.itt.javacourse.exceptions.listofelements.ListTest')","[36, 1528]"
"('Description.java', 'org.junit.runner.Description', 'methodAndClassNamePatternGroupOrDefault', '(.*)\\((.*)\\)', 'com.sirma.itt.javacourse.objects.sumator.SumatorTest')","[326, 1576]"
"('Description.java', 'org.junit.runner.Description', 'methodAndClassNamePatternGroupOrDefault', '(.*)\\((.*)\\)', 'testBigIntAndZero(com.sirma.itt.javacourse.objects.sumator.SumatorTest)')","[746, 1460]"
"('Description.java', 'org.junit.runner.Description', 'methodAndClassNamePatternGroupOrDefault', '(.*)\\((.*)\\)', 'testWithSpace(com.sirma.itt.javacourse.exceptions.readnumbers.ReadNumbersTest)')","[286, 1019]"
"('Description.java', 'org.junit.runner.Description', 'methodAndClassNamePatternGroupOrDefault', '(.*)\\((.*)\\)', 'testIntInBigDecimal(com.sirma.itt.javacourse.objects.sumator.SumatorTest)')","[767, 1481]"
"('Description.java', 'org.junit.runner.Description', 'methodAndClassNamePatternGroupOrDefault', '(.*)\\((.*)\\)', 'testSpecialBigDecimal(com.sirma.itt.javacourse.objects.sumator.SumatorTest)')","[641, 1355]"
"('Description.java', 'org.junit.runner.Description', 'methodAndClassNamePatternGroupOrDefault', '(.*)\\((.*)\\)', 'null')",[17]
"('Description.java', 'org.junit.runner.Description', 'methodAndClassNamePatternGroupOrDefault', '(.*)\\((.*)\\)', 'testBigIntegerInString(com.sirma.itt.javacourse.objects.sumator.SumatorTest)')","[473, 1187]"
"('Description.java', 'org.junit.runner.Description', 'methodAndClassNamePatternGroupOrDefault', '(.*)\\((.*)\\)', 'testEmptyStrings(com.sirma.itt.javacourse.objects.sumator.SumatorTest)')","[536, 1250]"
"('Description.java', 'org.junit.runner.Description', 'methodAndClassNamePatternGroupOrDefault', '(.*)\\((.*)\\)', 'testNegativeSizeList(com.sirma.itt.javacourse.exceptions.listofelements.ListTest)')","[99, 851]"
"('Description.java', 'org.junit.runner.Description', 'methodAndClassNamePatternGroupOrDefault', '(.*)\\((.*)\\)', 'testNull(com.sirma.itt.javacourse.objects.sumator.SumatorTest)')","[515, 1229]"
"('Description.java', 'org.junit.runner.Description', 'methodAndClassNamePatternGroupOrDefault', '(.*)\\((.*)\\)', 'testIllegalLetter1(com.sirma.itt.javacourse.objects.sumator.SumatorTest)')","[389, 1103]"
"('Description.java', 'org.junit.runner.Description', 'methodAndClassNamePatternGroupOrDefault', '(.*)\\((.*)\\)', 'testSumIntegers(com.sirma.itt.javacourse.objects.sumator.SumatorTest)')","[431, 1145]"
"('Description.java', 'org.junit.runner.Description', 'methodAndClassNamePatternGroupOrDefault', '(.*)\\((.*)\\)', 'testLargeBigDecimal(com.sirma.itt.javacourse.objects.sumator.SumatorTest)')","[599, 1313]"
"('Description.java', 'org.junit.runner.Description', 'methodAndClassNamePatternGroupOrDefault', '(.*)\\((.*)\\)', 'testAdd2(com.sirma.itt.javacourse.exceptions.listofelements.ListTest)')","[78, 830]"
"('Description.java', 'org.junit.runner.Description', 'methodAndClassNamePatternGroupOrDefault', '(.*)\\((.*)\\)', 'com.sirma.itt.javacourse.exceptions.readnumbers.ReadNumbersTest')","[139, 1554]"
"('Description.java', 'org.junit.runner.Description', 'methodAndClassNamePatternGroupOrDefault', '(.*)\\((.*)\\)', 'testBigInteger(com.sirma.itt.javacourse.objects.sumator.SumatorTest)')","[557, 1271]"
"('Description.java', 'org.junit.runner.Description', 'methodAndClassNamePatternGroupOrDefault', '(.*)\\((.*)\\)', 'testEmptyArray(com.sirma.itt.javacourse.exceptions.readnumbers.ReadNumbersTest)')","[160, 893]"
"('Description.java', 'org.junit.runner.Description', 'methodAndClassNamePatternGroupOrDefault', '(.*)\\((.*)\\)', 'testRemove(com.sirma.itt.javacourse.exceptions.listofelements.ListTest)')","[120, 872]"
"('Description.java', 'org.junit.runner.Description', 'methodAndClassNamePatternGroupOrDefault', '(.*)\\((.*)\\)', 'testIllegalSign(com.sirma.itt.javacourse.objects.sumator.SumatorTest)')","[788, 1502]"
"('Description.java', 'org.junit.runner.Description', 'methodAndClassNamePatternGroupOrDefault', '(.*)\\((.*)\\)', 'testTwoZero(com.sirma.itt.javacourse.objects.sumator.SumatorTest)')","[452, 1166]"
"('Description.java', 'org.junit.runner.Description', 'methodAndClassNamePatternGroupOrDefault', '(.*)\\((.*)\\)', 'testLeadingZero(com.sirma.itt.javacourse.objects.sumator.SumatorTest)')","[725, 1439]"
"('Description.java', 'org.junit.runner.Description', 'methodAndClassNamePatternGroupOrDefault', '(.*)\\((.*)\\)', 'testWithLetter(com.sirma.itt.javacourse.exceptions.readnumbers.ReadNumbersTest)')","[265, 998]"
"('Description.java', 'org.junit.runner.Description', 'methodAndClassNamePatternGroupOrDefault', '(.*)\\((.*)\\)', 'testAdd(com.sirma.itt.javacourse.exceptions.listofelements.ListTest)')","[57, 809]"
"('Description.java', 'org.junit.runner.Description', 'methodAndClassNamePatternGroupOrDefault', '(.*)\\((.*)\\)', 'testFloatPoint(com.sirma.itt.javacourse.objects.sumator.SumatorTest)')","[368, 1082]"
"('Description.java', 'org.junit.runner.Description', 'methodAndClassNamePatternGroupOrDefault', '(.*)\\((.*)\\)', 'testWithNegative(com.sirma.itt.javacourse.exceptions.readnumbers.ReadNumbersTest)')","[223, 956]"
"('Description.java', 'org.junit.runner.Description', 'methodAndClassNamePatternGroupOrDefault', '(.*)\\((.*)\\)', 'testEmptyString(com.sirma.itt.javacourse.objects.sumator.SumatorTest)')","[662, 1376]"
"('Description.java', 'org.junit.runner.Description', 'methodAndClassNamePatternGroupOrDefault', '(.*)\\((.*)\\)', 'testIllegalLetter2(com.sirma.itt.javacourse.objects.sumator.SumatorTest)')","[410, 1124]"
"('Description.java', 'org.junit.runner.Description', 'methodAndClassNamePatternGroupOrDefault', '(.*)\\((.*)\\)', 'testLittleBigDecimal(com.sirma.itt.javacourse.objects.sumator.SumatorTest)')","[347, 1061]"
"('Description.java', 'org.junit.runner.Description', 'methodAndClassNamePatternGroupOrDefault', '(.*)\\((.*)\\)', 'testIntegersInStrings(com.sirma.itt.javacourse.objects.sumator.SumatorTest)')","[704, 1418]"
"('Description.java', 'org.junit.runner.Description', 'methodAndClassNamePatternGroupOrDefault', '(.*)\\((.*)\\)', 'testNullArray(com.sirma.itt.javacourse.exceptions.readnumbers.ReadNumbersTest)')","[307, 1040]"
"('Description.java', 'org.junit.runner.Description', 'methodAndClassNamePatternGroupOrDefault', '(.*)\\((.*)\\)', 'testWithBigInt(com.sirma.itt.javacourse.exceptions.readnumbers.ReadNumbersTest)')","[244, 977]"
