"('Description.java', 'org.junit.runner.Description', 'parseMethod', '(.*)\\((.*)\\)', 'jira.releaser.FixedIssuesFinderTest')",[1578]
"('Description.java', 'org.junit.runner.Description', 'getClassName', '(.*)\\((.*)\\)', 'jira.releaser.FixedIssuesFinderTest')","[4319, 4339, 4360, 4380]"
"('Description.java', 'org.junit.runner.Description', 'parseMethod', '(.*)\\((.*)\\)', 'shouldCreateAndAddFixVersionToIssue(jira.releaser.IssueReleaserTest)')","[954, 2477]"
"('Description.java', 'org.junit.runner.Description', 'parseMethod', '(.*)\\((.*)\\)', 'shouldUseTokenWhenSearching(jira.releaser.JiraConnectionTest)')","[141, 2228]"
"('ReleasePatternMatcher.java', 'jira.releaser.ReleasePatternMatcher', 'isReleaseNumber', '\\d+\\.\\d+\\.\\d+(-[a-z0-9]+)?', '1.1.1-')","[3073, 3096]"
"('Description.java', 'org.junit.runner.Description', 'getClassName', '(.*)\\((.*)\\)', 'shouldSearchForIssuesBeforeEndDate(jira.releaser.FixedIssuesFinderTest)')","[1704, 1725, 1746]"
"('Description.java', 'org.junit.runner.Description', 'getClassName', '(.*)\\((.*)\\)', 'shouldSetExistingFixVersionToReleasedWhenUnreleased(jira.releaser.IssueReleaserTest)')","[1059, 1080, 1101]"
"('PathPatternMatcher.java', 'jira.releaser.PathPatternMatcher', 'isInTrunk', '([^/]+/)?trunk/.*', 'module/submodule/trunk/file.txt')","[4014, 4037]"
"('Description.java', 'org.junit.runner.Description', 'getClassName', '(.*)\\((.*)\\)', 'shouldUseTokenWhenSearching(jira.releaser.JiraConnectionTest)')","[162, 183, 204]"
"('Description.java', 'org.junit.runner.Description', 'getClassName', '(.*)\\((.*)\\)', 'shouldCreateAndAddFixVersionToIssue(jira.releaser.IssueReleaserTest)')","[975, 996, 1017]"
"('Description.java', 'org.junit.runner.Description', 'getClassName', '(.*)\\((.*)\\)', 'jira.releaser.RevisionFinderTest')","[3678, 3702, 3727, 3751]"
"('Description.java', 'org.junit.runner.Description', 'getClassName', '(.*)\\((.*)\\)', 'jira.releaser.ReleasePatternMatcherTest')","[3262, 3286, 3311, 3335]"
"('Description.java', 'org.junit.runner.Description', 'parseMethod', '(.*)\\((.*)\\)', 'shouldMatchAsTrunk(jira.releaser.PathPatternMatcherTest)')","[1225, 2540]"
"('Description.java', 'org.junit.runner.Description', 'parseMethod', '(.*)\\((.*)\\)', 'shouldFilterOutIssuesWithReleasedFixVersionMatchingAnyVersionNumber(jira.releaser.FixedIssuesFinderTest)')","[1767, 2726]"
"('Description.java', 'org.junit.runner.Description', 'parseMethod', '(.*)\\((.*)\\)', 'verifyInvalidStringsNotMatched(jira.releaser.ReleasePatternMatcherTest)')","[328, 2270]"
"('Description.java', 'org.junit.runner.Description', 'parseMethod', '(.*)\\((.*)\\)', 'shouldNotFilterOutIssuesWithUnreleasedFixVersionMatchingAnyVersionNumber(jira.releaser.FixedIssuesFinderTest)')","[1851, 2747]"
"('Description.java', 'org.junit.runner.Description', 'parseMethod', '(.*)\\((.*)\\)', 'jira.releaser.PathPatternMatcherTest')",[1204]
"('Description.java', 'org.junit.runner.Description', 'getClassName', '(.*)\\((.*)\\)', 'verifyInvalidStringsNotMatched(jira.releaser.ReleasePatternMatcherTest)')","[349, 370, 391, 2290]"
"('Description.java', 'org.junit.runner.Description', 'getClassName', '(.*)\\((.*)\\)', 'shouldExcludeStoriesWithCommitsAfterGivenRevision(jira.releaser.IssueFiltererTest)')","[1517, 1538, 1559]"
"('Description.java', 'org.junit.runner.Description', 'parseMethod', '(.*)\\((.*)\\)', 'shouldSplitTheQueryWhenToManySearchResult(jira.releaser.FixedIssuesFinderTest)')","[2103, 2810]"
"('Description.java', 'org.junit.runner.Description', 'parseMethod', '(.*)\\((.*)\\)', 'shouldInclueStorieWithTheSameCommitAsGivenRevision(jira.releaser.IssueFiltererTest)')","[1412, 2602]"
"('Description.java', 'org.junit.runner.Description', 'getClassName', '(.*)\\((.*)\\)', 'shouldNotSetExistingFixVersionToReleasedWhenReleased(jira.releaser.IssueReleaserTest)')","[1143, 1164, 1185]"
"('ReleasePatternMatcher.java', 'jira.releaser.ReleasePatternMatcher', 'isReleaseNumber', '\\d+\\.\\d+\\.\\d+(-[a-z0-9]+)?', ""i'm no version number"")","[2932, 2955]"
"('Description.java', 'org.junit.runner.Description', 'parseMethod', '(.*)\\((.*)\\)', 'shouldAddExistingFixVersionToIssue(jira.releaser.IssueReleaserTest)')","[870, 2436]"
"('Description.java', 'org.junit.runner.Description', 'getClassName', '(.*)\\((.*)\\)', 'shouldNotFilterOutIssuesWithoutFixVersions(jira.releaser.FixedIssuesFinderTest)')","[1956, 1977, 1998]"
"('Description.java', 'org.junit.runner.Description', 'getClassName', '(.*)\\((.*)\\)', 'triesToLogIn(jira.releaser.JiraConnectionTest)')","[78, 99, 120, 2207]"
"('Description.java', 'org.junit.runner.Description', 'parseMethod', '(.*)\\((.*)\\)', 'shouldNotSetExistingFixVersionToReleasedWhenReleased(jira.releaser.IssueReleaserTest)')","[1122, 2519]"
"('Description.java', 'org.junit.runner.Description', 'getClassName', '(.*)\\((.*)\\)', 'shouldInclueStorieWithTheSameCommitAsGivenRevision(jira.releaser.IssueFiltererTest)')","[1433, 1454, 1475, 2622]"
"('Description.java', 'org.junit.runner.Description', 'getClassName', '(.*)\\((.*)\\)', 'shouldSplitTheQueryWhenToManySearchResult(jira.releaser.FixedIssuesFinderTest)')","[2124, 2145, 2166]"
"('Description.java', 'org.junit.runner.Description', 'parseMethod', '(.*)\\((.*)\\)', 'jira.releaser.JiraConnectionTest')",[36]
"('ReleasePatternMatcher.java', 'jira.releaser.ReleasePatternMatcher', 'isReleaseNumber', '\\d+\\.\\d+\\.\\d+(-[a-z0-9]+)?', '4.7.0-p11')","[4266, 4298]"
"('ReleasePatternMatcher.java', 'jira.releaser.ReleasePatternMatcher', 'isReleaseNumber', '\\d+\\.\\d+\\.\\d+(-[a-z0-9]+)?', '11.11.11-p10')","[3214, 3237]"
"('Description.java', 'org.junit.runner.Description', 'getClassName', '(.*)\\((.*)\\)', 'findsLastRevisionNumberWhenOrderedAscending(jira.releaser.RevisionFinderTest)')","[620, 641, 662]"
"('Description.java', 'org.junit.runner.Description', 'parseMethod', '(.*)\\((.*)\\)', 'shouldExcludeStoriesWithCommitsAfterGivenRevision(jira.releaser.IssueFiltererTest)')","[1496, 2643]"
"('Description.java', 'org.junit.runner.Description', 'getClassName', '(.*)\\((.*)\\)', 'shouldNotMatchAsTrunk(jira.releaser.PathPatternMatcherTest)')","[1330, 1351, 1372]"
"('Description.java', 'org.junit.runner.Description', 'getClassName', '(.*)\\((.*)\\)', 'shouldNotFilterOutIssuesWithOtherFixVersions(jira.releaser.FixedIssuesFinderTest)')","[2040, 2061, 2082]"
"('ReleasePatternMatcher.java', 'jira.releaser.ReleasePatternMatcher', 'isReleaseNumber', '\\d+\\.\\d+\\.\\d+(-[a-z0-9]+)?', '1.1')","[2979, 3002]"
"('Description.java', 'org.junit.runner.Description', 'parseMethod', '(.*)\\((.*)\\)', 'shouldNotFilterOutIssuesWithOtherFixVersions(jira.releaser.FixedIssuesFinderTest)')","[2019, 2789]"
"('Description.java', 'org.junit.runner.Description', 'parseMethod', '(.*)\\((.*)\\)', 'jira.releaser.IssueFiltererTest')",[1391]
"('PathPatternMatcher.java', 'jira.releaser.PathPatternMatcher', 'isInTrunk', '([^/]+/)?trunk/.*', 'module/branches/branch/file.txt')","[3574, 3600, 3967, 3990]"
"('Description.java', 'org.junit.runner.Description', 'getClassName', '(.*)\\((.*)\\)', 'givesMinusOneWhenNoRevisionsFound(jira.releaser.RevisionFinderTest)')","[536, 557, 578, 2352]"
"('Description.java', 'org.junit.runner.Description', 'getClassName', '(.*)\\((.*)\\)', 'jira.releaser.JiraConnectionTest')","[2835, 2859, 2884, 2908]"
"('Description.java', 'org.junit.runner.Description', 'getClassName', '(.*)\\((.*)\\)', 'shouldNotFilterOutIssuesWithUnreleasedFixVersionMatchingAnyVersionNumber(jira.releaser.FixedIssuesFinderTest)')","[1872, 1893, 1914]"
"('Description.java', 'org.junit.runner.Description', 'parseMethod', '(.*)\\((.*)\\)', 'triesToLogIn(jira.releaser.JiraConnectionTest)')","[57, 2187]"
"('Description.java', 'org.junit.runner.Description', 'parseMethod', '(.*)\\((.*)\\)', 'shouldSetExistingFixVersionToReleasedWhenUnreleased(jira.releaser.IssueReleaserTest)')","[1038, 2498]"
"('Description.java', 'org.junit.runner.Description', 'getClassName', '(.*)\\((.*)\\)', 'jira.releaser.IssueReleaserTest')","[3776, 3800, 3825, 3849]"
"('Description.java', 'org.junit.runner.Description', 'getClassName', '(.*)\\((.*)\\)', 'jira.releaser.IssueFiltererTest')","[4160, 4184, 4209, 4233]"
"('Description.java', 'org.junit.runner.Description', 'parseMethod', '(.*)\\((.*)\\)', 'givesMinusOneWhenNoRevisionsFound(jira.releaser.RevisionFinderTest)')","[515, 2332]"
"('Description.java', 'org.junit.runner.Description', 'getClassName', '(.*)\\((.*)\\)', 'shouldFilterOutIssuesWithReleasedFixVersionMatchingAnyVersionNumber(jira.releaser.FixedIssuesFinderTest)')","[1788, 1809, 1830]"
"('Description.java', 'org.junit.runner.Description', 'parseMethod', '(.*)\\((.*)\\)', 'jira.releaser.RevisionFinderTest')",[494]
"('Description.java', 'org.junit.runner.Description', 'parseMethod', '(.*)\\((.*)\\)', 'jira.releaser.IssueReleaserTest')",[849]
"('Description.java', 'org.junit.runner.Description', 'parseMethod', '(.*)\\((.*)\\)', 'shouldSearchForIssuesFixedAfterDate(jira.releaser.FixedIssuesFinderTest)')","[1599, 2664]"
"('Description.java', 'org.junit.runner.Description', 'getClassName', '(.*)\\((.*)\\)', 'verifyReleaseNumbersMatched(jira.releaser.ReleasePatternMatcherTest)')","[433, 454, 475]"
"('Description.java', 'org.junit.runner.Description', 'parseMethod', '(.*)\\((.*)\\)', 'null')",[17]
"('ReleasePatternMatcher.java', 'jira.releaser.ReleasePatternMatcher', 'isReleaseNumber', '\\d+\\.\\d+\\.\\d+(-[a-z0-9]+)?', '1.1.1')","[3120, 3143]"
"('Description.java', 'org.junit.runner.Description', 'getClassName', '(.*)\\((.*)\\)', 'findsLastRevisionNumberWhenOrderedDescending(jira.releaser.RevisionFinderTest)')","[704, 725, 746]"
"('PathPatternMatcher.java', 'jira.releaser.PathPatternMatcher', 'isInTrunk', '([^/]+/)?trunk/.*', 'module/trunk/file.txt')","[3362, 3388, 3415, 3441, 3468, 3494, 3521, 3547, 3627, 3653, 3920, 3943]"
"('PathPatternMatcher.java', 'jira.releaser.PathPatternMatcher', 'isInTrunk', '([^/]+/)?trunk/.*', 'trunk/file.txt')","[3873, 3896]"
"('ReleasePatternMatcher.java', 'jira.releaser.ReleasePatternMatcher', 'isReleaseNumber', '\\d+\\.\\d+\\.\\d+(-[a-z0-9]+)?', '1.1.1.1')","[3026, 3049]"
"('Description.java', 'org.junit.runner.Description', 'parseMethod', '(.*)\\((.*)\\)', 'jira.releaser.ReleasePatternMatcherTest')",[307]
"('Description.java', 'org.junit.runner.Description', 'parseMethod', '(.*)\\((.*)\\)', 'findsLastRevisionOnTrunk(jira.releaser.RevisionFinderTest)')","[767, 2415]"
"('Description.java', 'org.junit.runner.Description', 'parseMethod', '(.*)\\((.*)\\)', 'shouldNotMatchAsTrunk(jira.releaser.PathPatternMatcherTest)')","[1309, 2581]"
"('Description.java', 'org.junit.runner.Description', 'parseMethod', '(.*)\\((.*)\\)', 'shouldNotFilterOutIssuesWithoutFixVersions(jira.releaser.FixedIssuesFinderTest)')","[1935, 2768]"
"('Description.java', 'org.junit.runner.Description', 'getClassName', '(.*)\\((.*)\\)', 'releasesFixVersion(jira.releaser.JiraConnectionTest)')","[246, 267, 288]"
"('Description.java', 'org.junit.runner.Description', 'parseMethod', '(.*)\\((.*)\\)', 'releasesFixVersion(jira.releaser.JiraConnectionTest)')","[225, 2249]"
"('Description.java', 'org.junit.runner.Description', 'getClassName', '(.*)\\((.*)\\)', 'findsLastRevisionOnTrunk(jira.releaser.RevisionFinderTest)')","[788, 809, 830]"
"('Description.java', 'org.junit.runner.Description', 'parseMethod', '(.*)\\((.*)\\)', 'findsLastRevisionNumberWhenOrderedDescending(jira.releaser.RevisionFinderTest)')","[683, 2394]"
"('Description.java', 'org.junit.runner.Description', 'getClassName', '(.*)\\((.*)\\)', 'shouldAddExistingFixVersionToIssue(jira.releaser.IssueReleaserTest)')","[891, 912, 933, 2456]"
"('ReleasePatternMatcher.java', 'jira.releaser.ReleasePatternMatcher', 'isReleaseNumber', '\\d+\\.\\d+\\.\\d+(-[a-z0-9]+)?', '11.11.11')","[3167, 3190]"
"('Description.java', 'org.junit.runner.Description', 'parseMethod', '(.*)\\((.*)\\)', 'shouldSearchForIssuesBeforeEndDate(jira.releaser.FixedIssuesFinderTest)')","[1683, 2705]"
"('Description.java', 'org.junit.runner.Description', 'parseMethod', '(.*)\\((.*)\\)', 'verifyReleaseNumbersMatched(jira.releaser.ReleasePatternMatcherTest)')","[412, 2311]"
"('Description.java', 'org.junit.runner.Description', 'getClassName', '(.*)\\((.*)\\)', 'shouldSearchForIssuesFixedAfterDate(jira.releaser.FixedIssuesFinderTest)')","[1620, 1641, 1662, 2684]"
"('Description.java', 'org.junit.runner.Description', 'parseMethod', '(.*)\\((.*)\\)', 'findsLastRevisionNumberWhenOrderedAscending(jira.releaser.RevisionFinderTest)')","[599, 2373]"
"('Description.java', 'org.junit.runner.Description', 'getClassName', '(.*)\\((.*)\\)', 'jira.releaser.PathPatternMatcherTest')","[4062, 4086, 4111, 4135]"
"('Description.java', 'org.junit.runner.Description', 'getClassName', '(.*)\\((.*)\\)', 'shouldMatchAsTrunk(jira.releaser.PathPatternMatcherTest)')","[1246, 1267, 1288, 2560]"
