"('Description.java', 'org.junit.runner.Description', 'getClassName', '(.*)\\((.*)\\)', 'testConvert(br.com.delogic.jfunk.ConvertTest)')",[1126]
"('Description.java', 'org.junit.runner.Description', 'parseMethod', '(.*)\\((.*)\\)', 'testGetValueWithNullException(br.com.delogic.jfunk.data.ResultTest)')",[773]
"('Description.java', 'org.junit.runner.Description', 'parseMethod', '(.*)\\((.*)\\)', 'testFindAllSetNullElements(br.com.delogic.jfunk.FindTest)')",[250]
"('Description.java', 'org.junit.runner.Description', 'parseMethod', '(.*)\\((.*)\\)', 'testResultCreation(br.com.delogic.jfunk.data.ResultTest)')",[814]
"('Description.java', 'org.junit.runner.Description', 'parseMethod', '(.*)\\((.*)\\)', 'testGetValueWithNonNull(br.com.delogic.jfunk.data.ResultTest)')",[856]
"('Description.java', 'org.junit.runner.Description', 'parseMethod', '(.*)\\((.*)\\)', 'testHasContentObject(br.com.delogic.jfunk.HasTest)')",[752]
"('Description.java', 'org.junit.runner.Description', 'parseMethod', '(.*)\\((.*)\\)', 'shouldNotThrowExceptionForEmptyList(br.com.delogic.jfunk.ConvertTest)')",[1147]
"('Description.java', 'org.junit.runner.Description', 'parseMethod', '(.*)\\((.*)\\)', 'shouldSplitSameSizeListAsSplit(br.com.delogic.jfunk.SplitTest)')",[83]
"('Description.java', 'org.junit.runner.Description', 'getClassName', '(.*)\\((.*)\\)', 'testHasContentString(br.com.delogic.jfunk.HasTest)')",[689]
"('Description.java', 'org.junit.runner.Description', 'parseMethod', '(.*)\\((.*)\\)', 'testInheritance(br.com.delogic.jfunk.data.IdentityTest)')",[960]
"('Description.java', 'org.junit.runner.Description', 'parseMethod', '(.*)\\((.*)\\)', 'testFindFirstNullElements(br.com.delogic.jfunk.FindTest)')",[166]
"('Description.java', 'org.junit.runner.Description', 'parseMethod', '(.*)\\((.*)\\)', 'testForEachArrayIndex(br.com.delogic.jfunk.ForEachTest)')",[627]
"('Description.java', 'org.junit.runner.Description', 'parseMethod', '(.*)\\((.*)\\)', 'shouldCreateSucessWithValue(br.com.delogic.jfunk.data.SuccessTest)')",[1064]
"('Description.java', 'org.junit.runner.Description', 'getClassName', '(.*)\\((.*)\\)', 'br.com.delogic.jfunk.data.ResultTest')","[1610, 1633, 1657, 1680]"
"('Description.java', 'org.junit.runner.Description', 'parseMethod', '(.*)\\((.*)\\)', 'testForEachIndex(br.com.delogic.jfunk.ForEachTest)')",[543]
"('Description.java', 'org.junit.runner.Description', 'parseMethod', '(.*)\\((.*)\\)', 'testForEachArray(br.com.delogic.jfunk.ForEachTest)')",[564]
"('Description.java', 'org.junit.runner.Description', 'parseMethod', '(.*)\\((.*)\\)', 'shouldNotThrowExceptionForNullList(br.com.delogic.jfunk.ConvertTest)')",[1168]
"('Description.java', 'org.junit.runner.Description', 'parseMethod', '(.*)\\((.*)\\)', 'testForEachCollection(br.com.delogic.jfunk.ForEachTest)')",[648]
"('Description.java', 'org.junit.runner.Description', 'parseMethod', '(.*)\\((.*)\\)', 'testForEachNullElement(br.com.delogic.jfunk.ForEachTest)')",[501]
"('Description.java', 'org.junit.runner.Description', 'parseMethod', '(.*)\\((.*)\\)', 'shouldSplitBiggerSizeList(br.com.delogic.jfunk.SplitTest)')",[62]
"('Description.java', 'org.junit.runner.Description', 'parseMethod', '(.*)\\((.*)\\)', 'shouldCreateSucessVoid(br.com.delogic.jfunk.data.SuccessTest)')",[1023]
"('Description.java', 'org.junit.runner.Description', 'parseMethod', '(.*)\\((.*)\\)', 'shouldConvertUsingArray(br.com.delogic.jfunk.ConvertTest)')",[1189]
"('Description.java', 'org.junit.runner.Description', 'parseMethod', '(.*)\\((.*)\\)', 'testFindFirstNonNullExNullElements(br.com.delogic.jfunk.FindTest)')",[397]
"('Description.java', 'org.junit.runner.Description', 'parseMethod', '(.*)\\((.*)\\)', 'testForEachRemoval(br.com.delogic.jfunk.ForEachTest)')",[522]
"('Description.java', 'org.junit.runner.Description', 'parseMethod', '(.*)\\((.*)\\)', 'shouldConvertToMap(br.com.delogic.jfunk.ConvertTest)')",[1210]
"('Description.java', 'org.junit.runner.Description', 'parseMethod', '(.*)\\((.*)\\)', 'testConvert(br.com.delogic.jfunk.ConvertTest)')",[1106]
"('Description.java', 'org.junit.runner.Description', 'parseMethod', '(.*)\\((.*)\\)', 'testHasContentString(br.com.delogic.jfunk.HasTest)')",[669]
"('Description.java', 'org.junit.runner.Description', 'parseMethod', '(.*)\\((.*)\\)', 'testFindAllMap(br.com.delogic.jfunk.FindTest)')",[271]
"('Description.java', 'org.junit.runner.Description', 'parseMethod', '(.*)\\((.*)\\)', 'testFindAllMapNullCollection(br.com.delogic.jfunk.FindTest)')",[334]
"('Description.java', 'org.junit.runner.Description', 'parseMethod', '(.*)\\((.*)\\)', 'testFindAllList(br.com.delogic.jfunk.FindTest)')",[187]
"('Description.java', 'org.junit.runner.Description', 'parseMethod', '(.*)\\((.*)\\)', 'testFindAllMapNullElements(br.com.delogic.jfunk.FindTest)')",[355]
"('Description.java', 'org.junit.runner.Description', 'getClassName', '(.*)\\((.*)\\)', 'shouldCreateSucessVoid(br.com.delogic.jfunk.data.SuccessTest)')",[1043]
"('Description.java', 'org.junit.runner.Description', 'getClassName', '(.*)\\((.*)\\)', 'br.com.delogic.jfunk.SplitTest')","[1234, 1257, 1281, 1304]"
"('Description.java', 'org.junit.runner.Description', 'getClassName', '(.*)\\((.*)\\)', 'testGetValueWithNullException(br.com.delogic.jfunk.data.ResultTest)')",[793]
"('Description.java', 'org.junit.runner.Description', 'getClassName', '(.*)\\((.*)\\)', 'br.com.delogic.jfunk.HasTest')","[1516, 1539, 1563, 1586]"
"('Description.java', 'org.junit.runner.Description', 'parseMethod', '(.*)\\((.*)\\)', 'testResultHasValue(br.com.delogic.jfunk.data.ResultTest)')",[835]
"('Description.java', 'org.junit.runner.Description', 'parseMethod', '(.*)\\((.*)\\)', 'testFindAllListNullCollection(br.com.delogic.jfunk.FindTest)')",[292]
"('Description.java', 'org.junit.runner.Description', 'parseMethod', '(.*)\\((.*)\\)', 'testFindFirstNonNullExNullArray(br.com.delogic.jfunk.FindTest)')",[439]
"('Description.java', 'org.junit.runner.Description', 'parseMethod', '(.*)\\((.*)\\)', 'testHasContentCollection(br.com.delogic.jfunk.HasTest)')",[710]
"('Description.java', 'org.junit.runner.Description', 'getClassName', '(.*)\\((.*)\\)', 'br.com.delogic.jfunk.FindTest')","[1328, 1351, 1375, 1398]"
"('Description.java', 'org.junit.runner.Description', 'parseMethod', '(.*)\\((.*)\\)', 'testFindAllSet(br.com.delogic.jfunk.FindTest)')",[208]
"('Description.java', 'org.junit.runner.Description', 'parseMethod', '(.*)\\((.*)\\)', 'testForEachArrayNullElement(br.com.delogic.jfunk.ForEachTest)')",[606]
"('Description.java', 'org.junit.runner.Description', 'parseMethod', '(.*)\\((.*)\\)', 'testEquality(br.com.delogic.jfunk.data.IdentityTest)')",[1002]
"('Description.java', 'org.junit.runner.Description', 'getClassName', '(.*)\\((.*)\\)', 'testHashCode(br.com.delogic.jfunk.data.IdentityTest)')",[939]
"('Description.java', 'org.junit.runner.Description', 'parseMethod', '(.*)\\((.*)\\)', 'testFindFirst(br.com.delogic.jfunk.FindTest)')",[145]
"('Description.java', 'org.junit.runner.Description', 'getClassName', '(.*)\\((.*)\\)', 'testFindFirstNullCollection(br.com.delogic.jfunk.FindTest)')",[124]
"('Description.java', 'org.junit.runner.Description', 'parseMethod', '(.*)\\((.*)\\)', 'testGetValueWithNonNullException(br.com.delogic.jfunk.data.ResultTest)')",[898]
"('Description.java', 'org.junit.runner.Description', 'parseMethod', '(.*)\\((.*)\\)', 'testGettersSetters(br.com.delogic.jfunk.data.IdentityTest)')",[981]
"('Description.java', 'org.junit.runner.Description', 'parseMethod', '(.*)\\((.*)\\)', 'testFindFirstNullCollection(br.com.delogic.jfunk.FindTest)')",[104]
"('Description.java', 'org.junit.runner.Description', 'parseMethod', '(.*)\\((.*)\\)', 'testHasContentArray(br.com.delogic.jfunk.HasTest)')",[731]
"('Description.java', 'org.junit.runner.Description', 'parseMethod', '(.*)\\((.*)\\)', 'testForEachNullArray(br.com.delogic.jfunk.ForEachTest)')",[585]
"('Description.java', 'org.junit.runner.Description', 'getClassName', '(.*)\\((.*)\\)', 'testForEachNullCollection(br.com.delogic.jfunk.ForEachTest)')",[480]
"('Description.java', 'org.junit.runner.Description', 'parseMethod', '(.*)\\((.*)\\)', 'testFindAllListNullElements(br.com.delogic.jfunk.FindTest)')",[313]
"('Description.java', 'org.junit.runner.Description', 'parseMethod', '(.*)\\((.*)\\)', 'shouldSplitSmallerList(br.com.delogic.jfunk.SplitTest)')",[21]
"('Description.java', 'org.junit.runner.Description', 'getClassName', '(.*)\\((.*)\\)', 'br.com.delogic.jfunk.data.SuccessTest')","[1798, 1821, 1845, 1868]"
"('Description.java', 'org.junit.runner.Description', 'parseMethod', '(.*)\\((.*)\\)', 'testFindFirstNonNull(br.com.delogic.jfunk.FindTest)')",[376]
"('Description.java', 'org.junit.runner.Description', 'getClassName', '(.*)\\((.*)\\)', 'shouldSplitSmallerList(br.com.delogic.jfunk.SplitTest)')",[41]
"('Description.java', 'org.junit.runner.Description', 'parseMethod', '(.*)\\((.*)\\)', 'shouldNotCreateSucessWithNullValue(br.com.delogic.jfunk.data.SuccessTest)')",[1085]
"('Description.java', 'org.junit.runner.Description', 'parseMethod', '(.*)\\((.*)\\)', 'testForEachNullCollection(br.com.delogic.jfunk.ForEachTest)')",[460]
"('Description.java', 'org.junit.runner.Description', 'getClassName', '(.*)\\((.*)\\)', 'br.com.delogic.jfunk.ForEachTest')","[1422, 1445, 1469, 1492]"
"('Description.java', 'org.junit.runner.Description', 'getClassName', '(.*)\\((.*)\\)', 'br.com.delogic.jfunk.ConvertTest')","[1889, 1909, 1930, 1950]"
"('Description.java', 'org.junit.runner.Description', 'getClassName', '(.*)\\((.*)\\)', 'br.com.delogic.jfunk.data.IdentityTest')","[1704, 1727, 1751, 1774]"
"('Description.java', 'org.junit.runner.Description', 'parseMethod', '(.*)\\((.*)\\)', 'testFindFirstNonNullExNullCollection(br.com.delogic.jfunk.FindTest)')",[418]
"('Description.java', 'org.junit.runner.Description', 'parseMethod', '(.*)\\((.*)\\)', 'testGetValueWithNull(br.com.delogic.jfunk.data.ResultTest)')",[877]
"('Description.java', 'org.junit.runner.Description', 'parseMethod', '(.*)\\((.*)\\)', 'testHashCode(br.com.delogic.jfunk.data.IdentityTest)')",[919]
"('Description.java', 'org.junit.runner.Description', 'parseMethod', '(.*)\\((.*)\\)', 'testFindAllSetNullCollection(br.com.delogic.jfunk.FindTest)')",[229]
