"('Regexes.scala', 'org.specs2.text.Regexes$Regexed', 'matchesSafely', '.*', 'equals must always return true for the same tree')",[893]
"('Regexes.scala', 'org.specs2.text.Regexes$Regexed', 'matchesSafely', '.*', 'fold left must work correctly')","[480, 1100]"
"('Regexes.scala', 'org.specs2.text.Regexes$Regexed', 'matchesSafely', '.*', 'performing any number of append/prepend operations must result in a tree with the correct elements')",[704]
"('Regexes.scala', 'org.specs2.text.Regexes$Regexed', 'matchesSafely', '.*', 'reverse must work correctly')","[348, 960]"
"('Regexes.scala', 'org.specs2.text.Regexes$Regexed', 'matchesSafely', '.*', 'appending elements to sequence must result in a sequence with the exact same elements in the same order')",[53]
"('Description.java', 'org.junit.runner.Description', 'methodAndClassNamePatternGroupOrDefault', '(.*)\\((.*)\\)', 'FingerTree specification::performing any number of append/prepend operations must result in a tree with the correct elements(fi.gekkio.drumfish.data.FingerTreeSpec)')","[1463, 2957]"
"('Regexes.scala', 'org.specs2.text.Regexes$Regexed', 'matchesSafely', '.*', 'concat must result in a sequence that includes all elements, which are also in the correct order')",[224]
"('Description.java', 'org.junit.runner.Description', 'methodAndClassNamePatternGroupOrDefault', '(.*)\\((.*)\\)', 'IndexedSeq specification::fold left must work correctly(fi.gekkio.drumfish.data.IndexedSeqSpec)')","[1353, 2144]"
"('Regexes.scala', 'org.specs2.text.Regexes$Regexed', 'matchesSafely', '.*', 'equals must always return true for the same sequence')",[285]
"('Regexes.scala', 'org.specs2.text.Regexes$Regexed', 'matchesSafely', '.*', 'prepending elements to tree must result in a tree with the exact same elements in the same order')",[588]
"('Description.java', 'org.junit.runner.Description', 'methodAndClassNamePatternGroupOrDefault', '(.*)\\((.*)\\)', 'IndexedSeqSpec')",[1136]
"('Regexes.scala', 'org.specs2.text.Regexes$Regexed', 'matchesSafely', '.*', 'tree measure for indexSeq (= total size) must be correct')",[645]
"('Description.java', 'org.junit.runner.Description', 'methodAndClassNamePatternGroupOrDefault', '(.*)\\((.*)\\)', 'IndexedSeq specification::prepending elements to sequence must result in a sequence with the exact same elements in the same order(fi.gekkio.drumfish.data.IndexedSeqSpec)')","[1221, 1778]"
"('Regexes.scala', 'org.specs2.text.Regexes$Regexed', 'matchesSafely', '.*', 'performing any number of append/prepend operations must result in a sequence with the correct elements')",[165]
"('Regexes.scala', 'org.specs2.text.Regexes$Regexed', 'matchesSafely', '.*', 'concat must result in a tree that includes all elements, which are also in the correct order')",[765]
"('Description.java', 'org.junit.runner.Description', 'methodAndClassNamePatternGroupOrDefault', '(.*)\\((.*)\\)', 'FingerTree specification::elementsEqual must always return true for the same tree(fi.gekkio.drumfish.data.FingerTreeSpec)')","[1507, 3079]"
"('Description.java', 'org.junit.runner.Description', 'methodAndClassNamePatternGroupOrDefault', '(.*)\\((.*)\\)', 'FingerTree specification')","[2462, 2589, 3387, 3514]"
"('Description.java', 'org.junit.runner.Description', 'methodAndClassNamePatternGroupOrDefault', '(.*)\\((.*)\\)', 'IndexedSeq specification::equals must always return true for the same sequence(fi.gekkio.drumfish.data.IndexedSeqSpec)')","[1287, 1961]"
"('Description.java', 'org.junit.runner.Description', 'methodAndClassNamePatternGroupOrDefault', '(.*)\\((.*)\\)', 'FingerTreeSpec')",[1155]
"('Description.java', 'org.junit.runner.Description', 'methodAndClassNamePatternGroupOrDefault', '(.*)\\((.*)\\)', 'FingerTree specification::fold left must work correctly(fi.gekkio.drumfish.data.FingerTreeSpec)')","[1595, 3323]"
"('Regexes.scala', 'org.specs2.text.Regexes$Regexed', 'matchesSafely', '.*', 'appending elements to tree must result in a tree with the exact same elements in the same order')",[533]
"('Regexes.scala', 'org.specs2.text.Regexes$Regexed', 'matchesSafely', '.*', 'prepending elements to sequence must result in a sequence with the exact same elements in the same order')",[108]
"('Description.java', 'org.junit.runner.Description', 'methodAndClassNamePatternGroupOrDefault', '(.*)\\((.*)\\)', 'FingerTree specification::reverse must work correctly(fi.gekkio.drumfish.data.FingerTreeSpec)')","[1551, 3201]"
"('Description.java', 'org.junit.runner.Description', 'methodAndClassNamePatternGroupOrDefault', '(.*)\\((.*)\\)', 'IndexedSeq specification')","[2208, 2335]"
"('Description.java', 'org.junit.runner.Description', 'methodAndClassNamePatternGroupOrDefault', '(.*)\\((.*)\\)', 'FingerTree specification::a double reverse must be equal to original(fi.gekkio.drumfish.data.FingerTreeSpec)')","[1573, 3262]"
"('Description.java', 'org.junit.runner.Description', 'methodAndClassNamePatternGroupOrDefault', '(.*)\\((.*)\\)', 'IndexedSeq specification::a double reverse must be equal to original(fi.gekkio.drumfish.data.IndexedSeqSpec)')","[1331, 2083]"
"('Regexes.scala', 'org.specs2.text.Regexes$Regexed', 'matchesSafely', '.*', 'a double reverse must be equal to original')","[413, 1029]"
"('Description.java', 'org.junit.runner.Description', 'methodAndClassNamePatternGroupOrDefault', '(.*)\\((.*)\\)', 'IndexedSeq specification::reverse must work correctly(fi.gekkio.drumfish.data.IndexedSeqSpec)')","[1309, 2022]"
"('Description.java', 'org.junit.runner.Description', 'methodAndClassNamePatternGroupOrDefault', '(.*)\\((.*)\\)', 'FingerTree specification::prepending elements to tree must result in a tree with the exact same elements in the same order(fi.gekkio.drumfish.data.FingerTreeSpec)')","[1419, 2835]"
"('Description.java', 'org.junit.runner.Description', 'methodAndClassNamePatternGroupOrDefault', '(.*)\\((.*)\\)', 'null')",[1117]
"('Description.java', 'org.junit.runner.Description', 'methodAndClassNamePatternGroupOrDefault', '(.*)\\((.*)\\)', 'IndexedSeq specification::concat must result in a sequence that includes all elements, which are also in the correct order(fi.gekkio.drumfish.data.IndexedSeqSpec)')","[1265, 1900]"
"('Description.java', 'org.junit.runner.Description', 'methodAndClassNamePatternGroupOrDefault', '(.*)\\((.*)\\)', 'FingerTree specification::appending elements to tree must result in a tree with the exact same elements in the same order(fi.gekkio.drumfish.data.FingerTreeSpec)')","[1375, 1397, 2525, 2652, 2713, 2774, 3450, 3577]"
"('Description.java', 'org.junit.runner.Description', 'methodAndClassNamePatternGroupOrDefault', '(.*)\\((.*)\\)', 'FingerTree specification::concat must result in a tree that includes all elements, which are also in the correct order(fi.gekkio.drumfish.data.FingerTreeSpec)')","[1485, 3018]"
"('Regexes.scala', 'org.specs2.text.Regexes$Regexed', 'matchesSafely', '.*', 'elementsEqual must always return true for the same tree')",[828]
"('Description.java', 'org.junit.runner.Description', 'methodAndClassNamePatternGroupOrDefault', '(.*)\\((.*)\\)', 'FingerTree specification::equals must always return true for the same tree(fi.gekkio.drumfish.data.FingerTreeSpec)')","[1529, 3140]"
"('Description.java', 'org.junit.runner.Description', 'methodAndClassNamePatternGroupOrDefault', '(.*)\\((.*)\\)', 'IndexedSeq specification::performing any number of append/prepend operations must result in a sequence with the correct elements(fi.gekkio.drumfish.data.IndexedSeqSpec)')","[1243, 1839]"
"('Description.java', 'org.junit.runner.Description', 'methodAndClassNamePatternGroupOrDefault', '(.*)\\((.*)\\)', 'IndexedSeq specification::appending elements to sequence must result in a sequence with the exact same elements in the same order(fi.gekkio.drumfish.data.IndexedSeqSpec)')","[1177, 1199, 1656, 1717, 2271, 2398]"
"('Description.java', 'org.junit.runner.Description', 'methodAndClassNamePatternGroupOrDefault', '(.*)\\((.*)\\)', 'FingerTree specification::tree measure for indexSeq [= total size] must be correct(fi.gekkio.drumfish.data.FingerTreeSpec)')","[1441, 2896]"
