"('Description.java', 'org.junit.runner.Description', 'methodAndClassNamePatternGroupOrDefault', '([\\s\\S]*)\\((.*)\\)', 'testTimeout_writeBuffer_Timeout(org.eclipse.jgit.util.io.TimeoutOutputStreamTest)')","[32416, 90500]"
"('URIish.java', 'org.eclipse.jgit.transport.URIish', '<init>', '^([a-z][a-z0-9+-]+)://(?:(?:([^/:@]+)(?::([^\\\\/]+))?@)?((?:[^\\\\/:]+)|(?:\\[[0-9a-f:]+\\]))(?::(\\d+))?((?:/~(?:[^\\\\/]+))?[\\\\/]))?(.+)?$', 'ssh+git://me:wtf@[::1]:1234/D:\\x')",[125995]
"('URIish.java', 'org.eclipse.jgit.transport.URIish', '<init>', '^(file):([\\\\/](?![\\\\/])((?:[A-Za-z]:)?[\\\\/]?(?:(?:[^\\\\/]+[\\\\/]+)*[^\\\\/]+[\\\\/]*)))$', 'ssh://l usr\\example.com:wtf@example.com:1234//abc')",[122936]
"('URIish.java', 'org.eclipse.jgit.transport.URIish', '<init>', '^([a-z][a-z0-9+-]+)://(?:(?:([^/:@]+)(?::([^\\\\/]+))?@)?((?:[^\\\\/:]+)|(?:\\[[0-9a-f:]+\\]))(?::(\\d+))?((?:/~(?:[^\\\\/]+))?[\\\\/]))?(.+)?$', 'ssh+git://lusr\\example:wtf@[::1]:80//')",[128249]
"('URIish.java', 'org.eclipse.jgit.transport.URIish', '<init>', '^([a-z][a-z0-9+-]+)://(?:(?:([^/:@]+)(?::([^\\\\/]+))?@)?((?:[^\\\\/:]+)|(?:\\[[0-9a-f:]+\\]))(?::(\\d+))?((?:/~(?:[^\\\\/]+))?[\\\\/]))?(.+)?$', '/tmp/jgit_test_6251682262244407463_tmp/tmp_139345380367893616.git')","[116783, 116910]"
"('Description.java', 'org.junit.runner.Description', 'methodAndClassNamePatternGroupOrDefault', '([\\s\\S]*)\\((.*)\\)', 'scanWithGitDirRef(org.eclipse.jgit.internal.storage.file.FileRepositoryBuilderTest)')","[53654, 110938]"
"('URIish.java', 'org.eclipse.jgit.transport.URIish', '<init>', '^(file):([\\\\/](?![\\\\/])((?:[A-Za-z]:)?[\\\\/]?(?:(?:[^\\\\/]+[\\\\/]+)*[^\\\\/]+[\\\\/]*)))$', 'http://lusr\\example@example.com:80/D:\\x')",[144188]
"('Description.java', 'org.junit.runner.Description', 'methodAndClassNamePatternGroupOrDefault', '([\\s\\S]*)\\((.*)\\)', 'rfc(org.eclipse.jgit.util.GitDateParserTest)')","[36307, 94218]"
"('URIish.java', 'org.eclipse.jgit.transport.URIish', '<init>', '^(file):([\\\\/](?![\\\\/])((?:[A-Za-z]:)?[\\\\/]?(?:(?:[^\\\\/]+[\\\\/]+)*[^\\\\/]+[\\\\/]*)))$', 'http://lusr\\example@[::1]:1234//abc')",[144648]
"('URIish.java', 'org.eclipse.jgit.transport.URIish', '<init>', '^(file):([\\\\/](?![\\\\/])((?:[A-Za-z]:)?[\\\\/]?(?:(?:[^\\\\/]+[\\\\/]+)*[^\\\\/]+[\\\\/]*)))$', 'https://me@[::1]:1234//')",[145706]
"('Description.java', 'org.junit.runner.Description', 'methodAndClassNamePatternGroupOrDefault', '([\\s\\S]*)\\((.*)\\)', 'testRefsCacheAfterUpdate(org.eclipse.jgit.internal.storage.file.RefUpdateTest)')","[56276, 113446]"
"('Description.java', 'org.junit.runner.Description', 'methodAndClassNamePatternGroupOrDefault', '([\\s\\S]*)\\((.*)\\)', 'testCombinedRangesInOneGroupCase0(org.eclipse.jgit.fnmatch.FileNameMatcherTest)')","[16396, 74792]"
"('Description.java', 'org.junit.runner.Description', 'methodAndClassNamePatternGroupOrDefault', '([\\s\\S]*)\\((.*)\\)', 'testMixedGroupCase1(org.eclipse.jgit.fnmatch.FileNameMatcherTest)')","[16480, 74880]"
"('Description.java', 'org.junit.runner.Description', 'methodAndClassNamePatternGroupOrDefault', '([\\s\\S]*)\\((.*)\\)', 'looseRefPacked(org.eclipse.jgit.internal.storage.file.GcPackRefsTest)')","[55400, 112588]"
"('Description.java', 'org.junit.runner.Description', 'methodAndClassNamePatternGroupOrDefault', '([\\s\\S]*)\\((.*)\\)', 'testForbiddenNamesOnWindowsEgCon(org.eclipse.jgit.lib.DirCacheCheckoutMaliciousPathTest)')","[21013, 79390]"
"('Description.java', 'org.junit.runner.Description', 'methodAndClassNamePatternGroupOrDefault', '([\\s\\S]*)\\((.*)\\)', 'testInvalidCommitInvalidTree2(org.eclipse.jgit.lib.ObjectCheckerTest)')","[25391, 83658]"
"('Description.java', 'org.junit.runner.Description', 'methodAndClassNamePatternGroupOrDefault', '([\\s\\S]*)\\((.*)\\)', 'testWriteString3(org.eclipse.jgit.transport.PacketLineOutTest)')","[5235, 64254]"
"('URIish.java', 'org.eclipse.jgit.transport.URIish', '<init>', '^(file):([\\\\/](?![\\\\/])((?:[A-Za-z]:)?[\\\\/]?(?:(?:[^\\\\/]+[\\\\/]+)*[^\\\\/]+[\\\\/]*)))$', 'ssh://l usr\\example.com:wtf@1.2.3.4:1234//abc')",[123304]
"('URIish.java', 'org.eclipse.jgit.transport.URIish', '<init>', '^([a-z][a-z0-9+-]+)://(?:(?:([^/:@]+)(?::([^\\\\/]+))?@)?((?:[^\\\\/:]+)|(?:\\[[0-9a-f:]+\\]))(?::(\\d+))?((?:/~(?:[^\\\\/]+))?[\\\\/]))?(.+)?$', 'http://me:wtf@example.com:1234//abc')",[128479]
"('URIish.java', 'org.eclipse.jgit.transport.URIish', '<init>', '^([a-z][a-z0-9+-]+)://(?:(?:([^/:@]+)(?::([^\\\\/]+))?@)?((?:[^\\\\/:]+)|(?:\\[[0-9a-f:]+\\]))(?::(\\d+))?((?:/~(?:[^\\\\/]+))?[\\\\/]))?(.+)?$', 'file:///tmp/jgit_test_8014711643176247719_tmp/tmp_1492958756153429040.git/')",[196376]
"('URIish.java', 'org.eclipse.jgit.transport.URIish', '<init>', '^([a-z][a-z0-9+-]+)://(?:(?:([^/:@]+)(?::([^\\\\/]+))?@)?((?:[^\\\\/:]+)|(?:\\[[0-9a-f:]+\\]))(?::(\\d+))?((?:/~(?:[^\\\\/]+))?[\\\\/]))?(.+)?$', 'https://l usr\\example.com:wtf@[::1]:1234/D:\\x')",[133723]
"('Description.java', 'org.junit.runner.Description', 'methodAndClassNamePatternGroupOrDefault', '([\\s\\S]*)\\((.*)\\)', 'testRemoveOne(org.eclipse.jgit.transport.LongMapTest)')","[5422, 64430]"
"('Description.java', 'org.junit.runner.Description', 'methodAndClassNamePatternGroupOrDefault', '([\\s\\S]*)\\((.*)\\)', 'testOnlyOption_f1_6_b(org.eclipse.jgit.api.CommitOnlyTest)')","[48990, 106450]"
"('Description.java', 'org.junit.runner.Description', 'methodAndClassNamePatternGroupOrDefault', '([\\s\\S]*)\\((.*)\\)', 'commandWithEmptyUri(org.eclipse.jgit.submodule.SubmoduleAddTest)')","[20061, 78532]"
"('URIish.java', 'org.eclipse.jgit.transport.URIish', '<init>', '^([a-z][a-z0-9+-]+)://(?:(?:([^/:@]+)(?::([^\\\\/]+))?@)?((?:[^\\\\/:]+)|(?:\\[[0-9a-f:]+\\]))(?::(\\d+))?((?:/~(?:[^\\\\/]+))?[\\\\/]))?(.+)?$', 'https://lusr\\example@[::1]:80/D:/x')",[148213]
"('URIish.java', 'org.eclipse.jgit.transport.URIish', '<init>', '^([a-z][a-z0-9+-]+)://(?:(?:([^/:@]+)(?::([^\\\\/]+))?@)?((?:[^\\\\/:]+)|(?:\\[[0-9a-f:]+\\]))(?::(\\d+))?((?:/~(?:[^\\\\/]+))?[\\\\/]))?(.+)?$', 'http://lusr\\example@1.2.3.4:80//abc')",[144487]
"('Description.java', 'org.junit.runner.Description', 'methodAndClassNamePatternGroupOrDefault', '([\\s\\S]*)\\((.*)\\)', 'testNonMarkingInputStream(org.eclipse.jgit.transport.PackParserTest)')","[4422, 63462]"
"('Description.java', 'org.junit.runner.Description', 'methodAndClassNamePatternGroupOrDefault', '([\\s\\S]*)\\((.*)\\)', 'testDecodeInt32(org.eclipse.jgit.util.NBTest)')","[37431, 95296]"
"('URIish.java', 'org.eclipse.jgit.transport.URIish', '<init>', '^([a-z][a-z0-9+-]+)://(?:(?:([^/:@]+)(?::([^\\\\/]+))?@)?((?:[^\\\\/:]+)|(?:\\[[0-9a-f:]+\\]))(?::(\\d+))?((?:/~(?:[^\\\\/]+))?[\\\\/]))?(.+)?$', 'https://me@example.com:1234/D:/x')",[145085]
"('URIish.java', 'org.eclipse.jgit.transport.URIish', '<init>', '^([a-z][a-z0-9+-]+)://(?:(?:([^/:@]+)(?::([^\\\\/]+))?@)?((?:[^\\\\/:]+)|(?:\\[[0-9a-f:]+\\]))(?::(\\d+))?((?:/~(?:[^\\\\/]+))?[\\\\/]))?(.+)?$', 'ssh+git://l usr\\example.com@1.2.3.4:1234/D:\\x')",[139979]
"('Description.java', 'org.junit.runner.Description', 'methodAndClassNamePatternGroupOrDefault', '([\\s\\S]*)\\((.*)\\)', 'testFileInFolderIgnored(org.eclipse.jgit.treewalk.filter.IndexDiffFilterTest)')","[30842, 89070]"
"('URIish.java', 'org.eclipse.jgit.transport.URIish', '<init>', '^(file):([\\\\/](?![\\\\/])((?:[A-Za-z]:)?[\\\\/]?(?:(?:[^\\\\/]+[\\\\/]+)*[^\\\\/]+[\\\\/]*)))$', 'ssh://lusr\\example@example.com:80/D:\\x')",[137564]
"('Description.java', 'org.junit.runner.Description', 'methodAndClassNamePatternGroupOrDefault', '([\\s\\S]*)\\((.*)\\)', 'testAddRemovedFile(org.eclipse.jgit.api.AddCommandTest)')","[50437, 107946]"
"('Description.java', 'org.junit.runner.Description', 'methodAndClassNamePatternGroupOrDefault', '([\\s\\S]*)\\((.*)\\)', 'testShellGlob(org.eclipse.jgit.lib.ValidRefNameTest)')","[24166, 82514]"
"('URIish.java', 'org.eclipse.jgit.transport.URIish', '<init>', '^(file):([\\\\/](?![\\\\/])((?:[A-Za-z]:)?[\\\\/]?(?:(?:[^\\\\/]+[\\\\/]+)*[^\\\\/]+[\\\\/]*)))$', 'file:///tmp/jgit_test_6270179879516651477_tmp/tmp_8025166266149813746/.git/')",[196623]
"('Description.java', 'org.junit.runner.Description', 'methodAndClassNamePatternGroupOrDefault', '([\\s\\S]*)\\((.*)\\)', 'testMaliciousPathEmptyUnix(org.eclipse.jgit.lib.DirCacheCheckoutMaliciousPathTest)')","[21244, 79632]"
"('Description.java', 'org.junit.runner.Description', 'methodAndClassNamePatternGroupOrDefault', '([\\s\\S]*)\\((.*)\\)', 'test_ReadNamesInSectionRecursive(org.eclipse.jgit.lib.ConfigTest)')","[27945, 86254]"
"('Description.java', 'org.junit.runner.Description', 'methodAndClassNamePatternGroupOrDefault', '([\\s\\S]*)\\((.*)\\)', 'testCreateFromCommit(org.eclipse.jgit.api.BranchCommandTest)')","[47238, 104734]"
"('URIish.java', 'org.eclipse.jgit.transport.URIish', '<init>', '^(file):([\\\\/](?![\\\\/])((?:[A-Za-z]:)?[\\\\/]?(?:(?:[^\\\\/]+[\\\\/]+)*[^\\\\/]+[\\\\/]*)))$', 'ssh+git://lusr\\example@example.com:80//abc')",[140784]
"('URIish.java', 'org.eclipse.jgit.transport.URIish', '<init>', '^([a-z][a-z0-9+-]+)://(?:(?:([^/:@]+)(?::([^\\\\/]+))?@)?((?:[^\\\\/:]+)|(?:\\[[0-9a-f:]+\\]))(?::(\\d+))?((?:/~(?:[^\\\\/]+))?[\\\\/]))?(.+)?$', 'ssh://lusr\\example@[::1]:1234//')",[138001]
"('ChangeIdUtil.java', 'org.eclipse.jgit.util.ChangeIdUtil', 'indexOfChangeId', '(^Change-Id: *I[a-f0-9]{40}$)', 'FIX: this thing')",[190711]
"('Description.java', 'org.junit.runner.Description', 'methodAndClassNamePatternGroupOrDefault', '([\\s\\S]*)\\((.*)\\)', 'testPick(org.eclipse.jgit.merge.CherryPickTest)')","[11135, 69798]"
"('URIish.java', 'org.eclipse.jgit.transport.URIish', '<init>', '^([a-z][a-z0-9+-]+)://(?:(?:([^/:@]+)(?::([^\\\\/]+))?@)?((?:[^\\\\/:]+)|(?:\\[[0-9a-f:]+\\]))(?::(\\d+))?((?:/~(?:[^\\\\/]+))?[\\\\/]))?(.+)?$', 'http://me:wtf@[::1]:1234/D:\\x')",[129307]
"('Description.java', 'org.junit.runner.Description', 'methodAndClassNamePatternGroupOrDefault', '([\\s\\S]*)\\((.*)\\)', 'testMultipleEscapedCharacters1(org.eclipse.jgit.fnmatch.FileNameMatcherTest)')","[17425, 75870]"
"('Description.java', 'org.junit.runner.Description', 'methodAndClassNamePatternGroupOrDefault', '([\\s\\S]*)\\((.*)\\)', 'testKeyIsPrefixOfFilter(org.eclipse.jgit.treewalk.filter.PathFilterGroupTest)')","[31319, 89510]"
"('URIish.java', 'org.eclipse.jgit.transport.URIish', '<init>', '^(file):([\\\\/](?![\\\\/])((?:[A-Za-z]:)?[\\\\/]?(?:(?:[^\\\\/]+[\\\\/]+)*[^\\\\/]+[\\\\/]*)))$', 'http://lusr\\example@[::1]:80/D:\\x')",[144924]
"('Description.java', 'org.junit.runner.Description', 'methodAndClassNamePatternGroupOrDefault', '([\\s\\S]*)\\((.*)\\)', 'shouldWorkWithZeroAsEnd(org.eclipse.jgit.revwalk.RevWalkUtilsCountTest)')","[6689, 65618]"
"('Description.java', 'org.junit.runner.Description', 'methodAndClassNamePatternGroupOrDefault', '([\\s\\S]*)\\((.*)\\)', 'testCache_TooFewFiles(org.eclipse.jgit.internal.storage.file.WindowCacheGetTest)')","[56442, 113600]"
"('Description.java', 'org.junit.runner.Description', 'methodAndClassNamePatternGroupOrDefault', '([\\s\\S]*)\\((.*)\\)', 'testWriteUnchangedFanout2_38(org.eclipse.jgit.notes.NoteMapTest)')","[40671, 98332]"
"('Description.java', 'org.junit.runner.Description', 'methodAndClassNamePatternGroupOrDefault', '([\\s\\S]*)\\((.*)\\)', 'testReadACK_ACKcommon1(org.eclipse.jgit.transport.PacketLineInTest)')","[3863, 62956]"
"('Description.java', 'org.junit.runner.Description', 'methodAndClassNamePatternGroupOrDefault', '([\\s\\S]*)\\((.*)\\)', 'testAbortShouldAlsoAbortNonInteractiveRebaseWithRebaseApplyDir(org.eclipse.jgit.api.RebaseCommandTest)')","[46242, 103810]"
"('Description.java', 'org.junit.runner.Description', 'methodAndClassNamePatternGroupOrDefault', '([\\s\\S]*)\\((.*)\\)', 'testRenameRefNameColission1avoided(org.eclipse.jgit.internal.storage.file.RefUpdateTest)')","[56360, 113534]"
"('URIish.java', 'org.eclipse.jgit.transport.URIish', '<init>', '^([a-z][a-z0-9+-]+)://(?:(?:([^/:@]+)(?::([^\\\\/]+))?@)?((?:[^\\\\/:]+)|(?:\\[[0-9a-f:]+\\]))(?::(\\d+))?((?:/~(?:[^\\\\/]+))?[\\\\/]))?(.+)?$', 'ssh://1.2.3.4/D:\\x')","[162059, 162243, 163163, 163347, 164267, 164451]"
"('Description.java', 'org.junit.runner.Description', 'methodAndClassNamePatternGroupOrDefault', '([\\s\\S]*)\\((.*)\\)', 'now(org.eclipse.jgit.util.GitDateParserTest)')","[36286, 94196]"
"('URIish.java', 'org.eclipse.jgit.transport.URIish', '<init>', '^(file):([\\\\/](?![\\\\/])((?:[A-Za-z]:)?[\\\\/]?(?:(?:[^\\\\/]+[\\\\/]+)*[^\\\\/]+[\\\\/]*)))$', 'ssh+git://lusr\\example@example.com//')","[153802, 153986]"
"('URIish.java', 'org.eclipse.jgit.transport.URIish', '<init>', '^(file):([\\\\/](?![\\\\/])((?:[A-Za-z]:)?[\\\\/]?(?:(?:[^\\\\/]+[\\\\/]+)*[^\\\\/]+[\\\\/]*)))$', 'http://l usr\\example.com@1.2.3.4/D:/x')","[156470, 156654]"
"('Description.java', 'org.junit.runner.Description', 'methodAndClassNamePatternGroupOrDefault', '([\\s\\S]*)\\((.*)\\)', 'testSimple1(org.eclipse.jgit.revwalk.RevWalkPathFilter1Test)')","[5609, 64606]"
"('Description.java', 'org.junit.runner.Description', 'methodAndClassNamePatternGroupOrDefault', '([\\s\\S]*)\\((.*)\\)', 'testOnlyOption_f1_4_c(org.eclipse.jgit.api.CommitOnlyTest)')","[48801, 106252]"
"('URIish.java', 'org.eclipse.jgit.transport.URIish', '<init>', '^(file):([\\\\/](?![\\\\/])((?:[A-Za-z]:)?[\\\\/]?(?:(?:[^\\\\/]+[\\\\/]+)*[^\\\\/]+[\\\\/]*)))$', 'ssh+git://me@1.2.3.4:1234//abc')",[138760]
"('Description.java', 'org.junit.runner.Description', 'methodAndClassNamePatternGroupOrDefault', '([\\s\\S]*)\\((.*)\\)', 'testClose(org.eclipse.jgit.api.GitConstructionTest)')","[42190, 99784]"
"('Description.java', 'org.junit.runner.Description', 'methodAndClassNamePatternGroupOrDefault', '([\\s\\S]*)\\((.*)\\)', 'testEmptyIfRootDoesNotExist(org.eclipse.jgit.treewalk.FileTreeIteratorTest)')","[28842, 87134]"
"('Description.java', 'org.junit.runner.Description', 'methodAndClassNamePatternGroupOrDefault', '([\\s\\S]*)\\((.*)\\)', 'testWithPostOrder_NoEnterSubtree(org.eclipse.jgit.treewalk.PostOrderTreeWalkTest)')","[29569, 87816]"
"('ChangeIdUtil.java', 'org.eclipse.jgit.util.ChangeIdUtil', 'indexOfFirstFooterLine', '(^[a-zA-Z0-9-]+:(?!//).*$)', 'ChangeId: I123456789123456789123456789123456789')","[181971, 182101]"
"('URIish.java', 'org.eclipse.jgit.transport.URIish', '<init>', '^([a-z][a-z0-9+-]+)://(?:(?:([^/:@]+)(?::([^\\\\/]+))?@)?((?:[^\\\\/:]+)|(?:\\[[0-9a-f:]+\\]))(?::(\\d+))?((?:/~(?:[^\\\\/]+))?[\\\\/]))?(.+)?$', '/tmp/jgit_test_7232275650859170598_tmp/tmp_5735535626593387142/.git')","[206743, 206881]"
"('Description.java', 'org.junit.runner.Description', 'methodAndClassNamePatternGroupOrDefault', '([\\s\\S]*)\\((.*)\\)', 'badlyFormattedWithoutRef(org.eclipse.jgit.util.GitDateParserBadlyFormattedTest)')","[37576, 95428]"
"('URIish.java', 'org.eclipse.jgit.transport.URIish', '<init>', '^([a-z][a-z0-9+-]+)://(?:(?:([^/:@]+)(?::([^\\\\/]+))?@)?((?:[^\\\\/:]+)|(?:\\[[0-9a-f:]+\\]))(?::(\\d+))?((?:/~(?:[^\\\\/]+))?[\\\\/]))?(.+)?$', 'https://me:wtf@1.2.3.4:80/D:/x')",[132389]
"('URIish.java', 'org.eclipse.jgit.transport.URIish', '<init>', '^(?:([^/:@]+)(?::([^\\\\/]+))?@)?((?:[^\\\\/:]+)|(?:\\[[0-9a-f:]+\\])):((?:(?:/~(?:[^\\\\/]+))[\\\\/])?(?:(?:[^\\\\/]+[\\\\/]+)*[^\\\\/]+[\\\\/]*))$', '/tmp/jgit_test_2434055886334526133_tmp/tmp_1405098318662614791.git')",[116558]
"('URIish.java', 'org.eclipse.jgit.transport.URIish', '<init>', '^([a-z][a-z0-9+-]+)://(?:(?:([^/:@]+)(?::([^\\\\/]+))?@)?((?:[^\\\\/:]+)|(?:\\[[0-9a-f:]+\\]))(?::(\\d+))?((?:/~(?:[^\\\\/]+))?[\\\\/]))?(.+)?$', 'http://me@[::1]//')","[155665, 155849]"
"('Description.java', 'org.junit.runner.Description', 'methodAndClassNamePatternGroupOrDefault', '([\\s\\S]*)\\((.*)\\)', 'org.eclipse.jgit.util.io.TimeoutInputStreamTest')","[32664, 186559]"
"('URIish.java', 'org.eclipse.jgit.transport.URIish', '<init>', '^(file):([\\\\/](?![\\\\/])((?:[A-Za-z]:)?[\\\\/]?(?:(?:[^\\\\/]+[\\\\/]+)*[^\\\\/]+[\\\\/]*)))$', 'http://lusr\\example@example.com:1234//abc')",[143912]
"('URIish.java', 'org.eclipse.jgit.transport.URIish', '<init>', '^(file):([\\\\/](?![\\\\/])((?:[A-Za-z]:)?[\\\\/]?(?:(?:[^\\\\/]+[\\\\/]+)*[^\\\\/]+[\\\\/]*)))$', 'http://lusr\\example:wtf@1.2.3.4:80//abc')",[131216]
"('Description.java', 'org.junit.runner.Description', 'methodAndClassNamePatternGroupOrDefault', '([\\s\\S]*)\\((.*)\\)', 'testType_Empty(org.eclipse.jgit.diff.EditTest)')","[15768, 74154]"
"('URIish.java', 'org.eclipse.jgit.transport.URIish', '<init>', '^([a-z][a-z0-9+-]+)://(?:(?:([^/:@]+)(?::([^\\\\/]+))?@)?((?:[^\\\\/:]+)|(?:\\[[0-9a-f:]+\\]))(?::(\\d+))?((?:/~(?:[^\\\\/]+))?[\\\\/]))?(.+)?$', 'https://1.2.3.4//abc')","[171903, 172087, 173007, 173191, 174111, 174295]"
"('URIish.java', 'org.eclipse.jgit.transport.URIish', '<init>', '^([a-z][a-z0-9+-]+)://(?:(?:([^/:@]+)(?::([^\\\\/]+))?@)?((?:[^\\\\/:]+)|(?:\\[[0-9a-f:]+\\]))(?::(\\d+))?((?:/~(?:[^\\\\/]+))?[\\\\/]))?(.+)?$', 'file:///tmp/jgit_test_9110062569867430411_tmp/tmp_7068575188740904856')",[180753]
"('Description.java', 'org.junit.runner.Description', 'methodAndClassNamePatternGroupOrDefault', '([\\s\\S]*)\\((.*)\\)', 'testSort_TOPO(org.eclipse.jgit.revwalk.RevWalkSortTest)')","[9202, 67972]"
"('URIish.java', 'org.eclipse.jgit.transport.URIish', '<init>', '^([a-z][a-z0-9+-]+)://(?:(?:([^/:@]+)(?::([^\\\\/]+))?@)?((?:[^\\\\/:]+)|(?:\\[[0-9a-f:]+\\]))(?::(\\d+))?((?:/~(?:[^\\\\/]+))?[\\\\/]))?(.+)?$', 'https://l usr\\example.com@1.2.3.4:80//abc')",[146695]
"('Description.java', 'org.junit.runner.Description', 'methodAndClassNamePatternGroupOrDefault', '([\\s\\S]*)\\((.*)\\)', 'testRebaseShouldIgnoreMergeCommits(org.eclipse.jgit.api.RebaseCommandTest)')","[44898, 102402]"
"('Description.java', 'org.junit.runner.Description', 'methodAndClassNamePatternGroupOrDefault', '([\\s\\S]*)\\((.*)\\)', 'testBatchRefUpdateConflict(org.eclipse.jgit.internal.storage.file.RefDirectoryTest)')","[58165, 115206]"
"('URIish.java', 'org.eclipse.jgit.transport.URIish', '<init>', '^(file):([\\\\/](?![\\\\/])((?:[A-Za-z]:)?[\\\\/]?(?:(?:[^\\\\/]+[\\\\/]+)*[^\\\\/]+[\\\\/]*)))$', 'http://me@[::1]:1234/D:\\x')",[142532]
"('Description.java', 'org.junit.runner.Description', 'methodAndClassNamePatternGroupOrDefault', '([\\s\\S]*)\\((.*)\\)', 'testHasChangeidWithReplacementWithChangeIdInCommitMessage(org.eclipse.jgit.util.ChangeIdUtilTest)')","[37637, 95472]"
"('Description.java', 'org.junit.runner.Description', 'methodAndClassNamePatternGroupOrDefault', '([\\s\\S]*)\\((.*)\\)', 'testAddA1(org.eclipse.jgit.api.ApplyCommandTest)')","[46635, 104162]"
"('Description.java', 'org.junit.runner.Description', 'methodAndClassNamePatternGroupOrDefault', '([\\s\\S]*)\\((.*)\\)', 'testFindRemoteRefUpdatesNoWildcardNoDestination(org.eclipse.jgit.transport.TransportTest)')","[4088, 63132]"
"('Description.java', 'org.junit.runner.Description', 'methodAndClassNamePatternGroupOrDefault', '([\\s\\S]*)\\((.*)\\)', 'test027_UnpackedRefHigherPriorityThanPacked(org.eclipse.jgit.internal.storage.file.T0003_BasicTest)')","[54070, 111334]"
"('Description.java', 'org.junit.runner.Description', 'methodAndClassNamePatternGroupOrDefault', '([\\s\\S]*)\\((.*)\\)', 'testGetRefs_DiscoversNewLoose2(org.eclipse.jgit.internal.storage.file.RefDirectoryTest)')","[58795, 115866]"
"('URIish.java', 'org.eclipse.jgit.transport.URIish', '<init>', '^([a-z][a-z0-9+-]+)://(?:(?:([^/:@]+)(?::([^\\\\/]+))?@)?((?:[^\\\\/:]+)|(?:\\[[0-9a-f:]+\\]))(?::(\\d+))?((?:/~(?:[^\\\\/]+))?[\\\\/]))?(.+)?$', 'https://l usr\\example.com:wtf@example.com:1234//abc')",[132895]
"('Description.java', 'org.junit.runner.Description', 'methodAndClassNamePatternGroupOrDefault', '([\\s\\S]*)\\((.*)\\)', 'testCleanDirs(org.eclipse.jgit.api.CleanCommandTest)')","[46324, 103876]"
"('Description.java', 'org.junit.runner.Description', 'methodAndClassNamePatternGroupOrDefault', '([\\s\\S]*)\\((.*)\\)', 'org.eclipse.jgit.internal.storage.file.PackIndexV2Test')","[53488, 209705]"
"('URIish.java', 'org.eclipse.jgit.transport.URIish', '<init>', '^([a-z][a-z0-9+-]+)://(?:(?:([^/:@]+)(?::([^\\\\/]+))?@)?((?:[^\\\\/:]+)|(?:\\[[0-9a-f:]+\\]))(?::(\\d+))?((?:/~(?:[^\\\\/]+))?[\\\\/]))?(.+)?$', 'ssh://lusr\\example:wtf@1.2.3.4:1234/D:/x')",[124477]
"('Description.java', 'org.junit.runner.Description', 'methodAndClassNamePatternGroupOrDefault', '([\\s\\S]*)\\((.*)\\)', 'testIsBare_CreateRepositoryFromArbitraryGitDir(org.eclipse.jgit.internal.storage.file.RepositorySetupWorkDirTest)')","[57169, 114282]"
"('URIish.java', 'org.eclipse.jgit.transport.URIish', '<init>', '^(file):([\\\\/](?![\\\\/])((?:[A-Za-z]:)?[\\\\/]?(?:(?:[^\\\\/]+[\\\\/]+)*[^\\\\/]+[\\\\/]*)))$', 'http://l usr\\example.com:wtf@example.com:1234/D:\\x')",[129652]
"('Description.java', 'org.junit.runner.Description', 'methodAndClassNamePatternGroupOrDefault', '([\\s\\S]*)\\((.*)\\)', 'testSetEnum(org.eclipse.jgit.lib.ConfigTest)')","[28365, 86694]"
"('URIish.java', 'org.eclipse.jgit.transport.URIish', '<init>', '^(file):([\\\\/](?![\\\\/])((?:[A-Za-z]:)?[\\\\/]?(?:(?:[^\\\\/]+[\\\\/]+)*[^\\\\/]+[\\\\/]*)))$', 'https://l usr\\example.com@1.2.3.4:80/D:\\x')",[146764]
"('URIish.java', 'org.eclipse.jgit.transport.URIish', '<init>', '^(file):([\\\\/](?![\\\\/])((?:[A-Za-z]:)?[\\\\/]?(?:(?:[^\\\\/]+[\\\\/]+)*[^\\\\/]+[\\\\/]*)))$', '/abc/.git')",[176756]
"('Description.java', 'org.junit.runner.Description', 'methodAndClassNamePatternGroupOrDefault', '([\\s\\S]*)\\((.*)\\)', 'org.eclipse.jgit.api.GitConstructionTest')","[42169, 196765]"
"('Description.java', 'org.junit.runner.Description', 'methodAndClassNamePatternGroupOrDefault', '([\\s\\S]*)\\((.*)\\)', 'testRemoveLastURI(org.eclipse.jgit.transport.RemoteConfigTest)')","[658, 59678]"
"('Description.java', 'org.junit.runner.Description', 'methodAndClassNamePatternGroupOrDefault', '([\\s\\S]*)\\((.*)\\)', 'testClean(org.eclipse.jgit.api.CleanCommandTest)')","[46282, 103832]"
"('URIish.java', 'org.eclipse.jgit.transport.URIish', '<init>', '^(file):([\\\\/](?![\\\\/])((?:[A-Za-z]:)?[\\\\/]?(?:(?:[^\\\\/]+[\\\\/]+)*[^\\\\/]+[\\\\/]*)))$', 'https://lusr\\example@example.com:1234/D:\\x')",[147316]
"('Description.java', 'org.junit.runner.Description', 'methodAndClassNamePatternGroupOrDefault', '([\\s\\S]*)\\((.*)\\)', 'testParse_ShortLineOnlyEndLF(org.eclipse.jgit.revwalk.RevCommitParseTest)')","[8952, 67730]"
"('Description.java', 'org.junit.runner.Description', 'methodAndClassNamePatternGroupOrDefault', '([\\s\\S]*)\\((.*)\\)', 'org.eclipse.jgit.util.GitDateParserBadlyFormattedTest')","[37534, 187153]"
"('Description.java', 'org.junit.runner.Description', 'methodAndClassNamePatternGroupOrDefault', '([\\s\\S]*)\\((.*)\\)', 'testACommitWithSubjectBug_NonFooterLineAndSob(org.eclipse.jgit.util.ChangeIdUtilTest)')","[38204, 96066]"
"('Description.java', 'org.junit.runner.Description', 'methodAndClassNamePatternGroupOrDefault', '([\\s\\S]*)\\((.*)\\)', 'testDeleteTrailingLines(org.eclipse.jgit.api.BlameCommandTest)')","[52309, 109728]"
"('Description.java', 'org.junit.runner.Description', 'methodAndClassNamePatternGroupOrDefault', '([\\s\\S]*)\\((.*)\\)', 'testOnlyOption_f1_7_f2_14_d(org.eclipse.jgit.api.CommitOnlyTest)')","[48402, 105834]"
"('URIish.java', 'org.eclipse.jgit.transport.URIish', '<init>', '^([a-z][a-z0-9+-]+)://(?:(?:([^/:@]+)(?::([^\\\\/]+))?@)?((?:[^\\\\/:]+)|(?:\\[[0-9a-f:]+\\]))(?::(\\d+))?((?:/~(?:[^\\\\/]+))?[\\\\/]))?(.+)?$', '/tmp/jgit_test_7285828428477782317_tmp/tmp_2342545421297606686')","[204811, 204941, 205088, 205238]"
"('URIish.java', 'org.eclipse.jgit.transport.URIish', '<init>', '^(file):([\\\\/](?![\\\\/])((?:[A-Za-z]:)?[\\\\/]?(?:(?:[^\\\\/]+[\\\\/]+)*[^\\\\/]+[\\\\/]*)))$', 'ssh+git://l usr\\example.com:wtf@1.2.3.4:80//abc')",[126800]
"('URIish.java', 'org.eclipse.jgit.transport.URIish', '<init>', '^(file):([\\\\/](?![\\\\/])((?:[A-Za-z]:)?[\\\\/]?(?:(?:[^\\\\/]+[\\\\/]+)*[^\\\\/]+[\\\\/]*)))$', 'http://me@1.2.3.4//abc')","[155320, 155504]"
"('Description.java', 'org.junit.runner.Description', 'methodAndClassNamePatternGroupOrDefault', '([\\s\\S]*)\\((.*)\\)', 'testValidCommitNormalTime(org.eclipse.jgit.lib.ObjectCheckerTest)')","[26189, 84494]"
"('URIish.java', 'org.eclipse.jgit.transport.URIish', '<init>', '^(file):([\\\\/](?![\\\\/])((?:[A-Za-z]:)?[\\\\/]?(?:(?:[^\\\\/]+[\\\\/]+)*[^\\\\/]+[\\\\/]*)))$', 'file:///tmp/jgit_test_6443982766099715589_tmp/tmp_4105089330516958600/.git/')","[197579, 197790]"
"('Description.java', 'org.junit.runner.Description', 'methodAndClassNamePatternGroupOrDefault', '([\\s\\S]*)\\((.*)\\)', 'repositoryWithNoSubmodules(org.eclipse.jgit.submodule.SubmoduleStatusTest)')","[20248, 78708]"
"('Description.java', 'org.junit.runner.Description', 'methodAndClassNamePatternGroupOrDefault', '([\\s\\S]*)\\((.*)\\)', 'testSimpleStarCase2(org.eclipse.jgit.fnmatch.FileNameMatcherTest)')","[17572, 76024]"
"('Description.java', 'org.junit.runner.Description', 'methodAndClassNamePatternGroupOrDefault', '([\\s\\S]*)\\((.*)\\)', 'testDequote_BareABCZ_OnlyBC(org.eclipse.jgit.util.QuotedStringBourneStyleTest)')","[36473, 94372]"
"('URIish.java', 'org.eclipse.jgit.transport.URIish', '<init>', '^(?:([^/:@]+)(?::([^\\\\/]+))?@)?((?:[^\\\\/:]+)|(?:\\[[0-9a-f:]+\\])):((?:(?:/~(?:[^\\\\/]+))[\\\\/])?(?:(?:[^\\\\/]+[\\\\/]+)*[^\\\\/]+[\\\\/]*))$', '/a/b/c.git')",[121303]
"('Description.java', 'org.junit.runner.Description', 'methodAndClassNamePatternGroupOrDefault', '([\\s\\S]*)\\((.*)\\)', 'testCheckout(org.eclipse.jgit.internal.storage.file.ReflogReaderTest)')","[58877, 115932]"
"('URIish.java', 'org.eclipse.jgit.transport.URIish', '<init>', '^(file):([\\\\/](?![\\\\/])((?:[A-Za-z]:)?[\\\\/]?(?:(?:[^\\\\/]+[\\\\/]+)*[^\\\\/]+[\\\\/]*)))$', 'http://me:wtf@1.2.3.4:1234/D:/x')",[128870]
"('Description.java', 'org.junit.runner.Description', 'methodAndClassNamePatternGroupOrDefault', '([\\s\\S]*)\\((.*)\\)', 'testDirectoryFileConflicts_3(org.eclipse.jgit.lib.DirCacheCheckoutTest)')","[23374, 81744]"
"('Description.java', 'org.junit.runner.Description', 'methodAndClassNamePatternGroupOrDefault', '([\\s\\S]*)\\((.*)\\)', 'testCreateOrigin(org.eclipse.jgit.transport.RemoteConfigTest)')","[595, 59612]"
"('Description.java', 'org.junit.runner.Description', 'methodAndClassNamePatternGroupOrDefault', '([\\s\\S]*)\\((.*)\\)', 'testUpdateRefForward(org.eclipse.jgit.internal.storage.file.RefUpdateTest)')","[56297, 113468]"
"('Description.java', 'org.junit.runner.Description', 'methodAndClassNamePatternGroupOrDefault', '([\\s\\S]*)\\((.*)\\)', 'testInsertWholeObject_Length12(org.eclipse.jgit.internal.storage.pack.DeltaIndexTest)')","[52975, 110366]"
"('Description.java', 'org.junit.runner.Description', 'methodAndClassNamePatternGroupOrDefault', '([\\s\\S]*)\\((.*)\\)', 'testAddWithoutParameterUpdate(org.eclipse.jgit.api.AddCommandTest)')","[50458, 107968]"
"('Description.java', 'org.junit.runner.Description', 'methodAndClassNamePatternGroupOrDefault', '([\\s\\S]*)\\((.*)\\)', 'testBuilderClear(org.eclipse.jgit.dircache.DirCacheBuilderTest)')","[12129, 70700]"
"('Description.java', 'org.junit.runner.Description', 'methodAndClassNamePatternGroupOrDefault', '([\\s\\S]*)\\((.*)\\)', 'testCopyConstructorReusesArray(org.eclipse.jgit.util.RefListTest)')","[34931, 92876]"
"('Description.java', 'org.junit.runner.Description', 'methodAndClassNamePatternGroupOrDefault', '([\\s\\S]*)\\((.*)\\)', 'testEmpty_WithPrefix(org.eclipse.jgit.util.RefMapTest)')","[37034, 94900]"
"('URIish.java', 'org.eclipse.jgit.transport.URIish', '<init>', '^(file):([\\\\/](?![\\\\/])((?:[A-Za-z]:)?[\\\\/]?(?:(?:[^\\\\/]+[\\\\/]+)*[^\\\\/]+[\\\\/]*)))$', 'https://l usr\\example.com:wtf@example.com:80//')",[133010]
"('Description.java', 'org.junit.runner.Description', 'methodAndClassNamePatternGroupOrDefault', '([\\s\\S]*)\\((.*)\\)', 'checkMergeMergeableTreesWithoutIndex(org.eclipse.jgit.merge.ResolveMergerTest)')","[10490, 69182]"
"('Description.java', 'org.junit.runner.Description', 'methodAndClassNamePatternGroupOrDefault', '([\\s\\S]*)\\((.*)\\)', 'testExceptionThrown_BareRepoGetIndexFile(org.eclipse.jgit.internal.storage.file.RepositorySetupWorkDirTest)')","[57148, 114260]"
"('URIish.java', 'org.eclipse.jgit.transport.URIish', '<init>', '^(file):([\\\\/](?![\\\\/])((?:[A-Za-z]:)?[\\\\/]?(?:(?:[^\\\\/]+[\\\\/]+)*[^\\\\/]+[\\\\/]*)))$', 'ssh://lusr\\example@[::1]//abc')","[151272, 151456]"
"('Description.java', 'org.junit.runner.Description', 'methodAndClassNamePatternGroupOrDefault', '([\\s\\S]*)\\((.*)\\)', 'testInsertTail(org.eclipse.jgit.internal.storage.pack.DeltaIndexTest)')","[52891, 110278]"
"('URIish.java', 'org.eclipse.jgit.transport.URIish', '<init>', '^(file):([\\\\/](?![\\\\/])((?:[A-Za-z]:)?[\\\\/]?(?:(?:[^\\\\/]+[\\\\/]+)*[^\\\\/]+[\\\\/]*)))$', 'https://l usr\\example.com@1.2.3.4//')","[159690, 159874]"
"('URIish.java', 'org.eclipse.jgit.transport.URIish', '<init>', '^([a-z][a-z0-9+-]+)://(?:(?:([^/:@]+)(?::([^\\\\/]+))?@)?((?:[^\\\\/:]+)|(?:\\[[0-9a-f:]+\\]))(?::(\\d+))?((?:/~(?:[^\\\\/]+))?[\\\\/]))?(.+)?$', 'ssh+git://me@[::1]:80//')",[139289]
"('Description.java', 'org.junit.runner.Description', 'methodAndClassNamePatternGroupOrDefault', '([\\s\\S]*)\\((.*)\\)', 'test002_WriteEmptyTree(org.eclipse.jgit.internal.storage.file.T0003_BasicTest)')","[53986, 111246]"
"('Description.java', 'org.junit.runner.Description', 'methodAndClassNamePatternGroupOrDefault', '([\\s\\S]*)\\((.*)\\)', 'testMaliciousAbsoluteWindowsPath1(org.eclipse.jgit.lib.DirCacheCheckoutMaliciousPathTest)')","[21685, 80094]"
"('Description.java', 'org.junit.runner.Description', 'methodAndClassNamePatternGroupOrDefault', '([\\s\\S]*)\\((.*)\\)', 'testOnlyOption_f1_7_f2_14_a(org.eclipse.jgit.api.CommitOnlyTest)')","[48339, 105768]"
"('Description.java', 'org.junit.runner.Description', 'methodAndClassNamePatternGroupOrDefault', '([\\s\\S]*)\\((.*)\\)', 'testDelta_SmallObjectChain(org.eclipse.jgit.internal.storage.file.PackFileTest)')","[53841, 111114]"
"('Description.java', 'org.junit.runner.Description', 'methodAndClassNamePatternGroupOrDefault', '([\\s\\S]*)\\((.*)\\)', 'testEncode(org.eclipse.jgit.util.Base64Test)')","[36744, 94636]"
"('URIish.java', 'org.eclipse.jgit.transport.URIish', '<init>', '^([a-z][a-z0-9+-]+)://(?:(?:([^/:@]+)(?::([^\\\\/]+))?@)?((?:[^\\\\/:]+)|(?:\\[[0-9a-f:]+\\]))(?::(\\d+))?((?:/~(?:[^\\\\/]+))?[\\\\/]))?(.+)?$', 'https://lusr\\example@[::1]//')","[161185, 161369]"
"('Description.java', 'org.junit.runner.Description', 'methodAndClassNamePatternGroupOrDefault', '([\\s\\S]*)\\((.*)\\)', 'test_repack(org.eclipse.jgit.internal.storage.file.RefDirectoryTest)')","[58039, 115074]"
"('Description.java', 'org.junit.runner.Description', 'methodAndClassNamePatternGroupOrDefault', '([\\s\\S]*)\\((.*)\\)', 'testOnlyOption_f1_2_f2_14_e(org.eclipse.jgit.api.CommitOnlyTest)')","[49473, 106956]"
"('Description.java', 'org.junit.runner.Description', 'methodAndClassNamePatternGroupOrDefault', '([\\s\\S]*)\\((.*)\\)', 'testMaliciousGitPath3Case(org.eclipse.jgit.lib.DirCacheCheckoutMaliciousPathTest)')","[21307, 79698]"
"('Description.java', 'org.junit.runner.Description', 'methodAndClassNamePatternGroupOrDefault', '([\\s\\S]*)\\((.*)\\)', 'testEmpty_FromString(org.eclipse.jgit.lib.AbbreviatedObjectIdTest)')","[22412, 80776]"
"('Description.java', 'org.junit.runner.Description', 'methodAndClassNamePatternGroupOrDefault', '([\\s\\S]*)\\((.*)\\)', 'testJustCommonPrefixIsNotMatch(org.eclipse.jgit.treewalk.filter.PathFilterGroupTest)')","[31193, 89378]"
"('Description.java', 'org.junit.runner.Description', 'methodAndClassNamePatternGroupOrDefault', '([\\s\\S]*)\\((.*)\\)', 'testWordroupCase0(org.eclipse.jgit.fnmatch.FileNameMatcherTest)')","[18853, 77366]"
"('Description.java', 'org.junit.runner.Description', 'methodAndClassNamePatternGroupOrDefault', '([\\s\\S]*)\\((.*)\\)', 'testWrite_Small(org.eclipse.jgit.transport.SideBandOutputStreamTest)')","[4651, 63682]"
"('URIish.java', 'org.eclipse.jgit.transport.URIish', '<init>', '^([a-z][a-z0-9+-]+)://(?:(?:([^/:@]+)(?::([^\\\\/]+))?@)?((?:[^\\\\/:]+)|(?:\\[[0-9a-f:]+\\]))(?::(\\d+))?((?:/~(?:[^\\\\/]+))?[\\\\/]))?(.+)?$', 'https://[::1]/D:/x')","[172317, 172501, 173421, 173605, 174525, 174709]"
"('URIish.java', 'org.eclipse.jgit.transport.URIish', '<init>', '^([a-z][a-z0-9+-]+)://(?:(?:([^/:@]+)(?::([^\\\\/]+))?@)?((?:[^\\\\/:]+)|(?:\\[[0-9a-f:]+\\]))(?::(\\d+))?((?:/~(?:[^\\\\/]+))?[\\\\/]))?(.+)?$', 'http://me:wtf@1.2.3.4:1234//')",[128801]
"('Description.java', 'org.junit.runner.Description', 'methodAndClassNamePatternGroupOrDefault', '([\\s\\S]*)\\((.*)\\)', 'testStringOfPearls_FilePath1(org.eclipse.jgit.revwalk.RevWalkPathFilter1Test)')","[5483, 64474]"
"('Description.java', 'org.junit.runner.Description', 'methodAndClassNamePatternGroupOrDefault', '([\\s\\S]*)\\((.*)\\)', 'testContainsDot(org.eclipse.jgit.lib.ValidRefNameTest)')","[24334, 82690]"
"('Description.java', 'org.junit.runner.Description', 'methodAndClassNamePatternGroupOrDefault', '([\\s\\S]*)\\((.*)\\)', 'testWriteLine3(org.eclipse.jgit.diff.RawTextTest)')","[14228, 72680]"
"('Description.java', 'org.junit.runner.Description', 'methodAndClassNamePatternGroupOrDefault', '([\\s\\S]*)\\((.*)\\)', 'testMaxObjectSizeDeltaBlock(org.eclipse.jgit.transport.PackParserTest)')","[4275, 63308]"
"('Description.java', 'org.junit.runner.Description', 'methodAndClassNamePatternGroupOrDefault', '([\\s\\S]*)\\((.*)\\)', 'testBatchRefUpdateSimpleNoForce(org.eclipse.jgit.internal.storage.file.RefDirectoryTest)')","[58123, 115162]"
"('Description.java', 'org.junit.runner.Description', 'methodAndClassNamePatternGroupOrDefault', '([\\s\\S]*)\\((.*)\\)', 'testOnlyOption_f1_1_e(org.eclipse.jgit.api.CommitOnlyTest)')","[48528, 105966]"
"('URIish.java', 'org.eclipse.jgit.transport.URIish', '<init>', '^(file):([\\\\/](?![\\\\/])((?:[A-Za-z]:)?[\\\\/]?(?:(?:[^\\\\/]+[\\\\/]+)*[^\\\\/]+[\\\\/]*)))$', 'ssh+git://lusr\\example@[::1]:80//abc')",[141520]
"('URIish.java', 'org.eclipse.jgit.transport.URIish', '<init>', '^([a-z][a-z0-9+-]+)://(?:(?:([^/:@]+)(?::([^\\\\/]+))?@)?((?:[^\\\\/:]+)|(?:\\[[0-9a-f:]+\\]))(?::(\\d+))?((?:/~(?:[^\\\\/]+))?[\\\\/]))?(.+)?$', '/tmp/jgit_test_1616732006832071039_tmp/tmp_6256113901600089866/.git')","[206183, 206321]"
"('Description.java', 'org.junit.runner.Description', 'methodAndClassNamePatternGroupOrDefault', '([\\s\\S]*)\\((.*)\\)', 'testDigitGroupCase3(org.eclipse.jgit.fnmatch.FileNameMatcherTest)')","[17677, 76134]"
"('Description.java', 'org.junit.runner.Description', 'methodAndClassNamePatternGroupOrDefault', '([\\s\\S]*)\\((.*)\\)', 'testLastModifiedTimes(org.eclipse.jgit.lib.IndexModificationTimesTest)')","[24704, 82998]"
"('URIish.java', 'org.eclipse.jgit.transport.URIish', '<init>', '^([a-z][a-z0-9+-]+)://(?:(?:([^/:@]+)(?::([^\\\\/]+))?@)?((?:[^\\\\/:]+)|(?:\\[[0-9a-f:]+\\]))(?::(\\d+))?((?:/~(?:[^\\\\/]+))?[\\\\/]))?(.+)?$', 'ssh+git://me@[::1]/D:\\x')","[152491, 152675]"
"('Description.java', 'org.junit.runner.Description', 'methodAndClassNamePatternGroupOrDefault', '([\\s\\S]*)\\((.*)\\)', 'testPackCommitsAndLooseOneNoReflog(org.eclipse.jgit.internal.storage.file.GcReflogTest)')","[57396, 114480]"
"('Description.java', 'org.junit.runner.Description', 'methodAndClassNamePatternGroupOrDefault', '([\\s\\S]*)\\((.*)\\)', 't1sameDepthT2(org.eclipse.jgit.api.DescribeCommandTest)')","[44570, 102138]"
"('Description.java', 'org.junit.runner.Description', 'methodAndClassNamePatternGroupOrDefault', '([\\s\\S]*)\\((.*)\\)', 'org.eclipse.jgit.merge.SimpleMergeTest')","[9698, 181811]"
"('Description.java', 'org.junit.runner.Description', 'methodAndClassNamePatternGroupOrDefault', '([\\s\\S]*)\\((.*)\\)', 'org.eclipse.jgit.revwalk.RevCommitListTest')","[7456, 181460]"
"('URIish.java', 'org.eclipse.jgit.transport.URIish', '<init>', '^([a-z][a-z0-9+-]+)://(?:(?:([^/:@]+)(?::([^\\\\/]+))?@)?((?:[^\\\\/:]+)|(?:\\[[0-9a-f:]+\\]))(?::(\\d+))?((?:/~(?:[^\\\\/]+))?[\\\\/]))?(.+)?$', 'http://l usr\\example.com:wtf@example.com:1234/D:\\x')",[129675]
"('Description.java', 'org.junit.runner.Description', 'methodAndClassNamePatternGroupOrDefault', '([\\s\\S]*)\\((.*)\\)', 'testReadString2(org.eclipse.jgit.transport.PacketLineInTest)')","[3800, 62890]"
"('Description.java', 'org.junit.runner.Description', 'methodAndClassNamePatternGroupOrDefault', '([\\s\\S]*)\\((.*)\\)', 'testNonNotesWithoutNonNoteConflict(org.eclipse.jgit.notes.NoteMapMergerTest)')","[41047, 98706]"
"('Description.java', 'org.junit.runner.Description', 'methodAndClassNamePatternGroupOrDefault', '([\\s\\S]*)\\((.*)\\)', 'testParseGitFileName_SrcFooCNonStandardPrefix(org.eclipse.jgit.patch.FileHeaderTest)')","[39572, 97320]"
"('Description.java', 'org.junit.runner.Description', 'methodAndClassNamePatternGroupOrDefault', '([\\s\\S]*)\\((.*)\\)', 'testGraphGroupCase0(org.eclipse.jgit.fnmatch.FileNameMatcherTest)')","[16690, 75100]"
"('Description.java', 'org.junit.runner.Description', 'methodAndClassNamePatternGroupOrDefault', '([\\s\\S]*)\\((.*)\\)', 'testWritePack1NoObjectReuse(org.eclipse.jgit.internal.storage.file.PackWriterTest)')","[55068, 112280]"
"('Description.java', 'org.junit.runner.Description', 'methodAndClassNamePatternGroupOrDefault', '([\\s\\S]*)\\((.*)\\)', 'resolveMasterCommits(org.eclipse.jgit.lib.ReflogResolveTest)')","[27571, 85902]"
"('URIish.java', 'org.eclipse.jgit.transport.URIish', '<init>', '^([a-z][a-z0-9+-]+)://(?:(?:([^/:@]+)(?::([^\\\\/]+))?@)?((?:[^\\\\/:]+)|(?:\\[[0-9a-f:]+\\]))(?::(\\d+))?((?:/~(?:[^\\\\/]+))?[\\\\/]))?(.+)?$', 'ssh+git://me@[::1]:80//abc')",[139335]
"('Description.java', 'org.junit.runner.Description', 'methodAndClassNamePatternGroupOrDefault', '([\\s\\S]*)\\((.*)\\)', 'testKernelStyleFooter(org.eclipse.jgit.util.ChangeIdUtilTest)')","[37847, 95692]"
"('Description.java', 'org.junit.runner.Description', 'methodAndClassNamePatternGroupOrDefault', '([\\s\\S]*)\\((.*)\\)', 'testNoMatchButClose(org.eclipse.jgit.treewalk.filter.PathFilterGroupTest)')","[31277, 89466]"
"('Description.java', 'org.junit.runner.Description', 'methodAndClassNamePatternGroupOrDefault', '([\\s\\S]*)\\((.*)\\)', 'testCreateFromAnnotatetdTag(org.eclipse.jgit.api.BranchCommandTest)')","[47280, 104778]"
"('URIish.java', 'org.eclipse.jgit.transport.URIish', '<init>', '^(file):([\\\\/](?![\\\\/])((?:[A-Za-z]:)?[\\\\/]?(?:(?:[^\\\\/]+[\\\\/]+)*[^\\\\/]+[\\\\/]*)))$', 'ssh+git://lusr\\example:wtf@example.com:80/D:/x')",[127582]
"('Description.java', 'org.junit.runner.Description', 'methodAndClassNamePatternGroupOrDefault', '([\\s\\S]*)\\((.*)\\)', 'testFilePathCase1(org.eclipse.jgit.fnmatch.FileNameMatcherTest)')","[18034, 76508]"
"('Description.java', 'org.junit.runner.Description', 'methodAndClassNamePatternGroupOrDefault', '([\\s\\S]*)\\((.*)\\)', 'testReadMultipleBlocks(org.eclipse.jgit.internal.storage.dfs.DfsOutputStreamTest)')","[52475, 109882]"
"('URIish.java', 'org.eclipse.jgit.transport.URIish', '<init>', '^([a-z][a-z0-9+-]+)://(?:(?:([^/:@]+)(?::([^\\\\/]+))?@)?((?:[^\\\\/:]+)|(?:\\[[0-9a-f:]+\\]))(?::(\\d+))?((?:/~(?:[^\\\\/]+))?[\\\\/]))?(.+)?$', 'file:///tmp/jgit_test_2508525924116804520_tmp/tmp_206281197134566940/.git/')",[183001]
"('Description.java', 'org.junit.runner.Description', 'methodAndClassNamePatternGroupOrDefault', '([\\s\\S]*)\\((.*)\\)', 'testACommitWithSubjectBodyBugLineWithASpaceAndSob(org.eclipse.jgit.util.ChangeIdUtilTest)')","[37952, 95802]"
"('Description.java', 'org.junit.runner.Description', 'methodAndClassNamePatternGroupOrDefault', '([\\s\\S]*)\\((.*)\\)', 'testAutoCRLFInput(org.eclipse.jgit.lib.IndexDiffTest)')","[20681, 79082]"
"('Description.java', 'org.junit.runner.Description', 'methodAndClassNamePatternGroupOrDefault', '([\\s\\S]*)\\((.*)\\)', 'org.eclipse.jgit.dircache.DirCachePathEditTest')","[11776, 182316]"
"('URIish.java', 'org.eclipse.jgit.transport.URIish', '<init>', '^(file):([\\\\/](?![\\\\/])((?:[A-Za-z]:)?[\\\\/]?(?:(?:[^\\\\/]+[\\\\/]+)*[^\\\\/]+[\\\\/]*)))$', 'ssh://me@1.2.3.4:80//')",[135586]
"('Description.java', 'org.junit.runner.Description', 'methodAndClassNamePatternGroupOrDefault', '([\\s\\S]*)\\((.*)\\)', 'testOneAgainstTwoConflictingModifications(org.eclipse.jgit.merge.MergeAlgorithmTest)')","[10158, 68874]"
"('URIish.java', 'org.eclipse.jgit.transport.URIish', '<init>', '^([a-z][a-z0-9+-]+)://(?:(?:([^/:@]+)(?::([^\\\\/]+))?@)?((?:[^\\\\/:]+)|(?:\\[[0-9a-f:]+\\]))(?::(\\d+))?((?:/~(?:[^\\\\/]+))?[\\\\/]))?(.+)?$', 'http://l usr\\example.com@example.com//abc')","[156079, 156263]"
"('Description.java', 'org.junit.runner.Description', 'methodAndClassNamePatternGroupOrDefault', '([\\s\\S]*)\\((.*)\\)', 'testRefLogQueryIsValidRef(org.eclipse.jgit.lib.ValidRefNameTest)')","[24145, 82492]"
"('URIish.java', 'org.eclipse.jgit.transport.URIish', '<init>', '^(file):([\\\\/](?![\\\\/])((?:[A-Za-z]:)?[\\\\/]?(?:(?:[^\\\\/]+[\\\\/]+)*[^\\\\/]+[\\\\/]*)))$', 'http://lusr\\example@1.2.3.4:80/D:\\x')",[144556]
"('URIish.java', 'org.eclipse.jgit.transport.URIish', '<init>', '^(?:([^/:@]+)(?::([^\\\\/]+))?@)?((?:[^\\\\/:]+)|(?:\\[[0-9a-f:]+\\])):((?:(?:/~(?:[^\\\\/]+))[\\\\/])?(?:(?:[^\\\\/]+[\\\\/]+)*[^\\\\/]+[\\\\/]*))$', '/tmp/jgit_test_2418995499675152019_tmp/tmp_6807375775614242287.git')",[116433]
"('ChangeIdUtil.java', 'org.eclipse.jgit.util.ChangeIdUtil', 'indexOfFirstFooterLine', '^[ \\[].*$', 'more text')",[191230]
"('Description.java', 'org.junit.runner.Description', 'methodAndClassNamePatternGroupOrDefault', '([\\s\\S]*)\\((.*)\\)', 'testStandardFormat_LargeObject_TrailingGarbage(org.eclipse.jgit.internal.storage.file.UnpackedObjectTest)')","[56772, 113886]"
"('URIish.java', 'org.eclipse.jgit.transport.URIish', '<init>', '^([a-z][a-z0-9+-]+)://(?:(?:([^/:@]+)(?::([^\\\\/]+))?@)?((?:[^\\\\/:]+)|(?:\\[[0-9a-f:]+\\]))(?::(\\d+))?((?:/~(?:[^\\\\/]+))?[\\\\/]))?(.+)?$', 'ssh://me@[::1]:1234/D:/x')",[135885]
"('URIish.java', 'org.eclipse.jgit.transport.URIish', '<init>', '^(file):([\\\\/](?![\\\\/])((?:[A-Za-z]:)?[\\\\/]?(?:(?:[^\\\\/]+[\\\\/]+)*[^\\\\/]+[\\\\/]*)))$', 'ssh://l usr\\example.com@1.2.3.4:80//abc')",[136736]
"('Description.java', 'org.junit.runner.Description', 'methodAndClassNamePatternGroupOrDefault', '([\\s\\S]*)\\((.*)\\)', 'getTrackingBranchShouldReturnMergeBranchForLocalBranch(org.eclipse.jgit.lib.BranchConfigTest)')","[25078, 83350]"
"('Description.java', 'org.junit.runner.Description', 'methodAndClassNamePatternGroupOrDefault', '([\\s\\S]*)\\((.*)\\)', 'testParseGitFileName_NoLF(org.eclipse.jgit.patch.FileHeaderTest)')","[39488, 97232]"
"('URIish.java', 'org.eclipse.jgit.transport.URIish', '<init>', '^(file):([\\\\/](?![\\\\/])((?:[A-Za-z]:)?[\\\\/]?(?:(?:[^\\\\/]+[\\\\/]+)*[^\\\\/]+[\\\\/]*)))$', 'ssh+git://l usr\\example.com@1.2.3.4:1234//')",[139818]
"('Description.java', 'org.junit.runner.Description', 'methodAndClassNamePatternGroupOrDefault', '([\\s\\S]*)\\((.*)\\)', 'org.eclipse.jgit.util.Base64Test')","[36681, 187045]"
"('URIish.java', 'org.eclipse.jgit.transport.URIish', '<init>', '^([a-z][a-z0-9+-]+)://(?:(?:([^/:@]+)(?::([^\\\\/]+))?@)?((?:[^\\\\/:]+)|(?:\\[[0-9a-f:]+\\]))(?::(\\d+))?((?:/~(?:[^\\\\/]+))?[\\\\/]))?(.+)?$', '/tmp/jgit_test_7801778247778239084_tmp/tmp_7326340281197098170.git')",[117373]
"('Description.java', 'org.junit.runner.Description', 'methodAndClassNamePatternGroupOrDefault', '([\\s\\S]*)\\((.*)\\)', 'testGetRefs_PackedWithPeeled(org.eclipse.jgit.internal.storage.file.RefDirectoryTest)')","[58018, 115052]"
"('Description.java', 'org.junit.runner.Description', 'methodAndClassNamePatternGroupOrDefault', '([\\s\\S]*)\\((.*)\\)', 'org.eclipse.jgit.merge.CherryPickTest')","[11114, 182181]"
"('Description.java', 'org.junit.runner.Description', 'methodAndClassNamePatternGroupOrDefault', '([\\s\\S]*)\\((.*)\\)', 'testDequote_LoneBackslash(org.eclipse.jgit.util.QuotedStringGitPathStyleTest)')","[34076, 92040]"
"('Description.java', 'org.junit.runner.Description', 'methodAndClassNamePatternGroupOrDefault', '([\\s\\S]*)\\((.*)\\)', 'test000_openrepo_default_relative_workdirconfig(org.eclipse.jgit.internal.storage.file.T0003_BasicTest)')","[54385, 111664]"
"('URIish.java', 'org.eclipse.jgit.transport.URIish', '<init>', '^([a-z][a-z0-9+-]+)://(?:(?:([^/:@]+)(?::([^\\\\/]+))?@)?((?:[^\\\\/:]+)|(?:\\[[0-9a-f:]+\\]))(?::(\\d+))?((?:/~(?:[^\\\\/]+))?[\\\\/]))?(.+)?$', 'file:///tmp/jgit_test_6458781460138079059_tmp/tmp_5582073650838021355/.git/')",[209207]
"('URIish.java', 'org.eclipse.jgit.transport.URIish', '<init>', '^(file):([\\\\/](?![\\\\/])((?:[A-Za-z]:)?[\\\\/]?(?:(?:[^\\\\/]+[\\\\/]+)*[^\\\\/]+[\\\\/]*)))$', 'http://l usr\\example.com:wtf@1.2.3.4:1234/D:/x')",[129974]
"('Description.java', 'org.junit.runner.Description', 'methodAndClassNamePatternGroupOrDefault', '([\\s\\S]*)\\((.*)\\)', 'workingDirectoryDelete(org.eclipse.jgit.api.StashCreateCommandTest)')","[41963, 99586]"
"('URIish.java', 'org.eclipse.jgit.transport.URIish', '<init>', '^([a-z][a-z0-9+-]+)://(?:(?:([^/:@]+)(?::([^\\\\/]+))?@)?((?:[^\\\\/:]+)|(?:\\[[0-9a-f:]+\\]))(?::(\\d+))?((?:/~(?:[^\\\\/]+))?[\\\\/]))?(.+)?$', 'https://l usr\\example.com@[::1]:1234/D:\\x')",[146971]
"('Description.java', 'org.junit.runner.Description', 'methodAndClassNamePatternGroupOrDefault', '([\\s\\S]*)\\((.*)\\)', 'testConfigureCache_PackedGitLimit_0(org.eclipse.jgit.internal.storage.file.WindowCacheReconfigureTest)')","[53345, 110674]"
"('Description.java', 'org.junit.runner.Description', 'methodAndClassNamePatternGroupOrDefault', '([\\s\\S]*)\\((.*)\\)', 'testCopy_SingleOp(org.eclipse.jgit.internal.storage.pack.DeltaStreamTest)')","[52536, 109926]"
"('URIish.java', 'org.eclipse.jgit.transport.URIish', '<init>', '^(file):([\\\\/](?![\\\\/])((?:[A-Za-z]:)?[\\\\/]?(?:(?:[^\\\\/]+[\\\\/]+)*[^\\\\/]+[\\\\/]*)))$', 'ssh+git://[::1]//')","[165578, 165762, 166682, 166866, 167786, 167970]"
"('URIish.java', 'org.eclipse.jgit.transport.URIish', '<init>', '^([a-z][a-z0-9+-]+)://(?:(?:([^/:@]+)(?::([^\\\\/]+))?@)?((?:[^\\\\/:]+)|(?:\\[[0-9a-f:]+\\]))(?::(\\d+))?((?:/~(?:[^\\\\/]+))?[\\\\/]))?(.+)?$', 'ssh://l usr\\example.com:wtf@example.com:1234/D:\\x')",[123051]
"('Description.java', 'org.junit.runner.Description', 'methodAndClassNamePatternGroupOrDefault', '([\\s\\S]*)\\((.*)\\)', 'testCopy_Gap(org.eclipse.jgit.internal.storage.pack.DeltaStreamTest)')","[52620, 110014]"
"('Description.java', 'org.junit.runner.Description', 'methodAndClassNamePatternGroupOrDefault', '([\\s\\S]*)\\((.*)\\)', 'org.eclipse.jgit.lib.RepositoryCacheTest')","[20826, 183924]"
"('Description.java', 'org.junit.runner.Description', 'methodAndClassNamePatternGroupOrDefault', '([\\s\\S]*)\\((.*)\\)', 'testExceptionThrown_BareRepoGetIndex(org.eclipse.jgit.internal.storage.file.RepositorySetupWorkDirTest)')","[57127, 114238]"
"('Description.java', 'org.junit.runner.Description', 'methodAndClassNamePatternGroupOrDefault', '([\\s\\S]*)\\((.*)\\)', 'testDigitGroupCase2(org.eclipse.jgit.fnmatch.FileNameMatcherTest)')","[17656, 76112]"
"('Description.java', 'org.junit.runner.Description', 'methodAndClassNamePatternGroupOrDefault', '([\\s\\S]*)\\((.*)\\)', 'testEntryType(org.eclipse.jgit.util.RefMapTest)')","[37202, 95076]"
"('URIish.java', 'org.eclipse.jgit.transport.URIish', '<init>', '^([a-z][a-z0-9+-]+)://(?:(?:([^/:@]+)(?::([^\\\\/]+))?@)?((?:[^\\\\/:]+)|(?:\\[[0-9a-f:]+\\]))(?::(\\d+))?((?:/~(?:[^\\\\/]+))?[\\\\/]))?(.+)?$', 'http://lusr\\example@[::1]:1234//abc')",[144671]
"('URIish.java', 'org.eclipse.jgit.transport.URIish', '<init>', '^([a-z][a-z0-9+-]+)://(?:(?:([^/:@]+)(?::([^\\\\/]+))?@)?((?:[^\\\\/:]+)|(?:\\[[0-9a-f:]+\\]))(?::(\\d+))?((?:/~(?:[^\\\\/]+))?[\\\\/]))?(.+)?$', 'http://lusr\\example@[::1]//abc')","[157919, 158103]"
"('URIish.java', 'org.eclipse.jgit.transport.URIish', '<init>', '^([a-z][a-z0-9+-]+)://(?:(?:([^/:@]+)(?::([^\\\\/]+))?@)?((?:[^\\\\/:]+)|(?:\\[[0-9a-f:]+\\]))(?::(\\d+))?((?:/~(?:[^\\\\/]+))?[\\\\/]))?(.+)?$', 'http://l usr\\example.com@example.com:80/D:/x')",[143061]
"('Description.java', 'org.junit.runner.Description', 'methodAndClassNamePatternGroupOrDefault', '([\\s\\S]*)\\((.*)\\)', 'testDequote_UTF8(org.eclipse.jgit.util.QuotedStringGitPathStyleTest)')","[34370, 92348]"
"('Description.java', 'org.junit.runner.Description', 'methodAndClassNamePatternGroupOrDefault', '([\\s\\S]*)\\((.*)\\)', 'org.eclipse.jgit.internal.storage.pack.DeltaStreamTest')","[52494, 209516]"
"('URIish.java', 'org.eclipse.jgit.transport.URIish', '<init>', '^(file):([\\\\/](?![\\\\/])((?:[A-Za-z]:)?[\\\\/]?(?:(?:[^\\\\/]+[\\\\/]+)*[^\\\\/]+[\\\\/]*)))$', 'ssh://l usr\\example.com:wtf@example.com:1234/D:/x')",[122982]
"('Description.java', 'org.junit.runner.Description', 'methodAndClassNamePatternGroupOrDefault', '([\\s\\S]*)\\((.*)\\)', 'testResetHardFromIndexEntryWithoutFileToTreeWithoutFile(org.eclipse.jgit.lib.DirCacheCheckoutTest)')","[23248, 81612]"
"('Description.java', 'org.junit.runner.Description', 'methodAndClassNamePatternGroupOrDefault', '([\\s\\S]*)\\((.*)\\)', 'test020_createBlobTag(org.eclipse.jgit.internal.storage.file.T0003_BasicTest)')","[54133, 111400]"
"('URIish.java', 'org.eclipse.jgit.transport.URIish', '<init>', '^(file):([\\\\/](?![\\\\/])((?:[A-Za-z]:)?[\\\\/]?(?:(?:[^\\\\/]+[\\\\/]+)*[^\\\\/]+[\\\\/]*)))$', 'https://me:wtf@example.com:80/D:/x')",[131998]
"('Description.java', 'org.junit.runner.Description', 'methodAndClassNamePatternGroupOrDefault', '([\\s\\S]*)\\((.*)\\)', 'testRebaseWithUncommittedMasterChangeBaseCommit(org.eclipse.jgit.api.RebaseCommandTest)')","[45276, 102798]"
"('Description.java', 'org.junit.runner.Description', 'methodAndClassNamePatternGroupOrDefault', '([\\s\\S]*)\\((.*)\\)', 'testAddIfAbsent(org.eclipse.jgit.lib.ObjectIdSubclassMapTest)')","[22120, 80490]"
"('Description.java', 'org.junit.runner.Description', 'methodAndClassNamePatternGroupOrDefault', '([\\s\\S]*)\\((.*)\\)', 'testReadFanout2_2_36(org.eclipse.jgit.notes.NoteMapTest)')","[40797, 98464]"
"('ChangeIdUtil.java', 'org.eclipse.jgit.util.ChangeIdUtil', 'indexOfFirstFooterLine', '(^[a-zA-Z0-9-]+:(?!//).*$)', 'b')",[191308]
"('Description.java', 'org.junit.runner.Description', 'methodAndClassNamePatternGroupOrDefault', '([\\s\\S]*)\\((.*)\\)', 'testInvalidCommitInvalidAuthor6(org.eclipse.jgit.lib.ObjectCheckerTest)')","[26126, 84428]"
"('URIish.java', 'org.eclipse.jgit.transport.URIish', '<init>', '^(file):([\\\\/](?![\\\\/])((?:[A-Za-z]:)?[\\\\/]?(?:(?:[^\\\\/]+[\\\\/]+)*[^\\\\/]+[\\\\/]*)))$', 'https://lusr\\example:wtf@1.2.3.4:1234/D:\\x')",[134436]
"('Description.java', 'org.junit.runner.Description', 'methodAndClassNamePatternGroupOrDefault', '([\\s\\S]*)\\((.*)\\)', 'testAlphaGroupCase0(org.eclipse.jgit.fnmatch.FileNameMatcherTest)')","[17173, 75606]"
"('Description.java', 'org.junit.runner.Description', 'methodAndClassNamePatternGroupOrDefault', '([\\s\\S]*)\\((.*)\\)', 'org.eclipse.jgit.notes.NoteMapMergerTest')","[40879, 193798]"
"('Description.java', 'org.junit.runner.Description', 'methodAndClassNamePatternGroupOrDefault', '([\\s\\S]*)\\((.*)\\)', 'testDequote_BareA(org.eclipse.jgit.util.QuotedStringBourneStyleTest)')","[36578, 94482]"
"('Description.java', 'org.junit.runner.Description', 'methodAndClassNamePatternGroupOrDefault', '([\\s\\S]*)\\((.*)\\)', 'testUpdateRefDetachedUnbornHead(org.eclipse.jgit.internal.storage.file.RefUpdateTest)')","[56381, 113556]"
"('URIish.java', 'org.eclipse.jgit.transport.URIish', '<init>', '^(file):([\\\\/](?![\\\\/])((?:[A-Za-z]:)?[\\\\/]?(?:(?:[^\\\\/]+[\\\\/]+)*[^\\\\/]+[\\\\/]*)))$', 'file:/tmp/jgit_test_3938080632504476553_tmp/tmp_8192742226712825917/testCloneRepositoryWithNestedSubmodules1/.git/')","[196883, 197065]"
"('Description.java', 'org.junit.runner.Description', 'methodAndClassNamePatternGroupOrDefault', '([\\s\\S]*)\\((.*)\\)', 'testObjectMovedWithinPack(org.eclipse.jgit.internal.storage.file.ConcurrentRepackTest)')","[55543, 112698]"
"('Description.java', 'org.junit.runner.Description', 'methodAndClassNamePatternGroupOrDefault', '([\\s\\S]*)\\((.*)\\)', 'testVerySimpleGroupRangeCase2(org.eclipse.jgit.fnmatch.FileNameMatcherTest)')","[17782, 76244]"
"('URIish.java', 'org.eclipse.jgit.transport.URIish', '<init>', '^(file):([\\\\/](?![\\\\/])((?:[A-Za-z]:)?[\\\\/]?(?:(?:[^\\\\/]+[\\\\/]+)*[^\\\\/]+[\\\\/]*)))$', 'https://me@1.2.3.4:80/D:\\x')",[145660]
"('Description.java', 'org.junit.runner.Description', 'methodAndClassNamePatternGroupOrDefault', '([\\s\\S]*)\\((.*)\\)', 'test002_addFile(org.eclipse.jgit.lib.T0002_TreeTest)')","[25017, 83306]"
"('URIish.java', 'org.eclipse.jgit.transport.URIish', '<init>', '^([a-z][a-z0-9+-]+)://(?:(?:([^/:@]+)(?::([^\\\\/]+))?@)?((?:[^\\\\/:]+)|(?:\\[[0-9a-f:]+\\]))(?::(\\d+))?((?:/~(?:[^\\\\/]+))?[\\\\/]))?(.+)?$', 'ssh+git://me:wtf@1.2.3.4:1234/D:\\x')",[125627]
"('Description.java', 'org.junit.runner.Description', 'methodAndClassNamePatternGroupOrDefault', '([\\s\\S]*)\\((.*)\\)', 'testFilesAddedFromTwoBranches(org.eclipse.jgit.api.RebaseCommandTest)')","[45864, 103414]"
"('Description.java', 'org.junit.runner.Description', 'methodAndClassNamePatternGroupOrDefault', '([\\s\\S]*)\\((.*)\\)', 'testHasFlags(org.eclipse.jgit.revwalk.DateRevQueueTest)')","[7996, 66828]"
"('Description.java', 'org.junit.runner.Description', 'methodAndClassNamePatternGroupOrDefault', '([\\s\\S]*)\\((.*)\\)', 'org.eclipse.jgit.internal.storage.file.GcBranchPrunedTest')","[59043, 210426]"
"('URIish.java', 'org.eclipse.jgit.transport.URIish', '<init>', '^(file):([\\\\/](?![\\\\/])((?:[A-Za-z]:)?[\\\\/]?(?:(?:[^\\\\/]+[\\\\/]+)*[^\\\\/]+[\\\\/]*)))$', 'https://l usr\\example.com:wtf@[::1]:80//')",[133746]
"('URIish.java', 'org.eclipse.jgit.transport.URIish', '<init>', '^([a-z][a-z0-9+-]+)://(?:(?:([^/:@]+)(?::([^\\\\/]+))?@)?((?:[^\\\\/:]+)|(?:\\[[0-9a-f:]+\\]))(?::(\\d+))?((?:/~(?:[^\\\\/]+))?[\\\\/]))?(.+)?$', 'ssh://[::1]//')","[162289, 162473, 163393, 163577, 164497, 164681]"
"('URIish.java', 'org.eclipse.jgit.transport.URIish', '<init>', '^(file):([\\\\/](?![\\\\/])((?:[A-Za-z]:)?[\\\\/]?(?:(?:[^\\\\/]+[\\\\/]+)*[^\\\\/]+[\\\\/]*)))$', 'https://l usr\\example.com@[::1]/D:\\x')","[160196, 160380]"
"('URIish.java', 'org.eclipse.jgit.transport.URIish', '<init>', '^([a-z][a-z0-9+-]+)://(?:(?:([^/:@]+)(?::([^\\\\/]+))?@)?((?:[^\\\\/:]+)|(?:\\[[0-9a-f:]+\\]))(?::(\\d+))?((?:/~(?:[^\\\\/]+))?[\\\\/]))?(.+)?$', 'https://me:wtf@[::1]:1234//abc')",[132527]
"('Description.java', 'org.junit.runner.Description', 'methodAndClassNamePatternGroupOrDefault', '([\\s\\S]*)\\((.*)\\)', 'testEqualsIgnoreCase3(org.eclipse.jgit.util.StringUtilsTest)')","[33391, 91402]"
"('URIish.java', 'org.eclipse.jgit.transport.URIish', '<init>', '^([a-z][a-z0-9+-]+)://(?:(?:([^/:@]+)(?::([^\\\\/]+))?@)?((?:[^\\\\/:]+)|(?:\\[[0-9a-f:]+\\]))(?::(\\d+))?((?:/~(?:[^\\\\/]+))?[\\\\/]))?(.+)?$', 'https://me@[::1]/D:\\x')","[159115, 159299]"
"('URIish.java', 'org.eclipse.jgit.transport.URIish', '<init>', '^(file):([\\\\/](?![\\\\/])((?:[A-Za-z]:)?[\\\\/]?(?:(?:[^\\\\/]+[\\\\/]+)*[^\\\\/]+[\\\\/]*)))$', 'http://me@example.com:80/D:\\x')",[141980]
"('Description.java', 'org.junit.runner.Description', 'methodAndClassNamePatternGroupOrDefault', '([\\s\\S]*)\\((.*)\\)', 'testDepth2(org.eclipse.jgit.revwalk.RevWalkShallowTest)')","[9658, 68390]"
"('Description.java', 'org.junit.runner.Description', 'methodAndClassNamePatternGroupOrDefault', '([\\s\\S]*)\\((.*)\\)', 'testCreateSubtreeIterator(org.eclipse.jgit.treewalk.EmptyTreeIteratorTest)')","[29691, 87904]"
"('URIish.java', 'org.eclipse.jgit.transport.URIish', '<init>', '^(?:([^/:@]+)(?::([^\\\\/]+))?@)?([^\\\\/:]{2,}):([\\\\/](?:(?:[^\\\\/]+[\\\\/]+)*[^\\\\/]+[\\\\/]*))$', '/some/dir')","[117621, 118031, 118201, 118321, 118756, 118976, 119096, 119320, 119543, 119664, 119909, 120319, 120439, 120884]"
"('URIish.java', 'org.eclipse.jgit.transport.URIish', '<init>', '^([a-z][a-z0-9+-]+)://(?:(?:([^/:@]+)(?::([^\\\\/]+))?@)?((?:[^\\\\/:]+)|(?:\\[[0-9a-f:]+\\]))(?::(\\d+))?((?:/~(?:[^\\\\/]+))?[\\\\/]))?(.+)?$', 'ssh://l usr\\example.com:wtf@[::1]:80//abc')",[123879]
"('URIish.java', 'org.eclipse.jgit.transport.URIish', '<init>', '^(file):([\\\\/](?![\\\\/])((?:[A-Za-z]:)?[\\\\/]?(?:(?:[^\\\\/]+[\\\\/]+)*[^\\\\/]+[\\\\/]*)))$', 'ssh+git://me:wtf@example.com:80//')",[125282]
"('Description.java', 'org.junit.runner.Description', 'methodAndClassNamePatternGroupOrDefault', '([\\s\\S]*)\\((.*)\\)', 'testBug368927(org.eclipse.jgit.revplot.PlotCommitListTest)')","[40047, 97738]"
"('Description.java', 'org.junit.runner.Description', 'methodAndClassNamePatternGroupOrDefault', '([\\s\\S]*)\\((.*)\\)', 'testEdit_NoUniqueMiddleSide_FlipAndExpand(org.eclipse.jgit.diff.HistogramDiffTest)')","[15184, 73582]"
"('URIish.java', 'org.eclipse.jgit.transport.URIish', '<init>', '^(file):([\\\\/](?![\\\\/])((?:[A-Za-z]:)?[\\\\/]?(?:(?:[^\\\\/]+[\\\\/]+)*[^\\\\/]+[\\\\/]*)))$', 'http://l usr\\example.com@example.com:1234//abc')",[142808]
"('URIish.java', 'org.eclipse.jgit.transport.URIish', '<init>', '^(file):([\\\\/](?![\\\\/])((?:[A-Za-z]:)?[\\\\/]?(?:(?:[^\\\\/]+[\\\\/]+)*[^\\\\/]+[\\\\/]*)))$', 'https://l usr\\example.com:wtf@[::1]:1234/D:\\x')",[133700]
"('Description.java', 'org.junit.runner.Description', 'methodAndClassNamePatternGroupOrDefault', '([\\s\\S]*)\\((.*)\\)', 'org.eclipse.jgit.util.RawParseUtilsTest')","[36784, 187072]"
"('Description.java', 'org.junit.runner.Description', 'methodAndClassNamePatternGroupOrDefault', '([\\s\\S]*)\\((.*)\\)', 'testSetDestination_SourceNull(org.eclipse.jgit.transport.RefSpecTest)')","[3277, 62362]"
"('URIish.java', 'org.eclipse.jgit.transport.URIish', '<init>', '^(file):([\\\\/](?![\\\\/])((?:[A-Za-z]:)?[\\\\/]?(?:(?:[^\\\\/]+[\\\\/]+)*[^\\\\/]+[\\\\/]*)))$', 'ssh://l usr\\example.com@[::1]:1234/D:/x')",[136966]
"('Description.java', 'org.junit.runner.Description', 'methodAndClassNamePatternGroupOrDefault', '([\\s\\S]*)\\((.*)\\)', 'testNoMagicRefCharacters(org.eclipse.jgit.lib.ValidRefNameTest)')","[24124, 82470]"
"('URIish.java', 'org.eclipse.jgit.transport.URIish', '<init>', '^([a-z][a-z0-9+-]+)://(?:(?:([^/:@]+)(?::([^\\\\/]+))?@)?((?:[^\\\\/:]+)|(?:\\[[0-9a-f:]+\\]))(?::(\\d+))?((?:/~(?:[^\\\\/]+))?[\\\\/]))?(.+)?$', 'ssh://lusr\\example:wtf@1.2.3.4:80//')",[124569]
"('Description.java', 'org.junit.runner.Description', 'methodAndClassNamePatternGroupOrDefault', '([\\s\\S]*)\\((.*)\\)', 'testLocalTransportFetchWithoutLocalRepository(org.eclipse.jgit.transport.TransportTest)')","[4109, 63154]"
"('Description.java', 'org.junit.runner.Description', 'methodAndClassNamePatternGroupOrDefault', '([\\s\\S]*)\\((.*)\\)', 'testTimeout_readBuffer_Timeout(org.eclipse.jgit.util.io.TimeoutInputStreamTest)')","[32769, 90830]"
"('Description.java', 'org.junit.runner.Description', 'methodAndClassNamePatternGroupOrDefault', '([\\s\\S]*)\\((.*)\\)', 'testGetValidLocalWithTwoSlashesHumanishName(org.eclipse.jgit.transport.URIishTest)')","[2168, 61240]"
"('URIish.java', 'org.eclipse.jgit.transport.URIish', '<init>', '^(?:([^/:@]+)(?::([^\\\\/]+))?@)?([^\\\\/:]{2,}):([\\\\/](?:(?:[^\\\\/]+[\\\\/]+)*[^\\\\/]+[\\\\/]*))$', '/tmp/jgit_test_7801778247778239084_tmp/tmp_7326340281197098170.git')",[117423]
"('URIish.java', 'org.eclipse.jgit.transport.URIish', '<init>', '^(file):([\\\\/](?![\\\\/])((?:[A-Za-z]:)?[\\\\/]?(?:(?:[^\\\\/]+[\\\\/]+)*[^\\\\/]+[\\\\/]*)))$', 'ssh://lusr\\example:wtf@[::1]:1234//abc')",[124776]
"('URIish.java', 'org.eclipse.jgit.transport.URIish', '<init>', '^(file):([\\\\/](?![\\\\/])((?:[A-Za-z]:)?[\\\\/]?(?:(?:[^\\\\/]+[\\\\/]+)*[^\\\\/]+[\\\\/]*)))$', 'ssh://lusr\\example@[::1]:80//abc')",[138208]
"('URIish.java', 'org.eclipse.jgit.transport.URIish', '<init>', '^(file):([\\\\/](?![\\\\/])((?:[A-Za-z]:)?[\\\\/]?(?:(?:[^\\\\/]+[\\\\/]+)*[^\\\\/]+[\\\\/]*)))$', 'ssh+git://me:wtf@1.2.3.4:1234//abc')",[125512]
"('Description.java', 'org.junit.runner.Description', 'methodAndClassNamePatternGroupOrDefault', '([\\s\\S]*)\\((.*)\\)', 'testBinaryDontDetect(org.eclipse.jgit.util.io.EolCanonicalizingInputStreamTest)')","[32998, 91050]"
"('Description.java', 'org.junit.runner.Description', 'methodAndClassNamePatternGroupOrDefault', '([\\s\\S]*)\\((.*)\\)', 'testMaxCountRevFilter0(org.eclipse.jgit.revwalk.MaxCountRevFilterTest)')","[6832, 65728]"
"('URIish.java', 'org.eclipse.jgit.transport.URIish', '<init>', '^([a-z][a-z0-9+-]+)://(?:(?:([^/:@]+)(?::([^\\\\/]+))?@)?((?:[^\\\\/:]+)|(?:\\[[0-9a-f:]+\\]))(?::(\\d+))?((?:/~(?:[^\\\\/]+))?[\\\\/]))?(.+)?$', 'http://me:wtf@example.com:80/D:/x')",[128709]
"('URIish.java', 'org.eclipse.jgit.transport.URIish', '<init>', '^([a-z][a-z0-9+-]+)://(?:(?:([^/:@]+)(?::([^\\\\/]+))?@)?((?:[^\\\\/:]+)|(?:\\[[0-9a-f:]+\\]))(?::(\\d+))?((?:/~(?:[^\\\\/]+))?[\\\\/]))?(.+)?$', 'ssh+git://lusr\\example:wtf@[::1]:1234/D:/x')",[128157]
"('URIish.java', 'org.eclipse.jgit.transport.URIish', '<init>', '^([a-z][a-z0-9+-]+)://(?:(?:([^/:@]+)(?::([^\\\\/]+))?@)?((?:[^\\\\/:]+)|(?:\\[[0-9a-f:]+\\]))(?::(\\d+))?((?:/~(?:[^\\\\/]+))?[\\\\/]))?(.+)?$', 'ssh+git://l usr\\example.com@[::1]:1234/D:\\x')",[140347]
"('Description.java', 'org.junit.runner.Description', 'methodAndClassNamePatternGroupOrDefault', '([\\s\\S]*)\\((.*)\\)', 'org.eclipse.jgit.util.RefMapTest')","[36866, 187099]"
"('URIish.java', 'org.eclipse.jgit.transport.URIish', '<init>', '^(file):([\\\\/](?![\\\\/])((?:[A-Za-z]:)?[\\\\/]?(?:(?:[^\\\\/]+[\\\\/]+)*[^\\\\/]+[\\\\/]*)))$', 'file:///tmp/jgit_test_4892568789505525695_tmp/tmp_8246577018084337858/.git/')",[185758]
"('Description.java', 'org.junit.runner.Description', 'methodAndClassNamePatternGroupOrDefault', '([\\s\\S]*)\\((.*)\\)', 'testParseOldStyleNoTagger(org.eclipse.jgit.revwalk.RevTagParseTest)')","[6956, 65838]"
"('Description.java', 'org.junit.runner.Description', 'methodAndClassNamePatternGroupOrDefault', '([\\s\\S]*)\\((.*)\\)', 'testEscapedBracket1(org.eclipse.jgit.fnmatch.FileNameMatcherTest)')","[19231, 77762]"
"('Description.java', 'org.junit.runner.Description', 'methodAndClassNamePatternGroupOrDefault', '([\\s\\S]*)\\((.*)\\)', 'testGetValidWithEmptySlashDotGitHumanishName(org.eclipse.jgit.transport.URIishTest)')","[2273, 61350]"
"('Description.java', 'org.junit.runner.Description', 'methodAndClassNamePatternGroupOrDefault', '([\\s\\S]*)\\((.*)\\)', 'testTagTree(org.eclipse.jgit.revwalk.RevTagParseTest)')","[6914, 65794]"
"('Description.java', 'org.junit.runner.Description', 'methodAndClassNamePatternGroupOrDefault', '([\\s\\S]*)\\((.*)\\)', 'testJVMDefaultLocale(org.eclipse.jgit.nls.NLSTest)')","[263, 59304]"
"('Description.java', 'org.junit.runner.Description', 'methodAndClassNamePatternGroupOrDefault', '([\\s\\S]*)\\((.*)\\)', 'testParse_NoBinary(org.eclipse.jgit.patch.PatchTest)')","[39696, 97430]"
"('Description.java', 'org.junit.runner.Description', 'methodAndClassNamePatternGroupOrDefault', '([\\s\\S]*)\\((.*)\\)', 'org.eclipse.jgit.util.QuotedStringBourneUserPathStyleTest')","[38534, 193420]"
"('URIish.java', 'org.eclipse.jgit.transport.URIish', '<init>', '^(file):([\\\\/](?![\\\\/])((?:[A-Za-z]:)?[\\\\/]?(?:(?:[^\\\\/]+[\\\\/]+)*[^\\\\/]+[\\\\/]*)))$', 'ssh://me@example.com/D:\\x')","[148420, 148604]"
"('Description.java', 'org.junit.runner.Description', 'methodAndClassNamePatternGroupOrDefault', '([\\s\\S]*)\\((.*)\\)', 'testRebaseShouldBeAbleToHandleEmptyLinesInRebaseTodoFile(org.eclipse.jgit.api.RebaseCommandTest)')","[45150, 102666]"
"('Description.java', 'org.junit.runner.Description', 'methodAndClassNamePatternGroupOrDefault', '([\\s\\S]*)\\((.*)\\)', 'org.eclipse.jgit.api.TagCommandTest')","[41419, 194447]"
"('URIish.java', 'org.eclipse.jgit.transport.URIish', '<init>', '^(file):([\\\\/](?![\\\\/])((?:[A-Za-z]:)?[\\\\/]?(?:(?:[^\\\\/]+[\\\\/]+)*[^\\\\/]+[\\\\/]*)))$', 'http://1.2.3.4/D:/x')","[168614, 168798, 169718, 169902, 170822, 171006]"
"('Description.java', 'org.junit.runner.Description', 'methodAndClassNamePatternGroupOrDefault', '([\\s\\S]*)\\((.*)\\)', 'testLineDelimiter(org.eclipse.jgit.diff.RawTextTest)')","[14270, 72724]"
"('URIish.java', 'org.eclipse.jgit.transport.URIish', '<init>', '^(file):([\\\\/](?![\\\\/])((?:[A-Za-z]:)?[\\\\/]?(?:(?:[^\\\\/]+[\\\\/]+)*[^\\\\/]+[\\\\/]*)))$', 'ssh+git://lusr\\example:wtf@example.com:80/D:\\x')",[127628]
"('URIish.java', 'org.eclipse.jgit.transport.URIish', '<init>', '^(?:([^/:@]+)(?::([^\\\\/]+))?@)?([^\\\\/:]{2,}):([\\\\/](?:(?:[^\\\\/]+[\\\\/]+)*[^\\\\/]+[\\\\/]*))$', '/tmp/jgit_test_2434055886334526133_tmp/tmp_1405098318662614791.git')",[116583]
"('URIish.java', 'org.eclipse.jgit.transport.URIish', '<init>', '^(file):([\\\\/](?![\\\\/])((?:[A-Za-z]:)?[\\\\/]?(?:(?:[^\\\\/]+[\\\\/]+)*[^\\\\/]+[\\\\/]*)))$', 'https://l usr\\example.com:wtf@[::1]:1234/D:/x')",[133654]
"('Description.java', 'org.junit.runner.Description', 'methodAndClassNamePatternGroupOrDefault', '([\\s\\S]*)\\((.*)\\)', 'org.eclipse.jgit.fnmatch.FileNameMatcherTest')","[16081, 182883]"
"('Description.java', 'org.junit.runner.Description', 'methodAndClassNamePatternGroupOrDefault', '([\\s\\S]*)\\((.*)\\)', 'testAddGrowsWithObjects(org.eclipse.jgit.lib.ObjectIdOwnerMapTest)')","[21975, 80358]"
"('Description.java', 'org.junit.runner.Description', 'methodAndClassNamePatternGroupOrDefault', '([\\s\\S]*)\\((.*)\\)', 'testMaliciousAbsoluteUNCPathWindows1(org.eclipse.jgit.lib.DirCacheCheckoutMaliciousPathTest)')","[21412, 79808]"
"('URIish.java', 'org.eclipse.jgit.transport.URIish', '<init>', '^(file):([\\\\/](?![\\\\/])((?:[A-Za-z]:)?[\\\\/]?(?:(?:[^\\\\/]+[\\\\/]+)*[^\\\\/]+[\\\\/]*)))$', 'https://l usr\\example.com:wtf@1.2.3.4:80/D:/x')",[133470]
"('URIish.java', 'org.eclipse.jgit.transport.URIish', '<init>', '^([a-z][a-z0-9+-]+)://(?:(?:([^/:@]+)(?::([^\\\\/]+))?@)?((?:[^\\\\/:]+)|(?:\\[[0-9a-f:]+\\]))(?::(\\d+))?((?:/~(?:[^\\\\/]+))?[\\\\/]))?(.+)?$', 'ssh+git://l usr\\example.com:wtf@example.com:80//abc')",[126455]
"('URIish.java', 'org.eclipse.jgit.transport.URIish', '<init>', '^(file):([\\\\/](?![\\\\/])((?:[A-Za-z]:)?[\\\\/]?(?:(?:[^\\\\/]+[\\\\/]+)*[^\\\\/]+[\\\\/]*)))$', 'ssh+git://l usr\\example.com@[::1]:80//')",[140370]
"('Description.java', 'org.junit.runner.Description', 'methodAndClassNamePatternGroupOrDefault', '([\\s\\S]*)\\((.*)\\)', 'testNone(org.eclipse.jgit.revwalk.RevWalkMergeBaseTest)')","[7685, 66542]"
"('Description.java', 'org.junit.runner.Description', 'methodAndClassNamePatternGroupOrDefault', '([\\s\\S]*)\\((.*)\\)', 'testRename(org.eclipse.jgit.api.BlameCommandTest)')","[52351, 109772]"
"('URIish.java', 'org.eclipse.jgit.transport.URIish', '<init>', '^(file):([\\\\/](?![\\\\/])((?:[A-Za-z]:)?[\\\\/]?(?:(?:[^\\\\/]+[\\\\/]+)*[^\\\\/]+[\\\\/]*)))$', 'ssh://lusr\\example:wtf@[::1]:1234/D:\\x')",[124868]
"('Description.java', 'org.junit.runner.Description', 'methodAndClassNamePatternGroupOrDefault', '([\\s\\S]*)\\((.*)\\)', 'test001_Initalize(org.eclipse.jgit.internal.storage.file.T0003_BasicTest)')","[54196, 111466]"
"('Description.java', 'org.junit.runner.Description', 'methodAndClassNamePatternGroupOrDefault', '([\\s\\S]*)\\((.*)\\)', 'testReadACK_Invalid4(org.eclipse.jgit.transport.PacketLineInTest)')","[3695, 62780]"
"('Description.java', 'org.junit.runner.Description', 'methodAndClassNamePatternGroupOrDefault', '([\\s\\S]*)\\((.*)\\)', 'checkMergeEqualNewTrees(org.eclipse.jgit.merge.ResolveMergerTest)')","[10448, 69138]"
"('URIish.java', 'org.eclipse.jgit.transport.URIish', '<init>', '^([a-z][a-z0-9+-]+)://(?:(?:([^/:@]+)(?::([^\\\\/]+))?@)?((?:[^\\\\/:]+)|(?:\\[[0-9a-f:]+\\]))(?::(\\d+))?((?:/~(?:[^\\\\/]+))?[\\\\/]))?(.+)?$', '/tmp/jgit_test_104863573169670211_tmp/tmp_8401616164607390426')","[200381, 200511, 200658, 200808]"
"('URIish.java', 'org.eclipse.jgit.transport.URIish', '<init>', '^(file):([\\\\/](?![\\\\/])((?:[A-Za-z]:)?[\\\\/]?(?:(?:[^\\\\/]+[\\\\/]+)*[^\\\\/]+[\\\\/]*)))$', 'file:///tmp/jgit_test_5830532143575264668_tmp/tmp_677279644560589145/.git/')",[183408]
"('Description.java', 'org.junit.runner.Description', 'methodAndClassNamePatternGroupOrDefault', '([\\s\\S]*)\\((.*)\\)', 'testMaliciousGitPathEndSpaceWindows(org.eclipse.jgit.lib.DirCacheCheckoutMaliciousPathTest)')","[21832, 80248]"
"('URIish.java', 'org.eclipse.jgit.transport.URIish', '<init>', '^(file):([\\\\/](?![\\\\/])((?:[A-Za-z]:)?[\\\\/]?(?:(?:[^\\\\/]+[\\\\/]+)*[^\\\\/]+[\\\\/]*)))$', 'http://me:wtf@1.2.3.4:80//abc')",[129008]
"('Description.java', 'org.junit.runner.Description', 'methodAndClassNamePatternGroupOrDefault', '([\\s\\S]*)\\((.*)\\)', 'testIterator(org.eclipse.jgit.lib.ObjectIdSubclassMapTest)')","[22204, 80578]"
"('URIish.java', 'org.eclipse.jgit.transport.URIish', '<init>', '^(file):([\\\\/](?![\\\\/])((?:[A-Za-z]:)?[\\\\/]?(?:(?:[^\\\\/]+[\\\\/]+)*[^\\\\/]+[\\\\/]*)))$', 'https://me:wtf@1.2.3.4:80/D:/x')",[132366]
"('Description.java', 'org.junit.runner.Description', 'methodAndClassNamePatternGroupOrDefault', '([\\s\\S]*)\\((.*)\\)', 'testBuilder_AddAll(org.eclipse.jgit.util.RefListTest)')","[35267, 93228]"
"('Description.java', 'org.junit.runner.Description', 'methodAndClassNamePatternGroupOrDefault', '([\\s\\S]*)\\((.*)\\)', 'testSignedOffBy_SkipNonFooter(org.eclipse.jgit.revwalk.FooterLineTest)')","[6315, 65266]"
"('URIish.java', 'org.eclipse.jgit.transport.URIish', '<init>', '^(file):([\\\\/](?![\\\\/])((?:[A-Za-z]:)?[\\\\/]?(?:(?:[^\\\\/]+[\\\\/]+)*[^\\\\/]+[\\\\/]*)))$', 'ssh://[::1]//')","[162266, 162450, 163370, 163554, 164474, 164658]"
"('Description.java', 'org.junit.runner.Description', 'methodAndClassNamePatternGroupOrDefault', '([\\s\\S]*)\\((.*)\\)', 'testDirCacheAltersId(org.eclipse.jgit.util.ChangeIdUtilTest)')","[38330, 96198]"
"('URIish.java', 'org.eclipse.jgit.transport.URIish', '<init>', '^([a-z][a-z0-9+-]+)://(?:(?:([^/:@]+)(?::([^\\\\/]+))?@)?((?:[^\\\\/:]+)|(?:\\[[0-9a-f:]+\\]))(?::(\\d+))?((?:/~(?:[^\\\\/]+))?[\\\\/]))?(.+)?$', '/tmp/jgit_test_983393012567618838_tmp/tmp_60736882191290227')","[204546, 204676]"
"('URIish.java', 'org.eclipse.jgit.transport.URIish', '<init>', '^(file):([\\\\/](?![\\\\/])((?:[A-Za-z]:)?[\\\\/]?(?:(?:[^\\\\/]+[\\\\/]+)*[^\\\\/]+[\\\\/]*)))$', 'ssh://me:wtf@[::1]:1234/D:/x')",[122614]
"('Description.java', 'org.junit.runner.Description', 'methodAndClassNamePatternGroupOrDefault', '([\\s\\S]*)\\((.*)\\)', 'org.eclipse.jgit.lib.ObjectIdOwnerMapTest')","[21912, 184005]"
"('URIish.java', 'org.eclipse.jgit.transport.URIish', '<init>', '^(?:([^/:@]+)(?::([^\\\\/]+))?@)?((?:[^\\\\/:]+)|(?:\\[[0-9a-f:]+\\])):((?:(?:/~(?:[^\\\\/]+))[\\\\/])?(?:(?:[^\\\\/]+[\\\\/]+)*[^\\\\/]+[\\\\/]*))$', '/tmp/jgit_test_2564324336982684232_tmp/tmp_7539504802091562184')","[199425, 199560, 199708, 199858, 200008]"
"('Description.java', 'org.junit.runner.Description', 'methodAndClassNamePatternGroupOrDefault', '([\\s\\S]*)\\((.*)\\)', 'testDequote_SoleSq(org.eclipse.jgit.util.QuotedStringBourneStyleTest)')","[36557, 94460]"
"('URIish.java', 'org.eclipse.jgit.transport.URIish', '<init>', '^([\\\\/]?((?:[A-Za-z]:)?[\\\\/]?(?:(?:[^\\\\/]+[\\\\/]+)*[^\\\\/]+[\\\\/]*)))$', '/a/b/c.git/')",[175859]
"('URIish.java', 'org.eclipse.jgit.transport.URIish', '<init>', '^(file):([\\\\/](?![\\\\/])((?:[A-Za-z]:)?[\\\\/]?(?:(?:[^\\\\/]+[\\\\/]+)*[^\\\\/]+[\\\\/]*)))$', 'https://[::1]//')","[172202, 172386, 173306, 173490, 174410, 174594]"
"('Description.java', 'org.junit.runner.Description', 'methodAndClassNamePatternGroupOrDefault', '([\\s\\S]*)\\((.*)\\)', 'org.eclipse.jgit.transport.BundleWriterTest')","[3882, 180388]"
"('URIish.java', 'org.eclipse.jgit.transport.URIish', '<init>', '^([a-z][a-z0-9+-]+)://(?:(?:([^/:@]+)(?::([^\\\\/]+))?@)?((?:[^\\\\/:]+)|(?:\\[[0-9a-f:]+\\]))(?::(\\d+))?((?:/~(?:[^\\\\/]+))?[\\\\/]))?(.+)?$', 'ssh://lusr\\example@example.com:80//')",[137449]
"('URIish.java', 'org.eclipse.jgit.transport.URIish', '<init>', '^(file):([\\\\/](?![\\\\/])((?:[A-Za-z]:)?[\\\\/]?(?:(?:[^\\\\/]+[\\\\/]+)*[^\\\\/]+[\\\\/]*)))$', 'ssh+git://l usr\\example.com@1.2.3.4:1234//abc')",[139864]
"('URIish.java', 'org.eclipse.jgit.transport.URIish', '<init>', '^(file):([\\\\/](?![\\\\/])((?:[A-Za-z]:)?[\\\\/]?(?:(?:[^\\\\/]+[\\\\/]+)*[^\\\\/]+[\\\\/]*)))$', 'https://lusr\\example:wtf@1.2.3.4:80/D:\\x')",[134620]
"('URIish.java', 'org.eclipse.jgit.transport.URIish', '<init>', '^([a-z][a-z0-9+-]+)://(?:(?:([^/:@]+)(?::([^\\\\/]+))?@)?((?:[^\\\\/:]+)|(?:\\[[0-9a-f:]+\\]))(?::(\\d+))?((?:/~(?:[^\\\\/]+))?[\\\\/]))?(.+)?$', 'http://1.2.3.4//abc')","[168591, 168775, 169695, 169879, 170799, 170983]"
"('Description.java', 'org.junit.runner.Description', 'methodAndClassNamePatternGroupOrDefault', '([\\s\\S]*)\\((.*)\\)', 'testRemove(org.eclipse.jgit.util.RefMapTest)')","[37307, 95186]"
"('Description.java', 'org.junit.runner.Description', 'methodAndClassNamePatternGroupOrDefault', '([\\s\\S]*)\\((.*)\\)', 'testCopyWholeObject_Length128(org.eclipse.jgit.internal.storage.pack.DeltaIndexTest)')","[52849, 110234]"
"('Description.java', 'org.junit.runner.Description', 'methodAndClassNamePatternGroupOrDefault', '([\\s\\S]*)\\((.*)\\)', 'testDegenerate_DeleteMiddle(org.eclipse.jgit.diff.MyersDiffTest)')","[14541, 72988]"
"('Description.java', 'org.junit.runner.Description', 'methodAndClassNamePatternGroupOrDefault', '([\\s\\S]*)\\((.*)\\)', 'org.eclipse.jgit.dircache.DirCacheIteratorTest')","[12335, 182424]"
"('URIish.java', 'org.eclipse.jgit.transport.URIish', '<init>', '^([a-z][a-z0-9+-]+)://(?:(?:([^/:@]+)(?::([^\\\\/]+))?@)?((?:[^\\\\/:]+)|(?:\\[[0-9a-f:]+\\]))(?::(\\d+))?((?:/~(?:[^\\\\/]+))?[\\\\/]))?(.+)?$', 'https://me@[::1]:80//abc')",[145959]
"('Description.java', 'org.junit.runner.Description', 'methodAndClassNamePatternGroupOrDefault', '([\\s\\S]*)\\((.*)\\)', 'testAlias_BatchModeDefault(org.eclipse.jgit.transport.OpenSshConfigTest)')","[2397, 61460]"
"('URIish.java', 'org.eclipse.jgit.transport.URIish', '<init>', '^([\\\\/]?((?:[A-Za-z]:)?[\\\\/]?(?:(?:[^\\\\/]+[\\\\/]+)*[^\\\\/]+[\\\\/]*)))$', '/tmp/jgit_test_5272834838855978774_tmp/tmp_5245828813622345398')","[200188, 200333]"
"('URIish.java', 'org.eclipse.jgit.transport.URIish', '<init>', '^(file):([\\\\/](?![\\\\/])((?:[A-Za-z]:)?[\\\\/]?(?:(?:[^\\\\/]+[\\\\/]+)*[^\\\\/]+[\\\\/]*)))$', 'https://me@[::1]/D:\\x')","[159092, 159276]"
"('Description.java', 'org.junit.runner.Description', 'methodAndClassNamePatternGroupOrDefault', '([\\s\\S]*)\\((.*)\\)', 'nullForNameShouldThrowIllegalArgumentException(org.eclipse.jgit.lib.T0001_PersonIdentTest)')","[27737, 86056]"
"('Description.java', 'org.junit.runner.Description', 'methodAndClassNamePatternGroupOrDefault', '([\\s\\S]*)\\((.*)\\)', 'testReadWhileAppendIsInProgress(org.eclipse.jgit.internal.storage.file.ReflogReaderTest)')","[58919, 115976]"
"('URIish.java', 'org.eclipse.jgit.transport.URIish', '<init>', '^([a-z][a-z0-9+-]+)://(?:(?:([^/:@]+)(?::([^\\\\/]+))?@)?((?:[^\\\\/:]+)|(?:\\[[0-9a-f:]+\\]))(?::(\\d+))?((?:/~(?:[^\\\\/]+))?[\\\\/]))?(.+)?$', 'ssh+git://lusr\\example@example.com/D:/x')","[153917, 154101]"
"('URIish.java', 'org.eclipse.jgit.transport.URIish', '<init>', '^(file):([\\\\/](?![\\\\/])((?:[A-Za-z]:)?[\\\\/]?(?:(?:[^\\\\/]+[\\\\/]+)*[^\\\\/]+[\\\\/]*)))$', 'http://me:wtf@example.com:1234/D:/x')",[128502]
"('Description.java', 'org.junit.runner.Description', 'methodAndClassNamePatternGroupOrDefault', '([\\s\\S]*)\\((.*)\\)', 'testDerefCommit(org.eclipse.jgit.lib.RepositoryResolveTest)')","[27153, 85484]"
"('URIish.java', 'org.eclipse.jgit.transport.URIish', '<init>', '^(file):([\\\\/](?![\\\\/])((?:[A-Za-z]:)?[\\\\/]?(?:(?:[^\\\\/]+[\\\\/]+)*[^\\\\/]+[\\\\/]*)))$', 'D:/m y')","[178136, 178251]"
"('Description.java', 'org.junit.runner.Description', 'methodAndClassNamePatternGroupOrDefault', '([\\s\\S]*)\\((.*)\\)', 'testParse_OnlyLFMessage(org.eclipse.jgit.revwalk.RevCommitParseTest)')","[8784, 67554]"
"('Description.java', 'org.junit.runner.Description', 'methodAndClassNamePatternGroupOrDefault', '([\\s\\S]*)\\((.*)\\)', 'org.eclipse.jgit.diff.MyersDiffTest')","[14373, 182694]"
"('Description.java', 'org.junit.runner.Description', 'methodAndClassNamePatternGroupOrDefault', '([\\s\\S]*)\\((.*)\\)', 'invalidSetSource(org.eclipse.jgit.transport.RefSpecTest)')","[2878, 61944]"
"('Description.java', 'org.junit.runner.Description', 'methodAndClassNamePatternGroupOrDefault', '([\\s\\S]*)\\((.*)\\)', 'testTwoSame(org.eclipse.jgit.treewalk.filter.InterIndexDiffFilterTest)')","[31525, 89686]"
"('Description.java', 'org.junit.runner.Description', 'methodAndClassNamePatternGroupOrDefault', '([\\s\\S]*)\\((.*)\\)', 'org.eclipse.jgit.api.ResetCommandTest')","[42501, 199353]"
"('URIish.java', 'org.eclipse.jgit.transport.URIish', '<init>', '^(file):([\\\\/](?![\\\\/])((?:[A-Za-z]:)?[\\\\/]?(?:(?:[^\\\\/]+[\\\\/]+)*[^\\\\/]+[\\\\/]*)))$', 'http://lusr\\example@example.com:80//abc')",[144096]
"('Description.java', 'org.junit.runner.Description', 'methodAndClassNamePatternGroupOrDefault', '([\\s\\S]*)\\((.*)\\)', 'testBare_CreateRepositoryFromGitDirOnlyWithBareConfigTrue(org.eclipse.jgit.internal.storage.file.RepositorySetupWorkDirTest)')","[56959, 114062]"
"('URIish.java', 'org.eclipse.jgit.transport.URIish', '<init>', '^([a-z][a-z0-9+-]+)://(?:(?:([^/:@]+)(?::([^\\\\/]+))?@)?((?:[^\\\\/:]+)|(?:\\[[0-9a-f:]+\\]))(?::(\\d+))?((?:/~(?:[^\\\\/]+))?[\\\\/]))?(.+)?$', 'http://l usr\\example.com@example.com:80/D:\\x')",[143107]
"('Description.java', 'org.junit.runner.Description', 'methodAndClassNamePatternGroupOrDefault', '([\\s\\S]*)\\((.*)\\)', 'testTwoConflictingModifications(org.eclipse.jgit.merge.MergeAlgorithmTest)')","[10200, 68918]"
"('Description.java', 'org.junit.runner.Description', 'methodAndClassNamePatternGroupOrDefault', '([\\s\\S]*)\\((.*)\\)', 'testSetDestination(org.eclipse.jgit.transport.RefSpecTest)')","[2794, 61856]"
"('Description.java', 'org.junit.runner.Description', 'methodAndClassNamePatternGroupOrDefault', '([\\s\\S]*)\\((.*)\\)', 'testWhole_SmallObject(org.eclipse.jgit.internal.storage.file.PackFileTest)')","[53883, 111158]"
"('Description.java', 'org.junit.runner.Description', 'methodAndClassNamePatternGroupOrDefault', '([\\s\\S]*)\\((.*)\\)', 'testContext1(org.eclipse.jgit.diff.DiffFormatterReflowTest)')","[13274, 71800]"
"('URIish.java', 'org.eclipse.jgit.transport.URIish', '<init>', '^(file):([\\\\/](?![\\\\/])((?:[A-Za-z]:)?[\\\\/]?(?:(?:[^\\\\/]+[\\\\/]+)*[^\\\\/]+[\\\\/]*)))$', 'file:///tmp/jgit_test_6827277949916927388_tmp/tmp_1962871144296277635.git/')","[194501, 194556, 194691, 194746, 194881, 194936, 195071, 195126, 195261, 195316, 195451, 195506, 195641, 195696]"
"('Description.java', 'org.junit.runner.Description', 'methodAndClassNamePatternGroupOrDefault', '([\\s\\S]*)\\((.*)\\)', 'testBoundary(org.eclipse.jgit.util.io.AutoCRLFInputStreamTest)')","[33267, 91292]"
"('URIish.java', 'org.eclipse.jgit.transport.URIish', '<init>', '^(file):([\\\\/](?![\\\\/])((?:[A-Za-z]:)?[\\\\/]?(?:(?:[^\\\\/]+[\\\\/]+)*[^\\\\/]+[\\\\/]*)))$', 'https://me@1.2.3.4:80//abc')",[145568]
"('Description.java', 'org.junit.runner.Description', 'methodAndClassNamePatternGroupOrDefault', '([\\s\\S]*)\\((.*)\\)', 'testTimeout_flush_Timeout(org.eclipse.jgit.util.io.TimeoutOutputStreamTest)')","[32584, 90676]"
"('Description.java', 'org.junit.runner.Description', 'methodAndClassNamePatternGroupOrDefault', '([\\s\\S]*)\\((.*)\\)', 'testSpecialGroupCase4(org.eclipse.jgit.fnmatch.FileNameMatcherTest)')","[16186, 74572]"
"('Description.java', 'org.junit.runner.Description', 'methodAndClassNamePatternGroupOrDefault', '([\\s\\S]*)\\((.*)\\)', 'commitUpdatesSmudgedEntries(org.eclipse.jgit.api.CommitCommandTest)')","[43545, 101104]"
"('URIish.java', 'org.eclipse.jgit.transport.URIish', '<init>', '^(file):([\\\\/](?![\\\\/])((?:[A-Za-z]:)?[\\\\/]?(?:(?:[^\\\\/]+[\\\\/]+)*[^\\\\/]+[\\\\/]*)))$', 'https://lusr\\example:wtf@1.2.3.4:1234//abc')",[134344]
"('Description.java', 'org.junit.runner.Description', 'methodAndClassNamePatternGroupOrDefault', '([\\s\\S]*)\\((.*)\\)', 'testDeleteMaster(org.eclipse.jgit.transport.RefSpecTest)')","[2941, 62010]"
"('URIish.java', 'org.eclipse.jgit.transport.URIish', '<init>', '^(file):([\\\\/](?![\\\\/])((?:[A-Za-z]:)?[\\\\/]?(?:(?:[^\\\\/]+[\\\\/]+)*[^\\\\/]+[\\\\/]*)))$', 'http://lusr\\example:wtf@1.2.3.4:1234//abc')",[131032]
"('Description.java', 'org.junit.runner.Description', 'methodAndClassNamePatternGroupOrDefault', '([\\s\\S]*)\\((.*)\\)', 'checkMergeConflictingFilesWithTreeInIndex(org.eclipse.jgit.merge.ResolveMergerTest)')","[10616, 69314]"
"('Description.java', 'org.junit.runner.Description', 'methodAndClassNamePatternGroupOrDefault', '([\\s\\S]*)\\((.*)\\)', 'invalidWhenWildcardAfterText(org.eclipse.jgit.transport.RefSpecTest)')","[3109, 62186]"
"('Description.java', 'org.junit.runner.Description', 'methodAndClassNamePatternGroupOrDefault', '([\\s\\S]*)\\((.*)\\)', 'testOnlyOption_f1_6_f2_14_a(org.eclipse.jgit.api.CommitOnlyTest)')","[49599, 107088]"
"('Description.java', 'org.junit.runner.Description', 'methodAndClassNamePatternGroupOrDefault', '([\\s\\S]*)\\((.*)\\)', 'testRemoveMiddleURI(org.eclipse.jgit.transport.RemoteConfigTest)')","[553, 59568]"
"('URIish.java', 'org.eclipse.jgit.transport.URIish', '<init>', '^(file):([\\\\/](?![\\\\/])((?:[A-Za-z]:)?[\\\\/]?(?:(?:[^\\\\/]+[\\\\/]+)*[^\\\\/]+[\\\\/]*)))$', 'http://lusr\\example:wtf@1.2.3.4:1234/D:\\x')",[131124]
"('URIish.java', 'org.eclipse.jgit.transport.URIish', '<init>', '^([a-z][a-z0-9+-]+)://(?:(?:([^/:@]+)(?::([^\\\\/]+))?@)?((?:[^\\\\/:]+)|(?:\\[[0-9a-f:]+\\]))(?::(\\d+))?((?:/~(?:[^\\\\/]+))?[\\\\/]))?(.+)?$', '/abc.git')",[175146]
"('Description.java', 'org.junit.runner.Description', 'methodAndClassNamePatternGroupOrDefault', '([\\s\\S]*)\\((.*)\\)', 'testFileCommitted(org.eclipse.jgit.treewalk.filter.IndexDiffFilterTest)')","[30611, 88828]"
"('Description.java', 'org.junit.runner.Description', 'methodAndClassNamePatternGroupOrDefault', '([\\s\\S]*)\\((.*)\\)', 'testBoundLineDelete(org.eclipse.jgit.api.blame.BlameGeneratorTest)')","[50855, 108364]"
"('URIish.java', 'org.eclipse.jgit.transport.URIish', '<init>', '^([a-z][a-z0-9+-]+)://(?:(?:([^/:@]+)(?::([^\\\\/]+))?@)?((?:[^\\\\/:]+)|(?:\\[[0-9a-f:]+\\]))(?::(\\d+))?((?:/~(?:[^\\\\/]+))?[\\\\/]))?(.+)?$', 'ssh://me@[::1]:80//')",[135977]
"('Description.java', 'org.junit.runner.Description', 'methodAndClassNamePatternGroupOrDefault', '([\\s\\S]*)\\((.*)\\)', 'testUnchangedComplex(org.eclipse.jgit.lib.IndexDiffTest)')","[20534, 78928]"
"('Description.java', 'org.junit.runner.Description', 'methodAndClassNamePatternGroupOrDefault', '([\\s\\S]*)\\((.*)\\)', 'testUpdateDelete(org.eclipse.jgit.transport.PushProcessTest)')","[4775, 63792]"
"('URIish.java', 'org.eclipse.jgit.transport.URIish', '<init>', '^([a-z][a-z0-9+-]+)://(?:(?:([^/:@]+)(?::([^\\\\/]+))?@)?((?:[^\\\\/:]+)|(?:\\[[0-9a-f:]+\\]))(?::(\\d+))?((?:/~(?:[^\\\\/]+))?[\\\\/]))?(.+)?$', 'https://l usr\\example.com:wtf@1.2.3.4:80//abc')",[133447]
"('URIish.java', 'org.eclipse.jgit.transport.URIish', '<init>', '^(file):([\\\\/](?![\\\\/])((?:[A-Za-z]:)?[\\\\/]?(?:(?:[^\\\\/]+[\\\\/]+)*[^\\\\/]+[\\\\/]*)))$', '/tmp/jgit_test_6251682262244407463_tmp/tmp_139345380367893616.git')","[116758, 116884]"
"('Description.java', 'org.junit.runner.Description', 'methodAndClassNamePatternGroupOrDefault', '([\\s\\S]*)\\((.*)\\)', 'org.eclipse.jgit.internal.storage.file.AbbreviationTest')","[57415, 210272]"
"('URIish.java', 'org.eclipse.jgit.transport.URIish', '<init>', '^(?:([^/:@]+)(?::([^\\\\/]+))?@)?((?:[^\\\\/:]+)|(?:\\[[0-9a-f:]+\\])):((?:(?:/~(?:[^\\\\/]+))[\\\\/])?(?:(?:[^\\\\/]+[\\\\/]+)*[^\\\\/]+[\\\\/]*))$', '/.git')",[174939]
"('Description.java', 'org.junit.runner.Description', 'methodAndClassNamePatternGroupOrDefault', '([\\s\\S]*)\\((.*)\\)', 'testModifyZ(org.eclipse.jgit.api.ApplyCommandTest)')","[46803, 104338]"
"('URIish.java', 'org.eclipse.jgit.transport.URIish', '<init>', '^(file):([\\\\/](?![\\\\/])((?:[A-Za-z]:)?[\\\\/]?(?:(?:[^\\\\/]+[\\\\/]+)*[^\\\\/]+[\\\\/]*)))$', 'ssh://me@1.2.3.4//abc')","[148696, 148880]"
"('Description.java', 'org.junit.runner.Description', 'methodAndClassNamePatternGroupOrDefault', '([\\s\\S]*)\\((.*)\\)', 'testEmptyFolderCommittedDeletedCommittedIgnoredComparedWithInitialCommit(org.eclipse.jgit.treewalk.filter.IndexDiffFilterTest)')","[30632, 88850]"
"('Description.java', 'org.junit.runner.Description', 'methodAndClassNamePatternGroupOrDefault', '([\\s\\S]*)\\((.*)\\)', 'shouldListModificationBetweenTwoCommits(org.eclipse.jgit.diff.DiffEntryTest)')","[13749, 72218]"
"('Description.java', 'org.junit.runner.Description', 'methodAndClassNamePatternGroupOrDefault', '([\\s\\S]*)\\((.*)\\)', 'testNoLog(org.eclipse.jgit.internal.storage.file.ReflogReaderTest)')","[58940, 115998]"
"('URIish.java', 'org.eclipse.jgit.transport.URIish', '<init>', '^([a-z][a-z0-9+-]+)://(?:(?:([^/:@]+)(?::([^\\\\/]+))?@)?((?:[^\\\\/:]+)|(?:\\[[0-9a-f:]+\\]))(?::(\\d+))?((?:/~(?:[^\\\\/]+))?[\\\\/]))?(.+)?$', 'http://lusr\\example:wtf@[::1]:1234//')",[131377]
"('Description.java', 'org.junit.runner.Description', 'methodAndClassNamePatternGroupOrDefault', '([\\s\\S]*)\\((.*)\\)', 'renameBranchExistingSection(org.eclipse.jgit.api.RenameBranchCommandTest)')","[50916, 108408]"
"('Description.java', 'org.junit.runner.Description', 'methodAndClassNamePatternGroupOrDefault', '([\\s\\S]*)\\((.*)\\)', 'testIncompleteRangesInOneGroupCase2(org.eclipse.jgit.fnmatch.FileNameMatcherTest)')","[18139, 76618]"
"('URIish.java', 'org.eclipse.jgit.transport.URIish', '<init>', '^([a-z][a-z0-9+-]+)://(?:(?:([^/:@]+)(?::([^\\\\/]+))?@)?((?:[^\\\\/:]+)|(?:\\[[0-9a-f:]+\\]))(?::(\\d+))?((?:/~(?:[^\\\\/]+))?[\\\\/]))?(.+)?$', 'https://lusr\\example:wtf@example.com:1234//')",[133953]
"('Description.java', 'org.junit.runner.Description', 'methodAndClassNamePatternGroupOrDefault', '([\\s\\S]*)\\((.*)\\)', 'testCommit(org.eclipse.jgit.merge.SquashMessageFormatterTest)')","[10761, 69446]"
"('Description.java', 'org.junit.runner.Description', 'methodAndClassNamePatternGroupOrDefault', '([\\s\\S]*)\\((.*)\\)', 'workingDirectoryModifyIndexChanged(org.eclipse.jgit.api.StashApplyCommandTest)')","[51374, 108848]"
"('URIish.java', 'org.eclipse.jgit.transport.URIish', '<init>', '^(?:([^/:@]+)(?::([^\\\\/]+))?@)?((?:[^\\\\/:]+)|(?:\\[[0-9a-f:]+\\])):((?:(?:/~(?:[^\\\\/]+))[\\\\/])?(?:(?:[^\\\\/]+[\\\\/]+)*[^\\\\/]+[\\\\/]*))$', '/a/b/c.git/')",[175813]
"('Description.java', 'org.junit.runner.Description', 'methodAndClassNamePatternGroupOrDefault', '([\\s\\S]*)\\((.*)\\)', 'resolveUpstream(org.eclipse.jgit.lib.RepositoryResolveTest)')","[27174, 85506]"
"('Description.java', 'org.junit.runner.Description', 'methodAndClassNamePatternGroupOrDefault', '([\\s\\S]*)\\((.*)\\)', 'testCloneFIFO(org.eclipse.jgit.revwalk.DateRevQueueTest)')","[7912, 66740]"
"('URIish.java', 'org.eclipse.jgit.transport.URIish', '<init>', '^([a-z][a-z0-9+-]+)://(?:(?:([^/:@]+)(?::([^\\\\/]+))?@)?((?:[^\\\\/:]+)|(?:\\[[0-9a-f:]+\\]))(?::(\\d+))?((?:/~(?:[^\\\\/]+))?[\\\\/]))?(.+)?$', 'file:///home/m%00y')","[175284, 175330]"
"('URIish.java', 'org.eclipse.jgit.transport.URIish', '<init>', '^(file):([\\\\/](?![\\\\/])((?:[A-Za-z]:)?[\\\\/]?(?:(?:[^\\\\/]+[\\\\/]+)*[^\\\\/]+[\\\\/]*)))$', 'http://example.com/D:/x')","[168246, 168430, 169350, 169534, 170454, 170638]"
"('Description.java', 'org.junit.runner.Description', 'methodAndClassNamePatternGroupOrDefault', '([\\s\\S]*)\\((.*)\\)', 'org.eclipse.jgit.internal.storage.file.PackWriterTest')","[54837, 209921]"
"('URIish.java', 'org.eclipse.jgit.transport.URIish', '<init>', '^(?:([^/:@]+)(?::([^\\\\/]+))?@)?([^\\\\/:]{2,}):([\\\\/](?:(?:[^\\\\/]+[\\\\/]+)*[^\\\\/]+[\\\\/]*))$', '/~some/p ath')","[177331, 177446]"
"('Description.java', 'org.junit.runner.Description', 'methodAndClassNamePatternGroupOrDefault', '([\\s\\S]*)\\((.*)\\)', 'testDiffModified(org.eclipse.jgit.api.DiffCommandTest)')","[48194, 105636]"
"('Description.java', 'org.junit.runner.Description', 'methodAndClassNamePatternGroupOrDefault', '([\\s\\S]*)\\((.*)\\)', 'testUnsetSingleSection(org.eclipse.jgit.lib.ConfigTest)')","[28323, 86650]"
"('Description.java', 'org.junit.runner.Description', 'methodAndClassNamePatternGroupOrDefault', '([\\s\\S]*)\\((.*)\\)', 'testGetRefs_CycleInSymbolicRef(org.eclipse.jgit.internal.storage.file.RefDirectoryTest)')","[58501, 115558]"
"('Description.java', 'org.junit.runner.Description', 'methodAndClassNamePatternGroupOrDefault', '([\\s\\S]*)\\((.*)\\)', 'testFormatYearsMonths(org.eclipse.jgit.util.RelativeDateFormatterTest)')","[35891, 93822]"
"('Description.java', 'org.junit.runner.Description', 'methodAndClassNamePatternGroupOrDefault', '([\\s\\S]*)\\((.*)\\)', 'testConsoleText(org.eclipse.jgit.nls.RootLocaleTest)')","[202, 59260]"
"('URIish.java', 'org.eclipse.jgit.transport.URIish', '<init>', '^(file):([\\\\/](?![\\\\/])((?:[A-Za-z]:)?[\\\\/]?(?:(?:[^\\\\/]+[\\\\/]+)*[^\\\\/]+[\\\\/]*)))$', 'ssh://me:wtf@example.com:1234//')",[121786]
"('URIish.java', 'org.eclipse.jgit.transport.URIish', '<init>', '^([a-z][a-z0-9+-]+)://(?:(?:([^/:@]+)(?::([^\\\\/]+))?@)?((?:[^\\\\/:]+)|(?:\\[[0-9a-f:]+\\]))(?::(\\d+))?((?:/~(?:[^\\\\/]+))?[\\\\/]))?(.+)?$', 'http://l usr\\example.com@[::1]:1234/D:\\x')",[143659]
"('URIish.java', 'org.eclipse.jgit.transport.URIish', '<init>', '^([a-z][a-z0-9+-]+)://(?:(?:([^/:@]+)(?::([^\\\\/]+))?@)?((?:[^\\\\/:]+)|(?:\\[[0-9a-f:]+\\]))(?::(\\d+))?((?:/~(?:[^\\\\/]+))?[\\\\/]))?(.+)?$', 'ssh+git://lusr\\example@[::1]/D:\\x')","[154699, 154883]"
"('Description.java', 'org.junit.runner.Description', 'methodAndClassNamePatternGroupOrDefault', '([\\s\\S]*)\\((.*)\\)', 'testNoFinalNewline(org.eclipse.jgit.lib.ConfigTest)')","[28218, 86540]"
"('URIish.java', 'org.eclipse.jgit.transport.URIish', '<init>', '^([a-z][a-z0-9+-]+)://(?:(?:([^/:@]+)(?::([^\\\\/]+))?@)?((?:[^\\\\/:]+)|(?:\\[[0-9a-f:]+\\]))(?::(\\d+))?((?:/~(?:[^\\\\/]+))?[\\\\/]))?(.+)?$', 'file:///tmp/jgit_test_8177535101453731082_tmp/tmp_7915404363960575743')","[197290, 197352]"
"('Description.java', 'org.junit.runner.Description', 'methodAndClassNamePatternGroupOrDefault', '([\\s\\S]*)\\((.*)\\)', 'testPath_4090(org.eclipse.jgit.dircache.DirCacheLargePathTest)')","[12232, 70788]"
"('Description.java', 'org.junit.runner.Description', 'methodAndClassNamePatternGroupOrDefault', '([\\s\\S]*)\\((.*)\\)', 'testOnlyOption_f1_11_e(org.eclipse.jgit.api.CommitOnlyTest)')","[49893, 107396]"
"('Description.java', 'org.junit.runner.Description', 'methodAndClassNamePatternGroupOrDefault', '([\\s\\S]*)\\((.*)\\)', 'testEmptyPattern(org.eclipse.jgit.util.RawSubStringPatternTest)')","[33536, 91534]"
"('Description.java', 'org.junit.runner.Description', 'methodAndClassNamePatternGroupOrDefault', '([\\s\\S]*)\\((.*)\\)', 'testNoRenames_SymlinkAndFile(org.eclipse.jgit.diff.RenameDetectorTest)')","[12772, 71294]"
"('URIish.java', 'org.eclipse.jgit.transport.URIish', '<init>', '^([a-z][a-z0-9+-]+)://(?:(?:([^/:@]+)(?::([^\\\\/]+))?@)?((?:[^\\\\/:]+)|(?:\\[[0-9a-f:]+\\]))(?::(\\d+))?((?:/~(?:[^\\\\/]+))?[\\\\/]))?(.+)?$', 'ssh+git://l usr\\example.com@example.com:80//abc')",[139703]
"('Description.java', 'org.junit.runner.Description', 'methodAndClassNamePatternGroupOrDefault', '([\\s\\S]*)\\((.*)\\)', 'testTrivialTwoWay_conflictSubtreeChange(org.eclipse.jgit.merge.SimpleMergeTest)')","[9887, 68610]"
"('URIish.java', 'org.eclipse.jgit.transport.URIish', '<init>', '^([a-z][a-z0-9+-]+)://(?:(?:([^/:@]+)(?::([^\\\\/]+))?@)?((?:[^\\\\/:]+)|(?:\\[[0-9a-f:]+\\]))(?::(\\d+))?((?:/~(?:[^\\\\/]+))?[\\\\/]))?(.+)?$', 'file:///tmp/jgit_test_1756171324335390260_tmp/tmp_2941217484004443416/.git/')",[209033]
"('Description.java', 'org.junit.runner.Description', 'methodAndClassNamePatternGroupOrDefault', '([\\s\\S]*)\\((.*)\\)', 'testFileCommittedDeletedCommittedIgnoredComparedWithInitialCommit(org.eclipse.jgit.treewalk.filter.IndexDiffFilterTest)')","[30359, 88564]"
"('Description.java', 'org.junit.runner.Description', 'methodAndClassNamePatternGroupOrDefault', '([\\s\\S]*)\\((.*)\\)', 'testInvalidTreeModeNotOctal1(org.eclipse.jgit.lib.ObjectCheckerTest)')","[25328, 83592]"
"('URIish.java', 'org.eclipse.jgit.transport.URIish', '<init>', '^(file):([\\\\/](?![\\\\/])((?:[A-Za-z]:)?[\\\\/]?(?:(?:[^\\\\/]+[\\\\/]+)*[^\\\\/]+[\\\\/]*)))$', 'http://me:wtf@1.2.3.4:80/D:/x')",[129054]
"('Description.java', 'org.junit.runner.Description', 'methodAndClassNamePatternGroupOrDefault', '([\\s\\S]*)\\((.*)\\)', 'testPruneNone(org.eclipse.jgit.internal.storage.file.GcReflogTest)')","[57354, 114436]"
"('Description.java', 'org.junit.runner.Description', 'methodAndClassNamePatternGroupOrDefault', '([\\s\\S]*)\\((.*)\\)', 'testSpecialGroupCase6(org.eclipse.jgit.fnmatch.FileNameMatcherTest)')","[16228, 74616]"
"('URIish.java', 'org.eclipse.jgit.transport.URIish', '<init>', '^(file):([\\\\/](?![\\\\/])((?:[A-Za-z]:)?[\\\\/]?(?:(?:[^\\\\/]+[\\\\/]+)*[^\\\\/]+[\\\\/]*)))$', 'ssh+git://l usr\\example.com@1.2.3.4:80//abc')",[140048]
"('URIish.java', 'org.eclipse.jgit.transport.URIish', '<init>', '^(file):([\\\\/](?![\\\\/])((?:[A-Za-z]:)?[\\\\/]?(?:(?:[^\\\\/]+[\\\\/]+)*[^\\\\/]+[\\\\/]*)))$', 'file:///tmp/jgit_test_230119275613446060_tmp/tmp_471250231823073474')","[197851, 197908, 197965, 198022, 198079, 198136]"
"('URIish.java', 'org.eclipse.jgit.transport.URIish', '<init>', '^(file):([\\\\/](?![\\\\/])((?:[A-Za-z]:)?[\\\\/]?(?:(?:[^\\\\/]+[\\\\/]+)*[^\\\\/]+[\\\\/]*)))$', 'https://lusr\\example@1.2.3.4:1234//abc')",[147592]
"('ChangeIdUtil.java', 'org.eclipse.jgit.util.ChangeIdUtil', 'indexOfFirstFooterLine', '(^[a-zA-Z0-9-]+:(?!//).*$)', 'Commit body')","[182023, 182049]"
"('URIish.java', 'org.eclipse.jgit.transport.URIish', '<init>', '^(file):([\\\\/](?![\\\\/])((?:[A-Za-z]:)?[\\\\/]?(?:(?:[^\\\\/]+[\\\\/]+)*[^\\\\/]+[\\\\/]*)))$', 'http://me@1.2.3.4:1234//')",[142026]
"('URIish.java', 'org.eclipse.jgit.transport.URIish', '<init>', '^([a-z][a-z0-9+-]+)://(?:(?:([^/:@]+)(?::([^\\\\/]+))?@)?((?:[^\\\\/:]+)|(?:\\[[0-9a-f:]+\\]))(?::(\\d+))?((?:/~(?:[^\\\\/]+))?[\\\\/]))?(.+)?$', 'ssh://me@1.2.3.4/D:/x')","[148765, 148949]"
"('Description.java', 'org.junit.runner.Description', 'methodAndClassNamePatternGroupOrDefault', '([\\s\\S]*)\\((.*)\\)', 'multipleInsteadOf(org.eclipse.jgit.transport.RemoteConfigTest)')","[574, 59590]"
"('Description.java', 'org.junit.runner.Description', 'methodAndClassNamePatternGroupOrDefault', '([\\s\\S]*)\\((.*)\\)', 'org.eclipse.jgit.api.LsRemoteCommandTest')","[41255, 194393]"
"('URIish.java', 'org.eclipse.jgit.transport.URIish', '<init>', '^([a-z][a-z0-9+-]+)://(?:(?:([^/:@]+)(?::([^\\\\/]+))?@)?((?:[^\\\\/:]+)|(?:\\[[0-9a-f:]+\\]))(?::(\\d+))?((?:/~(?:[^\\\\/]+))?[\\\\/]))?(.+)?$', 'https://lusr\\example:wtf@example.com:1234/D:/x')",[134045]
"('URIish.java', 'org.eclipse.jgit.transport.URIish', '<init>', '^([a-z][a-z0-9+-]+)://(?:(?:([^/:@]+)(?::([^\\\\/]+))?@)?((?:[^\\\\/:]+)|(?:\\[[0-9a-f:]+\\]))(?::(\\d+))?((?:/~(?:[^\\\\/]+))?[\\\\/]))?(.+)?$', 'ssh://l usr\\example.com:wtf@1.2.3.4:1234/D:\\x')",[123419]
"('Description.java', 'org.junit.runner.Description', 'methodAndClassNamePatternGroupOrDefault', '([\\s\\S]*)\\((.*)\\)', 'testNewNamespaceConflictWithPackedPrefixOfExisting(org.eclipse.jgit.internal.storage.file.RefUpdateTest)')","[56255, 113424]"
"('URIish.java', 'org.eclipse.jgit.transport.URIish', '<init>', '^([a-z][a-z0-9+-]+)://(?:(?:([^/:@]+)(?::([^\\\\/]+))?@)?((?:[^\\\\/:]+)|(?:\\[[0-9a-f:]+\\]))(?::(\\d+))?((?:/~(?:[^\\\\/]+))?[\\\\/]))?(.+)?$', 'ssh+git://l usr\\example.com@1.2.3.4:80//abc')",[140071]
"('URIish.java', 'org.eclipse.jgit.transport.URIish', '<init>', '^(file):([\\\\/](?![\\\\/])((?:[A-Za-z]:)?[\\\\/]?(?:(?:[^\\\\/]+[\\\\/]+)*[^\\\\/]+[\\\\/]*)))$', 'http://l usr\\example.com:wtf@1.2.3.4:1234//')",[129882]
"('URIish.java', 'org.eclipse.jgit.transport.URIish', '<init>', '^(?:([^/:@]+)(?::([^\\\\/]+))?@)?((?:[^\\\\/:]+)|(?:\\[[0-9a-f:]+\\])):((?:(?:/~(?:[^\\\\/]+))[\\\\/])?(?:(?:[^\\\\/]+[\\\\/]+)*[^\\\\/]+[\\\\/]*))$', '/tmp/jgit_test_6251682262244407463_tmp/tmp_139345380367893616.git')","[116808, 116936]"
"('URIish.java', 'org.eclipse.jgit.transport.URIish', '<init>', '^(file):([\\\\/](?![\\\\/])((?:[A-Za-z]:)?[\\\\/]?(?:(?:[^\\\\/]+[\\\\/]+)*[^\\\\/]+[\\\\/]*)))$', 'file:///a/b.txt')",[121625]
"('Description.java', 'org.junit.runner.Description', 'methodAndClassNamePatternGroupOrDefault', '([\\s\\S]*)\\((.*)\\)', 'testGetRef_FetchHead(org.eclipse.jgit.internal.storage.file.RefDirectoryTest)')","[57997, 115030]"
"('URIish.java', 'org.eclipse.jgit.transport.URIish', '<init>', '^([a-z][a-z0-9+-]+)://(?:(?:([^/:@]+)(?::([^\\\\/]+))?@)?((?:[^\\\\/:]+)|(?:\\[[0-9a-f:]+\\]))(?::(\\d+))?((?:/~(?:[^\\\\/]+))?[\\\\/]))?(.+)?$', 'https://me:wtf@example.com:80/D:/x')",[132021]
"('Description.java', 'org.junit.runner.Description', 'methodAndClassNamePatternGroupOrDefault', '([\\s\\S]*)\\((.*)\\)', 'testStopWalk(org.eclipse.jgit.treewalk.filter.PathFilterGroupTest)')","[31214, 89400]"
"('Description.java', 'org.junit.runner.Description', 'methodAndClassNamePatternGroupOrDefault', '([\\s\\S]*)\\((.*)\\)', 'nonReferencedNonExpiredObject_notPruned(org.eclipse.jgit.internal.storage.file.GcPruneNonReferencedTest)')","[57230, 114326]"
"('Description.java', 'org.junit.runner.Description', 'methodAndClassNamePatternGroupOrDefault', '([\\s\\S]*)\\((.*)\\)', 'testMixedGroupCase4(org.eclipse.jgit.fnmatch.FileNameMatcherTest)')","[16543, 74946]"
"('URIish.java', 'org.eclipse.jgit.transport.URIish', '<init>', '^(file):([\\\\/](?![\\\\/])((?:[A-Za-z]:)?[\\\\/]?(?:(?:[^\\\\/]+[\\\\/]+)*[^\\\\/]+[\\\\/]*)))$', 'ssh://lusr\\example@example.com:80//')",[137426]
"('Description.java', 'org.junit.runner.Description', 'methodAndClassNamePatternGroupOrDefault', '([\\s\\S]*)\\((.*)\\)', 'testFormatWithConflictsNoFooterNoLineBreak(org.eclipse.jgit.merge.MergeMessageFormatterTest)')","[10822, 69490]"
"('URIish.java', 'org.eclipse.jgit.transport.URIish', '<init>', '^([a-z][a-z0-9+-]+)://(?:(?:([^/:@]+)(?::([^\\\\/]+))?@)?((?:[^\\\\/:]+)|(?:\\[[0-9a-f:]+\\]))(?::(\\d+))?((?:/~(?:[^\\\\/]+))?[\\\\/]))?(.+)?$', 'https://lusr\\example@example.com:1234/D:/x')",[147293]
"('URIish.java', 'org.eclipse.jgit.transport.URIish', '<init>', '^([a-z][a-z0-9+-]+)://(?:(?:([^/:@]+)(?::([^\\\\/]+))?@)?((?:[^\\\\/:]+)|(?:\\[[0-9a-f:]+\\]))(?::(\\d+))?((?:/~(?:[^\\\\/]+))?[\\\\/]))?(.+)?$', 'ssh://DOMAIN\\user:pass@example.com:33/some/p ath%20')","[178665, 178711]"
"('URIish.java', 'org.eclipse.jgit.transport.URIish', '<init>', '^([\\\\/]?((?:[A-Za-z]:)?[\\\\/]?(?:(?:[^\\\\/]+[\\\\/]+)*[^\\\\/]+[\\\\/]*)))$', '/another/dir')","[117765, 118465, 120053]"
"('Description.java', 'org.junit.runner.Description', 'methodAndClassNamePatternGroupOrDefault', '([\\s\\S]*)\\((.*)\\)', 'testMaliciousAbsolutePathIsOk(org.eclipse.jgit.lib.DirCacheCheckoutMaliciousPathTest)')","[20992, 79368]"
"('Description.java', 'org.junit.runner.Description', 'methodAndClassNamePatternGroupOrDefault', '([\\s\\S]*)\\((.*)\\)', 'testGraphGroupCase3(org.eclipse.jgit.fnmatch.FileNameMatcherTest)')","[16753, 75166]"
"('Description.java', 'org.junit.runner.Description', 'methodAndClassNamePatternGroupOrDefault', '([\\s\\S]*)\\((.*)\\)', 'nonReferencedObjects_onlyExpiredPruned(org.eclipse.jgit.internal.storage.file.GcPruneNonReferencedTest)')","[57293, 114392]"
"('URIish.java', 'org.eclipse.jgit.transport.URIish', '<init>', '^(file):([\\\\/](?![\\\\/])((?:[A-Za-z]:)?[\\\\/]?(?:(?:[^\\\\/]+[\\\\/]+)*[^\\\\/]+[\\\\/]*)))$', 'https://1.2.3.4//')","[171834, 172018, 172938, 173122, 174042, 174226]"
"('Description.java', 'org.junit.runner.Description', 'methodAndClassNamePatternGroupOrDefault', '([\\s\\S]*)\\((.*)\\)', 'testInvalidType(org.eclipse.jgit.lib.ObjectCheckerTest)')","[25286, 83548]"
"('URIish.java', 'org.eclipse.jgit.transport.URIish', '<init>', '^([a-z][a-z0-9+-]+)://(?:(?:([^/:@]+)(?::([^\\\\/]+))?@)?((?:[^\\\\/:]+)|(?:\\[[0-9a-f:]+\\]))(?::(\\d+))?((?:/~(?:[^\\\\/]+))?[\\\\/]))?(.+)?$', 'ssh://user:pass@example.com:33/some/p ath')","[175054, 175100]"
"('Description.java', 'org.junit.runner.Description', 'methodAndClassNamePatternGroupOrDefault', '([\\s\\S]*)\\((.*)\\)', 'testBuilder_ToString(org.eclipse.jgit.util.RefListTest)')","[34910, 92854]"
"('URIish.java', 'org.eclipse.jgit.transport.URIish', '<init>', '^(file):([\\\\/](?![\\\\/])((?:[A-Za-z]:)?[\\\\/]?(?:(?:[^\\\\/]+[\\\\/]+)*[^\\\\/]+[\\\\/]*)))$', 'https://lusr\\example@[::1]:80//abc')",[148144]
"('Description.java', 'org.junit.runner.Description', 'methodAndClassNamePatternGroupOrDefault', '([\\s\\S]*)\\((.*)\\)', 'testOnlyOption_f1_9_c(org.eclipse.jgit.api.CommitOnlyTest)')","[49326, 106802]"
"('URIish.java', 'org.eclipse.jgit.transport.URIish', '<init>', '^(file):([\\\\/](?![\\\\/])((?:[A-Za-z]:)?[\\\\/]?(?:(?:[^\\\\/]+[\\\\/]+)*[^\\\\/]+[\\\\/]*)))$', 'ssh://l usr\\example.com@example.com/D:/x')","[149478, 149662]"
"('URIish.java', 'org.eclipse.jgit.transport.URIish', '<init>', '^(file):([\\\\/](?![\\\\/])((?:[A-Za-z]:)?[\\\\/]?(?:(?:[^\\\\/]+[\\\\/]+)*[^\\\\/]+[\\\\/]*)))$', 'ssh://me@[::1]//')","[149018, 149202]"
"('URIish.java', 'org.eclipse.jgit.transport.URIish', '<init>', '^([a-z][a-z0-9+-]+)://(?:(?:([^/:@]+)(?::([^\\\\/]+))?@)?((?:[^\\\\/:]+)|(?:\\[[0-9a-f:]+\\]))(?::(\\d+))?((?:/~(?:[^\\\\/]+))?[\\\\/]))?(.+)?$', 'http://l usr\\example.com@[::1]:80//')",[143705]
"('URIish.java', 'org.eclipse.jgit.transport.URIish', '<init>', '^([a-z][a-z0-9+-]+)://(?:(?:([^/:@]+)(?::([^\\\\/]+))?@)?((?:[^\\\\/:]+)|(?:\\[[0-9a-f:]+\\]))(?::(\\d+))?((?:/~(?:[^\\\\/]+))?[\\\\/]))?(.+)?$', 'https://me@1.2.3.4/D:/x')","[158701, 158885]"
"('Description.java', 'org.junit.runner.Description', 'methodAndClassNamePatternGroupOrDefault', '([\\s\\S]*)\\((.*)\\)', 'test002_ReadWithSubsection(org.eclipse.jgit.lib.ConfigTest)')","[28155, 86474]"
"('Description.java', 'org.junit.runner.Description', 'methodAndClassNamePatternGroupOrDefault', '([\\s\\S]*)\\((.*)\\)', 'testDequote_User(org.eclipse.jgit.util.QuotedStringBourneUserPathStyleTest)')","[38786, 96616]"
"('Description.java', 'org.junit.runner.Description', 'methodAndClassNamePatternGroupOrDefault', '([\\s\\S]*)\\((.*)\\)', 'testDecodeFail_NonBase64Character(org.eclipse.jgit.util.Base64Test)')","[36702, 94592]"
"('Description.java', 'org.junit.runner.Description', 'methodAndClassNamePatternGroupOrDefault', '([\\s\\S]*)\\((.*)\\)', 'testPrintGroupCase0(org.eclipse.jgit.fnmatch.FileNameMatcherTest)')","[18160, 76640]"
"('Description.java', 'org.junit.runner.Description', 'methodAndClassNamePatternGroupOrDefault', '([\\s\\S]*)\\((.*)\\)', 'testMaliciousWindowsADSOnUnix(org.eclipse.jgit.lib.DirCacheCheckoutMaliciousPathTest)')","[21517, 79918]"
"('Description.java', 'org.junit.runner.Description', 'methodAndClassNamePatternGroupOrDefault', '([\\s\\S]*)\\((.*)\\)', 'testRebaseShouldBeAbleToHandleLinesWithoutCommitMessageInRebaseTodoFile(org.eclipse.jgit.api.RebaseCommandTest)')","[45402, 102930]"
"('Description.java', 'org.junit.runner.Description', 'methodAndClassNamePatternGroupOrDefault', '([\\s\\S]*)\\((.*)\\)', 'testMaliciousAbsolutePathIsOkTwoLevels(org.eclipse.jgit.lib.DirCacheCheckoutMaliciousPathTest)')","[21496, 79896]"
"('Description.java', 'org.junit.runner.Description', 'methodAndClassNamePatternGroupOrDefault', '([\\s\\S]*)\\((.*)\\)', 'checkLockedFilesToBeDeleted(org.eclipse.jgit.merge.ResolveMergerTest)')","[10427, 69116]"
"('URIish.java', 'org.eclipse.jgit.transport.URIish', '<init>', '^([a-z][a-z0-9+-]+)://(?:(?:([^/:@]+)(?::([^\\\\/]+))?@)?((?:[^\\\\/:]+)|(?:\\[[0-9a-f:]+\\]))(?::(\\d+))?((?:/~(?:[^\\\\/]+))?[\\\\/]))?(.+)?$', '/abc/.git')",[176779]
"('Description.java', 'org.junit.runner.Description', 'methodAndClassNamePatternGroupOrDefault', '([\\s\\S]*)\\((.*)\\)', 'testDerefTag(org.eclipse.jgit.lib.RepositoryResolveTest)')","[27447, 85792]"
"('Description.java', 'org.junit.runner.Description', 'methodAndClassNamePatternGroupOrDefault', '([\\s\\S]*)\\((.*)\\)', 'testCherryPickOurCommitName(org.eclipse.jgit.api.CherryPickCommandTest)')","[47822, 105306]"
"('URIish.java', 'org.eclipse.jgit.transport.URIish', '<init>', '^([a-z][a-z0-9+-]+)://(?:(?:([^/:@]+)(?::([^\\\\/]+))?@)?((?:[^\\\\/:]+)|(?:\\[[0-9a-f:]+\\]))(?::(\\d+))?((?:/~(?:[^\\\\/]+))?[\\\\/]))?(.+)?$', 'https://lusr\\example@[::1]:1234//abc')",[147983]
"('Description.java', 'org.junit.runner.Description', 'methodAndClassNamePatternGroupOrDefault', '([\\s\\S]*)\\((.*)\\)', 'testInvalidCommitNoTree2(org.eclipse.jgit.lib.ObjectCheckerTest)')","[26693, 85022]"
"('Description.java', 'org.junit.runner.Description', 'methodAndClassNamePatternGroupOrDefault', '([\\s\\S]*)\\((.*)\\)', 'ISO(org.eclipse.jgit.util.GitDateFormatterTest)')","[32271, 90368]"
"('URIish.java', 'org.eclipse.jgit.transport.URIish', '<init>', '^(file):([\\\\/](?![\\\\/])((?:[A-Za-z]:)?[\\\\/]?(?:(?:[^\\\\/]+[\\\\/]+)*[^\\\\/]+[\\\\/]*)))$', 'ssh+git://me:wtf@1.2.3.4:80//abc')",[125696]
"('Description.java', 'org.junit.runner.Description', 'methodAndClassNamePatternGroupOrDefault', '([\\s\\S]*)\\((.*)\\)', 'testDequote_Empty1(org.eclipse.jgit.util.QuotedStringBourneStyleTest)')","[36494, 94394]"
"('URIish.java', 'org.eclipse.jgit.transport.URIish', '<init>', '^(file):([\\\\/](?![\\\\/])((?:[A-Za-z]:)?[\\\\/]?(?:(?:[^\\\\/]+[\\\\/]+)*[^\\\\/]+[\\\\/]*)))$', 'ssh+git://l usr\\example.com@1.2.3.4:1234/D:\\x')",[139956]
"('Description.java', 'org.junit.runner.Description', 'methodAndClassNamePatternGroupOrDefault', '([\\s\\S]*)\\((.*)\\)', 'testEmpty(org.eclipse.jgit.diff.RawTextTest)')","[14249, 72702]"
"('URIish.java', 'org.eclipse.jgit.transport.URIish', '<init>', '^([a-z][a-z0-9+-]+)://(?:(?:([^/:@]+)(?::([^\\\\/]+))?@)?((?:[^\\\\/:]+)|(?:\\[[0-9a-f:]+\\]))(?::(\\d+))?((?:/~(?:[^\\\\/]+))?[\\\\/]))?(.+)?$', 'http://me@1.2.3.4:80//')",[142233]
"('URIish.java', 'org.eclipse.jgit.transport.URIish', '<init>', '^(file):([\\\\/](?![\\\\/])((?:[A-Za-z]:)?[\\\\/]?(?:(?:[^\\\\/]+[\\\\/]+)*[^\\\\/]+[\\\\/]*)))$', 'file:///tmp/jgit_test_4270275380775586211_tmp/tmp_4705012969864141780')","[194220, 194277, 194337]"
"('Description.java', 'org.junit.runner.Description', 'methodAndClassNamePatternGroupOrDefault', '([\\s\\S]*)\\((.*)\\)', 'test7(org.eclipse.jgit.revwalk.RevWalkPathFilter6012Test)')","[9534, 68280]"
"('URIish.java', 'org.eclipse.jgit.transport.URIish', '<init>', '^(file):([\\\\/](?![\\\\/])((?:[A-Za-z]:)?[\\\\/]?(?:(?:[^\\\\/]+[\\\\/]+)*[^\\\\/]+[\\\\/]*)))$', 'http://lusr\\example@[::1]:80//')",[144786]
"('URIish.java', 'org.eclipse.jgit.transport.URIish', '<init>', '^([a-z][a-z0-9+-]+)://(?:(?:([^/:@]+)(?::([^\\\\/]+))?@)?((?:[^\\\\/:]+)|(?:\\[[0-9a-f:]+\\]))(?::(\\d+))?((?:/~(?:[^\\\\/]+))?[\\\\/]))?(.+)?$', 'ssh://lusr\\example@1.2.3.4//abc')","[150927, 151111]"
"('URIish.java', 'org.eclipse.jgit.transport.URIish', '<init>', '^(?:([^/:@]+)(?::([^\\\\/]+))?@)?([^\\\\/:]{2,}):([\\\\/](?:(?:[^\\\\/]+[\\\\/]+)*[^\\\\/]+[\\\\/]*))$', '/another/dir')","[117741, 118441, 120029]"
"('URIish.java', 'org.eclipse.jgit.transport.URIish', '<init>', '^([a-z][a-z0-9+-]+)://(?:(?:([^/:@]+)(?::([^\\\\/]+))?@)?((?:[^\\\\/:]+)|(?:\\[[0-9a-f:]+\\]))(?::(\\d+))?((?:/~(?:[^\\\\/]+))?[\\\\/]))?(.+)?$', 'http://me@1.2.3.4/D:\\x')","[155435, 155619]"
"('URIish.java', 'org.eclipse.jgit.transport.URIish', '<init>', '^(file):([\\\\/](?![\\\\/])((?:[A-Za-z]:)?[\\\\/]?(?:(?:[^\\\\/]+[\\\\/]+)*[^\\\\/]+[\\\\/]*)))$', 'https://1.2.3.4//abc')","[171880, 172064, 172984, 173168, 174088, 174272]"
"('Description.java', 'org.junit.runner.Description', 'methodAndClassNamePatternGroupOrDefault', '([\\s\\S]*)\\((.*)\\)', 'testEmpty(org.eclipse.jgit.patch.PatchTest)')","[39717, 97452]"
"('Repository.java', 'org.eclipse.jgit.lib.Repository', 'resolve', '^-\\d+$', '-3')","[184989, 185016, 185209, 185236]"
"('URIish.java', 'org.eclipse.jgit.transport.URIish', '<init>', '^(file):([\\\\/](?![\\\\/])((?:[A-Za-z]:)?[\\\\/]?(?:(?:[^\\\\/]+[\\\\/]+)*[^\\\\/]+[\\\\/]*)))$', 'https://lusr\\example@example.com:1234//abc')",[147224]
"('Description.java', 'org.junit.runner.Description', 'methodAndClassNamePatternGroupOrDefault', '([\\s\\S]*)\\((.*)\\)', 'testForceMaster(org.eclipse.jgit.transport.RefSpecTest)')","[2710, 61768]"
"('URIish.java', 'org.eclipse.jgit.transport.URIish', '<init>', '^([a-z][a-z0-9+-]+)://(?:(?:([^/:@]+)(?::([^\\\\/]+))?@)?((?:[^\\\\/:]+)|(?:\\[[0-9a-f:]+\\]))(?::(\\d+))?((?:/~(?:[^\\\\/]+))?[\\\\/]))?(.+)?$', 'http://[::1]//abc')","[168959, 169143, 170063, 170247, 171167, 171351]"
"('URIish.java', 'org.eclipse.jgit.transport.URIish', '<init>', '^([a-z][a-z0-9+-]+)://(?:(?:([^/:@]+)(?::([^\\\\/]+))?@)?((?:[^\\\\/:]+)|(?:\\[[0-9a-f:]+\\]))(?::(\\d+))?((?:/~(?:[^\\\\/]+))?[\\\\/]))?(.+)?$', 'http://l usr\\example.com:wtf@[::1]:1234/D:/x')",[130365]
"('Description.java', 'org.junit.runner.Description', 'methodAndClassNamePatternGroupOrDefault', '([\\s\\S]*)\\((.*)\\)', 'testNonDelimtedEmail(org.eclipse.jgit.revwalk.FooterLineTest)')","[6252, 65200]"
"('Description.java', 'org.junit.runner.Description', 'methodAndClassNamePatternGroupOrDefault', '([\\s\\S]*)\\((.*)\\)', 'org.eclipse.jgit.revwalk.RevWalkUtilsReachableTest')","[5918, 181244]"
"('Description.java', 'org.junit.runner.Description', 'methodAndClassNamePatternGroupOrDefault', '([\\s\\S]*)\\((.*)\\)', 'testRebaseEndsIfLastStepIsEdit(org.eclipse.jgit.api.RebaseCommandTest)')","[45171, 102688]"
"('Description.java', 'org.junit.runner.Description', 'methodAndClassNamePatternGroupOrDefault', '([\\s\\S]*)\\((.*)\\)', 'org.eclipse.jgit.patch.FileHeaderTest')","[39215, 193582]"
"('Description.java', 'org.junit.runner.Description', 'methodAndClassNamePatternGroupOrDefault', '([\\s\\S]*)\\((.*)\\)', 'testQuote_Empty(org.eclipse.jgit.util.QuotedStringBourneUserPathStyleTest)')","[38723, 96550]"
"('Description.java', 'org.junit.runner.Description', 'methodAndClassNamePatternGroupOrDefault', '([\\s\\S]*)\\((.*)\\)', 'test004_addTree(org.eclipse.jgit.lib.T0002_TreeTest)')","[24786, 83064]"
"('URIish.java', 'org.eclipse.jgit.transport.URIish', '<init>', '^([a-z][a-z0-9+-]+)://(?:(?:([^/:@]+)(?::([^\\\\/]+))?@)?((?:[^\\\\/:]+)|(?:\\[[0-9a-f:]+\\]))(?::(\\d+))?((?:/~(?:[^\\\\/]+))?[\\\\/]))?(.+)?$', 'ssh://DOMAIN\\user:pass@example.com:33/some/p ath')","[175928, 175974]"
"('Description.java', 'org.junit.runner.Description', 'methodAndClassNamePatternGroupOrDefault', '([\\s\\S]*)\\((.*)\\)', 'testCreateFileHeader_Add(org.eclipse.jgit.diff.DiffFormatterTest)')","[14041, 72504]"
"('URIish.java', 'org.eclipse.jgit.transport.URIish', '<init>', '^([a-z][a-z0-9+-]+)://(?:(?:([^/:@]+)(?::([^\\\\/]+))?@)?((?:[^\\\\/:]+)|(?:\\[[0-9a-f:]+\\]))(?::(\\d+))?((?:/~(?:[^\\\\/]+))?[\\\\/]))?(.+)?$', 'http://l usr\\example.com@[::1]:1234//abc')",[143567]
"('Description.java', 'org.junit.runner.Description', 'methodAndClassNamePatternGroupOrDefault', '([\\s\\S]*)\\((.*)\\)', 'shouldListAddedFileInInitialCommit(org.eclipse.jgit.diff.DiffEntryTest)')","[13728, 72196]"
"('URIish.java', 'org.eclipse.jgit.transport.URIish', '<init>', '^([a-z][a-z0-9+-]+)://(?:(?:([^/:@]+)(?::([^\\\\/]+))?@)?((?:[^\\\\/:]+)|(?:\\[[0-9a-f:]+\\]))(?::(\\d+))?((?:/~(?:[^\\\\/]+))?[\\\\/]))?(.+)?$', 'file:///tmp/jgit_test_3883950214354605107_tmp/tmp_3885499985139321032')","[197404, 197466, 197520]"
"('Description.java', 'org.junit.runner.Description', 'methodAndClassNamePatternGroupOrDefault', '([\\s\\S]*)\\((.*)\\)', 'testAlias_InheritBatchMode(org.eclipse.jgit.transport.OpenSshConfigTest)')","[2376, 61438]"
"('Description.java', 'org.junit.runner.Description', 'methodAndClassNamePatternGroupOrDefault', '([\\s\\S]*)\\((.*)\\)', 'testSet(org.eclipse.jgit.diff.EditListTest)')","[13440, 71954]"
"('Description.java', 'org.junit.runner.Description', 'methodAndClassNamePatternGroupOrDefault', '([\\s\\S]*)\\((.*)\\)', 'testEmptyValueWithLF(org.eclipse.jgit.revwalk.FooterLineTest)')","[6126, 65068]"
"('URIish.java', 'org.eclipse.jgit.transport.URIish', '<init>', '^(file):([\\\\/](?![\\\\/])((?:[A-Za-z]:)?[\\\\/]?(?:(?:[^\\\\/]+[\\\\/]+)*[^\\\\/]+[\\\\/]*)))$', 'short:project.git')","[119763, 120688]"
"('Description.java', 'org.junit.runner.Description', 'methodAndClassNamePatternGroupOrDefault', '([\\s\\S]*)\\((.*)\\)', 'lockFailedExceptionRecovery(org.eclipse.jgit.internal.storage.file.LockFileTest)')","[55440, 112610]"
"('Description.java', 'org.junit.runner.Description', 'methodAndClassNamePatternGroupOrDefault', '([\\s\\S]*)\\((.*)\\)', 'org.eclipse.jgit.util.FileUtilTest')","[33616, 186748]"
"('Description.java', 'org.junit.runner.Description', 'methodAndClassNamePatternGroupOrDefault', '([\\s\\S]*)\\((.*)\\)', 'testNotEmail(org.eclipse.jgit.revwalk.FooterLineTest)')","[6084, 65024]"
"('URIish.java', 'org.eclipse.jgit.transport.URIish', '<init>', '^(file):([\\\\/](?![\\\\/])((?:[A-Za-z]:)?[\\\\/]?(?:(?:[^\\\\/]+[\\\\/]+)*[^\\\\/]+[\\\\/]*)))$', 'ssh://me@1.2.3.4:80//abc')",[135632]
"('URIish.java', 'org.eclipse.jgit.transport.URIish', '<init>', '^([a-z][a-z0-9+-]+)://(?:(?:([^/:@]+)(?::([^\\\\/]+))?@)?((?:[^\\\\/:]+)|(?:\\[[0-9a-f:]+\\]))(?::(\\d+))?((?:/~(?:[^\\\\/]+))?[\\\\/]))?(.+)?$', 'ssh://me@1.2.3.4:1234//abc')",[135471]
"('Description.java', 'org.junit.runner.Description', 'methodAndClassNamePatternGroupOrDefault', '([\\s\\S]*)\\((.*)\\)', 'testRebaseInteractiveReword(org.eclipse.jgit.api.RebaseCommandTest)')","[45339, 102864]"
"('URIish.java', 'org.eclipse.jgit.transport.URIish', '<init>', '^(file):([\\\\/](?![\\\\/])((?:[A-Za-z]:)?[\\\\/]?(?:(?:[^\\\\/]+[\\\\/]+)*[^\\\\/]+[\\\\/]*)))$', 'example.com:some/p%20ath')","[177906, 177975]"
"('Description.java', 'org.junit.runner.Description', 'methodAndClassNamePatternGroupOrDefault', '([\\s\\S]*)\\((.*)\\)', 'testTwoComplicatedModifications(org.eclipse.jgit.merge.MergeAlgorithmTest)')","[10116, 68830]"
"('URIish.java', 'org.eclipse.jgit.transport.URIish', '<init>', '^([a-z][a-z0-9+-]+)://(?:(?:([^/:@]+)(?::([^\\\\/]+))?@)?((?:[^\\\\/:]+)|(?:\\[[0-9a-f:]+\\]))(?::(\\d+))?((?:/~(?:[^\\\\/]+))?[\\\\/]))?(.+)?$', 'http://lusr\\example@example.com:80//abc')",[144119]
"('URIish.java', 'org.eclipse.jgit.transport.URIish', '<init>', '^([\\\\/]?((?:[A-Za-z]:)?[\\\\/]?(?:(?:[^\\\\/]+[\\\\/]+)*[^\\\\/]+[\\\\/]*)))$', '\\\\some\\place')","[121487, 121602]"
"('Description.java', 'org.junit.runner.Description', 'methodAndClassNamePatternGroupOrDefault', '([\\s\\S]*)\\((.*)\\)', 'testEdit_CommonGrowsPrefixAndSuffix(org.eclipse.jgit.diff.MyersDiffTest)')","[14772, 73230]"
"('Description.java', 'org.junit.runner.Description', 'methodAndClassNamePatternGroupOrDefault', '([\\s\\S]*)\\((.*)\\)', 'repositoryWithNestedSubmodule(org.eclipse.jgit.submodule.SubmoduleWalkTest)')","[19727, 78202]"
"('Description.java', 'org.junit.runner.Description', 'methodAndClassNamePatternGroupOrDefault', '([\\s\\S]*)\\((.*)\\)', 'idOffset(org.eclipse.jgit.treewalk.FileTreeIteratorTest)')","[28905, 87200]"
"('URIish.java', 'org.eclipse.jgit.transport.URIish', '<init>', '^(file):([\\\\/](?![\\\\/])((?:[A-Za-z]:)?[\\\\/]?(?:(?:[^\\\\/]+[\\\\/]+)*[^\\\\/]+[\\\\/]*)))$', 'http://l usr\\example.com:wtf@1.2.3.4:1234/D:\\x')",[130020]
"('Description.java', 'org.junit.runner.Description', 'methodAndClassNamePatternGroupOrDefault', '([\\s\\S]*)\\((.*)\\)', 'testAlias_InheritPreferredAuthentications(org.eclipse.jgit.transport.OpenSshConfigTest)')","[2586, 61658]"
"('URIish.java', 'org.eclipse.jgit.transport.URIish', '<init>', '^(file):([\\\\/](?![\\\\/])((?:[A-Za-z]:)?[\\\\/]?(?:(?:[^\\\\/]+[\\\\/]+)*[^\\\\/]+[\\\\/]*)))$', 'ssh://lusr\\example@[::1]/D:\\x')","[151364, 151548]"
"('Description.java', 'org.junit.runner.Description', 'methodAndClassNamePatternGroupOrDefault', '([\\s\\S]*)\\((.*)\\)', 'testToString(org.eclipse.jgit.util.IntListTest)')","[36099, 94020]"
"('Description.java', 'org.junit.runner.Description', 'methodAndClassNamePatternGroupOrDefault', '([\\s\\S]*)\\((.*)\\)', 'testRemoveFirst(org.eclipse.jgit.notes.LeafBucketTest)')","[40297, 97980]"
"('URIish.java', 'org.eclipse.jgit.transport.URIish', '<init>', '^(file):([\\\\/](?![\\\\/])((?:[A-Za-z]:)?[\\\\/]?(?:(?:[^\\\\/]+[\\\\/]+)*[^\\\\/]+[\\\\/]*)))$', 'ssh+git://me@1.2.3.4:1234//')",[138714]
"('Description.java', 'org.junit.runner.Description', 'methodAndClassNamePatternGroupOrDefault', '([\\s\\S]*)\\((.*)\\)', 'checkUntrackedEmpytFolderIsNotAConflictWithFile(org.eclipse.jgit.merge.ResolveMergerTest)')","[10637, 69336]"
"('Description.java', 'org.junit.runner.Description', 'methodAndClassNamePatternGroupOrDefault', '([\\s\\S]*)\\((.*)\\)', 'testCherryPickDirtyIndex(org.eclipse.jgit.api.CherryPickCommandTest)')","[47738, 105218]"
"('Description.java', 'org.junit.runner.Description', 'methodAndClassNamePatternGroupOrDefault', '([\\s\\S]*)\\((.*)\\)', 'testShouldAutomagicallyDetectGitDirectory(org.eclipse.jgit.internal.storage.file.FileRepositoryBuilderTest)')","[53780, 111070]"
"('ChangeIdUtil.java', 'org.eclipse.jgit.util.ChangeIdUtil', 'indexOfFirstFooterLine', '(^[a-zA-Z0-9-]+:(?!//).*$)', 'Issue: 42')",[188929]
"('Description.java', 'org.junit.runner.Description', 'methodAndClassNamePatternGroupOrDefault', '([\\s\\S]*)\\((.*)\\)', 'shouldThrowIAEWhenTreeWalkHasLessThanTwoTrees(org.eclipse.jgit.diff.DiffEntryTest)')","[13875, 72350]"
"('URIish.java', 'org.eclipse.jgit.transport.URIish', '<init>', '^(file):([\\\\/](?![\\\\/])((?:[A-Za-z]:)?[\\\\/]?(?:(?:[^\\\\/]+[\\\\/]+)*[^\\\\/]+[\\\\/]*)))$', 'ssh+git://lusr\\example:wtf@1.2.3.4:1234/D:/x')",[127766]
"('URIish.java', 'org.eclipse.jgit.transport.URIish', '<init>', '^([a-z][a-z0-9+-]+)://(?:(?:([^/:@]+)(?::([^\\\\/]+))?@)?((?:[^\\\\/:]+)|(?:\\[[0-9a-f:]+\\]))(?::(\\d+))?((?:/~(?:[^\\\\/]+))?[\\\\/]))?(.+)?$', 'ssh+git://l usr\\example.com@example.com/D:\\x')","[152859, 153043]"
"('Description.java', 'org.junit.runner.Description', 'methodAndClassNamePatternGroupOrDefault', '([\\s\\S]*)\\((.*)\\)', 'test006_readCaseInsensitive(org.eclipse.jgit.lib.ConfigTest)')","[27777, 86078]"
"('Description.java', 'org.junit.runner.Description', 'methodAndClassNamePatternGroupOrDefault', '([\\s\\S]*)\\((.*)\\)', 'org.eclipse.jgit.diff.RenameDetectorTest')","[12625, 182478]"
"('Description.java', 'org.junit.runner.Description', 'methodAndClassNamePatternGroupOrDefault', '([\\s\\S]*)\\((.*)\\)', 'testInvalidTreeDuplicateNames4(org.eclipse.jgit.lib.ObjectCheckerTest)')","[27008, 85352]"
"('Description.java', 'org.junit.runner.Description', 'methodAndClassNamePatternGroupOrDefault', '([\\s\\S]*)\\((.*)\\)', 'testFillTo1(org.eclipse.jgit.util.IntListTest)')","[36036, 93954]"
"('URIish.java', 'org.eclipse.jgit.transport.URIish', '<init>', '^(file):([\\\\/](?![\\\\/])((?:[A-Za-z]:)?[\\\\/]?(?:(?:[^\\\\/]+[\\\\/]+)*[^\\\\/]+[\\\\/]*)))$', 'ssh+git://me:wtf@1.2.3.4:1234/D:/x')",[125558]
"('URIish.java', 'org.eclipse.jgit.transport.URIish', '<init>', '^(file):([\\\\/](?![\\\\/])((?:[A-Za-z]:)?[\\\\/]?(?:(?:[^\\\\/]+[\\\\/]+)*[^\\\\/]+[\\\\/]*)))$', '\\\\some\\place')","[121395, 121510]"
"('URIish.java', 'org.eclipse.jgit.transport.URIish', '<init>', '^(file):([\\\\/](?![\\\\/])((?:[A-Za-z]:)?[\\\\/]?(?:(?:[^\\\\/]+[\\\\/]+)*[^\\\\/]+[\\\\/]*)))$', '/tmp/jgit_test_5706102738936117736_tmp/tmp_5370206506562001691')","[201337, 201462, 201608]"
"('Description.java', 'org.junit.runner.Description', 'methodAndClassNamePatternGroupOrDefault', '([\\s\\S]*)\\((.*)\\)', 'withCommitLoadedByDifferentRevWalk(org.eclipse.jgit.revwalk.RevWalkUtilsReachableTest)')","[5960, 64914]"
"('Description.java', 'org.junit.runner.Description', 'methodAndClassNamePatternGroupOrDefault', '([\\s\\S]*)\\((.*)\\)', 'testWordroupCase3(org.eclipse.jgit.fnmatch.FileNameMatcherTest)')","[18916, 77432]"
"('URIish.java', 'org.eclipse.jgit.transport.URIish', '<init>', '^([\\\\/]?((?:[A-Za-z]:)?[\\\\/]?(?:(?:[^\\\\/]+[\\\\/]+)*[^\\\\/]+[\\\\/]*)))$', '/tmp/jgit_test_8508429422333606359_tmp/tmp_7349125838900302966/.git')","[206541, 206691]"
"('URIish.java', 'org.eclipse.jgit.transport.URIish', '<init>', '^([a-z][a-z0-9+-]+)://(?:(?:([^/:@]+)(?::([^\\\\/]+))?@)?((?:[^\\\\/:]+)|(?:\\[[0-9a-f:]+\\]))(?::(\\d+))?((?:/~(?:[^\\\\/]+))?[\\\\/]))?(.+)?$', 'http://l usr\\example.com:wtf@1.2.3.4:1234//abc')",[129951]
"('URIish.java', 'org.eclipse.jgit.transport.URIish', '<init>', '^([a-z][a-z0-9+-]+)://(?:(?:([^/:@]+)(?::([^\\\\/]+))?@)?((?:[^\\\\/:]+)|(?:\\[[0-9a-f:]+\\]))(?::(\\d+))?((?:/~(?:[^\\\\/]+))?[\\\\/]))?(.+)?$', 'https://lusr\\example:wtf@[::1]:1234//')",[134689]
"('Description.java', 'org.junit.runner.Description', 'methodAndClassNamePatternGroupOrDefault', '([\\s\\S]*)\\((.*)\\)', 'testDirCacheMatchingId(org.eclipse.jgit.treewalk.FileTreeIteratorTest)')","[28968, 87266]"
"('Description.java', 'org.junit.runner.Description', 'methodAndClassNamePatternGroupOrDefault', '([\\s\\S]*)\\((.*)\\)', 'testMaliciousAbsoluteUNCPathWindows2OnUnix(org.eclipse.jgit.lib.DirCacheCheckoutMaliciousPathTest)')","[21223, 79610]"
"('Description.java', 'org.junit.runner.Description', 'methodAndClassNamePatternGroupOrDefault', '([\\s\\S]*)\\((.*)\\)', 'testEdit_UniqueCommonLargerThanMatchPoint(org.eclipse.jgit.diff.HistogramDiffTest)')","[15478, 73890]"
"('Description.java', 'org.junit.runner.Description', 'methodAndClassNamePatternGroupOrDefault', '([\\s\\S]*)\\((.*)\\)', 'testStringOfPearls_FilePath2(org.eclipse.jgit.revwalk.RevWalkPathFilter1Test)')","[5504, 64496]"
"('Description.java', 'org.junit.runner.Description', 'methodAndClassNamePatternGroupOrDefault', '([\\s\\S]*)\\((.*)\\)', 'testMaxCountRevFilter(org.eclipse.jgit.revwalk.MaxCountRevFilterTest)')","[6853, 65750]"
"('Description.java', 'org.junit.runner.Description', 'methodAndClassNamePatternGroupOrDefault', '([\\s\\S]*)\\((.*)\\)', 'testUTF8withoutBOM(org.eclipse.jgit.storage.file.FileBasedConfigTest)')","[38887, 96682]"
"('URIish.java', 'org.eclipse.jgit.transport.URIish', '<init>', '^([a-z][a-z0-9+-]+)://(?:(?:([^/:@]+)(?::([^\\\\/]+))?@)?((?:[^\\\\/:]+)|(?:\\[[0-9a-f:]+\\]))(?::(\\d+))?((?:/~(?:[^\\\\/]+))?[\\\\/]))?(.+)?$', 'ssh://me:wtf@1.2.3.4:1234/D:\\x')",[122315]
"('Description.java', 'org.junit.runner.Description', 'methodAndClassNamePatternGroupOrDefault', '([\\s\\S]*)\\((.*)\\)', 'org.eclipse.jgit.nls.TranslationBundleTest')","[36, 116179]"
"('Description.java', 'org.junit.runner.Description', 'methodAndClassNamePatternGroupOrDefault', '([\\s\\S]*)\\((.*)\\)', 'testPullMergeProgrammaticConfiguration(org.eclipse.jgit.api.PullCommandTest)')","[46574, 104118]"
"('Description.java', 'org.junit.runner.Description', 'methodAndClassNamePatternGroupOrDefault', '([\\s\\S]*)\\((.*)\\)', 'testNotEmpty_NoPrefix(org.eclipse.jgit.util.RefMapTest)')","[36929, 94790]"
"('URIish.java', 'org.eclipse.jgit.transport.URIish', '<init>', '^([a-z][a-z0-9+-]+)://(?:(?:([^/:@]+)(?::([^\\\\/]+))?@)?((?:[^\\\\/:]+)|(?:\\[[0-9a-f:]+\\]))(?::(\\d+))?((?:/~(?:[^\\\\/]+))?[\\\\/]))?(.+)?$', '//.git')",[179102]
"('Description.java', 'org.junit.runner.Description', 'methodAndClassNamePatternGroupOrDefault', '([\\s\\S]*)\\((.*)\\)', 'testEdit_InsertNearCommonTail(org.eclipse.jgit.diff.HistogramDiffTest)')","[15415, 73824]"
"('URIish.java', 'org.eclipse.jgit.transport.URIish', '<init>', '^(file):([\\\\/](?![\\\\/])((?:[A-Za-z]:)?[\\\\/]?(?:(?:[^\\\\/]+[\\\\/]+)*[^\\\\/]+[\\\\/]*)))$', 'file:/tmp/jgit_test_6468569531057046805_tmp/tmp_9160806371775263841/.git/')",[201867]
"('Description.java', 'org.junit.runner.Description', 'methodAndClassNamePatternGroupOrDefault', '([\\s\\S]*)\\((.*)\\)', 'testQuote_NamedEscapes(org.eclipse.jgit.util.QuotedStringGitPathStyleTest)')","[34349, 92326]"
"('URIish.java', 'org.eclipse.jgit.transport.URIish', '<init>', '^(file):([\\\\/](?![\\\\/])((?:[A-Za-z]:)?[\\\\/]?(?:(?:[^\\\\/]+[\\\\/]+)*[^\\\\/]+[\\\\/]*)))$', 'http://lusr\\example@1.2.3.4:1234/D:\\x')",[144372]
"('Description.java', 'org.junit.runner.Description', 'methodAndClassNamePatternGroupOrDefault', '([\\s\\S]*)\\((.*)\\)', 'testFileWithUserHome(org.eclipse.jgit.transport.URIishTest)')","[2231, 61306]"
"('Description.java', 'org.junit.runner.Description', 'methodAndClassNamePatternGroupOrDefault', '([\\s\\S]*)\\((.*)\\)', 'testDequote_LoneBackslash(org.eclipse.jgit.util.QuotedStringBourneStyleTest)')","[36536, 94438]"
"('Description.java', 'org.junit.runner.Description', 'methodAndClassNamePatternGroupOrDefault', '([\\s\\S]*)\\((.*)\\)', 'testReadString_Len0003(org.eclipse.jgit.transport.PacketLineInTest)')","[3569, 62648]"
"('Description.java', 'org.junit.runner.Description', 'methodAndClassNamePatternGroupOrDefault', '([\\s\\S]*)\\((.*)\\)', 'testXDigitGroupCase1(org.eclipse.jgit.fnmatch.FileNameMatcherTest)')","[18706, 77212]"
"('Description.java', 'org.junit.runner.Description', 'methodAndClassNamePatternGroupOrDefault', '([\\s\\S]*)\\((.*)\\)', 'testWordroupCase2(org.eclipse.jgit.fnmatch.FileNameMatcherTest)')","[18895, 77410]"
"('Description.java', 'org.junit.runner.Description', 'methodAndClassNamePatternGroupOrDefault', '([\\s\\S]*)\\((.*)\\)', 'commitAmendWithAuthorShouldUseIt(org.eclipse.jgit.api.CommitCommandTest)')","[43629, 101192]"
"('Description.java', 'org.junit.runner.Description', 'methodAndClassNamePatternGroupOrDefault', '([\\s\\S]*)\\((.*)\\)', 'testInvalidTreeBadSorting3(org.eclipse.jgit.lib.ObjectCheckerTest)')","[25706, 83988]"
"('URIish.java', 'org.eclipse.jgit.transport.URIish', '<init>', '^(file):([\\\\/](?![\\\\/])((?:[A-Za-z]:)?[\\\\/]?(?:(?:[^\\\\/]+[\\\\/]+)*[^\\\\/]+[\\\\/]*)))$', 'http://lusr\\example:wtf@[::1]:80//abc')",[131584]
"('Description.java', 'org.junit.runner.Description', 'methodAndClassNamePatternGroupOrDefault', '([\\s\\S]*)\\((.*)\\)', 'testVerySimpleWildCardCase1(org.eclipse.jgit.fnmatch.FileNameMatcherTest)')","[16312, 74704]"
"('Description.java', 'org.junit.runner.Description', 'methodAndClassNamePatternGroupOrDefault', '([\\s\\S]*)\\((.*)\\)', 'testReadString1(org.eclipse.jgit.transport.PacketLineInTest)')","[3779, 62868]"
"('Description.java', 'org.junit.runner.Description', 'methodAndClassNamePatternGroupOrDefault', '([\\s\\S]*)\\((.*)\\)', 'testFilePathSimpleCase(org.eclipse.jgit.fnmatch.FileNameMatcherTest)')","[16816, 75232]"
"('Description.java', 'org.junit.runner.Description', 'methodAndClassNamePatternGroupOrDefault', '([\\s\\S]*)\\((.*)\\)', 'testMaliciousAbsolutePathTwoLevelsFirstBad(org.eclipse.jgit.lib.DirCacheCheckoutMaliciousPathTest)')","[21391, 79786]"
"('URIish.java', 'org.eclipse.jgit.transport.URIish', '<init>', '^(file):([\\\\/](?![\\\\/])((?:[A-Za-z]:)?[\\\\/]?(?:(?:[^\\\\/]+[\\\\/]+)*[^\\\\/]+[\\\\/]*)))$', 'https://server/repos/project.git')","[117500, 117910, 119145, 120198]"
"('URIish.java', 'org.eclipse.jgit.transport.URIish', '<init>', '^([a-z][a-z0-9+-]+)://(?:(?:([^/:@]+)(?::([^\\\\/]+))?@)?((?:[^\\\\/:]+)|(?:\\[[0-9a-f:]+\\]))(?::(\\d+))?((?:/~(?:[^\\\\/]+))?[\\\\/]))?(.+)?$', 'https://lusr\\example@1.2.3.4:80//abc')",[147799]
"('URIish.java', 'org.eclipse.jgit.transport.URIish', '<init>', '^(file):([\\\\/](?![\\\\/])((?:[A-Za-z]:)?[\\\\/]?(?:(?:[^\\\\/]+[\\\\/]+)*[^\\\\/]+[\\\\/]*)))$', 'file:/tmp/jgit_test_2872617124669872445_tmp/tmp_89294256309986088/.git/')",[183054]
"('URIish.java', 'org.eclipse.jgit.transport.URIish', '<init>', '^([a-z][a-z0-9+-]+)://(?:(?:([^/:@]+)(?::([^\\\\/]+))?@)?((?:[^\\\\/:]+)|(?:\\[[0-9a-f:]+\\]))(?::(\\d+))?((?:/~(?:[^\\\\/]+))?[\\\\/]))?(.+)?$', 'ssh://me@[::1]:80//abc')",[136023]
"('Description.java', 'org.junit.runner.Description', 'methodAndClassNamePatternGroupOrDefault', '([\\s\\S]*)\\((.*)\\)', 'testLinesAllDeletedShortenedWalk(org.eclipse.jgit.api.blame.BlameGeneratorTest)')","[50813, 108320]"
"('Description.java', 'org.junit.runner.Description', 'methodAndClassNamePatternGroupOrDefault', '([\\s\\S]*)\\((.*)\\)', 'testMaybeContains(org.eclipse.jgit.internal.storage.file.InflatingBitSetTest)')","[54818, 112038]"
"('Description.java', 'org.junit.runner.Description', 'methodAndClassNamePatternGroupOrDefault', '([\\s\\S]*)\\((.*)\\)', 'resolveExprSimple(org.eclipse.jgit.lib.RepositoryResolveTest)')","[27216, 85550]"
"('Description.java', 'org.junit.runner.Description', 'methodAndClassNamePatternGroupOrDefault', '([\\s\\S]*)\\((.*)\\)', 'testMirror(org.eclipse.jgit.transport.RemoteConfigTest)')","[994, 60030]"
"('ChangeIdUtil.java', 'org.eclipse.jgit.util.ChangeIdUtil', 'indexOfChangeId', '(^Change-Id: *I[a-f0-9]{40}$)', 'ftp://example.com/ fixes this')",[190342]
"('URIish.java', 'org.eclipse.jgit.transport.URIish', '<init>', '^([a-z][a-z0-9+-]+)://(?:(?:([^/:@]+)(?::([^\\\\/]+))?@)?((?:[^\\\\/:]+)|(?:\\[[0-9a-f:]+\\]))(?::(\\d+))?((?:/~(?:[^\\\\/]+))?[\\\\/]))?(.+)?$', 'file:///tmp/jgit_test_765209740921422314_tmp/tmp_2226205120512939987/.git/')",[185965]
"('URIish.java', 'org.eclipse.jgit.transport.URIish', '<init>', '^(file):([\\\\/](?![\\\\/])((?:[A-Za-z]:)?[\\\\/]?(?:(?:[^\\\\/]+[\\\\/]+)*[^\\\\/]+[\\\\/]*)))$', 'https://lusr\\example:wtf@example.com:1234//')",[133930]
"('Description.java', 'org.junit.runner.Description', 'methodAndClassNamePatternGroupOrDefault', '([\\s\\S]*)\\((.*)\\)', 'testFileInFolderCommittedAllDeletedCommittedComparedWithInitialCommit(org.eclipse.jgit.treewalk.filter.IndexDiffFilterTest)')","[30569, 88784]"
"('Description.java', 'org.junit.runner.Description', 'methodAndClassNamePatternGroupOrDefault', '([\\s\\S]*)\\((.*)\\)', 'testCleanDirsWithDryRunAndNoIgnore(org.eclipse.jgit.api.CleanCommandTest)')","[46387, 103942]"
"('Description.java', 'org.junit.runner.Description', 'methodAndClassNamePatternGroupOrDefault', '([\\s\\S]*)\\((.*)\\)', 'testReadString_Len0004(org.eclipse.jgit.transport.PacketLineInTest)')","[3590, 62670]"
"('URIish.java', 'org.eclipse.jgit.transport.URIish', '<init>', '^([a-z][a-z0-9+-]+)://(?:(?:([^/:@]+)(?::([^\\\\/]+))?@)?((?:[^\\\\/:]+)|(?:\\[[0-9a-f:]+\\]))(?::(\\d+))?((?:/~(?:[^\\\\/]+))?[\\\\/]))?(.+)?$', 'https://lusr\\example@example.com//abc')","[160495, 160679]"
"('URIish.java', 'org.eclipse.jgit.transport.URIish', '<init>', '^(file):([\\\\/](?![\\\\/])((?:[A-Za-z]:)?[\\\\/]?(?:(?:[^\\\\/]+[\\\\/]+)*[^\\\\/]+[\\\\/]*)))$', 'ssh+git://lusr\\example@1.2.3.4/D:\\x')","[154308, 154492]"
"('ChangeIdUtil.java', 'org.eclipse.jgit.util.ChangeIdUtil', 'indexOfChangeId', '(^Change-Id: *I[a-f0-9]{40}$)', 'a two lines')",[188023]
"('Description.java', 'org.junit.runner.Description', 'methodAndClassNamePatternGroupOrDefault', '([\\s\\S]*)\\((.*)\\)', 'org.eclipse.jgit.merge.RecursiveMergerTest')","[10303, 181865]"
"('URIish.java', 'org.eclipse.jgit.transport.URIish', '<init>', '^(file):([\\\\/](?![\\\\/])((?:[A-Za-z]:)?[\\\\/]?(?:(?:[^\\\\/]+[\\\\/]+)*[^\\\\/]+[\\\\/]*)))$', 'http://lusr\\example@1.2.3.4:80//')",[144418]
"('URIish.java', 'org.eclipse.jgit.transport.URIish', '<init>', '^([a-z][a-z0-9+-]+)://(?:(?:([^/:@]+)(?::([^\\\\/]+))?@)?((?:[^\\\\/:]+)|(?:\\[[0-9a-f:]+\\]))(?::(\\d+))?((?:/~(?:[^\\\\/]+))?[\\\\/]))?(.+)?$', 'https://l usr\\example.com:wtf@[::1]:1234/D:/x')",[133677]
"('Description.java', 'org.junit.runner.Description', 'methodAndClassNamePatternGroupOrDefault', '([\\s\\S]*)\\((.*)\\)', 'testEmptyTagName(org.eclipse.jgit.api.TagCommandTest)')","[41566, 99190]"
"('URIish.java', 'org.eclipse.jgit.transport.URIish', '<init>', '^([a-z][a-z0-9+-]+)://(?:(?:([^/:@]+)(?::([^\\\\/]+))?@)?((?:[^\\\\/:]+)|(?:\\[[0-9a-f:]+\\]))(?::(\\d+))?((?:/~(?:[^\\\\/]+))?[\\\\/]))?(.+)?$', 'ssh+git://l usr\\example.com@example.com:80//')",[139657]
"('URIish.java', 'org.eclipse.jgit.transport.URIish', '<init>', '^([a-z][a-z0-9+-]+)://(?:(?:([^/:@]+)(?::([^\\\\/]+))?@)?((?:[^\\\\/:]+)|(?:\\[[0-9a-f:]+\\]))(?::(\\d+))?((?:/~(?:[^\\\\/]+))?[\\\\/]))?(.+)?$', 'ssh+git://lusr\\example@1.2.3.4:1234//')",[140945]
"('Description.java', 'org.junit.runner.Description', 'methodAndClassNamePatternGroupOrDefault', '([\\s\\S]*)\\((.*)\\)', 'testGetRefs_IgnoresGarbageRef2(org.eclipse.jgit.internal.storage.file.RefDirectoryTest)')","[57850, 114876]"
"('Description.java', 'org.junit.runner.Description', 'methodAndClassNamePatternGroupOrDefault', '([\\s\\S]*)\\((.*)\\)', 'testConfigureCache_Limits1(org.eclipse.jgit.internal.storage.file.WindowCacheReconfigureTest)')","[53303, 110630]"
"('URIish.java', 'org.eclipse.jgit.transport.URIish', '<init>', '^([a-z][a-z0-9+-]+)://(?:(?:([^/:@]+)(?::([^\\\\/]+))?@)?((?:[^\\\\/:]+)|(?:\\[[0-9a-f:]+\\]))(?::(\\d+))?((?:/~(?:[^\\\\/]+))?[\\\\/]))?(.+)?$', 'https://l usr\\example.com:wtf@[::1]:1234//abc')",[133631]
"('URIish.java', 'org.eclipse.jgit.transport.URIish', '<init>', '^(file):([\\\\/](?![\\\\/])((?:[A-Za-z]:)?[\\\\/]?(?:(?:[^\\\\/]+[\\\\/]+)*[^\\\\/]+[\\\\/]*)))$', 'https://l usr\\example.com@example.com:80//abc')",[146304]
"('Description.java', 'org.junit.runner.Description', 'methodAndClassNamePatternGroupOrDefault', '([\\s\\S]*)\\((.*)\\)', 'testLimitObjectSize_InsertFrontFails(org.eclipse.jgit.internal.storage.pack.DeltaIndexTest)')","[52786, 110168]"
"('Description.java', 'org.junit.runner.Description', 'methodAndClassNamePatternGroupOrDefault', '([\\s\\S]*)\\((.*)\\)', 'testTwoRenames(org.eclipse.jgit.api.BlameCommandTest)')","[52288, 109706]"
"('URIish.java', 'org.eclipse.jgit.transport.URIish', '<init>', '^(file):([\\\\/](?![\\\\/])((?:[A-Za-z]:)?[\\\\/]?(?:(?:[^\\\\/]+[\\\\/]+)*[^\\\\/]+[\\\\/]*)))$', 'ssh+git://lusr\\example:wtf@1.2.3.4:80//abc')",[127904]
"('Description.java', 'org.junit.runner.Description', 'methodAndClassNamePatternGroupOrDefault', '([\\s\\S]*)\\((.*)\\)', 'testQuote_BareA(org.eclipse.jgit.util.QuotedStringBourneUserPathStyleTest)')","[38702, 96528]"
"('URIish.java', 'org.eclipse.jgit.transport.URIish', '<init>', '^(file):([\\\\/](?![\\\\/])((?:[A-Za-z]:)?[\\\\/]?(?:(?:[^\\\\/]+[\\\\/]+)*[^\\\\/]+[\\\\/]*)))$', 'https://lusr\\example@1.2.3.4:1234/D:/x')",[147638]
"('Description.java', 'org.junit.runner.Description', 'methodAndClassNamePatternGroupOrDefault', '([\\s\\S]*)\\((.*)\\)', 'testReadString_LenHELO(org.eclipse.jgit.transport.PacketLineInTest)')","[3611, 62692]"
"('Description.java', 'org.junit.runner.Description', 'methodAndClassNamePatternGroupOrDefault', '([\\s\\S]*)\\((.*)\\)', 'testIteratorMethodsContract(org.eclipse.jgit.internal.storage.file.PackIndexV2Test)')","[53530, 110828]"
"('Description.java', 'org.junit.runner.Description', 'methodAndClassNamePatternGroupOrDefault', '([\\s\\S]*)\\((.*)\\)', 'testInsertVsModify(org.eclipse.jgit.merge.MergeAlgorithmTest)')","[10179, 68896]"
"('Description.java', 'org.junit.runner.Description', 'methodAndClassNamePatternGroupOrDefault', '([\\s\\S]*)\\((.*)\\)', 'org.eclipse.jgit.internal.storage.file.ReflogReaderTest')","[58856, 210380]"
"('Description.java', 'org.junit.runner.Description', 'methodAndClassNamePatternGroupOrDefault', '([\\s\\S]*)\\((.*)\\)', 'daysAndWeeksAgo(org.eclipse.jgit.util.GitDateParserTest)')","[36433, 94350]"
"('Description.java', 'org.junit.runner.Description', 'methodAndClassNamePatternGroupOrDefault', '([\\s\\S]*)\\((.*)\\)', 'testCreateBranchAtHiddenCommitFails(org.eclipse.jgit.transport.ReceivePackAdvertiseRefsHookTest)')","[429, 59458]"
"('URIish.java', 'org.eclipse.jgit.transport.URIish', '<init>', '^(file):([\\\\/](?![\\\\/])((?:[A-Za-z]:)?[\\\\/]?(?:(?:[^\\\\/]+[\\\\/]+)*[^\\\\/]+[\\\\/]*)))$', 'http://me@1.2.3.4:80//')",[142210]
"('Description.java', 'org.junit.runner.Description', 'methodAndClassNamePatternGroupOrDefault', '([\\s\\S]*)\\((.*)\\)', 'testActuallyIsModifiedTrivial(org.eclipse.jgit.internal.storage.file.FileSnapshotTest)')","[54633, 111884]"
"('Description.java', 'org.junit.runner.Description', 'methodAndClassNamePatternGroupOrDefault', '([\\s\\S]*)\\((.*)\\)', 'testCreateEmpty(org.eclipse.jgit.diff.EditTest)')","[15852, 74242]"
"('Description.java', 'org.junit.runner.Description', 'methodAndClassNamePatternGroupOrDefault', '([\\s\\S]*)\\((.*)\\)', 'org.eclipse.jgit.lib.RefDatabaseConflictingNamesTest')","[24479, 184221]"
"('Description.java', 'org.junit.runner.Description', 'methodAndClassNamePatternGroupOrDefault', '([\\s\\S]*)\\((.*)\\)', 'testDirectoryFileConflicts_6b(org.eclipse.jgit.lib.DirCacheCheckoutTest)')","[23815, 82206]"
"('Description.java', 'org.junit.runner.Description', 'methodAndClassNamePatternGroupOrDefault', '([\\s\\S]*)\\((.*)\\)', 'org.eclipse.jgit.internal.storage.file.GcReflogTest')","[57312, 210245]"
"('Description.java', 'org.junit.runner.Description', 'methodAndClassNamePatternGroupOrDefault', '([\\s\\S]*)\\((.*)\\)', 'testTwoGroupsCase2(org.eclipse.jgit.fnmatch.FileNameMatcherTest)')","[17488, 75936]"
"('URIish.java', 'org.eclipse.jgit.transport.URIish', '<init>', '^(file):([\\\\/](?![\\\\/])((?:[A-Za-z]:)?[\\\\/]?(?:(?:[^\\\\/]+[\\\\/]+)*[^\\\\/]+[\\\\/]*)))$', 'ssh+git://l usr\\example.com@example.com:80/D:\\x')",[139772]
"('Description.java', 'org.junit.runner.Description', 'methodAndClassNamePatternGroupOrDefault', '([\\s\\S]*)\\((.*)\\)', 'testRebaseInteractiveSquashFirstCommitShouldFail(org.eclipse.jgit.api.RebaseCommandTest)')","[45507, 103040]"
"('Description.java', 'org.junit.runner.Description', 'methodAndClassNamePatternGroupOrDefault', '([\\s\\S]*)\\((.*)\\)', 'testRevertkConflictReset(org.eclipse.jgit.api.RevertCommandTest)')","[48072, 105548]"
"('URIish.java', 'org.eclipse.jgit.transport.URIish', '<init>', '^(?:([^/:@]+)(?::([^\\\\/]+))?@)?([^\\\\/:]{2,}):([\\\\/](?:(?:[^\\\\/]+[\\\\/]+)*[^\\\\/]+[\\\\/]*))$', '/a/b/c.git')",[121326]
"('URIish.java', 'org.eclipse.jgit.transport.URIish', '<init>', '^(?:([^/:@]+)(?::([^\\\\/]+))?@)?((?:[^\\\\/:]+)|(?:\\[[0-9a-f:]+\\])):((?:(?:/~(?:[^\\\\/]+))[\\\\/])?(?:(?:[^\\\\/]+[\\\\/]+)*[^\\\\/]+[\\\\/]*))$', 'example.com:/some/p ath')","[178504, 178596]"
"('URIish.java', 'org.eclipse.jgit.transport.URIish', '<init>', '^(file):([\\\\/](?![\\\\/])((?:[A-Za-z]:)?[\\\\/]?(?:(?:[^\\\\/]+[\\\\/]+)*[^\\\\/]+[\\\\/]*)))$', 'ssh://[::1]//abc')","[162312, 162496, 163416, 163600, 164520, 164704]"
"('URIish.java', 'org.eclipse.jgit.transport.URIish', '<init>', '^([\\\\/]?((?:[A-Za-z]:)?[\\\\/]?(?:(?:[^\\\\/]+[\\\\/]+)*[^\\\\/]+[\\\\/]*)))$', '/tmp/jgit_test_983393012567618838_tmp/tmp_60736882191290227')","[204618, 204763]"
"('Description.java', 'org.junit.runner.Description', 'methodAndClassNamePatternGroupOrDefault', '([\\s\\S]*)\\((.*)\\)', 'testAlias_DoesNotMatch(org.eclipse.jgit.transport.OpenSshConfigTest)')","[2334, 61394]"
"('URIish.java', 'org.eclipse.jgit.transport.URIish', '<init>', '^(file):([\\\\/](?![\\\\/])((?:[A-Za-z]:)?[\\\\/]?(?:(?:[^\\\\/]+[\\\\/]+)*[^\\\\/]+[\\\\/]*)))$', 'ssh://me:wtf@1.2.3.4:80/D:/x')",[122430]
"('URIish.java', 'org.eclipse.jgit.transport.URIish', '<init>', '^(file):([\\\\/](?![\\\\/])((?:[A-Za-z]:)?[\\\\/]?(?:(?:[^\\\\/]+[\\\\/]+)*[^\\\\/]+[\\\\/]*)))$', 'http://me:wtf@example.com:1234/D:\\x')",[128548]
"('URIish.java', 'org.eclipse.jgit.transport.URIish', '<init>', '^(file):([\\\\/](?![\\\\/])((?:[A-Za-z]:)?[\\\\/]?(?:(?:[^\\\\/]+[\\\\/]+)*[^\\\\/]+[\\\\/]*)))$', 'ssh://me:wtf@[::1]:1234/D:\\x')",[122660]
"('Description.java', 'org.junit.runner.Description', 'methodAndClassNamePatternGroupOrDefault', '([\\s\\S]*)\\((.*)\\)', 'testUpdateRejectedByConnection(org.eclipse.jgit.transport.PushProcessTest)')","[4838, 63858]"
"('Description.java', 'org.junit.runner.Description', 'methodAndClassNamePatternGroupOrDefault', '([\\s\\S]*)\\((.*)\\)', 'testAddRemovedCommittedFile(org.eclipse.jgit.api.AddCommandTest)')","[50542, 108056]"
"('URIish.java', 'org.eclipse.jgit.transport.URIish', '<init>', '^(file):([\\\\/](?![\\\\/])((?:[A-Za-z]:)?[\\\\/]?(?:(?:[^\\\\/]+[\\\\/]+)*[^\\\\/]+[\\\\/]*)))$', 'ssh://me:wtf@example.com:80//')",[121970]
"('URIish.java', 'org.eclipse.jgit.transport.URIish', '<init>', '^([a-z][a-z0-9+-]+)://(?:(?:([^/:@]+)(?::([^\\\\/]+))?@)?((?:[^\\\\/:]+)|(?:\\[[0-9a-f:]+\\]))(?::(\\d+))?((?:/~(?:[^\\\\/]+))?[\\\\/]))?(.+)?$', 'ssh://me@example.com:80//abc')",[135287]
"('Description.java', 'org.junit.runner.Description', 'methodAndClassNamePatternGroupOrDefault', '([\\s\\S]*)\\((.*)\\)', 'testPackRepoWithCorruptReflog(org.eclipse.jgit.internal.storage.file.GcReflogTest)')","[57333, 114414]"
"('URIish.java', 'org.eclipse.jgit.transport.URIish', '<init>', '^([a-z][a-z0-9+-]+)://(?:(?:([^/:@]+)(?::([^\\\\/]+))?@)?((?:[^\\\\/:]+)|(?:\\[[0-9a-f:]+\\]))(?::(\\d+))?((?:/~(?:[^\\\\/]+))?[\\\\/]))?(.+)?$', 'https://me@example.com:1234//abc')",[145039]
"('Description.java', 'org.junit.runner.Description', 'methodAndClassNamePatternGroupOrDefault', '([\\s\\S]*)\\((.*)\\)', 'testGetRefs_CorruptSymbolicReference(org.eclipse.jgit.internal.storage.file.RefDirectoryTest)')","[57703, 114722]"
"('Description.java', 'org.junit.runner.Description', 'methodAndClassNamePatternGroupOrDefault', '([\\s\\S]*)\\((.*)\\)', 'testEdit_CommonGrowsPrefixAndSuffix(org.eclipse.jgit.diff.HistogramDiffTest)')","[15625, 74044]"
"('URIish.java', 'org.eclipse.jgit.transport.URIish', '<init>', '^([a-z][a-z0-9+-]+)://(?:(?:([^/:@]+)(?::([^\\\\/]+))?@)?((?:[^\\\\/:]+)|(?:\\[[0-9a-f:]+\\]))(?::(\\d+))?((?:/~(?:[^\\\\/]+))?[\\\\/]))?(.+)?$', 'ssh+git://me@example.com:1234//')",[138369]
"('URIish.java', 'org.eclipse.jgit.transport.URIish', '<init>', '^([a-z][a-z0-9+-]+)://(?:(?:([^/:@]+)(?::([^\\\\/]+))?@)?((?:[^\\\\/:]+)|(?:\\[[0-9a-f:]+\\]))(?::(\\d+))?((?:/~(?:[^\\\\/]+))?[\\\\/]))?(.+)?$', 'ssh://l usr\\example.com@1.2.3.4//')","[149777, 149961]"
"('URIish.java', 'org.eclipse.jgit.transport.URIish', '<init>', '^([a-z][a-z0-9+-]+)://(?:(?:([^/:@]+)(?::([^\\\\/]+))?@)?((?:[^\\\\/:]+)|(?:\\[[0-9a-f:]+\\]))(?::(\\d+))?((?:/~(?:[^\\\\/]+))?[\\\\/]))?(.+)?$', 'ssh+git://me@1.2.3.4:80/D:/x')",[139013]
"('Description.java', 'org.junit.runner.Description', 'methodAndClassNamePatternGroupOrDefault', '([\\s\\S]*)\\((.*)\\)', 'testFailureOnSignedTags(org.eclipse.jgit.api.TagCommandTest)')","[41503, 99124]"
"('URIish.java', 'org.eclipse.jgit.transport.URIish', '<init>', '^(file):([\\\\/](?![\\\\/])((?:[A-Za-z]:)?[\\\\/]?(?:(?:[^\\\\/]+[\\\\/]+)*[^\\\\/]+[\\\\/]*)))$', 'ssh://l usr\\example.com@[::1]/D:/x')","[150214, 150398]"
"('URIish.java', 'org.eclipse.jgit.transport.URIish', '<init>', '^([a-z][a-z0-9+-]+)://(?:(?:([^/:@]+)(?::([^\\\\/]+))?@)?((?:[^\\\\/:]+)|(?:\\[[0-9a-f:]+\\]))(?::(\\d+))?((?:/~(?:[^\\\\/]+))?[\\\\/]))?(.+)?$', 'ssh://l usr\\example.com@[::1]:80/D:\\x')",[137219]
"('URIish.java', 'org.eclipse.jgit.transport.URIish', '<init>', '^(file):([\\\\/](?![\\\\/])((?:[A-Za-z]:)?[\\\\/]?(?:(?:[^\\\\/]+[\\\\/]+)*[^\\\\/]+[\\\\/]*)))$', 'file:///tmp/jgit_test_1158868256880953365_tmp/tmp_1703886128869362682/.git/')",[196538]
"('URIish.java', 'org.eclipse.jgit.transport.URIish', '<init>', '^(file):([\\\\/](?![\\\\/])((?:[A-Za-z]:)?[\\\\/]?(?:(?:[^\\\\/]+[\\\\/]+)*[^\\\\/]+[\\\\/]*)))$', 'https://l usr\\example.com:wtf@example.com:80//abc')",[133056]
"('Description.java', 'org.junit.runner.Description', 'methodAndClassNamePatternGroupOrDefault', '([\\s\\S]*)\\((.*)\\)', 'testValidTree5(org.eclipse.jgit.lib.ObjectCheckerTest)')","[25601, 83878]"
"('Description.java', 'org.junit.runner.Description', 'methodAndClassNamePatternGroupOrDefault', '([\\s\\S]*)\\((.*)\\)', 'shouldReturnZeroWhenMergedInto(org.eclipse.jgit.revwalk.RevWalkUtilsCountTest)')","[6626, 65552]"
"('Description.java', 'org.junit.runner.Description', 'methodAndClassNamePatternGroupOrDefault', '([\\s\\S]*)\\((.*)\\)', 'testPackFormat_SmallObject(org.eclipse.jgit.internal.storage.file.UnpackedObjectTest)')","[56856, 113974]"
"('Description.java', 'org.junit.runner.Description', 'methodAndClassNamePatternGroupOrDefault', '([\\s\\S]*)\\((.*)\\)', 'testCommonScore_TotallyDifferentFiles(org.eclipse.jgit.diff.SimilarityIndexTest)')","[14917, 73362]"
"('URIish.java', 'org.eclipse.jgit.transport.URIish', '<init>', '^([a-z][a-z0-9+-]+)://(?:(?:([^/:@]+)(?::([^\\\\/]+))?@)?((?:[^\\\\/:]+)|(?:\\[[0-9a-f:]+\\]))(?::(\\d+))?((?:/~(?:[^\\\\/]+))?[\\\\/]))?(.+)?$', 'ssh://me:wtf@1.2.3.4:80/D:/x')",[122453]
"('Description.java', 'org.junit.runner.Description', 'methodAndClassNamePatternGroupOrDefault', '([\\s\\S]*)\\((.*)\\)', 'testStopOnConflictAndFailContinueIfFileIsDirty(org.eclipse.jgit.api.RebaseCommandTest)')","[45885, 103436]"
"('Description.java', 'org.junit.runner.Description', 'methodAndClassNamePatternGroupOrDefault', '([\\s\\S]*)\\((.*)\\)', 'test022_createCommitTag(org.eclipse.jgit.internal.storage.file.T0003_BasicTest)')","[54259, 111532]"
"('Description.java', 'org.junit.runner.Description', 'methodAndClassNamePatternGroupOrDefault', '([\\s\\S]*)\\((.*)\\)', 'testParse_incompleteAuthorAndCommitter(org.eclipse.jgit.revwalk.RevCommitParseTest)')","[9015, 67796]"
"('Description.java', 'org.junit.runner.Description', 'methodAndClassNamePatternGroupOrDefault', '([\\s\\S]*)\\((.*)\\)', 'getRemoteTrackingBranchShouldReturnNullWithoutFetchSpec(org.eclipse.jgit.lib.BranchConfigTest)')","[25120, 83394]"
"('Description.java', 'org.junit.runner.Description', 'methodAndClassNamePatternGroupOrDefault', '([\\s\\S]*)\\((.*)\\)', 'testUpdateExpectedRemote(org.eclipse.jgit.transport.PushProcessTest)')","[4901, 63924]"
"('URIish.java', 'org.eclipse.jgit.transport.URIish', '<init>', '^(file):([\\\\/](?![\\\\/])((?:[A-Za-z]:)?[\\\\/]?(?:(?:[^\\\\/]+[\\\\/]+)*[^\\\\/]+[\\\\/]*)))$', 'ssh+git://me:wtf@[::1]:80/D:/x')",[126110]
"('URIish.java', 'org.eclipse.jgit.transport.URIish', '<init>', '^(file):([\\\\/](?![\\\\/])((?:[A-Za-z]:)?[\\\\/]?(?:(?:[^\\\\/]+[\\\\/]+)*[^\\\\/]+[\\\\/]*)))$', 'ssh+git://lusr\\example@1.2.3.4:80//abc')",[141152]
"('Description.java', 'org.junit.runner.Description', 'methodAndClassNamePatternGroupOrDefault', '([\\s\\S]*)\\((.*)\\)', 'testInvalidTreeTruncatedInObjectId(org.eclipse.jgit.lib.ObjectCheckerTest)')","[25265, 83526]"
"('URIish.java', 'org.eclipse.jgit.transport.URIish', '<init>', '^([a-z][a-z0-9+-]+)://(?:(?:([^/:@]+)(?::([^\\\\/]+))?@)?((?:[^\\\\/:]+)|(?:\\[[0-9a-f:]+\\]))(?::(\\d+))?((?:/~(?:[^\\\\/]+))?[\\\\/]))?(.+)?$', 'ssh://me:wtf@example.com:80/D:\\x')",[122131]
"('URIish.java', 'org.eclipse.jgit.transport.URIish', '<init>', '^(file):([\\\\/](?![\\\\/])((?:[A-Za-z]:)?[\\\\/]?(?:(?:[^\\\\/]+[\\\\/]+)*[^\\\\/]+[\\\\/]*)))$', 'ssh+git://lusr\\example:wtf@1.2.3.4:80//')",[127858]
"('Description.java', 'org.junit.runner.Description', 'methodAndClassNamePatternGroupOrDefault', '([\\s\\S]*)\\((.*)\\)', 'testPeelLooseTag(org.eclipse.jgit.internal.storage.file.RefDirectoryTest)')","[57934, 114964]"
"('URIish.java', 'org.eclipse.jgit.transport.URIish', '<init>', '^([a-z][a-z0-9+-]+)://(?:(?:([^/:@]+)(?::([^\\\\/]+))?@)?((?:[^\\\\/:]+)|(?:\\[[0-9a-f:]+\\]))(?::(\\d+))?((?:/~(?:[^\\\\/]+))?[\\\\/]))?(.+)?$', 'file:///tmp/jgit_test_7007872334489680580_tmp/tmp_4454208904199474254/.git/')",[183204]
"('URIish.java', 'org.eclipse.jgit.transport.URIish', '<init>', '^(file):([\\\\/](?![\\\\/])((?:[A-Za-z]:)?[\\\\/]?(?:(?:[^\\\\/]+[\\\\/]+)*[^\\\\/]+[\\\\/]*)))$', 'https://lusr\\example@1.2.3.4:80/D:/x')",[147822]
"('URIish.java', 'org.eclipse.jgit.transport.URIish', '<init>', '^(file):([\\\\/](?![\\\\/])((?:[A-Za-z]:)?[\\\\/]?(?:(?:[^\\\\/]+[\\\\/]+)*[^\\\\/]+[\\\\/]*)))$', 'ssh://me@example.com//abc')","[148328, 148512]"
"('Description.java', 'org.junit.runner.Description', 'methodAndClassNamePatternGroupOrDefault', '([\\s\\S]*)\\((.*)\\)', 'testUpdateFastForward(org.eclipse.jgit.transport.PushProcessTest)')","[4796, 63814]"
"('Description.java', 'org.junit.runner.Description', 'methodAndClassNamePatternGroupOrDefault', '([\\s\\S]*)\\((.*)\\)', 'testGetRef_DiscoversDeletedLoose(org.eclipse.jgit.internal.storage.file.RefDirectoryTest)')","[58543, 115602]"
"('Description.java', 'org.junit.runner.Description', 'methodAndClassNamePatternGroupOrDefault', '([\\s\\S]*)\\((.*)\\)', 'logAllCommitsWithMaxCount(org.eclipse.jgit.api.LogCommandTest)')","[47551, 105042]"
"('URIish.java', 'org.eclipse.jgit.transport.URIish', '<init>', '^(file):([\\\\/](?![\\\\/])((?:[A-Za-z]:)?[\\\\/]?(?:(?:[^\\\\/]+[\\\\/]+)*[^\\\\/]+[\\\\/]*)))$', 'ssh://lusr\\example@1.2.3.4/D:/x')","[150950, 151134]"
"('URIish.java', 'org.eclipse.jgit.transport.URIish', '<init>', '^([a-z][a-z0-9+-]+)://(?:(?:([^/:@]+)(?::([^\\\\/]+))?@)?((?:[^\\\\/:]+)|(?:\\[[0-9a-f:]+\\]))(?::(\\d+))?((?:/~(?:[^\\\\/]+))?[\\\\/]))?(.+)?$', 'ssh+git://example.com//abc')","[164911, 165095, 166015, 166199, 167119, 167303]"
"('Description.java', 'org.junit.runner.Description', 'methodAndClassNamePatternGroupOrDefault', '([\\s\\S]*)\\((.*)\\)', 'testSetRenameScore_IllegalArgs(org.eclipse.jgit.diff.RenameDetectorTest)')","[12814, 71338]"
"('URIish.java', 'org.eclipse.jgit.transport.URIish', '<init>', '^(file):([\\\\/](?![\\\\/])((?:[A-Za-z]:)?[\\\\/]?(?:(?:[^\\\\/]+[\\\\/]+)*[^\\\\/]+[\\\\/]*)))$', 'http://lusr\\example@[::1]:80/D:/x')",[144878]
"('Description.java', 'org.junit.runner.Description', 'methodAndClassNamePatternGroupOrDefault', '([\\s\\S]*)\\((.*)\\)', 'testOnlyOption_f1_7_c(org.eclipse.jgit.api.CommitOnlyTest)')","[49116, 106582]"
"('URIish.java', 'org.eclipse.jgit.transport.URIish', '<init>', '^([a-z][a-z0-9+-]+)://(?:(?:([^/:@]+)(?::([^\\\\/]+))?@)?((?:[^\\\\/:]+)|(?:\\[[0-9a-f:]+\\]))(?::(\\d+))?((?:/~(?:[^\\\\/]+))?[\\\\/]))?(.+)?$', 'https://me@1.2.3.4:80/D:/x')",[145637]
"('Description.java', 'org.junit.runner.Description', 'methodAndClassNamePatternGroupOrDefault', '([\\s\\S]*)\\((.*)\\)', 'testTwoEntries_Seek2IsEOF(org.eclipse.jgit.treewalk.CanonicalTreeParserTest)')","[29962, 88168]"
"('Description.java', 'org.junit.runner.Description', 'methodAndClassNamePatternGroupOrDefault', '([\\s\\S]*)\\((.*)\\)', 'testConflictFreeWithSingleFile(org.eclipse.jgit.api.RebaseCommandTest)')","[46200, 103766]"
"('Description.java', 'org.junit.runner.Description', 'methodAndClassNamePatternGroupOrDefault', '([\\s\\S]*)\\((.*)\\)', 'testModifyX(org.eclipse.jgit.api.ApplyCommandTest)')","[46761, 104294]"
"('Description.java', 'org.junit.runner.Description', 'methodAndClassNamePatternGroupOrDefault', '([\\s\\S]*)\\((.*)\\)', 'testMissingPropertiesFile(org.eclipse.jgit.nls.TranslationBundleTest)')","[120, 59194]"
"('Description.java', 'org.junit.runner.Description', 'methodAndClassNamePatternGroupOrDefault', '([\\s\\S]*)\\((.*)\\)', 'testDiffWithPrefixes(org.eclipse.jgit.api.DiffCommandTest)')","[48278, 105724]"
"('Description.java', 'org.junit.runner.Description', 'methodAndClassNamePatternGroupOrDefault', '([\\s\\S]*)\\((.*)\\)', 'testCull(org.eclipse.jgit.revwalk.ObjectWalkTest)')","[5712, 64694]"
"('URIish.java', 'org.eclipse.jgit.transport.URIish', '<init>', '^(file):([\\\\/](?![\\\\/])((?:[A-Za-z]:)?[\\\\/]?(?:(?:[^\\\\/]+[\\\\/]+)*[^\\\\/]+[\\\\/]*)))$', 'ssh+git://l usr\\example.com@example.com:1234/D:/x')",[139542]
"('URIish.java', 'org.eclipse.jgit.transport.URIish', '<init>', '^(file):([\\\\/](?![\\\\/])((?:[A-Za-z]:)?[\\\\/]?(?:(?:[^\\\\/]+[\\\\/]+)*[^\\\\/]+[\\\\/]*)))$', 'file:/tmp/jgit_test_3938080632504476553_tmp/tmp_7170099663148325778/testCloneRepositoryWithNestedSubmodules2/.git/')","[196792, 197166]"
"('URIish.java', 'org.eclipse.jgit.transport.URIish', '<init>', '^([a-z][a-z0-9+-]+)://(?:(?:([^/:@]+)(?::([^\\\\/]+))?@)?((?:[^\\\\/:]+)|(?:\\[[0-9a-f:]+\\]))(?::(\\d+))?((?:/~(?:[^\\\\/]+))?[\\\\/]))?(.+)?$', 'http://l usr\\example.com:wtf@example.com:1234//')",[129537]
"('URIish.java', 'org.eclipse.jgit.transport.URIish', '<init>', '^([a-z][a-z0-9+-]+)://(?:(?:([^/:@]+)(?::([^\\\\/]+))?@)?((?:[^\\\\/:]+)|(?:\\[[0-9a-f:]+\\]))(?::(\\d+))?((?:/~(?:[^\\\\/]+))?[\\\\/]))?(.+)?$', 'ssh://l usr\\example.com:wtf@[::1]:80/D:\\x')",[123971]
"('Description.java', 'org.junit.runner.Description', 'methodAndClassNamePatternGroupOrDefault', '([\\s\\S]*)\\((.*)\\)', 'testEmpty(org.eclipse.jgit.revwalk.LIFORevQueueTest)')","[6481, 65420]"
"('Description.java', 'org.junit.runner.Description', 'methodAndClassNamePatternGroupOrDefault', '([\\s\\S]*)\\((.*)\\)', 'testRemoveRevFlagSet(org.eclipse.jgit.revwalk.RevObjectTest)')","[8681, 67466]"
"('Description.java', 'org.junit.runner.Description', 'methodAndClassNamePatternGroupOrDefault', '([\\s\\S]*)\\((.*)\\)', 'testNoChange(org.eclipse.jgit.notes.NoteMapMergerTest)')","[41194, 98860]"
"('Description.java', 'org.junit.runner.Description', 'methodAndClassNamePatternGroupOrDefault', '([\\s\\S]*)\\((.*)\\)', 'testSpecialGroupCase1(org.eclipse.jgit.fnmatch.FileNameMatcherTest)')","[16123, 74506]"
"('Description.java', 'org.junit.runner.Description', 'methodAndClassNamePatternGroupOrDefault', '([\\s\\S]*)\\((.*)\\)', 'testOpen(org.eclipse.jgit.api.GitConstructionTest)')","[42211, 99806]"
"('URIish.java', 'org.eclipse.jgit.transport.URIish', '<init>', '^([a-z][a-z0-9+-]+)://(?:(?:([^/:@]+)(?::([^\\\\/]+))?@)?((?:[^\\\\/:]+)|(?:\\[[0-9a-f:]+\\]))(?::(\\d+))?((?:/~(?:[^\\\\/]+))?[\\\\/]))?(.+)?$', 'ssh://l usr\\example.com@[::1]:80/D:/x')",[137173]
"('Description.java', 'org.junit.runner.Description', 'methodAndClassNamePatternGroupOrDefault', '([\\s\\S]*)\\((.*)\\)', 'testOursEqualsTheirs(org.eclipse.jgit.notes.NoteMapMergerTest)')","[41152, 98816]"
"('Description.java', 'org.junit.runner.Description', 'methodAndClassNamePatternGroupOrDefault', '([\\s\\S]*)\\((.*)\\)', 'testScpStyleWithoutUserRelativePath(org.eclipse.jgit.transport.URIishTest)')","[1118, 60140]"
"('URIish.java', 'org.eclipse.jgit.transport.URIish', '<init>', '^([a-z][a-z0-9+-]+)://(?:(?:([^/:@]+)(?::([^\\\\/]+))?@)?((?:[^\\\\/:]+)|(?:\\[[0-9a-f:]+\\]))(?::(\\d+))?((?:/~(?:[^\\\\/]+))?[\\\\/]))?(.+)?$', 'ssh://lusr\\example@1.2.3.4:1234//abc')",[137679]
"('Description.java', 'org.junit.runner.Description', 'methodAndClassNamePatternGroupOrDefault', '([\\s\\S]*)\\((.*)\\)', 'testGraphGroupCase2(org.eclipse.jgit.fnmatch.FileNameMatcherTest)')","[16732, 75144]"
"('Description.java', 'org.junit.runner.Description', 'methodAndClassNamePatternGroupOrDefault', '([\\s\\S]*)\\((.*)\\)', 'testEmpty(org.eclipse.jgit.notes.LeafBucketTest)')","[40255, 97936]"
"('Description.java', 'org.junit.runner.Description', 'methodAndClassNamePatternGroupOrDefault', '([\\s\\S]*)\\((.*)\\)', 'testTimeout_writeBuffer_Success1(org.eclipse.jgit.util.io.TimeoutOutputStreamTest)')","[32521, 90610]"
"('URIish.java', 'org.eclipse.jgit.transport.URIish', '<init>', '^([a-z][a-z0-9+-]+)://(?:(?:([^/:@]+)(?::([^\\\\/]+))?@)?((?:[^\\\\/:]+)|(?:\\[[0-9a-f:]+\\]))(?::(\\d+))?((?:/~(?:[^\\\\/]+))?[\\\\/]))?(.+)?$', 'ssh+git://me@1.2.3.4/D:/x')","[152077, 152261]"
"('Description.java', 'org.junit.runner.Description', 'methodAndClassNamePatternGroupOrDefault', '([\\s\\S]*)\\((.*)\\)', 'testNoCommits(org.eclipse.jgit.revwalk.ObjectWalkTest)')","[5670, 64650]"
"('URIish.java', 'org.eclipse.jgit.transport.URIish', '<init>', '^([a-z][a-z0-9+-]+)://(?:(?:([^/:@]+)(?::([^\\\\/]+))?@)?((?:[^\\\\/:]+)|(?:\\[[0-9a-f:]+\\]))(?::(\\d+))?((?:/~(?:[^\\\\/]+))?[\\\\/]))?(.+)?$', 'https://lusr\\example:wtf@example.com:80//abc')",[134183]
"('Description.java', 'org.junit.runner.Description', 'methodAndClassNamePatternGroupOrDefault', '([\\s\\S]*)\\((.*)\\)', 'testInvalidTreeModeStartsWithZero3(org.eclipse.jgit.lib.ObjectCheckerTest)')","[26924, 85264]"
"('URIish.java', 'org.eclipse.jgit.transport.URIish', '<init>', '^([a-z][a-z0-9+-]+)://(?:(?:([^/:@]+)(?::([^\\\\/]+))?@)?((?:[^\\\\/:]+)|(?:\\[[0-9a-f:]+\\]))(?::(\\d+))?((?:/~(?:[^\\\\/]+))?[\\\\/]))?(.+)?$', 'ssh://[::1]/D:/x')","[162381, 162565, 163485, 163669, 164589, 164773]"
"('Description.java', 'org.junit.runner.Description', 'methodAndClassNamePatternGroupOrDefault', '([\\s\\S]*)\\((.*)\\)', 'testInitialize_NoPostOrder(org.eclipse.jgit.treewalk.PostOrderTreeWalkTest)')","[29506, 87750]"
"('Description.java', 'org.junit.runner.Description', 'methodAndClassNamePatternGroupOrDefault', '([\\s\\S]*)\\((.*)\\)', 'testInvalidCommitInvalidAuthor5(org.eclipse.jgit.lib.ObjectCheckerTest)')","[26105, 84406]"
"('URIish.java', 'org.eclipse.jgit.transport.URIish', '<init>', '^([a-z][a-z0-9+-]+)://(?:(?:([^/:@]+)(?::([^\\\\/]+))?@)?((?:[^\\\\/:]+)|(?:\\[[0-9a-f:]+\\]))(?::(\\d+))?((?:/~(?:[^\\\\/]+))?[\\\\/]))?(.+)?$', 'https://me:wtf@1.2.3.4:1234//')",[132113]
"('Description.java', 'org.junit.runner.Description', 'methodAndClassNamePatternGroupOrDefault', '([\\s\\S]*)\\((.*)\\)', 'testEmptyFolderIgnored(org.eclipse.jgit.treewalk.filter.IndexDiffFilterTest)')","[30758, 88982]"
"('URIish.java', 'org.eclipse.jgit.transport.URIish', '<init>', '^([a-z][a-z0-9+-]+)://(?:(?:([^/:@]+)(?::([^\\\\/]+))?@)?((?:[^\\\\/:]+)|(?:\\[[0-9a-f:]+\\]))(?::(\\d+))?((?:/~(?:[^\\\\/]+))?[\\\\/]))?(.+)?$', '/a/b/c.git/')",[175790]
"('Description.java', 'org.junit.runner.Description', 'methodAndClassNamePatternGroupOrDefault', '([\\s\\S]*)\\((.*)\\)', 'testWriteEmptyCommit_RealIndex(org.eclipse.jgit.dircache.DirCacheBasicTest)')","[11238, 69886]"
"('URIish.java', 'org.eclipse.jgit.transport.URIish', '<init>', '^([a-z][a-z0-9+-]+)://(?:(?:([^/:@]+)(?::([^\\\\/]+))?@)?((?:[^\\\\/:]+)|(?:\\[[0-9a-f:]+\\]))(?::(\\d+))?((?:/~(?:[^\\\\/]+))?[\\\\/]))?(.+)?$', 'https://l usr\\example.com@1.2.3.4/D:/x')","[159805, 159989]"
"('Description.java', 'org.junit.runner.Description', 'methodAndClassNamePatternGroupOrDefault', '([\\s\\S]*)\\((.*)\\)', 'testStringOfPearls_DirPath2(org.eclipse.jgit.revwalk.RevWalkPathFilter1Test)')","[5546, 64540]"
"('Description.java', 'org.junit.runner.Description', 'methodAndClassNamePatternGroupOrDefault', '([\\s\\S]*)\\((.*)\\)', 'testWrite_CH_ERROR(org.eclipse.jgit.transport.SideBandOutputStreamTest)')","[4462, 63484]"
"('Description.java', 'org.junit.runner.Description', 'methodAndClassNamePatternGroupOrDefault', '([\\s\\S]*)\\((.*)\\)', 'testFailureF2(org.eclipse.jgit.api.ApplyCommandTest)')","[46719, 104250]"
"('URIish.java', 'org.eclipse.jgit.transport.URIish', '<init>', '^(file):([\\\\/](?![\\\\/])((?:[A-Za-z]:)?[\\\\/]?(?:(?:[^\\\\/]+[\\\\/]+)*[^\\\\/]+[\\\\/]*)))$', 'ssh://example.com/D:\\x')","[161668, 161852, 162772, 162956, 163876, 164060]"
"('Description.java', 'org.junit.runner.Description', 'methodAndClassNamePatternGroupOrDefault', '([\\s\\S]*)\\((.*)\\)', 'testParsePersonIdent_fuzzyCases(org.eclipse.jgit.util.RawParseUtils_ParsePersonIdentTest)')","[32023, 90148]"
"('Description.java', 'org.junit.runner.Description', 'methodAndClassNamePatternGroupOrDefault', '([\\s\\S]*)\\((.*)\\)', 'onePathMergeSecondParent(org.eclipse.jgit.api.NameRevCommandTest)')","[51708, 109178]"
"('URIish.java', 'org.eclipse.jgit.transport.URIish', '<init>', '^(file):([\\\\/](?![\\\\/])((?:[A-Za-z]:)?[\\\\/]?(?:(?:[^\\\\/]+[\\\\/]+)*[^\\\\/]+[\\\\/]*)))$', 'http://me@example.com:1234//')",[141658]
"('URIish.java', 'org.eclipse.jgit.transport.URIish', '<init>', '^(file):([\\\\/](?![\\\\/])((?:[A-Za-z]:)?[\\\\/]?(?:(?:[^\\\\/]+[\\\\/]+)*[^\\\\/]+[\\\\/]*)))$', 'file:///tmp/jgit_test_3938080632504476553_tmp/tmp_4523598312582749123/.git/')",[197004]
"('Description.java', 'org.junit.runner.Description', 'methodAndClassNamePatternGroupOrDefault', '([\\s\\S]*)\\((.*)\\)', 'testEncodeInt32(org.eclipse.jgit.util.NBTest)')","[37494, 95362]"
"('Description.java', 'org.junit.runner.Description', 'methodAndClassNamePatternGroupOrDefault', '([\\s\\S]*)\\((.*)\\)', 'testReadLoosePackedRef(org.eclipse.jgit.lib.RefTest)')","[22935, 81304]"
"('Description.java', 'org.junit.runner.Description', 'methodAndClassNamePatternGroupOrDefault', '([\\s\\S]*)\\((.*)\\)', 'testUpToDate(org.eclipse.jgit.api.RebaseCommandTest)')","[46032, 103590]"
"('URIish.java', 'org.eclipse.jgit.transport.URIish', 'getHumanishName', '^([\\\\/]?((?:[A-Za-z]:)?[\\\\/]?(?:(?:[^\\\\/]+[\\\\/]+)*[^\\\\/]+[\\\\/]*)))$', '/abc/')","[176043, 180045]"
"('Description.java', 'org.junit.runner.Description', 'methodAndClassNamePatternGroupOrDefault', '([\\s\\S]*)\\((.*)\\)', 'testSuccessfulContentMerge(org.eclipse.jgit.api.MergeCommandTest)')","[44299, 101874]"
"('Description.java', 'org.junit.runner.Description', 'methodAndClassNamePatternGroupOrDefault', '([\\s\\S]*)\\((.*)\\)', 'testAddWithConflicts(org.eclipse.jgit.api.AddCommandTest)')","[50395, 107902]"
"('Description.java', 'org.junit.runner.Description', 'methodAndClassNamePatternGroupOrDefault', '([\\s\\S]*)\\((.*)\\)', 'shouldWorkWithoutCommonAncestor(org.eclipse.jgit.revwalk.RevWalkUtilsCountTest)')","[6668, 65596]"
"('Description.java', 'org.junit.runner.Description', 'methodAndClassNamePatternGroupOrDefault', '([\\s\\S]*)\\((.*)\\)', 'testExpandFromDestination_Wildcard(org.eclipse.jgit.transport.RefSpecTest)')","[3256, 62340]"
"('Description.java', 'org.junit.runner.Description', 'methodAndClassNamePatternGroupOrDefault', '([\\s\\S]*)\\((.*)\\)', 'testFileProtocol(org.eclipse.jgit.transport.URIishTest)')","[1244, 60272]"
"('URIish.java', 'org.eclipse.jgit.transport.URIish', '<init>', '^(file):([\\\\/](?![\\\\/])((?:[A-Za-z]:)?[\\\\/]?(?:(?:[^\\\\/]+[\\\\/]+)*[^\\\\/]+[\\\\/]*)))$', 'http://l usr\\example.com:wtf@1.2.3.4:80//')",[130066]
"('Description.java', 'org.junit.runner.Description', 'methodAndClassNamePatternGroupOrDefault', '([\\s\\S]*)\\((.*)\\)', 'testDequote_RawLatin1(org.eclipse.jgit.util.QuotedStringGitPathStyleTest)')","[34307, 92282]"
"('Description.java', 'org.junit.runner.Description', 'methodAndClassNamePatternGroupOrDefault', '([\\s\\S]*)\\((.*)\\)', 'testCherryPickDirtyWorktree(org.eclipse.jgit.api.CherryPickCommandTest)')","[47864, 105350]"
"('Description.java', 'org.junit.runner.Description', 'methodAndClassNamePatternGroupOrDefault', '([\\s\\S]*)\\((.*)\\)', 'testQuote_BareA(org.eclipse.jgit.util.QuotedStringBourneStyleTest)')","[36620, 94526]"
"('URIish.java', 'org.eclipse.jgit.transport.URIish', '<init>', '^(file):([\\\\/](?![\\\\/])((?:[A-Za-z]:)?[\\\\/]?(?:(?:[^\\\\/]+[\\\\/]+)*[^\\\\/]+[\\\\/]*)))$', 'http://[::1]//')","[168890, 169074, 169994, 170178, 171098, 171282]"
"('Description.java', 'org.junit.runner.Description', 'methodAndClassNamePatternGroupOrDefault', '([\\s\\S]*)\\((.*)\\)', 'testEditDifferentNotes(org.eclipse.jgit.notes.NoteMapMergerTest)')","[41068, 98728]"
"('Description.java', 'org.junit.runner.Description', 'methodAndClassNamePatternGroupOrDefault', '([\\s\\S]*)\\((.*)\\)', 'test1(org.eclipse.jgit.transport.PackParserTest)')","[4212, 63242]"
"('URIish.java', 'org.eclipse.jgit.transport.URIish', '<init>', '^([a-z][a-z0-9+-]+)://(?:(?:([^/:@]+)(?::([^\\\\/]+))?@)?((?:[^\\\\/:]+)|(?:\\[[0-9a-f:]+\\]))(?::(\\d+))?((?:/~(?:[^\\\\/]+))?[\\\\/]))?(.+)?$', 'ssh://lusr\\example@[::1]:80/D:\\x')",[138323]
"('Description.java', 'org.junit.runner.Description', 'methodAndClassNamePatternGroupOrDefault', '([\\s\\S]*)\\((.*)\\)', 'testGetAbsEmptyHumanishName(org.eclipse.jgit.transport.URIishTest)')","[1748, 60800]"
"('Description.java', 'org.junit.runner.Description', 'methodAndClassNamePatternGroupOrDefault', '([\\s\\S]*)\\((.*)\\)', 'testHasChangeidWithReplacement(org.eclipse.jgit.util.ChangeIdUtilTest)')","[38288, 96154]"
"('Description.java', 'org.junit.runner.Description', 'methodAndClassNamePatternGroupOrDefault', '([\\s\\S]*)\\((.*)\\)', 'testScpStyleWithUser(org.eclipse.jgit.transport.URIishTest)')","[1790, 60844]"
"('Description.java', 'org.junit.runner.Description', 'methodAndClassNamePatternGroupOrDefault', '([\\s\\S]*)\\((.*)\\)', 'testTimeout_readByte_Timeout(org.eclipse.jgit.util.io.TimeoutInputStreamTest)')","[32748, 90808]"
"('Description.java', 'org.junit.runner.Description', 'methodAndClassNamePatternGroupOrDefault', '([\\s\\S]*)\\((.*)\\)', 'testOnlyOption_f1_2_c(org.eclipse.jgit.api.CommitOnlyTest)')","[48591, 106032]"
"('Description.java', 'org.junit.runner.Description', 'methodAndClassNamePatternGroupOrDefault', '([\\s\\S]*)\\((.*)\\)', 'testTreeIteratorWithGitmodules(org.eclipse.jgit.submodule.SubmoduleWalkTest)')","[19874, 78356]"
"('Description.java', 'org.junit.runner.Description', 'methodAndClassNamePatternGroupOrDefault', '([\\s\\S]*)\\((.*)\\)', 'testGetValidGitSchemeWithTwoSlashesHumanishName(org.eclipse.jgit.transport.URIishTest)')","[2021, 61086]"
"('Description.java', 'org.junit.runner.Description', 'methodAndClassNamePatternGroupOrDefault', '([\\s\\S]*)\\((.*)\\)', 'testConstructor_Peeled(org.eclipse.jgit.lib.ObjectIdRefTest)')","[20309, 78752]"
"('URIish.java', 'org.eclipse.jgit.transport.URIish', '<init>', '^(file):([\\\\/](?![\\\\/])((?:[A-Za-z]:)?[\\\\/]?(?:(?:[^\\\\/]+[\\\\/]+)*[^\\\\/]+[\\\\/]*)))$', '/home/m y')","[176066, 176181]"
"('URIish.java', 'org.eclipse.jgit.transport.URIish', '<init>', '^(file):([\\\\/](?![\\\\/])((?:[A-Za-z]:)?[\\\\/]?(?:(?:[^\\\\/]+[\\\\/]+)*[^\\\\/]+[\\\\/]*)))$', 'http://user:secret@host.xy:80/some/path')","[178895, 178941]"
"('Description.java', 'org.junit.runner.Description', 'methodAndClassNamePatternGroupOrDefault', '([\\s\\S]*)\\((.*)\\)', 'testPrefixCompare_8(org.eclipse.jgit.lib.AbbreviatedObjectIdTest)')","[22370, 80732]"
"('Description.java', 'org.junit.runner.Description', 'methodAndClassNamePatternGroupOrDefault', '([\\s\\S]*)\\((.*)\\)', 'testEdit_CommonReplaceCommonDeleteCommon(org.eclipse.jgit.diff.MyersDiffTest)')","[14793, 73252]"
"('Description.java', 'org.junit.runner.Description', 'methodAndClassNamePatternGroupOrDefault', '([\\s\\S]*)\\((.*)\\)', 'testDeleteHEADreferencedRef(org.eclipse.jgit.internal.storage.file.RefUpdateTest)')","[56045, 113204]"
"('QuotedString.java', 'org.eclipse.jgit.util.QuotedString$BourneUserPathStyle', 'quote', '^~[A-Za-z0-9_-]+$', '~foo/a')","[192814, 192838]"
"('Description.java', 'org.junit.runner.Description', 'methodAndClassNamePatternGroupOrDefault', '([\\s\\S]*)\\((.*)\\)', 'testDeleteLooseAndItsDirectory(org.eclipse.jgit.internal.storage.file.RefUpdateTest)')","[55877, 113028]"
"('Description.java', 'org.junit.runner.Description', 'methodAndClassNamePatternGroupOrDefault', '([\\s\\S]*)\\((.*)\\)', 'test004_isId(org.eclipse.jgit.lib.ObjectIdTest)')","[28615, 86936]"
"('Description.java', 'org.junit.runner.Description', 'methodAndClassNamePatternGroupOrDefault', '([\\s\\S]*)\\((.*)\\)', 'testTwoRangesInOneGroupCase1(org.eclipse.jgit.fnmatch.FileNameMatcherTest)')","[19063, 77586]"
"('URIish.java', 'org.eclipse.jgit.transport.URIish', '<init>', '^(file):([\\\\/](?![\\\\/])((?:[A-Za-z]:)?[\\\\/]?(?:(?:[^\\\\/]+[\\\\/]+)*[^\\\\/]+[\\\\/]*)))$', 'ssh+git://me:wtf@example.com:1234//abc')",[125144]
"('Description.java', 'org.junit.runner.Description', 'methodAndClassNamePatternGroupOrDefault', '([\\s\\S]*)\\((.*)\\)', 'testExactRename_PathBreaksTie(org.eclipse.jgit.diff.RenameDetectorTest)')","[12856, 71382]"
"('Description.java', 'org.junit.runner.Description', 'methodAndClassNamePatternGroupOrDefault', '([\\s\\S]*)\\((.*)\\)', 'testNoDirectorySuffix(org.eclipse.jgit.lib.ValidRefNameTest)')","[24376, 82734]"
"('Description.java', 'org.junit.runner.Description', 'methodAndClassNamePatternGroupOrDefault', '([\\s\\S]*)\\((.*)\\)', 'testInCoreLimit_SwitchOnAppendByte(org.eclipse.jgit.util.TemporaryBufferTest)')","[34515, 92480]"
"('ChangeIdUtil.java', 'org.eclipse.jgit.util.ChangeIdUtil', 'indexOfChangeId', '(^Change-Id: *I[a-f0-9]{40}$)', 'Change-Id: I388bdaf52ed05b55e62a22d0a20d2c1ae0d33e7e')","[189029, 190526]"
"('Description.java', 'org.junit.runner.Description', 'methodAndClassNamePatternGroupOrDefault', '([\\s\\S]*)\\((.*)\\)', 'testInvalidCommitInvalidAuthor7(org.eclipse.jgit.lib.ObjectCheckerTest)')","[26147, 84450]"
"('Description.java', 'org.junit.runner.Description', 'methodAndClassNamePatternGroupOrDefault', '([\\s\\S]*)\\((.*)\\)', 'invalidWhenMoreThanOneWildcardInSource(org.eclipse.jgit.transport.RefSpecTest)')","[2983, 62054]"
"('Description.java', 'org.junit.runner.Description', 'methodAndClassNamePatternGroupOrDefault', '([\\s\\S]*)\\((.*)\\)', 'testBlankGroupCase1(org.eclipse.jgit.fnmatch.FileNameMatcherTest)')","[18538, 77036]"
"('URIish.java', 'org.eclipse.jgit.transport.URIish', '<init>', '^(file):([\\\\/](?![\\\\/])((?:[A-Za-z]:)?[\\\\/]?(?:(?:[^\\\\/]+[\\\\/]+)*[^\\\\/]+[\\\\/]*)))$', 'https://me@example.com//abc')","[158264, 158448]"
"('Description.java', 'org.junit.runner.Description', 'methodAndClassNamePatternGroupOrDefault', '([\\s\\S]*)\\((.*)\\)', 'testVerySimpleStarCase1(org.eclipse.jgit.fnmatch.FileNameMatcherTest)')","[18643, 77146]"
"('Description.java', 'org.junit.runner.Description', 'methodAndClassNamePatternGroupOrDefault', '([\\s\\S]*)\\((.*)\\)', 'testAddFolder(org.eclipse.jgit.api.AddCommandTest)')","[50647, 108166]"
"('Description.java', 'org.junit.runner.Description', 'methodAndClassNamePatternGroupOrDefault', '([\\s\\S]*)\\((.*)\\)', 'testTagTag(org.eclipse.jgit.revwalk.RevTagParseTest)')","[7229, 66124]"
"('Description.java', 'org.junit.runner.Description', 'methodAndClassNamePatternGroupOrDefault', '([\\s\\S]*)\\((.*)\\)', 'newFileInIndexThenModifiedInWorkTree(org.eclipse.jgit.api.StashCreateCommandTest)')","[41837, 99454]"
"('Description.java', 'org.junit.runner.Description', 'methodAndClassNamePatternGroupOrDefault', '([\\s\\S]*)\\((.*)\\)', 'testAddFails(org.eclipse.jgit.revwalk.AlwaysEmptyRevQueueTest)')","[8078, 66894]"
"('Description.java', 'org.junit.runner.Description', 'methodAndClassNamePatternGroupOrDefault', '([\\s\\S]*)\\((.*)\\)', 'testRemove(org.eclipse.jgit.revwalk.RevFlagSetTest)')","[7437, 66322]"
"('URIish.java', 'org.eclipse.jgit.transport.URIish', '<init>', '^([a-z][a-z0-9+-]+)://(?:(?:([^/:@]+)(?::([^\\\\/]+))?@)?((?:[^\\\\/:]+)|(?:\\[[0-9a-f:]+\\]))(?::(\\d+))?((?:/~(?:[^\\\\/]+))?[\\\\/]))?(.+)?$', 'http://l usr\\example.com:wtf@example.com:80/D:\\x')",[129859]
"('URIish.java', 'org.eclipse.jgit.transport.URIish', '<init>', '^([\\\\/]?((?:[A-Za-z]:)?[\\\\/]?(?:(?:[^\\\\/]+[\\\\/]+)*[^\\\\/]+[\\\\/]*)))$', '/tmp/jgit_test_6251682262244407463_tmp/tmp_139345380367893616.git')","[116858, 116988]"
"('Description.java', 'org.junit.runner.Description', 'methodAndClassNamePatternGroupOrDefault', '([\\s\\S]*)\\((.*)\\)', 'failingDeleteOfDirectoryWithUntrackedContent(org.eclipse.jgit.merge.ResolveMergerTest)')","[10532, 69226]"
"('URIish.java', 'org.eclipse.jgit.transport.URIish', '<init>', '^(file):([\\\\/](?![\\\\/])((?:[A-Za-z]:)?[\\\\/]?(?:(?:[^\\\\/]+[\\\\/]+)*[^\\\\/]+[\\\\/]*)))$', 'ssh://l usr\\example.com@1.2.3.4:1234//')",[136506]
"('Description.java', 'org.junit.runner.Description', 'methodAndClassNamePatternGroupOrDefault', '([\\s\\S]*)\\((.*)\\)', 'testRemoveEndOfList(org.eclipse.jgit.util.RefListTest)')","[35036, 92986]"
"('URIish.java', 'org.eclipse.jgit.transport.URIish', '<init>', '^([\\\\/]?((?:[A-Za-z]:)?[\\\\/]?(?:(?:[^\\\\/]+[\\\\/]+)*[^\\\\/]+[\\\\/]*)))$', '/tmp/jgit_test_5706102738936117736_tmp/tmp_5370206506562001691')","[201433, 201578, 201728]"
"('Description.java', 'org.junit.runner.Description', 'methodAndClassNamePatternGroupOrDefault', '([\\s\\S]*)\\((.*)\\)', 'testEmptyIfRootIsFile(org.eclipse.jgit.treewalk.FileTreeIteratorTest)')","[29073, 87376]"
"('URIish.java', 'org.eclipse.jgit.transport.URIish', '<init>', '^([a-z][a-z0-9+-]+)://(?:(?:([^/:@]+)(?::([^\\\\/]+))?@)?((?:[^\\\\/:]+)|(?:\\[[0-9a-f:]+\\]))(?::(\\d+))?((?:/~(?:[^\\\\/]+))?[\\\\/]))?(.+)?$', '/abc.git/')",[175560]
"('Description.java', 'org.junit.runner.Description', 'methodAndClassNamePatternGroupOrDefault', '([\\s\\S]*)\\((.*)\\)', 'org.eclipse.jgit.api.CloneCommandTest')","[42251, 199326]"
"('Description.java', 'org.junit.runner.Description', 'methodAndClassNamePatternGroupOrDefault', '([\\s\\S]*)\\((.*)\\)', 'ref(org.eclipse.jgit.api.NameRevCommandTest)')","[51645, 109112]"
"('URIish.java', 'org.eclipse.jgit.transport.URIish', '<init>', '^(file):([\\\\/](?![\\\\/])((?:[A-Za-z]:)?[\\\\/]?(?:(?:[^\\\\/]+[\\\\/]+)*[^\\\\/]+[\\\\/]*)))$', 'ssh+git://lusr\\example:wtf@1.2.3.4:80/D:\\x')",[127996]
"('URIish.java', 'org.eclipse.jgit.transport.URIish', '<init>', '^([a-z][a-z0-9+-]+)://(?:(?:([^/:@]+)(?::([^\\\\/]+))?@)?((?:[^\\\\/:]+)|(?:\\[[0-9a-f:]+\\]))(?::(\\d+))?((?:/~(?:[^\\\\/]+))?[\\\\/]))?(.+)?$', 'https://lusr\\example@example.com/D:/x')","[160541, 160725]"
"('Description.java', 'org.junit.runner.Description', 'methodAndClassNamePatternGroupOrDefault', '([\\s\\S]*)\\((.*)\\)', 'dropWithInvalidLogIndex(org.eclipse.jgit.api.StashDropCommandTest)')","[52122, 109552]"
"('URIish.java', 'org.eclipse.jgit.transport.URIish', '<init>', '^(file):([\\\\/](?![\\\\/])((?:[A-Za-z]:)?[\\\\/]?(?:(?:[^\\\\/]+[\\\\/]+)*[^\\\\/]+[\\\\/]*)))$', 'ssh://lusr\\example@[::1]//')","[151226, 151410]"
"('Description.java', 'org.junit.runner.Description', 'methodAndClassNamePatternGroupOrDefault', '([\\s\\S]*)\\((.*)\\)', 'testInvalidTagNoTagHeader1(org.eclipse.jgit.lib.ObjectCheckerTest)')","[26252, 84560]"
"('URIish.java', 'org.eclipse.jgit.transport.URIish', 'getHumanishName', '^([\\\\/]?((?:[A-Za-z]:)?[\\\\/]?(?:(?:[^\\\\/]+[\\\\/]+)*[^\\\\/]+[\\\\/]*)))$', '//.git')",[179194]
"('Description.java', 'org.junit.runner.Description', 'methodAndClassNamePatternGroupOrDefault', '([\\s\\S]*)\\((.*)\\)', 'testContentMerge(org.eclipse.jgit.api.MergeCommandTest)')","[44404, 101984]"
"('URIish.java', 'org.eclipse.jgit.transport.URIish', '<init>', '^([a-z][a-z0-9+-]+)://(?:(?:([^/:@]+)(?::([^\\\\/]+))?@)?((?:[^\\\\/:]+)|(?:\\[[0-9a-f:]+\\]))(?::(\\d+))?((?:/~(?:[^\\\\/]+))?[\\\\/]))?(.+)?$', 'http://l usr\\example.com:wtf@1.2.3.4:1234/D:/x')",[129997]
"('URIish.java', 'org.eclipse.jgit.transport.URIish', '<init>', '^([a-z][a-z0-9+-]+)://(?:(?:([^/:@]+)(?::([^\\\\/]+))?@)?((?:[^\\\\/:]+)|(?:\\[[0-9a-f:]+\\]))(?::(\\d+))?((?:/~(?:[^\\\\/]+))?[\\\\/]))?(.+)?$', 'https://me@[::1]:1234/D:\\x')",[145867]
"('QuotedString.java', 'org.eclipse.jgit.util.QuotedString$BourneUserPathStyle', 'quote', '^~[A-Za-z0-9_-]*/.*$', ""a'b"")","[193266, 193291]"
"('Description.java', 'org.junit.runner.Description', 'methodAndClassNamePatternGroupOrDefault', '([\\s\\S]*)\\((.*)\\)', 'testIncompleteRangesInOneGroupCase0(org.eclipse.jgit.fnmatch.FileNameMatcherTest)')","[18097, 76574]"
"('Description.java', 'org.junit.runner.Description', 'methodAndClassNamePatternGroupOrDefault', '([\\s\\S]*)\\((.*)\\)', 'test008_SubtreeInternalSorting(org.eclipse.jgit.lib.T0002_TreeTest)')","[24996, 83284]"
"('URIish.java', 'org.eclipse.jgit.transport.URIish', '<init>', '^(file):([\\\\/](?![\\\\/])((?:[A-Za-z]:)?[\\\\/]?(?:(?:[^\\\\/]+[\\\\/]+)*[^\\\\/]+[\\\\/]*)))$', 'https://l usr\\example.com@example.com:80/D:\\x')",[146396]
"('Description.java', 'org.junit.runner.Description', 'methodAndClassNamePatternGroupOrDefault', '([\\s\\S]*)\\((.*)\\)', 'testWindowsFile2(org.eclipse.jgit.transport.URIishTest)')","[1769, 60822]"
"('Description.java', 'org.junit.runner.Description', 'methodAndClassNamePatternGroupOrDefault', '([\\s\\S]*)\\((.*)\\)', 'refLogIncludesCommitMessage(org.eclipse.jgit.api.StashCreateCommandTest)')","[41942, 99564]"
"('Description.java', 'org.junit.runner.Description', 'methodAndClassNamePatternGroupOrDefault', '([\\s\\S]*)\\((.*)\\)', 'org.eclipse.jgit.api.FetchCommandTest')","[51830, 209408]"
"('URIish.java', 'org.eclipse.jgit.transport.URIish', '<init>', '^(file):([\\\\/](?![\\\\/])((?:[A-Za-z]:)?[\\\\/]?(?:(?:[^\\\\/]+[\\\\/]+)*[^\\\\/]+[\\\\/]*)))$', 'ssh://me@1.2.3.4//')","[148650, 148834]"
"('Description.java', 'org.junit.runner.Description', 'methodAndClassNamePatternGroupOrDefault', '([\\s\\S]*)\\((.*)\\)', 'testEmptyList(org.eclipse.jgit.util.BlockListTest)')","[35496, 93448]"
"('Description.java', 'org.junit.runner.Description', 'methodAndClassNamePatternGroupOrDefault', '([\\s\\S]*)\\((.*)\\)', 'testSetByte(org.eclipse.jgit.lib.ObjectIdTest)')","[28720, 87046]"
"('URIish.java', 'org.eclipse.jgit.transport.URIish', '<init>', '^(file):([\\\\/](?![\\\\/])((?:[A-Za-z]:)?[\\\\/]?(?:(?:[^\\\\/]+[\\\\/]+)*[^\\\\/]+[\\\\/]*)))$', 'https://l usr\\example.com:wtf@1.2.3.4:80/D:\\x')",[133516]
"('URIish.java', 'org.eclipse.jgit.transport.URIish', '<init>', '^([a-z][a-z0-9+-]+)://(?:(?:([^/:@]+)(?::([^\\\\/]+))?@)?((?:[^\\\\/:]+)|(?:\\[[0-9a-f:]+\\]))(?::(\\d+))?((?:/~(?:[^\\\\/]+))?[\\\\/]))?(.+)?$', 'http://lusr\\example:wtf@[::1]:80//abc')",[131607]
"('Description.java', 'org.junit.runner.Description', 'methodAndClassNamePatternGroupOrDefault', '([\\s\\S]*)\\((.*)\\)', 'testACommitWithSubjectBodyBugEmptyLineAndSob(org.eclipse.jgit.util.ChangeIdUtilTest)')","[38267, 96132]"
"('Description.java', 'org.junit.runner.Description', 'methodAndClassNamePatternGroupOrDefault', '([\\s\\S]*)\\((.*)\\)', 'test007_manyFileLookup(org.eclipse.jgit.lib.T0002_TreeTest)')","[24870, 83152]"
"('URIish.java', 'org.eclipse.jgit.transport.URIish', '<init>', '^(file):([\\\\/](?![\\\\/])((?:[A-Za-z]:)?[\\\\/]?(?:(?:[^\\\\/]+[\\\\/]+)*[^\\\\/]+[\\\\/]*)))$', 'https://lusr\\example@example.com//abc')","[160472, 160656]"
"('URIish.java', 'org.eclipse.jgit.transport.URIish', '<init>', '^([a-z][a-z0-9+-]+)://(?:(?:([^/:@]+)(?::([^\\\\/]+))?@)?((?:[^\\\\/:]+)|(?:\\[[0-9a-f:]+\\]))(?::(\\d+))?((?:/~(?:[^\\\\/]+))?[\\\\/]))?(.+)?$', 'ssh+git://l usr\\example.com@[::1]//abc')","[153503, 153687]"
"('URIish.java', 'org.eclipse.jgit.transport.URIish', '<init>', '^(file):([\\\\/](?![\\\\/])((?:[A-Za-z]:)?[\\\\/]?(?:(?:[^\\\\/]+[\\\\/]+)*[^\\\\/]+[\\\\/]*)))$', 'ssh+git://l usr\\example.com:wtf@[::1]:1234/D:/x')",[127030]
"('Description.java', 'org.junit.runner.Description', 'methodAndClassNamePatternGroupOrDefault', '([\\s\\S]*)\\((.*)\\)', 'testFileWithNoneUserHomeWithTilde(org.eclipse.jgit.transport.URIishTest)')","[1811, 60866]"
"('Description.java', 'org.junit.runner.Description', 'methodAndClassNamePatternGroupOrDefault', '([\\s\\S]*)\\((.*)\\)', 'test30_stripWorkDir(org.eclipse.jgit.internal.storage.file.T0003_BasicTest)')","[53965, 111224]"
"('Description.java', 'org.junit.runner.Description', 'methodAndClassNamePatternGroupOrDefault', '([\\s\\S]*)\\((.*)\\)', 'testMergeRemovingFoldersWithoutFastForward(org.eclipse.jgit.api.MergeCommandTest)')","[43837, 101390]"
"('URIish.java', 'org.eclipse.jgit.transport.URIish', '<init>', '^(file):([\\\\/](?![\\\\/])((?:[A-Za-z]:)?[\\\\/]?(?:(?:[^\\\\/]+[\\\\/]+)*[^\\\\/]+[\\\\/]*)))$', 'http://l usr\\example.com@example.com:80//')",[142946]
"('Description.java', 'org.junit.runner.Description', 'methodAndClassNamePatternGroupOrDefault', '([\\s\\S]*)\\((.*)\\)', 'testOnlyOption_f1_14_d(org.eclipse.jgit.api.CommitOnlyTest)')","[50187, 107704]"
"('QuotedString.java', 'org.eclipse.jgit.util.QuotedString$BourneUserPathStyle', 'quote', '^~[A-Za-z0-9_-]*/.*$', '~/a')","[192961, 192985]"
"('Description.java', 'org.junit.runner.Description', 'methodAndClassNamePatternGroupOrDefault', '([\\s\\S]*)\\((.*)\\)', 'testReadBoolean_OnOff2(org.eclipse.jgit.lib.ConfigTest)')","[27840, 86144]"
"('URIish.java', 'org.eclipse.jgit.transport.URIish', '<init>', '^([a-z][a-z0-9+-]+)://(?:(?:([^/:@]+)(?::([^\\\\/]+))?@)?((?:[^\\\\/:]+)|(?:\\[[0-9a-f:]+\\]))(?::(\\d+))?((?:/~(?:[^\\\\/]+))?[\\\\/]))?(.+)?$', 'ssh+git://me@example.com:80//abc')",[138599]
"('URIish.java', 'org.eclipse.jgit.transport.URIish', '<init>', '^(file):([\\\\/](?![\\\\/])((?:[A-Za-z]:)?[\\\\/]?(?:(?:[^\\\\/]+[\\\\/]+)*[^\\\\/]+[\\\\/]*)))$', 'ssh://lusr\\example:wtf@example.com:1234/D:\\x')",[124132]
"('URIish.java', 'org.eclipse.jgit.transport.URIish', '<init>', '^(file):([\\\\/](?![\\\\/])((?:[A-Za-z]:)?[\\\\/]?(?:(?:[^\\\\/]+[\\\\/]+)*[^\\\\/]+[\\\\/]*)))$', 'ssh://lusr\\example@[::1]:1234//')",[137978]
"('Description.java', 'org.junit.runner.Description', 'methodAndClassNamePatternGroupOrDefault', '([\\s\\S]*)\\((.*)\\)', 'org.eclipse.jgit.transport.TransportTest')","[3983, 181001]"
"('URIish.java', 'org.eclipse.jgit.transport.URIish', '<init>', '^(file):([\\\\/](?![\\\\/])((?:[A-Za-z]:)?[\\\\/]?(?:(?:[^\\\\/]+[\\\\/]+)*[^\\\\/]+[\\\\/]*)))$', 'ssh://l usr\\example.com@1.2.3.4//abc')","[149800, 149984]"
"('Description.java', 'org.junit.runner.Description', 'methodAndClassNamePatternGroupOrDefault', '([\\s\\S]*)\\((.*)\\)', 'testParsePersonIdent_malformedCases(org.eclipse.jgit.util.RawParseUtils_ParsePersonIdentTest)')","[32002, 90126]"
"('ChangeIdUtil.java', 'org.eclipse.jgit.util.ChangeIdUtil', 'indexOfChangeId', '(^Change-Id: *I[a-f0-9]{40}$)', 'Signed-off-by: me@you.too')","[187179, 188075, 189130, 190841, 191074, 191646, 191775, 192057]"
"('URIish.java', 'org.eclipse.jgit.transport.URIish', '<init>', '^(file):([\\\\/](?![\\\\/])((?:[A-Za-z]:)?[\\\\/]?(?:(?:[^\\\\/]+[\\\\/]+)*[^\\\\/]+[\\\\/]*)))$', 'https://l usr\\example.com@[::1]:80/D:\\x')",[147132]
"('URIish.java', 'org.eclipse.jgit.transport.URIish', '<init>', '^([a-z][a-z0-9+-]+)://(?:(?:([^/:@]+)(?::([^\\\\/]+))?@)?((?:[^\\\\/:]+)|(?:\\[[0-9a-f:]+\\]))(?::(\\d+))?((?:/~(?:[^\\\\/]+))?[\\\\/]))?(.+)?$', 'https://l usr\\example.com@1.2.3.4:1234//')",[146465]
"('URIish.java', 'org.eclipse.jgit.transport.URIish', '<init>', '^(file):([\\\\/](?![\\\\/])((?:[A-Za-z]:)?[\\\\/]?(?:(?:[^\\\\/]+[\\\\/]+)*[^\\\\/]+[\\\\/]*)))$', 'file:///tmp/jgit_test_4859563614411089604_tmp/tmp_9194944218592034912/.git/')","[209236, 209294]"
"('Description.java', 'org.junit.runner.Description', 'methodAndClassNamePatternGroupOrDefault', '([\\s\\S]*)\\((.*)\\)', 'testFastForwardWithNewFile(org.eclipse.jgit.api.RebaseCommandTest)')","[46011, 103568]"
"('Description.java', 'org.junit.runner.Description', 'methodAndClassNamePatternGroupOrDefault', '([\\s\\S]*)\\((.*)\\)', 'test023_createCommitNonAnullii(org.eclipse.jgit.internal.storage.file.T0003_BasicTest)')","[54406, 111686]"
"('URIish.java', 'org.eclipse.jgit.transport.URIish', '<init>', '^(file):([\\\\/](?![\\\\/])((?:[A-Za-z]:)?[\\\\/]?(?:(?:[^\\\\/]+[\\\\/]+)*[^\\\\/]+[\\\\/]*)))$', 'http://me@example.com:1234/D:\\x')",[141796]
"('URIish.java', 'org.eclipse.jgit.transport.URIish', '<init>', '^([a-z][a-z0-9+-]+)://(?:(?:([^/:@]+)(?::([^\\\\/]+))?@)?((?:[^\\\\/:]+)|(?:\\[[0-9a-f:]+\\]))(?::(\\d+))?((?:/~(?:[^\\\\/]+))?[\\\\/]))?(.+)?$', 'http://me@[::1]:80/D:/x')",[142693]
"('Description.java', 'org.junit.runner.Description', 'methodAndClassNamePatternGroupOrDefault', '([\\s\\S]*)\\((.*)\\)', 'testClear(org.eclipse.jgit.util.RefMapTest)')","[36992, 94856]"
"('QuotedString.java', 'org.eclipse.jgit.util.QuotedString$BourneUserPathStyle', 'quote', '^~[A-Za-z0-9_-]*/.*$', '~foo/a')","[192863, 192887]"
"('URIish.java', 'org.eclipse.jgit.transport.URIish', '<init>', '^([a-z][a-z0-9+-]+)://(?:(?:([^/:@]+)(?::([^\\\\/]+))?@)?((?:[^\\\\/:]+)|(?:\\[[0-9a-f:]+\\]))(?::(\\d+))?((?:/~(?:[^\\\\/]+))?[\\\\/]))?(.+)?$', 'https://l usr\\example.com@1.2.3.4:1234/D:/x')",[146557]
"('Description.java', 'org.junit.runner.Description', 'methodAndClassNamePatternGroupOrDefault', '([\\s\\S]*)\\((.*)\\)', 'org.eclipse.jgit.internal.storage.file.WindowCacheGetTest')","[56400, 210083]"
"('Description.java', 'org.junit.runner.Description', 'methodAndClassNamePatternGroupOrDefault', '([\\s\\S]*)\\((.*)\\)', 'testOnlyOption_f1_9_e(org.eclipse.jgit.api.CommitOnlyTest)')","[49368, 106846]"
"('URIish.java', 'org.eclipse.jgit.transport.URIish', '<init>', '^(file):([\\\\/](?![\\\\/])((?:[A-Za-z]:)?[\\\\/]?(?:(?:[^\\\\/]+[\\\\/]+)*[^\\\\/]+[\\\\/]*)))$', 'ssh+git://me@example.com:1234/D:/x')",[138438]
"('URIish.java', 'org.eclipse.jgit.transport.URIish', '<init>', '^(file):([\\\\/](?![\\\\/])((?:[A-Za-z]:)?[\\\\/]?(?:(?:[^\\\\/]+[\\\\/]+)*[^\\\\/]+[\\\\/]*)))$', 'ssh://l usr\\example.com@[::1]//abc')","[150168, 150352]"
"('URIish.java', 'org.eclipse.jgit.transport.URIish', '<init>', '^(file):([\\\\/](?![\\\\/])((?:[A-Za-z]:)?[\\\\/]?(?:(?:[^\\\\/]+[\\\\/]+)*[^\\\\/]+[\\\\/]*)))$', 'ssh://me@example.com:80//')",[135218]
"('Description.java', 'org.junit.runner.Description', 'methodAndClassNamePatternGroupOrDefault', '([\\s\\S]*)\\((.*)\\)', 'testCopyConstructor(org.eclipse.jgit.fnmatch.FileNameMatcherTest)')","[16669, 75078]"
"('URIish.java', 'org.eclipse.jgit.transport.URIish', '<init>', '^([a-z][a-z0-9+-]+)://(?:(?:([^/:@]+)(?::([^\\\\/]+))?@)?((?:[^\\\\/:]+)|(?:\\[[0-9a-f:]+\\]))(?::(\\d+))?((?:/~(?:[^\\\\/]+))?[\\\\/]))?(.+)?$', 'http://me@example.com:1234//')",[141681]
"('Description.java', 'org.junit.runner.Description', 'methodAndClassNamePatternGroupOrDefault', '([\\s\\S]*)\\((.*)\\)', 'testIdenticalEdit(org.eclipse.jgit.notes.DefaultNoteMergerTest)')","[40505, 98178]"
"('Description.java', 'org.junit.runner.Description', 'methodAndClassNamePatternGroupOrDefault', '([\\s\\S]*)\\((.*)\\)', 'testBackDoesNothing(org.eclipse.jgit.treewalk.EmptyTreeIteratorTest)')","[29733, 87948]"
"('Description.java', 'org.junit.runner.Description', 'methodAndClassNamePatternGroupOrDefault', '([\\s\\S]*)\\((.*)\\)', 'testMaliciousAbsolutePathIsOkSecondCheckout(org.eclipse.jgit.lib.DirCacheCheckoutMaliciousPathTest)')","[21727, 80138]"
"('Description.java', 'org.junit.runner.Description', 'methodAndClassNamePatternGroupOrDefault', '([\\s\\S]*)\\((.*)\\)', 'test026_CreateCommitMultipleparents(org.eclipse.jgit.internal.storage.file.T0003_BasicTest)')","[54364, 111642]"
"('URIish.java', 'org.eclipse.jgit.transport.URIish', '<init>', '^(file):([\\\\/](?![\\\\/])((?:[A-Za-z]:)?[\\\\/]?(?:(?:[^\\\\/]+[\\\\/]+)*[^\\\\/]+[\\\\/]*)))$', 'ssh://lusr\\example@example.com:1234/D:/x')",[137334]
"('URIish.java', 'org.eclipse.jgit.transport.URIish', '<init>', '^(file):([\\\\/](?![\\\\/])((?:[A-Za-z]:)?[\\\\/]?(?:(?:[^\\\\/]+[\\\\/]+)*[^\\\\/]+[\\\\/]*)))$', 'ssh://l usr\\example.com:wtf@1.2.3.4:80//')",[123442]
"('URIish.java', 'org.eclipse.jgit.transport.URIish', '<init>', '^(file):([\\\\/](?![\\\\/])((?:[A-Za-z]:)?[\\\\/]?(?:(?:[^\\\\/]+[\\\\/]+)*[^\\\\/]+[\\\\/]*)))$', 'ssh+git://lusr\\example@example.com:80//')",[140738]
"('URIish.java', 'org.eclipse.jgit.transport.URIish', '<init>', '^(file):([\\\\/](?![\\\\/])((?:[A-Za-z]:)?[\\\\/]?(?:(?:[^\\\\/]+[\\\\/]+)*[^\\\\/]+[\\\\/]*)))$', 'ssh+git://me@example.com//abc')","[151640, 151824]"
"('Description.java', 'org.junit.runner.Description', 'methodAndClassNamePatternGroupOrDefault', '([\\s\\S]*)\\((.*)\\)', 'testGet(org.eclipse.jgit.util.BlockListTest)')","[35454, 93404]"
"('Description.java', 'org.junit.runner.Description', 'methodAndClassNamePatternGroupOrDefault', '([\\s\\S]*)\\((.*)\\)', 'testGetEmptyHumanishName(org.eclipse.jgit.transport.URIishTest)')","[1307, 60338]"
"('ChangeIdUtil.java', 'org.eclipse.jgit.util.ChangeIdUtil', 'indexOfFirstFooterLine', '(^[a-zA-Z0-9-]+:(?!//).*$)', 'Bug:1234567')","[181945, 182075]"
"('Description.java', 'org.junit.runner.Description', 'methodAndClassNamePatternGroupOrDefault', '([\\s\\S]*)\\((.*)\\)', 'testEmptyCache_CreateEmptyCacheTree(org.eclipse.jgit.dircache.DirCacheTreeTest)')","[11963, 70546]"
"('Description.java', 'org.junit.runner.Description', 'methodAndClassNamePatternGroupOrDefault', '([\\s\\S]*)\\((.*)\\)', 'testDirCacheSavesObjects(org.eclipse.jgit.internal.storage.file.GcDirCacheSavesObjectsTest)')","[56524, 113666]"
"('URIish.java', 'org.eclipse.jgit.transport.URIish', '<init>', '^([a-z][a-z0-9+-]+)://(?:(?:([^/:@]+)(?::([^\\\\/]+))?@)?((?:[^\\\\/:]+)|(?:\\[[0-9a-f:]+\\]))(?::(\\d+))?((?:/~(?:[^\\\\/]+))?[\\\\/]))?(.+)?$', 'ssh://lusr\\example@example.com:1234//')",[137265]
"('Description.java', 'org.junit.runner.Description', 'methodAndClassNamePatternGroupOrDefault', '([\\s\\S]*)\\((.*)\\)', 'testUpdateRefDetached(org.eclipse.jgit.internal.storage.file.RefUpdateTest)')","[56108, 113270]"
"('URIish.java', 'org.eclipse.jgit.transport.URIish', '<init>', '^([a-z][a-z0-9+-]+)://(?:(?:([^/:@]+)(?::([^\\\\/]+))?@)?((?:[^\\\\/:]+)|(?:\\[[0-9a-f:]+\\]))(?::(\\d+))?((?:/~(?:[^\\\\/]+))?[\\\\/]))?(.+)?$', 'https://me@1.2.3.4:1234//')",[145361]
"('Description.java', 'org.junit.runner.Description', 'methodAndClassNamePatternGroupOrDefault', '([\\s\\S]*)\\((.*)\\)', 'testUNC(org.eclipse.jgit.transport.URIishTest)')","[1202, 60228]"
"('URIish.java', 'org.eclipse.jgit.transport.URIish', '<init>', '^([a-z][a-z0-9+-]+)://(?:(?:([^/:@]+)(?::([^\\\\/]+))?@)?((?:[^\\\\/:]+)|(?:\\[[0-9a-f:]+\\]))(?::(\\d+))?((?:/~(?:[^\\\\/]+))?[\\\\/]))?(.+)?$', 'http://lusr\\example:wtf@example.com:1234/D:\\x')",[130779]
"('Description.java', 'org.junit.runner.Description', 'methodAndClassNamePatternGroupOrDefault', '([\\s\\S]*)\\((.*)\\)', 'org.eclipse.jgit.patch.PatchTest')","[39675, 193609]"
"('URIish.java', 'org.eclipse.jgit.transport.URIish', '<init>', '^(file):([\\\\/](?![\\\\/])((?:[A-Za-z]:)?[\\\\/]?(?:(?:[^\\\\/]+[\\\\/]+)*[^\\\\/]+[\\\\/]*)))$', 'https://l usr\\example.com:wtf@[::1]:80/D:\\x')",[133884]
"('Description.java', 'org.junit.runner.Description', 'methodAndClassNamePatternGroupOrDefault', '([\\s\\S]*)\\((.*)\\)', 'testACommitWithSubjectBodyBugBrackersAndSob(org.eclipse.jgit.util.ChangeIdUtilTest)')","[37616, 95450]"
"('URIish.java', 'org.eclipse.jgit.transport.URIish', '<init>', '^(file):([\\\\/](?![\\\\/])((?:[A-Za-z]:)?[\\\\/]?(?:(?:[^\\\\/]+[\\\\/]+)*[^\\\\/]+[\\\\/]*)))$', 'ssh://me:wtf@example.com:80//abc')",[122016]
"('Description.java', 'org.junit.runner.Description', 'methodAndClassNamePatternGroupOrDefault', '([\\s\\S]*)\\((.*)\\)', 'testClear(org.eclipse.jgit.lib.ObjectIdOwnerMapTest)')","[21933, 80314]"
"('URIish.java', 'org.eclipse.jgit.transport.URIish', '<init>', '^([a-z][a-z0-9+-]+)://(?:(?:([^/:@]+)(?::([^\\\\/]+))?@)?((?:[^\\\\/:]+)|(?:\\[[0-9a-f:]+\\]))(?::(\\d+))?((?:/~(?:[^\\\\/]+))?[\\\\/]))?(.+)?$', 'ssh+git://l usr\\example.com:wtf@1.2.3.4:1234/D:/x')",[126685]
"('Description.java', 'org.junit.runner.Description', 'methodAndClassNamePatternGroupOrDefault', '([\\s\\S]*)\\((.*)\\)', 'testCheckoutRemoteTrackingWithoutLocalBranch(org.eclipse.jgit.api.CheckoutCommandTest)')","[43253, 100818]"
"('URIish.java', 'org.eclipse.jgit.transport.URIish', '<init>', '^(file):([\\\\/](?![\\\\/])((?:[A-Za-z]:)?[\\\\/]?(?:(?:[^\\\\/]+[\\\\/]+)*[^\\\\/]+[\\\\/]*)))$', 'ssh+git://me:wtf@example.com:1234//')",[125098]
"('Description.java', 'org.junit.runner.Description', 'methodAndClassNamePatternGroupOrDefault', '([\\s\\S]*)\\((.*)\\)', 'testGetWindowsPathHumanishName(org.eclipse.jgit.transport.URIishTest)')","[1496, 60536]"
"('Description.java', 'org.junit.runner.Description', 'methodAndClassNamePatternGroupOrDefault', '([\\s\\S]*)\\((.*)\\)', 'testUnsupportedOptionalExtension(org.eclipse.jgit.dircache.DirCacheCGitCompatabilityTest)')","[11446, 70084]"
"('URIish.java', 'org.eclipse.jgit.transport.URIish', '<init>', '^([\\\\/]?((?:[A-Za-z]:)?[\\\\/]?(?:(?:[^\\\\/]+[\\\\/]+)*[^\\\\/]+[\\\\/]*)))$', 'D:\\m y')","[176986, 177101]"
"('Description.java', 'org.junit.runner.Description', 'methodAndClassNamePatternGroupOrDefault', '([\\s\\S]*)\\((.*)\\)', 'testNameOnlyMatches(org.eclipse.jgit.ignore.IgnoreMatcherTest)')","[31836, 89972]"
"('URIish.java', 'org.eclipse.jgit.transport.URIish', '<init>', '^([a-z][a-z0-9+-]+)://(?:(?:([^/:@]+)(?::([^\\\\/]+))?@)?((?:[^\\\\/:]+)|(?:\\[[0-9a-f:]+\\]))(?::(\\d+))?((?:/~(?:[^\\\\/]+))?[\\\\/]))?(.+)?$', 'short:project.git')","[119788, 120713]"
"('Description.java', 'org.junit.runner.Description', 'methodAndClassNamePatternGroupOrDefault', '([\\s\\S]*)\\((.*)\\)', 'testOnlyOption_f1_8_e(org.eclipse.jgit.api.CommitOnlyTest)')","[49263, 106736]"
"('URIish.java', 'org.eclipse.jgit.transport.URIish', '<init>', '^(file):([\\\\/](?![\\\\/])((?:[A-Za-z]:)?[\\\\/]?(?:(?:[^\\\\/]+[\\\\/]+)*[^\\\\/]+[\\\\/]*)))$', 'ssh+git://me:wtf@1.2.3.4:80/D:/x')",[125742]
"('URIish.java', 'org.eclipse.jgit.transport.URIish', '<init>', '^([a-z][a-z0-9+-]+)://(?:(?:([^/:@]+)(?::([^\\\\/]+))?@)?((?:[^\\\\/:]+)|(?:\\[[0-9a-f:]+\\]))(?::(\\d+))?((?:/~(?:[^\\\\/]+))?[\\\\/]))?(.+)?$', 'ssh+git://l usr\\example.com@example.com//abc')","[152767, 152951]"
"('URIish.java', 'org.eclipse.jgit.transport.URIish', '<init>', '^([a-z][a-z0-9+-]+)://(?:(?:([^/:@]+)(?::([^\\\\/]+))?@)?((?:[^\\\\/:]+)|(?:\\[[0-9a-f:]+\\]))(?::(\\d+))?((?:/~(?:[^\\\\/]+))?[\\\\/]))?(.+)?$', 'ssh+git://l usr\\example.com:wtf@example.com:80/D:/x')",[126501]
"('Description.java', 'org.junit.runner.Description', 'methodAndClassNamePatternGroupOrDefault', '([\\s\\S]*)\\((.*)\\)', 'testSequentialCherryPick(org.eclipse.jgit.api.CherryPickCommandTest)')","[47885, 105372]"
"('URIish.java', 'org.eclipse.jgit.transport.URIish', '<init>', '^(file):([\\\\/](?![\\\\/])((?:[A-Za-z]:)?[\\\\/]?(?:(?:[^\\\\/]+[\\\\/]+)*[^\\\\/]+[\\\\/]*)))$', 'file:///tmp/jgit_test_6468569531057046805_tmp/tmp_9160806371775263841/.git/')",[201899]
"('URIish.java', 'org.eclipse.jgit.transport.URIish', '<init>', '^([a-z][a-z0-9+-]+)://(?:(?:([^/:@]+)(?::([^\\\\/]+))?@)?((?:[^\\\\/:]+)|(?:\\[[0-9a-f:]+\\]))(?::(\\d+))?((?:/~(?:[^\\\\/]+))?[\\\\/]))?(.+)?$', 'https://lusr\\example:wtf@example.com:80/D:\\x')",[134275]
"('Description.java', 'org.junit.runner.Description', 'methodAndClassNamePatternGroupOrDefault', '([\\s\\S]*)\\((.*)\\)', 'testAdd_LargeGroup(org.eclipse.jgit.util.IntListTest)')","[35973, 93888]"
"('Description.java', 'org.junit.runner.Description', 'methodAndClassNamePatternGroupOrDefault', '([\\s\\S]*)\\((.*)\\)', 'testEmptyTree_WithTreeWalk(org.eclipse.jgit.dircache.DirCacheIteratorTest)')","[12440, 70986]"
"('URIish.java', 'org.eclipse.jgit.transport.URIish', '<init>', '^([a-z][a-z0-9+-]+)://(?:(?:([^/:@]+)(?::([^\\\\/]+))?@)?((?:[^\\\\/:]+)|(?:\\[[0-9a-f:]+\\]))(?::(\\d+))?((?:/~(?:[^\\\\/]+))?[\\\\/]))?(.+)?$', 'http://lusr\\example:wtf@[::1]:1234/D:\\x')",[131515]
"('URIish.java', 'org.eclipse.jgit.transport.URIish', '<init>', '^(file):([\\\\/](?![\\\\/])((?:[A-Za-z]:)?[\\\\/]?(?:(?:[^\\\\/]+[\\\\/]+)*[^\\\\/]+[\\\\/]*)))$', 'http://lusr\\example:wtf@[::1]:80//')",[131538]
"('URIish.java', 'org.eclipse.jgit.transport.URIish', '<init>', '^(file):([\\\\/](?![\\\\/])((?:[A-Za-z]:)?[\\\\/]?(?:(?:[^\\\\/]+[\\\\/]+)*[^\\\\/]+[\\\\/]*)))$', 'http://lusr\\example@1.2.3.4//abc')","[157528, 157712]"
"('Description.java', 'org.junit.runner.Description', 'methodAndClassNamePatternGroupOrDefault', '([\\s\\S]*)\\((.*)\\)', 'testCloneRepositoryWhenDestinationDirectoryExistsAndIsNotEmpty(org.eclipse.jgit.api.CloneCommandTest)')","[42482, 100070]"
"('Description.java', 'org.junit.runner.Description', 'methodAndClassNamePatternGroupOrDefault', '([\\s\\S]*)\\((.*)\\)', 'testFormatYears(org.eclipse.jgit.util.RelativeDateFormatterTest)')","[35828, 93756]"
"('URIish.java', 'org.eclipse.jgit.transport.URIish', '<init>', '^(file):([\\\\/](?![\\\\/])((?:[A-Za-z]:)?[\\\\/]?(?:(?:[^\\\\/]+[\\\\/]+)*[^\\\\/]+[\\\\/]*)))$', '/abc.git')",[175123]
"('Description.java', 'org.junit.runner.Description', 'methodAndClassNamePatternGroupOrDefault', '([\\s\\S]*)\\((.*)\\)', 'testAdd_InGitSortOrder(org.eclipse.jgit.dircache.DirCacheBuilderTest)')","[12171, 70744]"
"('URIish.java', 'org.eclipse.jgit.transport.URIish', '<init>', '^(file):([\\\\/](?![\\\\/])((?:[A-Za-z]:)?[\\\\/]?(?:(?:[^\\\\/]+[\\\\/]+)*[^\\\\/]+[\\\\/]*)))$', 'file:///tmp/jgit_test_765209740921422314_tmp/tmp_2226205120512939987/.git/')",[185934]
"('Description.java', 'org.junit.runner.Description', 'methodAndClassNamePatternGroupOrDefault', '([\\s\\S]*)\\((.*)\\)', 'testOneliner(org.eclipse.jgit.util.ChangeIdUtilTest)')","[37658, 95494]"
"('URIish.java', 'org.eclipse.jgit.transport.URIish', '<init>', '^(file):([\\\\/](?![\\\\/])((?:[A-Za-z]:)?[\\\\/]?(?:(?:[^\\\\/]+[\\\\/]+)*[^\\\\/]+[\\\\/]*)))$', 'ssh+git://lusr\\example:wtf@[::1]:80/D:\\x')",[128364]
"('Description.java', 'org.junit.runner.Description', 'methodAndClassNamePatternGroupOrDefault', '([\\s\\S]*)\\((.*)\\)', 'org.eclipse.jgit.diff.HistogramDiffTest')","[15079, 182802]"
"('URIish.java', 'org.eclipse.jgit.transport.URIish', '<init>', '^(file):([\\\\/](?![\\\\/])((?:[A-Za-z]:)?[\\\\/]?(?:(?:[^\\\\/]+[\\\\/]+)*[^\\\\/]+[\\\\/]*)))$', 'https://lusr\\example@example.com:80/D:/x')",[147454]
"('Description.java', 'org.junit.runner.Description', 'methodAndClassNamePatternGroupOrDefault', '([\\s\\S]*)\\((.*)\\)', 'repositoryWithNoSubmodules(org.eclipse.jgit.submodule.SubmoduleInitTest)')","[19502, 78026]"
"('Description.java', 'org.junit.runner.Description', 'methodAndClassNamePatternGroupOrDefault', '([\\s\\S]*)\\((.*)\\)', 'testFormatBase10(org.eclipse.jgit.util.RawParseUtils_FormatTest)')","[33597, 91578]"
"('Description.java', 'org.junit.runner.Description', 'methodAndClassNamePatternGroupOrDefault', '([\\s\\S]*)\\((.*)\\)', 'testRenameRemoteTrackingBranch(org.eclipse.jgit.api.BranchCommandTest)')","[47448, 104954]"
"('Description.java', 'org.junit.runner.Description', 'methodAndClassNamePatternGroupOrDefault', '([\\s\\S]*)\\((.*)\\)', 'testMultipleHeads(org.eclipse.jgit.api.MergeCommandTest)')","[44257, 101830]"
"('Description.java', 'org.junit.runner.Description', 'methodAndClassNamePatternGroupOrDefault', '([\\s\\S]*)\\((.*)\\)', 'testUpdateNonFastForward(org.eclipse.jgit.transport.PushProcessTest)')","[4964, 63990]"
"('URIish.java', 'org.eclipse.jgit.transport.URIish', '<init>', '^([a-z][a-z0-9+-]+)://(?:(?:([^/:@]+)(?::([^\\\\/]+))?@)?((?:[^\\\\/:]+)|(?:\\[[0-9a-f:]+\\]))(?::(\\d+))?((?:/~(?:[^\\\\/]+))?[\\\\/]))?(.+)?$', 'ssh://l usr\\example.com@example.com:80/D:/x')",[136437]
"('Description.java', 'org.junit.runner.Description', 'methodAndClassNamePatternGroupOrDefault', '([\\s\\S]*)\\((.*)\\)', 'testAbbreviatePackedBlob(org.eclipse.jgit.internal.storage.file.AbbreviationTest)')","[57499, 114568]"
"('Description.java', 'org.junit.runner.Description', 'methodAndClassNamePatternGroupOrDefault', '([\\s\\S]*)\\((.*)\\)', 'testDeleteFile(org.eclipse.jgit.diff.HistogramDiffTest)')","[15541, 73956]"
"('Description.java', 'org.junit.runner.Description', 'methodAndClassNamePatternGroupOrDefault', '([\\s\\S]*)\\((.*)\\)', 'testHardReset(org.eclipse.jgit.api.ResetCommandTest)')","[42648, 100224]"
"('Description.java', 'org.junit.runner.Description', 'methodAndClassNamePatternGroupOrDefault', '([\\s\\S]*)\\((.*)\\)', 'testPut_KeyMustMatchName_NoPrefix(org.eclipse.jgit.util.RefMapTest)')","[36950, 94812]"
"('Description.java', 'org.junit.runner.Description', 'methodAndClassNamePatternGroupOrDefault', '([\\s\\S]*)\\((.*)\\)', 'org.eclipse.jgit.treewalk.NameConflictTreeWalkTest')","[29300, 186046]"
"('URIish.java', 'org.eclipse.jgit.transport.URIish', '<init>', '^([a-z][a-z0-9+-]+)://(?:(?:([^/:@]+)(?::([^\\\\/]+))?@)?((?:[^\\\\/:]+)|(?:\\[[0-9a-f:]+\\]))(?::(\\d+))?((?:/~(?:[^\\\\/]+))?[\\\\/]))?(.+)?$', 'https://l usr\\example.com:wtf@1.2.3.4:80//')",[133401]
"('URIish.java', 'org.eclipse.jgit.transport.URIish', '<init>', '^([a-z][a-z0-9+-]+)://(?:(?:([^/:@]+)(?::([^\\\\/]+))?@)?((?:[^\\\\/:]+)|(?:\\[[0-9a-f:]+\\]))(?::(\\d+))?((?:/~(?:[^\\\\/]+))?[\\\\/]))?(.+)?$', 'ssh://me@[::1]:80/D:/x')",[136069]
"('Description.java', 'org.junit.runner.Description', 'methodAndClassNamePatternGroupOrDefault', '([\\s\\S]*)\\((.*)\\)', 'testClear(org.eclipse.jgit.lib.ObjectIdSubclassMapTest)')","[22099, 80468]"
"('Description.java', 'org.junit.runner.Description', 'methodAndClassNamePatternGroupOrDefault', '([\\s\\S]*)\\((.*)\\)', 'org.eclipse.jgit.dircache.DirCacheCGitCompatabilityTest')","[11425, 182235]"
"('URIish.java', 'org.eclipse.jgit.transport.URIish', '<init>', '^([a-z][a-z0-9+-]+)://(?:(?:([^/:@]+)(?::([^\\\\/]+))?@)?((?:[^\\\\/:]+)|(?:\\[[0-9a-f:]+\\]))(?::(\\d+))?((?:/~(?:[^\\\\/]+))?[\\\\/]))?(.+)?$', 'ssh://lusr\\example@example.com/D:/x')","[150605, 150789]"
"('Description.java', 'org.junit.runner.Description', 'methodAndClassNamePatternGroupOrDefault', '([\\s\\S]*)\\((.*)\\)', 'testAddWholeRepo(org.eclipse.jgit.api.AddCommandTest)')","[50584, 108100]"
"('URIish.java', 'org.eclipse.jgit.transport.URIish', '<init>', '^([a-z][a-z0-9+-]+)://(?:(?:([^/:@]+)(?::([^\\\\/]+))?@)?((?:[^\\\\/:]+)|(?:\\[[0-9a-f:]+\\]))(?::(\\d+))?((?:/~(?:[^\\\\/]+))?[\\\\/]))?(.+)?$', 'ssh://lusr\\example@example.com//abc')","[150559, 150743]"
"('Description.java', 'org.junit.runner.Description', 'methodAndClassNamePatternGroupOrDefault', '([\\s\\S]*)\\((.*)\\)', 'testPackAllObjectsInOnePack(org.eclipse.jgit.internal.storage.file.GcBasicPackingTest)')","[53076, 110432]"
"('Description.java', 'org.junit.runner.Description', 'methodAndClassNamePatternGroupOrDefault', '([\\s\\S]*)\\((.*)\\)', 'testSpecialGroupCase3(org.eclipse.jgit.fnmatch.FileNameMatcherTest)')","[16165, 74550]"
"('URIish.java', 'org.eclipse.jgit.transport.URIish', '<init>', '^([a-z][a-z0-9+-]+)://(?:(?:([^/:@]+)(?::([^\\\\/]+))?@)?((?:[^\\\\/:]+)|(?:\\[[0-9a-f:]+\\]))(?::(\\d+))?((?:/~(?:[^\\\\/]+))?[\\\\/]))?(.+)?$', 'ssh://me@1.2.3.4//')","[148673, 148857]"
"('Description.java', 'org.junit.runner.Description', 'methodAndClassNamePatternGroupOrDefault', '([\\s\\S]*)\\((.*)\\)', 'testInexactRenames_OnePair2(org.eclipse.jgit.diff.RenameDetectorTest)')","[12709, 71228]"
"('URIish.java', 'org.eclipse.jgit.transport.URIish', '<init>', '^([a-z][a-z0-9+-]+)://(?:(?:([^/:@]+)(?::([^\\\\/]+))?@)?((?:[^\\\\/:]+)|(?:\\[[0-9a-f:]+\\]))(?::(\\d+))?((?:/~(?:[^\\\\/]+))?[\\\\/]))?(.+)?$', 'ssh+git://me:wtf@[::1]:80/D:/x')",[126133]
"('Description.java', 'org.junit.runner.Description', 'methodAndClassNamePatternGroupOrDefault', '([\\s\\S]*)\\((.*)\\)', 'testParseEncoding_badEncoding(org.eclipse.jgit.util.RawParseUtilsTest)')","[36805, 94680]"
"('Description.java', 'org.junit.runner.Description', 'methodAndClassNamePatternGroupOrDefault', '([\\s\\S]*)\\((.*)\\)', 'testCloneEmpty(org.eclipse.jgit.revwalk.DateRevQueueTest)')","[7954, 66784]"
"('URIish.java', 'org.eclipse.jgit.transport.URIish', '<init>', '^(file):([\\\\/](?![\\\\/])((?:[A-Za-z]:)?[\\\\/]?(?:(?:[^\\\\/]+[\\\\/]+)*[^\\\\/]+[\\\\/]*)))$', 'https://l usr\\example.com@[::1]:1234/D:/x')",[146902]
"('Description.java', 'org.junit.runner.Description', 'methodAndClassNamePatternGroupOrDefault', '([\\s\\S]*)\\((.*)\\)', 'workingDirectoryModifyIndexChanged(org.eclipse.jgit.api.StashCreateCommandTest)')","[41921, 99542]"
"('Description.java', 'org.junit.runner.Description', 'methodAndClassNamePatternGroupOrDefault', '([\\s\\S]*)\\((.*)\\)', 'testInvalidTagInvalidTaggerHeader3(org.eclipse.jgit.lib.ObjectCheckerTest)')","[26231, 84538]"
"('Description.java', 'org.junit.runner.Description', 'methodAndClassNamePatternGroupOrDefault', '([\\s\\S]*)\\((.*)\\)', 'org.eclipse.jgit.util.GitDateParserTest')","[36160, 186991]"
"('Description.java', 'org.junit.runner.Description', 'methodAndClassNamePatternGroupOrDefault', '([\\s\\S]*)\\((.*)\\)', 'testDestroyWhileOpen(org.eclipse.jgit.util.TemporaryBufferTest)')","[34662, 92634]"
"('URIish.java', 'org.eclipse.jgit.transport.URIish', '<init>', '^(file):([\\\\/](?![\\\\/])((?:[A-Za-z]:)?[\\\\/]?(?:(?:[^\\\\/]+[\\\\/]+)*[^\\\\/]+[\\\\/]*)))$', 'ssh+git://me:wtf@example.com:80/D:/x')",[125374]
"('Description.java', 'org.junit.runner.Description', 'methodAndClassNamePatternGroupOrDefault', '([\\s\\S]*)\\((.*)\\)', 'testDeleteRecursive(org.eclipse.jgit.util.FileUtilTest)')","[33889, 91864]"
"('URIish.java', 'org.eclipse.jgit.transport.URIish', '<init>', '^(file):([\\\\/](?![\\\\/])((?:[A-Za-z]:)?[\\\\/]?(?:(?:[^\\\\/]+[\\\\/]+)*[^\\\\/]+[\\\\/]*)))$', 'file:///tmp/jgit_test_8069771755053160600_tmp/tmp_6950575543562770897/.git/')",[183317]
"('Description.java', 'org.junit.runner.Description', 'methodAndClassNamePatternGroupOrDefault', '([\\s\\S]*)\\((.*)\\)', 'testAlreadyExists(org.eclipse.jgit.api.CheckoutCommandTest)')","[43169, 100730]"
"('Description.java', 'org.junit.runner.Description', 'methodAndClassNamePatternGroupOrDefault', '([\\s\\S]*)\\((.*)\\)', 'testFillToHighMarkAll(org.eclipse.jgit.revwalk.RevCommitListTest)')","[7582, 66454]"
"('URIish.java', 'org.eclipse.jgit.transport.URIish', '<init>', '^([a-z][a-z0-9+-]+)://(?:(?:([^/:@]+)(?::([^\\\\/]+))?@)?((?:[^\\\\/:]+)|(?:\\[[0-9a-f:]+\\]))(?::(\\d+))?((?:/~(?:[^\\\\/]+))?[\\\\/]))?(.+)?$', 'http://me:wtf@[::1]:80/D:/x')",[129445]
"('URIish.java', 'org.eclipse.jgit.transport.URIish', '<init>', '^(file):([\\\\/](?![\\\\/])((?:[A-Za-z]:)?[\\\\/]?(?:(?:[^\\\\/]+[\\\\/]+)*[^\\\\/]+[\\\\/]*)))$', 'https://l usr\\example.com@example.com:1234//abc')",[146120]
"('Description.java', 'org.junit.runner.Description', 'methodAndClassNamePatternGroupOrDefault', '([\\s\\S]*)\\((.*)\\)', 'testOnlyOption_f1_5_c(org.eclipse.jgit.api.CommitOnlyTest)')","[48906, 106362]"
"('Description.java', 'org.junit.runner.Description', 'methodAndClassNamePatternGroupOrDefault', '([\\s\\S]*)\\((.*)\\)', 'testLinear(org.eclipse.jgit.revplot.PlotCommitListTest)')","[40152, 97848]"
"('Description.java', 'org.junit.runner.Description', 'methodAndClassNamePatternGroupOrDefault', '([\\s\\S]*)\\((.*)\\)', 'testFilePathCase2(org.eclipse.jgit.fnmatch.FileNameMatcherTest)')","[18055, 76530]"
"('URIish.java', 'org.eclipse.jgit.transport.URIish', '<init>', '^([a-z][a-z0-9+-]+)://(?:(?:([^/:@]+)(?::([^\\\\/]+))?@)?((?:[^\\\\/:]+)|(?:\\[[0-9a-f:]+\\]))(?::(\\d+))?((?:/~(?:[^\\\\/]+))?[\\\\/]))?(.+)?$', 'git://example.com:338/D:/m y')","[177515, 177561]"
"('URIish.java', 'org.eclipse.jgit.transport.URIish', '<init>', '^(file):([\\\\/](?![\\\\/])((?:[A-Za-z]:)?[\\\\/]?(?:(?:[^\\\\/]+[\\\\/]+)*[^\\\\/]+[\\\\/]*)))$', 'http://l usr\\example.com:wtf@1.2.3.4:1234//abc')",[129928]
"('URIish.java', 'org.eclipse.jgit.transport.URIish', '<init>', '^(file):([\\\\/](?![\\\\/])((?:[A-Za-z]:)?[\\\\/]?(?:(?:[^\\\\/]+[\\\\/]+)*[^\\\\/]+[\\\\/]*)))$', 'http://l usr\\example.com:wtf@example.com:80//abc')",[129744]
"('Description.java', 'org.junit.runner.Description', 'methodAndClassNamePatternGroupOrDefault', '([\\s\\S]*)\\((.*)\\)', 'testAddGetAndContains(org.eclipse.jgit.lib.ObjectIdOwnerMapTest)')","[22017, 80402]"
"('Description.java', 'org.junit.runner.Description', 'methodAndClassNamePatternGroupOrDefault', '([\\s\\S]*)\\((.*)\\)', 'onePathMergeLongerFirstParentPath(org.eclipse.jgit.api.NameRevCommandTest)')","[51729, 109200]"
"('Description.java', 'org.junit.runner.Description', 'methodAndClassNamePatternGroupOrDefault', '([\\s\\S]*)\\((.*)\\)', 'testCloneEmpty(org.eclipse.jgit.revwalk.LIFORevQueueTest)')","[6502, 65442]"
"('Description.java', 'org.junit.runner.Description', 'methodAndClassNamePatternGroupOrDefault', '([\\s\\S]*)\\((.*)\\)', 'testLockMissing_TempIndex(org.eclipse.jgit.dircache.DirCacheBasicTest)')","[11196, 69842]"
"('URIish.java', 'org.eclipse.jgit.transport.URIish', '<init>', '^(file):([\\\\/](?![\\\\/])((?:[A-Za-z]:)?[\\\\/]?(?:(?:[^\\\\/]+[\\\\/]+)*[^\\\\/]+[\\\\/]*)))$', 'ssh+git://lusr\\example@[::1]:80/D:\\x')",[141612]
"('Description.java', 'org.junit.runner.Description', 'methodAndClassNamePatternGroupOrDefault', '([\\s\\S]*)\\((.*)\\)', 'testLsRemoteWithHeads(org.eclipse.jgit.api.LsRemoteCommandTest)')","[41297, 98948]"
"('Description.java', 'org.junit.runner.Description', 'methodAndClassNamePatternGroupOrDefault', '([\\s\\S]*)\\((.*)\\)', 'testInvalidTreeModeStartsWithZero1(org.eclipse.jgit.lib.ObjectCheckerTest)')","[26882, 85220]"
"('Description.java', 'org.junit.runner.Description', 'methodAndClassNamePatternGroupOrDefault', '([\\s\\S]*)\\((.*)\\)', 'testNotEquals_SameLength(org.eclipse.jgit.lib.AbbreviatedObjectIdTest)')","[22286, 80644]"
"('Description.java', 'org.junit.runner.Description', 'methodAndClassNamePatternGroupOrDefault', '([\\s\\S]*)\\((.*)\\)', 'testObjectId_objectid_self(org.eclipse.jgit.lib.RepositoryResolveTest)')","[27279, 85616]"
"('URIish.java', 'org.eclipse.jgit.transport.URIish', '<init>', '^(file):([\\\\/](?![\\\\/])((?:[A-Za-z]:)?[\\\\/]?(?:(?:[^\\\\/]+[\\\\/]+)*[^\\\\/]+[\\\\/]*)))$', 'ssh://lusr\\example@example.com:80/D:/x')",[137518]
"('URIish.java', 'org.eclipse.jgit.transport.URIish', '<init>', '^([a-z][a-z0-9+-]+)://(?:(?:([^/:@]+)(?::([^\\\\/]+))?@)?((?:[^\\\\/:]+)|(?:\\[[0-9a-f:]+\\]))(?::(\\d+))?((?:/~(?:[^\\\\/]+))?[\\\\/]))?(.+)?$', 'https://l usr\\example.com@example.com:80//abc')",[146327]
"('Description.java', 'org.junit.runner.Description', 'methodAndClassNamePatternGroupOrDefault', '([\\s\\S]*)\\((.*)\\)', 'testFilter_NOT_NONE(org.eclipse.jgit.revwalk.RevWalkFilterTest)')","[8158, 66938]"
"('Description.java', 'org.junit.runner.Description', 'methodAndClassNamePatternGroupOrDefault', '([\\s\\S]*)\\((.*)\\)', 'testRenameCurrentBranch(org.eclipse.jgit.internal.storage.file.RefUpdateTest)')","[55730, 112874]"
"('Description.java', 'org.junit.runner.Description', 'methodAndClassNamePatternGroupOrDefault', '([\\s\\S]*)\\((.*)\\)', 'testCache_Defaults(org.eclipse.jgit.internal.storage.file.WindowCacheGetTest)')","[56463, 113622]"
"('URIish.java', 'org.eclipse.jgit.transport.URIish', '<init>', '^([a-z][a-z0-9+-]+)://(?:(?:([^/:@]+)(?::([^\\\\/]+))?@)?((?:[^\\\\/:]+)|(?:\\[[0-9a-f:]+\\]))(?::(\\d+))?((?:/~(?:[^\\\\/]+))?[\\\\/]))?(.+)?$', 'ssh://l usr\\example.com@example.com/D:\\x')","[149547, 149731]"
"('Description.java', 'org.junit.runner.Description', 'methodAndClassNamePatternGroupOrDefault', '([\\s\\S]*)\\((.*)\\)', 'org.eclipse.jgit.lib.BranchConfigTest')","[25057, 184356]"
"('URIish.java', 'org.eclipse.jgit.transport.URIish', '<init>', '^([\\\\/]?((?:[A-Za-z]:)?[\\\\/]?(?:(?:[^\\\\/]+[\\\\/]+)*[^\\\\/]+[\\\\/]*)))$', '/a/b/c/')",[176388]
"('Description.java', 'org.junit.runner.Description', 'methodAndClassNamePatternGroupOrDefault', '([\\s\\S]*)\\((.*)\\)', 'testOnlyOption_f1_2_e(org.eclipse.jgit.api.CommitOnlyTest)')","[48633, 106076]"
"('URIish.java', 'org.eclipse.jgit.transport.URIish', '<init>', '^([a-z][a-z0-9+-]+)://(?:(?:([^/:@]+)(?::([^\\\\/]+))?@)?((?:[^\\\\/:]+)|(?:\\[[0-9a-f:]+\\]))(?::(\\d+))?((?:/~(?:[^\\\\/]+))?[\\\\/]))?(.+)?$', 'ssh+git://lusr\\example:wtf@1.2.3.4:80//')",[127881]
"('Description.java', 'org.junit.runner.Description', 'methodAndClassNamePatternGroupOrDefault', '([\\s\\S]*)\\((.*)\\)', 'testScpStyleNoURIDecoding(org.eclipse.jgit.transport.URIishTest)')","[1895, 60954]"
"('URIish.java', 'org.eclipse.jgit.transport.URIish', '<init>', '^([a-z][a-z0-9+-]+)://(?:(?:([^/:@]+)(?::([^\\\\/]+))?@)?((?:[^\\\\/:]+)|(?:\\[[0-9a-f:]+\\]))(?::(\\d+))?((?:/~(?:[^\\\\/]+))?[\\\\/]))?(.+)?$', 'http://me@example.com:1234//abc')",[141727]
"('URIish.java', 'org.eclipse.jgit.transport.URIish', '<init>', '^(file):([\\\\/](?![\\\\/])((?:[A-Za-z]:)?[\\\\/]?(?:(?:[^\\\\/]+[\\\\/]+)*[^\\\\/]+[\\\\/]*)))$', 'git://example.com:333/home/m y')","[176664, 176710]"
"('URIish.java', 'org.eclipse.jgit.transport.URIish', '<init>', '^(?:([^/:@]+)(?::([^\\\\/]+))?@)?((?:[^\\\\/:]+)|(?:\\[[0-9a-f:]+\\])):((?:(?:/~(?:[^\\\\/]+))[\\\\/])?(?:(?:[^\\\\/]+[\\\\/]+)*[^\\\\/]+[\\\\/]*))$', '/tmp/jgit_test_6729380522621655077_tmp/tmp_6942243649056967235')","[203325, 203460, 203608, 203758]"
"('URIish.java', 'org.eclipse.jgit.transport.URIish', '<init>', '^(file):([\\\\/](?![\\\\/])((?:[A-Za-z]:)?[\\\\/]?(?:(?:[^\\\\/]+[\\\\/]+)*[^\\\\/]+[\\\\/]*)))$', 'ssh://l usr\\example.com@example.com/D:\\x')","[149524, 149708]"
"('Description.java', 'org.junit.runner.Description', 'methodAndClassNamePatternGroupOrDefault', '([\\s\\S]*)\\((.*)\\)', 'testSlashOnlyMatchesDirectory(org.eclipse.jgit.ignore.IgnoreNodeTest)')","[31691, 89840]"
"('URIish.java', 'org.eclipse.jgit.transport.URIish', '<init>', '^([a-z][a-z0-9+-]+)://(?:(?:([^/:@]+)(?::([^\\\\/]+))?@)?((?:[^\\\\/:]+)|(?:\\[[0-9a-f:]+\\]))(?::(\\d+))?((?:/~(?:[^\\\\/]+))?[\\\\/]))?(.+)?$', 'http://l usr\\example.com:wtf@[::1]:80/D:\\x')",[130595]
"('URIish.java', 'org.eclipse.jgit.transport.URIish', '<init>', '^(file):([\\\\/](?![\\\\/])((?:[A-Za-z]:)?[\\\\/]?(?:(?:[^\\\\/]+[\\\\/]+)*[^\\\\/]+[\\\\/]*)))$', 'ssh://l usr\\example.com:wtf@1.2.3.4:1234/D:\\x')",[123396]
"('Description.java', 'org.junit.runner.Description', 'methodAndClassNamePatternGroupOrDefault', '([\\s\\S]*)\\((.*)\\)', 'testXDigitGroupCase0(org.eclipse.jgit.fnmatch.FileNameMatcherTest)')","[18685, 77190]"
"('Description.java', 'org.junit.runner.Description', 'methodAndClassNamePatternGroupOrDefault', '([\\s\\S]*)\\((.*)\\)', 'getRemoteTrackingBranchShouldHandleOtherMapping(org.eclipse.jgit.lib.BranchConfigTest)')","[25183, 83460]"
"('URIish.java', 'org.eclipse.jgit.transport.URIish', '<init>', '^(file):([\\\\/](?![\\\\/])((?:[A-Za-z]:)?[\\\\/]?(?:(?:[^\\\\/]+[\\\\/]+)*[^\\\\/]+[\\\\/]*)))$', 'ssh+git://lusr\\example@[::1]//')","[154538, 154722]"
"('URIish.java', 'org.eclipse.jgit.transport.URIish', '<init>', '^([a-z][a-z0-9+-]+)://(?:(?:([^/:@]+)(?::([^\\\\/]+))?@)?((?:[^\\\\/:]+)|(?:\\[[0-9a-f:]+\\]))(?::(\\d+))?((?:/~(?:[^\\\\/]+))?[\\\\/]))?(.+)?$', 'http://me@1.2.3.4:1234//')",[142049]
"('ChangeIdUtil.java', 'org.eclipse.jgit.util.ChangeIdUtil', 'indexOfChangeId', '(^Change-Id: *I[a-f0-9]{40}$)', 'fix: this thing')",[190659]
"('URIish.java', 'org.eclipse.jgit.transport.URIish', '<init>', '^(file):([\\\\/](?![\\\\/])((?:[A-Za-z]:)?[\\\\/]?(?:(?:[^\\\\/]+[\\\\/]+)*[^\\\\/]+[\\\\/]*)))$', 'ssh://me:wtf@1.2.3.4:80/D:\\x')",[122476]
"('ChangeIdUtil.java', 'org.eclipse.jgit.util.ChangeIdUtil', 'indexOfFirstFooterLine', '(^[a-zA-Z0-9-]+:(?!//).*$)', 'Signed-off-by: J Committer <jc@example.com>')","[188386, 189543, 189827, 190008]"
"('Description.java', 'org.junit.runner.Description', 'methodAndClassNamePatternGroupOrDefault', '([\\s\\S]*)\\((.*)\\)', 'org.eclipse.jgit.notes.NoteMapTest')","[40608, 193771]"
"('URIish.java', 'org.eclipse.jgit.transport.URIish', '<init>', '^(file):([\\\\/](?![\\\\/])((?:[A-Za-z]:)?[\\\\/]?(?:(?:[^\\\\/]+[\\\\/]+)*[^\\\\/]+[\\\\/]*)))$', 'ssh+git://l usr\\example.com@example.com:1234//abc')",[139496]
"('URIish.java', 'org.eclipse.jgit.transport.URIish', '<init>', '^([\\\\/]?((?:[A-Za-z]:)?[\\\\/]?(?:(?:[^\\\\/]+[\\\\/]+)*[^\\\\/]+[\\\\/]*)))$', '/tmp/jgit_test_2418995499675152019_tmp/tmp_6807375775614242287.git')",[116483]
"('URIish.java', 'org.eclipse.jgit.transport.URIish', '<init>', '^([a-z][a-z0-9+-]+)://(?:(?:([^/:@]+)(?::([^\\\\/]+))?@)?((?:[^\\\\/:]+)|(?:\\[[0-9a-f:]+\\]))(?::(\\d+))?((?:/~(?:[^\\\\/]+))?[\\\\/]))?(.+)?$', 'https://lusr\\example:wtf@1.2.3.4:1234/D:/x')",[134413]
"('URIish.java', 'org.eclipse.jgit.transport.URIish', '<init>', '^([a-z][a-z0-9+-]+)://(?:(?:([^/:@]+)(?::([^\\\\/]+))?@)?((?:[^\\\\/:]+)|(?:\\[[0-9a-f:]+\\]))(?::(\\d+))?((?:/~(?:[^\\\\/]+))?[\\\\/]))?(.+)?$', 'ssh://me@[::1]//')","[149041, 149225]"
"('URIish.java', 'org.eclipse.jgit.transport.URIish', '<init>', '^(file):([\\\\/](?![\\\\/])((?:[A-Za-z]:)?[\\\\/]?(?:(?:[^\\\\/]+[\\\\/]+)*[^\\\\/]+[\\\\/]*)))$', 'ssh://l usr\\example.com:wtf@[::1]:1234/D:/x')",[123718]
"('Description.java', 'org.junit.runner.Description', 'methodAndClassNamePatternGroupOrDefault', '([\\s\\S]*)\\((.*)\\)', 'testValidTreeSorting1(org.eclipse.jgit.lib.ObjectCheckerTest)')","[25727, 84010]"
"('Description.java', 'org.junit.runner.Description', 'methodAndClassNamePatternGroupOrDefault', '([\\s\\S]*)\\((.*)\\)', 'testBuildOneFile_FinishWriteCommit(org.eclipse.jgit.dircache.DirCacheBuilderTest)')","[12024, 70590]"
"('URIish.java', 'org.eclipse.jgit.transport.URIish', '<init>', '^(file):([\\\\/](?![\\\\/])((?:[A-Za-z]:)?[\\\\/]?(?:(?:[^\\\\/]+[\\\\/]+)*[^\\\\/]+[\\\\/]*)))$', 'file:///tmp/jgit_test_8177535101453731082_tmp/tmp_7915404363960575743')","[197264, 197321]"
"('Description.java', 'org.junit.runner.Description', 'methodAndClassNamePatternGroupOrDefault', '([\\s\\S]*)\\((.*)\\)', 'testCleanWithDryRunAndNoIgnore(org.eclipse.jgit.api.CleanCommandTest)')","[46408, 103964]"
"('URIish.java', 'org.eclipse.jgit.transport.URIish', '<init>', '^(file):([\\\\/](?![\\\\/])((?:[A-Za-z]:)?[\\\\/]?(?:(?:[^\\\\/]+[\\\\/]+)*[^\\\\/]+[\\\\/]*)))$', 'ssh+git://me:wtf@[::1]:80//')",[126018]
"('Description.java', 'org.junit.runner.Description', 'methodAndClassNamePatternGroupOrDefault', '([\\s\\S]*)\\((.*)\\)', 'testParseEncoding_Accept_Latin_One_AsISO8859_1(org.eclipse.jgit.util.RawParseUtilsTest)')","[36847, 94724]"
"('Description.java', 'org.junit.runner.Description', 'methodAndClassNamePatternGroupOrDefault', '([\\s\\S]*)\\((.*)\\)', 'test000_openrepo_default_workDirSet(org.eclipse.jgit.internal.storage.file.T0003_BasicTest)')","[54427, 111708]"
"('URIish.java', 'org.eclipse.jgit.transport.URIish', '<init>', '^([a-z][a-z0-9+-]+)://(?:(?:([^/:@]+)(?::([^\\\\/]+))?@)?((?:[^\\\\/:]+)|(?:\\[[0-9a-f:]+\\]))(?::(\\d+))?((?:/~(?:[^\\\\/]+))?[\\\\/]))?(.+)?$', 'ssh+git://me:wtf@example.com:1234/D:\\x')",[125259]
"('Description.java', 'org.junit.runner.Description', 'methodAndClassNamePatternGroupOrDefault', '([\\s\\S]*)\\((.*)\\)', 'test001_ReadBareKey(org.eclipse.jgit.lib.ConfigTest)')","[28134, 86452]"
"('URIish.java', 'org.eclipse.jgit.transport.URIish', '<init>', '^(file):([\\\\/](?![\\\\/])((?:[A-Za-z]:)?[\\\\/]?(?:(?:[^\\\\/]+[\\\\/]+)*[^\\\\/]+[\\\\/]*)))$', 'ssh+git://me:wtf@example.com:80/D:\\x')",[125420]
"('URIish.java', 'org.eclipse.jgit.transport.URIish', '<init>', '^([a-z][a-z0-9+-]+)://(?:(?:([^/:@]+)(?::([^\\\\/]+))?@)?((?:[^\\\\/:]+)|(?:\\[[0-9a-f:]+\\]))(?::(\\d+))?((?:/~(?:[^\\\\/]+))?[\\\\/]))?(.+)?$', 'ssh+git://l usr\\example.com@example.com:80/D:/x')",[139749]
"('URIish.java', 'org.eclipse.jgit.transport.URIish', '<init>', '^([a-z][a-z0-9+-]+)://(?:(?:([^/:@]+)(?::([^\\\\/]+))?@)?((?:[^\\\\/:]+)|(?:\\[[0-9a-f:]+\\]))(?::(\\d+))?((?:/~(?:[^\\\\/]+))?[\\\\/]))?(.+)?$', 'http://me@1.2.3.4:80/D:\\x')",[142371]
"('Description.java', 'org.junit.runner.Description', 'methodAndClassNamePatternGroupOrDefault', '([\\s\\S]*)\\((.*)\\)', 'resolveTwoLevelHigherRelativeUrl(org.eclipse.jgit.submodule.SubmoduleInitTest)')","[19397, 77916]"
"('Description.java', 'org.junit.runner.Description', 'methodAndClassNamePatternGroupOrDefault', '([\\s\\S]*)\\((.*)\\)', 'testDegenerate_InsertStart(org.eclipse.jgit.diff.HistogramDiffTest)')","[15562, 73978]"
"('URIish.java', 'org.eclipse.jgit.transport.URIish', '<init>', '^(?:([^/:@]+)(?::([^\\\\/]+))?@)?([^\\\\/:]{2,}):([\\\\/](?:(?:[^\\\\/]+[\\\\/]+)*[^\\\\/]+[\\\\/]*))$', '/abc/')",[179999]
"('Description.java', 'org.junit.runner.Description', 'methodAndClassNamePatternGroupOrDefault', '([\\s\\S]*)\\((.*)\\)', 'testCheckoutWithNonDeletedFiles(org.eclipse.jgit.api.CheckoutCommandTest)')","[43274, 100840]"
"('URIish.java', 'org.eclipse.jgit.transport.URIish', '<init>', '^(file):([\\\\/](?![\\\\/])((?:[A-Za-z]:)?[\\\\/]?(?:(?:[^\\\\/]+[\\\\/]+)*[^\\\\/]+[\\\\/]*)))$', 'file:/tmp/jgit_test_2508525924116804520_tmp/tmp_206281197134566940/.git/')",[182937]
"('Description.java', 'org.junit.runner.Description', 'methodAndClassNamePatternGroupOrDefault', '([\\s\\S]*)\\((.*)\\)', 'testFileInFolderCommittedDeletedCommittedIgnoredComparedWithInitialCommit(org.eclipse.jgit.treewalk.filter.IndexDiffFilterTest)')","[30506, 88718]"
"('Description.java', 'org.junit.runner.Description', 'methodAndClassNamePatternGroupOrDefault', '([\\s\\S]*)\\((.*)\\)', 'testReadEmpty(org.eclipse.jgit.internal.storage.dfs.DfsOutputStreamTest)')","[52454, 109860]"
"('Description.java', 'org.junit.runner.Description', 'methodAndClassNamePatternGroupOrDefault', '([\\s\\S]*)\\((.*)\\)', 'org.eclipse.jgit.revwalk.RevWalkFollowFilterTest')","[6729, 181352]"
"('Description.java', 'org.junit.runner.Description', 'methodAndClassNamePatternGroupOrDefault', '([\\s\\S]*)\\((.*)\\)', 'testReadACK_NAK(org.eclipse.jgit.transport.PacketLineInTest)')","[3758, 62846]"
"('Description.java', 'org.junit.runner.Description', 'methodAndClassNamePatternGroupOrDefault', '([\\s\\S]*)\\((.*)\\)', 'testCreateFileHeader_Delete(org.eclipse.jgit.diff.DiffFormatterTest)')","[14125, 72592]"
"('URIish.java', 'org.eclipse.jgit.transport.URIish', '<init>', '^([a-z][a-z0-9+-]+)://(?:(?:([^/:@]+)(?::([^\\\\/]+))?@)?((?:[^\\\\/:]+)|(?:\\[[0-9a-f:]+\\]))(?::(\\d+))?((?:/~(?:[^\\\\/]+))?[\\\\/]))?(.+)?$', 'https://me@1.2.3.4//')","[158609, 158793]"
"('Description.java', 'org.junit.runner.Description', 'methodAndClassNamePatternGroupOrDefault', '([\\s\\S]*)\\((.*)\\)', 'testThreeEntries_Seek2(org.eclipse.jgit.treewalk.CanonicalTreeParserTest)')","[29815, 88014]"
"('URIish.java', 'org.eclipse.jgit.transport.URIish', '<init>', '^([a-z][a-z0-9+-]+)://(?:(?:([^/:@]+)(?::([^\\\\/]+))?@)?((?:[^\\\\/:]+)|(?:\\[[0-9a-f:]+\\]))(?::(\\d+))?((?:/~(?:[^\\\\/]+))?[\\\\/]))?(.+)?$', 'ssh+git://me@example.com/D:\\x')","[151755, 151939]"
"('Description.java', 'org.junit.runner.Description', 'methodAndClassNamePatternGroupOrDefault', '([\\s\\S]*)\\((.*)\\)', 'testTwoGroupsCase0(org.eclipse.jgit.fnmatch.FileNameMatcherTest)')","[17446, 75892]"
"('Description.java', 'org.junit.runner.Description', 'methodAndClassNamePatternGroupOrDefault', '([\\s\\S]*)\\((.*)\\)', 'testCloneRepositoryWithBranch(org.eclipse.jgit.api.CloneCommandTest)')","[42398, 99982]"
"('Description.java', 'org.junit.runner.Description', 'methodAndClassNamePatternGroupOrDefault', '([\\s\\S]*)\\((.*)\\)', 'dropWithNoStashedCommits(org.eclipse.jgit.api.StashDropCommandTest)')","[52080, 109508]"
"('Description.java', 'org.junit.runner.Description', 'methodAndClassNamePatternGroupOrDefault', '([\\s\\S]*)\\((.*)\\)', 'org.eclipse.jgit.treewalk.filter.IndexDiffFilterTest')","[30128, 186208]"
"('Description.java', 'org.junit.runner.Description', 'methodAndClassNamePatternGroupOrDefault', '([\\s\\S]*)\\((.*)\\)', 'testParse_NoMessage(org.eclipse.jgit.revwalk.RevCommitParseTest)')","[8763, 67532]"
"('Description.java', 'org.junit.runner.Description', 'methodAndClassNamePatternGroupOrDefault', '([\\s\\S]*)\\((.*)\\)', 'testEditSameNoteDifferentContent(org.eclipse.jgit.notes.NoteMapMergerTest)')","[40942, 98596]"
"('URIish.java', 'org.eclipse.jgit.transport.URIish', '<init>', '^(file):([\\\\/](?![\\\\/])((?:[A-Za-z]:)?[\\\\/]?(?:(?:[^\\\\/]+[\\\\/]+)*[^\\\\/]+[\\\\/]*)))$', 'ssh+git://1.2.3.4/D:\\x')","[165348, 165532, 166452, 166636, 167556, 167740]"
"('URIish.java', 'org.eclipse.jgit.transport.URIish', '<init>', '^([a-z][a-z0-9+-]+)://(?:(?:([^/:@]+)(?::([^\\\\/]+))?@)?((?:[^\\\\/:]+)|(?:\\[[0-9a-f:]+\\]))(?::(\\d+))?((?:/~(?:[^\\\\/]+))?[\\\\/]))?(.+)?$', 'http://lusr\\example@example.com:1234//')",[143889]
"('URIish.java', 'org.eclipse.jgit.transport.URIish', '<init>', '^([a-z][a-z0-9+-]+)://(?:(?:([^/:@]+)(?::([^\\\\/]+))?@)?((?:[^\\\\/:]+)|(?:\\[[0-9a-f:]+\\]))(?::(\\d+))?((?:/~(?:[^\\\\/]+))?[\\\\/]))?(.+)?$', 'https://me:wtf@example.com:1234//abc')",[131791]
"('URIish.java', 'org.eclipse.jgit.transport.URIish', '<init>', '^([a-z][a-z0-9+-]+)://(?:(?:([^/:@]+)(?::([^\\\\/]+))?@)?((?:[^\\\\/:]+)|(?:\\[[0-9a-f:]+\\]))(?::(\\d+))?((?:/~(?:[^\\\\/]+))?[\\\\/]))?(.+)?$', 'ssh://l usr\\example.com:wtf@1.2.3.4:1234/D:/x')",[123373]
"('URIish.java', 'org.eclipse.jgit.transport.URIish', '<init>', '^(file):([\\\\/](?![\\\\/])((?:[A-Za-z]:)?[\\\\/]?(?:(?:[^\\\\/]+[\\\\/]+)*[^\\\\/]+[\\\\/]*)))$', 'http://lusr\\example:wtf@example.com:1234/D:/x')",[130710]
"('Description.java', 'org.junit.runner.Description', 'methodAndClassNamePatternGroupOrDefault', '([\\s\\S]*)\\((.*)\\)', 'testEntryFileMode(org.eclipse.jgit.treewalk.AbstractTreeIteratorTest)')","[29218, 87508]"
"('Description.java', 'org.junit.runner.Description', 'methodAndClassNamePatternGroupOrDefault', '([\\s\\S]*)\\((.*)\\)', 'testUpdateOnBackgroundThreads(org.eclipse.jgit.lib.ThreadSafeProgressMonitorTest)')","[20473, 78884]"
"('URIish.java', 'org.eclipse.jgit.transport.URIish', '<init>', '^([a-z][a-z0-9+-]+)://(?:(?:([^/:@]+)(?::([^\\\\/]+))?@)?((?:[^\\\\/:]+)|(?:\\[[0-9a-f:]+\\]))(?::(\\d+))?((?:/~(?:[^\\\\/]+))?[\\\\/]))?(.+)?$', 'ssh+git://lusr\\example@example.com:80/D:\\x')",[140899]
"('Description.java', 'org.junit.runner.Description', 'methodAndClassNamePatternGroupOrDefault', '([\\s\\S]*)\\((.*)\\)', 'testParse_implicit_mixed_encoded(org.eclipse.jgit.revwalk.RevCommitParseTest)')","[8721, 67488]"
"('URIish.java', 'org.eclipse.jgit.transport.URIish', '<init>', '^(file):([\\\\/](?![\\\\/])((?:[A-Za-z]:)?[\\\\/]?(?:(?:[^\\\\/]+[\\\\/]+)*[^\\\\/]+[\\\\/]*)))$', 'https://l usr\\example.com@[::1]:1234//abc')",[146856]
"('Description.java', 'org.junit.runner.Description', 'methodAndClassNamePatternGroupOrDefault', '([\\s\\S]*)\\((.*)\\)', 'testPathsResetOnUnbornBranch(org.eclipse.jgit.api.ResetCommandTest)')","[42564, 100136]"
"('URIish.java', 'org.eclipse.jgit.transport.URIish', '<init>', '^(file):([\\\\/](?![\\\\/])((?:[A-Za-z]:)?[\\\\/]?(?:(?:[^\\\\/]+[\\\\/]+)*[^\\\\/]+[\\\\/]*)))$', 'ssh+git://l usr\\example.com@[::1]:80//abc')",[140416]
"('Description.java', 'org.junit.runner.Description', 'methodAndClassNamePatternGroupOrDefault', '([\\s\\S]*)\\((.*)\\)', 'testDequote_SoleSq(org.eclipse.jgit.util.QuotedStringBourneUserPathStyleTest)')","[38639, 96462]"
"('Description.java', 'org.junit.runner.Description', 'methodAndClassNamePatternGroupOrDefault', '([\\s\\S]*)\\((.*)\\)', 'testParse_AddNoNewline(org.eclipse.jgit.patch.PatchTest)')","[39780, 97518]"
"('Description.java', 'org.junit.runner.Description', 'methodAndClassNamePatternGroupOrDefault', '([\\s\\S]*)\\((.*)\\)', 'testFourLineBlanks(org.eclipse.jgit.util.RawParseUtils_LineMapTest)')","[34807, 92766]"
"('URIish.java', 'org.eclipse.jgit.transport.URIish', '<init>', '^(file):([\\\\/](?![\\\\/])((?:[A-Za-z]:)?[\\\\/]?(?:(?:[^\\\\/]+[\\\\/]+)*[^\\\\/]+[\\\\/]*)))$', 'https://lusr\\example@[::1]:80//')",[148098]
"('URIish.java', 'org.eclipse.jgit.transport.URIish', '<init>', '^(file):([\\\\/](?![\\\\/])((?:[A-Za-z]:)?[\\\\/]?(?:(?:[^\\\\/]+[\\\\/]+)*[^\\\\/]+[\\\\/]*)))$', 'https://lusr\\example:wtf@[::1]:80/D:/x')",[134942]
"('URIish.java', 'org.eclipse.jgit.transport.URIish', '<init>', '^([a-z][a-z0-9+-]+)://(?:(?:([^/:@]+)(?::([^\\\\/]+))?@)?((?:[^\\\\/:]+)|(?:\\[[0-9a-f:]+\\]))(?::(\\d+))?((?:/~(?:[^\\\\/]+))?[\\\\/]))?(.+)?$', 'https://me:wtf@example.com:1234/D:/x')",[131837]
"('URIish.java', 'org.eclipse.jgit.transport.URIish', '<init>', '^([a-z][a-z0-9+-]+)://(?:(?:([^/:@]+)(?::([^\\\\/]+))?@)?((?:[^\\\\/:]+)|(?:\\[[0-9a-f:]+\\]))(?::(\\d+))?((?:/~(?:[^\\\\/]+))?[\\\\/]))?(.+)?$', 'http://l usr\\example.com@1.2.3.4:80//abc')",[143383]
"('ChangeIdUtil.java', 'org.eclipse.jgit.util.ChangeIdUtil', 'indexOfChangeId', '(^Change-Id: *I[a-f0-9]{40}$)', 'Issue: 42')",[188851]
"('URIish.java', 'org.eclipse.jgit.transport.URIish', '<init>', '^([a-z][a-z0-9+-]+)://(?:(?:([^/:@]+)(?::([^\\\\/]+))?@)?((?:[^\\\\/:]+)|(?:\\[[0-9a-f:]+\\]))(?::(\\d+))?((?:/~(?:[^\\\\/]+))?[\\\\/]))?(.+)?$', 'https://me@[::1]//')","[158977, 159161]"
"('Description.java', 'org.junit.runner.Description', 'methodAndClassNamePatternGroupOrDefault', '([\\s\\S]*)\\((.*)\\)', 'testDequote_NamedEscapes(org.eclipse.jgit.util.QuotedStringBourneUserPathStyleTest)')","[38681, 96506]"
"('Description.java', 'org.junit.runner.Description', 'methodAndClassNamePatternGroupOrDefault', '([\\s\\S]*)\\((.*)\\)', 'testInexactRename_OnePair(org.eclipse.jgit.diff.RenameDetectorTest)')","[12898, 71426]"
"('Description.java', 'org.junit.runner.Description', 'methodAndClassNamePatternGroupOrDefault', '([\\s\\S]*)\\((.*)\\)', 'testThreeEntries_Seek3IsEOF(org.eclipse.jgit.treewalk.CanonicalTreeParserTest)')","[29899, 88102]"
"('URIish.java', 'org.eclipse.jgit.transport.URIish', '<init>', '^([a-z][a-z0-9+-]+)://(?:(?:([^/:@]+)(?::([^\\\\/]+))?@)?((?:[^\\\\/:]+)|(?:\\[[0-9a-f:]+\\]))(?::(\\d+))?((?:/~(?:[^\\\\/]+))?[\\\\/]))?(.+)?$', 'ssh+git://l usr\\example.com@1.2.3.4:80//')",[140025]
"('Description.java', 'org.junit.runner.Description', 'methodAndClassNamePatternGroupOrDefault', '([\\s\\S]*)\\((.*)\\)', 'testInvalidCommitInvalidParent5(org.eclipse.jgit.lib.ObjectCheckerTest)')","[25979, 84274]"
"('Description.java', 'org.junit.runner.Description', 'methodAndClassNamePatternGroupOrDefault', '([\\s\\S]*)\\((.*)\\)', 'testCacheOpen(org.eclipse.jgit.lib.RepositoryCacheTest)')","[20910, 79302]"
"('Description.java', 'org.junit.runner.Description', 'methodAndClassNamePatternGroupOrDefault', '([\\s\\S]*)\\((.*)\\)', 'testGetRefs_LooseSortedCorrectly(org.eclipse.jgit.internal.storage.file.RefDirectoryTest)')","[58375, 115426]"
"('Description.java', 'org.junit.runner.Description', 'methodAndClassNamePatternGroupOrDefault', '([\\s\\S]*)\\((.*)\\)', 'testMarkSupported(org.eclipse.jgit.util.io.UnionInputStreamTest)')","[33080, 91116]"
"('URIish.java', 'org.eclipse.jgit.transport.URIish', '<init>', '^(file):([\\\\/](?![\\\\/])((?:[A-Za-z]:)?[\\\\/]?(?:(?:[^\\\\/]+[\\\\/]+)*[^\\\\/]+[\\\\/]*)))$', 'https://me@[::1]:80/D:\\x')",[146028]
"('Description.java', 'org.junit.runner.Description', 'methodAndClassNamePatternGroupOrDefault', '([\\s\\S]*)\\((.*)\\)', 'testParseGitFileName_FooSpBar(org.eclipse.jgit.patch.FileHeaderTest)')","[39593, 97342]"
"('Description.java', 'org.junit.runner.Description', 'methodAndClassNamePatternGroupOrDefault', '([\\s\\S]*)\\((.*)\\)', 'org.eclipse.jgit.transport.RemoteConfigTest')","[511, 120935]"
"('URIish.java', 'org.eclipse.jgit.transport.URIish', '<init>', '^(file):([\\\\/](?![\\\\/])((?:[A-Za-z]:)?[\\\\/]?(?:(?:[^\\\\/]+[\\\\/]+)*[^\\\\/]+[\\\\/]*)))$', 'file:///tmp/jgit_test_3985275255865057253_tmp/tmp_2235568733568716339/.git/')","[209062, 209120]"
"('URIish.java', 'org.eclipse.jgit.transport.URIish', '<init>', '^(?:([^/:@]+)(?::([^\\\\/]+))?@)?([^\\\\/:]{2,}):([\\\\/](?:(?:[^\\\\/]+[\\\\/]+)*[^\\\\/]+[\\\\/]*))$', '/tmp/jgit_test_5706102738936117736_tmp/tmp_5370206506562001691')","[201409, 201549, 201698]"
"('URIish.java', 'org.eclipse.jgit.transport.URIish', '<init>', '^(file):([\\\\/](?![\\\\/])((?:[A-Za-z]:)?[\\\\/]?(?:(?:[^\\\\/]+[\\\\/]+)*[^\\\\/]+[\\\\/]*)))$', 'http://me:wtf@1.2.3.4:80//')",[128962]
"('Description.java', 'org.junit.runner.Description', 'methodAndClassNamePatternGroupOrDefault', '([\\s\\S]*)\\((.*)\\)', 'testModifySettings(org.eclipse.jgit.internal.storage.file.PackWriterTest)')","[55173, 112390]"
"('URIish.java', 'org.eclipse.jgit.transport.URIish', '<init>', '^([a-z][a-z0-9+-]+)://(?:(?:([^/:@]+)(?::([^\\\\/]+))?@)?((?:[^\\\\/:]+)|(?:\\[[0-9a-f:]+\\]))(?::(\\d+))?((?:/~(?:[^\\\\/]+))?[\\\\/]))?(.+)?$', 'http://me:wtf@example.com:1234/D:\\x')",[128571]
"('URIish.java', 'org.eclipse.jgit.transport.URIish', '<init>', '^(file):([\\\\/](?![\\\\/])((?:[A-Za-z]:)?[\\\\/]?(?:(?:[^\\\\/]+[\\\\/]+)*[^\\\\/]+[\\\\/]*)))$', 'http://l usr\\example.com:wtf@[::1]:80//abc')",[130480]
"('Description.java', 'org.junit.runner.Description', 'methodAndClassNamePatternGroupOrDefault', '([\\s\\S]*)\\((.*)\\)', 'testWriteEmptyPack2(org.eclipse.jgit.internal.storage.file.PackWriterTest)')","[54900, 112104]"
"('ChangeIdUtil.java', 'org.eclipse.jgit.util.ChangeIdUtil', 'indexOfChangeId', '(^Change-Id: *I[a-f0-9]{40}$)', ' Change-Id:  I3b7e4e16b503ce00f07ba6ad01d97a356dad7701')",[187603]
"('URIish.java', 'org.eclipse.jgit.transport.URIish', '<init>', '^([a-z][a-z0-9+-]+)://(?:(?:([^/:@]+)(?::([^\\\\/]+))?@)?((?:[^\\\\/:]+)|(?:\\[[0-9a-f:]+\\]))(?::(\\d+))?((?:/~(?:[^\\\\/]+))?[\\\\/]))?(.+)?$', 'file:///tmp/jgit_test_3938080632504476553_tmp/tmp_8192742226712825917/testCloneRepositoryWithNestedSubmodules1/.git/')","[196947, 197135]"
"('Description.java', 'org.junit.runner.Description', 'methodAndClassNamePatternGroupOrDefault', '([\\s\\S]*)\\((.*)\\)', 'testTrivialTwoWay_concurrentSubtreeChange(org.eclipse.jgit.merge.SimpleMergeTest)')","[9971, 68698]"
"('Description.java', 'org.junit.runner.Description', 'methodAndClassNamePatternGroupOrDefault', '([\\s\\S]*)\\((.*)\\)', 'org.eclipse.jgit.lib.DirCacheCheckoutTest')","[22975, 184113]"
"('Description.java', 'org.junit.runner.Description', 'methodAndClassNamePatternGroupOrDefault', '([\\s\\S]*)\\((.*)\\)', 'testConflictingMergeFailsDueToDirtyWorktree(org.eclipse.jgit.api.MergeCommandTest)')","[44446, 102028]"
"('URIish.java', 'org.eclipse.jgit.transport.URIish', '<init>', '^(file):([\\\\/](?![\\\\/])((?:[A-Za-z]:)?[\\\\/]?(?:(?:[^\\\\/]+[\\\\/]+)*[^\\\\/]+[\\\\/]*)))$', 'ssh://me@[::1]:1234/D:\\x')",[135908]
"('URIish.java', 'org.eclipse.jgit.transport.URIish', 'getHumanishName', '^([\\\\/]?((?:[A-Za-z]:)?[\\\\/]?(?:(?:[^\\\\/]+[\\\\/]+)*[^\\\\/]+[\\\\/]*)))$', '/abc.git')",[175238]
"('Description.java', 'org.junit.runner.Description', 'methodAndClassNamePatternGroupOrDefault', '([\\s\\S]*)\\((.*)\\)', 'testCloneRepositoryWithMultipleHeadBranches(org.eclipse.jgit.api.CloneCommandTest)')","[42461, 100048]"
"('Description.java', 'org.junit.runner.Description', 'methodAndClassNamePatternGroupOrDefault', '([\\s\\S]*)\\((.*)\\)', 'testValidTreeSorting8(org.eclipse.jgit.lib.ObjectCheckerTest)')","[25874, 84164]"
"('URIish.java', 'org.eclipse.jgit.transport.URIish', '<init>', '^([a-z][a-z0-9+-]+)://(?:(?:([^/:@]+)(?::([^\\\\/]+))?@)?((?:[^\\\\/:]+)|(?:\\[[0-9a-f:]+\\]))(?::(\\d+))?((?:/~(?:[^\\\\/]+))?[\\\\/]))?(.+)?$', '/tmp/jgit_test_4775797511223514619_tmp/tmp_1589472581924050678/.git')","[207023, 207161]"
"('URIish.java', 'org.eclipse.jgit.transport.URIish', '<init>', '^([a-z][a-z0-9+-]+)://(?:(?:([^/:@]+)(?::([^\\\\/]+))?@)?((?:[^\\\\/:]+)|(?:\\[[0-9a-f:]+\\]))(?::(\\d+))?((?:/~(?:[^\\\\/]+))?[\\\\/]))?(.+)?$', 'https://me@example.com//abc')","[158287, 158471]"
"('ChangeIdUtil.java', 'org.eclipse.jgit.util.ChangeIdUtil', 'indexOfFirstFooterLine', '(^[a-zA-Z0-9-]+:(?!//).*$)', 'e')",[191464]
"('Description.java', 'org.junit.runner.Description', 'methodAndClassNamePatternGroupOrDefault', '([\\s\\S]*)\\((.*)\\)', 'testPullConflict(org.eclipse.jgit.api.PullCommandWithRebaseTest)')","[42898, 100466]"
"('Description.java', 'org.junit.runner.Description', 'methodAndClassNamePatternGroupOrDefault', '([\\s\\S]*)\\((.*)\\)', 'testAbbreviateOnEmptyRepository(org.eclipse.jgit.internal.storage.file.AbbreviationTest)')","[57436, 114502]"
"('URIish.java', 'org.eclipse.jgit.transport.URIish', '<init>', '^(file):([\\\\/](?![\\\\/])((?:[A-Za-z]:)?[\\\\/]?(?:(?:[^\\\\/]+[\\\\/]+)*[^\\\\/]+[\\\\/]*)))$', '/.git')",[174893]
"('URIish.java', 'org.eclipse.jgit.transport.URIish', '<init>', '^([a-z][a-z0-9+-]+)://(?:(?:([^/:@]+)(?::([^\\\\/]+))?@)?((?:[^\\\\/:]+)|(?:\\[[0-9a-f:]+\\]))(?::(\\d+))?((?:/~(?:[^\\\\/]+))?[\\\\/]))?(.+)?$', 'ssh://lusr\\example@[::1]/D:\\x')","[151387, 151571]"
"('Description.java', 'org.junit.runner.Description', 'methodAndClassNamePatternGroupOrDefault', '([\\s\\S]*)\\((.*)\\)', 'testOnlyOption_f1_12_b(org.eclipse.jgit.api.CommitOnlyTest)')","[49935, 107440]"
"('Description.java', 'org.junit.runner.Description', 'methodAndClassNamePatternGroupOrDefault', '([\\s\\S]*)\\((.*)\\)', 'crissCrossMerge(org.eclipse.jgit.merge.RecursiveMergerTest)')","[10345, 69050]"
"('Description.java', 'org.junit.runner.Description', 'methodAndClassNamePatternGroupOrDefault', '([\\s\\S]*)\\((.*)\\)', 'testAddA1Sub(org.eclipse.jgit.api.ApplyCommandTest)')","[46677, 104206]"
"('URIish.java', 'org.eclipse.jgit.transport.URIish', '<init>', '^([a-z][a-z0-9+-]+)://(?:(?:([^/:@]+)(?::([^\\\\/]+))?@)?((?:[^\\\\/:]+)|(?:\\[[0-9a-f:]+\\]))(?::(\\d+))?((?:/~(?:[^\\\\/]+))?[\\\\/]))?(.+)?$', 'http://l usr\\example.com:wtf@[::1]:1234//')",[130273]
"('Description.java', 'org.junit.runner.Description', 'methodAndClassNamePatternGroupOrDefault', '([\\s\\S]*)\\((.*)\\)', 'testDeleteVsModify(org.eclipse.jgit.merge.MergeAlgorithmTest)')","[10263, 68984]"
"('Description.java', 'org.junit.runner.Description', 'methodAndClassNamePatternGroupOrDefault', '([\\s\\S]*)\\((.*)\\)', 'testTwoCommitTwoTreeTwoBlob(org.eclipse.jgit.revwalk.ObjectWalkTest)')","[5775, 64760]"
"('URIish.java', 'org.eclipse.jgit.transport.URIish', '<init>', '^([\\\\/]?((?:[A-Za-z]:)?[\\\\/]?(?:(?:[^\\\\/]+[\\\\/]+)*[^\\\\/]+[\\\\/]*)))$', '/~some/p ath')","[177354, 177469]"
"('Description.java', 'org.junit.runner.Description', 'methodAndClassNamePatternGroupOrDefault', '([\\s\\S]*)\\((.*)\\)', 'testReadAllIncludingSymrefs(org.eclipse.jgit.lib.RefTest)')","[22809, 81172]"
"('Description.java', 'org.junit.runner.Description', 'methodAndClassNamePatternGroupOrDefault', '([\\s\\S]*)\\((.*)\\)', 'testFilter_NOT_ALL(org.eclipse.jgit.revwalk.RevWalkFilterTest)')","[8221, 67004]"
"('Description.java', 'org.junit.runner.Description', 'methodAndClassNamePatternGroupOrDefault', '([\\s\\S]*)\\((.*)\\)', 'testMaliciousAbsoluteWindowsPath1OnUnix(org.eclipse.jgit.lib.DirCacheCheckoutMaliciousPathTest)')","[21853, 80270]"
"('Description.java', 'org.junit.runner.Description', 'methodAndClassNamePatternGroupOrDefault', '([\\s\\S]*)\\((.*)\\)', 'testTwoGroupsCase3(org.eclipse.jgit.fnmatch.FileNameMatcherTest)')","[17509, 75958]"
"('URIish.java', 'org.eclipse.jgit.transport.URIish', '<init>', '^(file):([\\\\/](?![\\\\/])((?:[A-Za-z]:)?[\\\\/]?(?:(?:[^\\\\/]+[\\\\/]+)*[^\\\\/]+[\\\\/]*)))$', 'file:///tmp/jgit_test_753789441204020985_tmp/tmp_1630386788301939729')","[198193, 198250, 198307, 198364]"
"('Description.java', 'org.junit.runner.Description', 'methodAndClassNamePatternGroupOrDefault', '([\\s\\S]*)\\((.*)\\)', 'testAddToFrontOfList(org.eclipse.jgit.util.RefListTest)')","[35099, 93052]"
"('URIish.java', 'org.eclipse.jgit.transport.URIish', '<init>', '^([a-z][a-z0-9+-]+)://(?:(?:([^/:@]+)(?::([^\\\\/]+))?@)?((?:[^\\\\/:]+)|(?:\\[[0-9a-f:]+\\]))(?::(\\d+))?((?:/~(?:[^\\\\/]+))?[\\\\/]))?(.+)?$', 'https://lusr\\example:wtf@1.2.3.4:80//')",[134505]
"('URIish.java', 'org.eclipse.jgit.transport.URIish', '<init>', '^(?:([^/:@]+)(?::([^\\\\/]+))?@)?((?:[^\\\\/:]+)|(?:\\[[0-9a-f:]+\\])):((?:(?:/~(?:[^\\\\/]+))[\\\\/])?(?:(?:[^\\\\/]+[\\\\/]+)*[^\\\\/]+[\\\\/]*))$', '/abc.git')",[175169]
"('Description.java', 'org.junit.runner.Description', 'methodAndClassNamePatternGroupOrDefault', '([\\s\\S]*)\\((.*)\\)', 'testTrivialTwoWay_conflict(org.eclipse.jgit.merge.SimpleMergeTest)')","[9908, 68632]"
"('Description.java', 'org.junit.runner.Description', 'methodAndClassNamePatternGroupOrDefault', '([\\s\\S]*)\\((.*)\\)', 'nameExact(org.eclipse.jgit.api.NameRevCommandTest)')","[51750, 109222]"
"('Description.java', 'org.junit.runner.Description', 'methodAndClassNamePatternGroupOrDefault', '([\\s\\S]*)\\((.*)\\)', 'testInsert_SingleOp(org.eclipse.jgit.internal.storage.pack.DeltaStreamTest)')","[52683, 110080]"
"('Description.java', 'org.junit.runner.Description', 'methodAndClassNamePatternGroupOrDefault', '([\\s\\S]*)\\((.*)\\)', 'org.eclipse.jgit.events.ConfigChangeEventTest')","[38805, 193447]"
"('URIish.java', 'org.eclipse.jgit.transport.URIish', '<init>', '^([a-z][a-z0-9+-]+)://(?:(?:([^/:@]+)(?::([^\\\\/]+))?@)?((?:[^\\\\/:]+)|(?:\\[[0-9a-f:]+\\]))(?::(\\d+))?((?:/~(?:[^\\\\/]+))?[\\\\/]))?(.+)?$', 'http://l usr\\example.com@[::1]:80//abc')",[143751]
"('URIish.java', 'org.eclipse.jgit.transport.URIish', '<init>', '^([a-z][a-z0-9+-]+)://(?:(?:([^/:@]+)(?::([^\\\\/]+))?@)?((?:[^\\\\/:]+)|(?:\\[[0-9a-f:]+\\]))(?::(\\d+))?((?:/~(?:[^\\\\/]+))?[\\\\/]))?(.+)?$', 'https://1.2.3.4/D:/x')","[171949, 172133, 173053, 173237, 174157, 174341]"
"('Description.java', 'org.junit.runner.Description', 'methodAndClassNamePatternGroupOrDefault', '([\\s\\S]*)\\((.*)\\)', 'indexWithGitmodules(org.eclipse.jgit.submodule.SubmoduleWalkTest)')","[19790, 78268]"
"('URIish.java', 'org.eclipse.jgit.transport.URIish', '<init>', '^([a-z][a-z0-9+-]+)://(?:(?:([^/:@]+)(?::([^\\\\/]+))?@)?((?:[^\\\\/:]+)|(?:\\[[0-9a-f:]+\\]))(?::(\\d+))?((?:/~(?:[^\\\\/]+))?[\\\\/]))?(.+)?$', 'https://me:wtf@[::1]:80//')",[132665]
"('Description.java', 'org.junit.runner.Description', 'methodAndClassNamePatternGroupOrDefault', '([\\s\\S]*)\\((.*)\\)', 'testSeparatorParsing(org.eclipse.jgit.transport.OpenSshConfigTest)')","[2502, 61570]"
"('Description.java', 'org.junit.runner.Description', 'methodAndClassNamePatternGroupOrDefault', '([\\s\\S]*)\\((.*)\\)', 'multipleEdits(org.eclipse.jgit.api.StashCreateCommandTest)')","[41795, 99410]"
"('Description.java', 'org.junit.runner.Description', 'methodAndClassNamePatternGroupOrDefault', '([\\s\\S]*)\\((.*)\\)', 'testHardResetOnTag(org.eclipse.jgit.api.ResetCommandTest)')","[42816, 100400]"
"('Description.java', 'org.junit.runner.Description', 'methodAndClassNamePatternGroupOrDefault', '([\\s\\S]*)\\((.*)\\)', 'shouldListAddedFileBetweenTwoCommits(org.eclipse.jgit.diff.DiffEntryTest)')","[13896, 72372]"
"('URIish.java', 'org.eclipse.jgit.transport.URIish', '<init>', '^([a-z][a-z0-9+-]+)://(?:(?:([^/:@]+)(?::([^\\\\/]+))?@)?((?:[^\\\\/:]+)|(?:\\[[0-9a-f:]+\\]))(?::(\\d+))?((?:/~(?:[^\\\\/]+))?[\\\\/]))?(.+)?$', 'http://me:wtf@example.com:80//')",[128617]
"('Description.java', 'org.junit.runner.Description', 'methodAndClassNamePatternGroupOrDefault', '([\\s\\S]*)\\((.*)\\)', 'testReset(org.eclipse.jgit.dircache.DirCacheIteratorTest)')","[12398, 70942]"
"('URIish.java', 'org.eclipse.jgit.transport.URIish', '<init>', '^([a-z][a-z0-9+-]+)://(?:(?:([^/:@]+)(?::([^\\\\/]+))?@)?((?:[^\\\\/:]+)|(?:\\[[0-9a-f:]+\\]))(?::(\\d+))?((?:/~(?:[^\\\\/]+))?[\\\\/]))?(.+)?$', 'ssh+git://lusr\\example@[::1]:1234//')",[141313]
"('Description.java', 'org.junit.runner.Description', 'methodAndClassNamePatternGroupOrDefault', '([\\s\\S]*)\\((.*)\\)', 'testTrackingRefUpdateDisabled(org.eclipse.jgit.transport.PushProcessTest)')","[5048, 64078]"
"('Description.java', 'org.junit.runner.Description', 'methodAndClassNamePatternGroupOrDefault', '([\\s\\S]*)\\((.*)\\)', 'test003_lookupCompressedObject(org.eclipse.jgit.internal.storage.file.T0004_PackReaderTest)')","[53200, 110542]"
"('Description.java', 'org.junit.runner.Description', 'methodAndClassNamePatternGroupOrDefault', '([\\s\\S]*)\\((.*)\\)', 'testCRC32(org.eclipse.jgit.internal.storage.file.PackIndexV2Test)')","[53509, 110806]"
"('URIish.java', 'org.eclipse.jgit.transport.URIish', '<init>', '^(file):([\\\\/](?![\\\\/])((?:[A-Za-z]:)?[\\\\/]?(?:(?:[^\\\\/]+[\\\\/]+)*[^\\\\/]+[\\\\/]*)))$', 'https://lusr\\example:wtf@[::1]:80//')",[134850]
"('URIish.java', 'org.eclipse.jgit.transport.URIish', '<init>', '^(file):([\\\\/](?![\\\\/])((?:[A-Za-z]:)?[\\\\/]?(?:(?:[^\\\\/]+[\\\\/]+)*[^\\\\/]+[\\\\/]*)))$', 'ssh://lusr\\example:wtf@example.com:1234//')",[123994]
"('Description.java', 'org.junit.runner.Description', 'methodAndClassNamePatternGroupOrDefault', '([\\s\\S]*)\\((.*)\\)', 'testCleanWithPaths(org.eclipse.jgit.api.CleanCommandTest)')","[46303, 103854]"
"('URIish.java', 'org.eclipse.jgit.transport.URIish', '<init>', '^([a-z][a-z0-9+-]+)://(?:(?:([^/:@]+)(?::([^\\\\/]+))?@)?((?:[^\\\\/:]+)|(?:\\[[0-9a-f:]+\\]))(?::(\\d+))?((?:/~(?:[^\\\\/]+))?[\\\\/]))?(.+)?$', 'ssh+git://lusr\\example@example.com:1234/D:/x')",[140669]
"('Description.java', 'org.junit.runner.Description', 'methodAndClassNamePatternGroupOrDefault', '([\\s\\S]*)\\((.*)\\)', 'testWriteLine1(org.eclipse.jgit.diff.RawTextTest)')","[14186, 72636]"
"('URIish.java', 'org.eclipse.jgit.transport.URIish', '<init>', '^([a-z][a-z0-9+-]+)://(?:(?:([^/:@]+)(?::([^\\\\/]+))?@)?((?:[^\\\\/:]+)|(?:\\[[0-9a-f:]+\\]))(?::(\\d+))?((?:/~(?:[^\\\\/]+))?[\\\\/]))?(.+)?$', 'http://l usr\\example.com@[::1]//abc')","[156815, 156999]"
"('URIish.java', 'org.eclipse.jgit.transport.URIish', '<init>', '^(file):([\\\\/](?![\\\\/])((?:[A-Za-z]:)?[\\\\/]?(?:(?:[^\\\\/]+[\\\\/]+)*[^\\\\/]+[\\\\/]*)))$', 'ssh+git://lusr\\example:wtf@example.com:1234//abc')",[127352]
"('URIish.java', 'org.eclipse.jgit.transport.URIish', '<init>', '^(?:([^/:@]+)(?::([^\\\\/]+))?@)?((?:[^\\\\/:]+)|(?:\\[[0-9a-f:]+\\])):((?:(?:/~(?:[^\\\\/]+))[\\\\/])?(?:(?:[^\\\\/]+[\\\\/]+)*[^\\\\/]+[\\\\/]*))$', '/tmp/jgit_test_104863573169670211_tmp/tmp_8401616164607390426')","[200405, 200540, 200688, 200838]"
"('Description.java', 'org.junit.runner.Description', 'methodAndClassNamePatternGroupOrDefault', '([\\s\\S]*)\\((.*)\\)', 'testInvalidTagInvalidTaggerHeader1(org.eclipse.jgit.lib.ObjectCheckerTest)')","[26210, 84516]"
"('URIish.java', 'org.eclipse.jgit.transport.URIish', '<init>', '^([a-z][a-z0-9+-]+)://(?:(?:([^/:@]+)(?::([^\\\\/]+))?@)?((?:[^\\\\/:]+)|(?:\\[[0-9a-f:]+\\]))(?::(\\d+))?((?:/~(?:[^\\\\/]+))?[\\\\/]))?(.+)?$', 'ssh+git://l usr\\example.com:wtf@[::1]:80//abc')",[127191]
"('URIish.java', 'org.eclipse.jgit.transport.URIish', 'getHumanishName', '^([\\\\/]?((?:[A-Za-z]:)?[\\\\/]?(?:(?:[^\\\\/]+[\\\\/]+)*[^\\\\/]+[\\\\/]*)))$', '/a/b/c/')",[176411]
"('Description.java', 'org.junit.runner.Description', 'methodAndClassNamePatternGroupOrDefault', '([\\s\\S]*)\\((.*)\\)', 'testInvalidCommitInvalidTree1(org.eclipse.jgit.lib.ObjectCheckerTest)')","[25370, 83636]"
"('URIish.java', 'org.eclipse.jgit.transport.URIish', '<init>', '^(file):([\\\\/](?![\\\\/])((?:[A-Za-z]:)?[\\\\/]?(?:(?:[^\\\\/]+[\\\\/]+)*[^\\\\/]+[\\\\/]*)))$', 'ssh+git://l usr\\example.com@1.2.3.4:80/D:/x')",[140094]
"('URIish.java', 'org.eclipse.jgit.transport.URIish', '<init>', '^([a-z][a-z0-9+-]+)://(?:(?:([^/:@]+)(?::([^\\\\/]+))?@)?((?:[^\\\\/:]+)|(?:\\[[0-9a-f:]+\\]))(?::(\\d+))?((?:/~(?:[^\\\\/]+))?[\\\\/]))?(.+)?$', 'ssh://[::1]//abc')","[162335, 162519, 163439, 163623, 164543, 164727]"
"('Description.java', 'org.junit.runner.Description', 'methodAndClassNamePatternGroupOrDefault', '([\\s\\S]*)\\((.*)\\)', 'testFillToUnknownCommit(org.eclipse.jgit.revwalk.RevCommitListTest)')","[7498, 66366]"
"('Description.java', 'org.junit.runner.Description', 'methodAndClassNamePatternGroupOrDefault', '([\\s\\S]*)\\((.*)\\)', 'testGetSlashSlashDotGitSlashHumanishName(org.eclipse.jgit.transport.URIishTest)')","[1139, 60162]"
"('Description.java', 'org.junit.runner.Description', 'methodAndClassNamePatternGroupOrDefault', '([\\s\\S]*)\\((.*)\\)', 'testCheckoutCommit(org.eclipse.jgit.api.CheckoutCommandTest)')","[43085, 100642]"
"('Description.java', 'org.junit.runner.Description', 'methodAndClassNamePatternGroupOrDefault', '([\\s\\S]*)\\((.*)\\)', 'testSmallObjectLoader(org.eclipse.jgit.lib.ObjectLoaderTest)')","[24603, 82932]"
"('URIish.java', 'org.eclipse.jgit.transport.URIish', '<init>', '^(file):([\\\\/](?![\\\\/])((?:[A-Za-z]:)?[\\\\/]?(?:(?:[^\\\\/]+[\\\\/]+)*[^\\\\/]+[\\\\/]*)))$', 'ssh+git://lusr\\example:wtf@1.2.3.4:1234//abc')",[127720]
"('Description.java', 'org.junit.runner.Description', 'methodAndClassNamePatternGroupOrDefault', '([\\s\\S]*)\\((.*)\\)', 'testInvalidTreeTruncatedInName(org.eclipse.jgit.lib.ObjectCheckerTest)')","[26840, 85176]"
"('URIish.java', 'org.eclipse.jgit.transport.URIish', '<init>', '^([a-z][a-z0-9+-]+)://(?:(?:([^/:@]+)(?::([^\\\\/]+))?@)?((?:[^\\\\/:]+)|(?:\\[[0-9a-f:]+\\]))(?::(\\d+))?((?:/~(?:[^\\\\/]+))?[\\\\/]))?(.+)?$', 'ssh+git://l usr\\example.com@1.2.3.4:1234//')",[139841]
"('Description.java', 'org.junit.runner.Description', 'methodAndClassNamePatternGroupOrDefault', '([\\s\\S]*)\\((.*)\\)', 'crissCrossMerge_nonmergeable(org.eclipse.jgit.merge.RecursiveMergerTest)')","[10324, 69028]"
"('URIish.java', 'org.eclipse.jgit.transport.URIish', '<init>', '^([a-z][a-z0-9+-]+)://(?:(?:([^/:@]+)(?::([^\\\\/]+))?@)?((?:[^\\\\/:]+)|(?:\\[[0-9a-f:]+\\]))(?::(\\d+))?((?:/~(?:[^\\\\/]+))?[\\\\/]))?(.+)?$', 'ssh+git://lusr\\example@[::1]:80//abc')",[141543]
"('Description.java', 'org.junit.runner.Description', 'methodAndClassNamePatternGroupOrDefault', '([\\s\\S]*)\\((.*)\\)', 'testMaliciousPathDotDot(org.eclipse.jgit.lib.DirCacheCheckoutMaliciousPathTest)')","[21349, 79742]"
"('URIish.java', 'org.eclipse.jgit.transport.URIish', '<init>', '^(file):([\\\\/](?![\\\\/])((?:[A-Za-z]:)?[\\\\/]?(?:(?:[^\\\\/]+[\\\\/]+)*[^\\\\/]+[\\\\/]*)))$', 'https://lusr\\example@1.2.3.4:80/D:\\x')",[147868]
"('Description.java', 'org.junit.runner.Description', 'methodAndClassNamePatternGroupOrDefault', '([\\s\\S]*)\\((.*)\\)', 'testOnlyOption_f1_6_f2_14_e(org.eclipse.jgit.api.CommitOnlyTest)')","[49683, 107176]"
"('URIish.java', 'org.eclipse.jgit.transport.URIish', '<init>', '^(?:([^/:@]+)(?::([^\\\\/]+))?@)?([^\\\\/:]{2,}):([\\\\/](?:(?:[^\\\\/]+[\\\\/]+)*[^\\\\/]+[\\\\/]*))$', '/tmp/jgit_test_2763785820419085746_tmp/tmp_961093183525182339')","[204179, 204319, 204468]"
"('URIish.java', 'org.eclipse.jgit.transport.URIish', '<init>', '^(file):([\\\\/](?![\\\\/])((?:[A-Za-z]:)?[\\\\/]?(?:(?:[^\\\\/]+[\\\\/]+)*[^\\\\/]+[\\\\/]*)))$', 'ssh://me@1.2.3.4:1234//abc')",[135448]
"('Description.java', 'org.junit.runner.Description', 'methodAndClassNamePatternGroupOrDefault', '([\\s\\S]*)\\((.*)\\)', 'org.eclipse.jgit.api.RebaseCommandTest')","[44856, 202511]"
"('Description.java', 'org.junit.runner.Description', 'methodAndClassNamePatternGroupOrDefault', '([\\s\\S]*)\\((.*)\\)', 'testEqualsWithWhitespace(org.eclipse.jgit.diff.RawTextIgnoreTrailingWhitespaceTest)')","[13585, 72086]"
"('Description.java', 'org.junit.runner.Description', 'methodAndClassNamePatternGroupOrDefault', '([\\s\\S]*)\\((.*)\\)', 'testUsingHiddenDeltaBaseFails(org.eclipse.jgit.transport.ReceivePackAdvertiseRefsHookTest)')","[366, 59392]"
"('URIish.java', 'org.eclipse.jgit.transport.URIish', '<init>', '^([a-z][a-z0-9+-]+)://(?:(?:([^/:@]+)(?::([^\\\\/]+))?@)?((?:[^\\\\/:]+)|(?:\\[[0-9a-f:]+\\]))(?::(\\d+))?((?:/~(?:[^\\\\/]+))?[\\\\/]))?(.+)?$', 'http://1.2.3.4//')","[168545, 168729, 169649, 169833, 170753, 170937]"
"('Description.java', 'org.junit.runner.Description', 'methodAndClassNamePatternGroupOrDefault', '([\\s\\S]*)\\((.*)\\)', 'test006_ReadUglyConfig(org.eclipse.jgit.internal.storage.file.T0003_BasicTest)')","[54007, 111268]"
"('Description.java', 'org.junit.runner.Description', 'methodAndClassNamePatternGroupOrDefault', '([\\s\\S]*)\\((.*)\\)', 'testReadACK_ACK1(org.eclipse.jgit.transport.PacketLineInTest)')","[3485, 62560]"
"('URIish.java', 'org.eclipse.jgit.transport.URIish', '<init>', '^(file):([\\\\/](?![\\\\/])((?:[A-Za-z]:)?[\\\\/]?(?:(?:[^\\\\/]+[\\\\/]+)*[^\\\\/]+[\\\\/]*)))$', 'http://me@[::1]:1234//')",[142394]
"('Description.java', 'org.junit.runner.Description', 'methodAndClassNamePatternGroupOrDefault', '([\\s\\S]*)\\((.*)\\)', 'org.eclipse.jgit.lib.BranchTrackingStatusTest')","[23897, 184140]"
"('Description.java', 'org.junit.runner.Description', 'methodAndClassNamePatternGroupOrDefault', '([\\s\\S]*)\\((.*)\\)', 'testBareCloneRepository(org.eclipse.jgit.api.CloneCommandTest)')","[42314, 99894]"
"('Description.java', 'org.junit.runner.Description', 'methodAndClassNamePatternGroupOrDefault', '([\\s\\S]*)\\((.*)\\)', 'testFileInFolderCommittedDeletedCommittedComparedWithInitialCommit(org.eclipse.jgit.treewalk.filter.IndexDiffFilterTest)')","[30443, 88652]"
"('Description.java', 'org.junit.runner.Description', 'methodAndClassNamePatternGroupOrDefault', '([\\s\\S]*)\\((.*)\\)', 'testSaveNoTags(org.eclipse.jgit.transport.RemoteConfigTest)')","[784, 59810]"
"('Description.java', 'org.junit.runner.Description', 'methodAndClassNamePatternGroupOrDefault', '([\\s\\S]*)\\((.*)\\)', 'testUpdateWorkingDirectoryFromIndex2(org.eclipse.jgit.api.PathCheckoutCommandTest)')","[47074, 104602]"
"('Description.java', 'org.junit.runner.Description', 'methodAndClassNamePatternGroupOrDefault', '([\\s\\S]*)\\((.*)\\)', 'testInvalidCommitNoAuthor(org.eclipse.jgit.lib.ObjectCheckerTest)')","[26609, 84934]"
"('URIish.java', 'org.eclipse.jgit.transport.URIish', '<init>', '^(file):([\\\\/](?![\\\\/])((?:[A-Za-z]:)?[\\\\/]?(?:(?:[^\\\\/]+[\\\\/]+)*[^\\\\/]+[\\\\/]*)))$', 'ssh://me:wtf@1.2.3.4:1234//')",[122154]
"('URIish.java', 'org.eclipse.jgit.transport.URIish', '<init>', '^([a-z][a-z0-9+-]+)://(?:(?:([^/:@]+)(?::([^\\\\/]+))?@)?((?:[^\\\\/:]+)|(?:\\[[0-9a-f:]+\\]))(?::(\\d+))?((?:/~(?:[^\\\\/]+))?[\\\\/]))?(.+)?$', 'git://example.com/here')",[184439]
"('Description.java', 'org.junit.runner.Description', 'methodAndClassNamePatternGroupOrDefault', '([\\s\\S]*)\\((.*)\\)', 'testValidTag(org.eclipse.jgit.lib.ObjectCheckerTest)')","[25643, 83922]"
"('URIish.java', 'org.eclipse.jgit.transport.URIish', '<init>', '^([a-z][a-z0-9+-]+)://(?:(?:([^/:@]+)(?::([^\\\\/]+))?@)?((?:[^\\\\/:]+)|(?:\\[[0-9a-f:]+\\]))(?::(\\d+))?((?:/~(?:[^\\\\/]+))?[\\\\/]))?(.+)?$', 'http://l usr\\example.com:wtf@example.com:1234/D:/x')",[129629]
"('Description.java', 'org.junit.runner.Description', 'methodAndClassNamePatternGroupOrDefault', '([\\s\\S]*)\\((.*)\\)', 'org.eclipse.jgit.api.GarbageCollectCommandTest')","[41358, 194420]"
"('Description.java', 'org.junit.runner.Description', 'methodAndClassNamePatternGroupOrDefault', '([\\s\\S]*)\\((.*)\\)', 'testEmpty(org.eclipse.jgit.util.io.EolCanonicalizingInputStreamTest)')","[32872, 90918]"
"('Description.java', 'org.junit.runner.Description', 'methodAndClassNamePatternGroupOrDefault', '([\\s\\S]*)\\((.*)\\)', 'testOnlyOption_f1_4_a(org.eclipse.jgit.api.CommitOnlyTest)')","[48759, 106208]"
"('Description.java', 'org.junit.runner.Description', 'methodAndClassNamePatternGroupOrDefault', '([\\s\\S]*)\\((.*)\\)', 'testFillTo0(org.eclipse.jgit.util.IntListTest)')","[36015, 93932]"
"('URIish.java', 'org.eclipse.jgit.transport.URIish', '<init>', '^(file):([\\\\/](?![\\\\/])((?:[A-Za-z]:)?[\\\\/]?(?:(?:[^\\\\/]+[\\\\/]+)*[^\\\\/]+[\\\\/]*)))$', 'http://me:wtf@1.2.3.4:1234//')",[128778]
"('URIish.java', 'org.eclipse.jgit.transport.URIish', '<init>', '^([a-z][a-z0-9+-]+)://(?:(?:([^/:@]+)(?::([^\\\\/]+))?@)?((?:[^\\\\/:]+)|(?:\\[[0-9a-f:]+\\]))(?::(\\d+))?((?:/~(?:[^\\\\/]+))?[\\\\/]))?(.+)?$', 'https://me@1.2.3.4:1234//abc')",[145407]
"('Description.java', 'org.junit.runner.Description', 'methodAndClassNamePatternGroupOrDefault', '([\\s\\S]*)\\((.*)\\)', 'testValidTree4(org.eclipse.jgit.lib.ObjectCheckerTest)')","[25580, 83856]"
"('Description.java', 'org.junit.runner.Description', 'methodAndClassNamePatternGroupOrDefault', '([\\s\\S]*)\\((.*)\\)', 'org.eclipse.jgit.api.InitCommandTest')","[48091, 207494]"
"('Description.java', 'org.junit.runner.Description', 'methodAndClassNamePatternGroupOrDefault', '([\\s\\S]*)\\((.*)\\)', 'testGitProtoWindows(org.eclipse.jgit.transport.URIishTest)')","[2105, 61174]"
"('URIish.java', 'org.eclipse.jgit.transport.URIish', '<init>', '^([a-z][a-z0-9+-]+)://(?:(?:([^/:@]+)(?::([^\\\\/]+))?@)?((?:[^\\\\/:]+)|(?:\\[[0-9a-f:]+\\]))(?::(\\d+))?((?:/~(?:[^\\\\/]+))?[\\\\/]))?(.+)?$', 'http://lusr\\example@1.2.3.4//')","[157505, 157689]"
"('Description.java', 'org.junit.runner.Description', 'methodAndClassNamePatternGroupOrDefault', '([\\s\\S]*)\\((.*)\\)', 'testEmptyIfRootIsEmpty(org.eclipse.jgit.treewalk.FileTreeIteratorTest)')","[28821, 87112]"
"('Description.java', 'org.junit.runner.Description', 'methodAndClassNamePatternGroupOrDefault', '([\\s\\S]*)\\((.*)\\)', 'testClear(org.eclipse.jgit.revwalk.LIFORevQueueTest)')","[6544, 65486]"
"('URIish.java', 'org.eclipse.jgit.transport.URIish', '<init>', '^(file):([\\\\/](?![\\\\/])((?:[A-Za-z]:)?[\\\\/]?(?:(?:[^\\\\/]+[\\\\/]+)*[^\\\\/]+[\\\\/]*)))$', 'http://me@[::1]:80/D:\\x')",[142716]
"('URIish.java', 'org.eclipse.jgit.transport.URIish', '<init>', '^(file):([\\\\/](?![\\\\/])((?:[A-Za-z]:)?[\\\\/]?(?:(?:[^\\\\/]+[\\\\/]+)*[^\\\\/]+[\\\\/]*)))$', 'ssh+git://me@1.2.3.4//abc')","[152008, 152192]"
"('URIish.java', 'org.eclipse.jgit.transport.URIish', '<init>', '^(file):([\\\\/](?![\\\\/])((?:[A-Za-z]:)?[\\\\/]?(?:(?:[^\\\\/]+[\\\\/]+)*[^\\\\/]+[\\\\/]*)))$', 'http://me:wtf@1.2.3.4:1234/D:\\x')",[128916]
"('URIish.java', 'org.eclipse.jgit.transport.URIish', '<init>', '^([a-z][a-z0-9+-]+)://(?:(?:([^/:@]+)(?::([^\\\\/]+))?@)?((?:[^\\\\/:]+)|(?:\\[[0-9a-f:]+\\]))(?::(\\d+))?((?:/~(?:[^\\\\/]+))?[\\\\/]))?(.+)?$', 'ssh+git://l usr\\example.com:wtf@[::1]:80/D:\\x')",[127283]
"('Description.java', 'org.junit.runner.Description', 'methodAndClassNamePatternGroupOrDefault', '([\\s\\S]*)\\((.*)\\)', 'testEqualsWithWhitespace(org.eclipse.jgit.diff.RawTextIgnoreWhitespaceChangeTest)')","[14999, 73428]"
"('Description.java', 'org.junit.runner.Description', 'methodAndClassNamePatternGroupOrDefault', '([\\s\\S]*)\\((.*)\\)', 'test001_toString(org.eclipse.jgit.lib.ObjectIdTest)')","[28657, 86980]"
"('Description.java', 'org.junit.runner.Description', 'methodAndClassNamePatternGroupOrDefault', '([\\s\\S]*)\\((.*)\\)', 'testRebaseInteractiveMixedSquashAndFixup(org.eclipse.jgit.api.RebaseCommandTest)')","[45990, 103546]"
"('Description.java', 'org.junit.runner.Description', 'methodAndClassNamePatternGroupOrDefault', '([\\s\\S]*)\\((.*)\\)', 'org.eclipse.jgit.diff.SimilarityIndexTest')","[14812, 182721]"
"('URIish.java', 'org.eclipse.jgit.transport.URIish', '<init>', '^(file):([\\\\/](?![\\\\/])((?:[A-Za-z]:)?[\\\\/]?(?:(?:[^\\\\/]+[\\\\/]+)*[^\\\\/]+[\\\\/]*)))$', 'file:///tmp/jgit_test_595161962047339319_tmp/tmp_2747174633401967210')","[198877, 198934, 198992]"
"('Description.java', 'org.junit.runner.Description', 'methodAndClassNamePatternGroupOrDefault', '([\\s\\S]*)\\((.*)\\)', 'testSpecialGroupCase2(org.eclipse.jgit.fnmatch.FileNameMatcherTest)')","[16144, 74528]"
"('URIish.java', 'org.eclipse.jgit.transport.URIish', '<init>', '^(?:([^/:@]+)(?::([^\\\\/]+))?@)?((?:[^\\\\/:]+)|(?:\\[[0-9a-f:]+\\])):((?:(?:/~(?:[^\\\\/]+))[\\\\/])?(?:(?:[^\\\\/]+[\\\\/]+)*[^\\\\/]+[\\\\/]*))$', 'D:/m y')","[178182, 178297]"
"('Description.java', 'org.junit.runner.Description', 'methodAndClassNamePatternGroupOrDefault', '([\\s\\S]*)\\((.*)\\)', 'testSquashFastForward(org.eclipse.jgit.api.MergeCommandTest)')","[44362, 101940]"
"('URIish.java', 'org.eclipse.jgit.transport.URIish', '<init>', '^([a-z][a-z0-9+-]+)://(?:(?:([^/:@]+)(?::([^\\\\/]+))?@)?((?:[^\\\\/:]+)|(?:\\[[0-9a-f:]+\\]))(?::(\\d+))?((?:/~(?:[^\\\\/]+))?[\\\\/]))?(.+)?$', 'http://lusr\\example:wtf@1.2.3.4:80/D:\\x')",[131331]
"('Description.java', 'org.junit.runner.Description', 'methodAndClassNamePatternGroupOrDefault', '([\\s\\S]*)\\((.*)\\)', 'org.eclipse.jgit.transport.RefSpecTest')","[2605, 180126]"
"('URIish.java', 'org.eclipse.jgit.transport.URIish', '<init>', '^(file):([\\\\/](?![\\\\/])((?:[A-Za-z]:)?[\\\\/]?(?:(?:[^\\\\/]+[\\\\/]+)*[^\\\\/]+[\\\\/]*)))$', 'http://l usr\\example.com:wtf@[::1]:1234//abc')",[130296]
"('Description.java', 'org.junit.runner.Description', 'methodAndClassNamePatternGroupOrDefault', '([\\s\\S]*)\\((.*)\\)', 'testAddAllFromOtherList(org.eclipse.jgit.util.BlockListTest)')","[35391, 93338]"
"('URIish.java', 'org.eclipse.jgit.transport.URIish', '<init>', '^(file):([\\\\/](?![\\\\/])((?:[A-Za-z]:)?[\\\\/]?(?:(?:[^\\\\/]+[\\\\/]+)*[^\\\\/]+[\\\\/]*)))$', 'file:/tmp/jgit_test_168010054415911302_tmp/tmp_8136967476595711276/.git/')",[201958]
"('URIish.java', 'org.eclipse.jgit.transport.URIish', '<init>', '^([a-z][a-z0-9+-]+)://(?:(?:([^/:@]+)(?::([^\\\\/]+))?@)?((?:[^\\\\/:]+)|(?:\\[[0-9a-f:]+\\]))(?::(\\d+))?((?:/~(?:[^\\\\/]+))?[\\\\/]))?(.+)?$', 'http://l usr\\example.com:wtf@1.2.3.4:80/D:/x')",[130181]
"('Description.java', 'org.junit.runner.Description', 'methodAndClassNamePatternGroupOrDefault', '([\\s\\S]*)\\((.*)\\)', 'testSetForceUpdate(org.eclipse.jgit.transport.RefSpecTest)')","[3004, 62076]"
"('URIish.java', 'org.eclipse.jgit.transport.URIish', '<init>', '^([a-z][a-z0-9+-]+)://(?:(?:([^/:@]+)(?::([^\\\\/]+))?@)?((?:[^\\\\/:]+)|(?:\\[[0-9a-f:]+\\]))(?::(\\d+))?((?:/~(?:[^\\\\/]+))?[\\\\/]))?(.+)?$', 'https://example.com/D:\\x')","[171627, 171811, 172731, 172915, 173835, 174019]"
"('URIish.java', 'org.eclipse.jgit.transport.URIish', '<init>', '^(file):([\\\\/](?![\\\\/])((?:[A-Za-z]:)?[\\\\/]?(?:(?:[^\\\\/]+[\\\\/]+)*[^\\\\/]+[\\\\/]*)))$', 'example.com:/some/p ath')","[178458, 178550]"
"('URIish.java', 'org.eclipse.jgit.transport.URIish', '<init>', '^([a-z][a-z0-9+-]+)://(?:(?:([^/:@]+)(?::([^\\\\/]+))?@)?((?:[^\\\\/:]+)|(?:\\[[0-9a-f:]+\\]))(?::(\\d+))?((?:/~(?:[^\\\\/]+))?[\\\\/]))?(.+)?$', 'ssh+git://l usr\\example.com:wtf@example.com:1234/D:\\x')",[126363]
"('Description.java', 'org.junit.runner.Description', 'methodAndClassNamePatternGroupOrDefault', '([\\s\\S]*)\\((.*)\\)', 'testCreateFileHeaderWithoutIndexLine(org.eclipse.jgit.diff.DiffFormatterTest)')","[14062, 72526]"
"('Description.java', 'org.junit.runner.Description', 'methodAndClassNamePatternGroupOrDefault', '([\\s\\S]*)\\((.*)\\)', 'stashChangeInANewSubdirectory(org.eclipse.jgit.api.StashApplyCommandTest)')","[51269, 108738]"
"('Description.java', 'org.junit.runner.Description', 'methodAndClassNamePatternGroupOrDefault', '([\\s\\S]*)\\((.*)\\)', 'org.eclipse.jgit.diff.EditListTest')","[13419, 182532]"
"('URIish.java', 'org.eclipse.jgit.transport.URIish', '<init>', '^(file):([\\\\/](?![\\\\/])((?:[A-Za-z]:)?[\\\\/]?(?:(?:[^\\\\/]+[\\\\/]+)*[^\\\\/]+[\\\\/]*)))$', 'ssh://lusr\\example@example.com//abc')","[150536, 150720]"
"('Description.java', 'org.junit.runner.Description', 'methodAndClassNamePatternGroupOrDefault', '([\\s\\S]*)\\((.*)\\)', 'testEdit_LinuxBug(org.eclipse.jgit.diff.HistogramDiffTest)')","[15268, 73670]"
"('URIish.java', 'org.eclipse.jgit.transport.URIish', '<init>', '^([a-z][a-z0-9+-]+)://(?:(?:([^/:@]+)(?::([^\\\\/]+))?@)?((?:[^\\\\/:]+)|(?:\\[[0-9a-f:]+\\]))(?::(\\d+))?((?:/~(?:[^\\\\/]+))?[\\\\/]))?(.+)?$', 'ssh://l usr\\example.com:wtf@1.2.3.4:80//abc')",[123511]
"('Description.java', 'org.junit.runner.Description', 'methodAndClassNamePatternGroupOrDefault', '([\\s\\S]*)\\((.*)\\)', 'renameBranchSingleConfigValue(org.eclipse.jgit.api.RenameBranchCommandTest)')","[50958, 108452]"
"('URIish.java', 'org.eclipse.jgit.transport.URIish', '<init>', '^([a-z][a-z0-9+-]+)://(?:(?:([^/:@]+)(?::([^\\\\/]+))?@)?((?:[^\\\\/:]+)|(?:\\[[0-9a-f:]+\\]))(?::(\\d+))?((?:/~(?:[^\\\\/]+))?[\\\\/]))?(.+)?$', 'ssh://l usr\\example.com:wtf@example.com:80/D:/x')",[123189]
"('Description.java', 'org.junit.runner.Description', 'methodAndClassNamePatternGroupOrDefault', '([\\s\\S]*)\\((.*)\\)', 'testHasChangeidWithReplacementInLastLineNoLineBreak(org.eclipse.jgit.util.ChangeIdUtilTest)')","[38057, 95912]"
"('Description.java', 'org.junit.runner.Description', 'methodAndClassNamePatternGroupOrDefault', '([\\s\\S]*)\\((.*)\\)', 'testMixedGroupCase0(org.eclipse.jgit.fnmatch.FileNameMatcherTest)')","[16459, 74858]"
"('URIish.java', 'org.eclipse.jgit.transport.URIish', '<init>', '^([a-z][a-z0-9+-]+)://(?:(?:([^/:@]+)(?::([^\\\\/]+))?@)?((?:[^\\\\/:]+)|(?:\\[[0-9a-f:]+\\]))(?::(\\d+))?((?:/~(?:[^\\\\/]+))?[\\\\/]))?(.+)?$', 'ssh+git://lusr\\example@[::1]:1234/D:\\x')",[141451]
"('URIish.java', 'org.eclipse.jgit.transport.URIish', '<init>', '^([a-z][a-z0-9+-]+)://(?:(?:([^/:@]+)(?::([^\\\\/]+))?@)?((?:[^\\\\/:]+)|(?:\\[[0-9a-f:]+\\]))(?::(\\d+))?((?:/~(?:[^\\\\/]+))?[\\\\/]))?(.+)?$', 'ssh+git://me@example.com:1234/D:/x')",[138461]
"('Description.java', 'org.junit.runner.Description', 'methodAndClassNamePatternGroupOrDefault', '([\\s\\S]*)\\((.*)\\)', 'testSkip(org.eclipse.jgit.internal.storage.pack.DeltaStreamTest)')","[52515, 109904]"
"('Description.java', 'org.junit.runner.Description', 'methodAndClassNamePatternGroupOrDefault', '([\\s\\S]*)\\((.*)\\)', 'testInvalidCommitInvalidAuthor2(org.eclipse.jgit.lib.ObjectCheckerTest)')","[26042, 84340]"
"('Description.java', 'org.junit.runner.Description', 'methodAndClassNamePatternGroupOrDefault', '([\\s\\S]*)\\((.*)\\)', 'repositoryWithNoSubmoduleRepository(org.eclipse.jgit.submodule.SubmoduleStatusTest)')","[20122, 78576]"
"('URIish.java', 'org.eclipse.jgit.transport.URIish', '<init>', '^([a-z][a-z0-9+-]+)://(?:(?:([^/:@]+)(?::([^\\\\/]+))?@)?((?:[^\\\\/:]+)|(?:\\[[0-9a-f:]+\\]))(?::(\\d+))?((?:/~(?:[^\\\\/]+))?[\\\\/]))?(.+)?$', 'https://l usr\\example.com@[::1]:80/D:/x')",[147109]
"('Description.java', 'org.junit.runner.Description', 'methodAndClassNamePatternGroupOrDefault', '([\\s\\S]*)\\((.*)\\)', 'testWriteEmptyUnlock_RealIndex(org.eclipse.jgit.dircache.DirCacheBasicTest)')","[11280, 69930]"
"('Description.java', 'org.junit.runner.Description', 'methodAndClassNamePatternGroupOrDefault', '([\\s\\S]*)\\((.*)\\)', 'testFileModeMerge(org.eclipse.jgit.api.MergeCommandTest)')","[43921, 101478]"
"('Description.java', 'org.junit.runner.Description', 'methodAndClassNamePatternGroupOrDefault', '([\\s\\S]*)\\((.*)\\)', 'singleInsteadOf(org.eclipse.jgit.transport.RemoteConfigTest)')","[931, 59964]"
"('Description.java', 'org.junit.runner.Description', 'methodAndClassNamePatternGroupOrDefault', '([\\s\\S]*)\\((.*)\\)', 'test003_equals(org.eclipse.jgit.lib.ObjectIdTest)')","[28699, 87024]"
"('Description.java', 'org.junit.runner.Description', 'methodAndClassNamePatternGroupOrDefault', '([\\s\\S]*)\\((.*)\\)', 'testInvalidTagNoType2(org.eclipse.jgit.lib.ObjectCheckerTest)')","[26777, 85110]"
"('Description.java', 'org.junit.runner.Description', 'methodAndClassNamePatternGroupOrDefault', '([\\s\\S]*)\\((.*)\\)', 'testInvalidTagNoType4(org.eclipse.jgit.lib.ObjectCheckerTest)')","[26819, 85154]"
"('Description.java', 'org.junit.runner.Description', 'methodAndClassNamePatternGroupOrDefault', '([\\s\\S]*)\\((.*)\\)', 'emptyStashReflog(org.eclipse.jgit.api.StashListCommandTest)')","[47177, 104690]"
"('URIish.java', 'org.eclipse.jgit.transport.URIish', '<init>', '^([a-z][a-z0-9+-]+)://(?:(?:([^/:@]+)(?::([^\\\\/]+))?@)?((?:[^\\\\/:]+)|(?:\\[[0-9a-f:]+\\]))(?::(\\d+))?((?:/~(?:[^\\\\/]+))?[\\\\/]))?(.+)?$', 'https://lusr\\example@example.com//')","[160449, 160633]"
"('URIish.java', 'org.eclipse.jgit.transport.URIish', '<init>', '^(file):([\\\\/](?![\\\\/])((?:[A-Za-z]:)?[\\\\/]?(?:(?:[^\\\\/]+[\\\\/]+)*[^\\\\/]+[\\\\/]*)))$', 'ssh+git://lusr\\example@[::1]/D:/x')","[154630, 154814]"
"('Description.java', 'org.junit.runner.Description', 'methodAndClassNamePatternGroupOrDefault', '([\\s\\S]*)\\((.*)\\)', 'testCompareEntriesOffsetsWithFindOffsets(org.eclipse.jgit.internal.storage.file.PackIndexV1Test)')","[54572, 111840]"
"('Description.java', 'org.junit.runner.Description', 'methodAndClassNamePatternGroupOrDefault', '([\\s\\S]*)\\((.*)\\)', 'testEncode_SimpleASCII(org.eclipse.jgit.lib.ConstantsEncodingTest)')","[24042, 82404]"
"('URIish.java', 'org.eclipse.jgit.transport.URIish', '<init>', '^([a-z][a-z0-9+-]+)://(?:(?:([^/:@]+)(?::([^\\\\/]+))?@)?((?:[^\\\\/:]+)|(?:\\[[0-9a-f:]+\\]))(?::(\\d+))?((?:/~(?:[^\\\\/]+))?[\\\\/]))?(.+)?$', 'ssh+git://lusr\\example@example.com:1234//')",[140577]
"('Description.java', 'org.junit.runner.Description', 'methodAndClassNamePatternGroupOrDefault', '([\\s\\S]*)\\((.*)\\)', 'org.eclipse.jgit.diff.DiffFormatterTest')","[13936, 182640]"
"('Description.java', 'org.junit.runner.Description', 'methodAndClassNamePatternGroupOrDefault', '([\\s\\S]*)\\((.*)\\)', 'testOnlyOption_f1_4_e(org.eclipse.jgit.api.CommitOnlyTest)')","[48843, 106296]"
"('URIish.java', 'org.eclipse.jgit.transport.URIish', '<init>', '^(file):([\\\\/](?![\\\\/])((?:[A-Za-z]:)?[\\\\/]?(?:(?:[^\\\\/]+[\\\\/]+)*[^\\\\/]+[\\\\/]*)))$', 'https://lusr\\example:wtf@1.2.3.4:80//abc')",[134528]
"('URIish.java', 'org.eclipse.jgit.transport.URIish', '<init>', '^(file):([\\\\/](?![\\\\/])((?:[A-Za-z]:)?[\\\\/]?(?:(?:[^\\\\/]+[\\\\/]+)*[^\\\\/]+[\\\\/]*)))$', 'file:///tmp/jgit_test_379833043034514580_tmp/tmp_4427477875102799923')",[194168]
"('Description.java', 'org.junit.runner.Description', 'methodAndClassNamePatternGroupOrDefault', '([\\s\\S]*)\\((.*)\\)', 'testUnknown(org.eclipse.jgit.transport.RemoteConfigTest)')","[721, 59744]"
"('Description.java', 'org.junit.runner.Description', 'methodAndClassNamePatternGroupOrDefault', '([\\s\\S]*)\\((.*)\\)', 'testWrite_Large(org.eclipse.jgit.transport.SideBandOutputStreamTest)')","[4630, 63660]"
"('URIish.java', 'org.eclipse.jgit.transport.URIish', '<init>', '^([a-z][a-z0-9+-]+)://(?:(?:([^/:@]+)(?::([^\\\\/]+))?@)?((?:[^\\\\/:]+)|(?:\\[[0-9a-f:]+\\]))(?::(\\d+))?((?:/~(?:[^\\\\/]+))?[\\\\/]))?(.+)?$', 'ssh://lusr\\example:wtf@[::1]:80//abc')",[124983]
"('Description.java', 'org.junit.runner.Description', 'methodAndClassNamePatternGroupOrDefault', '([\\s\\S]*)\\((.*)\\)', 'testPush(org.eclipse.jgit.api.PushCommandTest)')","[42087, 99696]"
"('URIish.java', 'org.eclipse.jgit.transport.URIish', '<init>', '^(file):([\\\\/](?![\\\\/])((?:[A-Za-z]:)?[\\\\/]?(?:(?:[^\\\\/]+[\\\\/]+)*[^\\\\/]+[\\\\/]*)))$', 'http://me@1.2.3.4:80//abc')",[142256]
"('Description.java', 'org.junit.runner.Description', 'methodAndClassNamePatternGroupOrDefault', '([\\s\\S]*)\\((.*)\\)', 'testInexactRename_OneRenameTwoUnrelatedFiles(org.eclipse.jgit.diff.RenameDetectorTest)')","[12961, 71492]"
"('Description.java', 'org.junit.runner.Description', 'methodAndClassNamePatternGroupOrDefault', '([\\s\\S]*)\\((.*)\\)', 'testShouldNotBlowUpIfThereAreNoCommitsInRepository(org.eclipse.jgit.api.TagCommandTest)')","[41482, 99102]"
"('Description.java', 'org.junit.runner.Description', 'methodAndClassNamePatternGroupOrDefault', '([\\s\\S]*)\\((.*)\\)', 'testNotEmpty_WithPrefix(org.eclipse.jgit.util.RefMapTest)')","[36908, 94768]"
"('URIish.java', 'org.eclipse.jgit.transport.URIish', '<init>', '^([a-z][a-z0-9+-]+)://(?:(?:([^/:@]+)(?::([^\\\\/]+))?@)?((?:[^\\\\/:]+)|(?:\\[[0-9a-f:]+\\]))(?::(\\d+))?((?:/~(?:[^\\\\/]+))?[\\\\/]))?(.+)?$', 'https://lusr\\example@1.2.3.4:1234//')",[147569]
"('Description.java', 'org.junit.runner.Description', 'methodAndClassNamePatternGroupOrDefault', '([\\s\\S]*)\\((.*)\\)', 'testComputeFileObjectId(org.eclipse.jgit.treewalk.FileTreeIteratorTest)')","[28863, 87156]"
"('URIish.java', 'org.eclipse.jgit.transport.URIish', '<init>', '^(?:([^/:@]+)(?::([^\\\\/]+))?@)?([^\\\\/:]{2,}):([\\\\/](?:(?:[^\\\\/]+[\\\\/]+)*[^\\\\/]+[\\\\/]*))$', '/a/b/c/')",[176365]
"('Description.java', 'org.junit.runner.Description', 'methodAndClassNamePatternGroupOrDefault', '([\\s\\S]*)\\((.*)\\)', 'testIntoHeadOtherThanMaster(org.eclipse.jgit.merge.MergeMessageFormatterTest)')","[10927, 69600]"
"('Description.java', 'org.junit.runner.Description', 'methodAndClassNamePatternGroupOrDefault', '([\\s\\S]*)\\((.*)\\)', 'testOnlyOption_f1_13_c(org.eclipse.jgit.api.CommitOnlyTest)')","[50061, 107572]"
"('Description.java', 'org.junit.runner.Description', 'methodAndClassNamePatternGroupOrDefault', '([\\s\\S]*)\\((.*)\\)', 'testWithPostOrder_EnterSubtree(org.eclipse.jgit.treewalk.PostOrderTreeWalkTest)')","[29590, 87838]"
"('URIish.java', 'org.eclipse.jgit.transport.URIish', 'getHumanishName', '^([\\\\/]?((?:[A-Za-z]:)?[\\\\/]?(?:(?:[^\\\\/]+[\\\\/]+)*[^\\\\/]+[\\\\/]*)))$', '/a/b/c.git/')",[175882]
"('Description.java', 'org.junit.runner.Description', 'methodAndClassNamePatternGroupOrDefault', '([\\s\\S]*)\\((.*)\\)', 'testInexactRename_NewlinesOnly(org.eclipse.jgit.diff.RenameDetectorTest)')","[12835, 71360]"
"('URIish.java', 'org.eclipse.jgit.transport.URIish', '<init>', '^([a-z][a-z0-9+-]+)://(?:(?:([^/:@]+)(?::([^\\\\/]+))?@)?((?:[^\\\\/:]+)|(?:\\[[0-9a-f:]+\\]))(?::(\\d+))?((?:/~(?:[^\\\\/]+))?[\\\\/]))?(.+)?$', 'https://[::1]/D:\\x')","[172363, 172547, 173467, 173651, 174571, 174755]"
"('URIish.java', 'org.eclipse.jgit.transport.URIish', '<init>', '^([a-z][a-z0-9+-]+)://(?:(?:([^/:@]+)(?::([^\\\\/]+))?@)?((?:[^\\\\/:]+)|(?:\\[[0-9a-f:]+\\]))(?::(\\d+))?((?:/~(?:[^\\\\/]+))?[\\\\/]))?(.+)?$', 'git://')",[174801]
"('Description.java', 'org.junit.runner.Description', 'methodAndClassNamePatternGroupOrDefault', '([\\s\\S]*)\\((.*)\\)', 'testNLSLocale(org.eclipse.jgit.nls.NLSTest)')","[326, 59370]"
"('URIish.java', 'org.eclipse.jgit.transport.URIish', '<init>', '^([a-z][a-z0-9+-]+)://(?:(?:([^/:@]+)(?::([^\\\\/]+))?@)?((?:[^\\\\/:]+)|(?:\\[[0-9a-f:]+\\]))(?::(\\d+))?((?:/~(?:[^\\\\/]+))?[\\\\/]))?(.+)?$', 'ssh://l usr\\example.com@1.2.3.4:80/D:\\x')",[136851]
"('Description.java', 'org.junit.runner.Description', 'methodAndClassNamePatternGroupOrDefault', '([\\s\\S]*)\\((.*)\\)', 'testShouldNotBlowUpIfThereAreNoTagsInRepository(org.eclipse.jgit.api.TagCommandTest)')","[41608, 99234]"
"('URIish.java', 'org.eclipse.jgit.transport.URIish', '<init>', '^(file):([\\\\/](?![\\\\/])((?:[A-Za-z]:)?[\\\\/]?(?:(?:[^\\\\/]+[\\\\/]+)*[^\\\\/]+[\\\\/]*)))$', 'https://lusr\\example:wtf@example.com:80/D:/x')",[134206]
"('Description.java', 'org.junit.runner.Description', 'methodAndClassNamePatternGroupOrDefault', '([\\s\\S]*)\\((.*)\\)', 'testSpaceGroupCase2(org.eclipse.jgit.fnmatch.FileNameMatcherTest)')","[17362, 75804]"
"('URIish.java', 'org.eclipse.jgit.transport.URIish', '<init>', '^(file):([\\\\/](?![\\\\/])((?:[A-Za-z]:)?[\\\\/]?(?:(?:[^\\\\/]+[\\\\/]+)*[^\\\\/]+[\\\\/]*)))$', 'file:///tmp/jgit_test_3451309735684960688_tmp/tmp_2394269937169610564/.git/')",[185846]
"('URIish.java', 'org.eclipse.jgit.transport.URIish', '<init>', '^([a-z][a-z0-9+-]+)://(?:(?:([^/:@]+)(?::([^\\\\/]+))?@)?((?:[^\\\\/:]+)|(?:\\[[0-9a-f:]+\\]))(?::(\\d+))?((?:/~(?:[^\\\\/]+))?[\\\\/]))?(.+)?$', 'http://lusr\\example@[::1]:80/D:\\x')",[144947]
"('Description.java', 'org.junit.runner.Description', 'methodAndClassNamePatternGroupOrDefault', '([\\s\\S]*)\\((.*)\\)', 'testPunctGroupCase2(org.eclipse.jgit.fnmatch.FileNameMatcherTest)')","[17971, 76442]"
"('Description.java', 'org.junit.runner.Description', 'methodAndClassNamePatternGroupOrDefault', '([\\s\\S]*)\\((.*)\\)', 'testDirectoryFileConflicts_17(org.eclipse.jgit.lib.DirCacheCheckoutTest)')","[23731, 82118]"
"('Description.java', 'org.junit.runner.Description', 'methodAndClassNamePatternGroupOrDefault', '([\\s\\S]*)\\((.*)\\)', 'testParse_CcNewFile(org.eclipse.jgit.patch.PatchCcTest)')","[39883, 97606]"
"('ChangeIdUtil.java', 'org.eclipse.jgit.util.ChangeIdUtil', 'indexOfFirstFooterLine', '(^[a-zA-Z0-9-]+:(?!//).*$)', 'ftp://example.com/ fixes this')",[190394]
"('URIish.java', 'org.eclipse.jgit.transport.URIish', '<init>', '^(file):([\\\\/](?![\\\\/])((?:[A-Za-z]:)?[\\\\/]?(?:(?:[^\\\\/]+[\\\\/]+)*[^\\\\/]+[\\\\/]*)))$', 'ssh+git://l usr\\example.com:wtf@example.com:80/D:\\x')",[126524]
"('URIish.java', 'org.eclipse.jgit.transport.URIish', '<init>', '^(file):([\\\\/](?![\\\\/])((?:[A-Za-z]:)?[\\\\/]?(?:(?:[^\\\\/]+[\\\\/]+)*[^\\\\/]+[\\\\/]*)))$', 'ssh+git://lusr\\example@1.2.3.4:1234//abc')",[140968]
"('URIish.java', 'org.eclipse.jgit.transport.URIish', '<init>', '^(file):([\\\\/](?![\\\\/])((?:[A-Za-z]:)?[\\\\/]?(?:(?:[^\\\\/]+[\\\\/]+)*[^\\\\/]+[\\\\/]*)))$', 'ssh://lusr\\example@example.com//')","[150490, 150674]"
"('Description.java', 'org.junit.runner.Description', 'methodAndClassNamePatternGroupOrDefault', '([\\s\\S]*)\\((.*)\\)', 'testGetRef_PackedNotPeeled_WrongSort(org.eclipse.jgit.internal.storage.file.RefDirectoryTest)')","[58480, 115536]"
"('URIish.java', 'org.eclipse.jgit.transport.URIish', '<init>', '^([a-z][a-z0-9+-]+)://(?:(?:([^/:@]+)(?::([^\\\\/]+))?@)?((?:[^\\\\/:]+)|(?:\\[[0-9a-f:]+\\]))(?::(\\d+))?((?:/~(?:[^\\\\/]+))?[\\\\/]))?(.+)?$', 'https://lusr\\example:wtf@1.2.3.4:1234/D:\\x')",[134459]
"('URIish.java', 'org.eclipse.jgit.transport.URIish', '<init>', '^([a-z][a-z0-9+-]+)://(?:(?:([^/:@]+)(?::([^\\\\/]+))?@)?((?:[^\\\\/:]+)|(?:\\[[0-9a-f:]+\\]))(?::(\\d+))?((?:/~(?:[^\\\\/]+))?[\\\\/]))?(.+)?$', 'https://l usr\\example.com@example.com:80//')",[146281]
"('Description.java', 'org.junit.runner.Description', 'methodAndClassNamePatternGroupOrDefault', '([\\s\\S]*)\\((.*)\\)', 'logPathWithSkip(org.eclipse.jgit.api.LogCommandTest)')","[47656, 105152]"
"('Description.java', 'org.junit.runner.Description', 'methodAndClassNamePatternGroupOrDefault', '([\\s\\S]*)\\((.*)\\)', 'testFindRemoteRefUpdatesNoWildcardNoTracking(org.eclipse.jgit.transport.TransportTest)')","[4067, 63110]"
"('URIish.java', 'org.eclipse.jgit.transport.URIish', '<init>', '^(file):([\\\\/](?![\\\\/])((?:[A-Za-z]:)?[\\\\/]?(?:(?:[^\\\\/]+[\\\\/]+)*[^\\\\/]+[\\\\/]*)))$', 'ssh+git://[::1]/D:/x')","[165670, 165854, 166774, 166958, 167878, 168062]"
"('Description.java', 'org.junit.runner.Description', 'methodAndClassNamePatternGroupOrDefault', '([\\s\\S]*)\\((.*)\\)', 'fetchWithUpdatedTagShouldNotTryToUpdateLocal(org.eclipse.jgit.api.FetchCommandTest)')","[51935, 109376]"
"('Description.java', 'org.junit.runner.Description', 'methodAndClassNamePatternGroupOrDefault', '([\\s\\S]*)\\((.*)\\)', 'testNoRenames_EmptyFile2(org.eclipse.jgit.diff.RenameDetectorTest)')","[13045, 71580]"
"('Description.java', 'org.junit.runner.Description', 'methodAndClassNamePatternGroupOrDefault', '([\\s\\S]*)\\((.*)\\)', 'testSimpleAlwaysTags(org.eclipse.jgit.transport.RemoteConfigTest)')","[868, 59898]"
"('Description.java', 'org.junit.runner.Description', 'methodAndClassNamePatternGroupOrDefault', '([\\s\\S]*)\\((.*)\\)', 'org.eclipse.jgit.dircache.DirCacheEntryTest')","[11631, 182289]"
"('Description.java', 'org.junit.runner.Description', 'methodAndClassNamePatternGroupOrDefault', '([\\s\\S]*)\\((.*)\\)', 'testOnlyOption_f1_1_f2_14_a(org.eclipse.jgit.api.CommitOnlyTest)')","[50229, 107748]"
"('URIish.java', 'org.eclipse.jgit.transport.URIish', '<init>', '^(?:([^/:@]+)(?::([^\\\\/]+))?@)?((?:[^\\\\/:]+)|(?:\\[[0-9a-f:]+\\])):((?:(?:/~(?:[^\\\\/]+))[\\\\/])?(?:(?:[^\\\\/]+[\\\\/]+)*[^\\\\/]+[\\\\/]*))$', '/tmp/jgit_test_1616732006832071039_tmp/tmp_6256113901600089866/.git')","[206209, 206351]"
"('Description.java', 'org.junit.runner.Description', 'methodAndClassNamePatternGroupOrDefault', '([\\s\\S]*)\\((.*)\\)', 'testMaliciousAbsoluteCurDrivePathWindowsOnUnix(org.eclipse.jgit.lib.DirCacheCheckoutMaliciousPathTest)')","[21328, 79720]"
"('Description.java', 'org.junit.runner.Description', 'methodAndClassNamePatternGroupOrDefault', '([\\s\\S]*)\\((.*)\\)', 'org.eclipse.jgit.revwalk.DateRevQueueTest')","[7849, 181541]"
"('URIish.java', 'org.eclipse.jgit.transport.URIish', '<init>', '^([a-z][a-z0-9+-]+)://(?:(?:([^/:@]+)(?::([^\\\\/]+))?@)?((?:[^\\\\/:]+)|(?:\\[[0-9a-f:]+\\]))(?::(\\d+))?((?:/~(?:[^\\\\/]+))?[\\\\/]))?(.+)?$', 'in-memory://')","[180205, 180257, 180309, 180361]"
"('URIish.java', 'org.eclipse.jgit.transport.URIish', '<init>', '^(file):([\\\\/](?![\\\\/])((?:[A-Za-z]:)?[\\\\/]?(?:(?:[^\\\\/]+[\\\\/]+)*[^\\\\/]+[\\\\/]*)))$', 'ssh://lusr\\example:wtf@[::1]:1234/D:/x')",[124822]
"('Description.java', 'org.junit.runner.Description', 'methodAndClassNamePatternGroupOrDefault', '([\\s\\S]*)\\((.*)\\)', 'testSet_Replace(org.eclipse.jgit.notes.LeafBucketTest)')","[40444, 98134]"
"('Description.java', 'org.junit.runner.Description', 'methodAndClassNamePatternGroupOrDefault', '([\\s\\S]*)\\((.*)\\)', 'testDirectoryFileConflicts_18(org.eclipse.jgit.lib.DirCacheCheckoutTest)')","[23752, 82140]"
"('URIish.java', 'org.eclipse.jgit.transport.URIish', '<init>', '^([a-z][a-z0-9+-]+)://(?:(?:([^/:@]+)(?::([^\\\\/]+))?@)?((?:[^\\\\/:]+)|(?:\\[[0-9a-f:]+\\]))(?::(\\d+))?((?:/~(?:[^\\\\/]+))?[\\\\/]))?(.+)?$', 'http://example.com//abc')","[168223, 168407, 169327, 169511, 170431, 170615]"
"('Description.java', 'org.junit.runner.Description', 'methodAndClassNamePatternGroupOrDefault', '([\\s\\S]*)\\((.*)\\)', 'testCloseNameConflicts1(org.eclipse.jgit.lib.DirCacheCheckoutTest)')","[23143, 81502]"
"('Description.java', 'org.junit.runner.Description', 'methodAndClassNamePatternGroupOrDefault', '([\\s\\S]*)\\((.*)\\)', 'testMaliciousGitPath2(org.eclipse.jgit.lib.DirCacheCheckoutMaliciousPathTest)')","[21664, 80072]"
"('Description.java', 'org.junit.runner.Description', 'methodAndClassNamePatternGroupOrDefault', '([\\s\\S]*)\\((.*)\\)', 'testWorkdirIsDotGit_CreateRepositoryFromWorkDirOnly(org.eclipse.jgit.internal.storage.file.RepositorySetupWorkDirTest)')","[57043, 114150]"
"('URIish.java', 'org.eclipse.jgit.transport.URIish', '<init>', '^([a-z][a-z0-9+-]+)://(?:(?:([^/:@]+)(?::([^\\\\/]+))?@)?((?:[^\\\\/:]+)|(?:\\[[0-9a-f:]+\\]))(?::(\\d+))?((?:/~(?:[^\\\\/]+))?[\\\\/]))?(.+)?$', 'file:///tmp/jgit_test_753789441204020985_tmp/tmp_1630386788301939729')","[198219, 198281, 198333, 198395]"
"('Description.java', 'org.junit.runner.Description', 'methodAndClassNamePatternGroupOrDefault', '([\\s\\S]*)\\((.*)\\)', 'testOnlyOption_f1_12_e(org.eclipse.jgit.api.CommitOnlyTest)')","[49998, 107506]"
"('URIish.java', 'org.eclipse.jgit.transport.URIish', '<init>', '^([a-z][a-z0-9+-]+)://(?:(?:([^/:@]+)(?::([^\\\\/]+))?@)?((?:[^\\\\/:]+)|(?:\\[[0-9a-f:]+\\]))(?::(\\d+))?((?:/~(?:[^\\\\/]+))?[\\\\/]))?(.+)?$', 'ssh+git://l usr\\example.com@1.2.3.4:1234/D:/x')",[139933]
"('Description.java', 'org.junit.runner.Description', 'methodAndClassNamePatternGroupOrDefault', '([\\s\\S]*)\\((.*)\\)', 'testFileKeyOpenNew(org.eclipse.jgit.lib.RepositoryCacheTest)')","[20889, 79280]"
"('Description.java', 'org.junit.runner.Description', 'methodAndClassNamePatternGroupOrDefault', '([\\s\\S]*)\\((.*)\\)', 'test002_NewIdent(org.eclipse.jgit.lib.T0001_PersonIdentTest)')","[27674, 85990]"
"('Description.java', 'org.junit.runner.Description', 'methodAndClassNamePatternGroupOrDefault', '([\\s\\S]*)\\((.*)\\)', 'org.eclipse.jgit.internal.storage.pack.DeltaIndexTest')","[52702, 209543]"
"('Description.java', 'org.junit.runner.Description', 'methodAndClassNamePatternGroupOrDefault', '([\\s\\S]*)\\((.*)\\)', 'testStopWalkCallsParent(org.eclipse.jgit.treewalk.EmptyTreeIteratorTest)')","[29712, 87926]"
"('Description.java', 'org.junit.runner.Description', 'methodAndClassNamePatternGroupOrDefault', '([\\s\\S]*)\\((.*)\\)', 'testSameDiff(org.eclipse.jgit.diff.PatchIdDiffFormatterTest)')","[13625, 72108]"
"('URIish.java', 'org.eclipse.jgit.transport.URIish', '<init>', '^([a-z][a-z0-9+-]+)://(?:(?:([^/:@]+)(?::([^\\\\/]+))?@)?((?:[^\\\\/:]+)|(?:\\[[0-9a-f:]+\\]))(?::(\\d+))?((?:/~(?:[^\\\\/]+))?[\\\\/]))?(.+)?$', 'ssh+git://l usr\\example.com@1.2.3.4//')","[153089, 153273]"
"('Description.java', 'org.junit.runner.Description', 'methodAndClassNamePatternGroupOrDefault', '([\\s\\S]*)\\((.*)\\)', 'org.eclipse.jgit.api.PathCheckoutCommandTest')","[46843, 205824]"
"('Description.java', 'org.junit.runner.Description', 'methodAndClassNamePatternGroupOrDefault', '([\\s\\S]*)\\((.*)\\)', 'testGetFastForwardMergeoptions(org.eclipse.jgit.lib.ConfigTest)')","[27861, 86166]"
"('URIish.java', 'org.eclipse.jgit.transport.URIish', '<init>', '^(file):([\\\\/](?![\\\\/])((?:[A-Za-z]:)?[\\\\/]?(?:(?:[^\\\\/]+[\\\\/]+)*[^\\\\/]+[\\\\/]*)))$', 'http://l usr\\example.com@1.2.3.4:80/D:\\x')",[143452]
"('URIish.java', 'org.eclipse.jgit.transport.URIish', '<init>', '^([a-z][a-z0-9+-]+)://(?:(?:([^/:@]+)(?::([^\\\\/]+))?@)?((?:[^\\\\/:]+)|(?:\\[[0-9a-f:]+\\]))(?::(\\d+))?((?:/~(?:[^\\\\/]+))?[\\\\/]))?(.+)?$', 'ssh+git://l usr\\example.com@[::1]/D:\\x')","[153595, 153779]"
"('URIish.java', 'org.eclipse.jgit.transport.URIish', '<init>', '^([\\\\/]?((?:[A-Za-z]:)?[\\\\/]?(?:(?:[^\\\\/]+[\\\\/]+)*[^\\\\/]+[\\\\/]*)))$', '/tmp/jgit_test_4775797511223514619_tmp/tmp_1589472581924050678/.git')","[207101, 207251]"
"('Description.java', 'org.junit.runner.Description', 'methodAndClassNamePatternGroupOrDefault', '([\\s\\S]*)\\((.*)\\)', 'testEnsurePathCapacityGrows(org.eclipse.jgit.treewalk.AbstractTreeIteratorTest)')","[29197, 87486]"
"('URIish.java', 'org.eclipse.jgit.transport.URIish', '<init>', '^(file):([\\\\/](?![\\\\/])((?:[A-Za-z]:)?[\\\\/]?(?:(?:[^\\\\/]+[\\\\/]+)*[^\\\\/]+[\\\\/]*)))$', 'ssh://lusr\\example@example.com:1234//')",[137242]
"('Description.java', 'org.junit.runner.Description', 'methodAndClassNamePatternGroupOrDefault', '([\\s\\S]*)\\((.*)\\)', 'org.eclipse.jgit.internal.storage.file.RefDirectoryTest')","[57682, 210353]"
"('Description.java', 'org.junit.runner.Description', 'methodAndClassNamePatternGroupOrDefault', '([\\s\\S]*)\\((.*)\\)', 'testDiffCached(org.eclipse.jgit.api.DiffCommandTest)')","[48257, 105702]"
"('Description.java', 'org.junit.runner.Description', 'methodAndClassNamePatternGroupOrDefault', '([\\s\\S]*)\\((.*)\\)', 'testGetEntryContentLength(org.eclipse.jgit.treewalk.FileTreeIteratorTest)')","[29094, 87398]"
"('Description.java', 'org.junit.runner.Description', 'methodAndClassNamePatternGroupOrDefault', '([\\s\\S]*)\\((.*)\\)', 'testMoveToOtherDir(org.eclipse.jgit.api.BlameCommandTest)')","[52246, 109662]"
"('URIish.java', 'org.eclipse.jgit.transport.URIish', '<init>', '^([a-z][a-z0-9+-]+)://(?:(?:([^/:@]+)(?::([^\\\\/]+))?@)?((?:[^\\\\/:]+)|(?:\\[[0-9a-f:]+\\]))(?::(\\d+))?((?:/~(?:[^\\\\/]+))?[\\\\/]))?(.+)?$', 'http://l usr\\example.com@example.com:80//')",[142969]
"('Description.java', 'org.junit.runner.Description', 'methodAndClassNamePatternGroupOrDefault', '([\\s\\S]*)\\((.*)\\)', 'testHardResetOnUnbornBranch(org.eclipse.jgit.api.ResetCommandTest)')","[42522, 100092]"
"('URIish.java', 'org.eclipse.jgit.transport.URIish', '<init>', '^([a-z][a-z0-9+-]+)://(?:(?:([^/:@]+)(?::([^\\\\/]+))?@)?((?:[^\\\\/:]+)|(?:\\[[0-9a-f:]+\\]))(?::(\\d+))?((?:/~(?:[^\\\\/]+))?[\\\\/]))?(.+)?$', 'http://me@1.2.3.4//abc')","[155343, 155527]"
"('Description.java', 'org.junit.runner.Description', 'methodAndClassNamePatternGroupOrDefault', '([\\s\\S]*)\\((.*)\\)', 'testFileProtoWindows(org.eclipse.jgit.transport.URIishTest)')","[2210, 61284]"
"('URIish.java', 'org.eclipse.jgit.transport.URIish', '<init>', '^([a-z][a-z0-9+-]+)://(?:(?:([^/:@]+)(?::([^\\\\/]+))?@)?((?:[^\\\\/:]+)|(?:\\[[0-9a-f:]+\\]))(?::(\\d+))?((?:/~(?:[^\\\\/]+))?[\\\\/]))?(.+)?$', 'file:///tmp/jgit_test_4198533630068422434_tmp/tmp_3052998037907759809')","[199185, 199247, 199299]"
"('URIish.java', 'org.eclipse.jgit.transport.URIish', '<init>', '^(file):([\\\\/](?![\\\\/])((?:[A-Za-z]:)?[\\\\/]?(?:(?:[^\\\\/]+[\\\\/]+)*[^\\\\/]+[\\\\/]*)))$', 'ssh://me:wtf@example.com:80/D:\\x')",[122108]
"('ChangeIdUtil.java', 'org.eclipse.jgit.util.ChangeIdUtil', 'indexOfChangeId', '(^Change-Id: *I[a-f0-9]{40}$)', 'c')",[191386]
"('Description.java', 'org.junit.runner.Description', 'methodAndClassNamePatternGroupOrDefault', '([\\s\\S]*)\\((.*)\\)', 'testDerefBlob(org.eclipse.jgit.lib.RepositoryResolveTest)')","[27384, 85726]"
"('Description.java', 'org.junit.runner.Description', 'methodAndClassNamePatternGroupOrDefault', '([\\s\\S]*)\\((.*)\\)', 'branch_historyNotPruned(org.eclipse.jgit.internal.storage.file.GcBranchPrunedTest)')","[59085, 116130]"
"('Description.java', 'org.junit.runner.Description', 'methodAndClassNamePatternGroupOrDefault', '([\\s\\S]*)\\((.*)\\)', 'workingDirectoryModifyInSubfolder(org.eclipse.jgit.api.StashCreateCommandTest)')","[41816, 99432]"
"('URIish.java', 'org.eclipse.jgit.transport.URIish', '<init>', '^([a-z][a-z0-9+-]+)://(?:(?:([^/:@]+)(?::([^\\\\/]+))?@)?((?:[^\\\\/:]+)|(?:\\[[0-9a-f:]+\\]))(?::(\\d+))?((?:/~(?:[^\\\\/]+))?[\\\\/]))?(.+)?$', 'ssh+git://me@[::1]:1234/D:/x')",[139197]
"('Description.java', 'org.junit.runner.Description', 'methodAndClassNamePatternGroupOrDefault', '([\\s\\S]*)\\((.*)\\)', 'testLeadingSpacesRebaseTodo(org.eclipse.jgit.api.RebaseCommandTest)')","[46137, 103700]"
"('Description.java', 'org.junit.runner.Description', 'methodAndClassNamePatternGroupOrDefault', '([\\s\\S]*)\\((.*)\\)', 'testNoFooters_ShortBodyNoLF(org.eclipse.jgit.revwalk.FooterLineTest)')","[6420, 65376]"
"('Description.java', 'org.junit.runner.Description', 'methodAndClassNamePatternGroupOrDefault', '([\\s\\S]*)\\((.*)\\)', 'testANY_DIFF_ShouldNotBeRecursive(org.eclipse.jgit.treewalk.filter.TreeFilterTest)')","[31069, 89268]"
"('Description.java', 'org.junit.runner.Description', 'methodAndClassNamePatternGroupOrDefault', '([\\s\\S]*)\\((.*)\\)', 'testNewFileWithWait(org.eclipse.jgit.internal.storage.file.FileSnapshotTest)')","[54675, 111928]"
"('Description.java', 'org.junit.runner.Description', 'methodAndClassNamePatternGroupOrDefault', '([\\s\\S]*)\\((.*)\\)', 'testEnsurePathCapacityFastCase(org.eclipse.jgit.treewalk.AbstractTreeIteratorTest)')","[29155, 87442]"
"('URIish.java', 'org.eclipse.jgit.transport.URIish', '<init>', '^([a-z][a-z0-9+-]+)://(?:(?:([^/:@]+)(?::([^\\\\/]+))?@)?((?:[^\\\\/:]+)|(?:\\[[0-9a-f:]+\\]))(?::(\\d+))?((?:/~(?:[^\\\\/]+))?[\\\\/]))?(.+)?$', 'https://l usr\\example.com:wtf@example.com:80/D:\\x')",[133171]
"('URIish.java', 'org.eclipse.jgit.transport.URIish', '<init>', '^([a-z][a-z0-9+-]+)://(?:(?:([^/:@]+)(?::([^\\\\/]+))?@)?((?:[^\\\\/:]+)|(?:\\[[0-9a-f:]+\\]))(?::(\\d+))?((?:/~(?:[^\\\\/]+))?[\\\\/]))?(.+)?$', '/.git')",[174916]
"('Description.java', 'org.junit.runner.Description', 'methodAndClassNamePatternGroupOrDefault', '([\\s\\S]*)\\((.*)\\)', 'testAlreadyUpToDate(org.eclipse.jgit.api.MergeCommandTest)')","[43816, 101368]"
"('Description.java', 'org.junit.runner.Description', 'methodAndClassNamePatternGroupOrDefault', '([\\s\\S]*)\\((.*)\\)', 'indexDelete(org.eclipse.jgit.api.StashCreateCommandTest)')","[41984, 99608]"
"('URIish.java', 'org.eclipse.jgit.transport.URIish', '<init>', '^(file):([\\\\/](?![\\\\/])((?:[A-Za-z]:)?[\\\\/]?(?:(?:[^\\\\/]+[\\\\/]+)*[^\\\\/]+[\\\\/]*)))$', '/tmp/jgit_test_2763785820419085746_tmp/tmp_961093183525182339')","[204107, 204232, 204378]"
"('Description.java', 'org.junit.runner.Description', 'methodAndClassNamePatternGroupOrDefault', '([\\s\\S]*)\\((.*)\\)', 'testReadACK_ACKready1(org.eclipse.jgit.transport.PacketLineInTest)')","[3464, 62538]"
"('URIish.java', 'org.eclipse.jgit.transport.URIish', '<init>', '^([a-z][a-z0-9+-]+)://(?:(?:([^/:@]+)(?::([^\\\\/]+))?@)?((?:[^\\\\/:]+)|(?:\\[[0-9a-f:]+\\]))(?::(\\d+))?((?:/~(?:[^\\\\/]+))?[\\\\/]))?(.+)?$', 'file:///tmp/jgit_test_3451309735684960688_tmp/tmp_2394269937169610564/.git/')",[185877]
"('Description.java', 'org.junit.runner.Description', 'methodAndClassNamePatternGroupOrDefault', '([\\s\\S]*)\\((.*)\\)', 'testGetCachedBytes(org.eclipse.jgit.notes.NoteMapTest)')","[40734, 98398]"
"('Description.java', 'org.junit.runner.Description', 'methodAndClassNamePatternGroupOrDefault', '([\\s\\S]*)\\((.*)\\)', 'testInversedGroupCase1(org.eclipse.jgit.fnmatch.FileNameMatcherTest)')","[17257, 75694]"
"('Description.java', 'org.junit.runner.Description', 'methodAndClassNamePatternGroupOrDefault', '([\\s\\S]*)\\((.*)\\)', 'testNotALL_IncludesNothing(org.eclipse.jgit.treewalk.filter.TreeFilterTest)')","[31090, 89290]"
"('URIish.java', 'org.eclipse.jgit.transport.URIish', '<init>', '^([a-z][a-z0-9+-]+)://(?:(?:([^/:@]+)(?::([^\\\\/]+))?@)?((?:[^\\\\/:]+)|(?:\\[[0-9a-f:]+\\]))(?::(\\d+))?((?:/~(?:[^\\\\/]+))?[\\\\/]))?(.+)?$', 'ssh://l usr\\example.com:wtf@[::1]:1234/D:\\x')",[123787]
"('URIish.java', 'org.eclipse.jgit.transport.URIish', '<init>', '^([a-z][a-z0-9+-]+)://(?:(?:([^/:@]+)(?::([^\\\\/]+))?@)?((?:[^\\\\/:]+)|(?:\\[[0-9a-f:]+\\]))(?::(\\d+))?((?:/~(?:[^\\\\/]+))?[\\\\/]))?(.+)?$', 'http://l usr\\example.com@[::1]/D:/x')","[156861, 157045]"
"('Description.java', 'org.junit.runner.Description', 'methodAndClassNamePatternGroupOrDefault', '([\\s\\S]*)\\((.*)\\)', 'crissCrossMerge_mergeable(org.eclipse.jgit.merge.RecursiveMergerTest)')","[10366, 69072]"
"('URIish.java', 'org.eclipse.jgit.transport.URIish', '<init>', '^(?:([^/:@]+)(?::([^\\\\/]+))?@)?((?:[^\\\\/:]+)|(?:\\[[0-9a-f:]+\\])):((?:(?:/~(?:[^\\\\/]+))[\\\\/])?(?:(?:[^\\\\/]+[\\\\/]+)*[^\\\\/]+[\\\\/]*))$', '/tmp/jgit_test_7801778247778239084_tmp/tmp_7326340281197098170.git')",[117398]
"('Description.java', 'org.junit.runner.Description', 'methodAndClassNamePatternGroupOrDefault', '([\\s\\S]*)\\((.*)\\)', 'testEmptyValueNoLF(org.eclipse.jgit.revwalk.FooterLineTest)')","[6336, 65288]"
"('Description.java', 'org.junit.runner.Description', 'methodAndClassNamePatternGroupOrDefault', '([\\s\\S]*)\\((.*)\\)', 'org.eclipse.jgit.internal.storage.file.GcPruneNonReferencedTest')","[57188, 210218]"
"('Description.java', 'org.junit.runner.Description', 'methodAndClassNamePatternGroupOrDefault', '([\\s\\S]*)\\((.*)\\)', 'testOnlyOption_f1_6_f2_14_b(org.eclipse.jgit.api.CommitOnlyTest)')","[49620, 107110]"
"('Description.java', 'org.junit.runner.Description', 'methodAndClassNamePatternGroupOrDefault', '([\\s\\S]*)\\((.*)\\)', 'testNoFooters_OneLineBodyNoLF(org.eclipse.jgit.revwalk.FooterLineTest)')","[6147, 65090]"
"('Description.java', 'org.junit.runner.Description', 'methodAndClassNamePatternGroupOrDefault', '([\\s\\S]*)\\((.*)\\)', 'testPullConfigRenameLocalBranch(org.eclipse.jgit.api.BranchCommandTest)')","[47511, 105020]"
"('URIish.java', 'org.eclipse.jgit.transport.URIish', '<init>', '^(file):([\\\\/](?![\\\\/])((?:[A-Za-z]:)?[\\\\/]?(?:(?:[^\\\\/]+[\\\\/]+)*[^\\\\/]+[\\\\/]*)))$', 'https://me@example.com/D:\\x')","[158356, 158540]"
"('Description.java', 'org.junit.runner.Description', 'methodAndClassNamePatternGroupOrDefault', '([\\s\\S]*)\\((.*)\\)', 'testEdit_InvertBlocks(org.eclipse.jgit.diff.MyersDiffTest)')","[14646, 73098]"
"('Description.java', 'org.junit.runner.Description', 'methodAndClassNamePatternGroupOrDefault', '([\\s\\S]*)\\((.*)\\)', 'testNegation(org.eclipse.jgit.ignore.IgnoreNodeTest)')","[31670, 89818]"
"('URIish.java', 'org.eclipse.jgit.transport.URIish', '<init>', '^([a-z][a-z0-9+-]+)://(?:(?:([^/:@]+)(?::([^\\\\/]+))?@)?((?:[^\\\\/:]+)|(?:\\[[0-9a-f:]+\\]))(?::(\\d+))?((?:/~(?:[^\\\\/]+))?[\\\\/]))?(.+)?$', '/tmp/jgit_test_2418995499675152019_tmp/tmp_6807375775614242287.git')",[116408]
"('URIish.java', 'org.eclipse.jgit.transport.URIish', '<init>', '^(file):([\\\\/](?![\\\\/])((?:[A-Za-z]:)?[\\\\/]?(?:(?:[^\\\\/]+[\\\\/]+)*[^\\\\/]+[\\\\/]*)))$', 'ssh+git://me@[::1]:1234//abc')",[139128]
"('URIish.java', 'org.eclipse.jgit.transport.URIish', '<init>', '^(file):([\\\\/](?![\\\\/])((?:[A-Za-z]:)?[\\\\/]?(?:(?:[^\\\\/]+[\\\\/]+)*[^\\\\/]+[\\\\/]*)))$', 'file:///tmp/jgit_test_6630028909386142325_tmp/tmp_2254286675345283029/.git/')",[208946]
"('URIish.java', 'org.eclipse.jgit.transport.URIish', '<init>', '^(file):([\\\\/](?![\\\\/])((?:[A-Za-z]:)?[\\\\/]?(?:(?:[^\\\\/]+[\\\\/]+)*[^\\\\/]+[\\\\/]*)))$', 'ssh://lusr\\example@1.2.3.4:1234//')",[137610]
"('URIish.java', 'org.eclipse.jgit.transport.URIish', '<init>', '^([a-z][a-z0-9+-]+)://(?:(?:([^/:@]+)(?::([^\\\\/]+))?@)?((?:[^\\\\/:]+)|(?:\\[[0-9a-f:]+\\]))(?::(\\d+))?((?:/~(?:[^\\\\/]+))?[\\\\/]))?(.+)?$', 'https://me@[::1]:80/D:/x')",[146005]
"('URIish.java', 'org.eclipse.jgit.transport.URIish', '<init>', '^([a-z][a-z0-9+-]+)://(?:(?:([^/:@]+)(?::([^\\\\/]+))?@)?((?:[^\\\\/:]+)|(?:\\[[0-9a-f:]+\\]))(?::(\\d+))?((?:/~(?:[^\\\\/]+))?[\\\\/]))?(.+)?$', 'https://me:wtf@1.2.3.4:1234/D:/x')",[132205]
"('Description.java', 'org.junit.runner.Description', 'methodAndClassNamePatternGroupOrDefault', '([\\s\\S]*)\\((.*)\\)', 'testMatch_TooSmall(org.eclipse.jgit.util.RawParseUtils_MatchTest)')","[38433, 96286]"
"('Description.java', 'org.junit.runner.Description', 'methodAndClassNamePatternGroupOrDefault', '([\\s\\S]*)\\((.*)\\)', 'testHunkHeader(org.eclipse.jgit.patch.EditListTest)')","[38990, 96770]"
"('Description.java', 'org.junit.runner.Description', 'methodAndClassNamePatternGroupOrDefault', '([\\s\\S]*)\\((.*)\\)', 'testObjectId_existing(org.eclipse.jgit.lib.RepositoryResolveTest)')","[27363, 85704]"
"('Description.java', 'org.junit.runner.Description', 'methodAndClassNamePatternGroupOrDefault', '([\\s\\S]*)\\((.*)\\)', 'testParseCopy100(org.eclipse.jgit.patch.FileHeaderTest)')","[39467, 97210]"
"('Description.java', 'org.junit.runner.Description', 'methodAndClassNamePatternGroupOrDefault', '([\\s\\S]*)\\((.*)\\)', 'testCacheRegisterOpen(org.eclipse.jgit.lib.RepositoryCacheTest)')","[20931, 79324]"
"('Description.java', 'org.junit.runner.Description', 'methodAndClassNamePatternGroupOrDefault', '([\\s\\S]*)\\((.*)\\)', 'org.eclipse.jgit.util.NBTest')","[37347, 187126]"
"('Description.java', 'org.junit.runner.Description', 'methodAndClassNamePatternGroupOrDefault', '([\\s\\S]*)\\((.*)\\)', 'testParseAbbrIndexLine_WithMode(org.eclipse.jgit.patch.FileHeaderTest)')","[39383, 97122]"
"('URIish.java', 'org.eclipse.jgit.transport.URIish', '<init>', '^(file):([\\\\/](?![\\\\/])((?:[A-Za-z]:)?[\\\\/]?(?:(?:[^\\\\/]+[\\\\/]+)*[^\\\\/]+[\\\\/]*)))$', 'ssh://l usr\\example.com@example.com:80//')",[136322]
"('Description.java', 'org.junit.runner.Description', 'methodAndClassNamePatternGroupOrDefault', '([\\s\\S]*)\\((.*)\\)', 'testMaxObjectSizeFullBlob(org.eclipse.jgit.transport.PackParserTest)')","[4296, 63330]"
"('Description.java', 'org.junit.runner.Description', 'methodAndClassNamePatternGroupOrDefault', '([\\s\\S]*)\\((.*)\\)', 'testEdit_MoveBlock(org.eclipse.jgit.diff.MyersDiffTest)')","[14499, 72944]"
"('URIish.java', 'org.eclipse.jgit.transport.URIish', '<init>', '^([a-z][a-z0-9+-]+)://(?:(?:([^/:@]+)(?::([^\\\\/]+))?@)?((?:[^\\\\/:]+)|(?:\\[[0-9a-f:]+\\]))(?::(\\d+))?((?:/~(?:[^\\\\/]+))?[\\\\/]))?(.+)?$', 'https://me@example.com:80/D:\\x')",[145315]
"('Description.java', 'org.junit.runner.Description', 'methodAndClassNamePatternGroupOrDefault', '([\\s\\S]*)\\((.*)\\)', 'testResetHard(org.eclipse.jgit.lib.DirCacheCheckoutTest)')","[23017, 81370]"
"('Description.java', 'org.junit.runner.Description', 'methodAndClassNamePatternGroupOrDefault', '([\\s\\S]*)\\((.*)\\)', 'testNoFooters_NewlineOnlyBody5(org.eclipse.jgit.revwalk.FooterLineTest)')","[6210, 65156]"
"('URIish.java', 'org.eclipse.jgit.transport.URIish', '<init>', '^([a-z][a-z0-9+-]+)://(?:(?:([^/:@]+)(?::([^\\\\/]+))?@)?((?:[^\\\\/:]+)|(?:\\[[0-9a-f:]+\\]))(?::(\\d+))?((?:/~(?:[^\\\\/]+))?[\\\\/]))?(.+)?$', 'ssh://[::1]/D:\\x')","[162427, 162611, 163531, 163715, 164635, 164819]"
"('Description.java', 'org.junit.runner.Description', 'methodAndClassNamePatternGroupOrDefault', '([\\s\\S]*)\\((.*)\\)', 'testRebaseShouldTryToParseValidLineMarkedAsComment(org.eclipse.jgit.api.RebaseCommandTest)')","[46158, 103722]"
"('Description.java', 'org.junit.runner.Description', 'methodAndClassNamePatternGroupOrDefault', '([\\s\\S]*)\\((.*)\\)', 'testDirectoryFileConflicts_11(org.eclipse.jgit.lib.DirCacheCheckoutTest)')","[23605, 81986]"
"('ChangeIdUtil.java', 'org.eclipse.jgit.util.ChangeIdUtil', 'insertId', '^(Bug|Issue)[a-zA-Z0-9-]*:.*$', 'Signed-off-by: me@you.too')","[188152, 190944, 191749, 192211]"
"('Description.java', 'org.junit.runner.Description', 'methodAndClassNamePatternGroupOrDefault', '([\\s\\S]*)\\((.*)\\)', 'test006_addDeepTree(org.eclipse.jgit.lib.T0002_TreeTest)')","[25038, 83328]"
"('URIish.java', 'org.eclipse.jgit.transport.URIish', '<init>', '^([a-z][a-z0-9+-]+)://(?:(?:([^/:@]+)(?::([^\\\\/]+))?@)?((?:[^\\\\/:]+)|(?:\\[[0-9a-f:]+\\]))(?::(\\d+))?((?:/~(?:[^\\\\/]+))?[\\\\/]))?(.+)?$', 'ssh://1.2.3.4//')","[161921, 162105, 163025, 163209, 164129, 164313]"
"('URIish.java', 'org.eclipse.jgit.transport.URIish', '<init>', '^([a-z][a-z0-9+-]+)://(?:(?:([^/:@]+)(?::([^\\\\/]+))?@)?((?:[^\\\\/:]+)|(?:\\[[0-9a-f:]+\\]))(?::(\\d+))?((?:/~(?:[^\\\\/]+))?[\\\\/]))?(.+)?$', 'ssh://lusr\\example:wtf@[::1]:80//')",[124937]
"('Description.java', 'org.junit.runner.Description', 'methodAndClassNamePatternGroupOrDefault', '([\\s\\S]*)\\((.*)\\)', 'testOnlyOption_f1_7_d(org.eclipse.jgit.api.CommitOnlyTest)')","[49137, 106604]"
"('ChangeIdUtil.java', 'org.eclipse.jgit.util.ChangeIdUtil', 'indexOfChangeId', '(^Change-Id: *I[a-f0-9]{40}$)', 'Change-Id:  I3b7e4e16b503ce00f07ba6ad01d97a356dad7701')",[187580]
"('Description.java', 'org.junit.runner.Description', 'methodAndClassNamePatternGroupOrDefault', '([\\s\\S]*)\\((.*)\\)', 'testUnsupportedGroupCase1(org.eclipse.jgit.fnmatch.FileNameMatcherTest)')","[17887, 76354]"
"('Description.java', 'org.junit.runner.Description', 'methodAndClassNamePatternGroupOrDefault', '([\\s\\S]*)\\((.*)\\)', 'testGetRefs_HeadsOnly_AllPacked1(org.eclipse.jgit.internal.storage.file.RefDirectoryTest)')","[58333, 115382]"
"('Description.java', 'org.junit.runner.Description', 'methodAndClassNamePatternGroupOrDefault', '([\\s\\S]*)\\((.*)\\)', 'org.eclipse.jgit.treewalk.filter.NotTreeFilterTest')","[31338, 186316]"
"('Description.java', 'org.junit.runner.Description', 'methodAndClassNamePatternGroupOrDefault', '([\\s\\S]*)\\((.*)\\)', 'testReadNotExistingBranchConfig(org.eclipse.jgit.internal.storage.file.RefDirectoryTest)')","[58312, 115360]"
"('Description.java', 'org.junit.runner.Description', 'methodAndClassNamePatternGroupOrDefault', '([\\s\\S]*)\\((.*)\\)', 'testInvalidTreeBadSorting2(org.eclipse.jgit.lib.ObjectCheckerTest)')","[25685, 83966]"
"('Description.java', 'org.junit.runner.Description', 'methodAndClassNamePatternGroupOrDefault', '([\\s\\S]*)\\((.*)\\)', 'testStandardFormat_LargeObject(org.eclipse.jgit.internal.storage.file.UnpackedObjectTest)')","[56898, 114018]"
"('URIish.java', 'org.eclipse.jgit.transport.URIish', '<init>', '^(file):([\\\\/](?![\\\\/])((?:[A-Za-z]:)?[\\\\/]?(?:(?:[^\\\\/]+[\\\\/]+)*[^\\\\/]+[\\\\/]*)))$', 'https://me:wtf@example.com:1234/D:/x')",[131814]
"('URIish.java', 'org.eclipse.jgit.transport.URIish', '<init>', '^(file):([\\\\/](?![\\\\/])((?:[A-Za-z]:)?[\\\\/]?(?:(?:[^\\\\/]+[\\\\/]+)*[^\\\\/]+[\\\\/]*)))$', 'http://l usr\\example.com@example.com:80/D:/x')",[143038]
"('Description.java', 'org.junit.runner.Description', 'methodAndClassNamePatternGroupOrDefault', '([\\s\\S]*)\\((.*)\\)', 'testReadFanout2_38(org.eclipse.jgit.notes.NoteMapTest)')","[40755, 98420]"
"('Description.java', 'org.junit.runner.Description', 'methodAndClassNamePatternGroupOrDefault', '([\\s\\S]*)\\((.*)\\)', 'testMixedGroupCase2(org.eclipse.jgit.fnmatch.FileNameMatcherTest)')","[16501, 74902]"
"('URIish.java', 'org.eclipse.jgit.transport.URIish', '<init>', '^(file):([\\\\/](?![\\\\/])((?:[A-Za-z]:)?[\\\\/]?(?:(?:[^\\\\/]+[\\\\/]+)*[^\\\\/]+[\\\\/]*)))$', '/tmp/jgit_test_7285828428477782317_tmp/tmp_2342545421297606686')","[204787, 204912, 205058, 205208]"
"('Description.java', 'org.junit.runner.Description', 'methodAndClassNamePatternGroupOrDefault', '([\\s\\S]*)\\((.*)\\)', 'testRenameBranchCannotLockAFileHEADisOtherLockTo(org.eclipse.jgit.internal.storage.file.RefUpdateTest)')","[56213, 113380]"
"('Description.java', 'org.junit.runner.Description', 'methodAndClassNamePatternGroupOrDefault', '([\\s\\S]*)\\((.*)\\)', 'testTwoLineNoLF(org.eclipse.jgit.util.RawParseUtils_LineMapTest)')","[34828, 92788]"
"('Description.java', 'org.junit.runner.Description', 'methodAndClassNamePatternGroupOrDefault', '([\\s\\S]*)\\((.*)\\)', 'testGetRefs_DiscoversDeletedLoose2(org.eclipse.jgit.internal.storage.file.RefDirectoryTest)')","[58648, 115712]"
"('Description.java', 'org.junit.runner.Description', 'methodAndClassNamePatternGroupOrDefault', '([\\s\\S]*)\\((.*)\\)', 'testIterator_RefusesRemove(org.eclipse.jgit.util.RefMapTest)')","[37097, 94966]"
"('URIish.java', 'org.eclipse.jgit.transport.URIish', '<init>', '^([a-z][a-z0-9+-]+)://(?:(?:([^/:@]+)(?::([^\\\\/]+))?@)?((?:[^\\\\/:]+)|(?:\\[[0-9a-f:]+\\]))(?::(\\d+))?((?:/~(?:[^\\\\/]+))?[\\\\/]))?(.+)?$', 'http://lusr\\example@[::1]/D:/x')","[157965, 158149]"
"('Description.java', 'org.junit.runner.Description', 'methodAndClassNamePatternGroupOrDefault', '([\\s\\S]*)\\((.*)\\)', 'testEmpty_DefaultCapacity(org.eclipse.jgit.util.IntListTest)')","[36078, 93998]"
"('URIish.java', 'org.eclipse.jgit.transport.URIish', '<init>', '^(file):([\\\\/](?![\\\\/])((?:[A-Za-z]:)?[\\\\/]?(?:(?:[^\\\\/]+[\\\\/]+)*[^\\\\/]+[\\\\/]*)))$', 'ssh://l usr\\example.com@1.2.3.4:80//')",[136690]
"('Description.java', 'org.junit.runner.Description', 'methodAndClassNamePatternGroupOrDefault', '([\\s\\S]*)\\((.*)\\)', 'testAddRevFlag(org.eclipse.jgit.revwalk.RevObjectTest)')","[8492, 67268]"
"('Description.java', 'org.junit.runner.Description', 'methodAndClassNamePatternGroupOrDefault', '([\\s\\S]*)\\((.*)\\)', 'whileRefUpdatedRefUpdateSucceeds(org.eclipse.jgit.internal.storage.file.GcPackRefsTest)')","[55337, 112522]"
"('Description.java', 'org.junit.runner.Description', 'methodAndClassNamePatternGroupOrDefault', '([\\s\\S]*)\\((.*)\\)', 'testOnlyOption_f1_12_f2_14_b(org.eclipse.jgit.api.CommitOnlyTest)')","[49515, 107000]"
"('Description.java', 'org.junit.runner.Description', 'methodAndClassNamePatternGroupOrDefault', '([\\s\\S]*)\\((.*)\\)', 'org.eclipse.jgit.dircache.DirCacheTreeTest')","[11858, 182343]"
"('Description.java', 'org.junit.runner.Description', 'methodAndClassNamePatternGroupOrDefault', '([\\s\\S]*)\\((.*)\\)', 'testTimeout_writeByte_Timeout(org.eclipse.jgit.util.io.TimeoutOutputStreamTest)')","[32437, 90522]"
"('Description.java', 'org.junit.runner.Description', 'methodAndClassNamePatternGroupOrDefault', '([\\s\\S]*)\\((.*)\\)', 'deleteMergedBranch_historyNotPruned(org.eclipse.jgit.internal.storage.file.GcBranchPrunedTest)')","[59064, 116108]"
"('Description.java', 'org.junit.runner.Description', 'methodAndClassNamePatternGroupOrDefault', '([\\s\\S]*)\\((.*)\\)', 'testConstructor(org.eclipse.jgit.lib.SymbolicRefTest)')","[20412, 78840]"
"('URIish.java', 'org.eclipse.jgit.transport.URIish', '<init>', '^([a-z][a-z0-9+-]+)://(?:(?:([^/:@]+)(?::([^\\\\/]+))?@)?((?:[^\\\\/:]+)|(?:\\[[0-9a-f:]+\\]))(?::(\\d+))?((?:/~(?:[^\\\\/]+))?[\\\\/]))?(.+)?$', 'http://l usr\\example.com@[::1]:80/D:\\x')",[143843]
"('Description.java', 'org.junit.runner.Description', 'methodAndClassNamePatternGroupOrDefault', '([\\s\\S]*)\\((.*)\\)', 'testSquashMergeConflict(org.eclipse.jgit.api.MergeCommandTest)')","[44005, 101566]"
"('Description.java', 'org.junit.runner.Description', 'methodAndClassNamePatternGroupOrDefault', '([\\s\\S]*)\\((.*)\\)', 'testNoLeadingOrTrailingDot(org.eclipse.jgit.lib.ValidRefNameTest)')","[24229, 82580]"
"('URIish.java', 'org.eclipse.jgit.transport.URIish', '<init>', '^(file):([\\\\/](?![\\\\/])((?:[A-Za-z]:)?[\\\\/]?(?:(?:[^\\\\/]+[\\\\/]+)*[^\\\\/]+[\\\\/]*)))$', 'https://me@[::1]:80//')",[145890]
"('Description.java', 'org.junit.runner.Description', 'methodAndClassNamePatternGroupOrDefault', '([\\s\\S]*)\\((.*)\\)', 'testFileInFolderCommittedDeleted(org.eclipse.jgit.treewalk.filter.IndexDiffFilterTest)')","[30254, 88454]"
"('Description.java', 'org.junit.runner.Description', 'methodAndClassNamePatternGroupOrDefault', '([\\s\\S]*)\\((.*)\\)', 'testDerefTree(org.eclipse.jgit.lib.RepositoryResolveTest)')","[27405, 85748]"
"('ChangeIdUtil.java', 'org.eclipse.jgit.util.ChangeIdUtil', 'indexOfFirstFooterLine', '(^[a-zA-Z0-9-]+:(?!//).*$)', 'This is conflicting')","[202187, 202274, 202304, 202334, 202364, 202394, 202424, 202454, 202484]"
"('URIish.java', 'org.eclipse.jgit.transport.URIish', '<init>', '^([a-z][a-z0-9+-]+)://(?:(?:([^/:@]+)(?::([^\\\\/]+))?@)?((?:[^\\\\/:]+)|(?:\\[[0-9a-f:]+\\]))(?::(\\d+))?((?:/~(?:[^\\\\/]+))?[\\\\/]))?(.+)?$', 'ssh://lusr\\example@1.2.3.4//')","[150881, 151065]"
"('Repository.java', 'org.eclipse.jgit.lib.Repository', 'resolve', '^-\\d+$', '2')","[184824, 184851]"
"('URIish.java', 'org.eclipse.jgit.transport.URIish', '<init>', '^(file):([\\\\/](?![\\\\/])((?:[A-Za-z]:)?[\\\\/]?(?:(?:[^\\\\/]+[\\\\/]+)*[^\\\\/]+[\\\\/]*)))$', 'https://l usr\\example.com@[::1]//abc')","[160104, 160288]"
"('URIish.java', 'org.eclipse.jgit.transport.URIish', '<init>', '^([a-z][a-z0-9+-]+)://(?:(?:([^/:@]+)(?::([^\\\\/]+))?@)?((?:[^\\\\/:]+)|(?:\\[[0-9a-f:]+\\]))(?::(\\d+))?((?:/~(?:[^\\\\/]+))?[\\\\/]))?(.+)?$', 'file:///tmp/jgit_test_3938080632504476553_tmp/tmp_7170099663148325778/testCloneRepositoryWithNestedSubmodules2/.git/')","[196856, 197238]"
"('Description.java', 'org.junit.runner.Description', 'methodAndClassNamePatternGroupOrDefault', '([\\s\\S]*)\\((.*)\\)', 'testPushRefUpdate(org.eclipse.jgit.api.PushCommandTest)')","[42066, 99674]"
"('Description.java', 'org.junit.runner.Description', 'methodAndClassNamePatternGroupOrDefault', '([\\s\\S]*)\\((.*)\\)', 'testTrivialTwoWay_disjointhistories(org.eclipse.jgit.merge.SimpleMergeTest)')","[9929, 68654]"
"('Description.java', 'org.junit.runner.Description', 'methodAndClassNamePatternGroupOrDefault', '([\\s\\S]*)\\((.*)\\)', 'testMixedGroupCase9(org.eclipse.jgit.fnmatch.FileNameMatcherTest)')","[16648, 75056]"
"('Description.java', 'org.junit.runner.Description', 'methodAndClassNamePatternGroupOrDefault', '([\\s\\S]*)\\((.*)\\)', 't1nearerT2(org.eclipse.jgit.api.DescribeCommandTest)')","[44633, 102204]"
"('Description.java', 'org.junit.runner.Description', 'methodAndClassNamePatternGroupOrDefault', '([\\s\\S]*)\\((.*)\\)', 'emptyRepositoryFormatVersion(org.eclipse.jgit.internal.storage.file.FileRepositoryBuilderTest)')","[53696, 110982]"
"('Description.java', 'org.junit.runner.Description', 'methodAndClassNamePatternGroupOrDefault', '([\\s\\S]*)\\((.*)\\)', 'testFastForwardOnly(org.eclipse.jgit.api.MergeCommandTest)')","[43879, 101434]"
"('Description.java', 'org.junit.runner.Description', 'methodAndClassNamePatternGroupOrDefault', '([\\s\\S]*)\\((.*)\\)', 'testANY_DIFF_IncludesSingleTreeCase(org.eclipse.jgit.treewalk.filter.TreeFilterTest)')","[31027, 89224]"
"('Description.java', 'org.junit.runner.Description', 'methodAndClassNamePatternGroupOrDefault', '([\\s\\S]*)\\((.*)\\)', 'testInvalidCommitInvalidParent1(org.eclipse.jgit.lib.ObjectCheckerTest)')","[25895, 84186]"
"('Description.java', 'org.junit.runner.Description', 'methodAndClassNamePatternGroupOrDefault', '([\\s\\S]*)\\((.*)\\)', 'testExpandFromDestination_NonWildcard(org.eclipse.jgit.transport.RefSpecTest)')","[2689, 61746]"
"('Description.java', 'org.junit.runner.Description', 'methodAndClassNamePatternGroupOrDefault', '([\\s\\S]*)\\((.*)\\)', 'testListAllTagsInRepositoryInOrder(org.eclipse.jgit.api.TagCommandTest)')","[41629, 99256]"
"('URIish.java', 'org.eclipse.jgit.transport.URIish', '<init>', '^([a-z][a-z0-9+-]+)://(?:(?:([^/:@]+)(?::([^\\\\/]+))?@)?((?:[^\\\\/:]+)|(?:\\[[0-9a-f:]+\\]))(?::(\\d+))?((?:/~(?:[^\\\\/]+))?[\\\\/]))?(.+)?$', 'ssh+git://lusr\\example@1.2.3.4:80/D:\\x')",[141267]
"('Description.java', 'org.junit.runner.Description', 'methodAndClassNamePatternGroupOrDefault', '([\\s\\S]*)\\((.*)\\)', 'testSpecialGroupCase0(org.eclipse.jgit.fnmatch.FileNameMatcherTest)')","[16102, 74484]"
"('Description.java', 'org.junit.runner.Description', 'methodAndClassNamePatternGroupOrDefault', '([\\s\\S]*)\\((.*)\\)', 'testPathsResetOnDirs(org.eclipse.jgit.api.ResetCommandTest)')","[42774, 100356]"
"('Description.java', 'org.junit.runner.Description', 'methodAndClassNamePatternGroupOrDefault', '([\\s\\S]*)\\((.*)\\)', 'testBoundary(org.eclipse.jgit.util.io.AutoCRLFOutputStreamTest)')","[32624, 90698]"
"('URIish.java', 'org.eclipse.jgit.transport.URIish', '<init>', '^([a-z][a-z0-9+-]+)://(?:(?:([^/:@]+)(?::([^\\\\/]+))?@)?((?:[^\\\\/:]+)|(?:\\[[0-9a-f:]+\\]))(?::(\\d+))?((?:/~(?:[^\\\\/]+))?[\\\\/]))?(.+)?$', '/tmp/jgit_test_459034667116329301_tmp/tmp_5950396153337027342')","[203866, 203996]"
"('URIish.java', 'org.eclipse.jgit.transport.URIish', '<init>', '^(file):([\\\\/](?![\\\\/])((?:[A-Za-z]:)?[\\\\/]?(?:(?:[^\\\\/]+[\\\\/]+)*[^\\\\/]+[\\\\/]*)))$', 'http://l usr\\example.com@[::1]:1234//abc')",[143544]
"('Description.java', 'org.junit.runner.Description', 'methodAndClassNamePatternGroupOrDefault', '([\\s\\S]*)\\((.*)\\)', 'unstashNonStashCommit(org.eclipse.jgit.api.StashApplyCommandTest)')","[51521, 109002]"
"('URIish.java', 'org.eclipse.jgit.transport.URIish', '<init>', '^([a-z][a-z0-9+-]+)://(?:(?:([^/:@]+)(?::([^\\\\/]+))?@)?((?:[^\\\\/:]+)|(?:\\[[0-9a-f:]+\\]))(?::(\\d+))?((?:/~(?:[^\\\\/]+))?[\\\\/]))?(.+)?$', 'file:///tmp/jgit_test_5830532143575264668_tmp/tmp_677279644560589145/.git/')",[183440]
"('URIish.java', 'org.eclipse.jgit.transport.URIish', '<init>', '^(file):([\\\\/](?![\\\\/])((?:[A-Za-z]:)?[\\\\/]?(?:(?:[^\\\\/]+[\\\\/]+)*[^\\\\/]+[\\\\/]*)))$', 'https://me:wtf@1.2.3.4:1234//')",[132090]
"('URIish.java', 'org.eclipse.jgit.transport.URIish', '<init>', '^([\\\\/]?((?:[A-Za-z]:)?[\\\\/]?(?:(?:[^\\\\/]+[\\\\/]+)*[^\\\\/]+[\\\\/]*)))$', '/abc.git/')",[175629]
"('Description.java', 'org.junit.runner.Description', 'methodAndClassNamePatternGroupOrDefault', '([\\s\\S]*)\\((.*)\\)', 'workingDirectoryContentMerge(org.eclipse.jgit.api.StashApplyCommandTest)')","[51122, 108584]"
"('URIish.java', 'org.eclipse.jgit.transport.URIish', '<init>', '^([a-z][a-z0-9+-]+)://(?:(?:([^/:@]+)(?::([^\\\\/]+))?@)?((?:[^\\\\/:]+)|(?:\\[[0-9a-f:]+\\]))(?::(\\d+))?((?:/~(?:[^\\\\/]+))?[\\\\/]))?(.+)?$', 'ssh://l usr\\example.com:wtf@1.2.3.4:80/D:/x')",[123557]
"('Description.java', 'org.junit.runner.Description', 'methodAndClassNamePatternGroupOrDefault', '([\\s\\S]*)\\((.*)\\)', 'testDirectoryFileConflicts_12(org.eclipse.jgit.lib.DirCacheCheckoutTest)')","[23626, 82008]"
"('Description.java', 'org.junit.runner.Description', 'methodAndClassNamePatternGroupOrDefault', '([\\s\\S]*)\\((.*)\\)', 'testOnlyOption_f1_14_b(org.eclipse.jgit.api.CommitOnlyTest)')","[50145, 107660]"
"('URIish.java', 'org.eclipse.jgit.transport.URIish', '<init>', '^([a-z][a-z0-9+-]+)://(?:(?:([^/:@]+)(?::([^\\\\/]+))?@)?((?:[^\\\\/:]+)|(?:\\[[0-9a-f:]+\\]))(?::(\\d+))?((?:/~(?:[^\\\\/]+))?[\\\\/]))?(.+)?$', 'ssh://me:wtf@1.2.3.4:1234/D:/x')",[122269]
"('URIish.java', 'org.eclipse.jgit.transport.URIish', '<init>', '^(file):([\\\\/](?![\\\\/])((?:[A-Za-z]:)?[\\\\/]?(?:(?:[^\\\\/]+[\\\\/]+)*[^\\\\/]+[\\\\/]*)))$', 'ssh://lusr\\example:wtf@example.com:80/D:/x')",[124270]
"('URIish.java', 'org.eclipse.jgit.transport.URIish', '<init>', '^([a-z][a-z0-9+-]+)://(?:(?:([^/:@]+)(?::([^\\\\/]+))?@)?((?:[^\\\\/:]+)|(?:\\[[0-9a-f:]+\\]))(?::(\\d+))?((?:/~(?:[^\\\\/]+))?[\\\\/]))?(.+)?$', 'ssh://1.2.3.4//abc')","[161967, 162151, 163071, 163255, 164175, 164359]"
"('URIish.java', 'org.eclipse.jgit.transport.URIish', '<init>', '^(?:([^/:@]+)(?::([^\\\\/]+))?@)?((?:[^\\\\/:]+)|(?:\\[[0-9a-f:]+\\])):((?:(?:/~(?:[^\\\\/]+))[\\\\/])?(?:(?:[^\\\\/]+[\\\\/]+)*[^\\\\/]+[\\\\/]*))$', '/tmp/jgit_test_7285828428477782317_tmp/tmp_2342545421297606686')","[204835, 204970, 205118, 205268]"
"('Description.java', 'org.junit.runner.Description', 'methodAndClassNamePatternGroupOrDefault', '([\\s\\S]*)\\((.*)\\)', 'testRemoveFirstURI(org.eclipse.jgit.transport.RemoteConfigTest)')","[910, 59942]"
"('URIish.java', 'org.eclipse.jgit.transport.URIish', '<init>', '^([a-z][a-z0-9+-]+)://(?:(?:([^/:@]+)(?::([^\\\\/]+))?@)?((?:[^\\\\/:]+)|(?:\\[[0-9a-f:]+\\]))(?::(\\d+))?((?:/~(?:[^\\\\/]+))?[\\\\/]))?(.+)?$', 'https://lusr\\example:wtf@[::1]:1234//abc')",[134735]
"('Description.java', 'org.junit.runner.Description', 'methodAndClassNamePatternGroupOrDefault', '([\\s\\S]*)\\((.*)\\)', 'testTwoLineFooBar(org.eclipse.jgit.util.RawParseUtils_LineMapTest)')","[34786, 92744]"
"('Description.java', 'org.junit.runner.Description', 'methodAndClassNamePatternGroupOrDefault', '([\\s\\S]*)\\((.*)\\)', 'testEscapedBracket5(org.eclipse.jgit.fnmatch.FileNameMatcherTest)')","[19315, 77850]"
"('Description.java', 'org.junit.runner.Description', 'methodAndClassNamePatternGroupOrDefault', '([\\s\\S]*)\\((.*)\\)', 'testRemoveLast(org.eclipse.jgit.notes.LeafBucketTest)')","[40360, 98046]"
"('URIish.java', 'org.eclipse.jgit.transport.URIish', '<init>', '^(file):([\\\\/](?![\\\\/])((?:[A-Za-z]:)?[\\\\/]?(?:(?:[^\\\\/]+[\\\\/]+)*[^\\\\/]+[\\\\/]*)))$', 'http://lusr\\example@[::1]:1234/D:\\x')",[144740]
"('URIish.java', 'org.eclipse.jgit.transport.URIish', '<init>', '^(file):([\\\\/](?![\\\\/])((?:[A-Za-z]:)?[\\\\/]?(?:(?:[^\\\\/]+[\\\\/]+)*[^\\\\/]+[\\\\/]*)))$', 'http://me:wtf@[::1]:1234/D:/x')",[129238]
"('Description.java', 'org.junit.runner.Description', 'methodAndClassNamePatternGroupOrDefault', '([\\s\\S]*)\\((.*)\\)', 'testSaveAllTags(org.eclipse.jgit.transport.RemoteConfigTest)')","[700, 59722]"
"('URIish.java', 'org.eclipse.jgit.transport.URIish', '<init>', '^(?:([^/:@]+)(?::([^\\\\/]+))?@)?((?:[^\\\\/:]+)|(?:\\[[0-9a-f:]+\\])):((?:(?:/~(?:[^\\\\/]+))[\\\\/])?(?:(?:[^\\\\/]+[\\\\/]+)*[^\\\\/]+[\\\\/]*))$', '/tmp/jgit_test_4323105091129792259_tmp/tmp_6865223474386595542')","[205400, 205535, 205683]"
"('Description.java', 'org.junit.runner.Description', 'methodAndClassNamePatternGroupOrDefault', '([\\s\\S]*)\\((.*)\\)', 'testTwoRangesInOneGroupCase2(org.eclipse.jgit.fnmatch.FileNameMatcherTest)')","[19084, 77608]"
"('Description.java', 'org.junit.runner.Description', 'methodAndClassNamePatternGroupOrDefault', '([\\s\\S]*)\\((.*)\\)', 'org.eclipse.jgit.api.PushCommandTest')","[42045, 196483]"
"('Description.java', 'org.junit.runner.Description', 'methodAndClassNamePatternGroupOrDefault', '([\\s\\S]*)\\((.*)\\)', 'testGetRefs_CorruptObjectIdReference(org.eclipse.jgit.internal.storage.file.RefDirectoryTest)')","[58102, 115140]"
"('Description.java', 'org.junit.runner.Description', 'methodAndClassNamePatternGroupOrDefault', '([\\s\\S]*)\\((.*)\\)', 'testValidTreeSorting3(org.eclipse.jgit.lib.ObjectCheckerTest)')","[25769, 84054]"
"('Description.java', 'org.junit.runner.Description', 'methodAndClassNamePatternGroupOrDefault', '([\\s\\S]*)\\((.*)\\)', 'testRebaseInteractiveFixupFirstCommitShouldFail(org.eclipse.jgit.api.RebaseCommandTest)')","[45654, 103194]"
"('URIish.java', 'org.eclipse.jgit.transport.URIish', '<init>', '^(file):([\\\\/](?![\\\\/])((?:[A-Za-z]:)?[\\\\/]?(?:(?:[^\\\\/]+[\\\\/]+)*[^\\\\/]+[\\\\/]*)))$', 'http://lusr\\example@example.com/D:/x')","[157206, 157390]"
"('Description.java', 'org.junit.runner.Description', 'methodAndClassNamePatternGroupOrDefault', '([\\s\\S]*)\\((.*)\\)', 'testRenameBranchCannotLockAFileHEADisFromLockHEAD(org.eclipse.jgit.internal.storage.file.RefUpdateTest)')","[56087, 113248]"
"('Description.java', 'org.junit.runner.Description', 'methodAndClassNamePatternGroupOrDefault', '([\\s\\S]*)\\((.*)\\)', 'testDepth3(org.eclipse.jgit.revwalk.RevWalkShallowTest)')","[9679, 68412]"
"('Description.java', 'org.junit.runner.Description', 'methodAndClassNamePatternGroupOrDefault', '([\\s\\S]*)\\((.*)\\)', 'commitSubmoduleUpdate(org.eclipse.jgit.api.CommitCommandTest)')","[43482, 101038]"
"('Description.java', 'org.junit.runner.Description', 'methodAndClassNamePatternGroupOrDefault', '([\\s\\S]*)\\((.*)\\)', 'testVerySimpleGroupRangeCase0(org.eclipse.jgit.fnmatch.FileNameMatcherTest)')","[17740, 76200]"
"('Description.java', 'org.junit.runner.Description', 'methodAndClassNamePatternGroupOrDefault', '([\\s\\S]*)\\((.*)\\)', 'testDeleteD(org.eclipse.jgit.api.ApplyCommandTest)')","[46824, 104360]"
"('URIish.java', 'org.eclipse.jgit.transport.URIish', '<init>', '^([a-z][a-z0-9+-]+)://(?:(?:([^/:@]+)(?::([^\\\\/]+))?@)?((?:[^\\\\/:]+)|(?:\\[[0-9a-f:]+\\]))(?::(\\d+))?((?:/~(?:[^\\\\/]+))?[\\\\/]))?(.+)?$', 'ssh+git://me:wtf@1.2.3.4:80//abc')",[125719]
"('Description.java', 'org.junit.runner.Description', 'methodAndClassNamePatternGroupOrDefault', '([\\s\\S]*)\\((.*)\\)', 'test000_openrepo_default_absolute_workdirconfig(org.eclipse.jgit.internal.storage.file.T0003_BasicTest)')","[54049, 111312]"
"('URIish.java', 'org.eclipse.jgit.transport.URIish', '<init>', '^(file):([\\\\/](?![\\\\/])((?:[A-Za-z]:)?[\\\\/]?(?:(?:[^\\\\/]+[\\\\/]+)*[^\\\\/]+[\\\\/]*)))$', 'https://me:wtf@[::1]:1234//')",[132458]
"('Description.java', 'org.junit.runner.Description', 'methodAndClassNamePatternGroupOrDefault', '([\\s\\S]*)\\((.*)\\)', 'test009_readNamesInSection(org.eclipse.jgit.lib.ConfigTest)')","[28071, 86386]"
"('URIish.java', 'org.eclipse.jgit.transport.URIish', '<init>', '^(file):([\\\\/](?![\\\\/])((?:[A-Za-z]:)?[\\\\/]?(?:(?:[^\\\\/]+[\\\\/]+)*[^\\\\/]+[\\\\/]*)))$', 'ssh+git://l usr\\example.com@[::1]//')","[153434, 153618]"
"('Description.java', 'org.junit.runner.Description', 'methodAndClassNamePatternGroupOrDefault', '([\\s\\S]*)\\((.*)\\)', 'test007_Open(org.eclipse.jgit.internal.storage.file.T0003_BasicTest)')","[54175, 111444]"
"('URIish.java', 'org.eclipse.jgit.transport.URIish', '<init>', '^([a-z][a-z0-9+-]+)://(?:(?:([^/:@]+)(?::([^\\\\/]+))?@)?((?:[^\\\\/:]+)|(?:\\[[0-9a-f:]+\\]))(?::(\\d+))?((?:/~(?:[^\\\\/]+))?[\\\\/]))?(.+)?$', 'ssh+git://l usr\\example.com@example.com:80/D:\\x')",[139795]
"('Description.java', 'org.junit.runner.Description', 'methodAndClassNamePatternGroupOrDefault', '([\\s\\S]*)\\((.*)\\)', 'testBuildRejectsUnsetFileMode(org.eclipse.jgit.dircache.DirCacheBuilderTest)')","[12192, 70766]"
"('URIish.java', 'org.eclipse.jgit.transport.URIish', '<init>', '^(file):([\\\\/](?![\\\\/])((?:[A-Za-z]:)?[\\\\/]?(?:(?:[^\\\\/]+[\\\\/]+)*[^\\\\/]+[\\\\/]*)))$', 'ssh+git://l usr\\example.com@[::1]/D:\\x')","[153572, 153756]"
"('URIish.java', 'org.eclipse.jgit.transport.URIish', '<init>', '^([a-z][a-z0-9+-]+)://(?:(?:([^/:@]+)(?::([^\\\\/]+))?@)?((?:[^\\\\/:]+)|(?:\\[[0-9a-f:]+\\]))(?::(\\d+))?((?:/~(?:[^\\\\/]+))?[\\\\/]))?(.+)?$', 'https://me:wtf@[::1]:1234/D:\\x')",[132619]
"('Description.java', 'org.junit.runner.Description', 'methodAndClassNamePatternGroupOrDefault', '([\\s\\S]*)\\((.*)\\)', 'noLocalChanges(org.eclipse.jgit.api.StashCreateCommandTest)')","[42026, 99652]"
"('Description.java', 'org.junit.runner.Description', 'methodAndClassNamePatternGroupOrDefault', '([\\s\\S]*)\\((.*)\\)', 'LOCALE(org.eclipse.jgit.util.GitDateFormatterTest)')","[32208, 90302]"
"('URIish.java', 'org.eclipse.jgit.transport.URIish', '<init>', '^([a-z][a-z0-9+-]+)://(?:(?:([^/:@]+)(?::([^\\\\/]+))?@)?((?:[^\\\\/:]+)|(?:\\[[0-9a-f:]+\\]))(?::(\\d+))?((?:/~(?:[^\\\\/]+))?[\\\\/]))?(.+)?$', 'ssh+git://me:wtf@1.2.3.4:1234/D:/x')",[125581]
"('URIish.java', 'org.eclipse.jgit.transport.URIish', '<init>', '^(file):([\\\\/](?![\\\\/])((?:[A-Za-z]:)?[\\\\/]?(?:(?:[^\\\\/]+[\\\\/]+)*[^\\\\/]+[\\\\/]*)))$', 'ssh://me@1.2.3.4/D:\\x')","[148788, 148972]"
"('Description.java', 'org.junit.runner.Description', 'methodAndClassNamePatternGroupOrDefault', '([\\s\\S]*)\\((.*)\\)', 'testNonBlockingPartialRead(org.eclipse.jgit.util.io.UnionInputStreamTest)')","[33185, 91226]"
"('URIish.java', 'org.eclipse.jgit.transport.URIish', '<init>', '^(file):([\\\\/](?![\\\\/])((?:[A-Za-z]:)?[\\\\/]?(?:(?:[^\\\\/]+[\\\\/]+)*[^\\\\/]+[\\\\/]*)))$', 'ssh+git://lusr\\example@[::1]:1234/D:/x')",[141382]
"('URIish.java', 'org.eclipse.jgit.transport.URIish', '<init>', '^([a-z][a-z0-9+-]+)://(?:(?:([^/:@]+)(?::([^\\\\/]+))?@)?((?:[^\\\\/:]+)|(?:\\[[0-9a-f:]+\\]))(?::(\\d+))?((?:/~(?:[^\\\\/]+))?[\\\\/]))?(.+)?$', 'git://host/abc/')",[176020]
"('Description.java', 'org.junit.runner.Description', 'methodAndClassNamePatternGroupOrDefault', '([\\s\\S]*)\\((.*)\\)', 'testRules4thru13_IndexEntryNotInHead(org.eclipse.jgit.lib.DirCacheCheckoutTest)')","[23521, 81898]"
"('URIish.java', 'org.eclipse.jgit.transport.URIish', '<init>', '^([a-z][a-z0-9+-]+)://(?:(?:([^/:@]+)(?::([^\\\\/]+))?@)?((?:[^\\\\/:]+)|(?:\\[[0-9a-f:]+\\]))(?::(\\d+))?((?:/~(?:[^\\\\/]+))?[\\\\/]))?(.+)?$', 'http://lusr\\example:wtf@example.com:1234//abc')",[130687]
"('Description.java', 'org.junit.runner.Description', 'methodAndClassNamePatternGroupOrDefault', '([\\s\\S]*)\\((.*)\\)', 'testThreeBranches(org.eclipse.jgit.merge.MergeMessageFormatterTest)')","[10948, 69622]"
"('URIish.java', 'org.eclipse.jgit.transport.URIish', '<init>', '^(file):([\\\\/](?![\\\\/])((?:[A-Za-z]:)?[\\\\/]?(?:(?:[^\\\\/]+[\\\\/]+)*[^\\\\/]+[\\\\/]*)))$', 'ssh://me@1.2.3.4:1234/D:\\x')",[135540]
"('Description.java', 'org.junit.runner.Description', 'methodAndClassNamePatternGroupOrDefault', '([\\s\\S]*)\\((.*)\\)', 'testMultipleDeletions(org.eclipse.jgit.api.MergeCommandTest)')","[43963, 101522]"
"('Description.java', 'org.junit.runner.Description', 'methodAndClassNamePatternGroupOrDefault', '([\\s\\S]*)\\((.*)\\)', 'testUpperGroupCase4(org.eclipse.jgit.fnmatch.FileNameMatcherTest)')","[18475, 76970]"
"('Description.java', 'org.junit.runner.Description', 'methodAndClassNamePatternGroupOrDefault', '([\\s\\S]*)\\((.*)\\)', 'submoduleNestedWithHeadMatchingIndex(org.eclipse.jgit.treewalk.FileTreeIteratorTest)')","[28947, 87244]"
"('Description.java', 'org.junit.runner.Description', 'methodAndClassNamePatternGroupOrDefault', '([\\s\\S]*)\\((.*)\\)', 'testParse_GitStyleMessageWithCRLF(org.eclipse.jgit.revwalk.RevCommitParseTest)')","[8910, 67686]"
"('URIish.java', 'org.eclipse.jgit.transport.URIish', '<init>', '^(file):([\\\\/](?![\\\\/])((?:[A-Za-z]:)?[\\\\/]?(?:(?:[^\\\\/]+[\\\\/]+)*[^\\\\/]+[\\\\/]*)))$', 'https://lusr\\example@1.2.3.4:80//')",[147730]
"('Description.java', 'org.junit.runner.Description', 'methodAndClassNamePatternGroupOrDefault', '([\\s\\S]*)\\((.*)\\)', 'testMixedGroupCase5(org.eclipse.jgit.fnmatch.FileNameMatcherTest)')","[16564, 74968]"
"('URIish.java', 'org.eclipse.jgit.transport.URIish', '<init>', '^([a-z][a-z0-9+-]+)://(?:(?:([^/:@]+)(?::([^\\\\/]+))?@)?((?:[^\\\\/:]+)|(?:\\[[0-9a-f:]+\\]))(?::(\\d+))?((?:/~(?:[^\\\\/]+))?[\\\\/]))?(.+)?$', 'ssh+git://lusr\\example@example.com//abc')","[153871, 154055]"
"('Description.java', 'org.junit.runner.Description', 'methodAndClassNamePatternGroupOrDefault', '([\\s\\S]*)\\((.*)\\)', 'testFileIgnoredNotHonored(org.eclipse.jgit.treewalk.filter.IndexDiffFilterTest)')","[30149, 88344]"
"('URIish.java', 'org.eclipse.jgit.transport.URIish', '<init>', '^(file):([\\\\/](?![\\\\/])((?:[A-Za-z]:)?[\\\\/]?(?:(?:[^\\\\/]+[\\\\/]+)*[^\\\\/]+[\\\\/]*)))$', 'https://me@example.com:80//abc')",[145200]
"('Description.java', 'org.junit.runner.Description', 'methodAndClassNamePatternGroupOrDefault', '([\\s\\S]*)\\((.*)\\)', 'testRebaseShouldStopForEditInCaseOfConflict(org.eclipse.jgit.api.RebaseCommandTest)')","[45759, 103304]"
"('Description.java', 'org.junit.runner.Description', 'methodAndClassNamePatternGroupOrDefault', '([\\s\\S]*)\\((.*)\\)', 'testMaliciousAbsoluteUNCPathWindows2(org.eclipse.jgit.lib.DirCacheCheckoutMaliciousPathTest)')","[21433, 79830]"
"('Description.java', 'org.junit.runner.Description', 'methodAndClassNamePatternGroupOrDefault', '([\\s\\S]*)\\((.*)\\)', 'org.eclipse.jgit.api.RenameBranchCommandTest')","[50874, 207629]"
"('Description.java', 'org.junit.runner.Description', 'methodAndClassNamePatternGroupOrDefault', '([\\s\\S]*)\\((.*)\\)', 'org.eclipse.jgit.internal.storage.file.GcTagTest')","[57518, 210299]"
"('Description.java', 'org.junit.runner.Description', 'methodAndClassNamePatternGroupOrDefault', '([\\s\\S]*)\\((.*)\\)', 'testCopyMetaDataWithoutStage(org.eclipse.jgit.dircache.DirCacheEntryTest)')","[11736, 70348]"
"('Description.java', 'org.junit.runner.Description', 'methodAndClassNamePatternGroupOrDefault', '([\\s\\S]*)\\((.*)\\)', 'testAlnumGroupCase2(org.eclipse.jgit.fnmatch.FileNameMatcherTest)')","[19021, 77542]"
"('URIish.java', 'org.eclipse.jgit.transport.URIish', '<init>', '^([a-z][a-z0-9+-]+)://(?:(?:([^/:@]+)(?::([^\\\\/]+))?@)?((?:[^\\\\/:]+)|(?:\\[[0-9a-f:]+\\]))(?::(\\d+))?((?:/~(?:[^\\\\/]+))?[\\\\/]))?(.+)?$', 'ssh://l usr\\example.com@example.com:1234/D:\\x')",[136299]
"('URIish.java', 'org.eclipse.jgit.transport.URIish', '<init>', '^(file):([\\\\/](?![\\\\/])((?:[A-Za-z]:)?[\\\\/]?(?:(?:[^\\\\/]+[\\\\/]+)*[^\\\\/]+[\\\\/]*)))$', 'http://me:wtf@example.com:80//')",[128594]
"('URIish.java', 'org.eclipse.jgit.transport.URIish', '<init>', '^([a-z][a-z0-9+-]+)://(?:(?:([^/:@]+)(?::([^\\\\/]+))?@)?((?:[^\\\\/:]+)|(?:\\[[0-9a-f:]+\\]))(?::(\\d+))?((?:/~(?:[^\\\\/]+))?[\\\\/]))?(.+)?$', 'example.com:some/p%20ath')","[177929, 177998]"
"('URIish.java', 'org.eclipse.jgit.transport.URIish', '<init>', '^([a-z][a-z0-9+-]+)://(?:(?:([^/:@]+)(?::([^\\\\/]+))?@)?((?:[^\\\\/:]+)|(?:\\[[0-9a-f:]+\\]))(?::(\\d+))?((?:/~(?:[^\\\\/]+))?[\\\\/]))?(.+)?$', 'http://[::1]/D:/x')","[169005, 169189, 170109, 170293, 171213, 171397]"
"('Description.java', 'org.junit.runner.Description', 'methodAndClassNamePatternGroupOrDefault', '([\\s\\S]*)\\((.*)\\)', 'testLowerGroupCase4(org.eclipse.jgit.fnmatch.FileNameMatcherTest)')","[16963, 75386]"
"('Description.java', 'org.junit.runner.Description', 'methodAndClassNamePatternGroupOrDefault', '([\\s\\S]*)\\((.*)\\)', 'test3(org.eclipse.jgit.revwalk.RevWalkPathFilter6012Test)')","[9450, 68192]"
"('URIish.java', 'org.eclipse.jgit.transport.URIish', '<init>', '^(file):([\\\\/](?![\\\\/])((?:[A-Za-z]:)?[\\\\/]?(?:(?:[^\\\\/]+[\\\\/]+)*[^\\\\/]+[\\\\/]*)))$', 'ssh://me@[::1]:80//abc')",[136000]
"('URIish.java', 'org.eclipse.jgit.transport.URIish', '<init>', '^(file):([\\\\/](?![\\\\/])((?:[A-Za-z]:)?[\\\\/]?(?:(?:[^\\\\/]+[\\\\/]+)*[^\\\\/]+[\\\\/]*)))$', 'https://l usr\\example.com@[::1]:80/D:/x')",[147086]
"('URIish.java', 'org.eclipse.jgit.transport.URIish', '<init>', '^(file):([\\\\/](?![\\\\/])((?:[A-Za-z]:)?[\\\\/]?(?:(?:[^\\\\/]+[\\\\/]+)*[^\\\\/]+[\\\\/]*)))$', 'ssh+git://lusr\\example@1.2.3.4:1234//')",[140922]
"('Description.java', 'org.junit.runner.Description', 'methodAndClassNamePatternGroupOrDefault', '([\\s\\S]*)\\((.*)\\)', 'testEmpty_SpecificCapacity(org.eclipse.jgit.util.IntListTest)')","[35952, 93866]"
"('Description.java', 'org.junit.runner.Description', 'methodAndClassNamePatternGroupOrDefault', '([\\s\\S]*)\\((.*)\\)', 'testBlankGroupCase2(org.eclipse.jgit.fnmatch.FileNameMatcherTest)')","[18559, 77058]"
"('Description.java', 'org.junit.runner.Description', 'methodAndClassNamePatternGroupOrDefault', '([\\s\\S]*)\\((.*)\\)', 'testValidTreeSorting4(org.eclipse.jgit.lib.ObjectCheckerTest)')","[25790, 84076]"
"('URIish.java', 'org.eclipse.jgit.transport.URIish', '<init>', '^(file):([\\\\/](?![\\\\/])((?:[A-Za-z]:)?[\\\\/]?(?:(?:[^\\\\/]+[\\\\/]+)*[^\\\\/]+[\\\\/]*)))$', 'https://me:wtf@1.2.3.4:80//')",[132274]
"('Description.java', 'org.junit.runner.Description', 'methodAndClassNamePatternGroupOrDefault', '([\\s\\S]*)\\((.*)\\)', 'testPrintGroupCase2(org.eclipse.jgit.fnmatch.FileNameMatcherTest)')","[18202, 76684]"
"('Description.java', 'org.junit.runner.Description', 'methodAndClassNamePatternGroupOrDefault', '([\\s\\S]*)\\((.*)\\)', 'test009_CreateCommitOldFormat(org.eclipse.jgit.internal.storage.file.T0003_BasicTest)')","[54343, 111620]"
"('URIish.java', 'org.eclipse.jgit.transport.URIish', '<init>', '^(file):([\\\\/](?![\\\\/])((?:[A-Za-z]:)?[\\\\/]?(?:(?:[^\\\\/]+[\\\\/]+)*[^\\\\/]+[\\\\/]*)))$', 'ssh://l usr\\example.com@1.2.3.4:80/D:\\x')",[136828]
"('Description.java', 'org.junit.runner.Description', 'methodAndClassNamePatternGroupOrDefault', '([\\s\\S]*)\\((.*)\\)', 'testParseGitFileName_Foo(org.eclipse.jgit.patch.FileHeaderTest)')","[39656, 97408]"
"('URIish.java', 'org.eclipse.jgit.transport.URIish', '<init>', '^(file):([\\\\/](?![\\\\/])((?:[A-Za-z]:)?[\\\\/]?(?:(?:[^\\\\/]+[\\\\/]+)*[^\\\\/]+[\\\\/]*)))$', 'https://lusr\\example@example.com:80/D:\\x')",[147500]
"('Description.java', 'org.junit.runner.Description', 'methodAndClassNamePatternGroupOrDefault', '([\\s\\S]*)\\((.*)\\)', 'testCrissCross(org.eclipse.jgit.revwalk.RevWalkMergeBaseTest)')","[7748, 66608]"
"('Description.java', 'org.junit.runner.Description', 'methodAndClassNamePatternGroupOrDefault', '([\\s\\S]*)\\((.*)\\)', 'testRemoveMakesEmpty(org.eclipse.jgit.util.RefListTest)')","[35183, 93140]"
"('Description.java', 'org.junit.runner.Description', 'methodAndClassNamePatternGroupOrDefault', '([\\s\\S]*)\\((.*)\\)', 'testCheckoutOfConflictingFileShouldThrow(org.eclipse.jgit.api.PathCheckoutCommandTest)')","[47053, 104580]"
"('Description.java', 'org.junit.runner.Description', 'methodAndClassNamePatternGroupOrDefault', '([\\s\\S]*)\\((.*)\\)', 'testDeleteDifferentNotes(org.eclipse.jgit.notes.NoteMapMergerTest)')","[40984, 98640]"
"('Description.java', 'org.junit.runner.Description', 'methodAndClassNamePatternGroupOrDefault', '([\\s\\S]*)\\((.*)\\)', 'testDistance(org.eclipse.jgit.lib.RepositoryResolveTest)')","[27321, 85660]"
"('URIish.java', 'org.eclipse.jgit.transport.URIish', '<init>', '^([a-z][a-z0-9+-]+)://(?:(?:([^/:@]+)(?::([^\\\\/]+))?@)?((?:[^\\\\/:]+)|(?:\\[[0-9a-f:]+\\]))(?::(\\d+))?((?:/~(?:[^\\\\/]+))?[\\\\/]))?(.+)?$', 'https://l usr\\example.com:wtf@example.com:1234/D:\\x')",[132987]
"('Description.java', 'org.junit.runner.Description', 'methodAndClassNamePatternGroupOrDefault', '([\\s\\S]*)\\((.*)\\)', 'testInvalidCommitInvalidAuthor1(org.eclipse.jgit.lib.ObjectCheckerTest)')","[26021, 84318]"
"('URIish.java', 'org.eclipse.jgit.transport.URIish', '<init>', '^(file):([\\\\/](?![\\\\/])((?:[A-Za-z]:)?[\\\\/]?(?:(?:[^\\\\/]+[\\\\/]+)*[^\\\\/]+[\\\\/]*)))$', 'https://me@1.2.3.4:1234//abc')",[145384]
"('URIish.java', 'org.eclipse.jgit.transport.URIish', '<init>', '^([a-z][a-z0-9+-]+)://(?:(?:([^/:@]+)(?::([^\\\\/]+))?@)?((?:[^\\\\/:]+)|(?:\\[[0-9a-f:]+\\]))(?::(\\d+))?((?:/~(?:[^\\\\/]+))?[\\\\/]))?(.+)?$', 'https://example.com//')","[171489, 171673, 172593, 172777, 173697, 173881]"
"('URIish.java', 'org.eclipse.jgit.transport.URIish', '<init>', '^(file):([\\\\/](?![\\\\/])((?:[A-Za-z]:)?[\\\\/]?(?:(?:[^\\\\/]+[\\\\/]+)*[^\\\\/]+[\\\\/]*)))$', 'http://me@[::1]:1234//abc')",[142440]
"('Description.java', 'org.junit.runner.Description', 'methodAndClassNamePatternGroupOrDefault', '([\\s\\S]*)\\((.*)\\)', 'workingDirectoryContentConflict(org.eclipse.jgit.api.StashApplyCommandTest)')","[51080, 108540]"
"('Description.java', 'org.junit.runner.Description', 'methodAndClassNamePatternGroupOrDefault', '([\\s\\S]*)\\((.*)\\)', 'test009_toString(org.eclipse.jgit.lib.ObjectIdTest)')","[28531, 86848]"
"('URIish.java', 'org.eclipse.jgit.transport.URIish', '<init>', '^(file):([\\\\/](?![\\\\/])((?:[A-Za-z]:)?[\\\\/]?(?:(?:[^\\\\/]+[\\\\/]+)*[^\\\\/]+[\\\\/]*)))$', 'http://user:secret@pass@host.xy:80/some/path')","[178987, 179033]"
"('URIish.java', 'org.eclipse.jgit.transport.URIish', '<init>', '^(?:([^/:@]+)(?::([^\\\\/]+))?@)?([^\\\\/:]{2,}):([\\\\/](?:(?:[^\\\\/]+[\\\\/]+)*[^\\\\/]+[\\\\/]*))$', '/tmp/jgit_test_983393012567618838_tmp/tmp_60736882191290227')","[204594, 204734]"
"('Description.java', 'org.junit.runner.Description', 'methodAndClassNamePatternGroupOrDefault', '([\\s\\S]*)\\((.*)\\)', 'RELATIVE(org.eclipse.jgit.util.GitDateFormatterTest)')","[32376, 90478]"
"('Description.java', 'org.junit.runner.Description', 'methodAndClassNamePatternGroupOrDefault', '([\\s\\S]*)\\((.*)\\)', 'testRebaseShouldSquashInCaseOfConflict(org.eclipse.jgit.api.RebaseCommandTest)')","[46179, 103744]"
"('URIish.java', 'org.eclipse.jgit.transport.URIish', '<init>', '^(file):([\\\\/](?![\\\\/])((?:[A-Za-z]:)?[\\\\/]?(?:(?:[^\\\\/]+[\\\\/]+)*[^\\\\/]+[\\\\/]*)))$', 'ssh+git://lusr\\example@example.com:1234/D:\\x')",[140692]
"('QuotedString.java', 'org.eclipse.jgit.util.QuotedString$BourneUserPathStyle', 'quote', '^~[A-Za-z0-9_-]+$', ""'"")","[193011, 193036]"
"('Description.java', 'org.junit.runner.Description', 'methodAndClassNamePatternGroupOrDefault', '([\\s\\S]*)\\((.*)\\)', 'testOnlyOption_f1_9_a(org.eclipse.jgit.api.CommitOnlyTest)')","[49284, 106758]"
"('URIish.java', 'org.eclipse.jgit.transport.URIish', '<init>', '^([a-z][a-z0-9+-]+)://(?:(?:([^/:@]+)(?::([^\\\\/]+))?@)?((?:[^\\\\/:]+)|(?:\\[[0-9a-f:]+\\]))(?::(\\d+))?((?:/~(?:[^\\\\/]+))?[\\\\/]))?(.+)?$', 'ssh://l usr\\example.com@example.com/D:/x')","[149501, 149685]"
"('Description.java', 'org.junit.runner.Description', 'methodAndClassNamePatternGroupOrDefault', '([\\s\\S]*)\\((.*)\\)', 'testXDigitGroupCase2(org.eclipse.jgit.fnmatch.FileNameMatcherTest)')","[18727, 77234]"
"('Description.java', 'org.junit.runner.Description', 'methodAndClassNamePatternGroupOrDefault', '([\\s\\S]*)\\((.*)\\)', 'testInvalidTagName(org.eclipse.jgit.api.TagCommandTest)')","[41650, 99278]"
"('URIish.java', 'org.eclipse.jgit.transport.URIish', '<init>', '^([a-z][a-z0-9+-]+)://(?:(?:([^/:@]+)(?::([^\\\\/]+))?@)?((?:[^\\\\/:]+)|(?:\\[[0-9a-f:]+\\]))(?::(\\d+))?((?:/~(?:[^\\\\/]+))?[\\\\/]))?(.+)?$', 'ssh+git://example.com/D:/x')","[164957, 165141, 166061, 166245, 167165, 167349]"
"('Description.java', 'org.junit.runner.Description', 'methodAndClassNamePatternGroupOrDefault', '([\\s\\S]*)\\((.*)\\)', 'testGetRefs_HeadOnOneBranch(org.eclipse.jgit.internal.storage.file.RefDirectoryTest)')","[57808, 114832]"
"('Description.java', 'org.junit.runner.Description', 'methodAndClassNamePatternGroupOrDefault', '([\\s\\S]*)\\((.*)\\)', 'testStandardFormat_SmallObject_TrailingGarbage(org.eclipse.jgit.internal.storage.file.UnpackedObjectTest)')","[56730, 113842]"
"('URIish.java', 'org.eclipse.jgit.transport.URIish', '<init>', '^([a-z][a-z0-9+-]+)://(?:(?:([^/:@]+)(?::([^\\\\/]+))?@)?((?:[^\\\\/:]+)|(?:\\[[0-9a-f:]+\\]))(?::(\\d+))?((?:/~(?:[^\\\\/]+))?[\\\\/]))?(.+)?$', 'https://l usr\\example.com@[::1]:1234//')",[146833]
"('Description.java', 'org.junit.runner.Description', 'methodAndClassNamePatternGroupOrDefault', '([\\s\\S]*)\\((.*)\\)', 'org.eclipse.jgit.treewalk.EmptyTreeIteratorTest')","[29649, 186154]"
"('Description.java', 'org.junit.runner.Description', 'methodAndClassNamePatternGroupOrDefault', '([\\s\\S]*)\\((.*)\\)', 'org.eclipse.jgit.transport.URIishTest')","[1076, 180072]"
"('URIish.java', 'org.eclipse.jgit.transport.URIish', '<init>', '^([a-z][a-z0-9+-]+)://(?:(?:([^/:@]+)(?::([^\\\\/]+))?@)?((?:[^\\\\/:]+)|(?:\\[[0-9a-f:]+\\]))(?::(\\d+))?((?:/~(?:[^\\\\/]+))?[\\\\/]))?(.+)?$', 'file:///tmp/jgit_test_4892568789505525695_tmp/tmp_8246577018084337858/.git/')",[185789]
"('URIish.java', 'org.eclipse.jgit.transport.URIish', '<init>', '^(?:([^/:@]+)(?::([^\\\\/]+))?@)?([^\\\\/:]{2,}):([\\\\/](?:(?:[^\\\\/]+[\\\\/]+)*[^\\\\/]+[\\\\/]*))$', '/abc.git/')",[175606]
"('Description.java', 'org.junit.runner.Description', 'methodAndClassNamePatternGroupOrDefault', '([\\s\\S]*)\\((.*)\\)', 'testFormatWithConflictsWithFooters(org.eclipse.jgit.merge.MergeMessageFormatterTest)')","[11032, 69710]"
"('URIish.java', 'org.eclipse.jgit.transport.URIish', '<init>', '^(file):([\\\\/](?![\\\\/])((?:[A-Za-z]:)?[\\\\/]?(?:(?:[^\\\\/]+[\\\\/]+)*[^\\\\/]+[\\\\/]*)))$', 'https://l usr\\example.com@[::1]//')","[160058, 160242]"
"('URIish.java', 'org.eclipse.jgit.transport.URIish', '<init>', '^([a-z][a-z0-9+-]+)://(?:(?:([^/:@]+)(?::([^\\\\/]+))?@)?((?:[^\\\\/:]+)|(?:\\[[0-9a-f:]+\\]))(?::(\\d+))?((?:/~(?:[^\\\\/]+))?[\\\\/]))?(.+)?$', 'http://lusr\\example@example.com/D:/x')","[157229, 157413]"
"('Description.java', 'org.junit.runner.Description', 'methodAndClassNamePatternGroupOrDefault', '([\\s\\S]*)\\((.*)\\)', 'testManySolutionsCase4(org.eclipse.jgit.fnmatch.FileNameMatcherTest)')","[18370, 76860]"
"('URIish.java', 'org.eclipse.jgit.transport.URIish', '<init>', '^(file):([\\\\/](?![\\\\/])((?:[A-Za-z]:)?[\\\\/]?(?:(?:[^\\\\/]+[\\\\/]+)*[^\\\\/]+[\\\\/]*)))$', 'https://me@example.com//')","[158218, 158402]"
"('Description.java', 'org.junit.runner.Description', 'methodAndClassNamePatternGroupOrDefault', '([\\s\\S]*)\\((.*)\\)', 'testInvalidTagNoObject6(org.eclipse.jgit.lib.ObjectCheckerTest)')","[26525, 84846]"
"('Description.java', 'org.junit.runner.Description', 'methodAndClassNamePatternGroupOrDefault', '([\\s\\S]*)\\((.*)\\)', 'org.eclipse.jgit.diff.DiffEntryTest')","[13665, 182613]"
"('URIish.java', 'org.eclipse.jgit.transport.URIish', '<init>', '^([a-z][a-z0-9+-]+)://(?:(?:([^/:@]+)(?::([^\\\\/]+))?@)?((?:[^\\\\/:]+)|(?:\\[[0-9a-f:]+\\]))(?::(\\d+))?((?:/~(?:[^\\\\/]+))?[\\\\/]))?(.+)?$', 'ssh+git://lusr\\example:wtf@example.com:1234//abc')",[127375]
"('URIish.java', 'org.eclipse.jgit.transport.URIish', '<init>', '^([a-z][a-z0-9+-]+)://(?:(?:([^/:@]+)(?::([^\\\\/]+))?@)?((?:[^\\\\/:]+)|(?:\\[[0-9a-f:]+\\]))(?::(\\d+))?((?:/~(?:[^\\\\/]+))?[\\\\/]))?(.+)?$', 'https://me@[::1]/D:/x')","[159069, 159253]"
"('URIish.java', 'org.eclipse.jgit.transport.URIish', '<init>', '^([\\\\/]?((?:[A-Za-z]:)?[\\\\/]?(?:(?:[^\\\\/]+[\\\\/]+)*[^\\\\/]+[\\\\/]*)))$', '/tmp/jgit_test_1888401002986800567_tmp/tmp_1326242475311810481.git')",[116733]
"('ChangeIdUtil.java', 'org.eclipse.jgit.util.ChangeIdUtil', 'indexOfChangeId', '(^Change-Id: *I[a-f0-9]{40}$)', 'Signed-off-by: J Author <ja@example.com>')","[188334, 188645, 188825, 189362, 189491, 189620, 189775, 189956]"
"('Description.java', 'org.junit.runner.Description', 'methodAndClassNamePatternGroupOrDefault', '([\\s\\S]*)\\((.*)\\)', 'testEmptyMessages(org.eclipse.jgit.util.ChangeIdUtilTest)')","[37679, 95516]"
"('URIish.java', 'org.eclipse.jgit.transport.URIish', '<init>', '^(file):([\\\\/](?![\\\\/])((?:[A-Za-z]:)?[\\\\/]?(?:(?:[^\\\\/]+[\\\\/]+)*[^\\\\/]+[\\\\/]*)))$', 'file:/tmp/jgit_test_765209740921422314_tmp/tmp_2226205120512939987/.git/')",[185903]
"('URIish.java', 'org.eclipse.jgit.transport.URIish', '<init>', '^(file):([\\\\/](?![\\\\/])((?:[A-Za-z]:)?[\\\\/]?(?:(?:[^\\\\/]+[\\\\/]+)*[^\\\\/]+[\\\\/]*)))$', 'https://lusr\\example:wtf@example.com:1234/D:\\x')",[134068]
"('URIish.java', 'org.eclipse.jgit.transport.URIish', '<init>', '^(file):([\\\\/](?![\\\\/])((?:[A-Za-z]:)?[\\\\/]?(?:(?:[^\\\\/]+[\\\\/]+)*[^\\\\/]+[\\\\/]*)))$', 'ssh+git://lusr\\example@example.com:1234//abc')",[140600]
"('Description.java', 'org.junit.runner.Description', 'methodAndClassNamePatternGroupOrDefault', '([\\s\\S]*)\\((.*)\\)', 'testTheirs(org.eclipse.jgit.merge.SimpleMergeTest)')","[9950, 68676]"
"('URIish.java', 'org.eclipse.jgit.transport.URIish', '<init>', '^([a-z][a-z0-9+-]+)://(?:(?:([^/:@]+)(?::([^\\\\/]+))?@)?((?:[^\\\\/:]+)|(?:\\[[0-9a-f:]+\\]))(?::(\\d+))?((?:/~(?:[^\\\\/]+))?[\\\\/]))?(.+)?$', 'file:///home/m%c3%a5y')","[120981, 121027]"
"('Description.java', 'org.junit.runner.Description', 'methodAndClassNamePatternGroupOrDefault', '([\\s\\S]*)\\((.*)\\)', 'commitAmendWithoutAuthorShouldSetOriginalAuthorAndAuthorTime(org.eclipse.jgit.api.CommitCommandTest)')","[43503, 101060]"
"('URIish.java', 'org.eclipse.jgit.transport.URIish', '<init>', '^([a-z][a-z0-9+-]+)://(?:(?:([^/:@]+)(?::([^\\\\/]+))?@)?((?:[^\\\\/:]+)|(?:\\[[0-9a-f:]+\\]))(?::(\\d+))?((?:/~(?:[^\\\\/]+))?[\\\\/]))?(.+)?$', 'http://user:secret@pass@host.xy:80/some/path')","[179010, 179056]"
"('Description.java', 'org.junit.runner.Description', 'methodAndClassNamePatternGroupOrDefault', '([\\s\\S]*)\\((.*)\\)', 'testURIEncode_0a(org.eclipse.jgit.transport.URIishTest)')","[1433, 60470]"
"('URIish.java', 'org.eclipse.jgit.transport.URIish', '<init>', '^([a-z][a-z0-9+-]+)://(?:(?:([^/:@]+)(?::([^\\\\/]+))?@)?((?:[^\\\\/:]+)|(?:\\[[0-9a-f:]+\\]))(?::(\\d+))?((?:/~(?:[^\\\\/]+))?[\\\\/]))?(.+)?$', 'ssh+git://me:wtf@example.com:80/D:/x')",[125397]
"('Description.java', 'org.junit.runner.Description', 'methodAndClassNamePatternGroupOrDefault', '([\\s\\S]*)\\((.*)\\)', 'org.eclipse.jgit.api.MergeCommandTest')","[43648, 202076]"
"('Description.java', 'org.junit.runner.Description', 'methodAndClassNamePatternGroupOrDefault', '([\\s\\S]*)\\((.*)\\)', 'testEditAllLines(org.eclipse.jgit.api.BlameCommandTest)')","[52330, 109750]"
"('URIish.java', 'org.eclipse.jgit.transport.URIish', '<init>', '^([a-z][a-z0-9+-]+)://(?:(?:([^/:@]+)(?::([^\\\\/]+))?@)?((?:[^\\\\/:]+)|(?:\\[[0-9a-f:]+\\]))(?::(\\d+))?((?:/~(?:[^\\\\/]+))?[\\\\/]))?(.+)?$', 'ssh://lusr\\example:wtf@1.2.3.4:80/D:\\x')",[124707]
"('Description.java', 'org.junit.runner.Description', 'methodAndClassNamePatternGroupOrDefault', '([\\s\\S]*)\\((.*)\\)', 'testSshProtoWithUserPassAndPort(org.eclipse.jgit.transport.URIishTest)')","[1370, 60404]"
"('Description.java', 'org.junit.runner.Description', 'methodAndClassNamePatternGroupOrDefault', '([\\s\\S]*)\\((.*)\\)', 'testPackRepoWithNoRefs(org.eclipse.jgit.internal.storage.file.GcBasicPackingTest)')","[53118, 110476]"
"('URIish.java', 'org.eclipse.jgit.transport.URIish', '<init>', '^([a-z][a-z0-9+-]+)://(?:(?:([^/:@]+)(?::([^\\\\/]+))?@)?((?:[^\\\\/:]+)|(?:\\[[0-9a-f:]+\\]))(?::(\\d+))?((?:/~(?:[^\\\\/]+))?[\\\\/]))?(.+)?$', 'ssh://l usr\\example.com:wtf@1.2.3.4:1234//')",[123281]
"('URIish.java', 'org.eclipse.jgit.transport.URIish', '<init>', '^([a-z][a-z0-9+-]+)://(?:(?:([^/:@]+)(?::([^\\\\/]+))?@)?((?:[^\\\\/:]+)|(?:\\[[0-9a-f:]+\\]))(?::(\\d+))?((?:/~(?:[^\\\\/]+))?[\\\\/]))?(.+)?$', 'https://l usr\\example.com@1.2.3.4:1234/D:\\x')",[146603]
"('Description.java', 'org.junit.runner.Description', 'methodAndClassNamePatternGroupOrDefault', '([\\s\\S]*)\\((.*)\\)', 'checkMergeCrissCross(org.eclipse.jgit.merge.ResolveMergerTest)')","[10700, 69402]"
"('URIish.java', 'org.eclipse.jgit.transport.URIish', '<init>', '^(file):([\\\\/](?![\\\\/])((?:[A-Za-z]:)?[\\\\/]?(?:(?:[^\\\\/]+[\\\\/]+)*[^\\\\/]+[\\\\/]*)))$', '/another/dir')","[117669, 118369, 119957]"
"('Description.java', 'org.junit.runner.Description', 'methodAndClassNamePatternGroupOrDefault', '([\\s\\S]*)\\((.*)\\)', 'testDigitGroupCase4(org.eclipse.jgit.fnmatch.FileNameMatcherTest)')","[17698, 76156]"
"('URIish.java', 'org.eclipse.jgit.transport.URIish', '<init>', '^(file):([\\\\/](?![\\\\/])((?:[A-Za-z]:)?[\\\\/]?(?:(?:[^\\\\/]+[\\\\/]+)*[^\\\\/]+[\\\\/]*)))$', 'git://')",[174778]
"('Description.java', 'org.junit.runner.Description', 'methodAndClassNamePatternGroupOrDefault', '([\\s\\S]*)\\((.*)\\)', 'testReadLineWithMissingComment(org.eclipse.jgit.internal.storage.file.ReflogReaderTest)')","[58961, 116020]"
"('Description.java', 'org.junit.runner.Description', 'methodAndClassNamePatternGroupOrDefault', '([\\s\\S]*)\\((.*)\\)', 'testFuture(org.eclipse.jgit.util.RelativeDateFormatterTest)')","[35870, 93800]"
"('URIish.java', 'org.eclipse.jgit.transport.URIish', '<init>', '^([a-z][a-z0-9+-]+)://(?:(?:([^/:@]+)(?::([^\\\\/]+))?@)?((?:[^\\\\/:]+)|(?:\\[[0-9a-f:]+\\]))(?::(\\d+))?((?:/~(?:[^\\\\/]+))?[\\\\/]))?(.+)?$', 'ssh://lusr\\example:wtf@[::1]:1234/D:/x')",[124845]
"('Description.java', 'org.junit.runner.Description', 'methodAndClassNamePatternGroupOrDefault', '([\\s\\S]*)\\((.*)\\)', 'testBatchRefUpdateConflictThanksToDelete(org.eclipse.jgit.internal.storage.file.RefDirectoryTest)')","[58060, 115096]"
"('Description.java', 'org.junit.runner.Description', 'methodAndClassNamePatternGroupOrDefault', '([\\s\\S]*)\\((.*)\\)', 'testProperlyCullAllAncestors1(org.eclipse.jgit.revwalk.RevWalkCullTest)')","[5878, 64848]"
"('URIish.java', 'org.eclipse.jgit.transport.URIish', '<init>', '^(file):([\\\\/](?![\\\\/])((?:[A-Za-z]:)?[\\\\/]?(?:(?:[^\\\\/]+[\\\\/]+)*[^\\\\/]+[\\\\/]*)))$', '../tmp_1145110896699918732')",[180874]
"('Description.java', 'org.junit.runner.Description', 'methodAndClassNamePatternGroupOrDefault', '([\\s\\S]*)\\((.*)\\)', 'testEntryObjectId(org.eclipse.jgit.treewalk.EmptyTreeIteratorTest)')","[29754, 87970]"
"('ChangeIdUtil.java', 'org.eclipse.jgit.util.ChangeIdUtil', 'indexOfChangeId', '(^Change-Id: *I[a-f0-9]{40}$)', '[bracket]')",[187205]
"('URIish.java', 'org.eclipse.jgit.transport.URIish', '<init>', '^(?:([^/:@]+)(?::([^\\\\/]+))?@)?([^\\\\/:]{2,}):([\\\\/](?:(?:[^\\\\/]+[\\\\/]+)*[^\\\\/]+[\\\\/]*))$', '/tmp/jgit_test_1887039081032232823_tmp/tmp_6446132997626944273')","[202634, 202774, 202923, 203073, 203223]"
"('Description.java', 'org.junit.runner.Description', 'methodAndClassNamePatternGroupOrDefault', '([\\s\\S]*)\\((.*)\\)', 'testValidCommit128Parent(org.eclipse.jgit.lib.ObjectCheckerTest)')","[26630, 84956]"
"('Description.java', 'org.junit.runner.Description', 'methodAndClassNamePatternGroupOrDefault', '([\\s\\S]*)\\((.*)\\)', 'testEditFanout2_38(org.eclipse.jgit.notes.NoteMapTest)')","[40776, 98442]"
"('URIish.java', 'org.eclipse.jgit.transport.URIish', '<init>', '^(file):([\\\\/](?![\\\\/])((?:[A-Za-z]:)?[\\\\/]?(?:(?:[^\\\\/]+[\\\\/]+)*[^\\\\/]+[\\\\/]*)))$', 'ssh://me@example.com:1234//')",[135034]
"('URIish.java', 'org.eclipse.jgit.transport.URIish', '<init>', '^(?:([^/:@]+)(?::([^\\\\/]+))?@)?((?:[^\\\\/:]+)|(?:\\[[0-9a-f:]+\\])):((?:(?:/~(?:[^\\\\/]+))[\\\\/])?(?:(?:[^\\\\/]+[\\\\/]+)*[^\\\\/]+[\\\\/]*))$', '/tmp/jgit_test_459034667116329301_tmp/tmp_5950396153337027342')","[203890, 204025]"
"('URIish.java', 'org.eclipse.jgit.transport.URIish', '<init>', '^([a-z][a-z0-9+-]+)://(?:(?:([^/:@]+)(?::([^\\\\/]+))?@)?((?:[^\\\\/:]+)|(?:\\[[0-9a-f:]+\\]))(?::(\\d+))?((?:/~(?:[^\\\\/]+))?[\\\\/]))?(.+)?$', 'https://l usr\\example.com@1.2.3.4:80/D:\\x')",[146787]
"('URIish.java', 'org.eclipse.jgit.transport.URIish', '<init>', '^(file):([\\\\/](?![\\\\/])((?:[A-Za-z]:)?[\\\\/]?(?:(?:[^\\\\/]+[\\\\/]+)*[^\\\\/]+[\\\\/]*)))$', 'ssh://l usr\\example.com:wtf@1.2.3.4:80/D:\\x')",[123580]
"('URIish.java', 'org.eclipse.jgit.transport.URIish', '<init>', '^(file):([\\\\/](?![\\\\/])((?:[A-Za-z]:)?[\\\\/]?(?:(?:[^\\\\/]+[\\\\/]+)*[^\\\\/]+[\\\\/]*)))$', 'ssh://lusr\\example:wtf@1.2.3.4:80/D:\\x')",[124684]
"('Description.java', 'org.junit.runner.Description', 'methodAndClassNamePatternGroupOrDefault', '([\\s\\S]*)\\((.*)\\)', 'org.eclipse.jgit.api.StashDropCommandTest')","[51975, 209435]"
"('Description.java', 'org.junit.runner.Description', 'methodAndClassNamePatternGroupOrDefault', '([\\s\\S]*)\\((.*)\\)', 'submoduleWithNoGitDirectory(org.eclipse.jgit.treewalk.FileTreeIteratorTest)')","[28884, 87178]"
"('URIish.java', 'org.eclipse.jgit.transport.URIish', '<init>', '^(file):([\\\\/](?![\\\\/])((?:[A-Za-z]:)?[\\\\/]?(?:(?:[^\\\\/]+[\\\\/]+)*[^\\\\/]+[\\\\/]*)))$', 'git:///a/b/c//')",[178734]
"('URIish.java', 'org.eclipse.jgit.transport.URIish', '<init>', '^([a-z][a-z0-9+-]+)://(?:(?:([^/:@]+)(?::([^\\\\/]+))?@)?((?:[^\\\\/:]+)|(?:\\[[0-9a-f:]+\\]))(?::(\\d+))?((?:/~(?:[^\\\\/]+))?[\\\\/]))?(.+)?$', 'git://example.com/home/m y')","[179562, 179608]"
"('URIish.java', 'org.eclipse.jgit.transport.URIish', '<init>', '^([a-z][a-z0-9+-]+)://(?:(?:([^/:@]+)(?::([^\\\\/]+))?@)?((?:[^\\\\/:]+)|(?:\\[[0-9a-f:]+\\]))(?::(\\d+))?((?:/~(?:[^\\\\/]+))?[\\\\/]))?(.+)?$', 'ssh+git://l usr\\example.com:wtf@[::1]:80//')",[127145]
"('URIish.java', 'org.eclipse.jgit.transport.URIish', '<init>', '^([a-z][a-z0-9+-]+)://(?:(?:([^/:@]+)(?::([^\\\\/]+))?@)?((?:[^\\\\/:]+)|(?:\\[[0-9a-f:]+\\]))(?::(\\d+))?((?:/~(?:[^\\\\/]+))?[\\\\/]))?(.+)?$', 'ssh+git://l usr\\example.com:wtf@1.2.3.4:80/D:\\x')",[126915]
"('Description.java', 'org.junit.runner.Description', 'methodAndClassNamePatternGroupOrDefault', '([\\s\\S]*)\\((.*)\\)', 'testSpaceGroupCase0(org.eclipse.jgit.fnmatch.FileNameMatcherTest)')","[17320, 75760]"
"('Description.java', 'org.junit.runner.Description', 'methodAndClassNamePatternGroupOrDefault', '([\\s\\S]*)\\((.*)\\)', 'testParse_explicit_encoded(org.eclipse.jgit.revwalk.RevCommitParseTest)')","[9057, 67840]"
"('Description.java', 'org.junit.runner.Description', 'methodAndClassNamePatternGroupOrDefault', '([\\s\\S]*)\\((.*)\\)', 'testSquashMerge(org.eclipse.jgit.api.MergeCommandTest)')","[44152, 101720]"
"('Description.java', 'org.junit.runner.Description', 'methodAndClassNamePatternGroupOrDefault', '([\\s\\S]*)\\((.*)\\)', 'test025_computeSha1NoStore(org.eclipse.jgit.internal.storage.file.T0003_BasicTest)')","[54112, 111378]"
"('Description.java', 'org.junit.runner.Description', 'methodAndClassNamePatternGroupOrDefault', '([\\s\\S]*)\\((.*)\\)', 'testSingleLineMessages(org.eclipse.jgit.util.ChangeIdUtilTest)')","[38120, 95978]"
"('Description.java', 'org.junit.runner.Description', 'methodAndClassNamePatternGroupOrDefault', '([\\s\\S]*)\\((.*)\\)', 'testSort_COMMIT_TIME_DESC(org.eclipse.jgit.revwalk.RevWalkSortTest)')","[9118, 67884]"
"('URIish.java', 'org.eclipse.jgit.transport.URIish', '<init>', '^([a-z][a-z0-9+-]+)://(?:(?:([^/:@]+)(?::([^\\\\/]+))?@)?((?:[^\\\\/:]+)|(?:\\[[0-9a-f:]+\\]))(?::(\\d+))?((?:/~(?:[^\\\\/]+))?[\\\\/]))?(.+)?$', 'http://me@[::1]:1234/D:/x')",[142509]
"('Description.java', 'org.junit.runner.Description', 'methodAndClassNamePatternGroupOrDefault', '([\\s\\S]*)\\((.*)\\)', 'org.eclipse.jgit.internal.storage.file.GcConcurrentTest')","[56543, 210137]"
"('Description.java', 'org.junit.runner.Description', 'methodAndClassNamePatternGroupOrDefault', '([\\s\\S]*)\\((.*)\\)', 'testContains(org.eclipse.jgit.revwalk.RevFlagSetTest)')","[7353, 66234]"
"('Description.java', 'org.junit.runner.Description', 'methodAndClassNamePatternGroupOrDefault', '([\\s\\S]*)\\((.*)\\)', 'testPackCommitsAndLooseOneWithPruneNow(org.eclipse.jgit.internal.storage.file.GcPruneNonReferencedTest)')","[57272, 114370]"
"('Description.java', 'org.junit.runner.Description', 'methodAndClassNamePatternGroupOrDefault', '([\\s\\S]*)\\((.*)\\)', 'testCommonScore_EmptyFiles(org.eclipse.jgit.diff.SimilarityIndexTest)')","[14875, 73318]"
"('Description.java', 'org.junit.runner.Description', 'methodAndClassNamePatternGroupOrDefault', '([\\s\\S]*)\\((.*)\\)', 'testGitWithUserHome(org.eclipse.jgit.transport.URIishTest)')","[2126, 61196]"
"('URIish.java', 'org.eclipse.jgit.transport.URIish', '<init>', '^([a-z][a-z0-9+-]+)://(?:(?:([^/:@]+)(?::([^\\\\/]+))?@)?((?:[^\\\\/:]+)|(?:\\[[0-9a-f:]+\\]))(?::(\\d+))?((?:/~(?:[^\\\\/]+))?[\\\\/]))?(.+)?$', 'ssh+git://[::1]/D:/x')","[165693, 165877, 166797, 166981, 167901, 168085]"
"('URIish.java', 'org.eclipse.jgit.transport.URIish', '<init>', '^(file):([\\\\/](?![\\\\/])((?:[A-Za-z]:)?[\\\\/]?(?:(?:[^\\\\/]+[\\\\/]+)*[^\\\\/]+[\\\\/]*)))$', 'https://me:wtf@example.com:80/D:\\x')",[132044]
"('URIish.java', 'org.eclipse.jgit.transport.URIish', '<init>', '^([a-z][a-z0-9+-]+)://(?:(?:([^/:@]+)(?::([^\\\\/]+))?@)?((?:[^\\\\/:]+)|(?:\\[[0-9a-f:]+\\]))(?::(\\d+))?((?:/~(?:[^\\\\/]+))?[\\\\/]))?(.+)?$', 'ssh+git://lusr\\example:wtf@example.com:1234//')",[127329]
"('Description.java', 'org.junit.runner.Description', 'methodAndClassNamePatternGroupOrDefault', '([\\s\\S]*)\\((.*)\\)', 'testNoRenames_EmptyFile1(org.eclipse.jgit.diff.RenameDetectorTest)')","[13024, 71558]"
"('Description.java', 'org.junit.runner.Description', 'methodAndClassNamePatternGroupOrDefault', '([\\s\\S]*)\\((.*)\\)', 'test007_isId(org.eclipse.jgit.lib.ObjectIdTest)')","[28678, 87002]"
"('URIish.java', 'org.eclipse.jgit.transport.URIish', '<init>', '^([a-z][a-z0-9+-]+)://(?:(?:([^/:@]+)(?::([^\\\\/]+))?@)?((?:[^\\\\/:]+)|(?:\\[[0-9a-f:]+\\]))(?::(\\d+))?((?:/~(?:[^\\\\/]+))?[\\\\/]))?(.+)?$', 'ssh://me:wtf@[::1]:80//')",[122729]
"('Description.java', 'org.junit.runner.Description', 'methodAndClassNamePatternGroupOrDefault', '([\\s\\S]*)\\((.*)\\)', 'commitAfterSquashMerge(org.eclipse.jgit.api.CommitCommandTest)')","[43440, 100994]"
"('Description.java', 'org.junit.runner.Description', 'methodAndClassNamePatternGroupOrDefault', '([\\s\\S]*)\\((.*)\\)', 'testVerySimpleGroupCase2(org.eclipse.jgit.fnmatch.FileNameMatcherTest)')","[19210, 77740]"
"('URIish.java', 'org.eclipse.jgit.transport.URIish', '<init>', '^(file):([\\\\/](?![\\\\/])((?:[A-Za-z]:)?[\\\\/]?(?:(?:[^\\\\/]+[\\\\/]+)*[^\\\\/]+[\\\\/]*)))$', 'ssh://me:wtf@[::1]:1234//abc')",[122568]
"('Description.java', 'org.junit.runner.Description', 'methodAndClassNamePatternGroupOrDefault', '([\\s\\S]*)\\((.*)\\)', 'testHasChangeidWithReplacementInLastLine(org.eclipse.jgit.util.ChangeIdUtilTest)')","[38036, 95890]"
"('Description.java', 'org.junit.runner.Description', 'methodAndClassNamePatternGroupOrDefault', '([\\s\\S]*)\\((.*)\\)', 'testReadSymRefToLoosePacked(org.eclipse.jgit.lib.RefTest)')","[22872, 81238]"
"('Description.java', 'org.junit.runner.Description', 'methodAndClassNamePatternGroupOrDefault', '([\\s\\S]*)\\((.*)\\)', 'org.eclipse.jgit.lib.ObjectCheckerTest')","[25223, 184383]"
"('Description.java', 'org.junit.runner.Description', 'methodAndClassNamePatternGroupOrDefault', '([\\s\\S]*)\\((.*)\\)', 'testDirectoryFileConflicts_6(org.eclipse.jgit.lib.DirCacheCheckoutTest)')","[23437, 81810]"
"('Description.java', 'org.junit.runner.Description', 'methodAndClassNamePatternGroupOrDefault', '([\\s\\S]*)\\((.*)\\)', 'testSoftReset(org.eclipse.jgit.api.ResetCommandTest)')","[42543, 100114]"
"('Description.java', 'org.junit.runner.Description', 'methodAndClassNamePatternGroupOrDefault', '([\\s\\S]*)\\((.*)\\)', 'testHEAD(org.eclipse.jgit.lib.RepositoryResolveTest)')","[27090, 85418]"
"('URIish.java', 'org.eclipse.jgit.transport.URIish', '<init>', '^(file):([\\\\/](?![\\\\/])((?:[A-Za-z]:)?[\\\\/]?(?:(?:[^\\\\/]+[\\\\/]+)*[^\\\\/]+[\\\\/]*)))$', 'https://me@example.com:80//')",[145154]
"('URIish.java', 'org.eclipse.jgit.transport.URIish', '<init>', '^(file):([\\\\/](?![\\\\/])((?:[A-Za-z]:)?[\\\\/]?(?:(?:[^\\\\/]+[\\\\/]+)*[^\\\\/]+[\\\\/]*)))$', 'http://l usr\\example.com:wtf@1.2.3.4:80/D:/x')",[130158]
"('Description.java', 'org.junit.runner.Description', 'methodAndClassNamePatternGroupOrDefault', '([\\s\\S]*)\\((.*)\\)', 'testEntriesWithin(org.eclipse.jgit.dircache.DirCacheFindTest)')","[12606, 71140]"
"('URIish.java', 'org.eclipse.jgit.transport.URIish', '<init>', '^([a-z][a-z0-9+-]+)://(?:(?:([^/:@]+)(?::([^\\\\/]+))?@)?((?:[^\\\\/:]+)|(?:\\[[0-9a-f:]+\\]))(?::(\\d+))?((?:/~(?:[^\\\\/]+))?[\\\\/]))?(.+)?$', '/~some/p ath')","[177285, 177400]"
"('Description.java', 'org.junit.runner.Description', 'methodAndClassNamePatternGroupOrDefault', '([\\s\\S]*)\\((.*)\\)', 'testParse_PublicParseMethod(org.eclipse.jgit.revwalk.RevCommitParseTest)')","[8973, 67752]"
"('Description.java', 'org.junit.runner.Description', 'methodAndClassNamePatternGroupOrDefault', '([\\s\\S]*)\\((.*)\\)', 'testCRLF(org.eclipse.jgit.util.io.EolCanonicalizingInputStreamTest)')","[32893, 90940]"
"('URIish.java', 'org.eclipse.jgit.transport.URIish', '<init>', '^(?:([^/:@]+)(?::([^\\\\/]+))?@)?([^\\\\/:]{2,}):([\\\\/](?:(?:[^\\\\/]+[\\\\/]+)*[^\\\\/]+[\\\\/]*))$', '/tmp/jgit_test_3702623628615032288_tmp/tmp_6188209109110356895')","[200994, 201134, 201283]"
"('URIish.java', 'org.eclipse.jgit.transport.URIish', '<init>', '^([a-z][a-z0-9+-]+)://(?:(?:([^/:@]+)(?::([^\\\\/]+))?@)?((?:[^\\\\/:]+)|(?:\\[[0-9a-f:]+\\]))(?::(\\d+))?((?:/~(?:[^\\\\/]+))?[\\\\/]))?(.+)?$', 'http://me@[::1]:80/D:\\x')",[142739]
"('Description.java', 'org.junit.runner.Description', 'methodAndClassNamePatternGroupOrDefault', '([\\s\\S]*)\\((.*)\\)', 'resolveNonExistingBranch(org.eclipse.jgit.lib.ReflogResolveTest)')","[27592, 85924]"
"('Description.java', 'org.junit.runner.Description', 'methodAndClassNamePatternGroupOrDefault', '([\\s\\S]*)\\((.*)\\)', 'org.eclipse.jgit.lib.ObjectLoaderTest')","[24519, 184248]"
"('URIish.java', 'org.eclipse.jgit.transport.URIish', '<init>', '^(file):([\\\\/](?![\\\\/])((?:[A-Za-z]:)?[\\\\/]?(?:(?:[^\\\\/]+[\\\\/]+)*[^\\\\/]+[\\\\/]*)))$', 'ssh+git://l usr\\example.com@1.2.3.4//')","[153066, 153250]"
"('Description.java', 'org.junit.runner.Description', 'methodAndClassNamePatternGroupOrDefault', '([\\s\\S]*)\\((.*)\\)', 'testCherryPickConflictMarkers(org.eclipse.jgit.api.CherryPickCommandTest)')","[47801, 105284]"
"('URIish.java', 'org.eclipse.jgit.transport.URIish', '<init>', '^([a-z][a-z0-9+-]+)://(?:(?:([^/:@]+)(?::([^\\\\/]+))?@)?((?:[^\\\\/:]+)|(?:\\[[0-9a-f:]+\\]))(?::(\\d+))?((?:/~(?:[^\\\\/]+))?[\\\\/]))?(.+)?$', 'ssh://me:wtf@example.com:80/D:/x')",[122085]
"('Description.java', 'org.junit.runner.Description', 'methodAndClassNamePatternGroupOrDefault', '([\\s\\S]*)\\((.*)\\)', 'testConflictAtEnd(org.eclipse.jgit.merge.MergeAlgorithmTest)')","[10032, 68742]"
"('URIish.java', 'org.eclipse.jgit.transport.URIish', '<init>', '^(file):([\\\\/](?![\\\\/])((?:[A-Za-z]:)?[\\\\/]?(?:(?:[^\\\\/]+[\\\\/]+)*[^\\\\/]+[\\\\/]*)))$', 'http://me:wtf@1.2.3.4:1234//abc')",[128824]
"('URIish.java', 'org.eclipse.jgit.transport.URIish', '<init>', '^([a-z][a-z0-9+-]+)://(?:(?:([^/:@]+)(?::([^\\\\/]+))?@)?((?:[^\\\\/:]+)|(?:\\[[0-9a-f:]+\\]))(?::(\\d+))?((?:/~(?:[^\\\\/]+))?[\\\\/]))?(.+)?$', 'file:///tmp/jgit_test_8242042785434208547_tmp/tmp_8999287729574438780')","[199071, 199133]"
"('Description.java', 'org.junit.runner.Description', 'methodAndClassNamePatternGroupOrDefault', '([\\s\\S]*)\\((.*)\\)', 'testPutReplaceEntry(org.eclipse.jgit.util.RefListTest)')","[34973, 92920]"
"('ChangeIdUtil.java', 'org.eclipse.jgit.util.ChangeIdUtil', 'indexOfChangeId', '(^Change-Id: *I[a-f0-9]{40}$)', 'x')","[187810, 187856]"
"('Description.java', 'org.junit.runner.Description', 'methodAndClassNamePatternGroupOrDefault', '([\\s\\S]*)\\((.*)\\)', 'testConcurrentInsertionOfBlobsToTheSameNewFanOutDirectory(org.eclipse.jgit.internal.storage.file.ObjectDirectoryTest)')","[54715, 111950]"
"('Description.java', 'org.junit.runner.Description', 'methodAndClassNamePatternGroupOrDefault', '([\\s\\S]*)\\((.*)\\)', 'testBoundary(org.eclipse.jgit.util.RawSubStringPatternTest)')","[33494, 91490]"
"('Description.java', 'org.junit.runner.Description', 'methodAndClassNamePatternGroupOrDefault', '([\\s\\S]*)\\((.*)\\)', 'testDecodeUInt64(org.eclipse.jgit.util.NBTest)')","[37410, 95274]"
"('Description.java', 'org.junit.runner.Description', 'methodAndClassNamePatternGroupOrDefault', '([\\s\\S]*)\\((.*)\\)', 'testSkipRevFilter(org.eclipse.jgit.revwalk.SkipRevFilterTest)')","[7830, 66674]"
"('URIish.java', 'org.eclipse.jgit.transport.URIish', '<init>', '^(file):([\\\\/](?![\\\\/])((?:[A-Za-z]:)?[\\\\/]?(?:(?:[^\\\\/]+[\\\\/]+)*[^\\\\/]+[\\\\/]*)))$', 'ssh+git://lusr\\example:wtf@[::1]:1234//abc')",[128088]
"('Description.java', 'org.junit.runner.Description', 'methodAndClassNamePatternGroupOrDefault', '([\\s\\S]*)\\((.*)\\)', 'org.eclipse.jgit.lib.MergeHeadMsgTest')","[24622, 184275]"
"('ChangeIdUtil.java', 'org.eclipse.jgit.util.ChangeIdUtil', 'indexOfFirstFooterLine', '(^[a-zA-Z0-9-]+:(?!//).*$)', 'more text')",[191204]
"('URIish.java', 'org.eclipse.jgit.transport.URIish', '<init>', '^([a-z][a-z0-9+-]+)://(?:(?:([^/:@]+)(?::([^\\\\/]+))?@)?((?:[^\\\\/:]+)|(?:\\[[0-9a-f:]+\\]))(?::(\\d+))?((?:/~(?:[^\\\\/]+))?[\\\\/]))?(.+)?$', 'http://me@1.2.3.4:1234//abc')",[142095]
"('Description.java', 'org.junit.runner.Description', 'methodAndClassNamePatternGroupOrDefault', '([\\s\\S]*)\\((.*)\\)', 'testInvalidTagNoObject1(org.eclipse.jgit.lib.ObjectCheckerTest)')","[26420, 84736]"
"('Description.java', 'org.junit.runner.Description', 'methodAndClassNamePatternGroupOrDefault', '([\\s\\S]*)\\((.*)\\)', 'testRemovedSubtree(org.eclipse.jgit.dircache.DirCacheIteratorTest)')","[12461, 71008]"
"('URIish.java', 'org.eclipse.jgit.transport.URIish', '<init>', '^([a-z][a-z0-9+-]+)://(?:(?:([^/:@]+)(?::([^\\\\/]+))?@)?((?:[^\\\\/:]+)|(?:\\[[0-9a-f:]+\\]))(?::(\\d+))?((?:/~(?:[^\\\\/]+))?[\\\\/]))?(.+)?$', 'ssh+git://me@example.com:1234//abc')",[138415]
"('Description.java', 'org.junit.runner.Description', 'methodAndClassNamePatternGroupOrDefault', '([\\s\\S]*)\\((.*)\\)', 'testMaxObjectSizeDeltaResultSize(org.eclipse.jgit.transport.PackParserTest)')","[4401, 63440]"
"('URIish.java', 'org.eclipse.jgit.transport.URIish', '<init>', '^(file):([\\\\/](?![\\\\/])((?:[A-Za-z]:)?[\\\\/]?(?:(?:[^\\\\/]+[\\\\/]+)*[^\\\\/]+[\\\\/]*)))$', 'https://me@[::1]:1234/D:\\x')",[145844]
"('URIish.java', 'org.eclipse.jgit.transport.URIish', '<init>', '^([a-z][a-z0-9+-]+)://(?:(?:([^/:@]+)(?::([^\\\\/]+))?@)?((?:[^\\\\/:]+)|(?:\\[[0-9a-f:]+\\]))(?::(\\d+))?((?:/~(?:[^\\\\/]+))?[\\\\/]))?(.+)?$', 'ssh+git://lusr\\example@1.2.3.4:80//')",[141129]
"('Description.java', 'org.junit.runner.Description', 'methodAndClassNamePatternGroupOrDefault', '([\\s\\S]*)\\((.*)\\)', 'oneCommit(org.eclipse.jgit.revwalk.RevWalkUtilsReachableTest)')","[6002, 64958]"
"('URIish.java', 'org.eclipse.jgit.transport.URIish', '<init>', '^(file):([\\\\/](?![\\\\/])((?:[A-Za-z]:)?[\\\\/]?(?:(?:[^\\\\/]+[\\\\/]+)*[^\\\\/]+[\\\\/]*)))$', 'ssh+git://me@[::1]/D:/x')","[152422, 152606]"
"('Description.java', 'org.junit.runner.Description', 'methodAndClassNamePatternGroupOrDefault', '([\\s\\S]*)\\((.*)\\)', 'testInvalidCommitInvalidParent3(org.eclipse.jgit.lib.ObjectCheckerTest)')","[25937, 84230]"
"('ChangeIdUtil.java', 'org.eclipse.jgit.util.ChangeIdUtil', 'insertId', '^(Bug|Issue)[a-zA-Z0-9-]*:.*$', '[bracket]')",[187437]
"('Description.java', 'org.junit.runner.Description', 'methodAndClassNamePatternGroupOrDefault', '([\\s\\S]*)\\((.*)\\)', 'testBreakModify_BreakNone(org.eclipse.jgit.diff.RenameDetectorTest)')","[13066, 71602]"
"('URIish.java', 'org.eclipse.jgit.transport.URIish', '<init>', '^([a-z][a-z0-9+-]+)://(?:(?:([^/:@]+)(?::([^\\\\/]+))?@)?((?:[^\\\\/:]+)|(?:\\[[0-9a-f:]+\\]))(?::(\\d+))?((?:/~(?:[^\\\\/]+))?[\\\\/]))?(.+)?$', 'ssh://example.com/D:/x')","[161645, 161829, 162749, 162933, 163853, 164037]"
"('URIish.java', 'org.eclipse.jgit.transport.URIish', '<init>', '^([a-z][a-z0-9+-]+)://(?:(?:([^/:@]+)(?::([^\\\\/]+))?@)?((?:[^\\\\/:]+)|(?:\\[[0-9a-f:]+\\]))(?::(\\d+))?((?:/~(?:[^\\\\/]+))?[\\\\/]))?(.+)?$', 'https://l usr\\example.com@[::1]:1234//abc')",[146879]
"('Description.java', 'org.junit.runner.Description', 'methodAndClassNamePatternGroupOrDefault', '([\\s\\S]*)\\((.*)\\)', 'testGetValidWithSlashesDotGitSlashHumanishName(org.eclipse.jgit.transport.URIishTest)')","[1538, 60580]"
"('Description.java', 'org.junit.runner.Description', 'methodAndClassNamePatternGroupOrDefault', '([\\s\\S]*)\\((.*)\\)', 'testSimpleStarCase1(org.eclipse.jgit.fnmatch.FileNameMatcherTest)')","[17551, 76002]"
"('Description.java', 'org.junit.runner.Description', 'methodAndClassNamePatternGroupOrDefault', '([\\s\\S]*)\\((.*)\\)', 'testDeleteFullName(org.eclipse.jgit.api.TagCommandTest)')","[41440, 99058]"
"('Description.java', 'org.junit.runner.Description', 'methodAndClassNamePatternGroupOrDefault', '([\\s\\S]*)\\((.*)\\)', 'org.eclipse.jgit.lib.T0001_PersonIdentTest')","[27653, 185620]"
"('URIish.java', 'org.eclipse.jgit.transport.URIish', '<init>', '^(file):([\\\\/](?![\\\\/])((?:[A-Za-z]:)?[\\\\/]?(?:(?:[^\\\\/]+[\\\\/]+)*[^\\\\/]+[\\\\/]*)))$', 'https://lusr\\example@example.com:1234/D:/x')",[147270]
"('URIish.java', 'org.eclipse.jgit.transport.URIish', '<init>', '^(file):([\\\\/](?![\\\\/])((?:[A-Za-z]:)?[\\\\/]?(?:(?:[^\\\\/]+[\\\\/]+)*[^\\\\/]+[\\\\/]*)))$', 'http://l usr\\example.com@1.2.3.4//abc')","[156424, 156608]"
"('Description.java', 'org.junit.runner.Description', 'methodAndClassNamePatternGroupOrDefault', '([\\s\\S]*)\\((.*)\\)', 'testWindowsFile(org.eclipse.jgit.transport.URIishTest)')","[1937, 60998]"
"('URIish.java', 'org.eclipse.jgit.transport.URIish', '<init>', '^(file):([\\\\/](?![\\\\/])((?:[A-Za-z]:)?[\\\\/]?(?:(?:[^\\\\/]+[\\\\/]+)*[^\\\\/]+[\\\\/]*)))$', 'https://l usr\\example.com@example.com//abc')","[159368, 159552]"
"('URIish.java', 'org.eclipse.jgit.transport.URIish', '<init>', '^([a-z][a-z0-9+-]+)://(?:(?:([^/:@]+)(?::([^\\\\/]+))?@)?((?:[^\\\\/:]+)|(?:\\[[0-9a-f:]+\\]))(?::(\\d+))?((?:/~(?:[^\\\\/]+))?[\\\\/]))?(.+)?$', 'ssh+git://me@1.2.3.4//abc')","[152031, 152215]"
"('Description.java', 'org.junit.runner.Description', 'methodAndClassNamePatternGroupOrDefault', '([\\s\\S]*)\\((.*)\\)', 'noInsteadOf(org.eclipse.jgit.transport.RemoteConfigTest)')","[1015, 60052]"
"('Description.java', 'org.junit.runner.Description', 'methodAndClassNamePatternGroupOrDefault', '([\\s\\S]*)\\((.*)\\)', 'testTwoCommitDeepTree1(org.eclipse.jgit.revwalk.ObjectWalkTest)')","[5733, 64716]"
"('Description.java', 'org.junit.runner.Description', 'methodAndClassNamePatternGroupOrDefault', '([\\s\\S]*)\\((.*)\\)', 'testFastForwardOnlyNotPossible(org.eclipse.jgit.api.MergeCommandTest)')","[44383, 101962]"
"('Description.java', 'org.junit.runner.Description', 'methodAndClassNamePatternGroupOrDefault', '([\\s\\S]*)\\((.*)\\)', 'testComparatorReduceCommonStartEnd(org.eclipse.jgit.diff.RawTextTest)')","[14312, 72768]"
"('Description.java', 'org.junit.runner.Description', 'methodAndClassNamePatternGroupOrDefault', '([\\s\\S]*)\\((.*)\\)', 'invalidDestinationDoubleSlashes(org.eclipse.jgit.transport.RefSpecTest)')","[2731, 61790]"
"('Description.java', 'org.junit.runner.Description', 'methodAndClassNamePatternGroupOrDefault', '([\\s\\S]*)\\((.*)\\)', 'testInCoreLimit_SwitchBeforeAppendByte(org.eclipse.jgit.util.TemporaryBufferTest)')","[34557, 92524]"
"('Description.java', 'org.junit.runner.Description', 'methodAndClassNamePatternGroupOrDefault', '([\\s\\S]*)\\((.*)\\)', 'testFindObjectWrongOffset(org.eclipse.jgit.internal.storage.file.PackReverseIndexTest)')","[57600, 114634]"
"('Description.java', 'org.junit.runner.Description', 'methodAndClassNamePatternGroupOrDefault', '([\\s\\S]*)\\((.*)\\)', 'nullForEmailShouldThrowIllegalArgumentException(org.eclipse.jgit.lib.T0001_PersonIdentTest)')","[27716, 86034]"
"('Description.java', 'org.junit.runner.Description', 'methodAndClassNamePatternGroupOrDefault', '([\\s\\S]*)\\((.*)\\)', 'testDelete(org.eclipse.jgit.api.TagCommandTest)')","[41671, 99300]"
"('URIish.java', 'org.eclipse.jgit.transport.URIish', '<init>', '^([a-z][a-z0-9+-]+)://(?:(?:([^/:@]+)(?::([^\\\\/]+))?@)?((?:[^\\\\/:]+)|(?:\\[[0-9a-f:]+\\]))(?::(\\d+))?((?:/~(?:[^\\\\/]+))?[\\\\/]))?(.+)?$', 'https://l usr\\example.com@example.com:1234/D:/x')",[146189]
"('Description.java', 'org.junit.runner.Description', 'methodAndClassNamePatternGroupOrDefault', '([\\s\\S]*)\\((.*)\\)', 'testToString(org.eclipse.jgit.diff.EditTest)')","[15915, 74308]"
"('URIish.java', 'org.eclipse.jgit.transport.URIish', '<init>', '^([a-z][a-z0-9+-]+)://(?:(?:([^/:@]+)(?::([^\\\\/]+))?@)?((?:[^\\\\/:]+)|(?:\\[[0-9a-f:]+\\]))(?::(\\d+))?((?:/~(?:[^\\\\/]+))?[\\\\/]))?(.+)?$', '/another/dir')","[117693, 118393, 119981]"
"('ChangeIdUtil.java', 'org.eclipse.jgit.util.ChangeIdUtil', 'indexOfFirstFooterLine', '(^[a-zA-Z0-9-]+:(?!//).*$)', 'git://example.com/ fixes this')",[190472]
"('URIish.java', 'org.eclipse.jgit.transport.URIish', '<init>', '^([a-z][a-z0-9+-]+)://(?:(?:([^/:@]+)(?::([^\\\\/]+))?@)?((?:[^\\\\/:]+)|(?:\\[[0-9a-f:]+\\]))(?::(\\d+))?((?:/~(?:[^\\\\/]+))?[\\\\/]))?(.+)?$', 'https://l usr\\example.com@example.com:80/D:/x')",[146373]
"('Description.java', 'org.junit.runner.Description', 'methodAndClassNamePatternGroupOrDefault', '([\\s\\S]*)\\((.*)\\)', 'testReadSingleBytes(org.eclipse.jgit.util.io.UnionInputStreamTest)')","[33227, 91270]"
"('URIish.java', 'org.eclipse.jgit.transport.URIish', '<init>', '^(file):([\\\\/](?![\\\\/])((?:[A-Za-z]:)?[\\\\/]?(?:(?:[^\\\\/]+[\\\\/]+)*[^\\\\/]+[\\\\/]*)))$', 'ssh+git://l usr\\example.com:wtf@[::1]:1234//abc')",[126984]
"('Description.java', 'org.junit.runner.Description', 'methodAndClassNamePatternGroupOrDefault', '([\\s\\S]*)\\((.*)\\)', 'testResolvedNamesBranch(org.eclipse.jgit.lib.RefTest)')","[22893, 81260]"
"('Description.java', 'org.junit.runner.Description', 'methodAndClassNamePatternGroupOrDefault', '([\\s\\S]*)\\((.*)\\)', 'testGetValidHumanishName(org.eclipse.jgit.transport.URIishTest)')","[1328, 60360]"
"('Description.java', 'org.junit.runner.Description', 'methodAndClassNamePatternGroupOrDefault', '([\\s\\S]*)\\((.*)\\)', 'testACommitWithSubject_NonFooterAndBugAndSob(org.eclipse.jgit.util.ChangeIdUtilTest)')","[38162, 96022]"
"('URIish.java', 'org.eclipse.jgit.transport.URIish', '<init>', '^(file):([\\\\/](?![\\\\/])((?:[A-Za-z]:)?[\\\\/]?(?:(?:[^\\\\/]+[\\\\/]+)*[^\\\\/]+[\\\\/]*)))$', 'https://lusr\\example@[::1]:80/D:\\x')",[148236]
"('URIish.java', 'org.eclipse.jgit.transport.URIish', '<init>', '^([a-z][a-z0-9+-]+)://(?:(?:([^/:@]+)(?::([^\\\\/]+))?@)?((?:[^\\\\/:]+)|(?:\\[[0-9a-f:]+\\]))(?::(\\d+))?((?:/~(?:[^\\\\/]+))?[\\\\/]))?(.+)?$', 'http://l usr\\example.com@1.2.3.4:1234//abc')",[143199]
"('URIish.java', 'org.eclipse.jgit.transport.URIish', '<init>', '^(file):([\\\\/](?![\\\\/])((?:[A-Za-z]:)?[\\\\/]?(?:(?:[^\\\\/]+[\\\\/]+)*[^\\\\/]+[\\\\/]*)))$', 'http://lusr\\example@[::1]//')","[157850, 158034]"
"('URIish.java', 'org.eclipse.jgit.transport.URIish', '<init>', '^([a-z][a-z0-9+-]+)://(?:(?:([^/:@]+)(?::([^\\\\/]+))?@)?((?:[^\\\\/:]+)|(?:\\[[0-9a-f:]+\\]))(?::(\\d+))?((?:/~(?:[^\\\\/]+))?[\\\\/]))?(.+)?$', '/more/dirs')","[117813, 118513, 120101]"
"('URIish.java', 'org.eclipse.jgit.transport.URIish', '<init>', '^(file):([\\\\/](?![\\\\/])((?:[A-Za-z]:)?[\\\\/]?(?:(?:[^\\\\/]+[\\\\/]+)*[^\\\\/]+[\\\\/]*)))$', 'ssh://l usr\\example.com@example.com:1234/D:/x')",[136230]
"('Description.java', 'org.junit.runner.Description', 'methodAndClassNamePatternGroupOrDefault', '([\\s\\S]*)\\((.*)\\)', 'testParse_ShortLineOnlyEmbeddedAndEndingLF(org.eclipse.jgit.revwalk.RevTagParseTest)')","[7208, 66102]"
"('ChangeIdUtil.java', 'org.eclipse.jgit.util.ChangeIdUtil', 'indexOfChangeId', '(^Change-Id: *I[a-f0-9]{40}$)', 'http://example.com/ fixes this')",[190186]
"('URIish.java', 'org.eclipse.jgit.transport.URIish', '<init>', '^(file):([\\\\/](?![\\\\/])((?:[A-Za-z]:)?[\\\\/]?(?:(?:[^\\\\/]+[\\\\/]+)*[^\\\\/]+[\\\\/]*)))$', 'ssh+git://me@example.com:80//abc')",[138576]
"('Description.java', 'org.junit.runner.Description', 'methodAndClassNamePatternGroupOrDefault', '([\\s\\S]*)\\((.*)\\)', 'testInsertHeadMiddle(org.eclipse.jgit.internal.storage.pack.DeltaIndexTest)')","[52912, 110300]"
"('Description.java', 'org.junit.runner.Description', 'methodAndClassNamePatternGroupOrDefault', '([\\s\\S]*)\\((.*)\\)', 'testMultiRename(org.eclipse.jgit.revwalk.RevWalkFollowFilterTest)')","[6771, 65684]"
"('URIish.java', 'org.eclipse.jgit.transport.URIish', '<init>', '^(file):([\\\\/](?![\\\\/])((?:[A-Za-z]:)?[\\\\/]?(?:(?:[^\\\\/]+[\\\\/]+)*[^\\\\/]+[\\\\/]*)))$', 'ssh://l usr\\example.com:wtf@example.com:80/D:/x')",[123166]
"('URIish.java', 'org.eclipse.jgit.transport.URIish', '<init>', '^(file):([\\\\/](?![\\\\/])((?:[A-Za-z]:)?[\\\\/]?(?:(?:[^\\\\/]+[\\\\/]+)*[^\\\\/]+[\\\\/]*)))$', 'https://l usr\\example.com@1.2.3.4:80/D:/x')",[146718]
"('URIish.java', 'org.eclipse.jgit.transport.URIish', '<init>', '^([a-z][a-z0-9+-]+)://(?:(?:([^/:@]+)(?::([^\\\\/]+))?@)?((?:[^\\\\/:]+)|(?:\\[[0-9a-f:]+\\]))(?::(\\d+))?((?:/~(?:[^\\\\/]+))?[\\\\/]))?(.+)?$', 'http://me@example.com:1234/D:\\x')",[141819]
"('URIish.java', 'org.eclipse.jgit.transport.URIish', '<init>', '^([a-z][a-z0-9+-]+)://(?:(?:([^/:@]+)(?::([^\\\\/]+))?@)?((?:[^\\\\/:]+)|(?:\\[[0-9a-f:]+\\]))(?::(\\d+))?((?:/~(?:[^\\\\/]+))?[\\\\/]))?(.+)?$', 'ssh://l usr\\example.com@[::1]:1234//abc')",[136943]
"('URIish.java', 'org.eclipse.jgit.transport.URIish', '<init>', '^(file):([\\\\/](?![\\\\/])((?:[A-Za-z]:)?[\\\\/]?(?:(?:[^\\\\/]+[\\\\/]+)*[^\\\\/]+[\\\\/]*)))$', 'https://lusr\\example@example.com//')","[160426, 160610]"
"('URIish.java', 'org.eclipse.jgit.transport.URIish', '<init>', '^([a-z][a-z0-9+-]+)://(?:(?:([^/:@]+)(?::([^\\\\/]+))?@)?((?:[^\\\\/:]+)|(?:\\[[0-9a-f:]+\\]))(?::(\\d+))?((?:/~(?:[^\\\\/]+))?[\\\\/]))?(.+)?$', 'ssh://me@1.2.3.4/D:\\x')","[148811, 148995]"
"('Description.java', 'org.junit.runner.Description', 'methodAndClassNamePatternGroupOrDefault', '([\\s\\S]*)\\((.*)\\)', 'multipleStashedCommits(org.eclipse.jgit.api.StashListCommandTest)')","[47135, 104646]"
"('Description.java', 'org.junit.runner.Description', 'methodAndClassNamePatternGroupOrDefault', '([\\s\\S]*)\\((.*)\\)', 'testIterable(org.eclipse.jgit.util.RefListTest)')","[35288, 93250]"
"('Description.java', 'org.junit.runner.Description', 'methodAndClassNamePatternGroupOrDefault', '([\\s\\S]*)\\((.*)\\)', 'testGetRefs_SkipsLockFiles(org.eclipse.jgit.internal.storage.file.RefDirectoryTest)')","[58837, 115910]"
"('URIish.java', 'org.eclipse.jgit.transport.URIish', '<init>', '^([a-z][a-z0-9+-]+)://(?:(?:([^/:@]+)(?::([^\\\\/]+))?@)?((?:[^\\\\/:]+)|(?:\\[[0-9a-f:]+\\]))(?::(\\d+))?((?:/~(?:[^\\\\/]+))?[\\\\/]))?(.+)?$', 'ssh+git://me@1.2.3.4/D:\\x')","[152123, 152307]"
"('URIish.java', 'org.eclipse.jgit.transport.URIish', '<init>', '^(file):([\\\\/](?![\\\\/])((?:[A-Za-z]:)?[\\\\/]?(?:(?:[^\\\\/]+[\\\\/]+)*[^\\\\/]+[\\\\/]*)))$', '/tmp/jgit_test_4323105091129792259_tmp/tmp_6865223474386595542')","[205352, 205477, 205623]"
"('Description.java', 'org.junit.runner.Description', 'methodAndClassNamePatternGroupOrDefault', '([\\s\\S]*)\\((.*)\\)', 'testUntrackedFolders(org.eclipse.jgit.lib.IndexDiffTest)')","[20618, 79016]"
"('Description.java', 'org.junit.runner.Description', 'methodAndClassNamePatternGroupOrDefault', '([\\s\\S]*)\\((.*)\\)', 'testInvalidTreeNameIsEmpty(org.eclipse.jgit.lib.ObjectCheckerTest)')","[25244, 83504]"
"('Description.java', 'org.junit.runner.Description', 'methodAndClassNamePatternGroupOrDefault', '([\\s\\S]*)\\((.*)\\)', 'testInsertMinValue(org.eclipse.jgit.transport.LongMapTest)')","[5317, 64320]"
"('URIish.java', 'org.eclipse.jgit.transport.URIish', '<init>', '^(file):([\\\\/](?![\\\\/])((?:[A-Za-z]:)?[\\\\/]?(?:(?:[^\\\\/]+[\\\\/]+)*[^\\\\/]+[\\\\/]*)))$', 'ssh+git://lusr\\example:wtf@example.com:1234/D:\\x')",[127444]
"('Description.java', 'org.junit.runner.Description', 'methodAndClassNamePatternGroupOrDefault', '([\\s\\S]*)\\((.*)\\)', 'testAddRejectsBadIndexes(org.eclipse.jgit.util.BlockListTest)')","[35517, 93470]"
"('URIish.java', 'org.eclipse.jgit.transport.URIish', '<init>', '^(file):([\\\\/](?![\\\\/])((?:[A-Za-z]:)?[\\\\/]?(?:(?:[^\\\\/]+[\\\\/]+)*[^\\\\/]+[\\\\/]*)))$', 'http://me:wtf@1.2.3.4:80/D:\\x')",[129100]
"('URIish.java', 'org.eclipse.jgit.transport.URIish', '<init>', '^([a-z][a-z0-9+-]+)://(?:(?:([^/:@]+)(?::([^\\\\/]+))?@)?((?:[^\\\\/:]+)|(?:\\[[0-9a-f:]+\\]))(?::(\\d+))?((?:/~(?:[^\\\\/]+))?[\\\\/]))?(.+)?$', 'https://[::1]//abc')","[172271, 172455, 173375, 173559, 174479, 174663]"
"('Description.java', 'org.junit.runner.Description', 'methodAndClassNamePatternGroupOrDefault', '([\\s\\S]*)\\((.*)\\)', 'testObjectId_objectid_invalid_explicit_parent(org.eclipse.jgit.lib.RepositoryResolveTest)')","[27069, 85396]"
"('Description.java', 'org.junit.runner.Description', 'methodAndClassNamePatternGroupOrDefault', '([\\s\\S]*)\\((.*)\\)', 'testOnlyOption_f1_2_f2_14_d(org.eclipse.jgit.api.CommitOnlyTest)')","[49452, 106934]"
"('Description.java', 'org.junit.runner.Description', 'methodAndClassNamePatternGroupOrDefault', '([\\s\\S]*)\\((.*)\\)', 'testCheckoutOutChangesAutoCRLFInput(org.eclipse.jgit.lib.DirCacheCheckoutTest)')","[23542, 81920]"
"('Description.java', 'org.junit.runner.Description', 'methodAndClassNamePatternGroupOrDefault', '([\\s\\S]*)\\((.*)\\)', 'testFilter_NO_MERGES(org.eclipse.jgit.revwalk.RevWalkFilterTest)')","[8305, 67092]"
"('URIish.java', 'org.eclipse.jgit.transport.URIish', '<init>', '^([a-z][a-z0-9+-]+)://(?:(?:([^/:@]+)(?::([^\\\\/]+))?@)?((?:[^\\\\/:]+)|(?:\\[[0-9a-f:]+\\]))(?::(\\d+))?((?:/~(?:[^\\\\/]+))?[\\\\/]))?(.+)?$', 'ssh+git://lusr\\example@[::1]//')","[154561, 154745]"
"('Description.java', 'org.junit.runner.Description', 'methodAndClassNamePatternGroupOrDefault', '([\\s\\S]*)\\((.*)\\)', 'test2(org.eclipse.jgit.revwalk.RevWalkPathFilter6012Test)')","[9429, 68170]"
"('Description.java', 'org.junit.runner.Description', 'methodAndClassNamePatternGroupOrDefault', '([\\s\\S]*)\\((.*)\\)', 'testFileCommittedDeletedCommittedComparedWithInitialCommit(org.eclipse.jgit.treewalk.filter.IndexDiffFilterTest)')","[30464, 88674]"
"('Description.java', 'org.junit.runner.Description', 'methodAndClassNamePatternGroupOrDefault', '([\\s\\S]*)\\((.*)\\)', 'stashedApplyOnOtherBranchWithStagedChange(org.eclipse.jgit.api.StashApplyCommandTest)')","[51311, 108782]"
"('Description.java', 'org.junit.runner.Description', 'methodAndClassNamePatternGroupOrDefault', '([\\s\\S]*)\\((.*)\\)', 'testAddIfAbsentGrowsWithObjects(org.eclipse.jgit.lib.ObjectIdSubclassMapTest)')","[22162, 80534]"
"('URIish.java', 'org.eclipse.jgit.transport.URIish', '<init>', '^([a-z][a-z0-9+-]+)://(?:(?:([^/:@]+)(?::([^\\\\/]+))?@)?((?:[^\\\\/:]+)|(?:\\[[0-9a-f:]+\\]))(?::(\\d+))?((?:/~(?:[^\\\\/]+))?[\\\\/]))?(.+)?$', 'http://l usr\\example.com:wtf@[::1]:80/D:/x')",[130549]
"('Description.java', 'org.junit.runner.Description', 'methodAndClassNamePatternGroupOrDefault', '([\\s\\S]*)\\((.*)\\)', 'testOnlyOption_f1_14_a(org.eclipse.jgit.api.CommitOnlyTest)')","[50124, 107638]"
"('Description.java', 'org.junit.runner.Description', 'methodAndClassNamePatternGroupOrDefault', '([\\s\\S]*)\\((.*)\\)', 'testDirectoryFileConflicts_2(org.eclipse.jgit.lib.DirCacheCheckoutTest)')","[23353, 81722]"
"('Description.java', 'org.junit.runner.Description', 'methodAndClassNamePatternGroupOrDefault', '([\\s\\S]*)\\((.*)\\)', 'testLimitedGetCachedBytesExceedsJavaLimits(org.eclipse.jgit.lib.ObjectLoaderTest)')","[24582, 82910]"
"('Description.java', 'org.junit.runner.Description', 'methodAndClassNamePatternGroupOrDefault', '([\\s\\S]*)\\((.*)\\)', 'testWrap(org.eclipse.jgit.treewalk.filter.NotTreeFilterTest)')","[31401, 89576]"
"('URIish.java', 'org.eclipse.jgit.transport.URIish', '<init>', '^([a-z][a-z0-9+-]+)://(?:(?:([^/:@]+)(?::([^\\\\/]+))?@)?((?:[^\\\\/:]+)|(?:\\[[0-9a-f:]+\\]))(?::(\\d+))?((?:/~(?:[^\\\\/]+))?[\\\\/]))?(.+)?$', 'ssh+git://me:wtf@[::1]:1234//')",[125857]
"('URIish.java', 'org.eclipse.jgit.transport.URIish', '<init>', '^([a-z][a-z0-9+-]+)://(?:(?:([^/:@]+)(?::([^\\\\/]+))?@)?((?:[^\\\\/:]+)|(?:\\[[0-9a-f:]+\\]))(?::(\\d+))?((?:/~(?:[^\\\\/]+))?[\\\\/]))?(.+)?$', 'https://lusr\\example@1.2.3.4:80//')",[147753]
"('Description.java', 'org.junit.runner.Description', 'methodAndClassNamePatternGroupOrDefault', '([\\s\\S]*)\\((.*)\\)', 'testUpdateSmudgedEntries(org.eclipse.jgit.api.CheckoutCommandTest)')","[43295, 100862]"
"('Description.java', 'org.junit.runner.Description', 'methodAndClassNamePatternGroupOrDefault', '([\\s\\S]*)\\((.*)\\)', 'testRebaseInteractiveFixupWithBlankLines(org.eclipse.jgit.api.RebaseCommandTest)')","[45066, 102578]"
"('Description.java', 'org.junit.runner.Description', 'methodAndClassNamePatternGroupOrDefault', '([\\s\\S]*)\\((.*)\\)', 'testWildcardInMiddleOfSource(org.eclipse.jgit.transport.RefSpecTest)')","[2836, 61900]"
"('URIish.java', 'org.eclipse.jgit.transport.URIish', '<init>', '^([a-z][a-z0-9+-]+)://(?:(?:([^/:@]+)(?::([^\\\\/]+))?@)?((?:[^\\\\/:]+)|(?:\\[[0-9a-f:]+\\]))(?::(\\d+))?((?:/~(?:[^\\\\/]+))?[\\\\/]))?(.+)?$', 'https://lusr\\example@[::1]:80/D:\\x')",[148259]
"('Description.java', 'org.junit.runner.Description', 'methodAndClassNamePatternGroupOrDefault', '([\\s\\S]*)\\((.*)\\)', 'org.eclipse.jgit.util.QuotedStringBourneStyleTest')","[36452, 187018]"
"('Description.java', 'org.junit.runner.Description', 'methodAndClassNamePatternGroupOrDefault', '([\\s\\S]*)\\((.*)\\)', 'testFetch(org.eclipse.jgit.api.FetchCommandTest)')","[51851, 109288]"
"('Description.java', 'org.junit.runner.Description', 'methodAndClassNamePatternGroupOrDefault', '([\\s\\S]*)\\((.*)\\)', 'testDequote_BareA(org.eclipse.jgit.util.QuotedStringBourneUserPathStyleTest)')","[38660, 96484]"
"('URIish.java', 'org.eclipse.jgit.transport.URIish', '<init>', '^([a-z][a-z0-9+-]+)://(?:(?:([^/:@]+)(?::([^\\\\/]+))?@)?((?:[^\\\\/:]+)|(?:\\[[0-9a-f:]+\\]))(?::(\\d+))?((?:/~(?:[^\\\\/]+))?[\\\\/]))?(.+)?$', 'ssh+git://1.2.3.4//abc')","[165279, 165463, 166383, 166567, 167487, 167671]"
"('Description.java', 'org.junit.runner.Description', 'methodAndClassNamePatternGroupOrDefault', '([\\s\\S]*)\\((.*)\\)', 'testCreate(org.eclipse.jgit.diff.EditTest)')","[16062, 74462]"
"('URIish.java', 'org.eclipse.jgit.transport.URIish', '<init>', '^(file):([\\\\/](?![\\\\/])((?:[A-Za-z]:)?[\\\\/]?(?:(?:[^\\\\/]+[\\\\/]+)*[^\\\\/]+[\\\\/]*)))$', 'https://lusr\\example@[::1]:1234//')",[147914]
"('Description.java', 'org.junit.runner.Description', 'methodAndClassNamePatternGroupOrDefault', '([\\s\\S]*)\\((.*)\\)', 'testNegateIsUnwrap(org.eclipse.jgit.treewalk.filter.NotTreeFilterTest)')","[31359, 89532]"
"('Description.java', 'org.junit.runner.Description', 'methodAndClassNamePatternGroupOrDefault', '([\\s\\S]*)\\((.*)\\)', 'testDequote_RawUTF8(org.eclipse.jgit.util.QuotedStringGitPathStyleTest)')","[34160, 92128]"
"('URIish.java', 'org.eclipse.jgit.transport.URIish', '<init>', '^(file):([\\\\/](?![\\\\/])((?:[A-Za-z]:)?[\\\\/]?(?:(?:[^\\\\/]+[\\\\/]+)*[^\\\\/]+[\\\\/]*)))$', 'ssh://lusr\\example@1.2.3.4//abc')","[150904, 151088]"
"('Description.java', 'org.junit.runner.Description', 'methodAndClassNamePatternGroupOrDefault', '([\\s\\S]*)\\((.*)\\)', 'testReadByteBlocks(org.eclipse.jgit.util.io.UnionInputStreamTest)')","[33122, 91160]"
"('Description.java', 'org.junit.runner.Description', 'methodAndClassNamePatternGroupOrDefault', '([\\s\\S]*)\\((.*)\\)', 'testGraphGroupCase5(org.eclipse.jgit.fnmatch.FileNameMatcherTest)')","[16795, 75210]"
"('Description.java', 'org.junit.runner.Description', 'methodAndClassNamePatternGroupOrDefault', '([\\s\\S]*)\\((.*)\\)', 'testBreakModify_DontBreakAboveScore(org.eclipse.jgit.diff.RenameDetectorTest)')","[12982, 71514]"
"('URIish.java', 'org.eclipse.jgit.transport.URIish', '<init>', '^(file):([\\\\/](?![\\\\/])((?:[A-Za-z]:)?[\\\\/]?(?:(?:[^\\\\/]+[\\\\/]+)*[^\\\\/]+[\\\\/]*)))$', 'https://lusr\\example:wtf@[::1]:1234/D:\\x')",[134804]
"('Description.java', 'org.junit.runner.Description', 'methodAndClassNamePatternGroupOrDefault', '([\\s\\S]*)\\((.*)\\)', 'testPushResult(org.eclipse.jgit.transport.PushProcessTest)')","[4922, 63946]"
"('Description.java', 'org.junit.runner.Description', 'methodAndClassNamePatternGroupOrDefault', '([\\s\\S]*)\\((.*)\\)', 'testCreateFile(org.eclipse.jgit.diff.MyersDiffTest)')","[14667, 73120]"
"('Description.java', 'org.junit.runner.Description', 'methodAndClassNamePatternGroupOrDefault', '([\\s\\S]*)\\((.*)\\)', 'testOnlyOption_f1_12_f2_14_e(org.eclipse.jgit.api.CommitOnlyTest)')","[49578, 107066]"
"('Description.java', 'org.junit.runner.Description', 'methodAndClassNamePatternGroupOrDefault', '([\\s\\S]*)\\((.*)\\)', 'testTimeout_close_Timeout(org.eclipse.jgit.util.io.TimeoutOutputStreamTest)')","[32563, 90654]"
"('URIish.java', 'org.eclipse.jgit.transport.URIish', '<init>', '^(file):([\\\\/](?![\\\\/])((?:[A-Za-z]:)?[\\\\/]?(?:(?:[^\\\\/]+[\\\\/]+)*[^\\\\/]+[\\\\/]*)))$', 'ssh://me:wtf@1.2.3.4:1234/D:\\x')",[122292]
"('Description.java', 'org.junit.runner.Description', 'methodAndClassNamePatternGroupOrDefault', '([\\s\\S]*)\\((.*)\\)', 'testParse_ShortLineOnlyEmbeddedLF(org.eclipse.jgit.revwalk.RevTagParseTest)')","[7145, 66036]"
"('Description.java', 'org.junit.runner.Description', 'methodAndClassNamePatternGroupOrDefault', '([\\s\\S]*)\\((.*)\\)', 'testPath_4096(org.eclipse.jgit.dircache.DirCacheLargePathTest)')","[12295, 70854]"
"('URIish.java', 'org.eclipse.jgit.transport.URIish', '<init>', '^(file):([\\\\/](?![\\\\/])((?:[A-Za-z]:)?[\\\\/]?(?:(?:[^\\\\/]+[\\\\/]+)*[^\\\\/]+[\\\\/]*)))$', 'git://host/abc/')",[175997]
"('Description.java', 'org.junit.runner.Description', 'methodAndClassNamePatternGroupOrDefault', '([\\s\\S]*)\\((.*)\\)', 'testParentDirectoryGitIgnores(org.eclipse.jgit.ignore.IgnoreMatcherTest)')","[31752, 89884]"
"('Description.java', 'org.junit.runner.Description', 'methodAndClassNamePatternGroupOrDefault', '([\\s\\S]*)\\((.*)\\)', 'shouldWorkWithoutMergeBase(org.eclipse.jgit.lib.BranchTrackingStatusTest)')","[23939, 82316]"
"('URIish.java', 'org.eclipse.jgit.transport.URIish', '<init>', '^([a-z][a-z0-9+-]+)://(?:(?:([^/:@]+)(?::([^\\\\/]+))?@)?((?:[^\\\\/:]+)|(?:\\[[0-9a-f:]+\\]))(?::(\\d+))?((?:/~(?:[^\\\\/]+))?[\\\\/]))?(.+)?$', 'https://me:wtf@[::1]:1234//')",[132481]
"('Description.java', 'org.junit.runner.Description', 'methodAndClassNamePatternGroupOrDefault', '([\\s\\S]*)\\((.*)\\)', 'testCheckoutOurs(org.eclipse.jgit.api.PathCheckoutCommandTest)')","[46864, 104382]"
"('Description.java', 'org.junit.runner.Description', 'methodAndClassNamePatternGroupOrDefault', '([\\s\\S]*)\\((.*)\\)', 'testCompareEntriesOffsetsWithGetOffsets(org.eclipse.jgit.internal.storage.file.PackIndexV2Test)')","[53551, 110850]"
"('URIish.java', 'org.eclipse.jgit.transport.URIish', '<init>', '^([a-z][a-z0-9+-]+)://(?:(?:([^/:@]+)(?::([^\\\\/]+))?@)?((?:[^\\\\/:]+)|(?:\\[[0-9a-f:]+\\]))(?::(\\d+))?((?:/~(?:[^\\\\/]+))?[\\\\/]))?(.+)?$', 'file:///tmp/jgit_test_1158868256880953365_tmp/tmp_1703886128869362682/.git/')",[196568]
"('Description.java', 'org.junit.runner.Description', 'methodAndClassNamePatternGroupOrDefault', '([\\s\\S]*)\\((.*)\\)', 'renameBranchNoConfigValues(org.eclipse.jgit.api.RenameBranchCommandTest)')","[50895, 108386]"
"('Description.java', 'org.junit.runner.Description', 'methodAndClassNamePatternGroupOrDefault', '([\\s\\S]*)\\((.*)\\)', 'DEFAULT(org.eclipse.jgit.util.GitDateFormatterTest)')","[32229, 90324]"
"('Description.java', 'org.junit.runner.Description', 'methodAndClassNamePatternGroupOrDefault', '([\\s\\S]*)\\((.*)\\)', 'testOnlyOption_f1_1_c(org.eclipse.jgit.api.CommitOnlyTest)')","[48486, 105922]"
"('Description.java', 'org.junit.runner.Description', 'methodAndClassNamePatternGroupOrDefault', '([\\s\\S]*)\\((.*)\\)', 'testCloneRepositoryWithTagName(org.eclipse.jgit.api.CloneCommandTest)')","[42419, 100004]"
"('URIish.java', 'org.eclipse.jgit.transport.URIish', '<init>', '^(file):([\\\\/](?![\\\\/])((?:[A-Za-z]:)?[\\\\/]?(?:(?:[^\\\\/]+[\\\\/]+)*[^\\\\/]+[\\\\/]*)))$', 'ssh+git://l usr\\example.com@[::1]/D:/x')","[153526, 153710]"
"('Description.java', 'org.junit.runner.Description', 'methodAndClassNamePatternGroupOrDefault', '([\\s\\S]*)\\((.*)\\)', 'testUpdateWorkingDirectoryFromIndex(org.eclipse.jgit.api.PathCheckoutCommandTest)')","[47095, 104624]"
"('Description.java', 'org.junit.runner.Description', 'methodAndClassNamePatternGroupOrDefault', '([\\s\\S]*)\\((.*)\\)', 'org.eclipse.jgit.diff.PatchIdDiffFormatterTest')","[13604, 182586]"
"('URIish.java', 'org.eclipse.jgit.transport.URIish', '<init>', '^(file):([\\\\/](?![\\\\/])((?:[A-Za-z]:)?[\\\\/]?(?:(?:[^\\\\/]+[\\\\/]+)*[^\\\\/]+[\\\\/]*)))$', 'https://l usr\\example.com@1.2.3.4:1234//')",[146442]
"('URIish.java', 'org.eclipse.jgit.transport.URIish', '<init>', '^([a-z][a-z0-9+-]+)://(?:(?:([^/:@]+)(?::([^\\\\/]+))?@)?((?:[^\\\\/:]+)|(?:\\[[0-9a-f:]+\\]))(?::(\\d+))?((?:/~(?:[^\\\\/]+))?[\\\\/]))?(.+)?$', 'file:///tmp/jgit_test_4031722836001841787_tmp/tmp_7740532634509356766')","[194022, 194084, 194142]"
"('Description.java', 'org.junit.runner.Description', 'methodAndClassNamePatternGroupOrDefault', '([\\s\\S]*)\\((.*)\\)', 'testSort_COMMIT_TIME_DESC_OutOfOrder2(org.eclipse.jgit.revwalk.RevWalkSortTest)')","[9160, 67928]"
"('URIish.java', 'org.eclipse.jgit.transport.URIish', '<init>', '^([a-z][a-z0-9+-]+)://(?:(?:([^/:@]+)(?::([^\\\\/]+))?@)?((?:[^\\\\/:]+)|(?:\\[[0-9a-f:]+\\]))(?::(\\d+))?((?:/~(?:[^\\\\/]+))?[\\\\/]))?(.+)?$', 'https://lusr\\example@example.com:1234//')",[147201]
"('Description.java', 'org.junit.runner.Description', 'methodAndClassNamePatternGroupOrDefault', '([\\s\\S]*)\\((.*)\\)', 'testXDigitGroupCase4(org.eclipse.jgit.fnmatch.FileNameMatcherTest)')","[18769, 77278]"
"('URIish.java', 'org.eclipse.jgit.transport.URIish', '<init>', '^([a-z][a-z0-9+-]+)://(?:(?:([^/:@]+)(?::([^\\\\/]+))?@)?((?:[^\\\\/:]+)|(?:\\[[0-9a-f:]+\\]))(?::(\\d+))?((?:/~(?:[^\\\\/]+))?[\\\\/]))?(.+)?$', 'ssh://lusr\\example:wtf@example.com:80/D:\\x')",[124339]
"('Description.java', 'org.junit.runner.Description', 'methodAndClassNamePatternGroupOrDefault', '([\\s\\S]*)\\((.*)\\)', 'org.eclipse.jgit.util.IntListTest')","[35910, 186964]"
"('Description.java', 'org.junit.runner.Description', 'methodAndClassNamePatternGroupOrDefault', '([\\s\\S]*)\\((.*)\\)', 'org.eclipse.jgit.api.ApplyCommandTest')","[46593, 205797]"
"('URIish.java', 'org.eclipse.jgit.transport.URIish', '<init>', '^([a-z][a-z0-9+-]+)://(?:(?:([^/:@]+)(?::([^\\\\/]+))?@)?((?:[^\\\\/:]+)|(?:\\[[0-9a-f:]+\\]))(?::(\\d+))?((?:/~(?:[^\\\\/]+))?[\\\\/]))?(.+)?$', 'http://l usr\\example.com@[::1]:80/D:/x')",[143797]
"('Description.java', 'org.junit.runner.Description', 'methodAndClassNamePatternGroupOrDefault', '([\\s\\S]*)\\((.*)\\)', 'SHORT(org.eclipse.jgit.util.GitDateFormatterTest)')","[32355, 90456]"
"('Description.java', 'org.junit.runner.Description', 'methodAndClassNamePatternGroupOrDefault', '([\\s\\S]*)\\((.*)\\)', 'repositoryWithRootLevelSubmodule(org.eclipse.jgit.submodule.SubmoduleWalkTest)')","[19853, 78334]"
"('Description.java', 'org.junit.runner.Description', 'methodAndClassNamePatternGroupOrDefault', '([\\s\\S]*)\\((.*)\\)', 'testOnlyOption_f1_13_d(org.eclipse.jgit.api.CommitOnlyTest)')","[50082, 107594]"
"('URIish.java', 'org.eclipse.jgit.transport.URIish', '<init>', '^(?:([^/:@]+)(?::([^\\\\/]+))?@)?((?:[^\\\\/:]+)|(?:\\[[0-9a-f:]+\\])):((?:(?:/~(?:[^\\\\/]+))[\\\\/])?(?:(?:[^\\\\/]+[\\\\/]+)*[^\\\\/]+[\\\\/]*))$', 'short:project.git')","[119813, 120738]"
"('Description.java', 'org.junit.runner.Description', 'methodAndClassNamePatternGroupOrDefault', '([\\s\\S]*)\\((.*)\\)', 'testToLowerCaseChar(org.eclipse.jgit.util.StringUtilsTest)')","[33454, 91468]"
"('URIish.java', 'org.eclipse.jgit.transport.URIish', '<init>', '^(?:([^/:@]+)(?::([^\\\\/]+))?@)?((?:[^\\\\/:]+)|(?:\\[[0-9a-f:]+\\])):((?:(?:/~(?:[^\\\\/]+))[\\\\/])?(?:(?:[^\\\\/]+[\\\\/]+)*[^\\\\/]+[\\\\/]*))$', 'example.com:some/p ath')","[121096, 121165]"
"('URIish.java', 'org.eclipse.jgit.transport.URIish', '<init>', '^([a-z][a-z0-9+-]+)://(?:(?:([^/:@]+)(?::([^\\\\/]+))?@)?((?:[^\\\\/:]+)|(?:\\[[0-9a-f:]+\\]))(?::(\\d+))?((?:/~(?:[^\\\\/]+))?[\\\\/]))?(.+)?$', 'ssh://me:wtf@[::1]:80//abc')",[122775]
"('Description.java', 'org.junit.runner.Description', 'methodAndClassNamePatternGroupOrDefault', '([\\s\\S]*)\\((.*)\\)', 'testMixedGroupCase6(org.eclipse.jgit.fnmatch.FileNameMatcherTest)')","[16585, 74990]"
"('Description.java', 'org.junit.runner.Description', 'methodAndClassNamePatternGroupOrDefault', '([\\s\\S]*)\\((.*)\\)', 'testEdit_ReplaceCommonDelete(org.eclipse.jgit.diff.HistogramDiffTest)')","[15247, 73648]"
"('Description.java', 'org.junit.runner.Description', 'methodAndClassNamePatternGroupOrDefault', '([\\s\\S]*)\\((.*)\\)', 'testMaliciousGitPathEndDotWindows3(org.eclipse.jgit.lib.DirCacheCheckoutMaliciousPathTest)')","[21202, 79588]"
"('ChangeIdUtil.java', 'org.eclipse.jgit.util.ChangeIdUtil', 'indexOfChangeId', '(^Change-Id: *I[a-f0-9]{40}$)', 'a')","[188178, 188204, 188230, 188593, 188619, 190633, 192237, 192263]"
"('Description.java', 'org.junit.runner.Description', 'methodAndClassNamePatternGroupOrDefault', '([\\s\\S]*)\\((.*)\\)', 'testTimeout_close_Success(org.eclipse.jgit.util.io.TimeoutOutputStreamTest)')","[32500, 90588]"
"('URIish.java', 'org.eclipse.jgit.transport.URIish', '<init>', '^([a-z][a-z0-9+-]+)://(?:(?:([^/:@]+)(?::([^\\\\/]+))?@)?((?:[^\\\\/:]+)|(?:\\[[0-9a-f:]+\\]))(?::(\\d+))?((?:/~(?:[^\\\\/]+))?[\\\\/]))?(.+)?$', 'ssh+git://1.2.3.4//')","[165233, 165417, 166337, 166521, 167441, 167625]"
"('URIish.java', 'org.eclipse.jgit.transport.URIish', '<init>', '^([a-z][a-z0-9+-]+)://(?:(?:([^/:@]+)(?::([^\\\\/]+))?@)?((?:[^\\\\/:]+)|(?:\\[[0-9a-f:]+\\]))(?::(\\d+))?((?:/~(?:[^\\\\/]+))?[\\\\/]))?(.+)?$', 'ssh://me:wtf@1.2.3.4:80//')",[122361]
"('Description.java', 'org.junit.runner.Description', 'methodAndClassNamePatternGroupOrDefault', '([\\s\\S]*)\\((.*)\\)', 'testTrivialTwoWay_leftDFconflict1(org.eclipse.jgit.merge.SimpleMergeTest)')","[9845, 68566]"
"('Description.java', 'org.junit.runner.Description', 'methodAndClassNamePatternGroupOrDefault', '([\\s\\S]*)\\((.*)\\)', 'org.eclipse.jgit.submodule.SubmoduleStatusTest')","[20101, 183789]"
"('Description.java', 'org.junit.runner.Description', 'methodAndClassNamePatternGroupOrDefault', '([\\s\\S]*)\\((.*)\\)', 'testPullWithUri(org.eclipse.jgit.merge.MergeMessageFormatterTest)')","[10864, 69534]"
"('Description.java', 'org.junit.runner.Description', 'methodAndClassNamePatternGroupOrDefault', '([\\s\\S]*)\\((.*)\\)', 'testWriteUnchangedFlat(org.eclipse.jgit.notes.NoteMapTest)')","[40860, 98530]"
"('URIish.java', 'org.eclipse.jgit.transport.URIish', '<init>', '^([a-z][a-z0-9+-]+)://(?:(?:([^/:@]+)(?::([^\\\\/]+))?@)?((?:[^\\\\/:]+)|(?:\\[[0-9a-f:]+\\]))(?::(\\d+))?((?:/~(?:[^\\\\/]+))?[\\\\/]))?(.+)?$', 'ssh+git://l usr\\example.com:wtf@example.com:80/D:\\x')",[126547]
"('Description.java', 'org.junit.runner.Description', 'methodAndClassNamePatternGroupOrDefault', '([\\s\\S]*)\\((.*)\\)', 'testNoFastForwardNoCommit(org.eclipse.jgit.api.MergeCommandTest)')","[43690, 101236]"
"('Description.java', 'org.junit.runner.Description', 'methodAndClassNamePatternGroupOrDefault', '([\\s\\S]*)\\((.*)\\)', 'generatorFilteredToOneOfTwoSubmodules(org.eclipse.jgit.submodule.SubmoduleWalkTest)')","[19811, 78290]"
"('Description.java', 'org.junit.runner.Description', 'methodAndClassNamePatternGroupOrDefault', '([\\s\\S]*)\\((.*)\\)', 'testMissingPort(org.eclipse.jgit.transport.URIishTest)')","[1685, 60734]"
"('Description.java', 'org.junit.runner.Description', 'methodAndClassNamePatternGroupOrDefault', '([\\s\\S]*)\\((.*)\\)', 'testOnlyOption_f1_10_d(org.eclipse.jgit.api.CommitOnlyTest)')","[49767, 107264]"
"('Description.java', 'org.junit.runner.Description', 'methodAndClassNamePatternGroupOrDefault', '([\\s\\S]*)\\((.*)\\)', 'testParse_GitStyleMessage(org.eclipse.jgit.revwalk.RevCommitParseTest)')","[8826, 67598]"
"('Description.java', 'org.junit.runner.Description', 'methodAndClassNamePatternGroupOrDefault', '([\\s\\S]*)\\((.*)\\)', 'testRebaseWithUncommittedMasterChangeOtherCommit(org.eclipse.jgit.api.RebaseCommandTest)')","[46116, 103678]"
"('URIish.java', 'org.eclipse.jgit.transport.URIish', '<init>', '^([a-z][a-z0-9+-]+)://(?:(?:([^/:@]+)(?::([^\\\\/]+))?@)?((?:[^\\\\/:]+)|(?:\\[[0-9a-f:]+\\]))(?::(\\d+))?((?:/~(?:[^\\\\/]+))?[\\\\/]))?(.+)?$', 'http://l usr\\example.com:wtf@1.2.3.4:1234/D:\\x')",[130043]
"('Description.java', 'org.junit.runner.Description', 'methodAndClassNamePatternGroupOrDefault', '([\\s\\S]*)\\((.*)\\)', 'testInvalidTagNoObject5(org.eclipse.jgit.lib.ObjectCheckerTest)')","[26504, 84824]"
"('URIish.java', 'org.eclipse.jgit.transport.URIish', '<init>', '^([a-z][a-z0-9+-]+)://(?:(?:([^/:@]+)(?::([^\\\\/]+))?@)?((?:[^\\\\/:]+)|(?:\\[[0-9a-f:]+\\]))(?::(\\d+))?((?:/~(?:[^\\\\/]+))?[\\\\/]))?(.+)?$', 'ssh://l usr\\example.com@[::1]:80//abc')",[137127]
"('URIish.java', 'org.eclipse.jgit.transport.URIish', '<init>', '^(file):([\\\\/](?![\\\\/])((?:[A-Za-z]:)?[\\\\/]?(?:(?:[^\\\\/]+[\\\\/]+)*[^\\\\/]+[\\\\/]*)))$', 'https://l usr\\example.com:wtf@example.com:1234//abc')",[132872]
"('URIish.java', 'org.eclipse.jgit.transport.URIish', '<init>', '^(file):([\\\\/](?![\\\\/])((?:[A-Za-z]:)?[\\\\/]?(?:(?:[^\\\\/]+[\\\\/]+)*[^\\\\/]+[\\\\/]*)))$', '/some/dir')","[117549, 117959, 118129, 118249, 118684, 118904, 119024, 119245, 119468, 119592, 119837, 120247, 120367, 120812]"
"('Description.java', 'org.junit.runner.Description', 'methodAndClassNamePatternGroupOrDefault', '([\\s\\S]*)\\((.*)\\)', 'testAddGetAndContains(org.eclipse.jgit.lib.ObjectIdSubclassMapTest)')","[22183, 80556]"
"('Description.java', 'org.junit.runner.Description', 'methodAndClassNamePatternGroupOrDefault', '([\\s\\S]*)\\((.*)\\)', 'testUpdateRefForwardWithCheck1(org.eclipse.jgit.internal.storage.file.RefUpdateTest)')","[55940, 113094]"
"('Description.java', 'org.junit.runner.Description', 'methodAndClassNamePatternGroupOrDefault', '([\\s\\S]*)\\((.*)\\)', 'testLeadingWhitespaces(org.eclipse.jgit.storage.file.FileBasedConfigTest)')","[38866, 96660]"
"('URIish.java', 'org.eclipse.jgit.transport.URIish', '<init>', '^([a-z][a-z0-9+-]+)://(?:(?:([^/:@]+)(?::([^\\\\/]+))?@)?((?:[^\\\\/:]+)|(?:\\[[0-9a-f:]+\\]))(?::(\\d+))?((?:/~(?:[^\\\\/]+))?[\\\\/]))?(.+)?$', 'http://lusr\\example@[::1]:1234/D:/x')",[144717]
"('Description.java', 'org.junit.runner.Description', 'methodAndClassNamePatternGroupOrDefault', '([\\s\\S]*)\\((.*)\\)', 'testMaliciousAbsoluteWindowsPath2(org.eclipse.jgit.lib.DirCacheCheckoutMaliciousPathTest)')","[21706, 80116]"
"('Description.java', 'org.junit.runner.Description', 'methodAndClassNamePatternGroupOrDefault', '([\\s\\S]*)\\((.*)\\)', 'workingDirectoryDeleteIndexEdit(org.eclipse.jgit.api.StashCreateCommandTest)')","[41900, 99520]"
"('URIish.java', 'org.eclipse.jgit.transport.URIish', '<init>', '^(file):([\\\\/](?![\\\\/])((?:[A-Za-z]:)?[\\\\/]?(?:(?:[^\\\\/]+[\\\\/]+)*[^\\\\/]+[\\\\/]*)))$', 'git://example.com/here')",[184411]
"('Description.java', 'org.junit.runner.Description', 'methodAndClassNamePatternGroupOrDefault', '([\\s\\S]*)\\((.*)\\)', 'testGetValidSlashHumanishName(org.eclipse.jgit.transport.URIishTest)')","[1580, 60624]"
"('URIish.java', 'org.eclipse.jgit.transport.URIish', '<init>', '^([a-z][a-z0-9+-]+)://(?:(?:([^/:@]+)(?::([^\\\\/]+))?@)?((?:[^\\\\/:]+)|(?:\\[[0-9a-f:]+\\]))(?::(\\d+))?((?:/~(?:[^\\\\/]+))?[\\\\/]))?(.+)?$', 'http://me:wtf@[::1]:80//abc')",[129399]
"('URIish.java', 'org.eclipse.jgit.transport.URIish', '<init>', '^([a-z][a-z0-9+-]+)://(?:(?:([^/:@]+)(?::([^\\\\/]+))?@)?((?:[^\\\\/:]+)|(?:\\[[0-9a-f:]+\\]))(?::(\\d+))?((?:/~(?:[^\\\\/]+))?[\\\\/]))?(.+)?$', 'ssh://me:wtf@[::1]:1234/D:\\x')",[122683]
"('URIish.java', 'org.eclipse.jgit.transport.URIish', '<init>', '^(file):([\\\\/](?![\\\\/])((?:[A-Za-z]:)?[\\\\/]?(?:(?:[^\\\\/]+[\\\\/]+)*[^\\\\/]+[\\\\/]*)))$', 'ssh+git://l usr\\example.com:wtf@1.2.3.4:1234/D:/x')",[126662]
"('Description.java', 'org.junit.runner.Description', 'methodAndClassNamePatternGroupOrDefault', '([\\s\\S]*)\\((.*)\\)', 'testPullLocalConflict(org.eclipse.jgit.api.PullCommandTest)')","[46490, 104030]"
"('Description.java', 'org.junit.runner.Description', 'methodAndClassNamePatternGroupOrDefault', '([\\s\\S]*)\\((.*)\\)', 'testPrefixCompare_7(org.eclipse.jgit.lib.AbbreviatedObjectIdTest)')","[22349, 80710]"
"('URIish.java', 'org.eclipse.jgit.transport.URIish', '<init>', '^(file):([\\\\/](?![\\\\/])((?:[A-Za-z]:)?[\\\\/]?(?:(?:[^\\\\/]+[\\\\/]+)*[^\\\\/]+[\\\\/]*)))$', 'http://1.2.3.4//abc')","[168568, 168752, 169672, 169856, 170776, 170960]"
"('URIish.java', 'org.eclipse.jgit.transport.URIish', '<init>', '^([a-z][a-z0-9+-]+)://(?:(?:([^/:@]+)(?::([^\\\\/]+))?@)?((?:[^\\\\/:]+)|(?:\\[[0-9a-f:]+\\]))(?::(\\d+))?((?:/~(?:[^\\\\/]+))?[\\\\/]))?(.+)?$', 'http://me:wtf@1.2.3.4:1234/D:/x')",[128893]
"('Description.java', 'org.junit.runner.Description', 'methodAndClassNamePatternGroupOrDefault', '([\\s\\S]*)\\((.*)\\)', 'workingDirectoryCleanIndexModify(org.eclipse.jgit.api.StashCreateCommandTest)')","[41774, 99388]"
"('Description.java', 'org.junit.runner.Description', 'methodAndClassNamePatternGroupOrDefault', '([\\s\\S]*)\\((.*)\\)', 'testFilterIsPrefixOfKey(org.eclipse.jgit.treewalk.filter.PathFilterGroupTest)')","[31235, 89422]"
"('Description.java', 'org.junit.runner.Description', 'methodAndClassNamePatternGroupOrDefault', '([\\s\\S]*)\\((.*)\\)', 'testCommit(org.eclipse.jgit.merge.MergeMessageFormatterTest)')","[11074, 69754]"
"('URIish.java', 'org.eclipse.jgit.transport.URIish', '<init>', '^([a-z][a-z0-9+-]+)://(?:(?:([^/:@]+)(?::([^\\\\/]+))?@)?((?:[^\\\\/:]+)|(?:\\[[0-9a-f:]+\\]))(?::(\\d+))?((?:/~(?:[^\\\\/]+))?[\\\\/]))?(.+)?$', 'https://lusr\\example:wtf@[::1]:1234/D:/x')",[134781]
"('URIish.java', 'org.eclipse.jgit.transport.URIish', '<init>', '^([a-z][a-z0-9+-]+)://(?:(?:([^/:@]+)(?::([^\\\\/]+))?@)?((?:[^\\\\/:]+)|(?:\\[[0-9a-f:]+\\]))(?::(\\d+))?((?:/~(?:[^\\\\/]+))?[\\\\/]))?(.+)?$', 'http://lusr\\example:wtf@example.com:1234//')",[130641]
"('Description.java', 'org.junit.runner.Description', 'methodAndClassNamePatternGroupOrDefault', '([\\s\\S]*)\\((.*)\\)', 'testWildcardInMiddleOfDestionation(org.eclipse.jgit.transport.RefSpecTest)')","[2668, 61724]"
"('URIish.java', 'org.eclipse.jgit.transport.URIish', '<init>', '^([\\\\/]?((?:[A-Za-z]:)?[\\\\/]?(?:(?:[^\\\\/]+[\\\\/]+)*[^\\\\/]+[\\\\/]*)))$', '../../foo/bar')","[177676, 177791]"
"('Description.java', 'org.junit.runner.Description', 'methodAndClassNamePatternGroupOrDefault', '([\\s\\S]*)\\((.*)\\)', 'testDigitGroupCase0(org.eclipse.jgit.fnmatch.FileNameMatcherTest)')","[17614, 76068]"
"('URIish.java', 'org.eclipse.jgit.transport.URIish', '<init>', '^(file):([\\\\/](?![\\\\/])((?:[A-Za-z]:)?[\\\\/]?(?:(?:[^\\\\/]+[\\\\/]+)*[^\\\\/]+[\\\\/]*)))$', 'https://me@[::1]:1234/D:/x')",[145798]
"('URIish.java', 'org.eclipse.jgit.transport.URIish', '<init>', '^([a-z][a-z0-9+-]+)://(?:(?:([^/:@]+)(?::([^\\\\/]+))?@)?((?:[^\\\\/:]+)|(?:\\[[0-9a-f:]+\\]))(?::(\\d+))?((?:/~(?:[^\\\\/]+))?[\\\\/]))?(.+)?$', 'https://l usr\\example.com:wtf@example.com:80//')",[133033]
"('Description.java', 'org.junit.runner.Description', 'methodAndClassNamePatternGroupOrDefault', '([\\s\\S]*)\\((.*)\\)', 'testParseFullIndexLine_NoMode(org.eclipse.jgit.patch.FileHeaderTest)')","[39425, 97166]"
"('Description.java', 'org.junit.runner.Description', 'methodAndClassNamePatternGroupOrDefault', '([\\s\\S]*)\\((.*)\\)', 'testUnicodeNames(org.eclipse.jgit.lib.ValidRefNameTest)')","[24208, 82558]"
"('URIish.java', 'org.eclipse.jgit.transport.URIish', '<init>', '^([a-z][a-z0-9+-]+)://(?:(?:([^/:@]+)(?::([^\\\\/]+))?@)?((?:[^\\\\/:]+)|(?:\\[[0-9a-f:]+\\]))(?::(\\d+))?((?:/~(?:[^\\\\/]+))?[\\\\/]))?(.+)?$', 'ssh://l usr\\example.com@1.2.3.4/D:/x')","[149869, 150053]"
"('Description.java', 'org.junit.runner.Description', 'methodAndClassNamePatternGroupOrDefault', '([\\s\\S]*)\\((.*)\\)', 'testCreateFileHeaderForRenameModeChange(org.eclipse.jgit.diff.DiffFormatterTest)')","[13978, 72438]"
"('URIish.java', 'org.eclipse.jgit.transport.URIish', '<init>', '^(file):([\\\\/](?![\\\\/])((?:[A-Za-z]:)?[\\\\/]?(?:(?:[^\\\\/]+[\\\\/]+)*[^\\\\/]+[\\\\/]*)))$', 'ssh://some-host:/path/to/repository.git')",[176618]
"('Description.java', 'org.junit.runner.Description', 'methodAndClassNamePatternGroupOrDefault', '([\\s\\S]*)\\((.*)\\)', 'testFormatMinutes(org.eclipse.jgit.util.RelativeDateFormatterTest)')","[35765, 93690]"
"('Description.java', 'org.junit.runner.Description', 'methodAndClassNamePatternGroupOrDefault', '([\\s\\S]*)\\((.*)\\)', 'testSet(org.eclipse.jgit.util.IntListTest)')","[35994, 93910]"
"('Description.java', 'org.junit.runner.Description', 'methodAndClassNamePatternGroupOrDefault', '([\\s\\S]*)\\((.*)\\)', 'testParse_ShortLineOnlyEndLF(org.eclipse.jgit.revwalk.RevTagParseTest)')","[7166, 66058]"
"('Description.java', 'org.junit.runner.Description', 'methodAndClassNamePatternGroupOrDefault', '([\\s\\S]*)\\((.*)\\)', 'defaultFmt(org.eclipse.jgit.util.GitDateParserTest)')","[36370, 94284]"
"('Description.java', 'org.junit.runner.Description', 'methodAndClassNamePatternGroupOrDefault', '([\\s\\S]*)\\((.*)\\)', 'testAddTwo(org.eclipse.jgit.diff.EditListTest)')","[13503, 72020]"
"('Description.java', 'org.junit.runner.Description', 'methodAndClassNamePatternGroupOrDefault', '([\\s\\S]*)\\((.*)\\)', 'testObjectMovedToNewPack2(org.eclipse.jgit.internal.storage.file.ConcurrentRepackTest)')","[55501, 112654]"
"('URIish.java', 'org.eclipse.jgit.transport.URIish', '<init>', '^([a-z][a-z0-9+-]+)://(?:(?:([^/:@]+)(?::([^\\\\/]+))?@)?((?:[^\\\\/:]+)|(?:\\[[0-9a-f:]+\\]))(?::(\\d+))?((?:/~(?:[^\\\\/]+))?[\\\\/]))?(.+)?$', 'ssh://lusr\\example@1.2.3.4:1234/D:\\x')",[137771]
"('URIish.java', 'org.eclipse.jgit.transport.URIish', '<init>', '^(file):([\\\\/](?![\\\\/])((?:[A-Za-z]:)?[\\\\/]?(?:(?:[^\\\\/]+[\\\\/]+)*[^\\\\/]+[\\\\/]*)))$', 'https://l usr\\example.com@1.2.3.4//abc')","[159736, 159920]"
"('Description.java', 'org.junit.runner.Description', 'methodAndClassNamePatternGroupOrDefault', '([\\s\\S]*)\\((.*)\\)', 'testMixed(org.eclipse.jgit.merge.MergeMessageFormatterTest)')","[10906, 69578]"
"('URIish.java', 'org.eclipse.jgit.transport.URIish', '<init>', '^(file):([\\\\/](?![\\\\/])((?:[A-Za-z]:)?[\\\\/]?(?:(?:[^\\\\/]+[\\\\/]+)*[^\\\\/]+[\\\\/]*)))$', 'ssh://lusr\\example:wtf@1.2.3.4:80/D:/x')",[124638]
"('Description.java', 'org.junit.runner.Description', 'methodAndClassNamePatternGroupOrDefault', '([\\s\\S]*)\\((.*)\\)', 'testSshProtoWithUserAndPort(org.eclipse.jgit.transport.URIishTest)')","[1454, 60492]"
"('Description.java', 'org.junit.runner.Description', 'methodAndClassNamePatternGroupOrDefault', '([\\s\\S]*)\\((.*)\\)', 'testOnlyOption_f1_2_d(org.eclipse.jgit.api.CommitOnlyTest)')","[48612, 106054]"
"('URIish.java', 'org.eclipse.jgit.transport.URIish', '<init>', '^(file):([\\\\/](?![\\\\/])((?:[A-Za-z]:)?[\\\\/]?(?:(?:[^\\\\/]+[\\\\/]+)*[^\\\\/]+[\\\\/]*)))$', 'ssh://lusr\\example@example.com/D:\\x')","[150628, 150812]"
"('ChangeIdUtil.java', 'org.eclipse.jgit.util.ChangeIdUtil', 'indexOfChangeId', '(^Change-Id: *I[a-f0-9]{40}$)', 'h')",[191490]
"('Description.java', 'org.junit.runner.Description', 'methodAndClassNamePatternGroupOrDefault', '([\\s\\S]*)\\((.*)\\)', 'testALL_IdentityClone(org.eclipse.jgit.treewalk.filter.TreeFilterTest)')","[31048, 89246]"
"('Description.java', 'org.junit.runner.Description', 'methodAndClassNamePatternGroupOrDefault', '([\\s\\S]*)\\((.*)\\)', 'testMixedResetRetainsSizeAndModifiedTime(org.eclipse.jgit.api.ResetCommandTest)')","[42606, 100180]"
"('Description.java', 'org.junit.runner.Description', 'methodAndClassNamePatternGroupOrDefault', '([\\s\\S]*)\\((.*)\\)', 'testEncodeASCII_FailOnNonASCII(org.eclipse.jgit.lib.ConstantsEncodingTest)')","[24063, 82426]"
"('URIish.java', 'org.eclipse.jgit.transport.URIish', '<init>', '^([a-z][a-z0-9+-]+)://(?:(?:([^/:@]+)(?::([^\\\\/]+))?@)?((?:[^\\\\/:]+)|(?:\\[[0-9a-f:]+\\]))(?::(\\d+))?((?:/~(?:[^\\\\/]+))?[\\\\/]))?(.+)?$', 'ssh+git://me@[::1]:80/D:/x')",[139381]
"('Description.java', 'org.junit.runner.Description', 'methodAndClassNamePatternGroupOrDefault', '([\\s\\S]*)\\((.*)\\)', 'testEncodeInt64(org.eclipse.jgit.util.NBTest)')","[37515, 95384]"
"('URIish.java', 'org.eclipse.jgit.transport.URIish', '<init>', '^(?:([^/:@]+)(?::([^\\\\/]+))?@)?((?:[^\\\\/:]+)|(?:\\[[0-9a-f:]+\\])):((?:(?:/~(?:[^\\\\/]+))[\\\\/])?(?:(?:[^\\\\/]+[\\\\/]+)*[^\\\\/]+[\\\\/]*))$', '/tmp/jgit_test_983393012567618838_tmp/tmp_60736882191290227')","[204570, 204705]"
"('Description.java', 'org.junit.runner.Description', 'methodAndClassNamePatternGroupOrDefault', '([\\s\\S]*)\\((.*)\\)', 'testOnlyOption_f1_5_e(org.eclipse.jgit.api.CommitOnlyTest)')","[48948, 106406]"
"('Description.java', 'org.junit.runner.Description', 'methodAndClassNamePatternGroupOrDefault', '([\\s\\S]*)\\((.*)\\)', 'testReadSymRefToPacked(org.eclipse.jgit.lib.RefTest)')","[22956, 81326]"
"('URIish.java', 'org.eclipse.jgit.transport.URIish', '<init>', '^(file):([\\\\/](?![\\\\/])((?:[A-Za-z]:)?[\\\\/]?(?:(?:[^\\\\/]+[\\\\/]+)*[^\\\\/]+[\\\\/]*)))$', 'https://lusr\\example@[::1]/D:\\x')","[161300, 161484]"
"('Description.java', 'org.junit.runner.Description', 'methodAndClassNamePatternGroupOrDefault', '([\\s\\S]*)\\((.*)\\)', 'testWritePacket3(org.eclipse.jgit.transport.PacketLineOutTest)')","[5130, 64144]"
"('Description.java', 'org.junit.runner.Description', 'methodAndClassNamePatternGroupOrDefault', '([\\s\\S]*)\\((.*)\\)', 'testAbbreviateIsActuallyUnique(org.eclipse.jgit.internal.storage.file.AbbreviationTest)')","[57478, 114546]"
"('URIish.java', 'org.eclipse.jgit.transport.URIish', '<init>', '^(file):([\\\\/](?![\\\\/])((?:[A-Za-z]:)?[\\\\/]?(?:(?:[^\\\\/]+[\\\\/]+)*[^\\\\/]+[\\\\/]*)))$', 'ssh://lusr\\example@example.com/D:/x')","[150582, 150766]"
"('Description.java', 'org.junit.runner.Description', 'methodAndClassNamePatternGroupOrDefault', '([\\s\\S]*)\\((.*)\\)', 'testChangeIdAlreadySetWithReplacement(org.eclipse.jgit.util.ChangeIdUtilTest)')","[37931, 95780]"
"('URIish.java', 'org.eclipse.jgit.transport.URIish', '<init>', '^(file):([\\\\/](?![\\\\/])((?:[A-Za-z]:)?[\\\\/]?(?:(?:[^\\\\/]+[\\\\/]+)*[^\\\\/]+[\\\\/]*)))$', 'https://me:wtf@[::1]:80/D:\\x')",[132780]
"('URIish.java', 'org.eclipse.jgit.transport.URIish', '<init>', '^(?:([^/:@]+)(?::([^\\\\/]+))?@)?((?:[^\\\\/:]+)|(?:\\[[0-9a-f:]+\\])):((?:(?:/~(?:[^\\\\/]+))[\\\\/])?(?:(?:[^\\\\/]+[\\\\/]+)*[^\\\\/]+[\\\\/]*))$', '/~some/p ath')","[177308, 177423]"
"('Description.java', 'org.junit.runner.Description', 'methodAndClassNamePatternGroupOrDefault', '([\\s\\S]*)\\((.*)\\)', 'shortWithDotsReverse(org.eclipse.jgit.util.GitDateParserTest)')","[36391, 94306]"
"('Description.java', 'org.junit.runner.Description', 'methodAndClassNamePatternGroupOrDefault', '([\\s\\S]*)\\((.*)\\)', 'testUnixFile(org.eclipse.jgit.transport.URIishTest)')","[1601, 60646]"
"('URIish.java', 'org.eclipse.jgit.transport.URIish', '<init>', '^([a-z][a-z0-9+-]+)://(?:(?:([^/:@]+)(?::([^\\\\/]+))?@)?((?:[^\\\\/:]+)|(?:\\[[0-9a-f:]+\\]))(?::(\\d+))?((?:/~(?:[^\\\\/]+))?[\\\\/]))?(.+)?$', 'https://example.com//abc')","[171535, 171719, 172639, 172823, 173743, 173927]"
"('URIish.java', 'org.eclipse.jgit.transport.URIish', '<init>', '^(?:([^/:@]+)(?::([^\\\\/]+))?@)?([^\\\\/:]{2,}):([\\\\/](?:(?:[^\\\\/]+[\\\\/]+)*[^\\\\/]+[\\\\/]*))$', '/tmp/jgit_test_7464312454061528800_tmp/tmp_1728499304085067581/.git')","[183548, 183703]"
"('URIish.java', 'org.eclipse.jgit.transport.URIish', '<init>', '^([a-z][a-z0-9+-]+)://(?:(?:([^/:@]+)(?::([^\\\\/]+))?@)?((?:[^\\\\/:]+)|(?:\\[[0-9a-f:]+\\]))(?::(\\d+))?((?:/~(?:[^\\\\/]+))?[\\\\/]))?(.+)?$', 'ssh://l usr\\example.com@example.com:1234//')",[136161]
"('Description.java', 'org.junit.runner.Description', 'methodAndClassNamePatternGroupOrDefault', '([\\s\\S]*)\\((.*)\\)', 'test000_sort_03(org.eclipse.jgit.lib.T0002_TreeTest)')","[24933, 83218]"
"('URIish.java', 'org.eclipse.jgit.transport.URIish', '<init>', '^([a-z][a-z0-9+-]+)://(?:(?:([^/:@]+)(?::([^\\\\/]+))?@)?((?:[^\\\\/:]+)|(?:\\[[0-9a-f:]+\\]))(?::(\\d+))?((?:/~(?:[^\\\\/]+))?[\\\\/]))?(.+)?$', 'https://me@1.2.3.4:80//')",[145545]
"('Description.java', 'org.junit.runner.Description', 'methodAndClassNamePatternGroupOrDefault', '([\\s\\S]*)\\((.*)\\)', 'testInvalidTagNoTagHeader2(org.eclipse.jgit.lib.ObjectCheckerTest)')","[26273, 84582]"
"('Description.java', 'org.junit.runner.Description', 'methodAndClassNamePatternGroupOrDefault', '([\\s\\S]*)\\((.*)\\)', 'testFindSingleFile(org.eclipse.jgit.dircache.DirCacheBuilderTest)')","[12045, 70612]"
"('Description.java', 'org.junit.runner.Description', 'methodAndClassNamePatternGroupOrDefault', '([\\s\\S]*)\\((.*)\\)', 'testGetRefs_InvalidName(org.eclipse.jgit.internal.storage.file.RefDirectoryTest)')","[58522, 115580]"
"('Description.java', 'org.junit.runner.Description', 'methodAndClassNamePatternGroupOrDefault', '([\\s\\S]*)\\((.*)\\)', 'org.eclipse.jgit.revwalk.RevTagParseTest')","[6872, 181406]"
"('URIish.java', 'org.eclipse.jgit.transport.URIish', '<init>', '^([a-z][a-z0-9+-]+)://(?:(?:([^/:@]+)(?::([^\\\\/]+))?@)?((?:[^\\\\/:]+)|(?:\\[[0-9a-f:]+\\]))(?::(\\d+))?((?:/~(?:[^\\\\/]+))?[\\\\/]))?(.+)?$', 'https://me@1.2.3.4:1234/D:\\x')",[145499]
"('URIish.java', 'org.eclipse.jgit.transport.URIish', '<init>', '^([a-z][a-z0-9+-]+)://(?:(?:([^/:@]+)(?::([^\\\\/]+))?@)?((?:[^\\\\/:]+)|(?:\\[[0-9a-f:]+\\]))(?::(\\d+))?((?:/~(?:[^\\\\/]+))?[\\\\/]))?(.+)?$', 'ssh+git://lusr\\example@[::1]:80/D:\\x')",[141635]
"('URIish.java', 'org.eclipse.jgit.transport.URIish', '<init>', '^([a-z][a-z0-9+-]+)://(?:(?:([^/:@]+)(?::([^\\\\/]+))?@)?((?:[^\\\\/:]+)|(?:\\[[0-9a-f:]+\\]))(?::(\\d+))?((?:/~(?:[^\\\\/]+))?[\\\\/]))?(.+)?$', 'ssh://lusr\\example@1.2.3.4:80//')",[137817]
"('URIish.java', 'org.eclipse.jgit.transport.URIish', '<init>', '^([a-z][a-z0-9+-]+)://(?:(?:([^/:@]+)(?::([^\\\\/]+))?@)?((?:[^\\\\/:]+)|(?:\\[[0-9a-f:]+\\]))(?::(\\d+))?((?:/~(?:[^\\\\/]+))?[\\\\/]))?(.+)?$', 'ssh+git://lusr\\example@[::1]:80//')",[141497]
"('Description.java', 'org.junit.runner.Description', 'methodAndClassNamePatternGroupOrDefault', '([\\s\\S]*)\\((.*)\\)', 'test5_FromString(org.eclipse.jgit.lib.AbbreviatedObjectIdTest)')","[22601, 80974]"
"('Description.java', 'org.junit.runner.Description', 'methodAndClassNamePatternGroupOrDefault', '([\\s\\S]*)\\((.*)\\)', 'testReadBoolean_TrueFalse2(org.eclipse.jgit.lib.ConfigTest)')","[28428, 86760]"
"('URIish.java', 'org.eclipse.jgit.transport.URIish', '<init>', '^(file):([\\\\/](?![\\\\/])((?:[A-Za-z]:)?[\\\\/]?(?:(?:[^\\\\/]+[\\\\/]+)*[^\\\\/]+[\\\\/]*)))$', 'http://me@1.2.3.4:1234//abc')",[142072]
"('URIish.java', 'org.eclipse.jgit.transport.URIish', '<init>', '^(file):([\\\\/](?![\\\\/])((?:[A-Za-z]:)?[\\\\/]?(?:(?:[^\\\\/]+[\\\\/]+)*[^\\\\/]+[\\\\/]*)))$', 'http://me@example.com:80//')",[141842]
"('URIish.java', 'org.eclipse.jgit.transport.URIish', '<init>', '^([a-z][a-z0-9+-]+)://(?:(?:([^/:@]+)(?::([^\\\\/]+))?@)?((?:[^\\\\/:]+)|(?:\\[[0-9a-f:]+\\]))(?::(\\d+))?((?:/~(?:[^\\\\/]+))?[\\\\/]))?(.+)?$', 'ssh+git://lusr\\example:wtf@example.com:80//abc')",[127559]
"('Description.java', 'org.junit.runner.Description', 'methodAndClassNamePatternGroupOrDefault', '([\\s\\S]*)\\((.*)\\)', 'testInvalidCommitNoCommitter1(org.eclipse.jgit.lib.ObjectCheckerTest)')","[26378, 84692]"
"('URIish.java', 'org.eclipse.jgit.transport.URIish', '<init>', '^(file):([\\\\/](?![\\\\/])((?:[A-Za-z]:)?[\\\\/]?(?:(?:[^\\\\/]+[\\\\/]+)*[^\\\\/]+[\\\\/]*)))$', 'https://lusr\\example@1.2.3.4:80//abc')",[147776]
"('Description.java', 'org.junit.runner.Description', 'methodAndClassNamePatternGroupOrDefault', '([\\s\\S]*)\\((.*)\\)', 'testIndexingLargeObject(org.eclipse.jgit.diff.SimilarityIndexTest)')","[14896, 73340]"
"('Description.java', 'org.junit.runner.Description', 'methodAndClassNamePatternGroupOrDefault', '([\\s\\S]*)\\((.*)\\)', 'testRebaseWithUncommittedTopicChange(org.eclipse.jgit.api.RebaseCommandTest)')","[45738, 103282]"
"('Description.java', 'org.junit.runner.Description', 'methodAndClassNamePatternGroupOrDefault', '([\\s\\S]*)\\((.*)\\)', 'testParseGitFileName_NoSecondLine(org.eclipse.jgit.patch.FileHeaderTest)')","[39257, 96990]"
"('URIish.java', 'org.eclipse.jgit.transport.URIish', '<init>', '^(file):([\\\\/](?![\\\\/])((?:[A-Za-z]:)?[\\\\/]?(?:(?:[^\\\\/]+[\\\\/]+)*[^\\\\/]+[\\\\/]*)))$', 'https://me:wtf@example.com:1234//')",[131722]
"('URIish.java', 'org.eclipse.jgit.transport.URIish', '<init>', '^([a-z][a-z0-9+-]+)://(?:(?:([^/:@]+)(?::([^\\\\/]+))?@)?((?:[^\\\\/:]+)|(?:\\[[0-9a-f:]+\\]))(?::(\\d+))?((?:/~(?:[^\\\\/]+))?[\\\\/]))?(.+)?$', 'ssh://me@1.2.3.4:80/D:\\x')",[135747]
"('URIish.java', 'org.eclipse.jgit.transport.URIish', '<init>', '^([a-z][a-z0-9+-]+)://(?:(?:([^/:@]+)(?::([^\\\\/]+))?@)?((?:[^\\\\/:]+)|(?:\\[[0-9a-f:]+\\]))(?::(\\d+))?((?:/~(?:[^\\\\/]+))?[\\\\/]))?(.+)?$', 'ssh+git://lusr\\example:wtf@[::1]:1234//')",[128065]
"('Description.java', 'org.junit.runner.Description', 'methodAndClassNamePatternGroupOrDefault', '([\\s\\S]*)\\((.*)\\)', 'testEdgeCases(org.eclipse.jgit.treewalk.filter.PathSuffixFilterTest)')","[30945, 89158]"
"('Description.java', 'org.junit.runner.Description', 'methodAndClassNamePatternGroupOrDefault', '([\\s\\S]*)\\((.*)\\)', 'testFindContainsGet(org.eclipse.jgit.util.RefListTest)')","[35225, 93184]"
"('Description.java', 'org.junit.runner.Description', 'methodAndClassNamePatternGroupOrDefault', '([\\s\\S]*)\\((.*)\\)', 'testNoAsciiControlCharacters(org.eclipse.jgit.lib.ValidRefNameTest)')","[24250, 82602]"
"('URIish.java', 'org.eclipse.jgit.transport.URIish', '<init>', '^(file):([\\\\/](?![\\\\/])((?:[A-Za-z]:)?[\\\\/]?(?:(?:[^\\\\/]+[\\\\/]+)*[^\\\\/]+[\\\\/]*)))$', 'ssh+git://lusr\\example:wtf@example.com:80//abc')",[127536]
"('Description.java', 'org.junit.runner.Description', 'methodAndClassNamePatternGroupOrDefault', '([\\s\\S]*)\\((.*)\\)', 'testFileHeader(org.eclipse.jgit.patch.EditListTest)')","[39011, 96792]"
"('Description.java', 'org.junit.runner.Description', 'methodAndClassNamePatternGroupOrDefault', '([\\s\\S]*)\\((.*)\\)', 'testClear(org.eclipse.jgit.revwalk.FIFORevQueueTest)')","[9347, 68104]"
"('Description.java', 'org.junit.runner.Description', 'methodAndClassNamePatternGroupOrDefault', '([\\s\\S]*)\\((.*)\\)', 'testReadSmallBuffer(org.eclipse.jgit.internal.storage.dfs.DfsOutputStreamTest)')","[52412, 109816]"
"('Description.java', 'org.junit.runner.Description', 'methodAndClassNamePatternGroupOrDefault', '([\\s\\S]*)\\((.*)\\)', 'testAddAdd(org.eclipse.jgit.notes.DefaultNoteMergerTest)')","[40589, 98266]"
"('Description.java', 'org.junit.runner.Description', 'methodAndClassNamePatternGroupOrDefault', '([\\s\\S]*)\\((.*)\\)', 'testRevertDirtyWorktree(org.eclipse.jgit.api.RevertCommandTest)')","[48009, 105482]"
"('URIish.java', 'org.eclipse.jgit.transport.URIish', '<init>', '^(file):([\\\\/](?![\\\\/])((?:[A-Za-z]:)?[\\\\/]?(?:(?:[^\\\\/]+[\\\\/]+)*[^\\\\/]+[\\\\/]*)))$', 'http://lusr\\example@example.com:1234/D:\\x')",[144004]
"('Description.java', 'org.junit.runner.Description', 'methodAndClassNamePatternGroupOrDefault', '([\\s\\S]*)\\((.*)\\)', 'testShortKey(org.eclipse.jgit.revwalk.FooterLineTest)')","[6357, 65310]"
"('Description.java', 'org.junit.runner.Description', 'methodAndClassNamePatternGroupOrDefault', '([\\s\\S]*)\\((.*)\\)', 'testSetFileMode(org.eclipse.jgit.dircache.DirCacheEntryTest)')","[11715, 70326]"
"('Description.java', 'org.junit.runner.Description', 'methodAndClassNamePatternGroupOrDefault', '([\\s\\S]*)\\((.*)\\)', 'testEmpty1(org.eclipse.jgit.diff.DiffFormatterReflowTest)')","[13358, 71888]"
"('Description.java', 'org.junit.runner.Description', 'methodAndClassNamePatternGroupOrDefault', '([\\s\\S]*)\\((.*)\\)', 'testSingleLineMessagesWithSignedOffBy(org.eclipse.jgit.util.ChangeIdUtilTest)')","[37973, 95824]"
"('Description.java', 'org.junit.runner.Description', 'methodAndClassNamePatternGroupOrDefault', '([\\s\\S]*)\\((.*)\\)', 'org.eclipse.jgit.revwalk.RevWalkPathFilter6012Test')","[9387, 181757]"
"('Description.java', 'org.junit.runner.Description', 'methodAndClassNamePatternGroupOrDefault', '([\\s\\S]*)\\((.*)\\)', 'testIsModifiedFileSmudged(org.eclipse.jgit.treewalk.FileTreeIteratorTest)')","[29031, 87332]"
"('Description.java', 'org.junit.runner.Description', 'methodAndClassNamePatternGroupOrDefault', '([\\s\\S]*)\\((.*)\\)', 'testInvalidTagNoObject4(org.eclipse.jgit.lib.ObjectCheckerTest)')","[26483, 84802]"
"('Description.java', 'org.junit.runner.Description', 'methodAndClassNamePatternGroupOrDefault', '([\\s\\S]*)\\((.*)\\)', 'testVerySimpleGroupCase0(org.eclipse.jgit.fnmatch.FileNameMatcherTest)')","[19168, 77696]"
"('Description.java', 'org.junit.runner.Description', 'methodAndClassNamePatternGroupOrDefault', '([\\s\\S]*)\\((.*)\\)', 'testInvalidCommitNoCommitter2(org.eclipse.jgit.lib.ObjectCheckerTest)')","[26399, 84714]"
"('URIish.java', 'org.eclipse.jgit.transport.URIish', '<init>', '^([a-z][a-z0-9+-]+)://(?:(?:([^/:@]+)(?::([^\\\\/]+))?@)?((?:[^\\\\/:]+)|(?:\\[[0-9a-f:]+\\]))(?::(\\d+))?((?:/~(?:[^\\\\/]+))?[\\\\/]))?(.+)?$', 'ssh://lusr\\example@[::1]:1234//abc')",[138047]
"('Description.java', 'org.junit.runner.Description', 'methodAndClassNamePatternGroupOrDefault', '([\\s\\S]*)\\((.*)\\)', 'testRefsChangedStackOverflow(org.eclipse.jgit.internal.storage.file.RefDirectoryTest)')","[58438, 115492]"
"('Description.java', 'org.junit.runner.Description', 'methodAndClassNamePatternGroupOrDefault', '([\\s\\S]*)\\((.*)\\)', 'testFileInFolderCommittedModifiedCommittedComparedWithInitialCommit(org.eclipse.jgit.treewalk.filter.IndexDiffFilterTest)')","[30275, 88476]"
"('Description.java', 'org.junit.runner.Description', 'methodAndClassNamePatternGroupOrDefault', '([\\s\\S]*)\\((.*)\\)', 'testOnlyOption_f1_2_b(org.eclipse.jgit.api.CommitOnlyTest)')","[48570, 106010]"
"('Description.java', 'org.junit.runner.Description', 'methodAndClassNamePatternGroupOrDefault', '([\\s\\S]*)\\((.*)\\)', 'testToString(org.eclipse.jgit.lib.SymbolicRefTest)')","[20391, 78818]"
"('Description.java', 'org.junit.runner.Description', 'methodAndClassNamePatternGroupOrDefault', '([\\s\\S]*)\\((.*)\\)', 'testDeleteLoosePackedRejected(org.eclipse.jgit.internal.storage.file.RefUpdateTest)')","[55688, 112830]"
"('URIish.java', 'org.eclipse.jgit.transport.URIish', '<init>', '^(file):([\\\\/](?![\\\\/])((?:[A-Za-z]:)?[\\\\/]?(?:(?:[^\\\\/]+[\\\\/]+)*[^\\\\/]+[\\\\/]*)))$', 'ssh://lusr\\example:wtf@example.com:80/D:\\x')",[124316]
"('ChangeIdUtil.java', 'org.eclipse.jgit.util.ChangeIdUtil', 'indexOfChangeId', '(^Change-Id: *I[a-f0-9]{40}$)', 'Signed-off-by: J Committer <jc@example.com>')","[188256, 189465, 189749, 189930]"
"('URIish.java', 'org.eclipse.jgit.transport.URIish', '<init>', '^(file):([\\\\/](?![\\\\/])((?:[A-Za-z]:)?[\\\\/]?(?:(?:[^\\\\/]+[\\\\/]+)*[^\\\\/]+[\\\\/]*)))$', 'http://l usr\\example.com@[::1]/D:/x')","[156838, 157022]"
"('Description.java', 'org.junit.runner.Description', 'methodAndClassNamePatternGroupOrDefault', '([\\s\\S]*)\\((.*)\\)', 'testDelta_LargeObjectChain(org.eclipse.jgit.internal.storage.file.PackFileTest)')","[53820, 111092]"
"('Description.java', 'org.junit.runner.Description', 'methodAndClassNamePatternGroupOrDefault', '([\\s\\S]*)\\((.*)\\)', 'testVerySimplePatternCase0(org.eclipse.jgit.fnmatch.FileNameMatcherTest)')","[17047, 75474]"
"('Description.java', 'org.junit.runner.Description', 'methodAndClassNamePatternGroupOrDefault', '([\\s\\S]*)\\((.*)\\)', 'testSetSource(org.eclipse.jgit.transport.RefSpecTest)')","[3151, 62230]"
"('Description.java', 'org.junit.runner.Description', 'methodAndClassNamePatternGroupOrDefault', '([\\s\\S]*)\\((.*)\\)', 'testGetRefs_IgnoresGarbageRef4(org.eclipse.jgit.internal.storage.file.RefDirectoryTest)')","[57892, 114920]"
"('Description.java', 'org.junit.runner.Description', 'methodAndClassNamePatternGroupOrDefault', '([\\s\\S]*)\\((.*)\\)', 'isWildcardShouldWorkForWildcardSuffixAndComponent(org.eclipse.jgit.transport.RefSpecTest)')","[3067, 62142]"
"('Description.java', 'org.junit.runner.Description', 'methodAndClassNamePatternGroupOrDefault', '([\\s\\S]*)\\((.*)\\)', 'testCloseNameConflictsX0(org.eclipse.jgit.lib.DirCacheCheckoutTest)')","[23269, 81634]"
"('Description.java', 'org.junit.runner.Description', 'methodAndClassNamePatternGroupOrDefault', '([\\s\\S]*)\\((.*)\\)', 'org.eclipse.jgit.util.io.TimeoutOutputStreamTest')","[32395, 186505]"
"('Description.java', 'org.junit.runner.Description', 'methodAndClassNamePatternGroupOrDefault', '([\\s\\S]*)\\((.*)\\)', 'testUpdateNonFastForwardForced(org.eclipse.jgit.transport.PushProcessTest)')","[4880, 63902]"
"('Description.java', 'org.junit.runner.Description', 'methodAndClassNamePatternGroupOrDefault', '([\\s\\S]*)\\((.*)\\)', 'testCheckoutMultiple(org.eclipse.jgit.api.PathCheckoutCommandTest)')","[46885, 104404]"
"('URIish.java', 'org.eclipse.jgit.transport.URIish', '<init>', '^([a-z][a-z0-9+-]+)://(?:(?:([^/:@]+)(?::([^\\\\/]+))?@)?((?:[^\\\\/:]+)|(?:\\[[0-9a-f:]+\\]))(?::(\\d+))?((?:/~(?:[^\\\\/]+))?[\\\\/]))?(.+)?$', 'http://lusr\\example:wtf@1.2.3.4:80/D:/x')",[131285]
"('URIish.java', 'org.eclipse.jgit.transport.URIish', '<init>', '^([a-z][a-z0-9+-]+)://(?:(?:([^/:@]+)(?::([^\\\\/]+))?@)?((?:[^\\\\/:]+)|(?:\\[[0-9a-f:]+\\]))(?::(\\d+))?((?:/~(?:[^\\\\/]+))?[\\\\/]))?(.+)?$', 'https://lusr\\example:wtf@1.2.3.4:1234//')",[134321]
"('Description.java', 'org.junit.runner.Description', 'methodAndClassNamePatternGroupOrDefault', '([\\s\\S]*)\\((.*)\\)', 'invalidWhenOnlyDestinationWildcard(org.eclipse.jgit.transport.RefSpecTest)')","[3046, 62120]"
"('Description.java', 'org.junit.runner.Description', 'methodAndClassNamePatternGroupOrDefault', '([\\s\\S]*)\\((.*)\\)', 'org.eclipse.jgit.merge.MergeMessageFormatterTest')","[10780, 182154]"
"('URIish.java', 'org.eclipse.jgit.transport.URIish', '<init>', '^(file):([\\\\/](?![\\\\/])((?:[A-Za-z]:)?[\\\\/]?(?:(?:[^\\\\/]+[\\\\/]+)*[^\\\\/]+[\\\\/]*)))$', 'http://example.com//abc')","[168200, 168384, 169304, 169488, 170408, 170592]"
"('URIish.java', 'org.eclipse.jgit.transport.URIish', '<init>', '^(file):([\\\\/](?![\\\\/])((?:[A-Za-z]:)?[\\\\/]?(?:(?:[^\\\\/]+[\\\\/]+)*[^\\\\/]+[\\\\/]*)))$', '/tmp/jgit_test_2418995499675152019_tmp/tmp_6807375775614242287.git')",[116383]
"('URIish.java', 'org.eclipse.jgit.transport.URIish', '<init>', '^([a-z][a-z0-9+-]+)://(?:(?:([^/:@]+)(?::([^\\\\/]+))?@)?((?:[^\\\\/:]+)|(?:\\[[0-9a-f:]+\\]))(?::(\\d+))?((?:/~(?:[^\\\\/]+))?[\\\\/]))?(.+)?$', 'http://lusr\\example:wtf@1.2.3.4:1234/D:/x')",[131101]
"('Description.java', 'org.junit.runner.Description', 'methodAndClassNamePatternGroupOrDefault', '([\\s\\S]*)\\((.*)\\)', 'testEmptyCache_NoCacheTree(org.eclipse.jgit.dircache.DirCacheTreeTest)')","[11879, 70458]"
"('Description.java', 'org.junit.runner.Description', 'methodAndClassNamePatternGroupOrDefault', '([\\s\\S]*)\\((.*)\\)', 'testOneBlockAndHalf_Copy(org.eclipse.jgit.util.TemporaryBufferTest)')","[34683, 92656]"
"('Description.java', 'org.junit.runner.Description', 'methodAndClassNamePatternGroupOrDefault', '([\\s\\S]*)\\((.*)\\)', 'testEmptyInputs(org.eclipse.jgit.diff.MyersDiffTest)')","[14583, 73032]"
"('URIish.java', 'org.eclipse.jgit.transport.URIish', '<init>', '^([a-z][a-z0-9+-]+)://(?:(?:([^/:@]+)(?::([^\\\\/]+))?@)?((?:[^\\\\/:]+)|(?:\\[[0-9a-f:]+\\]))(?::(\\d+))?((?:/~(?:[^\\\\/]+))?[\\\\/]))?(.+)?$', 'ssh://lusr\\example@example.com:80/D:/x')",[137541]
"('Description.java', 'org.junit.runner.Description', 'methodAndClassNamePatternGroupOrDefault', '([\\s\\S]*)\\((.*)\\)', 'testDontOverwriteDirtyFile(org.eclipse.jgit.lib.DirCacheCheckoutTest)')","[23311, 81678]"
"('Description.java', 'org.junit.runner.Description', 'methodAndClassNamePatternGroupOrDefault', '([\\s\\S]*)\\((.*)\\)', 'testRebaseWithAutoStash(org.eclipse.jgit.api.RebaseCommandTest)')","[45969, 103524]"
"('URIish.java', 'org.eclipse.jgit.transport.URIish', '<init>', '^([a-z][a-z0-9+-]+)://(?:(?:([^/:@]+)(?::([^\\\\/]+))?@)?((?:[^\\\\/:]+)|(?:\\[[0-9a-f:]+\\]))(?::(\\d+))?((?:/~(?:[^\\\\/]+))?[\\\\/]))?(.+)?$', 'https://me:wtf@example.com:80//abc')",[131975]
"('Description.java', 'org.junit.runner.Description', 'methodAndClassNamePatternGroupOrDefault', '([\\s\\S]*)\\((.*)\\)', 'testOnlyOption_f1_10_a(org.eclipse.jgit.api.CommitOnlyTest)')","[49704, 107198]"
"('Description.java', 'org.junit.runner.Description', 'methodAndClassNamePatternGroupOrDefault', '([\\s\\S]*)\\((.*)\\)', 'testInitRepository(org.eclipse.jgit.api.InitCommandTest)')","[48154, 105614]"
"('URIish.java', 'org.eclipse.jgit.transport.URIish', '<init>', '^(file):([\\\\/](?![\\\\/])((?:[A-Za-z]:)?[\\\\/]?(?:(?:[^\\\\/]+[\\\\/]+)*[^\\\\/]+[\\\\/]*)))$', 'https://me@1.2.3.4//')","[158586, 158770]"
"('Description.java', 'org.junit.runner.Description', 'methodAndClassNamePatternGroupOrDefault', '([\\s\\S]*)\\((.*)\\)', 'testPutNewEntry(org.eclipse.jgit.util.RefListTest)')","[35162, 93118]"
"('URIish.java', 'org.eclipse.jgit.transport.URIish', '<init>', '^([a-z][a-z0-9+-]+)://(?:(?:([^/:@]+)(?::([^\\\\/]+))?@)?((?:[^\\\\/:]+)|(?:\\[[0-9a-f:]+\\]))(?::(\\d+))?((?:/~(?:[^\\\\/]+))?[\\\\/]))?(.+)?$', 'https://l usr\\example.com@1.2.3.4:1234//abc')",[146511]
"('ChangeIdUtil.java', 'org.eclipse.jgit.util.ChangeIdUtil', 'indexOfChangeId', '(^Change-Id: *I[a-f0-9]{40}$)', 'Bug: 33')","[187231, 191126, 191620, 192006, 192083]"
"('URIish.java', 'org.eclipse.jgit.transport.URIish', '<init>', '^([a-z][a-z0-9+-]+)://(?:(?:([^/:@]+)(?::([^\\\\/]+))?@)?((?:[^\\\\/:]+)|(?:\\[[0-9a-f:]+\\]))(?::(\\d+))?((?:/~(?:[^\\\\/]+))?[\\\\/]))?(.+)?$', 'ssh+git://l usr\\example.com@example.com:1234//abc')",[139519]
"('Description.java', 'org.junit.runner.Description', 'methodAndClassNamePatternGroupOrDefault', '([\\s\\S]*)\\((.*)\\)', 'simpleAncestor(org.eclipse.jgit.api.NameRevCommandTest)')","[51666, 109134]"
"('URIish.java', 'org.eclipse.jgit.transport.URIish', '<init>', '^(file):([\\\\/](?![\\\\/])((?:[A-Za-z]:)?[\\\\/]?(?:(?:[^\\\\/]+[\\\\/]+)*[^\\\\/]+[\\\\/]*)))$', 'http://lusr\\example@example.com:80/D:/x')",[144142]
"('Description.java', 'org.junit.runner.Description', 'methodAndClassNamePatternGroupOrDefault', '([\\s\\S]*)\\((.*)\\)', 'testDF_GapByOne(org.eclipse.jgit.treewalk.NameConflictTreeWalkTest)')","[29384, 87662]"
"('ChangeIdUtil.java', 'org.eclipse.jgit.util.ChangeIdUtil', 'indexOfChangeId', '(^Change-Id: *I[a-f0-9]{40}$)', 'Bug: 42')",[188671]
"('Description.java', 'org.junit.runner.Description', 'methodAndClassNamePatternGroupOrDefault', '([\\s\\S]*)\\((.*)\\)', 'testDegenerate_DeleteStart(org.eclipse.jgit.diff.MyersDiffTest)')","[14604, 73054]"
"('Description.java', 'org.junit.runner.Description', 'methodAndClassNamePatternGroupOrDefault', '([\\s\\S]*)\\((.*)\\)', 'testParse_NoParents(org.eclipse.jgit.revwalk.RevCommitParseTest)')","[9036, 67818]"
"('Description.java', 'org.junit.runner.Description', 'methodAndClassNamePatternGroupOrDefault', '([\\s\\S]*)\\((.*)\\)', 'testStageState(org.eclipse.jgit.lib.IndexDiffTest)')","[20723, 79126]"
"('Description.java', 'org.junit.runner.Description', 'methodAndClassNamePatternGroupOrDefault', '([\\s\\S]*)\\((.*)\\)', 'testGraphGroupCase4(org.eclipse.jgit.fnmatch.FileNameMatcherTest)')","[16774, 75188]"
"('Description.java', 'org.junit.runner.Description', 'methodAndClassNamePatternGroupOrDefault', '([\\s\\S]*)\\((.*)\\)', 'org.eclipse.jgit.util.io.UnionInputStreamTest')","[33017, 186613]"
"('Description.java', 'org.junit.runner.Description', 'methodAndClassNamePatternGroupOrDefault', '([\\s\\S]*)\\((.*)\\)', 'testSmallMap(org.eclipse.jgit.transport.LongMapTest)')","[5359, 64364]"
"('URIish.java', 'org.eclipse.jgit.transport.URIish', '<init>', '^(?:([^/:@]+)(?::([^\\\\/]+))?@)?([^\\\\/:]{2,}):([\\\\/](?:(?:[^\\\\/]+[\\\\/]+)*[^\\\\/]+[\\\\/]*))$', '//.git')",[179148]
"('Description.java', 'org.junit.runner.Description', 'methodAndClassNamePatternGroupOrDefault', '([\\s\\S]*)\\((.*)\\)', 'testHasFlags(org.eclipse.jgit.revwalk.FIFORevQueueTest)')","[9368, 68126]"
"('Description.java', 'org.junit.runner.Description', 'methodAndClassNamePatternGroupOrDefault', '([\\s\\S]*)\\((.*)\\)', 'testParseGitFileName_DqFooTabBar(org.eclipse.jgit.patch.FileHeaderTest)')","[39341, 97078]"
"('Description.java', 'org.junit.runner.Description', 'methodAndClassNamePatternGroupOrDefault', '([\\s\\S]*)\\((.*)\\)', 'testMultipleHeads_SameBase1(org.eclipse.jgit.revwalk.RevWalkMergeBaseTest)')","[7643, 66498]"
"('Description.java', 'org.junit.runner.Description', 'methodAndClassNamePatternGroupOrDefault', '([\\s\\S]*)\\((.*)\\)', 'testMustHaveTwoComponents(org.eclipse.jgit.lib.ValidRefNameTest)')","[24418, 82778]"
"('URIish.java', 'org.eclipse.jgit.transport.URIish', '<init>', '^(file):([\\\\/](?![\\\\/])((?:[A-Za-z]:)?[\\\\/]?(?:(?:[^\\\\/]+[\\\\/]+)*[^\\\\/]+[\\\\/]*)))$', 'ssh://me:wtf@example.com:1234/D:/x')",[121878]
"('URIish.java', 'org.eclipse.jgit.transport.URIish', '<init>', '^(file):([\\\\/](?![\\\\/])((?:[A-Za-z]:)?[\\\\/]?(?:(?:[^\\\\/]+[\\\\/]+)*[^\\\\/]+[\\\\/]*)))$', '/tmp/jgit_test_4775797511223514619_tmp/tmp_1589472581924050678/.git')","[206997, 207131]"
"('Description.java', 'org.junit.runner.Description', 'methodAndClassNamePatternGroupOrDefault', '([\\s\\S]*)\\((.*)\\)', 'testAddTwo(org.eclipse.jgit.revwalk.RevFlagSetTest)')","[7395, 66278]"
"('Description.java', 'org.junit.runner.Description', 'methodAndClassNamePatternGroupOrDefault', '([\\s\\S]*)\\((.*)\\)', 'testEntryTypeSet(org.eclipse.jgit.util.RefMapTest)')","[37286, 95164]"
"('Description.java', 'org.junit.runner.Description', 'methodAndClassNamePatternGroupOrDefault', '([\\s\\S]*)\\((.*)\\)', 'testVerySimpleWildCardCase2(org.eclipse.jgit.fnmatch.FileNameMatcherTest)')","[16333, 74726]"
"('Description.java', 'org.junit.runner.Description', 'methodAndClassNamePatternGroupOrDefault', '([\\s\\S]*)\\((.*)\\)', 'testDF_DetectConflict(org.eclipse.jgit.treewalk.NameConflictTreeWalkTest)')","[29363, 87640]"
"('Description.java', 'org.junit.runner.Description', 'methodAndClassNamePatternGroupOrDefault', '([\\s\\S]*)\\((.*)\\)', 'testOldFile(org.eclipse.jgit.internal.storage.file.FileSnapshotTest)')","[54612, 111862]"
"('Description.java', 'org.junit.runner.Description', 'methodAndClassNamePatternGroupOrDefault', '([\\s\\S]*)\\((.*)\\)', 'testOnlyOption_f1_6_f2_14_c(org.eclipse.jgit.api.CommitOnlyTest)')","[49641, 107132]"
"('URIish.java', 'org.eclipse.jgit.transport.URIish', '<init>', '^(file):([\\\\/](?![\\\\/])((?:[A-Za-z]:)?[\\\\/]?(?:(?:[^\\\\/]+[\\\\/]+)*[^\\\\/]+[\\\\/]*)))$', 'ssh+git://example.com/D:/x')","[164934, 165118, 166038, 166222, 167142, 167326]"
"('Description.java', 'org.junit.runner.Description', 'methodAndClassNamePatternGroupOrDefault', '([\\s\\S]*)\\((.*)\\)', 'org.eclipse.jgit.patch.PatchCcErrorTest')","[39175, 193555]"
"('URIish.java', 'org.eclipse.jgit.transport.URIish', '<init>', '^(file):([\\\\/](?![\\\\/])((?:[A-Za-z]:)?[\\\\/]?(?:(?:[^\\\\/]+[\\\\/]+)*[^\\\\/]+[\\\\/]*)))$', 'ssh+git://l usr\\example.com:wtf@1.2.3.4:80//')",[126754]
"('Description.java', 'org.junit.runner.Description', 'methodAndClassNamePatternGroupOrDefault', '([\\s\\S]*)\\((.*)\\)', 'testFormatWithConflictsWithFooterlikeLineInBody(org.eclipse.jgit.merge.MergeMessageFormatterTest)')","[10801, 69468]"
"('URIish.java', 'org.eclipse.jgit.transport.URIish', '<init>', '^(?:([^/:@]+)(?::([^\\\\/]+))?@)?([^\\\\/:]{2,}):([\\\\/](?:(?:[^\\\\/]+[\\\\/]+)*[^\\\\/]+[\\\\/]*))$', '/tmp/jgit_test_4775797511223514619_tmp/tmp_1589472581924050678/.git')","[207075, 207221]"
"('URIish.java', 'org.eclipse.jgit.transport.URIish', '<init>', '^(file):([\\\\/](?![\\\\/])((?:[A-Za-z]:)?[\\\\/]?(?:(?:[^\\\\/]+[\\\\/]+)*[^\\\\/]+[\\\\/]*)))$', 'user@repo.or.cz:/srv/git/egit.git')",[120538]
"('URIish.java', 'org.eclipse.jgit.transport.URIish', '<init>', '^([a-z][a-z0-9+-]+)://(?:(?:([^/:@]+)(?::([^\\\\/]+))?@)?((?:[^\\\\/:]+)|(?:\\[[0-9a-f:]+\\]))(?::(\\d+))?((?:/~(?:[^\\\\/]+))?[\\\\/]))?(.+)?$', 'ssh+git://me:wtf@[::1]:80//')",[126041]
"('Description.java', 'org.junit.runner.Description', 'methodAndClassNamePatternGroupOrDefault', '([\\s\\S]*)\\((.*)\\)', 'org.eclipse.jgit.storage.file.FileBasedConfigTest')","[38845, 193474]"
"('Description.java', 'org.junit.runner.Description', 'methodAndClassNamePatternGroupOrDefault', '([\\s\\S]*)\\((.*)\\)', 'testEmpty(org.eclipse.jgit.revwalk.RevFlagSetTest)')","[7311, 66190]"
"('URIish.java', 'org.eclipse.jgit.transport.URIish', '<init>', '^(file):([\\\\/](?![\\\\/])((?:[A-Za-z]:)?[\\\\/]?(?:(?:[^\\\\/]+[\\\\/]+)*[^\\\\/]+[\\\\/]*)))$', 'ssh://l usr\\example.com@example.com//')","[149386, 149570]"
"('Description.java', 'org.junit.runner.Description', 'methodAndClassNamePatternGroupOrDefault', '([\\s\\S]*)\\((.*)\\)', 'testDisallowTreeFilter(org.eclipse.jgit.revwalk.RevWalkMergeBaseTest)')","[7706, 66564]"
"('URIish.java', 'org.eclipse.jgit.transport.URIish', '<init>', '^([a-z][a-z0-9+-]+)://(?:(?:([^/:@]+)(?::([^\\\\/]+))?@)?((?:[^\\\\/:]+)|(?:\\[[0-9a-f:]+\\]))(?::(\\d+))?((?:/~(?:[^\\\\/]+))?[\\\\/]))?(.+)?$', 'http://me@1.2.3.4:80/D:/x')",[142325]
"('URIish.java', 'org.eclipse.jgit.transport.URIish', '<init>', '^([a-z][a-z0-9+-]+)://(?:(?:([^/:@]+)(?::([^\\\\/]+))?@)?((?:[^\\\\/:]+)|(?:\\[[0-9a-f:]+\\]))(?::(\\d+))?((?:/~(?:[^\\\\/]+))?[\\\\/]))?(.+)?$', 'ssh+git://lusr\\example:wtf@1.2.3.4:1234//')",[127697]
"('Description.java', 'org.junit.runner.Description', 'methodAndClassNamePatternGroupOrDefault', '([\\s\\S]*)\\((.*)\\)', 'testRefsCacheAfterUpdateLooseOnly(org.eclipse.jgit.internal.storage.file.RefUpdateTest)')","[56129, 113292]"
"('Description.java', 'org.junit.runner.Description', 'methodAndClassNamePatternGroupOrDefault', '([\\s\\S]*)\\((.*)\\)', 'testBaseEqualsOurs(org.eclipse.jgit.notes.NoteMapMergerTest)')","[41215, 98882]"
"('Description.java', 'org.junit.runner.Description', 'methodAndClassNamePatternGroupOrDefault', '([\\s\\S]*)\\((.*)\\)', 'testFileInFolderCommitted(org.eclipse.jgit.treewalk.filter.IndexDiffFilterTest)')","[30821, 89048]"
"('URIish.java', 'org.eclipse.jgit.transport.URIish', '<init>', '^([a-z][a-z0-9+-]+)://(?:(?:([^/:@]+)(?::([^\\\\/]+))?@)?((?:[^\\\\/:]+)|(?:\\[[0-9a-f:]+\\]))(?::(\\d+))?((?:/~(?:[^\\\\/]+))?[\\\\/]))?(.+)?$', 'file:///tmp/jgit_test_3985275255865057253_tmp/tmp_2235568733568716339/.git/')","[209091, 209149]"
"('URIish.java', 'org.eclipse.jgit.transport.URIish', '<init>', '^(file):([\\\\/](?![\\\\/])((?:[A-Za-z]:)?[\\\\/]?(?:(?:[^\\\\/]+[\\\\/]+)*[^\\\\/]+[\\\\/]*)))$', 'ssh+git://me:wtf@1.2.3.4:80/D:\\x')",[125788]
"('URIish.java', 'org.eclipse.jgit.transport.URIish', '<init>', '^(?:([^/:@]+)(?::([^\\\\/]+))?@)?([^\\\\/:]{2,}):([\\\\/](?:(?:[^\\\\/]+[\\\\/]+)*[^\\\\/]+[\\\\/]*))$', '/tmp/jgit_test_7285828428477782317_tmp/tmp_2342545421297606686')","[204859, 204999, 205148, 205298]"
"('Description.java', 'org.junit.runner.Description', 'methodAndClassNamePatternGroupOrDefault', '([\\s\\S]*)\\((.*)\\)', 'testIteratorMethodsContract(org.eclipse.jgit.internal.storage.file.PackIndexV1Test)')","[54488, 111752]"
"('URIish.java', 'org.eclipse.jgit.transport.URIish', '<init>', '^([a-z][a-z0-9+-]+)://(?:(?:([^/:@]+)(?::([^\\\\/]+))?@)?((?:[^\\\\/:]+)|(?:\\[[0-9a-f:]+\\]))(?::(\\d+))?((?:/~(?:[^\\\\/]+))?[\\\\/]))?(.+)?$', 'file:///tmp/jgit_test_8069771755053160600_tmp/tmp_6950575543562770897/.git/')",[183349]
"('URIish.java', 'org.eclipse.jgit.transport.URIish', '<init>', '^(file):([\\\\/](?![\\\\/])((?:[A-Za-z]:)?[\\\\/]?(?:(?:[^\\\\/]+[\\\\/]+)*[^\\\\/]+[\\\\/]*)))$', 'ssh+git://1.2.3.4//')","[165210, 165394, 166314, 166498, 167418, 167602]"
"('Description.java', 'org.junit.runner.Description', 'methodAndClassNamePatternGroupOrDefault', '([\\s\\S]*)\\((.*)\\)', 'testPackWithTrailingGarbage(org.eclipse.jgit.transport.PackParserTest)')","[4317, 63352]"
"('Description.java', 'org.junit.runner.Description', 'methodAndClassNamePatternGroupOrDefault', '([\\s\\S]*)\\((.*)\\)', 'testFileCommittedDeleted(org.eclipse.jgit.treewalk.filter.IndexDiffFilterTest)')","[30527, 88740]"
"('QuotedString.java', 'org.eclipse.jgit.util.QuotedString$BourneUserPathStyle', 'quote', '^~[A-Za-z0-9_-]*/.*$', '')","[192520, 192544]"
"('Description.java', 'org.junit.runner.Description', 'methodAndClassNamePatternGroupOrDefault', '([\\s\\S]*)\\((.*)\\)', 'org.eclipse.jgit.nls.NLSTest')","[242, 116233]"
"('Description.java', 'org.junit.runner.Description', 'methodAndClassNamePatternGroupOrDefault', '([\\s\\S]*)\\((.*)\\)', 'testOnlyOption_f1_3_b(org.eclipse.jgit.api.CommitOnlyTest)')","[48675, 106120]"
"('URIish.java', 'org.eclipse.jgit.transport.URIish', '<init>', '^([a-z][a-z0-9+-]+)://(?:(?:([^/:@]+)(?::([^\\\\/]+))?@)?((?:[^\\\\/:]+)|(?:\\[[0-9a-f:]+\\]))(?::(\\d+))?((?:/~(?:[^\\\\/]+))?[\\\\/]))?(.+)?$', 'file:///tmp/jgit_test_4859563614411089604_tmp/tmp_9194944218592034912/.git/')","[209265, 209323]"
"('URIish.java', 'org.eclipse.jgit.transport.URIish', '<init>', '^([a-z][a-z0-9+-]+)://(?:(?:([^/:@]+)(?::([^\\\\/]+))?@)?((?:[^\\\\/:]+)|(?:\\[[0-9a-f:]+\\]))(?::(\\d+))?((?:/~(?:[^\\\\/]+))?[\\\\/]))?(.+)?$', 'https://me@1.2.3.4:80//abc')",[145591]
"('URIish.java', 'org.eclipse.jgit.transport.URIish', '<init>', '^(?:([^/:@]+)(?::([^\\\\/]+))?@)?((?:[^\\\\/:]+)|(?:\\[[0-9a-f:]+\\])):((?:(?:/~(?:[^\\\\/]+))[\\\\/])?(?:(?:[^\\\\/]+[\\\\/]+)*[^\\\\/]+[\\\\/]*))$', '/tmp/jgit_test_3702623628615032288_tmp/tmp_6188209109110356895')","[200970, 201105, 201253]"
"('URIish.java', 'org.eclipse.jgit.transport.URIish', '<init>', '^([a-z][a-z0-9+-]+)://(?:(?:([^/:@]+)(?::([^\\\\/]+))?@)?((?:[^\\\\/:]+)|(?:\\[[0-9a-f:]+\\]))(?::(\\d+))?((?:/~(?:[^\\\\/]+))?[\\\\/]))?(.+)?$', 'ssh+git://l usr\\example.com:wtf@example.com:1234//abc')",[126271]
"('Description.java', 'org.junit.runner.Description', 'methodAndClassNamePatternGroupOrDefault', '([\\s\\S]*)\\((.*)\\)', 'org.eclipse.jgit.internal.storage.file.RefUpdateTest')","[55562, 210056]"
"('Description.java', 'org.junit.runner.Description', 'methodAndClassNamePatternGroupOrDefault', '([\\s\\S]*)\\((.*)\\)', 'testDeleteNonExisting(org.eclipse.jgit.api.TagCommandTest)')","[41524, 99146]"
"('Description.java', 'org.junit.runner.Description', 'methodAndClassNamePatternGroupOrDefault', '([\\s\\S]*)\\((.*)\\)', 'org.eclipse.jgit.revwalk.RevCommitParseTest')","[8700, 181676]"
"('Description.java', 'org.junit.runner.Description', 'methodAndClassNamePatternGroupOrDefault', '([\\s\\S]*)\\((.*)\\)', 'testURIEncodeDecode(org.eclipse.jgit.transport.URIishTest)')","[1643, 60690]"
"('ChangeIdUtil.java', 'org.eclipse.jgit.util.ChangeIdUtil', 'indexOfChangeId', '(^Change-Id: *I[a-f0-9]{40}$)', 'Fix-A-Widget: this thing')",[190737]
"('Description.java', 'org.junit.runner.Description', 'methodAndClassNamePatternGroupOrDefault', '([\\s\\S]*)\\((.*)\\)', 'testListNotes(org.eclipse.jgit.api.NotesCommandTest)')","[51790, 109244]"
"('URIish.java', 'org.eclipse.jgit.transport.URIish', '<init>', '^([a-z][a-z0-9+-]+)://(?:(?:([^/:@]+)(?::([^\\\\/]+))?@)?((?:[^\\\\/:]+)|(?:\\[[0-9a-f:]+\\]))(?::(\\d+))?((?:/~(?:[^\\\\/]+))?[\\\\/]))?(.+)?$', 'ssh://l usr\\example.com@1.2.3.4:80//')",[136713]
"('Description.java', 'org.junit.runner.Description', 'methodAndClassNamePatternGroupOrDefault', '([\\s\\S]*)\\((.*)\\)', 'testNewNamespaceConflictWithLoosePrefixOfExisting(org.eclipse.jgit.internal.storage.file.RefUpdateTest)')","[56150, 113314]"
"('URIish.java', 'org.eclipse.jgit.transport.URIish', '<init>', '^([a-z][a-z0-9+-]+)://(?:(?:([^/:@]+)(?::([^\\\\/]+))?@)?((?:[^\\\\/:]+)|(?:\\[[0-9a-f:]+\\]))(?::(\\d+))?((?:/~(?:[^\\\\/]+))?[\\\\/]))?(.+)?$', 'example.com:/some/p ath')","[178481, 178573]"
"('URIish.java', 'org.eclipse.jgit.transport.URIish', '<init>', '^([a-z][a-z0-9+-]+)://(?:(?:([^/:@]+)(?::([^\\\\/]+))?@)?((?:[^\\\\/:]+)|(?:\\[[0-9a-f:]+\\]))(?::(\\d+))?((?:/~(?:[^\\\\/]+))?[\\\\/]))?(.+)?$', 'ssh+git://lusr\\example:wtf@1.2.3.4:1234//abc')",[127743]
"('Description.java', 'org.junit.runner.Description', 'methodAndClassNamePatternGroupOrDefault', '([\\s\\S]*)\\((.*)\\)', 'testConfigureCache_PackedGitWindowSize_0(org.eclipse.jgit.internal.storage.file.WindowCacheReconfigureTest)')","[53324, 110652]"
"('URIish.java', 'org.eclipse.jgit.transport.URIish', '<init>', '^(file):([\\\\/](?![\\\\/])((?:[A-Za-z]:)?[\\\\/]?(?:(?:[^\\\\/]+[\\\\/]+)*[^\\\\/]+[\\\\/]*)))$', 'ssh+git://lusr\\example:wtf@example.com:1234//')",[127306]
"('Description.java', 'org.junit.runner.Description', 'methodAndClassNamePatternGroupOrDefault', '([\\s\\S]*)\\((.*)\\)', 'testNonBareFileKey(org.eclipse.jgit.lib.RepositoryCacheTest)')","[20868, 79258]"
"('URIish.java', 'org.eclipse.jgit.transport.URIish', '<init>', '^([a-z][a-z0-9+-]+)://(?:(?:([^/:@]+)(?::([^\\\\/]+))?@)?((?:[^\\\\/:]+)|(?:\\[[0-9a-f:]+\\]))(?::(\\d+))?((?:/~(?:[^\\\\/]+))?[\\\\/]))?(.+)?$', 'https://me:wtf@[::1]:80/D:\\x')",[132803]
"('Description.java', 'org.junit.runner.Description', 'methodAndClassNamePatternGroupOrDefault', '([\\s\\S]*)\\((.*)\\)', 'testClear(org.eclipse.jgit.revwalk.DateRevQueueTest)')","[7975, 66806]"
"('Description.java', 'org.junit.runner.Description', 'methodAndClassNamePatternGroupOrDefault', '([\\s\\S]*)\\((.*)\\)', 'org.eclipse.jgit.notes.DefaultNoteMergerTest')","[40463, 193744]"
"('Description.java', 'org.junit.runner.Description', 'methodAndClassNamePatternGroupOrDefault', '([\\s\\S]*)\\((.*)\\)', 'testValidTree1(org.eclipse.jgit.lib.ObjectCheckerTest)')","[25517, 83790]"
"('Description.java', 'org.junit.runner.Description', 'methodAndClassNamePatternGroupOrDefault', '([\\s\\S]*)\\((.*)\\)', 'testAssumeUnchanged(org.eclipse.jgit.api.AddCommandTest)')","[50521, 108034]"
"('URIish.java', 'org.eclipse.jgit.transport.URIish', '<init>', '^(file):([\\\\/](?![\\\\/])((?:[A-Za-z]:)?[\\\\/]?(?:(?:[^\\\\/]+[\\\\/]+)*[^\\\\/]+[\\\\/]*)))$', 'ssh://l usr\\example.com@example.com:80//abc')",[136368]
"('URIish.java', 'org.eclipse.jgit.transport.URIish', '<init>', '^([a-z][a-z0-9+-]+)://(?:(?:([^/:@]+)(?::([^\\\\/]+))?@)?((?:[^\\\\/:]+)|(?:\\[[0-9a-f:]+\\]))(?::(\\d+))?((?:/~(?:[^\\\\/]+))?[\\\\/]))?(.+)?$', 'ssh://me@example.com:1234/D:\\x')",[135195]
"('URIish.java', 'org.eclipse.jgit.transport.URIish', '<init>', '^([a-z][a-z0-9+-]+)://(?:(?:([^/:@]+)(?::([^\\\\/]+))?@)?((?:[^\\\\/:]+)|(?:\\[[0-9a-f:]+\\]))(?::(\\d+))?((?:/~(?:[^\\\\/]+))?[\\\\/]))?(.+)?$', 'ssh+git://lusr\\example:wtf@example.com:80/D:\\x')",[127651]
"('Description.java', 'org.junit.runner.Description', 'methodAndClassNamePatternGroupOrDefault', '([\\s\\S]*)\\((.*)\\)', 'org.eclipse.jgit.api.NotesCommandTest')","[51769, 208917]"
"('Description.java', 'org.junit.runner.Description', 'methodAndClassNamePatternGroupOrDefault', '([\\s\\S]*)\\((.*)\\)', 'testTree(org.eclipse.jgit.lib.RepositoryResolveTest)')","[27111, 85440]"
"('URIish.java', 'org.eclipse.jgit.transport.URIish', '<init>', '^([a-z][a-z0-9+-]+)://(?:(?:([^/:@]+)(?::([^\\\\/]+))?@)?((?:[^\\\\/:]+)|(?:\\[[0-9a-f:]+\\]))(?::(\\d+))?((?:/~(?:[^\\\\/]+))?[\\\\/]))?(.+)?$', 'ssh://lusr\\example@[::1]:1234/D:\\x')",[138139]
"('Description.java', 'org.junit.runner.Description', 'methodAndClassNamePatternGroupOrDefault', '([\\s\\S]*)\\((.*)\\)', 'testSignedOffBy_ManyUsers(org.eclipse.jgit.revwalk.FooterLineTest)')","[6378, 65332]"
"('URIish.java', 'org.eclipse.jgit.transport.URIish', '<init>', '^([a-z][a-z0-9+-]+)://(?:(?:([^/:@]+)(?::([^\\\\/]+))?@)?((?:[^\\\\/:]+)|(?:\\[[0-9a-f:]+\\]))(?::(\\d+))?((?:/~(?:[^\\\\/]+))?[\\\\/]))?(.+)?$', 'ssh+git://example.com/some/p ath')","[175698, 175744]"
"('Description.java', 'org.junit.runner.Description', 'methodAndClassNamePatternGroupOrDefault', '([\\s\\S]*)\\((.*)\\)', 'testQuote_BareA(org.eclipse.jgit.util.QuotedStringGitPathStyleTest)')","[34265, 92238]"
"('Description.java', 'org.junit.runner.Description', 'methodAndClassNamePatternGroupOrDefault', '([\\s\\S]*)\\((.*)\\)', 'commitAmendOnInitialShouldFail(org.eclipse.jgit.api.CommitCommandTest)')","[43608, 101170]"
"('URIish.java', 'org.eclipse.jgit.transport.URIish', '<init>', '^(file):([\\\\/](?![\\\\/])((?:[A-Za-z]:)?[\\\\/]?(?:(?:[^\\\\/]+[\\\\/]+)*[^\\\\/]+[\\\\/]*)))$', 'http://l usr\\example.com:wtf@example.com:80/D:\\x')",[129836]
"('URIish.java', 'org.eclipse.jgit.transport.URIish', '<init>', '^(file):([\\\\/](?![\\\\/])((?:[A-Za-z]:)?[\\\\/]?(?:(?:[^\\\\/]+[\\\\/]+)*[^\\\\/]+[\\\\/]*)))$', 'ssh+git://[::1]/D:\\x')","[165716, 165900, 166820, 167004, 167924, 168108]"
"('URIish.java', 'org.eclipse.jgit.transport.URIish', '<init>', '^([a-z][a-z0-9+-]+)://(?:(?:([^/:@]+)(?::([^\\\\/]+))?@)?((?:[^\\\\/:]+)|(?:\\[[0-9a-f:]+\\]))(?::(\\d+))?((?:/~(?:[^\\\\/]+))?[\\\\/]))?(.+)?$', 'https://l usr\\example.com@1.2.3.4//abc')","[159759, 159943]"
"('URIish.java', 'org.eclipse.jgit.transport.URIish', '<init>', '^(file):([\\\\/](?![\\\\/])((?:[A-Za-z]:)?[\\\\/]?(?:(?:[^\\\\/]+[\\\\/]+)*[^\\\\/]+[\\\\/]*)))$', 'https://lusr\\example:wtf@1.2.3.4:1234/D:/x')",[134390]
"('URIish.java', 'org.eclipse.jgit.transport.URIish', '<init>', '^([a-z][a-z0-9+-]+)://(?:(?:([^/:@]+)(?::([^\\\\/]+))?@)?((?:[^\\\\/:]+)|(?:\\[[0-9a-f:]+\\]))(?::(\\d+))?((?:/~(?:[^\\\\/]+))?[\\\\/]))?(.+)?$', 'ssh://lusr\\example:wtf@example.com:1234/D:\\x')",[124155]
"('Description.java', 'org.junit.runner.Description', 'methodAndClassNamePatternGroupOrDefault', '([\\s\\S]*)\\((.*)\\)', 'testCloseDuringClose(org.eclipse.jgit.util.io.UnionInputStreamTest)')","[33164, 91204]"
"('Description.java', 'org.junit.runner.Description', 'methodAndClassNamePatternGroupOrDefault', '([\\s\\S]*)\\((.*)\\)', 'testMaster(org.eclipse.jgit.transport.RefSpecTest)')","[3193, 62274]"
"('Description.java', 'org.junit.runner.Description', 'methodAndClassNamePatternGroupOrDefault', '([\\s\\S]*)\\((.*)\\)', 'testDeleteRecursiveEmptyDirectoriesOnlyButIsFile(org.eclipse.jgit.util.FileUtilTest)')","[33742, 91710]"
"('Description.java', 'org.junit.runner.Description', 'methodAndClassNamePatternGroupOrDefault', '([\\s\\S]*)\\((.*)\\)', 'testInvalidTreeModeNotSupportedMode2(org.eclipse.jgit.lib.ObjectCheckerTest)')","[25496, 83768]"
"('Description.java', 'org.junit.runner.Description', 'methodAndClassNamePatternGroupOrDefault', '([\\s\\S]*)\\((.*)\\)', 'testCreateFileHeaderForRenameWithoutContentChange(org.eclipse.jgit.diff.DiffFormatterTest)')","[14083, 72548]"
"('URIish.java', 'org.eclipse.jgit.transport.URIish', '<init>', '^([a-z][a-z0-9+-]+)://(?:(?:([^/:@]+)(?::([^\\\\/]+))?@)?((?:[^\\\\/:]+)|(?:\\[[0-9a-f:]+\\]))(?::(\\d+))?((?:/~(?:[^\\\\/]+))?[\\\\/]))?(.+)?$', 'https://me:wtf@[::1]:80//abc')",[132711]
"('URIish.java', 'org.eclipse.jgit.transport.URIish', '<init>', '^([a-z][a-z0-9+-]+)://(?:(?:([^/:@]+)(?::([^\\\\/]+))?@)?((?:[^\\\\/:]+)|(?:\\[[0-9a-f:]+\\]))(?::(\\d+))?((?:/~(?:[^\\\\/]+))?[\\\\/]))?(.+)?$', 'ssh+git://lusr\\example@1.2.3.4/D:\\x')","[154331, 154515]"
"('Description.java', 'org.junit.runner.Description', 'methodAndClassNamePatternGroupOrDefault', '([\\s\\S]*)\\((.*)\\)', 'org.eclipse.jgit.transport.ReceivePackAdvertiseRefsHookTest')","[345, 117475]"
"('ChangeIdUtil.java', 'org.eclipse.jgit.util.ChangeIdUtil', 'indexOfFirstFooterLine', '(^[a-zA-Z0-9-]+:(?!//).*$)', 'Signed-off-by: J Author <ja@example.com>')","[188516, 188723, 188903, 189414, 189569, 189672, 189853, 190034]"
"('Description.java', 'org.junit.runner.Description', 'methodAndClassNamePatternGroupOrDefault', '([\\s\\S]*)\\((.*)\\)', 'invalidWhenMoreThanOneWildcardInDestination(org.eclipse.jgit.transport.RefSpecTest)')","[3088, 62164]"
"('Description.java', 'org.junit.runner.Description', 'methodAndClassNamePatternGroupOrDefault', '([\\s\\S]*)\\((.*)\\)', 'testInCoreInputStream(org.eclipse.jgit.util.TemporaryBufferTest)')","[34704, 92678]"
"('URIish.java', 'org.eclipse.jgit.transport.URIish', '<init>', '^(file):([\\\\/](?![\\\\/])((?:[A-Za-z]:)?[\\\\/]?(?:(?:[^\\\\/]+[\\\\/]+)*[^\\\\/]+[\\\\/]*)))$', 'http://l usr\\example.com@[::1]:1234//')",[143498]
"('Description.java', 'org.junit.runner.Description', 'methodAndClassNamePatternGroupOrDefault', '([\\s\\S]*)\\((.*)\\)', 'testWrite_SmallBlocks1(org.eclipse.jgit.transport.SideBandOutputStreamTest)')","[4546, 63572]"
"('URIish.java', 'org.eclipse.jgit.transport.URIish', '<init>', '^(file):([\\\\/](?![\\\\/])((?:[A-Za-z]:)?[\\\\/]?(?:(?:[^\\\\/]+[\\\\/]+)*[^\\\\/]+[\\\\/]*)))$', 'http://me@1.2.3.4:1234/D:\\x')",[142164]
"('Description.java', 'org.junit.runner.Description', 'methodAndClassNamePatternGroupOrDefault', '([\\s\\S]*)\\((.*)\\)', 'testAddLargeBlocks(org.eclipse.jgit.revwalk.LIFORevQueueTest)')","[6523, 65464]"
"('URIish.java', 'org.eclipse.jgit.transport.URIish', '<init>', '^([a-z][a-z0-9+-]+)://(?:(?:([^/:@]+)(?::([^\\\\/]+))?@)?((?:[^\\\\/:]+)|(?:\\[[0-9a-f:]+\\]))(?::(\\d+))?((?:/~(?:[^\\\\/]+))?[\\\\/]))?(.+)?$', 'file:///tmp/jgit_test_168010054415911302_tmp/tmp_8136967476595711276/.git/')",[202022]
"('Description.java', 'org.junit.runner.Description', 'methodAndClassNamePatternGroupOrDefault', '([\\s\\S]*)\\((.*)\\)', 'testGetRef_AnyHeadWithGarbage(org.eclipse.jgit.internal.storage.file.RefDirectoryTest)')","[58354, 115404]"
"('Description.java', 'org.junit.runner.Description', 'methodAndClassNamePatternGroupOrDefault', '([\\s\\S]*)\\((.*)\\)', 'testEdit_DuplicateAButCommonUniqueInB(org.eclipse.jgit.diff.HistogramDiffTest)')","[15373, 73780]"
"('Description.java', 'org.junit.runner.Description', 'methodAndClassNamePatternGroupOrDefault', '([\\s\\S]*)\\((.*)\\)', 'testFileModeChangeWithNoContentChangeUpdate(org.eclipse.jgit.lib.DirCacheCheckoutTest)')","[23227, 81590]"
"('ChangeIdUtil.java', 'org.eclipse.jgit.util.ChangeIdUtil', 'indexOfChangeId', '(^Change-Id: *I[a-f0-9]{40}$)', '     the indentation]')",[188282]
"('Description.java', 'org.junit.runner.Description', 'methodAndClassNamePatternGroupOrDefault', '([\\s\\S]*)\\((.*)\\)', 'testHasAnyFlag(org.eclipse.jgit.revwalk.RevObjectTest)')","[8639, 67422]"
"('Description.java', 'org.junit.runner.Description', 'methodAndClassNamePatternGroupOrDefault', '([\\s\\S]*)\\((.*)\\)', 'testUpdateRefNoChange(org.eclipse.jgit.internal.storage.file.RefUpdateTest)')","[55898, 113050]"
"('Description.java', 'org.junit.runner.Description', 'methodAndClassNamePatternGroupOrDefault', '([\\s\\S]*)\\((.*)\\)', 'testError_TruncatedOld(org.eclipse.jgit.patch.PatchErrorTest)')","[39093, 96858]"
"('Description.java', 'org.junit.runner.Description', 'methodAndClassNamePatternGroupOrDefault', '([\\s\\S]*)\\((.*)\\)', 'testFileCommittedModified(org.eclipse.jgit.treewalk.filter.IndexDiffFilterTest)')","[30317, 88520]"
"('QuotedString.java', 'org.eclipse.jgit.util.QuotedString$BourneUserPathStyle', 'quote', '^~[A-Za-z0-9_-]+$', '~foo')","[192569, 192593]"
"('Repository.java', 'org.eclipse.jgit.lib.Repository', 'resolve', '^-\\d+$', '1')","[184549, 184576, 184659, 184686, 184769, 184796, 185374, 185401]"
"('URIish.java', 'org.eclipse.jgit.transport.URIish', '<init>', '^(file):([\\\\/](?![\\\\/])((?:[A-Za-z]:)?[\\\\/]?(?:(?:[^\\\\/]+[\\\\/]+)*[^\\\\/]+[\\\\/]*)))$', 'https://l usr\\example.com@example.com:1234/D:\\x')",[146212]
"('Description.java', 'org.junit.runner.Description', 'methodAndClassNamePatternGroupOrDefault', '([\\s\\S]*)\\((.*)\\)', 'testFanoutAndLeafWitConflict(org.eclipse.jgit.notes.NoteMapMergerTest)')","[40963, 98618]"
"('Description.java', 'org.junit.runner.Description', 'methodAndClassNamePatternGroupOrDefault', '([\\s\\S]*)\\((.*)\\)', 'testGraphGroupCase1(org.eclipse.jgit.fnmatch.FileNameMatcherTest)')","[16711, 75122]"
"('Description.java', 'org.junit.runner.Description', 'methodAndClassNamePatternGroupOrDefault', '([\\s\\S]*)\\((.*)\\)', 'testTwoNonConflictingModifications(org.eclipse.jgit.merge.MergeAlgorithmTest)')","[10053, 68764]"
"('Description.java', 'org.junit.runner.Description', 'methodAndClassNamePatternGroupOrDefault', '([\\s\\S]*)\\((.*)\\)', 'testCloneEmpty(org.eclipse.jgit.revwalk.FIFORevQueueTest)')","[9305, 68060]"
"('URIish.java', 'org.eclipse.jgit.transport.URIish', '<init>', '^([a-z][a-z0-9+-]+)://(?:(?:([^/:@]+)(?::([^\\\\/]+))?@)?((?:[^\\\\/:]+)|(?:\\[[0-9a-f:]+\\]))(?::(\\d+))?((?:/~(?:[^\\\\/]+))?[\\\\/]))?(.+)?$', 'https://l usr\\example.com@1.2.3.4//')","[159713, 159897]"
"('URIish.java', 'org.eclipse.jgit.transport.URIish', '<init>', '^([a-z][a-z0-9+-]+)://(?:(?:([^/:@]+)(?::([^\\\\/]+))?@)?((?:[^\\\\/:]+)|(?:\\[[0-9a-f:]+\\]))(?::(\\d+))?((?:/~(?:[^\\\\/]+))?[\\\\/]))?(.+)?$', 'ssh://DOMAIN%5cüser:pass@example.com:33/some/p ath')","[178826, 178872]"
"('URIish.java', 'org.eclipse.jgit.transport.URIish', '<init>', '^([a-z][a-z0-9+-]+)://(?:(?:([^/:@]+)(?::([^\\\\/]+))?@)?((?:[^\\\\/:]+)|(?:\\[[0-9a-f:]+\\]))(?::(\\d+))?((?:/~(?:[^\\\\/]+))?[\\\\/]))?(.+)?$', 'https://lusr\\example@1.2.3.4:1234/D:\\x')",[147707]
"('Description.java', 'org.junit.runner.Description', 'methodAndClassNamePatternGroupOrDefault', '([\\s\\S]*)\\((.*)\\)', 'org.eclipse.jgit.api.DiffCommandTest')","[48173, 207521]"
"('Description.java', 'org.junit.runner.Description', 'methodAndClassNamePatternGroupOrDefault', '([\\s\\S]*)\\((.*)\\)', 'org.eclipse.jgit.revwalk.RevWalkResetTest')","[8097, 181595]"
"('Description.java', 'org.junit.runner.Description', 'methodAndClassNamePatternGroupOrDefault', '([\\s\\S]*)\\((.*)\\)', 'testDegenerate_DeleteStart(org.eclipse.jgit.diff.HistogramDiffTest)')","[15457, 73868]"
"('URIish.java', 'org.eclipse.jgit.transport.URIish', '<init>', '^(file):([\\\\/](?![\\\\/])((?:[A-Za-z]:)?[\\\\/]?(?:(?:[^\\\\/]+[\\\\/]+)*[^\\\\/]+[\\\\/]*)))$', 'ssh://example.com//')","[161530, 161714, 162634, 162818, 163738, 163922]"
"('Description.java', 'org.junit.runner.Description', 'methodAndClassNamePatternGroupOrDefault', '([\\s\\S]*)\\((.*)\\)', 'treeIdWithGitmodules(org.eclipse.jgit.submodule.SubmoduleWalkTest)')","[19769, 78246]"
"('URIish.java', 'org.eclipse.jgit.transport.URIish', '<init>', '^([a-z][a-z0-9+-]+)://(?:(?:([^/:@]+)(?::([^\\\\/]+))?@)?((?:[^\\\\/:]+)|(?:\\[[0-9a-f:]+\\]))(?::(\\d+))?((?:/~(?:[^\\\\/]+))?[\\\\/]))?(.+)?$', 'git://host.xy/abc.git/')",[179746]
"('Description.java', 'org.junit.runner.Description', 'methodAndClassNamePatternGroupOrDefault', '([\\s\\S]*)\\((.*)\\)', 'testRemoveFrontOfList(org.eclipse.jgit.util.RefListTest)')","[35330, 93294]"
"('Description.java', 'org.junit.runner.Description', 'methodAndClassNamePatternGroupOrDefault', '([\\s\\S]*)\\((.*)\\)', 'multiplePathsNoMerge(org.eclipse.jgit.api.NameRevCommandTest)')","[51561, 109024]"
"('URIish.java', 'org.eclipse.jgit.transport.URIish', '<init>', '^(file):([\\\\/](?![\\\\/])((?:[A-Za-z]:)?[\\\\/]?(?:(?:[^\\\\/]+[\\\\/]+)*[^\\\\/]+[\\\\/]*)))$', 'ssh+git://l usr\\example.com@example.com:80/D:/x')",[139726]
"('Description.java', 'org.junit.runner.Description', 'methodAndClassNamePatternGroupOrDefault', '([\\s\\S]*)\\((.*)\\)', 'testGetNullHumanishName(org.eclipse.jgit.transport.URIishTest)')","[1223, 60250]"
"('Description.java', 'org.junit.runner.Description', 'methodAndClassNamePatternGroupOrDefault', '([\\s\\S]*)\\((.*)\\)', 'testOnlyOption_f1_14_c(org.eclipse.jgit.api.CommitOnlyTest)')","[50166, 107682]"
"('URIish.java', 'org.eclipse.jgit.transport.URIish', '<init>', '^([a-z][a-z0-9+-]+)://(?:(?:([^/:@]+)(?::([^\\\\/]+))?@)?((?:[^\\\\/:]+)|(?:\\[[0-9a-f:]+\\]))(?::(\\d+))?((?:/~(?:[^\\\\/]+))?[\\\\/]))?(.+)?$', 'https://l usr\\example.com@[::1]:80//')",[147017]
"('Description.java', 'org.junit.runner.Description', 'methodAndClassNamePatternGroupOrDefault', '([\\s\\S]*)\\((.*)\\)', 'testAddHugeFile(org.eclipse.jgit.api.HugeFileTest)')","[44755, 102292]"
"('Description.java', 'org.junit.runner.Description', 'methodAndClassNamePatternGroupOrDefault', '([\\s\\S]*)\\((.*)\\)', 'testRelativePath(org.eclipse.jgit.transport.URIishTest)')","[1853, 60910]"
"('Description.java', 'org.junit.runner.Description', 'methodAndClassNamePatternGroupOrDefault', '([\\s\\S]*)\\((.*)\\)', 'testError_GarbageBetweenFiles(org.eclipse.jgit.patch.PatchErrorTest)')","[39114, 96880]"
"('Description.java', 'org.junit.runner.Description', 'methodAndClassNamePatternGroupOrDefault', '([\\s\\S]*)\\((.*)\\)', 'testNotEquals_DiffLength(org.eclipse.jgit.lib.AbbreviatedObjectIdTest)')","[22748, 81128]"
"('URIish.java', 'org.eclipse.jgit.transport.URIish', '<init>', '^([a-z][a-z0-9+-]+)://(?:(?:([^/:@]+)(?::([^\\\\/]+))?@)?((?:[^\\\\/:]+)|(?:\\[[0-9a-f:]+\\]))(?::(\\d+))?((?:/~(?:[^\\\\/]+))?[\\\\/]))?(.+)?$', 'ssh://l usr\\example.com@[::1]:80//')",[137081]
"('Description.java', 'org.junit.runner.Description', 'methodAndClassNamePatternGroupOrDefault', '([\\s\\S]*)\\((.*)\\)', 'testEdit_CommonReplaceCommonDeleteCommon(org.eclipse.jgit.diff.HistogramDiffTest)')","[15646, 74066]"
"('URIish.java', 'org.eclipse.jgit.transport.URIish', '<init>', '^([a-z][a-z0-9+-]+)://(?:(?:([^/:@]+)(?::([^\\\\/]+))?@)?((?:[^\\\\/:]+)|(?:\\[[0-9a-f:]+\\]))(?::(\\d+))?((?:/~(?:[^\\\\/]+))?[\\\\/]))?(.+)?$', 'ssh://lusr\\example@[::1]:80//')",[138185]
"('URIish.java', 'org.eclipse.jgit.transport.URIish', '<init>', '^(file):([\\\\/](?![\\\\/])((?:[A-Za-z]:)?[\\\\/]?(?:(?:[^\\\\/]+[\\\\/]+)*[^\\\\/]+[\\\\/]*)))$', 'ssh+git://me:wtf@example.com:1234/D:\\x')",[125236]
"('Description.java', 'org.junit.runner.Description', 'methodAndClassNamePatternGroupOrDefault', '([\\s\\S]*)\\((.*)\\)', 'testRemoveRevFlag(org.eclipse.jgit.revwalk.RevObjectTest)')","[8576, 67356]"
"('Description.java', 'org.junit.runner.Description', 'methodAndClassNamePatternGroupOrDefault', '([\\s\\S]*)\\((.*)\\)', 'workingDirectoryModifyInSubfolder(org.eclipse.jgit.api.StashApplyCommandTest)')","[51206, 108672]"
"('Description.java', 'org.junit.runner.Description', 'methodAndClassNamePatternGroupOrDefault', '([\\s\\S]*)\\((.*)\\)', 'testDegenerate_InsertMiddle(org.eclipse.jgit.diff.HistogramDiffTest)')","[15583, 74000]"
"('URIish.java', 'org.eclipse.jgit.transport.URIish', '<init>', '^([a-z][a-z0-9+-]+)://(?:(?:([^/:@]+)(?::([^\\\\/]+))?@)?((?:[^\\\\/:]+)|(?:\\[[0-9a-f:]+\\]))(?::(\\d+))?((?:/~(?:[^\\\\/]+))?[\\\\/]))?(.+)?$', 'http://me:wtf@example.com:80/D:\\x')",[128755]
"('Description.java', 'org.junit.runner.Description', 'methodAndClassNamePatternGroupOrDefault', '([\\s\\S]*)\\((.*)\\)', 'testPullEmptyRepository(org.eclipse.jgit.api.PullCommandTest)')","[46532, 104074]"
"('Description.java', 'org.junit.runner.Description', 'methodAndClassNamePatternGroupOrDefault', '([\\s\\S]*)\\((.*)\\)', 'testRenameBranchAlsoInPack(org.eclipse.jgit.internal.storage.file.RefUpdateTest)')","[56171, 113336]"
"('URIish.java', 'org.eclipse.jgit.transport.URIish', '<init>', '^([a-z][a-z0-9+-]+)://(?:(?:([^/:@]+)(?::([^\\\\/]+))?@)?((?:[^\\\\/:]+)|(?:\\[[0-9a-f:]+\\]))(?::(\\d+))?((?:/~(?:[^\\\\/]+))?[\\\\/]))?(.+)?$', 'ssh+git://l usr\\example.com@[::1]:1234//')",[140209]
"('URIish.java', 'org.eclipse.jgit.transport.URIish', '<init>', '^(file):([\\\\/](?![\\\\/])((?:[A-Za-z]:)?[\\\\/]?(?:(?:[^\\\\/]+[\\\\/]+)*[^\\\\/]+[\\\\/]*)))$', 'ssh://lusr\\example:wtf@example.com:1234/D:/x')",[124086]
"('Description.java', 'org.junit.runner.Description', 'methodAndClassNamePatternGroupOrDefault', '([\\s\\S]*)\\((.*)\\)', 'testConflictingDeletedAndModified(org.eclipse.jgit.lib.IndexDiffTest)')","[20639, 79038]"
"('Description.java', 'org.junit.runner.Description', 'methodAndClassNamePatternGroupOrDefault', '([\\s\\S]*)\\((.*)\\)', 'testBlankGroupCase3(org.eclipse.jgit.fnmatch.FileNameMatcherTest)')","[18580, 77080]"
"('Description.java', 'org.junit.runner.Description', 'methodAndClassNamePatternGroupOrDefault', '([\\s\\S]*)\\((.*)\\)', 'testOnlyOption_f1_1_a(org.eclipse.jgit.api.CommitOnlyTest)')","[48444, 105878]"
"('URIish.java', 'org.eclipse.jgit.transport.URIish', '<init>', '^(file):([\\\\/](?![\\\\/])((?:[A-Za-z]:)?[\\\\/]?(?:(?:[^\\\\/]+[\\\\/]+)*[^\\\\/]+[\\\\/]*)))$', 'http://me:wtf@example.com:1234//abc')",[128456]
"('URIish.java', 'org.eclipse.jgit.transport.URIish', '<init>', '^([a-z][a-z0-9+-]+)://(?:(?:([^/:@]+)(?::([^\\\\/]+))?@)?((?:[^\\\\/:]+)|(?:\\[[0-9a-f:]+\\]))(?::(\\d+))?((?:/~(?:[^\\\\/]+))?[\\\\/]))?(.+)?$', 'https://l usr\\example.com@[::1]:80/D:\\x')",[147155]
"('URIish.java', 'org.eclipse.jgit.transport.URIish', '<init>', '^([a-z][a-z0-9+-]+)://(?:(?:([^/:@]+)(?::([^\\\\/]+))?@)?((?:[^\\\\/:]+)|(?:\\[[0-9a-f:]+\\]))(?::(\\d+))?((?:/~(?:[^\\\\/]+))?[\\\\/]))?(.+)?$', 'https://l usr\\example.com:wtf@1.2.3.4:80/D:/x')",[133493]
"('URIish.java', 'org.eclipse.jgit.transport.URIish', '<init>', '^(file):([\\\\/](?![\\\\/])((?:[A-Za-z]:)?[\\\\/]?(?:(?:[^\\\\/]+[\\\\/]+)*[^\\\\/]+[\\\\/]*)))$', 'http://[::1]//abc')","[168936, 169120, 170040, 170224, 171144, 171328]"
"('Description.java', 'org.junit.runner.Description', 'methodAndClassNamePatternGroupOrDefault', '([\\s\\S]*)\\((.*)\\)', 'testMixedGroupCase3(org.eclipse.jgit.fnmatch.FileNameMatcherTest)')","[16522, 74924]"
"('URIish.java', 'org.eclipse.jgit.transport.URIish', '<init>', '^(file):([\\\\/](?![\\\\/])((?:[A-Za-z]:)?[\\\\/]?(?:(?:[^\\\\/]+[\\\\/]+)*[^\\\\/]+[\\\\/]*)))$', 'ssh+git://lusr\\example:wtf@[::1]:80/D:/x')",[128318]
"('Description.java', 'org.junit.runner.Description', 'methodAndClassNamePatternGroupOrDefault', '([\\s\\S]*)\\((.*)\\)', 'org.eclipse.jgit.dircache.DirCacheBasicTest')","[11175, 182208]"
"('Description.java', 'org.junit.runner.Description', 'methodAndClassNamePatternGroupOrDefault', '([\\s\\S]*)\\((.*)\\)', 'testOneEntry_Backwards(org.eclipse.jgit.treewalk.CanonicalTreeParserTest)')","[30025, 88234]"
"('Description.java', 'org.junit.runner.Description', 'methodAndClassNamePatternGroupOrDefault', '([\\s\\S]*)\\((.*)\\)', 'testCloneRepository(org.eclipse.jgit.api.CloneCommandTest)')","[42440, 100026]"
"('URIish.java', 'org.eclipse.jgit.transport.URIish', '<init>', '^(file):([\\\\/](?![\\\\/])((?:[A-Za-z]:)?[\\\\/]?(?:(?:[^\\\\/]+[\\\\/]+)*[^\\\\/]+[\\\\/]*)))$', 'https://lusr\\example@1.2.3.4/D:\\x')","[160932, 161116]"
"('Description.java', 'org.junit.runner.Description', 'methodAndClassNamePatternGroupOrDefault', '([\\s\\S]*)\\((.*)\\)', 'org.eclipse.jgit.util.GitDateFormatterTest')","[32187, 186478]"
"('Description.java', 'org.junit.runner.Description', 'methodAndClassNamePatternGroupOrDefault', '([\\s\\S]*)\\((.*)\\)', 'testCreateNewFile(org.eclipse.jgit.util.FileUtilTest)')","[33868, 91842]"
"('Description.java', 'org.junit.runner.Description', 'methodAndClassNamePatternGroupOrDefault', '([\\s\\S]*)\\((.*)\\)', 'testPushWithRefSpecFromConfig(org.eclipse.jgit.api.PushCommandTest)')","[42108, 99718]"
"('URIish.java', 'org.eclipse.jgit.transport.URIish', '<init>', '^([a-z][a-z0-9+-]+)://(?:(?:([^/:@]+)(?::([^\\\\/]+))?@)?((?:[^\\\\/:]+)|(?:\\[[0-9a-f:]+\\]))(?::(\\d+))?((?:/~(?:[^\\\\/]+))?[\\\\/]))?(.+)?$', '/home/m y')","[176089, 176204]"
"('Description.java', 'org.junit.runner.Description', 'methodAndClassNamePatternGroupOrDefault', '([\\s\\S]*)\\((.*)\\)', 'testUserPasswordAndPort(org.eclipse.jgit.transport.URIishTest)')","[2063, 61130]"
"('Description.java', 'org.junit.runner.Description', 'methodAndClassNamePatternGroupOrDefault', '([\\s\\S]*)\\((.*)\\)', 'org.eclipse.jgit.lib.ObjectIdTest')","[28468, 185674]"
"('URIish.java', 'org.eclipse.jgit.transport.URIish', '<init>', '^([a-z][a-z0-9+-]+)://(?:(?:([^/:@]+)(?::([^\\\\/]+))?@)?((?:[^\\\\/:]+)|(?:\\[[0-9a-f:]+\\]))(?::(\\d+))?((?:/~(?:[^\\\\/]+))?[\\\\/]))?(.+)?$', 'https://lusr\\example@example.com:1234//abc')",[147247]
"('URIish.java', 'org.eclipse.jgit.transport.URIish', '<init>', '^(file):([\\\\/](?![\\\\/])((?:[A-Za-z]:)?[\\\\/]?(?:(?:[^\\\\/]+[\\\\/]+)*[^\\\\/]+[\\\\/]*)))$', '/a/b/c.git/')",[175767]
"('Description.java', 'org.junit.runner.Description', 'methodAndClassNamePatternGroupOrDefault', '([\\s\\S]*)\\((.*)\\)', 'testEdit_InsertNearCommonTail(org.eclipse.jgit.diff.MyersDiffTest)')","[14562, 73010]"
"('URIish.java', 'org.eclipse.jgit.transport.URIish', '<init>', '^([a-z][a-z0-9+-]+)://(?:(?:([^/:@]+)(?::([^\\\\/]+))?@)?((?:[^\\\\/:]+)|(?:\\[[0-9a-f:]+\\]))(?::(\\d+))?((?:/~(?:[^\\\\/]+))?[\\\\/]))?(.+)?$', 'ssh+git://lusr\\example:wtf@1.2.3.4:1234/D:/x')",[127789]
"('Description.java', 'org.junit.runner.Description', 'methodAndClassNamePatternGroupOrDefault', '([\\s\\S]*)\\((.*)\\)', 'testContext3(org.eclipse.jgit.diff.DiffFormatterReflowTest)')","[13295, 71822]"
"('URIish.java', 'org.eclipse.jgit.transport.URIish', '<init>', '^([a-z][a-z0-9+-]+)://(?:(?:([^/:@]+)(?::([^\\\\/]+))?@)?((?:[^\\\\/:]+)|(?:\\[[0-9a-f:]+\\]))(?::(\\d+))?((?:/~(?:[^\\\\/]+))?[\\\\/]))?(.+)?$', 'ssh+git://me@1.2.3.4:1234//abc')",[138783]
"('Description.java', 'org.junit.runner.Description', 'methodAndClassNamePatternGroupOrDefault', '([\\s\\S]*)\\((.*)\\)', 'testPrefixCompare_9(org.eclipse.jgit.lib.AbbreviatedObjectIdTest)')","[22391, 80754]"
"('Description.java', 'org.junit.runner.Description', 'methodAndClassNamePatternGroupOrDefault', '([\\s\\S]*)\\((.*)\\)', 'testHasChangeidWithSpacesBeforeId(org.eclipse.jgit.util.ChangeIdUtilTest)')","[38015, 95868]"
"('Description.java', 'org.junit.runner.Description', 'methodAndClassNamePatternGroupOrDefault', '([\\s\\S]*)\\((.*)\\)', 'org.eclipse.jgit.dircache.DirCacheLargePathTest')","[12211, 182397]"
"('URIish.java', 'org.eclipse.jgit.transport.URIish', '<init>', '^(?:([^/:@]+)(?::([^\\\\/]+))?@)?([^\\\\/:]{2,}):([\\\\/](?:(?:[^\\\\/]+[\\\\/]+)*[^\\\\/]+[\\\\/]*))$', '/tmp/jgit_test_459034667116329301_tmp/tmp_5950396153337027342')","[203914, 204054]"
"('URIish.java', 'org.eclipse.jgit.transport.URIish', '<init>', '^([a-z][a-z0-9+-]+)://(?:(?:([^/:@]+)(?::([^\\\\/]+))?@)?((?:[^\\\\/:]+)|(?:\\[[0-9a-f:]+\\]))(?::(\\d+))?((?:/~(?:[^\\\\/]+))?[\\\\/]))?(.+)?$', 'ssh://lusr\\example:wtf@example.com:80//')",[124201]
"('URIish.java', 'org.eclipse.jgit.transport.URIish', '<init>', '^(file):([\\\\/](?![\\\\/])((?:[A-Za-z]:)?[\\\\/]?(?:(?:[^\\\\/]+[\\\\/]+)*[^\\\\/]+[\\\\/]*)))$', 'user@example.com:some/p ath')","[177124, 177193]"
"('Description.java', 'org.junit.runner.Description', 'methodAndClassNamePatternGroupOrDefault', '([\\s\\S]*)\\((.*)\\)', 'testAlphaGroupCase2(org.eclipse.jgit.fnmatch.FileNameMatcherTest)')","[17215, 75650]"
"('Description.java', 'org.junit.runner.Description', 'methodAndClassNamePatternGroupOrDefault', '([\\s\\S]*)\\((.*)\\)', 'testPath_16384(org.eclipse.jgit.dircache.DirCacheLargePathTest)')","[12316, 70876]"
"('Description.java', 'org.junit.runner.Description', 'methodAndClassNamePatternGroupOrDefault', '([\\s\\S]*)\\((.*)\\)', 'annotatedTags(org.eclipse.jgit.api.NameRevCommandTest)')","[51624, 109090]"
"('Description.java', 'org.junit.runner.Description', 'methodAndClassNamePatternGroupOrDefault', '([\\s\\S]*)\\((.*)\\)', 'testShouldBeRecursive_ALL(org.eclipse.jgit.treewalk.filter.NotTreeFilterTest)')","[31464, 89642]"
"('Description.java', 'org.junit.runner.Description', 'methodAndClassNamePatternGroupOrDefault', '([\\s\\S]*)\\((.*)\\)', 'testMethodsOkOnMainThread(org.eclipse.jgit.lib.ThreadSafeProgressMonitorTest)')","[20452, 78862]"
"('URIish.java', 'org.eclipse.jgit.transport.URIish', '<init>', '^(file):([\\\\/](?![\\\\/])((?:[A-Za-z]:)?[\\\\/]?(?:(?:[^\\\\/]+[\\\\/]+)*[^\\\\/]+[\\\\/]*)))$', 'ssh://me@[::1]:80/D:/x')",[136046]
"('URIish.java', 'org.eclipse.jgit.transport.URIish', '<init>', '^(file):([\\\\/](?![\\\\/])((?:[A-Za-z]:)?[\\\\/]?(?:(?:[^\\\\/]+[\\\\/]+)*[^\\\\/]+[\\\\/]*)))$', 'ssh://lusr\\example:wtf@example.com:1234//abc')",[124040]
"('Description.java', 'org.junit.runner.Description', 'methodAndClassNamePatternGroupOrDefault', '([\\s\\S]*)\\((.*)\\)', 'testNoMatches(org.eclipse.jgit.util.RawSubStringPatternTest)')","[33557, 91556]"
"('Description.java', 'org.junit.runner.Description', 'methodAndClassNamePatternGroupOrDefault', '([\\s\\S]*)\\((.*)\\)', 'testMaliciousGitPath2Case(org.eclipse.jgit.lib.DirCacheCheckoutMaliciousPathTest)')","[21286, 79676]"
"('Description.java', 'org.junit.runner.Description', 'methodAndClassNamePatternGroupOrDefault', '([\\s\\S]*)\\((.*)\\)', 'testMergeFirstStopOnLastConflictAndSkip(org.eclipse.jgit.api.RebaseCommandTest)')","[45591, 103128]"
"('URIish.java', 'org.eclipse.jgit.transport.URIish', '<init>', '^([a-z][a-z0-9+-]+)://(?:(?:([^/:@]+)(?::([^\\\\/]+))?@)?((?:[^\\\\/:]+)|(?:\\[[0-9a-f:]+\\]))(?::(\\d+))?((?:/~(?:[^\\\\/]+))?[\\\\/]))?(.+)?$', 'ssh+git://l usr\\example.com:wtf@[::1]:80/D:/x')",[127237]
"('Description.java', 'org.junit.runner.Description', 'methodAndClassNamePatternGroupOrDefault', '([\\s\\S]*)\\((.*)\\)', 'invalidRepositoryFormatVersion(org.eclipse.jgit.internal.storage.file.FileRepositoryBuilderTest)')","[53675, 110960]"
"('Description.java', 'org.junit.runner.Description', 'methodAndClassNamePatternGroupOrDefault', '([\\s\\S]*)\\((.*)\\)', 'testEmpty(org.eclipse.jgit.revwalk.FIFORevQueueTest)')","[9284, 68038]"
"('Description.java', 'org.junit.runner.Description', 'methodAndClassNamePatternGroupOrDefault', '([\\s\\S]*)\\((.*)\\)', 'testFolderChangedToFile(org.eclipse.jgit.treewalk.filter.IndexDiffFilterTest)')","[30380, 88586]"
"('QuotedString.java', 'org.eclipse.jgit.util.QuotedString$BourneUserPathStyle', 'quote', '^~[A-Za-z0-9_-]*/.*$', '~foo/')","[192667, 192691]"
"('URIish.java', 'org.eclipse.jgit.transport.URIish', '<init>', '^([\\\\/]?((?:[A-Za-z]:)?[\\\\/]?(?:(?:[^\\\\/]+[\\\\/]+)*[^\\\\/]+[\\\\/]*)))$', '/tmp/jgit_test_1364027526222413070_tmp/tmp_9117675340386543078.git')",[116358]
"('Description.java', 'org.junit.runner.Description', 'methodAndClassNamePatternGroupOrDefault', '([\\s\\S]*)\\((.*)\\)', 'testParallelThreadsWithDifferentLocales(org.eclipse.jgit.nls.NLSTest)')","[284, 59326]"
"('URIish.java', 'org.eclipse.jgit.transport.URIish', '<init>', '^(file):([\\\\/](?![\\\\/])((?:[A-Za-z]:)?[\\\\/]?(?:(?:[^\\\\/]+[\\\\/]+)*[^\\\\/]+[\\\\/]*)))$', 'http://l usr\\example.com:wtf@1.2.3.4:80/D:\\x')",[130204]
"('Description.java', 'org.junit.runner.Description', 'methodAndClassNamePatternGroupOrDefault', '([\\s\\S]*)\\((.*)\\)', 'testExecutableRetention(org.eclipse.jgit.api.CommitCommandTest)')","[43524, 101082]"
"('URIish.java', 'org.eclipse.jgit.transport.URIish', '<init>', '^([a-z][a-z0-9+-]+)://(?:(?:([^/:@]+)(?::([^\\\\/]+))?@)?((?:[^\\\\/:]+)|(?:\\[[0-9a-f:]+\\]))(?::(\\d+))?((?:/~(?:[^\\\\/]+))?[\\\\/]))?(.+)?$', 'ssh://me@example.com:1234//abc')",[135103]
"('Description.java', 'org.junit.runner.Description', 'methodAndClassNamePatternGroupOrDefault', '([\\s\\S]*)\\((.*)\\)', 'testWriteReadTree(org.eclipse.jgit.dircache.DirCacheTreeTest)')","[11921, 70502]"
"('Description.java', 'org.junit.runner.Description', 'methodAndClassNamePatternGroupOrDefault', '([\\s\\S]*)\\((.*)\\)', 'testDeleteWithoutHead(org.eclipse.jgit.internal.storage.file.RefUpdateTest)')","[55919, 113072]"
"('URIish.java', 'org.eclipse.jgit.transport.URIish', '<init>', '^(file):([\\\\/](?![\\\\/])((?:[A-Za-z]:)?[\\\\/]?(?:(?:[^\\\\/]+[\\\\/]+)*[^\\\\/]+[\\\\/]*)))$', 'ssh://me@[::1]:1234//')",[135770]
"('URIish.java', 'org.eclipse.jgit.transport.URIish', '<init>', '^(file):([\\\\/](?![\\\\/])((?:[A-Za-z]:)?[\\\\/]?(?:(?:[^\\\\/]+[\\\\/]+)*[^\\\\/]+[\\\\/]*)))$', 'ssh+git://me:wtf@[::1]:1234/D:/x')",[125926]
"('URIish.java', 'org.eclipse.jgit.transport.URIish', '<init>', '^([a-z][a-z0-9+-]+)://(?:(?:([^/:@]+)(?::([^\\\\/]+))?@)?((?:[^\\\\/:]+)|(?:\\[[0-9a-f:]+\\]))(?::(\\d+))?((?:/~(?:[^\\\\/]+))?[\\\\/]))?(.+)?$', 'https://[::1]//')","[172225, 172409, 173329, 173513, 174433, 174617]"
"('Description.java', 'org.junit.runner.Description', 'methodAndClassNamePatternGroupOrDefault', '([\\s\\S]*)\\((.*)\\)', 'testUpdateUnexpectedRemote(org.eclipse.jgit.transport.PushProcessTest)')","[4733, 63748]"
"('URIish.java', 'org.eclipse.jgit.transport.URIish', '<init>', '^(file):([\\\\/](?![\\\\/])((?:[A-Za-z]:)?[\\\\/]?(?:(?:[^\\\\/]+[\\\\/]+)*[^\\\\/]+[\\\\/]*)))$', 'http://lusr\\example@[::1]:80//abc')",[144832]
"('Description.java', 'org.junit.runner.Description', 'methodAndClassNamePatternGroupOrDefault', '([\\s\\S]*)\\((.*)\\)', 'testRemoveSlowPath(org.eclipse.jgit.util.BlockListTest)')","[35580, 93536]"
"('URIish.java', 'org.eclipse.jgit.transport.URIish', '<init>', '^([a-z][a-z0-9+-]+)://(?:(?:([^/:@]+)(?::([^\\\\/]+))?@)?((?:[^\\\\/:]+)|(?:\\[[0-9a-f:]+\\]))(?::(\\d+))?((?:/~(?:[^\\\\/]+))?[\\\\/]))?(.+)?$', 'http://me@1.2.3.4:1234/D:\\x')",[142187]
"('Description.java', 'org.junit.runner.Description', 'methodAndClassNamePatternGroupOrDefault', '([\\s\\S]*)\\((.*)\\)', 'testManySolutionsCase3(org.eclipse.jgit.fnmatch.FileNameMatcherTest)')","[18349, 76838]"
"('URIish.java', 'org.eclipse.jgit.transport.URIish', '<init>', '^(file):([\\\\/](?![\\\\/])((?:[A-Za-z]:)?[\\\\/]?(?:(?:[^\\\\/]+[\\\\/]+)*[^\\\\/]+[\\\\/]*)))$', 'ssh+git://lusr\\example:wtf@1.2.3.4:1234//')",[127674]
"('Description.java', 'org.junit.runner.Description', 'methodAndClassNamePatternGroupOrDefault', '([\\s\\S]*)\\((.*)\\)', 'testHasRevFlag(org.eclipse.jgit.revwalk.RevObjectTest)')","[8513, 67290]"
"('Description.java', 'org.junit.runner.Description', 'methodAndClassNamePatternGroupOrDefault', '([\\s\\S]*)\\((.*)\\)', 'repositoryWithSubmodule(org.eclipse.jgit.submodule.SubmoduleSyncTest)')","[19645, 78136]"
"('URIish.java', 'org.eclipse.jgit.transport.URIish', '<init>', '^(file):([\\\\/](?![\\\\/])((?:[A-Za-z]:)?[\\\\/]?(?:(?:[^\\\\/]+[\\\\/]+)*[^\\\\/]+[\\\\/]*)))$', 'file:///tmp/jgit_test_3883950214354605107_tmp/tmp_3885499985139321032')","[197378, 197435, 197493]"
"('URIish.java', 'org.eclipse.jgit.transport.URIish', '<init>', '^(file):([\\\\/](?![\\\\/])((?:[A-Za-z]:)?[\\\\/]?(?:(?:[^\\\\/]+[\\\\/]+)*[^\\\\/]+[\\\\/]*)))$', 'ssh://lusr\\example@1.2.3.4:80//')",[137794]
"('URIish.java', 'org.eclipse.jgit.transport.URIish', '<init>', '^(file):([\\\\/](?![\\\\/])((?:[A-Za-z]:)?[\\\\/]?(?:(?:[^\\\\/]+[\\\\/]+)*[^\\\\/]+[\\\\/]*)))$', 'https://l usr\\example.com@[::1]:80//')",[146994]
"('Description.java', 'org.junit.runner.Description', 'methodAndClassNamePatternGroupOrDefault', '([\\s\\S]*)\\((.*)\\)', 'testGetValidDotGitHumanishName(org.eclipse.jgit.transport.URIishTest)')","[1265, 60294]"
"('ChangeIdUtil.java', 'org.eclipse.jgit.util.ChangeIdUtil', 'indexOfChangeId', '(^Change-Id: *I[a-f0-9]{40}$)', 'does not fix it.')",[190970]
"('URIish.java', 'org.eclipse.jgit.transport.URIish', '<init>', '^(file):([\\\\/](?![\\\\/])((?:[A-Za-z]:)?[\\\\/]?(?:(?:[^\\\\/]+[\\\\/]+)*[^\\\\/]+[\\\\/]*)))$', '/~some/p ath')","[177262, 177377]"
"('URIish.java', 'org.eclipse.jgit.transport.URIish', '<init>', '^([a-z][a-z0-9+-]+)://(?:(?:([^/:@]+)(?::([^\\\\/]+))?@)?((?:[^\\\\/:]+)|(?:\\[[0-9a-f:]+\\]))(?::(\\d+))?((?:/~(?:[^\\\\/]+))?[\\\\/]))?(.+)?$', 'http://me:wtf@1.2.3.4:80//')",[128985]
"('Description.java', 'org.junit.runner.Description', 'methodAndClassNamePatternGroupOrDefault', '([\\s\\S]*)\\((.*)\\)', 'testBreakModify_BreakBelowScore(org.eclipse.jgit.diff.RenameDetectorTest)')","[12688, 71206]"
"('URIish.java', 'org.eclipse.jgit.transport.URIish', '<init>', '^(file):([\\\\/](?![\\\\/])((?:[A-Za-z]:)?[\\\\/]?(?:(?:[^\\\\/]+[\\\\/]+)*[^\\\\/]+[\\\\/]*)))$', 'https://me@example.com:1234/D:\\x')",[145108]
"('Description.java', 'org.junit.runner.Description', 'methodAndClassNamePatternGroupOrDefault', '([\\s\\S]*)\\((.*)\\)', 'org.eclipse.jgit.internal.storage.file.StoredBitmapTest')","[53406, 209678]"
"('Description.java', 'org.junit.runner.Description', 'methodAndClassNamePatternGroupOrDefault', '([\\s\\S]*)\\((.*)\\)', 'testMergeNonVersionedPaths(org.eclipse.jgit.api.MergeCommandTest)')","[43774, 101324]"
"('Description.java', 'org.junit.runner.Description', 'methodAndClassNamePatternGroupOrDefault', '([\\s\\S]*)\\((.*)\\)', 'testRemoveOnlyURI(org.eclipse.jgit.transport.RemoteConfigTest)')","[1057, 60096]"
"('URIish.java', 'org.eclipse.jgit.transport.URIish', '<init>', '^(file):([\\\\/](?![\\\\/])((?:[A-Za-z]:)?[\\\\/]?(?:(?:[^\\\\/]+[\\\\/]+)*[^\\\\/]+[\\\\/]*)))$', 'ssh://l usr\\example.com@1.2.3.4:1234/D:/x')",[136598]
"('URIish.java', 'org.eclipse.jgit.transport.URIish', '<init>', '^(file):([\\\\/](?![\\\\/])((?:[A-Za-z]:)?[\\\\/]?(?:(?:[^\\\\/]+[\\\\/]+)*[^\\\\/]+[\\\\/]*)))$', 'http://lusr\\example@[::1]:1234/D:/x')",[144694]
"('Description.java', 'org.junit.runner.Description', 'methodAndClassNamePatternGroupOrDefault', '([\\s\\S]*)\\((.*)\\)', 'testWriteEmptyPack1(org.eclipse.jgit.internal.storage.file.PackWriterTest)')","[54879, 112082]"
"('URIish.java', 'org.eclipse.jgit.transport.URIish', '<init>', '^(file):([\\\\/](?![\\\\/])((?:[A-Za-z]:)?[\\\\/]?(?:(?:[^\\\\/]+[\\\\/]+)*[^\\\\/]+[\\\\/]*)))$', 'http://lusr\\example@1.2.3.4:1234//abc')",[144280]
"('Description.java', 'org.junit.runner.Description', 'methodAndClassNamePatternGroupOrDefault', '([\\s\\S]*)\\((.*)\\)', 'testAddNonExistingSingleFile(org.eclipse.jgit.api.AddCommandTest)')","[50731, 108254]"
"('Description.java', 'org.junit.runner.Description', 'methodAndClassNamePatternGroupOrDefault', '([\\s\\S]*)\\((.*)\\)', 'testObjectInNewPack(org.eclipse.jgit.internal.storage.file.ConcurrentRepackTest)')","[55522, 112676]"
"('URIish.java', 'org.eclipse.jgit.transport.URIish', '<init>', '^(file):([\\\\/](?![\\\\/])((?:[A-Za-z]:)?[\\\\/]?(?:(?:[^\\\\/]+[\\\\/]+)*[^\\\\/]+[\\\\/]*)))$', 'https://me@[::1]/D:/x')","[159046, 159230]"
"('Description.java', 'org.junit.runner.Description', 'methodAndClassNamePatternGroupOrDefault', '([\\s\\S]*)\\((.*)\\)', 'org.eclipse.jgit.api.CherryPickCommandTest')","[47696, 207332]"
"('Description.java', 'org.junit.runner.Description', 'methodAndClassNamePatternGroupOrDefault', '([\\s\\S]*)\\((.*)\\)', 'testALL_ShouldNotBeRecursive(org.eclipse.jgit.treewalk.filter.TreeFilterTest)')","[31153, 89356]"
"('URIish.java', 'org.eclipse.jgit.transport.URIish', '<init>', '^(file):([\\\\/](?![\\\\/])((?:[A-Za-z]:)?[\\\\/]?(?:(?:[^\\\\/]+[\\\\/]+)*[^\\\\/]+[\\\\/]*)))$', 'http://l usr\\example.com:wtf@[::1]:1234/D:\\x')",[130388]
"('Description.java', 'org.junit.runner.Description', 'methodAndClassNamePatternGroupOrDefault', '([\\s\\S]*)\\((.*)\\)', 'testNotIgnoreNonExistingObjects(org.eclipse.jgit.internal.storage.file.PackWriterTest)')","[55194, 112412]"
"('URIish.java', 'org.eclipse.jgit.transport.URIish', '<init>', '^([a-z][a-z0-9+-]+)://(?:(?:([^/:@]+)(?::([^\\\\/]+))?@)?((?:[^\\\\/:]+)|(?:\\[[0-9a-f:]+\\]))(?::(\\d+))?((?:/~(?:[^\\\\/]+))?[\\\\/]))?(.+)?$', 'http://user:secret@host.xy:80/some%2Fpath')","[177837, 177883]"
"('URIish.java', 'org.eclipse.jgit.transport.URIish', '<init>', '^([a-z][a-z0-9+-]+)://(?:(?:([^/:@]+)(?::([^\\\\/]+))?@)?((?:[^\\\\/:]+)|(?:\\[[0-9a-f:]+\\]))(?::(\\d+))?((?:/~(?:[^\\\\/]+))?[\\\\/]))?(.+)?$', 'http://lusr\\example:wtf@1.2.3.4:80//')",[131193]
"('Description.java', 'org.junit.runner.Description', 'methodAndClassNamePatternGroupOrDefault', '([\\s\\S]*)\\((.*)\\)', 'logAllCommitsWithSkipAndMaxCount(org.eclipse.jgit.api.LogCommandTest)')","[47593, 105086]"
"('Description.java', 'org.junit.runner.Description', 'methodAndClassNamePatternGroupOrDefault', '([\\s\\S]*)\\((.*)\\)', 'org.eclipse.jgit.lib.SquashCommitMsgTest')","[28760, 185701]"
"('Description.java', 'org.junit.runner.Description', 'methodAndClassNamePatternGroupOrDefault', '([\\s\\S]*)\\((.*)\\)', 'testCherryPickOverExecutableChangeOnNonExectuableFileSystem(org.eclipse.jgit.api.CherryPickCommandTest)')","[47717, 105196]"
"('Description.java', 'org.junit.runner.Description', 'methodAndClassNamePatternGroupOrDefault', '([\\s\\S]*)\\((.*)\\)', 'testSpecialGroupCase5(org.eclipse.jgit.fnmatch.FileNameMatcherTest)')","[16207, 74594]"
"('URIish.java', 'org.eclipse.jgit.transport.URIish', '<init>', '^(?:([^/:@]+)(?::([^\\\\/]+))?@)?([^\\\\/:]{2,}):([\\\\/](?:(?:[^\\\\/]+[\\\\/]+)*[^\\\\/]+[\\\\/]*))$', '../tmp_1145110896699918732')",[180949]
"('URIish.java', 'org.eclipse.jgit.transport.URIish', '<init>', '^(file):([\\\\/](?![\\\\/])((?:[A-Za-z]:)?[\\\\/]?(?:(?:[^\\\\/]+[\\\\/]+)*[^\\\\/]+[\\\\/]*)))$', 'ssh+git://me@[::1]:80/D:/x')",[139358]
"('URIish.java', 'org.eclipse.jgit.transport.URIish', '<init>', '^([a-z][a-z0-9+-]+)://(?:(?:([^/:@]+)(?::([^\\\\/]+))?@)?((?:[^\\\\/:]+)|(?:\\[[0-9a-f:]+\\]))(?::(\\d+))?((?:/~(?:[^\\\\/]+))?[\\\\/]))?(.+)?$', 'file:///tmp/jgit_test_608173029420979911_tmp/tmp_6831999805564900122/.git/')",[196738]
"('Description.java', 'org.junit.runner.Description', 'methodAndClassNamePatternGroupOrDefault', '([\\s\\S]*)\\((.*)\\)', 'testNoFooters_EmptyBody(org.eclipse.jgit.revwalk.FooterLineTest)')","[6105, 65046]"
"('Description.java', 'org.junit.runner.Description', 'methodAndClassNamePatternGroupOrDefault', '([\\s\\S]*)\\((.*)\\)', 'testPathsResetToNonexistingRef(org.eclipse.jgit.api.ResetCommandTest)')","[42669, 100246]"
"('URIish.java', 'org.eclipse.jgit.transport.URIish', '<init>', '^(file):([\\\\/](?![\\\\/])((?:[A-Za-z]:)?[\\\\/]?(?:(?:[^\\\\/]+[\\\\/]+)*[^\\\\/]+[\\\\/]*)))$', '/a/b/c//')",[179401]
"('Description.java', 'org.junit.runner.Description', 'methodAndClassNamePatternGroupOrDefault', '([\\s\\S]*)\\((.*)\\)', 'testNoRenames_SymlinkAndFileSamePath(org.eclipse.jgit.diff.RenameDetectorTest)')","[13150, 71690]"
"('Description.java', 'org.junit.runner.Description', 'methodAndClassNamePatternGroupOrDefault', '([\\s\\S]*)\\((.*)\\)', 'testAdjacentModifications(org.eclipse.jgit.merge.MergeAlgorithmTest)')","[10242, 68962]"
"('Description.java', 'org.junit.runner.Description', 'methodAndClassNamePatternGroupOrDefault', '([\\s\\S]*)\\((.*)\\)', 'org.eclipse.jgit.nls.RootLocaleTest')","[139, 116206]"
"('Description.java', 'org.junit.runner.Description', 'methodAndClassNamePatternGroupOrDefault', '([\\s\\S]*)\\((.*)\\)', 'testReadLines_endLF(org.eclipse.jgit.util.ReadLinesTest)')","[32105, 90214]"
"('Description.java', 'org.junit.runner.Description', 'methodAndClassNamePatternGroupOrDefault', '([\\s\\S]*)\\((.*)\\)', 'local(org.eclipse.jgit.util.GitDateParserTest)')","[36328, 94240]"
"('URIish.java', 'org.eclipse.jgit.transport.URIish', '<init>', '^([a-z][a-z0-9+-]+)://(?:(?:([^/:@]+)(?::([^\\\\/]+))?@)?((?:[^\\\\/:]+)|(?:\\[[0-9a-f:]+\\]))(?::(\\d+))?((?:/~(?:[^\\\\/]+))?[\\\\/]))?(.+)?$', 'https://me@[::1]:1234/D:/x')",[145821]
"('Description.java', 'org.junit.runner.Description', 'methodAndClassNamePatternGroupOrDefault', '([\\s\\S]*)\\((.*)\\)', 'prefix(org.eclipse.jgit.api.NameRevCommandTest)')","[51603, 109068]"
"('Description.java', 'org.junit.runner.Description', 'methodAndClassNamePatternGroupOrDefault', '([\\s\\S]*)\\((.*)\\)', 'testBatchRefUpdateNonFastForwardDoesNotDoExpensiveMergeCheck(org.eclipse.jgit.internal.storage.file.RefDirectoryTest)')","[58186, 115228]"
"('URIish.java', 'org.eclipse.jgit.transport.URIish', '<init>', '^([a-z][a-z0-9+-]+)://(?:(?:([^/:@]+)(?::([^\\\\/]+))?@)?((?:[^\\\\/:]+)|(?:\\[[0-9a-f:]+\\]))(?::(\\d+))?((?:/~(?:[^\\\\/]+))?[\\\\/]))?(.+)?$', 'ssh+git://lusr\\example@1.2.3.4:80/D:/x')",[141221]
"('Description.java', 'org.junit.runner.Description', 'methodAndClassNamePatternGroupOrDefault', '([\\s\\S]*)\\((.*)\\)', 'test028_LockPackedRef(org.eclipse.jgit.internal.storage.file.T0003_BasicTest)')","[54154, 111422]"
"('URIish.java', 'org.eclipse.jgit.transport.URIish', '<init>', '^([\\\\/]?((?:[A-Za-z]:)?[\\\\/]?(?:(?:[^\\\\/]+[\\\\/]+)*[^\\\\/]+[\\\\/]*)))$', '/tmp/jgit_test_2763785820419085746_tmp/tmp_961093183525182339')","[204203, 204348, 204498]"
"('URIish.java', 'org.eclipse.jgit.transport.URIish', '<init>', '^(file):([\\\\/](?![\\\\/])((?:[A-Za-z]:)?[\\\\/]?(?:(?:[^\\\\/]+[\\\\/]+)*[^\\\\/]+[\\\\/]*)))$', 'https://l usr\\example.com:wtf@1.2.3.4:1234/D:\\x')",[133332]
"('Description.java', 'org.junit.runner.Description', 'methodAndClassNamePatternGroupOrDefault', '([\\s\\S]*)\\((.*)\\)', 'testMaliciousGitPathEndSpaceUnixOk(org.eclipse.jgit.lib.DirCacheCheckoutMaliciousPathTest)')","[21559, 79962]"
"('URIish.java', 'org.eclipse.jgit.transport.URIish', '<init>', '^(file):([\\\\/](?![\\\\/])((?:[A-Za-z]:)?[\\\\/]?(?:(?:[^\\\\/]+[\\\\/]+)*[^\\\\/]+[\\\\/]*)))$', '/abc.git/')",[175537]
"('Description.java', 'org.junit.runner.Description', 'methodAndClassNamePatternGroupOrDefault', '([\\s\\S]*)\\((.*)\\)', 'annotatedTag_objectNotPruned(org.eclipse.jgit.internal.storage.file.GcTagTest)')","[57539, 114590]"
"('Description.java', 'org.junit.runner.Description', 'methodAndClassNamePatternGroupOrDefault', '([\\s\\S]*)\\((.*)\\)', 'repositoryWithNoSubmodules(org.eclipse.jgit.submodule.SubmoduleWalkTest)')","[19895, 78378]"
"('Description.java', 'org.junit.runner.Description', 'methodAndClassNamePatternGroupOrDefault', '([\\s\\S]*)\\((.*)\\)', 'multipleEdits(org.eclipse.jgit.api.StashApplyCommandTest)')","[51185, 108650]"
"('URIish.java', 'org.eclipse.jgit.transport.URIish', '<init>', '^(file):([\\\\/](?![\\\\/])((?:[A-Za-z]:)?[\\\\/]?(?:(?:[^\\\\/]+[\\\\/]+)*[^\\\\/]+[\\\\/]*)))$', 'ssh://me@[::1]:80//')",[135954]
"('URIish.java', 'org.eclipse.jgit.transport.URIish', '<init>', '^([a-z][a-z0-9+-]+)://(?:(?:([^/:@]+)(?::([^\\\\/]+))?@)?((?:[^\\\\/:]+)|(?:\\[[0-9a-f:]+\\]))(?::(\\d+))?((?:/~(?:[^\\\\/]+))?[\\\\/]))?(.+)?$', 'git://example.com/D:/m y')","[179240, 179286]"
"('Description.java', 'org.junit.runner.Description', 'methodAndClassNamePatternGroupOrDefault', '([\\s\\S]*)\\((.*)\\)', 'test3_FromString(org.eclipse.jgit.lib.AbbreviatedObjectIdTest)')","[22559, 80930]"
"('Description.java', 'org.junit.runner.Description', 'methodAndClassNamePatternGroupOrDefault', '([\\s\\S]*)\\((.*)\\)', 'testUnannotatedTagging(org.eclipse.jgit.api.TagCommandTest)')","[41713, 99344]"
"('URIish.java', 'org.eclipse.jgit.transport.URIish', '<init>', '^([a-z][a-z0-9+-]+)://(?:(?:([^/:@]+)(?::([^\\\\/]+))?@)?((?:[^\\\\/:]+)|(?:\\[[0-9a-f:]+\\]))(?::(\\d+))?((?:/~(?:[^\\\\/]+))?[\\\\/]))?(.+)?$', 'ssh+git://me@[::1]:1234//')",[139105]
"('URIish.java', 'org.eclipse.jgit.transport.URIish', '<init>', '^(file):([\\\\/](?![\\\\/])((?:[A-Za-z]:)?[\\\\/]?(?:(?:[^\\\\/]+[\\\\/]+)*[^\\\\/]+[\\\\/]*)))$', 'https://me@1.2.3.4:80//')",[145522]
"('URIish.java', 'org.eclipse.jgit.transport.URIish', '<init>', '^(?:([^/:@]+)(?::([^\\\\/]+))?@)?([^\\\\/:]{2,}):([\\\\/](?:(?:[^\\\\/]+[\\\\/]+)*[^\\\\/]+[\\\\/]*))$', '/tmp/jgit_test_1888401002986800567_tmp/tmp_1326242475311810481.git')",[116708]
"('URIish.java', 'org.eclipse.jgit.transport.URIish', '<init>', '^(?:([^/:@]+)(?::([^\\\\/]+))?@)?([^\\\\/:]{2,}):([\\\\/](?:(?:[^\\\\/]+[\\\\/]+)*[^\\\\/]+[\\\\/]*))$', '/more/dirs')","[117861, 118561, 120149]"
"('URIish.java', 'org.eclipse.jgit.transport.URIish', '<init>', '^([a-z][a-z0-9+-]+)://(?:(?:([^/:@]+)(?::([^\\\\/]+))?@)?((?:[^\\\\/:]+)|(?:\\[[0-9a-f:]+\\]))(?::(\\d+))?((?:/~(?:[^\\\\/]+))?[\\\\/]))?(.+)?$', '/some/dir')","[117573, 117983, 118153, 118273, 118708, 118928, 119048, 119270, 119493, 119616, 119861, 120271, 120391, 120836]"
"('Description.java', 'org.junit.runner.Description', 'methodAndClassNamePatternGroupOrDefault', '([\\s\\S]*)\\((.*)\\)', 'testOneEntry_Forward(org.eclipse.jgit.treewalk.CanonicalTreeParserTest)')","[29941, 88146]"
"('URIish.java', 'org.eclipse.jgit.transport.URIish', '<init>', '^([a-z][a-z0-9+-]+)://(?:(?:([^/:@]+)(?::([^\\\\/]+))?@)?((?:[^\\\\/:]+)|(?:\\[[0-9a-f:]+\\]))(?::(\\d+))?((?:/~(?:[^\\\\/]+))?[\\\\/]))?(.+)?$', 'ssh+git://lusr\\example@[::1]:1234//abc')",[141359]
"('Description.java', 'org.junit.runner.Description', 'methodAndClassNamePatternGroupOrDefault', '([\\s\\S]*)\\((.*)\\)', 'testContainsEmpty(org.eclipse.jgit.internal.storage.file.InflatingBitSetTest)')","[54797, 112016]"
"('Description.java', 'org.junit.runner.Description', 'methodAndClassNamePatternGroupOrDefault', '([\\s\\S]*)\\((.*)\\)', 'org.eclipse.jgit.internal.storage.file.RepositorySetupWorkDirTest')","[56917, 210191]"
"('URIish.java', 'org.eclipse.jgit.transport.URIish', '<init>', '^([a-z][a-z0-9+-]+)://(?:(?:([^/:@]+)(?::([^\\\\/]+))?@)?((?:[^\\\\/:]+)|(?:\\[[0-9a-f:]+\\]))(?::(\\d+))?((?:/~(?:[^\\\\/]+))?[\\\\/]))?(.+)?$', 'ssh+git://example.com//')","[164865, 165049, 165969, 166153, 167073, 167257]"
"('Description.java', 'org.junit.runner.Description', 'methodAndClassNamePatternGroupOrDefault', '([\\s\\S]*)\\((.*)\\)', 'test8_FromString(org.eclipse.jgit.lib.AbbreviatedObjectIdTest)')","[22706, 81084]"
"('Description.java', 'org.junit.runner.Description', 'methodAndClassNamePatternGroupOrDefault', '([\\s\\S]*)\\((.*)\\)', 'testFileInFolderAllIgnored(org.eclipse.jgit.treewalk.filter.IndexDiffFilterTest)')","[30695, 88916]"
"('URIish.java', 'org.eclipse.jgit.transport.URIish', '<init>', '^([a-z][a-z0-9+-]+)://(?:(?:([^/:@]+)(?::([^\\\\/]+))?@)?((?:[^\\\\/:]+)|(?:\\[[0-9a-f:]+\\]))(?::(\\d+))?((?:/~(?:[^\\\\/]+))?[\\\\/]))?(.+)?$', 'ssh+git://me@example.com:1234/D:\\x')",[138507]
"('Description.java', 'org.junit.runner.Description', 'methodAndClassNamePatternGroupOrDefault', '([\\s\\S]*)\\((.*)\\)', 'test4_FromString(org.eclipse.jgit.lib.AbbreviatedObjectIdTest)')","[22580, 80952]"
"('Description.java', 'org.junit.runner.Description', 'methodAndClassNamePatternGroupOrDefault', '([\\s\\S]*)\\((.*)\\)', 'testSpecialGroupCase7(org.eclipse.jgit.fnmatch.FileNameMatcherTest)')","[16249, 74638]"
"('Description.java', 'org.junit.runner.Description', 'methodAndClassNamePatternGroupOrDefault', '([\\s\\S]*)\\((.*)\\)', 'testSort_COMMIT_TIME_DESC_OutOfOrder1(org.eclipse.jgit.revwalk.RevWalkSortTest)')","[9139, 67906]"
"('Description.java', 'org.junit.runner.Description', 'methodAndClassNamePatternGroupOrDefault', '([\\s\\S]*)\\((.*)\\)', 'testIsId(org.eclipse.jgit.lib.AbbreviatedObjectIdTest)')","[22307, 80666]"
"('Description.java', 'org.junit.runner.Description', 'methodAndClassNamePatternGroupOrDefault', '([\\s\\S]*)\\((.*)\\)', 'singlePushInsteadOf(org.eclipse.jgit.transport.RemoteConfigTest)')","[805, 59832]"
"('Description.java', 'org.junit.runner.Description', 'methodAndClassNamePatternGroupOrDefault', '([\\s\\S]*)\\((.*)\\)', 'testTrivialTwoWay_leftDFconflict2(org.eclipse.jgit.merge.SimpleMergeTest)')","[9866, 68588]"
"('URIish.java', 'org.eclipse.jgit.transport.URIish', '<init>', '^([a-z][a-z0-9+-]+)://(?:(?:([^/:@]+)(?::([^\\\\/]+))?@)?((?:[^\\\\/:]+)|(?:\\[[0-9a-f:]+\\]))(?::(\\d+))?((?:/~(?:[^\\\\/]+))?[\\\\/]))?(.+)?$', 'https://lusr\\example@example.com:1234/D:\\x')",[147339]
"('Description.java', 'org.junit.runner.Description', 'methodAndClassNamePatternGroupOrDefault', '([\\s\\S]*)\\((.*)\\)', 'resolveOneLevelHigherRelativeUrl(org.eclipse.jgit.submodule.SubmoduleInitTest)')","[19460, 77982]"
"('Description.java', 'org.junit.runner.Description', 'methodAndClassNamePatternGroupOrDefault', '([\\s\\S]*)\\((.*)\\)', 'testAdded(org.eclipse.jgit.lib.IndexDiffTest)')","[20597, 78994]"
"('Description.java', 'org.junit.runner.Description', 'methodAndClassNamePatternGroupOrDefault', '([\\s\\S]*)\\((.*)\\)', 'null')",[17]
"('URIish.java', 'org.eclipse.jgit.transport.URIish', '<init>', '^([a-z][a-z0-9+-]+)://(?:(?:([^/:@]+)(?::([^\\\\/]+))?@)?((?:[^\\\\/:]+)|(?:\\[[0-9a-f:]+\\]))(?::(\\d+))?((?:/~(?:[^\\\\/]+))?[\\\\/]))?(.+)?$', 'D:\\m y')","[176917, 177032]"
"('URIish.java', 'org.eclipse.jgit.transport.URIish', '<init>', '^(file):([\\\\/](?![\\\\/])((?:[A-Za-z]:)?[\\\\/]?(?:(?:[^\\\\/]+[\\\\/]+)*[^\\\\/]+[\\\\/]*)))$', 'https://lusr\\example:wtf@example.com:1234/D:/x')",[134022]
"('Description.java', 'org.junit.runner.Description', 'methodAndClassNamePatternGroupOrDefault', '([\\s\\S]*)\\((.*)\\)', 'testGetFastForwardMerge(org.eclipse.jgit.lib.ConfigTest)')","[27798, 86100]"
"('Description.java', 'org.junit.runner.Description', 'methodAndClassNamePatternGroupOrDefault', '([\\s\\S]*)\\((.*)\\)', 'testEqualsWithoutWhitespace(org.eclipse.jgit.diff.RawTextIgnoreLeadingWhitespaceTest)')","[15039, 73450]"
"('Description.java', 'org.junit.runner.Description', 'methodAndClassNamePatternGroupOrDefault', '([\\s\\S]*)\\((.*)\\)', 'org.eclipse.jgit.api.CheckoutCommandTest')","[42959, 201840]"
"('URIish.java', 'org.eclipse.jgit.transport.URIish', '<init>', '^(file):([\\\\/](?![\\\\/])((?:[A-Za-z]:)?[\\\\/]?(?:(?:[^\\\\/]+[\\\\/]+)*[^\\\\/]+[\\\\/]*)))$', 'ssh://lusr\\example@example.com:1234/D:\\x')",[137380]
"('Description.java', 'org.junit.runner.Description', 'methodAndClassNamePatternGroupOrDefault', '([\\s\\S]*)\\((.*)\\)', 'testReadLines_endCRLF(org.eclipse.jgit.util.ReadLinesTest)')","[32063, 90170]"
"('Description.java', 'org.junit.runner.Description', 'methodAndClassNamePatternGroupOrDefault', '([\\s\\S]*)\\((.*)\\)', 'testRecursiveFiltering(org.eclipse.jgit.treewalk.filter.PathSuffixFilterTest)')","[30966, 89180]"
"('URIish.java', 'org.eclipse.jgit.transport.URIish', '<init>', '^(?:([^/:@]+)(?::([^\\\\/]+))?@)?([^\\\\/:]{2,}):([\\\\/](?:(?:[^\\\\/]+[\\\\/]+)*[^\\\\/]+[\\\\/]*))$', '/tmp/jgit_test_936098334176453163_tmp/tmp_2532274317419163208/.git')","[205955, 206101]"
"('Description.java', 'org.junit.runner.Description', 'methodAndClassNamePatternGroupOrDefault', '([\\s\\S]*)\\((.*)\\)', 'org.eclipse.jgit.api.StashCreateCommandTest')","[41732, 194474]"
"('Description.java', 'org.junit.runner.Description', 'methodAndClassNamePatternGroupOrDefault', '([\\s\\S]*)\\((.*)\\)', 'testCompareEntriesOffsetsWithGetOffsets(org.eclipse.jgit.internal.storage.file.PackIndexV1Test)')","[54509, 111774]"
"('Description.java', 'org.junit.runner.Description', 'methodAndClassNamePatternGroupOrDefault', '([\\s\\S]*)\\((.*)\\)', 'org.eclipse.jgit.revwalk.RevObjectTest')","[8471, 181649]"
"('URIish.java', 'org.eclipse.jgit.transport.URIish', '<init>', '^([a-z][a-z0-9+-]+)://(?:(?:([^/:@]+)(?::([^\\\\/]+))?@)?((?:[^\\\\/:]+)|(?:\\[[0-9a-f:]+\\]))(?::(\\d+))?((?:/~(?:[^\\\\/]+))?[\\\\/]))?(.+)?$', 'ssh+git://lusr\\example@1.2.3.4//abc')","[154239, 154423]"
"('Description.java', 'org.junit.runner.Description', 'methodAndClassNamePatternGroupOrDefault', '([\\s\\S]*)\\((.*)\\)', 'workingDirectoryDelete(org.eclipse.jgit.api.StashApplyCommandTest)')","[51395, 108870]"
"('URIish.java', 'org.eclipse.jgit.transport.URIish', '<init>', '^(file):([\\\\/](?![\\\\/])((?:[A-Za-z]:)?[\\\\/]?(?:(?:[^\\\\/]+[\\\\/]+)*[^\\\\/]+[\\\\/]*)))$', 'ssh://me:wtf@example.com:1234//abc')",[121832]
"('URIish.java', 'org.eclipse.jgit.transport.URIish', '<init>', '^([a-z][a-z0-9+-]+)://(?:(?:([^/:@]+)(?::([^\\\\/]+))?@)?((?:[^\\\\/:]+)|(?:\\[[0-9a-f:]+\\]))(?::(\\d+))?((?:/~(?:[^\\\\/]+))?[\\\\/]))?(.+)?$', 'http://l usr\\example.com@1.2.3.4:80//')",[143337]
"('URIish.java', 'org.eclipse.jgit.transport.URIish', '<init>', '^(file):([\\\\/](?![\\\\/])((?:[A-Za-z]:)?[\\\\/]?(?:(?:[^\\\\/]+[\\\\/]+)*[^\\\\/]+[\\\\/]*)))$', 'ssh+git://me@[::1]:1234//')",[139082]
"('Description.java', 'org.junit.runner.Description', 'methodAndClassNamePatternGroupOrDefault', '([\\s\\S]*)\\((.*)\\)', 'test005_addRecursiveFile(org.eclipse.jgit.lib.T0002_TreeTest)')","[24828, 83108]"
"('URIish.java', 'org.eclipse.jgit.transport.URIish', '<init>', '^([a-z][a-z0-9+-]+)://(?:(?:([^/:@]+)(?::([^\\\\/]+))?@)?((?:[^\\\\/:]+)|(?:\\[[0-9a-f:]+\\]))(?::(\\d+))?((?:/~(?:[^\\\\/]+))?[\\\\/]))?(.+)?$', 'ssh://lusr\\example:wtf@[::1]:80/D:/x')",[125029]
"('URIish.java', 'org.eclipse.jgit.transport.URIish', '<init>', '^(file):([\\\\/](?![\\\\/])((?:[A-Za-z]:)?[\\\\/]?(?:(?:[^\\\\/]+[\\\\/]+)*[^\\\\/]+[\\\\/]*)))$', 'ssh://me:wtf@1.2.3.4:1234//abc')",[122200]
"('URIish.java', 'org.eclipse.jgit.transport.URIish', '<init>', '^(file):([\\\\/](?![\\\\/])((?:[A-Za-z]:)?[\\\\/]?(?:(?:[^\\\\/]+[\\\\/]+)*[^\\\\/]+[\\\\/]*)))$', 'ssh+git://lusr\\example@[::1]/D:\\x')","[154676, 154860]"
"('Description.java', 'org.junit.runner.Description', 'methodAndClassNamePatternGroupOrDefault', '([\\s\\S]*)\\((.*)\\)', 'testReadACK_Invalid1(org.eclipse.jgit.transport.PacketLineInTest)')","[3632, 62714]"
"('Description.java', 'org.junit.runner.Description', 'methodAndClassNamePatternGroupOrDefault', '([\\s\\S]*)\\((.*)\\)', 'testFileUntracked(org.eclipse.jgit.treewalk.filter.IndexDiffFilterTest)')","[30905, 89136]"
"('URIish.java', 'org.eclipse.jgit.transport.URIish', '<init>', '^(file):([\\\\/](?![\\\\/])((?:[A-Za-z]:)?[\\\\/]?(?:(?:[^\\\\/]+[\\\\/]+)*[^\\\\/]+[\\\\/]*)))$', 'http://me@1.2.3.4:1234/D:/x')",[142118]
"('Description.java', 'org.junit.runner.Description', 'methodAndClassNamePatternGroupOrDefault', '([\\s\\S]*)\\((.*)\\)', 'testNoRenames_GitlinkAndFile(org.eclipse.jgit.diff.RenameDetectorTest)')","[13108, 71646]"
"('Description.java', 'org.junit.runner.Description', 'methodAndClassNamePatternGroupOrDefault', '([\\s\\S]*)\\((.*)\\)', 'testUpdateRefLockFailureWrongOldValue(org.eclipse.jgit.internal.storage.file.RefUpdateTest)')","[56024, 113182]"
"('Description.java', 'org.junit.runner.Description', 'methodAndClassNamePatternGroupOrDefault', '([\\s\\S]*)\\((.*)\\)', 'testParse_GitBinaryDelta(org.eclipse.jgit.patch.PatchTest)')","[39738, 97474]"
"('Description.java', 'org.junit.runner.Description', 'methodAndClassNamePatternGroupOrDefault', '([\\s\\S]*)\\((.*)\\)', 'org.eclipse.jgit.revplot.PlotCommitListTest')","[40026, 193690]"
"('ChangeIdUtil.java', 'org.eclipse.jgit.util.ChangeIdUtil', 'insertId', '^(Bug|Issue)[a-zA-Z0-9-]*:.*$', 'Issue: 42')",[188954]
"('Description.java', 'org.junit.runner.Description', 'methodAndClassNamePatternGroupOrDefault', '([\\s\\S]*)\\((.*)\\)', 'testRenameBranchNoPreviousLog(org.eclipse.jgit.internal.storage.file.RefUpdateTest)')","[56318, 113490]"
"('URIish.java', 'org.eclipse.jgit.transport.URIish', '<init>', '^(file):([\\\\/](?![\\\\/])((?:[A-Za-z]:)?[\\\\/]?(?:(?:[^\\\\/]+[\\\\/]+)*[^\\\\/]+[\\\\/]*)))$', 'https://me@1.2.3.4:80/D:/x')",[145614]
"('Description.java', 'org.junit.runner.Description', 'methodAndClassNamePatternGroupOrDefault', '([\\s\\S]*)\\((.*)\\)', 'testApplyStashWithDeletedFile(org.eclipse.jgit.api.StashApplyCommandTest)')","[51500, 108980]"
"('Description.java', 'org.junit.runner.Description', 'methodAndClassNamePatternGroupOrDefault', '([\\s\\S]*)\\((.*)\\)', 'testAdd_SmallGroup(org.eclipse.jgit.util.IntListTest)')","[36141, 94064]"
"('Description.java', 'org.junit.runner.Description', 'methodAndClassNamePatternGroupOrDefault', '([\\s\\S]*)\\((.*)\\)', 'testPathEditShouldBeCalledForEachStage(org.eclipse.jgit.dircache.DirCachePathEditTest)')","[11818, 70414]"
"('Description.java', 'org.junit.runner.Description', 'methodAndClassNamePatternGroupOrDefault', '([\\s\\S]*)\\((.*)\\)', 'testFilter_NONE_Or_MY_ALL(org.eclipse.jgit.revwalk.RevWalkFilterTest)')","[8326, 67114]"
"('URIish.java', 'org.eclipse.jgit.transport.URIish', '<init>', '^(file):([\\\\/](?![\\\\/])((?:[A-Za-z]:)?[\\\\/]?(?:(?:[^\\\\/]+[\\\\/]+)*[^\\\\/]+[\\\\/]*)))$', 'http://lusr\\example@example.com:1234//')",[143866]
"('URIish.java', 'org.eclipse.jgit.transport.URIish', '<init>', '^(file):([\\\\/](?![\\\\/])((?:[A-Za-z]:)?[\\\\/]?(?:(?:[^\\\\/]+[\\\\/]+)*[^\\\\/]+[\\\\/]*)))$', 'https://me@example.com:1234//abc')",[145016]
"('Description.java', 'org.junit.runner.Description', 'methodAndClassNamePatternGroupOrDefault', '([\\s\\S]*)\\((.*)\\)', 'testUpdateDeleteNonExisting(org.eclipse.jgit.transport.PushProcessTest)')","[4985, 64012]"
"('Description.java', 'org.junit.runner.Description', 'methodAndClassNamePatternGroupOrDefault', '([\\s\\S]*)\\((.*)\\)', 'testGetRefs_DiscoversDeletedLoose1(org.eclipse.jgit.internal.storage.file.RefDirectoryTest)')","[58627, 115690]"
"('Description.java', 'org.junit.runner.Description', 'methodAndClassNamePatternGroupOrDefault', '([\\s\\S]*)\\((.*)\\)', 'testExceptionThrown_BareRepoGetWorkDir(org.eclipse.jgit.internal.storage.file.RepositorySetupWorkDirTest)')","[56980, 114084]"
"('Description.java', 'org.junit.runner.Description', 'methodAndClassNamePatternGroupOrDefault', '([\\s\\S]*)\\((.*)\\)', 'testDetectUnmergedPaths(org.eclipse.jgit.dircache.DirCacheBasicTest)')","[11259, 69908]"
"('URIish.java', 'org.eclipse.jgit.transport.URIish', '<init>', '^([a-z][a-z0-9+-]+)://(?:(?:([^/:@]+)(?::([^\\\\/]+))?@)?((?:[^\\\\/:]+)|(?:\\[[0-9a-f:]+\\]))(?::(\\d+))?((?:/~(?:[^\\\\/]+))?[\\\\/]))?(.+)?$', 'https://lusr\\example@example.com:80/D:/x')",[147477]
"('Description.java', 'org.junit.runner.Description', 'methodAndClassNamePatternGroupOrDefault', '([\\s\\S]*)\\((.*)\\)', 'org.eclipse.jgit.internal.storage.file.GcKeepFilesTest')","[55276, 209948]"
"('Description.java', 'org.junit.runner.Description', 'methodAndClassNamePatternGroupOrDefault', '([\\s\\S]*)\\((.*)\\)', 'invalidWhenDestinationOnlyAndWildcard(org.eclipse.jgit.transport.RefSpecTest)')","[3172, 62252]"
"('Description.java', 'org.junit.runner.Description', 'methodAndClassNamePatternGroupOrDefault', '([\\s\\S]*)\\((.*)\\)', 'testGetRefs_DeatchedHead2(org.eclipse.jgit.internal.storage.file.RefDirectoryTest)')","[58249, 115294]"
"('Description.java', 'org.junit.runner.Description', 'methodAndClassNamePatternGroupOrDefault', '([\\s\\S]*)\\((.*)\\)', 'testRenameOverExistingNonEmptyDirectory(org.eclipse.jgit.util.FileUtilTest)')","[33721, 91688]"
"('Description.java', 'org.junit.runner.Description', 'methodAndClassNamePatternGroupOrDefault', '([\\s\\S]*)\\((.*)\\)', 'shortWithSlash(org.eclipse.jgit.util.GitDateParserTest)')","[36412, 94328]"
"('URIish.java', 'org.eclipse.jgit.transport.URIish', '<init>', '^(file):([\\\\/](?![\\\\/])((?:[A-Za-z]:)?[\\\\/]?(?:(?:[^\\\\/]+[\\\\/]+)*[^\\\\/]+[\\\\/]*)))$', 'ssh://lusr\\example@[::1]:1234/D:\\x')",[138116]
"('Description.java', 'org.junit.runner.Description', 'methodAndClassNamePatternGroupOrDefault', '([\\s\\S]*)\\((.*)\\)', 'testNoPostOrder(org.eclipse.jgit.treewalk.PostOrderTreeWalkTest)')","[29485, 87728]"
"('Description.java', 'org.junit.runner.Description', 'methodAndClassNamePatternGroupOrDefault', '([\\s\\S]*)\\((.*)\\)', 'testExtendA(org.eclipse.jgit.diff.EditTest)')","[15789, 74176]"
"('Description.java', 'org.junit.runner.Description', 'methodAndClassNamePatternGroupOrDefault', '([\\s\\S]*)\\((.*)\\)', 'testDegenerate_ReplaceMiddle(org.eclipse.jgit.diff.HistogramDiffTest)')","[15604, 74022]"
"('URIish.java', 'org.eclipse.jgit.transport.URIish', '<init>', '^(?:([^/:@]+)(?::([^\\\\/]+))?@)?([^\\\\/:]{2,}):([\\\\/](?:(?:[^\\\\/]+[\\\\/]+)*[^\\\\/]+[\\\\/]*))$', '/a/b/c//')",[179470]
"('URIish.java', 'org.eclipse.jgit.transport.URIish', '<init>', '^(file):([\\\\/](?![\\\\/])((?:[A-Za-z]:)?[\\\\/]?(?:(?:[^\\\\/]+[\\\\/]+)*[^\\\\/]+[\\\\/]*)))$', 'ssh+git://me:wtf@1.2.3.4:1234//')",[125466]
"('URIish.java', 'org.eclipse.jgit.transport.URIish', '<init>', '^([a-z][a-z0-9+-]+)://(?:(?:([^/:@]+)(?::([^\\\\/]+))?@)?((?:[^\\\\/:]+)|(?:\\[[0-9a-f:]+\\]))(?::(\\d+))?((?:/~(?:[^\\\\/]+))?[\\\\/]))?(.+)?$', 'ssh+git://me@1.2.3.4//')","[151985, 152169]"
"('URIish.java', 'org.eclipse.jgit.transport.URIish', '<init>', '^([a-z][a-z0-9+-]+)://(?:(?:([^/:@]+)(?::([^\\\\/]+))?@)?((?:[^\\\\/:]+)|(?:\\[[0-9a-f:]+\\]))(?::(\\d+))?((?:/~(?:[^\\\\/]+))?[\\\\/]))?(.+)?$', 'http://lusr\\example@1.2.3.4:1234/D:/x')",[144349]
"('Description.java', 'org.junit.runner.Description', 'methodAndClassNamePatternGroupOrDefault', '([\\s\\S]*)\\((.*)\\)', 'testRenameBranchCannotLockAFileHEADisOtherLockFrom(org.eclipse.jgit.internal.storage.file.RefUpdateTest)')","[55751, 112896]"
"('Description.java', 'org.junit.runner.Description', 'methodAndClassNamePatternGroupOrDefault', '([\\s\\S]*)\\((.*)\\)', 'testNoOutputStreamSet(org.eclipse.jgit.api.DiffCommandTest)')","[48299, 105746]"
"('URIish.java', 'org.eclipse.jgit.transport.URIish', '<init>', '^([a-z][a-z0-9+-]+)://(?:(?:([^/:@]+)(?::([^\\\\/]+))?@)?((?:[^\\\\/:]+)|(?:\\[[0-9a-f:]+\\]))(?::(\\d+))?((?:/~(?:[^\\\\/]+))?[\\\\/]))?(.+)?$', 'file:///tmp/jgit_test_2872617124669872445_tmp/tmp_89294256309986088/.git/')",[183116]
"('URIish.java', 'org.eclipse.jgit.transport.URIish', '<init>', '^(file):([\\\\/](?![\\\\/])((?:[A-Za-z]:)?[\\\\/]?(?:(?:[^\\\\/]+[\\\\/]+)*[^\\\\/]+[\\\\/]*)))$', 'file:///tmp/jgit_test_4031722836001841787_tmp/tmp_7740532634509356766')","[193996, 194053, 194113]"
"('URIish.java', 'org.eclipse.jgit.transport.URIish', '<init>', '^(file):([\\\\/](?![\\\\/])((?:[A-Za-z]:)?[\\\\/]?(?:(?:[^\\\\/]+[\\\\/]+)*[^\\\\/]+[\\\\/]*)))$', 'ssh://DOMAIN\\user:pass@example.com:33/some/p ath%20')","[178642, 178688]"
"('URIish.java', 'org.eclipse.jgit.transport.URIish', '<init>', '^([a-z][a-z0-9+-]+)://(?:(?:([^/:@]+)(?::([^\\\\/]+))?@)?((?:[^\\\\/:]+)|(?:\\[[0-9a-f:]+\\]))(?::(\\d+))?((?:/~(?:[^\\\\/]+))?[\\\\/]))?(.+)?$', 'https://me@example.com/D:/x')","[158333, 158517]"
"('Description.java', 'org.junit.runner.Description', 'methodAndClassNamePatternGroupOrDefault', '([\\s\\S]*)\\((.*)\\)', 'org.eclipse.jgit.submodule.SubmoduleSyncTest')","[19624, 183231]"
"('URIish.java', 'org.eclipse.jgit.transport.URIish', '<init>', '^(file):([\\\\/](?![\\\\/])((?:[A-Za-z]:)?[\\\\/]?(?:(?:[^\\\\/]+[\\\\/]+)*[^\\\\/]+[\\\\/]*)))$', 'http://l usr\\example.com@1.2.3.4:80/D:/x')",[143406]
"('Description.java', 'org.junit.runner.Description', 'methodAndClassNamePatternGroupOrDefault', '([\\s\\S]*)\\((.*)\\)', 'testBackwords_Prebuilts2(org.eclipse.jgit.treewalk.CanonicalTreeParserTest)')","[29857, 88058]"
"('Description.java', 'org.junit.runner.Description', 'methodAndClassNamePatternGroupOrDefault', '([\\s\\S]*)\\((.*)\\)', 'testVerySimpleStarCase0(org.eclipse.jgit.fnmatch.FileNameMatcherTest)')","[18622, 77124]"
"('Description.java', 'org.junit.runner.Description', 'methodAndClassNamePatternGroupOrDefault', '([\\s\\S]*)\\((.*)\\)', 'testPullFastForward(org.eclipse.jgit.api.PullCommandTest)')","[46448, 103986]"
"('URIish.java', 'org.eclipse.jgit.transport.URIish', '<init>', '^([a-z][a-z0-9+-]+)://(?:(?:([^/:@]+)(?::([^\\\\/]+))?@)?((?:[^\\\\/:]+)|(?:\\[[0-9a-f:]+\\]))(?::(\\d+))?((?:/~(?:[^\\\\/]+))?[\\\\/]))?(.+)?$', 'https://l usr\\example.com@1.2.3.4:80/D:/x')",[146741]
"('ChangeIdUtil.java', 'org.eclipse.jgit.util.ChangeIdUtil', 'insertId', '^(Bug|Issue)[a-zA-Z0-9-]*:.*$', ' ')","[189336, 191981]"
"('URIish.java', 'org.eclipse.jgit.transport.URIish', '<init>', '^([a-z][a-z0-9+-]+)://(?:(?:([^/:@]+)(?::([^\\\\/]+))?@)?((?:[^\\\\/:]+)|(?:\\[[0-9a-f:]+\\]))(?::(\\d+))?((?:/~(?:[^\\\\/]+))?[\\\\/]))?(.+)?$', 'http://me@1.2.3.4:80//abc')",[142279]
"('Description.java', 'org.junit.runner.Description', 'methodAndClassNamePatternGroupOrDefault', '([\\s\\S]*)\\((.*)\\)', 'testInCoreLimit_SwitchOnCopy(org.eclipse.jgit.util.TemporaryBufferTest)')","[34452, 92414]"
"('Description.java', 'org.junit.runner.Description', 'methodAndClassNamePatternGroupOrDefault', '([\\s\\S]*)\\((.*)\\)', 'testError_TruncatedNew(org.eclipse.jgit.patch.PatchErrorTest)')","[39072, 96836]"
"('URIish.java', 'org.eclipse.jgit.transport.URIish', '<init>', '^([a-z][a-z0-9+-]+)://(?:(?:([^/:@]+)(?::([^\\\\/]+))?@)?((?:[^\\\\/:]+)|(?:\\[[0-9a-f:]+\\]))(?::(\\d+))?((?:/~(?:[^\\\\/]+))?[\\\\/]))?(.+)?$', 'https://lusr\\example:wtf@1.2.3.4:1234//abc')",[134367]
"('Description.java', 'org.junit.runner.Description', 'methodAndClassNamePatternGroupOrDefault', '([\\s\\S]*)\\((.*)\\)', 'testInvalidCommitInvalidCommitter(org.eclipse.jgit.lib.ObjectCheckerTest)')","[26567, 84890]"
"('URIish.java', 'org.eclipse.jgit.transport.URIish', '<init>', '^(file):([\\\\/](?![\\\\/])((?:[A-Za-z]:)?[\\\\/]?(?:(?:[^\\\\/]+[\\\\/]+)*[^\\\\/]+[\\\\/]*)))$', 'https://me@1.2.3.4/D:/x')","[158678, 158862]"
"('URIish.java', 'org.eclipse.jgit.transport.URIish', '<init>', '^([a-z][a-z0-9+-]+)://(?:(?:([^/:@]+)(?::([^\\\\/]+))?@)?((?:[^\\\\/:]+)|(?:\\[[0-9a-f:]+\\]))(?::(\\d+))?((?:/~(?:[^\\\\/]+))?[\\\\/]))?(.+)?$', 'ssh+git://me:wtf@1.2.3.4:80/D:/x')",[125765]
"('URIish.java', 'org.eclipse.jgit.transport.URIish', '<init>', '^(file):([\\\\/](?![\\\\/])((?:[A-Za-z]:)?[\\\\/]?(?:(?:[^\\\\/]+[\\\\/]+)*[^\\\\/]+[\\\\/]*)))$', 'ssh+git://l usr\\example.com@[::1]:1234//')",[140186]
"('URIish.java', 'org.eclipse.jgit.transport.URIish', '<init>', '^([a-z][a-z0-9+-]+)://(?:(?:([^/:@]+)(?::([^\\\\/]+))?@)?((?:[^\\\\/:]+)|(?:\\[[0-9a-f:]+\\]))(?::(\\d+))?((?:/~(?:[^\\\\/]+))?[\\\\/]))?(.+)?$', 'file:///tmp/jgit_test_8851555999307633575_tmp/tmp_5342131996725035508')","[193850, 193912, 193970]"
"('URIish.java', 'org.eclipse.jgit.transport.URIish', '<init>', '^(file):([\\\\/](?![\\\\/])((?:[A-Za-z]:)?[\\\\/]?(?:(?:[^\\\\/]+[\\\\/]+)*[^\\\\/]+[\\\\/]*)))$', 'file:/tmp/jgit_test_6443982766099715589_tmp/tmp_4105089330516958600/.git/')","[197547, 197755]"
"('URIish.java', 'org.eclipse.jgit.transport.URIish', '<init>', '^([a-z][a-z0-9+-]+)://(?:(?:([^/:@]+)(?::([^\\\\/]+))?@)?((?:[^\\\\/:]+)|(?:\\[[0-9a-f:]+\\]))(?::(\\d+))?((?:/~(?:[^\\\\/]+))?[\\\\/]))?(.+)?$', 'http://l usr\\example.com@[::1]//')","[156769, 156953]"
"('Description.java', 'org.junit.runner.Description', 'methodAndClassNamePatternGroupOrDefault', '([\\s\\S]*)\\((.*)\\)', 'testWritePack4ThinPack(org.eclipse.jgit.internal.storage.file.PackWriterTest)')","[55089, 112302]"
"('Description.java', 'org.junit.runner.Description', 'methodAndClassNamePatternGroupOrDefault', '([\\s\\S]*)\\((.*)\\)', 'testNotBare_CreateRepositoryFromGitDirOnlyWithWorktreeConfig(org.eclipse.jgit.internal.storage.file.RepositorySetupWorkDirTest)')","[57064, 114172]"
"('Description.java', 'org.junit.runner.Description', 'methodAndClassNamePatternGroupOrDefault', '([\\s\\S]*)\\((.*)\\)', 'testInt32(org.eclipse.jgit.util.RawParseUtils_HexParseTest)')","[35662, 93602]"
"('URIish.java', 'org.eclipse.jgit.transport.URIish', '<init>', '^(file):([\\\\/](?![\\\\/])((?:[A-Za-z]:)?[\\\\/]?(?:(?:[^\\\\/]+[\\\\/]+)*[^\\\\/]+[\\\\/]*)))$', 'http://me@example.com//abc')","[154952, 155136]"
"('URIish.java', 'org.eclipse.jgit.transport.URIish', '<init>', '^(file):([\\\\/](?![\\\\/])((?:[A-Za-z]:)?[\\\\/]?(?:(?:[^\\\\/]+[\\\\/]+)*[^\\\\/]+[\\\\/]*)))$', 'http://lusr\\example:wtf@example.com:1234//abc')",[130664]
"('Description.java', 'org.junit.runner.Description', 'methodAndClassNamePatternGroupOrDefault', '([\\s\\S]*)\\((.*)\\)', 'testParse_explicit_bad_encoded(org.eclipse.jgit.revwalk.RevTagParseTest)')","[7124, 66014]"
"('Description.java', 'org.junit.runner.Description', 'methodAndClassNamePatternGroupOrDefault', '([\\s\\S]*)\\((.*)\\)', 'test(org.eclipse.jgit.util.io.AutoCRLFInputStreamTest)')","[33288, 91314]"
"('Description.java', 'org.junit.runner.Description', 'methodAndClassNamePatternGroupOrDefault', '([\\s\\S]*)\\((.*)\\)', 'dropMiddleStashCommit(org.eclipse.jgit.api.StashDropCommandTest)')","[52017, 109442]"
"('URIish.java', 'org.eclipse.jgit.transport.URIish', '<init>', '^(file):([\\\\/](?![\\\\/])((?:[A-Za-z]:)?[\\\\/]?(?:(?:[^\\\\/]+[\\\\/]+)*[^\\\\/]+[\\\\/]*)))$', '//.git')",[179079]
"('URIish.java', 'org.eclipse.jgit.transport.URIish', '<init>', '^(file):([\\\\/](?![\\\\/])((?:[A-Za-z]:)?[\\\\/]?(?:(?:[^\\\\/]+[\\\\/]+)*[^\\\\/]+[\\\\/]*)))$', 'http://me:wtf@[::1]:1234/D:\\x')",[129284]
"('URIish.java', 'org.eclipse.jgit.transport.URIish', '<init>', '^([a-z][a-z0-9+-]+)://(?:(?:([^/:@]+)(?::([^\\\\/]+))?@)?((?:[^\\\\/:]+)|(?:\\[[0-9a-f:]+\\]))(?::(\\d+))?((?:/~(?:[^\\\\/]+))?[\\\\/]))?(.+)?$', 'file:///tmp/jgit_test_595161962047339319_tmp/tmp_2747174633401967210')","[198903, 198965, 199019]"
"('URIish.java', 'org.eclipse.jgit.transport.URIish', '<init>', '^(file):([\\\\/](?![\\\\/])((?:[A-Za-z]:)?[\\\\/]?(?:(?:[^\\\\/]+[\\\\/]+)*[^\\\\/]+[\\\\/]*)))$', 'https://me@1.2.3.4:1234//')",[145338]
"('Repository.java', 'org.eclipse.jgit.lib.Repository', 'resolve', '^-\\d+$', '0')","[184494, 184521, 184604, 184631, 184714, 184741, 185154, 185181, 185264, 185291, 185319, 185346, 185484, 185511, 202216, 202244, 207686, 207715, 207745, 207774, 207804, 207833, 207863, 207892, 207922, 207951, 207981, 208010, 208040, 208069, 208099, 208128, 208158, 208187, 208217, 208246, 208276, 208305, 208335, 208364, 208394, 208423, 208453, 208482, 208512, 208541, 208571, 208600, 208630, 208659, 208689, 208718, 208748, 208777, 208807, 208836]"
"('Description.java', 'org.junit.runner.Description', 'methodAndClassNamePatternGroupOrDefault', '([\\s\\S]*)\\((.*)\\)', 'testFilePathCase0(org.eclipse.jgit.fnmatch.FileNameMatcherTest)')","[18013, 76486]"
"('QuotedString.java', 'org.eclipse.jgit.util.QuotedString$BourneUserPathStyle', 'quote', '^~[A-Za-z0-9_-]+$', '~foo/')","[192618, 192642]"
"('Description.java', 'org.junit.runner.Description', 'methodAndClassNamePatternGroupOrDefault', '([\\s\\S]*)\\((.*)\\)', 'testEmptyTexts(org.eclipse.jgit.merge.MergeAlgorithmTest)')","[10011, 68720]"
"('Description.java', 'org.junit.runner.Description', 'methodAndClassNamePatternGroupOrDefault', '([\\s\\S]*)\\((.*)\\)', 'org.eclipse.jgit.patch.EditListTest')","[38948, 193501]"
"('URIish.java', 'org.eclipse.jgit.transport.URIish', '<init>', '^(file):([\\\\/](?![\\\\/])((?:[A-Za-z]:)?[\\\\/]?(?:(?:[^\\\\/]+[\\\\/]+)*[^\\\\/]+[\\\\/]*)))$', 'http://me:wtf@[::1]:80//')",[129330]
"('URIish.java', 'org.eclipse.jgit.transport.URIish', '<init>', '^([a-z][a-z0-9+-]+)://(?:(?:([^/:@]+)(?::([^\\\\/]+))?@)?((?:[^\\\\/:]+)|(?:\\[[0-9a-f:]+\\]))(?::(\\d+))?((?:/~(?:[^\\\\/]+))?[\\\\/]))?(.+)?$', 'http://me@[::1]:1234//')",[142417]
"('URIish.java', 'org.eclipse.jgit.transport.URIish', '<init>', '^([a-z][a-z0-9+-]+)://(?:(?:([^/:@]+)(?::([^\\\\/]+))?@)?((?:[^\\\\/:]+)|(?:\\[[0-9a-f:]+\\]))(?::(\\d+))?((?:/~(?:[^\\\\/]+))?[\\\\/]))?(.+)?$', 'ssh+git://l usr\\example.com@[::1]/D:/x')","[153549, 153733]"
"('URIish.java', 'org.eclipse.jgit.transport.URIish', '<init>', '^(file):([\\\\/](?![\\\\/])((?:[A-Za-z]:)?[\\\\/]?(?:(?:[^\\\\/]+[\\\\/]+)*[^\\\\/]+[\\\\/]*)))$', 'ssh+git://l usr\\example.com:wtf@1.2.3.4:80/D:/x')",[126846]
"('Description.java', 'org.junit.runner.Description', 'methodAndClassNamePatternGroupOrDefault', '([\\s\\S]*)\\((.*)\\)', 'testDeleteFastForward(org.eclipse.jgit.internal.storage.file.RefUpdateTest)')","[56234, 113402]"
"('Description.java', 'org.junit.runner.Description', 'methodAndClassNamePatternGroupOrDefault', '([\\s\\S]*)\\((.*)\\)', 'testDeleteBadName(org.eclipse.jgit.api.TagCommandTest)')","[41692, 99322]"
"('Description.java', 'org.junit.runner.Description', 'methodAndClassNamePatternGroupOrDefault', '([\\s\\S]*)\\((.*)\\)', 'testReadSimplePackedRefSameRepo(org.eclipse.jgit.lib.RefTest)')","[22830, 81194]"
"('Description.java', 'org.junit.runner.Description', 'methodAndClassNamePatternGroupOrDefault', '([\\s\\S]*)\\((.*)\\)', 'org.eclipse.jgit.revwalk.RevWalkUtilsCountTest')","[6584, 181325]"
"('Description.java', 'org.junit.runner.Description', 'methodAndClassNamePatternGroupOrDefault', '([\\s\\S]*)\\((.*)\\)', 'testPath_4094(org.eclipse.jgit.dircache.DirCacheLargePathTest)')","[12253, 70810]"
"('Description.java', 'org.junit.runner.Description', 'methodAndClassNamePatternGroupOrDefault', '([\\s\\S]*)\\((.*)\\)', 'testGetRefs_HeadsOnly_Mixed(org.eclipse.jgit.internal.storage.file.RefDirectoryTest)')","[58753, 115822]"
"('Description.java', 'org.junit.runner.Description', 'methodAndClassNamePatternGroupOrDefault', '([\\s\\S]*)\\((.*)\\)', 'addExistentSubmodule(org.eclipse.jgit.submodule.SubmoduleAddTest)')","[19977, 78444]"
"('URIish.java', 'org.eclipse.jgit.transport.URIish', '<init>', '^(file):([\\\\/](?![\\\\/])((?:[A-Za-z]:)?[\\\\/]?(?:(?:[^\\\\/]+[\\\\/]+)*[^\\\\/]+[\\\\/]*)))$', 'http://l usr\\example.com:wtf@[::1]:1234/D:/x')",[130342]
"('Description.java', 'org.junit.runner.Description', 'methodAndClassNamePatternGroupOrDefault', '([\\s\\S]*)\\((.*)\\)', 'testUpdateNonFastForwardUnknownObject(org.eclipse.jgit.transport.PushProcessTest)')","[4943, 63968]"
"('Description.java', 'org.junit.runner.Description', 'methodAndClassNamePatternGroupOrDefault', '([\\s\\S]*)\\((.*)\\)', 'testForbiddenWindowsNamesOnUnixEgLpt1(org.eclipse.jgit.lib.DirCacheCheckoutMaliciousPathTest)')","[21769, 80182]"
"('Description.java', 'org.junit.runner.Description', 'methodAndClassNamePatternGroupOrDefault', '([\\s\\S]*)\\((.*)\\)', 'testEditEdit(org.eclipse.jgit.notes.DefaultNoteMergerTest)')","[40484, 98156]"
"('Description.java', 'org.junit.runner.Description', 'methodAndClassNamePatternGroupOrDefault', '([\\s\\S]*)\\((.*)\\)', 'testParse_ConfigCaseInsensitive(org.eclipse.jgit.patch.PatchTest)')","[39822, 97562]"
"('Description.java', 'org.junit.runner.Description', 'methodAndClassNamePatternGroupOrDefault', '([\\s\\S]*)\\((.*)\\)', 'testClean(org.eclipse.jgit.util.ChangeIdUtilTest)')","[37721, 95560]"
"('Description.java', 'org.junit.runner.Description', 'methodAndClassNamePatternGroupOrDefault', '([\\s\\S]*)\\((.*)\\)', 'testModifyE(org.eclipse.jgit.api.ApplyCommandTest)')","[46740, 104272]"
"('Description.java', 'org.junit.runner.Description', 'methodAndClassNamePatternGroupOrDefault', '([\\s\\S]*)\\((.*)\\)', 'checkMergeMergeableFilesWithTreeInIndex(org.eclipse.jgit.merge.ResolveMergerTest)')","[10553, 69248]"
"('Description.java', 'org.junit.runner.Description', 'methodAndClassNamePatternGroupOrDefault', '([\\s\\S]*)\\((.*)\\)', 'testDecode(org.eclipse.jgit.util.Base64Test)')","[36723, 94614]"
"('URIish.java', 'org.eclipse.jgit.transport.URIish', '<init>', '^([a-z][a-z0-9+-]+)://(?:(?:([^/:@]+)(?::([^\\\\/]+))?@)?((?:[^\\\\/:]+)|(?:\\[[0-9a-f:]+\\]))(?::(\\d+))?((?:/~(?:[^\\\\/]+))?[\\\\/]))?(.+)?$', 'http://l usr\\example.com@[::1]:1234//')",[143521]
"('Description.java', 'org.junit.runner.Description', 'methodAndClassNamePatternGroupOrDefault', '([\\s\\S]*)\\((.*)\\)', 'testBuilder_Remove(org.eclipse.jgit.util.RefListTest)')","[34889, 92832]"
"('Description.java', 'org.junit.runner.Description', 'methodAndClassNamePatternGroupOrDefault', '([\\s\\S]*)\\((.*)\\)', 'resolveUnnamedCurrentBranchCommits(org.eclipse.jgit.lib.ReflogResolveTest)')","[27529, 85858]"
"('Description.java', 'org.junit.runner.Description', 'methodAndClassNamePatternGroupOrDefault', '([\\s\\S]*)\\((.*)\\)', 'testInvalidCommitInvalidAuthor3(org.eclipse.jgit.lib.ObjectCheckerTest)')","[26063, 84362]"
"('URIish.java', 'org.eclipse.jgit.transport.URIish', '<init>', '^([a-z][a-z0-9+-]+)://(?:(?:([^/:@]+)(?::([^\\\\/]+))?@)?((?:[^\\\\/:]+)|(?:\\[[0-9a-f:]+\\]))(?::(\\d+))?((?:/~(?:[^\\\\/]+))?[\\\\/]))?(.+)?$', 'ssh://l usr\\example.com@example.com:80//abc')",[136391]
"('Description.java', 'org.junit.runner.Description', 'methodAndClassNamePatternGroupOrDefault', '([\\s\\S]*)\\((.*)\\)', 'testRevertConflictResolution(org.eclipse.jgit.api.RevertCommandTest)')","[47967, 105438]"
"('Description.java', 'org.junit.runner.Description', 'methodAndClassNamePatternGroupOrDefault', '([\\s\\S]*)\\((.*)\\)', 'testWorkdirIsParent_CreateRepositoryFromGitDirOnlyWithBareConfigFalse(org.eclipse.jgit.internal.storage.file.RepositorySetupWorkDirTest)')","[57001, 114106]"
"('URIish.java', 'org.eclipse.jgit.transport.URIish', '<init>', '^([a-z][a-z0-9+-]+)://(?:(?:([^/:@]+)(?::([^\\\\/]+))?@)?((?:[^\\\\/:]+)|(?:\\[[0-9a-f:]+\\]))(?::(\\d+))?((?:/~(?:[^\\\\/]+))?[\\\\/]))?(.+)?$', 'https://l usr\\example.com@example.com:1234//')",[146097]
"('Description.java', 'org.junit.runner.Description', 'methodAndClassNamePatternGroupOrDefault', '([\\s\\S]*)\\((.*)\\)', 'testBuildOneFile_Commit(org.eclipse.jgit.dircache.DirCacheBuilderTest)')","[12150, 70722]"
"('Description.java', 'org.junit.runner.Description', 'methodAndClassNamePatternGroupOrDefault', '([\\s\\S]*)\\((.*)\\)', 'testOnlyOption_f1_1_f2_14_e(org.eclipse.jgit.api.CommitOnlyTest)')","[50313, 107836]"
"('URIish.java', 'org.eclipse.jgit.transport.URIish', '<init>', '^(file):([\\\\/](?![\\\\/])((?:[A-Za-z]:)?[\\\\/]?(?:(?:[^\\\\/]+[\\\\/]+)*[^\\\\/]+[\\\\/]*)))$', 'http://l usr\\example.com@example.com:1234/D:\\x')",[142900]
"('URIish.java', 'org.eclipse.jgit.transport.URIish', '<init>', '^(file):([\\\\/](?![\\\\/])((?:[A-Za-z]:)?[\\\\/]?(?:(?:[^\\\\/]+[\\\\/]+)*[^\\\\/]+[\\\\/]*)))$', 'user@example.com:egit.git')",[118610]
"('URIish.java', 'org.eclipse.jgit.transport.URIish', '<init>', '^(file):([\\\\/](?![\\\\/])((?:[A-Za-z]:)?[\\\\/]?(?:(?:[^\\\\/]+[\\\\/]+)*[^\\\\/]+[\\\\/]*)))$', 'ssh://lusr\\example@1.2.3.4:1234/D:\\x')",[137748]
"('Description.java', 'org.junit.runner.Description', 'methodAndClassNamePatternGroupOrDefault', '([\\s\\S]*)\\((.*)\\)', 'testCheckoutWithStartPoint(org.eclipse.jgit.api.CheckoutCommandTest)')","[43043, 100598]"
"('QuotedString.java', 'org.eclipse.jgit.util.QuotedString$BourneUserPathStyle', 'quote', '^~[A-Za-z0-9_-]+$', '!')","[193113, 193138]"
"('URIish.java', 'org.eclipse.jgit.transport.URIish', '<init>', '^([a-z][a-z0-9+-]+)://(?:(?:([^/:@]+)(?::([^\\\\/]+))?@)?((?:[^\\\\/:]+)|(?:\\[[0-9a-f:]+\\]))(?::(\\d+))?((?:/~(?:[^\\\\/]+))?[\\\\/]))?(.+)?$', 'ssh+git://lusr\\example@example.com:1234/D:\\x')",[140715]
"('Description.java', 'org.junit.runner.Description', 'methodAndClassNamePatternGroupOrDefault', '([\\s\\S]*)\\((.*)\\)', 'testStopOnLastConflictAndSkip(org.eclipse.jgit.api.RebaseCommandTest)')","[46095, 103656]"
"('URIish.java', 'org.eclipse.jgit.transport.URIish', '<init>', '^(file):([\\\\/](?![\\\\/])((?:[A-Za-z]:)?[\\\\/]?(?:(?:[^\\\\/]+[\\\\/]+)*[^\\\\/]+[\\\\/]*)))$', 'ssh://me@[::1]:80/D:\\x')",[136092]
"('Description.java', 'org.junit.runner.Description', 'methodAndClassNamePatternGroupOrDefault', '([\\s\\S]*)\\((.*)\\)', 'testReadWriteV3(org.eclipse.jgit.dircache.DirCacheCGitCompatabilityTest)')","[11530, 70172]"
"('Description.java', 'org.junit.runner.Description', 'methodAndClassNamePatternGroupOrDefault', '([\\s\\S]*)\\((.*)\\)', 'testSetFastForwardMergeoptions(org.eclipse.jgit.lib.ConfigTest)')","[27924, 86232]"
"('Description.java', 'org.junit.runner.Description', 'methodAndClassNamePatternGroupOrDefault', '([\\s\\S]*)\\((.*)\\)', 'workingDirectoryEditPreCommit(org.eclipse.jgit.api.StashApplyCommandTest)')","[51101, 108562]"
"('Description.java', 'org.junit.runner.Description', 'methodAndClassNamePatternGroupOrDefault', '([\\s\\S]*)\\((.*)\\)', 'testOnlyOption_f1_8_c(org.eclipse.jgit.api.CommitOnlyTest)')","[49221, 106692]"
"('Description.java', 'org.junit.runner.Description', 'methodAndClassNamePatternGroupOrDefault', '([\\s\\S]*)\\((.*)\\)', 'testSetSourceDestination(org.eclipse.jgit.transport.RefSpecTest)')","[2815, 61878]"
"('Description.java', 'org.junit.runner.Description', 'methodAndClassNamePatternGroupOrDefault', '([\\s\\S]*)\\((.*)\\)', 'org.eclipse.jgit.internal.storage.file.PackFileTest')","[53799, 209759]"
"('Description.java', 'org.junit.runner.Description', 'methodAndClassNamePatternGroupOrDefault', '([\\s\\S]*)\\((.*)\\)', 'testDequote_FooTabBar(org.eclipse.jgit.util.QuotedStringGitPathStyleTest)')","[34328, 92304]"
"('Description.java', 'org.junit.runner.Description', 'methodAndClassNamePatternGroupOrDefault', '([\\s\\S]*)\\((.*)\\)', 'testOneOnly(org.eclipse.jgit.treewalk.filter.InterIndexDiffFilterTest)')","[31504, 89664]"
"('URIish.java', 'org.eclipse.jgit.transport.URIish', '<init>', '^(file):([\\\\/](?![\\\\/])((?:[A-Za-z]:)?[\\\\/]?(?:(?:[^\\\\/]+[\\\\/]+)*[^\\\\/]+[\\\\/]*)))$', 'ssh://l usr\\example.com:wtf@[::1]:80//')",[123810]
"('Description.java', 'org.junit.runner.Description', 'methodAndClassNamePatternGroupOrDefault', '([\\s\\S]*)\\((.*)\\)', 'testReadWriteMergeMsg(org.eclipse.jgit.lib.SquashCommitMsgTest)')","[28781, 87090]"
"('Description.java', 'org.junit.runner.Description', 'methodAndClassNamePatternGroupOrDefault', '([\\s\\S]*)\\((.*)\\)', 'testCloneRepositoryWithNestedSubmodules(org.eclipse.jgit.api.CloneCommandTest)')","[42272, 99850]"
"('Description.java', 'org.junit.runner.Description', 'methodAndClassNamePatternGroupOrDefault', '([\\s\\S]*)\\((.*)\\)', 'testMatch_Equal(org.eclipse.jgit.util.RawParseUtils_MatchTest)')","[38391, 96242]"
"('Description.java', 'org.junit.runner.Description', 'methodAndClassNamePatternGroupOrDefault', '([\\s\\S]*)\\((.*)\\)', 'testObjectMovedToNewPack1(org.eclipse.jgit.internal.storage.file.ConcurrentRepackTest)')","[55480, 112632]"
"('Description.java', 'org.junit.runner.Description', 'methodAndClassNamePatternGroupOrDefault', '([\\s\\S]*)\\((.*)\\)', 'testEmptyBuilder(org.eclipse.jgit.util.RefListTest)')","[35204, 93162]"
"('URIish.java', 'org.eclipse.jgit.transport.URIish', '<init>', '^(file):([\\\\/](?![\\\\/])((?:[A-Za-z]:)?[\\\\/]?(?:(?:[^\\\\/]+[\\\\/]+)*[^\\\\/]+[\\\\/]*)))$', 'file:/tmp/jgit_test_5830532143575264668_tmp/tmp_677279644560589145/.git/')",[183376]
"('URIish.java', 'org.eclipse.jgit.transport.URIish', '<init>', '^([a-z][a-z0-9+-]+)://(?:(?:([^/:@]+)(?::([^\\\\/]+))?@)?((?:[^\\\\/:]+)|(?:\\[[0-9a-f:]+\\]))(?::(\\d+))?((?:/~(?:[^\\\\/]+))?[\\\\/]))?(.+)?$', 'ssh+git://me@[::1]:80/D:\\x')",[139427]
"('Description.java', 'org.junit.runner.Description', 'methodAndClassNamePatternGroupOrDefault', '([\\s\\S]*)\\((.*)\\)', 'testDequote_Empty2(org.eclipse.jgit.util.QuotedStringBourneStyleTest)')","[36515, 94416]"
"('URIish.java', 'org.eclipse.jgit.transport.URIish', '<init>', '^(file):([\\\\/](?![\\\\/])((?:[A-Za-z]:)?[\\\\/]?(?:(?:[^\\\\/]+[\\\\/]+)*[^\\\\/]+[\\\\/]*)))$', '/tmp/jgit_test_7464312454061528800_tmp/tmp_1728499304085067581/.git')","[183467, 183607]"
"('URIish.java', 'org.eclipse.jgit.transport.URIish', '<init>', '^([a-z][a-z0-9+-]+)://(?:(?:([^/:@]+)(?::([^\\\\/]+))?@)?((?:[^\\\\/:]+)|(?:\\[[0-9a-f:]+\\]))(?::(\\d+))?((?:/~(?:[^\\\\/]+))?[\\\\/]))?(.+)?$', 'ssh://l usr\\example.com@[::1]:1234/D:/x')",[136989]
"('URIish.java', 'org.eclipse.jgit.transport.URIish', '<init>', '^([\\\\/]?((?:[A-Za-z]:)?[\\\\/]?(?:(?:[^\\\\/]+[\\\\/]+)*[^\\\\/]+[\\\\/]*)))$', '/abc/')",[180022]
"('Description.java', 'org.junit.runner.Description', 'methodAndClassNamePatternGroupOrDefault', '([\\s\\S]*)\\((.*)\\)', 'test6(org.eclipse.jgit.revwalk.RevWalkPathFilter6012Test)')","[9513, 68258]"
"('Description.java', 'org.junit.runner.Description', 'methodAndClassNamePatternGroupOrDefault', '([\\s\\S]*)\\((.*)\\)', 'testTwoRevisions(org.eclipse.jgit.api.BlameCommandTest)')","[52372, 109794]"
"('Description.java', 'org.junit.runner.Description', 'methodAndClassNamePatternGroupOrDefault', '([\\s\\S]*)\\((.*)\\)', 'indexAdd(org.eclipse.jgit.api.StashCreateCommandTest)')","[41858, 99476]"
"('Description.java', 'org.junit.runner.Description', 'methodAndClassNamePatternGroupOrDefault', '([\\s\\S]*)\\((.*)\\)', 'testManySolutionsCase0(org.eclipse.jgit.fnmatch.FileNameMatcherTest)')","[18286, 76772]"
"('Description.java', 'org.junit.runner.Description', 'methodAndClassNamePatternGroupOrDefault', '([\\s\\S]*)\\((.*)\\)', 'testRebaseWithUnstagedMasterChangeOtherCommit(org.eclipse.jgit.api.RebaseCommandTest)')","[45234, 102754]"
"('Description.java', 'org.junit.runner.Description', 'methodAndClassNamePatternGroupOrDefault', '([\\s\\S]*)\\((.*)\\)', 'testMaliciousAbsolutePath(org.eclipse.jgit.lib.DirCacheCheckoutMaliciousPathTest)')","[21748, 80160]"
"('Description.java', 'org.junit.runner.Description', 'methodAndClassNamePatternGroupOrDefault', '([\\s\\S]*)\\((.*)\\)', 'testGetRefs_IgnoresGarbageRef1(org.eclipse.jgit.internal.storage.file.RefDirectoryTest)')","[57829, 114854]"
"('Description.java', 'org.junit.runner.Description', 'methodAndClassNamePatternGroupOrDefault', '([\\s\\S]*)\\((.*)\\)', 'testDirectoryFileConflicts_15b(org.eclipse.jgit.lib.DirCacheCheckoutTest)')","[23122, 81480]"
"('Description.java', 'org.junit.runner.Description', 'methodAndClassNamePatternGroupOrDefault', '([\\s\\S]*)\\((.*)\\)', 'org.eclipse.jgit.treewalk.FileTreeIteratorTest')","[28800, 185992]"
"('Description.java', 'org.junit.runner.Description', 'methodAndClassNamePatternGroupOrDefault', '([\\s\\S]*)\\((.*)\\)', 'testSameModification(org.eclipse.jgit.merge.MergeAlgorithmTest)')","[10221, 68940]"
"('Description.java', 'org.junit.runner.Description', 'methodAndClassNamePatternGroupOrDefault', '([\\s\\S]*)\\((.*)\\)', 'shouldListChangesInWorkingTree(org.eclipse.jgit.diff.DiffEntryTest)')","[13854, 72328]"
"('URIish.java', 'org.eclipse.jgit.transport.URIish', '<init>', '^([a-z][a-z0-9+-]+)://(?:(?:([^/:@]+)(?::([^\\\\/]+))?@)?((?:[^\\\\/:]+)|(?:\\[[0-9a-f:]+\\]))(?::(\\d+))?((?:/~(?:[^\\\\/]+))?[\\\\/]))?(.+)?$', 'ssh://me@1.2.3.4:80//abc')",[135655]
"('URIish.java', 'org.eclipse.jgit.transport.URIish', '<init>', '^([a-z][a-z0-9+-]+)://(?:(?:([^/:@]+)(?::([^\\\\/]+))?@)?((?:[^\\\\/:]+)|(?:\\[[0-9a-f:]+\\]))(?::(\\d+))?((?:/~(?:[^\\\\/]+))?[\\\\/]))?(.+)?$', 'http://lusr\\example@[::1]:80//')",[144809]
"('Description.java', 'org.junit.runner.Description', 'methodAndClassNamePatternGroupOrDefault', '([\\s\\S]*)\\((.*)\\)', 'testMerged(org.eclipse.jgit.revplot.PlotCommitListTest)')","[40173, 97870]"
"('URIish.java', 'org.eclipse.jgit.transport.URIish', '<init>', '^(file):([\\\\/](?![\\\\/])((?:[A-Za-z]:)?[\\\\/]?(?:(?:[^\\\\/]+[\\\\/]+)*[^\\\\/]+[\\\\/]*)))$', 'http://l usr\\example.com:wtf@example.com:80//')",[129698]
"('Description.java', 'org.junit.runner.Description', 'methodAndClassNamePatternGroupOrDefault', '([\\s\\S]*)\\((.*)\\)', 'testFilter_ALL_And_NONE(org.eclipse.jgit.revwalk.RevWalkFilterTest)')","[8410, 67202]"
"('URIish.java', 'org.eclipse.jgit.transport.URIish', '<init>', '^([\\\\/]?((?:[A-Za-z]:)?[\\\\/]?(?:(?:[^\\\\/]+[\\\\/]+)*[^\\\\/]+[\\\\/]*)))$', '/tmp/jgit_test_7285828428477782317_tmp/tmp_2342545421297606686')","[204883, 205028, 205178, 205328]"
"('Description.java', 'org.junit.runner.Description', 'methodAndClassNamePatternGroupOrDefault', '([\\s\\S]*)\\((.*)\\)', 'testValidSpecialCharacters(org.eclipse.jgit.lib.ValidRefNameTest)')","[24187, 82536]"
"('URIish.java', 'org.eclipse.jgit.transport.URIish', '<init>', '^(file):([\\\\/](?![\\\\/])((?:[A-Za-z]:)?[\\\\/]?(?:(?:[^\\\\/]+[\\\\/]+)*[^\\\\/]+[\\\\/]*)))$', '/tmp/jgit_test_983393012567618838_tmp/tmp_60736882191290227')","[204522, 204647]"
"('URIish.java', 'org.eclipse.jgit.transport.URIish', '<init>', '^([a-z][a-z0-9+-]+)://(?:(?:([^/:@]+)(?::([^\\\\/]+))?@)?((?:[^\\\\/:]+)|(?:\\[[0-9a-f:]+\\]))(?::(\\d+))?((?:/~(?:[^\\\\/]+))?[\\\\/]))?(.+)?$', 'https://lusr\\example@1.2.3.4//abc')","[160863, 161047]"
"('URIish.java', 'org.eclipse.jgit.transport.URIish', '<init>', '^([a-z][a-z0-9+-]+)://(?:(?:([^/:@]+)(?::([^\\\\/]+))?@)?((?:[^\\\\/:]+)|(?:\\[[0-9a-f:]+\\]))(?::(\\d+))?((?:/~(?:[^\\\\/]+))?[\\\\/]))?(.+)?$', 'ssh+git://l usr\\example.com:wtf@[::1]:1234//')",[126961]
"('Description.java', 'org.junit.runner.Description', 'methodAndClassNamePatternGroupOrDefault', '([\\s\\S]*)\\((.*)\\)', 'testAddSlowPath(org.eclipse.jgit.util.BlockListTest)')","[35601, 93558]"
"('URIish.java', 'org.eclipse.jgit.transport.URIish', '<init>', '^(file):([\\\\/](?![\\\\/])((?:[A-Za-z]:)?[\\\\/]?(?:(?:[^\\\\/]+[\\\\/]+)*[^\\\\/]+[\\\\/]*)))$', 'file:///tmp/jgit_test_3938080632504476553_tmp/tmp_8192742226712825917/testCloneRepositoryWithNestedSubmodules1/.git/')","[196915, 197100]"
"('Description.java', 'org.junit.runner.Description', 'methodAndClassNamePatternGroupOrDefault', '([\\s\\S]*)\\((.*)\\)', 'testInvalidCommitInvalidAuthor4(org.eclipse.jgit.lib.ObjectCheckerTest)')","[26084, 84384]"
"('Description.java', 'org.junit.runner.Description', 'methodAndClassNamePatternGroupOrDefault', '([\\s\\S]*)\\((.*)\\)', 'testIteratorReturnedValues1(org.eclipse.jgit.internal.storage.file.PackIndexV2Test)')","[53572, 110872]"
"('Description.java', 'org.junit.runner.Description', 'methodAndClassNamePatternGroupOrDefault', '([\\s\\S]*)\\((.*)\\)', 'testBinaryDetect(org.eclipse.jgit.util.io.EolCanonicalizingInputStreamTest)')","[32977, 91028]"
"('URIish.java', 'org.eclipse.jgit.transport.URIish', '<init>', '^(file):([\\\\/](?![\\\\/])((?:[A-Za-z]:)?[\\\\/]?(?:(?:[^\\\\/]+[\\\\/]+)*[^\\\\/]+[\\\\/]*)))$', 'ssh://l usr\\example.com@1.2.3.4:1234/D:\\x')",[136644]
"('Description.java', 'org.junit.runner.Description', 'methodAndClassNamePatternGroupOrDefault', '([\\s\\S]*)\\((.*)\\)', 'testObjectId_objectid_explicit_firstparent(org.eclipse.jgit.lib.RepositoryResolveTest)')","[27426, 85770]"
"('Description.java', 'org.junit.runner.Description', 'methodAndClassNamePatternGroupOrDefault', '([\\s\\S]*)\\((.*)\\)', 'testInvalidCommitInvalidParent2(org.eclipse.jgit.lib.ObjectCheckerTest)')","[25916, 84208]"
"('Description.java', 'org.junit.runner.Description', 'methodAndClassNamePatternGroupOrDefault', '([\\s\\S]*)\\((.*)\\)', 'test008_notIsId(org.eclipse.jgit.lib.ObjectIdTest)')","[28552, 86870]"
"('Description.java', 'org.junit.runner.Description', 'methodAndClassNamePatternGroupOrDefault', '([\\s\\S]*)\\((.*)\\)', 'testNoConfig(org.eclipse.jgit.transport.OpenSshConfigTest)')","[2565, 61636]"
"('URIish.java', 'org.eclipse.jgit.transport.URIish', '<init>', '^([a-z][a-z0-9+-]+)://(?:(?:([^/:@]+)(?::([^\\\\/]+))?@)?((?:[^\\\\/:]+)|(?:\\[[0-9a-f:]+\\]))(?::(\\d+))?((?:/~(?:[^\\\\/]+))?[\\\\/]))?(.+)?$', 'http://l usr\\example.com@example.com:1234/D:\\x')",[142923]
"('Description.java', 'org.junit.runner.Description', 'methodAndClassNamePatternGroupOrDefault', '([\\s\\S]*)\\((.*)\\)', 'yesterday(org.eclipse.jgit.util.GitDateParserTest)')","[36202, 94108]"
"('QuotedString.java', 'org.eclipse.jgit.util.QuotedString$BourneUserPathStyle', 'quote', '^~[A-Za-z0-9_-]*/.*$', '~/')","[192765, 192789]"
"('Description.java', 'org.junit.runner.Description', 'methodAndClassNamePatternGroupOrDefault', '([\\s\\S]*)\\((.*)\\)', 'testForbiddenNamesOnWindowsEgLpt1(org.eclipse.jgit.lib.DirCacheCheckoutMaliciousPathTest)')","[21475, 79874]"
"('URIish.java', 'org.eclipse.jgit.transport.URIish', '<init>', '^(file):([\\\\/](?![\\\\/])((?:[A-Za-z]:)?[\\\\/]?(?:(?:[^\\\\/]+[\\\\/]+)*[^\\\\/]+[\\\\/]*)))$', 'ssh+git://l usr\\example.com:wtf@example.com:1234//')",[126202]
"('URIish.java', 'org.eclipse.jgit.transport.URIish', '<init>', '^(file):([\\\\/](?![\\\\/])((?:[A-Za-z]:)?[\\\\/]?(?:(?:[^\\\\/]+[\\\\/]+)*[^\\\\/]+[\\\\/]*)))$', '/tmp/jgit_test_459034667116329301_tmp/tmp_5950396153337027342')","[203842, 203967]"
"('Description.java', 'org.junit.runner.Description', 'methodAndClassNamePatternGroupOrDefault', '([\\s\\S]*)\\((.*)\\)', 'testType_Delete(org.eclipse.jgit.diff.EditTest)')","[15894, 74286]"
"('Description.java', 'org.junit.runner.Description', 'methodAndClassNamePatternGroupOrDefault', '([\\s\\S]*)\\((.*)\\)', 'testCheckoutFirst(org.eclipse.jgit.api.PathCheckoutCommandTest)')","[47011, 104536]"
"('Description.java', 'org.junit.runner.Description', 'methodAndClassNamePatternGroupOrDefault', '([\\s\\S]*)\\((.*)\\)', 'testFreakingHugePathName(org.eclipse.jgit.treewalk.CanonicalTreeParserTest)')","[30046, 88256]"
"('Description.java', 'org.junit.runner.Description', 'methodAndClassNamePatternGroupOrDefault', '([\\s\\S]*)\\((.*)\\)', 'testRebaseWithModificationShouldNotDeleteData(org.eclipse.jgit.api.RebaseCommandTest)')","[45633, 103172]"
"('Description.java', 'org.junit.runner.Description', 'methodAndClassNamePatternGroupOrDefault', '([\\s\\S]*)\\((.*)\\)', 'testStandardFormat_GarbageAfterSize(org.eclipse.jgit.internal.storage.file.UnpackedObjectTest)')","[56751, 113864]"
"('Description.java', 'org.junit.runner.Description', 'methodAndClassNamePatternGroupOrDefault', '([\\s\\S]*)\\((.*)\\)', 'testParse_FixNoNewline(org.eclipse.jgit.patch.PatchTest)')","[39801, 97540]"
"('Description.java', 'org.junit.runner.Description', 'methodAndClassNamePatternGroupOrDefault', '([\\s\\S]*)\\((.*)\\)', 'testVerySimplePatternCase2(org.eclipse.jgit.fnmatch.FileNameMatcherTest)')","[17089, 75518]"
"('Description.java', 'org.junit.runner.Description', 'methodAndClassNamePatternGroupOrDefault', '([\\s\\S]*)\\((.*)\\)', 'testVerySimpleGroupRangeCase4(org.eclipse.jgit.fnmatch.FileNameMatcherTest)')","[17824, 76288]"
"('URIish.java', 'org.eclipse.jgit.transport.URIish', '<init>', '^(?:([^/:@]+)(?::([^\\\\/]+))?@)?((?:[^\\\\/:]+)|(?:\\[[0-9a-f:]+\\])):((?:(?:/~(?:[^\\\\/]+))[\\\\/])?(?:(?:[^\\\\/]+[\\\\/]+)*[^\\\\/]+[\\\\/]*))$', '../../foo/bar')","[177630, 177745]"
"('URIish.java', 'org.eclipse.jgit.transport.URIish', '<init>', '^(file):([\\\\/](?![\\\\/])((?:[A-Za-z]:)?[\\\\/]?(?:(?:[^\\\\/]+[\\\\/]+)*[^\\\\/]+[\\\\/]*)))$', 'http://me:wtf@example.com:80/D:/x')",[128686]
"('Description.java', 'org.junit.runner.Description', 'methodAndClassNamePatternGroupOrDefault', '([\\s\\S]*)\\((.*)\\)', 'testGetValidDotGitSlashHumanishName(org.eclipse.jgit.transport.URIishTest)')","[2252, 61328]"
"('Description.java', 'org.junit.runner.Description', 'methodAndClassNamePatternGroupOrDefault', '([\\s\\S]*)\\((.*)\\)', 'testGetRef_CorruptSymbolicReference(org.eclipse.jgit.internal.storage.file.RefDirectoryTest)')","[57913, 114942]"
"('Description.java', 'org.junit.runner.Description', 'methodAndClassNamePatternGroupOrDefault', '([\\s\\S]*)\\((.*)\\)', 'testDirectoryFileConflicts_13(org.eclipse.jgit.lib.DirCacheCheckoutTest)')","[23647, 82030]"
"('URIish.java', 'org.eclipse.jgit.transport.URIish', '<init>', '^([a-z][a-z0-9+-]+)://(?:(?:([^/:@]+)(?::([^\\\\/]+))?@)?((?:[^\\\\/:]+)|(?:\\[[0-9a-f:]+\\]))(?::(\\d+))?((?:/~(?:[^\\\\/]+))?[\\\\/]))?(.+)?$', 'file:///tmp/jgit_test_2206335174361796742_tmp/tmp_7856706505273661077.git/')","[196184, 196240]"
"('Description.java', 'org.junit.runner.Description', 'methodAndClassNamePatternGroupOrDefault', '([\\s\\S]*)\\((.*)\\)', 'testBlankGroupCase0(org.eclipse.jgit.fnmatch.FileNameMatcherTest)')","[18517, 77014]"
"('Description.java', 'org.junit.runner.Description', 'methodAndClassNamePatternGroupOrDefault', '([\\s\\S]*)\\((.*)\\)', 'testParse_OneFileCc(org.eclipse.jgit.patch.PatchCcTest)')","[39862, 97584]"
"('Description.java', 'org.junit.runner.Description', 'methodAndClassNamePatternGroupOrDefault', '([\\s\\S]*)\\((.*)\\)', 'testGetValidWithSlashDotGitHumanishName(org.eclipse.jgit.transport.URIishTest)')","[1391, 60426]"
"('URIish.java', 'org.eclipse.jgit.transport.URIish', '<init>', '^(file):([\\\\/](?![\\\\/])((?:[A-Za-z]:)?[\\\\/]?(?:(?:[^\\\\/]+[\\\\/]+)*[^\\\\/]+[\\\\/]*)))$', 'http://me@[::1]:80//')",[142578]
"('Description.java', 'org.junit.runner.Description', 'methodAndClassNamePatternGroupOrDefault', '([\\s\\S]*)\\((.*)\\)', 'testParse_PublicParseMethod(org.eclipse.jgit.revwalk.RevTagParseTest)')","[7187, 66080]"
"('Description.java', 'org.junit.runner.Description', 'methodAndClassNamePatternGroupOrDefault', '([\\s\\S]*)\\((.*)\\)', 'testOnlyOption_f1_7_f2_14_c(org.eclipse.jgit.api.CommitOnlyTest)')","[48381, 105812]"
"('Description.java', 'org.junit.runner.Description', 'methodAndClassNamePatternGroupOrDefault', '([\\s\\S]*)\\((.*)\\)', 'testMergeCommitOneParentShallow(org.eclipse.jgit.revwalk.RevWalkShallowTest)')","[9595, 68324]"
"('Description.java', 'org.junit.runner.Description', 'methodAndClassNamePatternGroupOrDefault', '([\\s\\S]*)\\((.*)\\)', 'testWritePacket2(org.eclipse.jgit.transport.PacketLineOutTest)')","[5109, 64122]"
"('Description.java', 'org.junit.runner.Description', 'methodAndClassNamePatternGroupOrDefault', '([\\s\\S]*)\\((.*)\\)', 'org.eclipse.jgit.dircache.DirCacheBuilderTest')","[12003, 182370]"
"('URIish.java', 'org.eclipse.jgit.transport.URIish', '<init>', '^([a-z][a-z0-9+-]+)://(?:(?:([^/:@]+)(?::([^\\\\/]+))?@)?((?:[^\\\\/:]+)|(?:\\[[0-9a-f:]+\\]))(?::(\\d+))?((?:/~(?:[^\\\\/]+))?[\\\\/]))?(.+)?$', 'ssh://l usr\\example.com:wtf@example.com:80/D:\\x')",[123235]
"('Description.java', 'org.junit.runner.Description', 'methodAndClassNamePatternGroupOrDefault', '([\\s\\S]*)\\((.*)\\)', 'org.eclipse.jgit.merge.MergeAlgorithmTest')","[9990, 181838]"
"('URIish.java', 'org.eclipse.jgit.transport.URIish', '<init>', '^([a-z][a-z0-9+-]+)://(?:(?:([^/:@]+)(?::([^\\\\/]+))?@)?((?:[^\\\\/:]+)|(?:\\[[0-9a-f:]+\\]))(?::(\\d+))?((?:/~(?:[^\\\\/]+))?[\\\\/]))?(.+)?$', '/tmp/jgit_test_4323105091129792259_tmp/tmp_6865223474386595542')","[205376, 205506, 205653]"
"('Description.java', 'org.junit.runner.Description', 'methodAndClassNamePatternGroupOrDefault', '([\\s\\S]*)\\((.*)\\)', 'testAlias_OptionsKeywordCaseInsensitive(org.eclipse.jgit.transport.OpenSshConfigTest)')","[2523, 61592]"
"('Description.java', 'org.junit.runner.Description', 'methodAndClassNamePatternGroupOrDefault', '([\\s\\S]*)\\((.*)\\)', 'testSshProto(org.eclipse.jgit.transport.URIishTest)')","[1958, 61020]"
"('URIish.java', 'org.eclipse.jgit.transport.URIish', '<init>', '^([\\\\/]?((?:[A-Za-z]:)?[\\\\/]?(?:(?:[^\\\\/]+[\\\\/]+)*[^\\\\/]+[\\\\/]*)))$', '/home/m y')","[176158, 176273]"
"('Description.java', 'org.junit.runner.Description', 'methodAndClassNamePatternGroupOrDefault', '([\\s\\S]*)\\((.*)\\)', 'test003_PutRemote(org.eclipse.jgit.lib.ConfigTest)')","[28176, 86496]"
"('Description.java', 'org.junit.runner.Description', 'methodAndClassNamePatternGroupOrDefault', '([\\s\\S]*)\\((.*)\\)', 'testFastForwardWithFiles(org.eclipse.jgit.api.MergeCommandTest)')","[44110, 101676]"
"('URIish.java', 'org.eclipse.jgit.transport.URIish', '<init>', '^(?:([^/:@]+)(?::([^\\\\/]+))?@)?([^\\\\/:]{2,}):([\\\\/](?:(?:[^\\\\/]+[\\\\/]+)*[^\\\\/]+[\\\\/]*))$', '/abc.git')",[175192]
"('URIish.java', 'org.eclipse.jgit.transport.URIish', '<init>', '^(file):([\\\\/](?![\\\\/])((?:[A-Za-z]:)?[\\\\/]?(?:(?:[^\\\\/]+[\\\\/]+)*[^\\\\/]+[\\\\/]*)))$', 'ssh://lusr\\example@1.2.3.4//')","[150858, 151042]"
"('Description.java', 'org.junit.runner.Description', 'methodAndClassNamePatternGroupOrDefault', '([\\s\\S]*)\\((.*)\\)', 'org.eclipse.jgit.api.blame.BlameGeneratorTest')","[50792, 207602]"
"('Description.java', 'org.junit.runner.Description', 'methodAndClassNamePatternGroupOrDefault', '([\\s\\S]*)\\((.*)\\)', 'testDequote_BareA(org.eclipse.jgit.util.QuotedStringGitPathStyleTest)')","[34181, 92150]"
"('Description.java', 'org.junit.runner.Description', 'methodAndClassNamePatternGroupOrDefault', '([\\s\\S]*)\\((.*)\\)', 'testLargeTreesWithoutConflict(org.eclipse.jgit.notes.NoteMapMergerTest)')","[41131, 98794]"
"('ChangeIdUtil.java', 'org.eclipse.jgit.util.ChangeIdUtil', 'indexOfChangeId', '(^Change-Id: *I[a-f0-9]{40}$)', 'Change-Id: Id3bc5359d768a6400450283e12bdfb6cd135ea4b')","[189054, 190553]"
"('Description.java', 'org.junit.runner.Description', 'methodAndClassNamePatternGroupOrDefault', '([\\s\\S]*)\\((.*)\\)', 'testMaliciousPathDot(org.eclipse.jgit.lib.DirCacheCheckoutMaliciousPathTest)')","[21118, 79500]"
"('Description.java', 'org.junit.runner.Description', 'methodAndClassNamePatternGroupOrDefault', '([\\s\\S]*)\\((.*)\\)', 'org.eclipse.jgit.revwalk.FIFORevQueueTest')","[9242, 181730]"
"('URIish.java', 'org.eclipse.jgit.transport.URIish', '<init>', '^([a-z][a-z0-9+-]+)://(?:(?:([^/:@]+)(?::([^\\\\/]+))?@)?((?:[^\\\\/:]+)|(?:\\[[0-9a-f:]+\\]))(?::(\\d+))?((?:/~(?:[^\\\\/]+))?[\\\\/]))?(.+)?$', 'ssh+git://l usr\\example.com:wtf@example.com:1234/D:/x')",[126317]
"('Description.java', 'org.junit.runner.Description', 'methodAndClassNamePatternGroupOrDefault', '([\\s\\S]*)\\((.*)\\)', 'testCreate(org.eclipse.jgit.internal.storage.file.RefDirectoryTest)')","[58459, 115514]"
"('Description.java', 'org.junit.runner.Description', 'methodAndClassNamePatternGroupOrDefault', '([\\s\\S]*)\\((.*)\\)', 'testReset(org.eclipse.jgit.fnmatch.FileNameMatcherTest)')","[16858, 75276]"
"('Description.java', 'org.junit.runner.Description', 'methodAndClassNamePatternGroupOrDefault', '([\\s\\S]*)\\((.*)\\)', 'testPullMerge(org.eclipse.jgit.api.PullCommandTest)')","[46469, 104008]"
"('Description.java', 'org.junit.runner.Description', 'methodAndClassNamePatternGroupOrDefault', '([\\s\\S]*)\\((.*)\\)', 'testInvalidTreeDuplicateNames2(org.eclipse.jgit.lib.ObjectCheckerTest)')","[26966, 85308]"
"('URIish.java', 'org.eclipse.jgit.transport.URIish', '<init>', '^(file):([\\\\/](?![\\\\/])((?:[A-Za-z]:)?[\\\\/]?(?:(?:[^\\\\/]+[\\\\/]+)*[^\\\\/]+[\\\\/]*)))$', 'https://l usr\\example.com@1.2.3.4/D:\\x')","[159828, 160012]"
"('Description.java', 'org.junit.runner.Description', 'methodAndClassNamePatternGroupOrDefault', '([\\s\\S]*)\\((.*)\\)', 'testOnlyOption_f1_12_f2_14_c(org.eclipse.jgit.api.CommitOnlyTest)')","[49536, 107022]"
"('URIish.java', 'org.eclipse.jgit.transport.URIish', '<init>', '^([a-z][a-z0-9+-]+)://(?:(?:([^/:@]+)(?::([^\\\\/]+))?@)?((?:[^\\\\/:]+)|(?:\\[[0-9a-f:]+\\]))(?::(\\d+))?((?:/~(?:[^\\\\/]+))?[\\\\/]))?(.+)?$', 'http://lusr\\example@1.2.3.4:1234//abc')",[144303]
"('URIish.java', 'org.eclipse.jgit.transport.URIish', '<init>', '^(file):([\\\\/](?![\\\\/])((?:[A-Za-z]:)?[\\\\/]?(?:(?:[^\\\\/]+[\\\\/]+)*[^\\\\/]+[\\\\/]*)))$', 'ssh://me@example.com:1234//abc')",[135080]
"('URIish.java', 'org.eclipse.jgit.transport.URIish', '<init>', '^([a-z][a-z0-9+-]+)://(?:(?:([^/:@]+)(?::([^\\\\/]+))?@)?((?:[^\\\\/:]+)|(?:\\[[0-9a-f:]+\\]))(?::(\\d+))?((?:/~(?:[^\\\\/]+))?[\\\\/]))?(.+)?$', 'http://me@example.com/D:\\x')","[155067, 155251]"
"('Description.java', 'org.junit.runner.Description', 'methodAndClassNamePatternGroupOrDefault', '([\\s\\S]*)\\((.*)\\)', 'testParse_GitBinaryLiteral(org.eclipse.jgit.patch.PatchTest)')","[39759, 97496]"
"('URIish.java', 'org.eclipse.jgit.transport.URIish', '<init>', '^([\\\\/]?((?:[A-Za-z]:)?[\\\\/]?(?:(?:[^\\\\/]+[\\\\/]+)*[^\\\\/]+[\\\\/]*)))$', '/tmp/jgit_test_6729380522621655077_tmp/tmp_6942243649056967235')","[203373, 203518, 203668, 203818]"
"('Description.java', 'org.junit.runner.Description', 'methodAndClassNamePatternGroupOrDefault', '([\\s\\S]*)\\((.*)\\)', 'testDequote_BareABCZ_OnlyBC(org.eclipse.jgit.util.QuotedStringBourneUserPathStyleTest)')","[38555, 96374]"
"('Description.java', 'org.junit.runner.Description', 'methodAndClassNamePatternGroupOrDefault', '([\\s\\S]*)\\((.*)\\)', 'mergeWithCrlfInWT(org.eclipse.jgit.merge.ResolveMergerTest)')","[10679, 69380]"
"('Description.java', 'org.junit.runner.Description', 'methodAndClassNamePatternGroupOrDefault', '([\\s\\S]*)\\((.*)\\)', 'testRebaseShouldNotFailIfUserAddCommentLinesInPrepareSteps(org.eclipse.jgit.api.RebaseCommandTest)')","[45381, 102908]"
"('Description.java', 'org.junit.runner.Description', 'methodAndClassNamePatternGroupOrDefault', '([\\s\\S]*)\\((.*)\\)', 'test1(org.eclipse.jgit.revwalk.RevWalkPathFilter6012Test)')","[9408, 68148]"
"('Description.java', 'org.junit.runner.Description', 'methodAndClassNamePatternGroupOrDefault', '([\\s\\S]*)\\((.*)\\)', 'testParse_explicit_bad_encoded2(org.eclipse.jgit.revwalk.RevTagParseTest)')","[7103, 65992]"
"('URIish.java', 'org.eclipse.jgit.transport.URIish', '<init>', '^(?:([^/:@]+)(?::([^\\\\/]+))?@)?((?:[^\\\\/:]+)|(?:\\[[0-9a-f:]+\\])):((?:(?:/~(?:[^\\\\/]+))[\\\\/])?(?:(?:[^\\\\/]+[\\\\/]+)*[^\\\\/]+[\\\\/]*))$', 'user@example.com:some/p ath')","[177170, 177239]"
"('URIish.java', 'org.eclipse.jgit.transport.URIish', '<init>', '^(file):([\\\\/](?![\\\\/])((?:[A-Za-z]:)?[\\\\/]?(?:(?:[^\\\\/]+[\\\\/]+)*[^\\\\/]+[\\\\/]*)))$', 'http://lusr\\example@1.2.3.4:80//abc')",[144464]
"('URIish.java', 'org.eclipse.jgit.transport.URIish', '<init>', '^([a-z][a-z0-9+-]+)://(?:(?:([^/:@]+)(?::([^\\\\/]+))?@)?((?:[^\\\\/:]+)|(?:\\[[0-9a-f:]+\\]))(?::(\\d+))?((?:/~(?:[^\\\\/]+))?[\\\\/]))?(.+)?$', '\\\\some\\place')","[121418, 121533]"
"('URIish.java', 'org.eclipse.jgit.transport.URIish', '<init>', '^([a-z][a-z0-9+-]+)://(?:(?:([^/:@]+)(?::([^\\\\/]+))?@)?((?:[^\\\\/:]+)|(?:\\[[0-9a-f:]+\\]))(?::(\\d+))?((?:/~(?:[^\\\\/]+))?[\\\\/]))?(.+)?$', 'https://me:wtf@1.2.3.4:80/D:\\x')",[132435]
"('Description.java', 'org.junit.runner.Description', 'methodAndClassNamePatternGroupOrDefault', '([\\s\\S]*)\\((.*)\\)', 'testNonTranslatedBundle(org.eclipse.jgit.nls.TranslationBundleTest)')","[99, 59172]"
"('URIish.java', 'org.eclipse.jgit.transport.URIish', '<init>', '^(?:([^/:@]+)(?::([^\\\\/]+))?@)?([^\\\\/:]{2,}):([\\\\/](?:(?:[^\\\\/]+[\\\\/]+)*[^\\\\/]+[\\\\/]*))$', '/a/b/.git')",[179861]
"('URIish.java', 'org.eclipse.jgit.transport.URIish', '<init>', '^(file):([\\\\/](?![\\\\/])((?:[A-Za-z]:)?[\\\\/]?(?:(?:[^\\\\/]+[\\\\/]+)*[^\\\\/]+[\\\\/]*)))$', 'ssh://l usr\\example.com:wtf@[::1]:1234//')",[123626]
"('Description.java', 'org.junit.runner.Description', 'methodAndClassNamePatternGroupOrDefault', '([\\s\\S]*)\\((.*)\\)', 'testBranchReflog(org.eclipse.jgit.api.ReflogCommandTest)')","[51019, 108496]"
"('Description.java', 'org.junit.runner.Description', 'methodAndClassNamePatternGroupOrDefault', '([\\s\\S]*)\\((.*)\\)', 'testPathsResetWithUnmerged(org.eclipse.jgit.api.ResetCommandTest)')","[42795, 100378]"
"('Description.java', 'org.junit.runner.Description', 'methodAndClassNamePatternGroupOrDefault', '([\\s\\S]*)\\((.*)\\)', 'testNoRename(org.eclipse.jgit.revwalk.RevWalkFollowFilterTest)')","[6792, 65706]"
"('Description.java', 'org.junit.runner.Description', 'methodAndClassNamePatternGroupOrDefault', '([\\s\\S]*)\\((.*)\\)', 'testOneBlockAndHalf_SingleWrite(org.eclipse.jgit.util.TemporaryBufferTest)')","[34641, 92612]"
"('Description.java', 'org.junit.runner.Description', 'methodAndClassNamePatternGroupOrDefault', '([\\s\\S]*)\\((.*)\\)', 'testCheckoutOrphanBranch(org.eclipse.jgit.api.CheckoutCommandTest)')","[43358, 100928]"
"('Description.java', 'org.junit.runner.Description', 'methodAndClassNamePatternGroupOrDefault', '([\\s\\S]*)\\((.*)\\)', 'testOnlyOption_f1_6_c(org.eclipse.jgit.api.CommitOnlyTest)')","[49011, 106472]"
"('URIish.java', 'org.eclipse.jgit.transport.URIish', '<init>', '^([a-z][a-z0-9+-]+)://(?:(?:([^/:@]+)(?::([^\\\\/]+))?@)?((?:[^\\\\/:]+)|(?:\\[[0-9a-f:]+\\]))(?::(\\d+))?((?:/~(?:[^\\\\/]+))?[\\\\/]))?(.+)?$', 'ssh+git://l usr\\example.com:wtf@1.2.3.4:1234/D:\\x')",[126731]
"('URIish.java', 'org.eclipse.jgit.transport.URIish', '<init>', '^(file):([\\\\/](?![\\\\/])((?:[A-Za-z]:)?[\\\\/]?(?:(?:[^\\\\/]+[\\\\/]+)*[^\\\\/]+[\\\\/]*)))$', 'https://lusr\\example:wtf@example.com:80/D:\\x')",[134252]
"('Description.java', 'org.junit.runner.Description', 'methodAndClassNamePatternGroupOrDefault', '([\\s\\S]*)\\((.*)\\)', 'testEmpty_NoPrefix1(org.eclipse.jgit.util.RefMapTest)')","[37118, 94988]"
"('URIish.java', 'org.eclipse.jgit.transport.URIish', '<init>', '^([a-z][a-z0-9+-]+)://(?:(?:([^/:@]+)(?::([^\\\\/]+))?@)?((?:[^\\\\/:]+)|(?:\\[[0-9a-f:]+\\]))(?::(\\d+))?((?:/~(?:[^\\\\/]+))?[\\\\/]))?(.+)?$', 'https://l usr\\example.com@example.com//abc')","[159391, 159575]"
"('Description.java', 'org.junit.runner.Description', 'methodAndClassNamePatternGroupOrDefault', '([\\s\\S]*)\\((.*)\\)', 'testFindRemoteRefUpdatesWildcardNoTracking(org.eclipse.jgit.transport.TransportTest)')","[4130, 63176]"
"('URIish.java', 'org.eclipse.jgit.transport.URIish', '<init>', '^([a-z][a-z0-9+-]+)://(?:(?:([^/:@]+)(?::([^\\\\/]+))?@)?((?:[^\\\\/:]+)|(?:\\[[0-9a-f:]+\\]))(?::(\\d+))?((?:/~(?:[^\\\\/]+))?[\\\\/]))?(.+)?$', 'ssh+git://l usr\\example.com@[::1]:80/D:/x')",[140485]
"('Description.java', 'org.junit.runner.Description', 'methodAndClassNamePatternGroupOrDefault', '([\\s\\S]*)\\((.*)\\)', 'testUnchangedSimple(org.eclipse.jgit.lib.IndexDiffTest)')","[20576, 78972]"
"('Description.java', 'org.junit.runner.Description', 'methodAndClassNamePatternGroupOrDefault', '([\\s\\S]*)\\((.*)\\)', 'testDataAfterPackFooterSplitHeaderRead(org.eclipse.jgit.transport.PackParserTest)')","[4191, 63220]"
"('Description.java', 'org.junit.runner.Description', 'methodAndClassNamePatternGroupOrDefault', '([\\s\\S]*)\\((.*)\\)', 'dropNegativeRef(org.eclipse.jgit.api.StashDropCommandTest)')","[52059, 109486]"
"('Description.java', 'org.junit.runner.Description', 'methodAndClassNamePatternGroupOrDefault', '([\\s\\S]*)\\((.*)\\)', 'testFilter_NONE_Or_ALL(org.eclipse.jgit.revwalk.RevWalkFilterTest)')","[8263, 67048]"
"('URIish.java', 'org.eclipse.jgit.transport.URIish', '<init>', '^(file):([\\\\/](?![\\\\/])((?:[A-Za-z]:)?[\\\\/]?(?:(?:[^\\\\/]+[\\\\/]+)*[^\\\\/]+[\\\\/]*)))$', 'ssh://lusr\\example:wtf@1.2.3.4:1234//abc')",[124408]
"('Description.java', 'org.junit.runner.Description', 'methodAndClassNamePatternGroupOrDefault', '([\\s\\S]*)\\((.*)\\)', 'testAddDeleteTrickyNames(org.eclipse.jgit.dircache.DirCachePathEditTest)')","[11797, 70392]"
"('Description.java', 'org.junit.runner.Description', 'methodAndClassNamePatternGroupOrDefault', '([\\s\\S]*)\\((.*)\\)', 'testOnlyOption_f1_3_d(org.eclipse.jgit.api.CommitOnlyTest)')","[48717, 106164]"
"('Description.java', 'org.junit.runner.Description', 'methodAndClassNamePatternGroupOrDefault', '([\\s\\S]*)\\((.*)\\)', 'testEquals(org.eclipse.jgit.revwalk.RevFlagSetTest)')","[7416, 66300]"
"('Description.java', 'org.junit.runner.Description', 'methodAndClassNamePatternGroupOrDefault', '([\\s\\S]*)\\((.*)\\)', 'testStopOnConflictAndSkipWithConflict(org.eclipse.jgit.api.RebaseCommandTest)')","[46221, 103788]"
"('Description.java', 'org.junit.runner.Description', 'methodAndClassNamePatternGroupOrDefault', '([\\s\\S]*)\\((.*)\\)', 'testSpecialGroupCase9(org.eclipse.jgit.fnmatch.FileNameMatcherTest)')","[16291, 74682]"
"('Description.java', 'org.junit.runner.Description', 'methodAndClassNamePatternGroupOrDefault', '([\\s\\S]*)\\((.*)\\)', 'testIsWhitespace(org.eclipse.jgit.util.RawCharUtilTest)')","[38515, 96352]"
"('Description.java', 'org.junit.runner.Description', 'methodAndClassNamePatternGroupOrDefault', '([\\s\\S]*)\\((.*)\\)', 'testAlias_BatchModeYes(org.eclipse.jgit.transport.OpenSshConfigTest)')","[2460, 61526]"
"('URIish.java', 'org.eclipse.jgit.transport.URIish', '<init>', '^([\\\\/]?((?:[A-Za-z]:)?[\\\\/]?(?:(?:[^\\\\/]+[\\\\/]+)*[^\\\\/]+[\\\\/]*)))$', '/tmp/jgit_test_1887039081032232823_tmp/tmp_6446132997626944273')","[202658, 202803, 202953, 203103, 203253]"
"('URIish.java', 'org.eclipse.jgit.transport.URIish', '<init>', '^([a-z][a-z0-9+-]+)://(?:(?:([^/:@]+)(?::([^\\\\/]+))?@)?((?:[^\\\\/:]+)|(?:\\[[0-9a-f:]+\\]))(?::(\\d+))?((?:/~(?:[^\\\\/]+))?[\\\\/]))?(.+)?$', 'https://l usr\\example.com@example.com/D:/x')","[159437, 159621]"
"('URIish.java', 'org.eclipse.jgit.transport.URIish', '<init>', '^(file):([\\\\/](?![\\\\/])((?:[A-Za-z]:)?[\\\\/]?(?:(?:[^\\\\/]+[\\\\/]+)*[^\\\\/]+[\\\\/]*)))$', 'http://lusr\\example@example.com:80//')",[144050]
"('URIish.java', 'org.eclipse.jgit.transport.URIish', '<init>', '^([a-z][a-z0-9+-]+)://(?:(?:([^/:@]+)(?::([^\\\\/]+))?@)?((?:[^\\\\/:]+)|(?:\\[[0-9a-f:]+\\]))(?::(\\d+))?((?:/~(?:[^\\\\/]+))?[\\\\/]))?(.+)?$', 'ssh://me@example.com:80//')",[135241]
"('QuotedString.java', 'org.eclipse.jgit.util.QuotedString$BourneUserPathStyle', 'quote', '^~[A-Za-z0-9_-]+$', '~/')","[192716, 192740]"
"('Description.java', 'org.junit.runner.Description', 'methodAndClassNamePatternGroupOrDefault', '([\\s\\S]*)\\((.*)\\)', 'testInvalidTagNoObject2(org.eclipse.jgit.lib.ObjectCheckerTest)')","[26441, 84758]"
"('URIish.java', 'org.eclipse.jgit.transport.URIish', '<init>', '^(file):([\\\\/](?![\\\\/])((?:[A-Za-z]:)?[\\\\/]?(?:(?:[^\\\\/]+[\\\\/]+)*[^\\\\/]+[\\\\/]*)))$', 'ssh+git://lusr\\example@1.2.3.4/D:/x')","[154262, 154446]"
"('URIish.java', 'org.eclipse.jgit.transport.URIish', '<init>', '^([a-z][a-z0-9+-]+)://(?:(?:([^/:@]+)(?::([^\\\\/]+))?@)?((?:[^\\\\/:]+)|(?:\\[[0-9a-f:]+\\]))(?::(\\d+))?((?:/~(?:[^\\\\/]+))?[\\\\/]))?(.+)?$', 'ssh://lusr\\example@example.com:80//abc')",[137495]
"('Description.java', 'org.junit.runner.Description', 'methodAndClassNamePatternGroupOrDefault', '([\\s\\S]*)\\((.*)\\)', 'testValidTree3(org.eclipse.jgit.lib.ObjectCheckerTest)')","[25559, 83834]"
"('Description.java', 'org.junit.runner.Description', 'methodAndClassNamePatternGroupOrDefault', '([\\s\\S]*)\\((.*)\\)', 'testMergeSuccessAllStrategies(org.eclipse.jgit.api.MergeCommandTest)')","[44509, 102094]"
"('URIish.java', 'org.eclipse.jgit.transport.URIish', '<init>', '^(file):([\\\\/](?![\\\\/])((?:[A-Za-z]:)?[\\\\/]?(?:(?:[^\\\\/]+[\\\\/]+)*[^\\\\/]+[\\\\/]*)))$', 'ssh+git://l usr\\example.com:wtf@example.com:80//')",[126386]
"('URIish.java', 'org.eclipse.jgit.transport.URIish', '<init>', '^(file):([\\\\/](?![\\\\/])((?:[A-Za-z]:)?[\\\\/]?(?:(?:[^\\\\/]+[\\\\/]+)*[^\\\\/]+[\\\\/]*)))$', 'http://lusr\\example@example.com/D:\\x')","[157252, 157436]"
"('Description.java', 'org.junit.runner.Description', 'methodAndClassNamePatternGroupOrDefault', '([\\s\\S]*)\\((.*)\\)', 'dropAll(org.eclipse.jgit.api.StashDropCommandTest)')","[52143, 109574]"
"('Description.java', 'org.junit.runner.Description', 'methodAndClassNamePatternGroupOrDefault', '([\\s\\S]*)\\((.*)\\)', 'testHasFlags(org.eclipse.jgit.revwalk.LIFORevQueueTest)')","[6565, 65508]"
"('Description.java', 'org.junit.runner.Description', 'methodAndClassNamePatternGroupOrDefault', '([\\s\\S]*)\\((.*)\\)', 'org.eclipse.jgit.util.StringUtilsTest')","[33307, 186667]"
"('Description.java', 'org.junit.runner.Description', 'methodAndClassNamePatternGroupOrDefault', '([\\s\\S]*)\\((.*)\\)', 'testAlphaGroupCase1(org.eclipse.jgit.fnmatch.FileNameMatcherTest)')","[17194, 75628]"
"('Description.java', 'org.junit.runner.Description', 'methodAndClassNamePatternGroupOrDefault', '([\\s\\S]*)\\((.*)\\)', 'testCreateOrphanBranchWithStartPoint(org.eclipse.jgit.api.CheckoutCommandTest)')","[43337, 100906]"
"('URIish.java', 'org.eclipse.jgit.transport.URIish', '<init>', '^(file):([\\\\/](?![\\\\/])((?:[A-Za-z]:)?[\\\\/]?(?:(?:[^\\\\/]+[\\\\/]+)*[^\\\\/]+[\\\\/]*)))$', 'ssh://me:wtf@1.2.3.4:1234/D:/x')",[122246]
"('Description.java', 'org.junit.runner.Description', 'methodAndClassNamePatternGroupOrDefault', '([\\s\\S]*)\\((.*)\\)', 'repositoryWithUninitializedModule(org.eclipse.jgit.submodule.SubmoduleInitTest)')","[19439, 77960]"
"('Description.java', 'org.junit.runner.Description', 'methodAndClassNamePatternGroupOrDefault', '([\\s\\S]*)\\((.*)\\)', 'testNoSubtree_NoTreeWalk(org.eclipse.jgit.dircache.DirCacheIteratorTest)')","[12524, 71074]"
"('URIish.java', 'org.eclipse.jgit.transport.URIish', '<init>', '^([\\\\/]?((?:[A-Za-z]:)?[\\\\/]?(?:(?:[^\\\\/]+[\\\\/]+)*[^\\\\/]+[\\\\/]*)))$', '/tmp/jgit_test_7801778247778239084_tmp/tmp_7326340281197098170.git')",[117448]
"('Description.java', 'org.junit.runner.Description', 'methodAndClassNamePatternGroupOrDefault', '([\\s\\S]*)\\((.*)\\)', 'testRebaseWithUntrackedFile(org.eclipse.jgit.api.RebaseCommandTest)')","[45360, 102886]"
"('Description.java', 'org.junit.runner.Description', 'methodAndClassNamePatternGroupOrDefault', '([\\s\\S]*)\\((.*)\\)', 'testDirectoryFileConflicts_19(org.eclipse.jgit.lib.DirCacheCheckoutTest)')","[23773, 82162]"
"('Description.java', 'org.junit.runner.Description', 'methodAndClassNamePatternGroupOrDefault', '([\\s\\S]*)\\((.*)\\)', 'testDirectoryFileConflicts_16(org.eclipse.jgit.lib.DirCacheCheckoutTest)')","[23710, 82096]"
"('Description.java', 'org.junit.runner.Description', 'methodAndClassNamePatternGroupOrDefault', '([\\s\\S]*)\\((.*)\\)', 'testSaveAddURI(org.eclipse.jgit.transport.RemoteConfigTest)')","[763, 59788]"
"('URIish.java', 'org.eclipse.jgit.transport.URIish', '<init>', '^([a-z][a-z0-9+-]+)://(?:(?:([^/:@]+)(?::([^\\\\/]+))?@)?((?:[^\\\\/:]+)|(?:\\[[0-9a-f:]+\\]))(?::(\\d+))?((?:/~(?:[^\\\\/]+))?[\\\\/]))?(.+)?$', 'ssh://example.com//abc')","[161599, 161783, 162703, 162887, 163807, 163991]"
"('Description.java', 'org.junit.runner.Description', 'methodAndClassNamePatternGroupOrDefault', '([\\s\\S]*)\\((.*)\\)', 'testForceMasterMaster(org.eclipse.jgit.transport.RefSpecTest)')","[2647, 61702]"
"('Description.java', 'org.junit.runner.Description', 'methodAndClassNamePatternGroupOrDefault', '([\\s\\S]*)\\((.*)\\)', 'testGetRefs_LooseOverridesPacked(org.eclipse.jgit.internal.storage.file.RefDirectoryTest)')","[58270, 115316]"
"('URIish.java', 'org.eclipse.jgit.transport.URIish', '<init>', '^([a-z][a-z0-9+-]+)://(?:(?:([^/:@]+)(?::([^\\\\/]+))?@)?((?:[^\\\\/:]+)|(?:\\[[0-9a-f:]+\\]))(?::(\\d+))?((?:/~(?:[^\\\\/]+))?[\\\\/]))?(.+)?$', '/tmp/jgit_test_8508429422333606359_tmp/tmp_7349125838900302966/.git')","[206463, 206601]"
"('Description.java', 'org.junit.runner.Description', 'methodAndClassNamePatternGroupOrDefault', '([\\s\\S]*)\\((.*)\\)', 'testFormatMonths(org.eclipse.jgit.util.RelativeDateFormatterTest)')","[35723, 93646]"
"('URIish.java', 'org.eclipse.jgit.transport.URIish', '<init>', '^(file):([\\\\/](?![\\\\/])((?:[A-Za-z]:)?[\\\\/]?(?:(?:[^\\\\/]+[\\\\/]+)*[^\\\\/]+[\\\\/]*)))$', 'ssh+git://me@[::1]:1234/D:/x')",[139174]
"('Description.java', 'org.junit.runner.Description', 'methodAndClassNamePatternGroupOrDefault', '([\\s\\S]*)\\((.*)\\)', 'testPullConfigLocalBranch(org.eclipse.jgit.api.BranchCommandTest)')","[47469, 104976]"
"('URIish.java', 'org.eclipse.jgit.transport.URIish', '<init>', '^(file):([\\\\/](?![\\\\/])((?:[A-Za-z]:)?[\\\\/]?(?:(?:[^\\\\/]+[\\\\/]+)*[^\\\\/]+[\\\\/]*)))$', 'ssh://lusr\\example@example.com:1234//abc')",[137288]
"('URIish.java', 'org.eclipse.jgit.transport.URIish', '<init>', '^([a-z][a-z0-9+-]+)://(?:(?:([^/:@]+)(?::([^\\\\/]+))?@)?((?:[^\\\\/:]+)|(?:\\[[0-9a-f:]+\\]))(?::(\\d+))?((?:/~(?:[^\\\\/]+))?[\\\\/]))?(.+)?$', 'https://l usr\\example.com:wtf@example.com:1234/D:/x')",[132941]
"('Description.java', 'org.junit.runner.Description', 'methodAndClassNamePatternGroupOrDefault', '([\\s\\S]*)\\((.*)\\)', 'testNotEquals1(org.eclipse.jgit.diff.EditTest)')","[15957, 74352]"
"('Description.java', 'org.junit.runner.Description', 'methodAndClassNamePatternGroupOrDefault', '([\\s\\S]*)\\((.*)\\)', 'testEncode_Unicode(org.eclipse.jgit.lib.ConstantsEncodingTest)')","[24000, 82360]"
"('Description.java', 'org.junit.runner.Description', 'methodAndClassNamePatternGroupOrDefault', '([\\s\\S]*)\\((.*)\\)', 'testWritePack2SizeOffsetsVsRefs(org.eclipse.jgit.internal.storage.file.PackWriterTest)')","[55215, 112434]"
"('Description.java', 'org.junit.runner.Description', 'methodAndClassNamePatternGroupOrDefault', '([\\s\\S]*)\\((.*)\\)', 'testRenameOverNonExistingFile(org.eclipse.jgit.util.FileUtilTest)')","[33763, 91732]"
"('URIish.java', 'org.eclipse.jgit.transport.URIish', '<init>', '^(file):([\\\\/](?![\\\\/])((?:[A-Za-z]:)?[\\\\/]?(?:(?:[^\\\\/]+[\\\\/]+)*[^\\\\/]+[\\\\/]*)))$', 'ssh+git://l usr\\example.com@[::1]:1234/D:\\x')",[140324]
"('URIish.java', 'org.eclipse.jgit.transport.URIish', '<init>', '^(file):([\\\\/](?![\\\\/])((?:[A-Za-z]:)?[\\\\/]?(?:(?:[^\\\\/]+[\\\\/]+)*[^\\\\/]+[\\\\/]*)))$', 'ssh://me@example.com:80/D:/x')",[135310]
"('Description.java', 'org.junit.runner.Description', 'methodAndClassNamePatternGroupOrDefault', '([\\s\\S]*)\\((.*)\\)', 'testGetRefs_DiscoversModifiedLoose(org.eclipse.jgit.internal.storage.file.RefDirectoryTest)')","[58291, 115338]"
"('Description.java', 'org.junit.runner.Description', 'methodAndClassNamePatternGroupOrDefault', '([\\s\\S]*)\\((.*)\\)', 'testCreateFromEmpty(org.eclipse.jgit.notes.NoteMapTest)')","[40692, 98354]"
"('URIish.java', 'org.eclipse.jgit.transport.URIish', '<init>', '^([\\\\/]?((?:[A-Za-z]:)?[\\\\/]?(?:(?:[^\\\\/]+[\\\\/]+)*[^\\\\/]+[\\\\/]*)))$', '/tmp/jgit_test_104863573169670211_tmp/tmp_8401616164607390426')","[200453, 200598, 200748, 200898]"
"('Description.java', 'org.junit.runner.Description', 'methodAndClassNamePatternGroupOrDefault', '([\\s\\S]*)\\((.*)\\)', 'repositoryWithSubmodule(org.eclipse.jgit.submodule.SubmoduleUpdateTest)')","[19542, 78048]"
"('URIish.java', 'org.eclipse.jgit.transport.URIish', '<init>', '^([a-z][a-z0-9+-]+)://(?:(?:([^/:@]+)(?::([^\\\\/]+))?@)?((?:[^\\\\/:]+)|(?:\\[[0-9a-f:]+\\]))(?::(\\d+))?((?:/~(?:[^\\\\/]+))?[\\\\/]))?(.+)?$', 'http://lusr\\example:wtf@1.2.3.4:1234//')",[131009]
"('URIish.java', 'org.eclipse.jgit.transport.URIish', '<init>', '^([a-z][a-z0-9+-]+)://(?:(?:([^/:@]+)(?::([^\\\\/]+))?@)?((?:[^\\\\/:]+)|(?:\\[[0-9a-f:]+\\]))(?::(\\d+))?((?:/~(?:[^\\\\/]+))?[\\\\/]))?(.+)?$', 'https://lusr\\example@1.2.3.4/D:\\x')","[160955, 161139]"
"('Description.java', 'org.junit.runner.Description', 'methodAndClassNamePatternGroupOrDefault', '([\\s\\S]*)\\((.*)\\)', 'checkUntrackedFolderIsNotAConflict(org.eclipse.jgit.merge.ResolveMergerTest)')","[10574, 69270]"
"('URIish.java', 'org.eclipse.jgit.transport.URIish', '<init>', '^(file):([\\\\/](?![\\\\/])((?:[A-Za-z]:)?[\\\\/]?(?:(?:[^\\\\/]+[\\\\/]+)*[^\\\\/]+[\\\\/]*)))$', 'http://lusr\\example@[::1]//abc')","[157896, 158080]"
"('ChangeIdUtil.java', 'org.eclipse.jgit.util.ChangeIdUtil', 'indexOfFirstFooterLine', '(^[a-zA-Z0-9-]+:(?!//).*$)', 'This reverts commit ca96c31f7d0a232920d6dfadc47945df09707490.')","[207359, 207386, 207413, 207440]"
"('URIish.java', 'org.eclipse.jgit.transport.URIish', '<init>', '^(file):([\\\\/](?![\\\\/])((?:[A-Za-z]:)?[\\\\/]?(?:(?:[^\\\\/]+[\\\\/]+)*[^\\\\/]+[\\\\/]*)))$', 'ssh://me@example.com:80//abc')",[135264]
"('Description.java', 'org.junit.runner.Description', 'methodAndClassNamePatternGroupOrDefault', '([\\s\\S]*)\\((.*)\\)', 'testTwoSameDifferByAssumeValid(org.eclipse.jgit.treewalk.filter.InterIndexDiffFilterTest)')","[31567, 89730]"
"('Description.java', 'org.junit.runner.Description', 'methodAndClassNamePatternGroupOrDefault', '([\\s\\S]*)\\((.*)\\)', 'testSingleRevision(org.eclipse.jgit.api.BlameCommandTest)')","[52225, 109640]"
"('URIish.java', 'org.eclipse.jgit.transport.URIish', '<init>', '^([a-z][a-z0-9+-]+)://(?:(?:([^/:@]+)(?::([^\\\\/]+))?@)?((?:[^\\\\/:]+)|(?:\\[[0-9a-f:]+\\]))(?::(\\d+))?((?:/~(?:[^\\\\/]+))?[\\\\/]))?(.+)?$', 'https://l usr\\example.com:wtf@example.com:80/D:/x')",[133125]
"('URIish.java', 'org.eclipse.jgit.transport.URIish', '<init>', '^(file):([\\\\/](?![\\\\/])((?:[A-Za-z]:)?[\\\\/]?(?:(?:[^\\\\/]+[\\\\/]+)*[^\\\\/]+[\\\\/]*)))$', 'ssh+git://me@example.com:1234//abc')",[138392]
"('Description.java', 'org.junit.runner.Description', 'methodAndClassNamePatternGroupOrDefault', '([\\s\\S]*)\\((.*)\\)', 'testSpaceGroupCase4(org.eclipse.jgit.fnmatch.FileNameMatcherTest)')","[17404, 75848]"
"('URIish.java', 'org.eclipse.jgit.transport.URIish', '<init>', '^([a-z][a-z0-9+-]+)://(?:(?:([^/:@]+)(?::([^\\\\/]+))?@)?((?:[^\\\\/:]+)|(?:\\[[0-9a-f:]+\\]))(?::(\\d+))?((?:/~(?:[^\\\\/]+))?[\\\\/]))?(.+)?$', 'ssh://lusr\\example:wtf@1.2.3.4:80//abc')",[124615]
"('URIish.java', 'org.eclipse.jgit.transport.URIish', '<init>', '^([a-z][a-z0-9+-]+)://(?:(?:([^/:@]+)(?::([^\\\\/]+))?@)?((?:[^\\\\/:]+)|(?:\\[[0-9a-f:]+\\]))(?::(\\d+))?((?:/~(?:[^\\\\/]+))?[\\\\/]))?(.+)?$', 'ssh://l usr\\example.com@1.2.3.4//abc')","[149823, 150007]"
"('Description.java', 'org.junit.runner.Description', 'methodAndClassNamePatternGroupOrDefault', '([\\s\\S]*)\\((.*)\\)', 'repositoryWithInitializedSubmodule(org.eclipse.jgit.submodule.SubmoduleUpdateTest)')","[19584, 78092]"
"('Description.java', 'org.junit.runner.Description', 'methodAndClassNamePatternGroupOrDefault', '([\\s\\S]*)\\((.*)\\)', 'testOnlyOption_f1_11_a(org.eclipse.jgit.api.CommitOnlyTest)')","[49809, 107308]"
"('Description.java', 'org.junit.runner.Description', 'methodAndClassNamePatternGroupOrDefault', '([\\s\\S]*)\\((.*)\\)', 'dropSingleStashedCommit(org.eclipse.jgit.api.StashDropCommandTest)')","[51996, 109420]"
"('Description.java', 'org.junit.runner.Description', 'methodAndClassNamePatternGroupOrDefault', '([\\s\\S]*)\\((.*)\\)', 'testInvalidCommitInvalidParent4(org.eclipse.jgit.lib.ObjectCheckerTest)')","[25958, 84252]"
"('Description.java', 'org.junit.runner.Description', 'methodAndClassNamePatternGroupOrDefault', '([\\s\\S]*)\\((.*)\\)', 'testEmptyMap(org.eclipse.jgit.lib.ObjectIdOwnerMapTest)')","[22059, 80446]"
"('URIish.java', 'org.eclipse.jgit.transport.URIish', '<init>', '^(file):([\\\\/](?![\\\\/])((?:[A-Za-z]:)?[\\\\/]?(?:(?:[^\\\\/]+[\\\\/]+)*[^\\\\/]+[\\\\/]*)))$', 'https://l usr\\example.com@1.2.3.4/D:/x')","[159782, 159966]"
"('Description.java', 'org.junit.runner.Description', 'methodAndClassNamePatternGroupOrDefault', '([\\s\\S]*)\\((.*)\\)', 'testRevObjectTypes(org.eclipse.jgit.revwalk.RevObjectTest)')","[8597, 67378]"
"('URIish.java', 'org.eclipse.jgit.transport.URIish', '<init>', '^([a-z][a-z0-9+-]+)://(?:(?:([^/:@]+)(?::([^\\\\/]+))?@)?((?:[^\\\\/:]+)|(?:\\[[0-9a-f:]+\\]))(?::(\\d+))?((?:/~(?:[^\\\\/]+))?[\\\\/]))?(.+)?$', 'https://l usr\\example.com@example.com//')","[159345, 159529]"
"('URIish.java', 'org.eclipse.jgit.transport.URIish', '<init>', '^(file):([\\\\/](?![\\\\/])((?:[A-Za-z]:)?[\\\\/]?(?:(?:[^\\\\/]+[\\\\/]+)*[^\\\\/]+[\\\\/]*)))$', 'http://me@1.2.3.4/D:\\x')","[155412, 155596]"
"('Description.java', 'org.junit.runner.Description', 'methodAndClassNamePatternGroupOrDefault', '([\\s\\S]*)\\((.*)\\)', 'org.eclipse.jgit.transport.SideBandOutputStreamTest')","[4441, 181055]"
"('URIish.java', 'org.eclipse.jgit.transport.URIish', '<init>', '^([a-z][a-z0-9+-]+)://(?:(?:([^/:@]+)(?::([^\\\\/]+))?@)?((?:[^\\\\/:]+)|(?:\\[[0-9a-f:]+\\]))(?::(\\d+))?((?:/~(?:[^\\\\/]+))?[\\\\/]))?(.+)?$', 'ssh://me@[::1]:1234//abc')",[135839]
"('Description.java', 'org.junit.runner.Description', 'methodAndClassNamePatternGroupOrDefault', '([\\s\\S]*)\\((.*)\\)', 'testVerySimpleStarCase2(org.eclipse.jgit.fnmatch.FileNameMatcherTest)')","[18664, 77168]"
"('URIish.java', 'org.eclipse.jgit.transport.URIish', '<init>', '^(file):([\\\\/](?![\\\\/])((?:[A-Za-z]:)?[\\\\/]?(?:(?:[^\\\\/]+[\\\\/]+)*[^\\\\/]+[\\\\/]*)))$', 'https://me:wtf@1.2.3.4:1234/D:\\x')",[132228]
"('URIish.java', 'org.eclipse.jgit.transport.URIish', '<init>', '^(file):([\\\\/](?![\\\\/])((?:[A-Za-z]:)?[\\\\/]?(?:(?:[^\\\\/]+[\\\\/]+)*[^\\\\/]+[\\\\/]*)))$', 'http://l usr\\example.com@example.com/D:\\x')","[156148, 156332]"
"('Description.java', 'org.junit.runner.Description', 'methodAndClassNamePatternGroupOrDefault', '([\\s\\S]*)\\((.*)\\)', 'testMissingSubtree_DetectFileAdded_FileModified(org.eclipse.jgit.treewalk.TreeWalkBasicDiffTest)')","[29445, 87706]"
"('Description.java', 'org.junit.runner.Description', 'methodAndClassNamePatternGroupOrDefault', '([\\s\\S]*)\\((.*)\\)', 'testUpdateWorkingDirectoryFromHeadWithIndexChange(org.eclipse.jgit.api.PathCheckoutCommandTest)')","[46948, 104470]"
"('Description.java', 'org.junit.runner.Description', 'methodAndClassNamePatternGroupOrDefault', '([\\s\\S]*)\\((.*)\\)', 'dropFirstStashedCommit(org.eclipse.jgit.api.StashDropCommandTest)')","[52038, 109464]"
"('Description.java', 'org.junit.runner.Description', 'methodAndClassNamePatternGroupOrDefault', '([\\s\\S]*)\\((.*)\\)', 'testCheckoutOutChangesAutoCRLFfalse(org.eclipse.jgit.lib.DirCacheCheckoutTest)')","[23563, 81942]"
"('URIish.java', 'org.eclipse.jgit.transport.URIish', '<init>', '^([a-z][a-z0-9+-]+)://(?:(?:([^/:@]+)(?::([^\\\\/]+))?@)?((?:[^\\\\/:]+)|(?:\\[[0-9a-f:]+\\]))(?::(\\d+))?((?:/~(?:[^\\\\/]+))?[\\\\/]))?(.+)?$', 'ssh+git://l usr\\example.com:wtf@[::1]:1234//abc')",[127007]
"('URIish.java', 'org.eclipse.jgit.transport.URIish', '<init>', '^(file):([\\\\/](?![\\\\/])((?:[A-Za-z]:)?[\\\\/]?(?:(?:[^\\\\/]+[\\\\/]+)*[^\\\\/]+[\\\\/]*)))$', 'http://me@[::1]:1234/D:/x')",[142486]
"('Description.java', 'org.junit.runner.Description', 'methodAndClassNamePatternGroupOrDefault', '([\\s\\S]*)\\((.*)\\)', 'testFastForwardWithMultipleCommitsOnDifferentBranches(org.eclipse.jgit.api.RebaseCommandTest)')","[45570, 103106]"
"('URIish.java', 'org.eclipse.jgit.transport.URIish', '<init>', '^([a-z][a-z0-9+-]+)://(?:(?:([^/:@]+)(?::([^\\\\/]+))?@)?((?:[^\\\\/:]+)|(?:\\[[0-9a-f:]+\\]))(?::(\\d+))?((?:/~(?:[^\\\\/]+))?[\\\\/]))?(.+)?$', '/tmp/jgit_test_3702623628615032288_tmp/tmp_6188209109110356895')","[200946, 201076, 201223]"
"('URIish.java', 'org.eclipse.jgit.transport.URIish', '<init>', '^(file):([\\\\/](?![\\\\/])((?:[A-Za-z]:)?[\\\\/]?(?:(?:[^\\\\/]+[\\\\/]+)*[^\\\\/]+[\\\\/]*)))$', 'ssh://lusr\\example@[::1]:80//')",[138162]
"('URIish.java', 'org.eclipse.jgit.transport.URIish', '<init>', '^(file):([\\\\/](?![\\\\/])((?:[A-Za-z]:)?[\\\\/]?(?:(?:[^\\\\/]+[\\\\/]+)*[^\\\\/]+[\\\\/]*)))$', '/a/b/.git')",[179792]
"('URIish.java', 'org.eclipse.jgit.transport.URIish', '<init>', '^(file):([\\\\/](?![\\\\/])((?:[A-Za-z]:)?[\\\\/]?(?:(?:[^\\\\/]+[\\\\/]+)*[^\\\\/]+[\\\\/]*)))$', 'https://me@1.2.3.4//abc')","[158632, 158816]"
"('Description.java', 'org.junit.runner.Description', 'methodAndClassNamePatternGroupOrDefault', '([\\s\\S]*)\\((.*)\\)', 'test2SideBranches(org.eclipse.jgit.revplot.PlotCommitListTest)')","[40131, 97826]"
"('URIish.java', 'org.eclipse.jgit.transport.URIish', '<init>', '^([a-z][a-z0-9+-]+)://(?:(?:([^/:@]+)(?::([^\\\\/]+))?@)?((?:[^\\\\/:]+)|(?:\\[[0-9a-f:]+\\]))(?::(\\d+))?((?:/~(?:[^\\\\/]+))?[\\\\/]))?(.+)?$', 'http://l usr\\example.com@example.com:1234/D:/x')",[142877]
"('ChangeIdUtil.java', 'org.eclipse.jgit.util.ChangeIdUtil', 'indexOfFirstFooterLine', '(^[a-zA-Z0-9-]+:(?!//).*$)', 'http://example.com/ fixes this')",[190238]
"('URIish.java', 'org.eclipse.jgit.transport.URIish', '<init>', '^([a-z][a-z0-9+-]+)://(?:(?:([^/:@]+)(?::([^\\\\/]+))?@)?((?:[^\\\\/:]+)|(?:\\[[0-9a-f:]+\\]))(?::(\\d+))?((?:/~(?:[^\\\\/]+))?[\\\\/]))?(.+)?$', 'ssh://lusr\\example@[::1]/D:/x')","[151341, 151525]"
"('URIish.java', 'org.eclipse.jgit.transport.URIish', '<init>', '^(?:([^/:@]+)(?::([^\\\\/]+))?@)?([^\\\\/:]{2,}):([\\\\/](?:(?:[^\\\\/]+[\\\\/]+)*[^\\\\/]+[\\\\/]*))$', '/a/b/c.git/')",[175836]
"('URIish.java', 'org.eclipse.jgit.transport.URIish', '<init>', '^(file):([\\\\/](?![\\\\/])((?:[A-Za-z]:)?[\\\\/]?(?:(?:[^\\\\/]+[\\\\/]+)*[^\\\\/]+[\\\\/]*)))$', 'ssh+git://l usr\\example.com:wtf@1.2.3.4:1234//')",[126570]
"('URIish.java', 'org.eclipse.jgit.transport.URIish', '<init>', '^([a-z][a-z0-9+-]+)://(?:(?:([^/:@]+)(?::([^\\\\/]+))?@)?((?:[^\\\\/:]+)|(?:\\[[0-9a-f:]+\\]))(?::(\\d+))?((?:/~(?:[^\\\\/]+))?[\\\\/]))?(.+)?$', 'ssh+git://l usr\\example.com:wtf@example.com:80//')",[126409]
"('Description.java', 'org.junit.runner.Description', 'methodAndClassNamePatternGroupOrDefault', '([\\s\\S]*)\\((.*)\\)', 'org.eclipse.jgit.internal.storage.file.PackReverseIndexTest')","[57579, 210326]"
"('Description.java', 'org.junit.runner.Description', 'methodAndClassNamePatternGroupOrDefault', '([\\s\\S]*)\\((.*)\\)', 'testBeforeAfterCuts(org.eclipse.jgit.diff.EditTest)')","[16041, 74440]"
"('Description.java', 'org.junit.runner.Description', 'methodAndClassNamePatternGroupOrDefault', '([\\s\\S]*)\\((.*)\\)', 'testMaliciousAbsolutePathTwoLevelsSecondBad(org.eclipse.jgit.lib.DirCacheCheckoutMaliciousPathTest)')","[21538, 79940]"
"('Description.java', 'org.junit.runner.Description', 'methodAndClassNamePatternGroupOrDefault', '([\\s\\S]*)\\((.*)\\)', 'testOnlyOption_f1_10_c(org.eclipse.jgit.api.CommitOnlyTest)')","[49746, 107242]"
"('URIish.java', 'org.eclipse.jgit.transport.URIish', '<init>', '^([\\\\/]?((?:[A-Za-z]:)?[\\\\/]?(?:(?:[^\\\\/]+[\\\\/]+)*[^\\\\/]+[\\\\/]*)))$', '/tmp/jgit_test_4163267304466129697_tmp/tmp_7112159680923869662.git')","[117113, 117243]"
"('URIish.java', 'org.eclipse.jgit.transport.URIish', '<init>', '^(file):([\\\\/](?![\\\\/])((?:[A-Za-z]:)?[\\\\/]?(?:(?:[^\\\\/]+[\\\\/]+)*[^\\\\/]+[\\\\/]*)))$', 'ssh://me:wtf@example.com:1234/D:\\x')",[121924]
"('Description.java', 'org.junit.runner.Description', 'methodAndClassNamePatternGroupOrDefault', '([\\s\\S]*)\\((.*)\\)', 'testNextDoesNothing(org.eclipse.jgit.treewalk.EmptyTreeIteratorTest)')","[29775, 87992]"
"('URIish.java', 'org.eclipse.jgit.transport.URIish', '<init>', '^([a-z][a-z0-9+-]+)://(?:(?:([^/:@]+)(?::([^\\\\/]+))?@)?((?:[^\\\\/:]+)|(?:\\[[0-9a-f:]+\\]))(?::(\\d+))?((?:/~(?:[^\\\\/]+))?[\\\\/]))?(.+)?$', 'ssh+git://l usr\\example.com@[::1]:80//')",[140393]
"('URIish.java', 'org.eclipse.jgit.transport.URIish', '<init>', '^([a-z][a-z0-9+-]+)://(?:(?:([^/:@]+)(?::([^\\\\/]+))?@)?((?:[^\\\\/:]+)|(?:\\[[0-9a-f:]+\\]))(?::(\\d+))?((?:/~(?:[^\\\\/]+))?[\\\\/]))?(.+)?$', 'ssh+git://l usr\\example.com:wtf@[::1]:1234/D:\\x')",[127099]
"('Description.java', 'org.junit.runner.Description', 'methodAndClassNamePatternGroupOrDefault', '([\\s\\S]*)\\((.*)\\)', 'org.eclipse.jgit.util.BlockListTest')","[35349, 186883]"
"('Description.java', 'org.junit.runner.Description', 'methodAndClassNamePatternGroupOrDefault', '([\\s\\S]*)\\((.*)\\)', 'testACommitWithBug_SubButNoBody(org.eclipse.jgit.util.ChangeIdUtilTest)')","[38309, 96176]"
"('Description.java', 'org.junit.runner.Description', 'methodAndClassNamePatternGroupOrDefault', '([\\s\\S]*)\\((.*)\\)', 'testTwoLevelSubtree(org.eclipse.jgit.dircache.DirCacheTreeTest)')","[11942, 70524]"
"('URIish.java', 'org.eclipse.jgit.transport.URIish', '<init>', '^(file):([\\\\/](?![\\\\/])((?:[A-Za-z]:)?[\\\\/]?(?:(?:[^\\\\/]+[\\\\/]+)*[^\\\\/]+[\\\\/]*)))$', 'ssh://lusr\\example@1.2.3.4:1234/D:/x')",[137702]
"('Description.java', 'org.junit.runner.Description', 'methodAndClassNamePatternGroupOrDefault', '([\\s\\S]*)\\((.*)\\)', 'testRenameRefNameColission2avoided(org.eclipse.jgit.internal.storage.file.RefUpdateTest)')","[55793, 112940]"
"('URIish.java', 'org.eclipse.jgit.transport.URIish', '<init>', '^(file):([\\\\/](?![\\\\/])((?:[A-Za-z]:)?[\\\\/]?(?:(?:[^\\\\/]+[\\\\/]+)*[^\\\\/]+[\\\\/]*)))$', 'ssh://%3ax%25:%40%41x@example.com:33/some%c3%a5/p%20a th')","[176434, 176480]"
"('URIish.java', 'org.eclipse.jgit.transport.URIish', '<init>', '^([a-z][a-z0-9+-]+)://(?:(?:([^/:@]+)(?::([^\\\\/]+))?@)?((?:[^\\\\/:]+)|(?:\\[[0-9a-f:]+\\]))(?::(\\d+))?((?:/~(?:[^\\\\/]+))?[\\\\/]))?(.+)?$', 'ssh+git://l usr\\example.com@example.com//')","[152721, 152905]"
"('URIish.java', 'org.eclipse.jgit.transport.URIish', '<init>', '^(file):([\\\\/](?![\\\\/])((?:[A-Za-z]:)?[\\\\/]?(?:(?:[^\\\\/]+[\\\\/]+)*[^\\\\/]+[\\\\/]*)))$', 'http://me@example.com:80//abc')",[141888]
"('Description.java', 'org.junit.runner.Description', 'methodAndClassNamePatternGroupOrDefault', '([\\s\\S]*)\\((.*)\\)', 'testOneBlankLine(org.eclipse.jgit.util.RawParseUtils_LineMapTest)')","[34765, 92722]"
"('Description.java', 'org.junit.runner.Description', 'methodAndClassNamePatternGroupOrDefault', '([\\s\\S]*)\\((.*)\\)', 'testRebaseWithUnstagedMasterChangeBaseCommit(org.eclipse.jgit.api.RebaseCommandTest)')","[45528, 103062]"
"('URIish.java', 'org.eclipse.jgit.transport.URIish', '<init>', '^([a-z][a-z0-9+-]+)://(?:(?:([^/:@]+)(?::([^\\\\/]+))?@)?((?:[^\\\\/:]+)|(?:\\[[0-9a-f:]+\\]))(?::(\\d+))?((?:/~(?:[^\\\\/]+))?[\\\\/]))?(.+)?$', 'ssh://lusr\\example@[::1]//abc')","[151295, 151479]"
"('URIish.java', 'org.eclipse.jgit.transport.URIish', '<init>', '^(file):([\\\\/](?![\\\\/])((?:[A-Za-z]:)?[\\\\/]?(?:(?:[^\\\\/]+[\\\\/]+)*[^\\\\/]+[\\\\/]*)))$', 'ssh+git://me@[::1]:80/D:\\x')",[139404]
"('URIish.java', 'org.eclipse.jgit.transport.URIish', '<init>', '^(file):([\\\\/](?![\\\\/])((?:[A-Za-z]:)?[\\\\/]?(?:(?:[^\\\\/]+[\\\\/]+)*[^\\\\/]+[\\\\/]*)))$', 'https://l usr\\example.com:wtf@1.2.3.4:80//abc')",[133424]
"('Description.java', 'org.junit.runner.Description', 'methodAndClassNamePatternGroupOrDefault', '([\\s\\S]*)\\((.*)\\)', 'testParseEncoding_ISO8859_1_encoding(org.eclipse.jgit.util.RawParseUtilsTest)')","[36826, 94702]"
"('Description.java', 'org.junit.runner.Description', 'methodAndClassNamePatternGroupOrDefault', '([\\s\\S]*)\\((.*)\\)', 'testSingleDeletion(org.eclipse.jgit.api.MergeCommandTest)')","[44026, 101588]"
"('Description.java', 'org.junit.runner.Description', 'methodAndClassNamePatternGroupOrDefault', '([\\s\\S]*)\\((.*)\\)', 'checkMergeEqualTreesInCore(org.eclipse.jgit.merge.ResolveMergerTest)')","[10595, 69292]"
"('Description.java', 'org.junit.runner.Description', 'methodAndClassNamePatternGroupOrDefault', '([\\s\\S]*)\\((.*)\\)', 'testParseRename100_NewStyle(org.eclipse.jgit.patch.FileHeaderTest)')","[39320, 97056]"
"('Description.java', 'org.junit.runner.Description', 'methodAndClassNamePatternGroupOrDefault', '([\\s\\S]*)\\((.*)\\)', 'testTaggingOnHead(org.eclipse.jgit.api.TagCommandTest)')","[41587, 99212]"
"('URIish.java', 'org.eclipse.jgit.transport.URIish', '<init>', '^([a-z][a-z0-9+-]+)://(?:(?:([^/:@]+)(?::([^\\\\/]+))?@)?((?:[^\\\\/:]+)|(?:\\[[0-9a-f:]+\\]))(?::(\\d+))?((?:/~(?:[^\\\\/]+))?[\\\\/]))?(.+)?$', 'ssh+git://lusr\\example:wtf@[::1]:1234//abc')",[128111]
"('URIish.java', 'org.eclipse.jgit.transport.URIish', '<init>', '^(?:([^/:@]+)(?::([^\\\\/]+))?@)?([^\\\\/:]{2,}):([\\\\/](?:(?:[^\\\\/]+[\\\\/]+)*[^\\\\/]+[\\\\/]*))$', '/tmp/jgit_test_5272834838855978774_tmp/tmp_5245828813622345398')","[200164, 200304]"
"('URIish.java', 'org.eclipse.jgit.transport.URIish', '<init>', '^(file):([\\\\/](?![\\\\/])((?:[A-Za-z]:)?[\\\\/]?(?:(?:[^\\\\/]+[\\\\/]+)*[^\\\\/]+[\\\\/]*)))$', 'ssh+git://me:wtf@[::1]:1234//')",[125834]
"('Description.java', 'org.junit.runner.Description', 'methodAndClassNamePatternGroupOrDefault', '([\\s\\S]*)\\((.*)\\)', 'testAlias_OptionsSet(org.eclipse.jgit.transport.OpenSshConfigTest)')","[2355, 61416]"
"('URIish.java', 'org.eclipse.jgit.transport.URIish', '<init>', '^(file):([\\\\/](?![\\\\/])((?:[A-Za-z]:)?[\\\\/]?(?:(?:[^\\\\/]+[\\\\/]+)*[^\\\\/]+[\\\\/]*)))$', 'ssh+git://l usr\\example.com@example.com/D:\\x')","[152836, 153020]"
"('Description.java', 'org.junit.runner.Description', 'methodAndClassNamePatternGroupOrDefault', '([\\s\\S]*)\\((.*)\\)', 'testNoFooters_ShortBodyWithLF(org.eclipse.jgit.revwalk.FooterLineTest)')","[6399, 65354]"
"('URIish.java', 'org.eclipse.jgit.transport.URIish', '<init>', '^([a-z][a-z0-9+-]+)://(?:(?:([^/:@]+)(?::([^\\\\/]+))?@)?((?:[^\\\\/:]+)|(?:\\[[0-9a-f:]+\\]))(?::(\\d+))?((?:/~(?:[^\\\\/]+))?[\\\\/]))?(.+)?$', 'http://lusr\\example:wtf@[::1]:80/D:/x')",[131653]
"('Description.java', 'org.junit.runner.Description', 'methodAndClassNamePatternGroupOrDefault', '([\\s\\S]*)\\((.*)\\)', 'testPathFilterGroup_DoesNotSkipTail(org.eclipse.jgit.dircache.DirCacheBuilderIteratorTest)')","[11612, 70238]"
"('URIish.java', 'org.eclipse.jgit.transport.URIish', '<init>', '^(file):([\\\\/](?![\\\\/])((?:[A-Za-z]:)?[\\\\/]?(?:(?:[^\\\\/]+[\\\\/]+)*[^\\\\/]+[\\\\/]*)))$', 'http://l usr\\example.com:wtf@example.com:1234//abc')",[129560]
"('URIish.java', 'org.eclipse.jgit.transport.URIish', '<init>', '^([a-z][a-z0-9+-]+)://(?:(?:([^/:@]+)(?::([^\\\\/]+))?@)?((?:[^\\\\/:]+)|(?:\\[[0-9a-f:]+\\]))(?::(\\d+))?((?:/~(?:[^\\\\/]+))?[\\\\/]))?(.+)?$', 'ssh://l usr\\example.com:wtf@example.com:80//abc')",[123143]
"('Description.java', 'org.junit.runner.Description', 'methodAndClassNamePatternGroupOrDefault', '([\\s\\S]*)\\((.*)\\)', 'testSuccessfulContentMergeNoCommit(org.eclipse.jgit.api.MergeCommandTest)')","[43900, 101456]"
"('URIish.java', 'org.eclipse.jgit.transport.URIish', '<init>', '^([a-z][a-z0-9+-]+)://(?:(?:([^/:@]+)(?::([^\\\\/]+))?@)?((?:[^\\\\/:]+)|(?:\\[[0-9a-f:]+\\]))(?::(\\d+))?((?:/~(?:[^\\\\/]+))?[\\\\/]))?(.+)?$', 'http://everyones.loves.git/u/2')","[180463, 180511, 180559, 180607, 180655, 180703, 180801, 180849]"
"('Description.java', 'org.junit.runner.Description', 'methodAndClassNamePatternGroupOrDefault', '([\\s\\S]*)\\((.*)\\)', 'testInteractiveRebaseWithModificationShouldNotDeleteDataOnAbort(org.eclipse.jgit.api.RebaseCommandTest)')","[45465, 102996]"
"('Description.java', 'org.junit.runner.Description', 'methodAndClassNamePatternGroupOrDefault', '([\\s\\S]*)\\((.*)\\)', 'noTargetSet(org.eclipse.jgit.api.DescribeCommandTest)')","[44612, 102182]"
"('Description.java', 'org.junit.runner.Description', 'methodAndClassNamePatternGroupOrDefault', '([\\s\\S]*)\\((.*)\\)', 'testAddURI(org.eclipse.jgit.transport.RemoteConfigTest)')","[952, 59986]"
"('URIish.java', 'org.eclipse.jgit.transport.URIish', '<init>', '^([a-z][a-z0-9+-]+)://(?:(?:([^/:@]+)(?::([^\\\\/]+))?@)?((?:[^\\\\/:]+)|(?:\\[[0-9a-f:]+\\]))(?::(\\d+))?((?:/~(?:[^\\\\/]+))?[\\\\/]))?(.+)?$', 'ssh+git://l usr\\example.com:wtf@1.2.3.4:80//abc')",[126823]
"('URIish.java', 'org.eclipse.jgit.transport.URIish', '<init>', '^(file):([\\\\/](?![\\\\/])((?:[A-Za-z]:)?[\\\\/]?(?:(?:[^\\\\/]+[\\\\/]+)*[^\\\\/]+[\\\\/]*)))$', 'https://me:wtf@[::1]:80//abc')",[132688]
"('Description.java', 'org.junit.runner.Description', 'methodAndClassNamePatternGroupOrDefault', '([\\s\\S]*)\\((.*)\\)', 'testRevFilterReceivesParsedCommits(org.eclipse.jgit.revwalk.RevWalkResetTest)')","[8118, 66916]"
"('Description.java', 'org.junit.runner.Description', 'methodAndClassNamePatternGroupOrDefault', '([\\s\\S]*)\\((.*)\\)', 'testWriteEmptyLockEmpty_RealIndex(org.eclipse.jgit.dircache.DirCacheBasicTest)')","[11364, 70018]"
"('Description.java', 'org.junit.runner.Description', 'methodAndClassNamePatternGroupOrDefault', '([\\s\\S]*)\\((.*)\\)', 'org.eclipse.jgit.internal.storage.file.LockFileTest')","[55419, 210002]"
"('URIish.java', 'org.eclipse.jgit.transport.URIish', '<init>', '^(file):([\\\\/](?![\\\\/])((?:[A-Za-z]:)?[\\\\/]?(?:(?:[^\\\\/]+[\\\\/]+)*[^\\\\/]+[\\\\/]*)))$', 'http://lusr\\example@1.2.3.4:1234//')",[144234]
"('Description.java', 'org.junit.runner.Description', 'methodAndClassNamePatternGroupOrDefault', '([\\s\\S]*)\\((.*)\\)', 'testInvalidRefName(org.eclipse.jgit.api.CheckoutCommandTest)')","[43127, 100686]"
"('URIish.java', 'org.eclipse.jgit.transport.URIish', '<init>', '^([a-z][a-z0-9+-]+)://(?:(?:([^/:@]+)(?::([^\\\\/]+))?@)?((?:[^\\\\/:]+)|(?:\\[[0-9a-f:]+\\]))(?::(\\d+))?((?:/~(?:[^\\\\/]+))?[\\\\/]))?(.+)?$', 'http://me:wtf@[::1]:80//')",[129353]
"('URIish.java', 'org.eclipse.jgit.transport.URIish', '<init>', '^(file):([\\\\/](?![\\\\/])((?:[A-Za-z]:)?[\\\\/]?(?:(?:[^\\\\/]+[\\\\/]+)*[^\\\\/]+[\\\\/]*)))$', 'ssh+git://me@1.2.3.4/D:\\x')","[152100, 152284]"
"('Description.java', 'org.junit.runner.Description', 'methodAndClassNamePatternGroupOrDefault', '([\\s\\S]*)\\((.*)\\)', 'testEdit_LcsContainsUnique(org.eclipse.jgit.diff.HistogramDiffTest)')","[15226, 73626]"
"('Description.java', 'org.junit.runner.Description', 'methodAndClassNamePatternGroupOrDefault', '([\\s\\S]*)\\((.*)\\)', 'testSetFive_MixedOrder(org.eclipse.jgit.notes.LeafBucketTest)')","[40318, 98002]"
"('URIish.java', 'org.eclipse.jgit.transport.URIish', '<init>', '^([\\\\/]?((?:[A-Za-z]:)?[\\\\/]?(?:(?:[^\\\\/]+[\\\\/]+)*[^\\\\/]+[\\\\/]*)))$', '/a/b/.git')",[179884]
"('Description.java', 'org.junit.runner.Description', 'methodAndClassNamePatternGroupOrDefault', '([\\s\\S]*)\\((.*)\\)', 'testIncompleteRangesInOneGroupCase1(org.eclipse.jgit.fnmatch.FileNameMatcherTest)')","[18118, 76596]"
"('Description.java', 'org.junit.runner.Description', 'methodAndClassNamePatternGroupOrDefault', '([\\s\\S]*)\\((.*)\\)', 'testSetFive_InOrder(org.eclipse.jgit.notes.LeafBucketTest)')","[40381, 98068]"
"('URIish.java', 'org.eclipse.jgit.transport.URIish', '<init>', '^(file):([\\\\/](?![\\\\/])((?:[A-Za-z]:)?[\\\\/]?(?:(?:[^\\\\/]+[\\\\/]+)*[^\\\\/]+[\\\\/]*)))$', 'file:///tmp/jgit_test_1756171324335390260_tmp/tmp_2941217484004443416/.git/')",[209004]
"('Description.java', 'org.junit.runner.Description', 'methodAndClassNamePatternGroupOrDefault', '([\\s\\S]*)\\((.*)\\)', 'test5(org.eclipse.jgit.revwalk.RevWalkPathFilter6012Test)')","[9492, 68236]"
"('Description.java', 'org.junit.runner.Description', 'methodAndClassNamePatternGroupOrDefault', '([\\s\\S]*)\\((.*)\\)', 'testLeaf(org.eclipse.jgit.lib.SymbolicRefTest)')","[20370, 78796]"
"('URIish.java', 'org.eclipse.jgit.transport.URIish', '<init>', '^([a-z][a-z0-9+-]+)://(?:(?:([^/:@]+)(?::([^\\\\/]+))?@)?((?:[^\\\\/:]+)|(?:\\[[0-9a-f:]+\\]))(?::(\\d+))?((?:/~(?:[^\\\\/]+))?[\\\\/]))?(.+)?$', '/tmp/jgit_test_1364027526222413070_tmp/tmp_9117675340386543078.git')",[116283]
"('URIish.java', 'org.eclipse.jgit.transport.URIish', '<init>', '^([a-z][a-z0-9+-]+)://(?:(?:([^/:@]+)(?::([^\\\\/]+))?@)?((?:[^\\\\/:]+)|(?:\\[[0-9a-f:]+\\]))(?::(\\d+))?((?:/~(?:[^\\\\/]+))?[\\\\/]))?(.+)?$', 'https://l usr\\example.com@[::1]//abc')","[160127, 160311]"
"('URIish.java', 'org.eclipse.jgit.transport.URIish', '<init>', '^(file):([\\\\/](?![\\\\/])((?:[A-Za-z]:)?[\\\\/]?(?:(?:[^\\\\/]+[\\\\/]+)*[^\\\\/]+[\\\\/]*)))$', 'file:///tmp/jgit_test_2206335174361796742_tmp/tmp_7856706505273661077.git/')","[196157, 196212]"
"('URIish.java', 'org.eclipse.jgit.transport.URIish', 'getHumanishName', '^([\\\\/]?((?:[A-Za-z]:)?[\\\\/]?(?:(?:[^\\\\/]+[\\\\/]+)*[^\\\\/]+[\\\\/]*)))$', '/a/b/c.git')",[121372]
"('URIish.java', 'org.eclipse.jgit.transport.URIish', '<init>', '^([a-z][a-z0-9+-]+)://(?:(?:([^/:@]+)(?::([^\\\\/]+))?@)?((?:[^\\\\/:]+)|(?:\\[[0-9a-f:]+\\]))(?::(\\d+))?((?:/~(?:[^\\\\/]+))?[\\\\/]))?(.+)?$', 'https://me@[::1]:80/D:\\x')",[146051]
"('URIish.java', 'org.eclipse.jgit.transport.URIish', '<init>', '^([\\\\/]?((?:[A-Za-z]:)?[\\\\/]?(?:(?:[^\\\\/]+[\\\\/]+)*[^\\\\/]+[\\\\/]*)))$', '/abc.git')",[175215]
"('URIish.java', 'org.eclipse.jgit.transport.URIish', '<init>', '^(file):([\\\\/](?![\\\\/])((?:[A-Za-z]:)?[\\\\/]?(?:(?:[^\\\\/]+[\\\\/]+)*[^\\\\/]+[\\\\/]*)))$', 'ssh://l usr\\example.com:wtf@[::1]:80//abc')",[123856]
"('Description.java', 'org.junit.runner.Description', 'methodAndClassNamePatternGroupOrDefault', '([\\s\\S]*)\\((.*)\\)', 'testCheckoutUncachedChanges(org.eclipse.jgit.lib.DirCacheCheckoutTest)')","[23059, 81414]"
"('Description.java', 'org.junit.runner.Description', 'methodAndClassNamePatternGroupOrDefault', '([\\s\\S]*)\\((.*)\\)', 'testRebaseInteractiveSingleFixup(org.eclipse.jgit.api.RebaseCommandTest)')","[44877, 102380]"
"('Description.java', 'org.junit.runner.Description', 'methodAndClassNamePatternGroupOrDefault', '([\\s\\S]*)\\((.*)\\)', 'testBlankGroupCase4(org.eclipse.jgit.fnmatch.FileNameMatcherTest)')","[18601, 77102]"
"('QuotedString.java', 'org.eclipse.jgit.util.QuotedString$BourneUserPathStyle', 'quote', '^~[A-Za-z0-9_-]*/.*$', 'a!b')","[193368, 193393]"
"('URIish.java', 'org.eclipse.jgit.transport.URIish', '<init>', '^([a-z][a-z0-9+-]+)://(?:(?:([^/:@]+)(?::([^\\\\/]+))?@)?((?:[^\\\\/:]+)|(?:\\[[0-9a-f:]+\\]))(?::(\\d+))?((?:/~(?:[^\\\\/]+))?[\\\\/]))?(.+)?$', 'ssh://lusr\\example@[::1]:80/D:/x')",[138277]
"('Description.java', 'org.junit.runner.Description', 'methodAndClassNamePatternGroupOrDefault', '([\\s\\S]*)\\((.*)\\)', 'testAdd(org.eclipse.jgit.internal.storage.pack.IntSetTest)')","[53015, 110388]"
"('URIish.java', 'org.eclipse.jgit.transport.URIish', '<init>', '^(file):([\\\\/](?![\\\\/])((?:[A-Za-z]:)?[\\\\/]?(?:(?:[^\\\\/]+[\\\\/]+)*[^\\\\/]+[\\\\/]*)))$', 'git://example.com:338/D:/m y')","[177492, 177538]"
"('URIish.java', 'org.eclipse.jgit.transport.URIish', '<init>', '^(file):([\\\\/](?![\\\\/])((?:[A-Za-z]:)?[\\\\/]?(?:(?:[^\\\\/]+[\\\\/]+)*[^\\\\/]+[\\\\/]*)))$', 'ssh+git://l usr\\example.com:wtf@[::1]:80/D:/x')",[127214]
"('URIish.java', 'org.eclipse.jgit.transport.URIish', '<init>', '^([a-z][a-z0-9+-]+)://(?:(?:([^/:@]+)(?::([^\\\\/]+))?@)?((?:[^\\\\/:]+)|(?:\\[[0-9a-f:]+\\]))(?::(\\d+))?((?:/~(?:[^\\\\/]+))?[\\\\/]))?(.+)?$', 'ssh://l usr\\example.com:wtf@example.com:1234/D:/x')",[123005]
"('Description.java', 'org.junit.runner.Description', 'methodAndClassNamePatternGroupOrDefault', '([\\s\\S]*)\\((.*)\\)', 'org.eclipse.jgit.submodule.SubmoduleWalkTest')","[19706, 183258]"
"('URIish.java', 'org.eclipse.jgit.transport.URIish', '<init>', '^(file):([\\\\/](?![\\\\/])((?:[A-Za-z]:)?[\\\\/]?(?:(?:[^\\\\/]+[\\\\/]+)*[^\\\\/]+[\\\\/]*)))$', 'file:///tmp/jgit_test_1535544226656899906_tmp/tmp_1158346254474690331')","[198763, 198820]"
"('Description.java', 'org.junit.runner.Description', 'methodAndClassNamePatternGroupOrDefault', '([\\s\\S]*)\\((.*)\\)', 'testInvalidCommitNoTree4(org.eclipse.jgit.lib.ObjectCheckerTest)')","[26735, 85066]"
"('URIish.java', 'org.eclipse.jgit.transport.URIish', '<init>', '^([a-z][a-z0-9+-]+)://(?:(?:([^/:@]+)(?::([^\\\\/]+))?@)?((?:[^\\\\/:]+)|(?:\\[[0-9a-f:]+\\]))(?::(\\d+))?((?:/~(?:[^\\\\/]+))?[\\\\/]))?(.+)?$', 'http://l usr\\example.com@[::1]/D:\\x')","[156907, 157091]"
"('Description.java', 'org.junit.runner.Description', 'methodAndClassNamePatternGroupOrDefault', '([\\s\\S]*)\\((.*)\\)', 'testInvalidTagNoTagHeader3(org.eclipse.jgit.lib.ObjectCheckerTest)')","[26294, 84604]"
"('Description.java', 'org.junit.runner.Description', 'methodAndClassNamePatternGroupOrDefault', '([\\s\\S]*)\\((.*)\\)', 'testVerySimpleWildCardCase3(org.eclipse.jgit.fnmatch.FileNameMatcherTest)')","[16354, 74748]"
"('URIish.java', 'org.eclipse.jgit.transport.URIish', '<init>', '^(file):([\\\\/](?![\\\\/])((?:[A-Za-z]:)?[\\\\/]?(?:(?:[^\\\\/]+[\\\\/]+)*[^\\\\/]+[\\\\/]*)))$', 'http://lusr\\example:wtf@example.com:80//abc')",[130848]
"('URIish.java', 'org.eclipse.jgit.transport.URIish', '<init>', '^(file):([\\\\/](?![\\\\/])((?:[A-Za-z]:)?[\\\\/]?(?:(?:[^\\\\/]+[\\\\/]+)*[^\\\\/]+[\\\\/]*)))$', 'ssh+git://lusr\\example@1.2.3.4:80/D:/x')",[141198]
"('Description.java', 'org.junit.runner.Description', 'methodAndClassNamePatternGroupOrDefault', '([\\s\\S]*)\\((.*)\\)', 'testParseModeChange(org.eclipse.jgit.patch.FileHeaderTest)')","[39404, 97144]"
"('URIish.java', 'org.eclipse.jgit.transport.URIish', '<init>', '^([a-z][a-z0-9+-]+)://(?:(?:([^/:@]+)(?::([^\\\\/]+))?@)?((?:[^\\\\/:]+)|(?:\\[[0-9a-f:]+\\]))(?::(\\d+))?((?:/~(?:[^\\\\/]+))?[\\\\/]))?(.+)?$', 'http://l usr\\example.com@example.com:1234//abc')",[142831]
"('Description.java', 'org.junit.runner.Description', 'methodAndClassNamePatternGroupOrDefault', '([\\s\\S]*)\\((.*)\\)', 'workingDirectoryDeleteIndexAdd(org.eclipse.jgit.api.StashCreateCommandTest)')","[41879, 99498]"
"('URIish.java', 'org.eclipse.jgit.transport.URIish', '<init>', '^(file):([\\\\/](?![\\\\/])((?:[A-Za-z]:)?[\\\\/]?(?:(?:[^\\\\/]+[\\\\/]+)*[^\\\\/]+[\\\\/]*)))$', 'http://me:wtf@[::1]:1234//abc')",[129192]
"('URIish.java', 'org.eclipse.jgit.transport.URIish', '<init>', '^(file):([\\\\/](?![\\\\/])((?:[A-Za-z]:)?[\\\\/]?(?:(?:[^\\\\/]+[\\\\/]+)*[^\\\\/]+[\\\\/]*)))$', 'ssh://example.com/D:/x')","[161622, 161806, 162726, 162910, 163830, 164014]"
"('Description.java', 'org.junit.runner.Description', 'methodAndClassNamePatternGroupOrDefault', '([\\s\\S]*)\\((.*)\\)', 'testEquals_Full(org.eclipse.jgit.lib.AbbreviatedObjectIdTest)')","[22265, 80622]"
"('Description.java', 'org.junit.runner.Description', 'methodAndClassNamePatternGroupOrDefault', '([\\s\\S]*)\\((.*)\\)', 'testValidTree2(org.eclipse.jgit.lib.ObjectCheckerTest)')","[25538, 83812]"
"('Description.java', 'org.junit.runner.Description', 'methodAndClassNamePatternGroupOrDefault', '([\\s\\S]*)\\((.*)\\)', 'testCopy_64k(org.eclipse.jgit.internal.storage.pack.DeltaStreamTest)')","[52599, 109992]"
"('Description.java', 'org.junit.runner.Description', 'methodAndClassNamePatternGroupOrDefault', '([\\s\\S]*)\\((.*)\\)', 'repositoryWithUninitializedSubmodule(org.eclipse.jgit.submodule.SubmoduleStatusTest)')","[20164, 78620]"
"('Description.java', 'org.junit.runner.Description', 'methodAndClassNamePatternGroupOrDefault', '([\\s\\S]*)\\((.*)\\)', 'testParseNonGitDescribe(org.eclipse.jgit.lib.RepositoryResolveTest)')","[27300, 85638]"
"('URIish.java', 'org.eclipse.jgit.transport.URIish', '<init>', '^(file):([\\\\/](?![\\\\/])((?:[A-Za-z]:)?[\\\\/]?(?:(?:[^\\\\/]+[\\\\/]+)*[^\\\\/]+[\\\\/]*)))$', 'ssh://l usr\\example.com:wtf@1.2.3.4:1234//')",[123258]
"('ChangeIdUtil.java', 'org.eclipse.jgit.util.ChangeIdUtil', 'indexOfFirstFooterLine', '(^[a-zA-Z0-9-]+:(?!//).*$)', '')","[181997, 182127, 187387, 189286, 189698, 189879, 190060, 190919, 191931]"
"('URIish.java', 'org.eclipse.jgit.transport.URIish', '<init>', '^([a-z][a-z0-9+-]+)://(?:(?:([^/:@]+)(?::([^\\\\/]+))?@)?((?:[^\\\\/:]+)|(?:\\[[0-9a-f:]+\\]))(?::(\\d+))?((?:/~(?:[^\\\\/]+))?[\\\\/]))?(.+)?$', 'ssh://me@example.com/D:\\x')","[148443, 148627]"
"('URIish.java', 'org.eclipse.jgit.transport.URIish', '<init>', '^(file):([\\\\/](?![\\\\/])((?:[A-Za-z]:)?[\\\\/]?(?:(?:[^\\\\/]+[\\\\/]+)*[^\\\\/]+[\\\\/]*)))$', 'https://l usr\\example.com@example.com:1234/D:/x')",[146166]
"('Description.java', 'org.junit.runner.Description', 'methodAndClassNamePatternGroupOrDefault', '([\\s\\S]*)\\((.*)\\)', 'testIterator(org.eclipse.jgit.lib.ObjectIdOwnerMapTest)')","[22038, 80424]"
"('URIish.java', 'org.eclipse.jgit.transport.URIish', '<init>', '^([a-z][a-z0-9+-]+)://(?:(?:([^/:@]+)(?::([^\\\\/]+))?@)?((?:[^\\\\/:]+)|(?:\\[[0-9a-f:]+\\]))(?::(\\d+))?((?:/~(?:[^\\\\/]+))?[\\\\/]))?(.+)?$', 'https://l usr\\example.com:wtf@[::1]:1234//')",[133585]
"('Description.java', 'org.junit.runner.Description', 'methodAndClassNamePatternGroupOrDefault', '([\\s\\S]*)\\((.*)\\)', 'testXDigitGroupCase5(org.eclipse.jgit.fnmatch.FileNameMatcherTest)')","[18790, 77300]"
"('Description.java', 'org.junit.runner.Description', 'methodAndClassNamePatternGroupOrDefault', '([\\s\\S]*)\\((.*)\\)', 'testTrivialTwoWay_rightDFconflict1(org.eclipse.jgit.merge.SimpleMergeTest)')","[9719, 68434]"
"('URIish.java', 'org.eclipse.jgit.transport.URIish', '<init>', '^(file):([\\\\/](?![\\\\/])((?:[A-Za-z]:)?[\\\\/]?(?:(?:[^\\\\/]+[\\\\/]+)*[^\\\\/]+[\\\\/]*)))$', 'http://[::1]/D:/x')","[168982, 169166, 170086, 170270, 171190, 171374]"
"('URIish.java', 'org.eclipse.jgit.transport.URIish', '<init>', '^([a-z][a-z0-9+-]+)://(?:(?:([^/:@]+)(?::([^\\\\/]+))?@)?((?:[^\\\\/:]+)|(?:\\[[0-9a-f:]+\\]))(?::(\\d+))?((?:/~(?:[^\\\\/]+))?[\\\\/]))?(.+)?$', 'ssh://l usr\\example.com:wtf@1.2.3.4:1234//abc')",[123327]
"('Description.java', 'org.junit.runner.Description', 'methodAndClassNamePatternGroupOrDefault', '([\\s\\S]*)\\((.*)\\)', 'testAddExistingSingleSmallFileWithNewLine(org.eclipse.jgit.api.AddCommandTest)')","[50773, 108298]"
"('URIish.java', 'org.eclipse.jgit.transport.URIish', '<init>', '^([a-z][a-z0-9+-]+)://(?:(?:([^/:@]+)(?::([^\\\\/]+))?@)?((?:[^\\\\/:]+)|(?:\\[[0-9a-f:]+\\]))(?::(\\d+))?((?:/~(?:[^\\\\/]+))?[\\\\/]))?(.+)?$', 'ssh+git://l usr\\example.com@example.com/D:/x')","[152813, 152997]"
"('URIish.java', 'org.eclipse.jgit.transport.URIish', '<init>', '^(file):([\\\\/](?![\\\\/])((?:[A-Za-z]:)?[\\\\/]?(?:(?:[^\\\\/]+[\\\\/]+)*[^\\\\/]+[\\\\/]*)))$', 'ssh+git://l usr\\example.com@example.com:1234//')",[139450]
"('Description.java', 'org.junit.runner.Description', 'methodAndClassNamePatternGroupOrDefault', '([\\s\\S]*)\\((.*)\\)', 'testFastForward(org.eclipse.jgit.api.MergeCommandTest)')","[43753, 101302]"
"('URIish.java', 'org.eclipse.jgit.transport.URIish', '<init>', '^([a-z][a-z0-9+-]+)://(?:(?:([^/:@]+)(?::([^\\\\/]+))?@)?((?:[^\\\\/:]+)|(?:\\[[0-9a-f:]+\\]))(?::(\\d+))?((?:/~(?:[^\\\\/]+))?[\\\\/]))?(.+)?$', 'http://lusr\\example@[::1]:1234//')",[144625]
"('Description.java', 'org.junit.runner.Description', 'methodAndClassNamePatternGroupOrDefault', '([\\s\\S]*)\\((.*)\\)', 'testDegenerate_DeleteMiddle(org.eclipse.jgit.diff.HistogramDiffTest)')","[15394, 73802]"
"('Description.java', 'org.junit.runner.Description', 'methodAndClassNamePatternGroupOrDefault', '([\\s\\S]*)\\((.*)\\)', 'testMkdir(org.eclipse.jgit.util.FileUtilTest)')","[33658, 91622]"
"('URIish.java', 'org.eclipse.jgit.transport.URIish', '<init>', '^([a-z][a-z0-9+-]+)://(?:(?:([^/:@]+)(?::([^\\\\/]+))?@)?((?:[^\\\\/:]+)|(?:\\[[0-9a-f:]+\\]))(?::(\\d+))?((?:/~(?:[^\\\\/]+))?[\\\\/]))?(.+)?$', 'ssh+git://[::1]//')","[165601, 165785, 166705, 166889, 167809, 167993]"
"('Description.java', 'org.junit.runner.Description', 'methodAndClassNamePatternGroupOrDefault', '([\\s\\S]*)\\((.*)\\)', 'testPackFormat_LargeObject(org.eclipse.jgit.internal.storage.file.UnpackedObjectTest)')","[56835, 113952]"
"('URIish.java', 'org.eclipse.jgit.transport.URIish', '<init>', '^([a-z][a-z0-9+-]+)://(?:(?:([^/:@]+)(?::([^\\\\/]+))?@)?((?:[^\\\\/:]+)|(?:\\[[0-9a-f:]+\\]))(?::(\\d+))?((?:/~(?:[^\\\\/]+))?[\\\\/]))?(.+)?$', 'ssh+git://l usr\\example.com@example.com:1234/D:/x')",[139565]
"('Description.java', 'org.junit.runner.Description', 'methodAndClassNamePatternGroupOrDefault', '([\\s\\S]*)\\((.*)\\)', 'testEmptyFolderCommittedDeleted(org.eclipse.jgit.treewalk.filter.IndexDiffFilterTest)')","[30884, 89114]"
"('URIish.java', 'org.eclipse.jgit.transport.URIish', '<init>', '^(?:([^/:@]+)(?::([^\\\\/]+))?@)?([^\\\\/:]{2,}):([\\\\/](?:(?:[^\\\\/]+[\\\\/]+)*[^\\\\/]+[\\\\/]*))$', '/tmp/jgit_test_8508429422333606359_tmp/tmp_7349125838900302966/.git')","[206515, 206661]"
"('URIish.java', 'org.eclipse.jgit.transport.URIish', '<init>', '^(file):([\\\\/](?![\\\\/])((?:[A-Za-z]:)?[\\\\/]?(?:(?:[^\\\\/]+[\\\\/]+)*[^\\\\/]+[\\\\/]*)))$', 'ssh://l usr\\example.com@example.com:80/D:\\x')",[136460]
"('Description.java', 'org.junit.runner.Description', 'methodAndClassNamePatternGroupOrDefault', '([\\s\\S]*)\\((.*)\\)', 'testVerySimplePatternCase1(org.eclipse.jgit.fnmatch.FileNameMatcherTest)')","[17068, 75496]"
"('URIish.java', 'org.eclipse.jgit.transport.URIish', '<init>', '^([a-z][a-z0-9+-]+)://(?:(?:([^/:@]+)(?::([^\\\\/]+))?@)?((?:[^\\\\/:]+)|(?:\\[[0-9a-f:]+\\]))(?::(\\d+))?((?:/~(?:[^\\\\/]+))?[\\\\/]))?(.+)?$', 'ssh+git://lusr\\example:wtf@example.com:80/D:/x')",[127605]
"('Description.java', 'org.junit.runner.Description', 'methodAndClassNamePatternGroupOrDefault', '([\\s\\S]*)\\((.*)\\)', 'invalidWhenOnlySourceWildcard(org.eclipse.jgit.transport.RefSpecTest)')","[3214, 62296]"
"('Description.java', 'org.junit.runner.Description', 'methodAndClassNamePatternGroupOrDefault', '([\\s\\S]*)\\((.*)\\)', 'never(org.eclipse.jgit.util.GitDateParserTest)')","[36349, 94262]"
"('URIish.java', 'org.eclipse.jgit.transport.URIish', '<init>', '^(file):([\\\\/](?![\\\\/])((?:[A-Za-z]:)?[\\\\/]?(?:(?:[^\\\\/]+[\\\\/]+)*[^\\\\/]+[\\\\/]*)))$', 'http://lusr\\example@[::1]/D:/x')","[157942, 158126]"
"('Description.java', 'org.junit.runner.Description', 'methodAndClassNamePatternGroupOrDefault', '([\\s\\S]*)\\((.*)\\)', 'testParse_explicit_encoded(org.eclipse.jgit.revwalk.RevTagParseTest)')","[7271, 66168]"
"('Description.java', 'org.junit.runner.Description', 'methodAndClassNamePatternGroupOrDefault', '([\\s\\S]*)\\((.*)\\)', 'testFileIgnored(org.eclipse.jgit.treewalk.filter.IndexDiffFilterTest)')","[30338, 88542]"
"('Description.java', 'org.junit.runner.Description', 'methodAndClassNamePatternGroupOrDefault', '([\\s\\S]*)\\((.*)\\)', 'org.eclipse.jgit.util.RawParseUtils_MatchTest')","[38349, 192317]"
"('Description.java', 'org.junit.runner.Description', 'methodAndClassNamePatternGroupOrDefault', '([\\s\\S]*)\\((.*)\\)', 'org.eclipse.jgit.revwalk.RevWalkShallowTest')","[9553, 181784]"
"('URIish.java', 'org.eclipse.jgit.transport.URIish', '<init>', '^(file):([\\\\/](?![\\\\/])((?:[A-Za-z]:)?[\\\\/]?(?:(?:[^\\\\/]+[\\\\/]+)*[^\\\\/]+[\\\\/]*)))$', 'git://example.com/D:/m y')","[179217, 179263]"
"('Description.java', 'org.junit.runner.Description', 'methodAndClassNamePatternGroupOrDefault', '([\\s\\S]*)\\((.*)\\)', 'testOnlyOption_f1_8_a(org.eclipse.jgit.api.CommitOnlyTest)')","[49179, 106648]"
"('Description.java', 'org.junit.runner.Description', 'methodAndClassNamePatternGroupOrDefault', '([\\s\\S]*)\\((.*)\\)', 'testTrackingRefUpdateOnReject(org.eclipse.jgit.transport.PushProcessTest)')","[4754, 63770]"
"('Description.java', 'org.junit.runner.Description', 'methodAndClassNamePatternGroupOrDefault', '([\\s\\S]*)\\((.*)\\)', 'testTimeout_flush_Success(org.eclipse.jgit.util.io.TimeoutOutputStreamTest)')","[32542, 90632]"
"('Description.java', 'org.junit.runner.Description', 'methodAndClassNamePatternGroupOrDefault', '([\\s\\S]*)\\((.*)\\)', 'testCntrlGroupCase0(org.eclipse.jgit.fnmatch.FileNameMatcherTest)')","[17005, 75430]"
"('URIish.java', 'org.eclipse.jgit.transport.URIish', '<init>', '^([a-z][a-z0-9+-]+)://(?:(?:([^/:@]+)(?::([^\\\\/]+))?@)?((?:[^\\\\/:]+)|(?:\\[[0-9a-f:]+\\]))(?::(\\d+))?((?:/~(?:[^\\\\/]+))?[\\\\/]))?(.+)?$', 'ssh://me:wtf@example.com:1234/D:\\x')",[121947]
"('Description.java', 'org.junit.runner.Description', 'methodAndClassNamePatternGroupOrDefault', '([\\s\\S]*)\\((.*)\\)', 'testAbbreviateLooseBlob(org.eclipse.jgit.internal.storage.file.AbbreviationTest)')","[57457, 114524]"
"('URIish.java', 'org.eclipse.jgit.transport.URIish', '<init>', '^(file):([\\\\/](?![\\\\/])((?:[A-Za-z]:)?[\\\\/]?(?:(?:[^\\\\/]+[\\\\/]+)*[^\\\\/]+[\\\\/]*)))$', 'http://me@example.com/D:/x')","[154998, 155182]"
"('Description.java', 'org.junit.runner.Description', 'methodAndClassNamePatternGroupOrDefault', '([\\s\\S]*)\\((.*)\\)', 'testSingleSubtree_NoRecursion(org.eclipse.jgit.dircache.DirCacheIteratorTest)')","[12503, 71052]"
"('URIish.java', 'org.eclipse.jgit.transport.URIish', '<init>', '^([a-z][a-z0-9+-]+)://(?:(?:([^/:@]+)(?::([^\\\\/]+))?@)?((?:[^\\\\/:]+)|(?:\\[[0-9a-f:]+\\]))(?::(\\d+))?((?:/~(?:[^\\\\/]+))?[\\\\/]))?(.+)?$', 'http://l usr\\example.com@1.2.3.4:1234//')",[143153]
"('Description.java', 'org.junit.runner.Description', 'methodAndClassNamePatternGroupOrDefault', '([\\s\\S]*)\\((.*)\\)', 'testFormatHours(org.eclipse.jgit.util.RelativeDateFormatterTest)')","[35786, 93712]"
"('Description.java', 'org.junit.runner.Description', 'methodAndClassNamePatternGroupOrDefault', '([\\s\\S]*)\\((.*)\\)', 'org.eclipse.jgit.patch.PatchCcTest')","[39841, 193636]"
"('Description.java', 'org.junit.runner.Description', 'methodAndClassNamePatternGroupOrDefault', '([\\s\\S]*)\\((.*)\\)', 'RAW(org.eclipse.jgit.util.GitDateFormatterTest)')","[32292, 90390]"
"('Description.java', 'org.junit.runner.Description', 'methodAndClassNamePatternGroupOrDefault', '([\\s\\S]*)\\((.*)\\)', 'testDiff(org.eclipse.jgit.diff.DiffFormatterTest)')","[13999, 72460]"
"('URIish.java', 'org.eclipse.jgit.transport.URIish', '<init>', '^([a-z][a-z0-9+-]+)://(?:(?:([^/:@]+)(?::([^\\\\/]+))?@)?((?:[^\\\\/:]+)|(?:\\[[0-9a-f:]+\\]))(?::(\\d+))?((?:/~(?:[^\\\\/]+))?[\\\\/]))?(.+)?$', 'ssh://lusr\\example:wtf@example.com:80/D:/x')",[124293]
"('URIish.java', 'org.eclipse.jgit.transport.URIish', '<init>', '^([a-z][a-z0-9+-]+)://(?:(?:([^/:@]+)(?::([^\\\\/]+))?@)?((?:[^\\\\/:]+)|(?:\\[[0-9a-f:]+\\]))(?::(\\d+))?((?:/~(?:[^\\\\/]+))?[\\\\/]))?(.+)?$', 'https://l usr\\example.com:wtf@1.2.3.4:1234//abc')",[133263]
"('Description.java', 'org.junit.runner.Description', 'methodAndClassNamePatternGroupOrDefault', '([\\s\\S]*)\\((.*)\\)', 'testReadString_Len0002(org.eclipse.jgit.transport.PacketLineInTest)')","[3548, 62626]"
"('Description.java', 'org.junit.runner.Description', 'methodAndClassNamePatternGroupOrDefault', '([\\s\\S]*)\\((.*)\\)', 'testCreateFileHeader_GitLink(org.eclipse.jgit.diff.DiffFormatterTest)')","[14020, 72482]"
"('Description.java', 'org.junit.runner.Description', 'methodAndClassNamePatternGroupOrDefault', '([\\s\\S]*)\\((.*)\\)', 'testVerySimpleGroupRangeCase3(org.eclipse.jgit.fnmatch.FileNameMatcherTest)')","[17803, 76266]"
"('URIish.java', 'org.eclipse.jgit.transport.URIish', '<init>', '^(file):([\\\\/](?![\\\\/])((?:[A-Za-z]:)?[\\\\/]?(?:(?:[^\\\\/]+[\\\\/]+)*[^\\\\/]+[\\\\/]*)))$', 'git://abc.git')",[121717]
"('Description.java', 'org.junit.runner.Description', 'methodAndClassNamePatternGroupOrDefault', '([\\s\\S]*)\\((.*)\\)', 'testEmpty_FromByteArray(org.eclipse.jgit.lib.AbbreviatedObjectIdTest)')","[22769, 81150]"
"('Description.java', 'org.junit.runner.Description', 'methodAndClassNamePatternGroupOrDefault', '([\\s\\S]*)\\((.*)\\)', 'testOnlyOption_f1_9_b(org.eclipse.jgit.api.CommitOnlyTest)')","[49305, 106780]"
"('URIish.java', 'org.eclipse.jgit.transport.URIish', '<init>', '^([a-z][a-z0-9+-]+)://(?:(?:([^/:@]+)(?::([^\\\\/]+))?@)?((?:[^\\\\/:]+)|(?:\\[[0-9a-f:]+\\]))(?::(\\d+))?((?:/~(?:[^\\\\/]+))?[\\\\/]))?(.+)?$', 'ssh://user@example.com:33/some/p ath')","[175468, 175514]"
"('Description.java', 'org.junit.runner.Description', 'methodAndClassNamePatternGroupOrDefault', '([\\s\\S]*)\\((.*)\\)', 'org.eclipse.jgit.revwalk.RevWalkSortTest')","[9076, 181703]"
"('URIish.java', 'org.eclipse.jgit.transport.URIish', '<init>', '^(file):([\\\\/](?![\\\\/])((?:[A-Za-z]:)?[\\\\/]?(?:(?:[^\\\\/]+[\\\\/]+)*[^\\\\/]+[\\\\/]*)))$', 'https://l usr\\example.com@1.2.3.4:1234//abc')",[146488]
"('Description.java', 'org.junit.runner.Description', 'methodAndClassNamePatternGroupOrDefault', '([\\s\\S]*)\\((.*)\\)', 'testFileKeyOpenExisting(org.eclipse.jgit.lib.RepositoryCacheTest)')","[20952, 79346]"
"('Description.java', 'org.junit.runner.Description', 'methodAndClassNamePatternGroupOrDefault', '([\\s\\S]*)\\((.*)\\)', 'testReadRightLog(org.eclipse.jgit.internal.storage.file.ReflogReaderTest)')","[58898, 115954]"
"('URIish.java', 'org.eclipse.jgit.transport.URIish', '<init>', '^([a-z][a-z0-9+-]+)://(?:(?:([^/:@]+)(?::([^\\\\/]+))?@)?((?:[^\\\\/:]+)|(?:\\[[0-9a-f:]+\\]))(?::(\\d+))?((?:/~(?:[^\\\\/]+))?[\\\\/]))?(.+)?$', 'ssh://l usr\\example.com:wtf@[::1]:1234/D:/x')",[123741]
"('Description.java', 'org.junit.runner.Description', 'methodAndClassNamePatternGroupOrDefault', '([\\s\\S]*)\\((.*)\\)', 'testRebaseWithUncommittedDelete(org.eclipse.jgit.api.RebaseCommandTest)')","[44961, 102468]"
"('URIish.java', 'org.eclipse.jgit.transport.URIish', '<init>', '^([a-z][a-z0-9+-]+)://(?:(?:([^/:@]+)(?::([^\\\\/]+))?@)?((?:[^\\\\/:]+)|(?:\\[[0-9a-f:]+\\]))(?::(\\d+))?((?:/~(?:[^\\\\/]+))?[\\\\/]))?(.+)?$', 'file:///tmp/jgit_test_6116219894183845936_tmp/tmp_2007843301045265037.git/')","[195994, 196050]"
"('Description.java', 'org.junit.runner.Description', 'methodAndClassNamePatternGroupOrDefault', '([\\s\\S]*)\\((.*)\\)', 'shortFmt(org.eclipse.jgit.util.GitDateParserTest)')","[36244, 94152]"
"('Description.java', 'org.junit.runner.Description', 'methodAndClassNamePatternGroupOrDefault', '([\\s\\S]*)\\((.*)\\)', 'testParseGitFileName_EmptyHeader(org.eclipse.jgit.patch.FileHeaderTest)')","[39446, 97188]"
"('Description.java', 'org.junit.runner.Description', 'methodAndClassNamePatternGroupOrDefault', '([\\s\\S]*)\\((.*)\\)', 'testCopyMetaDataWithStage(org.eclipse.jgit.dircache.DirCacheEntryTest)')","[11652, 70260]"
"('Description.java', 'org.junit.runner.Description', 'methodAndClassNamePatternGroupOrDefault', '([\\s\\S]*)\\((.*)\\)', 'testValidCommit1Parent(org.eclipse.jgit.lib.ObjectCheckerTest)')","[25454, 83724]"
"('Description.java', 'org.junit.runner.Description', 'methodAndClassNamePatternGroupOrDefault', '([\\s\\S]*)\\((.*)\\)', 'commitOnlyShouldCommitUnmergedPathAndNotAffectOthers(org.eclipse.jgit.api.CommitCommandTest)')","[43461, 101016]"
"('URIish.java', 'org.eclipse.jgit.transport.URIish', '<init>', '^(file):([\\\\/](?![\\\\/])((?:[A-Za-z]:)?[\\\\/]?(?:(?:[^\\\\/]+[\\\\/]+)*[^\\\\/]+[\\\\/]*)))$', 'file:/tmp/jgit_test_7007872334489680580_tmp/tmp_4454208904199474254/.git/')",[183142]
"('Description.java', 'org.junit.runner.Description', 'methodAndClassNamePatternGroupOrDefault', '([\\s\\S]*)\\((.*)\\)', 'testWriteEnd(org.eclipse.jgit.transport.PacketLineOutTest)')","[5172, 64188]"
"('URIish.java', 'org.eclipse.jgit.transport.URIish', '<init>', '^([a-z][a-z0-9+-]+)://(?:(?:([^/:@]+)(?::([^\\\\/]+))?@)?((?:[^\\\\/:]+)|(?:\\[[0-9a-f:]+\\]))(?::(\\d+))?((?:/~(?:[^\\\\/]+))?[\\\\/]))?(.+)?$', 'ssh+git://me:wtf@[::1]:80//abc')",[126087]
"('Description.java', 'org.junit.runner.Description', 'methodAndClassNamePatternGroupOrDefault', '([\\s\\S]*)\\((.*)\\)', 'testAtEOF(org.eclipse.jgit.treewalk.EmptyTreeIteratorTest)')","[29670, 87882]"
"('URIish.java', 'org.eclipse.jgit.transport.URIish', '<init>', '^([a-z][a-z0-9+-]+)://(?:(?:([^/:@]+)(?::([^\\\\/]+))?@)?((?:[^\\\\/:]+)|(?:\\[[0-9a-f:]+\\]))(?::(\\d+))?((?:/~(?:[^\\\\/]+))?[\\\\/]))?(.+)?$', 'http://me@example.com/D:/x')","[155021, 155205]"
"('URIish.java', 'org.eclipse.jgit.transport.URIish', '<init>', '^(file):([\\\\/](?![\\\\/])((?:[A-Za-z]:)?[\\\\/]?(?:(?:[^\\\\/]+[\\\\/]+)*[^\\\\/]+[\\\\/]*)))$', 'https://me@[::1]//abc')","[159000, 159184]"
"('Description.java', 'org.junit.runner.Description', 'methodAndClassNamePatternGroupOrDefault', '([\\s\\S]*)\\((.*)\\)', 'testFillToNullCommit(org.eclipse.jgit.revwalk.RevCommitListTest)')","[7519, 66388]"
"('Description.java', 'org.junit.runner.Description', 'methodAndClassNamePatternGroupOrDefault', '([\\s\\S]*)\\((.*)\\)', 'testChangeIdAlreadySet(org.eclipse.jgit.util.ChangeIdUtilTest)')","[38099, 95956]"
"('Description.java', 'org.junit.runner.Description', 'methodAndClassNamePatternGroupOrDefault', '([\\s\\S]*)\\((.*)\\)', 'testNoCacheObjectIdSubclass(org.eclipse.jgit.internal.storage.file.RefUpdateTest)')","[55667, 112808]"
"('URIish.java', 'org.eclipse.jgit.transport.URIish', '<init>', '^(file):([\\\\/](?![\\\\/])((?:[A-Za-z]:)?[\\\\/]?(?:(?:[^\\\\/]+[\\\\/]+)*[^\\\\/]+[\\\\/]*)))$', 'https://lusr\\example:wtf@example.com:80//abc')",[134160]
"('Description.java', 'org.junit.runner.Description', 'methodAndClassNamePatternGroupOrDefault', '([\\s\\S]*)\\((.*)\\)', 'testLsRemote(org.eclipse.jgit.api.LsRemoteCommandTest)')","[41339, 98992]"
"('Description.java', 'org.junit.runner.Description', 'methodAndClassNamePatternGroupOrDefault', '([\\s\\S]*)\\((.*)\\)', 'testCopy_MaxSize(org.eclipse.jgit.internal.storage.pack.DeltaStreamTest)')","[52578, 109970]"
"('Description.java', 'org.junit.runner.Description', 'methodAndClassNamePatternGroupOrDefault', '([\\s\\S]*)\\((.*)\\)', 'testCherryPickConflictResolution(org.eclipse.jgit.api.CherryPickCommandTest)')","[47759, 105240]"
"('Description.java', 'org.junit.runner.Description', 'methodAndClassNamePatternGroupOrDefault', '([\\s\\S]*)\\((.*)\\)', 'testEqualsWithWhitespace(org.eclipse.jgit.diff.RawTextIgnoreLeadingWhitespaceTest)')","[15060, 73472]"
"('URIish.java', 'org.eclipse.jgit.transport.URIish', '<init>', '^([a-z][a-z0-9+-]+)://(?:(?:([^/:@]+)(?::([^\\\\/]+))?@)?((?:[^\\\\/:]+)|(?:\\[[0-9a-f:]+\\]))(?::(\\d+))?((?:/~(?:[^\\\\/]+))?[\\\\/]))?(.+)?$', 'http://l usr\\example.com@1.2.3.4/D:\\x')","[156539, 156723]"
"('Description.java', 'org.junit.runner.Description', 'methodAndClassNamePatternGroupOrDefault', '([\\s\\S]*)\\((.*)\\)', 'LOCALELOCAL(org.eclipse.jgit.util.GitDateFormatterTest)')","[32250, 90346]"
"('URIish.java', 'org.eclipse.jgit.transport.URIish', '<init>', '^([a-z][a-z0-9+-]+)://(?:(?:([^/:@]+)(?::([^\\\\/]+))?@)?((?:[^\\\\/:]+)|(?:\\[[0-9a-f:]+\\]))(?::(\\d+))?((?:/~(?:[^\\\\/]+))?[\\\\/]))?(.+)?$', 'https://me@[::1]:1234//abc')",[145775]
"('URIish.java', 'org.eclipse.jgit.transport.URIish', '<init>', '^([a-z][a-z0-9+-]+)://(?:(?:([^/:@]+)(?::([^\\\\/]+))?@)?((?:[^\\\\/:]+)|(?:\\[[0-9a-f:]+\\]))(?::(\\d+))?((?:/~(?:[^\\\\/]+))?[\\\\/]))?(.+)?$', 'http://l usr\\example.com:wtf@1.2.3.4:80/D:\\x')",[130227]
"('URIish.java', 'org.eclipse.jgit.transport.URIish', '<init>', '^([a-z][a-z0-9+-]+)://(?:(?:([^/:@]+)(?::([^\\\\/]+))?@)?((?:[^\\\\/:]+)|(?:\\[[0-9a-f:]+\\]))(?::(\\d+))?((?:/~(?:[^\\\\/]+))?[\\\\/]))?(.+)?$', 'https://1.2.3.4//')","[171857, 172041, 172961, 173145, 174065, 174249]"
"('Description.java', 'org.junit.runner.Description', 'methodAndClassNamePatternGroupOrDefault', '([\\s\\S]*)\\((.*)\\)', 'testStopOnConflictAndContinueWithNoDeltaToMaster(org.eclipse.jgit.api.RebaseCommandTest)')","[45822, 103370]"
"('URIish.java', 'org.eclipse.jgit.transport.URIish', '<init>', '^(file):([\\\\/](?![\\\\/])((?:[A-Za-z]:)?[\\\\/]?(?:(?:[^\\\\/]+[\\\\/]+)*[^\\\\/]+[\\\\/]*)))$', 'ssh://l usr\\example.com:wtf@1.2.3.4:1234/D:/x')",[123350]
"('URIish.java', 'org.eclipse.jgit.transport.URIish', '<init>', '^(file):([\\\\/](?![\\\\/])((?:[A-Za-z]:)?[\\\\/]?(?:(?:[^\\\\/]+[\\\\/]+)*[^\\\\/]+[\\\\/]*)))$', 'https://lusr\\example@[::1]/D:/x')","[161254, 161438]"
"('URIish.java', 'org.eclipse.jgit.transport.URIish', '<init>', '^([a-z][a-z0-9+-]+)://(?:(?:([^/:@]+)(?::([^\\\\/]+))?@)?((?:[^\\\\/:]+)|(?:\\[[0-9a-f:]+\\]))(?::(\\d+))?((?:/~(?:[^\\\\/]+))?[\\\\/]))?(.+)?$', '/tmp/jgit_test_5272834838855978774_tmp/tmp_5245828813622345398')","[200116, 200246]"
"('URIish.java', 'org.eclipse.jgit.transport.URIish', '<init>', '^(file):([\\\\/](?![\\\\/])((?:[A-Za-z]:)?[\\\\/]?(?:(?:[^\\\\/]+[\\\\/]+)*[^\\\\/]+[\\\\/]*)))$', 'git://example.com/~some/p ath')","[179309, 179355]"
"('URIish.java', 'org.eclipse.jgit.transport.URIish', '<init>', '^([a-z][a-z0-9+-]+)://(?:(?:([^/:@]+)(?::([^\\\\/]+))?@)?((?:[^\\\\/:]+)|(?:\\[[0-9a-f:]+\\]))(?::(\\d+))?((?:/~(?:[^\\\\/]+))?[\\\\/]))?(.+)?$', 'ssh://l usr\\example.com:wtf@[::1]:1234//')",[123649]
"('Description.java', 'org.junit.runner.Description', 'methodAndClassNamePatternGroupOrDefault', '([\\s\\S]*)\\((.*)\\)', 'testSimple(org.eclipse.jgit.transport.RemoteConfigTest)')","[1036, 60074]"
"('URIish.java', 'org.eclipse.jgit.transport.URIish', '<init>', '^([a-z][a-z0-9+-]+)://(?:(?:([^/:@]+)(?::([^\\\\/]+))?@)?((?:[^\\\\/:]+)|(?:\\[[0-9a-f:]+\\]))(?::(\\d+))?((?:/~(?:[^\\\\/]+))?[\\\\/]))?(.+)?$', 'ssh://l usr\\example.com:wtf@1.2.3.4:80/D:\\x')",[123603]
"('URIish.java', 'org.eclipse.jgit.transport.URIish', '<init>', '^([a-z][a-z0-9+-]+)://(?:(?:([^/:@]+)(?::([^\\\\/]+))?@)?((?:[^\\\\/:]+)|(?:\\[[0-9a-f:]+\\]))(?::(\\d+))?((?:/~(?:[^\\\\/]+))?[\\\\/]))?(.+)?$', 'https://lusr\\example:wtf@[::1]:80/D:/x')",[134965]
"('Description.java', 'org.junit.runner.Description', 'methodAndClassNamePatternGroupOrDefault', '([\\s\\S]*)\\((.*)\\)', 'testValidTreeSorting2(org.eclipse.jgit.lib.ObjectCheckerTest)')","[25748, 84032]"
"('URIish.java', 'org.eclipse.jgit.transport.URIish', '<init>', '^([a-z][a-z0-9+-]+)://(?:(?:([^/:@]+)(?::([^\\\\/]+))?@)?((?:[^\\\\/:]+)|(?:\\[[0-9a-f:]+\\]))(?::(\\d+))?((?:/~(?:[^\\\\/]+))?[\\\\/]))?(.+)?$', 'ssh+git://l usr\\example.com@[::1]:80//abc')",[140439]
"('Description.java', 'org.junit.runner.Description', 'methodAndClassNamePatternGroupOrDefault', '([\\s\\S]*)\\((.*)\\)', 'testParse_explicit_bad_encoded(org.eclipse.jgit.revwalk.RevCommitParseTest)')","[8889, 67664]"
"('Description.java', 'org.junit.runner.Description', 'methodAndClassNamePatternGroupOrDefault', '([\\s\\S]*)\\((.*)\\)', 'testInsertOutOfOrder(org.eclipse.jgit.revwalk.DateRevQueueTest)')","[7870, 66696]"
"('URIish.java', 'org.eclipse.jgit.transport.URIish', '<init>', '^([a-z][a-z0-9+-]+)://(?:(?:([^/:@]+)(?::([^\\\\/]+))?@)?((?:[^\\\\/:]+)|(?:\\[[0-9a-f:]+\\]))(?::(\\d+))?((?:/~(?:[^\\\\/]+))?[\\\\/]))?(.+)?$', 'ssh://me:wtf@1.2.3.4:1234//')",[122177]
"('URIish.java', 'org.eclipse.jgit.transport.URIish', '<init>', '^([a-z][a-z0-9+-]+)://(?:(?:([^/:@]+)(?::([^\\\\/]+))?@)?((?:[^\\\\/:]+)|(?:\\[[0-9a-f:]+\\]))(?::(\\d+))?((?:/~(?:[^\\\\/]+))?[\\\\/]))?(.+)?$', 'http://[::1]//')","[168913, 169097, 170017, 170201, 171121, 171305]"
"('Description.java', 'org.junit.runner.Description', 'methodAndClassNamePatternGroupOrDefault', '([\\s\\S]*)\\((.*)\\)', 'org.eclipse.jgit.transport.OpenSshConfigTest')","[2313, 180099]"
"('Description.java', 'org.junit.runner.Description', 'methodAndClassNamePatternGroupOrDefault', '([\\s\\S]*)\\((.*)\\)', 'workingDirectoryModify(org.eclipse.jgit.api.StashApplyCommandTest)')","[51437, 108914]"
"('Description.java', 'org.junit.runner.Description', 'methodAndClassNamePatternGroupOrDefault', '([\\s\\S]*)\\((.*)\\)', 'testAddToEnd(org.eclipse.jgit.util.BlockListTest)')","[35538, 93492]"
"('Description.java', 'org.junit.runner.Description', 'methodAndClassNamePatternGroupOrDefault', '([\\s\\S]*)\\((.*)\\)', 'testSpecialGroupCase8(org.eclipse.jgit.fnmatch.FileNameMatcherTest)')","[16270, 74660]"
"('Description.java', 'org.junit.runner.Description', 'methodAndClassNamePatternGroupOrDefault', '([\\s\\S]*)\\((.*)\\)', 'testShuffleSegments(org.eclipse.jgit.internal.storage.pack.DeltaIndexTest)')","[52954, 110344]"
"('URIish.java', 'org.eclipse.jgit.transport.URIish', '<init>', '^(file):([\\\\/](?![\\\\/])((?:[A-Za-z]:)?[\\\\/]?(?:(?:[^\\\\/]+[\\\\/]+)*[^\\\\/]+[\\\\/]*)))$', 'ssh://me@example.com:1234/D:/x')",[135126]
"('URIish.java', 'org.eclipse.jgit.transport.URIish', '<init>', '^(?:([^/:@]+)(?::([^\\\\/]+))?@)?((?:[^\\\\/:]+)|(?:\\[[0-9a-f:]+\\])):((?:(?:/~(?:[^\\\\/]+))[\\\\/])?(?:(?:[^\\\\/]+[\\\\/]+)*[^\\\\/]+[\\\\/]*))$', '/tmp/jgit_test_1364027526222413070_tmp/tmp_9117675340386543078.git')",[116308]
"('URIish.java', 'org.eclipse.jgit.transport.URIish', '<init>', '^(file):([\\\\/](?![\\\\/])((?:[A-Za-z]:)?[\\\\/]?(?:(?:[^\\\\/]+[\\\\/]+)*[^\\\\/]+[\\\\/]*)))$', 'file:///tmp/jgit_test_168010054415911302_tmp/tmp_8136967476595711276/.git/')",[201990]
"('URIish.java', 'org.eclipse.jgit.transport.URIish', '<init>', '^(file):([\\\\/](?![\\\\/])((?:[A-Za-z]:)?[\\\\/]?(?:(?:[^\\\\/]+[\\\\/]+)*[^\\\\/]+[\\\\/]*)))$', 'https://l usr\\example.com:wtf@example.com:80/D:\\x')",[133148]
"('URIish.java', 'org.eclipse.jgit.transport.URIish', '<init>', '^([a-z][a-z0-9+-]+)://(?:(?:([^/:@]+)(?::([^\\\\/]+))?@)?((?:[^\\\\/:]+)|(?:\\[[0-9a-f:]+\\]))(?::(\\d+))?((?:/~(?:[^\\\\/]+))?[\\\\/]))?(.+)?$', 'ssh+git://lusr\\example@example.com:1234//abc')",[140623]
"('URIish.java', 'org.eclipse.jgit.transport.URIish', '<init>', '^([a-z][a-z0-9+-]+)://(?:(?:([^/:@]+)(?::([^\\\\/]+))?@)?((?:[^\\\\/:]+)|(?:\\[[0-9a-f:]+\\]))(?::(\\d+))?((?:/~(?:[^\\\\/]+))?[\\\\/]))?(.+)?$', 'user@example.com:some/p ath')","[177147, 177216]"
"('Description.java', 'org.junit.runner.Description', 'methodAndClassNamePatternGroupOrDefault', '([\\s\\S]*)\\((.*)\\)', 'testFilter_ALL_Or_NONE(org.eclipse.jgit.revwalk.RevWalkFilterTest)')","[8242, 67026]"
"('URIish.java', 'org.eclipse.jgit.transport.URIish', '<init>', '^([a-z][a-z0-9+-]+)://(?:(?:([^/:@]+)(?::([^\\\\/]+))?@)?((?:[^\\\\/:]+)|(?:\\[[0-9a-f:]+\\]))(?::(\\d+))?((?:/~(?:[^\\\\/]+))?[\\\\/]))?(.+)?$', 'http://lusr\\example:wtf@example.com:80/D:\\x')",[130963]
"('URIish.java', 'org.eclipse.jgit.transport.URIish', '<init>', '^([a-z][a-z0-9+-]+)://(?:(?:([^/:@]+)(?::([^\\\\/]+))?@)?((?:[^\\\\/:]+)|(?:\\[[0-9a-f:]+\\]))(?::(\\d+))?((?:/~(?:[^\\\\/]+))?[\\\\/]))?(.+)?$', 'ssh+git://lusr\\example@[::1]:80/D:/x')",[141589]
"('URIish.java', 'org.eclipse.jgit.transport.URIish', '<init>', '^([a-z][a-z0-9+-]+)://(?:(?:([^/:@]+)(?::([^\\\\/]+))?@)?((?:[^\\\\/:]+)|(?:\\[[0-9a-f:]+\\]))(?::(\\d+))?((?:/~(?:[^\\\\/]+))?[\\\\/]))?(.+)?$', 'ssh+git://1.2.3.4/D:/x')","[165325, 165509, 166429, 166613, 167533, 167717]"
"('ChangeIdUtil.java', 'org.eclipse.jgit.util.ChangeIdUtil', 'indexOfFirstFooterLine', '(^[a-zA-Z0-9-]+:(?!//).*$)', 'h')",[191594]
"('URIish.java', 'org.eclipse.jgit.transport.URIish', '<init>', '^([a-z][a-z0-9+-]+)://(?:(?:([^/:@]+)(?::([^\\\\/]+))?@)?((?:[^\\\\/:]+)|(?:\\[[0-9a-f:]+\\]))(?::(\\d+))?((?:/~(?:[^\\\\/]+))?[\\\\/]))?(.+)?$', 'https://l usr\\example.com@[::1]:1234/D:/x')",[146925]
"('Description.java', 'org.junit.runner.Description', 'methodAndClassNamePatternGroupOrDefault', '([\\s\\S]*)\\((.*)\\)', 'testOnlyOptionWithDirectory(org.eclipse.jgit.api.CommitOnlyTest)')","[50334, 107858]"
"('URIish.java', 'org.eclipse.jgit.transport.URIish', '<init>', '^(file):([\\\\/](?![\\\\/])((?:[A-Za-z]:)?[\\\\/]?(?:(?:[^\\\\/]+[\\\\/]+)*[^\\\\/]+[\\\\/]*)))$', 'http://me@[::1]//')","[155642, 155826]"
"('Description.java', 'org.junit.runner.Description', 'methodAndClassNamePatternGroupOrDefault', '([\\s\\S]*)\\((.*)\\)', 'testEmpty(org.eclipse.jgit.diff.EditListTest)')","[13461, 71976]"
"('URIish.java', 'org.eclipse.jgit.transport.URIish', '<init>', '^(file):([\\\\/](?![\\\\/])((?:[A-Za-z]:)?[\\\\/]?(?:(?:[^\\\\/]+[\\\\/]+)*[^\\\\/]+[\\\\/]*)))$', 'ssh+git://me:wtf@[::1]:80/D:\\x')",[126156]
"('URIish.java', 'org.eclipse.jgit.transport.URIish', '<init>', '^(file):([\\\\/](?![\\\\/])((?:[A-Za-z]:)?[\\\\/]?(?:(?:[^\\\\/]+[\\\\/]+)*[^\\\\/]+[\\\\/]*)))$', 'ssh+git://me@example.com/D:\\x')","[151732, 151916]"
"('URIish.java', 'org.eclipse.jgit.transport.URIish', '<init>', '^(file):([\\\\/](?![\\\\/])((?:[A-Za-z]:)?[\\\\/]?(?:(?:[^\\\\/]+[\\\\/]+)*[^\\\\/]+[\\\\/]*)))$', 'ssh://example.com//abc')","[161576, 161760, 162680, 162864, 163784, 163968]"
"('URIish.java', 'org.eclipse.jgit.transport.URIish', '<init>', '^(file):([\\\\/](?![\\\\/])((?:[A-Za-z]:)?[\\\\/]?(?:(?:[^\\\\/]+[\\\\/]+)*[^\\\\/]+[\\\\/]*)))$', 'ssh+git://l usr\\example.com@example.com//')","[152698, 152882]"
"('Description.java', 'org.junit.runner.Description', 'methodAndClassNamePatternGroupOrDefault', '([\\s\\S]*)\\((.*)\\)', 'shouldWorkForNormalCase(org.eclipse.jgit.revwalk.RevWalkUtilsCountTest)')","[6605, 65530]"
"('Description.java', 'org.junit.runner.Description', 'methodAndClassNamePatternGroupOrDefault', '([\\s\\S]*)\\((.*)\\)', 'testTwoRangesInOneGroupCase0(org.eclipse.jgit.fnmatch.FileNameMatcherTest)')","[19042, 77564]"
"('URIish.java', 'org.eclipse.jgit.transport.URIish', '<init>', '^([a-z][a-z0-9+-]+)://(?:(?:([^/:@]+)(?::([^\\\\/]+))?@)?((?:[^\\\\/:]+)|(?:\\[[0-9a-f:]+\\]))(?::(\\d+))?((?:/~(?:[^\\\\/]+))?[\\\\/]))?(.+)?$', 'https://lusr\\example:wtf@example.com:80//')",[134137]
"('URIish.java', 'org.eclipse.jgit.transport.URIish', '<init>', '^(file):([\\\\/](?![\\\\/])((?:[A-Za-z]:)?[\\\\/]?(?:(?:[^\\\\/]+[\\\\/]+)*[^\\\\/]+[\\\\/]*)))$', 'https://me:wtf@[::1]:1234//abc')",[132504]
"('URIish.java', 'org.eclipse.jgit.transport.URIish', '<init>', '^([a-z][a-z0-9+-]+)://(?:(?:([^/:@]+)(?::([^\\\\/]+))?@)?((?:[^\\\\/:]+)|(?:\\[[0-9a-f:]+\\]))(?::(\\d+))?((?:/~(?:[^\\\\/]+))?[\\\\/]))?(.+)?$', 'http://lusr\\example:wtf@example.com:80//abc')",[130871]
"('URIish.java', 'org.eclipse.jgit.transport.URIish', '<init>', '^([a-z][a-z0-9+-]+)://(?:(?:([^/:@]+)(?::([^\\\\/]+))?@)?((?:[^\\\\/:]+)|(?:\\[[0-9a-f:]+\\]))(?::(\\d+))?((?:/~(?:[^\\\\/]+))?[\\\\/]))?(.+)?$', 'https://l usr\\example.com@example.com:80/D:\\x')",[146419]
"('URIish.java', 'org.eclipse.jgit.transport.URIish', '<init>', '^(file):([\\\\/](?![\\\\/])((?:[A-Za-z]:)?[\\\\/]?(?:(?:[^\\\\/]+[\\\\/]+)*[^\\\\/]+[\\\\/]*)))$', 'ssh+git://me:wtf@example.com:1234/D:/x')",[125190]
"('Description.java', 'org.junit.runner.Description', 'methodAndClassNamePatternGroupOrDefault', '([\\s\\S]*)\\((.*)\\)', 'testEmptyFolderCommittedDeletedCommittedComparedWithInitialCommit(org.eclipse.jgit.treewalk.filter.IndexDiffFilterTest)')","[30485, 88696]"
"('Description.java', 'org.junit.runner.Description', 'methodAndClassNamePatternGroupOrDefault', '([\\s\\S]*)\\((.*)\\)', 'testIntoSymbolicRefHeadPointingToMaster(org.eclipse.jgit.merge.MergeMessageFormatterTest)')","[11053, 69732]"
"('Description.java', 'org.junit.runner.Description', 'methodAndClassNamePatternGroupOrDefault', '([\\s\\S]*)\\((.*)\\)', 'testReadWriteMergeMsg(org.eclipse.jgit.lib.MergeHeadMsgTest)')","[24664, 82976]"
"('URIish.java', 'org.eclipse.jgit.transport.URIish', '<init>', '^([\\\\/]?((?:[A-Za-z]:)?[\\\\/]?(?:(?:[^\\\\/]+[\\\\/]+)*[^\\\\/]+[\\\\/]*)))$', '/tmp/jgit_test_4323105091129792259_tmp/tmp_6865223474386595542')","[205448, 205593, 205743]"
"('Description.java', 'org.junit.runner.Description', 'methodAndClassNamePatternGroupOrDefault', '([\\s\\S]*)\\((.*)\\)', 'testTrivialTwoWay_rightDFconflict2(org.eclipse.jgit.merge.SimpleMergeTest)')","[9740, 68456]"
"('Description.java', 'org.junit.runner.Description', 'methodAndClassNamePatternGroupOrDefault', '([\\s\\S]*)\\((.*)\\)', 'testEqualsIgnoreCase1(org.eclipse.jgit.util.StringUtilsTest)')","[33349, 91358]"
"('URIish.java', 'org.eclipse.jgit.transport.URIish', '<init>', '^(file):([\\\\/](?![\\\\/])((?:[A-Za-z]:)?[\\\\/]?(?:(?:[^\\\\/]+[\\\\/]+)*[^\\\\/]+[\\\\/]*)))$', 'ssh://me@example.com:1234/D:\\x')",[135172]
"('Description.java', 'org.junit.runner.Description', 'methodAndClassNamePatternGroupOrDefault', '([\\s\\S]*)\\((.*)\\)', 'testPunctGroupCase1(org.eclipse.jgit.fnmatch.FileNameMatcherTest)')","[17950, 76420]"
"('URIish.java', 'org.eclipse.jgit.transport.URIish', '<init>', '^(file):([\\\\/](?![\\\\/])((?:[A-Za-z]:)?[\\\\/]?(?:(?:[^\\\\/]+[\\\\/]+)*[^\\\\/]+[\\\\/]*)))$', 'https://me@example.com/D:/x')","[158310, 158494]"
"('ChangeIdUtil.java', 'org.eclipse.jgit.util.ChangeIdUtil', 'insertId', '^(Bug|Issue)[a-zA-Z0-9-]*:.*$', 'Bug: 42')",[188774]
"('Description.java', 'org.junit.runner.Description', 'methodAndClassNamePatternGroupOrDefault', '([\\s\\S]*)\\((.*)\\)', 'testObjectId_objectid_explicit_otherparents(org.eclipse.jgit.lib.RepositoryResolveTest)')","[27489, 85836]"
"('Description.java', 'org.junit.runner.Description', 'methodAndClassNamePatternGroupOrDefault', '([\\s\\S]*)\\((.*)\\)', 'testTwoRangesInOneGroupCase3(org.eclipse.jgit.fnmatch.FileNameMatcherTest)')","[19105, 77630]"
"('Description.java', 'org.junit.runner.Description', 'methodAndClassNamePatternGroupOrDefault', '([\\s\\S]*)\\((.*)\\)', 'org.eclipse.jgit.util.ReadLinesTest')","[32042, 186451]"
"('URIish.java', 'org.eclipse.jgit.transport.URIish', '<init>', '^(file):([\\\\/](?![\\\\/])((?:[A-Za-z]:)?[\\\\/]?(?:(?:[^\\\\/]+[\\\\/]+)*[^\\\\/]+[\\\\/]*)))$', 'ssh+git://lusr\\example@1.2.3.4//abc')","[154216, 154400]"
"('URIish.java', 'org.eclipse.jgit.transport.URIish', '<init>', '^(?:([^/:@]+)(?::([^\\\\/]+))?@)?([^\\\\/:]{2,}):([\\\\/](?:(?:[^\\\\/]+[\\\\/]+)*[^\\\\/]+[\\\\/]*))$', '/tmp/jgit_test_6729380522621655077_tmp/tmp_6942243649056967235')","[203349, 203489, 203638, 203788]"
"('URIish.java', 'org.eclipse.jgit.transport.URIish', '<init>', '^([a-z][a-z0-9+-]+)://(?:(?:([^/:@]+)(?::([^\\\\/]+))?@)?((?:[^\\\\/:]+)|(?:\\[[0-9a-f:]+\\]))(?::(\\d+))?((?:/~(?:[^\\\\/]+))?[\\\\/]))?(.+)?$', 'http://l usr\\example.com@1.2.3.4//')","[156401, 156585]"
"('Description.java', 'org.junit.runner.Description', 'methodAndClassNamePatternGroupOrDefault', '([\\s\\S]*)\\((.*)\\)', 'testDirtyFileModeEqualIndexMerge(org.eclipse.jgit.lib.DirCacheCheckoutTest)')","[23836, 82228]"
"('Description.java', 'org.junit.runner.Description', 'methodAndClassNamePatternGroupOrDefault', '([\\s\\S]*)\\((.*)\\)', 'testOnlyOption_f1_7_f2_14_e(org.eclipse.jgit.api.CommitOnlyTest)')","[48423, 105856]"
"('Description.java', 'org.junit.runner.Description', 'methodAndClassNamePatternGroupOrDefault', '([\\s\\S]*)\\((.*)\\)', 'org.eclipse.jgit.lib.DirCacheCheckoutMaliciousPathTest')","[20971, 183951]"
"('ChangeIdUtil.java', 'org.eclipse.jgit.util.ChangeIdUtil', 'indexOfFirstFooterLine', '^[ \\[].*$', '[bracket]')",[187335]
"('Description.java', 'org.junit.runner.Description', 'methodAndClassNamePatternGroupOrDefault', '([\\s\\S]*)\\((.*)\\)', 'workingDirectoryModify(org.eclipse.jgit.api.StashCreateCommandTest)')","[42005, 99630]"
"('Description.java', 'org.junit.runner.Description', 'methodAndClassNamePatternGroupOrDefault', '([\\s\\S]*)\\((.*)\\)', 'testCombinedMergeOptions(org.eclipse.jgit.lib.ConfigTest)')","[28092, 86408]"
"('Description.java', 'org.junit.runner.Description', 'methodAndClassNamePatternGroupOrDefault', '([\\s\\S]*)\\((.*)\\)', 'testEqualsWithoutWhitespace(org.eclipse.jgit.diff.RawTextIgnoreWhitespaceChangeTest)')","[14978, 73406]"
"('URIish.java', 'org.eclipse.jgit.transport.URIish', '<init>', '^(file):([\\\\/](?![\\\\/])((?:[A-Za-z]:)?[\\\\/]?(?:(?:[^\\\\/]+[\\\\/]+)*[^\\\\/]+[\\\\/]*)))$', 'https://l usr\\example.com@[::1]:80//abc')",[147040]
"('URIish.java', 'org.eclipse.jgit.transport.URIish', '<init>', '^([a-z][a-z0-9+-]+)://(?:(?:([^/:@]+)(?::([^\\\\/]+))?@)?((?:[^\\\\/:]+)|(?:\\[[0-9a-f:]+\\]))(?::(\\d+))?((?:/~(?:[^\\\\/]+))?[\\\\/]))?(.+)?$', 'http://l usr\\example.com@example.com//')","[156033, 156217]"
"('URIish.java', 'org.eclipse.jgit.transport.URIish', '<init>', '^(file):([\\\\/](?![\\\\/])((?:[A-Za-z]:)?[\\\\/]?(?:(?:[^\\\\/]+[\\\\/]+)*[^\\\\/]+[\\\\/]*)))$', 'ssh+git://me@example.com:1234//')",[138346]
"('URIish.java', 'org.eclipse.jgit.transport.URIish', '<init>', '^(file):([\\\\/](?![\\\\/])((?:[A-Za-z]:)?[\\\\/]?(?:(?:[^\\\\/]+[\\\\/]+)*[^\\\\/]+[\\\\/]*)))$', 'ssh+git://lusr\\example@example.com:1234/D:/x')",[140646]
"('URIish.java', 'org.eclipse.jgit.transport.URIish', '<init>', '^([a-z][a-z0-9+-]+)://(?:(?:([^/:@]+)(?::([^\\\\/]+))?@)?((?:[^\\\\/:]+)|(?:\\[[0-9a-f:]+\\]))(?::(\\d+))?((?:/~(?:[^\\\\/]+))?[\\\\/]))?(.+)?$', 'https://lusr\\example@1.2.3.4:1234//abc')",[147615]
"('Description.java', 'org.junit.runner.Description', 'methodAndClassNamePatternGroupOrDefault', '([\\s\\S]*)\\((.*)\\)', 'testAddToMiddleOfListByInsertionPosition(org.eclipse.jgit.util.RefListTest)')","[35057, 93008]"
"('ChangeIdUtil.java', 'org.eclipse.jgit.util.ChangeIdUtil', 'indexOfChangeId', '(^Change-Id: *I[a-f0-9]{40}$)', '[ja: Fixed')",[188308]
"('Description.java', 'org.junit.runner.Description', 'methodAndClassNamePatternGroupOrDefault', '([\\s\\S]*)\\((.*)\\)', 'testCreateMatcherForSuffix(org.eclipse.jgit.fnmatch.FileNameMatcherTest)')","[16837, 75254]"
"('URIish.java', 'org.eclipse.jgit.transport.URIish', '<init>', '^(file):([\\\\/](?![\\\\/])((?:[A-Za-z]:)?[\\\\/]?(?:(?:[^\\\\/]+[\\\\/]+)*[^\\\\/]+[\\\\/]*)))$', 'ssh+git://l usr\\example.com@[::1]:80/D:/x')",[140462]
"('Description.java', 'org.junit.runner.Description', 'methodAndClassNamePatternGroupOrDefault', '([\\s\\S]*)\\((.*)\\)', 'testConflictingFromMultipleCreations(org.eclipse.jgit.lib.IndexDiffTest)')","[20765, 79170]"
"('Description.java', 'org.junit.runner.Description', 'methodAndClassNamePatternGroupOrDefault', '([\\s\\S]*)\\((.*)\\)', 'testEdit_LinuxBug(org.eclipse.jgit.diff.MyersDiffTest)')","[14415, 72856]"
"('URIish.java', 'org.eclipse.jgit.transport.URIish', '<init>', '^(file):([\\\\/](?![\\\\/])((?:[A-Za-z]:)?[\\\\/]?(?:(?:[^\\\\/]+[\\\\/]+)*[^\\\\/]+[\\\\/]*)))$', '/a/b/c/')",[176296]
"('URIish.java', 'org.eclipse.jgit.transport.URIish', '<init>', '^(file):([\\\\/](?![\\\\/])((?:[A-Za-z]:)?[\\\\/]?(?:(?:[^\\\\/]+[\\\\/]+)*[^\\\\/]+[\\\\/]*)))$', 'http://l usr\\example.com@[::1]/D:\\x')","[156884, 157068]"
"('URIish.java', 'org.eclipse.jgit.transport.URIish', '<init>', '^([a-z][a-z0-9+-]+)://(?:(?:([^/:@]+)(?::([^\\\\/]+))?@)?((?:[^\\\\/:]+)|(?:\\[[0-9a-f:]+\\]))(?::(\\d+))?((?:/~(?:[^\\\\/]+))?[\\\\/]))?(.+)?$', 'ssh://me:wtf@[::1]:1234/D:/x')",[122637]
"('Description.java', 'org.junit.runner.Description', 'methodAndClassNamePatternGroupOrDefault', '([\\s\\S]*)\\((.*)\\)', 'testGetText_Convert(org.eclipse.jgit.patch.GetTextTest)')","[40007, 97716]"
"('Description.java', 'org.junit.runner.Description', 'methodAndClassNamePatternGroupOrDefault', '([\\s\\S]*)\\((.*)\\)', 'testOneBranch(org.eclipse.jgit.merge.MergeMessageFormatterTest)')","[11095, 69776]"
"('URIish.java', 'org.eclipse.jgit.transport.URIish', '<init>', '^([a-z][a-z0-9+-]+)://(?:(?:([^/:@]+)(?::([^\\\\/]+))?@)?((?:[^\\\\/:]+)|(?:\\[[0-9a-f:]+\\]))(?::(\\d+))?((?:/~(?:[^\\\\/]+))?[\\\\/]))?(.+)?$', 'ssh://l usr\\example.com:wtf@[::1]:1234//abc')",[123695]
"('URIish.java', 'org.eclipse.jgit.transport.URIish', 'getHumanishName', '^([\\\\/]?((?:[A-Za-z]:)?[\\\\/]?(?:(?:[^\\\\/]+[\\\\/]+)*[^\\\\/]+[\\\\/]*)))$', '/a/b/.git')",[179907]
"('URIish.java', 'org.eclipse.jgit.transport.URIish', '<init>', '^(?:([^/:@]+)(?::([^\\\\/]+))?@)?((?:[^\\\\/:]+)|(?:\\[[0-9a-f:]+\\])):((?:(?:/~(?:[^\\\\/]+))[\\\\/])?(?:(?:[^\\\\/]+[\\\\/]+)*[^\\\\/]+[\\\\/]*))$', '/home/m y')","[176112, 176227]"
"('Description.java', 'org.junit.runner.Description', 'methodAndClassNamePatternGroupOrDefault', '([\\s\\S]*)\\((.*)\\)', 'testSshGitProto(org.eclipse.jgit.transport.URIishTest)')","[1517, 60558]"
"('URIish.java', 'org.eclipse.jgit.transport.URIish', '<init>', '^([a-z][a-z0-9+-]+)://(?:(?:([^/:@]+)(?::([^\\\\/]+))?@)?((?:[^\\\\/:]+)|(?:\\[[0-9a-f:]+\\]))(?::(\\d+))?((?:/~(?:[^\\\\/]+))?[\\\\/]))?(.+)?$', 'ssh://lusr\\example@example.com:1234/D:\\x')",[137403]
"('Description.java', 'org.junit.runner.Description', 'methodAndClassNamePatternGroupOrDefault', '([\\s\\S]*)\\((.*)\\)', 'testUpperGroupCase3(org.eclipse.jgit.fnmatch.FileNameMatcherTest)')","[18454, 76948]"
"('URIish.java', 'org.eclipse.jgit.transport.URIish', '<init>', '^(file):([\\\\/](?![\\\\/])((?:[A-Za-z]:)?[\\\\/]?(?:(?:[^\\\\/]+[\\\\/]+)*[^\\\\/]+[\\\\/]*)))$', 'http://me:wtf@[::1]:80/D:/x')",[129422]
"('URIish.java', 'org.eclipse.jgit.transport.URIish', '<init>', '^([a-z][a-z0-9+-]+)://(?:(?:([^/:@]+)(?::([^\\\\/]+))?@)?((?:[^\\\\/:]+)|(?:\\[[0-9a-f:]+\\]))(?::(\\d+))?((?:/~(?:[^\\\\/]+))?[\\\\/]))?(.+)?$', 'ssh://lusr\\example:wtf@example.com:1234//abc')",[124063]
"('Description.java', 'org.junit.runner.Description', 'methodAndClassNamePatternGroupOrDefault', '([\\s\\S]*)\\((.*)\\)', 'testLargeObjectLoader(org.eclipse.jgit.lib.ObjectLoaderTest)')","[24540, 82866]"
"('URIish.java', 'org.eclipse.jgit.transport.URIish', '<init>', '^(file):([\\\\/](?![\\\\/])((?:[A-Za-z]:)?[\\\\/]?(?:(?:[^\\\\/]+[\\\\/]+)*[^\\\\/]+[\\\\/]*)))$', 'http://l usr\\example.com:wtf@[::1]:80//')",[130434]
"('Description.java', 'org.junit.runner.Description', 'methodAndClassNamePatternGroupOrDefault', '([\\s\\S]*)\\((.*)\\)', 'testEdit_ReplaceCommonDelete(org.eclipse.jgit.diff.MyersDiffTest)')","[14394, 72834]"
"('Description.java', 'org.junit.runner.Description', 'methodAndClassNamePatternGroupOrDefault', '([\\s\\S]*)\\((.*)\\)', 'testSignedOffBy_OneUserNoLF(org.eclipse.jgit.revwalk.FooterLineTest)')","[6168, 65112]"
"('URIish.java', 'org.eclipse.jgit.transport.URIish', '<init>', '^(file):([\\\\/](?![\\\\/])((?:[A-Za-z]:)?[\\\\/]?(?:(?:[^\\\\/]+[\\\\/]+)*[^\\\\/]+[\\\\/]*)))$', 'http://l usr\\example.com@example.com:80//abc')",[142992]
"('URIish.java', 'org.eclipse.jgit.transport.URIish', '<init>', '^([a-z][a-z0-9+-]+)://(?:(?:([^/:@]+)(?::([^\\\\/]+))?@)?((?:[^\\\\/:]+)|(?:\\[[0-9a-f:]+\\]))(?::(\\d+))?((?:/~(?:[^\\\\/]+))?[\\\\/]))?(.+)?$', 'ssh://l usr\\example.com:wtf@[::1]:80//')",[123833]
"('Description.java', 'org.junit.runner.Description', 'methodAndClassNamePatternGroupOrDefault', '([\\s\\S]*)\\((.*)\\)', 'testOnlyOption_f1_1_f2_14_d(org.eclipse.jgit.api.CommitOnlyTest)')","[50292, 107814]"
"('URIish.java', 'org.eclipse.jgit.transport.URIish', '<init>', '^([a-z][a-z0-9+-]+)://(?:(?:([^/:@]+)(?::([^\\\\/]+))?@)?((?:[^\\\\/:]+)|(?:\\[[0-9a-f:]+\\]))(?::(\\d+))?((?:/~(?:[^\\\\/]+))?[\\\\/]))?(.+)?$', 'https://me@[::1]:80//')",[145913]
"('ChangeIdUtil.java', 'org.eclipse.jgit.util.ChangeIdUtil', 'indexOfFirstFooterLine', '(^[a-zA-Z0-9-]+:(?!//).*$)', 'Signed-off-by: me@you.too')","[187283, 188127, 189182, 190893, 191178, 191724, 191827, 192135]"
"('Description.java', 'org.junit.runner.Description', 'methodAndClassNamePatternGroupOrDefault', '([\\s\\S]*)\\((.*)\\)', 'testLowerGroupCase2(org.eclipse.jgit.fnmatch.FileNameMatcherTest)')","[16921, 75342]"
"('QuotedString.java', 'org.eclipse.jgit.util.QuotedString$BourneUserPathStyle', 'quote', '^~[A-Za-z0-9_-]*/.*$', '!')","[193164, 193189]"
"('URIish.java', 'org.eclipse.jgit.transport.URIish', '<init>', '^(file):([\\\\/](?![\\\\/])((?:[A-Za-z]:)?[\\\\/]?(?:(?:[^\\\\/]+[\\\\/]+)*[^\\\\/]+[\\\\/]*)))$', 'http://l usr\\example.com@example.com:1234//')",[142762]
"('Description.java', 'org.junit.runner.Description', 'methodAndClassNamePatternGroupOrDefault', '([\\s\\S]*)\\((.*)\\)', 'testExactRename_MultipleIdenticalDeletes(org.eclipse.jgit.diff.RenameDetectorTest)')","[13087, 71624]"
"('Description.java', 'org.junit.runner.Description', 'methodAndClassNamePatternGroupOrDefault', '([\\s\\S]*)\\((.*)\\)', 'testInvalidTreeDuplicateNames1(org.eclipse.jgit.lib.ObjectCheckerTest)')","[26945, 85286]"
"('URIish.java', 'org.eclipse.jgit.transport.URIish', '<init>', '^([a-z][a-z0-9+-]+)://(?:(?:([^/:@]+)(?::([^\\\\/]+))?@)?((?:[^\\\\/:]+)|(?:\\[[0-9a-f:]+\\]))(?::(\\d+))?((?:/~(?:[^\\\\/]+))?[\\\\/]))?(.+)?$', 'ssh+git://example.com/D:\\x')","[165003, 165187, 166107, 166291, 167211, 167395]"
"('Description.java', 'org.junit.runner.Description', 'methodAndClassNamePatternGroupOrDefault', '([\\s\\S]*)\\((.*)\\)', 'concurrentOnlyOneWritesPackedRefs(org.eclipse.jgit.internal.storage.file.GcPackRefsTest)')","[55379, 112566]"
"('URIish.java', 'org.eclipse.jgit.transport.URIish', '<init>', '^(file):([\\\\/](?![\\\\/])((?:[A-Za-z]:)?[\\\\/]?(?:(?:[^\\\\/]+[\\\\/]+)*[^\\\\/]+[\\\\/]*)))$', 'ssh+git://lusr\\example:wtf@[::1]:1234/D:\\x')",[128180]
"('Description.java', 'org.junit.runner.Description', 'methodAndClassNamePatternGroupOrDefault', '([\\s\\S]*)\\((.*)\\)', 'testSeperateModifications(org.eclipse.jgit.merge.MergeAlgorithmTest)')","[10095, 68808]"
"('URIish.java', 'org.eclipse.jgit.transport.URIish', '<init>', '^([\\\\/]?((?:[A-Za-z]:)?[\\\\/]?(?:(?:[^\\\\/]+[\\\\/]+)*[^\\\\/]+[\\\\/]*)))$', 'D:/m y')","[178228, 178343]"
"('URIish.java', 'org.eclipse.jgit.transport.URIish', '<init>', '^(file):([\\\\/](?![\\\\/])((?:[A-Za-z]:)?[\\\\/]?(?:(?:[^\\\\/]+[\\\\/]+)*[^\\\\/]+[\\\\/]*)))$', 'ssh+git://l usr\\example.com@example.com:80//')",[139634]
"('Description.java', 'org.junit.runner.Description', 'methodAndClassNamePatternGroupOrDefault', '([\\s\\S]*)\\((.*)\\)', 'testSet(org.eclipse.jgit.util.RefListTest)')","[34952, 92898]"
"('Description.java', 'org.junit.runner.Description', 'methodAndClassNamePatternGroupOrDefault', '([\\s\\S]*)\\((.*)\\)', 'testEdit_InvertBlocks(org.eclipse.jgit.diff.HistogramDiffTest)')","[15499, 73912]"
"('URIish.java', 'org.eclipse.jgit.transport.URIish', '<init>', '^(file):([\\\\/](?![\\\\/])((?:[A-Za-z]:)?[\\\\/]?(?:(?:[^\\\\/]+[\\\\/]+)*[^\\\\/]+[\\\\/]*)))$', 'https://lusr\\example@example.com/D:\\x')","[160564, 160748]"
"('URIish.java', 'org.eclipse.jgit.transport.URIish', '<init>', '^([a-z][a-z0-9+-]+)://(?:(?:([^/:@]+)(?::([^\\\\/]+))?@)?((?:[^\\\\/:]+)|(?:\\[[0-9a-f:]+\\]))(?::(\\d+))?((?:/~(?:[^\\\\/]+))?[\\\\/]))?(.+)?$', 'ssh+git://me@example.com:80//')",[138553]
"('Description.java', 'org.junit.runner.Description', 'methodAndClassNamePatternGroupOrDefault', '([\\s\\S]*)\\((.*)\\)', 'testCheckoutOfDirectoryShouldBeRecursive(org.eclipse.jgit.api.CheckoutCommandTest)')","[43001, 100554]"
"('URIish.java', 'org.eclipse.jgit.transport.URIish', '<init>', '^([a-z][a-z0-9+-]+)://(?:(?:([^/:@]+)(?::([^\\\\/]+))?@)?((?:[^\\\\/:]+)|(?:\\[[0-9a-f:]+\\]))(?::(\\d+))?((?:/~(?:[^\\\\/]+))?[\\\\/]))?(.+)?$', 'ssh://lusr\\example:wtf@1.2.3.4:80/D:/x')",[124661]
"('URIish.java', 'org.eclipse.jgit.transport.URIish', '<init>', '^(file):([\\\\/](?![\\\\/])((?:[A-Za-z]:)?[\\\\/]?(?:(?:[^\\\\/]+[\\\\/]+)*[^\\\\/]+[\\\\/]*)))$', 'ssh://[::1]/D:\\x')","[162404, 162588, 163508, 163692, 164612, 164796]"
"('URIish.java', 'org.eclipse.jgit.transport.URIish', '<init>', '^([a-z][a-z0-9+-]+)://(?:(?:([^/:@]+)(?::([^\\\\/]+))?@)?((?:[^\\\\/:]+)|(?:\\[[0-9a-f:]+\\]))(?::(\\d+))?((?:/~(?:[^\\\\/]+))?[\\\\/]))?(.+)?$', 'http://me:wtf@[::1]:1234//abc')",[129215]
"('URIish.java', 'org.eclipse.jgit.transport.URIish', '<init>', '^([\\\\/]?((?:[A-Za-z]:)?[\\\\/]?(?:(?:[^\\\\/]+[\\\\/]+)*[^\\\\/]+[\\\\/]*)))$', '/abc/.git')",[176848]
"('URIish.java', 'org.eclipse.jgit.transport.URIish', '<init>', '^([a-z][a-z0-9+-]+)://(?:(?:([^/:@]+)(?::([^\\\\/]+))?@)?((?:[^\\\\/:]+)|(?:\\[[0-9a-f:]+\\]))(?::(\\d+))?((?:/~(?:[^\\\\/]+))?[\\\\/]))?(.+)?$', 'ssh://l usr\\example.com@[::1]/D:/x')","[150237, 150421]"
"('URIish.java', 'org.eclipse.jgit.transport.URIish', '<init>', '^(file):([\\\\/](?![\\\\/])((?:[A-Za-z]:)?[\\\\/]?(?:(?:[^\\\\/]+[\\\\/]+)*[^\\\\/]+[\\\\/]*)))$', 'ssh://me@1.2.3.4/D:/x')","[148742, 148926]"
"('Description.java', 'org.junit.runner.Description', 'methodAndClassNamePatternGroupOrDefault', '([\\s\\S]*)\\((.*)\\)', 'commitIgnoresSmudgedEntryWithDifferentId(org.eclipse.jgit.api.CommitCommandTest)')","[43566, 101126]"
"('Description.java', 'org.junit.runner.Description', 'methodAndClassNamePatternGroupOrDefault', '([\\s\\S]*)\\((.*)\\)', 'testFastForwardWithMultipleCommits(org.eclipse.jgit.api.RebaseCommandTest)')","[45045, 102556]"
"('Repository.java', 'org.eclipse.jgit.lib.Repository', 'resolve', '^-\\d+$', '-2')","[184934, 184961, 185099, 185126]"
"('Description.java', 'org.junit.runner.Description', 'methodAndClassNamePatternGroupOrDefault', '([\\s\\S]*)\\((.*)\\)', 'testVerySimpleGroupRangeCase1(org.eclipse.jgit.fnmatch.FileNameMatcherTest)')","[17761, 76222]"
"('URIish.java', 'org.eclipse.jgit.transport.URIish', '<init>', '^([a-z][a-z0-9+-]+)://(?:(?:([^/:@]+)(?::([^\\\\/]+))?@)?((?:[^\\\\/:]+)|(?:\\[[0-9a-f:]+\\]))(?::(\\d+))?((?:/~(?:[^\\\\/]+))?[\\\\/]))?(.+)?$', 'ssh+git://lusr\\example@1.2.3.4//')","[154193, 154377]"
"('Description.java', 'org.junit.runner.Description', 'methodAndClassNamePatternGroupOrDefault', '([\\s\\S]*)\\((.*)\\)', 'renameBranchMultipleConfigValues(org.eclipse.jgit.api.RenameBranchCommandTest)')","[50937, 108430]"
"('URIish.java', 'org.eclipse.jgit.transport.URIish', '<init>', '^([a-z][a-z0-9+-]+)://(?:(?:([^/:@]+)(?::([^\\\\/]+))?@)?((?:[^\\\\/:]+)|(?:\\[[0-9a-f:]+\\]))(?::(\\d+))?((?:/~(?:[^\\\\/]+))?[\\\\/]))?(.+)?$', 'ssh://%3ax%25:%40%41x@example.com:33/some%c3%a5/p%20a th')","[176457, 176503]"
"('URIish.java', 'org.eclipse.jgit.transport.URIish', '<init>', '^(file):([\\\\/](?![\\\\/])((?:[A-Za-z]:)?[\\\\/]?(?:(?:[^\\\\/]+[\\\\/]+)*[^\\\\/]+[\\\\/]*)))$', 'https://lusr\\example@example.com:1234//')",[147178]
"('URIish.java', 'org.eclipse.jgit.transport.URIish', '<init>', '^([a-z][a-z0-9+-]+)://(?:(?:([^/:@]+)(?::([^\\\\/]+))?@)?((?:[^\\\\/:]+)|(?:\\[[0-9a-f:]+\\]))(?::(\\d+))?((?:/~(?:[^\\\\/]+))?[\\\\/]))?(.+)?$', 'https://lusr\\example@1.2.3.4:80/D:/x')",[147845]
"('URIish.java', 'org.eclipse.jgit.transport.URIish', '<init>', '^(file):([\\\\/](?![\\\\/])((?:[A-Za-z]:)?[\\\\/]?(?:(?:[^\\\\/]+[\\\\/]+)*[^\\\\/]+[\\\\/]*)))$', 'https://lusr\\example:wtf@example.com:80//')",[134114]
"('Description.java', 'org.junit.runner.Description', 'methodAndClassNamePatternGroupOrDefault', '([\\s\\S]*)\\((.*)\\)', 'absoluteGitDirRef(org.eclipse.jgit.internal.storage.file.FileRepositoryBuilderTest)')","[53738, 111026]"
"('URIish.java', 'org.eclipse.jgit.transport.URIish', '<init>', '^(file):([\\\\/](?![\\\\/])((?:[A-Za-z]:)?[\\\\/]?(?:(?:[^\\\\/]+[\\\\/]+)*[^\\\\/]+[\\\\/]*)))$', 'https://me@[::1]:80/D:/x')",[145982]
"('Description.java', 'org.junit.runner.Description', 'methodAndClassNamePatternGroupOrDefault', '([\\s\\S]*)\\((.*)\\)', 'testSaveRemoveLastURI(org.eclipse.jgit.transport.RemoteConfigTest)')","[847, 59876]"
"('Description.java', 'org.junit.runner.Description', 'methodAndClassNamePatternGroupOrDefault', '([\\s\\S]*)\\((.*)\\)', 'testInitBareRepository(org.eclipse.jgit.api.InitCommandTest)')","[48112, 105570]"
"('URIish.java', 'org.eclipse.jgit.transport.URIish', '<init>', '^([a-z][a-z0-9+-]+)://(?:(?:([^/:@]+)(?::([^\\\\/]+))?@)?((?:[^\\\\/:]+)|(?:\\[[0-9a-f:]+\\]))(?::(\\d+))?((?:/~(?:[^\\\\/]+))?[\\\\/]))?(.+)?$', 'ssh+git://lusr\\example@[::1]//abc')","[154607, 154791]"
"('URIish.java', 'org.eclipse.jgit.transport.URIish', '<init>', '^(file):([\\\\/](?![\\\\/])((?:[A-Za-z]:)?[\\\\/]?(?:(?:[^\\\\/]+[\\\\/]+)*[^\\\\/]+[\\\\/]*)))$', 'ssh://l usr\\example.com@[::1]:1234//abc')",[136920]
"('URIish.java', 'org.eclipse.jgit.transport.URIish', '<init>', '^([a-z][a-z0-9+-]+)://(?:(?:([^/:@]+)(?::([^\\\\/]+))?@)?((?:[^\\\\/:]+)|(?:\\[[0-9a-f:]+\\]))(?::(\\d+))?((?:/~(?:[^\\\\/]+))?[\\\\/]))?(.+)?$', 'ssh://lusr\\example@1.2.3.4:80/D:/x')",[137909]
"('URIish.java', 'org.eclipse.jgit.transport.URIish', '<init>', '^([\\\\/]?((?:[A-Za-z]:)?[\\\\/]?(?:(?:[^\\\\/]+[\\\\/]+)*[^\\\\/]+[\\\\/]*)))$', '/tmp/jgit_test_7232275650859170598_tmp/tmp_5735535626593387142/.git')","[206821, 206971]"
"('Description.java', 'org.junit.runner.Description', 'methodAndClassNamePatternGroupOrDefault', '([\\s\\S]*)\\((.*)\\)', 'testValidTreeSorting6(org.eclipse.jgit.lib.ObjectCheckerTest)')","[25832, 84120]"
"('URIish.java', 'org.eclipse.jgit.transport.URIish', '<init>', '^(file):([\\\\/](?![\\\\/])((?:[A-Za-z]:)?[\\\\/]?(?:(?:[^\\\\/]+[\\\\/]+)*[^\\\\/]+[\\\\/]*)))$', 'https://lusr\\example@example.com/D:/x')","[160518, 160702]"
"('Description.java', 'org.junit.runner.Description', 'methodAndClassNamePatternGroupOrDefault', '([\\s\\S]*)\\((.*)\\)', 'testSuccessfulMergeFailsDueToDirtyWorktree(org.eclipse.jgit.api.MergeCommandTest)')","[44320, 101896]"
"('Description.java', 'org.junit.runner.Description', 'methodAndClassNamePatternGroupOrDefault', '([\\s\\S]*)\\((.*)\\)', 'testEqualsIgnoreCase4(org.eclipse.jgit.util.StringUtilsTest)')","[33412, 91424]"
"('Description.java', 'org.junit.runner.Description', 'methodAndClassNamePatternGroupOrDefault', '([\\s\\S]*)\\((.*)\\)', 'testConstructor_RejectsBadChannel(org.eclipse.jgit.transport.SideBandOutputStreamTest)')","[4525, 63550]"
"('URIish.java', 'org.eclipse.jgit.transport.URIish', '<init>', '^([a-z][a-z0-9+-]+)://(?:(?:([^/:@]+)(?::([^\\\\/]+))?@)?((?:[^\\\\/:]+)|(?:\\[[0-9a-f:]+\\]))(?::(\\d+))?((?:/~(?:[^\\\\/]+))?[\\\\/]))?(.+)?$', 'ssh://me:wtf@example.com:80//abc')",[122039]
"('Description.java', 'org.junit.runner.Description', 'methodAndClassNamePatternGroupOrDefault', '([\\s\\S]*)\\((.*)\\)', 'testReadLines_CRLF(org.eclipse.jgit.util.ReadLinesTest)')","[32147, 90258]"
"('Description.java', 'org.junit.runner.Description', 'methodAndClassNamePatternGroupOrDefault', '([\\s\\S]*)\\((.*)\\)', 'testCaseInsensitive(org.eclipse.jgit.util.RawSubStringPatternTest)')","[33515, 91512]"
"('URIish.java', 'org.eclipse.jgit.transport.URIish', '<init>', '^(?:([^/:@]+)(?::([^\\\\/]+))?@)?([^\\\\/:]{2,}):([\\\\/](?:(?:[^\\\\/]+[\\\\/]+)*[^\\\\/]+[\\\\/]*))$', 'D:\\m y')","[176963, 177078]"
"('Description.java', 'org.junit.runner.Description', 'methodAndClassNamePatternGroupOrDefault', '([\\s\\S]*)\\((.*)\\)', 'org.eclipse.jgit.internal.storage.file.InflatingBitSetTest')","[54734, 209894]"
"('Description.java', 'org.junit.runner.Description', 'methodAndClassNamePatternGroupOrDefault', '([\\s\\S]*)\\((.*)\\)', 'testDirectoryFileConflicts_9(org.eclipse.jgit.lib.DirCacheCheckoutTest)')","[23500, 81876]"
"('Description.java', 'org.junit.runner.Description', 'methodAndClassNamePatternGroupOrDefault', '([\\s\\S]*)\\((.*)\\)', 'testEmptyMap(org.eclipse.jgit.lib.ObjectIdSubclassMapTest)')","[22225, 80600]"
"('Description.java', 'org.junit.runner.Description', 'methodAndClassNamePatternGroupOrDefault', '([\\s\\S]*)\\((.*)\\)', 'testWrite_SmallBlocks3(org.eclipse.jgit.transport.SideBandOutputStreamTest)')","[4588, 63616]"
"('URIish.java', 'org.eclipse.jgit.transport.URIish', '<init>', '^([a-z][a-z0-9+-]+)://(?:(?:([^/:@]+)(?::([^\\\\/]+))?@)?((?:[^\\\\/:]+)|(?:\\[[0-9a-f:]+\\]))(?::(\\d+))?((?:/~(?:[^\\\\/]+))?[\\\\/]))?(.+)?$', 'https://lusr\\example@[::1]:1234//')",[147937]
"('Description.java', 'org.junit.runner.Description', 'methodAndClassNamePatternGroupOrDefault', '([\\s\\S]*)\\((.*)\\)', 'testNotBare_CreateRepositoryFromGitDirOnlyWithBareConfigFalse(org.eclipse.jgit.internal.storage.file.RepositorySetupWorkDirTest)')","[57085, 114194]"
"('Description.java', 'org.junit.runner.Description', 'methodAndClassNamePatternGroupOrDefault', '([\\s\\S]*)\\((.*)\\)', 'testHeadReflog(org.eclipse.jgit.api.ReflogCommandTest)')","[51040, 108518]"
"('URIish.java', 'org.eclipse.jgit.transport.URIish', '<init>', '^(?:([^/:@]+)(?::([^\\\\/]+))?@)?((?:[^\\\\/:]+)|(?:\\[[0-9a-f:]+\\])):((?:(?:/~(?:[^\\\\/]+))[\\\\/])?(?:(?:[^\\\\/]+[\\\\/]+)*[^\\\\/]+[\\\\/]*))$', '/tmp/jgit_test_8508429422333606359_tmp/tmp_7349125838900302966/.git')","[206489, 206631]"
"('URIish.java', 'org.eclipse.jgit.transport.URIish', '<init>', '^(file):([\\\\/](?![\\\\/])((?:[A-Za-z]:)?[\\\\/]?(?:(?:[^\\\\/]+[\\\\/]+)*[^\\\\/]+[\\\\/]*)))$', 'ssh+git://l usr\\example.com:wtf@example.com:1234/D:\\x')",[126340]
"('QuotedString.java', 'org.eclipse.jgit.util.QuotedString$BourneUserPathStyle', 'quote', '^~[A-Za-z0-9_-]+$', ""a'b"")","[193215, 193240]"
"('Description.java', 'org.junit.runner.Description', 'methodAndClassNamePatternGroupOrDefault', '([\\s\\S]*)\\((.*)\\)', 'org.eclipse.jgit.revwalk.RevWalkCullTest')","[5836, 181217]"
"('Description.java', 'org.junit.runner.Description', 'methodAndClassNamePatternGroupOrDefault', '([\\s\\S]*)\\((.*)\\)', 'test009_SymlinkAndGitlink(org.eclipse.jgit.lib.T0002_TreeTest)')","[24765, 83042]"
"('Description.java', 'org.junit.runner.Description', 'methodAndClassNamePatternGroupOrDefault', '([\\s\\S]*)\\((.*)\\)', 'testDeleteEmptyTagNames(org.eclipse.jgit.api.TagCommandTest)')","[41545, 99168]"
"('Description.java', 'org.junit.runner.Description', 'methodAndClassNamePatternGroupOrDefault', '([\\s\\S]*)\\((.*)\\)', 'testOnlyOption_f1_4_b(org.eclipse.jgit.api.CommitOnlyTest)')","[48780, 106230]"
"('URIish.java', 'org.eclipse.jgit.transport.URIish', '<init>', '^(file):([\\\\/](?![\\\\/])((?:[A-Za-z]:)?[\\\\/]?(?:(?:[^\\\\/]+[\\\\/]+)*[^\\\\/]+[\\\\/]*)))$', 'http://l usr\\example.com@example.com/D:/x')","[156102, 156286]"
"('URIish.java', 'org.eclipse.jgit.transport.URIish', '<init>', '^(file):([\\\\/](?![\\\\/])((?:[A-Za-z]:)?[\\\\/]?(?:(?:[^\\\\/]+[\\\\/]+)*[^\\\\/]+[\\\\/]*)))$', 'ssh://me@[::1]/D:\\x')","[149156, 149340]"
"('URIish.java', 'org.eclipse.jgit.transport.URIish', '<init>', '^([a-z][a-z0-9+-]+)://(?:(?:([^/:@]+)(?::([^\\\\/]+))?@)?((?:[^\\\\/:]+)|(?:\\[[0-9a-f:]+\\]))(?::(\\d+))?((?:/~(?:[^\\\\/]+))?[\\\\/]))?(.+)?$', 'https://lusr\\example@1.2.3.4/D:/x')","[160909, 161093]"
"('Description.java', 'org.junit.runner.Description', 'methodAndClassNamePatternGroupOrDefault', '([\\s\\S]*)\\((.*)\\)', 'org.eclipse.jgit.api.StatusCommandTest')","[44774, 202157]"
"('Description.java', 'org.junit.runner.Description', 'methodAndClassNamePatternGroupOrDefault', '([\\s\\S]*)\\((.*)\\)', 'testCompareEntriesOffsetsWithFindOffsets(org.eclipse.jgit.internal.storage.file.PackIndexV2Test)')","[53614, 110916]"
"('URIish.java', 'org.eclipse.jgit.transport.URIish', '<init>', '^(?:([^/:@]+)(?::([^\\\\/]+))?@)?((?:[^\\\\/:]+)|(?:\\[[0-9a-f:]+\\])):((?:(?:/~(?:[^\\\\/]+))[\\\\/])?(?:(?:[^\\\\/]+[\\\\/]+)*[^\\\\/]+[\\\\/]*))$', '../tmp_1145110896699918732')",[180924]
"('Description.java', 'org.junit.runner.Description', 'methodAndClassNamePatternGroupOrDefault', '([\\s\\S]*)\\((.*)\\)', 'testCache_TooSmallLimit(org.eclipse.jgit.internal.storage.file.WindowCacheGetTest)')","[56421, 113578]"
"('Description.java', 'org.junit.runner.Description', 'methodAndClassNamePatternGroupOrDefault', '([\\s\\S]*)\\((.*)\\)', 'testEncodeMatchesDecode(org.eclipse.jgit.util.Base64Test)')","[36765, 94658]"
"('Description.java', 'org.junit.runner.Description', 'methodAndClassNamePatternGroupOrDefault', '([\\s\\S]*)\\((.*)\\)', 'testMergeRemovingFolders(org.eclipse.jgit.api.MergeCommandTest)')","[43858, 101412]"
"('Description.java', 'org.junit.runner.Description', 'methodAndClassNamePatternGroupOrDefault', '([\\s\\S]*)\\((.*)\\)', 'testReadBoolean_OnOff1(org.eclipse.jgit.lib.ConfigTest)')","[27819, 86122]"
"('Description.java', 'org.junit.runner.Description', 'methodAndClassNamePatternGroupOrDefault', '([\\s\\S]*)\\((.*)\\)', 'testFileCommittedModifiedIgnored(org.eclipse.jgit.treewalk.filter.IndexDiffFilterTest)')","[30590, 88806]"
"('URIish.java', 'org.eclipse.jgit.transport.URIish', '<init>', '^(file):([\\\\/](?![\\\\/])((?:[A-Za-z]:)?[\\\\/]?(?:(?:[^\\\\/]+[\\\\/]+)*[^\\\\/]+[\\\\/]*)))$', 'ssh://me@example.com//')","[148282, 148466]"
"('URIish.java', 'org.eclipse.jgit.transport.URIish', '<init>', '^([\\\\/]?((?:[A-Za-z]:)?[\\\\/]?(?:(?:[^\\\\/]+[\\\\/]+)*[^\\\\/]+[\\\\/]*)))$', '/.git')",[174985]
"('URIish.java', 'org.eclipse.jgit.transport.URIish', '<init>', '^(file):([\\\\/](?![\\\\/])((?:[A-Za-z]:)?[\\\\/]?(?:(?:[^\\\\/]+[\\\\/]+)*[^\\\\/]+[\\\\/]*)))$', 'ssh://l usr\\example.com:wtf@[::1]:80/D:/x')",[123902]
"('URIish.java', 'org.eclipse.jgit.transport.URIish', '<init>', '^(file):([\\\\/](?![\\\\/])((?:[A-Za-z]:)?[\\\\/]?(?:(?:[^\\\\/]+[\\\\/]+)*[^\\\\/]+[\\\\/]*)))$', 'ssh+git://me@example.com:80/D:\\x')",[138668]
"('URIish.java', 'org.eclipse.jgit.transport.URIish', '<init>', '^(file):([\\\\/](?![\\\\/])((?:[A-Za-z]:)?[\\\\/]?(?:(?:[^\\\\/]+[\\\\/]+)*[^\\\\/]+[\\\\/]*)))$', 'http://example.com/D:\\x')","[168292, 168476, 169396, 169580, 170500, 170684]"
"('URIish.java', 'org.eclipse.jgit.transport.URIish', '<init>', '^(file):([\\\\/](?![\\\\/])((?:[A-Za-z]:)?[\\\\/]?(?:(?:[^\\\\/]+[\\\\/]+)*[^\\\\/]+[\\\\/]*)))$', 'http://l usr\\example.com@[::1]:80/D:\\x')",[143820]
"('Description.java', 'org.junit.runner.Description', 'methodAndClassNamePatternGroupOrDefault', '([\\s\\S]*)\\((.*)\\)', 'testDiffTwoCommits(org.eclipse.jgit.api.DiffCommandTest)')","[48236, 105680]"
"('URIish.java', 'org.eclipse.jgit.transport.URIish', '<init>', '^([a-z][a-z0-9+-]+)://(?:(?:([^/:@]+)(?::([^\\\\/]+))?@)?((?:[^\\\\/:]+)|(?:\\[[0-9a-f:]+\\]))(?::(\\d+))?((?:/~(?:[^\\\\/]+))?[\\\\/]))?(.+)?$', 'https://lusr\\example:wtf@[::1]:80//abc')",[134919]
"('URIish.java', 'org.eclipse.jgit.transport.URIish', '<init>', '^([a-z][a-z0-9+-]+)://(?:(?:([^/:@]+)(?::([^\\\\/]+))?@)?((?:[^\\\\/:]+)|(?:\\[[0-9a-f:]+\\]))(?::(\\d+))?((?:/~(?:[^\\\\/]+))?[\\\\/]))?(.+)?$', 'git://example.com/~some/p ath')","[179332, 179378]"
"('URIish.java', 'org.eclipse.jgit.transport.URIish', '<init>', '^([a-z][a-z0-9+-]+)://(?:(?:([^/:@]+)(?::([^\\\\/]+))?@)?((?:[^\\\\/:]+)|(?:\\[[0-9a-f:]+\\]))(?::(\\d+))?((?:/~(?:[^\\\\/]+))?[\\\\/]))?(.+)?$', 'https://lusr\\example@example.com:80//')",[147385]
"('Description.java', 'org.junit.runner.Description', 'methodAndClassNamePatternGroupOrDefault', '([\\s\\S]*)\\((.*)\\)', 'testConflictAtStart(org.eclipse.jgit.merge.MergeAlgorithmTest)')","[10074, 68786]"
"('Description.java', 'org.junit.runner.Description', 'methodAndClassNamePatternGroupOrDefault', '([\\s\\S]*)\\((.*)\\)', 'commandWithEmptyPath(org.eclipse.jgit.submodule.SubmoduleAddTest)')","[20019, 78488]"
"('Description.java', 'org.junit.runner.Description', 'methodAndClassNamePatternGroupOrDefault', '([\\s\\S]*)\\((.*)\\)', 'testParse_implicit_UTF8_encoded(org.eclipse.jgit.revwalk.RevTagParseTest)')","[7019, 65904]"
"('Description.java', 'org.junit.runner.Description', 'methodAndClassNamePatternGroupOrDefault', '([\\s\\S]*)\\((.*)\\)', 'testReadFlatTwoNotes(org.eclipse.jgit.notes.NoteMapTest)')","[40629, 98288]"
"('Description.java', 'org.junit.runner.Description', 'methodAndClassNamePatternGroupOrDefault', '([\\s\\S]*)\\((.*)\\)', 'testOnlyOption_f1_1_b(org.eclipse.jgit.api.CommitOnlyTest)')","[48465, 105900]"
"('Description.java', 'org.junit.runner.Description', 'methodAndClassNamePatternGroupOrDefault', '([\\s\\S]*)\\((.*)\\)', 'test9_FromString(org.eclipse.jgit.lib.AbbreviatedObjectIdTest)')","[22727, 81106]"
"('URIish.java', 'org.eclipse.jgit.transport.URIish', '<init>', '^([a-z][a-z0-9+-]+)://(?:(?:([^/:@]+)(?::([^\\\\/]+))?@)?((?:[^\\\\/:]+)|(?:\\[[0-9a-f:]+\\]))(?::(\\d+))?((?:/~(?:[^\\\\/]+))?[\\\\/]))?(.+)?$', 'user@example.com:egit.git')",[118635]
"('Description.java', 'org.junit.runner.Description', 'methodAndClassNamePatternGroupOrDefault', '([\\s\\S]*)\\((.*)\\)', 'testRebaseShouldStopForRewordInCaseOfConflict(org.eclipse.jgit.api.RebaseCommandTest)')","[45192, 102710]"
"('Description.java', 'org.junit.runner.Description', 'methodAndClassNamePatternGroupOrDefault', '([\\s\\S]*)\\((.*)\\)', 'test004_lookupDeltifiedObject(org.eclipse.jgit.internal.storage.file.T0004_PackReaderTest)')","[53221, 110564]"
"('URIish.java', 'org.eclipse.jgit.transport.URIish', '<init>', '^([a-z][a-z0-9+-]+)://(?:(?:([^/:@]+)(?::([^\\\\/]+))?@)?((?:[^\\\\/:]+)|(?:\\[[0-9a-f:]+\\]))(?::(\\d+))?((?:/~(?:[^\\\\/]+))?[\\\\/]))?(.+)?$', 'http://lusr\\example@1.2.3.4/D:/x')","[157597, 157781]"
"('URIish.java', 'org.eclipse.jgit.transport.URIish', '<init>', '^([a-z][a-z0-9+-]+)://(?:(?:([^/:@]+)(?::([^\\\\/]+))?@)?((?:[^\\\\/:]+)|(?:\\[[0-9a-f:]+\\]))(?::(\\d+))?((?:/~(?:[^\\\\/]+))?[\\\\/]))?(.+)?$', 'https://l usr\\example.com@[::1]:80//abc')",[147063]
"('Description.java', 'org.junit.runner.Description', 'methodAndClassNamePatternGroupOrDefault', '([\\s\\S]*)\\((.*)\\)', 'resolveDate(org.eclipse.jgit.lib.ReflogResolveTest)')","[27634, 85968]"
"('Description.java', 'org.junit.runner.Description', 'methodAndClassNamePatternGroupOrDefault', '([\\s\\S]*)\\((.*)\\)', 'multiplePushInsteadOf(org.eclipse.jgit.transport.RemoteConfigTest)')","[532, 59546]"
"('URIish.java', 'org.eclipse.jgit.transport.URIish', '<init>', '^([a-z][a-z0-9+-]+)://(?:(?:([^/:@]+)(?::([^\\\\/]+))?@)?((?:[^\\\\/:]+)|(?:\\[[0-9a-f:]+\\]))(?::(\\d+))?((?:/~(?:[^\\\\/]+))?[\\\\/]))?(.+)?$', 'http://me@example.com//')","[154929, 155113]"
"('Description.java', 'org.junit.runner.Description', 'methodAndClassNamePatternGroupOrDefault', '([\\s\\S]*)\\((.*)\\)', 'testRemoveRejectsBadIndexes(org.eclipse.jgit.util.BlockListTest)')","[35433, 93382]"
"('URIish.java', 'org.eclipse.jgit.transport.URIish', '<init>', '^(file):([\\\\/](?![\\\\/])((?:[A-Za-z]:)?[\\\\/]?(?:(?:[^\\\\/]+[\\\\/]+)*[^\\\\/]+[\\\\/]*)))$', 'https://me@1.2.3.4/D:\\x')","[158724, 158908]"
"('URIish.java', 'org.eclipse.jgit.transport.URIish', '<init>', '^([a-z][a-z0-9+-]+)://(?:(?:([^/:@]+)(?::([^\\\\/]+))?@)?((?:[^\\\\/:]+)|(?:\\[[0-9a-f:]+\\]))(?::(\\d+))?((?:/~(?:[^\\\\/]+))?[\\\\/]))?(.+)?$', 'file:///tmp/jgit_test_7050186990821048098_tmp/tmp_86111976323420650/.git/')",[201813]
"('URIish.java', 'org.eclipse.jgit.transport.URIish', '<init>', '^(file):([\\\\/](?![\\\\/])((?:[A-Za-z]:)?[\\\\/]?(?:(?:[^\\\\/]+[\\\\/]+)*[^\\\\/]+[\\\\/]*)))$', 'ssh+git://lusr\\example@[::1]:1234//')",[141290]
"('URIish.java', 'org.eclipse.jgit.transport.URIish', '<init>', '^([a-z][a-z0-9+-]+)://(?:(?:([^/:@]+)(?::([^\\\\/]+))?@)?((?:[^\\\\/:]+)|(?:\\[[0-9a-f:]+\\]))(?::(\\d+))?((?:/~(?:[^\\\\/]+))?[\\\\/]))?(.+)?$', 'ssh://me:wtf@[::1]:80/D:/x')",[122821]
"('URIish.java', 'org.eclipse.jgit.transport.URIish', '<init>', '^([a-z][a-z0-9+-]+)://(?:(?:([^/:@]+)(?::([^\\\\/]+))?@)?((?:[^\\\\/:]+)|(?:\\[[0-9a-f:]+\\]))(?::(\\d+))?((?:/~(?:[^\\\\/]+))?[\\\\/]))?(.+)?$', 'ssh://me@[::1]//abc')","[149087, 149271]"
"('URIish.java', 'org.eclipse.jgit.transport.URIish', '<init>', '^([a-z][a-z0-9+-]+)://(?:(?:([^/:@]+)(?::([^\\\\/]+))?@)?((?:[^\\\\/:]+)|(?:\\[[0-9a-f:]+\\]))(?::(\\d+))?((?:/~(?:[^\\\\/]+))?[\\\\/]))?(.+)?$', 'https://me@example.com:80//abc')",[145223]
"('URIish.java', 'org.eclipse.jgit.transport.URIish', '<init>', '^(file):([\\\\/](?![\\\\/])((?:[A-Za-z]:)?[\\\\/]?(?:(?:[^\\\\/]+[\\\\/]+)*[^\\\\/]+[\\\\/]*)))$', '/tmp/jgit_test_7232275650859170598_tmp/tmp_5735535626593387142/.git')","[206717, 206851]"
"('Description.java', 'org.junit.runner.Description', 'methodAndClassNamePatternGroupOrDefault', '([\\s\\S]*)\\((.*)\\)', 'testError_CcTruncatedOld(org.eclipse.jgit.patch.PatchCcErrorTest)')","[39196, 96946]"
"('Description.java', 'org.junit.runner.Description', 'methodAndClassNamePatternGroupOrDefault', '([\\s\\S]*)\\((.*)\\)', 'testQuote_NamedEscapes(org.eclipse.jgit.util.QuotedStringBourneUserPathStyleTest)')","[38765, 96594]"
"('URIish.java', 'org.eclipse.jgit.transport.URIish', '<init>', '^(file):([\\\\/](?![\\\\/])((?:[A-Za-z]:)?[\\\\/]?(?:(?:[^\\\\/]+[\\\\/]+)*[^\\\\/]+[\\\\/]*)))$', 'ssh://lusr\\example:wtf@1.2.3.4:1234//')",[124362]
"('Description.java', 'org.junit.runner.Description', 'methodAndClassNamePatternGroupOrDefault', '([\\s\\S]*)\\((.*)\\)', 'testParse_OnlyLFMessage(org.eclipse.jgit.revwalk.RevTagParseTest)')","[6998, 65882]"
"('URIish.java', 'org.eclipse.jgit.transport.URIish', '<init>', '^([a-z][a-z0-9+-]+)://(?:(?:([^/:@]+)(?::([^\\\\/]+))?@)?((?:[^\\\\/:]+)|(?:\\[[0-9a-f:]+\\]))(?::(\\d+))?((?:/~(?:[^\\\\/]+))?[\\\\/]))?(.+)?$', 'ssh+git://l usr\\example.com:wtf@1.2.3.4:1234//')",[126593]
"('URIish.java', 'org.eclipse.jgit.transport.URIish', '<init>', '^([a-z][a-z0-9+-]+)://(?:(?:([^/:@]+)(?::([^\\\\/]+))?@)?((?:[^\\\\/:]+)|(?:\\[[0-9a-f:]+\\]))(?::(\\d+))?((?:/~(?:[^\\\\/]+))?[\\\\/]))?(.+)?$', 'ssh://lusr\\example:wtf@1.2.3.4:1234//')",[124385]
"('Description.java', 'org.junit.runner.Description', 'methodAndClassNamePatternGroupOrDefault', '([\\s\\S]*)\\((.*)\\)', 'testWritePack1(org.eclipse.jgit.internal.storage.file.PackWriterTest)')","[54984, 112192]"
"('Description.java', 'org.junit.runner.Description', 'methodAndClassNamePatternGroupOrDefault', '([\\s\\S]*)\\((.*)\\)', 'testNegativeContextFails(org.eclipse.jgit.diff.DiffFormatterReflowTest)')","[13211, 71734]"
"('Description.java', 'org.junit.runner.Description', 'methodAndClassNamePatternGroupOrDefault', '([\\s\\S]*)\\((.*)\\)', 'testParseFive(org.eclipse.jgit.notes.LeafBucketTest)')","[40276, 97958]"
"('Description.java', 'org.junit.runner.Description', 'methodAndClassNamePatternGroupOrDefault', '([\\s\\S]*)\\((.*)\\)', 'testMaliciousGitPath1(org.eclipse.jgit.lib.DirCacheCheckoutMaliciousPathTest)')","[21643, 80050]"
"('Description.java', 'org.junit.runner.Description', 'methodAndClassNamePatternGroupOrDefault', '([\\s\\S]*)\\((.*)\\)', 'stashedContentMerge(org.eclipse.jgit.api.StashApplyCommandTest)')","[51479, 108958]"
"('URIish.java', 'org.eclipse.jgit.transport.URIish', '<init>', '^([a-z][a-z0-9+-]+)://(?:(?:([^/:@]+)(?::([^\\\\/]+))?@)?((?:[^\\\\/:]+)|(?:\\[[0-9a-f:]+\\]))(?::(\\d+))?((?:/~(?:[^\\\\/]+))?[\\\\/]))?(.+)?$', 'http://me@[::1]:80//')",[142601]
"('URIish.java', 'org.eclipse.jgit.transport.URIish', '<init>', '^(file):([\\\\/](?![\\\\/])((?:[A-Za-z]:)?[\\\\/]?(?:(?:[^\\\\/]+[\\\\/]+)*[^\\\\/]+[\\\\/]*)))$', 'https://me@example.com:80/D:\\x')",[145292]
"('Description.java', 'org.junit.runner.Description', 'methodAndClassNamePatternGroupOrDefault', '([\\s\\S]*)\\((.*)\\)', 'testReadStringRaw4(org.eclipse.jgit.transport.PacketLineInTest)')","[3422, 62494]"
"('Description.java', 'org.junit.runner.Description', 'methodAndClassNamePatternGroupOrDefault', '([\\s\\S]*)\\((.*)\\)', 'testRenameBranchHasPreviousLog(org.eclipse.jgit.internal.storage.file.RefUpdateTest)')","[55709, 112852]"
"('Description.java', 'org.junit.runner.Description', 'methodAndClassNamePatternGroupOrDefault', '([\\s\\S]*)\\((.*)\\)', 'testExceedsChainLength_DuringScanOfB(org.eclipse.jgit.diff.HistogramDiffTest)')","[15121, 73516]"
"('Description.java', 'org.junit.runner.Description', 'methodAndClassNamePatternGroupOrDefault', '([\\s\\S]*)\\((.*)\\)', 'shouldMarkEntriesWhenGivenMarkTreeFilter(org.eclipse.jgit.diff.DiffEntryTest)')","[13686, 72152]"
"('Description.java', 'org.junit.runner.Description', 'methodAndClassNamePatternGroupOrDefault', '([\\s\\S]*)\\((.*)\\)', 'testExact(org.eclipse.jgit.treewalk.filter.PathFilterGroupTest)')","[31256, 89444]"
"('Description.java', 'org.junit.runner.Description', 'methodAndClassNamePatternGroupOrDefault', '([\\s\\S]*)\\((.*)\\)', 'testRemoveMissingNote(org.eclipse.jgit.notes.LeafBucketTest)')","[40402, 98090]"
"('Description.java', 'org.junit.runner.Description', 'methodAndClassNamePatternGroupOrDefault', '([\\s\\S]*)\\((.*)\\)', 'testSplitLastColon(org.eclipse.jgit.transport.RefSpecTest)')","[3298, 62384]"
"('URIish.java', 'org.eclipse.jgit.transport.URIish', '<init>', '^(file):([\\\\/](?![\\\\/])((?:[A-Za-z]:)?[\\\\/]?(?:(?:[^\\\\/]+[\\\\/]+)*[^\\\\/]+[\\\\/]*)))$', 'file:///tmp/jgit_test_6443982766099715589_tmp/tmp_4105089330516958600')","[197637, 197694]"
"('Description.java', 'org.junit.runner.Description', 'methodAndClassNamePatternGroupOrDefault', '([\\s\\S]*)\\((.*)\\)', 'testParse_implicit_mixed_encoded(org.eclipse.jgit.revwalk.RevTagParseTest)')","[6935, 65816]"
"('Description.java', 'org.junit.runner.Description', 'methodAndClassNamePatternGroupOrDefault', '([\\s\\S]*)\\((.*)\\)', 'testDequote_LoneBackslash(org.eclipse.jgit.util.QuotedStringBourneUserPathStyleTest)')","[38618, 96440]"
"('URIish.java', 'org.eclipse.jgit.transport.URIish', '<init>', '^([a-z][a-z0-9+-]+)://(?:(?:([^/:@]+)(?::([^\\\\/]+))?@)?((?:[^\\\\/:]+)|(?:\\[[0-9a-f:]+\\]))(?::(\\d+))?((?:/~(?:[^\\\\/]+))?[\\\\/]))?(.+)?$', 'http://lusr\\example@1.2.3.4/D:\\x')","[157643, 157827]"
"('URIish.java', 'org.eclipse.jgit.transport.URIish', '<init>', '^(file):([\\\\/](?![\\\\/])((?:[A-Za-z]:)?[\\\\/]?(?:(?:[^\\\\/]+[\\\\/]+)*[^\\\\/]+[\\\\/]*)))$', 'ssh://lusr\\example@example.com:80//abc')",[137472]
"('Description.java', 'org.junit.runner.Description', 'methodAndClassNamePatternGroupOrDefault', '([\\s\\S]*)\\((.*)\\)', 'testGetSlashValidSlashHumanishName(org.eclipse.jgit.transport.URIishTest)')","[2294, 61372]"
"('Description.java', 'org.junit.runner.Description', 'methodAndClassNamePatternGroupOrDefault', '([\\s\\S]*)\\((.*)\\)', 'testEscapedBracket4(org.eclipse.jgit.fnmatch.FileNameMatcherTest)')","[19294, 77828]"
"('URIish.java', 'org.eclipse.jgit.transport.URIish', '<init>', '^(file):([\\\\/](?![\\\\/])((?:[A-Za-z]:)?[\\\\/]?(?:(?:[^\\\\/]+[\\\\/]+)*[^\\\\/]+[\\\\/]*)))$', 'ssh+git://lusr\\example@example.com:1234//')",[140554]
"('Description.java', 'org.junit.runner.Description', 'methodAndClassNamePatternGroupOrDefault', '([\\s\\S]*)\\((.*)\\)', 'testEmpty(org.eclipse.jgit.revwalk.AlwaysEmptyRevQueueTest)')","[8057, 66872]"
"('URIish.java', 'org.eclipse.jgit.transport.URIish', '<init>', '^(file):([\\\\/](?![\\\\/])((?:[A-Za-z]:)?[\\\\/]?(?:(?:[^\\\\/]+[\\\\/]+)*[^\\\\/]+[\\\\/]*)))$', 'http://l usr\\example.com@1.2.3.4:1234//')",[143130]
"('Description.java', 'org.junit.runner.Description', 'methodAndClassNamePatternGroupOrDefault', '([\\s\\S]*)\\((.*)\\)', 'testEmptyString(org.eclipse.jgit.lib.ConfigTest)')","[28197, 86518]"
"('URIish.java', 'org.eclipse.jgit.transport.URIish', '<init>', '^(file):([\\\\/](?![\\\\/])((?:[A-Za-z]:)?[\\\\/]?(?:(?:[^\\\\/]+[\\\\/]+)*[^\\\\/]+[\\\\/]*)))$', 'http://lusr\\example:wtf@[::1]:80/D:/x')",[131630]
"('Description.java', 'org.junit.runner.Description', 'methodAndClassNamePatternGroupOrDefault', '([\\s\\S]*)\\((.*)\\)', 'testExecutableRetention(org.eclipse.jgit.api.AddCommandTest)')","[50605, 108122]"
"('Description.java', 'org.junit.runner.Description', 'methodAndClassNamePatternGroupOrDefault', '([\\s\\S]*)\\((.*)\\)', 'testInvalidTreeModeNotSupportedMode1(org.eclipse.jgit.lib.ObjectCheckerTest)')","[25475, 83746]"
"('Description.java', 'org.junit.runner.Description', 'methodAndClassNamePatternGroupOrDefault', '([\\s\\S]*)\\((.*)\\)', 'testDirectoryFileConflicts_1(org.eclipse.jgit.lib.DirCacheCheckoutTest)')","[23332, 81700]"
"('URIish.java', 'org.eclipse.jgit.transport.URIish', '<init>', '^(file):([\\\\/](?![\\\\/])((?:[A-Za-z]:)?[\\\\/]?(?:(?:[^\\\\/]+[\\\\/]+)*[^\\\\/]+[\\\\/]*)))$', 'ssh+git://me:wtf@example.com:80//abc')",[125328]
"('URIish.java', 'org.eclipse.jgit.transport.URIish', '<init>', '^([a-z][a-z0-9+-]+)://(?:(?:([^/:@]+)(?::([^\\\\/]+))?@)?((?:[^\\\\/:]+)|(?:\\[[0-9a-f:]+\\]))(?::(\\d+))?((?:/~(?:[^\\\\/]+))?[\\\\/]))?(.+)?$', 'https://example.com/D:/x')","[171581, 171765, 172685, 172869, 173789, 173973]"
"('Description.java', 'org.junit.runner.Description', 'methodAndClassNamePatternGroupOrDefault', '([\\s\\S]*)\\((.*)\\)', 'invalidSetDestination(org.eclipse.jgit.transport.RefSpecTest)')","[3319, 62406]"
"('Description.java', 'org.junit.runner.Description', 'methodAndClassNamePatternGroupOrDefault', '([\\s\\S]*)\\((.*)\\)', 'org.eclipse.jgit.revwalk.SkipRevFilterTest')","[7767, 181514]"
"('Description.java', 'org.junit.runner.Description', 'methodAndClassNamePatternGroupOrDefault', '([\\s\\S]*)\\((.*)\\)', 'testDirectoryFileConflicts_8(org.eclipse.jgit.lib.DirCacheCheckoutTest)')","[23479, 81854]"
"('Description.java', 'org.junit.runner.Description', 'methodAndClassNamePatternGroupOrDefault', '([\\s\\S]*)\\((.*)\\)', 'testDirectoryFileConflicts_4(org.eclipse.jgit.lib.DirCacheCheckoutTest)')","[23395, 81766]"
"('Description.java', 'org.junit.runner.Description', 'methodAndClassNamePatternGroupOrDefault', '([\\s\\S]*)\\((.*)\\)', 'testVerySimpleGroupCase1(org.eclipse.jgit.fnmatch.FileNameMatcherTest)')","[19189, 77718]"
"('Description.java', 'org.junit.runner.Description', 'methodAndClassNamePatternGroupOrDefault', '([\\s\\S]*)\\((.*)\\)', 'org.eclipse.jgit.api.PullCommandTest')","[46427, 205770]"
"('URIish.java', 'org.eclipse.jgit.transport.URIish', '<init>', '^([a-z][a-z0-9+-]+)://(?:(?:([^/:@]+)(?::([^\\\\/]+))?@)?((?:[^\\\\/:]+)|(?:\\[[0-9a-f:]+\\]))(?::(\\d+))?((?:/~(?:[^\\\\/]+))?[\\\\/]))?(.+)?$', 'http://example.com/D:/x')","[168269, 168453, 169373, 169557, 170477, 170661]"
"('Description.java', 'org.junit.runner.Description', 'methodAndClassNamePatternGroupOrDefault', '([\\s\\S]*)\\((.*)\\)', 'testRemoveCollision2(org.eclipse.jgit.transport.LongMapTest)')","[5296, 64298]"
"('Description.java', 'org.junit.runner.Description', 'methodAndClassNamePatternGroupOrDefault', '([\\s\\S]*)\\((.*)\\)', 'testForceRemotesOrigin(org.eclipse.jgit.transport.RefSpecTest)')","[3235, 62318]"
"('Description.java', 'org.junit.runner.Description', 'methodAndClassNamePatternGroupOrDefault', '([\\s\\S]*)\\((.*)\\)', 'testRemove(org.eclipse.jgit.diff.EditListTest)')","[13524, 72042]"
"('URIish.java', 'org.eclipse.jgit.transport.URIish', '<init>', '^(?:([^/:@]+)(?::([^\\\\/]+))?@)?((?:[^\\\\/:]+)|(?:\\[[0-9a-f:]+\\])):((?:(?:/~(?:[^\\\\/]+))[\\\\/])?(?:(?:[^\\\\/]+[\\\\/]+)*[^\\\\/]+[\\\\/]*))$', '//.git')",[179125]
"('URIish.java', 'org.eclipse.jgit.transport.URIish', '<init>', '^([a-z][a-z0-9+-]+)://(?:(?:([^/:@]+)(?::([^\\\\/]+))?@)?((?:[^\\\\/:]+)|(?:\\[[0-9a-f:]+\\]))(?::(\\d+))?((?:/~(?:[^\\\\/]+))?[\\\\/]))?(.+)?$', 'http://l usr\\example.com:wtf@example.com:1234//abc')",[129583]
"('URIish.java', 'org.eclipse.jgit.transport.URIish', '<init>', '^([a-z][a-z0-9+-]+)://(?:(?:([^/:@]+)(?::([^\\\\/]+))?@)?((?:[^\\\\/:]+)|(?:\\[[0-9a-f:]+\\]))(?::(\\d+))?((?:/~(?:[^\\\\/]+))?[\\\\/]))?(.+)?$', 'https://lusr\\example@1.2.3.4:1234/D:/x')",[147661]
"('Description.java', 'org.junit.runner.Description', 'methodAndClassNamePatternGroupOrDefault', '([\\s\\S]*)\\((.*)\\)', 'testFileProtoUnix(org.eclipse.jgit.transport.URIishTest)')","[1664, 60712]"
"('URIish.java', 'org.eclipse.jgit.transport.URIish', '<init>', '^(file):([\\\\/](?![\\\\/])((?:[A-Za-z]:)?[\\\\/]?(?:(?:[^\\\\/]+[\\\\/]+)*[^\\\\/]+[\\\\/]*)))$', 'http://lusr\\example@[::1]/D:\\x')","[157988, 158172]"
"('Description.java', 'org.junit.runner.Description', 'methodAndClassNamePatternGroupOrDefault', '([\\s\\S]*)\\((.*)\\)', 'testDF_SkipsSeenSubtree(org.eclipse.jgit.treewalk.NameConflictTreeWalkTest)')","[29405, 87684]"
"('Description.java', 'org.junit.runner.Description', 'methodAndClassNamePatternGroupOrDefault', '([\\s\\S]*)\\((.*)\\)', 'testPrintGroupCase1(org.eclipse.jgit.fnmatch.FileNameMatcherTest)')","[18181, 76662]"
"('Description.java', 'org.junit.runner.Description', 'methodAndClassNamePatternGroupOrDefault', '([\\s\\S]*)\\((.*)\\)', 'testAmendReflog(org.eclipse.jgit.api.ReflogCommandTest)')","[50998, 108474]"
"('URIish.java', 'org.eclipse.jgit.transport.URIish', '<init>', '^(file):([\\\\/](?![\\\\/])((?:[A-Za-z]:)?[\\\\/]?(?:(?:[^\\\\/]+[\\\\/]+)*[^\\\\/]+[\\\\/]*)))$', 'http://example.com//')","[168154, 168338, 169258, 169442, 170362, 170546]"
"('Description.java', 'org.junit.runner.Description', 'methodAndClassNamePatternGroupOrDefault', '([\\s\\S]*)\\((.*)\\)', 'testPut_NoPrefix(org.eclipse.jgit.util.RefMapTest)')","[36887, 94746]"
"('URIish.java', 'org.eclipse.jgit.transport.URIish', '<init>', '^(file):([\\\\/](?![\\\\/])((?:[A-Za-z]:)?[\\\\/]?(?:(?:[^\\\\/]+[\\\\/]+)*[^\\\\/]+[\\\\/]*)))$', 'http://l usr\\example.com@[::1]//')","[156746, 156930]"
"('Description.java', 'org.junit.runner.Description', 'methodAndClassNamePatternGroupOrDefault', '([\\s\\S]*)\\((.*)\\)', 'testGitSshProto(org.eclipse.jgit.transport.URIishTest)')","[1916, 60976]"
"('Description.java', 'org.junit.runner.Description', 'methodAndClassNamePatternGroupOrDefault', '([\\s\\S]*)\\((.*)\\)', 'testGetSet(org.eclipse.jgit.transport.URIishTest)')","[2000, 61064]"
"('URIish.java', 'org.eclipse.jgit.transport.URIish', 'getHumanishName', '^([\\\\/]?((?:[A-Za-z]:)?[\\\\/]?(?:(?:[^\\\\/]+[\\\\/]+)*[^\\\\/]+[\\\\/]*)))$', '/.git')","[121234, 175008]"
"('Description.java', 'org.junit.runner.Description', 'methodAndClassNamePatternGroupOrDefault', '([\\s\\S]*)\\((.*)\\)', 'testVerySimplePatternCase3(org.eclipse.jgit.fnmatch.FileNameMatcherTest)')","[17110, 75540]"
"('Description.java', 'org.junit.runner.Description', 'methodAndClassNamePatternGroupOrDefault', '([\\s\\S]*)\\((.*)\\)', 'testTagBlob(org.eclipse.jgit.revwalk.RevTagParseTest)')","[6893, 65772]"
"('Description.java', 'org.junit.runner.Description', 'methodAndClassNamePatternGroupOrDefault', '([\\s\\S]*)\\((.*)\\)', 'testEmpty_EmptyTree(org.eclipse.jgit.revwalk.RevWalkPathFilter1Test)')","[5462, 64452]"
"('URIish.java', 'org.eclipse.jgit.transport.URIish', '<init>', '^([a-z][a-z0-9+-]+)://(?:(?:([^/:@]+)(?::([^\\\\/]+))?@)?((?:[^\\\\/:]+)|(?:\\[[0-9a-f:]+\\]))(?::(\\d+))?((?:/~(?:[^\\\\/]+))?[\\\\/]))?(.+)?$', 'http://l usr\\example.com@example.com/D:/x')","[156125, 156309]"
"('URIish.java', 'org.eclipse.jgit.transport.URIish', '<init>', '^(file):([\\\\/](?![\\\\/])((?:[A-Za-z]:)?[\\\\/]?(?:(?:[^\\\\/]+[\\\\/]+)*[^\\\\/]+[\\\\/]*)))$', 'http://me:wtf@[::1]:80/D:\\x')",[129468]
"('URIish.java', 'org.eclipse.jgit.transport.URIish', '<init>', '^(?:([^/:@]+)(?::([^\\\\/]+))?@)?([^\\\\/:]{2,}):([\\\\/](?:(?:[^\\\\/]+[\\\\/]+)*[^\\\\/]+[\\\\/]*))$', '/tmp/jgit_test_4323105091129792259_tmp/tmp_6865223474386595542')","[205424, 205564, 205713]"
"('Description.java', 'org.junit.runner.Description', 'methodAndClassNamePatternGroupOrDefault', '([\\s\\S]*)\\((.*)\\)', 'org.eclipse.jgit.transport.LongMapTest')","[5254, 181136]"
"('URIish.java', 'org.eclipse.jgit.transport.URIish', '<init>', '^(file):([\\\\/](?![\\\\/])((?:[A-Za-z]:)?[\\\\/]?(?:(?:[^\\\\/]+[\\\\/]+)*[^\\\\/]+[\\\\/]*)))$', '/tmp/jgit_test_936098334176453163_tmp/tmp_2532274317419163208/.git')","[205877, 206011]"
"('Description.java', 'org.junit.runner.Description', 'methodAndClassNamePatternGroupOrDefault', '([\\s\\S]*)\\((.*)\\)', 'testNoNewLine1(org.eclipse.jgit.diff.DiffFormatterReflowTest)')","[13379, 71910]"
"('URIish.java', 'org.eclipse.jgit.transport.URIish', '<init>', '^([a-z][a-z0-9+-]+)://(?:(?:([^/:@]+)(?::([^\\\\/]+))?@)?((?:[^\\\\/:]+)|(?:\\[[0-9a-f:]+\\]))(?::(\\d+))?((?:/~(?:[^\\\\/]+))?[\\\\/]))?(.+)?$', 'file:///tmp/jgit_test_6270179879516651477_tmp/tmp_8025166266149813746/.git/')",[196653]
"('URIish.java', 'org.eclipse.jgit.transport.URIish', '<init>', '^(file):([\\\\/](?![\\\\/])((?:[A-Za-z]:)?[\\\\/]?(?:(?:[^\\\\/]+[\\\\/]+)*[^\\\\/]+[\\\\/]*)))$', 'http://lusr\\example:wtf@1.2.3.4:80/D:\\x')",[131308]
"('Description.java', 'org.junit.runner.Description', 'methodAndClassNamePatternGroupOrDefault', '([\\s\\S]*)\\((.*)\\)', 'testEquals(org.eclipse.jgit.diff.RawTextTest)')","[14333, 72790]"
"('URIish.java', 'org.eclipse.jgit.transport.URIish', '<init>', '^(file):([\\\\/](?![\\\\/])((?:[A-Za-z]:)?[\\\\/]?(?:(?:[^\\\\/]+[\\\\/]+)*[^\\\\/]+[\\\\/]*)))$', 'http://me:wtf@example.com:80/D:\\x')",[128732]
"('URIish.java', 'org.eclipse.jgit.transport.URIish', '<init>', '^(file):([\\\\/](?![\\\\/])((?:[A-Za-z]:)?[\\\\/]?(?:(?:[^\\\\/]+[\\\\/]+)*[^\\\\/]+[\\\\/]*)))$', 'ssh+git://me:wtf@[::1]:1234/D:\\x')",[125972]
"('Description.java', 'org.junit.runner.Description', 'methodAndClassNamePatternGroupOrDefault', '([\\s\\S]*)\\((.*)\\)', 'testFindRemoteRefUpdatesTwoRefSpecs(org.eclipse.jgit.transport.TransportTest)')","[4004, 63044]"
"('Description.java', 'org.junit.runner.Description', 'methodAndClassNamePatternGroupOrDefault', '([\\s\\S]*)\\((.*)\\)', 'testMergeInItself(org.eclipse.jgit.api.MergeCommandTest)')","[44047, 101610]"
"('ChangeIdUtil.java', 'org.eclipse.jgit.util.ChangeIdUtil', 'indexOfChangeId', '(^Change-Id: *I[a-f0-9]{40}$)', '')","[187257, 187626, 187672, 187718, 187833, 187879, 188101, 188360, 188697, 188877, 189156, 189388, 189517, 189646, 189801, 189982, 190212, 190290, 190368, 190446, 190789, 190867, 191022, 191152, 191282, 191438, 191568, 191672, 191801, 192109]"
"('Description.java', 'org.junit.runner.Description', 'methodAndClassNamePatternGroupOrDefault', '([\\s\\S]*)\\((.*)\\)', 'testMerge_WithPrefix(org.eclipse.jgit.util.RefMapTest)')","[37181, 95054]"
"('Description.java', 'org.junit.runner.Description', 'methodAndClassNamePatternGroupOrDefault', '([\\s\\S]*)\\((.*)\\)', 'testIdenticalAdd(org.eclipse.jgit.notes.DefaultNoteMergerTest)')","[40547, 98222]"
"('Description.java', 'org.junit.runner.Description', 'methodAndClassNamePatternGroupOrDefault', '([\\s\\S]*)\\((.*)\\)', 'testGetRefs_DeeplyNestedBranch(org.eclipse.jgit.internal.storage.file.RefDirectoryTest)')","[58564, 115624]"
"('Description.java', 'org.junit.runner.Description', 'methodAndClassNamePatternGroupOrDefault', '([\\s\\S]*)\\((.*)\\)', 'testNoAgainstOneModification(org.eclipse.jgit.merge.MergeAlgorithmTest)')","[10284, 69006]"
"('Description.java', 'org.junit.runner.Description', 'methodAndClassNamePatternGroupOrDefault', '([\\s\\S]*)\\((.*)\\)', 'testIteratorReturnedValues2(org.eclipse.jgit.internal.storage.file.PackIndexV1Test)')","[54551, 111818]"
"('URIish.java', 'org.eclipse.jgit.transport.URIish', '<init>', '^(file):([\\\\/](?![\\\\/])((?:[A-Za-z]:)?[\\\\/]?(?:(?:[^\\\\/]+[\\\\/]+)*[^\\\\/]+[\\\\/]*)))$', 'https://l usr\\example.com@1.2.3.4:1234/D:/x')",[146534]
"('Description.java', 'org.junit.runner.Description', 'methodAndClassNamePatternGroupOrDefault', '([\\s\\S]*)\\((.*)\\)', 'testInvalidTagNoType3(org.eclipse.jgit.lib.ObjectCheckerTest)')","[26798, 85132]"
"('URIish.java', 'org.eclipse.jgit.transport.URIish', '<init>', '^(file):([\\\\/](?![\\\\/])((?:[A-Za-z]:)?[\\\\/]?(?:(?:[^\\\\/]+[\\\\/]+)*[^\\\\/]+[\\\\/]*)))$', 'ssh://me:wtf@[::1]:80/D:\\x')",[122844]
"('URIish.java', 'org.eclipse.jgit.transport.URIish', '<init>', '^(file):([\\\\/](?![\\\\/])((?:[A-Za-z]:)?[\\\\/]?(?:(?:[^\\\\/]+[\\\\/]+)*[^\\\\/]+[\\\\/]*)))$', 'ssh+git://l usr\\example.com@1.2.3.4:1234/D:/x')",[139910]
"('URIish.java', 'org.eclipse.jgit.transport.URIish', '<init>', '^([a-z][a-z0-9+-]+)://(?:(?:([^/:@]+)(?::([^\\\\/]+))?@)?((?:[^\\\\/:]+)|(?:\\[[0-9a-f:]+\\]))(?::(\\d+))?((?:/~(?:[^\\\\/]+))?[\\\\/]))?(.+)?$', 'https://lusr\\example@[::1]//abc')","[161231, 161415]"
"('Description.java', 'org.junit.runner.Description', 'methodAndClassNamePatternGroupOrDefault', '([\\s\\S]*)\\((.*)\\)', 'testDequote_SoleDq(org.eclipse.jgit.util.QuotedStringGitPathStyleTest)')","[34118, 92084]"
"('Description.java', 'org.junit.runner.Description', 'methodAndClassNamePatternGroupOrDefault', '([\\s\\S]*)\\((.*)\\)', 'testGetSlashesValidSlashHumanishName(org.eclipse.jgit.transport.URIishTest)')","[1622, 60668]"
"('Description.java', 'org.junit.runner.Description', 'methodAndClassNamePatternGroupOrDefault', '([\\s\\S]*)\\((.*)\\)', 'testNoFooters_OneLineBodyWithLF(org.eclipse.jgit.revwalk.FooterLineTest)')","[6441, 65398]"
"('URIish.java', 'org.eclipse.jgit.transport.URIish', '<init>', '^([a-z][a-z0-9+-]+)://(?:(?:([^/:@]+)(?::([^\\\\/]+))?@)?((?:[^\\\\/:]+)|(?:\\[[0-9a-f:]+\\]))(?::(\\d+))?((?:/~(?:[^\\\\/]+))?[\\\\/]))?(.+)?$', 'git://example.com:333/home/m y')","[176687, 176733]"
"('Description.java', 'org.junit.runner.Description', 'methodAndClassNamePatternGroupOrDefault', '([\\s\\S]*)\\((.*)\\)', 'testPullMergeProgrammaticConfigurationImpliedTargetBranch(org.eclipse.jgit.api.PullCommandTest)')","[46511, 104052]"
"('Description.java', 'org.junit.runner.Description', 'methodAndClassNamePatternGroupOrDefault', '([\\s\\S]*)\\((.*)\\)', 'getRemoteTrackingBranchShouldReturnNullWithoutMergeBranch(org.eclipse.jgit.lib.BranchConfigTest)')","[25099, 83372]"
"('Description.java', 'org.junit.runner.Description', 'methodAndClassNamePatternGroupOrDefault', '([\\s\\S]*)\\((.*)\\)', 'testCloneRepositoryWithBranchShortName(org.eclipse.jgit.api.CloneCommandTest)')","[42293, 99872]"
"('URIish.java', 'org.eclipse.jgit.transport.URIish', '<init>', '^([a-z][a-z0-9+-]+)://(?:(?:([^/:@]+)(?::([^\\\\/]+))?@)?((?:[^\\\\/:]+)|(?:\\[[0-9a-f:]+\\]))(?::(\\d+))?((?:/~(?:[^\\\\/]+))?[\\\\/]))?(.+)?$', 'ssh://example.com/D:\\x')","[161691, 161875, 162795, 162979, 163899, 164083]"
"('URIish.java', 'org.eclipse.jgit.transport.URIish', '<init>', '^([a-z][a-z0-9+-]+)://(?:(?:([^/:@]+)(?::([^\\\\/]+))?@)?((?:[^\\\\/:]+)|(?:\\[[0-9a-f:]+\\]))(?::(\\d+))?((?:/~(?:[^\\\\/]+))?[\\\\/]))?(.+)?$', '/tmp/jgit_test_1887039081032232823_tmp/tmp_6446132997626944273')","[202586, 202716, 202863, 203013, 203163]"
"('Description.java', 'org.junit.runner.Description', 'methodAndClassNamePatternGroupOrDefault', '([\\s\\S]*)\\((.*)\\)', 'testAdd_ReverseGitSortOrder(org.eclipse.jgit.dircache.DirCacheBuilderTest)')","[12087, 70656]"
"('Description.java', 'org.junit.runner.Description', 'methodAndClassNamePatternGroupOrDefault', '([\\s\\S]*)\\((.*)\\)', 'testDuplicateParents(org.eclipse.jgit.revplot.PlotCommitListTest)')","[40068, 97760]"
"('Description.java', 'org.junit.runner.Description', 'methodAndClassNamePatternGroupOrDefault', '([\\s\\S]*)\\((.*)\\)', 'test010_readNamesInSubSection(org.eclipse.jgit.lib.ConfigTest)')","[28239, 86562]"
"('Description.java', 'org.junit.runner.Description', 'methodAndClassNamePatternGroupOrDefault', '([\\s\\S]*)\\((.*)\\)', 'testDegenerate_InsertEnd(org.eclipse.jgit.diff.MyersDiffTest)')","[14436, 72878]"
"('Description.java', 'org.junit.runner.Description', 'methodAndClassNamePatternGroupOrDefault', '([\\s\\S]*)\\((.*)\\)', 'testUnsetBranchSection(org.eclipse.jgit.lib.ConfigTest)')","[28050, 86364]"
"('Description.java', 'org.junit.runner.Description', 'methodAndClassNamePatternGroupOrDefault', '([\\s\\S]*)\\((.*)\\)', 'testTwoEntries_BackwardsOneAtATime(org.eclipse.jgit.treewalk.CanonicalTreeParserTest)')","[29983, 88190]"
"('Description.java', 'org.junit.runner.Description', 'methodAndClassNamePatternGroupOrDefault', '([\\s\\S]*)\\((.*)\\)', 'shouldReturnNullWhenBranchDoesntExist(org.eclipse.jgit.lib.BranchTrackingStatusTest)')","[23960, 82338]"
"('Description.java', 'org.junit.runner.Description', 'methodAndClassNamePatternGroupOrDefault', '([\\s\\S]*)\\((.*)\\)', 'testOnlyOption_f1_7_f2_14_b(org.eclipse.jgit.api.CommitOnlyTest)')","[48360, 105790]"
"('Description.java', 'org.junit.runner.Description', 'methodAndClassNamePatternGroupOrDefault', '([\\s\\S]*)\\((.*)\\)', 'testTrivialTwoWay_ok(org.eclipse.jgit.merge.SimpleMergeTest)')","[9761, 68478]"
"('URIish.java', 'org.eclipse.jgit.transport.URIish', '<init>', '^(file):([\\\\/](?![\\\\/])((?:[A-Za-z]:)?[\\\\/]?(?:(?:[^\\\\/]+[\\\\/]+)*[^\\\\/]+[\\\\/]*)))$', 'https://lusr\\example@[::1]//')","[161162, 161346]"
"('Description.java', 'org.junit.runner.Description', 'methodAndClassNamePatternGroupOrDefault', '([\\s\\S]*)\\((.*)\\)', 'testFillToCommit(org.eclipse.jgit.revwalk.RevCommitListTest)')","[7603, 66476]"
"('Description.java', 'org.junit.runner.Description', 'methodAndClassNamePatternGroupOrDefault', '([\\s\\S]*)\\((.*)\\)', 'test000_openrepo_alternate_index_file_and_objdirs(org.eclipse.jgit.internal.storage.file.T0003_BasicTest)')","[54091, 111356]"
"('URIish.java', 'org.eclipse.jgit.transport.URIish', '<init>', '^([a-z][a-z0-9+-]+)://(?:(?:([^/:@]+)(?::([^\\\\/]+))?@)?((?:[^\\\\/:]+)|(?:\\[[0-9a-f:]+\\]))(?::(\\d+))?((?:/~(?:[^\\\\/]+))?[\\\\/]))?(.+)?$', 'http://me@[::1]//abc')","[155711, 155895]"
"('Description.java', 'org.junit.runner.Description', 'methodAndClassNamePatternGroupOrDefault', '([\\s\\S]*)\\((.*)\\)', 'testQuote_Empty(org.eclipse.jgit.util.QuotedStringBourneStyleTest)')","[36641, 94548]"
"('URIish.java', 'org.eclipse.jgit.transport.URIish', '<init>', '^(file):([\\\\/](?![\\\\/])((?:[A-Za-z]:)?[\\\\/]?(?:(?:[^\\\\/]+[\\\\/]+)*[^\\\\/]+[\\\\/]*)))$', 'http://l usr\\example.com@1.2.3.4:1234/D:/x')",[143222]
"('Description.java', 'org.junit.runner.Description', 'methodAndClassNamePatternGroupOrDefault', '([\\s\\S]*)\\((.*)\\)', 'testSystemEncoding(org.eclipse.jgit.storage.file.FileBasedConfigTest)')","[38929, 96726]"
"('Description.java', 'org.junit.runner.Description', 'methodAndClassNamePatternGroupOrDefault', '([\\s\\S]*)\\((.*)\\)', 'testEmptyFolderUntracked(org.eclipse.jgit.treewalk.filter.IndexDiffFilterTest)')","[30800, 89026]"
"('Description.java', 'org.junit.runner.Description', 'methodAndClassNamePatternGroupOrDefault', '([\\s\\S]*)\\((.*)\\)', 'testGetRefs_TagsOnly_AllPacked(org.eclipse.jgit.internal.storage.file.RefDirectoryTest)')","[57955, 114986]"
"('Description.java', 'org.junit.runner.Description', 'methodAndClassNamePatternGroupOrDefault', '([\\s\\S]*)\\((.*)\\)', 'crissCrossMerge_ThreeCommonPredecessors(org.eclipse.jgit.merge.RecursiveMergerTest)')","[10387, 69094]"
"('Description.java', 'org.junit.runner.Description', 'methodAndClassNamePatternGroupOrDefault', '([\\s\\S]*)\\((.*)\\)', 'testPullConfigRemoteBranch(org.eclipse.jgit.api.BranchCommandTest)')","[47343, 104844]"
"('Description.java', 'org.junit.runner.Description', 'methodAndClassNamePatternGroupOrDefault', '([\\s\\S]*)\\((.*)\\)', 'testReadMissing_RealIndex(org.eclipse.jgit.dircache.DirCacheBasicTest)')","[11385, 70040]"
"('Description.java', 'org.junit.runner.Description', 'methodAndClassNamePatternGroupOrDefault', '([\\s\\S]*)\\((.*)\\)', 'testOnlyOption_f1_2_f2_14_a(org.eclipse.jgit.api.CommitOnlyTest)')","[49389, 106868]"
"('Description.java', 'org.junit.runner.Description', 'methodAndClassNamePatternGroupOrDefault', '([\\s\\S]*)\\((.*)\\)', 'testNoFastForward(org.eclipse.jgit.api.MergeCommandTest)')","[44425, 102006]"
"('URIish.java', 'org.eclipse.jgit.transport.URIish', '<init>', '^(file):([\\\\/](?![\\\\/])((?:[A-Za-z]:)?[\\\\/]?(?:(?:[^\\\\/]+[\\\\/]+)*[^\\\\/]+[\\\\/]*)))$', 'http://me@1.2.3.4:80/D:/x')",[142302]
"('URIish.java', 'org.eclipse.jgit.transport.URIish', '<init>', '^([a-z][a-z0-9+-]+)://(?:(?:([^/:@]+)(?::([^\\\\/]+))?@)?((?:[^\\\\/:]+)|(?:\\[[0-9a-f:]+\\]))(?::(\\d+))?((?:/~(?:[^\\\\/]+))?[\\\\/]))?(.+)?$', '/tmp/jgit_test_4163267304466129697_tmp/tmp_7112159680923869662.git')","[117038, 117165]"
"('Description.java', 'org.junit.runner.Description', 'methodAndClassNamePatternGroupOrDefault', '([\\s\\S]*)\\((.*)\\)', 'repositoryWithNoHeadInSubmodule(org.eclipse.jgit.submodule.SubmoduleStatusTest)')","[20143, 78598]"
"('URIish.java', 'org.eclipse.jgit.transport.URIish', '<init>', '^(file):([\\\\/](?![\\\\/])((?:[A-Za-z]:)?[\\\\/]?(?:(?:[^\\\\/]+[\\\\/]+)*[^\\\\/]+[\\\\/]*)))$', 'https://me:wtf@1.2.3.4:1234//abc')",[132136]
"('Description.java', 'org.junit.runner.Description', 'methodAndClassNamePatternGroupOrDefault', '([\\s\\S]*)\\((.*)\\)', 'org.eclipse.jgit.transport.PacketLineOutTest')","[5067, 181109]"
"('Description.java', 'org.junit.runner.Description', 'methodAndClassNamePatternGroupOrDefault', '([\\s\\S]*)\\((.*)\\)', 'testSaveTimeout(org.eclipse.jgit.transport.RemoteConfigTest)')","[637, 59656]"
"('URIish.java', 'org.eclipse.jgit.transport.URIish', '<init>', '^([a-z][a-z0-9+-]+)://(?:(?:([^/:@]+)(?::([^\\\\/]+))?@)?((?:[^\\\\/:]+)|(?:\\[[0-9a-f:]+\\]))(?::(\\d+))?((?:/~(?:[^\\\\/]+))?[\\\\/]))?(.+)?$', 'ssh://lusr\\example@[::1]:80//abc')",[138231]
"('Description.java', 'org.junit.runner.Description', 'methodAndClassNamePatternGroupOrDefault', '([\\s\\S]*)\\((.*)\\)', 'repositoryWithRelativeUriSubmodule(org.eclipse.jgit.submodule.SubmoduleSyncTest)')","[19666, 78158]"
"('Description.java', 'org.junit.runner.Description', 'methodAndClassNamePatternGroupOrDefault', '([\\s\\S]*)\\((.*)\\)', 'testCleanDirsWithDryRun(org.eclipse.jgit.api.CleanCommandTest)')","[46366, 103920]"
"('Description.java', 'org.junit.runner.Description', 'methodAndClassNamePatternGroupOrDefault', '([\\s\\S]*)\\((.*)\\)', 'testWordroupCase4(org.eclipse.jgit.fnmatch.FileNameMatcherTest)')","[18937, 77454]"
"('Description.java', 'org.junit.runner.Description', 'methodAndClassNamePatternGroupOrDefault', '([\\s\\S]*)\\((.*)\\)', 'testFileRepository_ChangeEventsOnlyOnSave(org.eclipse.jgit.events.ConfigChangeEventTest)')","[38826, 96638]"
"('URIish.java', 'org.eclipse.jgit.transport.URIish', '<init>', '^(file):([\\\\/](?![\\\\/])((?:[A-Za-z]:)?[\\\\/]?(?:(?:[^\\\\/]+[\\\\/]+)*[^\\\\/]+[\\\\/]*)))$', 'https://l usr\\example.com:wtf@example.com:80/D:/x')",[133102]
"('Description.java', 'org.junit.runner.Description', 'methodAndClassNamePatternGroupOrDefault', '([\\s\\S]*)\\((.*)\\)', 'testConstructor_PeeledStatusNotKnown(org.eclipse.jgit.lib.ObjectIdRefTest)')","[20330, 78774]"
"('Description.java', 'org.junit.runner.Description', 'methodAndClassNamePatternGroupOrDefault', '([\\s\\S]*)\\((.*)\\)', 'testOnlyOption_f1_6_a(org.eclipse.jgit.api.CommitOnlyTest)')","[48969, 106428]"
"('Description.java', 'org.junit.runner.Description', 'methodAndClassNamePatternGroupOrDefault', '([\\s\\S]*)\\((.*)\\)', 'testUntrackedConflicts(org.eclipse.jgit.lib.DirCacheCheckoutTest)')","[23185, 81546]"
"('Description.java', 'org.junit.runner.Description', 'methodAndClassNamePatternGroupOrDefault', '([\\s\\S]*)\\((.*)\\)', 'testAddExistingSingleMediumSizeFileWithNewLine(org.eclipse.jgit.api.AddCommandTest)')","[50479, 107990]"
"('Description.java', 'org.junit.runner.Description', 'methodAndClassNamePatternGroupOrDefault', '([\\s\\S]*)\\((.*)\\)', 'testFastForwardNoCommit(org.eclipse.jgit.api.MergeCommandTest)')","[43984, 101544]"
"('Description.java', 'org.junit.runner.Description', 'methodAndClassNamePatternGroupOrDefault', '([\\s\\S]*)\\((.*)\\)', 'testOnlyOption_f1_8_b(org.eclipse.jgit.api.CommitOnlyTest)')","[49200, 106670]"
"('Description.java', 'org.junit.runner.Description', 'methodAndClassNamePatternGroupOrDefault', '([\\s\\S]*)\\((.*)\\)', 'testInvalidCommitInvalidTree4(org.eclipse.jgit.lib.ObjectCheckerTest)')","[25433, 83702]"
"('URIish.java', 'org.eclipse.jgit.transport.URIish', '<init>', '^(?:([^/:@]+)(?::([^\\\\/]+))?@)?((?:[^\\\\/:]+)|(?:\\[[0-9a-f:]+\\])):((?:(?:/~(?:[^\\\\/]+))[\\\\/])?(?:(?:[^\\\\/]+[\\\\/]+)*[^\\\\/]+[\\\\/]*))$', '/tmp/jgit_test_7464312454061528800_tmp/tmp_1728499304085067581/.git')","[183521, 183671]"
"('URIish.java', 'org.eclipse.jgit.transport.URIish', '<init>', '^([a-z][a-z0-9+-]+)://(?:(?:([^/:@]+)(?::([^\\\\/]+))?@)?((?:[^\\\\/:]+)|(?:\\[[0-9a-f:]+\\]))(?::(\\d+))?((?:/~(?:[^\\\\/]+))?[\\\\/]))?(.+)?$', 'ssh+git://me@1.2.3.4:80//')",[138921]
"('URIish.java', 'org.eclipse.jgit.transport.URIish', '<init>', '^([a-z][a-z0-9+-]+)://(?:(?:([^/:@]+)(?::([^\\\\/]+))?@)?((?:[^\\\\/:]+)|(?:\\[[0-9a-f:]+\\]))(?::(\\d+))?((?:/~(?:[^\\\\/]+))?[\\\\/]))?(.+)?$', 'https://l usr\\example.com@1.2.3.4:80//')",[146649]
"('URIish.java', 'org.eclipse.jgit.transport.URIish', '<init>', '^([a-z][a-z0-9+-]+)://(?:(?:([^/:@]+)(?::([^\\\\/]+))?@)?((?:[^\\\\/:]+)|(?:\\[[0-9a-f:]+\\]))(?::(\\d+))?((?:/~(?:[^\\\\/]+))?[\\\\/]))?(.+)?$', 'http://lusr\\example@example.com/D:\\x')","[157275, 157459]"
"('Description.java', 'org.junit.runner.Description', 'methodAndClassNamePatternGroupOrDefault', '([\\s\\S]*)\\((.*)\\)', 'testInvalidTagNoType1(org.eclipse.jgit.lib.ObjectCheckerTest)')","[26756, 85088]"
"('Description.java', 'org.junit.runner.Description', 'methodAndClassNamePatternGroupOrDefault', '([\\s\\S]*)\\((.*)\\)', 'testSimpleTimeout(org.eclipse.jgit.transport.RemoteConfigTest)')","[616, 59634]"
"('Description.java', 'org.junit.runner.Description', 'methodAndClassNamePatternGroupOrDefault', '([\\s\\S]*)\\((.*)\\)', 'testSingleSubtree_Recursive(org.eclipse.jgit.dircache.DirCacheIteratorTest)')","[12419, 70964]"
"('URIish.java', 'org.eclipse.jgit.transport.URIish', '<init>', '^([a-z][a-z0-9+-]+)://(?:(?:([^/:@]+)(?::([^\\\\/]+))?@)?((?:[^\\\\/:]+)|(?:\\[[0-9a-f:]+\\]))(?::(\\d+))?((?:/~(?:[^\\\\/]+))?[\\\\/]))?(.+)?$', 'ssh+git://l usr\\example.com@1.2.3.4:80/D:/x')",[140117]
"('Description.java', 'org.junit.runner.Description', 'methodAndClassNamePatternGroupOrDefault', '([\\s\\S]*)\\((.*)\\)', 'org.eclipse.jgit.lib.ConfigTest')","[27756, 185647]"
"('Description.java', 'org.junit.runner.Description', 'methodAndClassNamePatternGroupOrDefault', '([\\s\\S]*)\\((.*)\\)', 'testForbiddenNamesOnWindowsEgDotCon(org.eclipse.jgit.lib.DirCacheCheckoutMaliciousPathTest)')","[21055, 79434]"
"('URIish.java', 'org.eclipse.jgit.transport.URIish', '<init>', '^([a-z][a-z0-9+-]+)://(?:(?:([^/:@]+)(?::([^\\\\/]+))?@)?((?:[^\\\\/:]+)|(?:\\[[0-9a-f:]+\\]))(?::(\\d+))?((?:/~(?:[^\\\\/]+))?[\\\\/]))?(.+)?$', 'ssh://l usr\\example.com@example.com:1234/D:/x')",[136253]
"('Description.java', 'org.junit.runner.Description', 'methodAndClassNamePatternGroupOrDefault', '([\\s\\S]*)\\((.*)\\)', 'org.eclipse.jgit.revwalk.AlwaysEmptyRevQueueTest')","[8015, 181568]"
"('Description.java', 'org.junit.runner.Description', 'methodAndClassNamePatternGroupOrDefault', '([\\s\\S]*)\\((.*)\\)', 'repositoryWithRootLevelSubmoduleRelativeRef(org.eclipse.jgit.submodule.SubmoduleWalkTest)')","[19748, 78224]"
"('URIish.java', 'org.eclipse.jgit.transport.URIish', '<init>', '^(file):([\\\\/](?![\\\\/])((?:[A-Za-z]:)?[\\\\/]?(?:(?:[^\\\\/]+[\\\\/]+)*[^\\\\/]+[\\\\/]*)))$', 'ssh+git://l usr\\example.com:wtf@[::1]:80//')",[127122]
"('Description.java', 'org.junit.runner.Description', 'methodAndClassNamePatternGroupOrDefault', '([\\s\\S]*)\\((.*)\\)', 'testRebaseInteractiveEdit(org.eclipse.jgit.api.RebaseCommandTest)')","[45444, 102974]"
"('Description.java', 'org.junit.runner.Description', 'methodAndClassNamePatternGroupOrDefault', '([\\s\\S]*)\\((.*)\\)', 'testCreateSymlink(org.eclipse.jgit.util.FileUtilTest)')","[33637, 91600]"
"('URIish.java', 'org.eclipse.jgit.transport.URIish', '<init>', '^([a-z][a-z0-9+-]+)://(?:(?:([^/:@]+)(?::([^\\\\/]+))?@)?((?:[^\\\\/:]+)|(?:\\[[0-9a-f:]+\\]))(?::(\\d+))?((?:/~(?:[^\\\\/]+))?[\\\\/]))?(.+)?$', 'ssh://lusr\\example@example.com:80/D:\\x')",[137587]
"('Description.java', 'org.junit.runner.Description', 'methodAndClassNamePatternGroupOrDefault', '([\\s\\S]*)\\((.*)\\)', 'testStopOnConflictAndAbortWithDetachedHEAD(org.eclipse.jgit.api.RebaseCommandTest)')","[45948, 103502]"
"('Description.java', 'org.junit.runner.Description', 'methodAndClassNamePatternGroupOrDefault', '([\\s\\S]*)\\((.*)\\)', 'testPrintGroupCase3(org.eclipse.jgit.fnmatch.FileNameMatcherTest)')","[18223, 76706]"
"('Description.java', 'org.junit.runner.Description', 'methodAndClassNamePatternGroupOrDefault', '([\\s\\S]*)\\((.*)\\)', 'testWriteString2(org.eclipse.jgit.transport.PacketLineOutTest)')","[5214, 64232]"
"('URIish.java', 'org.eclipse.jgit.transport.URIish', '<init>', '^([a-z][a-z0-9+-]+)://(?:(?:([^/:@]+)(?::([^\\\\/]+))?@)?((?:[^\\\\/:]+)|(?:\\[[0-9a-f:]+\\]))(?::(\\d+))?((?:/~(?:[^\\\\/]+))?[\\\\/]))?(.+)?$', 'ssh+git://l usr\\example.com@[::1]:1234/D:/x')",[140301]
"('Description.java', 'org.junit.runner.Description', 'methodAndClassNamePatternGroupOrDefault', '([\\s\\S]*)\\((.*)\\)', 'testDeleteRecursiveEmptyNeedsToCheckFilesFirst(org.eclipse.jgit.util.FileUtilTest)')","[33931, 91908]"
"('URIish.java', 'org.eclipse.jgit.transport.URIish', '<init>', '^(file):([\\\\/](?![\\\\/])((?:[A-Za-z]:)?[\\\\/]?(?:(?:[^\\\\/]+[\\\\/]+)*[^\\\\/]+[\\\\/]*)))$', 'http://lusr\\example@1.2.3.4/D:\\x')","[157620, 157804]"
"('Description.java', 'org.junit.runner.Description', 'methodAndClassNamePatternGroupOrDefault', '([\\s\\S]*)\\((.*)\\)', 'testInvalidTreeNameContainsSlash(org.eclipse.jgit.lib.ObjectCheckerTest)')","[25307, 83570]"
"('URIish.java', 'org.eclipse.jgit.transport.URIish', '<init>', '^(file):([\\\\/](?![\\\\/])((?:[A-Za-z]:)?[\\\\/]?(?:(?:[^\\\\/]+[\\\\/]+)*[^\\\\/]+[\\\\/]*)))$', 'ssh+git://me@1.2.3.4/D:/x')","[152054, 152238]"
"('Description.java', 'org.junit.runner.Description', 'methodAndClassNamePatternGroupOrDefault', '([\\s\\S]*)\\((.*)\\)', 'test008_FailOnWrongVersion(org.eclipse.jgit.internal.storage.file.T0003_BasicTest)')","[54301, 111576]"
"('Description.java', 'org.junit.runner.Description', 'methodAndClassNamePatternGroupOrDefault', '([\\s\\S]*)\\((.*)\\)', 'testEgitHistory(org.eclipse.jgit.revplot.PlotCommitListTest)')","[40194, 97892]"
"('Description.java', 'org.junit.runner.Description', 'methodAndClassNamePatternGroupOrDefault', '([\\s\\S]*)\\((.*)\\)', 'testSimpleStarCase3(org.eclipse.jgit.fnmatch.FileNameMatcherTest)')","[17593, 76046]"
"('URIish.java', 'org.eclipse.jgit.transport.URIish', '<init>', '^([a-z][a-z0-9+-]+)://(?:(?:([^/:@]+)(?::([^\\\\/]+))?@)?((?:[^\\\\/:]+)|(?:\\[[0-9a-f:]+\\]))(?::(\\d+))?((?:/~(?:[^\\\\/]+))?[\\\\/]))?(.+)?$', 'ssh+git://lusr\\example@[::1]/D:/x')","[154653, 154837]"
"('URIish.java', 'org.eclipse.jgit.transport.URIish', '<init>', '^([a-z][a-z0-9+-]+)://(?:(?:([^/:@]+)(?::([^\\\\/]+))?@)?((?:[^\\\\/:]+)|(?:\\[[0-9a-f:]+\\]))(?::(\\d+))?((?:/~(?:[^\\\\/]+))?[\\\\/]))?(.+)?$', 'https://lusr\\example@example.com:80//abc')",[147431]
"('Description.java', 'org.junit.runner.Description', 'methodAndClassNamePatternGroupOrDefault', '([\\s\\S]*)\\((.*)\\)', 'testReadStringRaw3(org.eclipse.jgit.transport.PacketLineInTest)')","[3401, 62472]"
"('Description.java', 'org.junit.runner.Description', 'methodAndClassNamePatternGroupOrDefault', '([\\s\\S]*)\\((.*)\\)', 'testSingleRename(org.eclipse.jgit.revwalk.RevWalkFollowFilterTest)')","[6750, 65662]"
"('Description.java', 'org.junit.runner.Description', 'methodAndClassNamePatternGroupOrDefault', '([\\s\\S]*)\\((.*)\\)', 'submoduleWithNoHead(org.eclipse.jgit.treewalk.FileTreeIteratorTest)')","[29052, 87354]"
"('Description.java', 'org.junit.runner.Description', 'methodAndClassNamePatternGroupOrDefault', '([\\s\\S]*)\\((.*)\\)', 'testAssumeUnchanged(org.eclipse.jgit.lib.IndexDiffTest)')","[20660, 79060]"
"('Description.java', 'org.junit.runner.Description', 'methodAndClassNamePatternGroupOrDefault', '([\\s\\S]*)\\((.*)\\)', 'testWildcardMirror(org.eclipse.jgit.transport.RefSpecTest)')","[2962, 62032]"
"('Description.java', 'org.junit.runner.Description', 'methodAndClassNamePatternGroupOrDefault', '([\\s\\S]*)\\((.*)\\)', 'testGetBitmapWithOneXor(org.eclipse.jgit.internal.storage.file.StoredBitmapTest)')","[53469, 110784]"
"('Description.java', 'org.junit.runner.Description', 'methodAndClassNamePatternGroupOrDefault', '([\\s\\S]*)\\((.*)\\)', 'testEmptyTreeCorruption(org.eclipse.jgit.revwalk.ObjectWalkTest)')","[5796, 64782]"
"('Description.java', 'org.junit.runner.Description', 'methodAndClassNamePatternGroupOrDefault', '([\\s\\S]*)\\((.*)\\)', 'testEdit_NoUniqueMiddleSide_Insert2(org.eclipse.jgit.diff.HistogramDiffTest)')","[15205, 73604]"
"('Description.java', 'org.junit.runner.Description', 'methodAndClassNamePatternGroupOrDefault', '([\\s\\S]*)\\((.*)\\)', 'badlyFormattedWithExplicitRef(org.eclipse.jgit.util.GitDateParserBadlyFormattedTest)')","[37555, 95406]"
"('URIish.java', 'org.eclipse.jgit.transport.URIish', '<init>', '^(file):([\\\\/](?![\\\\/])((?:[A-Za-z]:)?[\\\\/]?(?:(?:[^\\\\/]+[\\\\/]+)*[^\\\\/]+[\\\\/]*)))$', 'https://lusr\\example:wtf@1.2.3.4:80/D:/x')",[134574]
"('Description.java', 'org.junit.runner.Description', 'methodAndClassNamePatternGroupOrDefault', '([\\s\\S]*)\\((.*)\\)', 'testEquals1(org.eclipse.jgit.diff.EditTest)')","[15747, 74132]"
"('Description.java', 'org.junit.runner.Description', 'methodAndClassNamePatternGroupOrDefault', '([\\s\\S]*)\\((.*)\\)', 'testPut_CollapseResolved(org.eclipse.jgit.util.RefMapTest)')","[37244, 95120]"
"('Description.java', 'org.junit.runner.Description', 'methodAndClassNamePatternGroupOrDefault', '([\\s\\S]*)\\((.*)\\)', 'testIterator_MissingUnresolvedSymbolicRefIsBug(org.eclipse.jgit.util.RefMapTest)')","[37013, 94878]"
"('URIish.java', 'org.eclipse.jgit.transport.URIish', '<init>', '^([a-z][a-z0-9+-]+)://(?:(?:([^/:@]+)(?::([^\\\\/]+))?@)?((?:[^\\\\/:]+)|(?:\\[[0-9a-f:]+\\]))(?::(\\d+))?((?:/~(?:[^\\\\/]+))?[\\\\/]))?(.+)?$', 'user@repo.or.cz:/srv/git/egit.git')",[120563]
"('Description.java', 'org.junit.runner.Description', 'methodAndClassNamePatternGroupOrDefault', '([\\s\\S]*)\\((.*)\\)', 'testReadLines_singleLine(org.eclipse.jgit.util.ReadLinesTest)')","[32084, 90192]"
"('Description.java', 'org.junit.runner.Description', 'methodAndClassNamePatternGroupOrDefault', '([\\s\\S]*)\\((.*)\\)', 'testOnlyOption_f1_12_f2_14_a(org.eclipse.jgit.api.CommitOnlyTest)')","[49494, 106978]"
"('URIish.java', 'org.eclipse.jgit.transport.URIish', '<init>', '^(file):([\\\\/](?![\\\\/])((?:[A-Za-z]:)?[\\\\/]?(?:(?:[^\\\\/]+[\\\\/]+)*[^\\\\/]+[\\\\/]*)))$', 'ssh://l usr\\example.com:wtf@[::1]:1234//abc')",[123672]
"('URIish.java', 'org.eclipse.jgit.transport.URIish', '<init>', '^([a-z][a-z0-9+-]+)://(?:(?:([^/:@]+)(?::([^\\\\/]+))?@)?((?:[^\\\\/:]+)|(?:\\[[0-9a-f:]+\\]))(?::(\\d+))?((?:/~(?:[^\\\\/]+))?[\\\\/]))?(.+)?$', '/a/b/c/')",[176319]
"('URIish.java', 'org.eclipse.jgit.transport.URIish', '<init>', '^(file):([\\\\/](?![\\\\/])((?:[A-Za-z]:)?[\\\\/]?(?:(?:[^\\\\/]+[\\\\/]+)*[^\\\\/]+[\\\\/]*)))$', 'ssh+git://lusr\\example@example.com:80/D:/x')",[140830]
"('Description.java', 'org.junit.runner.Description', 'methodAndClassNamePatternGroupOrDefault', '([\\s\\S]*)\\((.*)\\)', 'testNoPatterns(org.eclipse.jgit.ignore.IgnoreNodeTest)')","[31712, 89862]"
"('Description.java', 'org.junit.runner.Description', 'methodAndClassNamePatternGroupOrDefault', '([\\s\\S]*)\\((.*)\\)', 'testDigitGroupCase1(org.eclipse.jgit.fnmatch.FileNameMatcherTest)')","[17635, 76090]"
"('URIish.java', 'org.eclipse.jgit.transport.URIish', '<init>', '^([a-z][a-z0-9+-]+)://(?:(?:([^/:@]+)(?::([^\\\\/]+))?@)?((?:[^\\\\/:]+)|(?:\\[[0-9a-f:]+\\]))(?::(\\d+))?((?:/~(?:[^\\\\/]+))?[\\\\/]))?(.+)?$', 'ssh+git://me:wtf@1.2.3.4:80/D:\\x')",[125811]
"('Description.java', 'org.junit.runner.Description', 'methodAndClassNamePatternGroupOrDefault', '([\\s\\S]*)\\((.*)\\)', 'testFailureF1(org.eclipse.jgit.api.ApplyCommandTest)')","[46698, 104228]"
"('URIish.java', 'org.eclipse.jgit.transport.URIish', '<init>', '^([a-z][a-z0-9+-]+)://(?:(?:([^/:@]+)(?::([^\\\\/]+))?@)?((?:[^\\\\/:]+)|(?:\\[[0-9a-f:]+\\]))(?::(\\d+))?((?:/~(?:[^\\\\/]+))?[\\\\/]))?(.+)?$', 'ssh+git://me@1.2.3.4:1234//')",[138737]
"('URIish.java', 'org.eclipse.jgit.transport.URIish', '<init>', '^(file):([\\\\/](?![\\\\/])((?:[A-Za-z]:)?[\\\\/]?(?:(?:[^\\\\/]+[\\\\/]+)*[^\\\\/]+[\\\\/]*)))$', 'ssh://lusr\\example:wtf@[::1]:80/D:/x')",[125006]
"('Description.java', 'org.junit.runner.Description', 'methodAndClassNamePatternGroupOrDefault', '([\\s\\S]*)\\((.*)\\)', 'checkMergeConflictingTreesWithoutIndex(org.eclipse.jgit.merge.ResolveMergerTest)')","[10511, 69204]"
"('Description.java', 'org.junit.runner.Description', 'methodAndClassNamePatternGroupOrDefault', '([\\s\\S]*)\\((.*)\\)', 'testRenameInSubDir(org.eclipse.jgit.api.BlameCommandTest)')","[52183, 109596]"
"('Description.java', 'org.junit.runner.Description', 'methodAndClassNamePatternGroupOrDefault', '([\\s\\S]*)\\((.*)\\)', 'testMaliciousGitPathEndDotUnixOk(org.eclipse.jgit.lib.DirCacheCheckoutMaliciousPathTest)')","[21139, 79522]"
"('Description.java', 'org.junit.runner.Description', 'methodAndClassNamePatternGroupOrDefault', '([\\s\\S]*)\\((.*)\\)', 'checkMergeConflictingNewTrees(org.eclipse.jgit.merge.ResolveMergerTest)')","[10469, 69160]"
"('Description.java', 'org.junit.runner.Description', 'methodAndClassNamePatternGroupOrDefault', '([\\s\\S]*)\\((.*)\\)', 'testContext5(org.eclipse.jgit.diff.DiffFormatterReflowTest)')","[13316, 71844]"
"('URIish.java', 'org.eclipse.jgit.transport.URIish', '<init>', '^([a-z][a-z0-9+-]+)://(?:(?:([^/:@]+)(?::([^\\\\/]+))?@)?((?:[^\\\\/:]+)|(?:\\[[0-9a-f:]+\\]))(?::(\\d+))?((?:/~(?:[^\\\\/]+))?[\\\\/]))?(.+)?$', 'ssh+git://me:wtf@example.com:1234//')",[125121]
"('Description.java', 'org.junit.runner.Description', 'methodAndClassNamePatternGroupOrDefault', '([\\s\\S]*)\\((.*)\\)', 'testNotEquals3(org.eclipse.jgit.diff.EditTest)')","[15999, 74396]"
"('Description.java', 'org.junit.runner.Description', 'methodAndClassNamePatternGroupOrDefault', '([\\s\\S]*)\\((.*)\\)', 'testNoLockSuffix(org.eclipse.jgit.lib.ValidRefNameTest)')","[24271, 82624]"
"('Description.java', 'org.junit.runner.Description', 'methodAndClassNamePatternGroupOrDefault', '([\\s\\S]*)\\((.*)\\)', 'testQuoteParsing(org.eclipse.jgit.transport.OpenSshConfigTest)')","[2481, 61548]"
"('URIish.java', 'org.eclipse.jgit.transport.URIish', '<init>', '^(file):([\\\\/](?![\\\\/])((?:[A-Za-z]:)?[\\\\/]?(?:(?:[^\\\\/]+[\\\\/]+)*[^\\\\/]+[\\\\/]*)))$', 'example.com:some/p ath')","[121050, 121119]"
"('Description.java', 'org.junit.runner.Description', 'methodAndClassNamePatternGroupOrDefault', '([\\s\\S]*)\\((.*)\\)', 'testWritePacket1(org.eclipse.jgit.transport.PacketLineOutTest)')","[5088, 64100]"
"('Description.java', 'org.junit.runner.Description', 'methodAndClassNamePatternGroupOrDefault', '([\\s\\S]*)\\((.*)\\)', 'testReadStringRaw2(org.eclipse.jgit.transport.PacketLineInTest)')","[3380, 62450]"
"('URIish.java', 'org.eclipse.jgit.transport.URIish', '<init>', '^(file):([\\\\/](?![\\\\/])((?:[A-Za-z]:)?[\\\\/]?(?:(?:[^\\\\/]+[\\\\/]+)*[^\\\\/]+[\\\\/]*)))$', 'https://me:wtf@1.2.3.4:1234/D:/x')",[132182]
"('URIish.java', 'org.eclipse.jgit.transport.URIish', '<init>', '^(file):([\\\\/](?![\\\\/])((?:[A-Za-z]:)?[\\\\/]?(?:(?:[^\\\\/]+[\\\\/]+)*[^\\\\/]+[\\\\/]*)))$', 'https://lusr\\example:wtf@1.2.3.4:80//')",[134482]
"('Description.java', 'org.junit.runner.Description', 'methodAndClassNamePatternGroupOrDefault', '([\\s\\S]*)\\((.*)\\)', 'testLowerGroupCase1(org.eclipse.jgit.fnmatch.FileNameMatcherTest)')","[16900, 75320]"
"('Description.java', 'org.junit.runner.Description', 'methodAndClassNamePatternGroupOrDefault', '([\\s\\S]*)\\((.*)\\)', 'stashedApplyOnOtherBranch(org.eclipse.jgit.api.StashApplyCommandTest)')","[51458, 108936]"
"('URIish.java', 'org.eclipse.jgit.transport.URIish', '<init>', '^([a-z][a-z0-9+-]+)://(?:(?:([^/:@]+)(?::([^\\\\/]+))?@)?((?:[^\\\\/:]+)|(?:\\[[0-9a-f:]+\\]))(?::(\\d+))?((?:/~(?:[^\\\\/]+))?[\\\\/]))?(.+)?$', 'http://me:wtf@example.com:80//abc')",[128663]
"('URIish.java', 'org.eclipse.jgit.transport.URIish', '<init>', '^([a-z][a-z0-9+-]+)://(?:(?:([^/:@]+)(?::([^\\\\/]+))?@)?((?:[^\\\\/:]+)|(?:\\[[0-9a-f:]+\\]))(?::(\\d+))?((?:/~(?:[^\\\\/]+))?[\\\\/]))?(.+)?$', 'ssh://l usr\\example.com@[::1]:1234/D:\\x')",[137035]
"('Description.java', 'org.junit.runner.Description', 'methodAndClassNamePatternGroupOrDefault', '([\\s\\S]*)\\((.*)\\)', 'testRevertOurCommitName(org.eclipse.jgit.api.RevertCommandTest)')","[48051, 105526]"
"('Description.java', 'org.junit.runner.Description', 'methodAndClassNamePatternGroupOrDefault', '([\\s\\S]*)\\((.*)\\)', 'testExactRename_OneRename(org.eclipse.jgit.diff.RenameDetectorTest)')","[12793, 71316]"
"('Description.java', 'org.junit.runner.Description', 'methodAndClassNamePatternGroupOrDefault', '([\\s\\S]*)\\((.*)\\)', 'testWrite0(org.eclipse.jgit.transport.BundleWriterTest)')","[3903, 62978]"
"('URIish.java', 'org.eclipse.jgit.transport.URIish', '<init>', '^([a-z][a-z0-9+-]+)://(?:(?:([^/:@]+)(?::([^\\\\/]+))?@)?((?:[^\\\\/:]+)|(?:\\[[0-9a-f:]+\\]))(?::(\\d+))?((?:/~(?:[^\\\\/]+))?[\\\\/]))?(.+)?$', 'file:///tmp/jgit_test_2523593720449039181_tmp/tmp_6358686022077663757')","[198447, 198509, 198561, 198623, 198675, 198737]"
"('URIish.java', 'org.eclipse.jgit.transport.URIish', '<init>', '^(file):([\\\\/](?![\\\\/])((?:[A-Za-z]:)?[\\\\/]?(?:(?:[^\\\\/]+[\\\\/]+)*[^\\\\/]+[\\\\/]*)))$', 'http://l usr\\example.com@example.com:80/D:\\x')",[143084]
"('Description.java', 'org.junit.runner.Description', 'methodAndClassNamePatternGroupOrDefault', '([\\s\\S]*)\\((.*)\\)', 'test006_notIsId(org.eclipse.jgit.lib.ObjectIdTest)')","[28741, 87068]"
"('URIish.java', 'org.eclipse.jgit.transport.URIish', '<init>', '^([a-z][a-z0-9+-]+)://(?:(?:([^/:@]+)(?::([^\\\\/]+))?@)?((?:[^\\\\/:]+)|(?:\\[[0-9a-f:]+\\]))(?::(\\d+))?((?:/~(?:[^\\\\/]+))?[\\\\/]))?(.+)?$', 'http://me:wtf@1.2.3.4:1234/D:\\x')",[128939]
"('URIish.java', 'org.eclipse.jgit.transport.URIish', '<init>', '^([a-z][a-z0-9+-]+)://(?:(?:([^/:@]+)(?::([^\\\\/]+))?@)?((?:[^\\\\/:]+)|(?:\\[[0-9a-f:]+\\]))(?::(\\d+))?((?:/~(?:[^\\\\/]+))?[\\\\/]))?(.+)?$', 'ssh+git://[::1]/D:\\x')","[165739, 165923, 166843, 167027, 167947, 168131]"
"('Description.java', 'org.junit.runner.Description', 'methodAndClassNamePatternGroupOrDefault', '([\\s\\S]*)\\((.*)\\)', 'testSet(org.eclipse.jgit.util.BlockListTest)')","[35475, 93426]"
"('URIish.java', 'org.eclipse.jgit.transport.URIish', '<init>', '^([a-z][a-z0-9+-]+)://(?:(?:([^/:@]+)(?::([^\\\\/]+))?@)?((?:[^\\\\/:]+)|(?:\\[[0-9a-f:]+\\]))(?::(\\d+))?((?:/~(?:[^\\\\/]+))?[\\\\/]))?(.+)?$', 'http://l usr\\example.com:wtf@example.com:80//')",[129721]
"('Description.java', 'org.junit.runner.Description', 'methodAndClassNamePatternGroupOrDefault', '([\\s\\S]*)\\((.*)\\)', 'testLimitObjectSize_Length130CopyOk(org.eclipse.jgit.internal.storage.pack.DeltaIndexTest)')","[52723, 110102]"
"('URIish.java', 'org.eclipse.jgit.transport.URIish', '<init>', '^(file):([\\\\/](?![\\\\/])((?:[A-Za-z]:)?[\\\\/]?(?:(?:[^\\\\/]+[\\\\/]+)*[^\\\\/]+[\\\\/]*)))$', 'git+ssh://example.com/some/p ath')","[178044, 178090]"
"('URIish.java', 'org.eclipse.jgit.transport.URIish', '<init>', '^([a-z][a-z0-9+-]+)://(?:(?:([^/:@]+)(?::([^\\\\/]+))?@)?((?:[^\\\\/:]+)|(?:\\[[0-9a-f:]+\\]))(?::(\\d+))?((?:/~(?:[^\\\\/]+))?[\\\\/]))?(.+)?$', 'ssh://lusr\\example@example.com:1234/D:/x')",[137357]
"('Description.java', 'org.junit.runner.Description', 'methodAndClassNamePatternGroupOrDefault', '([\\s\\S]*)\\((.*)\\)', 'testParseRename100_OldStyle(org.eclipse.jgit.patch.FileHeaderTest)')","[39236, 96968]"
"('Description.java', 'org.junit.runner.Description', 'methodAndClassNamePatternGroupOrDefault', '([\\s\\S]*)\\((.*)\\)', 'testTag(org.eclipse.jgit.merge.MergeMessageFormatterTest)')","[10843, 69512]"
"('URIish.java', 'org.eclipse.jgit.transport.URIish', '<init>', '^(file):([\\\\/](?![\\\\/])((?:[A-Za-z]:)?[\\\\/]?(?:(?:[^\\\\/]+[\\\\/]+)*[^\\\\/]+[\\\\/]*)))$', 'http://me@[::1]:80/D:/x')",[142670]
"('URIish.java', 'org.eclipse.jgit.transport.URIish', '<init>', '^([a-z][a-z0-9+-]+)://(?:(?:([^/:@]+)(?::([^\\\\/]+))?@)?((?:[^\\\\/:]+)|(?:\\[[0-9a-f:]+\\]))(?::(\\d+))?((?:/~(?:[^\\\\/]+))?[\\\\/]))?(.+)?$', 'file:///D:/m y')","[179654, 179700]"
"('Description.java', 'org.junit.runner.Description', 'methodAndClassNamePatternGroupOrDefault', '([\\s\\S]*)\\((.*)\\)', 'testRenamedBoundLineDelete(org.eclipse.jgit.api.blame.BlameGeneratorTest)')","[50834, 108342]"
"('Description.java', 'org.junit.runner.Description', 'methodAndClassNamePatternGroupOrDefault', '([\\s\\S]*)\\((.*)\\)', 'testDirectoryFileConflicts_5(org.eclipse.jgit.lib.DirCacheCheckoutTest)')","[23416, 81788]"
"('Description.java', 'org.junit.runner.Description', 'methodAndClassNamePatternGroupOrDefault', '([\\s\\S]*)\\((.*)\\)', 'org.eclipse.jgit.internal.storage.file.T0004_PackReaderTest')","[53179, 209624]"
"('Description.java', 'org.junit.runner.Description', 'methodAndClassNamePatternGroupOrDefault', '([\\s\\S]*)\\((.*)\\)', 'testCreateEmptyTreeIterator(org.eclipse.jgit.treewalk.AbstractTreeIteratorTest)')","[29260, 87552]"
"('Description.java', 'org.junit.runner.Description', 'methodAndClassNamePatternGroupOrDefault', '([\\s\\S]*)\\((.*)\\)', 'testEdit_MoveBlock(org.eclipse.jgit.diff.HistogramDiffTest)')","[15352, 73758]"
"('URIish.java', 'org.eclipse.jgit.transport.URIish', '<init>', '^(file):([\\\\/](?![\\\\/])((?:[A-Za-z]:)?[\\\\/]?(?:(?:[^\\\\/]+[\\\\/]+)*[^\\\\/]+[\\\\/]*)))$', 'http://lusr\\example:wtf@[::1]:1234//abc')",[131400]
"('URIish.java', 'org.eclipse.jgit.transport.URIish', '<init>', '^(file):([\\\\/](?![\\\\/])((?:[A-Za-z]:)?[\\\\/]?(?:(?:[^\\\\/]+[\\\\/]+)*[^\\\\/]+[\\\\/]*)))$', 'ssh+git://example.com/some/p ath')","[175675, 175721]"
"('Description.java', 'org.junit.runner.Description', 'methodAndClassNamePatternGroupOrDefault', '([\\s\\S]*)\\((.*)\\)', 'testCRC32(org.eclipse.jgit.internal.storage.file.PackIndexV1Test)')","[54467, 111730]"
"('Description.java', 'org.junit.runner.Description', 'methodAndClassNamePatternGroupOrDefault', '([\\s\\S]*)\\((.*)\\)', 'testWritePack2DeltasReuseOffsets(org.eclipse.jgit.internal.storage.file.PackWriterTest)')","[54858, 112060]"
"('Description.java', 'org.junit.runner.Description', 'methodAndClassNamePatternGroupOrDefault', '([\\s\\S]*)\\((.*)\\)', 'testFileInFolderCommittedModifiedIgnored(org.eclipse.jgit.treewalk.filter.IndexDiffFilterTest)')","[30653, 88872]"
"('Description.java', 'org.junit.runner.Description', 'methodAndClassNamePatternGroupOrDefault', '([\\s\\S]*)\\((.*)\\)', 'testReadIndex_DirCacheTree(org.eclipse.jgit.dircache.DirCacheCGitCompatabilityTest)')","[11488, 70128]"
"('Description.java', 'org.junit.runner.Description', 'methodAndClassNamePatternGroupOrDefault', '([\\s\\S]*)\\((.*)\\)', 'testScpStyleWithoutUserAbsolutePath(org.eclipse.jgit.transport.URIishTest)')","[1979, 61042]"
"('URIish.java', 'org.eclipse.jgit.transport.URIish', '<init>', '^([a-z][a-z0-9+-]+)://(?:(?:([^/:@]+)(?::([^\\\\/]+))?@)?((?:[^\\\\/:]+)|(?:\\[[0-9a-f:]+\\]))(?::(\\d+))?((?:/~(?:[^\\\\/]+))?[\\\\/]))?(.+)?$', 'ssh://lusr\\example@1.2.3.4:1234/D:/x')",[137725]
"('Description.java', 'org.junit.runner.Description', 'methodAndClassNamePatternGroupOrDefault', '([\\s\\S]*)\\((.*)\\)', 'testReadLong(org.eclipse.jgit.lib.ConfigTest)')","[28113, 86430]"
"('URIish.java', 'org.eclipse.jgit.transport.URIish', '<init>', '^(file):([\\\\/](?![\\\\/])((?:[A-Za-z]:)?[\\\\/]?(?:(?:[^\\\\/]+[\\\\/]+)*[^\\\\/]+[\\\\/]*)))$', 'ssh://lusr\\example:wtf@[::1]:80//')",[124914]
"('URIish.java', 'org.eclipse.jgit.transport.URIish', '<init>', '^(file):([\\\\/](?![\\\\/])((?:[A-Za-z]:)?[\\\\/]?(?:(?:[^\\\\/]+[\\\\/]+)*[^\\\\/]+[\\\\/]*)))$', 'file:/tmp/jgit_test_4892568789505525695_tmp/tmp_8246577018084337858/.git/')",[185727]
"('Description.java', 'org.junit.runner.Description', 'methodAndClassNamePatternGroupOrDefault', '([\\s\\S]*)\\((.*)\\)', 'testInvalidTreeNameIsDotDot(org.eclipse.jgit.lib.ObjectCheckerTest)')","[26336, 84648]"
"('Description.java', 'org.junit.runner.Description', 'methodAndClassNamePatternGroupOrDefault', '([\\s\\S]*)\\((.*)\\)', 'testQuotingForSubSectionNames(org.eclipse.jgit.lib.ConfigTest)')","[28029, 86342]"
"('Description.java', 'org.junit.runner.Description', 'methodAndClassNamePatternGroupOrDefault', '([\\s\\S]*)\\((.*)\\)', 'testDequote_OctalAll(org.eclipse.jgit.util.QuotedStringGitPathStyleTest)')","[33992, 91952]"
"('URIish.java', 'org.eclipse.jgit.transport.URIish', '<init>', '^(file):([\\\\/](?![\\\\/])((?:[A-Za-z]:)?[\\\\/]?(?:(?:[^\\\\/]+[\\\\/]+)*[^\\\\/]+[\\\\/]*)))$', 'https://l usr\\example.com@example.com:1234//')",[146074]
"('URIish.java', 'org.eclipse.jgit.transport.URIish', '<init>', '^(?:([^/:@]+)(?::([^\\\\/]+))?@)?((?:[^\\\\/:]+)|(?:\\[[0-9a-f:]+\\])):((?:(?:/~(?:[^\\\\/]+))[\\\\/])?(?:(?:[^\\\\/]+[\\\\/]+)*[^\\\\/]+[\\\\/]*))$', '/abc.git/')",[175583]
"('Description.java', 'org.junit.runner.Description', 'methodAndClassNamePatternGroupOrDefault', '([\\s\\S]*)\\((.*)\\)', 'test011_toString(org.eclipse.jgit.lib.ObjectIdTest)')","[28489, 86804]"
"('URIish.java', 'org.eclipse.jgit.transport.URIish', '<init>', '^([a-z][a-z0-9+-]+)://(?:(?:([^/:@]+)(?::([^\\\\/]+))?@)?((?:[^\\\\/:]+)|(?:\\[[0-9a-f:]+\\]))(?::(\\d+))?((?:/~(?:[^\\\\/]+))?[\\\\/]))?(.+)?$', 'ssh+git://me@1.2.3.4:80//abc')",[138967]
"('Description.java', 'org.junit.runner.Description', 'methodAndClassNamePatternGroupOrDefault', '([\\s\\S]*)\\((.*)\\)', 'testTwoCommitDeepTree2(org.eclipse.jgit.revwalk.ObjectWalkTest)')","[5754, 64738]"
"('URIish.java', 'org.eclipse.jgit.transport.URIish', '<init>', '^(file):([\\\\/](?![\\\\/])((?:[A-Za-z]:)?[\\\\/]?(?:(?:[^\\\\/]+[\\\\/]+)*[^\\\\/]+[\\\\/]*)))$', 'file:/tmp/jgit_test_608173029420979911_tmp/tmp_6831999805564900122/.git/')",[196678]
"('Description.java', 'org.junit.runner.Description', 'methodAndClassNamePatternGroupOrDefault', '([\\s\\S]*)\\((.*)\\)', 'testWriteIndex(org.eclipse.jgit.internal.storage.file.PackWriterTest)')","[54963, 112170]"
"('Description.java', 'org.junit.runner.Description', 'methodAndClassNamePatternGroupOrDefault', '([\\s\\S]*)\\((.*)\\)', 'testBasic(org.eclipse.jgit.ignore.IgnoreMatcherTest)')","[31794, 89928]"
"('URIish.java', 'org.eclipse.jgit.transport.URIish', '<init>', '^(file):([\\\\/](?![\\\\/])((?:[A-Za-z]:)?[\\\\/]?(?:(?:[^\\\\/]+[\\\\/]+)*[^\\\\/]+[\\\\/]*)))$', 'file:///tmp/jgit_test_2523593720449039181_tmp/tmp_6358686022077663757')","[198421, 198478, 198535, 198592, 198649, 198706]"
"('Description.java', 'org.junit.runner.Description', 'methodAndClassNamePatternGroupOrDefault', '([\\s\\S]*)\\((.*)\\)', 'testParse_CcDeleteFile(org.eclipse.jgit.patch.PatchCcTest)')","[39904, 97628]"
"('Description.java', 'org.junit.runner.Description', 'methodAndClassNamePatternGroupOrDefault', '([\\s\\S]*)\\((.*)\\)', 'repositoryWithDifferentRevCheckedOutSubmodule(org.eclipse.jgit.submodule.SubmoduleStatusTest)')","[20227, 78686]"
"('Description.java', 'org.junit.runner.Description', 'methodAndClassNamePatternGroupOrDefault', '([\\s\\S]*)\\((.*)\\)', 'testDeletionAndConflict(org.eclipse.jgit.api.MergeCommandTest)')","[44173, 101742]"
"('URIish.java', 'org.eclipse.jgit.transport.URIish', '<init>', '^([a-z][a-z0-9+-]+)://(?:(?:([^/:@]+)(?::([^\\\\/]+))?@)?((?:[^\\\\/:]+)|(?:\\[[0-9a-f:]+\\]))(?::(\\d+))?((?:/~(?:[^\\\\/]+))?[\\\\/]))?(.+)?$', 'http://lusr\\example@1.2.3.4:80/D:\\x')",[144579]
"('URIish.java', 'org.eclipse.jgit.transport.URIish', '<init>', '^(file):([\\\\/](?![\\\\/])((?:[A-Za-z]:)?[\\\\/]?(?:(?:[^\\\\/]+[\\\\/]+)*[^\\\\/]+[\\\\/]*)))$', 'ssh://l usr\\example.com@1.2.3.4/D:\\x')","[149892, 150076]"
"('Description.java', 'org.junit.runner.Description', 'methodAndClassNamePatternGroupOrDefault', '([\\s\\S]*)\\((.*)\\)', 'testDegenerate_InsertStart(org.eclipse.jgit.diff.MyersDiffTest)')","[14709, 73164]"
"('Description.java', 'org.junit.runner.Description', 'methodAndClassNamePatternGroupOrDefault', '([\\s\\S]*)\\((.*)\\)', 'testModify(org.eclipse.jgit.lib.IndexModificationTimesTest)')","[24725, 83020]"
"('Description.java', 'org.junit.runner.Description', 'methodAndClassNamePatternGroupOrDefault', '([\\s\\S]*)\\((.*)\\)', 'testInversedGroupCase3(org.eclipse.jgit.fnmatch.FileNameMatcherTest)')","[17299, 75738]"
"('ChangeIdUtil.java', 'org.eclipse.jgit.util.ChangeIdUtil', 'indexOfChangeId', '(^Change-Id: *I[a-f0-9]{40}$)', 'Change-Id: I1b55098b5a2cce0b3f3da783dda50d5f79f873fa')","[189079, 190580]"
"('Description.java', 'org.junit.runner.Description', 'methodAndClassNamePatternGroupOrDefault', '([\\s\\S]*)\\((.*)\\)', 'testUntrackedNotIgnoredFolders(org.eclipse.jgit.lib.IndexDiffTest)')","[20786, 79192]"
"('URIish.java', 'org.eclipse.jgit.transport.URIish', '<init>', '^(file):([\\\\/](?![\\\\/])((?:[A-Za-z]:)?[\\\\/]?(?:(?:[^\\\\/]+[\\\\/]+)*[^\\\\/]+[\\\\/]*)))$', 'git://abc')",[174824]
"('Description.java', 'org.junit.runner.Description', 'methodAndClassNamePatternGroupOrDefault', '([\\s\\S]*)\\((.*)\\)', 'testBreakModify_RejoinIfUnpaired(org.eclipse.jgit.diff.RenameDetectorTest)')","[12667, 71184]"
"('URIish.java', 'org.eclipse.jgit.transport.URIish', '<init>', '^([a-z][a-z0-9+-]+)://(?:(?:([^/:@]+)(?::([^\\\\/]+))?@)?((?:[^\\\\/:]+)|(?:\\[[0-9a-f:]+\\]))(?::(\\d+))?((?:/~(?:[^\\\\/]+))?[\\\\/]))?(.+)?$', 'ssh://lusr\\example@example.com:1234//abc')",[137311]
"('URIish.java', 'org.eclipse.jgit.transport.URIish', '<init>', '^([a-z][a-z0-9+-]+)://(?:(?:([^/:@]+)(?::([^\\\\/]+))?@)?((?:[^\\\\/:]+)|(?:\\[[0-9a-f:]+\\]))(?::(\\d+))?((?:/~(?:[^\\\\/]+))?[\\\\/]))?(.+)?$', '/abc/')",[179953]
"('Description.java', 'org.junit.runner.Description', 'methodAndClassNamePatternGroupOrDefault', '([\\s\\S]*)\\((.*)\\)', 'testGitProtoUnix(org.eclipse.jgit.transport.URIishTest)')","[2189, 61262]"
"('URIish.java', 'org.eclipse.jgit.transport.URIish', '<init>', '^(file):([\\\\/](?![\\\\/])((?:[A-Za-z]:)?[\\\\/]?(?:(?:[^\\\\/]+[\\\\/]+)*[^\\\\/]+[\\\\/]*)))$', 'ssh://example.com/some/p ath')","[178366, 178412]"
"('URIish.java', 'org.eclipse.jgit.transport.URIish', '<init>', '^(file):([\\\\/](?![\\\\/])((?:[A-Za-z]:)?[\\\\/]?(?:(?:[^\\\\/]+[\\\\/]+)*[^\\\\/]+[\\\\/]*)))$', 'ssh://l usr\\example.com@example.com:1234//')",[136138]
"('Repository.java', 'org.eclipse.jgit.lib.Repository', 'resolve', '^-\\d+$', 'yesterday')","[185539, 185566]"
"('URIish.java', 'org.eclipse.jgit.transport.URIish', '<init>', '^([a-z][a-z0-9+-]+)://(?:(?:([^/:@]+)(?::([^\\\\/]+))?@)?((?:[^\\\\/:]+)|(?:\\[[0-9a-f:]+\\]))(?::(\\d+))?((?:/~(?:[^\\\\/]+))?[\\\\/]))?(.+)?$', 'ssh://me@1.2.3.4:1234//')",[135425]
"('URIish.java', 'org.eclipse.jgit.transport.URIish', '<init>', '^(file):([\\\\/](?![\\\\/])((?:[A-Za-z]:)?[\\\\/]?(?:(?:[^\\\\/]+[\\\\/]+)*[^\\\\/]+[\\\\/]*)))$', 'http://me@[::1]//abc')","[155688, 155872]"
"('URIish.java', 'org.eclipse.jgit.transport.URIish', '<init>', '^([a-z][a-z0-9+-]+)://(?:(?:([^/:@]+)(?::([^\\\\/]+))?@)?((?:[^\\\\/:]+)|(?:\\[[0-9a-f:]+\\]))(?::(\\d+))?((?:/~(?:[^\\\\/]+))?[\\\\/]))?(.+)?$', 'http://lusr\\example@[::1]:80/D:/x')",[144901]
"('URIish.java', 'org.eclipse.jgit.transport.URIish', '<init>', '^([a-z][a-z0-9+-]+)://(?:(?:([^/:@]+)(?::([^\\\\/]+))?@)?((?:[^\\\\/:]+)|(?:\\[[0-9a-f:]+\\]))(?::(\\d+))?((?:/~(?:[^\\\\/]+))?[\\\\/]))?(.+)?$', 'ssh://me@[::1]:1234//')",[135793]
"('Description.java', 'org.junit.runner.Description', 'methodAndClassNamePatternGroupOrDefault', '([\\s\\S]*)\\((.*)\\)', 'testTrimLeadingWhitespace(org.eclipse.jgit.util.RawCharUtilTest)')","[38473, 96308]"
"('URIish.java', 'org.eclipse.jgit.transport.URIish', '<init>', '^(file):([\\\\/](?![\\\\/])((?:[A-Za-z]:)?[\\\\/]?(?:(?:[^\\\\/]+[\\\\/]+)*[^\\\\/]+[\\\\/]*)))$', 'ssh://lusr\\example:wtf@example.com:80//abc')",[124224]
"('Description.java', 'org.junit.runner.Description', 'methodAndClassNamePatternGroupOrDefault', '([\\s\\S]*)\\((.*)\\)', 'org.eclipse.jgit.internal.storage.file.FileSnapshotTest')","[54591, 209840]"
"('URIish.java', 'org.eclipse.jgit.transport.URIish', '<init>', '^(file):([\\\\/](?![\\\\/])((?:[A-Za-z]:)?[\\\\/]?(?:(?:[^\\\\/]+[\\\\/]+)*[^\\\\/]+[\\\\/]*)))$', 'ssh://me:wtf@example.com:80/D:/x')",[122062]
"('Description.java', 'org.junit.runner.Description', 'methodAndClassNamePatternGroupOrDefault', '([\\s\\S]*)\\((.*)\\)', 'test007_readUserConfig(org.eclipse.jgit.lib.ConfigTest)')","[28449, 86782]"
"('Description.java', 'org.junit.runner.Description', 'methodAndClassNamePatternGroupOrDefault', '([\\s\\S]*)\\((.*)\\)', 'testFlush(org.eclipse.jgit.transport.SideBandOutputStreamTest)')","[4483, 63506]"
"('Description.java', 'org.junit.runner.Description', 'methodAndClassNamePatternGroupOrDefault', '([\\s\\S]*)\\((.*)\\)', 'testOneBlockAndHalf_BulkWrite(org.eclipse.jgit.util.TemporaryBufferTest)')","[34620, 92590]"
"('Description.java', 'org.junit.runner.Description', 'methodAndClassNamePatternGroupOrDefault', '([\\s\\S]*)\\((.*)\\)', 'org.eclipse.jgit.transport.PushProcessTest')","[4691, 181082]"
"('Description.java', 'org.junit.runner.Description', 'methodAndClassNamePatternGroupOrDefault', '([\\s\\S]*)\\((.*)\\)', 'testGetBitmapWithoutXor(org.eclipse.jgit.internal.storage.file.StoredBitmapTest)')","[53427, 110740]"
"('URIish.java', 'org.eclipse.jgit.transport.URIish', '<init>', '^(file):([\\\\/](?![\\\\/])((?:[A-Za-z]:)?[\\\\/]?(?:(?:[^\\\\/]+[\\\\/]+)*[^\\\\/]+[\\\\/]*)))$', 'ssh://1.2.3.4/D:/x')","[161990, 162174, 163094, 163278, 164198, 164382]"
"('URIish.java', 'org.eclipse.jgit.transport.URIish', '<init>', '^(file):([\\\\/](?![\\\\/])((?:[A-Za-z]:)?[\\\\/]?(?:(?:[^\\\\/]+[\\\\/]+)*[^\\\\/]+[\\\\/]*)))$', 'http://www.spearce.org/egit.git')","[118080, 118805, 118855, 119195, 119369, 119418, 119713, 120488, 120638, 120763]"
"('Description.java', 'org.junit.runner.Description', 'methodAndClassNamePatternGroupOrDefault', '([\\s\\S]*)\\((.*)\\)', 'testId(org.eclipse.jgit.revwalk.RevObjectTest)')","[8534, 67312]"
"('Description.java', 'org.junit.runner.Description', 'methodAndClassNamePatternGroupOrDefault', '([\\s\\S]*)\\((.*)\\)', 'testFlush(org.eclipse.jgit.transport.PacketLineOutTest)')","[5151, 64166]"
"('Description.java', 'org.junit.runner.Description', 'methodAndClassNamePatternGroupOrDefault', '([\\s\\S]*)\\((.*)\\)', 'testExclude(org.eclipse.jgit.internal.storage.file.PackWriterTest)')","[54921, 112126]"
"('URIish.java', 'org.eclipse.jgit.transport.URIish', '<init>', '^(file):([\\\\/](?![\\\\/])((?:[A-Za-z]:)?[\\\\/]?(?:(?:[^\\\\/]+[\\\\/]+)*[^\\\\/]+[\\\\/]*)))$', 'https://l usr\\example.com:wtf@1.2.3.4:1234/D:/x')",[133286]
"('Description.java', 'org.junit.runner.Description', 'methodAndClassNamePatternGroupOrDefault', '([\\s\\S]*)\\((.*)\\)', 'testRemoveDeletesTreeFanout2_38(org.eclipse.jgit.notes.NoteMapTest)')","[40713, 98376]"
"('Description.java', 'org.junit.runner.Description', 'methodAndClassNamePatternGroupOrDefault', '([\\s\\S]*)\\((.*)\\)', 'testTwoBranches(org.eclipse.jgit.merge.MergeMessageFormatterTest)')","[11011, 69688]"
"('Description.java', 'org.junit.runner.Description', 'methodAndClassNamePatternGroupOrDefault', '([\\s\\S]*)\\((.*)\\)', 'testFileModeMergeWithDirtyWorkTree(org.eclipse.jgit.api.MergeCommandTest)')","[43942, 101500]"
"('URIish.java', 'org.eclipse.jgit.transport.URIish', '<init>', '^(file):([\\\\/](?![\\\\/])((?:[A-Za-z]:)?[\\\\/]?(?:(?:[^\\\\/]+[\\\\/]+)*[^\\\\/]+[\\\\/]*)))$', 'http://me@[::1]:80//abc')",[142624]
"('URIish.java', 'org.eclipse.jgit.transport.URIish', '<init>', '^([a-z][a-z0-9+-]+)://(?:(?:([^/:@]+)(?::([^\\\\/]+))?@)?((?:[^\\\\/:]+)|(?:\\[[0-9a-f:]+\\]))(?::(\\d+))?((?:/~(?:[^\\\\/]+))?[\\\\/]))?(.+)?$', 'ssh+git://me@example.com//abc')","[151663, 151847]"
"('Description.java', 'org.junit.runner.Description', 'methodAndClassNamePatternGroupOrDefault', '([\\s\\S]*)\\((.*)\\)', 'testDirectoryFileConflicts_10(org.eclipse.jgit.lib.DirCacheCheckoutTest)')","[23584, 81964]"
"('Description.java', 'org.junit.runner.Description', 'methodAndClassNamePatternGroupOrDefault', '([\\s\\S]*)\\((.*)\\)', 'testParseGitDescribeOutput(org.eclipse.jgit.lib.RepositoryResolveTest)')","[27342, 85682]"
"('Description.java', 'org.junit.runner.Description', 'methodAndClassNamePatternGroupOrDefault', '([\\s\\S]*)\\((.*)\\)', 'testWriteLine2(org.eclipse.jgit.diff.RawTextTest)')","[14207, 72658]"
"('SideBandInputStream.java', 'org.eclipse.jgit.transport.SideBandInputStream', 'doProgressLine', '^([\\w ]+): +\\d+% +\\( *(\\d+)/ *(\\d+)\\)(?:, done\\.)? *[\r\n]$', 'Updating references: 100% (1/1)   \r')","[117283, 194624, 194814, 195004, 195194, 195384, 195574, 195764, 195900, 196090, 196280, 196416]"
"('URIish.java', 'org.eclipse.jgit.transport.URIish', '<init>', '^([a-z][a-z0-9+-]+)://(?:(?:([^/:@]+)(?::([^\\\\/]+))?@)?((?:[^\\\\/:]+)|(?:\\[[0-9a-f:]+\\]))(?::(\\d+))?((?:/~(?:[^\\\\/]+))?[\\\\/]))?(.+)?$', 'ssh://me:wtf@[::1]:1234//')",[122545]
"('Description.java', 'org.junit.runner.Description', 'methodAndClassNamePatternGroupOrDefault', '([\\s\\S]*)\\((.*)\\)', 'testRemove(org.eclipse.jgit.api.RmCommandTest)')","[44715, 102270]"
"('Description.java', 'org.junit.runner.Description', 'methodAndClassNamePatternGroupOrDefault', '([\\s\\S]*)\\((.*)\\)', 'org.eclipse.jgit.internal.storage.file.FileRepositoryBuilderTest')","[53633, 209732]"
"('URIish.java', 'org.eclipse.jgit.transport.URIish', '<init>', '^([a-z][a-z0-9+-]+)://(?:(?:([^/:@]+)(?::([^\\\\/]+))?@)?((?:[^\\\\/:]+)|(?:\\[[0-9a-f:]+\\]))(?::(\\d+))?((?:/~(?:[^\\\\/]+))?[\\\\/]))?(.+)?$', 'https://lusr\\example@1.2.3.4:80/D:\\x')",[147891]
"('URIish.java', 'org.eclipse.jgit.transport.URIish', '<init>', '^([a-z][a-z0-9+-]+)://(?:(?:([^/:@]+)(?::([^\\\\/]+))?@)?((?:[^\\\\/:]+)|(?:\\[[0-9a-f:]+\\]))(?::(\\d+))?((?:/~(?:[^\\\\/]+))?[\\\\/]))?(.+)?$', 'https://me@example.com:1234/D:\\x')",[145131]
"('Description.java', 'org.junit.runner.Description', 'methodAndClassNamePatternGroupOrDefault', '([\\s\\S]*)\\((.*)\\)', 'testRebaseWithUncommittedMasterChange(org.eclipse.jgit.api.RebaseCommandTest)')","[45423, 102952]"
"('Description.java', 'org.junit.runner.Description', 'methodAndClassNamePatternGroupOrDefault', '([\\s\\S]*)\\((.*)\\)', 'testOnlyOption_f1_6_f2_14_d(org.eclipse.jgit.api.CommitOnlyTest)')","[49662, 107154]"
"('URIish.java', 'org.eclipse.jgit.transport.URIish', '<init>', '^(?:([^/:@]+)(?::([^\\\\/]+))?@)?([^\\\\/:]{2,}):([\\\\/](?:(?:[^\\\\/]+[\\\\/]+)*[^\\\\/]+[\\\\/]*))$', 'user@repo.or.cz:/srv/git/egit.git')",[120613]
"('URIish.java', 'org.eclipse.jgit.transport.URIish', '<init>', '^([a-z][a-z0-9+-]+)://(?:(?:([^/:@]+)(?::([^\\\\/]+))?@)?((?:[^\\\\/:]+)|(?:\\[[0-9a-f:]+\\]))(?::(\\d+))?((?:/~(?:[^\\\\/]+))?[\\\\/]))?(.+)?$', 'ssh://l usr\\example.com@1.2.3.4:1234/D:\\x')",[136667]
"('URIish.java', 'org.eclipse.jgit.transport.URIish', '<init>', '^([a-z][a-z0-9+-]+)://(?:(?:([^/:@]+)(?::([^\\\\/]+))?@)?((?:[^\\\\/:]+)|(?:\\[[0-9a-f:]+\\]))(?::(\\d+))?((?:/~(?:[^\\\\/]+))?[\\\\/]))?(.+)?$', 'file:///tmp/jgit_test_6443982766099715589_tmp/tmp_4105089330516958600')","[197663, 197725]"
"('URIish.java', 'org.eclipse.jgit.transport.URIish', '<init>', '^([a-z][a-z0-9+-]+)://(?:(?:([^/:@]+)(?::([^\\\\/]+))?@)?((?:[^\\\\/:]+)|(?:\\[[0-9a-f:]+\\]))(?::(\\d+))?((?:/~(?:[^\\\\/]+))?[\\\\/]))?(.+)?$', 'ssh://me@example.com//abc')","[148351, 148535]"
"('Description.java', 'org.junit.runner.Description', 'methodAndClassNamePatternGroupOrDefault', '([\\s\\S]*)\\((.*)\\)', 'testFull_FromByteArray(org.eclipse.jgit.lib.AbbreviatedObjectIdTest)')","[22496, 80864]"
"('Description.java', 'org.junit.runner.Description', 'methodAndClassNamePatternGroupOrDefault', '([\\s\\S]*)\\((.*)\\)', 'testDequote_NamedEscapes(org.eclipse.jgit.util.QuotedStringGitPathStyleTest)')","[34223, 92194]"
"('Description.java', 'org.junit.runner.Description', 'methodAndClassNamePatternGroupOrDefault', '([\\s\\S]*)\\((.*)\\)', 'testSetFastForwardMerge(org.eclipse.jgit.lib.ConfigTest)')","[28281, 86606]"
"('Description.java', 'org.junit.runner.Description', 'methodAndClassNamePatternGroupOrDefault', '([\\s\\S]*)\\((.*)\\)', 'testTwoRangesInOneGroupCase4(org.eclipse.jgit.fnmatch.FileNameMatcherTest)')","[19126, 77652]"
"('URIish.java', 'org.eclipse.jgit.transport.URIish', '<init>', '^([\\\\/]?((?:[A-Za-z]:)?[\\\\/]?(?:(?:[^\\\\/]+[\\\\/]+)*[^\\\\/]+[\\\\/]*)))$', '/tmp/jgit_test_3702623628615032288_tmp/tmp_6188209109110356895')","[201018, 201163, 201313]"
"('Description.java', 'org.junit.runner.Description', 'methodAndClassNamePatternGroupOrDefault', '([\\s\\S]*)\\((.*)\\)', 'testBooleanWithNoValue(org.eclipse.jgit.lib.ConfigTest)')","[28386, 86716]"
"('URIish.java', 'org.eclipse.jgit.transport.URIish', '<init>', '^([a-z][a-z0-9+-]+)://(?:(?:([^/:@]+)(?::([^\\\\/]+))?@)?((?:[^\\\\/:]+)|(?:\\[[0-9a-f:]+\\]))(?::(\\d+))?((?:/~(?:[^\\\\/]+))?[\\\\/]))?(.+)?$', 'http://lusr\\example@example.com:80/D:\\x')",[144211]
"('URIish.java', 'org.eclipse.jgit.transport.URIish', '<init>', '^(file):([\\\\/](?![\\\\/])((?:[A-Za-z]:)?[\\\\/]?(?:(?:[^\\\\/]+[\\\\/]+)*[^\\\\/]+[\\\\/]*)))$', 'https://[::1]/D:\\x')","[172340, 172524, 173444, 173628, 174548, 174732]"
"('URIish.java', 'org.eclipse.jgit.transport.URIish', '<init>', '^(file):([\\\\/](?![\\\\/])((?:[A-Za-z]:)?[\\\\/]?(?:(?:[^\\\\/]+[\\\\/]+)*[^\\\\/]+[\\\\/]*)))$', 'ssh://me:wtf@1.2.3.4:80//abc')",[122384]
"('URIish.java', 'org.eclipse.jgit.transport.URIish', '<init>', '^([a-z][a-z0-9+-]+)://(?:(?:([^/:@]+)(?::([^\\\\/]+))?@)?((?:[^\\\\/:]+)|(?:\\[[0-9a-f:]+\\]))(?::(\\d+))?((?:/~(?:[^\\\\/]+))?[\\\\/]))?(.+)?$', 'http://l usr\\example.com@1.2.3.4:80/D:/x')",[143429]
"('URIish.java', 'org.eclipse.jgit.transport.URIish', '<init>', '^([a-z][a-z0-9+-]+)://(?:(?:([^/:@]+)(?::([^\\\\/]+))?@)?((?:[^\\\\/:]+)|(?:\\[[0-9a-f:]+\\]))(?::(\\d+))?((?:/~(?:[^\\\\/]+))?[\\\\/]))?(.+)?$', 'ssh+git://lusr\\example:wtf@1.2.3.4:1234/D:\\x')",[127835]
"('Description.java', 'org.junit.runner.Description', 'methodAndClassNamePatternGroupOrDefault', '([\\s\\S]*)\\((.*)\\)', 'testDeleteFile(org.eclipse.jgit.util.FileUtilTest)')","[33805, 91776]"
"('Description.java', 'org.junit.runner.Description', 'methodAndClassNamePatternGroupOrDefault', '([\\s\\S]*)\\((.*)\\)', 'testIncorrectBaseSize(org.eclipse.jgit.internal.storage.pack.DeltaStreamTest)')","[52557, 109948]"
"('Description.java', 'org.junit.runner.Description', 'methodAndClassNamePatternGroupOrDefault', '([\\s\\S]*)\\((.*)\\)', 'testCheckoutSecond(org.eclipse.jgit.api.PathCheckoutCommandTest)')","[46969, 104492]"
"('Description.java', 'org.junit.runner.Description', 'methodAndClassNamePatternGroupOrDefault', '([\\s\\S]*)\\((.*)\\)', 'testCloneIsDeepClone(org.eclipse.jgit.treewalk.filter.NotTreeFilterTest)')","[31380, 89554]"
"('Description.java', 'org.junit.runner.Description', 'methodAndClassNamePatternGroupOrDefault', '([\\s\\S]*)\\((.*)\\)', 'testAddToEmptyList(org.eclipse.jgit.util.RefListTest)')","[35246, 93206]"
"('URIish.java', 'org.eclipse.jgit.transport.URIish', '<init>', '^([a-z][a-z0-9+-]+)://(?:(?:([^/:@]+)(?::([^\\\\/]+))?@)?((?:[^\\\\/:]+)|(?:\\[[0-9a-f:]+\\]))(?::(\\d+))?((?:/~(?:[^\\\\/]+))?[\\\\/]))?(.+)?$', 'ssh+git://l usr\\example.com:wtf@1.2.3.4:80//')",[126777]
"('URIish.java', 'org.eclipse.jgit.transport.URIish', '<init>', '^(file):([\\\\/](?![\\\\/])((?:[A-Za-z]:)?[\\\\/]?(?:(?:[^\\\\/]+[\\\\/]+)*[^\\\\/]+[\\\\/]*)))$', 'ssh://lusr\\example:wtf@[::1]:80/D:\\x')",[125052]
"('Description.java', 'org.junit.runner.Description', 'methodAndClassNamePatternGroupOrDefault', '([\\s\\S]*)\\((.*)\\)', 'testDelete(org.eclipse.jgit.api.BranchCommandTest)')","[47490, 104998]"
"('URIish.java', 'org.eclipse.jgit.transport.URIish', '<init>', '^(file):([\\\\/](?![\\\\/])((?:[A-Za-z]:)?[\\\\/]?(?:(?:[^\\\\/]+[\\\\/]+)*[^\\\\/]+[\\\\/]*)))$', 'file:///home/m%0ay')","[175353, 175399]"
"('Description.java', 'org.junit.runner.Description', 'methodAndClassNamePatternGroupOrDefault', '([\\s\\S]*)\\((.*)\\)', 'RFC(org.eclipse.jgit.util.GitDateFormatterTest)')","[32313, 90412]"
"('Description.java', 'org.junit.runner.Description', 'methodAndClassNamePatternGroupOrDefault', '([\\s\\S]*)\\((.*)\\)', 'testOurs(org.eclipse.jgit.merge.SimpleMergeTest)')","[9803, 68522]"
"('Description.java', 'org.junit.runner.Description', 'methodAndClassNamePatternGroupOrDefault', '([\\s\\S]*)\\((.*)\\)', 'testReadString5(org.eclipse.jgit.transport.PacketLineInTest)')","[3842, 62934]"
"('Description.java', 'org.junit.runner.Description', 'methodAndClassNamePatternGroupOrDefault', '([\\s\\S]*)\\((.*)\\)', 'shortWithDots(org.eclipse.jgit.util.GitDateParserTest)')","[36181, 94086]"
"('Description.java', 'org.junit.runner.Description', 'methodAndClassNamePatternGroupOrDefault', '([\\s\\S]*)\\((.*)\\)', 'testStringOfPearls_FilePath3(org.eclipse.jgit.revwalk.RevWalkPathFilter1Test)')","[5525, 64518]"
"('URIish.java', 'org.eclipse.jgit.transport.URIish', '<init>', '^([a-z][a-z0-9+-]+)://(?:(?:([^/:@]+)(?::([^\\\\/]+))?@)?((?:[^\\\\/:]+)|(?:\\[[0-9a-f:]+\\]))(?::(\\d+))?((?:/~(?:[^\\\\/]+))?[\\\\/]))?(.+)?$', 'http://lusr\\example:wtf@1.2.3.4:80//abc')",[131239]
"('URIish.java', 'org.eclipse.jgit.transport.URIish', '<init>', '^(file):([\\\\/](?![\\\\/])((?:[A-Za-z]:)?[\\\\/]?(?:(?:[^\\\\/]+[\\\\/]+)*[^\\\\/]+[\\\\/]*)))$', 'https://l usr\\example.com:wtf@example.com:1234//')",[132826]
"('URIish.java', 'org.eclipse.jgit.transport.URIish', '<init>', '^([a-z][a-z0-9+-]+)://(?:(?:([^/:@]+)(?::([^\\\\/]+))?@)?((?:[^\\\\/:]+)|(?:\\[[0-9a-f:]+\\]))(?::(\\d+))?((?:/~(?:[^\\\\/]+))?[\\\\/]))?(.+)?$', 'https://server/repos/project.git')","[117525, 117935, 119170, 120223]"
"('Description.java', 'org.junit.runner.Description', 'methodAndClassNamePatternGroupOrDefault', '([\\s\\S]*)\\((.*)\\)', 'testOnlyOption_f1_7_e(org.eclipse.jgit.api.CommitOnlyTest)')","[49158, 106626]"
"('Description.java', 'org.junit.runner.Description', 'methodAndClassNamePatternGroupOrDefault', '([\\s\\S]*)\\((.*)\\)', 'testTwoCommitsEmptyTree(org.eclipse.jgit.revwalk.ObjectWalkTest)')","[5817, 64804]"
"('Description.java', 'org.junit.runner.Description', 'methodAndClassNamePatternGroupOrDefault', '([\\s\\S]*)\\((.*)\\)', 'testFillToHighMarkMulitpleBlocks(org.eclipse.jgit.revwalk.RevCommitListTest)')","[7477, 66344]"
"('URIish.java', 'org.eclipse.jgit.transport.URIish', '<init>', '^([a-z][a-z0-9+-]+)://(?:(?:([^/:@]+)(?::([^\\\\/]+))?@)?((?:[^\\\\/:]+)|(?:\\[[0-9a-f:]+\\]))(?::(\\d+))?((?:/~(?:[^\\\\/]+))?[\\\\/]))?(.+)?$', 'https://me@[::1]:1234//')",[145729]
"('Description.java', 'org.junit.runner.Description', 'methodAndClassNamePatternGroupOrDefault', '([\\s\\S]*)\\((.*)\\)', 'testShouldBeRecursive_PathFilter(org.eclipse.jgit.treewalk.filter.NotTreeFilterTest)')","[31422, 89598]"
"('URIish.java', 'org.eclipse.jgit.transport.URIish', '<init>', '^(file):([\\\\/](?![\\\\/])((?:[A-Za-z]:)?[\\\\/]?(?:(?:[^\\\\/]+[\\\\/]+)*[^\\\\/]+[\\\\/]*)))$', 'ssh+git://l usr\\example.com@example.com/D:/x')","[152790, 152974]"
"('URIish.java', 'org.eclipse.jgit.transport.URIish', '<init>', '^([a-z][a-z0-9+-]+)://(?:(?:([^/:@]+)(?::([^\\\\/]+))?@)?((?:[^\\\\/:]+)|(?:\\[[0-9a-f:]+\\]))(?::(\\d+))?((?:/~(?:[^\\\\/]+))?[\\\\/]))?(.+)?$', 'http://l usr\\example.com@example.com:80//abc')",[143015]
"('Description.java', 'org.junit.runner.Description', 'methodAndClassNamePatternGroupOrDefault', '([\\s\\S]*)\\((.*)\\)', 'testParseLookupPath(org.eclipse.jgit.lib.RepositoryResolveTest)')","[27195, 85528]"
"('URIish.java', 'org.eclipse.jgit.transport.URIish', '<init>', '^([a-z][a-z0-9+-]+)://(?:(?:([^/:@]+)(?::([^\\\\/]+))?@)?((?:[^\\\\/:]+)|(?:\\[[0-9a-f:]+\\]))(?::(\\d+))?((?:/~(?:[^\\\\/]+))?[\\\\/]))?(.+)?$', 'ssh://me@example.com//')","[148305, 148489]"
"('URIish.java', 'org.eclipse.jgit.transport.URIish', '<init>', '^(file):([\\\\/](?![\\\\/])((?:[A-Za-z]:)?[\\\\/]?(?:(?:[^\\\\/]+[\\\\/]+)*[^\\\\/]+[\\\\/]*)))$', 'ssh://me@1.2.3.4:1234//')",[135402]
"('URIish.java', 'org.eclipse.jgit.transport.URIish', '<init>', '^(file):([\\\\/](?![\\\\/])((?:[A-Za-z]:)?[\\\\/]?(?:(?:[^\\\\/]+[\\\\/]+)*[^\\\\/]+[\\\\/]*)))$', 'ssh+git://me@1.2.3.4:1234/D:/x')",[138806]
"('URIish.java', 'org.eclipse.jgit.transport.URIish', '<init>', '^([a-z][a-z0-9+-]+)://(?:(?:([^/:@]+)(?::([^\\\\/]+))?@)?((?:[^\\\\/:]+)|(?:\\[[0-9a-f:]+\\]))(?::(\\d+))?((?:/~(?:[^\\\\/]+))?[\\\\/]))?(.+)?$', 'http://me@[::1]/D:\\x')","[155803, 155987]"
"('Description.java', 'org.junit.runner.Description', 'methodAndClassNamePatternGroupOrDefault', '([\\s\\S]*)\\((.*)\\)', 'testStandardFormat_SmallObject_CorruptZLibStream(org.eclipse.jgit.internal.storage.file.UnpackedObjectTest)')","[56877, 113996]"
"('Description.java', 'org.junit.runner.Description', 'methodAndClassNamePatternGroupOrDefault', '([\\s\\S]*)\\((.*)\\)', 'testParseFullIndexLine_WithMode(org.eclipse.jgit.patch.FileHeaderTest)')","[39299, 97034]"
"('URIish.java', 'org.eclipse.jgit.transport.URIish', '<init>', '^([a-z][a-z0-9+-]+)://(?:(?:([^/:@]+)(?::([^\\\\/]+))?@)?((?:[^\\\\/:]+)|(?:\\[[0-9a-f:]+\\]))(?::(\\d+))?((?:/~(?:[^\\\\/]+))?[\\\\/]))?(.+)?$', 'ssh://lusr\\example@[::1]:1234/D:/x')",[138093]
"('Description.java', 'org.junit.runner.Description', 'methodAndClassNamePatternGroupOrDefault', '([\\s\\S]*)\\((.*)\\)', 'testPackCommitsAndLooseOneWithPruneNowNoReflog(org.eclipse.jgit.internal.storage.file.GcReflogTest)')","[57375, 114458]"
"('Description.java', 'org.junit.runner.Description', 'methodAndClassNamePatternGroupOrDefault', '([\\s\\S]*)\\((.*)\\)', 'testDataAfterPackFooterSplitObjectRead(org.eclipse.jgit.transport.PackParserTest)')","[4380, 63418]"
"('URIish.java', 'org.eclipse.jgit.transport.URIish', '<init>', '^([a-z][a-z0-9+-]+)://(?:(?:([^/:@]+)(?::([^\\\\/]+))?@)?((?:[^\\\\/:]+)|(?:\\[[0-9a-f:]+\\]))(?::(\\d+))?((?:/~(?:[^\\\\/]+))?[\\\\/]))?(.+)?$', 'https://lusr\\example:wtf@[::1]:80/D:\\x')",[135011]
"('Description.java', 'org.junit.runner.Description', 'methodAndClassNamePatternGroupOrDefault', '([\\s\\S]*)\\((.*)\\)', 'testToString(org.eclipse.jgit.lib.ObjectIdRefTest)')","[20288, 78730]"
"('Description.java', 'org.junit.runner.Description', 'methodAndClassNamePatternGroupOrDefault', '([\\s\\S]*)\\((.*)\\)', 'fetchShouldAutoFollowTag(org.eclipse.jgit.api.FetchCommandTest)')","[51956, 109398]"
"('Description.java', 'org.junit.runner.Description', 'methodAndClassNamePatternGroupOrDefault', '([\\s\\S]*)\\((.*)\\)', 'testDeleteEmptyTreeOk(org.eclipse.jgit.util.FileUtilTest)')","[33679, 91644]"
"('Description.java', 'org.junit.runner.Description', 'methodAndClassNamePatternGroupOrDefault', '([\\s\\S]*)\\((.*)\\)', 'testAlnumGroupCase1(org.eclipse.jgit.fnmatch.FileNameMatcherTest)')","[19000, 77520]"
"('Description.java', 'org.junit.runner.Description', 'methodAndClassNamePatternGroupOrDefault', '([\\s\\S]*)\\((.*)\\)', 'testLooseDelete(org.eclipse.jgit.internal.storage.file.RefUpdateTest)')","[55835, 112984]"
"('Description.java', 'org.junit.runner.Description', 'methodAndClassNamePatternGroupOrDefault', '([\\s\\S]*)\\((.*)\\)', 'testFilter_NONE_And_MY_ALL(org.eclipse.jgit.revwalk.RevWalkFilterTest)')","[8368, 67158]"
"('URIish.java', 'org.eclipse.jgit.transport.URIish', '<init>', '^([a-z][a-z0-9+-]+)://(?:(?:([^/:@]+)(?::([^\\\\/]+))?@)?((?:[^\\\\/:]+)|(?:\\[[0-9a-f:]+\\]))(?::(\\d+))?((?:/~(?:[^\\\\/]+))?[\\\\/]))?(.+)?$', 'https://lusr\\example:wtf@1.2.3.4:80/D:\\x')",[134643]
"('Description.java', 'org.junit.runner.Description', 'methodAndClassNamePatternGroupOrDefault', '([\\s\\S]*)\\((.*)\\)', 'testFindOnEmpty(org.eclipse.jgit.dircache.DirCacheBasicTest)')","[11217, 69864]"
"('Description.java', 'org.junit.runner.Description', 'methodAndClassNamePatternGroupOrDefault', '([\\s\\S]*)\\((.*)\\)', 'testIteratorReturnedValues2(org.eclipse.jgit.internal.storage.file.PackIndexV2Test)')","[53593, 110894]"
"('Description.java', 'org.junit.runner.Description', 'methodAndClassNamePatternGroupOrDefault', '([\\s\\S]*)\\((.*)\\)', 'testPathsResetWithRef(org.eclipse.jgit.api.ResetCommandTest)')","[42690, 100268]"
"('URIish.java', 'org.eclipse.jgit.transport.URIish', '<init>', '^(file):([\\\\/](?![\\\\/])((?:[A-Za-z]:)?[\\\\/]?(?:(?:[^\\\\/]+[\\\\/]+)*[^\\\\/]+[\\\\/]*)))$', 'ssh+git://me:wtf@1.2.3.4:1234/D:\\x')",[125604]
"('Description.java', 'org.junit.runner.Description', 'methodAndClassNamePatternGroupOrDefault', '([\\s\\S]*)\\((.*)\\)', 'testAddExistingSingleFileTwice(org.eclipse.jgit.api.AddCommandTest)')","[50374, 107880]"
"('Description.java', 'org.junit.runner.Description', 'methodAndClassNamePatternGroupOrDefault', '([\\s\\S]*)\\((.*)\\)', 'resolvePreviousBranch(org.eclipse.jgit.lib.ReflogResolveTest)')","[27550, 85880]"
"('Description.java', 'org.junit.runner.Description', 'methodAndClassNamePatternGroupOrDefault', '([\\s\\S]*)\\((.*)\\)', 'shouldListDeletionBetweenTwoCommits(org.eclipse.jgit.diff.DiffEntryTest)')","[13833, 72306]"
"('URIish.java', 'org.eclipse.jgit.transport.URIish', '<init>', '^([a-z][a-z0-9+-]+)://(?:(?:([^/:@]+)(?::([^\\\\/]+))?@)?((?:[^\\\\/:]+)|(?:\\[[0-9a-f:]+\\]))(?::(\\d+))?((?:/~(?:[^\\\\/]+))?[\\\\/]))?(.+)?$', 'file:///tmp/jgit_test_6468569531057046805_tmp/tmp_9160806371775263841/.git/')",[201931]
"('URIish.java', 'org.eclipse.jgit.transport.URIish', '<init>', '^([a-z][a-z0-9+-]+)://(?:(?:([^/:@]+)(?::([^\\\\/]+))?@)?((?:[^\\\\/:]+)|(?:\\[[0-9a-f:]+\\]))(?::(\\d+))?((?:/~(?:[^\\\\/]+))?[\\\\/]))?(.+)?$', 'http://lusr\\example:wtf@example.com:80/D:/x')",[130917]
"('URIish.java', 'org.eclipse.jgit.transport.URIish', '<init>', '^([a-z][a-z0-9+-]+)://(?:(?:([^/:@]+)(?::([^\\\\/]+))?@)?((?:[^\\\\/:]+)|(?:\\[[0-9a-f:]+\\]))(?::(\\d+))?((?:/~(?:[^\\\\/]+))?[\\\\/]))?(.+)?$', 'https://l usr\\example.com@[::1]/D:/x')","[160173, 160357]"
"('Description.java', 'org.junit.runner.Description', 'methodAndClassNamePatternGroupOrDefault', '([\\s\\S]*)\\((.*)\\)', 'org.eclipse.jgit.lib.SymbolicRefTest')","[20349, 183843]"
"('Description.java', 'org.junit.runner.Description', 'methodAndClassNamePatternGroupOrDefault', '([\\s\\S]*)\\((.*)\\)', 'testUploadPack(org.eclipse.jgit.transport.RemoteConfigTest)')","[679, 59700]"
"('URIish.java', 'org.eclipse.jgit.transport.URIish', '<init>', '^(file):([\\\\/](?![\\\\/])((?:[A-Za-z]:)?[\\\\/]?(?:(?:[^\\\\/]+[\\\\/]+)*[^\\\\/]+[\\\\/]*)))$', 'http://l usr\\example.com:wtf@[::1]:80/D:/x')",[130526]
"('URIish.java', 'org.eclipse.jgit.transport.URIish', '<init>', '^([a-z][a-z0-9+-]+)://(?:(?:([^/:@]+)(?::([^\\\\/]+))?@)?((?:[^\\\\/:]+)|(?:\\[[0-9a-f:]+\\]))(?::(\\d+))?((?:/~(?:[^\\\\/]+))?[\\\\/]))?(.+)?$', 'git:///a/b/c//')",[178757]
"('Description.java', 'org.junit.runner.Description', 'methodAndClassNamePatternGroupOrDefault', '([\\s\\S]*)\\((.*)\\)', 'testNotEquals4(org.eclipse.jgit.diff.EditTest)')","[16020, 74418]"
"('Description.java', 'org.junit.runner.Description', 'methodAndClassNamePatternGroupOrDefault', '([\\s\\S]*)\\((.*)\\)', 'testTwoEntries_BackwardsTwo(org.eclipse.jgit.treewalk.CanonicalTreeParserTest)')","[30088, 88300]"
"('Description.java', 'org.junit.runner.Description', 'methodAndClassNamePatternGroupOrDefault', '([\\s\\S]*)\\((.*)\\)', 'noPushInsteadOf(org.eclipse.jgit.transport.RemoteConfigTest)')","[889, 59920]"
"('URIish.java', 'org.eclipse.jgit.transport.URIish', '<init>', '^([a-z][a-z0-9+-]+)://(?:(?:([^/:@]+)(?::([^\\\\/]+))?@)?((?:[^\\\\/:]+)|(?:\\[[0-9a-f:]+\\]))(?::(\\d+))?((?:/~(?:[^\\\\/]+))?[\\\\/]))?(.+)?$', 'http://lusr\\example:wtf@[::1]:80//')",[131561]
"('URIish.java', 'org.eclipse.jgit.transport.URIish', '<init>', '^([a-z][a-z0-9+-]+)://(?:(?:([^/:@]+)(?::([^\\\\/]+))?@)?((?:[^\\\\/:]+)|(?:\\[[0-9a-f:]+\\]))(?::(\\d+))?((?:/~(?:[^\\\\/]+))?[\\\\/]))?(.+)?$', 'ssh+git://lusr\\example:wtf@[::1]:80/D:\\x')",[128387]
"('URIish.java', 'org.eclipse.jgit.transport.URIish', '<init>', '^(file):([\\\\/](?![\\\\/])((?:[A-Za-z]:)?[\\\\/]?(?:(?:[^\\\\/]+[\\\\/]+)*[^\\\\/]+[\\\\/]*)))$', 'ssh://lusr\\example:wtf@example.com:80//')",[124178]
"('URIish.java', 'org.eclipse.jgit.transport.URIish', '<init>', '^(file):([\\\\/](?![\\\\/])((?:[A-Za-z]:)?[\\\\/]?(?:(?:[^\\\\/]+[\\\\/]+)*[^\\\\/]+[\\\\/]*)))$', 'ssh+git://example.com//')","[164842, 165026, 165946, 166130, 167050, 167234]"
"('Description.java', 'org.junit.runner.Description', 'methodAndClassNamePatternGroupOrDefault', '([\\s\\S]*)\\((.*)\\)', 'invalidWhenWildcardBeforeText(org.eclipse.jgit.transport.RefSpecTest)')","[3130, 62208]"
"('Description.java', 'org.junit.runner.Description', 'methodAndClassNamePatternGroupOrDefault', '([\\s\\S]*)\\((.*)\\)', 'testPullFastForward(org.eclipse.jgit.api.PullCommandWithRebaseTest)')","[42856, 100422]"
"('Description.java', 'org.junit.runner.Description', 'methodAndClassNamePatternGroupOrDefault', '([\\s\\S]*)\\((.*)\\)', 'testPackWithDuplicateBlob(org.eclipse.jgit.transport.PackParserTest)')","[4338, 63374]"
"('Description.java', 'org.junit.runner.Description', 'methodAndClassNamePatternGroupOrDefault', '([\\s\\S]*)\\((.*)\\)', 'testDeletionOnMasterConflict(org.eclipse.jgit.api.MergeCommandTest)')","[44341, 101918]"
"('Description.java', 'org.junit.runner.Description', 'methodAndClassNamePatternGroupOrDefault', '([\\s\\S]*)\\((.*)\\)', 'testInvalidTreeBadSorting1(org.eclipse.jgit.lib.ObjectCheckerTest)')","[25664, 83944]"
"('URIish.java', 'org.eclipse.jgit.transport.URIish', '<init>', '^([\\\\/]?((?:[A-Za-z]:)?[\\\\/]?(?:(?:[^\\\\/]+[\\\\/]+)*[^\\\\/]+[\\\\/]*)))$', '//.git')",[179171]
"('URIish.java', 'org.eclipse.jgit.transport.URIish', '<init>', '^([a-z][a-z0-9+-]+)://(?:(?:([^/:@]+)(?::([^\\\\/]+))?@)?((?:[^\\\\/:]+)|(?:\\[[0-9a-f:]+\\]))(?::(\\d+))?((?:/~(?:[^\\\\/]+))?[\\\\/]))?(.+)?$', 'https://me:wtf@1.2.3.4:80//abc')",[132343]
"('Description.java', 'org.junit.runner.Description', 'methodAndClassNamePatternGroupOrDefault', '([\\s\\S]*)\\((.*)\\)', 'testTrackingRefUpdateEnabled(org.eclipse.jgit.transport.PushProcessTest)')","[5006, 64034]"
"('URIish.java', 'org.eclipse.jgit.transport.URIish', '<init>', '^([a-z][a-z0-9+-]+)://(?:(?:([^/:@]+)(?::([^\\\\/]+))?@)?((?:[^\\\\/:]+)|(?:\\[[0-9a-f:]+\\]))(?::(\\d+))?((?:/~(?:[^\\\\/]+))?[\\\\/]))?(.+)?$', 'http://[::1]/D:\\x')","[169051, 169235, 170155, 170339, 171259, 171443]"
"('Description.java', 'org.junit.runner.Description', 'methodAndClassNamePatternGroupOrDefault', '([\\s\\S]*)\\((.*)\\)', 'testOnlyOption_f1_5_b(org.eclipse.jgit.api.CommitOnlyTest)')","[48885, 106340]"
"('Description.java', 'org.junit.runner.Description', 'methodAndClassNamePatternGroupOrDefault', '([\\s\\S]*)\\((.*)\\)', 'testFileCommittedModifiedCommittedComparedWithInitialCommit(org.eclipse.jgit.treewalk.filter.IndexDiffFilterTest)')","[30674, 88894]"
"('Description.java', 'org.junit.runner.Description', 'methodAndClassNamePatternGroupOrDefault', '([\\s\\S]*)\\((.*)\\)', 'org.eclipse.jgit.notes.LeafBucketTest')","[40213, 193717]"
"('URIish.java', 'org.eclipse.jgit.transport.URIish', '<init>', '^(file):([\\\\/](?![\\\\/])((?:[A-Za-z]:)?[\\\\/]?(?:(?:[^\\\\/]+[\\\\/]+)*[^\\\\/]+[\\\\/]*)))$', 'ssh+git://l usr\\example.com:wtf@example.com:80/D:/x')",[126478]
"('URIish.java', 'org.eclipse.jgit.transport.URIish', '<init>', '^(file):([\\\\/](?![\\\\/])((?:[A-Za-z]:)?[\\\\/]?(?:(?:[^\\\\/]+[\\\\/]+)*[^\\\\/]+[\\\\/]*)))$', 'git:///.git')",[121188]
"('Description.java', 'org.junit.runner.Description', 'methodAndClassNamePatternGroupOrDefault', '([\\s\\S]*)\\((.*)\\)', 'testUsingUnknownTreeFails(org.eclipse.jgit.transport.ReceivePackAdvertiseRefsHookTest)')","[492, 59524]"
"('URIish.java', 'org.eclipse.jgit.transport.URIish', '<init>', '^(file):([\\\\/](?![\\\\/])((?:[A-Za-z]:)?[\\\\/]?(?:(?:[^\\\\/]+[\\\\/]+)*[^\\\\/]+[\\\\/]*)))$', 'in-memory://')","[180179, 180231, 180283, 180335]"
"('Description.java', 'org.junit.runner.Description', 'methodAndClassNamePatternGroupOrDefault', '([\\s\\S]*)\\((.*)\\)', 'testError_GitBinaryNoForwardHunk(org.eclipse.jgit.patch.PatchErrorTest)')","[39135, 96902]"
"('ChangeIdUtil.java', 'org.eclipse.jgit.util.ChangeIdUtil', 'indexOfChangeId', '(^Change-Id: *I[a-f0-9]{40}$)', 'fix-a-widget: this thing')",[190685]
"('Description.java', 'org.junit.runner.Description', 'methodAndClassNamePatternGroupOrDefault', '([\\s\\S]*)\\((.*)\\)', 'indexContentConflict(org.eclipse.jgit.api.StashApplyCommandTest)')","[51248, 108716]"
"('Description.java', 'org.junit.runner.Description', 'methodAndClassNamePatternGroupOrDefault', '([\\s\\S]*)\\((.*)\\)', 'testInvalidTagNoObject3(org.eclipse.jgit.lib.ObjectCheckerTest)')","[26462, 84780]"
"('Description.java', 'org.junit.runner.Description', 'methodAndClassNamePatternGroupOrDefault', '([\\s\\S]*)\\((.*)\\)', 'testNoDF_NoGap(org.eclipse.jgit.treewalk.NameConflictTreeWalkTest)')","[29321, 87596]"
"('Description.java', 'org.junit.runner.Description', 'methodAndClassNamePatternGroupOrDefault', '([\\s\\S]*)\\((.*)\\)', 'testFanoutAndLeafWithoutConflict(org.eclipse.jgit.notes.NoteMapMergerTest)')","[41173, 98838]"
"('Description.java', 'org.junit.runner.Description', 'methodAndClassNamePatternGroupOrDefault', '([\\s\\S]*)\\((.*)\\)', 'testRecursiveTreeWalk(org.eclipse.jgit.treewalk.filter.IndexDiffFilterTest)')","[30170, 88366]"
"('Description.java', 'org.junit.runner.Description', 'methodAndClassNamePatternGroupOrDefault', '([\\s\\S]*)\\((.*)\\)', 'testOneCommitOneTreeTwoBlob(org.eclipse.jgit.revwalk.ObjectWalkTest)')","[5691, 64672]"
"('Description.java', 'org.junit.runner.Description', 'methodAndClassNamePatternGroupOrDefault', '([\\s\\S]*)\\((.*)\\)', 'testTimeout_readBuffer_Success1(org.eclipse.jgit.util.io.TimeoutInputStreamTest)')","[32790, 90852]"
"('URIish.java', 'org.eclipse.jgit.transport.URIish', '<init>', '^(file):([\\\\/](?![\\\\/])((?:[A-Za-z]:)?[\\\\/]?(?:(?:[^\\\\/]+[\\\\/]+)*[^\\\\/]+[\\\\/]*)))$', 'ssh+git://l usr\\example.com@1.2.3.4//abc')","[153112, 153296]"
"('Description.java', 'org.junit.runner.Description', 'methodAndClassNamePatternGroupOrDefault', '([\\s\\S]*)\\((.*)\\)', 'testSort_TOPO_REVERSE(org.eclipse.jgit.revwalk.RevWalkSortTest)')","[9181, 67950]"
"('URIish.java', 'org.eclipse.jgit.transport.URIish', '<init>', '^([a-z][a-z0-9+-]+)://(?:(?:([^/:@]+)(?::([^\\\\/]+))?@)?((?:[^\\\\/:]+)|(?:\\[[0-9a-f:]+\\]))(?::(\\d+))?((?:/~(?:[^\\\\/]+))?[\\\\/]))?(.+)?$', 'ssh+git://1.2.3.4/D:\\x')","[165371, 165555, 166475, 166659, 167579, 167763]"
"('Description.java', 'org.junit.runner.Description', 'methodAndClassNamePatternGroupOrDefault', '([\\s\\S]*)\\((.*)\\)', 'testGitProtoUnixPort(org.eclipse.jgit.transport.URIishTest)')","[1706, 60756]"
"('Description.java', 'org.junit.runner.Description', 'methodAndClassNamePatternGroupOrDefault', '([\\s\\S]*)\\((.*)\\)', 'testALL_IncludesAnything(org.eclipse.jgit.treewalk.filter.TreeFilterTest)')","[31132, 89334]"
"('Description.java', 'org.junit.runner.Description', 'methodAndClassNamePatternGroupOrDefault', '([\\s\\S]*)\\((.*)\\)', 'testValidEmptyTree(org.eclipse.jgit.lib.ObjectCheckerTest)')","[26315, 84626]"
"('Description.java', 'org.junit.runner.Description', 'methodAndClassNamePatternGroupOrDefault', '([\\s\\S]*)\\((.*)\\)', 'testGetRefs_DiscoversDeletedLoose4(org.eclipse.jgit.internal.storage.file.RefDirectoryTest)')","[58690, 115756]"
"('Description.java', 'org.junit.runner.Description', 'methodAndClassNamePatternGroupOrDefault', '([\\s\\S]*)\\((.*)\\)', 'testValidTagHasNoTaggerHeader(org.eclipse.jgit.lib.ObjectCheckerTest)')","[26651, 84978]"
"('Description.java', 'org.junit.runner.Description', 'methodAndClassNamePatternGroupOrDefault', '([\\s\\S]*)\\((.*)\\)', 'testFillToHighMark4(org.eclipse.jgit.revwalk.RevCommitListTest)')","[7561, 66432]"
"('Description.java', 'org.junit.runner.Description', 'methodAndClassNamePatternGroupOrDefault', '([\\s\\S]*)\\((.*)\\)', 'testMerge_HeadMaster(org.eclipse.jgit.util.RefMapTest)')","[37076, 94944]"
"('URIish.java', 'org.eclipse.jgit.transport.URIish', '<init>', '^([a-z][a-z0-9+-]+)://(?:(?:([^/:@]+)(?::([^\\\\/]+))?@)?((?:[^\\\\/:]+)|(?:\\[[0-9a-f:]+\\]))(?::(\\d+))?((?:/~(?:[^\\\\/]+))?[\\\\/]))?(.+)?$', 'ssh+git://lusr\\example@example.com:80//')",[140761]
"('Description.java', 'org.junit.runner.Description', 'methodAndClassNamePatternGroupOrDefault', '([\\s\\S]*)\\((.*)\\)', 'dropBoundaryStashedCommits(org.eclipse.jgit.api.StashDropCommandTest)')","[52101, 109530]"
"('URIish.java', 'org.eclipse.jgit.transport.URIish', '<init>', '^(file):([\\\\/](?![\\\\/])((?:[A-Za-z]:)?[\\\\/]?(?:(?:[^\\\\/]+[\\\\/]+)*[^\\\\/]+[\\\\/]*)))$', 'ssh://l usr\\example.com@[::1]/D:\\x')","[150260, 150444]"
"('Description.java', 'org.junit.runner.Description', 'methodAndClassNamePatternGroupOrDefault', '([\\s\\S]*)\\((.*)\\)', 'testOnlyOption_f1_11_c(org.eclipse.jgit.api.CommitOnlyTest)')","[49851, 107352]"
"('Description.java', 'org.junit.runner.Description', 'methodAndClassNamePatternGroupOrDefault', '([\\s\\S]*)\\((.*)\\)', 'testExactRename_DifferentObjects(org.eclipse.jgit.diff.RenameDetectorTest)')","[13003, 71536]"
"('URIish.java', 'org.eclipse.jgit.transport.URIish', '<init>', '^(file):([\\\\/](?![\\\\/])((?:[A-Za-z]:)?[\\\\/]?(?:(?:[^\\\\/]+[\\\\/]+)*[^\\\\/]+[\\\\/]*)))$', 'ssh://l usr\\example.com:wtf@1.2.3.4:80//abc')",[123488]
"('Description.java', 'org.junit.runner.Description', 'methodAndClassNamePatternGroupOrDefault', '([\\s\\S]*)\\((.*)\\)', 'testPrintGroupCase4(org.eclipse.jgit.fnmatch.FileNameMatcherTest)')","[18244, 76728]"
"('URIish.java', 'org.eclipse.jgit.transport.URIish', '<init>', '^([a-z][a-z0-9+-]+)://(?:(?:([^/:@]+)(?::([^\\\\/]+))?@)?((?:[^\\\\/:]+)|(?:\\[[0-9a-f:]+\\]))(?::(\\d+))?((?:/~(?:[^\\\\/]+))?[\\\\/]))?(.+)?$', 'https://lusr\\example@[::1]:80//abc')",[148167]
"('Description.java', 'org.junit.runner.Description', 'methodAndClassNamePatternGroupOrDefault', '([\\s\\S]*)\\((.*)\\)', 'testReadString_End(org.eclipse.jgit.transport.PacketLineInTest)')","[3443, 62516]"
"('Description.java', 'org.junit.runner.Description', 'methodAndClassNamePatternGroupOrDefault', '([\\s\\S]*)\\((.*)\\)', 'testDequote_Empty1(org.eclipse.jgit.util.QuotedStringBourneUserPathStyleTest)')","[38576, 96396]"
"('Description.java', 'org.junit.runner.Description', 'methodAndClassNamePatternGroupOrDefault', '([\\s\\S]*)\\((.*)\\)', 'testRemoveCached(org.eclipse.jgit.api.RmCommandTest)')","[44694, 102248]"
"('Description.java', 'org.junit.runner.Description', 'methodAndClassNamePatternGroupOrDefault', '([\\s\\S]*)\\((.*)\\)', 'testEqualsIgnoreCase2(org.eclipse.jgit.util.StringUtilsTest)')","[33370, 91380]"
"('URIish.java', 'org.eclipse.jgit.transport.URIish', '<init>', '^(file):([\\\\/](?![\\\\/])((?:[A-Za-z]:)?[\\\\/]?(?:(?:[^\\\\/]+[\\\\/]+)*[^\\\\/]+[\\\\/]*)))$', 'ssh://l usr\\example.com:wtf@example.com:80/D:\\x')",[123212]
"('URIish.java', 'org.eclipse.jgit.transport.URIish', '<init>', '^([a-z][a-z0-9+-]+)://(?:(?:([^/:@]+)(?::([^\\\\/]+))?@)?((?:[^\\\\/:]+)|(?:\\[[0-9a-f:]+\\]))(?::(\\d+))?((?:/~(?:[^\\\\/]+))?[\\\\/]))?(.+)?$', 'git://abc.git')",[121740]
"('URIish.java', 'org.eclipse.jgit.transport.URIish', '<init>', '^(file):([\\\\/](?![\\\\/])((?:[A-Za-z]:)?[\\\\/]?(?:(?:[^\\\\/]+[\\\\/]+)*[^\\\\/]+[\\\\/]*)))$', 'http://lusr\\example:wtf@1.2.3.4:80/D:/x')",[131262]
"('URIish.java', 'org.eclipse.jgit.transport.URIish', '<init>', '^(file):([\\\\/](?![\\\\/])((?:[A-Za-z]:)?[\\\\/]?(?:(?:[^\\\\/]+[\\\\/]+)*[^\\\\/]+[\\\\/]*)))$', 'https://l usr\\example.com:wtf@1.2.3.4:80//')",[133378]
"('Description.java', 'org.junit.runner.Description', 'methodAndClassNamePatternGroupOrDefault', '([\\s\\S]*)\\((.*)\\)', 'testSetFive_ReverseOrder(org.eclipse.jgit.notes.LeafBucketTest)')","[40234, 97914]"
"('Description.java', 'org.junit.runner.Description', 'methodAndClassNamePatternGroupOrDefault', '([\\s\\S]*)\\((.*)\\)', 'testObjectId_objectid_implicit_firstparent(org.eclipse.jgit.lib.RepositoryResolveTest)')","[27258, 85594]"
"('Description.java', 'org.junit.runner.Description', 'methodAndClassNamePatternGroupOrDefault', '([\\s\\S]*)\\((.*)\\)', 'testUpdateUpToDate(org.eclipse.jgit.transport.PushProcessTest)')","[4859, 63880]"
"('URIish.java', 'org.eclipse.jgit.transport.URIish', '<init>', '^(file):([\\\\/](?![\\\\/])((?:[A-Za-z]:)?[\\\\/]?(?:(?:[^\\\\/]+[\\\\/]+)*[^\\\\/]+[\\\\/]*)))$', 'ssh+git://l usr\\example.com:wtf@example.com:1234/D:/x')",[126294]
"('Description.java', 'org.junit.runner.Description', 'methodAndClassNamePatternGroupOrDefault', '([\\s\\S]*)\\((.*)\\)', 'testInsertTie(org.eclipse.jgit.revwalk.DateRevQueueTest)')","[7933, 66762]"
"('Description.java', 'org.junit.runner.Description', 'methodAndClassNamePatternGroupOrDefault', '([\\s\\S]*)\\((.*)\\)', 'testUpperGroupCase5(org.eclipse.jgit.fnmatch.FileNameMatcherTest)')","[18496, 76992]"
"('Description.java', 'org.junit.runner.Description', 'methodAndClassNamePatternGroupOrDefault', '([\\s\\S]*)\\((.*)\\)', 'testStopOnConflictAndContinue(org.eclipse.jgit.api.RebaseCommandTest)')","[45780, 103326]"
"('URIish.java', 'org.eclipse.jgit.transport.URIish', '<init>', '^([a-z][a-z0-9+-]+)://(?:(?:([^/:@]+)(?::([^\\\\/]+))?@)?((?:[^\\\\/:]+)|(?:\\[[0-9a-f:]+\\]))(?::(\\d+))?((?:/~(?:[^\\\\/]+))?[\\\\/]))?(.+)?$', 'ssh://l usr\\example.com@[::1]//abc')","[150191, 150375]"
"('Description.java', 'org.junit.runner.Description', 'methodAndClassNamePatternGroupOrDefault', '([\\s\\S]*)\\((.*)\\)', 'testConfigureCache_PackedGitWindowSize_4097(org.eclipse.jgit.internal.storage.file.WindowCacheReconfigureTest)')","[53366, 110696]"
"('URIish.java', 'org.eclipse.jgit.transport.URIish', '<init>', '^([a-z][a-z0-9+-]+)://(?:(?:([^/:@]+)(?::([^\\\\/]+))?@)?((?:[^\\\\/:]+)|(?:\\[[0-9a-f:]+\\]))(?::(\\d+))?((?:/~(?:[^\\\\/]+))?[\\\\/]))?(.+)?$', 'file:///tmp/jgit_test_230119275613446060_tmp/tmp_471250231823073474')","[197877, 197939, 197991, 198053, 198105, 198167]"
"('Description.java', 'org.junit.runner.Description', 'methodAndClassNamePatternGroupOrDefault', '([\\s\\S]*)\\((.*)\\)', 'testFindRemoteRefUpdatesTrackingRef(org.eclipse.jgit.transport.TransportTest)')","[4046, 63088]"
"('URIish.java', 'org.eclipse.jgit.transport.URIish', '<init>', '^([a-z][a-z0-9+-]+)://(?:(?:([^/:@]+)(?::([^\\\\/]+))?@)?((?:[^\\\\/:]+)|(?:\\[[0-9a-f:]+\\]))(?::(\\d+))?((?:/~(?:[^\\\\/]+))?[\\\\/]))?(.+)?$', 'http://lusr\\example@example.com:1234/D:/x')",[143981]
"('Description.java', 'org.junit.runner.Description', 'methodAndClassNamePatternGroupOrDefault', '([\\s\\S]*)\\((.*)\\)', 'testTwoEntries_ForwardOneAtATime(org.eclipse.jgit.treewalk.CanonicalTreeParserTest)')","[29920, 88124]"
"('URIish.java', 'org.eclipse.jgit.transport.URIish', '<init>', '^(file):([\\\\/](?![\\\\/])((?:[A-Za-z]:)?[\\\\/]?(?:(?:[^\\\\/]+[\\\\/]+)*[^\\\\/]+[\\\\/]*)))$', 'http://lusr\\example:wtf@example.com:80/D:\\x')",[130940]
"('URIish.java', 'org.eclipse.jgit.transport.URIish', '<init>', '^(file):([\\\\/](?![\\\\/])((?:[A-Za-z]:)?[\\\\/]?(?:(?:[^\\\\/]+[\\\\/]+)*[^\\\\/]+[\\\\/]*)))$', 'https://l usr\\example.com:wtf@[::1]:80/D:/x')",[133838]
"('Description.java', 'org.junit.runner.Description', 'methodAndClassNamePatternGroupOrDefault', '([\\s\\S]*)\\((.*)\\)', 'org.eclipse.jgit.util.TemporaryBufferTest')","[34410, 186802]"
"('URIish.java', 'org.eclipse.jgit.transport.URIish', '<init>', '^(file):([\\\\/](?![\\\\/])((?:[A-Za-z]:)?[\\\\/]?(?:(?:[^\\\\/]+[\\\\/]+)*[^\\\\/]+[\\\\/]*)))$', 'ssh://l usr\\example.com@[::1]:80//abc')",[137104]
"('Description.java', 'org.junit.runner.Description', 'methodAndClassNamePatternGroupOrDefault', '([\\s\\S]*)\\((.*)\\)', 'testType_Insert(org.eclipse.jgit.diff.EditTest)')","[15936, 74330]"
"('URIish.java', 'org.eclipse.jgit.transport.URIish', '<init>', '^([a-z][a-z0-9+-]+)://(?:(?:([^/:@]+)(?::([^\\\\/]+))?@)?((?:[^\\\\/:]+)|(?:\\[[0-9a-f:]+\\]))(?::(\\d+))?((?:/~(?:[^\\\\/]+))?[\\\\/]))?(.+)?$', 'ssh://l usr\\example.com:wtf@1.2.3.4:80//')",[123465]
"('Description.java', 'org.junit.runner.Description', 'methodAndClassNamePatternGroupOrDefault', '([\\s\\S]*)\\((.*)\\)', 'testAddIgnoredFile(org.eclipse.jgit.api.AddCommandTest)')","[50689, 108210]"
"('URIish.java', 'org.eclipse.jgit.transport.URIish', '<init>', '^([a-z][a-z0-9+-]+)://(?:(?:([^/:@]+)(?::([^\\\\/]+))?@)?((?:[^\\\\/:]+)|(?:\\[[0-9a-f:]+\\]))(?::(\\d+))?((?:/~(?:[^\\\\/]+))?[\\\\/]))?(.+)?$', 'http://lusr\\example@example.com//abc')","[157183, 157367]"
"('URIish.java', 'org.eclipse.jgit.transport.URIish', '<init>', '^([a-z][a-z0-9+-]+)://(?:(?:([^/:@]+)(?::([^\\\\/]+))?@)?((?:[^\\\\/:]+)|(?:\\[[0-9a-f:]+\\]))(?::(\\d+))?((?:/~(?:[^\\\\/]+))?[\\\\/]))?(.+)?$', 'http://lusr\\example@1.2.3.4//abc')","[157551, 157735]"
"('Description.java', 'org.junit.runner.Description', 'methodAndClassNamePatternGroupOrDefault', '([\\s\\S]*)\\((.*)\\)', 'testDeleteNotEmptyTreeNotOk(org.eclipse.jgit.util.FileUtilTest)')","[33700, 91666]"
"('Description.java', 'org.junit.runner.Description', 'methodAndClassNamePatternGroupOrDefault', '([\\s\\S]*)\\((.*)\\)', 'testSignedOffBy_OneUserWithLF(org.eclipse.jgit.revwalk.FooterLineTest)')","[6063, 65002]"
"('URIish.java', 'org.eclipse.jgit.transport.URIish', '<init>', '^(file):([\\\\/](?![\\\\/])((?:[A-Za-z]:)?[\\\\/]?(?:(?:[^\\\\/]+[\\\\/]+)*[^\\\\/]+[\\\\/]*)))$', '/tmp/jgit_test_4163267304466129697_tmp/tmp_7112159680923869662.git')","[117013, 117139]"
"('Description.java', 'org.junit.runner.Description', 'methodAndClassNamePatternGroupOrDefault', '([\\s\\S]*)\\((.*)\\)', 'testEdit_DuplicateAButCommonUniqueInB(org.eclipse.jgit.diff.MyersDiffTest)')","[14520, 72966]"
"('URIish.java', 'org.eclipse.jgit.transport.URIish', '<init>', '^([a-z][a-z0-9+-]+)://(?:(?:([^/:@]+)(?::([^\\\\/]+))?@)?((?:[^\\\\/:]+)|(?:\\[[0-9a-f:]+\\]))(?::(\\d+))?((?:/~(?:[^\\\\/]+))?[\\\\/]))?(.+)?$', 'ssh+git://l usr\\example.com:wtf@1.2.3.4:80/D:/x')",[126869]
"('URIish.java', 'org.eclipse.jgit.transport.URIish', '<init>', '^([a-z][a-z0-9+-]+)://(?:(?:([^/:@]+)(?::([^\\\\/]+))?@)?((?:[^\\\\/:]+)|(?:\\[[0-9a-f:]+\\]))(?::(\\d+))?((?:/~(?:[^\\\\/]+))?[\\\\/]))?(.+)?$', 'ssh+git://l usr\\example.com@1.2.3.4:1234//abc')",[139887]
"('Description.java', 'org.junit.runner.Description', 'methodAndClassNamePatternGroupOrDefault', '([\\s\\S]*)\\((.*)\\)', 'workingDirectoryDeleteIndexAdd(org.eclipse.jgit.api.StashApplyCommandTest)')","[51332, 108804]"
"('Description.java', 'org.junit.runner.Description', 'methodAndClassNamePatternGroupOrDefault', '([\\s\\S]*)\\((.*)\\)', 'testInitialize_TogglePostOrder(org.eclipse.jgit.treewalk.PostOrderTreeWalkTest)')","[29527, 87772]"
"('Description.java', 'org.junit.runner.Description', 'methodAndClassNamePatternGroupOrDefault', '([\\s\\S]*)\\((.*)\\)', 'testStopOnConflictFileCreationAndDeletion(org.eclipse.jgit.api.RebaseCommandTest)')","[45024, 102534]"
"('Description.java', 'org.junit.runner.Description', 'methodAndClassNamePatternGroupOrDefault', '([\\s\\S]*)\\((.*)\\)', 'testRevert(org.eclipse.jgit.merge.CherryPickTest)')","[11156, 69820]"
"('Description.java', 'org.junit.runner.Description', 'methodAndClassNamePatternGroupOrDefault', '([\\s\\S]*)\\((.*)\\)', 'testMaliciousAbsoluteUNCPathWindows1OnUnix(org.eclipse.jgit.lib.DirCacheCheckoutMaliciousPathTest)')","[21076, 79456]"
"('URIish.java', 'org.eclipse.jgit.transport.URIish', '<init>', '^(file):([\\\\/](?![\\\\/])((?:[A-Za-z]:)?[\\\\/]?(?:(?:[^\\\\/]+[\\\\/]+)*[^\\\\/]+[\\\\/]*)))$', 'ssh+git://lusr\\example@example.com/D:/x')","[153894, 154078]"
"('Description.java', 'org.junit.runner.Description', 'methodAndClassNamePatternGroupOrDefault', '([\\s\\S]*)\\((.*)\\)', 'testReadTwoLine(org.eclipse.jgit.internal.storage.file.ReflogReaderTest)')","[59024, 116086]"
"('URIish.java', 'org.eclipse.jgit.transport.URIish', '<init>', '^([a-z][a-z0-9+-]+)://(?:(?:([^/:@]+)(?::([^\\\\/]+))?@)?((?:[^\\\\/:]+)|(?:\\[[0-9a-f:]+\\]))(?::(\\d+))?((?:/~(?:[^\\\\/]+))?[\\\\/]))?(.+)?$', 'ssh://me:wtf@1.2.3.4:80/D:\\x')",[122499]
"('Description.java', 'org.junit.runner.Description', 'methodAndClassNamePatternGroupOrDefault', '([\\s\\S]*)\\((.*)\\)', 'testUnsupportedRequiredExtension(org.eclipse.jgit.dircache.DirCacheCGitCompatabilityTest)')","[11467, 70106]"
"('URIish.java', 'org.eclipse.jgit.transport.URIish', '<init>', '^([a-z][a-z0-9+-]+)://(?:(?:([^/:@]+)(?::([^\\\\/]+))?@)?((?:[^\\\\/:]+)|(?:\\[[0-9a-f:]+\\]))(?::(\\d+))?((?:/~(?:[^\\\\/]+))?[\\\\/]))?(.+)?$', 'ssh://me:wtf@example.com:1234//abc')",[121855]
"('URIish.java', 'org.eclipse.jgit.transport.URIish', '<init>', '^(file):([\\\\/](?![\\\\/])((?:[A-Za-z]:)?[\\\\/]?(?:(?:[^\\\\/]+[\\\\/]+)*[^\\\\/]+[\\\\/]*)))$', '/tmp/jgit_test_3702623628615032288_tmp/tmp_6188209109110356895')","[200922, 201047, 201193]"
"('URIish.java', 'org.eclipse.jgit.transport.URIish', '<init>', '^(file):([\\\\/](?![\\\\/])((?:[A-Za-z]:)?[\\\\/]?(?:(?:[^\\\\/]+[\\\\/]+)*[^\\\\/]+[\\\\/]*)))$', 'https://1.2.3.4/D:\\x')","[171972, 172156, 173076, 173260, 174180, 174364]"
"('URIish.java', 'org.eclipse.jgit.transport.URIish', '<init>', '^([a-z][a-z0-9+-]+)://(?:(?:([^/:@]+)(?::([^\\\\/]+))?@)?((?:[^\\\\/:]+)|(?:\\[[0-9a-f:]+\\]))(?::(\\d+))?((?:/~(?:[^\\\\/]+))?[\\\\/]))?(.+)?$', 'http://l usr\\example.com@1.2.3.4/D:/x')","[156493, 156677]"
"('Description.java', 'org.junit.runner.Description', 'methodAndClassNamePatternGroupOrDefault', '([\\s\\S]*)\\((.*)\\)', 'testConfigureCache_PackedGitWindowSizeAbovePackedGitLimit(org.eclipse.jgit.internal.storage.file.WindowCacheReconfigureTest)')","[53282, 110608]"
"('Description.java', 'org.junit.runner.Description', 'methodAndClassNamePatternGroupOrDefault', '([\\s\\S]*)\\((.*)\\)', 'org.eclipse.jgit.util.RefListTest')","[34847, 186856]"
"('URIish.java', 'org.eclipse.jgit.transport.URIish', '<init>', '^([a-z][a-z0-9+-]+)://(?:(?:([^/:@]+)(?::([^\\\\/]+))?@)?((?:[^\\\\/:]+)|(?:\\[[0-9a-f:]+\\]))(?::(\\d+))?((?:/~(?:[^\\\\/]+))?[\\\\/]))?(.+)?$', 'ssh://l usr\\example.com:wtf@example.com:80//')",[123097]
"('Description.java', 'org.junit.runner.Description', 'methodAndClassNamePatternGroupOrDefault', '([\\s\\S]*)\\((.*)\\)', 'testLimitObjectSize_Length130InsertFails(org.eclipse.jgit.internal.storage.pack.DeltaIndexTest)')","[52807, 110190]"
"('URIish.java', 'org.eclipse.jgit.transport.URIish', '<init>', '^([a-z][a-z0-9+-]+)://(?:(?:([^/:@]+)(?::([^\\\\/]+))?@)?((?:[^\\\\/:]+)|(?:\\[[0-9a-f:]+\\]))(?::(\\d+))?((?:/~(?:[^\\\\/]+))?[\\\\/]))?(.+)?$', 'ssh+git://me:wtf@example.com:1234//abc')",[125167]
"('URIish.java', 'org.eclipse.jgit.transport.URIish', '<init>', '^(file):([\\\\/](?![\\\\/])((?:[A-Za-z]:)?[\\\\/]?(?:(?:[^\\\\/]+[\\\\/]+)*[^\\\\/]+[\\\\/]*)))$', 'ssh+git://me@example.com/D:/x')","[151686, 151870]"
"('URIish.java', 'org.eclipse.jgit.transport.URIish', '<init>', '^([a-z][a-z0-9+-]+)://(?:(?:([^/:@]+)(?::([^\\\\/]+))?@)?((?:[^\\\\/:]+)|(?:\\[[0-9a-f:]+\\]))(?::(\\d+))?((?:/~(?:[^\\\\/]+))?[\\\\/]))?(.+)?$', 'http://me:wtf@1.2.3.4:80//abc')",[129031]
"('URIish.java', 'org.eclipse.jgit.transport.URIish', '<init>', '^([a-z][a-z0-9+-]+)://(?:(?:([^/:@]+)(?::([^\\\\/]+))?@)?((?:[^\\\\/:]+)|(?:\\[[0-9a-f:]+\\]))(?::(\\d+))?((?:/~(?:[^\\\\/]+))?[\\\\/]))?(.+)?$', 'https://lusr\\example@1.2.3.4//')","[160817, 161001]"
"('Description.java', 'org.junit.runner.Description', 'methodAndClassNamePatternGroupOrDefault', '([\\s\\S]*)\\((.*)\\)', 'deleteBranch_historyPruned(org.eclipse.jgit.internal.storage.file.GcBranchPrunedTest)')","[59106, 116152]"
"('QuotedString.java', 'org.eclipse.jgit.util.QuotedString$BourneUserPathStyle', 'quote', '^~[A-Za-z0-9_-]+$', 'a!b')","[193317, 193342]"
"('Description.java', 'org.junit.runner.Description', 'methodAndClassNamePatternGroupOrDefault', '([\\s\\S]*)\\((.*)\\)', 'testGetRefs_DiscoversNewLoose1(org.eclipse.jgit.internal.storage.file.RefDirectoryTest)')","[58774, 115844]"
"('URIish.java', 'org.eclipse.jgit.transport.URIish', '<init>', '^([a-z][a-z0-9+-]+)://(?:(?:([^/:@]+)(?::([^\\\\/]+))?@)?((?:[^\\\\/:]+)|(?:\\[[0-9a-f:]+\\]))(?::(\\d+))?((?:/~(?:[^\\\\/]+))?[\\\\/]))?(.+)?$', 'example.com:some/p ath')","[121073, 121142]"
"('Description.java', 'org.junit.runner.Description', 'methodAndClassNamePatternGroupOrDefault', '([\\s\\S]*)\\((.*)\\)', 'unstashNoHead(org.eclipse.jgit.api.StashApplyCommandTest)')","[51164, 108628]"
"('URIish.java', 'org.eclipse.jgit.transport.URIish', '<init>', '^(?:([^/:@]+)(?::([^\\\\/]+))?@)?((?:[^\\\\/:]+)|(?:\\[[0-9a-f:]+\\])):((?:(?:/~(?:[^\\\\/]+))[\\\\/])?(?:(?:[^\\\\/]+[\\\\/]+)*[^\\\\/]+[\\\\/]*))$', '/tmp/jgit_test_936098334176453163_tmp/tmp_2532274317419163208/.git')","[205929, 206071]"
"('Description.java', 'org.junit.runner.Description', 'methodAndClassNamePatternGroupOrDefault', '([\\s\\S]*)\\((.*)\\)', 'testConflicting(org.eclipse.jgit.lib.IndexDiffTest)')","[20807, 79214]"
"('Description.java', 'org.junit.runner.Description', 'methodAndClassNamePatternGroupOrDefault', '([\\s\\S]*)\\((.*)\\)', 'testMaliciousWindowsADS(org.eclipse.jgit.lib.DirCacheCheckoutMaliciousPathTest)')","[21601, 80006]"
"('URIish.java', 'org.eclipse.jgit.transport.URIish', '<init>', '^([a-z][a-z0-9+-]+)://(?:(?:([^/:@]+)(?::([^\\\\/]+))?@)?((?:[^\\\\/:]+)|(?:\\[[0-9a-f:]+\\]))(?::(\\d+))?((?:/~(?:[^\\\\/]+))?[\\\\/]))?(.+)?$', 'ssh://example.com//')","[161553, 161737, 162657, 162841, 163761, 163945]"
"('URIish.java', 'org.eclipse.jgit.transport.URIish', '<init>', '^([a-z][a-z0-9+-]+)://(?:(?:([^/:@]+)(?::([^\\\\/]+))?@)?((?:[^\\\\/:]+)|(?:\\[[0-9a-f:]+\\]))(?::(\\d+))?((?:/~(?:[^\\\\/]+))?[\\\\/]))?(.+)?$', 'ssh+git://me@example.com:80/D:/x')",[138645]
"('Description.java', 'org.junit.runner.Description', 'methodAndClassNamePatternGroupOrDefault', '([\\s\\S]*)\\((.*)\\)', 'testOnlyOption_f1_11_d(org.eclipse.jgit.api.CommitOnlyTest)')","[49872, 107374]"
"('URIish.java', 'org.eclipse.jgit.transport.URIish', '<init>', '^(file):([\\\\/](?![\\\\/])((?:[A-Za-z]:)?[\\\\/]?(?:(?:[^\\\\/]+[\\\\/]+)*[^\\\\/]+[\\\\/]*)))$', 'http://l usr\\example.com@[::1]:80/D:/x')",[143774]
"('Description.java', 'org.junit.runner.Description', 'methodAndClassNamePatternGroupOrDefault', '([\\s\\S]*)\\((.*)\\)', 'shouldThrowIAEWhenTreeWalkHasMoreThanTwoTrees(org.eclipse.jgit.diff.DiffEntryTest)')","[13707, 72174]"
"('URIish.java', 'org.eclipse.jgit.transport.URIish', '<init>', '^(file):([\\\\/](?![\\\\/])((?:[A-Za-z]:)?[\\\\/]?(?:(?:[^\\\\/]+[\\\\/]+)*[^\\\\/]+[\\\\/]*)))$', 'http://[::1]/D:\\x')","[169028, 169212, 170132, 170316, 171236, 171420]"
"('Description.java', 'org.junit.runner.Description', 'methodAndClassNamePatternGroupOrDefault', '([\\s\\S]*)\\((.*)\\)', 'shouldRaiseErrorOnEmptyURI(org.eclipse.jgit.transport.URIishTest)')","[2147, 61218]"
"('Description.java', 'org.junit.runner.Description', 'methodAndClassNamePatternGroupOrDefault', '([\\s\\S]*)\\((.*)\\)', 'testlogAllRefUpdates(org.eclipse.jgit.lib.ReflogConfigTest)')","[21893, 80292]"
"('URIish.java', 'org.eclipse.jgit.transport.URIish', '<init>', '^(file):([\\\\/](?![\\\\/])((?:[A-Za-z]:)?[\\\\/]?(?:(?:[^\\\\/]+[\\\\/]+)*[^\\\\/]+[\\\\/]*)))$', 'ssh+git://lusr\\example:wtf@example.com:80//')",[127490]
"('Description.java', 'org.junit.runner.Description', 'methodAndClassNamePatternGroupOrDefault', '([\\s\\S]*)\\((.*)\\)', 'testContainsMany(org.eclipse.jgit.internal.storage.file.InflatingBitSetTest)')","[54755, 111972]"
"('URIish.java', 'org.eclipse.jgit.transport.URIish', '<init>', '^([a-z][a-z0-9+-]+)://(?:(?:([^/:@]+)(?::([^\\\\/]+))?@)?((?:[^\\\\/:]+)|(?:\\[[0-9a-f:]+\\]))(?::(\\d+))?((?:/~(?:[^\\\\/]+))?[\\\\/]))?(.+)?$', 'ssh+git://me:wtf@1.2.3.4:1234//')",[125489]
"('URIish.java', 'org.eclipse.jgit.transport.URIish', '<init>', '^([a-z][a-z0-9+-]+)://(?:(?:([^/:@]+)(?::([^\\\\/]+))?@)?((?:[^\\\\/:]+)|(?:\\[[0-9a-f:]+\\]))(?::(\\d+))?((?:/~(?:[^\\\\/]+))?[\\\\/]))?(.+)?$', 'http://lusr\\example:wtf@[::1]:1234/D:/x')",[131469]
"('URIish.java', 'org.eclipse.jgit.transport.URIish', '<init>', '^([a-z][a-z0-9+-]+)://(?:(?:([^/:@]+)(?::([^\\\\/]+))?@)?((?:[^\\\\/:]+)|(?:\\[[0-9a-f:]+\\]))(?::(\\d+))?((?:/~(?:[^\\\\/]+))?[\\\\/]))?(.+)?$', 'http://l usr\\example.com@example.com/D:\\x')","[156171, 156355]"
"('URIish.java', 'org.eclipse.jgit.transport.URIish', '<init>', '^([a-z][a-z0-9+-]+)://(?:(?:([^/:@]+)(?::([^\\\\/]+))?@)?((?:[^\\\\/:]+)|(?:\\[[0-9a-f:]+\\]))(?::(\\d+))?((?:/~(?:[^\\\\/]+))?[\\\\/]))?(.+)?$', '/tmp/jgit_test_7464312454061528800_tmp/tmp_1728499304085067581/.git')","[183494, 183639]"
"('Description.java', 'org.junit.runner.Description', 'methodAndClassNamePatternGroupOrDefault', '([\\s\\S]*)\\((.*)\\)', 'testTwoSimilarModsAndOneInsert(org.eclipse.jgit.merge.MergeAlgorithmTest)')","[10137, 68852]"
"('Description.java', 'org.junit.runner.Description', 'methodAndClassNamePatternGroupOrDefault', '([\\s\\S]*)\\((.*)\\)', 'testHttpAuthScanResponse(org.eclipse.jgit.transport.HttpAuthTest)')","[3964, 63022]"
"('URIish.java', 'org.eclipse.jgit.transport.URIish', '<init>', '^([a-z][a-z0-9+-]+)://(?:(?:([^/:@]+)(?::([^\\\\/]+))?@)?((?:[^\\\\/:]+)|(?:\\[[0-9a-f:]+\\]))(?::(\\d+))?((?:/~(?:[^\\\\/]+))?[\\\\/]))?(.+)?$', 'http://me@1.2.3.4//')","[155297, 155481]"
"('URIish.java', 'org.eclipse.jgit.transport.URIish', '<init>', '^([a-z][a-z0-9+-]+)://(?:(?:([^/:@]+)(?::([^\\\\/]+))?@)?((?:[^\\\\/:]+)|(?:\\[[0-9a-f:]+\\]))(?::(\\d+))?((?:/~(?:[^\\\\/]+))?[\\\\/]))?(.+)?$', 'ssh://lusr\\example:wtf@[::1]:1234/D:\\x')",[124891]
"('Description.java', 'org.junit.runner.Description', 'methodAndClassNamePatternGroupOrDefault', '([\\s\\S]*)\\((.*)\\)', 'testCR(org.eclipse.jgit.util.io.EolCanonicalizingInputStreamTest)')","[32935, 90984]"
"('Description.java', 'org.junit.runner.Description', 'methodAndClassNamePatternGroupOrDefault', '([\\s\\S]*)\\((.*)\\)', 'testReplaceMaxValue(org.eclipse.jgit.transport.LongMapTest)')","[5380, 64386]"
"('Description.java', 'org.junit.runner.Description', 'methodAndClassNamePatternGroupOrDefault', '([\\s\\S]*)\\((.*)\\)', 'org.eclipse.jgit.treewalk.CanonicalTreeParserTest')","[29794, 186181]"
"('Description.java', 'org.junit.runner.Description', 'methodAndClassNamePatternGroupOrDefault', '([\\s\\S]*)\\((.*)\\)', 'testCreateForce(org.eclipse.jgit.api.BranchCommandTest)')","[47322, 104822]"
"('URIish.java', 'org.eclipse.jgit.transport.URIish', '<init>', '^([a-z][a-z0-9+-]+)://(?:(?:([^/:@]+)(?::([^\\\\/]+))?@)?((?:[^\\\\/:]+)|(?:\\[[0-9a-f:]+\\]))(?::(\\d+))?((?:/~(?:[^\\\\/]+))?[\\\\/]))?(.+)?$', 'ssh://l usr\\example.com@1.2.3.4/D:\\x')","[149915, 150099]"
"('URIish.java', 'org.eclipse.jgit.transport.URIish', '<init>', '^([a-z][a-z0-9+-]+)://(?:(?:([^/:@]+)(?::([^\\\\/]+))?@)?((?:[^\\\\/:]+)|(?:\\[[0-9a-f:]+\\]))(?::(\\d+))?((?:/~(?:[^\\\\/]+))?[\\\\/]))?(.+)?$', 'ssh://l usr\\example.com@[::1]//')","[150145, 150329]"
"('URIish.java', 'org.eclipse.jgit.transport.URIish', '<init>', '^([a-z][a-z0-9+-]+)://(?:(?:([^/:@]+)(?::([^\\\\/]+))?@)?((?:[^\\\\/:]+)|(?:\\[[0-9a-f:]+\\]))(?::(\\d+))?((?:/~(?:[^\\\\/]+))?[\\\\/]))?(.+)?$', 'https://lusr\\example:wtf@1.2.3.4:80/D:/x')",[134597]
"('URIish.java', 'org.eclipse.jgit.transport.URIish', '<init>', '^([a-z][a-z0-9+-]+)://(?:(?:([^/:@]+)(?::([^\\\\/]+))?@)?((?:[^\\\\/:]+)|(?:\\[[0-9a-f:]+\\]))(?::(\\d+))?((?:/~(?:[^\\\\/]+))?[\\\\/]))?(.+)?$', 'http://lusr\\example@[::1]:80//abc')",[144855]
"('Description.java', 'org.junit.runner.Description', 'methodAndClassNamePatternGroupOrDefault', '([\\s\\S]*)\\((.*)\\)', 'org.eclipse.jgit.transport.HttpAuthTest')","[3943, 180415]"
"('URIish.java', 'org.eclipse.jgit.transport.URIish', '<init>', '^([a-z][a-z0-9+-]+)://(?:(?:([^/:@]+)(?::([^\\\\/]+))?@)?((?:[^\\\\/:]+)|(?:\\[[0-9a-f:]+\\]))(?::(\\d+))?((?:/~(?:[^\\\\/]+))?[\\\\/]))?(.+)?$', 'http://lusr\\example:wtf@[::1]:80/D:\\x')",[131699]
"('Description.java', 'org.junit.runner.Description', 'methodAndClassNamePatternGroupOrDefault', '([\\s\\S]*)\\((.*)\\)', 'testDegenerate_DeleteEnd(org.eclipse.jgit.diff.HistogramDiffTest)')","[15310, 73714]"
"('Description.java', 'org.junit.runner.Description', 'methodAndClassNamePatternGroupOrDefault', '([\\s\\S]*)\\((.*)\\)', 'testFindObjects(org.eclipse.jgit.treewalk.ForPathTest)')","[29630, 87860]"
"('Description.java', 'org.junit.runner.Description', 'methodAndClassNamePatternGroupOrDefault', '([\\s\\S]*)\\((.*)\\)', 'testCommitTimeRevFilter(org.eclipse.jgit.revwalk.RevWalkFilterTest)')","[8452, 67246]"
"('Description.java', 'org.junit.runner.Description', 'methodAndClassNamePatternGroupOrDefault', '([\\s\\S]*)\\((.*)\\)', 'testEscapedBracket6(org.eclipse.jgit.fnmatch.FileNameMatcherTest)')","[19336, 77872]"
"('URIish.java', 'org.eclipse.jgit.transport.URIish', '<init>', '^(?:([^/:@]+)(?::([^\\\\/]+))?@)?((?:[^\\\\/:]+)|(?:\\[[0-9a-f:]+\\])):((?:(?:/~(?:[^\\\\/]+))[\\\\/])?(?:(?:[^\\\\/]+[\\\\/]+)*[^\\\\/]+[\\\\/]*))$', '/tmp/jgit_test_1887039081032232823_tmp/tmp_6446132997626944273')","[202610, 202745, 202893, 203043, 203193]"
"('Description.java', 'org.junit.runner.Description', 'methodAndClassNamePatternGroupOrDefault', '([\\s\\S]*)\\((.*)\\)', 'nonReferencedExpiredObjectTree_pruned(org.eclipse.jgit.internal.storage.file.GcPruneNonReferencedTest)')","[57251, 114348]"
"('Description.java', 'org.junit.runner.Description', 'methodAndClassNamePatternGroupOrDefault', '([\\s\\S]*)\\((.*)\\)', 'testExactRename_ManyRenames(org.eclipse.jgit.diff.RenameDetectorTest)')","[12646, 71162]"
"('Description.java', 'org.junit.runner.Description', 'methodAndClassNamePatternGroupOrDefault', '([\\s\\S]*)\\((.*)\\)', 'testRevertConflictMarkers(org.eclipse.jgit.api.RevertCommandTest)')","[47946, 105416]"
"('URIish.java', 'org.eclipse.jgit.transport.URIish', '<init>', '^(?:([^/:@]+)(?::([^\\\\/]+))?@)?([^\\\\/:]{2,}):([\\\\/](?:(?:[^\\\\/]+[\\\\/]+)*[^\\\\/]+[\\\\/]*))$', 'D:/m y')","[178205, 178320]"
"('Description.java', 'org.junit.runner.Description', 'methodAndClassNamePatternGroupOrDefault', '([\\s\\S]*)\\((.*)\\)', 'testError_BodyTooLong(org.eclipse.jgit.patch.PatchErrorTest)')","[39156, 96924]"
"('URIish.java', 'org.eclipse.jgit.transport.URIish', '<init>', '^([a-z][a-z0-9+-]+)://(?:(?:([^/:@]+)(?::([^\\\\/]+))?@)?((?:[^\\\\/:]+)|(?:\\[[0-9a-f:]+\\]))(?::(\\d+))?((?:/~(?:[^\\\\/]+))?[\\\\/]))?(.+)?$', 'https://l usr\\example.com:wtf@[::1]:80//abc')",[133815]
"('URIish.java', 'org.eclipse.jgit.transport.URIish', '<init>', '^([a-z][a-z0-9+-]+)://(?:(?:([^/:@]+)(?::([^\\\\/]+))?@)?((?:[^\\\\/:]+)|(?:\\[[0-9a-f:]+\\]))(?::(\\d+))?((?:/~(?:[^\\\\/]+))?[\\\\/]))?(.+)?$', 'http://lusr\\example@example.com:1234/D:\\x')",[144027]
"('Description.java', 'org.junit.runner.Description', 'methodAndClassNamePatternGroupOrDefault', '([\\s\\S]*)\\((.*)\\)', 'test000_sort_02(org.eclipse.jgit.lib.T0002_TreeTest)')","[24912, 83196]"
"('URIish.java', 'org.eclipse.jgit.transport.URIish', '<init>', '^([a-z][a-z0-9+-]+)://(?:(?:([^/:@]+)(?::([^\\\\/]+))?@)?((?:[^\\\\/:]+)|(?:\\[[0-9a-f:]+\\]))(?::(\\d+))?((?:/~(?:[^\\\\/]+))?[\\\\/]))?(.+)?$', 'http://me@example.com:1234/D:/x')",[141773]
"('URIish.java', 'org.eclipse.jgit.transport.URIish', '<init>', '^(file):([\\\\/](?![\\\\/])((?:[A-Za-z]:)?[\\\\/]?(?:(?:[^\\\\/]+[\\\\/]+)*[^\\\\/]+[\\\\/]*)))$', 'ssh+git://lusr\\example@1.2.3.4:80//')",[141106]
"('URIish.java', 'org.eclipse.jgit.transport.URIish', '<init>', '^(file):([\\\\/](?![\\\\/])((?:[A-Za-z]:)?[\\\\/]?(?:(?:[^\\\\/]+[\\\\/]+)*[^\\\\/]+[\\\\/]*)))$', 'file:///tmp/jgit_test_1978379821972935259_tmp/tmp_2988797850371430936/.git/')",[209352]
"('URIish.java', 'org.eclipse.jgit.transport.URIish', '<init>', '^([a-z][a-z0-9+-]+)://(?:(?:([^/:@]+)(?::([^\\\\/]+))?@)?((?:[^\\\\/:]+)|(?:\\[[0-9a-f:]+\\]))(?::(\\d+))?((?:/~(?:[^\\\\/]+))?[\\\\/]))?(.+)?$', 'http://lusr\\example:wtf@1.2.3.4:1234//abc')",[131055]
"('Description.java', 'org.junit.runner.Description', 'methodAndClassNamePatternGroupOrDefault', '([\\s\\S]*)\\((.*)\\)', 'org.eclipse.jgit.treewalk.filter.TreeFilterTest')","[31006, 186262]"
"('Description.java', 'org.junit.runner.Description', 'methodAndClassNamePatternGroupOrDefault', '([\\s\\S]*)\\((.*)\\)', 'testCloneRepositoryWithSubmodules(org.eclipse.jgit.api.CloneCommandTest)')","[42335, 99916]"
"('URIish.java', 'org.eclipse.jgit.transport.URIish', '<init>', '^(file):([\\\\/](?![\\\\/])((?:[A-Za-z]:)?[\\\\/]?(?:(?:[^\\\\/]+[\\\\/]+)*[^\\\\/]+[\\\\/]*)))$', 'ssh://l usr\\example.com:wtf@1.2.3.4:80/D:/x')",[123534]
"('URIish.java', 'org.eclipse.jgit.transport.URIish', '<init>', '^(file):([\\\\/](?![\\\\/])((?:[A-Za-z]:)?[\\\\/]?(?:(?:[^\\\\/]+[\\\\/]+)*[^\\\\/]+[\\\\/]*)))$', 'ssh+git://lusr\\example:wtf@[::1]:1234//')",[128042]
"('Description.java', 'org.junit.runner.Description', 'methodAndClassNamePatternGroupOrDefault', '([\\s\\S]*)\\((.*)\\)', 'testEmptyTree_AtEOF(org.eclipse.jgit.treewalk.CanonicalTreeParserTest)')","[30109, 88322]"
"('Description.java', 'org.junit.runner.Description', 'methodAndClassNamePatternGroupOrDefault', '([\\s\\S]*)\\((.*)\\)', 'testModifiedAndRenamed(org.eclipse.jgit.api.MergeCommandTest)')","[44194, 101764]"
"('URIish.java', 'org.eclipse.jgit.transport.URIish', '<init>', '^([a-z][a-z0-9+-]+)://(?:(?:([^/:@]+)(?::([^\\\\/]+))?@)?((?:[^\\\\/:]+)|(?:\\[[0-9a-f:]+\\]))(?::(\\d+))?((?:/~(?:[^\\\\/]+))?[\\\\/]))?(.+)?$', '/a/b/.git')",[179815]
"('Description.java', 'org.junit.runner.Description', 'methodAndClassNamePatternGroupOrDefault', '([\\s\\S]*)\\((.*)\\)', 'testParse_GitStyleMessage(org.eclipse.jgit.revwalk.RevTagParseTest)')","[7061, 65948]"
"('URIish.java', 'org.eclipse.jgit.transport.URIish', '<init>', '^(file):([\\\\/](?![\\\\/])((?:[A-Za-z]:)?[\\\\/]?(?:(?:[^\\\\/]+[\\\\/]+)*[^\\\\/]+[\\\\/]*)))$', 'ssh+git://lusr\\example@[::1]:1234//abc')",[141336]
"('Description.java', 'org.junit.runner.Description', 'methodAndClassNamePatternGroupOrDefault', '([\\s\\S]*)\\((.*)\\)', 'testOnelinerFollowedByBlank(org.eclipse.jgit.util.ChangeIdUtilTest)')","[37763, 95604]"
"('Description.java', 'org.junit.runner.Description', 'methodAndClassNamePatternGroupOrDefault', '([\\s\\S]*)\\((.*)\\)', 'testANY_DIFF_IdentityClone(org.eclipse.jgit.treewalk.filter.TreeFilterTest)')","[31111, 89312]"
"('URIish.java', 'org.eclipse.jgit.transport.URIish', '<init>', '^([a-z][a-z0-9+-]+)://(?:(?:([^/:@]+)(?::([^\\\\/]+))?@)?((?:[^\\\\/:]+)|(?:\\[[0-9a-f:]+\\]))(?::(\\d+))?((?:/~(?:[^\\\\/]+))?[\\\\/]))?(.+)?$', 'https://me:wtf@example.com:1234/D:\\x')",[131883]
"('Description.java', 'org.junit.runner.Description', 'methodAndClassNamePatternGroupOrDefault', '([\\s\\S]*)\\((.*)\\)', 'testWritePack2DeltasCRC32Copy(org.eclipse.jgit.internal.storage.file.PackWriterTest)')","[55236, 112456]"
"('Description.java', 'org.junit.runner.Description', 'methodAndClassNamePatternGroupOrDefault', '([\\s\\S]*)\\((.*)\\)', 'testEquals(org.eclipse.jgit.revwalk.RevObjectTest)')","[8660, 67444]"
"('Description.java', 'org.junit.runner.Description', 'methodAndClassNamePatternGroupOrDefault', '([\\s\\S]*)\\((.*)\\)', 'testValidTag(org.eclipse.jgit.lib.ValidRefNameTest)')","[24292, 82646]"
"('Description.java', 'org.junit.runner.Description', 'methodAndClassNamePatternGroupOrDefault', '([\\s\\S]*)\\((.*)\\)', 'org.eclipse.jgit.diff.RawTextIgnoreTrailingWhitespaceTest')","[13543, 182559]"
"('URIish.java', 'org.eclipse.jgit.transport.URIish', '<init>', '^([a-z][a-z0-9+-]+)://(?:(?:([^/:@]+)(?::([^\\\\/]+))?@)?((?:[^\\\\/:]+)|(?:\\[[0-9a-f:]+\\]))(?::(\\d+))?((?:/~(?:[^\\\\/]+))?[\\\\/]))?(.+)?$', 'ssh+git://me@[::1]//')","[152353, 152537]"
"('Description.java', 'org.junit.runner.Description', 'methodAndClassNamePatternGroupOrDefault', '([\\s\\S]*)\\((.*)\\)', 'testStandardFormat_NoHeader(org.eclipse.jgit.internal.storage.file.UnpackedObjectTest)')","[56667, 113776]"
"('URIish.java', 'org.eclipse.jgit.transport.URIish', '<init>', '^(?:([^/:@]+)(?::([^\\\\/]+))?@)?((?:[^\\\\/:]+)|(?:\\[[0-9a-f:]+\\])):((?:(?:/~(?:[^\\\\/]+))[\\\\/])?(?:(?:[^\\\\/]+[\\\\/]+)*[^\\\\/]+[\\\\/]*))$', '/tmp/jgit_test_4775797511223514619_tmp/tmp_1589472581924050678/.git')","[207049, 207191]"
"('ChangeIdUtil.java', 'org.eclipse.jgit.util.ChangeIdUtil', 'indexOfFirstFooterLine', '(^[a-zA-Z0-9-]+:(?!//).*$)', 'Bug: 42')",[188749]
"('URIish.java', 'org.eclipse.jgit.transport.URIish', '<init>', '^([a-z][a-z0-9+-]+)://(?:(?:([^/:@]+)(?::([^\\\\/]+))?@)?((?:[^\\\\/:]+)|(?:\\[[0-9a-f:]+\\]))(?::(\\d+))?((?:/~(?:[^\\\\/]+))?[\\\\/]))?(.+)?$', 'http://lusr\\example@1.2.3.4:1234//')",[144257]
"('Description.java', 'org.junit.runner.Description', 'methodAndClassNamePatternGroupOrDefault', '([\\s\\S]*)\\((.*)\\)', 'testOnlyOption_f1_3_e(org.eclipse.jgit.api.CommitOnlyTest)')","[48738, 106186]"
"('URIish.java', 'org.eclipse.jgit.transport.URIish', '<init>', '^(?:([^/:@]+)(?::([^\\\\/]+))?@)?((?:[^\\\\/:]+)|(?:\\[[0-9a-f:]+\\])):((?:(?:/~(?:[^\\\\/]+))[\\\\/])?(?:(?:[^\\\\/]+[\\\\/]+)*[^\\\\/]+[\\\\/]*))$', '/abc/.git')",[176802]
"('Description.java', 'org.junit.runner.Description', 'methodAndClassNamePatternGroupOrDefault', '([\\s\\S]*)\\((.*)\\)', 'testParseSquashFixupSequenceCount(org.eclipse.jgit.api.RebaseCommandTest)')","[45297, 102820]"
"('Description.java', 'org.junit.runner.Description', 'methodAndClassNamePatternGroupOrDefault', '([\\s\\S]*)\\((.*)\\)', 'testRemoved(org.eclipse.jgit.lib.IndexDiffTest)')","[20744, 79148]"
"('Description.java', 'org.junit.runner.Description', 'methodAndClassNamePatternGroupOrDefault', '([\\s\\S]*)\\((.*)\\)', 'testDegenerate_InsertsIntoMidPosition(org.eclipse.jgit.diff.HistogramDiffTest)')","[15331, 73736]"
"('URIish.java', 'org.eclipse.jgit.transport.URIish', '<init>', '^([a-z][a-z0-9+-]+)://(?:(?:([^/:@]+)(?::([^\\\\/]+))?@)?((?:[^\\\\/:]+)|(?:\\[[0-9a-f:]+\\]))(?::(\\d+))?((?:/~(?:[^\\\\/]+))?[\\\\/]))?(.+)?$', 'ssh+git://lusr\\example@1.2.3.4/D:/x')","[154285, 154469]"
"('ChangeIdUtil.java', 'org.eclipse.jgit.util.ChangeIdUtil', 'indexOfFirstFooterLine', '(^[a-zA-Z0-9-]+:(?!//).*$)', ' ')","[189208, 191853]"
"('Description.java', 'org.junit.runner.Description', 'methodAndClassNamePatternGroupOrDefault', '([\\s\\S]*)\\((.*)\\)', 'testEmptyMap(org.eclipse.jgit.transport.LongMapTest)')","[5401, 64408]"
"('Description.java', 'org.junit.runner.Description', 'methodAndClassNamePatternGroupOrDefault', '([\\s\\S]*)\\((.*)\\)', 'org.eclipse.jgit.api.StashApplyCommandTest')","[51059, 208863]"
"('Description.java', 'org.junit.runner.Description', 'methodAndClassNamePatternGroupOrDefault', '([\\s\\S]*)\\((.*)\\)', 'org.eclipse.jgit.internal.storage.file.ConcurrentRepackTest')","[55459, 210029]"
"('Description.java', 'org.junit.runner.Description', 'methodAndClassNamePatternGroupOrDefault', '([\\s\\S]*)\\((.*)\\)', 'testUpdateMixedCases(org.eclipse.jgit.transport.PushProcessTest)')","[4712, 63726]"
"('Description.java', 'org.junit.runner.Description', 'methodAndClassNamePatternGroupOrDefault', '([\\s\\S]*)\\((.*)\\)', 'testSimpleIterate(org.eclipse.jgit.treewalk.FileTreeIteratorTest)')","[29115, 87420]"
"('Description.java', 'org.junit.runner.Description', 'methodAndClassNamePatternGroupOrDefault', '([\\s\\S]*)\\((.*)\\)', 'testFormatDays(org.eclipse.jgit.util.RelativeDateFormatterTest)')","[35744, 93668]"
"('URIish.java', 'org.eclipse.jgit.transport.URIish', '<init>', '^([a-z][a-z0-9+-]+)://(?:(?:([^/:@]+)(?::([^\\\\/]+))?@)?((?:[^\\\\/:]+)|(?:\\[[0-9a-f:]+\\]))(?::(\\d+))?((?:/~(?:[^\\\\/]+))?[\\\\/]))?(.+)?$', 'http://me:wtf@[::1]:1234//')",[129169]
"('Description.java', 'org.junit.runner.Description', 'methodAndClassNamePatternGroupOrDefault', '([\\s\\S]*)\\((.*)\\)', 'org.eclipse.jgit.internal.storage.file.GcPackRefsTest')","[55316, 209975]"
"('Description.java', 'org.junit.runner.Description', 'methodAndClassNamePatternGroupOrDefault', '([\\s\\S]*)\\((.*)\\)', 'testEmptyTree_NoTreeWalk(org.eclipse.jgit.dircache.DirCacheIteratorTest)')","[12566, 71118]"
"('Description.java', 'org.junit.runner.Description', 'methodAndClassNamePatternGroupOrDefault', '([\\s\\S]*)\\((.*)\\)', 'testNoRenames_SingleByteFiles(org.eclipse.jgit.diff.RenameDetectorTest)')","[13171, 71712]"
"('URIish.java', 'org.eclipse.jgit.transport.URIish', '<init>', '^([a-z][a-z0-9+-]+)://(?:(?:([^/:@]+)(?::([^\\\\/]+))?@)?((?:[^\\\\/:]+)|(?:\\[[0-9a-f:]+\\]))(?::(\\d+))?((?:/~(?:[^\\\\/]+))?[\\\\/]))?(.+)?$', 'ssh://me:wtf@example.com:1234/D:/x')",[121901]
"('URIish.java', 'org.eclipse.jgit.transport.URIish', '<init>', '^([a-z][a-z0-9+-]+)://(?:(?:([^/:@]+)(?::([^\\\\/]+))?@)?((?:[^\\\\/:]+)|(?:\\[[0-9a-f:]+\\]))(?::(\\d+))?((?:/~(?:[^\\\\/]+))?[\\\\/]))?(.+)?$', 'ssh://1.2.3.4/D:/x')","[162013, 162197, 163117, 163301, 164221, 164405]"
"('URIish.java', 'org.eclipse.jgit.transport.URIish', '<init>', '^([a-z][a-z0-9+-]+)://(?:(?:([^/:@]+)(?::([^\\\\/]+))?@)?((?:[^\\\\/:]+)|(?:\\[[0-9a-f:]+\\]))(?::(\\d+))?((?:/~(?:[^\\\\/]+))?[\\\\/]))?(.+)?$', 'ssh://me@1.2.3.4:1234/D:/x')",[135517]
"('URIish.java', 'org.eclipse.jgit.transport.URIish', '<init>', '^(file):([\\\\/](?![\\\\/])((?:[A-Za-z]:)?[\\\\/]?(?:(?:[^\\\\/]+[\\\\/]+)*[^\\\\/]+[\\\\/]*)))$', 'ssh+git://l usr\\example.com@1.2.3.4:80/D:\\x')",[140140]
"('Description.java', 'org.junit.runner.Description', 'methodAndClassNamePatternGroupOrDefault', '([\\s\\S]*)\\((.*)\\)', 'testOnlyOption_f1_7_a(org.eclipse.jgit.api.CommitOnlyTest)')","[49074, 106538]"
"('Description.java', 'org.junit.runner.Description', 'methodAndClassNamePatternGroupOrDefault', '([\\s\\S]*)\\((.*)\\)', 'testIsModifiedSymlinkAsFile(org.eclipse.jgit.treewalk.FileTreeIteratorTest)')","[28926, 87222]"
"('Description.java', 'org.junit.runner.Description', 'methodAndClassNamePatternGroupOrDefault', '([\\s\\S]*)\\((.*)\\)', 'testSpecificEntryNumber(org.eclipse.jgit.internal.storage.file.ReflogReaderTest)')","[58982, 116042]"
"('Description.java', 'org.junit.runner.Description', 'methodAndClassNamePatternGroupOrDefault', '([\\s\\S]*)\\((.*)\\)', 'test005_addRecursiveTree(org.eclipse.jgit.lib.T0002_TreeTest)')","[24849, 83130]"
"('URIish.java', 'org.eclipse.jgit.transport.URIish', '<init>', '^([a-z][a-z0-9+-]+)://(?:(?:([^/:@]+)(?::([^\\\\/]+))?@)?((?:[^\\\\/:]+)|(?:\\[[0-9a-f:]+\\]))(?::(\\d+))?((?:/~(?:[^\\\\/]+))?[\\\\/]))?(.+)?$', 'ssh://lusr\\example:wtf@example.com:80//abc')",[124247]
"('URIish.java', 'org.eclipse.jgit.transport.URIish', '<init>', '^([a-z][a-z0-9+-]+)://(?:(?:([^/:@]+)(?::([^\\\\/]+))?@)?((?:[^\\\\/:]+)|(?:\\[[0-9a-f:]+\\]))(?::(\\d+))?((?:/~(?:[^\\\\/]+))?[\\\\/]))?(.+)?$', 'https://me@example.com:1234//')",[144993]
"('URIish.java', 'org.eclipse.jgit.transport.URIish', '<init>', '^([a-z][a-z0-9+-]+)://(?:(?:([^/:@]+)(?::([^\\\\/]+))?@)?((?:[^\\\\/:]+)|(?:\\[[0-9a-f:]+\\]))(?::(\\d+))?((?:/~(?:[^\\\\/]+))?[\\\\/]))?(.+)?$', 'http://lusr\\example@1.2.3.4:80//')",[144441]
"('Description.java', 'org.junit.runner.Description', 'methodAndClassNamePatternGroupOrDefault', '([\\s\\S]*)\\((.*)\\)', 'test2AlphaGroupsCase0(org.eclipse.jgit.fnmatch.FileNameMatcherTest)')","[17152, 75584]"
"('URIish.java', 'org.eclipse.jgit.transport.URIish', '<init>', '^([a-z][a-z0-9+-]+)://(?:(?:([^/:@]+)(?::([^\\\\/]+))?@)?((?:[^\\\\/:]+)|(?:\\[[0-9a-f:]+\\]))(?::(\\d+))?((?:/~(?:[^\\\\/]+))?[\\\\/]))?(.+)?$', 'http://l usr\\example.com@1.2.3.4//abc')","[156447, 156631]"
"('Description.java', 'org.junit.runner.Description', 'methodAndClassNamePatternGroupOrDefault', '([\\s\\S]*)\\((.*)\\)', 'testCompareUInt32(org.eclipse.jgit.util.NBTest)')","[37452, 95318]"
"('Description.java', 'org.junit.runner.Description', 'methodAndClassNamePatternGroupOrDefault', '([\\s\\S]*)\\((.*)\\)', 'testManySolutionsCase2(org.eclipse.jgit.fnmatch.FileNameMatcherTest)')","[18328, 76816]"
"('Description.java', 'org.junit.runner.Description', 'methodAndClassNamePatternGroupOrDefault', '([\\s\\S]*)\\((.*)\\)', 'testGetRef_EmptyDatabase(org.eclipse.jgit.internal.storage.file.RefDirectoryTest)')","[58606, 115668]"
"('Description.java', 'org.junit.runner.Description', 'methodAndClassNamePatternGroupOrDefault', '([\\s\\S]*)\\((.*)\\)', 'testOnlyOption_f1_6_e(org.eclipse.jgit.api.CommitOnlyTest)')","[49053, 106516]"
"('Description.java', 'org.junit.runner.Description', 'methodAndClassNamePatternGroupOrDefault', '([\\s\\S]*)\\((.*)\\)', 'testNewFileNoWait(org.eclipse.jgit.internal.storage.file.FileSnapshotTest)')","[54654, 111906]"
"('URIish.java', 'org.eclipse.jgit.transport.URIish', '<init>', '^(file):([\\\\/](?![\\\\/])((?:[A-Za-z]:)?[\\\\/]?(?:(?:[^\\\\/]+[\\\\/]+)*[^\\\\/]+[\\\\/]*)))$', 'ssh://lusr\\example@[::1]:1234/D:/x')",[138070]
"('Description.java', 'org.junit.runner.Description', 'methodAndClassNamePatternGroupOrDefault', '([\\s\\S]*)\\((.*)\\)', 'testATwoLines(org.eclipse.jgit.util.ChangeIdUtilTest)')","[37742, 95582]"
"('Description.java', 'org.junit.runner.Description', 'methodAndClassNamePatternGroupOrDefault', '([\\s\\S]*)\\((.*)\\)', 'testMixedResetWithUnmerged(org.eclipse.jgit.api.ResetCommandTest)')","[42627, 100202]"
"('URIish.java', 'org.eclipse.jgit.transport.URIish', '<init>', '^([a-z][a-z0-9+-]+)://(?:(?:([^/:@]+)(?::([^\\\\/]+))?@)?((?:[^\\\\/:]+)|(?:\\[[0-9a-f:]+\\]))(?::(\\d+))?((?:/~(?:[^\\\\/]+))?[\\\\/]))?(.+)?$', 'ssh+git://lusr\\example:wtf@[::1]:1234/D:\\x')",[128203]
"('URIish.java', 'org.eclipse.jgit.transport.URIish', '<init>', '^([a-z][a-z0-9+-]+)://(?:(?:([^/:@]+)(?::([^\\\\/]+))?@)?((?:[^\\\\/:]+)|(?:\\[[0-9a-f:]+\\]))(?::(\\d+))?((?:/~(?:[^\\\\/]+))?[\\\\/]))?(.+)?$', '/a/b/c//')",[179424]
"('URIish.java', 'org.eclipse.jgit.transport.URIish', '<init>', '^(file):([\\\\/](?![\\\\/])((?:[A-Za-z]:)?[\\\\/]?(?:(?:[^\\\\/]+[\\\\/]+)*[^\\\\/]+[\\\\/]*)))$', 'ssh://l usr\\example.com:wtf@example.com:1234/D:\\x')",[123028]
"('URIish.java', 'org.eclipse.jgit.transport.URIish', '<init>', '^([a-z][a-z0-9+-]+)://(?:(?:([^/:@]+)(?::([^\\\\/]+))?@)?((?:[^\\\\/:]+)|(?:\\[[0-9a-f:]+\\]))(?::(\\d+))?((?:/~(?:[^\\\\/]+))?[\\\\/]))?(.+)?$', 'ssh+git://lusr\\example@example.com/D:\\x')","[153963, 154147]"
"('URIish.java', 'org.eclipse.jgit.transport.URIish', '<init>', '^([a-z][a-z0-9+-]+)://(?:(?:([^/:@]+)(?::([^\\\\/]+))?@)?((?:[^\\\\/:]+)|(?:\\[[0-9a-f:]+\\]))(?::(\\d+))?((?:/~(?:[^\\\\/]+))?[\\\\/]))?(.+)?$', 'ssh+git://l usr\\example.com@example.com:1234/D:\\x')",[139611]
"('Description.java', 'org.junit.runner.Description', 'methodAndClassNamePatternGroupOrDefault', '([\\s\\S]*)\\((.*)\\)', 'testObjectId_nonexisting(org.eclipse.jgit.lib.RepositoryResolveTest)')","[27048, 85374]"
"('Description.java', 'org.junit.runner.Description', 'methodAndClassNamePatternGroupOrDefault', '([\\s\\S]*)\\((.*)\\)', 'testFilter_ALL(org.eclipse.jgit.revwalk.RevWalkFilterTest)')","[8431, 67224]"
"('Description.java', 'org.junit.runner.Description', 'methodAndClassNamePatternGroupOrDefault', '([\\s\\S]*)\\((.*)\\)', 'testBatchRefUpdateSimpleForce(org.eclipse.jgit.internal.storage.file.RefDirectoryTest)')","[57724, 114744]"
"('URIish.java', 'org.eclipse.jgit.transport.URIish', '<init>', '^([a-z][a-z0-9+-]+)://(?:(?:([^/:@]+)(?::([^\\\\/]+))?@)?((?:[^\\\\/:]+)|(?:\\[[0-9a-f:]+\\]))(?::(\\d+))?((?:/~(?:[^\\\\/]+))?[\\\\/]))?(.+)?$', 'file:///tmp/jgit_test_6827277949916927388_tmp/tmp_1962871144296277635.git/')","[194528, 194584, 194718, 194774, 194908, 194964, 195098, 195154, 195288, 195344, 195478, 195534, 195668, 195724]"
"('Description.java', 'org.junit.runner.Description', 'methodAndClassNamePatternGroupOrDefault', '([\\s\\S]*)\\((.*)\\)', 'org.eclipse.jgit.api.ReflogCommandTest')","[50977, 207656]"
"('Description.java', 'org.junit.runner.Description', 'methodAndClassNamePatternGroupOrDefault', '([\\s\\S]*)\\((.*)\\)', 'testOnlyOption_f1_9_d(org.eclipse.jgit.api.CommitOnlyTest)')","[49347, 106824]"
"('Description.java', 'org.junit.runner.Description', 'methodAndClassNamePatternGroupOrDefault', '([\\s\\S]*)\\((.*)\\)', 'testExceptionDuringClose(org.eclipse.jgit.util.io.UnionInputStreamTest)')","[33206, 91248]"
"('Description.java', 'org.junit.runner.Description', 'methodAndClassNamePatternGroupOrDefault', '([\\s\\S]*)\\((.*)\\)', 'testFastForwardRebaseWithAutoStash(org.eclipse.jgit.api.RebaseCommandTest)')","[44919, 102424]"
"('URIish.java', 'org.eclipse.jgit.transport.URIish', '<init>', '^([a-z][a-z0-9+-]+)://(?:(?:([^/:@]+)(?::([^\\\\/]+))?@)?((?:[^\\\\/:]+)|(?:\\[[0-9a-f:]+\\]))(?::(\\d+))?((?:/~(?:[^\\\\/]+))?[\\\\/]))?(.+)?$', 'ssh://l usr\\example.com@example.com:80//')",[136345]
"('Description.java', 'org.junit.runner.Description', 'methodAndClassNamePatternGroupOrDefault', '([\\s\\S]*)\\((.*)\\)', 'testWrap(org.eclipse.jgit.api.GitConstructionTest)')","[42232, 99828]"
"('Description.java', 'org.junit.runner.Description', 'methodAndClassNamePatternGroupOrDefault', '([\\s\\S]*)\\((.*)\\)', 'test000_openRepoBadArgs(org.eclipse.jgit.internal.storage.file.T0003_BasicTest)')","[54238, 111510]"
"('Description.java', 'org.junit.runner.Description', 'methodAndClassNamePatternGroupOrDefault', '([\\s\\S]*)\\((.*)\\)', 'testParsePersonIdent_legalCases(org.eclipse.jgit.util.RawParseUtils_ParsePersonIdentTest)')","[31981, 90104]"
"('URIish.java', 'org.eclipse.jgit.transport.URIish', '<init>', '^(file):([\\\\/](?![\\\\/])((?:[A-Za-z]:)?[\\\\/]?(?:(?:[^\\\\/]+[\\\\/]+)*[^\\\\/]+[\\\\/]*)))$', 'ssh+git://lusr\\example:wtf@1.2.3.4:1234/D:\\x')",[127812]
"('URIish.java', 'org.eclipse.jgit.transport.URIish', '<init>', '^(file):([\\\\/](?![\\\\/])((?:[A-Za-z]:)?[\\\\/]?(?:(?:[^\\\\/]+[\\\\/]+)*[^\\\\/]+[\\\\/]*)))$', 'ssh+git://lusr\\example:wtf@[::1]:80//abc')",[128272]
"('URIish.java', 'org.eclipse.jgit.transport.URIish', '<init>', '^([a-z][a-z0-9+-]+)://(?:(?:([^/:@]+)(?::([^\\\\/]+))?@)?((?:[^\\\\/:]+)|(?:\\[[0-9a-f:]+\\]))(?::(\\d+))?((?:/~(?:[^\\\\/]+))?[\\\\/]))?(.+)?$', 'http://lusr\\example:wtf@1.2.3.4:1234/D:\\x')",[131147]
"('Description.java', 'org.junit.runner.Description', 'methodAndClassNamePatternGroupOrDefault', '([\\s\\S]*)\\((.*)\\)', 'testCopyZeros_Length128(org.eclipse.jgit.internal.storage.pack.DeltaIndexTest)')","[52744, 110124]"
"('Description.java', 'org.junit.runner.Description', 'methodAndClassNamePatternGroupOrDefault', '([\\s\\S]*)\\((.*)\\)', 'LOCAL(org.eclipse.jgit.util.GitDateFormatterTest)')","[32334, 90434]"
"('Description.java', 'org.junit.runner.Description', 'methodAndClassNamePatternGroupOrDefault', '([\\s\\S]*)\\((.*)\\)', 'testWordroupCase5(org.eclipse.jgit.fnmatch.FileNameMatcherTest)')","[18958, 77476]"
"('URIish.java', 'org.eclipse.jgit.transport.URIish', '<init>', '^([a-z][a-z0-9+-]+)://(?:(?:([^/:@]+)(?::([^\\\\/]+))?@)?((?:[^\\\\/:]+)|(?:\\[[0-9a-f:]+\\]))(?::(\\d+))?((?:/~(?:[^\\\\/]+))?[\\\\/]))?(.+)?$', 'ssh+git://l usr\\example.com@example.com:1234//')",[139473]
"('URIish.java', 'org.eclipse.jgit.transport.URIish', '<init>', '^([\\\\/]?((?:[A-Za-z]:)?[\\\\/]?(?:(?:[^\\\\/]+[\\\\/]+)*[^\\\\/]+[\\\\/]*)))$', '../tmp_1145110896699918732')",[180974]
"('Description.java', 'org.junit.runner.Description', 'methodAndClassNamePatternGroupOrDefault', '([\\s\\S]*)\\((.*)\\)', 'testContructor(org.eclipse.jgit.internal.storage.file.PackWriterTest)')","[55131, 112346]"
"('URIish.java', 'org.eclipse.jgit.transport.URIish', '<init>', '^([a-z][a-z0-9+-]+)://(?:(?:([^/:@]+)(?::([^\\\\/]+))?@)?((?:[^\\\\/:]+)|(?:\\[[0-9a-f:]+\\]))(?::(\\d+))?((?:/~(?:[^\\\\/]+))?[\\\\/]))?(.+)?$', 'ssh://some-host:/path/to/repository.git')",[176641]
"('Description.java', 'org.junit.runner.Description', 'methodAndClassNamePatternGroupOrDefault', '([\\s\\S]*)\\((.*)\\)', 'testValidCommitBlankAuthor(org.eclipse.jgit.lib.ObjectCheckerTest)')","[26357, 84670]"
"('Description.java', 'org.junit.runner.Description', 'methodAndClassNamePatternGroupOrDefault', '([\\s\\S]*)\\((.*)\\)', 'testDeleteFile(org.eclipse.jgit.diff.MyersDiffTest)')","[14688, 73142]"
"('URIish.java', 'org.eclipse.jgit.transport.URIish', '<init>', '^(file):([\\\\/](?![\\\\/])((?:[A-Za-z]:)?[\\\\/]?(?:(?:[^\\\\/]+[\\\\/]+)*[^\\\\/]+[\\\\/]*)))$', 'ssh+git://lusr\\example@example.com:80/D:\\x')",[140876]
"('Description.java', 'org.junit.runner.Description', 'methodAndClassNamePatternGroupOrDefault', '([\\s\\S]*)\\((.*)\\)', 'org.eclipse.jgit.lib.ThreadSafeProgressMonitorTest')","[20431, 183870]"
"('URIish.java', 'org.eclipse.jgit.transport.URIish', '<init>', '^([a-z][a-z0-9+-]+)://(?:(?:([^/:@]+)(?::([^\\\\/]+))?@)?((?:[^\\\\/:]+)|(?:\\[[0-9a-f:]+\\]))(?::(\\d+))?((?:/~(?:[^\\\\/]+))?[\\\\/]))?(.+)?$', 'file:///home/m%0ay')","[175376, 175422]"
"('URIish.java', 'org.eclipse.jgit.transport.URIish', '<init>', '^(file):([\\\\/](?![\\\\/])((?:[A-Za-z]:)?[\\\\/]?(?:(?:[^\\\\/]+[\\\\/]+)*[^\\\\/]+[\\\\/]*)))$', 'ssh+git://l usr\\example.com@example.com:1234/D:\\x')",[139588]
"('Description.java', 'org.junit.runner.Description', 'methodAndClassNamePatternGroupOrDefault', '([\\s\\S]*)\\((.*)\\)', 'testNegation(org.eclipse.jgit.ignore.IgnoreMatcherTest)')","[31899, 90038]"
"('Description.java', 'org.junit.runner.Description', 'methodAndClassNamePatternGroupOrDefault', '([\\s\\S]*)\\((.*)\\)', 'testTrimTrailingWhitespace(org.eclipse.jgit.util.RawCharUtilTest)')","[38494, 96330]"
"('URIish.java', 'org.eclipse.jgit.transport.URIish', '<init>', '^([a-z][a-z0-9+-]+)://(?:(?:([^/:@]+)(?::([^\\\\/]+))?@)?((?:[^\\\\/:]+)|(?:\\[[0-9a-f:]+\\]))(?::(\\d+))?((?:/~(?:[^\\\\/]+))?[\\\\/]))?(.+)?$', 'file:///tmp/jgit_test_1535544226656899906_tmp/tmp_1158346254474690331')","[198789, 198851]"
"('Description.java', 'org.junit.runner.Description', 'methodAndClassNamePatternGroupOrDefault', '([\\s\\S]*)\\((.*)\\)', 'testGetConflictingNames(org.eclipse.jgit.lib.RefDatabaseConflictingNamesTest)')","[24500, 82844]"
"('Description.java', 'org.junit.runner.Description', 'methodAndClassNamePatternGroupOrDefault', '([\\s\\S]*)\\((.*)\\)', 'testAddIfAbsentGrowsWithObjects(org.eclipse.jgit.lib.ObjectIdOwnerMapTest)')","[21996, 80380]"
"('Description.java', 'org.junit.runner.Description', 'methodAndClassNamePatternGroupOrDefault', '([\\s\\S]*)\\((.*)\\)', 'testTimeout_writeByte_Success1(org.eclipse.jgit.util.io.TimeoutOutputStreamTest)')","[32458, 90544]"
"('Description.java', 'org.junit.runner.Description', 'methodAndClassNamePatternGroupOrDefault', '([\\s\\S]*)\\((.*)\\)', 'indexAdd(org.eclipse.jgit.api.StashApplyCommandTest)')","[51290, 108760]"
"('Description.java', 'org.junit.runner.Description', 'methodAndClassNamePatternGroupOrDefault', '([\\s\\S]*)\\((.*)\\)', 'getTrackingBranchShouldHandleNormalCaseForRemoteTrackingBranch(org.eclipse.jgit.lib.BranchConfigTest)')","[25204, 83482]"
"('URIish.java', 'org.eclipse.jgit.transport.URIish', '<init>', '^(file):([\\\\/](?![\\\\/])((?:[A-Za-z]:)?[\\\\/]?(?:(?:[^\\\\/]+[\\\\/]+)*[^\\\\/]+[\\\\/]*)))$', 'ssh+git://me@1.2.3.4:80/D:/x')",[138990]
"('Description.java', 'org.junit.runner.Description', 'methodAndClassNamePatternGroupOrDefault', '([\\s\\S]*)\\((.*)\\)', 'testFileModeChangeAndContentChangeNoConflict(org.eclipse.jgit.lib.DirCacheCheckoutTest)')","[23080, 81436]"
"('Description.java', 'org.junit.runner.Description', 'methodAndClassNamePatternGroupOrDefault', '([\\s\\S]*)\\((.*)\\)', 'testMaliciousAbsolutePathSecondCheckout(org.eclipse.jgit.lib.DirCacheCheckoutMaliciousPathTest)')","[21370, 79764]"
"('URIish.java', 'org.eclipse.jgit.transport.URIish', '<init>', '^([a-z][a-z0-9+-]+)://(?:(?:([^/:@]+)(?::([^\\\\/]+))?@)?((?:[^\\\\/:]+)|(?:\\[[0-9a-f:]+\\]))(?::(\\d+))?((?:/~(?:[^\\\\/]+))?[\\\\/]))?(.+)?$', 'https://me:wtf@example.com:1234//')",[131745]
"('Description.java', 'org.junit.runner.Description', 'methodAndClassNamePatternGroupOrDefault', '([\\s\\S]*)\\((.*)\\)', 'testCreateEmpty(org.eclipse.jgit.transport.RefSpecTest)')","[2773, 61834]"
"('Description.java', 'org.junit.runner.Description', 'methodAndClassNamePatternGroupOrDefault', '([\\s\\S]*)\\((.*)\\)', 'test000_openrepo_default_gitDirAndWorkTreeSet(org.eclipse.jgit.internal.storage.file.T0003_BasicTest)')","[54028, 111290]"
"('Description.java', 'org.junit.runner.Description', 'methodAndClassNamePatternGroupOrDefault', '([\\s\\S]*)\\((.*)\\)', 'testNewNamespaceConflictWithPackedPrefixNameExists(org.eclipse.jgit.internal.storage.file.RefUpdateTest)')","[55583, 112720]"
"('URIish.java', 'org.eclipse.jgit.transport.URIish', '<init>', '^(file):([\\\\/](?![\\\\/])((?:[A-Za-z]:)?[\\\\/]?(?:(?:[^\\\\/]+[\\\\/]+)*[^\\\\/]+[\\\\/]*)))$', 'file:/tmp/jgit_test_3938080632504476553_tmp/tmp_4523598312582749123/.git/')",[196973]
"('Description.java', 'org.junit.runner.Description', 'methodAndClassNamePatternGroupOrDefault', '([\\s\\S]*)\\((.*)\\)', 'testClear(org.eclipse.jgit.util.IntListTest)')","[36057, 93976]"
"('URIish.java', 'org.eclipse.jgit.transport.URIish', '<init>', '^([a-z][a-z0-9+-]+)://(?:(?:([^/:@]+)(?::([^\\\\/]+))?@)?((?:[^\\\\/:]+)|(?:\\[[0-9a-f:]+\\]))(?::(\\d+))?((?:/~(?:[^\\\\/]+))?[\\\\/]))?(.+)?$', 'ssh://lusr\\example@1.2.3.4/D:\\x')","[151019, 151203]"
"('URIish.java', 'org.eclipse.jgit.transport.URIish', '<init>', '^(file):([\\\\/](?![\\\\/])((?:[A-Za-z]:)?[\\\\/]?(?:(?:[^\\\\/]+[\\\\/]+)*[^\\\\/]+[\\\\/]*)))$', 'https://me@example.com:80/D:/x')",[145246]
"('URIish.java', 'org.eclipse.jgit.transport.URIish', '<init>', '^([a-z][a-z0-9+-]+)://(?:(?:([^/:@]+)(?::([^\\\\/]+))?@)?((?:[^\\\\/:]+)|(?:\\[[0-9a-f:]+\\]))(?::(\\d+))?((?:/~(?:[^\\\\/]+))?[\\\\/]))?(.+)?$', 'ssh+git://me:wtf@example.com:80//')",[125305]
"('Description.java', 'org.junit.runner.Description', 'methodAndClassNamePatternGroupOrDefault', '([\\s\\S]*)\\((.*)\\)', 'test008_readSectionNames(org.eclipse.jgit.lib.ConfigTest)')","[28344, 86672]"
"('Description.java', 'org.junit.runner.Description', 'methodAndClassNamePatternGroupOrDefault', '([\\s\\S]*)\\((.*)\\)', 'testReadStringRaw_End(org.eclipse.jgit.transport.PacketLineInTest)')","[3716, 62802]"
"('URIish.java', 'org.eclipse.jgit.transport.URIish', '<init>', '^([a-z][a-z0-9+-]+)://(?:(?:([^/:@]+)(?::([^\\\\/]+))?@)?((?:[^\\\\/:]+)|(?:\\[[0-9a-f:]+\\]))(?::(\\d+))?((?:/~(?:[^\\\\/]+))?[\\\\/]))?(.+)?$', 'ssh://lusr\\example@example.com//')","[150513, 150697]"
"('URIish.java', 'org.eclipse.jgit.transport.URIish', '<init>', '^(file):([\\\\/](?![\\\\/])((?:[A-Za-z]:)?[\\\\/]?(?:(?:[^\\\\/]+[\\\\/]+)*[^\\\\/]+[\\\\/]*)))$', 'ssh://me:wtf@[::1]:80//abc')",[122752]
"('URIish.java', 'org.eclipse.jgit.transport.URIish', '<init>', '^(file):([\\\\/](?![\\\\/])((?:[A-Za-z]:)?[\\\\/]?(?:(?:[^\\\\/]+[\\\\/]+)*[^\\\\/]+[\\\\/]*)))$', 'http://l usr\\example.com@1.2.3.4/D:\\x')","[156516, 156700]"
"('Description.java', 'org.junit.runner.Description', 'methodAndClassNamePatternGroupOrDefault', '([\\s\\S]*)\\((.*)\\)', 'org.eclipse.jgit.diff.RawTextIgnoreLeadingWhitespaceTest')","[15018, 182775]"
"('Description.java', 'org.junit.runner.Description', 'methodAndClassNamePatternGroupOrDefault', '([\\s\\S]*)\\((.*)\\)', 'testGetRef_CorruptObjectIdReference(org.eclipse.jgit.internal.storage.file.RefDirectoryTest)')","[58417, 115470]"
"('QuotedString.java', 'org.eclipse.jgit.util.QuotedString$BourneUserPathStyle', 'quote', '^~[A-Za-z0-9_-]+$', 'a')","[192370, 192395]"
"('Description.java', 'org.junit.runner.Description', 'methodAndClassNamePatternGroupOrDefault', '([\\s\\S]*)\\((.*)\\)', 'workingDirectoryDeleteIndexEdit(org.eclipse.jgit.api.StashApplyCommandTest)')","[51353, 108826]"
"('Description.java', 'org.junit.runner.Description', 'methodAndClassNamePatternGroupOrDefault', '([\\s\\S]*)\\((.*)\\)', 'testWithSlashDoesNotMatchInSubDirectory(org.eclipse.jgit.ignore.IgnoreNodeTest)')","[31649, 89796]"
"('Description.java', 'org.junit.runner.Description', 'methodAndClassNamePatternGroupOrDefault', '([\\s\\S]*)\\((.*)\\)', 'testDetachedHeadOnCheckout(org.eclipse.jgit.api.CheckoutCommandTest)')","[43379, 100950]"
"('URIish.java', 'org.eclipse.jgit.transport.URIish', '<init>', '^(file):([\\\\/](?![\\\\/])((?:[A-Za-z]:)?[\\\\/]?(?:(?:[^\\\\/]+[\\\\/]+)*[^\\\\/]+[\\\\/]*)))$', 'https://lusr\\example@example.com:80//')",[147362]
"('URIish.java', 'org.eclipse.jgit.transport.URIish', '<init>', '^(file):([\\\\/](?![\\\\/])((?:[A-Za-z]:)?[\\\\/]?(?:(?:[^\\\\/]+[\\\\/]+)*[^\\\\/]+[\\\\/]*)))$', 'ssh+git://me@example.com:1234/D:\\x')",[138484]
"('URIish.java', 'org.eclipse.jgit.transport.URIish', '<init>', '^([\\\\/]?((?:[A-Za-z]:)?[\\\\/]?(?:(?:[^\\\\/]+[\\\\/]+)*[^\\\\/]+[\\\\/]*)))$', '/tmp/jgit_test_936098334176453163_tmp/tmp_2532274317419163208/.git')","[205981, 206131]"
"('Description.java', 'org.junit.runner.Description', 'methodAndClassNamePatternGroupOrDefault', '([\\s\\S]*)\\((.*)\\)', 'testMultipleHeads_SameBase2(org.eclipse.jgit.revwalk.RevWalkMergeBaseTest)')","[7664, 66520]"
"('Description.java', 'org.junit.runner.Description', 'methodAndClassNamePatternGroupOrDefault', '([\\s\\S]*)\\((.*)\\)', 'nonReferencedExpiredObject_pruned(org.eclipse.jgit.internal.storage.file.GcPruneNonReferencedTest)')","[57209, 114304]"
"('Description.java', 'org.junit.runner.Description', 'methodAndClassNamePatternGroupOrDefault', '([\\s\\S]*)\\((.*)\\)', 'testWritePack4(org.eclipse.jgit.internal.storage.file.PackWriterTest)')","[55047, 112258]"
"('Description.java', 'org.junit.runner.Description', 'methodAndClassNamePatternGroupOrDefault', '([\\s\\S]*)\\((.*)\\)', 'testInvalidTreeModeNotOctal2(org.eclipse.jgit.lib.ObjectCheckerTest)')","[25349, 83614]"
"('Description.java', 'org.junit.runner.Description', 'methodAndClassNamePatternGroupOrDefault', '([\\s\\S]*)\\((.*)\\)', 'commandWithNullPath(org.eclipse.jgit.submodule.SubmoduleAddTest)')","[19935, 78400]"
"('URIish.java', 'org.eclipse.jgit.transport.URIish', '<init>', '^(file):([\\\\/](?![\\\\/])((?:[A-Za-z]:)?[\\\\/]?(?:(?:[^\\\\/]+[\\\\/]+)*[^\\\\/]+[\\\\/]*)))$', '/tmp/jgit_test_1364027526222413070_tmp/tmp_9117675340386543078.git')",[116258]
"('URIish.java', 'org.eclipse.jgit.transport.URIish', '<init>', '^(file):([\\\\/](?![\\\\/])((?:[A-Za-z]:)?[\\\\/]?(?:(?:[^\\\\/]+[\\\\/]+)*[^\\\\/]+[\\\\/]*)))$', 'ssh+git://lusr\\example@example.com//abc')","[153848, 154032]"
"('URIish.java', 'org.eclipse.jgit.transport.URIish', '<init>', '^(file):([\\\\/](?![\\\\/])((?:[A-Za-z]:)?[\\\\/]?(?:(?:[^\\\\/]+[\\\\/]+)*[^\\\\/]+[\\\\/]*)))$', 'ssh://l usr\\example.com@1.2.3.4:80/D:/x')",[136782]
"('URIish.java', 'org.eclipse.jgit.transport.URIish', '<init>', '^(file):([\\\\/](?![\\\\/])((?:[A-Za-z]:)?[\\\\/]?(?:(?:[^\\\\/]+[\\\\/]+)*[^\\\\/]+[\\\\/]*)))$', 'https://me@1.2.3.4:1234/D:\\x')",[145476]
"('URIish.java', 'org.eclipse.jgit.transport.URIish', '<init>', '^([a-z][a-z0-9+-]+)://(?:(?:([^/:@]+)(?::([^\\\\/]+))?@)?((?:[^\\\\/:]+)|(?:\\[[0-9a-f:]+\\]))(?::(\\d+))?((?:/~(?:[^\\\\/]+))?[\\\\/]))?(.+)?$', 'ssh://me@1.2.3.4//abc')","[148719, 148903]"
"('Description.java', 'org.junit.runner.Description', 'methodAndClassNamePatternGroupOrDefault', '([\\s\\S]*)\\((.*)\\)', 'testCopy_OutOfOrder(org.eclipse.jgit.internal.storage.pack.DeltaStreamTest)')","[52662, 110058]"
"('URIish.java', 'org.eclipse.jgit.transport.URIish', '<init>', '^([a-z][a-z0-9+-]+)://(?:(?:([^/:@]+)(?::([^\\\\/]+))?@)?((?:[^\\\\/:]+)|(?:\\[[0-9a-f:]+\\]))(?::(\\d+))?((?:/~(?:[^\\\\/]+))?[\\\\/]))?(.+)?$', 'http://lusr\\example:wtf@example.com:80//')",[130825]
"('Description.java', 'org.junit.runner.Description', 'methodAndClassNamePatternGroupOrDefault', '([\\s\\S]*)\\((.*)\\)', 'testRef_refname(org.eclipse.jgit.lib.RepositoryResolveTest)')","[27468, 85814]"
"('URIish.java', 'org.eclipse.jgit.transport.URIish', '<init>', '^([a-z][a-z0-9+-]+)://(?:(?:([^/:@]+)(?::([^\\\\/]+))?@)?((?:[^\\\\/:]+)|(?:\\[[0-9a-f:]+\\]))(?::(\\d+))?((?:/~(?:[^\\\\/]+))?[\\\\/]))?(.+)?$', 'ssh://lusr\\example@[::1]//')","[151249, 151433]"
"('Description.java', 'org.junit.runner.Description', 'methodAndClassNamePatternGroupOrDefault', '([\\s\\S]*)\\((.*)\\)', 'testTwoLevelSubtree_Recursive(org.eclipse.jgit.dircache.DirCacheIteratorTest)')","[12545, 71096]"
"('Description.java', 'org.junit.runner.Description', 'methodAndClassNamePatternGroupOrDefault', '([\\s\\S]*)\\((.*)\\)', 'org.eclipse.jgit.revwalk.RevWalkPathFilter1Test')","[5441, 181163]"
"('URIish.java', 'org.eclipse.jgit.transport.URIish', '<init>', '^([a-z][a-z0-9+-]+)://(?:(?:([^/:@]+)(?::([^\\\\/]+))?@)?((?:[^\\\\/:]+)|(?:\\[[0-9a-f:]+\\]))(?::(\\d+))?((?:/~(?:[^\\\\/]+))?[\\\\/]))?(.+)?$', 'ssh://me@[::1]:80/D:\\x')",[136115]
"('URIish.java', 'org.eclipse.jgit.transport.URIish', '<init>', '^([a-z][a-z0-9+-]+)://(?:(?:([^/:@]+)(?::([^\\\\/]+))?@)?((?:[^\\\\/:]+)|(?:\\[[0-9a-f:]+\\]))(?::(\\d+))?((?:/~(?:[^\\\\/]+))?[\\\\/]))?(.+)?$', 'ssh://lusr\\example@example.com/D:\\x')","[150651, 150835]"
"('Description.java', 'org.junit.runner.Description', 'methodAndClassNamePatternGroupOrDefault', '([\\s\\S]*)\\((.*)\\)', 'testDF_NoGap(org.eclipse.jgit.treewalk.NameConflictTreeWalkTest)')","[29342, 87618]"
"('URIish.java', 'org.eclipse.jgit.transport.URIish', '<init>', '^(?:([^/:@]+)(?::([^\\\\/]+))?@)?([^\\\\/:]{2,}):([\\\\/](?:(?:[^\\\\/]+[\\\\/]+)*[^\\\\/]+[\\\\/]*))$', '\\\\some\\place')","[121464, 121579]"
"('Description.java', 'org.junit.runner.Description', 'methodAndClassNamePatternGroupOrDefault', '([\\s\\S]*)\\((.*)\\)', 'testNoteInMiddle(org.eclipse.jgit.util.ChangeIdUtilTest)')","[38183, 96044]"
"('Description.java', 'org.junit.runner.Description', 'methodAndClassNamePatternGroupOrDefault', '([\\s\\S]*)\\((.*)\\)', 'testReadStringRaw1(org.eclipse.jgit.transport.PacketLineInTest)')","[3359, 62428]"
"('Description.java', 'org.junit.runner.Description', 'methodAndClassNamePatternGroupOrDefault', '([\\s\\S]*)\\((.*)\\)', 'test005_PutGetStringList(org.eclipse.jgit.lib.ConfigTest)')","[27987, 86298]"
"('Description.java', 'org.junit.runner.Description', 'methodAndClassNamePatternGroupOrDefault', '([\\s\\S]*)\\((.*)\\)', 'testFilterHidesPrivate(org.eclipse.jgit.transport.ReceivePackAdvertiseRefsHookTest)')","[450, 59480]"
"('Description.java', 'org.junit.runner.Description', 'methodAndClassNamePatternGroupOrDefault', '([\\s\\S]*)\\((.*)\\)', 'testArrayConstructor(org.eclipse.jgit.util.io.UnionInputStreamTest)')","[33101, 91138]"
"('Description.java', 'org.junit.runner.Description', 'methodAndClassNamePatternGroupOrDefault', '([\\s\\S]*)\\((.*)\\)', 'testFilter_Negate_ALL(org.eclipse.jgit.revwalk.RevWalkFilterTest)')","[8200, 66982]"
"('URIish.java', 'org.eclipse.jgit.transport.URIish', '<init>', '^(?:([^/:@]+)(?::([^\\\\/]+))?@)?([^\\\\/:]{2,}):([\\\\/](?:(?:[^\\\\/]+[\\\\/]+)*[^\\\\/]+[\\\\/]*))$', 'example.com:/some/p ath')","[178527, 178619]"
"('URIish.java', 'org.eclipse.jgit.transport.URIish', '<init>', '^(file):([\\\\/](?![\\\\/])((?:[A-Za-z]:)?[\\\\/]?(?:(?:[^\\\\/]+[\\\\/]+)*[^\\\\/]+[\\\\/]*)))$', 'ssh+git://l usr\\example.com:wtf@[::1]:80//abc')",[127168]
"('Description.java', 'org.junit.runner.Description', 'methodAndClassNamePatternGroupOrDefault', '([\\s\\S]*)\\((.*)\\)', 'testEmptyStatus(org.eclipse.jgit.api.StatusCommandTest)')","[44816, 102336]"
"('Description.java', 'org.junit.runner.Description', 'methodAndClassNamePatternGroupOrDefault', '([\\s\\S]*)\\((.*)\\)', 'testTrivialTwoWay(org.eclipse.jgit.merge.SimpleMergeTest)')","[9782, 68500]"
"('URIish.java', 'org.eclipse.jgit.transport.URIish', '<init>', '^(file):([\\\\/](?![\\\\/])((?:[A-Za-z]:)?[\\\\/]?(?:(?:[^\\\\/]+[\\\\/]+)*[^\\\\/]+[\\\\/]*)))$', 'ssh+git://me@[::1]:80//')",[139266]
"('Description.java', 'org.junit.runner.Description', 'methodAndClassNamePatternGroupOrDefault', '([\\s\\S]*)\\((.*)\\)', 'org.eclipse.jgit.api.AddCommandTest')","[50353, 207575]"
"('URIish.java', 'org.eclipse.jgit.transport.URIish', '<init>', '^([a-z][a-z0-9+-]+)://(?:(?:([^/:@]+)(?::([^\\\\/]+))?@)?((?:[^\\\\/:]+)|(?:\\[[0-9a-f:]+\\]))(?::(\\d+))?((?:/~(?:[^\\\\/]+))?[\\\\/]))?(.+)?$', 'ssh+git://me@1.2.3.4:1234/D:\\x')",[138875]
"('Description.java', 'org.junit.runner.Description', 'methodAndClassNamePatternGroupOrDefault', '([\\s\\S]*)\\((.*)\\)', 'testNoSubtree_WithTreeWalk(org.eclipse.jgit.dircache.DirCacheIteratorTest)')","[12356, 70898]"
"('Description.java', 'org.junit.runner.Description', 'methodAndClassNamePatternGroupOrDefault', '([\\s\\S]*)\\((.*)\\)', 'testRenameBranchCannotLockAFileHEADisFromLockTo(org.eclipse.jgit.internal.storage.file.RefUpdateTest)')","[56003, 113160]"
"('Description.java', 'org.junit.runner.Description', 'methodAndClassNamePatternGroupOrDefault', '([\\s\\S]*)\\((.*)\\)', 'testTimeout_skip_Timeout(org.eclipse.jgit.util.io.TimeoutInputStreamTest)')","[32685, 90742]"
"('Description.java', 'org.junit.runner.Description', 'methodAndClassNamePatternGroupOrDefault', '([\\s\\S]*)\\((.*)\\)', 'noStashedCommits(org.eclipse.jgit.api.StashApplyCommandTest)')","[51227, 108694]"
"('Description.java', 'org.junit.runner.Description', 'methodAndClassNamePatternGroupOrDefault', '([\\s\\S]*)\\((.*)\\)', 'testTwoLevelSubtree_FilterPath(org.eclipse.jgit.dircache.DirCacheIteratorTest)')","[12482, 71030]"
"('URIish.java', 'org.eclipse.jgit.transport.URIish', '<init>', '^(file):([\\\\/](?![\\\\/])((?:[A-Za-z]:)?[\\\\/]?(?:(?:[^\\\\/]+[\\\\/]+)*[^\\\\/]+[\\\\/]*)))$', 'http://lusr\\example:wtf@example.com:1234//')",[130618]
"('Description.java', 'org.junit.runner.Description', 'methodAndClassNamePatternGroupOrDefault', '([\\s\\S]*)\\((.*)\\)', 'testPut_KeyMustMatchName_WithPrefix(org.eclipse.jgit.util.RefMapTest)')","[37160, 95032]"
"('URIish.java', 'org.eclipse.jgit.transport.URIish', '<init>', '^([a-z][a-z0-9+-]+)://(?:(?:([^/:@]+)(?::([^\\\\/]+))?@)?((?:[^\\\\/:]+)|(?:\\[[0-9a-f:]+\\]))(?::(\\d+))?((?:/~(?:[^\\\\/]+))?[\\\\/]))?(.+)?$', 'ssh://l usr\\example.com@[::1]:1234//')",[136897]
"('URIish.java', 'org.eclipse.jgit.transport.URIish', '<init>', '^(file):([\\\\/](?![\\\\/])((?:[A-Za-z]:)?[\\\\/]?(?:(?:[^\\\\/]+[\\\\/]+)*[^\\\\/]+[\\\\/]*)))$', 'ssh+git://me@[::1]//abc')","[152376, 152560]"
"('Description.java', 'org.junit.runner.Description', 'methodAndClassNamePatternGroupOrDefault', '([\\s\\S]*)\\((.*)\\)', 'testTagCommit(org.eclipse.jgit.revwalk.RevTagParseTest)')","[7250, 66146]"
"('URIish.java', 'org.eclipse.jgit.transport.URIish', '<init>', '^(file):([\\\\/](?![\\\\/])((?:[A-Za-z]:)?[\\\\/]?(?:(?:[^\\\\/]+[\\\\/]+)*[^\\\\/]+[\\\\/]*)))$', 'https://lusr\\example:wtf@[::1]:1234//')",[134666]
"('URIish.java', 'org.eclipse.jgit.transport.URIish', '<init>', '^([a-z][a-z0-9+-]+)://(?:(?:([^/:@]+)(?::([^\\\\/]+))?@)?((?:[^\\\\/:]+)|(?:\\[[0-9a-f:]+\\]))(?::(\\d+))?((?:/~(?:[^\\\\/]+))?[\\\\/]))?(.+)?$', 'ssh+git://lusr\\example:wtf@[::1]:80/D:/x')",[128341]
"('URIish.java', 'org.eclipse.jgit.transport.URIish', '<init>', '^([a-z][a-z0-9+-]+)://(?:(?:([^/:@]+)(?::([^\\\\/]+))?@)?((?:[^\\\\/:]+)|(?:\\[[0-9a-f:]+\\]))(?::(\\d+))?((?:/~(?:[^\\\\/]+))?[\\\\/]))?(.+)?$', 'https://l usr\\example.com@example.com:1234//abc')",[146143]
"('URIish.java', 'org.eclipse.jgit.transport.URIish', 'getHumanishName', '^([\\\\/]?((?:[A-Za-z]:)?[\\\\/]?(?:(?:[^\\\\/]+[\\\\/]+)*[^\\\\/]+[\\\\/]*)))$', 'abc.git')",[121763]
"('Description.java', 'org.junit.runner.Description', 'methodAndClassNamePatternGroupOrDefault', '([\\s\\S]*)\\((.*)\\)', 'testGetText_NoBinary(org.eclipse.jgit.patch.GetTextTest)')","[39965, 97672]"
"('Description.java', 'org.junit.runner.Description', 'methodAndClassNamePatternGroupOrDefault', '([\\s\\S]*)\\((.*)\\)', 'testParseRewordCommand(org.eclipse.jgit.api.RebaseCommandTest)')","[45213, 102732]"
"('Description.java', 'org.junit.runner.Description', 'methodAndClassNamePatternGroupOrDefault', '([\\s\\S]*)\\((.*)\\)', 'testUpdateRefForwardWithCheck2(org.eclipse.jgit.internal.storage.file.RefUpdateTest)')","[55961, 113116]"
"('URIish.java', 'org.eclipse.jgit.transport.URIish', '<init>', '^(file):([\\\\/](?![\\\\/])((?:[A-Za-z]:)?[\\\\/]?(?:(?:[^\\\\/]+[\\\\/]+)*[^\\\\/]+[\\\\/]*)))$', 'ssh+git://lusr\\example@[::1]:80/D:/x')",[141566]
"('Description.java', 'org.junit.runner.Description', 'methodAndClassNamePatternGroupOrDefault', '([\\s\\S]*)\\((.*)\\)', 'testEmptyFolderCommitted(org.eclipse.jgit.treewalk.filter.IndexDiffFilterTest)')","[30191, 88388]"
"('URIish.java', 'org.eclipse.jgit.transport.URIish', '<init>', '^([a-z][a-z0-9+-]+)://(?:(?:([^/:@]+)(?::([^\\\\/]+))?@)?((?:[^\\\\/:]+)|(?:\\[[0-9a-f:]+\\]))(?::(\\d+))?((?:/~(?:[^\\\\/]+))?[\\\\/]))?(.+)?$', 'ssh://me@1.2.3.4:80//')",[135609]
"('Description.java', 'org.junit.runner.Description', 'methodAndClassNamePatternGroupOrDefault', '([\\s\\S]*)\\((.*)\\)', 'testMiddleClearAllLines(org.eclipse.jgit.api.BlameCommandTest)')","[52267, 109684]"
"('Description.java', 'org.junit.runner.Description', 'methodAndClassNamePatternGroupOrDefault', '([\\s\\S]*)\\((.*)\\)', 'testMatchesBugId(org.eclipse.jgit.revwalk.FooterLineTest)')","[6231, 65178]"
"('URIish.java', 'org.eclipse.jgit.transport.URIish', '<init>', '^(file):([\\\\/](?![\\\\/])((?:[A-Za-z]:)?[\\\\/]?(?:(?:[^\\\\/]+[\\\\/]+)*[^\\\\/]+[\\\\/]*)))$', 'ssh+git://me:wtf@[::1]:80//abc')",[126064]
"('Description.java', 'org.junit.runner.Description', 'methodAndClassNamePatternGroupOrDefault', '([\\s\\S]*)\\((.*)\\)', 'testWritePack2DeltasReuseRefs(org.eclipse.jgit.internal.storage.file.PackWriterTest)')","[54942, 112148]"
"('Description.java', 'org.junit.runner.Description', 'methodAndClassNamePatternGroupOrDefault', '([\\s\\S]*)\\((.*)\\)', 'testCheckoutOfFileWithInexistentParentDir(org.eclipse.jgit.api.CheckoutCommandTest)')","[43064, 100620]"
"('URIish.java', 'org.eclipse.jgit.transport.URIish', '<init>', '^(file):([\\\\/](?![\\\\/])((?:[A-Za-z]:)?[\\\\/]?(?:(?:[^\\\\/]+[\\\\/]+)*[^\\\\/]+[\\\\/]*)))$', 'http://me@example.com:80/D:/x')",[141934]
"('Description.java', 'org.junit.runner.Description', 'methodAndClassNamePatternGroupOrDefault', '([\\s\\S]*)\\((.*)\\)', 'testSuccess(org.eclipse.jgit.transport.ReceivePackAdvertiseRefsHookTest)')","[471, 59502]"
"('URIish.java', 'org.eclipse.jgit.transport.URIish', '<init>', '^(file):([\\\\/](?![\\\\/])((?:[A-Za-z]:)?[\\\\/]?(?:(?:[^\\\\/]+[\\\\/]+)*[^\\\\/]+[\\\\/]*)))$', 'https://l usr\\example.com@[::1]:1234/D:\\x')",[146948]
"('Description.java', 'org.junit.runner.Description', 'methodAndClassNamePatternGroupOrDefault', '([\\s\\S]*)\\((.*)\\)', 'testPrintGroupCase5(org.eclipse.jgit.fnmatch.FileNameMatcherTest)')","[18265, 76750]"
"('URIish.java', 'org.eclipse.jgit.transport.URIish', '<init>', '^([a-z][a-z0-9+-]+)://(?:(?:([^/:@]+)(?::([^\\\\/]+))?@)?((?:[^\\\\/:]+)|(?:\\[[0-9a-f:]+\\]))(?::(\\d+))?((?:/~(?:[^\\\\/]+))?[\\\\/]))?(.+)?$', 'http://1.2.3.4/D:\\x')","[168683, 168867, 169787, 169971, 170891, 171075]"
"('URIish.java', 'org.eclipse.jgit.transport.URIish', '<init>', '^([a-z][a-z0-9+-]+)://(?:(?:([^/:@]+)(?::([^\\\\/]+))?@)?((?:[^\\\\/:]+)|(?:\\[[0-9a-f:]+\\]))(?::(\\d+))?((?:/~(?:[^\\\\/]+))?[\\\\/]))?(.+)?$', 'ssh://lusr\\example:wtf@[::1]:1234//')",[124753]
"('Description.java', 'org.junit.runner.Description', 'methodAndClassNamePatternGroupOrDefault', '([\\s\\S]*)\\((.*)\\)', 'testReplaceLineBreaks(org.eclipse.jgit.util.StringUtilsTest)')","[33433, 91446]"
"('Description.java', 'org.junit.runner.Description', 'methodAndClassNamePatternGroupOrDefault', '([\\s\\S]*)\\((.*)\\)', 'testGetValidWithSlashDotGitSlashHumanishName(org.eclipse.jgit.transport.URIishTest)')","[1475, 60514]"
"('ChangeIdUtil.java', 'org.eclipse.jgit.util.ChangeIdUtil', 'indexOfChangeId', '(^Change-Id: *I[a-f0-9]{40}$)', '\t Change-Id:  I3b7e4e16b503ce00f07ba6ad01d97a356dad7701')",[187649]
"('Description.java', 'org.junit.runner.Description', 'methodAndClassNamePatternGroupOrDefault', '([\\s\\S]*)\\((.*)\\)', 'shouldWorkInNormalCase(org.eclipse.jgit.lib.BranchTrackingStatusTest)')","[23918, 82294]"
"('URIish.java', 'org.eclipse.jgit.transport.URIish', '<init>', '^([a-z][a-z0-9+-]+)://(?:(?:([^/:@]+)(?::([^\\\\/]+))?@)?((?:[^\\\\/:]+)|(?:\\[[0-9a-f:]+\\]))(?::(\\d+))?((?:/~(?:[^\\\\/]+))?[\\\\/]))?(.+)?$', 'https://lusr\\example@[::1]/D:/x')","[161277, 161461]"
"('Description.java', 'org.junit.runner.Description', 'methodAndClassNamePatternGroupOrDefault', '([\\s\\S]*)\\((.*)\\)', 'testEncodeASCII_SimpleASCII(org.eclipse.jgit.lib.ConstantsEncodingTest)')","[24021, 82382]"
"('URIish.java', 'org.eclipse.jgit.transport.URIish', '<init>', '^([a-z][a-z0-9+-]+)://(?:(?:([^/:@]+)(?::([^\\\\/]+))?@)?((?:[^\\\\/:]+)|(?:\\[[0-9a-f:]+\\]))(?::(\\d+))?((?:/~(?:[^\\\\/]+))?[\\\\/]))?(.+)?$', 'https://lusr\\example@[::1]:80//')",[148121]
"('URIish.java', 'org.eclipse.jgit.transport.URIish', '<init>', '^(file):([\\\\/](?![\\\\/])((?:[A-Za-z]:)?[\\\\/]?(?:(?:[^\\\\/]+[\\\\/]+)*[^\\\\/]+[\\\\/]*)))$', 'https://me:wtf@example.com:1234/D:\\x')",[131860]
"('Description.java', 'org.junit.runner.Description', 'methodAndClassNamePatternGroupOrDefault', '([\\s\\S]*)\\((.*)\\)', 'test005_notIsId(org.eclipse.jgit.lib.ObjectIdTest)')","[28636, 86958]"
"('URIish.java', 'org.eclipse.jgit.transport.URIish', '<init>', '^([a-z][a-z0-9+-]+)://(?:(?:([^/:@]+)(?::([^\\\\/]+))?@)?((?:[^\\\\/:]+)|(?:\\[[0-9a-f:]+\\]))(?::(\\d+))?((?:/~(?:[^\\\\/]+))?[\\\\/]))?(.+)?$', 'ssh+git://me:wtf@example.com:1234/D:/x')",[125213]
"('Description.java', 'org.junit.runner.Description', 'methodAndClassNamePatternGroupOrDefault', '([\\s\\S]*)\\((.*)\\)', 'testEmpty(org.eclipse.jgit.util.RefListTest)')","[34994, 92942]"
"('Description.java', 'org.junit.runner.Description', 'methodAndClassNamePatternGroupOrDefault', '([\\s\\S]*)\\((.*)\\)', 'testReadACK_Invalid3(org.eclipse.jgit.transport.PacketLineInTest)')","[3674, 62758]"
"('Description.java', 'org.junit.runner.Description', 'methodAndClassNamePatternGroupOrDefault', '([\\s\\S]*)\\((.*)\\)', 'commandWithNullUri(org.eclipse.jgit.submodule.SubmoduleAddTest)')","[20082, 78554]"
"('URIish.java', 'org.eclipse.jgit.transport.URIish', '<init>', '^(file):([\\\\/](?![\\\\/])((?:[A-Za-z]:)?[\\\\/]?(?:(?:[^\\\\/]+[\\\\/]+)*[^\\\\/]+[\\\\/]*)))$', 'http://lusr\\example@1.2.3.4:80/D:/x')",[144510]
"('URIish.java', 'org.eclipse.jgit.transport.URIish', '<init>', '^(file):([\\\\/](?![\\\\/])((?:[A-Za-z]:)?[\\\\/]?(?:(?:[^\\\\/]+[\\\\/]+)*[^\\\\/]+[\\\\/]*)))$', 'ssh://lusr\\example:wtf@1.2.3.4:80//abc')",[124592]
"('Description.java', 'org.junit.runner.Description', 'methodAndClassNamePatternGroupOrDefault', '([\\s\\S]*)\\((.*)\\)', 'repositoryWithMissingSubmodule(org.eclipse.jgit.submodule.SubmoduleStatusTest)')","[20206, 78664]"
"('Description.java', 'org.junit.runner.Description', 'methodAndClassNamePatternGroupOrDefault', '([\\s\\S]*)\\((.*)\\)', 'testTwoRangesInOneGroupCase5(org.eclipse.jgit.fnmatch.FileNameMatcherTest)')","[19147, 77674]"
"('Description.java', 'org.junit.runner.Description', 'methodAndClassNamePatternGroupOrDefault', '([\\s\\S]*)\\((.*)\\)', 'testEdit_UniqueCommonLargerThanMatchPoint(org.eclipse.jgit.diff.MyersDiffTest)')","[14625, 73076]"
"('URIish.java', 'org.eclipse.jgit.transport.URIish', '<init>', '^(file):([\\\\/](?![\\\\/])((?:[A-Za-z]:)?[\\\\/]?(?:(?:[^\\\\/]+[\\\\/]+)*[^\\\\/]+[\\\\/]*)))$', 'file:///home/m%00y')","[175261, 175307]"
"('Description.java', 'org.junit.runner.Description', 'methodAndClassNamePatternGroupOrDefault', '([\\s\\S]*)\\((.*)\\)', 'testTargetWithoutLeadingSlash(org.eclipse.jgit.ignore.IgnoreMatcherTest)')","[31815, 89950]"
"('URIish.java', 'org.eclipse.jgit.transport.URIish', '<init>', '^([a-z][a-z0-9+-]+)://(?:(?:([^/:@]+)(?::([^\\\\/]+))?@)?((?:[^\\\\/:]+)|(?:\\[[0-9a-f:]+\\]))(?::(\\d+))?((?:/~(?:[^\\\\/]+))?[\\\\/]))?(.+)?$', 'ssh+git://[::1]//abc')","[165647, 165831, 166751, 166935, 167855, 168039]"
"('Description.java', 'org.junit.runner.Description', 'methodAndClassNamePatternGroupOrDefault', '([\\s\\S]*)\\((.*)\\)', 'testAddGrowsWithObjects(org.eclipse.jgit.lib.ObjectIdSubclassMapTest)')","[22141, 80512]"
"('URIish.java', 'org.eclipse.jgit.transport.URIish', '<init>', '^(file):([\\\\/](?![\\\\/])((?:[A-Za-z]:)?[\\\\/]?(?:(?:[^\\\\/]+[\\\\/]+)*[^\\\\/]+[\\\\/]*)))$', 'ssh://user@example.com:33/some/p ath')","[175445, 175491]"
"('URIish.java', 'org.eclipse.jgit.transport.URIish', '<init>', '^(file):([\\\\/](?![\\\\/])((?:[A-Za-z]:)?[\\\\/]?(?:(?:[^\\\\/]+[\\\\/]+)*[^\\\\/]+[\\\\/]*)))$', 'https://lusr\\example@1.2.3.4/D:/x')","[160886, 161070]"
"('URIish.java', 'org.eclipse.jgit.transport.URIish', '<init>', '^(file):([\\\\/](?![\\\\/])((?:[A-Za-z]:)?[\\\\/]?(?:(?:[^\\\\/]+[\\\\/]+)*[^\\\\/]+[\\\\/]*)))$', 'https://lusr\\example:wtf@1.2.3.4:1234//')",[134298]
"('Description.java', 'org.junit.runner.Description', 'methodAndClassNamePatternGroupOrDefault', '([\\s\\S]*)\\((.*)\\)', 'testCheckoutWithConflict(org.eclipse.jgit.api.CheckoutCommandTest)')","[43022, 100576]"
"('URIish.java', 'org.eclipse.jgit.transport.URIish', '<init>', '^(file):([\\\\/](?![\\\\/])((?:[A-Za-z]:)?[\\\\/]?(?:(?:[^\\\\/]+[\\\\/]+)*[^\\\\/]+[\\\\/]*)))$', 'https://l usr\\example.com@example.com//')","[159322, 159506]"
"('URIish.java', 'org.eclipse.jgit.transport.URIish', '<init>', '^(file):([\\\\/](?![\\\\/])((?:[A-Za-z]:)?[\\\\/]?(?:(?:[^\\\\/]+[\\\\/]+)*[^\\\\/]+[\\\\/]*)))$', 'ssh+git://lusr\\example:wtf@[::1]:80//')",[128226]
"('URIish.java', 'org.eclipse.jgit.transport.URIish', '<init>', '^(file):([\\\\/](?![\\\\/])((?:[A-Za-z]:)?[\\\\/]?(?:(?:[^\\\\/]+[\\\\/]+)*[^\\\\/]+[\\\\/]*)))$', 'ssh://l usr\\example.com:wtf@[::1]:1234/D:\\x')",[123764]
"('Description.java', 'org.junit.runner.Description', 'methodAndClassNamePatternGroupOrDefault', '([\\s\\S]*)\\((.*)\\)', 'testAddOne(org.eclipse.jgit.revwalk.RevFlagSetTest)')","[7374, 66256]"
"('URIish.java', 'org.eclipse.jgit.transport.URIish', '<init>', '^([a-z][a-z0-9+-]+)://(?:(?:([^/:@]+)(?::([^\\\\/]+))?@)?((?:[^\\\\/:]+)|(?:\\[[0-9a-f:]+\\]))(?::(\\d+))?((?:/~(?:[^\\\\/]+))?[\\\\/]))?(.+)?$', 'https://l usr\\example.com:wtf@[::1]:80//')",[133769]
"('Description.java', 'org.junit.runner.Description', 'methodAndClassNamePatternGroupOrDefault', '([\\s\\S]*)\\((.*)\\)', 'testMixedReset(org.eclipse.jgit.api.ResetCommandTest)')","[42585, 100158]"
"('ChangeIdUtil.java', 'org.eclipse.jgit.util.ChangeIdUtil', 'indexOfFirstFooterLine', '^[ \\[].*$', '     the indentation]')",[188438]
"('Description.java', 'org.junit.runner.Description', 'methodAndClassNamePatternGroupOrDefault', '([\\s\\S]*)\\((.*)\\)', 'testDirectoryFileConflicts_14(org.eclipse.jgit.lib.DirCacheCheckoutTest)')","[23668, 82052]"
"('Description.java', 'org.junit.runner.Description', 'methodAndClassNamePatternGroupOrDefault', '([\\s\\S]*)\\((.*)\\)', 'testEmpty_NoMatch(org.eclipse.jgit.revwalk.RevWalkPathFilter1Test)')","[5588, 64584]"
"('ChangeIdUtil.java', 'org.eclipse.jgit.util.ChangeIdUtil', 'indexOfChangeId', '(^Change-Id: *I[a-f0-9]{40}$)', 'e')",[191334]
"('URIish.java', 'org.eclipse.jgit.transport.URIish', '<init>', '^(file):([\\\\/](?![\\\\/])((?:[A-Za-z]:)?[\\\\/]?(?:(?:[^\\\\/]+[\\\\/]+)*[^\\\\/]+[\\\\/]*)))$', 'ssh+git://[::1]//abc')","[165624, 165808, 166728, 166912, 167832, 168016]"
"('URIish.java', 'org.eclipse.jgit.transport.URIish', '<init>', '^([a-z][a-z0-9+-]+)://(?:(?:([^/:@]+)(?::([^\\\\/]+))?@)?((?:[^\\\\/:]+)|(?:\\[[0-9a-f:]+\\]))(?::(\\d+))?((?:/~(?:[^\\\\/]+))?[\\\\/]))?(.+)?$', 'ssh://me@example.com:80/D:/x')",[135333]
"('URIish.java', 'org.eclipse.jgit.transport.URIish', '<init>', '^([a-z][a-z0-9+-]+)://(?:(?:([^/:@]+)(?::([^\\\\/]+))?@)?((?:[^\\\\/:]+)|(?:\\[[0-9a-f:]+\\]))(?::(\\d+))?((?:/~(?:[^\\\\/]+))?[\\\\/]))?(.+)?$', 'ssh://l usr\\example.com@example.com//')","[149409, 149593]"
"('URIish.java', 'org.eclipse.jgit.transport.URIish', '<init>', '^([a-z][a-z0-9+-]+)://(?:(?:([^/:@]+)(?::([^\\\\/]+))?@)?((?:[^\\\\/:]+)|(?:\\[[0-9a-f:]+\\]))(?::(\\d+))?((?:/~(?:[^\\\\/]+))?[\\\\/]))?(.+)?$', 'file:///tmp/jgit_test_6443982766099715589_tmp/tmp_4105089330516958600/.git/')","[197611, 197825]"
"('Description.java', 'org.junit.runner.Description', 'methodAndClassNamePatternGroupOrDefault', '([\\s\\S]*)\\((.*)\\)', 'testGetRefs_DeatchedHead1(org.eclipse.jgit.internal.storage.file.RefDirectoryTest)')","[58228, 115272]"
"('URIish.java', 'org.eclipse.jgit.transport.URIish', '<init>', '^([a-z][a-z0-9+-]+)://(?:(?:([^/:@]+)(?::([^\\\\/]+))?@)?((?:[^\\\\/:]+)|(?:\\[[0-9a-f:]+\\]))(?::(\\d+))?((?:/~(?:[^\\\\/]+))?[\\\\/]))?(.+)?$', '../../foo/bar')","[177607, 177722]"
"('URIish.java', 'org.eclipse.jgit.transport.URIish', '<init>', '^([a-z][a-z0-9+-]+)://(?:(?:([^/:@]+)(?::([^\\\\/]+))?@)?((?:[^\\\\/:]+)|(?:\\[[0-9a-f:]+\\]))(?::(\\d+))?((?:/~(?:[^\\\\/]+))?[\\\\/]))?(.+)?$', 'ssh+git://l usr\\example.com:wtf@example.com:1234//')",[126225]
"('Description.java', 'org.junit.runner.Description', 'methodAndClassNamePatternGroupOrDefault', '([\\s\\S]*)\\((.*)\\)', 'testWorkdirIsParentDir_CreateRepositoryFromDotGitGitDir(org.eclipse.jgit.internal.storage.file.RepositorySetupWorkDirTest)')","[56938, 114040]"
"('Description.java', 'org.junit.runner.Description', 'methodAndClassNamePatternGroupOrDefault', '([\\s\\S]*)\\((.*)\\)', 'testTwoGroupsCase1(org.eclipse.jgit.fnmatch.FileNameMatcherTest)')","[17467, 75914]"
"('URIish.java', 'org.eclipse.jgit.transport.URIish', '<init>', '^(file):([\\\\/](?![\\\\/])((?:[A-Za-z]:)?[\\\\/]?(?:(?:[^\\\\/]+[\\\\/]+)*[^\\\\/]+[\\\\/]*)))$', 'file:/a/b.txt')",[121694]
"('Description.java', 'org.junit.runner.Description', 'methodAndClassNamePatternGroupOrDefault', '([\\s\\S]*)\\((.*)\\)', 'testCreateBranchOnCheckout(org.eclipse.jgit.api.CheckoutCommandTest)')","[43190, 100752]"
"('Description.java', 'org.junit.runner.Description', 'methodAndClassNamePatternGroupOrDefault', '([\\s\\S]*)\\((.*)\\)', 'testLocalTransportWithRelativePath(org.eclipse.jgit.transport.TransportTest)')","[4151, 63198]"
"('Description.java', 'org.junit.runner.Description', 'methodAndClassNamePatternGroupOrDefault', '([\\s\\S]*)\\((.*)\\)', 'testGetSlashValidSlashDotGitSlashHumanishName(org.eclipse.jgit.transport.URIishTest)')","[1727, 60778]"
"('Description.java', 'org.junit.runner.Description', 'methodAndClassNamePatternGroupOrDefault', '([\\s\\S]*)\\((.*)\\)', 'testRenameLimit(org.eclipse.jgit.diff.RenameDetectorTest)')","[12877, 71404]"
"('Description.java', 'org.junit.runner.Description', 'methodAndClassNamePatternGroupOrDefault', '([\\s\\S]*)\\((.*)\\)', 'testUnpopAtFront(org.eclipse.jgit.revwalk.FIFORevQueueTest)')","[9263, 68016]"
"('URIish.java', 'org.eclipse.jgit.transport.URIish', '<init>', '^(file):([\\\\/](?![\\\\/])((?:[A-Za-z]:)?[\\\\/]?(?:(?:[^\\\\/]+[\\\\/]+)*[^\\\\/]+[\\\\/]*)))$', 'ssh://l usr\\example.com:wtf@example.com:1234//')",[122890]
"('URIish.java', 'org.eclipse.jgit.transport.URIish', '<init>', '^(file):([\\\\/](?![\\\\/])((?:[A-Za-z]:)?[\\\\/]?(?:(?:[^\\\\/]+[\\\\/]+)*[^\\\\/]+[\\\\/]*)))$', 'http://lusr\\example:wtf@1.2.3.4:1234//')",[130986]
"('Description.java', 'org.junit.runner.Description', 'methodAndClassNamePatternGroupOrDefault', '([\\s\\S]*)\\((.*)\\)', 'testNullRefName(org.eclipse.jgit.api.CheckoutCommandTest)')","[43400, 100972]"
"('URIish.java', 'org.eclipse.jgit.transport.URIish', '<init>', '^(file):([\\\\/](?![\\\\/])((?:[A-Za-z]:)?[\\\\/]?(?:(?:[^\\\\/]+[\\\\/]+)*[^\\\\/]+[\\\\/]*)))$', 'http://l usr\\example.com@example.com//abc')","[156056, 156240]"
"('Description.java', 'org.junit.runner.Description', 'methodAndClassNamePatternGroupOrDefault', '([\\s\\S]*)\\((.*)\\)', 'testModifyNL1(org.eclipse.jgit.api.ApplyCommandTest)')","[46614, 104140]"
"('URIish.java', 'org.eclipse.jgit.transport.URIish', '<init>', '^(file):([\\\\/](?![\\\\/])((?:[A-Za-z]:)?[\\\\/]?(?:(?:[^\\\\/]+[\\\\/]+)*[^\\\\/]+[\\\\/]*)))$', 'https://me@[::1]:1234//abc')",[145752]
"('Description.java', 'org.junit.runner.Description', 'methodAndClassNamePatternGroupOrDefault', '([\\s\\S]*)\\((.*)\\)', 'fetchShouldNotFetchTagsFromOtherBranches(org.eclipse.jgit.api.FetchCommandTest)')","[51872, 109310]"
"('URIish.java', 'org.eclipse.jgit.transport.URIish', '<init>', '^([a-z][a-z0-9+-]+)://(?:(?:([^/:@]+)(?::([^\\\\/]+))?@)?((?:[^\\\\/:]+)|(?:\\[[0-9a-f:]+\\]))(?::(\\d+))?((?:/~(?:[^\\\\/]+))?[\\\\/]))?(.+)?$', 'http://l usr\\example.com:wtf@[::1]:80//')",[130457]
"('Description.java', 'org.junit.runner.Description', 'methodAndClassNamePatternGroupOrDefault', '([\\s\\S]*)\\((.*)\\)', 'testCloneRepositoryOnlyOneBranch(org.eclipse.jgit.api.CloneCommandTest)')","[42377, 99960]"
"('URIish.java', 'org.eclipse.jgit.transport.URIish', '<init>', '^([a-z][a-z0-9+-]+)://(?:(?:([^/:@]+)(?::([^\\\\/]+))?@)?((?:[^\\\\/:]+)|(?:\\[[0-9a-f:]+\\]))(?::(\\d+))?((?:/~(?:[^\\\\/]+))?[\\\\/]))?(.+)?$', 'ssh://l usr\\example.com:wtf@example.com:1234//abc')",[122959]
"('URIish.java', 'org.eclipse.jgit.transport.URIish', '<init>', '^([a-z][a-z0-9+-]+)://(?:(?:([^/:@]+)(?::([^\\\\/]+))?@)?((?:[^\\\\/:]+)|(?:\\[[0-9a-f:]+\\]))(?::(\\d+))?((?:/~(?:[^\\\\/]+))?[\\\\/]))?(.+)?$', 'ssh+git://lusr\\example@1.2.3.4:80//abc')",[141175]
"('Description.java', 'org.junit.runner.Description', 'methodAndClassNamePatternGroupOrDefault', '([\\s\\S]*)\\((.*)\\)', 'org.eclipse.jgit.merge.SquashMessageFormatterTest')","[10740, 181919]"
"('Description.java', 'org.junit.runner.Description', 'methodAndClassNamePatternGroupOrDefault', '([\\s\\S]*)\\((.*)\\)', 'checkForCorrectIndex(org.eclipse.jgit.merge.ResolveMergerTest)')","[10721, 69424]"
"('Description.java', 'org.junit.runner.Description', 'methodAndClassNamePatternGroupOrDefault', '([\\s\\S]*)\\((.*)\\)', 'testMergeFailingWithDirtyWorkingTree(org.eclipse.jgit.api.MergeCommandTest)')","[44467, 102050]"
"('Description.java', 'org.junit.runner.Description', 'methodAndClassNamePatternGroupOrDefault', '([\\s\\S]*)\\((.*)\\)', 'testSimpleStarCase0(org.eclipse.jgit.fnmatch.FileNameMatcherTest)')","[17530, 75980]"
"('Description.java', 'org.junit.runner.Description', 'methodAndClassNamePatternGroupOrDefault', '([\\s\\S]*)\\((.*)\\)', 'testInt4_1(org.eclipse.jgit.util.RawParseUtils_HexParseTest)')","[35683, 93624]"
"('URIish.java', 'org.eclipse.jgit.transport.URIish', '<init>', '^(?:([^/:@]+)(?::([^\\\\/]+))?@)?([^\\\\/:]{2,}):([\\\\/](?:(?:[^\\\\/]+[\\\\/]+)*[^\\\\/]+[\\\\/]*))$', '/home/m y')","[176135, 176250]"
"('URIish.java', 'org.eclipse.jgit.transport.URIish', '<init>', '^([a-z][a-z0-9+-]+)://(?:(?:([^/:@]+)(?::([^\\\\/]+))?@)?((?:[^\\\\/:]+)|(?:\\[[0-9a-f:]+\\]))(?::(\\d+))?((?:/~(?:[^\\\\/]+))?[\\\\/]))?(.+)?$', 'http://l usr\\example.com@1.2.3.4:80/D:\\x')",[143475]
"('URIish.java', 'org.eclipse.jgit.transport.URIish', '<init>', '^(file):([\\\\/](?![\\\\/])((?:[A-Za-z]:)?[\\\\/]?(?:(?:[^\\\\/]+[\\\\/]+)*[^\\\\/]+[\\\\/]*)))$', 'file:///tmp/jgit_test_9110062569867430411_tmp/tmp_7068575188740904856')",[180728]
"('Description.java', 'org.junit.runner.Description', 'methodAndClassNamePatternGroupOrDefault', '([\\s\\S]*)\\((.*)\\)', 'testFilter_NONE_And_ALL(org.eclipse.jgit.revwalk.RevWalkFilterTest)')","[8347, 67136]"
"('Description.java', 'org.junit.runner.Description', 'methodAndClassNamePatternGroupOrDefault', '([\\s\\S]*)\\((.*)\\)', 'testSort_Default(org.eclipse.jgit.revwalk.RevWalkSortTest)')","[9097, 67862]"
"('Description.java', 'org.junit.runner.Description', 'methodAndClassNamePatternGroupOrDefault', '([\\s\\S]*)\\((.*)\\)', 'testUpdateRefLockFailureLocked(org.eclipse.jgit.internal.storage.file.RefUpdateTest)')","[55856, 113006]"
"('Description.java', 'org.junit.runner.Description', 'methodAndClassNamePatternGroupOrDefault', '([\\s\\S]*)\\((.*)\\)', 'testSwap(org.eclipse.jgit.diff.EditTest)')","[15873, 74264]"
"('Description.java', 'org.junit.runner.Description', 'methodAndClassNamePatternGroupOrDefault', '([\\s\\S]*)\\((.*)\\)', 'testDequote_Empty1(org.eclipse.jgit.util.QuotedStringGitPathStyleTest)')","[34034, 91996]"
"('Description.java', 'org.junit.runner.Description', 'methodAndClassNamePatternGroupOrDefault', '([\\s\\S]*)\\((.*)\\)', 'testEntryPath(org.eclipse.jgit.treewalk.AbstractTreeIteratorTest)')","[29239, 87530]"
"('Description.java', 'org.junit.runner.Description', 'methodAndClassNamePatternGroupOrDefault', '([\\s\\S]*)\\((.*)\\)', 'testTimeout_readByte_Success2(org.eclipse.jgit.util.io.TimeoutInputStreamTest)')","[32727, 90786]"
"('Description.java', 'org.junit.runner.Description', 'methodAndClassNamePatternGroupOrDefault', '([\\s\\S]*)\\((.*)\\)', 'testRenameOverExistingEmptyDirectory(org.eclipse.jgit.util.FileUtilTest)')","[33910, 91886]"
"('URIish.java', 'org.eclipse.jgit.transport.URIish', '<init>', '^([a-z][a-z0-9+-]+)://(?:(?:([^/:@]+)(?::([^\\\\/]+))?@)?((?:[^\\\\/:]+)|(?:\\[[0-9a-f:]+\\]))(?::(\\d+))?((?:/~(?:[^\\\\/]+))?[\\\\/]))?(.+)?$', 'http://me:wtf@1.2.3.4:80/D:/x')",[129077]
"('Description.java', 'org.junit.runner.Description', 'methodAndClassNamePatternGroupOrDefault', '([\\s\\S]*)\\((.*)\\)', 'testRebaseWithAutoStashConflictOnApply(org.eclipse.jgit.api.RebaseCommandTest)')","[45318, 102842]"
"('Description.java', 'org.junit.runner.Description', 'methodAndClassNamePatternGroupOrDefault', '([\\s\\S]*)\\((.*)\\)', 'testStopOnConflictAndSkipNoConflict(org.eclipse.jgit.api.RebaseCommandTest)')","[46074, 103634]"
"('URIish.java', 'org.eclipse.jgit.transport.URIish', '<init>', '^(file):([\\\\/](?![\\\\/])((?:[A-Za-z]:)?[\\\\/]?(?:(?:[^\\\\/]+[\\\\/]+)*[^\\\\/]+[\\\\/]*)))$', 'ssh+git://lusr\\example:wtf@[::1]:1234/D:/x')",[128134]
"('Description.java', 'org.junit.runner.Description', 'methodAndClassNamePatternGroupOrDefault', '([\\s\\S]*)\\((.*)\\)', 'testCloneIsSparseWhenPossible(org.eclipse.jgit.treewalk.filter.NotTreeFilterTest)')","[31443, 89620]"
"('Description.java', 'org.junit.runner.Description', 'methodAndClassNamePatternGroupOrDefault', '([\\s\\S]*)\\((.*)\\)', 'unknownRepositoryFormatVersion(org.eclipse.jgit.internal.storage.file.FileRepositoryBuilderTest)')","[53759, 111048]"
"('URIish.java', 'org.eclipse.jgit.transport.URIish', '<init>', '^([a-z][a-z0-9+-]+)://(?:(?:([^/:@]+)(?::([^\\\\/]+))?@)?((?:[^\\\\/:]+)|(?:\\[[0-9a-f:]+\\]))(?::(\\d+))?((?:/~(?:[^\\\\/]+))?[\\\\/]))?(.+)?$', 'https://l usr\\example.com:wtf@1.2.3.4:80/D:\\x')",[133539]
"('URIish.java', 'org.eclipse.jgit.transport.URIish', '<init>', '^(file):([\\\\/](?![\\\\/])((?:[A-Za-z]:)?[\\\\/]?(?:(?:[^\\\\/]+[\\\\/]+)*[^\\\\/]+[\\\\/]*)))$', 'ssh+git://lusr\\example@[::1]:1234/D:\\x')",[141428]
"('Description.java', 'org.junit.runner.Description', 'methodAndClassNamePatternGroupOrDefault', '([\\s\\S]*)\\((.*)\\)', 'testDeleteNotFound(org.eclipse.jgit.internal.storage.file.RefUpdateTest)')","[55625, 112764]"
"('Description.java', 'org.junit.runner.Description', 'methodAndClassNamePatternGroupOrDefault', '([\\s\\S]*)\\((.*)\\)', 'testNonRecursiveFiltering(org.eclipse.jgit.treewalk.filter.PathSuffixFilterTest)')","[30987, 89202]"
"('Description.java', 'org.junit.runner.Description', 'methodAndClassNamePatternGroupOrDefault', '([\\s\\S]*)\\((.*)\\)', 'testFileInFolderCommittedModifiedAllIgnored(org.eclipse.jgit.treewalk.filter.IndexDiffFilterTest)')","[30233, 88432]"
"('URIish.java', 'org.eclipse.jgit.transport.URIish', '<init>', '^(?:([^/:@]+)(?::([^\\\\/]+))?@)?((?:[^\\\\/:]+)|(?:\\[[0-9a-f:]+\\])):((?:(?:/~(?:[^\\\\/]+))[\\\\/])?(?:(?:[^\\\\/]+[\\\\/]+)*[^\\\\/]+[\\\\/]*))$', '/some/dir')","[117597, 118007, 118177, 118297, 118732, 118952, 119072, 119295, 119518, 119640, 119885, 120295, 120415, 120860]"
"('URIish.java', 'org.eclipse.jgit.transport.URIish', '<init>', '^(file):([\\\\/](?![\\\\/])((?:[A-Za-z]:)?[\\\\/]?(?:(?:[^\\\\/]+[\\\\/]+)*[^\\\\/]+[\\\\/]*)))$', 'https://me:wtf@[::1]:80//')",[132642]
"('URIish.java', 'org.eclipse.jgit.transport.URIish', '<init>', '^([a-z][a-z0-9+-]+)://(?:(?:([^/:@]+)(?::([^\\\\/]+))?@)?((?:[^\\\\/:]+)|(?:\\[[0-9a-f:]+\\]))(?::(\\d+))?((?:/~(?:[^\\\\/]+))?[\\\\/]))?(.+)?$', 'ssh+git://l usr\\example.com@1.2.3.4/D:\\x')","[153227, 153411]"
"('URIish.java', 'org.eclipse.jgit.transport.URIish', '<init>', '^([a-z][a-z0-9+-]+)://(?:(?:([^/:@]+)(?::([^\\\\/]+))?@)?((?:[^\\\\/:]+)|(?:\\[[0-9a-f:]+\\]))(?::(\\d+))?((?:/~(?:[^\\\\/]+))?[\\\\/]))?(.+)?$', 'http://l usr\\example.com:wtf@1.2.3.4:1234//')",[129905]
"('Description.java', 'org.junit.runner.Description', 'methodAndClassNamePatternGroupOrDefault', '([\\s\\S]*)\\((.*)\\)', 'shouldReportFileModeChange(org.eclipse.jgit.diff.DiffEntryTest)')","[13812, 72284]"
"('Description.java', 'org.junit.runner.Description', 'methodAndClassNamePatternGroupOrDefault', '([\\s\\S]*)\\((.*)\\)', 'testMasterMaster(org.eclipse.jgit.transport.RefSpecTest)')","[2857, 61922]"
"('URIish.java', 'org.eclipse.jgit.transport.URIish', '<init>', '^([a-z][a-z0-9+-]+)://(?:(?:([^/:@]+)(?::([^\\\\/]+))?@)?((?:[^\\\\/:]+)|(?:\\[[0-9a-f:]+\\]))(?::(\\d+))?((?:/~(?:[^\\\\/]+))?[\\\\/]))?(.+)?$', '/tmp/jgit_test_2763785820419085746_tmp/tmp_961093183525182339')","[204131, 204261, 204408]"
"('Description.java', 'org.junit.runner.Description', 'methodAndClassNamePatternGroupOrDefault', '([\\s\\S]*)\\((.*)\\)', 'testForbiddenNamesOnWindowsEgLpt1DotSuffix(org.eclipse.jgit.lib.DirCacheCheckoutMaliciousPathTest)')","[21097, 79478]"
"('URIish.java', 'org.eclipse.jgit.transport.URIish', '<init>', '^(file):([\\\\/](?![\\\\/])((?:[A-Za-z]:)?[\\\\/]?(?:(?:[^\\\\/]+[\\\\/]+)*[^\\\\/]+[\\\\/]*)))$', 'https://me@[::1]//')","[158954, 159138]"
"('Description.java', 'org.junit.runner.Description', 'methodAndClassNamePatternGroupOrDefault', '([\\s\\S]*)\\((.*)\\)', 'testModifyY(org.eclipse.jgit.api.ApplyCommandTest)')","[46782, 104316]"
"('Description.java', 'org.junit.runner.Description', 'methodAndClassNamePatternGroupOrDefault', '([\\s\\S]*)\\((.*)\\)', 'testBackwords_Prebuilts1(org.eclipse.jgit.treewalk.CanonicalTreeParserTest)')","[29836, 88036]"
"('Description.java', 'org.junit.runner.Description', 'methodAndClassNamePatternGroupOrDefault', '([\\s\\S]*)\\((.*)\\)', 'org.eclipse.jgit.treewalk.AbstractTreeIteratorTest')","[29134, 186019]"
"('URIish.java', 'org.eclipse.jgit.transport.URIish', '<init>', '^([a-z][a-z0-9+-]+)://(?:(?:([^/:@]+)(?::([^\\\\/]+))?@)?((?:[^\\\\/:]+)|(?:\\[[0-9a-f:]+\\]))(?::(\\d+))?((?:/~(?:[^\\\\/]+))?[\\\\/]))?(.+)?$', 'ssh://lusr\\example:wtf@[::1]:80/D:\\x')",[125075]
"('Description.java', 'org.junit.runner.Description', 'methodAndClassNamePatternGroupOrDefault', '([\\s\\S]*)\\((.*)\\)', 'testAddLargeBlocks(org.eclipse.jgit.revwalk.FIFORevQueueTest)')","[9326, 68082]"
"('URIish.java', 'org.eclipse.jgit.transport.URIish', '<init>', '^(file):([\\\\/](?![\\\\/])((?:[A-Za-z]:)?[\\\\/]?(?:(?:[^\\\\/]+[\\\\/]+)*[^\\\\/]+[\\\\/]*)))$', 'https://me:wtf@1.2.3.4:80//abc')",[132320]
"('Description.java', 'org.junit.runner.Description', 'methodAndClassNamePatternGroupOrDefault', '([\\s\\S]*)\\((.*)\\)', 'testListBranchesWithContains(org.eclipse.jgit.api.BranchCommandTest)')","[47406, 104910]"
"('Description.java', 'org.junit.runner.Description', 'methodAndClassNamePatternGroupOrDefault', '([\\s\\S]*)\\((.*)\\)', 'testCherryPickConflictReset(org.eclipse.jgit.api.CherryPickCommandTest)')","[47843, 105328]"
"('URIish.java', 'org.eclipse.jgit.transport.URIish', '<init>', '^([a-z][a-z0-9+-]+)://(?:(?:([^/:@]+)(?::([^\\\\/]+))?@)?((?:[^\\\\/:]+)|(?:\\[[0-9a-f:]+\\]))(?::(\\d+))?((?:/~(?:[^\\\\/]+))?[\\\\/]))?(.+)?$', 'git://abc')",[174847]
"('URIish.java', 'org.eclipse.jgit.transport.URIish', '<init>', '^(file):([\\\\/](?![\\\\/])((?:[A-Za-z]:)?[\\\\/]?(?:(?:[^\\\\/]+[\\\\/]+)*[^\\\\/]+[\\\\/]*)))$', 'ssh+git://l usr\\example.com@1.2.3.4/D:\\x')","[153204, 153388]"
"('Description.java', 'org.junit.runner.Description', 'methodAndClassNamePatternGroupOrDefault', '([\\s\\S]*)\\((.*)\\)', 'commitNewSubmodule(org.eclipse.jgit.api.CommitCommandTest)')","[43587, 101148]"
"('Description.java', 'org.junit.runner.Description', 'methodAndClassNamePatternGroupOrDefault', '([\\s\\S]*)\\((.*)\\)', 'testUpdateWorkingDirectory(org.eclipse.jgit.api.PathCheckoutCommandTest)')","[46906, 104426]"
"('Description.java', 'org.junit.runner.Description', 'methodAndClassNamePatternGroupOrDefault', '([\\s\\S]*)\\((.*)\\)', 'testEscapedBracket3(org.eclipse.jgit.fnmatch.FileNameMatcherTest)')","[19273, 77806]"
"('Description.java', 'org.junit.runner.Description', 'methodAndClassNamePatternGroupOrDefault', '([\\s\\S]*)\\((.*)\\)', 'test2_FromString(org.eclipse.jgit.lib.AbbreviatedObjectIdTest)')","[22538, 80908]"
"('Description.java', 'org.junit.runner.Description', 'methodAndClassNamePatternGroupOrDefault', '([\\s\\S]*)\\((.*)\\)', 'org.eclipse.jgit.treewalk.PostOrderTreeWalkTest')","[29464, 186100]"
"('Description.java', 'org.junit.runner.Description', 'methodAndClassNamePatternGroupOrDefault', '([\\s\\S]*)\\((.*)\\)', 'org.eclipse.jgit.treewalk.filter.PathSuffixFilterTest')","[30924, 186235]"
"('URIish.java', 'org.eclipse.jgit.transport.URIish', '<init>', '^(file):([\\\\/](?![\\\\/])((?:[A-Za-z]:)?[\\\\/]?(?:(?:[^\\\\/]+[\\\\/]+)*[^\\\\/]+[\\\\/]*)))$', 'https://l usr\\example.com:wtf@[::1]:80//abc')",[133792]
"('URIish.java', 'org.eclipse.jgit.transport.URIish', '<init>', '^(file):([\\\\/](?![\\\\/])((?:[A-Za-z]:)?[\\\\/]?(?:(?:[^\\\\/]+[\\\\/]+)*[^\\\\/]+[\\\\/]*)))$', 'https://lusr\\example:wtf@[::1]:1234//abc')",[134712]
"('URIish.java', 'org.eclipse.jgit.transport.URIish', '<init>', '^([a-z][a-z0-9+-]+)://(?:(?:([^/:@]+)(?::([^\\\\/]+))?@)?((?:[^\\\\/:]+)|(?:\\[[0-9a-f:]+\\]))(?::(\\d+))?((?:/~(?:[^\\\\/]+))?[\\\\/]))?(.+)?$', 'http://me@[::1]:1234/D:\\x')",[142555]
"('Description.java', 'org.junit.runner.Description', 'methodAndClassNamePatternGroupOrDefault', '([\\s\\S]*)\\((.*)\\)', 'testSpaceGroupCase1(org.eclipse.jgit.fnmatch.FileNameMatcherTest)')","[17341, 75782]"
"('Description.java', 'org.junit.runner.Description', 'methodAndClassNamePatternGroupOrDefault', '([\\s\\S]*)\\((.*)\\)', 'submoduleHeadMatchesIndex(org.eclipse.jgit.treewalk.FileTreeIteratorTest)')","[28989, 87288]"
"('Description.java', 'org.junit.runner.Description', 'methodAndClassNamePatternGroupOrDefault', '([\\s\\S]*)\\((.*)\\)', 'testCherryPick(org.eclipse.jgit.api.CherryPickCommandTest)')","[47780, 105262]"
"('Description.java', 'org.junit.runner.Description', 'methodAndClassNamePatternGroupOrDefault', '([\\s\\S]*)\\((.*)\\)', 'testDequote_Empty2(org.eclipse.jgit.util.QuotedStringGitPathStyleTest)')","[34055, 92018]"
"('URIish.java', 'org.eclipse.jgit.transport.URIish', '<init>', '^([a-z][a-z0-9+-]+)://(?:(?:([^/:@]+)(?::([^\\\\/]+))?@)?((?:[^\\\\/:]+)|(?:\\[[0-9a-f:]+\\]))(?::(\\d+))?((?:/~(?:[^\\\\/]+))?[\\\\/]))?(.+)?$', 'file:///home/m y')","[176549, 176595]"
"('Description.java', 'org.junit.runner.Description', 'methodAndClassNamePatternGroupOrDefault', '([\\s\\S]*)\\((.*)\\)', 'org.eclipse.jgit.api.BranchCommandTest')","[47217, 207278]"
"('Description.java', 'org.junit.runner.Description', 'methodAndClassNamePatternGroupOrDefault', '([\\s\\S]*)\\((.*)\\)', 'testParse_NoMessage(org.eclipse.jgit.revwalk.RevTagParseTest)')","[6977, 65860]"
"('Description.java', 'org.junit.runner.Description', 'methodAndClassNamePatternGroupOrDefault', '([\\s\\S]*)\\((.*)\\)', 'testCntrlGroupCase1(org.eclipse.jgit.fnmatch.FileNameMatcherTest)')","[17026, 75452]"
"('Description.java', 'org.junit.runner.Description', 'methodAndClassNamePatternGroupOrDefault', '([\\s\\S]*)\\((.*)\\)', 'testOnlyOption_f1_5_d(org.eclipse.jgit.api.CommitOnlyTest)')","[48927, 106384]"
"('URIish.java', 'org.eclipse.jgit.transport.URIish', '<init>', '^(file):([\\\\/](?![\\\\/])((?:[A-Za-z]:)?[\\\\/]?(?:(?:[^\\\\/]+[\\\\/]+)*[^\\\\/]+[\\\\/]*)))$', 'http://l usr\\example.com@example.com:1234/D:/x')",[142854]
"('URIish.java', 'org.eclipse.jgit.transport.URIish', '<init>', '^(file):([\\\\/](?![\\\\/])((?:[A-Za-z]:)?[\\\\/]?(?:(?:[^\\\\/]+[\\\\/]+)*[^\\\\/]+[\\\\/]*)))$', 'ssh://lusr\\example@1.2.3.4:80//abc')",[137840]
"('Description.java', 'org.junit.runner.Description', 'methodAndClassNamePatternGroupOrDefault', '([\\s\\S]*)\\((.*)\\)', 'testRebaseParentOntoHeadShouldBeUptoDate(org.eclipse.jgit.api.RebaseCommandTest)')","[46053, 103612]"
"('Description.java', 'org.junit.runner.Description', 'methodAndClassNamePatternGroupOrDefault', '([\\s\\S]*)\\((.*)\\)', 'testAddRevFlagSet(org.eclipse.jgit.revwalk.RevObjectTest)')","[8555, 67334]"
"('Description.java', 'org.junit.runner.Description', 'methodAndClassNamePatternGroupOrDefault', '([\\s\\S]*)\\((.*)\\)', 'testDeleteForce(org.eclipse.jgit.internal.storage.file.RefUpdateTest)')","[55604, 112742]"
"('Description.java', 'org.junit.runner.Description', 'methodAndClassNamePatternGroupOrDefault', '([\\s\\S]*)\\((.*)\\)', 'org.eclipse.jgit.diff.EditTest')","[15726, 182856]"
"('ChangeIdUtil.java', 'org.eclipse.jgit.util.ChangeIdUtil', 'indexOfChangeId', '(^Change-Id: *I[a-f0-9]{40}$)', 'NOTE: This')",[190996]
"('URIish.java', 'org.eclipse.jgit.transport.URIish', '<init>', '^(file):([\\\\/](?![\\\\/])((?:[A-Za-z]:)?[\\\\/]?(?:(?:[^\\\\/]+[\\\\/]+)*[^\\\\/]+[\\\\/]*)))$', 'https://l usr\\example.com:wtf@[::1]:1234//abc')",[133608]
"('URIish.java', 'org.eclipse.jgit.transport.URIish', '<init>', '^([a-z][a-z0-9+-]+)://(?:(?:([^/:@]+)(?::([^\\\\/]+))?@)?((?:[^\\\\/:]+)|(?:\\[[0-9a-f:]+\\]))(?::(\\d+))?((?:/~(?:[^\\\\/]+))?[\\\\/]))?(.+)?$', 'ssh://me@example.com/D:/x')","[148397, 148581]"
"('Description.java', 'org.junit.runner.Description', 'methodAndClassNamePatternGroupOrDefault', '([\\s\\S]*)\\((.*)\\)', 'testDequote_UnknownEscapeQ(org.eclipse.jgit.util.QuotedStringGitPathStyleTest)')","[34244, 92216]"
"('URIish.java', 'org.eclipse.jgit.transport.URIish', '<init>', '^([a-z][a-z0-9+-]+)://(?:(?:([^/:@]+)(?::([^\\\\/]+))?@)?((?:[^\\\\/:]+)|(?:\\[[0-9a-f:]+\\]))(?::(\\d+))?((?:/~(?:[^\\\\/]+))?[\\\\/]))?(.+)?$', 'ssh://l usr\\example.com@1.2.3.4:80//abc')",[136759]
"('URIish.java', 'org.eclipse.jgit.transport.URIish', '<init>', '^(file):([\\\\/](?![\\\\/])((?:[A-Za-z]:)?[\\\\/]?(?:(?:[^\\\\/]+[\\\\/]+)*[^\\\\/]+[\\\\/]*)))$', 'http://me@example.com//')","[154906, 155090]"
"('Description.java', 'org.junit.runner.Description', 'methodAndClassNamePatternGroupOrDefault', '([\\s\\S]*)\\((.*)\\)', 'org.eclipse.jgit.patch.GetTextTest')","[39923, 193663]"
"('Description.java', 'org.junit.runner.Description', 'methodAndClassNamePatternGroupOrDefault', '([\\s\\S]*)\\((.*)\\)', 'testSingleSubtree(org.eclipse.jgit.dircache.DirCacheTreeTest)')","[11984, 70568]"
"('URIish.java', 'org.eclipse.jgit.transport.URIish', '<init>', '^(file):([\\\\/](?![\\\\/])((?:[A-Za-z]:)?[\\\\/]?(?:(?:[^\\\\/]+[\\\\/]+)*[^\\\\/]+[\\\\/]*)))$', 'ssh+git://lusr\\example@[::1]:80//')",[141474]
"('Description.java', 'org.junit.runner.Description', 'methodAndClassNamePatternGroupOrDefault', '([\\s\\S]*)\\((.*)\\)', 'testPullConflict(org.eclipse.jgit.api.PullCommandTest)')","[46553, 104096]"
"('Description.java', 'org.junit.runner.Description', 'methodAndClassNamePatternGroupOrDefault', '([\\s\\S]*)\\((.*)\\)', 'testOnlyOption_f1_1_d(org.eclipse.jgit.api.CommitOnlyTest)')","[48507, 105944]"
"('Description.java', 'org.junit.runner.Description', 'methodAndClassNamePatternGroupOrDefault', '([\\s\\S]*)\\((.*)\\)', 'testTrivialTwoWay_validSubtreeSort(org.eclipse.jgit.merge.SimpleMergeTest)')","[9824, 68544]"
"('Description.java', 'org.junit.runner.Description', 'methodAndClassNamePatternGroupOrDefault', '([\\s\\S]*)\\((.*)\\)', 'testEqualsWithWhitespace(org.eclipse.jgit.diff.RawTextIgnoreAllWhitespaceTest)')","[15707, 74110]"
"('Description.java', 'org.junit.runner.Description', 'methodAndClassNamePatternGroupOrDefault', '([\\s\\S]*)\\((.*)\\)', 'testFastForwardRebaseWithModification(org.eclipse.jgit.api.RebaseCommandTest)')","[45675, 103216]"
"('URIish.java', 'org.eclipse.jgit.transport.URIish', '<init>', '^([a-z][a-z0-9+-]+)://(?:(?:([^/:@]+)(?::([^\\\\/]+))?@)?((?:[^\\\\/:]+)|(?:\\[[0-9a-f:]+\\]))(?::(\\d+))?((?:/~(?:[^\\\\/]+))?[\\\\/]))?(.+)?$', 'ssh+git://lusr\\example:wtf@1.2.3.4:80//abc')",[127927]
"('ChangeIdUtil.java', 'org.eclipse.jgit.util.ChangeIdUtil', 'insertId', '^(Bug|Issue)[a-zA-Z0-9-]*:.*$', 'Bug: 33')","[187412, 189311, 191956, 192186]"
"('URIish.java', 'org.eclipse.jgit.transport.URIish', '<init>', '^(file):([\\\\/](?![\\\\/])((?:[A-Za-z]:)?[\\\\/]?(?:(?:[^\\\\/]+[\\\\/]+)*[^\\\\/]+[\\\\/]*)))$', 'http://l usr\\example.com:wtf@example.com:1234/D:/x')",[129606]
"('URIish.java', 'org.eclipse.jgit.transport.URIish', '<init>', '^([a-z][a-z0-9+-]+)://(?:(?:([^/:@]+)(?::([^\\\\/]+))?@)?((?:[^\\\\/:]+)|(?:\\[[0-9a-f:]+\\]))(?::(\\d+))?((?:/~(?:[^\\\\/]+))?[\\\\/]))?(.+)?$', 'http://example.com/D:\\x')","[168315, 168499, 169419, 169603, 170523, 170707]"
"('Description.java', 'org.junit.runner.Description', 'methodAndClassNamePatternGroupOrDefault', '([\\s\\S]*)\\((.*)\\)', 'testConfigureCache_PackedGitWindowSize_512(org.eclipse.jgit.internal.storage.file.WindowCacheReconfigureTest)')","[53261, 110586]"
"('Description.java', 'org.junit.runner.Description', 'methodAndClassNamePatternGroupOrDefault', '([\\s\\S]*)\\((.*)\\)', 'org.eclipse.jgit.api.StashListCommandTest')","[47114, 205851]"
"('Description.java', 'org.junit.runner.Description', 'methodAndClassNamePatternGroupOrDefault', '([\\s\\S]*)\\((.*)\\)', 'testMultipleCreations(org.eclipse.jgit.api.MergeCommandTest)')","[44131, 101698]"
"('URIish.java', 'org.eclipse.jgit.transport.URIish', '<init>', '^(file):([\\\\/](?![\\\\/])((?:[A-Za-z]:)?[\\\\/]?(?:(?:[^\\\\/]+[\\\\/]+)*[^\\\\/]+[\\\\/]*)))$', 'ssh+git://example.com/D:\\x')","[164980, 165164, 166084, 166268, 167188, 167372]"
"('ChangeIdUtil.java', 'org.eclipse.jgit.util.ChangeIdUtil', 'indexOfFirstFooterLine', '^[ \\[].*$', ' ')","[189234, 191879]"
"('Description.java', 'org.junit.runner.Description', 'methodAndClassNamePatternGroupOrDefault', '([\\s\\S]*)\\((.*)\\)', 'testQuoteAtAndNumber(org.eclipse.jgit.util.QuotedStringGitPathStyleTest)')","[34391, 92370]"
"('Description.java', 'org.junit.runner.Description', 'methodAndClassNamePatternGroupOrDefault', '([\\s\\S]*)\\((.*)\\)', 'testCommonScore_SameFiles(org.eclipse.jgit.diff.SimilarityIndexTest)')","[14833, 73274]"
"('URIish.java', 'org.eclipse.jgit.transport.URIish', '<init>', '^([a-z][a-z0-9+-]+)://(?:(?:([^/:@]+)(?::([^\\\\/]+))?@)?((?:[^\\\\/:]+)|(?:\\[[0-9a-f:]+\\]))(?::(\\d+))?((?:/~(?:[^\\\\/]+))?[\\\\/]))?(.+)?$', 'ssh://lusr\\example@1.2.3.4:1234//')",[137633]
"('Description.java', 'org.junit.runner.Description', 'methodAndClassNamePatternGroupOrDefault', '([\\s\\S]*)\\((.*)\\)', 'testMkdirs(org.eclipse.jgit.util.FileUtilTest)')","[33826, 91798]"
"('Description.java', 'org.junit.runner.Description', 'methodAndClassNamePatternGroupOrDefault', '([\\s\\S]*)\\((.*)\\)', 'repackEmptyRepo_noPackCreated(org.eclipse.jgit.internal.storage.file.GcBasicPackingTest)')","[53097, 110454]"
"('URIish.java', 'org.eclipse.jgit.transport.URIish', '<init>', '^(file):([\\\\/](?![\\\\/])((?:[A-Za-z]:)?[\\\\/]?(?:(?:[^\\\\/]+[\\\\/]+)*[^\\\\/]+[\\\\/]*)))$', 'ssh+git://me@1.2.3.4//')","[151962, 152146]"
"('URIish.java', 'org.eclipse.jgit.transport.URIish', '<init>', '^([\\\\/]?((?:[A-Za-z]:)?[\\\\/]?(?:(?:[^\\\\/]+[\\\\/]+)*[^\\\\/]+[\\\\/]*)))$', '/some/dir')","[117645, 118055, 118225, 118345, 118780, 119000, 119120, 119345, 119568, 119688, 119933, 120343, 120463, 120908]"
"('URIish.java', 'org.eclipse.jgit.transport.URIish', '<init>', '^(file):([\\\\/](?![\\\\/])((?:[A-Za-z]:)?[\\\\/]?(?:(?:[^\\\\/]+[\\\\/]+)*[^\\\\/]+[\\\\/]*)))$', 'https://[::1]/D:/x')","[172294, 172478, 173398, 173582, 174502, 174686]"
"('URIish.java', 'org.eclipse.jgit.transport.URIish', '<init>', '^([a-z][a-z0-9+-]+)://(?:(?:([^/:@]+)(?::([^\\\\/]+))?@)?((?:[^\\\\/:]+)|(?:\\[[0-9a-f:]+\\]))(?::(\\d+))?((?:/~(?:[^\\\\/]+))?[\\\\/]))?(.+)?$', 'https://l usr\\example.com@example.com/D:\\x')","[159483, 159667]"
"('Description.java', 'org.junit.runner.Description', 'methodAndClassNamePatternGroupOrDefault', '([\\s\\S]*)\\((.*)\\)', 'testRebaseShouldLeaveWorkspaceUntouchedWithUnstagedChangesConflict(org.eclipse.jgit.api.RebaseCommandTest)')","[44982, 102490]"
"('Description.java', 'org.junit.runner.Description', 'methodAndClassNamePatternGroupOrDefault', '([\\s\\S]*)\\((.*)\\)', 'testReadFullyFannedOut(org.eclipse.jgit.notes.NoteMapTest)')","[40818, 98486]"
"('Repository.java', 'org.eclipse.jgit.lib.Repository', 'resolve', '^-\\d+$', '7')","[185429, 185456]"
"('QuotedString.java', 'org.eclipse.jgit.util.QuotedString$BourneUserPathStyle', 'quote', '^~[A-Za-z0-9_-]*/.*$', 'a')","[192421, 192446]"
"('Description.java', 'org.junit.runner.Description', 'methodAndClassNamePatternGroupOrDefault', '([\\s\\S]*)\\((.*)\\)', 'onePathMerge(org.eclipse.jgit.api.NameRevCommandTest)')","[51687, 109156]"
"('Description.java', 'org.junit.runner.Description', 'methodAndClassNamePatternGroupOrDefault', '([\\s\\S]*)\\((.*)\\)', 'testFindNextOffsetWrongOffset(org.eclipse.jgit.internal.storage.file.PackReverseIndexTest)')","[57621, 114656]"
"('URIish.java', 'org.eclipse.jgit.transport.URIish', '<init>', '^(?:([^/:@]+)(?::([^\\\\/]+))?@)?([^\\\\/:]{2,}):([\\\\/](?:(?:[^\\\\/]+[\\\\/]+)*[^\\\\/]+[\\\\/]*))$', '/tmp/jgit_test_2418995499675152019_tmp/tmp_6807375775614242287.git')",[116458]
"('Description.java', 'org.junit.runner.Description', 'methodAndClassNamePatternGroupOrDefault', '([\\s\\S]*)\\((.*)\\)', 'shouldThrowIAEWhenScanShouldIncludeTreesAndWalkIsRecursive(org.eclipse.jgit.diff.DiffEntryTest)')","[13791, 72262]"
"('Description.java', 'org.junit.runner.Description', 'methodAndClassNamePatternGroupOrDefault', '([\\s\\S]*)\\((.*)\\)', 'org.eclipse.jgit.ignore.IgnoreMatcherTest')","[31731, 186397]"
"('Description.java', 'org.junit.runner.Description', 'methodAndClassNamePatternGroupOrDefault', '([\\s\\S]*)\\((.*)\\)', 'testMergeConflictFileFolder(org.eclipse.jgit.api.MergeCommandTest)')","[44089, 101654]"
"('URIish.java', 'org.eclipse.jgit.transport.URIish', '<init>', '^(file):([\\\\/](?![\\\\/])((?:[A-Za-z]:)?[\\\\/]?(?:(?:[^\\\\/]+[\\\\/]+)*[^\\\\/]+[\\\\/]*)))$', 'https://l usr\\example.com@[::1]:1234//')",[146810]
"('URIish.java', 'org.eclipse.jgit.transport.URIish', '<init>', '^(file):([\\\\/](?![\\\\/])((?:[A-Za-z]:)?[\\\\/]?(?:(?:[^\\\\/]+[\\\\/]+)*[^\\\\/]+[\\\\/]*)))$', 'ssh://1.2.3.4/D:\\x')","[162036, 162220, 163140, 163324, 164244, 164428]"
"('URIish.java', 'org.eclipse.jgit.transport.URIish', '<init>', '^(file):([\\\\/](?![\\\\/])((?:[A-Za-z]:)?[\\\\/]?(?:(?:[^\\\\/]+[\\\\/]+)*[^\\\\/]+[\\\\/]*)))$', 'ssh+git://example.com//abc')","[164888, 165072, 165992, 166176, 167096, 167280]"
"('URIish.java', 'org.eclipse.jgit.transport.URIish', '<init>', '^(file):([\\\\/](?![\\\\/])((?:[A-Za-z]:)?[\\\\/]?(?:(?:[^\\\\/]+[\\\\/]+)*[^\\\\/]+[\\\\/]*)))$', 'ssh+git://lusr\\example@[::1]//abc')","[154584, 154768]"
"('URIish.java', 'org.eclipse.jgit.transport.URIish', '<init>', '^(file):([\\\\/](?![\\\\/])((?:[A-Za-z]:)?[\\\\/]?(?:(?:[^\\\\/]+[\\\\/]+)*[^\\\\/]+[\\\\/]*)))$', 'ssh://l usr\\example.com@1.2.3.4//')","[149754, 149938]"
"('Description.java', 'org.junit.runner.Description', 'methodAndClassNamePatternGroupOrDefault', '([\\s\\S]*)\\((.*)\\)', 'testReadWriteMergeHeads(org.eclipse.jgit.lib.MergeHeadMsgTest)')","[24643, 82954]"
"('Description.java', 'org.junit.runner.Description', 'methodAndClassNamePatternGroupOrDefault', '([\\s\\S]*)\\((.*)\\)', 'testDirectoryFileSimple(org.eclipse.jgit.lib.DirCacheCheckoutTest)')","[23101, 81458]"
"('Description.java', 'org.junit.runner.Description', 'methodAndClassNamePatternGroupOrDefault', '([\\s\\S]*)\\((.*)\\)', 'logAllCommitsWithSkip(org.eclipse.jgit.api.LogCommandTest)')","[47635, 105130]"
"('Description.java', 'org.junit.runner.Description', 'methodAndClassNamePatternGroupOrDefault', '([\\s\\S]*)\\((.*)\\)', 'testNotPackTwice(org.eclipse.jgit.internal.storage.file.GcBasicPackingTest)')","[53055, 110410]"
"('URIish.java', 'org.eclipse.jgit.transport.URIish', '<init>', '^(file):([\\\\/](?![\\\\/])((?:[A-Za-z]:)?[\\\\/]?(?:(?:[^\\\\/]+[\\\\/]+)*[^\\\\/]+[\\\\/]*)))$', 'https://l usr\\example.com@1.2.3.4:80//')",[146626]
"('Description.java', 'org.junit.runner.Description', 'methodAndClassNamePatternGroupOrDefault', '([\\s\\S]*)\\((.*)\\)', 'org.eclipse.jgit.internal.storage.pack.IntSetTest')","[52994, 209570]"
"('URIish.java', 'org.eclipse.jgit.transport.URIish', '<init>', '^(file):([\\\\/](?![\\\\/])((?:[A-Za-z]:)?[\\\\/]?(?:(?:[^\\\\/]+[\\\\/]+)*[^\\\\/]+[\\\\/]*)))$', 'https://me@1.2.3.4:1234/D:/x')",[145430]
"('URIish.java', 'org.eclipse.jgit.transport.URIish', '<init>', '^(file):([\\\\/](?![\\\\/])((?:[A-Za-z]:)?[\\\\/]?(?:(?:[^\\\\/]+[\\\\/]+)*[^\\\\/]+[\\\\/]*)))$', '/tmp/jgit_test_8508429422333606359_tmp/tmp_7349125838900302966/.git')","[206437, 206571]"
"('Description.java', 'org.junit.runner.Description', 'methodAndClassNamePatternGroupOrDefault', '([\\s\\S]*)\\((.*)\\)', 'testXDigitGroupCase7(org.eclipse.jgit.fnmatch.FileNameMatcherTest)')","[18832, 77344]"
"('Description.java', 'org.junit.runner.Description', 'methodAndClassNamePatternGroupOrDefault', '([\\s\\S]*)\\((.*)\\)', 'testCreateOrphanBranchWithStartCommit(org.eclipse.jgit.api.CheckoutCommandTest)')","[43148, 100708]"
"('Description.java', 'org.junit.runner.Description', 'methodAndClassNamePatternGroupOrDefault', '([\\s\\S]*)\\((.*)\\)', 'testConflictingMergeFailsDueToDirtyIndex(org.eclipse.jgit.api.MergeCommandTest)')","[43732, 101280]"
"('URIish.java', 'org.eclipse.jgit.transport.URIish', '<init>', '^([\\\\/]?((?:[A-Za-z]:)?[\\\\/]?(?:(?:[^\\\\/]+[\\\\/]+)*[^\\\\/]+[\\\\/]*)))$', '/tmp/jgit_test_7464312454061528800_tmp/tmp_1728499304085067581/.git')","[183575, 183735]"
"('Description.java', 'org.junit.runner.Description', 'methodAndClassNamePatternGroupOrDefault', '([\\s\\S]*)\\((.*)\\)', 'org.eclipse.jgit.revwalk.RevWalkFilterTest')","[8137, 181622]"
"('Description.java', 'org.junit.runner.Description', 'methodAndClassNamePatternGroupOrDefault', '([\\s\\S]*)\\((.*)\\)', 'testFileInFolderCommittedAllDeleted(org.eclipse.jgit.treewalk.filter.IndexDiffFilterTest)')","[30737, 88960]"
"('URIish.java', 'org.eclipse.jgit.transport.URIish', '<init>', '^(?:([^/:@]+)(?::([^\\\\/]+))?@)?((?:[^\\\\/:]+)|(?:\\[[0-9a-f:]+\\])):((?:(?:/~(?:[^\\\\/]+))[\\\\/])?(?:(?:[^\\\\/]+[\\\\/]+)*[^\\\\/]+[\\\\/]*))$', '/a/b/c/')",[176342]
"('URIish.java', 'org.eclipse.jgit.transport.URIish', '<init>', '^(file):([\\\\/](?![\\\\/])((?:[A-Za-z]:)?[\\\\/]?(?:(?:[^\\\\/]+[\\\\/]+)*[^\\\\/]+[\\\\/]*)))$', 'http://1.2.3.4/D:\\x')","[168660, 168844, 169764, 169948, 170868, 171052]"
"('Description.java', 'org.junit.runner.Description', 'methodAndClassNamePatternGroupOrDefault', '([\\s\\S]*)\\((.*)\\)', 'testRebaseWithUnstagedMasterChange(org.eclipse.jgit.api.RebaseCommandTest)')","[45801, 103348]"
"('Description.java', 'org.junit.runner.Description', 'methodAndClassNamePatternGroupOrDefault', '([\\s\\S]*)\\((.*)\\)', 'testMaliciousGitPathEndDotWindows1(org.eclipse.jgit.lib.DirCacheCheckoutMaliciousPathTest)')","[21160, 79544]"
"('Description.java', 'org.junit.runner.Description', 'methodAndClassNamePatternGroupOrDefault', '([\\s\\S]*)\\((.*)\\)', 'org.eclipse.jgit.api.CommitCommandTest')","[43419, 202049]"
"('Description.java', 'org.junit.runner.Description', 'methodAndClassNamePatternGroupOrDefault', '([\\s\\S]*)\\((.*)\\)', 'testResetToNonexistingHEAD(org.eclipse.jgit.api.ResetCommandTest)')","[42753, 100334]"
"('Description.java', 'org.junit.runner.Description', 'methodAndClassNamePatternGroupOrDefault', '([\\s\\S]*)\\((.*)\\)', 'testInversedGroupCase0(org.eclipse.jgit.fnmatch.FileNameMatcherTest)')","[17236, 75672]"
"('URIish.java', 'org.eclipse.jgit.transport.URIish', '<init>', '^([a-z][a-z0-9+-]+)://(?:(?:([^/:@]+)(?::([^\\\\/]+))?@)?((?:[^\\\\/:]+)|(?:\\[[0-9a-f:]+\\]))(?::(\\d+))?((?:/~(?:[^\\\\/]+))?[\\\\/]))?(.+)?$', 'https://lusr\\example:wtf@example.com:80/D:/x')",[134229]
"('Description.java', 'org.junit.runner.Description', 'methodAndClassNamePatternGroupOrDefault', '([\\s\\S]*)\\((.*)\\)', 'testHeap(org.eclipse.jgit.util.TemporaryBufferTest)')","[34494, 92458]"
"('Description.java', 'org.junit.runner.Description', 'methodAndClassNamePatternGroupOrDefault', '([\\s\\S]*)\\((.*)\\)', 'org.eclipse.jgit.util.ChangeIdUtilTest')","[37595, 192290]"
"('Description.java', 'org.junit.runner.Description', 'methodAndClassNamePatternGroupOrDefault', '([\\s\\S]*)\\((.*)\\)', 'testHardResetAfterSquashMerge(org.eclipse.jgit.api.ResetCommandTest)')","[42711, 100290]"
"('Description.java', 'org.junit.runner.Description', 'methodAndClassNamePatternGroupOrDefault', '([\\s\\S]*)\\((.*)\\)', 'testURIEncode_unicode(org.eclipse.jgit.transport.URIishTest)')","[1097, 60118]"
"('URIish.java', 'org.eclipse.jgit.transport.URIish', '<init>', '^([a-z][a-z0-9+-]+)://(?:(?:([^/:@]+)(?::([^\\\\/]+))?@)?((?:[^\\\\/:]+)|(?:\\[[0-9a-f:]+\\]))(?::(\\d+))?((?:/~(?:[^\\\\/]+))?[\\\\/]))?(.+)?$', 'ssh://me:wtf@example.com:1234//')",[121809]
"('URIish.java', 'org.eclipse.jgit.transport.URIish', '<init>', '^(file):([\\\\/](?![\\\\/])((?:[A-Za-z]:)?[\\\\/]?(?:(?:[^\\\\/]+[\\\\/]+)*[^\\\\/]+[\\\\/]*)))$', 'https://lusr\\example:wtf@[::1]:80//abc')",[134896]
"('URIish.java', 'org.eclipse.jgit.transport.URIish', '<init>', '^(file):([\\\\/](?![\\\\/])((?:[A-Za-z]:)?[\\\\/]?(?:(?:[^\\\\/]+[\\\\/]+)*[^\\\\/]+[\\\\/]*)))$', '/abc/')",[179930]
"('URIish.java', 'org.eclipse.jgit.transport.URIish', '<init>', '^(file):([\\\\/](?![\\\\/])((?:[A-Za-z]:)?[\\\\/]?(?:(?:[^\\\\/]+[\\\\/]+)*[^\\\\/]+[\\\\/]*)))$', 'ssh+git://l usr\\example.com@example.com//abc')","[152744, 152928]"
"('URIish.java', 'org.eclipse.jgit.transport.URIish', '<init>', '^([a-z][a-z0-9+-]+)://(?:(?:([^/:@]+)(?::([^\\\\/]+))?@)?((?:[^\\\\/:]+)|(?:\\[[0-9a-f:]+\\]))(?::(\\d+))?((?:/~(?:[^\\\\/]+))?[\\\\/]))?(.+)?$', '/tmp/jgit_test_2434055886334526133_tmp/tmp_1405098318662614791.git')",[116533]
"('URIish.java', 'org.eclipse.jgit.transport.URIish', '<init>', '^([a-z][a-z0-9+-]+)://(?:(?:([^/:@]+)(?::([^\\\\/]+))?@)?((?:[^\\\\/:]+)|(?:\\[[0-9a-f:]+\\]))(?::(\\d+))?((?:/~(?:[^\\\\/]+))?[\\\\/]))?(.+)?$', 'ssh://me@[::1]/D:/x')","[149133, 149317]"
"('URIish.java', 'org.eclipse.jgit.transport.URIish', '<init>', '^(file):([\\\\/](?![\\\\/])((?:[A-Za-z]:)?[\\\\/]?(?:(?:[^\\\\/]+[\\\\/]+)*[^\\\\/]+[\\\\/]*)))$', 'http://me@[::1]/D:\\x')","[155780, 155964]"
"('Description.java', 'org.junit.runner.Description', 'methodAndClassNamePatternGroupOrDefault', '([\\s\\S]*)\\((.*)\\)', 'org.eclipse.jgit.api.CleanCommandTest')","[46261, 202538]"
"('Description.java', 'org.junit.runner.Description', 'methodAndClassNamePatternGroupOrDefault', '([\\s\\S]*)\\((.*)\\)', 'testCLIText(org.eclipse.jgit.nls.RootLocaleTest)')","[181, 59238]"
"('Description.java', 'org.junit.runner.Description', 'methodAndClassNamePatternGroupOrDefault', '([\\s\\S]*)\\((.*)\\)', 'testReadBoolean_TrueFalse1(org.eclipse.jgit.lib.ConfigTest)')","[28407, 86738]"
"('Description.java', 'org.junit.runner.Description', 'methodAndClassNamePatternGroupOrDefault', '([\\s\\S]*)\\((.*)\\)', 'testConfigureCache_PackedGitOpenFiles_0(org.eclipse.jgit.internal.storage.file.WindowCacheReconfigureTest)')","[53387, 110718]"
"('URIish.java', 'org.eclipse.jgit.transport.URIish', '<init>', '^(?:([^/:@]+)(?::([^\\\\/]+))?@)?((?:[^\\\\/:]+)|(?:\\[[0-9a-f:]+\\])):((?:(?:/~(?:[^\\\\/]+))[\\\\/])?(?:(?:[^\\\\/]+[\\\\/]+)*[^\\\\/]+[\\\\/]*))$', 'D:\\m y')","[176940, 177055]"
"('Description.java', 'org.junit.runner.Description', 'methodAndClassNamePatternGroupOrDefault', '([\\s\\S]*)\\((.*)\\)', 'testExactRename_OneRenameOneModify(org.eclipse.jgit.diff.RenameDetectorTest)')","[12730, 71250]"
"('Description.java', 'org.junit.runner.Description', 'methodAndClassNamePatternGroupOrDefault', '([\\s\\S]*)\\((.*)\\)', 'org.eclipse.jgit.lib.AbbreviatedObjectIdTest')","[22244, 184059]"
"('URIish.java', 'org.eclipse.jgit.transport.URIish', '<init>', '^(file):([\\\\/](?![\\\\/])((?:[A-Za-z]:)?[\\\\/]?(?:(?:[^\\\\/]+[\\\\/]+)*[^\\\\/]+[\\\\/]*)))$', 'ssh+git://lusr\\example:wtf@1.2.3.4:80/D:/x')",[127950]
"('Description.java', 'org.junit.runner.Description', 'methodAndClassNamePatternGroupOrDefault', '([\\s\\S]*)\\((.*)\\)', 'testAddWithParameterUpdate(org.eclipse.jgit.api.AddCommandTest)')","[50563, 108078]"
"('URIish.java', 'org.eclipse.jgit.transport.URIish', '<init>', '^(file):([\\\\/](?![\\\\/])((?:[A-Za-z]:)?[\\\\/]?(?:(?:[^\\\\/]+[\\\\/]+)*[^\\\\/]+[\\\\/]*)))$', 'ssh://lusr\\example@1.2.3.4:80/D:\\x')",[137932]
"('Description.java', 'org.junit.runner.Description', 'methodAndClassNamePatternGroupOrDefault', '([\\s\\S]*)\\((.*)\\)', 'testEditDelete(org.eclipse.jgit.notes.DefaultNoteMergerTest)')","[40568, 98244]"
"('Description.java', 'org.junit.runner.Description', 'methodAndClassNamePatternGroupOrDefault', '([\\s\\S]*)\\((.*)\\)', 'testVerySimplePatternCase4(org.eclipse.jgit.fnmatch.FileNameMatcherTest)')","[17131, 75562]"
"('URIish.java', 'org.eclipse.jgit.transport.URIish', '<init>', '^([a-z][a-z0-9+-]+)://(?:(?:([^/:@]+)(?::([^\\\\/]+))?@)?((?:[^\\\\/:]+)|(?:\\[[0-9a-f:]+\\]))(?::(\\d+))?((?:/~(?:[^\\\\/]+))?[\\\\/]))?(.+)?$', 'http://lusr\\example@1.2.3.4:80/D:/x')",[144533]
"('Description.java', 'org.junit.runner.Description', 'methodAndClassNamePatternGroupOrDefault', '([\\s\\S]*)\\((.*)\\)', 'testGetByte(org.eclipse.jgit.lib.ObjectIdTest)')","[28594, 86914]"
"('URIish.java', 'org.eclipse.jgit.transport.URIish', '<init>', '^(file):([\\\\/](?![\\\\/])((?:[A-Za-z]:)?[\\\\/]?(?:(?:[^\\\\/]+[\\\\/]+)*[^\\\\/]+[\\\\/]*)))$', 'ssh://lusr\\example:wtf@1.2.3.4:1234/D:/x')",[124454]
"('URIish.java', 'org.eclipse.jgit.transport.URIish', '<init>', '^(file):([\\\\/](?![\\\\/])((?:[A-Za-z]:)?[\\\\/]?(?:(?:[^\\\\/]+[\\\\/]+)*[^\\\\/]+[\\\\/]*)))$', 'ssh://user:pass@example.com:33/some/p ath')","[175031, 175077]"
"('URIish.java', 'org.eclipse.jgit.transport.URIish', '<init>', '^(file):([\\\\/](?![\\\\/])((?:[A-Za-z]:)?[\\\\/]?(?:(?:[^\\\\/]+[\\\\/]+)*[^\\\\/]+[\\\\/]*)))$', 'ssh://me@[::1]:1234/D:/x')",[135862]
"('URIish.java', 'org.eclipse.jgit.transport.URIish', '<init>', '^(file):([\\\\/](?![\\\\/])((?:[A-Za-z]:)?[\\\\/]?(?:(?:[^\\\\/]+[\\\\/]+)*[^\\\\/]+[\\\\/]*)))$', 'ssh+git://me@1.2.3.4:1234/D:\\x')",[138852]
"('URIish.java', 'org.eclipse.jgit.transport.URIish', '<init>', '^(file):([\\\\/](?![\\\\/])((?:[A-Za-z]:)?[\\\\/]?(?:(?:[^\\\\/]+[\\\\/]+)*[^\\\\/]+[\\\\/]*)))$', 'https://l usr\\example.com@example.com/D:/x')","[159414, 159598]"
"('URIish.java', 'org.eclipse.jgit.transport.URIish', '<init>', '^([a-z][a-z0-9+-]+)://(?:(?:([^/:@]+)(?::([^\\\\/]+))?@)?((?:[^\\\\/:]+)|(?:\\[[0-9a-f:]+\\]))(?::(\\d+))?((?:/~(?:[^\\\\/]+))?[\\\\/]))?(.+)?$', 'ssh+git://me@[::1]:1234/D:\\x')",[139243]
"('URIish.java', 'org.eclipse.jgit.transport.URIish', '<init>', '^(file):([\\\\/](?![\\\\/])((?:[A-Za-z]:)?[\\\\/]?(?:(?:[^\\\\/]+[\\\\/]+)*[^\\\\/]+[\\\\/]*)))$', 'http://1.2.3.4//')","[168522, 168706, 169626, 169810, 170730, 170914]"
"('Description.java', 'org.junit.runner.Description', 'methodAndClassNamePatternGroupOrDefault', '([\\s\\S]*)\\((.*)\\)', 'testTimeAltersId(org.eclipse.jgit.util.ChangeIdUtilTest)')","[37805, 95648]"
"('URIish.java', 'org.eclipse.jgit.transport.URIish', '<init>', '^([a-z][a-z0-9+-]+)://(?:(?:([^/:@]+)(?::([^\\\\/]+))?@)?((?:[^\\\\/:]+)|(?:\\[[0-9a-f:]+\\]))(?::(\\d+))?((?:/~(?:[^\\\\/]+))?[\\\\/]))?(.+)?$', 'ssh+git://lusr\\example@[::1]:1234/D:/x')",[141405]
"('Description.java', 'org.junit.runner.Description', 'methodAndClassNamePatternGroupOrDefault', '([\\s\\S]*)\\((.*)\\)', 'testFull_FromString(org.eclipse.jgit.lib.AbbreviatedObjectIdTest)')","[22685, 81062]"
"('URIish.java', 'org.eclipse.jgit.transport.URIish', '<init>', '^(file):([\\\\/](?![\\\\/])((?:[A-Za-z]:)?[\\\\/]?(?:(?:[^\\\\/]+[\\\\/]+)*[^\\\\/]+[\\\\/]*)))$', 'https://l usr\\example.com:wtf@[::1]:1234//')",[133562]
"('Description.java', 'org.junit.runner.Description', 'methodAndClassNamePatternGroupOrDefault', '([\\s\\S]*)\\((.*)\\)', 'testIgnoreNonExistingObjects(org.eclipse.jgit.internal.storage.file.PackWriterTest)')","[55152, 112368]"
"('Description.java', 'org.junit.runner.Description', 'methodAndClassNamePatternGroupOrDefault', '([\\s\\S]*)\\((.*)\\)', 'testWrite1(org.eclipse.jgit.transport.BundleWriterTest)')","[3924, 63000]"
"('URIish.java', 'org.eclipse.jgit.transport.URIish', '<init>', '^(file):([\\\\/](?![\\\\/])((?:[A-Za-z]:)?[\\\\/]?(?:(?:[^\\\\/]+[\\\\/]+)*[^\\\\/]+[\\\\/]*)))$', 'ssh://me@[::1]:1234//abc')",[135816]
"('Description.java', 'org.junit.runner.Description', 'methodAndClassNamePatternGroupOrDefault', '([\\s\\S]*)\\((.*)\\)', 'testDeleteRecursiveEmpty(org.eclipse.jgit.util.FileUtilTest)')","[33784, 91754]"
"('Description.java', 'org.junit.runner.Description', 'methodAndClassNamePatternGroupOrDefault', '([\\s\\S]*)\\((.*)\\)', 'testLowerGroupCase5(org.eclipse.jgit.fnmatch.FileNameMatcherTest)')","[16984, 75408]"
"('URIish.java', 'org.eclipse.jgit.transport.URIish', '<init>', '^([a-z][a-z0-9+-]+)://(?:(?:([^/:@]+)(?::([^\\\\/]+))?@)?((?:[^\\\\/:]+)|(?:\\[[0-9a-f:]+\\]))(?::(\\d+))?((?:/~(?:[^\\\\/]+))?[\\\\/]))?(.+)?$', 'http://me:wtf@[::1]:1234/D:/x')",[129261]
"('URIish.java', 'org.eclipse.jgit.transport.URIish', '<init>', '^(file):([\\\\/](?![\\\\/])((?:[A-Za-z]:)?[\\\\/]?(?:(?:[^\\\\/]+[\\\\/]+)*[^\\\\/]+[\\\\/]*)))$', 'ssh+git://me@[::1]/D:\\x')","[152468, 152652]"
"('Description.java', 'org.junit.runner.Description', 'methodAndClassNamePatternGroupOrDefault', '([\\s\\S]*)\\((.*)\\)', 'testAddDeletePathAndTreeNormalNames(org.eclipse.jgit.dircache.DirCachePathEditTest)')","[11839, 70436]"
"('URIish.java', 'org.eclipse.jgit.transport.URIish', '<init>', '^(?:([^/:@]+)(?::([^\\\\/]+))?@)?((?:[^\\\\/:]+)|(?:\\[[0-9a-f:]+\\])):((?:(?:/~(?:[^\\\\/]+))[\\\\/])?(?:(?:[^\\\\/]+[\\\\/]+)*[^\\\\/]+[\\\\/]*))$', 'example.com:some/p%20ath')","[177952, 178021]"
"('Description.java', 'org.junit.runner.Description', 'methodAndClassNamePatternGroupOrDefault', '([\\s\\S]*)\\((.*)\\)', 'concurrentRepack(org.eclipse.jgit.internal.storage.file.GcConcurrentTest)')","[56564, 113688]"
"('URIish.java', 'org.eclipse.jgit.transport.URIish', '<init>', '^(file):([\\\\/](?![\\\\/])((?:[A-Za-z]:)?[\\\\/]?(?:(?:[^\\\\/]+[\\\\/]+)*[^\\\\/]+[\\\\/]*)))$', 'file:///tmp/jgit_test_6116219894183845936_tmp/tmp_2007843301045265037.git/')","[195967, 196022]"
"('Description.java', 'org.junit.runner.Description', 'methodAndClassNamePatternGroupOrDefault', '([\\s\\S]*)\\((.*)\\)', 'testOnlyOption_f1_10_b(org.eclipse.jgit.api.CommitOnlyTest)')","[49725, 107220]"
"('URIish.java', 'org.eclipse.jgit.transport.URIish', '<init>', '^([a-z][a-z0-9+-]+)://(?:(?:([^/:@]+)(?::([^\\\\/]+))?@)?((?:[^\\\\/:]+)|(?:\\[[0-9a-f:]+\\]))(?::(\\d+))?((?:/~(?:[^\\\\/]+))?[\\\\/]))?(.+)?$', 'file:///tmp/jgit_test_379833043034514580_tmp/tmp_4427477875102799923')",[194194]
"('URIish.java', 'org.eclipse.jgit.transport.URIish', '<init>', '^(file):([\\\\/](?![\\\\/])((?:[A-Za-z]:)?[\\\\/]?(?:(?:[^\\\\/]+[\\\\/]+)*[^\\\\/]+[\\\\/]*)))$', 'http://l usr\\example.com:wtf@example.com:80/D:/x')",[129790]
"('Description.java', 'org.junit.runner.Description', 'methodAndClassNamePatternGroupOrDefault', '([\\s\\S]*)\\((.*)\\)', 'testWindowsReservedNames(org.eclipse.jgit.lib.ValidRefNameTest)')","[24313, 82668]"
"('Description.java', 'org.junit.runner.Description', 'methodAndClassNamePatternGroupOrDefault', '([\\s\\S]*)\\((.*)\\)', 'test024_createCommitNonAscii(org.eclipse.jgit.internal.storage.file.T0003_BasicTest)')","[54280, 111554]"
"('URIish.java', 'org.eclipse.jgit.transport.URIish', '<init>', '^([a-z][a-z0-9+-]+)://(?:(?:([^/:@]+)(?::([^\\\\/]+))?@)?((?:[^\\\\/:]+)|(?:\\[[0-9a-f:]+\\]))(?::(\\d+))?((?:/~(?:[^\\\\/]+))?[\\\\/]))?(.+)?$', 'https://l usr\\example.com@[::1]//')","[160081, 160265]"
"('URIish.java', 'org.eclipse.jgit.transport.URIish', '<init>', '^(?:([^/:@]+)(?::([^\\\\/]+))?@)?([^\\\\/:]{2,}):([\\\\/](?:(?:[^\\\\/]+[\\\\/]+)*[^\\\\/]+[\\\\/]*))$', '/tmp/jgit_test_4163267304466129697_tmp/tmp_7112159680923869662.git')","[117088, 117217]"
"('ChangeIdUtil.java', 'org.eclipse.jgit.util.ChangeIdUtil', 'indexOfFirstFooterLine', '(^[a-zA-Z0-9-]+:(?!//).*$)', '[ja: Fixed')",[188464]
"('Description.java', 'org.junit.runner.Description', 'methodAndClassNamePatternGroupOrDefault', '([\\s\\S]*)\\((.*)\\)', 'testFileCommittedChangedNotModified(org.eclipse.jgit.treewalk.filter.IndexDiffFilterTest)')","[30863, 89092]"
"('Description.java', 'org.junit.runner.Description', 'methodAndClassNamePatternGroupOrDefault', '([\\s\\S]*)\\((.*)\\)', 'testStandardFormat_SmallObject_TruncatedZLibStream(org.eclipse.jgit.internal.storage.file.UnpackedObjectTest)')","[56688, 113798]"
"('URIish.java', 'org.eclipse.jgit.transport.URIish', '<init>', '^([a-z][a-z0-9+-]+)://(?:(?:([^/:@]+)(?::([^\\\\/]+))?@)?((?:[^\\\\/:]+)|(?:\\[[0-9a-f:]+\\]))(?::(\\d+))?((?:/~(?:[^\\\\/]+))?[\\\\/]))?(.+)?$', 'https://me@example.com/D:\\x')","[158379, 158563]"
"('URIish.java', 'org.eclipse.jgit.transport.URIish', '<init>', '^(file):([\\\\/](?![\\\\/])((?:[A-Za-z]:)?[\\\\/]?(?:(?:[^\\\\/]+[\\\\/]+)*[^\\\\/]+[\\\\/]*)))$', 'http://everyones.loves.git/u/2')","[180439, 180487, 180535, 180583, 180631, 180679, 180777, 180825]"
"('Description.java', 'org.junit.runner.Description', 'methodAndClassNamePatternGroupOrDefault', '([\\s\\S]*)\\((.*)\\)', 'testContainsAll(org.eclipse.jgit.revwalk.RevFlagSetTest)')","[7332, 66212]"
"('URIish.java', 'org.eclipse.jgit.transport.URIish', '<init>', '^([a-z][a-z0-9+-]+)://(?:(?:([^/:@]+)(?::([^\\\\/]+))?@)?((?:[^\\\\/:]+)|(?:\\[[0-9a-f:]+\\]))(?::(\\d+))?((?:/~(?:[^\\\\/]+))?[\\\\/]))?(.+)?$', 'http://me@[::1]:80//abc')",[142647]
"('Description.java', 'org.junit.runner.Description', 'methodAndClassNamePatternGroupOrDefault', '([\\s\\S]*)\\((.*)\\)', 'testLowerGroupCase0(org.eclipse.jgit.fnmatch.FileNameMatcherTest)')","[16879, 75298]"
"('Description.java', 'org.junit.runner.Description', 'methodAndClassNamePatternGroupOrDefault', '([\\s\\S]*)\\((.*)\\)', 'testInvalidCommitInvalidTree3(org.eclipse.jgit.lib.ObjectCheckerTest)')","[25412, 83680]"
"('Description.java', 'org.junit.runner.Description', 'methodAndClassNamePatternGroupOrDefault', '([\\s\\S]*)\\((.*)\\)', 'testLargeMap(org.eclipse.jgit.transport.LongMapTest)')","[5338, 64342]"
"('URIish.java', 'org.eclipse.jgit.transport.URIish', '<init>', '^(file):([\\\\/](?![\\\\/])((?:[A-Za-z]:)?[\\\\/]?(?:(?:[^\\\\/]+[\\\\/]+)*[^\\\\/]+[\\\\/]*)))$', 'https://l usr\\example.com:wtf@example.com:1234/D:\\x')",[132964]
"('Description.java', 'org.junit.runner.Description', 'methodAndClassNamePatternGroupOrDefault', '([\\s\\S]*)\\((.*)\\)', 'testMaliciousGitPathEndDotWindows2(org.eclipse.jgit.lib.DirCacheCheckoutMaliciousPathTest)')","[21181, 79566]"
"('URIish.java', 'org.eclipse.jgit.transport.URIish', '<init>', '^([a-z][a-z0-9+-]+)://(?:(?:([^/:@]+)(?::([^\\\\/]+))?@)?((?:[^\\\\/:]+)|(?:\\[[0-9a-f:]+\\]))(?::(\\d+))?((?:/~(?:[^\\\\/]+))?[\\\\/]))?(.+)?$', 'https://me:wtf@example.com:80//')",[131929]
"('Description.java', 'org.junit.runner.Description', 'methodAndClassNamePatternGroupOrDefault', '([\\s\\S]*)\\((.*)\\)', 'testOnlyOption_f1_12_a(org.eclipse.jgit.api.CommitOnlyTest)')","[49914, 107418]"
"('Description.java', 'org.junit.runner.Description', 'methodAndClassNamePatternGroupOrDefault', '([\\s\\S]*)\\((.*)\\)', 'testReadLooseRef(org.eclipse.jgit.lib.RefTest)')","[22914, 81282]"
"('Description.java', 'org.junit.runner.Description', 'methodAndClassNamePatternGroupOrDefault', '([\\s\\S]*)\\((.*)\\)', 'org.eclipse.jgit.lib.ObjectIdSubclassMapTest')","[22078, 184032]"
"('Description.java', 'org.junit.runner.Description', 'methodAndClassNamePatternGroupOrDefault', '([\\s\\S]*)\\((.*)\\)', 'testConstructor_RejectsBadBufferSize(org.eclipse.jgit.transport.SideBandOutputStreamTest)')","[4672, 63704]"
"('URIish.java', 'org.eclipse.jgit.transport.URIish', '<init>', '^([a-z][a-z0-9+-]+)://(?:(?:([^/:@]+)(?::([^\\\\/]+))?@)?((?:[^\\\\/:]+)|(?:\\[[0-9a-f:]+\\]))(?::(\\d+))?((?:/~(?:[^\\\\/]+))?[\\\\/]))?(.+)?$', 'http://me@[::1]:1234//abc')",[142463]
"('URIish.java', 'org.eclipse.jgit.transport.URIish', '<init>', '^(file):([\\\\/](?![\\\\/])((?:[A-Za-z]:)?[\\\\/]?(?:(?:[^\\\\/]+[\\\\/]+)*[^\\\\/]+[\\\\/]*)))$', 'ssh://1.2.3.4//abc')","[161944, 162128, 163048, 163232, 164152, 164336]"
"('Description.java', 'org.junit.runner.Description', 'methodAndClassNamePatternGroupOrDefault', '([\\s\\S]*)\\((.*)\\)', 'testBuildThenClear(org.eclipse.jgit.dircache.DirCacheBasicTest)')","[11343, 69996]"
"('URIish.java', 'org.eclipse.jgit.transport.URIish', '<init>', '^([a-z][a-z0-9+-]+)://(?:(?:([^/:@]+)(?::([^\\\\/]+))?@)?((?:[^\\\\/:]+)|(?:\\[[0-9a-f:]+\\]))(?::(\\d+))?((?:/~(?:[^\\\\/]+))?[\\\\/]))?(.+)?$', 'https://me@example.com:80/D:/x')",[145269]
"('URIish.java', 'org.eclipse.jgit.transport.URIish', '<init>', '^(?:([^/:@]+)(?::([^\\\\/]+))?@)?([^\\\\/:]{2,}):([\\\\/](?:(?:[^\\\\/]+[\\\\/]+)*[^\\\\/]+[\\\\/]*))$', '../../foo/bar')","[177653, 177768]"
"('Description.java', 'org.junit.runner.Description', 'methodAndClassNamePatternGroupOrDefault', '([\\s\\S]*)\\((.*)\\)', 'testVerySimpleGroupRangeCase5(org.eclipse.jgit.fnmatch.FileNameMatcherTest)')","[17845, 76310]"
"('URIish.java', 'org.eclipse.jgit.transport.URIish', '<init>', '^(file):([\\\\/](?![\\\\/])((?:[A-Za-z]:)?[\\\\/]?(?:(?:[^\\\\/]+[\\\\/]+)*[^\\\\/]+[\\\\/]*)))$', 'https://me:wtf@[::1]:1234/D:/x')",[132550]
"('Description.java', 'org.junit.runner.Description', 'methodAndClassNamePatternGroupOrDefault', '([\\s\\S]*)\\((.*)\\)', 'testTypes(org.eclipse.jgit.patch.EditListTest)')","[38969, 96748]"
"('Description.java', 'org.junit.runner.Description', 'methodAndClassNamePatternGroupOrDefault', '([\\s\\S]*)\\((.*)\\)', 'testGConeCommit(org.eclipse.jgit.api.GarbageCollectCommandTest)')","[41379, 99014]"
"('URIish.java', 'org.eclipse.jgit.transport.URIish', '<init>', '^(file):([\\\\/](?![\\\\/])((?:[A-Za-z]:)?[\\\\/]?(?:(?:[^\\\\/]+[\\\\/]+)*[^\\\\/]+[\\\\/]*)))$', 'ssh://l usr\\example.com@[::1]:1234/D:\\x')",[137012]
"('Description.java', 'org.junit.runner.Description', 'methodAndClassNamePatternGroupOrDefault', '([\\s\\S]*)\\((.*)\\)', 'testPathSeparator(org.eclipse.jgit.transport.URIishTest)')","[1874, 60932]"
"('Description.java', 'org.junit.runner.Description', 'methodAndClassNamePatternGroupOrDefault', '([\\s\\S]*)\\((.*)\\)', 'unmergedPathsShouldCauseException(org.eclipse.jgit.api.StashCreateCommandTest)')","[41753, 99366]"
"('Description.java', 'org.junit.runner.Description', 'methodAndClassNamePatternGroupOrDefault', '([\\s\\S]*)\\((.*)\\)', 'testReadACK_Invalid2(org.eclipse.jgit.transport.PacketLineInTest)')","[3653, 62736]"
"('Description.java', 'org.junit.runner.Description', 'methodAndClassNamePatternGroupOrDefault', '([\\s\\S]*)\\((.*)\\)', 'testLimitObjectSize_Length130CopyFails(org.eclipse.jgit.internal.storage.pack.DeltaIndexTest)')","[52933, 110322]"
"('URIish.java', 'org.eclipse.jgit.transport.URIish', '<init>', '^(file):([\\\\/](?![\\\\/])((?:[A-Za-z]:)?[\\\\/]?(?:(?:[^\\\\/]+[\\\\/]+)*[^\\\\/]+[\\\\/]*)))$', 'file:///tmp/jgit_test_6458781460138079059_tmp/tmp_5582073650838021355/.git/')",[209178]
"('URIish.java', 'org.eclipse.jgit.transport.URIish', '<init>', '^(file):([\\\\/](?![\\\\/])((?:[A-Za-z]:)?[\\\\/]?(?:(?:[^\\\\/]+[\\\\/]+)*[^\\\\/]+[\\\\/]*)))$', 'ssh+git://me@[::1]:1234/D:\\x')",[139220]
"('Description.java', 'org.junit.runner.Description', 'methodAndClassNamePatternGroupOrDefault', '([\\s\\S]*)\\((.*)\\)', 'testLF(org.eclipse.jgit.util.io.EolCanonicalizingInputStreamTest)')","[32956, 91006]"
"('Description.java', 'org.junit.runner.Description', 'methodAndClassNamePatternGroupOrDefault', '([\\s\\S]*)\\((.*)\\)', 'testCheckoutHierarchy(org.eclipse.jgit.lib.DirCacheCheckoutTest)')","[23206, 81568]"
"('Description.java', 'org.junit.runner.Description', 'methodAndClassNamePatternGroupOrDefault', '([\\s\\S]*)\\((.*)\\)', 'testValidCommitNoParent(org.eclipse.jgit.lib.ObjectCheckerTest)')","[26588, 84912]"
"('Description.java', 'org.junit.runner.Description', 'methodAndClassNamePatternGroupOrDefault', '([\\s\\S]*)\\((.*)\\)', 'testAdd_ZeroCapacity(org.eclipse.jgit.util.IntListTest)')","[35931, 93844]"
"('URIish.java', 'org.eclipse.jgit.transport.URIish', '<init>', '^(file):([\\\\/](?![\\\\/])((?:[A-Za-z]:)?[\\\\/]?(?:(?:[^\\\\/]+[\\\\/]+)*[^\\\\/]+[\\\\/]*)))$', 'https://l usr\\example.com@1.2.3.4:1234/D:\\x')",[146580]
"('Description.java', 'org.junit.runner.Description', 'methodAndClassNamePatternGroupOrDefault', '([\\s\\S]*)\\((.*)\\)', 'testEmptyRebaseTodo(org.eclipse.jgit.api.RebaseCommandTest)')","[45549, 103084]"
"('Description.java', 'org.junit.runner.Description', 'methodAndClassNamePatternGroupOrDefault', '([\\s\\S]*)\\((.*)\\)', 'testXDigitGroupCase6(org.eclipse.jgit.fnmatch.FileNameMatcherTest)')","[18811, 77322]"
"('Description.java', 'org.junit.runner.Description', 'methodAndClassNamePatternGroupOrDefault', '([\\s\\S]*)\\((.*)\\)', 'testAddAndRemoveNote(org.eclipse.jgit.api.NotesCommandTest)')","[51811, 109266]"
"('URIish.java', 'org.eclipse.jgit.transport.URIish', '<init>', '^(file):([\\\\/](?![\\\\/])((?:[A-Za-z]:)?[\\\\/]?(?:(?:[^\\\\/]+[\\\\/]+)*[^\\\\/]+[\\\\/]*)))$', 'http://lusr\\example@1.2.3.4:1234/D:/x')",[144326]
"('URIish.java', 'org.eclipse.jgit.transport.URIish', '<init>', '^(file):([\\\\/](?![\\\\/])((?:[A-Za-z]:)?[\\\\/]?(?:(?:[^\\\\/]+[\\\\/]+)*[^\\\\/]+[\\\\/]*)))$', 'ssh://l usr\\example.com@example.com//abc')","[149432, 149616]"
"('URIish.java', 'org.eclipse.jgit.transport.URIish', '<init>', '^([\\\\/]?((?:[A-Za-z]:)?[\\\\/]?(?:(?:[^\\\\/]+[\\\\/]+)*[^\\\\/]+[\\\\/]*)))$', '/tmp/jgit_test_459034667116329301_tmp/tmp_5950396153337027342')","[203938, 204083]"
"('URIish.java', 'org.eclipse.jgit.transport.URIish', '<init>', '^(file):([\\\\/](?![\\\\/])((?:[A-Za-z]:)?[\\\\/]?(?:(?:[^\\\\/]+[\\\\/]+)*[^\\\\/]+[\\\\/]*)))$', 'http://me@1.2.3.4/D:/x')","[155366, 155550]"
"('Description.java', 'org.junit.runner.Description', 'methodAndClassNamePatternGroupOrDefault', '([\\s\\S]*)\\((.*)\\)', 'testInexactRename_SameContentMultipleTimes(org.eclipse.jgit.diff.RenameDetectorTest)')","[12919, 71448]"
"('Description.java', 'org.junit.runner.Description', 'methodAndClassNamePatternGroupOrDefault', '([\\s\\S]*)\\((.*)\\)', 'testFallbackToMyersDiff(org.eclipse.jgit.diff.HistogramDiffTest)')","[15142, 73538]"
"('URIish.java', 'org.eclipse.jgit.transport.URIish', '<init>', '^([a-z][a-z0-9+-]+)://(?:(?:([^/:@]+)(?::([^\\\\/]+))?@)?((?:[^\\\\/:]+)|(?:\\[[0-9a-f:]+\\]))(?::(\\d+))?((?:/~(?:[^\\\\/]+))?[\\\\/]))?(.+)?$', 'ssh+git://lusr\\example@example.com//')","[153825, 154009]"
"('Description.java', 'org.junit.runner.Description', 'methodAndClassNamePatternGroupOrDefault', '([\\s\\S]*)\\((.*)\\)', 'testParse_WeirdHeaderOnlyCommit(org.eclipse.jgit.revwalk.RevCommitParseTest)')","[8742, 67510]"
"('URIish.java', 'org.eclipse.jgit.transport.URIish', '<init>', '^([a-z][a-z0-9+-]+)://(?:(?:([^/:@]+)(?::([^\\\\/]+))?@)?((?:[^\\\\/:]+)|(?:\\[[0-9a-f:]+\\]))(?::(\\d+))?((?:/~(?:[^\\\\/]+))?[\\\\/]))?(.+)?$', 'ssh+git://lusr\\example:wtf@example.com:1234/D:\\x')",[127467]
"('Description.java', 'org.junit.runner.Description', 'methodAndClassNamePatternGroupOrDefault', '([\\s\\S]*)\\((.*)\\)', 'testGrowPath(org.eclipse.jgit.treewalk.AbstractTreeIteratorTest)')","[29281, 87574]"
"('Description.java', 'org.junit.runner.Description', 'methodAndClassNamePatternGroupOrDefault', '([\\s\\S]*)\\((.*)\\)', 'weeksAgo(org.eclipse.jgit.util.GitDateParserTest)')","[36223, 94130]"
"('URIish.java', 'org.eclipse.jgit.transport.URIish', '<init>', '^([a-z][a-z0-9+-]+)://(?:(?:([^/:@]+)(?::([^\\\\/]+))?@)?((?:[^\\\\/:]+)|(?:\\[[0-9a-f:]+\\]))(?::(\\d+))?((?:/~(?:[^\\\\/]+))?[\\\\/]))?(.+)?$', 'ssh://l usr\\example.com:wtf@example.com:1234//')",[122913]
"('Description.java', 'org.junit.runner.Description', 'methodAndClassNamePatternGroupOrDefault', '([\\s\\S]*)\\((.*)\\)', 'testRenameLocalBranch(org.eclipse.jgit.api.BranchCommandTest)')","[47385, 104888]"
"('Description.java', 'org.junit.runner.Description', 'methodAndClassNamePatternGroupOrDefault', '([\\s\\S]*)\\((.*)\\)', 'testGetters(org.eclipse.jgit.ignore.IgnoreMatcherTest)')","[31857, 89994]"
"('Description.java', 'org.junit.runner.Description', 'methodAndClassNamePatternGroupOrDefault', '([\\s\\S]*)\\((.*)\\)', 'shouldListModificationInDirWithModifiedTrees(org.eclipse.jgit.diff.DiffEntryTest)')","[13917, 72394]"
"('Description.java', 'org.junit.runner.Description', 'methodAndClassNamePatternGroupOrDefault', '([\\s\\S]*)\\((.*)\\)', 'testGetText_BothISO88591(org.eclipse.jgit.patch.GetTextTest)')","[39986, 97694]"
"('Description.java', 'org.junit.runner.Description', 'methodAndClassNamePatternGroupOrDefault', '([\\s\\S]*)\\((.*)\\)', 'testWrite_SmallBlocks2(org.eclipse.jgit.transport.SideBandOutputStreamTest)')","[4567, 63594]"
"('URIish.java', 'org.eclipse.jgit.transport.URIish', '<init>', '^([a-z][a-z0-9+-]+)://(?:(?:([^/:@]+)(?::([^\\\\/]+))?@)?((?:[^\\\\/:]+)|(?:\\[[0-9a-f:]+\\]))(?::(\\d+))?((?:/~(?:[^\\\\/]+))?[\\\\/]))?(.+)?$', 'ssh://l usr\\example.com@1.2.3.4:1234/D:/x')",[136621]
"('Description.java', 'org.junit.runner.Description', 'methodAndClassNamePatternGroupOrDefault', '([\\s\\S]*)\\((.*)\\)', 'org.eclipse.jgit.util.QuotedStringGitPathStyleTest')","[33971, 186775]"
"('Description.java', 'org.junit.runner.Description', 'methodAndClassNamePatternGroupOrDefault', '([\\s\\S]*)\\((.*)\\)', 'testUpperGroupCase1(org.eclipse.jgit.fnmatch.FileNameMatcherTest)')","[18412, 76904]"
"('Description.java', 'org.junit.runner.Description', 'methodAndClassNamePatternGroupOrDefault', '([\\s\\S]*)\\((.*)\\)', 'testToString(org.eclipse.jgit.util.RefListTest)')","[35015, 92964]"
"('URIish.java', 'org.eclipse.jgit.transport.URIish', '<init>', '^(file):([\\\\/](?![\\\\/])((?:[A-Za-z]:)?[\\\\/]?(?:(?:[^\\\\/]+[\\\\/]+)*[^\\\\/]+[\\\\/]*)))$', 'ssh+git://1.2.3.4//abc')","[165256, 165440, 166360, 166544, 167464, 167648]"
"('URIish.java', 'org.eclipse.jgit.transport.URIish', '<init>', '^(file):([\\\\/](?![\\\\/])((?:[A-Za-z]:)?[\\\\/]?(?:(?:[^\\\\/]+[\\\\/]+)*[^\\\\/]+[\\\\/]*)))$', '/tmp/jgit_test_1888401002986800567_tmp/tmp_1326242475311810481.git')",[116633]
"('URIish.java', 'org.eclipse.jgit.transport.URIish', '<init>', '^([a-z][a-z0-9+-]+)://(?:(?:([^/:@]+)(?::([^\\\\/]+))?@)?((?:[^\\\\/:]+)|(?:\\[[0-9a-f:]+\\]))(?::(\\d+))?((?:/~(?:[^\\\\/]+))?[\\\\/]))?(.+)?$', 'http://me:wtf@example.com:1234//')",[128433]
"('URIish.java', 'org.eclipse.jgit.transport.URIish', '<init>', '^(file):([\\\\/](?![\\\\/])((?:[A-Za-z]:)?[\\\\/]?(?:(?:[^\\\\/]+[\\\\/]+)*[^\\\\/]+[\\\\/]*)))$', 'https://lusr\\example@1.2.3.4//abc')","[160840, 161024]"
"('Description.java', 'org.junit.runner.Description', 'methodAndClassNamePatternGroupOrDefault', '([\\s\\S]*)\\((.*)\\)', 'testFileInFolderCommittedNonRecursive(org.eclipse.jgit.treewalk.filter.IndexDiffFilterTest)')","[30779, 89004]"
"('URIish.java', 'org.eclipse.jgit.transport.URIish', '<init>', '^(file):([\\\\/](?![\\\\/])((?:[A-Za-z]:)?[\\\\/]?(?:(?:[^\\\\/]+[\\\\/]+)*[^\\\\/]+[\\\\/]*)))$', 'https://lusr\\example@[::1]:1234//abc')",[147960]
"('URIish.java', 'org.eclipse.jgit.transport.URIish', '<init>', '^(file):([\\\\/](?![\\\\/])((?:[A-Za-z]:)?[\\\\/]?(?:(?:[^\\\\/]+[\\\\/]+)*[^\\\\/]+[\\\\/]*)))$', 'http://l usr\\example.com:wtf@example.com:1234//')",[129514]
"('ChangeIdUtil.java', 'org.eclipse.jgit.util.ChangeIdUtil', 'indexOfChangeId', '(^Change-Id: *I[a-f0-9]{40}$)', 'more text')",[191100]
"('Description.java', 'org.junit.runner.Description', 'methodAndClassNamePatternGroupOrDefault', '([\\s\\S]*)\\((.*)\\)', 'testWritePack4SizeThinVsNoThin(org.eclipse.jgit.internal.storage.file.PackWriterTest)')","[55110, 112324]"
"('ChangeIdUtil.java', 'org.eclipse.jgit.util.ChangeIdUtil', 'indexOfChangeId', '(^Change-Id: *I[a-f0-9]{40}$)', 'd')",[191360]
"('URIish.java', 'org.eclipse.jgit.transport.URIish', '<init>', '^([a-z][a-z0-9+-]+)://(?:(?:([^/:@]+)(?::([^\\\\/]+))?@)?((?:[^\\\\/:]+)|(?:\\[[0-9a-f:]+\\]))(?::(\\d+))?((?:/~(?:[^\\\\/]+))?[\\\\/]))?(.+)?$', 'ssh+git://lusr\\example@example.com:80//abc')",[140807]
"('Description.java', 'org.junit.runner.Description', 'methodAndClassNamePatternGroupOrDefault', '([\\s\\S]*)\\((.*)\\)', 'testMaliciousAbsoluteCurDrivePathWindows(org.eclipse.jgit.lib.DirCacheCheckoutMaliciousPathTest)')","[21811, 80226]"
"('URIish.java', 'org.eclipse.jgit.transport.URIish', '<init>', '^(?:([^/:@]+)(?::([^\\\\/]+))?@)?((?:[^\\\\/:]+)|(?:\\[[0-9a-f:]+\\])):((?:(?:/~(?:[^\\\\/]+))[\\\\/])?(?:(?:[^\\\\/]+[\\\\/]+)*[^\\\\/]+[\\\\/]*))$', '/abc/')",[179976]
"('Description.java', 'org.junit.runner.Description', 'methodAndClassNamePatternGroupOrDefault', '([\\s\\S]*)\\((.*)\\)', 'testGetRefs_IgnoresGarbageRef3(org.eclipse.jgit.internal.storage.file.RefDirectoryTest)')","[57871, 114898]"
"('Description.java', 'org.junit.runner.Description', 'methodAndClassNamePatternGroupOrDefault', '([\\s\\S]*)\\((.*)\\)', 'test(org.eclipse.jgit.util.io.AutoCRLFOutputStreamTest)')","[32645, 90720]"
"('Description.java', 'org.junit.runner.Description', 'methodAndClassNamePatternGroupOrDefault', '([\\s\\S]*)\\((.*)\\)', 'testDequote_NamedEscapes(org.eclipse.jgit.util.QuotedStringBourneStyleTest)')","[36599, 94504]"
"('Description.java', 'org.junit.runner.Description', 'methodAndClassNamePatternGroupOrDefault', '([\\s\\S]*)\\((.*)\\)', 'testRenameBranchCannotLockAFileHEADisToLockFrom(org.eclipse.jgit.internal.storage.file.RefUpdateTest)')","[55982, 113138]"
"('Description.java', 'org.junit.runner.Description', 'methodAndClassNamePatternGroupOrDefault', '([\\s\\S]*)\\((.*)\\)', 'testOnlyOption_f1_11_b(org.eclipse.jgit.api.CommitOnlyTest)')","[49830, 107330]"
"('Description.java', 'org.junit.runner.Description', 'methodAndClassNamePatternGroupOrDefault', '([\\s\\S]*)\\((.*)\\)', 'testFailsMethodsOnBackgroundThread(org.eclipse.jgit.lib.ThreadSafeProgressMonitorTest)')","[20494, 78906]"
"('Description.java', 'org.junit.runner.Description', 'methodAndClassNamePatternGroupOrDefault', '([\\s\\S]*)\\((.*)\\)', 'testDeleteHead(org.eclipse.jgit.internal.storage.file.RefUpdateTest)')","[56192, 113358]"
"('Description.java', 'org.junit.runner.Description', 'methodAndClassNamePatternGroupOrDefault', '([\\s\\S]*)\\((.*)\\)', 'withMerge(org.eclipse.jgit.revwalk.RevWalkUtilsReachableTest)')","[5939, 64892]"
"('URIish.java', 'org.eclipse.jgit.transport.URIish', '<init>', '^(file):([\\\\/](?![\\\\/])((?:[A-Za-z]:)?[\\\\/]?(?:(?:[^\\\\/]+[\\\\/]+)*[^\\\\/]+[\\\\/]*)))$', 'http://lusr\\example:wtf@example.com:80//')",[130802]
"('Description.java', 'org.junit.runner.Description', 'methodAndClassNamePatternGroupOrDefault', '([\\s\\S]*)\\((.*)\\)', 'testOnlyOption_f1_3_c(org.eclipse.jgit.api.CommitOnlyTest)')","[48696, 106142]"
"('URIish.java', 'org.eclipse.jgit.transport.URIish', '<init>', '^(file):([\\\\/](?![\\\\/])((?:[A-Za-z]:)?[\\\\/]?(?:(?:[^\\\\/]+[\\\\/]+)*[^\\\\/]+[\\\\/]*)))$', 'ssh+git://l usr\\example.com:wtf@1.2.3.4:80/D:\\x')",[126892]
"('URIish.java', 'org.eclipse.jgit.transport.URIish', '<init>', '^([a-z][a-z0-9+-]+)://(?:(?:([^/:@]+)(?::([^\\\\/]+))?@)?((?:[^\\\\/:]+)|(?:\\[[0-9a-f:]+\\]))(?::(\\d+))?((?:/~(?:[^\\\\/]+))?[\\\\/]))?(.+)?$', 'ssh://me:wtf@1.2.3.4:1234//abc')",[122223]
"('URIish.java', 'org.eclipse.jgit.transport.URIish', '<init>', '^([a-z][a-z0-9+-]+)://(?:(?:([^/:@]+)(?::([^\\\\/]+))?@)?((?:[^\\\\/:]+)|(?:\\[[0-9a-f:]+\\]))(?::(\\d+))?((?:/~(?:[^\\\\/]+))?[\\\\/]))?(.+)?$', 'file:///tmp/jgit_test_1978379821972935259_tmp/tmp_2988797850371430936/.git/')",[209381]
"('URIish.java', 'org.eclipse.jgit.transport.URIish', '<init>', '^(file):([\\\\/](?![\\\\/])((?:[A-Za-z]:)?[\\\\/]?(?:(?:[^\\\\/]+[\\\\/]+)*[^\\\\/]+[\\\\/]*)))$', 'http://lusr\\example:wtf@example.com:80/D:/x')",[130894]
"('Description.java', 'org.junit.runner.Description', 'methodAndClassNamePatternGroupOrDefault', '([\\s\\S]*)\\((.*)\\)', 'testParseUnicodeName_NewFile(org.eclipse.jgit.patch.FileHeaderTest)')","[39551, 97298]"
"('Description.java', 'org.junit.runner.Description', 'methodAndClassNamePatternGroupOrDefault', '([\\s\\S]*)\\((.*)\\)', 'testNotBare_CreateRepositoryFromDotGitGitDir(org.eclipse.jgit.internal.storage.file.RepositorySetupWorkDirTest)')","[57106, 114216]"
"('Description.java', 'org.junit.runner.Description', 'methodAndClassNamePatternGroupOrDefault', '([\\s\\S]*)\\((.*)\\)', 'fetchWithExplicitTagsShouldUpdateLocal(org.eclipse.jgit.api.FetchCommandTest)')","[51893, 109332]"
"('URIish.java', 'org.eclipse.jgit.transport.URIish', '<init>', '^([a-z][a-z0-9+-]+)://(?:(?:([^/:@]+)(?::([^\\\\/]+))?@)?((?:[^\\\\/:]+)|(?:\\[[0-9a-f:]+\\]))(?::(\\d+))?((?:/~(?:[^\\\\/]+))?[\\\\/]))?(.+)?$', 'https://lusr\\example@example.com:80/D:\\x')",[147523]
"('URIish.java', 'org.eclipse.jgit.transport.URIish', '<init>', '^([a-z][a-z0-9+-]+)://(?:(?:([^/:@]+)(?::([^\\\\/]+))?@)?((?:[^\\\\/:]+)|(?:\\[[0-9a-f:]+\\]))(?::(\\d+))?((?:/~(?:[^\\\\/]+))?[\\\\/]))?(.+)?$', 'ssh+git://me:wtf@example.com:80//abc')",[125351]
"('URIish.java', 'org.eclipse.jgit.transport.URIish', '<init>', '^(file):([\\\\/](?![\\\\/])((?:[A-Za-z]:)?[\\\\/]?(?:(?:[^\\\\/]+[\\\\/]+)*[^\\\\/]+[\\\\/]*)))$', 'ssh+git://lusr\\example@1.2.3.4:80/D:\\x')",[141244]
"('URIish.java', 'org.eclipse.jgit.transport.URIish', '<init>', '^(file):([\\\\/](?![\\\\/])((?:[A-Za-z]:)?[\\\\/]?(?:(?:[^\\\\/]+[\\\\/]+)*[^\\\\/]+[\\\\/]*)))$', 'file:///tmp/jgit_test_8014711643176247719_tmp/tmp_1492958756153429040.git/')",[196348]
"('URIish.java', 'org.eclipse.jgit.transport.URIish', '<init>', '^(file):([\\\\/](?![\\\\/])((?:[A-Za-z]:)?[\\\\/]?(?:(?:[^\\\\/]+[\\\\/]+)*[^\\\\/]+[\\\\/]*)))$', 'ssh+git://l usr\\example.com:wtf@1.2.3.4:1234/D:\\x')",[126708]
"('Description.java', 'org.junit.runner.Description', 'methodAndClassNamePatternGroupOrDefault', '([\\s\\S]*)\\((.*)\\)', 'testDequote_Empty2(org.eclipse.jgit.util.QuotedStringBourneUserPathStyleTest)')","[38597, 96418]"
"('Description.java', 'org.junit.runner.Description', 'methodAndClassNamePatternGroupOrDefault', '([\\s\\S]*)\\((.*)\\)', 'org.eclipse.jgit.diff.DiffFormatterReflowTest')","[13190, 182505]"
"('Description.java', 'org.junit.runner.Description', 'methodAndClassNamePatternGroupOrDefault', '([\\s\\S]*)\\((.*)\\)', 'testFilter_MY_ALL_And_NONE(org.eclipse.jgit.revwalk.RevWalkFilterTest)')","[8389, 67180]"
"('URIish.java', 'org.eclipse.jgit.transport.URIish', '<init>', '^(?:([^/:@]+)(?::([^\\\\/]+))?@)?([^\\\\/:]{2,}):([\\\\/](?:(?:[^\\\\/]+[\\\\/]+)*[^\\\\/]+[\\\\/]*))$', '/tmp/jgit_test_1364027526222413070_tmp/tmp_9117675340386543078.git')",[116333]
"('Description.java', 'org.junit.runner.Description', 'methodAndClassNamePatternGroupOrDefault', '([\\s\\S]*)\\((.*)\\)', 'test002_toString(org.eclipse.jgit.lib.ObjectIdTest)')","[28573, 86892]"
"('URIish.java', 'org.eclipse.jgit.transport.URIish', '<init>', '^(file):([\\\\/](?![\\\\/])((?:[A-Za-z]:)?[\\\\/]?(?:(?:[^\\\\/]+[\\\\/]+)*[^\\\\/]+[\\\\/]*)))$', 'https://1.2.3.4/D:/x')","[171926, 172110, 173030, 173214, 174134, 174318]"
"('Description.java', 'org.junit.runner.Description', 'methodAndClassNamePatternGroupOrDefault', '([\\s\\S]*)\\((.*)\\)', 'testAddIfAbsent(org.eclipse.jgit.lib.ObjectIdOwnerMapTest)')","[21954, 80336]"
"('Description.java', 'org.junit.runner.Description', 'methodAndClassNamePatternGroupOrDefault', '([\\s\\S]*)\\((.*)\\)', 'testRevertOverExecutableChangeOnNonExectuableFileSystem(org.eclipse.jgit.api.RevertCommandTest)')","[47988, 105460]"
"('URIish.java', 'org.eclipse.jgit.transport.URIish', '<init>', '^(file):([\\\\/](?![\\\\/])((?:[A-Za-z]:)?[\\\\/]?(?:(?:[^\\\\/]+[\\\\/]+)*[^\\\\/]+[\\\\/]*)))$', 'http://lusr\\example@[::1]:1234//')",[144602]
"('URIish.java', 'org.eclipse.jgit.transport.URIish', '<init>', '^(file):([\\\\/](?![\\\\/])((?:[A-Za-z]:)?[\\\\/]?(?:(?:[^\\\\/]+[\\\\/]+)*[^\\\\/]+[\\\\/]*)))$', 'D:\\m y')","[176894, 177009]"
"('URIish.java', 'org.eclipse.jgit.transport.URIish', '<init>', '^(file):([\\\\/](?![\\\\/])((?:[A-Za-z]:)?[\\\\/]?(?:(?:[^\\\\/]+[\\\\/]+)*[^\\\\/]+[\\\\/]*)))$', 'ssh+git://me@example.com:80//')",[138530]
"('Description.java', 'org.junit.runner.Description', 'methodAndClassNamePatternGroupOrDefault', '([\\s\\S]*)\\((.*)\\)', 'testIterator_FailsAtEnd(org.eclipse.jgit.util.RefMapTest)')","[37328, 95208]"
"('Description.java', 'org.junit.runner.Description', 'methodAndClassNamePatternGroupOrDefault', '([\\s\\S]*)\\((.*)\\)', 'org.eclipse.jgit.revwalk.RevWalkMergeBaseTest')","[7622, 181487]"
"('Description.java', 'org.junit.runner.Description', 'methodAndClassNamePatternGroupOrDefault', '([\\s\\S]*)\\((.*)\\)', 'testParseGitFileName_DqFooSpLfNulBar(org.eclipse.jgit.patch.FileHeaderTest)')","[39278, 97012]"
"('URIish.java', 'org.eclipse.jgit.transport.URIish', '<init>', '^([a-z][a-z0-9+-]+)://(?:(?:([^/:@]+)(?::([^\\\\/]+))?@)?((?:[^\\\\/:]+)|(?:\\[[0-9a-f:]+\\]))(?::(\\d+))?((?:/~(?:[^\\\\/]+))?[\\\\/]))?(.+)?$', 'ssh+git://me@1.2.3.4:80/D:\\x')",[139059]
"('Description.java', 'org.junit.runner.Description', 'methodAndClassNamePatternGroupOrDefault', '([\\s\\S]*)\\((.*)\\)', 'indexDelete(org.eclipse.jgit.api.StashApplyCommandTest)')","[51416, 108892]"
"('Description.java', 'org.junit.runner.Description', 'methodAndClassNamePatternGroupOrDefault', '([\\s\\S]*)\\((.*)\\)', 'testLongPaths(org.eclipse.jgit.treewalk.filter.PathFilterGroupTest)')","[31298, 89488]"
"('URIish.java', 'org.eclipse.jgit.transport.URIish', '<init>', '^(file):([\\\\/](?![\\\\/])((?:[A-Za-z]:)?[\\\\/]?(?:(?:[^\\\\/]+[\\\\/]+)*[^\\\\/]+[\\\\/]*)))$', 'http://me@example.com:1234//abc')",[141704]
"('URIish.java', 'org.eclipse.jgit.transport.URIish', '<init>', '^([a-z][a-z0-9+-]+)://(?:(?:([^/:@]+)(?::([^\\\\/]+))?@)?((?:[^\\\\/:]+)|(?:\\[[0-9a-f:]+\\]))(?::(\\d+))?((?:/~(?:[^\\\\/]+))?[\\\\/]))?(.+)?$', 'ssh+git://lusr\\example:wtf@[::1]:80//abc')",[128295]
"('Description.java', 'org.junit.runner.Description', 'methodAndClassNamePatternGroupOrDefault', '([\\s\\S]*)\\((.*)\\)', 'testProperlyCullAllAncestors_LongHistory(org.eclipse.jgit.revwalk.RevWalkCullTest)')","[5857, 64826]"
"('URIish.java', 'org.eclipse.jgit.transport.URIish', '<init>', '^([a-z][a-z0-9+-]+)://(?:(?:([^/:@]+)(?::([^\\\\/]+))?@)?((?:[^\\\\/:]+)|(?:\\[[0-9a-f:]+\\]))(?::(\\d+))?((?:/~(?:[^\\\\/]+))?[\\\\/]))?(.+)?$', 'ssh+git://l usr\\example.com:wtf@[::1]:1234/D:/x')",[127053]
"('URIish.java', 'org.eclipse.jgit.transport.URIish', '<init>', '^([a-z][a-z0-9+-]+)://(?:(?:([^/:@]+)(?::([^\\\\/]+))?@)?((?:[^\\\\/:]+)|(?:\\[[0-9a-f:]+\\]))(?::(\\d+))?((?:/~(?:[^\\\\/]+))?[\\\\/]))?(.+)?$', 'ssh://l usr\\example.com@1.2.3.4:1234//')",[136529]
"('URIish.java', 'org.eclipse.jgit.transport.URIish', '<init>', '^(file):([\\\\/](?![\\\\/])((?:[A-Za-z]:)?[\\\\/]?(?:(?:[^\\\\/]+[\\\\/]+)*[^\\\\/]+[\\\\/]*)))$', 'ssh+git://1.2.3.4/D:/x')","[165302, 165486, 166406, 166590, 167510, 167694]"
"('URIish.java', 'org.eclipse.jgit.transport.URIish', '<init>', '^(file):([\\\\/](?![\\\\/])((?:[A-Za-z]:)?[\\\\/]?(?:(?:[^\\\\/]+[\\\\/]+)*[^\\\\/]+[\\\\/]*)))$', 'git://host.xy/abc.git/')",[179723]
"('URIish.java', 'org.eclipse.jgit.transport.URIish', '<init>', '^(?:([^/:@]+)(?::([^\\\\/]+))?@)?((?:[^\\\\/:]+)|(?:\\[[0-9a-f:]+\\])):((?:(?:/~(?:[^\\\\/]+))[\\\\/])?(?:(?:[^\\\\/]+[\\\\/]+)*[^\\\\/]+[\\\\/]*))$', '/tmp/jgit_test_7232275650859170598_tmp/tmp_5735535626593387142/.git')","[206769, 206911]"
"('URIish.java', 'org.eclipse.jgit.transport.URIish', '<init>', '^(file):([\\\\/](?![\\\\/])((?:[A-Za-z]:)?[\\\\/]?(?:(?:[^\\\\/]+[\\\\/]+)*[^\\\\/]+[\\\\/]*)))$', 'http://lusr\\example:wtf@[::1]:1234//')",[131354]
"('Description.java', 'org.junit.runner.Description', 'methodAndClassNamePatternGroupOrDefault', '([\\s\\S]*)\\((.*)\\)', 'testEscapedBracket2(org.eclipse.jgit.fnmatch.FileNameMatcherTest)')","[19252, 77784]"
"('URIish.java', 'org.eclipse.jgit.transport.URIish', 'getHumanishName', '^([\\\\/]?((?:[A-Za-z]:)?[\\\\/]?(?:(?:[^\\\\/]+[\\\\/]+)*[^\\\\/]+[\\\\/]*)))$', '/abc/.git')",[176871]
"('Description.java', 'org.junit.runner.Description', 'methodAndClassNamePatternGroupOrDefault', '([\\s\\S]*)\\((.*)\\)', 'org.eclipse.jgit.revwalk.ObjectWalkTest')","[5649, 181190]"
"('Description.java', 'org.junit.runner.Description', 'methodAndClassNamePatternGroupOrDefault', '([\\s\\S]*)\\((.*)\\)', 'testBuildEmpty(org.eclipse.jgit.dircache.DirCacheBuilderTest)')","[12066, 70634]"
"('Description.java', 'org.junit.runner.Description', 'methodAndClassNamePatternGroupOrDefault', '([\\s\\S]*)\\((.*)\\)', 'testGetRefs_TagsOnly_AllLoose(org.eclipse.jgit.internal.storage.file.RefDirectoryTest)')","[57976, 115008]"
"('URIish.java', 'org.eclipse.jgit.transport.URIish', '<init>', '^([a-z][a-z0-9+-]+)://(?:(?:([^/:@]+)(?::([^\\\\/]+))?@)?((?:[^\\\\/:]+)|(?:\\[[0-9a-f:]+\\]))(?::(\\d+))?((?:/~(?:[^\\\\/]+))?[\\\\/]))?(.+)?$', 'https://me@1.2.3.4:1234/D:/x')",[145453]
"('URIish.java', 'org.eclipse.jgit.transport.URIish', '<init>', '^([a-z][a-z0-9+-]+)://(?:(?:([^/:@]+)(?::([^\\\\/]+))?@)?((?:[^\\\\/:]+)|(?:\\[[0-9a-f:]+\\]))(?::(\\d+))?((?:/~(?:[^\\\\/]+))?[\\\\/]))?(.+)?$', 'ssh://l usr\\example.com@1.2.3.4:1234//abc')",[136575]
"('Description.java', 'org.junit.runner.Description', 'methodAndClassNamePatternGroupOrDefault', '([\\s\\S]*)\\((.*)\\)', 'multiplePathsSecondParent(org.eclipse.jgit.api.NameRevCommandTest)')","[51582, 109046]"
"('URIish.java', 'org.eclipse.jgit.transport.URIish', '<init>', '^([a-z][a-z0-9+-]+)://(?:(?:([^/:@]+)(?::([^\\\\/]+))?@)?((?:[^\\\\/:]+)|(?:\\[[0-9a-f:]+\\]))(?::(\\d+))?((?:/~(?:[^\\\\/]+))?[\\\\/]))?(.+)?$', 'ssh+git://me@example.com:80/D:\\x')",[138691]
"('URIish.java', 'org.eclipse.jgit.transport.URIish', '<init>', '^(file):([\\\\/](?![\\\\/])((?:[A-Za-z]:)?[\\\\/]?(?:(?:[^\\\\/]+[\\\\/]+)*[^\\\\/]+[\\\\/]*)))$', 'ssh://l usr\\example.com@[::1]:80/D:\\x')",[137196]
"('Description.java', 'org.junit.runner.Description', 'methodAndClassNamePatternGroupOrDefault', '([\\s\\S]*)\\((.*)\\)', 'testReadLines_LF(org.eclipse.jgit.util.ReadLinesTest)')","[32168, 90280]"
"('Description.java', 'org.junit.runner.Description', 'methodAndClassNamePatternGroupOrDefault', '([\\s\\S]*)\\((.*)\\)', 'testPrefixCompare_1(org.eclipse.jgit.lib.AbbreviatedObjectIdTest)')","[22328, 80688]"
"('Description.java', 'org.junit.runner.Description', 'methodAndClassNamePatternGroupOrDefault', '([\\s\\S]*)\\((.*)\\)', 'testPullLocalConflict(org.eclipse.jgit.api.PullCommandWithRebaseTest)')","[42877, 100444]"
"('URIish.java', 'org.eclipse.jgit.transport.URIish', '<init>', '^(?:([^/:@]+)(?::([^\\\\/]+))?@)?((?:[^\\\\/:]+)|(?:\\[[0-9a-f:]+\\])):((?:(?:/~(?:[^\\\\/]+))[\\\\/])?(?:(?:[^\\\\/]+[\\\\/]+)*[^\\\\/]+[\\\\/]*))$', '/tmp/jgit_test_2763785820419085746_tmp/tmp_961093183525182339')","[204155, 204290, 204438]"
"('Description.java', 'org.junit.runner.Description', 'methodAndClassNamePatternGroupOrDefault', '([\\s\\S]*)\\((.*)\\)', 'testUpdateCreateRef(org.eclipse.jgit.transport.PushProcessTest)')","[5027, 64056]"
"('ChangeIdUtil.java', 'org.eclipse.jgit.util.ChangeIdUtil', 'indexOfChangeId', '(^Change-Id: *I[a-f0-9]{40}$)', 'b')","[191256, 191412]"
"('Description.java', 'org.junit.runner.Description', 'methodAndClassNamePatternGroupOrDefault', '([\\s\\S]*)\\((.*)\\)', 'repositoryWithInitializedSubmodule(org.eclipse.jgit.submodule.SubmoduleStatusTest)')","[20185, 78642]"
"('URIish.java', 'org.eclipse.jgit.transport.URIish', '<init>', '^(file):([\\\\/](?![\\\\/])((?:[A-Za-z]:)?[\\\\/]?(?:(?:[^\\\\/]+[\\\\/]+)*[^\\\\/]+[\\\\/]*)))$', 'file:///home/m%c3%a5y')","[120958, 121004]"
"('ChangeIdUtil.java', 'org.eclipse.jgit.util.ChangeIdUtil', 'indexOfChangeId', '(^Change-Id: *I[a-f0-9]{40}$)', 'Change-Id: I3b7e4e16b503ce00f07ba6ad01d97a356dad7701')","[187511, 187534, 187557, 187741, 187764, 187787, 187902, 187925, 187948, 187971]"
"('Description.java', 'org.junit.runner.Description', 'methodAndClassNamePatternGroupOrDefault', '([\\s\\S]*)\\((.*)\\)', 'testCheckoutRepository(org.eclipse.jgit.api.PathCheckoutCommandTest)')","[46927, 104448]"
"('Description.java', 'org.junit.runner.Description', 'methodAndClassNamePatternGroupOrDefault', '([\\s\\S]*)\\((.*)\\)', 'testStandardFormat_NegativeSize(org.eclipse.jgit.internal.storage.file.UnpackedObjectTest)')","[56709, 113820]"
"('QuotedString.java', 'org.eclipse.jgit.util.QuotedString$BourneUserPathStyle', 'quote', '^~[A-Za-z0-9_-]*/.*$', ""'"")","[193062, 193087]"
"('Description.java', 'org.junit.runner.Description', 'methodAndClassNamePatternGroupOrDefault', '([\\s\\S]*)\\((.*)\\)', 'testEmpty(org.eclipse.jgit.treewalk.filter.InterIndexDiffFilterTest)')","[31546, 89708]"
"('Description.java', 'org.junit.runner.Description', 'methodAndClassNamePatternGroupOrDefault', '([\\s\\S]*)\\((.*)\\)', 'testFormatWithConflictsNoFooter(org.eclipse.jgit.merge.MergeMessageFormatterTest)')","[10885, 69556]"
"('Description.java', 'org.junit.runner.Description', 'methodAndClassNamePatternGroupOrDefault', '([\\s\\S]*)\\((.*)\\)', 'testRandomWrites(org.eclipse.jgit.util.TemporaryBufferTest)')","[34599, 92568]"
"('QuotedString.java', 'org.eclipse.jgit.util.QuotedString$BourneUserPathStyle', 'quote', '^~[A-Za-z0-9_-]+$', '')","[192471, 192495]"
"('Description.java', 'org.junit.runner.Description', 'methodAndClassNamePatternGroupOrDefault', '([\\s\\S]*)\\((.*)\\)', 'testPrefixCompare_Full(org.eclipse.jgit.lib.AbbreviatedObjectIdTest)')","[22475, 80842]"
"('Description.java', 'org.junit.runner.Description', 'methodAndClassNamePatternGroupOrDefault', '([\\s\\S]*)\\((.*)\\)', 'testManySolutionsCase1(org.eclipse.jgit.fnmatch.FileNameMatcherTest)')","[18307, 76794]"
"('URIish.java', 'org.eclipse.jgit.transport.URIish', '<init>', '^([a-z][a-z0-9+-]+)://(?:(?:([^/:@]+)(?::([^\\\\/]+))?@)?((?:[^\\\\/:]+)|(?:\\[[0-9a-f:]+\\]))(?::(\\d+))?((?:/~(?:[^\\\\/]+))?[\\\\/]))?(.+)?$', 'D:/m y')","[178159, 178274]"
"('Description.java', 'org.junit.runner.Description', 'methodAndClassNamePatternGroupOrDefault', '([\\s\\S]*)\\((.*)\\)', 'testRebaseInteractiveMultipleSquash(org.eclipse.jgit.api.RebaseCommandTest)')","[44940, 102446]"
"('Description.java', 'org.junit.runner.Description', 'methodAndClassNamePatternGroupOrDefault', '([\\s\\S]*)\\((.*)\\)', 'testGetRefs_HeadsOnly_SymrefToPacked(org.eclipse.jgit.internal.storage.file.RefDirectoryTest)')","[57745, 114766]"
"('Description.java', 'org.junit.runner.Description', 'methodAndClassNamePatternGroupOrDefault', '([\\s\\S]*)\\((.*)\\)', 'testCheckoutToNonExistingBranch(org.eclipse.jgit.api.CheckoutCommandTest)')","[43232, 100796]"
"('Description.java', 'org.junit.runner.Description', 'methodAndClassNamePatternGroupOrDefault', '([\\s\\S]*)\\((.*)\\)', 'testDegenerate_ReplaceMiddle(org.eclipse.jgit.diff.MyersDiffTest)')","[14751, 73208]"
"('Description.java', 'org.junit.runner.Description', 'methodAndClassNamePatternGroupOrDefault', '([\\s\\S]*)\\((.*)\\)', 'org.eclipse.jgit.util.io.AutoCRLFInputStreamTest')","[33246, 186640]"
"('URIish.java', 'org.eclipse.jgit.transport.URIish', '<init>', '^([a-z][a-z0-9+-]+)://(?:(?:([^/:@]+)(?::([^\\\\/]+))?@)?((?:[^\\\\/:]+)|(?:\\[[0-9a-f:]+\\]))(?::(\\d+))?((?:/~(?:[^\\\\/]+))?[\\\\/]))?(.+)?$', 'ssh+git://l usr\\example.com@1.2.3.4:80/D:\\x')",[140163]
"('Description.java', 'org.junit.runner.Description', 'methodAndClassNamePatternGroupOrDefault', '([\\s\\S]*)\\((.*)\\)', 'testStopOnLastConflictAndContinue(org.eclipse.jgit.api.RebaseCommandTest)')","[45108, 102622]"
"('Description.java', 'org.junit.runner.Description', 'methodAndClassNamePatternGroupOrDefault', '([\\s\\S]*)\\((.*)\\)', 'testDegenerate_InsertsIntoMidPosition(org.eclipse.jgit.diff.MyersDiffTest)')","[14478, 72922]"
"('Description.java', 'org.junit.runner.Description', 'methodAndClassNamePatternGroupOrDefault', '([\\s\\S]*)\\((.*)\\)', 'testWriteString1(org.eclipse.jgit.transport.PacketLineOutTest)')","[5193, 64210]"
"('Description.java', 'org.junit.runner.Description', 'methodAndClassNamePatternGroupOrDefault', '([\\s\\S]*)\\((.*)\\)', 'org.eclipse.jgit.internal.storage.dfs.DfsOutputStreamTest')","[52391, 209489]"
"('URIish.java', 'org.eclipse.jgit.transport.URIish', '<init>', '^([a-z][a-z0-9+-]+)://(?:(?:([^/:@]+)(?::([^\\\\/]+))?@)?((?:[^\\\\/:]+)|(?:\\[[0-9a-f:]+\\]))(?::(\\d+))?((?:/~(?:[^\\\\/]+))?[\\\\/]))?(.+)?$', 'https://l usr\\example.com:wtf@1.2.3.4:1234//')",[133217]
"('Description.java', 'org.junit.runner.Description', 'methodAndClassNamePatternGroupOrDefault', '([\\s\\S]*)\\((.*)\\)', 'testEquals_Short(org.eclipse.jgit.lib.AbbreviatedObjectIdTest)')","[22643, 81018]"
"('URIish.java', 'org.eclipse.jgit.transport.URIish', '<init>', '^([a-z][a-z0-9+-]+)://(?:(?:([^/:@]+)(?::([^\\\\/]+))?@)?((?:[^\\\\/:]+)|(?:\\[[0-9a-f:]+\\]))(?::(\\d+))?((?:/~(?:[^\\\\/]+))?[\\\\/]))?(.+)?$', 'ssh://me@[::1]:1234/D:\\x')",[135931]
"('Description.java', 'org.junit.runner.Description', 'methodAndClassNamePatternGroupOrDefault', '([\\s\\S]*)\\((.*)\\)', 'testRules1thru3_NoIndexEntry(org.eclipse.jgit.lib.DirCacheCheckoutTest)')","[23038, 81392]"
"('URIish.java', 'org.eclipse.jgit.transport.URIish', '<init>', '^(?:([^/:@]+)(?::([^\\\\/]+))?@)?([^\\\\/:]{2,}):([\\\\/](?:(?:[^\\\\/]+[\\\\/]+)*[^\\\\/]+[\\\\/]*))$', '/tmp/jgit_test_6251682262244407463_tmp/tmp_139345380367893616.git')","[116833, 116962]"
"('URIish.java', 'org.eclipse.jgit.transport.URIish', 'getHumanishName', '^([\\\\/]?((?:[A-Za-z]:)?[\\\\/]?(?:(?:[^\\\\/]+[\\\\/]+)*[^\\\\/]+[\\\\/]*)))$', '/a/b/c//')","[178780, 179516]"
"('Description.java', 'org.junit.runner.Description', 'methodAndClassNamePatternGroupOrDefault', '([\\s\\S]*)\\((.*)\\)', 'testResolvedSymRef(org.eclipse.jgit.lib.RefTest)')","[22851, 81216]"
"('ChangeIdUtil.java', 'org.eclipse.jgit.util.ChangeIdUtil', 'indexOfChangeId', '(^Change-Id: *I[a-f0-9]{40}$)', 'with text withour break after subject line')",[187997]
"('URIish.java', 'org.eclipse.jgit.transport.URIish', '<init>', '^([a-z][a-z0-9+-]+)://(?:(?:([^/:@]+)(?::([^\\\\/]+))?@)?((?:[^\\\\/:]+)|(?:\\[[0-9a-f:]+\\]))(?::(\\d+))?((?:/~(?:[^\\\\/]+))?[\\\\/]))?(.+)?$', 'ssh+git://l usr\\example.com@[::1]//')","[153457, 153641]"
"('URIish.java', 'org.eclipse.jgit.transport.URIish', '<init>', '^(file):([\\\\/](?![\\\\/])((?:[A-Za-z]:)?[\\\\/]?(?:(?:[^\\\\/]+[\\\\/]+)*[^\\\\/]+[\\\\/]*)))$', '/tmp/jgit_test_1616732006832071039_tmp/tmp_6256113901600089866/.git')","[206157, 206291]"
"('Description.java', 'org.junit.runner.Description', 'methodAndClassNamePatternGroupOrDefault', '([\\s\\S]*)\\((.*)\\)', 'testParseGitFileName_SrcFooC(org.eclipse.jgit.patch.FileHeaderTest)')","[39509, 97254]"
"('Description.java', 'org.junit.runner.Description', 'methodAndClassNamePatternGroupOrDefault', '([\\s\\S]*)\\((.*)\\)', 'testToLowerCaseString(org.eclipse.jgit.util.StringUtilsTest)')","[33328, 91336]"
"('Description.java', 'org.junit.runner.Description', 'methodAndClassNamePatternGroupOrDefault', '([\\s\\S]*)\\((.*)\\)', 'testStopOnConflict(org.eclipse.jgit.api.RebaseCommandTest)')","[45003, 102512]"
"('Description.java', 'org.junit.runner.Description', 'methodAndClassNamePatternGroupOrDefault', '([\\s\\S]*)\\((.*)\\)', 'testContainsOne(org.eclipse.jgit.internal.storage.file.InflatingBitSetTest)')","[54776, 111994]"
"('URIish.java', 'org.eclipse.jgit.transport.URIish', '<init>', '^([a-z][a-z0-9+-]+)://(?:(?:([^/:@]+)(?::([^\\\\/]+))?@)?((?:[^\\\\/:]+)|(?:\\[[0-9a-f:]+\\]))(?::(\\d+))?((?:/~(?:[^\\\\/]+))?[\\\\/]))?(.+)?$', 'https://me:wtf@1.2.3.4:1234/D:\\x')",[132251]
"('Description.java', 'org.junit.runner.Description', 'methodAndClassNamePatternGroupOrDefault', '([\\s\\S]*)\\((.*)\\)', 'testIsValidPath(org.eclipse.jgit.dircache.DirCacheEntryTest)')","[11694, 70304]"
"('URIish.java', 'org.eclipse.jgit.transport.URIish', '<init>', '^([a-z][a-z0-9+-]+)://(?:(?:([^/:@]+)(?::([^\\\\/]+))?@)?((?:[^\\\\/:]+)|(?:\\[[0-9a-f:]+\\]))(?::(\\d+))?((?:/~(?:[^\\\\/]+))?[\\\\/]))?(.+)?$', 'https://lusr\\example@[::1]/D:\\x')","[161323, 161507]"
"('URIish.java', 'org.eclipse.jgit.transport.URIish', '<init>', '^([\\\\/]?((?:[A-Za-z]:)?[\\\\/]?(?:(?:[^\\\\/]+[\\\\/]+)*[^\\\\/]+[\\\\/]*)))$', '/a/b/c.git')",[121349]
"('URIish.java', 'org.eclipse.jgit.transport.URIish', '<init>', '^([\\\\/]?((?:[A-Za-z]:)?[\\\\/]?(?:(?:[^\\\\/]+[\\\\/]+)*[^\\\\/]+[\\\\/]*)))$', '/a/b/c//')",[179493]
"('Description.java', 'org.junit.runner.Description', 'methodAndClassNamePatternGroupOrDefault', '([\\s\\S]*)\\((.*)\\)', 'testALot(org.eclipse.jgit.transport.URIishTest)')","[1286, 60316]"
"('Description.java', 'org.junit.runner.Description', 'methodAndClassNamePatternGroupOrDefault', '([\\s\\S]*)\\((.*)\\)', 'testLeafSplitsWhenFull(org.eclipse.jgit.notes.NoteMapTest)')","[40839, 98508]"
"('Description.java', 'org.junit.runner.Description', 'methodAndClassNamePatternGroupOrDefault', '([\\s\\S]*)\\((.*)\\)', 'testDequote_BareABCZ_OnlyBC(org.eclipse.jgit.util.QuotedStringGitPathStyleTest)')","[34013, 91974]"
"('Description.java', 'org.junit.runner.Description', 'methodAndClassNamePatternGroupOrDefault', '([\\s\\S]*)\\((.*)\\)', 'testMultiLineMessagesWithoutFooter(org.eclipse.jgit.util.ChangeIdUtilTest)')","[38225, 96088]"
"('Description.java', 'org.junit.runner.Description', 'methodAndClassNamePatternGroupOrDefault', '([\\s\\S]*)\\((.*)\\)', 'testNoNewLine2(org.eclipse.jgit.diff.DiffFormatterReflowTest)')","[13400, 71932]"
"('URIish.java', 'org.eclipse.jgit.transport.URIish', '<init>', '^(file):([\\\\/](?![\\\\/])((?:[A-Za-z]:)?[\\\\/]?(?:(?:[^\\\\/]+[\\\\/]+)*[^\\\\/]+[\\\\/]*)))$', 'http://l usr\\example.com@1.2.3.4:80//')",[143314]
"('Description.java', 'org.junit.runner.Description', 'methodAndClassNamePatternGroupOrDefault', '([\\s\\S]*)\\((.*)\\)', 'invalidSlashAtStart(org.eclipse.jgit.transport.RefSpecTest)')","[3025, 62098]"
"('Description.java', 'org.junit.runner.Description', 'methodAndClassNamePatternGroupOrDefault', '([\\s\\S]*)\\((.*)\\)', 'testThreeEntries_BackwardsTwo(org.eclipse.jgit.treewalk.CanonicalTreeParserTest)')","[29878, 88080]"
"('URIish.java', 'org.eclipse.jgit.transport.URIish', '<init>', '^(file):([\\\\/](?![\\\\/])((?:[A-Za-z]:)?[\\\\/]?(?:(?:[^\\\\/]+[\\\\/]+)*[^\\\\/]+[\\\\/]*)))$', 'ssh+git://l usr\\example.com@1.2.3.4:80//')",[140002]
"('URIish.java', 'org.eclipse.jgit.transport.URIish', '<init>', '^([a-z][a-z0-9+-]+)://(?:(?:([^/:@]+)(?::([^\\\\/]+))?@)?((?:[^\\\\/:]+)|(?:\\[[0-9a-f:]+\\]))(?::(\\d+))?((?:/~(?:[^\\\\/]+))?[\\\\/]))?(.+)?$', 'http://me@example.com//abc')","[154975, 155159]"
"('Description.java', 'org.junit.runner.Description', 'methodAndClassNamePatternGroupOrDefault', '([\\s\\S]*)\\((.*)\\)', 'testOnlyOption_f1_4_d(org.eclipse.jgit.api.CommitOnlyTest)')","[48822, 106274]"
"('Description.java', 'org.junit.runner.Description', 'methodAndClassNamePatternGroupOrDefault', '([\\s\\S]*)\\((.*)\\)', 'testIndexingSmallObject(org.eclipse.jgit.diff.SimilarityIndexTest)')","[14938, 73384]"
"('URIish.java', 'org.eclipse.jgit.transport.URIish', '<init>', '^(file):([\\\\/](?![\\\\/])((?:[A-Za-z]:)?[\\\\/]?(?:(?:[^\\\\/]+[\\\\/]+)*[^\\\\/]+[\\\\/]*)))$', 'http://l usr\\example.com@1.2.3.4:80//abc')",[143360]
"('Description.java', 'org.junit.runner.Description', 'methodAndClassNamePatternGroupOrDefault', '([\\s\\S]*)\\((.*)\\)', 'org.eclipse.jgit.patch.PatchErrorTest')","[39030, 193528]"
"('URIish.java', 'org.eclipse.jgit.transport.URIish', '<init>', '^(file):([\\\\/](?![\\\\/])((?:[A-Za-z]:)?[\\\\/]?(?:(?:[^\\\\/]+[\\\\/]+)*[^\\\\/]+[\\\\/]*)))$', 'http://l usr\\example.com:wtf@[::1]:80/D:\\x')",[130572]
"('Description.java', 'org.junit.runner.Description', 'methodAndClassNamePatternGroupOrDefault', '([\\s\\S]*)\\((.*)\\)', 'testDiff(org.eclipse.jgit.diff.PatchIdDiffFormatterTest)')","[13646, 72130]"
"('URIish.java', 'org.eclipse.jgit.transport.URIish', '<init>', '^([a-z][a-z0-9+-]+)://(?:(?:([^/:@]+)(?::([^\\\\/]+))?@)?((?:[^\\\\/:]+)|(?:\\[[0-9a-f:]+\\]))(?::(\\d+))?((?:/~(?:[^\\\\/]+))?[\\\\/]))?(.+)?$', 'http://l usr\\example.com:wtf@[::1]:80//abc')",[130503]
"('Description.java', 'org.junit.runner.Description', 'methodAndClassNamePatternGroupOrDefault', '([\\s\\S]*)\\((.*)\\)', 'testDirtyFileModeEqualHeadMerge(org.eclipse.jgit.lib.DirCacheCheckoutTest)')","[22996, 81348]"
"('Description.java', 'org.junit.runner.Description', 'methodAndClassNamePatternGroupOrDefault', '([\\s\\S]*)\\((.*)\\)', 'testWhole_LargeObject(org.eclipse.jgit.internal.storage.file.PackFileTest)')","[53862, 111136]"
"('Description.java', 'org.junit.runner.Description', 'methodAndClassNamePatternGroupOrDefault', '([\\s\\S]*)\\((.*)\\)', 'testOneBlock_BulkWrite(org.eclipse.jgit.util.TemporaryBufferTest)')","[34578, 92546]"
"('ChangeIdUtil.java', 'org.eclipse.jgit.util.ChangeIdUtil', 'indexOfFirstFooterLine', '(^[a-zA-Z0-9-]+:(?!//).*$)', 'with header and body')",[190815]
"('Description.java', 'org.junit.runner.Description', 'methodAndClassNamePatternGroupOrDefault', '([\\s\\S]*)\\((.*)\\)', 'testHasChangeid(org.eclipse.jgit.util.ChangeIdUtilTest)')","[37868, 95714]"
"('Description.java', 'org.junit.runner.Description', 'methodAndClassNamePatternGroupOrDefault', '([\\s\\S]*)\\((.*)\\)', 'testDirectoryFileConflicts_5b(org.eclipse.jgit.lib.DirCacheCheckoutTest)')","[23794, 82184]"
"('URIish.java', 'org.eclipse.jgit.transport.URIish', '<init>', '^(file):([\\\\/](?![\\\\/])((?:[A-Za-z]:)?[\\\\/]?(?:(?:[^\\\\/]+[\\\\/]+)*[^\\\\/]+[\\\\/]*)))$', 'https://lusr\\example@1.2.3.4//')","[160794, 160978]"
"('Description.java', 'org.junit.runner.Description', 'methodAndClassNamePatternGroupOrDefault', '([\\s\\S]*)\\((.*)\\)', 'testRebaseWithUnstagedTopicChange(org.eclipse.jgit.api.RebaseCommandTest)')","[45087, 102600]"
"('URIish.java', 'org.eclipse.jgit.transport.URIish', '<init>', '^(file):([\\\\/](?![\\\\/])((?:[A-Za-z]:)?[\\\\/]?(?:(?:[^\\\\/]+[\\\\/]+)*[^\\\\/]+[\\\\/]*)))$', 'ssh://me:wtf@[::1]:1234//')",[122522]
"('Description.java', 'org.junit.runner.Description', 'methodAndClassNamePatternGroupOrDefault', '([\\s\\S]*)\\((.*)\\)', 'testFilterFootersIgnoreCase(org.eclipse.jgit.revwalk.FooterLineTest)')","[6294, 65244]"
"('URIish.java', 'org.eclipse.jgit.transport.URIish', '<init>', '^([a-z][a-z0-9+-]+)://(?:(?:([^/:@]+)(?::([^\\\\/]+))?@)?((?:[^\\\\/:]+)|(?:\\[[0-9a-f:]+\\]))(?::(\\d+))?((?:/~(?:[^\\\\/]+))?[\\\\/]))?(.+)?$', 'ssh://l usr\\example.com@example.com:80/D:\\x')",[136483]
"('URIish.java', 'org.eclipse.jgit.transport.URIish', '<init>', '^([a-z][a-z0-9+-]+)://(?:(?:([^/:@]+)(?::([^\\\\/]+))?@)?((?:[^\\\\/:]+)|(?:\\[[0-9a-f:]+\\]))(?::(\\d+))?((?:/~(?:[^\\\\/]+))?[\\\\/]))?(.+)?$', 'https://lusr\\example@example.com/D:\\x')","[160587, 160771]"
"('ChangeIdUtil.java', 'org.eclipse.jgit.util.ChangeIdUtil', 'insertId', '^(Bug|Issue)[a-zA-Z0-9-]*:.*$', 'Signed-off-by: J Author <ja@example.com>')","[188541, 188799, 188979, 189439, 189594, 189723, 189904, 190085]"
"('Description.java', 'org.junit.runner.Description', 'methodAndClassNamePatternGroupOrDefault', '([\\s\\S]*)\\((.*)\\)', 'testIndexSize(org.eclipse.jgit.internal.storage.pack.DeltaIndexTest)')","[52870, 110256]"
"('URIish.java', 'org.eclipse.jgit.transport.URIish', '<init>', '^(file):([\\\\/](?![\\\\/])((?:[A-Za-z]:)?[\\\\/]?(?:(?:[^\\\\/]+[\\\\/]+)*[^\\\\/]+[\\\\/]*)))$', '/tmp/jgit_test_7801778247778239084_tmp/tmp_7326340281197098170.git')",[117348]
"('URIish.java', 'org.eclipse.jgit.transport.URIish', '<init>', '^([a-z][a-z0-9+-]+)://(?:(?:([^/:@]+)(?::([^\\\\/]+))?@)?((?:[^\\\\/:]+)|(?:\\[[0-9a-f:]+\\]))(?::(\\d+))?((?:/~(?:[^\\\\/]+))?[\\\\/]))?(.+)?$', 'ssh+git://lusr\\example@1.2.3.4:1234/D:/x')",[141037]
"('Description.java', 'org.junit.runner.Description', 'methodAndClassNamePatternGroupOrDefault', '([\\s\\S]*)\\((.*)\\)', 'testComparatorReduceCommonStartButLastLineNoEol(org.eclipse.jgit.diff.RawTextTest)')","[14165, 72614]"
"('URIish.java', 'org.eclipse.jgit.transport.URIish', '<init>', '^([a-z][a-z0-9+-]+)://(?:(?:([^/:@]+)(?::([^\\\\/]+))?@)?((?:[^\\\\/:]+)|(?:\\[[0-9a-f:]+\\]))(?::(\\d+))?((?:/~(?:[^\\\\/]+))?[\\\\/]))?(.+)?$', '/tmp/jgit_test_1888401002986800567_tmp/tmp_1326242475311810481.git')",[116658]
"('URIish.java', 'org.eclipse.jgit.transport.URIish', '<init>', '^([a-z][a-z0-9+-]+)://(?:(?:([^/:@]+)(?::([^\\\\/]+))?@)?((?:[^\\\\/:]+)|(?:\\[[0-9a-f:]+\\]))(?::(\\d+))?((?:/~(?:[^\\\\/]+))?[\\\\/]))?(.+)?$', 'https://lusr\\example:wtf@[::1]:80//')",[134873]
"('URIish.java', 'org.eclipse.jgit.transport.URIish', '<init>', '^([a-z][a-z0-9+-]+)://(?:(?:([^/:@]+)(?::([^\\\\/]+))?@)?((?:[^\\\\/:]+)|(?:\\[[0-9a-f:]+\\]))(?::(\\d+))?((?:/~(?:[^\\\\/]+))?[\\\\/]))?(.+)?$', '/tmp/jgit_test_5706102738936117736_tmp/tmp_5370206506562001691')","[201361, 201491, 201638]"
"('Description.java', 'org.junit.runner.Description', 'methodAndClassNamePatternGroupOrDefault', '([\\s\\S]*)\\((.*)\\)', 'testRules(org.eclipse.jgit.ignore.IgnoreNodeTest)')","[31628, 89774]"
"('URIish.java', 'org.eclipse.jgit.transport.URIish', '<init>', '^([a-z][a-z0-9+-]+)://(?:(?:([^/:@]+)(?::([^\\\\/]+))?@)?((?:[^\\\\/:]+)|(?:\\[[0-9a-f:]+\\]))(?::(\\d+))?((?:/~(?:[^\\\\/]+))?[\\\\/]))?(.+)?$', 'https://me:wtf@[::1]:1234/D:/x')",[132573]
"('URIish.java', 'org.eclipse.jgit.transport.URIish', '<init>', '^([a-z][a-z0-9+-]+)://(?:(?:([^/:@]+)(?::([^\\\\/]+))?@)?((?:[^\\\\/:]+)|(?:\\[[0-9a-f:]+\\]))(?::(\\d+))?((?:/~(?:[^\\\\/]+))?[\\\\/]))?(.+)?$', 'ssh+git://me@[::1]/D:/x')","[152445, 152629]"
"('Description.java', 'org.junit.runner.Description', 'methodAndClassNamePatternGroupOrDefault', '([\\s\\S]*)\\((.*)\\)', 'testOnlyOption_f1_14_e(org.eclipse.jgit.api.CommitOnlyTest)')","[50208, 107726]"
"('Description.java', 'org.junit.runner.Description', 'methodAndClassNamePatternGroupOrDefault', '([\\s\\S]*)\\((.*)\\)', 'testSkip(org.eclipse.jgit.util.io.UnionInputStreamTest)')","[33059, 91094]"
"('Description.java', 'org.junit.runner.Description', 'methodAndClassNamePatternGroupOrDefault', '([\\s\\S]*)\\((.*)\\)', 'invalidWhenSourceOnlyAndWildcard(org.eclipse.jgit.transport.RefSpecTest)')","[2752, 61812]"
"('URIish.java', 'org.eclipse.jgit.transport.URIish', '<init>', '^([a-z][a-z0-9+-]+)://(?:(?:([^/:@]+)(?::([^\\\\/]+))?@)?((?:[^\\\\/:]+)|(?:\\[[0-9a-f:]+\\]))(?::(\\d+))?((?:/~(?:[^\\\\/]+))?[\\\\/]))?(.+)?$', 'ssh+git://l usr\\example.com:wtf@1.2.3.4:1234//abc')",[126639]
"('Description.java', 'org.junit.runner.Description', 'methodAndClassNamePatternGroupOrDefault', '([\\s\\S]*)\\((.*)\\)', 'testCheckoutOutChangesAutoCRLFtrueBinary(org.eclipse.jgit.lib.DirCacheCheckoutTest)')","[23878, 82272]"
"('URIish.java', 'org.eclipse.jgit.transport.URIish', '<init>', '^(file):([\\\\/](?![\\\\/])((?:[A-Za-z]:)?[\\\\/]?(?:(?:[^\\\\/]+[\\\\/]+)*[^\\\\/]+[\\\\/]*)))$', 'https://l usr\\example.com:wtf@1.2.3.4:1234//')",[133194]
"('URIish.java', 'org.eclipse.jgit.transport.URIish', '<init>', '^([a-z][a-z0-9+-]+)://(?:(?:([^/:@]+)(?::([^\\\\/]+))?@)?((?:[^\\\\/:]+)|(?:\\[[0-9a-f:]+\\]))(?::(\\d+))?((?:/~(?:[^\\\\/]+))?[\\\\/]))?(.+)?$', 'http://me@1.2.3.4:1234/D:/x')",[142141]
"('Description.java', 'org.junit.runner.Description', 'methodAndClassNamePatternGroupOrDefault', '([\\s\\S]*)\\((.*)\\)', 'testEmptyStream(org.eclipse.jgit.util.io.UnionInputStreamTest)')","[33143, 91182]"
"('Description.java', 'org.junit.runner.Description', 'methodAndClassNamePatternGroupOrDefault', '([\\s\\S]*)\\((.*)\\)', 'testTrackingUpdate(org.eclipse.jgit.api.PushCommandTest)')","[42150, 99762]"
"('Description.java', 'org.junit.runner.Description', 'methodAndClassNamePatternGroupOrDefault', '([\\s\\S]*)\\((.*)\\)', 'testTagging(org.eclipse.jgit.api.TagCommandTest)')","[41461, 99080]"
"('URIish.java', 'org.eclipse.jgit.transport.URIish', '<init>', '^(file):([\\\\/](?![\\\\/])((?:[A-Za-z]:)?[\\\\/]?(?:(?:[^\\\\/]+[\\\\/]+)*[^\\\\/]+[\\\\/]*)))$', 'ssh+git://l usr\\example.com:wtf@[::1]:1234/D:\\x')",[127076]
"('URIish.java', 'org.eclipse.jgit.transport.URIish', '<init>', '^(file):([\\\\/](?![\\\\/])((?:[A-Za-z]:)?[\\\\/]?(?:(?:[^\\\\/]+[\\\\/]+)*[^\\\\/]+[\\\\/]*)))$', 'file:///tmp/jgit_test_7007872334489680580_tmp/tmp_4454208904199474254/.git/')",[183173]
"('URIish.java', 'org.eclipse.jgit.transport.URIish', '<init>', '^(file):([\\\\/](?![\\\\/])((?:[A-Za-z]:)?[\\\\/]?(?:(?:[^\\\\/]+[\\\\/]+)*[^\\\\/]+[\\\\/]*)))$', 'https://me:wtf@example.com:80//abc')",[131952]
"('Description.java', 'org.junit.runner.Description', 'methodAndClassNamePatternGroupOrDefault', '([\\s\\S]*)\\((.*)\\)', 'testGetBitmapWithThreeXor(org.eclipse.jgit.internal.storage.file.StoredBitmapTest)')","[53448, 110762]"
"('URIish.java', 'org.eclipse.jgit.transport.URIish', '<init>', '^([a-z][a-z0-9+-]+)://(?:(?:([^/:@]+)(?::([^\\\\/]+))?@)?((?:[^\\\\/:]+)|(?:\\[[0-9a-f:]+\\]))(?::(\\d+))?((?:/~(?:[^\\\\/]+))?[\\\\/]))?(.+)?$', 'http://l usr\\example.com@[::1]:1234/D:/x')",[143613]
"('URIish.java', 'org.eclipse.jgit.transport.URIish', '<init>', '^(file):([\\\\/](?![\\\\/])((?:[A-Za-z]:)?[\\\\/]?(?:(?:[^\\\\/]+[\\\\/]+)*[^\\\\/]+[\\\\/]*)))$', 'ssh://l usr\\example.com@[::1]//')","[150122, 150306]"
"('Description.java', 'org.junit.runner.Description', 'methodAndClassNamePatternGroupOrDefault', '([\\s\\S]*)\\((.*)\\)', 'testLarge_SingleWrite(org.eclipse.jgit.util.TemporaryBufferTest)')","[34536, 92502]"
"('Description.java', 'org.junit.runner.Description', 'methodAndClassNamePatternGroupOrDefault', '([\\s\\S]*)\\((.*)\\)', 'testInvalidTreeDuplicateNames3(org.eclipse.jgit.lib.ObjectCheckerTest)')","[26987, 85330]"
"('Description.java', 'org.junit.runner.Description', 'methodAndClassNamePatternGroupOrDefault', '([\\s\\S]*)\\((.*)\\)', 'testGetTwoSlashesDotGitHumanishName(org.eclipse.jgit.transport.URIishTest)')","[2084, 61152]"
"('URIish.java', 'org.eclipse.jgit.transport.URIish', '<init>', '^(file):([\\\\/](?![\\\\/])((?:[A-Za-z]:)?[\\\\/]?(?:(?:[^\\\\/]+[\\\\/]+)*[^\\\\/]+[\\\\/]*)))$', '/tmp/jgit_test_2434055886334526133_tmp/tmp_1405098318662614791.git')",[116508]
"('Description.java', 'org.junit.runner.Description', 'methodAndClassNamePatternGroupOrDefault', '([\\s\\S]*)\\((.*)\\)', 'testQuote_Empty(org.eclipse.jgit.util.QuotedStringGitPathStyleTest)')","[34286, 92260]"
"('Description.java', 'org.junit.runner.Description', 'methodAndClassNamePatternGroupOrDefault', '([\\s\\S]*)\\((.*)\\)', 'test7_FromString(org.eclipse.jgit.lib.AbbreviatedObjectIdTest)')","[22664, 81040]"
"('Description.java', 'org.junit.runner.Description', 'methodAndClassNamePatternGroupOrDefault', '([\\s\\S]*)\\((.*)\\)', 'testParse_ShortLineOnlyNoLF(org.eclipse.jgit.revwalk.RevTagParseTest)')","[7082, 65970]"
"('URIish.java', 'org.eclipse.jgit.transport.URIish', '<init>', '^([\\\\/]?((?:[A-Za-z]:)?[\\\\/]?(?:(?:[^\\\\/]+[\\\\/]+)*[^\\\\/]+[\\\\/]*)))$', '/tmp/jgit_test_2564324336982684232_tmp/tmp_7539504802091562184')","[199473, 199618, 199768, 199918, 200068]"
"('Description.java', 'org.junit.runner.Description', 'methodAndClassNamePatternGroupOrDefault', '([\\s\\S]*)\\((.*)\\)', 'workingDirectoryCleanIndexModify(org.eclipse.jgit.api.StashApplyCommandTest)')","[51143, 108606]"
"('Description.java', 'org.junit.runner.Description', 'methodAndClassNamePatternGroupOrDefault', '([\\s\\S]*)\\((.*)\\)', 'testTinyThinPack(org.eclipse.jgit.transport.PackParserTest)')","[4254, 63286]"
"('URIish.java', 'org.eclipse.jgit.transport.URIish', '<init>', '^([a-z][a-z0-9+-]+)://(?:(?:([^/:@]+)(?::([^\\\\/]+))?@)?((?:[^\\\\/:]+)|(?:\\[[0-9a-f:]+\\]))(?::(\\d+))?((?:/~(?:[^\\\\/]+))?[\\\\/]))?(.+)?$', 'ssh://lusr\\example:wtf@[::1]:1234//abc')",[124799]
"('URIish.java', 'org.eclipse.jgit.transport.URIish', '<init>', '^([a-z][a-z0-9+-]+)://(?:(?:([^/:@]+)(?::([^\\\\/]+))?@)?((?:[^\\\\/:]+)|(?:\\[[0-9a-f:]+\\]))(?::(\\d+))?((?:/~(?:[^\\\\/]+))?[\\\\/]))?(.+)?$', 'https://l usr\\example.com:wtf@example.com:1234//')",[132849]
"('Description.java', 'org.junit.runner.Description', 'methodAndClassNamePatternGroupOrDefault', '([\\s\\S]*)\\((.*)\\)', 'testType_Replace(org.eclipse.jgit.diff.EditTest)')","[15831, 74220]"
"('Description.java', 'org.junit.runner.Description', 'methodAndClassNamePatternGroupOrDefault', '([\\s\\S]*)\\((.*)\\)', 'testUnsupportedGroupCase0(org.eclipse.jgit.fnmatch.FileNameMatcherTest)')","[17866, 76332]"
"('Description.java', 'org.junit.runner.Description', 'methodAndClassNamePatternGroupOrDefault', '([\\s\\S]*)\\((.*)\\)', 'testPunctGroupCase3(org.eclipse.jgit.fnmatch.FileNameMatcherTest)')","[17992, 76464]"
"('Description.java', 'org.junit.runner.Description', 'methodAndClassNamePatternGroupOrDefault', '([\\s\\S]*)\\((.*)\\)', 'testGetRefs_HeadsOnly_AllLoose(org.eclipse.jgit.internal.storage.file.RefDirectoryTest)')","[57787, 114810]"
"('URIish.java', 'org.eclipse.jgit.transport.URIish', '<init>', '^([a-z][a-z0-9+-]+)://(?:(?:([^/:@]+)(?::([^\\\\/]+))?@)?((?:[^\\\\/:]+)|(?:\\[[0-9a-f:]+\\]))(?::(\\d+))?((?:/~(?:[^\\\\/]+))?[\\\\/]))?(.+)?$', 'ssh://lusr\\example:wtf@1.2.3.4:1234/D:\\x')",[124523]
"('Description.java', 'org.junit.runner.Description', 'methodAndClassNamePatternGroupOrDefault', '([\\s\\S]*)\\((.*)\\)', 'testAddNothing(org.eclipse.jgit.api.AddCommandTest)')","[50416, 107924]"
"('URIish.java', 'org.eclipse.jgit.transport.URIish', '<init>', '^(file):([\\\\/](?![\\\\/])((?:[A-Za-z]:)?[\\\\/]?(?:(?:[^\\\\/]+[\\\\/]+)*[^\\\\/]+[\\\\/]*)))$', 'ssh+git://me@1.2.3.4:80/D:\\x')",[139036]
"('URIish.java', 'org.eclipse.jgit.transport.URIish', '<init>', '^(file):([\\\\/](?![\\\\/])((?:[A-Za-z]:)?[\\\\/]?(?:(?:[^\\\\/]+[\\\\/]+)*[^\\\\/]+[\\\\/]*)))$', 'http://lusr\\example:wtf@[::1]:1234/D:\\x')",[131492]
"('Description.java', 'org.junit.runner.Description', 'methodAndClassNamePatternGroupOrDefault', '([\\s\\S]*)\\((.*)\\)', 'testContext0(org.eclipse.jgit.diff.DiffFormatterReflowTest)')","[13253, 71778]"
"('Description.java', 'org.junit.runner.Description', 'methodAndClassNamePatternGroupOrDefault', '([\\s\\S]*)\\((.*)\\)', 'testOneEntry_Seek1IsEOF(org.eclipse.jgit.treewalk.CanonicalTreeParserTest)')","[30004, 88212]"
"('Description.java', 'org.junit.runner.Description', 'methodAndClassNamePatternGroupOrDefault', '([\\s\\S]*)\\((.*)\\)', 'invalidWhenWildcardBeforeTextAtEnd(org.eclipse.jgit.transport.RefSpecTest)')","[2626, 61680]"
"('Description.java', 'org.junit.runner.Description', 'methodAndClassNamePatternGroupOrDefault', '([\\s\\S]*)\\((.*)\\)', 'testNoSpace(org.eclipse.jgit.lib.ValidRefNameTest)')","[24460, 82822]"
"('Description.java', 'org.junit.runner.Description', 'methodAndClassNamePatternGroupOrDefault', '([\\s\\S]*)\\((.*)\\)', 'repositoryWithNoSubmodules(org.eclipse.jgit.submodule.SubmoduleUpdateTest)')","[19605, 78114]"
"('Description.java', 'org.junit.runner.Description', 'methodAndClassNamePatternGroupOrDefault', '([\\s\\S]*)\\((.*)\\)', 'testOnlyOption_f1_12_c(org.eclipse.jgit.api.CommitOnlyTest)')","[49956, 107462]"
"('Description.java', 'org.junit.runner.Description', 'methodAndClassNamePatternGroupOrDefault', '([\\s\\S]*)\\((.*)\\)', 'testReadBranchConfig(org.eclipse.jgit.internal.storage.file.RefDirectoryTest)')","[58207, 115250]"
"('Description.java', 'org.junit.runner.Description', 'methodAndClassNamePatternGroupOrDefault', '([\\s\\S]*)\\((.*)\\)', 'org.eclipse.jgit.internal.storage.file.UnpackedObjectTest')","[56583, 210164]"
"('URIish.java', 'org.eclipse.jgit.transport.URIish', '<init>', '^(file):([\\\\/](?![\\\\/])((?:[A-Za-z]:)?[\\\\/]?(?:(?:[^\\\\/]+[\\\\/]+)*[^\\\\/]+[\\\\/]*)))$', 'https://me:wtf@example.com:1234//abc')",[131768]
"('URIish.java', 'org.eclipse.jgit.transport.URIish', '<init>', '^(file):([\\\\/](?![\\\\/])((?:[A-Za-z]:)?[\\\\/]?(?:(?:[^\\\\/]+[\\\\/]+)*[^\\\\/]+[\\\\/]*)))$', 'http://lusr\\example@1.2.3.4//')","[157482, 157666]"
"('URIish.java', 'org.eclipse.jgit.transport.URIish', '<init>', '^(?:([^/:@]+)(?::([^\\\\/]+))?@)?([^\\\\/:]{2,}):([\\\\/](?:(?:[^\\\\/]+[\\\\/]+)*[^\\\\/]+[\\\\/]*))$', '/tmp/jgit_test_7232275650859170598_tmp/tmp_5735535626593387142/.git')","[206795, 206941]"
"('Description.java', 'org.junit.runner.Description', 'methodAndClassNamePatternGroupOrDefault', '([\\s\\S]*)\\((.*)\\)', 'testSideBranch(org.eclipse.jgit.revplot.PlotCommitListTest)')","[40110, 97804]"
"('URIish.java', 'org.eclipse.jgit.transport.URIish', '<init>', '^(file):([\\\\/](?![\\\\/])((?:[A-Za-z]:)?[\\\\/]?(?:(?:[^\\\\/]+[\\\\/]+)*[^\\\\/]+[\\\\/]*)))$', 'https://lusr\\example@[::1]:1234/D:\\x')",[148052]
"('Description.java', 'org.junit.runner.Description', 'methodAndClassNamePatternGroupOrDefault', '([\\s\\S]*)\\((.*)\\)', 't1DominatesT2(org.eclipse.jgit.api.DescribeCommandTest)')","[44591, 102160]"
"('Description.java', 'org.junit.runner.Description', 'methodAndClassNamePatternGroupOrDefault', '([\\s\\S]*)\\((.*)\\)', 'org.eclipse.jgit.internal.storage.file.T0003_BasicTest')","[53902, 209786]"
"('Description.java', 'org.junit.runner.Description', 'methodAndClassNamePatternGroupOrDefault', '([\\s\\S]*)\\((.*)\\)', 'testCloneWithAutoSetupRebase(org.eclipse.jgit.api.CloneCommandTest)')","[42356, 99938]"
"('Description.java', 'org.junit.runner.Description', 'methodAndClassNamePatternGroupOrDefault', '([\\s\\S]*)\\((.*)\\)', 'testEdit_NoUniqueMiddleSide_FlipBlocks(org.eclipse.jgit.diff.HistogramDiffTest)')","[15163, 73560]"
"('Description.java', 'org.junit.runner.Description', 'methodAndClassNamePatternGroupOrDefault', '([\\s\\S]*)\\((.*)\\)', 'testMixedGroupCase7(org.eclipse.jgit.fnmatch.FileNameMatcherTest)')","[16606, 75012]"
"('URIish.java', 'org.eclipse.jgit.transport.URIish', '<init>', '^([a-z][a-z0-9+-]+)://(?:(?:([^/:@]+)(?::([^\\\\/]+))?@)?((?:[^\\\\/:]+)|(?:\\[[0-9a-f:]+\\]))(?::(\\d+))?((?:/~(?:[^\\\\/]+))?[\\\\/]))?(.+)?$', 'file:///a/b.txt')",[121648]
"('Description.java', 'org.junit.runner.Description', 'methodAndClassNamePatternGroupOrDefault', '([\\s\\S]*)\\((.*)\\)', 'testForbiddenNamesOnWindowsEgConDotSuffix(org.eclipse.jgit.lib.DirCacheCheckoutMaliciousPathTest)')","[21790, 80204]"
"('Description.java', 'org.junit.runner.Description', 'methodAndClassNamePatternGroupOrDefault', '([\\s\\S]*)\\((.*)\\)', 'testSimple(org.eclipse.jgit.revwalk.RevWalkMergeBaseTest)')","[7727, 66586]"
"('Description.java', 'org.junit.runner.Description', 'methodAndClassNamePatternGroupOrDefault', '([\\s\\S]*)\\((.*)\\)', 'testPut_WithPrefix(org.eclipse.jgit.util.RefMapTest)')","[37265, 95142]"
"('Description.java', 'org.junit.runner.Description', 'methodAndClassNamePatternGroupOrDefault', '([\\s\\S]*)\\((.*)\\)', 'testChangeIdAfterBugOrIssue(org.eclipse.jgit.util.ChangeIdUtilTest)')","[37910, 95758]"
"('URIish.java', 'org.eclipse.jgit.transport.URIish', '<init>', '^([a-z][a-z0-9+-]+)://(?:(?:([^/:@]+)(?::([^\\\\/]+))?@)?((?:[^\\\\/:]+)|(?:\\[[0-9a-f:]+\\]))(?::(\\d+))?((?:/~(?:[^\\\\/]+))?[\\\\/]))?(.+)?$', 'https://l usr\\example.com:wtf@1.2.3.4:1234/D:\\x')",[133355]
"('Description.java', 'org.junit.runner.Description', 'methodAndClassNamePatternGroupOrDefault', '([\\s\\S]*)\\((.*)\\)', 'addSubmoduleWithRelativeUri(org.eclipse.jgit.submodule.SubmoduleAddTest)')","[20040, 78510]"
"('URIish.java', 'org.eclipse.jgit.transport.URIish', '<init>', '^([a-z][a-z0-9+-]+)://(?:(?:([^/:@]+)(?::([^\\\\/]+))?@)?((?:[^\\\\/:]+)|(?:\\[[0-9a-f:]+\\]))(?::(\\d+))?((?:/~(?:[^\\\\/]+))?[\\\\/]))?(.+)?$', 'http://user:secret@host.xy:80/some/path')","[178918, 178964]"
"('Description.java', 'org.junit.runner.Description', 'methodAndClassNamePatternGroupOrDefault', '([\\s\\S]*)\\((.*)\\)', 'testAddExistingSingleBinaryFile(org.eclipse.jgit.api.AddCommandTest)')","[50710, 108232]"
"('Description.java', 'org.junit.runner.Description', 'methodAndClassNamePatternGroupOrDefault', '([\\s\\S]*)\\((.*)\\)', 'testMultiLineMessagesWithSignedOffBy(org.eclipse.jgit.util.ChangeIdUtilTest)')","[37994, 95846]"
"('Description.java', 'org.junit.runner.Description', 'methodAndClassNamePatternGroupOrDefault', '([\\s\\S]*)\\((.*)\\)', 'testError_DisconnectedHunk(org.eclipse.jgit.patch.PatchErrorTest)')","[39051, 96814]"
"('URIish.java', 'org.eclipse.jgit.transport.URIish', '<init>', '^(file):([\\\\/](?![\\\\/])((?:[A-Za-z]:)?[\\\\/]?(?:(?:[^\\\\/]+[\\\\/]+)*[^\\\\/]+[\\\\/]*)))$', 'ssh+git://me@[::1]:80//abc')",[139312]
"('URIish.java', 'org.eclipse.jgit.transport.URIish', '<init>', '^([a-z][a-z0-9+-]+)://(?:(?:([^/:@]+)(?::([^\\\\/]+))?@)?((?:[^\\\\/:]+)|(?:\\[[0-9a-f:]+\\]))(?::(\\d+))?((?:/~(?:[^\\\\/]+))?[\\\\/]))?(.+)?$', 'https://me@1.2.3.4//abc')","[158655, 158839]"
"('URIish.java', 'org.eclipse.jgit.transport.URIish', '<init>', '^(file):([\\\\/](?![\\\\/])((?:[A-Za-z]:)?[\\\\/]?(?:(?:[^\\\\/]+[\\\\/]+)*[^\\\\/]+[\\\\/]*)))$', 'ssh+git://me@example.com//')","[151594, 151778]"
"('Description.java', 'org.junit.runner.Description', 'methodAndClassNamePatternGroupOrDefault', '([\\s\\S]*)\\((.*)\\)', 'testFillTo100(org.eclipse.jgit.util.IntListTest)')","[36120, 94042]"
"('Description.java', 'org.junit.runner.Description', 'methodAndClassNamePatternGroupOrDefault', '([\\s\\S]*)\\((.*)\\)', 'testDetachedHead(org.eclipse.jgit.api.RebaseCommandTest)')","[45717, 103260]"
"('Description.java', 'org.junit.runner.Description', 'methodAndClassNamePatternGroupOrDefault', '([\\s\\S]*)\\((.*)\\)', 'testDifferentStatesWithPaths(org.eclipse.jgit.api.StatusCommandTest)')","[44837, 102358]"
"('Description.java', 'org.junit.runner.Description', 'methodAndClassNamePatternGroupOrDefault', '([\\s\\S]*)\\((.*)\\)', 'testWriteEmptyReadEmpty_RealIndex(org.eclipse.jgit.dircache.DirCacheBasicTest)')","[11406, 70062]"
"('URIish.java', 'org.eclipse.jgit.transport.URIish', '<init>', '^([a-z][a-z0-9+-]+)://(?:(?:([^/:@]+)(?::([^\\\\/]+))?@)?((?:[^\\\\/:]+)|(?:\\[[0-9a-f:]+\\]))(?::(\\d+))?((?:/~(?:[^\\\\/]+))?[\\\\/]))?(.+)?$', 'ssh+git://lusr\\example@example.com:80/D:/x')",[140853]
"('Description.java', 'org.junit.runner.Description', 'methodAndClassNamePatternGroupOrDefault', '([\\s\\S]*)\\((.*)\\)', 'resolveWorkingDirectoryRelativeUrl(org.eclipse.jgit.submodule.SubmoduleInitTest)')","[19418, 77938]"
"('Description.java', 'org.junit.runner.Description', 'methodAndClassNamePatternGroupOrDefault', '([\\s\\S]*)\\((.*)\\)', 'testXDigitGroupCase3(org.eclipse.jgit.fnmatch.FileNameMatcherTest)')","[18748, 77256]"
"('Description.java', 'org.junit.runner.Description', 'methodAndClassNamePatternGroupOrDefault', '([\\s\\S]*)\\((.*)\\)', 'org.eclipse.jgit.util.RawSubStringPatternTest')","[33473, 186694]"
"('Description.java', 'org.junit.runner.Description', 'methodAndClassNamePatternGroupOrDefault', '([\\s\\S]*)\\((.*)\\)', 'org.eclipse.jgit.api.BlameCommandTest')","[52162, 209462]"
"('URIish.java', 'org.eclipse.jgit.transport.URIish', '<init>', '^([a-z][a-z0-9+-]+)://(?:(?:([^/:@]+)(?::([^\\\\/]+))?@)?((?:[^\\\\/:]+)|(?:\\[[0-9a-f:]+\\]))(?::(\\d+))?((?:/~(?:[^\\\\/]+))?[\\\\/]))?(.+)?$', 'ssh://lusr\\example:wtf@example.com:1234//')",[124017]
"('SideBandInputStream.java', 'org.eclipse.jgit.transport.SideBandInputStream', 'doProgressLine', '^([\\w ]+): +\\d+% +\\( *(\\d+)/ *(\\d+)\\)(?:, done\\.)? *[\r\n]$', 'Updating references: 100% (1/1)\n')","[117323, 194664, 194854, 195044, 195234, 195424, 195614, 195804, 195940, 196130, 196320, 196456]"
"('Description.java', 'org.junit.runner.Description', 'methodAndClassNamePatternGroupOrDefault', '([\\s\\S]*)\\((.*)\\)', 'testParseGitFileName_FailFooBar(org.eclipse.jgit.patch.FileHeaderTest)')","[39362, 97100]"
"('URIish.java', 'org.eclipse.jgit.transport.URIish', '<init>', '^(file):([\\\\/](?![\\\\/])((?:[A-Za-z]:)?[\\\\/]?(?:(?:[^\\\\/]+[\\\\/]+)*[^\\\\/]+[\\\\/]*)))$', 'https://me@example.com:1234/D:/x')",[145062]
"('URIish.java', 'org.eclipse.jgit.transport.URIish', '<init>', '^([a-z][a-z0-9+-]+)://(?:(?:([^/:@]+)(?::([^\\\\/]+))?@)?((?:[^\\\\/:]+)|(?:\\[[0-9a-f:]+\\]))(?::(\\d+))?((?:/~(?:[^\\\\/]+))?[\\\\/]))?(.+)?$', 'ssh+git://lusr\\example:wtf@1.2.3.4:80/D:/x')",[127973]
"('Description.java', 'org.junit.runner.Description', 'methodAndClassNamePatternGroupOrDefault', '([\\s\\S]*)\\((.*)\\)', 'testQuote_Ang(org.eclipse.jgit.util.QuotedStringGitPathStyleTest)')","[34139, 92106]"
"('Description.java', 'org.junit.runner.Description', 'methodAndClassNamePatternGroupOrDefault', '([\\s\\S]*)\\((.*)\\)', 'org.eclipse.jgit.diff.RawTextTest')","[14144, 182667]"
"('Description.java', 'org.junit.runner.Description', 'methodAndClassNamePatternGroupOrDefault', '([\\s\\S]*)\\((.*)\\)', 'logAllCommits(org.eclipse.jgit.api.LogCommandTest)')","[47572, 105064]"
"('Description.java', 'org.junit.runner.Description', 'methodAndClassNamePatternGroupOrDefault', '([\\s\\S]*)\\((.*)\\)', 'testIsNameConflicting(org.eclipse.jgit.internal.storage.file.RefDirectoryTest)')","[58816, 115888]"
"('ChangeIdUtil.java', 'org.eclipse.jgit.util.ChangeIdUtil', 'indexOfChangeId', '(^Change-Id: *I[a-f0-9]{40}$)', 'oneliner')",[187488]
"('URIish.java', 'org.eclipse.jgit.transport.URIish', '<init>', '^([a-z][a-z0-9+-]+)://(?:(?:([^/:@]+)(?::([^\\\\/]+))?@)?((?:[^\\\\/:]+)|(?:\\[[0-9a-f:]+\\]))(?::(\\d+))?((?:/~(?:[^\\\\/]+))?[\\\\/]))?(.+)?$', 'https://l usr\\example.com:wtf@example.com:80//abc')",[133079]
"('URIish.java', 'org.eclipse.jgit.transport.URIish', '<init>', '^(file):([\\\\/](?![\\\\/])((?:[A-Za-z]:)?[\\\\/]?(?:(?:[^\\\\/]+[\\\\/]+)*[^\\\\/]+[\\\\/]*)))$', 'ssh://l usr\\example.com@example.com:1234/D:\\x')",[136276]
"('Description.java', 'org.junit.runner.Description', 'methodAndClassNamePatternGroupOrDefault', '([\\s\\S]*)\\((.*)\\)', 'testRefKeySameAsName(org.eclipse.jgit.internal.storage.file.RefUpdateTest)')","[55814, 112962]"
"('URIish.java', 'org.eclipse.jgit.transport.URIish', '<init>', '^([a-z][a-z0-9+-]+)://(?:(?:([^/:@]+)(?::([^\\\\/]+))?@)?((?:[^\\\\/:]+)|(?:\\[[0-9a-f:]+\\]))(?::(\\d+))?((?:/~(?:[^\\\\/]+))?[\\\\/]))?(.+)?$', 'https://me:wtf@[::1]:80/D:/x')",[132757]
"('Description.java', 'org.junit.runner.Description', 'methodAndClassNamePatternGroupOrDefault', '([\\s\\S]*)\\((.*)\\)', 'testWritePack2(org.eclipse.jgit.internal.storage.file.PackWriterTest)')","[55005, 112214]"
"('URIish.java', 'org.eclipse.jgit.transport.URIish', '<init>', '^(file):([\\\\/](?![\\\\/])((?:[A-Za-z]:)?[\\\\/]?(?:(?:[^\\\\/]+[\\\\/]+)*[^\\\\/]+[\\\\/]*)))$', 'https://me:wtf@1.2.3.4:80/D:\\x')",[132412]
"('URIish.java', 'org.eclipse.jgit.transport.URIish', '<init>', '^(file):([\\\\/](?![\\\\/])((?:[A-Za-z]:)?[\\\\/]?(?:(?:[^\\\\/]+[\\\\/]+)*[^\\\\/]+[\\\\/]*)))$', 'http://lusr\\example:wtf@1.2.3.4:80//')",[131170]
"('URIish.java', 'org.eclipse.jgit.transport.URIish', '<init>', '^(file):([\\\\/](?![\\\\/])((?:[A-Za-z]:)?[\\\\/]?(?:(?:[^\\\\/]+[\\\\/]+)*[^\\\\/]+[\\\\/]*)))$', 'ssh+git://me@1.2.3.4:80//abc')",[138944]
"('URIish.java', 'org.eclipse.jgit.transport.URIish', '<init>', '^(file):([\\\\/](?![\\\\/])((?:[A-Za-z]:)?[\\\\/]?(?:(?:[^\\\\/]+[\\\\/]+)*[^\\\\/]+[\\\\/]*)))$', 'file:///tmp/jgit_test_8242042785434208547_tmp/tmp_8999287729574438780')","[199045, 199102]"
"('URIish.java', 'org.eclipse.jgit.transport.URIish', '<init>', '^(file):([\\\\/](?![\\\\/])((?:[A-Za-z]:)?[\\\\/]?(?:(?:[^\\\\/]+[\\\\/]+)*[^\\\\/]+[\\\\/]*)))$', '/a/b/c.git')",[121257]
"('Description.java', 'org.junit.runner.Description', 'methodAndClassNamePatternGroupOrDefault', '([\\s\\S]*)\\((.*)\\)', 'testInitNonEmptyRepository(org.eclipse.jgit.api.InitCommandTest)')","[48133, 105592]"
"('Description.java', 'org.junit.runner.Description', 'methodAndClassNamePatternGroupOrDefault', '([\\s\\S]*)\\((.*)\\)', 'testUsingHiddenCommonBlobFails(org.eclipse.jgit.transport.ReceivePackAdvertiseRefsHookTest)')","[408, 59436]"
"('Description.java', 'org.junit.runner.Description', 'methodAndClassNamePatternGroupOrDefault', '([\\s\\S]*)\\((.*)\\)', 'testInexactRename_LastByteDifferent(org.eclipse.jgit.diff.RenameDetectorTest)')","[12940, 71470]"
"('URIish.java', 'org.eclipse.jgit.transport.URIish', '<init>', '^([a-z][a-z0-9+-]+)://(?:(?:([^/:@]+)(?::([^\\\\/]+))?@)?((?:[^\\\\/:]+)|(?:\\[[0-9a-f:]+\\]))(?::(\\d+))?((?:/~(?:[^\\\\/]+))?[\\\\/]))?(.+)?$', 'ssh://me@1.2.3.4:1234/D:\\x')",[135563]
"('Description.java', 'org.junit.runner.Description', 'methodAndClassNamePatternGroupOrDefault', '([\\s\\S]*)\\((.*)\\)', 'testPackCommitsAndLooseOne(org.eclipse.jgit.internal.storage.file.GcBasicPackingTest)')","[53139, 110498]"
"('URIish.java', 'org.eclipse.jgit.transport.URIish', '<init>', '^(file):([\\\\/](?![\\\\/])((?:[A-Za-z]:)?[\\\\/]?(?:(?:[^\\\\/]+[\\\\/]+)*[^\\\\/]+[\\\\/]*)))$', 'http://me@[::1]/D:/x')","[155734, 155918]"
"('URIish.java', 'org.eclipse.jgit.transport.URIish', '<init>', '^([a-z][a-z0-9+-]+)://(?:(?:([^/:@]+)(?::([^\\\\/]+))?@)?((?:[^\\\\/:]+)|(?:\\[[0-9a-f:]+\\]))(?::(\\d+))?((?:/~(?:[^\\\\/]+))?[\\\\/]))?(.+)?$', 'http://l usr\\example.com:wtf@[::1]:1234//abc')",[130319]
"('Description.java', 'org.junit.runner.Description', 'methodAndClassNamePatternGroupOrDefault', '([\\s\\S]*)\\((.*)\\)', 'testDegenerate_InsertMiddle(org.eclipse.jgit.diff.MyersDiffTest)')","[14730, 73186]"
"('URIish.java', 'org.eclipse.jgit.transport.URIish', '<init>', '^([a-z][a-z0-9+-]+)://(?:(?:([^/:@]+)(?::([^\\\\/]+))?@)?((?:[^\\\\/:]+)|(?:\\[[0-9a-f:]+\\]))(?::(\\d+))?((?:/~(?:[^\\\\/]+))?[\\\\/]))?(.+)?$', 'ssh://l usr\\example.com@example.com:1234//abc')",[136207]
"('URIish.java', 'org.eclipse.jgit.transport.URIish', '<init>', '^(file):([\\\\/](?![\\\\/])((?:[A-Za-z]:)?[\\\\/]?(?:(?:[^\\\\/]+[\\\\/]+)*[^\\\\/]+[\\\\/]*)))$', 'file:///tmp/jgit_test_2872617124669872445_tmp/tmp_89294256309986088/.git/')",[183085]
"('URIish.java', 'org.eclipse.jgit.transport.URIish', '<init>', '^(file):([\\\\/](?![\\\\/])((?:[A-Za-z]:)?[\\\\/]?(?:(?:[^\\\\/]+[\\\\/]+)*[^\\\\/]+[\\\\/]*)))$', 'file:/tmp/jgitUnitTest5557005641752337767.tmp')",[121671]
"('Description.java', 'org.junit.runner.Description', 'methodAndClassNamePatternGroupOrDefault', '([\\s\\S]*)\\((.*)\\)', 'testForbiddenNamesOnWindowsEgLpr(org.eclipse.jgit.lib.DirCacheCheckoutMaliciousPathTest)')","[21034, 79412]"
"('Description.java', 'org.junit.runner.Description', 'methodAndClassNamePatternGroupOrDefault', '([\\s\\S]*)\\((.*)\\)', 'multipleBranches(org.eclipse.jgit.revwalk.RevWalkUtilsReachableTest)')","[6023, 64980]"
"('Description.java', 'org.junit.runner.Description', 'methodAndClassNamePatternGroupOrDefault', '([\\s\\S]*)\\((.*)\\)', 'testRemoveMiddle(org.eclipse.jgit.notes.LeafBucketTest)')","[40339, 98024]"
"('Description.java', 'org.junit.runner.Description', 'methodAndClassNamePatternGroupOrDefault', '([\\s\\S]*)\\((.*)\\)', 'org.eclipse.jgit.dircache.DirCacheBuilderIteratorTest')","[11591, 182262]"
"('URIish.java', 'org.eclipse.jgit.transport.URIish', '<init>', '^(file):([\\\\/](?![\\\\/])((?:[A-Za-z]:)?[\\\\/]?(?:(?:[^\\\\/]+[\\\\/]+)*[^\\\\/]+[\\\\/]*)))$', 'https://example.com/D:\\x')","[171604, 171788, 172708, 172892, 173812, 173996]"
"('Description.java', 'org.junit.runner.Description', 'methodAndClassNamePatternGroupOrDefault', '([\\s\\S]*)\\((.*)\\)', 'testUpdateUnexpectedRemoteVsForce(org.eclipse.jgit.transport.PushProcessTest)')","[4817, 63836]"
"('Description.java', 'org.junit.runner.Description', 'methodAndClassNamePatternGroupOrDefault', '([\\s\\S]*)\\((.*)\\)', 'org.eclipse.jgit.api.RevertCommandTest')","[47904, 207467]"
"('Description.java', 'org.junit.runner.Description', 'methodAndClassNamePatternGroupOrDefault', '([\\s\\S]*)\\((.*)\\)', 'testNotEquals2(org.eclipse.jgit.diff.EditTest)')","[15978, 74374]"
"('Description.java', 'org.junit.runner.Description', 'methodAndClassNamePatternGroupOrDefault', '([\\s\\S]*)\\((.*)\\)', 'shouldListModificationInDirWithoutModifiedTrees(org.eclipse.jgit.diff.DiffEntryTest)')","[13770, 72240]"
"('ChangeIdUtil.java', 'org.eclipse.jgit.util.ChangeIdUtil', 'indexOfChangeId', '(^Change-Id: *I[a-f0-9]{40}$)', 'Change-Id:')",[187695]
"('Description.java', 'org.junit.runner.Description', 'methodAndClassNamePatternGroupOrDefault', '([\\s\\S]*)\\((.*)\\)', 'org.eclipse.jgit.lib.ObjectIdRefTest')","[20267, 183816]"
"('Description.java', 'org.junit.runner.Description', 'methodAndClassNamePatternGroupOrDefault', '([\\s\\S]*)\\((.*)\\)', 'testTrailingSlash(org.eclipse.jgit.ignore.IgnoreMatcherTest)')","[31878, 90016]"
"('URIish.java', 'org.eclipse.jgit.transport.URIish', '<init>', '^([a-z][a-z0-9+-]+)://(?:(?:([^/:@]+)(?::([^\\\\/]+))?@)?((?:[^\\\\/:]+)|(?:\\[[0-9a-f:]+\\]))(?::(\\d+))?((?:/~(?:[^\\\\/]+))?[\\\\/]))?(.+)?$', 'ssh://lusr\\example@1.2.3.4:80/D:\\x')",[137955]
"('Description.java', 'org.junit.runner.Description', 'methodAndClassNamePatternGroupOrDefault', '([\\s\\S]*)\\((.*)\\)', 'testLimitObjectSize_Length12InsertFails(org.eclipse.jgit.internal.storage.pack.DeltaIndexTest)')","[52765, 110146]"
"('Description.java', 'org.junit.runner.Description', 'methodAndClassNamePatternGroupOrDefault', '([\\s\\S]*)\\((.*)\\)', 'testQuote_OctalAll(org.eclipse.jgit.util.QuotedStringGitPathStyleTest)')","[34202, 92172]"
"('Description.java', 'org.junit.runner.Description', 'methodAndClassNamePatternGroupOrDefault', '([\\s\\S]*)\\((.*)\\)', 'testComparatorReduceCommonStartEnd_EmptyLine(org.eclipse.jgit.diff.RawTextTest)')","[14291, 72746]"
"('Description.java', 'org.junit.runner.Description', 'methodAndClassNamePatternGroupOrDefault', '([\\s\\S]*)\\((.*)\\)', 'testNonRecursiveTreeWalk(org.eclipse.jgit.treewalk.filter.IndexDiffFilterTest)')","[30422, 88630]"
"('ChangeIdUtil.java', 'org.eclipse.jgit.util.ChangeIdUtil', 'indexOfChangeId', '(^Change-Id: *I[a-f0-9]{40}$)', 'Change-Id: Iaeac9b4149291060228ef0154db2985a31111335')","[189004, 190499]"
"('Description.java', 'org.junit.runner.Description', 'methodAndClassNamePatternGroupOrDefault', '([\\s\\S]*)\\((.*)\\)', 'getRemoteTrackingBranchShouldHandleNormalCase(org.eclipse.jgit.lib.BranchConfigTest)')","[25141, 83416]"
"('Description.java', 'org.junit.runner.Description', 'methodAndClassNamePatternGroupOrDefault', '([\\s\\S]*)\\((.*)\\)', 'testFindNextOffset(org.eclipse.jgit.internal.storage.file.PackReverseIndexTest)')","[57663, 114700]"
"('Description.java', 'org.junit.runner.Description', 'methodAndClassNamePatternGroupOrDefault', '([\\s\\S]*)\\((.*)\\)', 'org.eclipse.jgit.lib.IndexDiffTest')","[20513, 183897]"
"('Description.java', 'org.junit.runner.Description', 'methodAndClassNamePatternGroupOrDefault', '([\\s\\S]*)\\((.*)\\)', 'org.eclipse.jgit.api.LogCommandTest')","[47530, 207305]"
"('URIish.java', 'org.eclipse.jgit.transport.URIish', '<init>', '^(file):([\\\\/](?![\\\\/])((?:[A-Za-z]:)?[\\\\/]?(?:(?:[^\\\\/]+[\\\\/]+)*[^\\\\/]+[\\\\/]*)))$', 'file:///home/m y')","[176526, 176572]"
"('Description.java', 'org.junit.runner.Description', 'methodAndClassNamePatternGroupOrDefault', '([\\s\\S]*)\\((.*)\\)', 'repositoryWithRootLevelSubmoduleAbsoluteRef(org.eclipse.jgit.submodule.SubmoduleWalkTest)')","[19832, 78312]"
"('URIish.java', 'org.eclipse.jgit.transport.URIish', '<init>', '^(file):([\\\\/](?![\\\\/])((?:[A-Za-z]:)?[\\\\/]?(?:(?:[^\\\\/]+[\\\\/]+)*[^\\\\/]+[\\\\/]*)))$', 'https://l usr\\example.com@example.com:80//')",[146258]
"('Description.java', 'org.junit.runner.Description', 'methodAndClassNamePatternGroupOrDefault', '([\\s\\S]*)\\((.*)\\)', 'testOnlyOption_f1_7_b(org.eclipse.jgit.api.CommitOnlyTest)')","[49095, 106560]"
"('Description.java', 'org.junit.runner.Description', 'methodAndClassNamePatternGroupOrDefault', '([\\s\\S]*)\\((.*)\\)', 'testSimpleCheckout(org.eclipse.jgit.api.CheckoutCommandTest)')","[43316, 100884]"
"('URIish.java', 'org.eclipse.jgit.transport.URIish', '<init>', '^(file):([\\\\/](?![\\\\/])((?:[A-Za-z]:)?[\\\\/]?(?:(?:[^\\\\/]+[\\\\/]+)*[^\\\\/]+[\\\\/]*)))$', '/tmp/jgit_test_2564324336982684232_tmp/tmp_7539504802091562184')","[199377, 199502, 199648, 199798, 199948]"
"('Description.java', 'org.junit.runner.Description', 'methodAndClassNamePatternGroupOrDefault', '([\\s\\S]*)\\((.*)\\)', 'testValidTreeSorting5(org.eclipse.jgit.lib.ObjectCheckerTest)')","[25811, 84098]"
"('URIish.java', 'org.eclipse.jgit.transport.URIish', '<init>', '^([a-z][a-z0-9+-]+)://(?:(?:([^/:@]+)(?::([^\\\\/]+))?@)?((?:[^\\\\/:]+)|(?:\\[[0-9a-f:]+\\]))(?::(\\d+))?((?:/~(?:[^\\\\/]+))?[\\\\/]))?(.+)?$', 'git:///.git')",[121211]
"('Description.java', 'org.junit.runner.Description', 'methodAndClassNamePatternGroupOrDefault', '([\\s\\S]*)\\((.*)\\)', 'testAutoCloseDuringRead(org.eclipse.jgit.util.io.UnionInputStreamTest)')","[33038, 91072]"
"('Description.java', 'org.junit.runner.Description', 'methodAndClassNamePatternGroupOrDefault', '([\\s\\S]*)\\((.*)\\)', 'testKeepFiles(org.eclipse.jgit.internal.storage.file.GcKeepFilesTest)')","[55297, 112500]"
"('Description.java', 'org.junit.runner.Description', 'methodAndClassNamePatternGroupOrDefault', '([\\s\\S]*)\\((.*)\\)', 'testInvalidTreeNameIsDot(org.eclipse.jgit.lib.ObjectCheckerTest)')","[26168, 84472]"
"('URIish.java', 'org.eclipse.jgit.transport.URIish', '<init>', '^(file):([\\\\/](?![\\\\/])((?:[A-Za-z]:)?[\\\\/]?(?:(?:[^\\\\/]+[\\\\/]+)*[^\\\\/]+[\\\\/]*)))$', 'https://me:wtf@[::1]:80/D:/x')",[132734]
"('URIish.java', 'org.eclipse.jgit.transport.URIish', '<init>', '^(file):([\\\\/](?![\\\\/])((?:[A-Za-z]:)?[\\\\/]?(?:(?:[^\\\\/]+[\\\\/]+)*[^\\\\/]+[\\\\/]*)))$', 'ssh://lusr\\example:wtf@[::1]:80//abc')",[124960]
"('URIish.java', 'org.eclipse.jgit.transport.URIish', '<init>', '^([\\\\/]?((?:[A-Za-z]:)?[\\\\/]?(?:(?:[^\\\\/]+[\\\\/]+)*[^\\\\/]+[\\\\/]*)))$', '/tmp/jgit_test_2434055886334526133_tmp/tmp_1405098318662614791.git')",[116608]
"('Description.java', 'org.junit.runner.Description', 'methodAndClassNamePatternGroupOrDefault', '([\\s\\S]*)\\((.*)\\)', 'testId(org.eclipse.jgit.util.ChangeIdUtilTest)')","[37826, 95670]"
"('URIish.java', 'org.eclipse.jgit.transport.URIish', '<init>', '^(file):([\\\\/](?![\\\\/])((?:[A-Za-z]:)?[\\\\/]?(?:(?:[^\\\\/]+[\\\\/]+)*[^\\\\/]+[\\\\/]*)))$', 'https://[::1]//abc')","[172248, 172432, 173352, 173536, 174456, 174640]"
"('URIish.java', 'org.eclipse.jgit.transport.URIish', '<init>', '^(file):([\\\\/](?![\\\\/])((?:[A-Za-z]:)?[\\\\/]?(?:(?:[^\\\\/]+[\\\\/]+)*[^\\\\/]+[\\\\/]*)))$', 'ssh://l usr\\example.com:wtf@example.com:80//abc')",[123120]
"('URIish.java', 'org.eclipse.jgit.transport.URIish', '<init>', '^(file):([\\\\/](?![\\\\/])((?:[A-Za-z]:)?[\\\\/]?(?:(?:[^\\\\/]+[\\\\/]+)*[^\\\\/]+[\\\\/]*)))$', 'http://lusr\\example@example.com//abc')","[157160, 157344]"
"('URIish.java', 'org.eclipse.jgit.transport.URIish', '<init>', '^(file):([\\\\/](?![\\\\/])((?:[A-Za-z]:)?[\\\\/]?(?:(?:[^\\\\/]+[\\\\/]+)*[^\\\\/]+[\\\\/]*)))$', 'ssh://lusr\\example:wtf@1.2.3.4:1234/D:\\x')",[124500]
"('Description.java', 'org.junit.runner.Description', 'methodAndClassNamePatternGroupOrDefault', '([\\s\\S]*)\\((.*)\\)', 'invalidSourceDoubleSlashes(org.eclipse.jgit.transport.RefSpecTest)')","[2920, 61988]"
"('Description.java', 'org.junit.runner.Description', 'methodAndClassNamePatternGroupOrDefault', '([\\s\\S]*)\\((.*)\\)', 'testSuccessfulContentMergeAndDirtyworkingTree(org.eclipse.jgit.api.MergeCommandTest)')","[44236, 101808]"
"('Description.java', 'org.junit.runner.Description', 'methodAndClassNamePatternGroupOrDefault', '([\\s\\S]*)\\((.*)\\)', 'testDeleteLoosePacked(org.eclipse.jgit.internal.storage.file.RefUpdateTest)')","[55646, 112786]"
"('Description.java', 'org.junit.runner.Description', 'methodAndClassNamePatternGroupOrDefault', '([\\s\\S]*)\\((.*)\\)', 'testCreateFileHeader_Binary(org.eclipse.jgit.diff.DiffFormatterTest)')","[14104, 72570]"
"('Description.java', 'org.junit.runner.Description', 'methodAndClassNamePatternGroupOrDefault', '([\\s\\S]*)\\((.*)\\)', 'testGetWithSlashDotGitHumanishName(org.eclipse.jgit.transport.URIishTest)')","[1349, 60382]"
"('URIish.java', 'org.eclipse.jgit.transport.URIish', '<init>', '^(file):([\\\\/](?![\\\\/])((?:[A-Za-z]:)?[\\\\/]?(?:(?:[^\\\\/]+[\\\\/]+)*[^\\\\/]+[\\\\/]*)))$', 'ssh://l usr\\example.com@[::1]:80//')",[137058]
"('URIish.java', 'org.eclipse.jgit.transport.URIish', '<init>', '^(file):([\\\\/](?![\\\\/])((?:[A-Za-z]:)?[\\\\/]?(?:(?:[^\\\\/]+[\\\\/]+)*[^\\\\/]+[\\\\/]*)))$', 'ssh+git://l usr\\example.com@[::1]:1234//abc')",[140232]
"('URIish.java', 'org.eclipse.jgit.transport.URIish', '<init>', '^([a-z][a-z0-9+-]+)://(?:(?:([^/:@]+)(?::([^\\\\/]+))?@)?((?:[^\\\\/:]+)|(?:\\[[0-9a-f:]+\\]))(?::(\\d+))?((?:/~(?:[^\\\\/]+))?[\\\\/]))?(.+)?$', 'http://me@example.com:80//')",[141865]
"('Description.java', 'org.junit.runner.Description', 'methodAndClassNamePatternGroupOrDefault', '([\\s\\S]*)\\((.*)\\)', 'testStopOnConflictCommitAndContinue(org.eclipse.jgit.api.RebaseCommandTest)')","[45906, 103458]"
"('URIish.java', 'org.eclipse.jgit.transport.URIish', '<init>', '^([a-z][a-z0-9+-]+)://(?:(?:([^/:@]+)(?::([^\\\\/]+))?@)?((?:[^\\\\/:]+)|(?:\\[[0-9a-f:]+\\]))(?::(\\d+))?((?:/~(?:[^\\\\/]+))?[\\\\/]))?(.+)?$', 'git+ssh://example.com/some/p ath')","[178067, 178113]"
"('URIish.java', 'org.eclipse.jgit.transport.URIish', '<init>', '^(file):([\\\\/](?![\\\\/])((?:[A-Za-z]:)?[\\\\/]?(?:(?:[^\\\\/]+[\\\\/]+)*[^\\\\/]+[\\\\/]*)))$', 'ssh://me@[::1]/D:/x')","[149110, 149294]"
"('Description.java', 'org.junit.runner.Description', 'methodAndClassNamePatternGroupOrDefault', '([\\s\\S]*)\\((.*)\\)', 'testRegularCommitWithSob_ButNoBody(org.eclipse.jgit.util.ChangeIdUtilTest)')","[37784, 95626]"
"('Description.java', 'org.junit.runner.Description', 'methodAndClassNamePatternGroupOrDefault', '([\\s\\S]*)\\((.*)\\)', 'testWritePack3(org.eclipse.jgit.internal.storage.file.PackWriterTest)')","[55026, 112236]"
"('URIish.java', 'org.eclipse.jgit.transport.URIish', '<init>', '^(?:([^/:@]+)(?::([^\\\\/]+))?@)?((?:[^\\\\/:]+)|(?:\\[[0-9a-f:]+\\])):((?:(?:/~(?:[^\\\\/]+))[\\\\/])?(?:(?:[^\\\\/]+[\\\\/]+)*[^\\\\/]+[\\\\/]*))$', '/tmp/jgit_test_5272834838855978774_tmp/tmp_5245828813622345398')","[200140, 200275]"
"('Description.java', 'org.junit.runner.Description', 'methodAndClassNamePatternGroupOrDefault', '([\\s\\S]*)\\((.*)\\)', 'testUpperGroupCase2(org.eclipse.jgit.fnmatch.FileNameMatcherTest)')","[18433, 76926]"
"('URIish.java', 'org.eclipse.jgit.transport.URIish', '<init>', '^(file):([\\\\/](?![\\\\/])((?:[A-Za-z]:)?[\\\\/]?(?:(?:[^\\\\/]+[\\\\/]+)*[^\\\\/]+[\\\\/]*)))$', 'http://me@example.com:1234/D:/x')",[141750]
"('URIish.java', 'org.eclipse.jgit.transport.URIish', '<init>', '^(file):([\\\\/](?![\\\\/])((?:[A-Za-z]:)?[\\\\/]?(?:(?:[^\\\\/]+[\\\\/]+)*[^\\\\/]+[\\\\/]*)))$', 'http://l usr\\example.com@[::1]//abc')","[156792, 156976]"
"('ChangeIdUtil.java', 'org.eclipse.jgit.util.ChangeIdUtil', 'indexOfChangeId', '(^Change-Id: *I[a-f0-9]{40}$)', 'git://example.com/ fixes this')",[190420]
"('URIish.java', 'org.eclipse.jgit.transport.URIish', '<init>', '^([a-z][a-z0-9+-]+)://(?:(?:([^/:@]+)(?::([^\\\\/]+))?@)?((?:[^\\\\/:]+)|(?:\\[[0-9a-f:]+\\]))(?::(\\d+))?((?:/~(?:[^\\\\/]+))?[\\\\/]))?(.+)?$', 'ssh+git://lusr\\example:wtf@example.com:1234/D:/x')",[127421]
"('Description.java', 'org.junit.runner.Description', 'methodAndClassNamePatternGroupOrDefault', '([\\s\\S]*)\\((.*)\\)', 'testSimpleNoTags(org.eclipse.jgit.transport.RemoteConfigTest)')","[742, 59766]"
"('Description.java', 'org.junit.runner.Description', 'methodAndClassNamePatternGroupOrDefault', '([\\s\\S]*)\\((.*)\\)', 'test000_sort_01(org.eclipse.jgit.lib.T0002_TreeTest)')","[24891, 83174]"
"('URIish.java', 'org.eclipse.jgit.transport.URIish', '<init>', '^(?:([^/:@]+)(?::([^\\\\/]+))?@)?((?:[^\\\\/:]+)|(?:\\[[0-9a-f:]+\\])):((?:(?:/~(?:[^\\\\/]+))[\\\\/])?(?:(?:[^\\\\/]+[\\\\/]+)*[^\\\\/]+[\\\\/]*))$', '\\\\some\\place')","[121441, 121556]"
"('Description.java', 'org.junit.runner.Description', 'methodAndClassNamePatternGroupOrDefault', '([\\s\\S]*)\\((.*)\\)', 'singleStashedCommit(org.eclipse.jgit.api.StashListCommandTest)')","[47198, 104712]"
"('URIish.java', 'org.eclipse.jgit.transport.URIish', '<init>', '^(file):([\\\\/](?![\\\\/])((?:[A-Za-z]:)?[\\\\/]?(?:(?:[^\\\\/]+[\\\\/]+)*[^\\\\/]+[\\\\/]*)))$', 'http://lusr\\example@example.com:1234/D:/x')",[143958]
"('URIish.java', 'org.eclipse.jgit.transport.URIish', '<init>', '^([a-z][a-z0-9+-]+)://(?:(?:([^/:@]+)(?::([^\\\\/]+))?@)?((?:[^\\\\/:]+)|(?:\\[[0-9a-f:]+\\]))(?::(\\d+))?((?:/~(?:[^\\\\/]+))?[\\\\/]))?(.+)?$', 'ssh+git://me:wtf@1.2.3.4:80//')",[125673]
"('Description.java', 'org.junit.runner.Description', 'methodAndClassNamePatternGroupOrDefault', '([\\s\\S]*)\\((.*)\\)', 'testOnlyOption_f1_10_e(org.eclipse.jgit.api.CommitOnlyTest)')","[49788, 107286]"
"('URIish.java', 'org.eclipse.jgit.transport.URIish', '<init>', '^(?:([^/:@]+)(?::([^\\\\/]+))?@)?((?:[^\\\\/:]+)|(?:\\[[0-9a-f:]+\\])):((?:(?:/~(?:[^\\\\/]+))[\\\\/])?(?:(?:[^\\\\/]+[\\\\/]+)*[^\\\\/]+[\\\\/]*))$', '/another/dir')","[117717, 118417, 120005]"
"('Description.java', 'org.junit.runner.Description', 'methodAndClassNamePatternGroupOrDefault', '([\\s\\S]*)\\((.*)\\)', 'testAddToEndOfList(org.eclipse.jgit.util.RefListTest)')","[35078, 93030]"
"('Description.java', 'org.junit.runner.Description', 'methodAndClassNamePatternGroupOrDefault', '([\\s\\S]*)\\((.*)\\)', 'testCheckoutAllPaths(org.eclipse.jgit.api.CheckoutCommandTest)')","[43106, 100664]"
"('Description.java', 'org.junit.runner.Description', 'methodAndClassNamePatternGroupOrDefault', '([\\s\\S]*)\\((.*)\\)', 'testOnlyOption_f1_13_b(org.eclipse.jgit.api.CommitOnlyTest)')","[50040, 107550]"
"('Description.java', 'org.junit.runner.Description', 'methodAndClassNamePatternGroupOrDefault', '([\\s\\S]*)\\((.*)\\)', 'testDecodeUInt16(org.eclipse.jgit.util.NBTest)')","[37368, 95230]"
"('Description.java', 'org.junit.runner.Description', 'methodAndClassNamePatternGroupOrDefault', '([\\s\\S]*)\\((.*)\\)', 'testEditFlat(org.eclipse.jgit.notes.NoteMapTest)')","[40650, 98310]"
"('URIish.java', 'org.eclipse.jgit.transport.URIish', '<init>', '^(file):([\\\\/](?![\\\\/])((?:[A-Za-z]:)?[\\\\/]?(?:(?:[^\\\\/]+[\\\\/]+)*[^\\\\/]+[\\\\/]*)))$', 'http://lusr\\example:wtf@1.2.3.4:1234/D:/x')",[131078]
"('Description.java', 'org.junit.runner.Description', 'methodAndClassNamePatternGroupOrDefault', '([\\s\\S]*)\\((.*)\\)', 'testAlias_OptionsInherit(org.eclipse.jgit.transport.OpenSshConfigTest)')","[2439, 61504]"
"('Description.java', 'org.junit.runner.Description', 'methodAndClassNamePatternGroupOrDefault', '([\\s\\S]*)\\((.*)\\)', 'testDifferentStates(org.eclipse.jgit.api.StatusCommandTest)')","[44795, 102314]"
"('Description.java', 'org.junit.runner.Description', 'methodAndClassNamePatternGroupOrDefault', '([\\s\\S]*)\\((.*)\\)', 'testOnlyOption_f1_6_d(org.eclipse.jgit.api.CommitOnlyTest)')","[49032, 106494]"
"('Description.java', 'org.junit.runner.Description', 'methodAndClassNamePatternGroupOrDefault', '([\\s\\S]*)\\((.*)\\)', 'testBackwards_ConfusingPathName(org.eclipse.jgit.treewalk.CanonicalTreeParserTest)')","[30067, 88278]"
"('Description.java', 'org.junit.runner.Description', 'methodAndClassNamePatternGroupOrDefault', '([\\s\\S]*)\\((.*)\\)', 'shouldReturnZeroOnSameCommit(org.eclipse.jgit.revwalk.RevWalkUtilsCountTest)')","[6710, 65640]"
"('Description.java', 'org.junit.runner.Description', 'methodAndClassNamePatternGroupOrDefault', '([\\s\\S]*)\\((.*)\\)', 'testMergeSuccessAllStrategiesNoCommit(org.eclipse.jgit.api.MergeCommandTest)')","[44488, 102072]"
"('Description.java', 'org.junit.runner.Description', 'methodAndClassNamePatternGroupOrDefault', '([\\s\\S]*)\\((.*)\\)', 'testTreeWalk_LsFiles(org.eclipse.jgit.dircache.DirCacheCGitCompatabilityTest)')","[11572, 70216]"
"('Description.java', 'org.junit.runner.Description', 'methodAndClassNamePatternGroupOrDefault', '([\\s\\S]*)\\((.*)\\)', 'testInt16(org.eclipse.jgit.util.RawParseUtils_HexParseTest)')","[35641, 93580]"
"('Description.java', 'org.junit.runner.Description', 'methodAndClassNamePatternGroupOrDefault', '([\\s\\S]*)\\((.*)\\)', 'testParseAbbrIndexLine_NoMode(org.eclipse.jgit.patch.FileHeaderTest)')","[39614, 97364]"
"('URIish.java', 'org.eclipse.jgit.transport.URIish', '<init>', '^(file):([\\\\/](?![\\\\/])((?:[A-Za-z]:)?[\\\\/]?(?:(?:[^\\\\/]+[\\\\/]+)*[^\\\\/]+[\\\\/]*)))$', 'https://me@[::1]:80//abc')",[145936]
"('Description.java', 'org.junit.runner.Description', 'methodAndClassNamePatternGroupOrDefault', '([\\s\\S]*)\\((.*)\\)', 'testEqualsWithoutWhitespace(org.eclipse.jgit.diff.RawTextIgnoreTrailingWhitespaceTest)')","[13564, 72064]"
"('Description.java', 'org.junit.runner.Description', 'methodAndClassNamePatternGroupOrDefault', '([\\s\\S]*)\\((.*)\\)', 'testAddExistingSingleFileTwiceWithCommit(org.eclipse.jgit.api.AddCommandTest)')","[50668, 108188]"
"('Description.java', 'org.junit.runner.Description', 'methodAndClassNamePatternGroupOrDefault', '([\\s\\S]*)\\((.*)\\)', 'testEmpty(org.eclipse.jgit.util.TemporaryBufferTest)')","[34473, 92436]"
"('Description.java', 'org.junit.runner.Description', 'methodAndClassNamePatternGroupOrDefault', '([\\s\\S]*)\\((.*)\\)', 'org.eclipse.jgit.util.io.EolCanonicalizingInputStreamTest')","[32851, 186586]"
"('Description.java', 'org.junit.runner.Description', 'methodAndClassNamePatternGroupOrDefault', '([\\s\\S]*)\\((.*)\\)', 'org.eclipse.jgit.diff.RawTextIgnoreAllWhitespaceTest')","[15665, 182829]"
"('Description.java', 'org.junit.runner.Description', 'methodAndClassNamePatternGroupOrDefault', '([\\s\\S]*)\\((.*)\\)', 'testTimeout_readByte_Success1(org.eclipse.jgit.util.io.TimeoutInputStreamTest)')","[32706, 90764]"
"('URIish.java', 'org.eclipse.jgit.transport.URIish', '<init>', '^(?:([^/:@]+)(?::([^\\\\/]+))?@)?([^\\\\/:]{2,}):([\\\\/](?:(?:[^\\\\/]+[\\\\/]+)*[^\\\\/]+[\\\\/]*))$', '/tmp/jgit_test_1616732006832071039_tmp/tmp_6256113901600089866/.git')","[206235, 206381]"
"('URIish.java', 'org.eclipse.jgit.transport.URIish', '<init>', '^(file):([\\\\/](?![\\\\/])((?:[A-Za-z]:)?[\\\\/]?(?:(?:[^\\\\/]+[\\\\/]+)*[^\\\\/]+[\\\\/]*)))$', 'http://lusr\\example@example.com//')","[157114, 157298]"
"('URIish.java', 'org.eclipse.jgit.transport.URIish', '<init>', '^(file):([\\\\/](?![\\\\/])((?:[A-Za-z]:)?[\\\\/]?(?:(?:[^\\\\/]+[\\\\/]+)*[^\\\\/]+[\\\\/]*)))$', 'https://lusr\\example@[::1]:1234/D:/x')",[148006]
"('Description.java', 'org.junit.runner.Description', 'methodAndClassNamePatternGroupOrDefault', '([\\s\\S]*)\\((.*)\\)', 'testFileInFolderCommittedAllDeletedCommittedAllIgnoredComparedWithInitialCommit(org.eclipse.jgit.treewalk.filter.IndexDiffFilterTest)')","[30296, 88498]"
"('Description.java', 'org.junit.runner.Description', 'methodAndClassNamePatternGroupOrDefault', '([\\s\\S]*)\\((.*)\\)', 'testCreateFile(org.eclipse.jgit.diff.HistogramDiffTest)')","[15520, 73934]"
"('Description.java', 'org.junit.runner.Description', 'methodAndClassNamePatternGroupOrDefault', '([\\s\\S]*)\\((.*)\\)', 'testDecodeUInt32(org.eclipse.jgit.util.NBTest)')","[37389, 95252]"
"('Description.java', 'org.junit.runner.Description', 'methodAndClassNamePatternGroupOrDefault', '([\\s\\S]*)\\((.*)\\)', 'testLFCR(org.eclipse.jgit.util.io.EolCanonicalizingInputStreamTest)')","[32914, 90962]"
"('Description.java', 'org.junit.runner.Description', 'methodAndClassNamePatternGroupOrDefault', '([\\s\\S]*)\\((.*)\\)', 'org.eclipse.jgit.revwalk.FooterLineTest')","[6042, 181271]"
"('URIish.java', 'org.eclipse.jgit.transport.URIish', '<init>', '^(file):([\\\\/](?![\\\\/])((?:[A-Za-z]:)?[\\\\/]?(?:(?:[^\\\\/]+[\\\\/]+)*[^\\\\/]+[\\\\/]*)))$', '../../foo/bar')","[177584, 177699]"
"('Description.java', 'org.junit.runner.Description', 'methodAndClassNamePatternGroupOrDefault', '([\\s\\S]*)\\((.*)\\)', 'org.eclipse.jgit.util.RawParseUtils_LineMapTest')","[34723, 186829]"
"('Description.java', 'org.junit.runner.Description', 'methodAndClassNamePatternGroupOrDefault', '([\\s\\S]*)\\((.*)\\)', 'testJGitText(org.eclipse.jgit.nls.RootLocaleTest)')","[160, 59216]"
"('URIish.java', 'org.eclipse.jgit.transport.URIish', '<init>', '^(file):([\\\\/](?![\\\\/])((?:[A-Za-z]:)?[\\\\/]?(?:(?:[^\\\\/]+[\\\\/]+)*[^\\\\/]+[\\\\/]*)))$', 'ssh://lusr\\example:wtf@1.2.3.4:80//')",[124546]
"('URIish.java', 'org.eclipse.jgit.transport.URIish', '<init>', '^([a-z][a-z0-9+-]+)://(?:(?:([^/:@]+)(?::([^\\\\/]+))?@)?((?:[^\\\\/:]+)|(?:\\[[0-9a-f:]+\\]))(?::(\\d+))?((?:/~(?:[^\\\\/]+))?[\\\\/]))?(.+)?$', 'http://l usr\\example.com@1.2.3.4:1234/D:\\x')",[143291]
"('URIish.java', 'org.eclipse.jgit.transport.URIish', '<init>', '^([a-z][a-z0-9+-]+)://(?:(?:([^/:@]+)(?::([^\\\\/]+))?@)?((?:[^\\\\/:]+)|(?:\\[[0-9a-f:]+\\]))(?::(\\d+))?((?:/~(?:[^\\\\/]+))?[\\\\/]))?(.+)?$', 'http://lusr\\example@example.com:80//')",[144073]
"('URIish.java', 'org.eclipse.jgit.transport.URIish', '<init>', '^(file):([\\\\/](?![\\\\/])((?:[A-Za-z]:)?[\\\\/]?(?:(?:[^\\\\/]+[\\\\/]+)*[^\\\\/]+[\\\\/]*)))$', 'ssh+git://l usr\\example.com@example.com:80//abc')",[139680]
"('URIish.java', 'org.eclipse.jgit.transport.URIish', '<init>', '^(file):([\\\\/](?![\\\\/])((?:[A-Za-z]:)?[\\\\/]?(?:(?:[^\\\\/]+[\\\\/]+)*[^\\\\/]+[\\\\/]*)))$', 'ssh+git://l usr\\example.com@[::1]:1234/D:/x')",[140278]
"('Description.java', 'org.junit.runner.Description', 'methodAndClassNamePatternGroupOrDefault', '([\\s\\S]*)\\((.*)\\)', 'testDeletionOnSideConflict(org.eclipse.jgit.api.MergeCommandTest)')","[43669, 101214]"
"('Description.java', 'org.junit.runner.Description', 'methodAndClassNamePatternGroupOrDefault', '([\\s\\S]*)\\((.*)\\)', 'org.eclipse.jgit.lib.ConstantsEncodingTest')","[23979, 184167]"
"('Description.java', 'org.junit.runner.Description', 'methodAndClassNamePatternGroupOrDefault', '([\\s\\S]*)\\((.*)\\)', 'testOnlyOption_f1_2_a(org.eclipse.jgit.api.CommitOnlyTest)')","[48549, 105988]"
"('URIish.java', 'org.eclipse.jgit.transport.URIish', '<init>', '^(file):([\\\\/](?![\\\\/])((?:[A-Za-z]:)?[\\\\/]?(?:(?:[^\\\\/]+[\\\\/]+)*[^\\\\/]+[\\\\/]*)))$', 'ssh+git://lusr\\example@1.2.3.4:1234/D:\\x')",[141060]
"('Description.java', 'org.junit.runner.Description', 'methodAndClassNamePatternGroupOrDefault', '([\\s\\S]*)\\((.*)\\)', 'testMatch_Prefix(org.eclipse.jgit.util.RawParseUtils_MatchTest)')","[38412, 96264]"
"('Description.java', 'org.junit.runner.Description', 'methodAndClassNamePatternGroupOrDefault', '([\\s\\S]*)\\((.*)\\)', 'testCheckoutOutChangesAutoCRLFtrue(org.eclipse.jgit.lib.DirCacheCheckoutTest)')","[23857, 82250]"
"('Description.java', 'org.junit.runner.Description', 'methodAndClassNamePatternGroupOrDefault', '([\\s\\S]*)\\((.*)\\)', 'testBareFileKey(org.eclipse.jgit.lib.RepositoryCacheTest)')","[20847, 79236]"
"('URIish.java', 'org.eclipse.jgit.transport.URIish', '<init>', '^([a-z][a-z0-9+-]+)://(?:(?:([^/:@]+)(?::([^\\\\/]+))?@)?((?:[^\\\\/:]+)|(?:\\[[0-9a-f:]+\\]))(?::(\\d+))?((?:/~(?:[^\\\\/]+))?[\\\\/]))?(.+)?$', 'https://l usr\\example.com@example.com:1234/D:\\x')",[146235]
"('Description.java', 'org.junit.runner.Description', 'methodAndClassNamePatternGroupOrDefault', '([\\s\\S]*)\\((.*)\\)', 'testCommonScore_SimiliarBy75(org.eclipse.jgit.diff.SimilarityIndexTest)')","[14854, 73296]"
"('URIish.java', 'org.eclipse.jgit.transport.URIish', '<init>', '^([a-z][a-z0-9+-]+)://(?:(?:([^/:@]+)(?::([^\\\\/]+))?@)?((?:[^\\\\/:]+)|(?:\\[[0-9a-f:]+\\]))(?::(\\d+))?((?:/~(?:[^\\\\/]+))?[\\\\/]))?(.+)?$', 'ssh://lusr\\example:wtf@1.2.3.4:1234//abc')",[124431]
"('ChangeIdUtil.java', 'org.eclipse.jgit.util.ChangeIdUtil', 'indexOfChangeId', '(^Change-Id: *I[a-f0-9]{40}$)', 'Change-Id: I4f4e2e1e8568ddc1509baecb8c1270a1fb4b6da7')","[189104, 190607]"
"('Description.java', 'org.junit.runner.Description', 'methodAndClassNamePatternGroupOrDefault', '([\\s\\S]*)\\((.*)\\)', 'testCombinedRangesInOneGroupCase1(org.eclipse.jgit.fnmatch.FileNameMatcherTest)')","[16417, 74814]"
"('Description.java', 'org.junit.runner.Description', 'methodAndClassNamePatternGroupOrDefault', '([\\s\\S]*)\\((.*)\\)', 'testSshProtoWithEscapedADUserPassAndPort(org.eclipse.jgit.transport.URIishTest)')","[2042, 61108]"
"('Description.java', 'org.junit.runner.Description', 'methodAndClassNamePatternGroupOrDefault', '([\\s\\S]*)\\((.*)\\)', 'testBreakModify_BreakAll(org.eclipse.jgit.diff.RenameDetectorTest)')","[13129, 71668]"
"('Description.java', 'org.junit.runner.Description', 'methodAndClassNamePatternGroupOrDefault', '([\\s\\S]*)\\((.*)\\)', 'testTimeout_skip_Success(org.eclipse.jgit.util.io.TimeoutInputStreamTest)')","[32832, 90896]"
"('URIish.java', 'org.eclipse.jgit.transport.URIish', '<init>', '^(file):([\\\\/](?![\\\\/])((?:[A-Za-z]:)?[\\\\/]?(?:(?:[^\\\\/]+[\\\\/]+)*[^\\\\/]+[\\\\/]*)))$', 'http://me:wtf@example.com:80//abc')",[128640]
"('URIish.java', 'org.eclipse.jgit.transport.URIish', '<init>', '^([a-z][a-z0-9+-]+)://(?:(?:([^/:@]+)(?::([^\\\\/]+))?@)?((?:[^\\\\/:]+)|(?:\\[[0-9a-f:]+\\]))(?::(\\d+))?((?:/~(?:[^\\\\/]+))?[\\\\/]))?(.+)?$', 'http://l usr\\example.com:wtf@1.2.3.4:80//abc')",[130135]
"('Description.java', 'org.junit.runner.Description', 'methodAndClassNamePatternGroupOrDefault', '([\\s\\S]*)\\((.*)\\)', 'testMixedGroupCase8(org.eclipse.jgit.fnmatch.FileNameMatcherTest)')","[16627, 75034]"
"('Description.java', 'org.junit.runner.Description', 'methodAndClassNamePatternGroupOrDefault', '([\\s\\S]*)\\((.*)\\)', 'testUIText(org.eclipse.jgit.nls.RootLocaleTest)')","[223, 59282]"
"('Description.java', 'org.junit.runner.Description', 'methodAndClassNamePatternGroupOrDefault', '([\\s\\S]*)\\((.*)\\)', 'testMatch_NotEqual(org.eclipse.jgit.util.RawParseUtils_MatchTest)')","[38370, 96220]"
"('Description.java', 'org.junit.runner.Description', 'methodAndClassNamePatternGroupOrDefault', '([\\s\\S]*)\\((.*)\\)', 'org.eclipse.jgit.submodule.SubmoduleInitTest')","[19355, 182910]"
"('Description.java', 'org.junit.runner.Description', 'methodAndClassNamePatternGroupOrDefault', '([\\s\\S]*)\\((.*)\\)', 'test001_createEmpty(org.eclipse.jgit.lib.T0002_TreeTest)')","[24807, 83086]"
"('Description.java', 'org.junit.runner.Description', 'methodAndClassNamePatternGroupOrDefault', '([\\s\\S]*)\\((.*)\\)', 'testGermanTranslation(org.eclipse.jgit.nls.TranslationBundleTest)')","[57, 59128]"
"('Description.java', 'org.junit.runner.Description', 'methodAndClassNamePatternGroupOrDefault', '([\\s\\S]*)\\((.*)\\)', 'testCollapseFanoutAfterMerge(org.eclipse.jgit.notes.NoteMapMergerTest)')","[40921, 98574]"
"('Description.java', 'org.junit.runner.Description', 'methodAndClassNamePatternGroupOrDefault', '([\\s\\S]*)\\((.*)\\)', 'resolveInvalidParentUrl(org.eclipse.jgit.submodule.SubmoduleInitTest)')","[19376, 77894]"
"('URIish.java', 'org.eclipse.jgit.transport.URIish', '<init>', '^([a-z][a-z0-9+-]+)://(?:(?:([^/:@]+)(?::([^\\\\/]+))?@)?((?:[^\\\\/:]+)|(?:\\[[0-9a-f:]+\\]))(?::(\\d+))?((?:/~(?:[^\\\\/]+))?[\\\\/]))?(.+)?$', 'ssh+git://l usr\\example.com@[::1]:1234//abc')",[140255]
"('URIish.java', 'org.eclipse.jgit.transport.URIish', '<init>', '^([a-z][a-z0-9+-]+)://(?:(?:([^/:@]+)(?::([^\\\\/]+))?@)?((?:[^\\\\/:]+)|(?:\\[[0-9a-f:]+\\]))(?::(\\d+))?((?:/~(?:[^\\\\/]+))?[\\\\/]))?(.+)?$', 'http://me:wtf@1.2.3.4:80/D:\\x')",[129123]
"('Description.java', 'org.junit.runner.Description', 'methodAndClassNamePatternGroupOrDefault', '([\\s\\S]*)\\((.*)\\)', 'testEmptyInputs(org.eclipse.jgit.diff.HistogramDiffTest)')","[15436, 73846]"
"('Description.java', 'org.junit.runner.Description', 'methodAndClassNamePatternGroupOrDefault', '([\\s\\S]*)\\((.*)\\)', 'testNoBareDot(org.eclipse.jgit.lib.ValidRefNameTest)')","[24439, 82800]"
"('URIish.java', 'org.eclipse.jgit.transport.URIish', '<init>', '^(?:([^/:@]+)(?::([^\\\\/]+))?@)?((?:[^\\\\/:]+)|(?:\\[[0-9a-f:]+\\])):((?:(?:/~(?:[^\\\\/]+))[\\\\/])?(?:(?:[^\\\\/]+[\\\\/]+)*[^\\\\/]+[\\\\/]*))$', '/tmp/jgit_test_1888401002986800567_tmp/tmp_1326242475311810481.git')",[116683]
"('Description.java', 'org.junit.runner.Description', 'methodAndClassNamePatternGroupOrDefault', '([\\s\\S]*)\\((.*)\\)', 'testParse_implicit_UTF8_encoded(org.eclipse.jgit.revwalk.RevCommitParseTest)')","[8805, 67576]"
"('Description.java', 'org.junit.runner.Description', 'methodAndClassNamePatternGroupOrDefault', '([\\s\\S]*)\\((.*)\\)', 'testStandardFormat_LargeObject_CorruptZLibStream(org.eclipse.jgit.internal.storage.file.UnpackedObjectTest)')","[56814, 113930]"
"('Description.java', 'org.junit.runner.Description', 'methodAndClassNamePatternGroupOrDefault', '([\\s\\S]*)\\((.*)\\)', 'org.eclipse.jgit.submodule.SubmoduleUpdateTest')","[19521, 183028]"
"('Description.java', 'org.junit.runner.Description', 'methodAndClassNamePatternGroupOrDefault', '([\\s\\S]*)\\((.*)\\)', 'testMultipleCreationsSameContent(org.eclipse.jgit.api.MergeCommandTest)')","[43795, 101346]"
"('ChangeIdUtil.java', 'org.eclipse.jgit.util.ChangeIdUtil', 'indexOfFirstFooterLine', '(^[a-zA-Z0-9-]+:(?!//).*$)', '[bracket]')",[187309]
"('Description.java', 'org.junit.runner.Description', 'methodAndClassNamePatternGroupOrDefault', '([\\s\\S]*)\\((.*)\\)', 'testFileModeChangeAndContentChangeConflict(org.eclipse.jgit.lib.DirCacheCheckoutTest)')","[23290, 81656]"
"('Description.java', 'org.junit.runner.Description', 'methodAndClassNamePatternGroupOrDefault', '([\\s\\S]*)\\((.*)\\)', 'test6_FromString(org.eclipse.jgit.lib.AbbreviatedObjectIdTest)')","[22622, 80996]"
"('URIish.java', 'org.eclipse.jgit.transport.URIish', '<init>', '^(?:([^/:@]+)(?::([^\\\\/]+))?@)?([^\\\\/:]{2,}):([\\\\/](?:(?:[^\\\\/]+[\\\\/]+)*[^\\\\/]+[\\\\/]*))$', '/tmp/jgit_test_104863573169670211_tmp/tmp_8401616164607390426')","[200429, 200569, 200718, 200868]"
"('URIish.java', 'org.eclipse.jgit.transport.URIish', 'getHumanishName', '^([\\\\/]?((?:[A-Za-z]:)?[\\\\/]?(?:(?:[^\\\\/]+[\\\\/]+)*[^\\\\/]+[\\\\/]*)))$', '/abc.git/')","[175652, 179769]"
"('URIish.java', 'org.eclipse.jgit.transport.URIish', '<init>', '^(file):([\\\\/](?![\\\\/])((?:[A-Za-z]:)?[\\\\/]?(?:(?:[^\\\\/]+[\\\\/]+)*[^\\\\/]+[\\\\/]*)))$', 'http://l usr\\example.com@[::1]:1234/D:\\x')",[143636]
"('Description.java', 'org.junit.runner.Description', 'methodAndClassNamePatternGroupOrDefault', '([\\s\\S]*)\\((.*)\\)', 'org.eclipse.jgit.api.DescribeCommandTest')","[44528, 202103]"
"('URIish.java', 'org.eclipse.jgit.transport.URIish', '<init>', '^(file):([\\\\/](?![\\\\/])((?:[A-Za-z]:)?[\\\\/]?(?:(?:[^\\\\/]+[\\\\/]+)*[^\\\\/]+[\\\\/]*)))$', 'ssh://me:wtf@[::1]:80//')",[122706]
"('URIish.java', 'org.eclipse.jgit.transport.URIish', '<init>', '^(file):([\\\\/](?![\\\\/])((?:[A-Za-z]:)?[\\\\/]?(?:(?:[^\\\\/]+[\\\\/]+)*[^\\\\/]+[\\\\/]*)))$', 'ssh://me@1.2.3.4:1234/D:/x')",[135494]
"('URIish.java', 'org.eclipse.jgit.transport.URIish', '<init>', '^([a-z][a-z0-9+-]+)://(?:(?:([^/:@]+)(?::([^\\\\/]+))?@)?((?:[^\\\\/:]+)|(?:\\[[0-9a-f:]+\\]))(?::(\\d+))?((?:/~(?:[^\\\\/]+))?[\\\\/]))?(.+)?$', 'ssh://l usr\\example.com:wtf@[::1]:80/D:/x')",[123925]
"('ChangeIdUtil.java', 'org.eclipse.jgit.util.ChangeIdUtil', 'indexOfChangeId', '(^Change-Id: *I[a-f0-9]{40}$)', 'Change-Id:    I0123456789012345678901234567890123456789')",[190110]
"('URIish.java', 'org.eclipse.jgit.transport.URIish', '<init>', '^(file):([\\\\/](?![\\\\/])((?:[A-Za-z]:)?[\\\\/]?(?:(?:[^\\\\/]+[\\\\/]+)*[^\\\\/]+[\\\\/]*)))$', 'ssh+git://l usr\\example.com@[::1]:80/D:\\x')",[140508]
"('URIish.java', 'org.eclipse.jgit.transport.URIish', '<init>', '^(file):([\\\\/](?![\\\\/])((?:[A-Za-z]:)?[\\\\/]?(?:(?:[^\\\\/]+[\\\\/]+)*[^\\\\/]+[\\\\/]*)))$', 'http://l usr\\example.com@1.2.3.4//')","[156378, 156562]"
"('Description.java', 'org.junit.runner.Description', 'methodAndClassNamePatternGroupOrDefault', '([\\s\\S]*)\\((.*)\\)', 'testTimeout_readBuffer_Success2(org.eclipse.jgit.util.io.TimeoutInputStreamTest)')","[32811, 90874]"
"('Description.java', 'org.junit.runner.Description', 'methodAndClassNamePatternGroupOrDefault', '([\\s\\S]*)\\((.*)\\)', 'testAddExistingSingleFileInSubDir(org.eclipse.jgit.api.AddCommandTest)')","[50500, 108012]"
"('Description.java', 'org.junit.runner.Description', 'methodAndClassNamePatternGroupOrDefault', '([\\s\\S]*)\\((.*)\\)', 'org.eclipse.jgit.revwalk.MaxCountRevFilterTest')","[6811, 181379]"
"('Description.java', 'org.junit.runner.Description', 'methodAndClassNamePatternGroupOrDefault', '([\\s\\S]*)\\((.*)\\)', 'testAddTwoFiles(org.eclipse.jgit.api.AddCommandTest)')","[50626, 108144]"
"('URIish.java', 'org.eclipse.jgit.transport.URIish', '<init>', '^(file):([\\\\/](?![\\\\/])((?:[A-Za-z]:)?[\\\\/]?(?:(?:[^\\\\/]+[\\\\/]+)*[^\\\\/]+[\\\\/]*)))$', 'https://lusr\\example:wtf@example.com:1234//abc')",[133976]
"('URIish.java', 'org.eclipse.jgit.transport.URIish', '<init>', '^([a-z][a-z0-9+-]+)://(?:(?:([^/:@]+)(?::([^\\\\/]+))?@)?((?:[^\\\\/:]+)|(?:\\[[0-9a-f:]+\\]))(?::(\\d+))?((?:/~(?:[^\\\\/]+))?[\\\\/]))?(.+)?$', 'ssh+git://l usr\\example.com@1.2.3.4/D:/x')","[153181, 153365]"
"('URIish.java', 'org.eclipse.jgit.transport.URIish', '<init>', '^([a-z][a-z0-9+-]+)://(?:(?:([^/:@]+)(?::([^\\\\/]+))?@)?((?:[^\\\\/:]+)|(?:\\[[0-9a-f:]+\\]))(?::(\\d+))?((?:/~(?:[^\\\\/]+))?[\\\\/]))?(.+)?$', 'https://l usr\\example.com:wtf@[::1]:80/D:/x')",[133861]
"('Description.java', 'org.junit.runner.Description', 'methodAndClassNamePatternGroupOrDefault', '([\\s\\S]*)\\((.*)\\)', 'testReadBoolean_YesNo1(org.eclipse.jgit.lib.ConfigTest)')","[27882, 86188]"
"('URIish.java', 'org.eclipse.jgit.transport.URIish', '<init>', '^(file):([\\\\/](?![\\\\/])((?:[A-Za-z]:)?[\\\\/]?(?:(?:[^\\\\/]+[\\\\/]+)*[^\\\\/]+[\\\\/]*)))$', 'ssh://lusr\\example@[::1]:80/D:\\x')",[138300]
"('Description.java', 'org.junit.runner.Description', 'methodAndClassNamePatternGroupOrDefault', '([\\s\\S]*)\\((.*)\\)', 'testSkipRevFilter0(org.eclipse.jgit.revwalk.SkipRevFilterTest)')","[7788, 66630]"
"('Description.java', 'org.junit.runner.Description', 'methodAndClassNamePatternGroupOrDefault', '([\\s\\S]*)\\((.*)\\)', 'testRemoveCollision1(org.eclipse.jgit.transport.LongMapTest)')","[5275, 64276]"
"('Description.java', 'org.junit.runner.Description', 'methodAndClassNamePatternGroupOrDefault', '([\\s\\S]*)\\((.*)\\)', 'testCreationImplicitStart(org.eclipse.jgit.api.BranchCommandTest)')","[47301, 104800]"
"('URIish.java', 'org.eclipse.jgit.transport.URIish', '<init>', '^([\\\\/]?((?:[A-Za-z]:)?[\\\\/]?(?:(?:[^\\\\/]+[\\\\/]+)*[^\\\\/]+[\\\\/]*)))$', '/tmp/jgit_test_1616732006832071039_tmp/tmp_6256113901600089866/.git')","[206261, 206411]"
"('Description.java', 'org.junit.runner.Description', 'methodAndClassNamePatternGroupOrDefault', '([\\s\\S]*)\\((.*)\\)', 'testBackup(org.eclipse.jgit.transport.RemoteConfigTest)')","[973, 60008]"
"('URIish.java', 'org.eclipse.jgit.transport.URIish', '<init>', '^(file):([\\\\/](?![\\\\/])((?:[A-Za-z]:)?[\\\\/]?(?:(?:[^\\\\/]+[\\\\/]+)*[^\\\\/]+[\\\\/]*)))$', 'ssh+git://l usr\\example.com@1.2.3.4/D:/x')","[153158, 153342]"
"('Description.java', 'org.junit.runner.Description', 'methodAndClassNamePatternGroupOrDefault', '([\\s\\S]*)\\((.*)\\)', 'testParseUnicodeName_DeleteFile(org.eclipse.jgit.patch.FileHeaderTest)')","[39635, 97386]"
"('Description.java', 'org.junit.runner.Description', 'methodAndClassNamePatternGroupOrDefault', '([\\s\\S]*)\\((.*)\\)', 'testOnlyOption_f1_5_a(org.eclipse.jgit.api.CommitOnlyTest)')","[48864, 106318]"
"('Description.java', 'org.junit.runner.Description', 'methodAndClassNamePatternGroupOrDefault', '([\\s\\S]*)\\((.*)\\)', 'testDescribeBranch(org.eclipse.jgit.api.DescribeCommandTest)')","[44549, 102116]"
"('Description.java', 'org.junit.runner.Description', 'methodAndClassNamePatternGroupOrDefault', '([\\s\\S]*)\\((.*)\\)', 'testLsRemoteWithTags(org.eclipse.jgit.api.LsRemoteCommandTest)')","[41276, 98926]"
"('URIish.java', 'org.eclipse.jgit.transport.URIish', '<init>', '^([a-z][a-z0-9+-]+)://(?:(?:([^/:@]+)(?::([^\\\\/]+))?@)?((?:[^\\\\/:]+)|(?:\\[[0-9a-f:]+\\]))(?::(\\d+))?((?:/~(?:[^\\\\/]+))?[\\\\/]))?(.+)?$', 'http://lusr\\example@1.2.3.4:1234/D:\\x')",[144395]
"('Description.java', 'org.junit.runner.Description', 'methodAndClassNamePatternGroupOrDefault', '([\\s\\S]*)\\((.*)\\)', 'org.eclipse.jgit.api.PullCommandWithRebaseTest')","[42835, 201755]"
"('Description.java', 'org.junit.runner.Description', 'methodAndClassNamePatternGroupOrDefault', '([\\s\\S]*)\\((.*)\\)', 'org.eclipse.jgit.treewalk.ForPathTest')","[29609, 186127]"
"('Description.java', 'org.junit.runner.Description', 'methodAndClassNamePatternGroupOrDefault', '([\\s\\S]*)\\((.*)\\)', 'org.eclipse.jgit.api.HugeFileTest')","[44734, 210403]"
"('Description.java', 'org.junit.runner.Description', 'methodAndClassNamePatternGroupOrDefault', '([\\s\\S]*)\\((.*)\\)', 'testAlias_PreferredAuthenticationsDefault(org.eclipse.jgit.transport.OpenSshConfigTest)')","[2418, 61482]"
"('Description.java', 'org.junit.runner.Description', 'methodAndClassNamePatternGroupOrDefault', '([\\s\\S]*)\\((.*)\\)', 'org.eclipse.jgit.api.CommitOnlyTest')","[48318, 207548]"
"('Description.java', 'org.junit.runner.Description', 'methodAndClassNamePatternGroupOrDefault', '([\\s\\S]*)\\((.*)\\)', 'org.eclipse.jgit.treewalk.TreeWalkBasicDiffTest')","[29424, 186073]"
"('URIish.java', 'org.eclipse.jgit.transport.URIish', '<init>', '^(file):([\\\\/](?![\\\\/])((?:[A-Za-z]:)?[\\\\/]?(?:(?:[^\\\\/]+[\\\\/]+)*[^\\\\/]+[\\\\/]*)))$', 'ssh+git://l usr\\example.com:wtf@[::1]:80/D:\\x')",[127260]
"('Description.java', 'org.junit.runner.Description', 'methodAndClassNamePatternGroupOrDefault', '([\\s\\S]*)\\((.*)\\)', 'testPrefixCompare_17(org.eclipse.jgit.lib.AbbreviatedObjectIdTest)')","[22454, 80820]"
"('Description.java', 'org.junit.runner.Description', 'methodAndClassNamePatternGroupOrDefault', '([\\s\\S]*)\\((.*)\\)', 'testReadIndex_LsFiles(org.eclipse.jgit.dircache.DirCacheCGitCompatabilityTest)')","[11551, 70194]"
"('Description.java', 'org.junit.runner.Description', 'methodAndClassNamePatternGroupOrDefault', '([\\s\\S]*)\\((.*)\\)', 'testReadString4(org.eclipse.jgit.transport.PacketLineInTest)')","[3821, 62912]"
"('Description.java', 'org.junit.runner.Description', 'methodAndClassNamePatternGroupOrDefault', '([\\s\\S]*)\\((.*)\\)', 'org.eclipse.jgit.api.RmCommandTest')","[44673, 202130]"
"('URIish.java', 'org.eclipse.jgit.transport.URIish', '<init>', '^([a-z][a-z0-9+-]+)://(?:(?:([^/:@]+)(?::([^\\\\/]+))?@)?((?:[^\\\\/:]+)|(?:\\[[0-9a-f:]+\\]))(?::(\\d+))?((?:/~(?:[^\\\\/]+))?[\\\\/]))?(.+)?$', 'ssh+git://me:wtf@example.com:80/D:\\x')",[125443]
"('URIish.java', 'org.eclipse.jgit.transport.URIish', '<init>', '^(file):([\\\\/](?![\\\\/])((?:[A-Za-z]:)?[\\\\/]?(?:(?:[^\\\\/]+[\\\\/]+)*[^\\\\/]+[\\\\/]*)))$', 'http://lusr\\example:wtf@[::1]:1234/D:/x')",[131446]
"('URIish.java', 'org.eclipse.jgit.transport.URIish', '<init>', '^(file):([\\\\/](?![\\\\/])((?:[A-Za-z]:)?[\\\\/]?(?:(?:[^\\\\/]+[\\\\/]+)*[^\\\\/]+[\\\\/]*)))$', 'ssh://me@example.com/D:/x')","[148374, 148558]"
"('Description.java', 'org.junit.runner.Description', 'methodAndClassNamePatternGroupOrDefault', '([\\s\\S]*)\\((.*)\\)', 'testFileNameWildcards(org.eclipse.jgit.ignore.IgnoreMatcherTest)')","[31773, 89906]"
"('Description.java', 'org.junit.runner.Description', 'methodAndClassNamePatternGroupOrDefault', '([\\s\\S]*)\\((.*)\\)', 'shouldWorkWithMerges(org.eclipse.jgit.revwalk.RevWalkUtilsCountTest)')","[6647, 65574]"
"('URIish.java', 'org.eclipse.jgit.transport.URIish', '<init>', '^(?:([^/:@]+)(?::([^\\\\/]+))?@)?([^\\\\/:]{2,}):([\\\\/](?:(?:[^\\\\/]+[\\\\/]+)*[^\\\\/]+[\\\\/]*))$', '/.git')",[174962]
"('Description.java', 'org.junit.runner.Description', 'methodAndClassNamePatternGroupOrDefault', '([\\s\\S]*)\\((.*)\\)', 'org.eclipse.jgit.internal.storage.file.ObjectDirectoryTest')","[54694, 209867]"
"('Description.java', 'org.junit.runner.Description', 'methodAndClassNamePatternGroupOrDefault', '([\\s\\S]*)\\((.*)\\)', 'testRemoteBranch(org.eclipse.jgit.merge.MergeMessageFormatterTest)')","[10990, 69666]"
"('Description.java', 'org.junit.runner.Description', 'methodAndClassNamePatternGroupOrDefault', '([\\s\\S]*)\\((.*)\\)', 'testWildcardAtStart(org.eclipse.jgit.transport.RefSpecTest)')","[2899, 61966]"
"('URIish.java', 'org.eclipse.jgit.transport.URIish', '<init>', '^(file):([\\\\/](?![\\\\/])((?:[A-Za-z]:)?[\\\\/]?(?:(?:[^\\\\/]+[\\\\/]+)*[^\\\\/]+[\\\\/]*)))$', 'file:/tmp/jgit_test_3451309735684960688_tmp/tmp_2394269937169610564/.git/')",[185815]
"('QuotedString.java', 'org.eclipse.jgit.util.QuotedString$BourneUserPathStyle', 'quote', '^~[A-Za-z0-9_-]+$', '~/a')","[192912, 192936]"
"('URIish.java', 'org.eclipse.jgit.transport.URIish', '<init>', '^(file):([\\\\/](?![\\\\/])((?:[A-Za-z]:)?[\\\\/]?(?:(?:[^\\\\/]+[\\\\/]+)*[^\\\\/]+[\\\\/]*)))$', 'file:///tmp/jgit_test_4198533630068422434_tmp/tmp_3052998037907759809')","[199159, 199216, 199273]"
"('URIish.java', 'org.eclipse.jgit.transport.URIish', '<init>', '^([a-z][a-z0-9+-]+)://(?:(?:([^/:@]+)(?::([^\\\\/]+))?@)?((?:[^\\\\/:]+)|(?:\\[[0-9a-f:]+\\]))(?::(\\d+))?((?:/~(?:[^\\\\/]+))?[\\\\/]))?(.+)?$', 'ssh://lusr\\example:wtf@example.com:1234/D:/x')",[124109]
"('Description.java', 'org.junit.runner.Description', 'methodAndClassNamePatternGroupOrDefault', '([\\s\\S]*)\\((.*)\\)', 'testInvalidCommitNoTree1(org.eclipse.jgit.lib.ObjectCheckerTest)')","[26672, 85000]"
"('Description.java', 'org.junit.runner.Description', 'methodAndClassNamePatternGroupOrDefault', '([\\s\\S]*)\\((.*)\\)', 'testDegenerate_DeleteEnd(org.eclipse.jgit.diff.MyersDiffTest)')","[14457, 72900]"
"('Description.java', 'org.junit.runner.Description', 'methodAndClassNamePatternGroupOrDefault', '([\\s\\S]*)\\((.*)\\)', 'testOnlyCommentRebaseTodo(org.eclipse.jgit.api.RebaseCommandTest)')","[45843, 103392]"
"('ChangeIdUtil.java', 'org.eclipse.jgit.util.ChangeIdUtil', 'indexOfFirstFooterLine', '^[ \\[].*$', '[ja: Fixed')",[188490]
"('Description.java', 'org.junit.runner.Description', 'methodAndClassNamePatternGroupOrDefault', '([\\s\\S]*)\\((.*)\\)', 'testBug300282_1(org.eclipse.jgit.revplot.PlotCommitListTest)')","[40089, 97782]"
"('Description.java', 'org.junit.runner.Description', 'methodAndClassNamePatternGroupOrDefault', '([\\s\\S]*)\\((.*)\\)', 'testFileInFolderCommittedModified(org.eclipse.jgit.treewalk.filter.IndexDiffFilterTest)')","[30401, 88608]"
"('Description.java', 'org.junit.runner.Description', 'methodAndClassNamePatternGroupOrDefault', '([\\s\\S]*)\\((.*)\\)', 'testDequote_Latin1(org.eclipse.jgit.util.QuotedStringGitPathStyleTest)')","[34097, 92062]"
"('URIish.java', 'org.eclipse.jgit.transport.URIish', '<init>', '^(file):([\\\\/](?![\\\\/])((?:[A-Za-z]:)?[\\\\/]?(?:(?:[^\\\\/]+[\\\\/]+)*[^\\\\/]+[\\\\/]*)))$', 'https://l usr\\example.com:wtf@1.2.3.4:1234//abc')",[133240]
"('URIish.java', 'org.eclipse.jgit.transport.URIish', '<init>', '^(file):([\\\\/](?![\\\\/])((?:[A-Za-z]:)?[\\\\/]?(?:(?:[^\\\\/]+[\\\\/]+)*[^\\\\/]+[\\\\/]*)))$', 'ssh+git://me@example.com:80/D:/x')",[138622]
"('Description.java', 'org.junit.runner.Description', 'methodAndClassNamePatternGroupOrDefault', '([\\s\\S]*)\\((.*)\\)', 'getTrackingBranchShouldReturnNullWithoutMergeBranchForLocalBranch(org.eclipse.jgit.lib.BranchConfigTest)')","[25162, 83438]"
"('URIish.java', 'org.eclipse.jgit.transport.URIish', '<init>', '^(file):([\\\\/](?![\\\\/])((?:[A-Za-z]:)?[\\\\/]?(?:(?:[^\\\\/]+[\\\\/]+)*[^\\\\/]+[\\\\/]*)))$', 'http://l usr\\example.com@[::1]:80//abc')",[143728]
"('Description.java', 'org.junit.runner.Description', 'methodAndClassNamePatternGroupOrDefault', '([\\s\\S]*)\\((.*)\\)', 'testRemoveFromEnd(org.eclipse.jgit.util.BlockListTest)')","[35412, 93360]"
"('Description.java', 'org.junit.runner.Description', 'methodAndClassNamePatternGroupOrDefault', '([\\s\\S]*)\\((.*)\\)', 'testFindObject(org.eclipse.jgit.internal.storage.file.PackReverseIndexTest)')","[57642, 114678]"
"('URIish.java', 'org.eclipse.jgit.transport.URIish', '<init>', '^([a-z][a-z0-9+-]+)://(?:(?:([^/:@]+)(?::([^\\\\/]+))?@)?((?:[^\\\\/:]+)|(?:\\[[0-9a-f:]+\\]))(?::(\\d+))?((?:/~(?:[^\\\\/]+))?[\\\\/]))?(.+)?$', 'ssh://lusr\\example@1.2.3.4:80//abc')",[137863]
"('Description.java', 'org.junit.runner.Description', 'methodAndClassNamePatternGroupOrDefault', '([\\s\\S]*)\\((.*)\\)', 'org.eclipse.jgit.util.RawParseUtils_ParsePersonIdentTest')","[31939, 186424]"
"('URIish.java', 'org.eclipse.jgit.transport.URIish', '<init>', '^(file):([\\\\/](?![\\\\/])((?:[A-Za-z]:)?[\\\\/]?(?:(?:[^\\\\/]+[\\\\/]+)*[^\\\\/]+[\\\\/]*)))$', 'file:///tmp/jgit_test_6348174030093370646_tmp/tmp_3748150825080448751/.git/')",[195832]
"('URIish.java', 'org.eclipse.jgit.transport.URIish', '<init>', '^(file):([\\\\/](?![\\\\/])((?:[A-Za-z]:)?[\\\\/]?(?:(?:[^\\\\/]+[\\\\/]+)*[^\\\\/]+[\\\\/]*)))$', 'ssh://lusr\\example@[::1]:1234//abc')",[138024]
"('Description.java', 'org.junit.runner.Description', 'methodAndClassNamePatternGroupOrDefault', '([\\s\\S]*)\\((.*)\\)', 'addSubmoduleWithExistingSubmoduleDefined(org.eclipse.jgit.submodule.SubmoduleAddTest)')","[19956, 78422]"
"('Repository.java', 'org.eclipse.jgit.lib.Repository', 'resolve', '^-\\d+$', '-1')","[184879, 184906, 185044, 185071]"
"('Description.java', 'org.junit.runner.Description', 'methodAndClassNamePatternGroupOrDefault', '([\\s\\S]*)\\((.*)\\)', 'testOnlyOption_f1_8_d(org.eclipse.jgit.api.CommitOnlyTest)')","[49242, 106714]"
"('Description.java', 'org.junit.runner.Description', 'methodAndClassNamePatternGroupOrDefault', '([\\s\\S]*)\\((.*)\\)', 'testOnlyOption_f1_12_f2_14_d(org.eclipse.jgit.api.CommitOnlyTest)')","[49557, 107044]"
"('Description.java', 'org.junit.runner.Description', 'methodAndClassNamePatternGroupOrDefault', '([\\s\\S]*)\\((.*)\\)', 'org.eclipse.jgit.lib.IndexModificationTimesTest')","[24683, 184302]"
"('Description.java', 'org.junit.runner.Description', 'methodAndClassNamePatternGroupOrDefault', '([\\s\\S]*)\\((.*)\\)', 'testInvalidCommitNoTree3(org.eclipse.jgit.lib.ObjectCheckerTest)')","[26714, 85044]"
"('URIish.java', 'org.eclipse.jgit.transport.URIish', '<init>', '^([a-z][a-z0-9+-]+)://(?:(?:([^/:@]+)(?::([^\\\\/]+))?@)?((?:[^\\\\/:]+)|(?:\\[[0-9a-f:]+\\]))(?::(\\d+))?((?:/~(?:[^\\\\/]+))?[\\\\/]))?(.+)?$', 'ssh://l usr\\example.com@[::1]/D:\\x')","[150283, 150467]"
"('Description.java', 'org.junit.runner.Description', 'methodAndClassNamePatternGroupOrDefault', '([\\s\\S]*)\\((.*)\\)', 'testFilter_NONE(org.eclipse.jgit.revwalk.RevWalkFilterTest)')","[8179, 66960]"
"('Description.java', 'org.junit.runner.Description', 'methodAndClassNamePatternGroupOrDefault', '([\\s\\S]*)\\((.*)\\)', 'org.eclipse.jgit.lib.RepositoryResolveTest')","[27027, 184466]"
"('URIish.java', 'org.eclipse.jgit.transport.URIish', '<init>', '^([a-z][a-z0-9+-]+)://(?:(?:([^/:@]+)(?::([^\\\\/]+))?@)?((?:[^\\\\/:]+)|(?:\\[[0-9a-f:]+\\]))(?::(\\d+))?((?:/~(?:[^\\\\/]+))?[\\\\/]))?(.+)?$', 'https://lusr\\example:wtf@1.2.3.4:80//abc')",[134551]
"('URIish.java', 'org.eclipse.jgit.transport.URIish', '<init>', '^(file):([\\\\/](?![\\\\/])((?:[A-Za-z]:)?[\\\\/]?(?:(?:[^\\\\/]+[\\\\/]+)*[^\\\\/]+[\\\\/]*)))$', 'https://l usr\\example.com@[::1]/D:/x')","[160150, 160334]"
"('URIish.java', 'org.eclipse.jgit.transport.URIish', '<init>', '^([a-z][a-z0-9+-]+)://(?:(?:([^/:@]+)(?::([^\\\\/]+))?@)?((?:[^\\\\/:]+)|(?:\\[[0-9a-f:]+\\]))(?::(\\d+))?((?:/~(?:[^\\\\/]+))?[\\\\/]))?(.+)?$', 'ssh+git://lusr\\example:wtf@1.2.3.4:80/D:\\x')",[128019]
"('Description.java', 'org.junit.runner.Description', 'methodAndClassNamePatternGroupOrDefault', '([\\s\\S]*)\\((.*)\\)', 'testWordroupCase1(org.eclipse.jgit.fnmatch.FileNameMatcherTest)')","[18874, 77388]"
"('URIish.java', 'org.eclipse.jgit.transport.URIish', '<init>', '^(file):([\\\\/](?![\\\\/])((?:[A-Za-z]:)?[\\\\/]?(?:(?:[^\\\\/]+[\\\\/]+)*[^\\\\/]+[\\\\/]*)))$', 'http://me:wtf@[::1]:80//abc')",[129376]
"('URIish.java', 'org.eclipse.jgit.transport.URIish', '<init>', '^(file):([\\\\/](?![\\\\/])((?:[A-Za-z]:)?[\\\\/]?(?:(?:[^\\\\/]+[\\\\/]+)*[^\\\\/]+[\\\\/]*)))$', 'http://me@example.com/D:\\x')","[155044, 155228]"
"('Description.java', 'org.junit.runner.Description', 'methodAndClassNamePatternGroupOrDefault', '([\\s\\S]*)\\((.*)\\)', 'testUpperGroupCase0(org.eclipse.jgit.fnmatch.FileNameMatcherTest)')","[18391, 76882]"
"('URIish.java', 'org.eclipse.jgit.transport.URIish', '<init>', '^(file):([\\\\/](?![\\\\/])((?:[A-Za-z]:)?[\\\\/]?(?:(?:[^\\\\/]+[\\\\/]+)*[^\\\\/]+[\\\\/]*)))$', 'ssh://lusr\\example@[::1]:80/D:/x')",[138254]
"('Description.java', 'org.junit.runner.Description', 'methodAndClassNamePatternGroupOrDefault', '([\\s\\S]*)\\((.*)\\)', 'testInsertAndCopy(org.eclipse.jgit.internal.storage.pack.DeltaStreamTest)')","[52641, 110036]"
"('URIish.java', 'org.eclipse.jgit.transport.URIish', '<init>', '^([a-z][a-z0-9+-]+)://(?:(?:([^/:@]+)(?::([^\\\\/]+))?@)?((?:[^\\\\/:]+)|(?:\\[[0-9a-f:]+\\]))(?::(\\d+))?((?:/~(?:[^\\\\/]+))?[\\\\/]))?(.+)?$', 'ssh+git://lusr\\example:wtf@example.com:80//')",[127513]
"('URIish.java', 'org.eclipse.jgit.transport.URIish', '<init>', '^(file):([\\\\/](?![\\\\/])((?:[A-Za-z]:)?[\\\\/]?(?:(?:[^\\\\/]+[\\\\/]+)*[^\\\\/]+[\\\\/]*)))$', 'ssh://me@[::1]//abc')","[149064, 149248]"
"('URIish.java', 'org.eclipse.jgit.transport.URIish', '<init>', '^([a-z][a-z0-9+-]+)://(?:(?:([^/:@]+)(?::([^\\\\/]+))?@)?((?:[^\\\\/:]+)|(?:\\[[0-9a-f:]+\\]))(?::(\\d+))?((?:/~(?:[^\\\\/]+))?[\\\\/]))?(.+)?$', 'ssh+git://me:wtf@[::1]:1234//abc')",[125903]
"('URIish.java', 'org.eclipse.jgit.transport.URIish', '<init>', '^([a-z][a-z0-9+-]+)://(?:(?:([^/:@]+)(?::([^\\\\/]+))?@)?((?:[^\\\\/:]+)|(?:\\[[0-9a-f:]+\\]))(?::(\\d+))?((?:/~(?:[^\\\\/]+))?[\\\\/]))?(.+)?$', 'file:///tmp/jgit_test_6630028909386142325_tmp/tmp_2254286675345283029/.git/')",[208975]
"('URIish.java', 'org.eclipse.jgit.transport.URIish', '<init>', '^([a-z][a-z0-9+-]+)://(?:(?:([^/:@]+)(?::([^\\\\/]+))?@)?((?:[^\\\\/:]+)|(?:\\[[0-9a-f:]+\\]))(?::(\\d+))?((?:/~(?:[^\\\\/]+))?[\\\\/]))?(.+)?$', 'https://me@1.2.3.4:80/D:\\x')",[145683]
"('URIish.java', 'org.eclipse.jgit.transport.URIish', '<init>', '^([a-z][a-z0-9+-]+)://(?:(?:([^/:@]+)(?::([^\\\\/]+))?@)?((?:[^\\\\/:]+)|(?:\\[[0-9a-f:]+\\]))(?::(\\d+))?((?:/~(?:[^\\\\/]+))?[\\\\/]))?(.+)?$', 'ssh+git://me@1.2.3.4:1234/D:/x')",[138829]
"('Description.java', 'org.junit.runner.Description', 'methodAndClassNamePatternGroupOrDefault', '([\\s\\S]*)\\((.*)\\)', 'testIntoOtherThanMaster(org.eclipse.jgit.merge.MergeMessageFormatterTest)')","[10969, 69644]"
"('URIish.java', 'org.eclipse.jgit.transport.URIish', '<init>', '^(file):([\\\\/](?![\\\\/])((?:[A-Za-z]:)?[\\\\/]?(?:(?:[^\\\\/]+[\\\\/]+)*[^\\\\/]+[\\\\/]*)))$', '/tmp/jgit_test_6729380522621655077_tmp/tmp_6942243649056967235')","[203277, 203402, 203548, 203698]"
"('Description.java', 'org.junit.runner.Description', 'methodAndClassNamePatternGroupOrDefault', '([\\s\\S]*)\\((.*)\\)', 'testEqualsWithoutWhitespace(org.eclipse.jgit.diff.RawTextIgnoreAllWhitespaceTest)')","[15686, 74088]"
"('Description.java', 'org.junit.runner.Description', 'methodAndClassNamePatternGroupOrDefault', '([\\s\\S]*)\\((.*)\\)', 'testGetRefs_PackedNotPeeled_Sorted(org.eclipse.jgit.internal.storage.file.RefDirectoryTest)')","[58396, 115448]"
"('Description.java', 'org.junit.runner.Description', 'methodAndClassNamePatternGroupOrDefault', '([\\s\\S]*)\\((.*)\\)', 'testBaseEqualsTheirs(org.eclipse.jgit.notes.NoteMapMergerTest)')","[40900, 98552]"
"('Description.java', 'org.junit.runner.Description', 'methodAndClassNamePatternGroupOrDefault', '([\\s\\S]*)\\((.*)\\)', 'testParse_ShortLineOnlyEmbeddedLF(org.eclipse.jgit.revwalk.RevCommitParseTest)')","[8931, 67708]"
"('Description.java', 'org.junit.runner.Description', 'methodAndClassNamePatternGroupOrDefault', '([\\s\\S]*)\\((.*)\\)', 'testToString_NoPrefix(org.eclipse.jgit.util.RefMapTest)')","[37223, 95098]"
"('URIish.java', 'org.eclipse.jgit.transport.URIish', '<init>', '^(file):([\\\\/](?![\\\\/])((?:[A-Za-z]:)?[\\\\/]?(?:(?:[^\\\\/]+[\\\\/]+)*[^\\\\/]+[\\\\/]*)))$', 'http://l usr\\example.com@[::1]:80//')",[143682]
"('Description.java', 'org.junit.runner.Description', 'methodAndClassNamePatternGroupOrDefault', '([\\s\\S]*)\\((.*)\\)', 'testGetRefs_EmptyDatabase(org.eclipse.jgit.internal.storage.file.RefDirectoryTest)')","[58732, 115800]"
"('Description.java', 'org.junit.runner.Description', 'methodAndClassNamePatternGroupOrDefault', '([\\s\\S]*)\\((.*)\\)', 'testGetValidWithSlashesDotGitHumanishName(org.eclipse.jgit.transport.URIishTest)')","[1181, 60206]"
"('URIish.java', 'org.eclipse.jgit.transport.URIish', '<init>', '^([a-z][a-z0-9+-]+)://(?:(?:([^/:@]+)(?::([^\\\\/]+))?@)?((?:[^\\\\/:]+)|(?:\\[[0-9a-f:]+\\]))(?::(\\d+))?((?:/~(?:[^\\\\/]+))?[\\\\/]))?(.+)?$', 'ssh://example.com/some/p ath')","[178389, 178435]"
"('URIish.java', 'org.eclipse.jgit.transport.URIish', '<init>', '^([a-z][a-z0-9+-]+)://(?:(?:([^/:@]+)(?::([^\\\\/]+))?@)?((?:[^\\\\/:]+)|(?:\\[[0-9a-f:]+\\]))(?::(\\d+))?((?:/~(?:[^\\\\/]+))?[\\\\/]))?(.+)?$', 'ssh+git://lusr\\example@1.2.3.4:1234//abc')",[140991]
"('Description.java', 'org.junit.runner.Description', 'methodAndClassNamePatternGroupOrDefault', '([\\s\\S]*)\\((.*)\\)', 'testReadMissing_TempIndex(org.eclipse.jgit.dircache.DirCacheBasicTest)')","[11301, 69952]"
"('URIish.java', 'org.eclipse.jgit.transport.URIish', '<init>', '^(file):([\\\\/](?![\\\\/])((?:[A-Za-z]:)?[\\\\/]?(?:(?:[^\\\\/]+[\\\\/]+)*[^\\\\/]+[\\\\/]*)))$', 'ssh://DOMAIN%5cüser:pass@example.com:33/some/p ath')","[178803, 178849]"
"('Description.java', 'org.junit.runner.Description', 'methodAndClassNamePatternGroupOrDefault', '([\\s\\S]*)\\((.*)\\)', 'testFormatWeeks(org.eclipse.jgit.util.RelativeDateFormatterTest)')","[35807, 93734]"
"('Description.java', 'org.junit.runner.Description', 'methodAndClassNamePatternGroupOrDefault', '([\\s\\S]*)\\((.*)\\)', 'test001_NewIdent(org.eclipse.jgit.lib.T0001_PersonIdentTest)')","[27695, 86012]"
"('URIish.java', 'org.eclipse.jgit.transport.URIish', '<init>', '^([\\\\/]?((?:[A-Za-z]:)?[\\\\/]?(?:(?:[^\\\\/]+[\\\\/]+)*[^\\\\/]+[\\\\/]*)))$', '/more/dirs')","[117885, 118585, 120173]"
"('URIish.java', 'org.eclipse.jgit.transport.URIish', '<init>', '^([a-z][a-z0-9+-]+)://(?:(?:([^/:@]+)(?::([^\\\\/]+))?@)?((?:[^\\\\/:]+)|(?:\\[[0-9a-f:]+\\]))(?::(\\d+))?((?:/~(?:[^\\\\/]+))?[\\\\/]))?(.+)?$', 'http://me:wtf@[::1]:80/D:\\x')",[129491]
"('URIish.java', 'org.eclipse.jgit.transport.URIish', '<init>', '^([a-z][a-z0-9+-]+)://(?:(?:([^/:@]+)(?::([^\\\\/]+))?@)?((?:[^\\\\/:]+)|(?:\\[[0-9a-f:]+\\]))(?::(\\d+))?((?:/~(?:[^\\\\/]+))?[\\\\/]))?(.+)?$', 'https://1.2.3.4/D:\\x')","[171995, 172179, 173099, 173283, 174203, 174387]"
"('Description.java', 'org.junit.runner.Description', 'methodAndClassNamePatternGroupOrDefault', '([\\s\\S]*)\\((.*)\\)', 'test010_toString(org.eclipse.jgit.lib.ObjectIdTest)')","[28510, 86826]"
"('URIish.java', 'org.eclipse.jgit.transport.URIish', '<init>', '^(file):([\\\\/](?![\\\\/])((?:[A-Za-z]:)?[\\\\/]?(?:(?:[^\\\\/]+[\\\\/]+)*[^\\\\/]+[\\\\/]*)))$', 'file:/tmp/jgit_test_6270179879516651477_tmp/tmp_8025166266149813746/.git/')",[196593]
"('Description.java', 'org.junit.runner.Description', 'methodAndClassNamePatternGroupOrDefault', '([\\s\\S]*)\\((.*)\\)', 'testWrite_CH_PROGRESS(org.eclipse.jgit.transport.SideBandOutputStreamTest)')","[4609, 63638]"
"('URIish.java', 'org.eclipse.jgit.transport.URIish', '<init>', '^([a-z][a-z0-9+-]+)://(?:(?:([^/:@]+)(?::([^\\\\/]+))?@)?((?:[^\\\\/:]+)|(?:\\[[0-9a-f:]+\\]))(?::(\\d+))?((?:/~(?:[^\\\\/]+))?[\\\\/]))?(.+)?$', 'https://lusr\\example:wtf@example.com:1234//abc')",[133999]
"('Description.java', 'org.junit.runner.Description', 'methodAndClassNamePatternGroupOrDefault', '([\\s\\S]*)\\((.*)\\)', 'repositoryWithNoSubmodules(org.eclipse.jgit.submodule.SubmoduleSyncTest)')","[19687, 78180]"
"('URIish.java', 'org.eclipse.jgit.transport.URIish', '<init>', '^(file):([\\\\/](?![\\\\/])((?:[A-Za-z]:)?[\\\\/]?(?:(?:[^\\\\/]+[\\\\/]+)*[^\\\\/]+[\\\\/]*)))$', '/tmp/jgit_test_104863573169670211_tmp/tmp_8401616164607390426')","[200357, 200482, 200628, 200778]"
"('Description.java', 'org.junit.runner.Description', 'methodAndClassNamePatternGroupOrDefault', '([\\s\\S]*)\\((.*)\\)', 'org.eclipse.jgit.util.RawCharUtilTest')","[38452, 192344]"
"('Description.java', 'org.junit.runner.Description', 'methodAndClassNamePatternGroupOrDefault', '([\\s\\S]*)\\((.*)\\)', 'testDeleteDelete(org.eclipse.jgit.notes.DefaultNoteMergerTest)')","[40526, 98200]"
"('Description.java', 'org.junit.runner.Description', 'methodAndClassNamePatternGroupOrDefault', '([\\s\\S]*)\\((.*)\\)', 'testDigitGroupCase5(org.eclipse.jgit.fnmatch.FileNameMatcherTest)')","[17719, 76178]"
"('ChangeIdUtil.java', 'org.eclipse.jgit.util.ChangeIdUtil', 'indexOfChangeId', '(^Change-Id: *I[a-f0-9]{40}$)', 'Change-Id: I0123456789012345678901234567890123456789')","[187462, 188567, 190135, 190160, 192031]"
"('Description.java', 'org.junit.runner.Description', 'methodAndClassNamePatternGroupOrDefault', '([\\s\\S]*)\\((.*)\\)', 'testMaliciousPathEmptyWindows(org.eclipse.jgit.lib.DirCacheCheckoutMaliciousPathTest)')","[21580, 79984]"
"('Description.java', 'org.junit.runner.Description', 'methodAndClassNamePatternGroupOrDefault', '([\\s\\S]*)\\((.*)\\)', 'testGetText_DiffCc(org.eclipse.jgit.patch.GetTextTest)')","[39944, 97650]"
"('URIish.java', 'org.eclipse.jgit.transport.URIish', '<init>', '^(file):([\\\\/](?![\\\\/])((?:[A-Za-z]:)?[\\\\/]?(?:(?:[^\\\\/]+[\\\\/]+)*[^\\\\/]+[\\\\/]*)))$', 'https://l usr\\example.com@1.2.3.4:80//abc')",[146672]
"('URIish.java', 'org.eclipse.jgit.transport.URIish', '<init>', '^([a-z][a-z0-9+-]+)://(?:(?:([^/:@]+)(?::([^\\\\/]+))?@)?((?:[^\\\\/:]+)|(?:\\[[0-9a-f:]+\\]))(?::(\\d+))?((?:/~(?:[^\\\\/]+))?[\\\\/]))?(.+)?$', 'https://me:wtf@1.2.3.4:80//')",[132297]
"('URIish.java', 'org.eclipse.jgit.transport.URIish', '<init>', '^([a-z][a-z0-9+-]+)://(?:(?:([^/:@]+)(?::([^\\\\/]+))?@)?((?:[^\\\\/:]+)|(?:\\[[0-9a-f:]+\\]))(?::(\\d+))?((?:/~(?:[^\\\\/]+))?[\\\\/]))?(.+)?$', 'ssh://me:wtf@1.2.3.4:80//abc')",[122407]
"('URIish.java', 'org.eclipse.jgit.transport.URIish', '<init>', '^([a-z][a-z0-9+-]+)://(?:(?:([^/:@]+)(?::([^\\\\/]+))?@)?((?:[^\\\\/:]+)|(?:\\[[0-9a-f:]+\\]))(?::(\\d+))?((?:/~(?:[^\\\\/]+))?[\\\\/]))?(.+)?$', '/a/b/c.git')",[121280]
"('Description.java', 'org.junit.runner.Description', 'methodAndClassNamePatternGroupOrDefault', '([\\s\\S]*)\\((.*)\\)', 'org.eclipse.jgit.revwalk.RevFlagSetTest')","[7290, 181433]"
"('Description.java', 'org.junit.runner.Description', 'methodAndClassNamePatternGroupOrDefault', '([\\s\\S]*)\\((.*)\\)', 'testQuote_NamedEscapes(org.eclipse.jgit.util.QuotedStringBourneStyleTest)')","[36662, 94570]"
"('Description.java', 'org.junit.runner.Description', 'methodAndClassNamePatternGroupOrDefault', '([\\s\\S]*)\\((.*)\\)', 'testGitProtoWindowsPort(org.eclipse.jgit.transport.URIishTest)')","[1832, 60888]"
"('ChangeIdUtil.java', 'org.eclipse.jgit.util.ChangeIdUtil', 'indexOfFirstFooterLine', '(^[a-zA-Z0-9-]+:(?!//).*$)', '     the indentation]')",[188412]
"('Description.java', 'org.junit.runner.Description', 'methodAndClassNamePatternGroupOrDefault', '([\\s\\S]*)\\((.*)\\)', 'testPath_4095(org.eclipse.jgit.dircache.DirCacheLargePathTest)')","[12274, 70832]"
"('Description.java', 'org.junit.runner.Description', 'methodAndClassNamePatternGroupOrDefault', '([\\s\\S]*)\\((.*)\\)', 'testGetEnum(org.eclipse.jgit.lib.ConfigTest)')","[28008, 86320]"
"('Description.java', 'org.junit.runner.Description', 'methodAndClassNamePatternGroupOrDefault', '([\\s\\S]*)\\((.*)\\)', 'testOnlyOption_f1_1_f2_14_b(org.eclipse.jgit.api.CommitOnlyTest)')","[50250, 107770]"
"('URIish.java', 'org.eclipse.jgit.transport.URIish', '<init>', '^(file):([\\\\/](?![\\\\/])((?:[A-Za-z]:)?[\\\\/]?(?:(?:[^\\\\/]+[\\\\/]+)*[^\\\\/]+[\\\\/]*)))$', 'http://me:wtf@[::1]:1234//')",[129146]
"('URIish.java', 'org.eclipse.jgit.transport.URIish', '<init>', '^(file):([\\\\/](?![\\\\/])((?:[A-Za-z]:)?[\\\\/]?(?:(?:[^\\\\/]+[\\\\/]+)*[^\\\\/]+[\\\\/]*)))$', 'ssh+git://me@[::1]//')","[152330, 152514]"
"('URIish.java', 'org.eclipse.jgit.transport.URIish', '<init>', '^(file):([\\\\/](?![\\\\/])((?:[A-Za-z]:)?[\\\\/]?(?:(?:[^\\\\/]+[\\\\/]+)*[^\\\\/]+[\\\\/]*)))$', 'https://lusr\\example@1.2.3.4:1234/D:\\x')",[147684]
"('URIish.java', 'org.eclipse.jgit.transport.URIish', '<init>', '^([a-z][a-z0-9+-]+)://(?:(?:([^/:@]+)(?::([^\\\\/]+))?@)?((?:[^\\\\/:]+)|(?:\\[[0-9a-f:]+\\]))(?::(\\d+))?((?:/~(?:[^\\\\/]+))?[\\\\/]))?(.+)?$', 'http://me:wtf@example.com:1234/D:/x')",[128525]
"('Description.java', 'org.junit.runner.Description', 'methodAndClassNamePatternGroupOrDefault', '([\\s\\S]*)\\((.*)\\)', 'resolveReflogParent(org.eclipse.jgit.lib.ReflogResolveTest)')","[27613, 85946]"
"('Description.java', 'org.junit.runner.Description', 'methodAndClassNamePatternGroupOrDefault', '([\\s\\S]*)\\((.*)\\)', 'testValidCommit2Parent(org.eclipse.jgit.lib.ObjectCheckerTest)')","[26000, 84296]"
"('URIish.java', 'org.eclipse.jgit.transport.URIish', '<init>', '^([a-z][a-z0-9+-]+)://(?:(?:([^/:@]+)(?::([^\\\\/]+))?@)?((?:[^\\\\/:]+)|(?:\\[[0-9a-f:]+\\]))(?::(\\d+))?((?:/~(?:[^\\\\/]+))?[\\\\/]))?(.+)?$', 'ssh+git://me:wtf@[::1]:1234/D:/x')",[125949]
"('Description.java', 'org.junit.runner.Description', 'methodAndClassNamePatternGroupOrDefault', '([\\s\\S]*)\\((.*)\\)', 'org.eclipse.jgit.revwalk.LIFORevQueueTest')","[6460, 181298]"
"('URIish.java', 'org.eclipse.jgit.transport.URIish', '<init>', '^(file):([\\\\/](?![\\\\/])((?:[A-Za-z]:)?[\\\\/]?(?:(?:[^\\\\/]+[\\\\/]+)*[^\\\\/]+[\\\\/]*)))$', 'https://me@example.com:1234//')",[144970]
"('Description.java', 'org.junit.runner.Description', 'methodAndClassNamePatternGroupOrDefault', '([\\s\\S]*)\\((.*)\\)', 'testBackBug396127(org.eclipse.jgit.dircache.DirCacheIteratorTest)')","[12377, 70920]"
"('Description.java', 'org.junit.runner.Description', 'methodAndClassNamePatternGroupOrDefault', '([\\s\\S]*)\\((.*)\\)', 'test2(org.eclipse.jgit.transport.PackParserTest)')","[4233, 63264]"
"('URIish.java', 'org.eclipse.jgit.transport.URIish', '<init>', '^(file):([\\\\/](?![\\\\/])((?:[A-Za-z]:)?[\\\\/]?(?:(?:[^\\\\/]+[\\\\/]+)*[^\\\\/]+[\\\\/]*)))$', 'https://l usr\\example.com@example.com/D:\\x')","[159460, 159644]"
"('URIish.java', 'org.eclipse.jgit.transport.URIish', '<init>', '^([a-z][a-z0-9+-]+)://(?:(?:([^/:@]+)(?::([^\\\\/]+))?@)?((?:[^\\\\/:]+)|(?:\\[[0-9a-f:]+\\]))(?::(\\d+))?((?:/~(?:[^\\\\/]+))?[\\\\/]))?(.+)?$', 'ssh+git://me@example.com//')","[151617, 151801]"
"('Description.java', 'org.junit.runner.Description', 'methodAndClassNamePatternGroupOrDefault', '([\\s\\S]*)\\((.*)\\)', 'testAddRemoveAdd(org.eclipse.jgit.util.BlockListTest)')","[35370, 93316]"
"('URIish.java', 'org.eclipse.jgit.transport.URIish', '<init>', '^([a-z][a-z0-9+-]+)://(?:(?:([^/:@]+)(?::([^\\\\/]+))?@)?((?:[^\\\\/:]+)|(?:\\[[0-9a-f:]+\\]))(?::(\\d+))?((?:/~(?:[^\\\\/]+))?[\\\\/]))?(.+)?$', 'https://me@[::1]//abc')","[159023, 159207]"
"('Description.java', 'org.junit.runner.Description', 'methodAndClassNamePatternGroupOrDefault', '([\\s\\S]*)\\((.*)\\)', 'testLockMissing_RealIndex(org.eclipse.jgit.dircache.DirCacheBasicTest)')","[11322, 69974]"
"('Description.java', 'org.junit.runner.Description', 'methodAndClassNamePatternGroupOrDefault', '([\\s\\S]*)\\((.*)\\)', 'testGetRefs_LooseSorting_Bug_348834(org.eclipse.jgit.internal.storage.file.RefDirectoryTest)')","[58144, 115184]"
"('Description.java', 'org.junit.runner.Description', 'methodAndClassNamePatternGroupOrDefault', '([\\s\\S]*)\\((.*)\\)', 'testWithEndingURL(org.eclipse.jgit.util.ChangeIdUtilTest)')","[38078, 95934]"
"('URIish.java', 'org.eclipse.jgit.transport.URIish', '<init>', '^([a-z][a-z0-9+-]+)://(?:(?:([^/:@]+)(?::([^\\\\/]+))?@)?((?:[^\\\\/:]+)|(?:\\[[0-9a-f:]+\\]))(?::(\\d+))?((?:/~(?:[^\\\\/]+))?[\\\\/]))?(.+)?$', 'https://l usr\\example.com:wtf@[::1]:80/D:\\x')",[133907]
"('Description.java', 'org.junit.runner.Description', 'methodAndClassNamePatternGroupOrDefault', '([\\s\\S]*)\\((.*)\\)', 'org.eclipse.jgit.submodule.SubmoduleAddTest')","[19914, 183762]"
"('URIish.java', 'org.eclipse.jgit.transport.URIish', '<init>', '^(file):([\\\\/](?![\\\\/])((?:[A-Za-z]:)?[\\\\/]?(?:(?:[^\\\\/]+[\\\\/]+)*[^\\\\/]+[\\\\/]*)))$', 'https://lusr\\example@[::1]:80/D:/x')",[148190]
"('Description.java', 'org.junit.runner.Description', 'methodAndClassNamePatternGroupOrDefault', '([\\s\\S]*)\\((.*)\\)', 'repositoryWithUnconfiguredSubmodule(org.eclipse.jgit.submodule.SubmoduleUpdateTest)')","[19563, 78070]"
"('URIish.java', 'org.eclipse.jgit.transport.URIish', '<init>', '^(file):([\\\\/](?![\\\\/])((?:[A-Za-z]:)?[\\\\/]?(?:(?:[^\\\\/]+[\\\\/]+)*[^\\\\/]+[\\\\/]*)))$', 'file:///tmp/jgit_test_8851555999307633575_tmp/tmp_5342131996725035508')","[193824, 193881, 193941]"
"('Description.java', 'org.junit.runner.Description', 'methodAndClassNamePatternGroupOrDefault', '([\\s\\S]*)\\((.*)\\)', 'noStashRef(org.eclipse.jgit.api.StashListCommandTest)')","[47156, 104668]"
"('Description.java', 'org.junit.runner.Description', 'methodAndClassNamePatternGroupOrDefault', '([\\s\\S]*)\\((.*)\\)', 'testDeleteNotEmptyTreeNotOkButIgnoreFail(org.eclipse.jgit.util.FileUtilTest)')","[33952, 91930]"
"('URIish.java', 'org.eclipse.jgit.transport.URIish', '<init>', '^(file):([\\\\/](?![\\\\/])((?:[A-Za-z]:)?[\\\\/]?(?:(?:[^\\\\/]+[\\\\/]+)*[^\\\\/]+[\\\\/]*)))$', 'file:///tmp/jgit_test_3938080632504476553_tmp/tmp_7170099663148325778/testCloneRepositoryWithNestedSubmodules2/.git/')","[196824, 197202]"
"('Description.java', 'org.junit.runner.Description', 'methodAndClassNamePatternGroupOrDefault', '([\\s\\S]*)\\((.*)\\)', 'testSort_REVERSE(org.eclipse.jgit.revwalk.RevWalkSortTest)')","[9223, 67994]"
"('Description.java', 'org.junit.runner.Description', 'methodAndClassNamePatternGroupOrDefault', '([\\s\\S]*)\\((.*)\\)', 'testMergeTag(org.eclipse.jgit.api.MergeCommandTest)')","[44068, 101632]"
"('Description.java', 'org.junit.runner.Description', 'methodAndClassNamePatternGroupOrDefault', '([\\s\\S]*)\\((.*)\\)', 'testGetRefs_HeadBranchNotBorn(org.eclipse.jgit.internal.storage.file.RefDirectoryTest)')","[58585, 115646]"
"('URIish.java', 'org.eclipse.jgit.transport.URIish', '<init>', '^([a-z][a-z0-9+-]+)://(?:(?:([^/:@]+)(?::([^\\\\/]+))?@)?((?:[^\\\\/:]+)|(?:\\[[0-9a-f:]+\\]))(?::(\\d+))?((?:/~(?:[^\\\\/]+))?[\\\\/]))?(.+)?$', '/tmp/jgit_test_2564324336982684232_tmp/tmp_7539504802091562184')","[199401, 199531, 199678, 199828, 199978]"
"('URIish.java', 'org.eclipse.jgit.transport.URIish', '<init>', '^([a-z][a-z0-9+-]+)://(?:(?:([^/:@]+)(?::([^\\\\/]+))?@)?((?:[^\\\\/:]+)|(?:\\[[0-9a-f:]+\\]))(?::(\\d+))?((?:/~(?:[^\\\\/]+))?[\\\\/]))?(.+)?$', 'http://lusr\\example@example.com:80/D:/x')",[144165]
"('Description.java', 'org.junit.runner.Description', 'methodAndClassNamePatternGroupOrDefault', '([\\s\\S]*)\\((.*)\\)', 'org.eclipse.jgit.transport.PackParserTest')","[4170, 181028]"
"('Description.java', 'org.junit.runner.Description', 'methodAndClassNamePatternGroupOrDefault', '([\\s\\S]*)\\((.*)\\)', 'testRebaseShouldFixupInCaseOfConflict(org.eclipse.jgit.api.RebaseCommandTest)')","[45612, 103150]"
"('Description.java', 'org.junit.runner.Description', 'methodAndClassNamePatternGroupOrDefault', '([\\s\\S]*)\\((.*)\\)', 'testMissingString(org.eclipse.jgit.nls.TranslationBundleTest)')","[78, 59150]"
"('URIish.java', 'org.eclipse.jgit.transport.URIish', '<init>', '^([a-z][a-z0-9+-]+)://(?:(?:([^/:@]+)(?::([^\\\\/]+))?@)?((?:[^\\\\/:]+)|(?:\\[[0-9a-f:]+\\]))(?::(\\d+))?((?:/~(?:[^\\\\/]+))?[\\\\/]))?(.+)?$', 'https://me:wtf@example.com:80/D:\\x')",[132067]
"('Description.java', 'org.junit.runner.Description', 'methodAndClassNamePatternGroupOrDefault', '([\\s\\S]*)\\((.*)\\)', 'testInversedGroupCase2(org.eclipse.jgit.fnmatch.FileNameMatcherTest)')","[17278, 75716]"
"('Description.java', 'org.junit.runner.Description', 'methodAndClassNamePatternGroupOrDefault', '([\\s\\S]*)\\((.*)\\)', 'org.eclipse.jgit.util.RawParseUtils_HexParseTest')","[35620, 186910]"
"('URIish.java', 'org.eclipse.jgit.transport.URIish', '<init>', '^(file):([\\\\/](?![\\\\/])((?:[A-Za-z]:)?[\\\\/]?(?:(?:[^\\\\/]+[\\\\/]+)*[^\\\\/]+[\\\\/]*)))$', 'http://l usr\\example.com:wtf@[::1]:1234//')",[130250]
"('Description.java', 'org.junit.runner.Description', 'methodAndClassNamePatternGroupOrDefault', '([\\s\\S]*)\\((.*)\\)', 'testRemovedUntracked(org.eclipse.jgit.lib.IndexDiffTest)')","[20555, 78950]"
"('Description.java', 'org.junit.runner.Description', 'methodAndClassNamePatternGroupOrDefault', '([\\s\\S]*)\\((.*)\\)', 'org.eclipse.jgit.lib.RefTest')","[22788, 184086]"
"('Description.java', 'org.junit.runner.Description', 'methodAndClassNamePatternGroupOrDefault', '([\\s\\S]*)\\((.*)\\)', 'test004_PutGetSimple(org.eclipse.jgit.lib.ConfigTest)')","[28260, 86584]"
"('Description.java', 'org.junit.runner.Description', 'methodAndClassNamePatternGroupOrDefault', '([\\s\\S]*)\\((.*)\\)', 'testMergeMessage(org.eclipse.jgit.api.MergeCommandTest)')","[44278, 101852]"
"('Description.java', 'org.junit.runner.Description', 'methodAndClassNamePatternGroupOrDefault', '([\\s\\S]*)\\((.*)\\)', 'testAddA2(org.eclipse.jgit.api.ApplyCommandTest)')","[46656, 104184]"
"('Description.java', 'org.junit.runner.Description', 'methodAndClassNamePatternGroupOrDefault', '([\\s\\S]*)\\((.*)\\)', 'testRebaseInteractiveSingleSquashAndModifyMessage(org.eclipse.jgit.api.RebaseCommandTest)')","[45255, 102776]"
"('Description.java', 'org.junit.runner.Description', 'methodAndClassNamePatternGroupOrDefault', '([\\s\\S]*)\\((.*)\\)', 'testCopyLeadingPrefix(org.eclipse.jgit.util.RefListTest)')","[34868, 92810]"
"('Description.java', 'org.junit.runner.Description', 'methodAndClassNamePatternGroupOrDefault', '([\\s\\S]*)\\((.*)\\)', 'org.eclipse.jgit.treewalk.filter.InterIndexDiffFilterTest')","[31483, 186343]"
"('URIish.java', 'org.eclipse.jgit.transport.URIish', '<init>', '^([a-z][a-z0-9+-]+)://(?:(?:([^/:@]+)(?::([^\\\\/]+))?@)?((?:[^\\\\/:]+)|(?:\\[[0-9a-f:]+\\]))(?::(\\d+))?((?:/~(?:[^\\\\/]+))?[\\\\/]))?(.+)?$', 'https://me@example.com//')","[158241, 158425]"
"('Description.java', 'org.junit.runner.Description', 'methodAndClassNamePatternGroupOrDefault', '([\\s\\S]*)\\((.*)\\)', 'testEdits_MatchNone(org.eclipse.jgit.revwalk.RevWalkPathFilter1Test)')","[5567, 64562]"
"('URIish.java', 'org.eclipse.jgit.transport.URIish', '<init>', '^(file):([\\\\/](?![\\\\/])((?:[A-Za-z]:)?[\\\\/]?(?:(?:[^\\\\/]+[\\\\/]+)*[^\\\\/]+[\\\\/]*)))$', 'http://lusr\\example:wtf@[::1]:80/D:\\x')",[131676]
"('Description.java', 'org.junit.runner.Description', 'methodAndClassNamePatternGroupOrDefault', '([\\s\\S]*)\\((.*)\\)', 'org.eclipse.jgit.internal.storage.file.WindowCacheReconfigureTest')","[53240, 209651]"
"('Description.java', 'org.junit.runner.Description', 'methodAndClassNamePatternGroupOrDefault', '([\\s\\S]*)\\((.*)\\)', 'test021_createTreeTag(org.eclipse.jgit.internal.storage.file.T0003_BasicTest)')","[54217, 111488]"
"('URIish.java', 'org.eclipse.jgit.transport.URIish', '<init>', '^([a-z][a-z0-9+-]+)://(?:(?:([^/:@]+)(?::([^\\\\/]+))?@)?((?:[^\\\\/:]+)|(?:\\[[0-9a-f:]+\\]))(?::(\\d+))?((?:/~(?:[^\\\\/]+))?[\\\\/]))?(.+)?$', 'http://me:wtf@1.2.3.4:1234//abc')",[128847]
"('Description.java', 'org.junit.runner.Description', 'methodAndClassNamePatternGroupOrDefault', '([\\s\\S]*)\\((.*)\\)', 'testEncodeASCII_Number13(org.eclipse.jgit.lib.ConstantsEncodingTest)')","[24084, 82448]"
"('URIish.java', 'org.eclipse.jgit.transport.URIish', '<init>', '^(file):([\\\\/](?![\\\\/])((?:[A-Za-z]:)?[\\\\/]?(?:(?:[^\\\\/]+[\\\\/]+)*[^\\\\/]+[\\\\/]*)))$', 'ssh://l usr\\example.com:wtf@example.com:80//')",[123074]
"('Description.java', 'org.junit.runner.Description', 'methodAndClassNamePatternGroupOrDefault', '([\\s\\S]*)\\((.*)\\)', 'org.eclipse.jgit.lib.ReflogConfigTest')","[21872, 183978]"
"('Description.java', 'org.junit.runner.Description', 'methodAndClassNamePatternGroupOrDefault', '([\\s\\S]*)\\((.*)\\)', 'testCheckoutTheirs(org.eclipse.jgit.api.PathCheckoutCommandTest)')","[46990, 104514]"
"('Description.java', 'org.junit.runner.Description', 'methodAndClassNamePatternGroupOrDefault', '([\\s\\S]*)\\((.*)\\)', 'testModified(org.eclipse.jgit.lib.IndexDiffTest)')","[20702, 79104]"
"('URIish.java', 'org.eclipse.jgit.transport.URIish', '<init>', '^([a-z][a-z0-9+-]+)://(?:(?:([^/:@]+)(?::([^\\\\/]+))?@)?((?:[^\\\\/:]+)|(?:\\[[0-9a-f:]+\\]))(?::(\\d+))?((?:/~(?:[^\\\\/]+))?[\\\\/]))?(.+)?$', 'https://lusr\\example@[::1]:1234/D:/x')",[148029]
"('Description.java', 'org.junit.runner.Description', 'methodAndClassNamePatternGroupOrDefault', '([\\s\\S]*)\\((.*)\\)', 'testReadString_Len0001(org.eclipse.jgit.transport.PacketLineInTest)')","[3527, 62604]"
"('Description.java', 'org.junit.runner.Description', 'methodAndClassNamePatternGroupOrDefault', '([\\s\\S]*)\\((.*)\\)', 'testFileInFolderUntracked(org.eclipse.jgit.treewalk.filter.IndexDiffFilterTest)')","[30212, 88410]"
"('URIish.java', 'org.eclipse.jgit.transport.URIish', '<init>', '^([a-z][a-z0-9+-]+)://(?:(?:([^/:@]+)(?::([^\\\\/]+))?@)?((?:[^\\\\/:]+)|(?:\\[[0-9a-f:]+\\]))(?::(\\d+))?((?:/~(?:[^\\\\/]+))?[\\\\/]))?(.+)?$', 'http://l usr\\example.com:wtf@example.com:80//abc')",[129767]
"('URIish.java', 'org.eclipse.jgit.transport.URIish', '<init>', '^([a-z][a-z0-9+-]+)://(?:(?:([^/:@]+)(?::([^\\\\/]+))?@)?((?:[^\\\\/:]+)|(?:\\[[0-9a-f:]+\\]))(?::(\\d+))?((?:/~(?:[^\\\\/]+))?[\\\\/]))?(.+)?$', 'ssh://me@1.2.3.4:80/D:/x')",[135701]
"('URIish.java', 'org.eclipse.jgit.transport.URIish', '<init>', '^([a-z][a-z0-9+-]+)://(?:(?:([^/:@]+)(?::([^\\\\/]+))?@)?((?:[^\\\\/:]+)|(?:\\[[0-9a-f:]+\\]))(?::(\\d+))?((?:/~(?:[^\\\\/]+))?[\\\\/]))?(.+)?$', 'http://l usr\\example.com:wtf@[::1]:1234/D:\\x')",[130411]
"('URIish.java', 'org.eclipse.jgit.transport.URIish', '<init>', '^([a-z][a-z0-9+-]+)://(?:(?:([^/:@]+)(?::([^\\\\/]+))?@)?((?:[^\\\\/:]+)|(?:\\[[0-9a-f:]+\\]))(?::(\\d+))?((?:/~(?:[^\\\\/]+))?[\\\\/]))?(.+)?$', 'http://example.com//')","[168177, 168361, 169281, 169465, 170385, 170569]"
"('Description.java', 'org.junit.runner.Description', 'methodAndClassNamePatternGroupOrDefault', '([\\s\\S]*)\\((.*)\\)', 'testUsingUnknownBlobFails(org.eclipse.jgit.transport.ReceivePackAdvertiseRefsHookTest)')","[387, 59414]"
"('Description.java', 'org.junit.runner.Description', 'methodAndClassNamePatternGroupOrDefault', '([\\s\\S]*)\\((.*)\\)', 'testFileInFolderCommittedChangedNotModified(org.eclipse.jgit.treewalk.filter.IndexDiffFilterTest)')","[30716, 88938]"
"('URIish.java', 'org.eclipse.jgit.transport.URIish', '<init>', '^(file):([\\\\/](?![\\\\/])((?:[A-Za-z]:)?[\\\\/]?(?:(?:[^\\\\/]+[\\\\/]+)*[^\\\\/]+[\\\\/]*)))$', 'https://lusr\\example:wtf@[::1]:80/D:\\x')",[134988]
"('Description.java', 'org.junit.runner.Description', 'methodAndClassNamePatternGroupOrDefault', '([\\s\\S]*)\\((.*)\\)', 'testStageNotPossibleWithBranch(org.eclipse.jgit.api.PathCheckoutCommandTest)')","[47032, 104558]"
"('URIish.java', 'org.eclipse.jgit.transport.URIish', '<init>', '^([a-z][a-z0-9+-]+)://(?:(?:([^/:@]+)(?::([^\\\\/]+))?@)?((?:[^\\\\/:]+)|(?:\\[[0-9a-f:]+\\]))(?::(\\d+))?((?:/~(?:[^\\\\/]+))?[\\\\/]))?(.+)?$', 'http://l usr\\example.com@example.com:1234//')",[142785]
"('URIish.java', 'org.eclipse.jgit.transport.URIish', '<init>', '^([a-z][a-z0-9+-]+)://(?:(?:([^/:@]+)(?::([^\\\\/]+))?@)?((?:[^\\\\/:]+)|(?:\\[[0-9a-f:]+\\]))(?::(\\d+))?((?:/~(?:[^\\\\/]+))?[\\\\/]))?(.+)?$', 'ssh+git://me:wtf@[::1]:80/D:\\x')",[126179]
"('Description.java', 'org.junit.runner.Description', 'methodAndClassNamePatternGroupOrDefault', '([\\s\\S]*)\\((.*)\\)', 'test000_openrepo_default_gitDirSet(org.eclipse.jgit.internal.storage.file.T0003_BasicTest)')","[53923, 111180]"
"('URIish.java', 'org.eclipse.jgit.transport.URIish', '<init>', '^(?:([^/:@]+)(?::([^\\\\/]+))?@)?((?:[^\\\\/:]+)|(?:\\[[0-9a-f:]+\\])):((?:(?:/~(?:[^\\\\/]+))[\\\\/])?(?:(?:[^\\\\/]+[\\\\/]+)*[^\\\\/]+[\\\\/]*))$', '/a/b/.git')",[179838]
"('Description.java', 'org.junit.runner.Description', 'methodAndClassNamePatternGroupOrDefault', '([\\s\\S]*)\\((.*)\\)', 'testListAllBranchesShouldNotDie(org.eclipse.jgit.api.BranchCommandTest)')","[47427, 104932]"
"('Description.java', 'org.junit.runner.Description', 'methodAndClassNamePatternGroupOrDefault', '([\\s\\S]*)\\((.*)\\)', 'testContext10(org.eclipse.jgit.diff.DiffFormatterReflowTest)')","[13337, 71866]"
"('Description.java', 'org.junit.runner.Description', 'methodAndClassNamePatternGroupOrDefault', '([\\s\\S]*)\\((.*)\\)', 'test012_SubtreeExternalSorting(org.eclipse.jgit.internal.storage.file.T0003_BasicTest)')","[54322, 111598]"
"('Description.java', 'org.junit.runner.Description', 'methodAndClassNamePatternGroupOrDefault', '([\\s\\S]*)\\((.*)\\)', 'testGetRef_DiscoversModifiedLoose(org.eclipse.jgit.internal.storage.file.RefDirectoryTest)')","[57766, 114788]"
"('Description.java', 'org.junit.runner.Description', 'methodAndClassNamePatternGroupOrDefault', '([\\s\\S]*)\\((.*)\\)', 'testCheckout(org.eclipse.jgit.api.CheckoutCommandTest)')","[42980, 100532]"
"('URIish.java', 'org.eclipse.jgit.transport.URIish', '<init>', '^([a-z][a-z0-9+-]+)://(?:(?:([^/:@]+)(?::([^\\\\/]+))?@)?((?:[^\\\\/:]+)|(?:\\[[0-9a-f:]+\\]))(?::(\\d+))?((?:/~(?:[^\\\\/]+))?[\\\\/]))?(.+)?$', 'ssh+git://me@[::1]//abc')","[152399, 152583]"
"('URIish.java', 'org.eclipse.jgit.transport.URIish', '<init>', '^([a-z][a-z0-9+-]+)://(?:(?:([^/:@]+)(?::([^\\\\/]+))?@)?((?:[^\\\\/:]+)|(?:\\[[0-9a-f:]+\\]))(?::(\\d+))?((?:/~(?:[^\\\\/]+))?[\\\\/]))?(.+)?$', 'ssh://me:wtf@example.com:80//')",[121993]
"('Description.java', 'org.junit.runner.Description', 'methodAndClassNamePatternGroupOrDefault', '([\\s\\S]*)\\((.*)\\)', 'readNamesInSubSectionRecursive(org.eclipse.jgit.lib.ConfigTest)')","[27966, 86276]"
"('URIish.java', 'org.eclipse.jgit.transport.URIish', '<init>', '^(file):([\\\\/](?![\\\\/])((?:[A-Za-z]:)?[\\\\/]?(?:(?:[^\\\\/]+[\\\\/]+)*[^\\\\/]+[\\\\/]*)))$', 'ssh+git://me:wtf@1.2.3.4:80//')",[125650]
"('Description.java', 'org.junit.runner.Description', 'methodAndClassNamePatternGroupOrDefault', '([\\s\\S]*)\\((.*)\\)', 'testWritePack2SizeDeltasVsNoDeltas(org.eclipse.jgit.internal.storage.file.PackWriterTest)')","[55257, 112478]"
"('Description.java', 'org.junit.runner.Description', 'methodAndClassNamePatternGroupOrDefault', '([\\s\\S]*)\\((.*)\\)', 'testLargeTreesWithConflict(org.eclipse.jgit.notes.NoteMapMergerTest)')","[41110, 98772]"
"('Description.java', 'org.junit.runner.Description', 'methodAndClassNamePatternGroupOrDefault', '([\\s\\S]*)\\((.*)\\)', 'testThreadTranslationBundleInheritance(org.eclipse.jgit.nls.NLSTest)')","[305, 59348]"
"('Description.java', 'org.junit.runner.Description', 'methodAndClassNamePatternGroupOrDefault', '([\\s\\S]*)\\((.*)\\)', 'test17_FromString(org.eclipse.jgit.lib.AbbreviatedObjectIdTest)')","[22433, 80798]"
"('Description.java', 'org.junit.runner.Description', 'methodAndClassNamePatternGroupOrDefault', '([\\s\\S]*)\\((.*)\\)', 'testRenameBranchCannotLockAFileHEADisToLockTo(org.eclipse.jgit.internal.storage.file.RefUpdateTest)')","[55772, 112918]"
"('Description.java', 'org.junit.runner.Description', 'methodAndClassNamePatternGroupOrDefault', '([\\s\\S]*)\\((.*)\\)', 'org.eclipse.jgit.ignore.IgnoreNodeTest')","[31607, 186370]"
"('Description.java', 'org.junit.runner.Description', 'methodAndClassNamePatternGroupOrDefault', '([\\s\\S]*)\\((.*)\\)', 'submoduleDirectoryIterator(org.eclipse.jgit.treewalk.FileTreeIteratorTest)')","[29010, 87310]"
"('URIish.java', 'org.eclipse.jgit.transport.URIish', '<init>', '^([a-z][a-z0-9+-]+)://(?:(?:([^/:@]+)(?::([^\\\\/]+))?@)?((?:[^\\\\/:]+)|(?:\\[[0-9a-f:]+\\]))(?::(\\d+))?((?:/~(?:[^\\\\/]+))?[\\\\/]))?(.+)?$', 'ssh+git://me@example.com/D:/x')","[151709, 151893]"
"('URIish.java', 'org.eclipse.jgit.transport.URIish', '<init>', '^([a-z][a-z0-9+-]+)://(?:(?:([^/:@]+)(?::([^\\\\/]+))?@)?((?:[^\\\\/:]+)|(?:\\[[0-9a-f:]+\\]))(?::(\\d+))?((?:/~(?:[^\\\\/]+))?[\\\\/]))?(.+)?$', 'https://me@example.com:80//')",[145177]
"('Description.java', 'org.junit.runner.Description', 'methodAndClassNamePatternGroupOrDefault', '([\\s\\S]*)\\((.*)\\)', 'testBuilder_Set(org.eclipse.jgit.util.RefListTest)')","[35309, 93272]"
"('Description.java', 'org.junit.runner.Description', 'methodAndClassNamePatternGroupOrDefault', '([\\s\\S]*)\\((.*)\\)', 'org.eclipse.jgit.lib.T0002_TreeTest')","[24744, 184329]"
"('URIish.java', 'org.eclipse.jgit.transport.URIish', '<init>', '^([a-z][a-z0-9+-]+)://(?:(?:([^/:@]+)(?::([^\\\\/]+))?@)?((?:[^\\\\/:]+)|(?:\\[[0-9a-f:]+\\]))(?::(\\d+))?((?:/~(?:[^\\\\/]+))?[\\\\/]))?(.+)?$', 'ssh://me:wtf@[::1]:1234//abc')",[122591]
"('Description.java', 'org.junit.runner.Description', 'methodAndClassNamePatternGroupOrDefault', '([\\s\\S]*)\\((.*)\\)', 'testStandardFormat_InvalidType(org.eclipse.jgit.internal.storage.file.UnpackedObjectTest)')","[56625, 113732]"
"('Description.java', 'org.junit.runner.Description', 'methodAndClassNamePatternGroupOrDefault', '([\\s\\S]*)\\((.*)\\)', 'testURIEncode_00(org.eclipse.jgit.transport.URIishTest)')","[1412, 60448]"
"('URIish.java', 'org.eclipse.jgit.transport.URIish', '<init>', '^(file):([\\\\/](?![\\\\/])((?:[A-Za-z]:)?[\\\\/]?(?:(?:[^\\\\/]+[\\\\/]+)*[^\\\\/]+[\\\\/]*)))$', 'https://me:wtf@example.com:80//')",[131906]
"('URIish.java', 'org.eclipse.jgit.transport.URIish', '<init>', '^(file):([\\\\/](?![\\\\/])((?:[A-Za-z]:)?[\\\\/]?(?:(?:[^\\\\/]+[\\\\/]+)*[^\\\\/]+[\\\\/]*)))$', 'ssh://l usr\\example.com@[::1]:1234//')",[136874]
"('Description.java', 'org.junit.runner.Description', 'methodAndClassNamePatternGroupOrDefault', '([\\s\\S]*)\\((.*)\\)', 'testAlias_PreferredAuthentications(org.eclipse.jgit.transport.OpenSshConfigTest)')","[2544, 61614]"
"('Description.java', 'org.junit.runner.Description', 'methodAndClassNamePatternGroupOrDefault', '([\\s\\S]*)\\((.*)\\)', 'testOnlyOption_f1_2_f2_14_b(org.eclipse.jgit.api.CommitOnlyTest)')","[49410, 106890]"
"('URIish.java', 'org.eclipse.jgit.transport.URIish', '<init>', '^(file):([\\\\/](?![\\\\/])((?:[A-Za-z]:)?[\\\\/]?(?:(?:[^\\\\/]+[\\\\/]+)*[^\\\\/]+[\\\\/]*)))$', 'file:/tmp/jgit_test_1158868256880953365_tmp/tmp_1703886128869362682/.git/')",[196508]
"('Description.java', 'org.junit.runner.Description', 'methodAndClassNamePatternGroupOrDefault', '([\\s\\S]*)\\((.*)\\)', 'testReadOneLine(org.eclipse.jgit.internal.storage.file.ReflogReaderTest)')","[59003, 116064]"
"('URIish.java', 'org.eclipse.jgit.transport.URIish', '<init>', '^([a-z][a-z0-9+-]+)://(?:(?:([^/:@]+)(?::([^\\\\/]+))?@)?((?:[^\\\\/:]+)|(?:\\[[0-9a-f:]+\\]))(?::(\\d+))?((?:/~(?:[^\\\\/]+))?[\\\\/]))?(.+)?$', 'https://lusr\\example:wtf@example.com:1234/D:\\x')",[134091]
"('URIish.java', 'org.eclipse.jgit.transport.URIish', '<init>', '^([a-z][a-z0-9+-]+)://(?:(?:([^/:@]+)(?::([^\\\\/]+))?@)?((?:[^\\\\/:]+)|(?:\\[[0-9a-f:]+\\]))(?::(\\d+))?((?:/~(?:[^\\\\/]+))?[\\\\/]))?(.+)?$', 'http://lusr\\example:wtf@example.com:1234/D:/x')",[130733]
"('Description.java', 'org.junit.runner.Description', 'methodAndClassNamePatternGroupOrDefault', '([\\s\\S]*)\\((.*)\\)', 'iso(org.eclipse.jgit.util.GitDateParserTest)')","[36265, 94174]"
"('URIish.java', 'org.eclipse.jgit.transport.URIish', '<init>', '^(file):([\\\\/](?![\\\\/])((?:[A-Za-z]:)?[\\\\/]?(?:(?:[^\\\\/]+[\\\\/]+)*[^\\\\/]+[\\\\/]*)))$', 'ssh://l usr\\example.com@1.2.3.4:1234//abc')",[136552]
"('Description.java', 'org.junit.runner.Description', 'methodAndClassNamePatternGroupOrDefault', '([\\s\\S]*)\\((.*)\\)', 'testPeelCommit(org.eclipse.jgit.internal.storage.file.RefDirectoryTest)')","[58081, 115118]"
"('Description.java', 'org.junit.runner.Description', 'methodAndClassNamePatternGroupOrDefault', '([\\s\\S]*)\\((.*)\\)', 'testReadACK_ERR(org.eclipse.jgit.transport.PacketLineInTest)')","[3737, 62824]"
"('Description.java', 'org.junit.runner.Description', 'methodAndClassNamePatternGroupOrDefault', '([\\s\\S]*)\\((.*)\\)', 'testOnlyOption_f1_1_f2_14_c(org.eclipse.jgit.api.CommitOnlyTest)')","[50271, 107792]"
"('Description.java', 'org.junit.runner.Description', 'methodAndClassNamePatternGroupOrDefault', '([\\s\\S]*)\\((.*)\\)', 'testReadBoolean_YesNo2(org.eclipse.jgit.lib.ConfigTest)')","[27903, 86210]"
"('Description.java', 'org.junit.runner.Description', 'methodAndClassNamePatternGroupOrDefault', '([\\s\\S]*)\\((.*)\\)', 'testCheckoutOutChanges(org.eclipse.jgit.lib.DirCacheCheckoutTest)')","[23164, 81524]"
"('URIish.java', 'org.eclipse.jgit.transport.URIish', '<init>', '^(file):([\\\\/](?![\\\\/])((?:[A-Za-z]:)?[\\\\/]?(?:(?:[^\\\\/]+[\\\\/]+)*[^\\\\/]+[\\\\/]*)))$', 'http://l usr\\example.com@1.2.3.4:1234/D:\\x')",[143268]
"('Description.java', 'org.junit.runner.Description', 'methodAndClassNamePatternGroupOrDefault', '([\\s\\S]*)\\((.*)\\)', 'testReadACK_ACKcontinue1(org.eclipse.jgit.transport.PacketLineInTest)')","[3506, 62582]"
"('Description.java', 'org.junit.runner.Description', 'methodAndClassNamePatternGroupOrDefault', '([\\s\\S]*)\\((.*)\\)', 'testLowerGroupCase3(org.eclipse.jgit.fnmatch.FileNameMatcherTest)')","[16942, 75364]"
"('Description.java', 'org.junit.runner.Description', 'methodAndClassNamePatternGroupOrDefault', '([\\s\\S]*)\\((.*)\\)', 'lightweightTag_objectNotPruned(org.eclipse.jgit.internal.storage.file.GcTagTest)')","[57560, 114612]"
"('URIish.java', 'org.eclipse.jgit.transport.URIish', '<init>', '^([a-z][a-z0-9+-]+)://(?:(?:([^/:@]+)(?::([^\\\\/]+))?@)?((?:[^\\\\/:]+)|(?:\\[[0-9a-f:]+\\]))(?::(\\d+))?((?:/~(?:[^\\\\/]+))?[\\\\/]))?(.+)?$', 'http://l usr\\example.com@1.2.3.4:1234/D:/x')",[143245]
"('URIish.java', 'org.eclipse.jgit.transport.URIish', '<init>', '^([a-z][a-z0-9+-]+)://(?:(?:([^/:@]+)(?::([^\\\\/]+))?@)?((?:[^\\\\/:]+)|(?:\\[[0-9a-f:]+\\]))(?::(\\d+))?((?:/~(?:[^\\\\/]+))?[\\\\/]))?(.+)?$', 'https://l usr\\example.com@[::1]/D:\\x')","[160219, 160403]"
"('URIish.java', 'org.eclipse.jgit.transport.URIish', '<init>', '^(file):([\\\\/](?![\\\\/])((?:[A-Za-z]:)?[\\\\/]?(?:(?:[^\\\\/]+[\\\\/]+)*[^\\\\/]+[\\\\/]*)))$', 'ssh://l usr\\example.com:wtf@[::1]:80/D:\\x')",[123948]
"('URIish.java', 'org.eclipse.jgit.transport.URIish', '<init>', '^(?:([^/:@]+)(?::([^\\\\/]+))?@)?([^\\\\/:]{2,}):([\\\\/](?:(?:[^\\\\/]+[\\\\/]+)*[^\\\\/]+[\\\\/]*))$', '/abc/.git')",[176825]
"('Description.java', 'org.junit.runner.Description', 'methodAndClassNamePatternGroupOrDefault', '([\\s\\S]*)\\((.*)\\)', 'testExceedsChainLength_DuringScanOfA(org.eclipse.jgit.diff.HistogramDiffTest)')","[15100, 73494]"
"('Description.java', 'org.junit.runner.Description', 'methodAndClassNamePatternGroupOrDefault', '([\\s\\S]*)\\((.*)\\)', 'org.eclipse.jgit.transport.PacketLineInTest')","[3338, 180153]"
"('URIish.java', 'org.eclipse.jgit.transport.URIish', '<init>', '^(file):([\\\\/](?![\\\\/])((?:[A-Za-z]:)?[\\\\/]?(?:(?:[^\\\\/]+[\\\\/]+)*[^\\\\/]+[\\\\/]*)))$', 'http://lusr\\example:wtf@example.com:1234/D:\\x')",[130756]
"('Description.java', 'org.junit.runner.Description', 'methodAndClassNamePatternGroupOrDefault', '([\\s\\S]*)\\((.*)\\)', 'testEditDeleteConflict(org.eclipse.jgit.notes.NoteMapMergerTest)')","[41089, 98750]"
"('Description.java', 'org.junit.runner.Description', 'methodAndClassNamePatternGroupOrDefault', '([\\s\\S]*)\\((.*)\\)', 'whileRefLockedRefNotPackedNoError(org.eclipse.jgit.internal.storage.file.GcPackRefsTest)')","[55358, 112544]"
"('URIish.java', 'org.eclipse.jgit.transport.URIish', '<init>', '^([a-z][a-z0-9+-]+)://(?:(?:([^/:@]+)(?::([^\\\\/]+))?@)?((?:[^\\\\/:]+)|(?:\\[[0-9a-f:]+\\]))(?::(\\d+))?((?:/~(?:[^\\\\/]+))?[\\\\/]))?(.+)?$', 'ssh+git://l usr\\example.com@1.2.3.4//abc')","[153135, 153319]"
"('URIish.java', 'org.eclipse.jgit.transport.URIish', '<init>', '^(file):([\\\\/](?![\\\\/])((?:[A-Za-z]:)?[\\\\/]?(?:(?:[^\\\\/]+[\\\\/]+)*[^\\\\/]+[\\\\/]*)))$', 'ssh://me:wtf@[::1]:80/D:/x')",[122798]
"('Description.java', 'org.junit.runner.Description', 'methodAndClassNamePatternGroupOrDefault', '([\\s\\S]*)\\((.*)\\)', 'testGetRefs_DiscoversDeletedLoose3(org.eclipse.jgit.internal.storage.file.RefDirectoryTest)')","[58669, 115734]"
"('Description.java', 'org.junit.runner.Description', 'methodAndClassNamePatternGroupOrDefault', '([\\s\\S]*)\\((.*)\\)', 'testClear(org.eclipse.jgit.revwalk.AlwaysEmptyRevQueueTest)')","[8036, 66850]"
"('Description.java', 'org.junit.runner.Description', 'methodAndClassNamePatternGroupOrDefault', '([\\s\\S]*)\\((.*)\\)', 'testForbiddenWindowsNamesOnUnixEgCon(org.eclipse.jgit.lib.DirCacheCheckoutMaliciousPathTest)')","[21622, 80028]"
"('Description.java', 'org.junit.runner.Description', 'methodAndClassNamePatternGroupOrDefault', '([\\s\\S]*)\\((.*)\\)', 'testEscapedBackslash(org.eclipse.jgit.fnmatch.FileNameMatcherTest)')","[17908, 76376]"
"('Description.java', 'org.junit.runner.Description', 'methodAndClassNamePatternGroupOrDefault', '([\\s\\S]*)\\((.*)\\)', 'logAllCommitsWithTag(org.eclipse.jgit.api.LogCommandTest)')","[47677, 105174]"
"('Description.java', 'org.junit.runner.Description', 'methodAndClassNamePatternGroupOrDefault', '([\\s\\S]*)\\((.*)\\)', 'testPathsReset(org.eclipse.jgit.api.ResetCommandTest)')","[42732, 100312]"
"('Description.java', 'org.junit.runner.Description', 'methodAndClassNamePatternGroupOrDefault', '([\\s\\S]*)\\((.*)\\)', 'testSkipRevFilterNegative(org.eclipse.jgit.revwalk.SkipRevFilterTest)')","[7809, 66652]"
"('URIish.java', 'org.eclipse.jgit.transport.URIish', '<init>', '^(file):([\\\\/](?![\\\\/])((?:[A-Za-z]:)?[\\\\/]?(?:(?:[^\\\\/]+[\\\\/]+)*[^\\\\/]+[\\\\/]*)))$', 'ssh://l usr\\example.com@example.com:1234//abc')",[136184]
"('Description.java', 'org.junit.runner.Description', 'methodAndClassNamePatternGroupOrDefault', '([\\s\\S]*)\\((.*)\\)', 'test002_WriteEmptyTree2(org.eclipse.jgit.internal.storage.file.T0003_BasicTest)')","[53944, 111202]"
"('Description.java', 'org.junit.runner.Description', 'methodAndClassNamePatternGroupOrDefault', '([\\s\\S]*)\\((.*)\\)', 'org.eclipse.jgit.lib.ValidRefNameTest')","[24103, 184194]"
"('URIish.java', 'org.eclipse.jgit.transport.URIish', '<init>', '^(file):([\\\\/](?![\\\\/])((?:[A-Za-z]:)?[\\\\/]?(?:(?:[^\\\\/]+[\\\\/]+)*[^\\\\/]+[\\\\/]*)))$', 'ssh+git://lusr\\example@1.2.3.4//')","[154170, 154354]"
"('Description.java', 'org.junit.runner.Description', 'methodAndClassNamePatternGroupOrDefault', '([\\s\\S]*)\\((.*)\\)', 'testCreateFromLightweightTag(org.eclipse.jgit.api.BranchCommandTest)')","[47259, 104756]"
"('URIish.java', 'org.eclipse.jgit.transport.URIish', '<init>', '^([a-z][a-z0-9+-]+)://(?:(?:([^/:@]+)(?::([^\\\\/]+))?@)?((?:[^\\\\/:]+)|(?:\\[[0-9a-f:]+\\]))(?::(\\d+))?((?:/~(?:[^\\\\/]+))?[\\\\/]))?(.+)?$', 'http://lusr\\example@example.com//')","[157137, 157321]"
"('Description.java', 'org.junit.runner.Description', 'methodAndClassNamePatternGroupOrDefault', '([\\s\\S]*)\\((.*)\\)', 'testEmpty(org.eclipse.jgit.revwalk.DateRevQueueTest)')","[7891, 66718]"
"('Description.java', 'org.junit.runner.Description', 'methodAndClassNamePatternGroupOrDefault', '([\\s\\S]*)\\((.*)\\)', 'testParse_ShortLineOnlyNoLF(org.eclipse.jgit.revwalk.RevCommitParseTest)')","[8847, 67620]"
"('Description.java', 'org.junit.runner.Description', 'methodAndClassNamePatternGroupOrDefault', '([\\s\\S]*)\\((.*)\\)', 'org.eclipse.jgit.merge.ResolveMergerTest')","[10406, 181892]"
"('Description.java', 'org.junit.runner.Description', 'methodAndClassNamePatternGroupOrDefault', '([\\s\\S]*)\\((.*)\\)', 'testAddExistingSingleFile(org.eclipse.jgit.api.AddCommandTest)')","[50752, 108276]"
"('Description.java', 'org.junit.runner.Description', 'methodAndClassNamePatternGroupOrDefault', '([\\s\\S]*)\\((.*)\\)', 'testGetRefs_DiscoversDeletedLoose5(org.eclipse.jgit.internal.storage.file.RefDirectoryTest)')","[58711, 115778]"
"('Description.java', 'org.junit.runner.Description', 'methodAndClassNamePatternGroupOrDefault', '([\\s\\S]*)\\((.*)\\)', 'testParsePersonIdent_incompleteCases(org.eclipse.jgit.util.RawParseUtils_ParsePersonIdentTest)')","[31960, 90082]"
"('URIish.java', 'org.eclipse.jgit.transport.URIish', '<init>', '^(file):([\\\\/](?![\\\\/])((?:[A-Za-z]:)?[\\\\/]?(?:(?:[^\\\\/]+[\\\\/]+)*[^\\\\/]+[\\\\/]*)))$', 'file:///tmp/jgit_test_7050186990821048098_tmp/tmp_86111976323420650/.git/')",[201784]
"('Description.java', 'org.junit.runner.Description', 'methodAndClassNamePatternGroupOrDefault', '([\\s\\S]*)\\((.*)\\)', 'testAlnumGroupCase0(org.eclipse.jgit.fnmatch.FileNameMatcherTest)')","[18979, 77498]"
"('URIish.java', 'org.eclipse.jgit.transport.URIish', '<init>', '^(?:([^/:@]+)(?::([^\\\\/]+))?@)?((?:[^\\\\/:]+)|(?:\\[[0-9a-f:]+\\])):((?:(?:/~(?:[^\\\\/]+))[\\\\/])?(?:(?:[^\\\\/]+[\\\\/]+)*[^\\\\/]+[\\\\/]*))$', '/tmp/jgit_test_5706102738936117736_tmp/tmp_5370206506562001691')","[201385, 201520, 201668]"
"('Description.java', 'org.junit.runner.Description', 'methodAndClassNamePatternGroupOrDefault', '([\\s\\S]*)\\((.*)\\)', 'testPunctGroupCase0(org.eclipse.jgit.fnmatch.FileNameMatcherTest)')","[17929, 76398]"
"('Description.java', 'org.junit.runner.Description', 'methodAndClassNamePatternGroupOrDefault', '([\\s\\S]*)\\((.*)\\)', 'testEncodeInt16(org.eclipse.jgit.util.NBTest)')","[37473, 95340]"
"('Description.java', 'org.junit.runner.Description', 'methodAndClassNamePatternGroupOrDefault', '([\\s\\S]*)\\((.*)\\)', 'testSuccessfulMergeFailsDueToDirtyIndex(org.eclipse.jgit.api.MergeCommandTest)')","[44215, 101786]"
"('URIish.java', 'org.eclipse.jgit.transport.URIish', '<init>', '^(file):([\\\\/](?![\\\\/])((?:[A-Za-z]:)?[\\\\/]?(?:(?:[^\\\\/]+[\\\\/]+)*[^\\\\/]+[\\\\/]*)))$', 'ssh+git://lusr\\example:wtf@example.com:1234/D:/x')",[127398]
"('URIish.java', 'org.eclipse.jgit.transport.URIish', '<init>', '^(file):([\\\\/](?![\\\\/])((?:[A-Za-z]:)?[\\\\/]?(?:(?:[^\\\\/]+[\\\\/]+)*[^\\\\/]+[\\\\/]*)))$', 'http://me@1.2.3.4:80/D:\\x')",[142348]
"('Description.java', 'org.junit.runner.Description', 'methodAndClassNamePatternGroupOrDefault', '([\\s\\S]*)\\((.*)\\)', 'testRemoveMakesEmpty(org.eclipse.jgit.notes.LeafBucketTest)')","[40423, 98112]"
"('Description.java', 'org.junit.runner.Description', 'methodAndClassNamePatternGroupOrDefault', '([\\s\\S]*)\\((.*)\\)', 'testRevertDirtyIndex(org.eclipse.jgit.api.RevertCommandTest)')","[47925, 105394]"
"('URIish.java', 'org.eclipse.jgit.transport.URIish', '<init>', '^(file):([\\\\/](?![\\\\/])((?:[A-Za-z]:)?[\\\\/]?(?:(?:[^\\\\/]+[\\\\/]+)*[^\\\\/]+[\\\\/]*)))$', 'file:///tmp/jgit_test_608173029420979911_tmp/tmp_6831999805564900122/.git/')",[196708]
"('URIish.java', 'org.eclipse.jgit.transport.URIish', '<init>', '^([a-z][a-z0-9+-]+)://(?:(?:([^/:@]+)(?::([^\\\\/]+))?@)?((?:[^\\\\/:]+)|(?:\\[[0-9a-f:]+\\]))(?::(\\d+))?((?:/~(?:[^\\\\/]+))?[\\\\/]))?(.+)?$', 'ssh://l usr\\example.com@1.2.3.4:80/D:/x')",[136805]
"('Description.java', 'org.junit.runner.Description', 'methodAndClassNamePatternGroupOrDefault', '([\\s\\S]*)\\((.*)\\)', 'org.eclipse.jgit.internal.storage.file.GcDirCacheSavesObjectsTest')","[56482, 210110]"
"('URIish.java', 'org.eclipse.jgit.transport.URIish', '<init>', '^(file):([\\\\/](?![\\\\/])((?:[A-Za-z]:)?[\\\\/]?(?:(?:[^\\\\/]+[\\\\/]+)*[^\\\\/]+[\\\\/]*)))$', 'ssh+git://l usr\\example.com@[::1]//abc')","[153480, 153664]"
"('URIish.java', 'org.eclipse.jgit.transport.URIish', '<init>', '^([a-z][a-z0-9+-]+)://(?:(?:([^/:@]+)(?::([^\\\\/]+))?@)?((?:[^\\\\/:]+)|(?:\\[[0-9a-f:]+\\]))(?::(\\d+))?((?:/~(?:[^\\\\/]+))?[\\\\/]))?(.+)?$', 'file:///tmp/jgit_test_3938080632504476553_tmp/tmp_4523598312582749123/.git/')",[197035]
"('URIish.java', 'org.eclipse.jgit.transport.URIish', '<init>', '^(file):([\\\\/](?![\\\\/])((?:[A-Za-z]:)?[\\\\/]?(?:(?:[^\\\\/]+[\\\\/]+)*[^\\\\/]+[\\\\/]*)))$', 'ssh+git://me:wtf@[::1]:1234//abc')",[125880]
"('ChangeIdUtil.java', 'org.eclipse.jgit.util.ChangeIdUtil', 'indexOfFirstFooterLine', '(^[a-zA-Z0-9-]+:(?!//).*$)', 'Bug: 33')","[187361, 189260, 191698, 191905, 192161]"
"('Description.java', 'org.junit.runner.Description', 'methodAndClassNamePatternGroupOrDefault', '([\\s\\S]*)\\((.*)\\)', 'testResetDoesNotAffectPostOrder(org.eclipse.jgit.treewalk.PostOrderTreeWalkTest)')","[29548, 87794]"
"('Description.java', 'org.junit.runner.Description', 'methodAndClassNamePatternGroupOrDefault', '([\\s\\S]*)\\((.*)\\)', 'testFilePathCase3(org.eclipse.jgit.fnmatch.FileNameMatcherTest)')","[18076, 76552]"
"('Description.java', 'org.junit.runner.Description', 'methodAndClassNamePatternGroupOrDefault', '([\\s\\S]*)\\((.*)\\)', 'testSaveRemoveFirstURI(org.eclipse.jgit.transport.RemoteConfigTest)')","[826, 59854]"
"('Description.java', 'org.junit.runner.Description', 'methodAndClassNamePatternGroupOrDefault', '([\\s\\S]*)\\((.*)\\)', 'testContext100(org.eclipse.jgit.diff.DiffFormatterReflowTest)')","[13232, 71756]"
"('Description.java', 'org.junit.runner.Description', 'methodAndClassNamePatternGroupOrDefault', '([\\s\\S]*)\\((.*)\\)', 'testNotBare_CreateRepositoryFromWorkDirOnly(org.eclipse.jgit.internal.storage.file.RepositorySetupWorkDirTest)')","[57022, 114128]"
"('URIish.java', 'org.eclipse.jgit.transport.URIish', '<init>', '^(file):([\\\\/](?![\\\\/])((?:[A-Za-z]:)?[\\\\/]?(?:(?:[^\\\\/]+[\\\\/]+)*[^\\\\/]+[\\\\/]*)))$', 'ssh+git://l usr\\example.com:wtf@1.2.3.4:1234//abc')",[126616]
"('URIish.java', 'org.eclipse.jgit.transport.URIish', '<init>', '^([a-z][a-z0-9+-]+)://(?:(?:([^/:@]+)(?::([^\\\\/]+))?@)?((?:[^\\\\/:]+)|(?:\\[[0-9a-f:]+\\]))(?::(\\d+))?((?:/~(?:[^\\\\/]+))?[\\\\/]))?(.+)?$', 'https://lusr\\example@[::1]:1234/D:\\x')",[148075]
"('URIish.java', 'org.eclipse.jgit.transport.URIish', '<init>', '^(?:([^/:@]+)(?::([^\\\\/]+))?@)?((?:[^\\\\/:]+)|(?:\\[[0-9a-f:]+\\])):((?:(?:/~(?:[^\\\\/]+))[\\\\/])?(?:(?:[^\\\\/]+[\\\\/]+)*[^\\\\/]+[\\\\/]*))$', 'user@repo.or.cz:/srv/git/egit.git')",[120588]
"('Description.java', 'org.junit.runner.Description', 'methodAndClassNamePatternGroupOrDefault', '([\\s\\S]*)\\((.*)\\)', 'testAuthorScriptConverter(org.eclipse.jgit.api.RebaseCommandTest)')","[45696, 103238]"
"('Description.java', 'org.junit.runner.Description', 'methodAndClassNamePatternGroupOrDefault', '([\\s\\S]*)\\((.*)\\)', 'testValidTreeSorting7(org.eclipse.jgit.lib.ObjectCheckerTest)')","[25853, 84142]"
"('Description.java', 'org.junit.runner.Description', 'methodAndClassNamePatternGroupOrDefault', '([\\s\\S]*)\\((.*)\\)', 'testInvalidTreeModeMissingName(org.eclipse.jgit.lib.ObjectCheckerTest)')","[26861, 85198]"
"('Description.java', 'org.junit.runner.Description', 'methodAndClassNamePatternGroupOrDefault', '([\\s\\S]*)\\((.*)\\)', 'testCreateAndList(org.eclipse.jgit.api.BranchCommandTest)')","[47364, 104866]"
"('Description.java', 'org.junit.runner.Description', 'methodAndClassNamePatternGroupOrDefault', '([\\s\\S]*)\\((.*)\\)', 'testOnlyOption_f1_2_f2_14_c(org.eclipse.jgit.api.CommitOnlyTest)')","[49431, 106912]"
"('URIish.java', 'org.eclipse.jgit.transport.URIish', '<init>', '^(file):([\\\\/](?![\\\\/])((?:[A-Za-z]:)?[\\\\/]?(?:(?:[^\\\\/]+[\\\\/]+)*[^\\\\/]+[\\\\/]*)))$', 'ssh://[::1]/D:/x')","[162358, 162542, 163462, 163646, 164566, 164750]"
"('URIish.java', 'org.eclipse.jgit.transport.URIish', '<init>', '^(file):([\\\\/](?![\\\\/])((?:[A-Za-z]:)?[\\\\/]?(?:(?:[^\\\\/]+[\\\\/]+)*[^\\\\/]+[\\\\/]*)))$', 'ssh://l usr\\example.com@[::1]:80/D:/x')",[137150]
"('Description.java', 'org.junit.runner.Description', 'methodAndClassNamePatternGroupOrDefault', '([\\s\\S]*)\\((.*)\\)', 'resolveSameLevelRelativeUrl(org.eclipse.jgit.submodule.SubmoduleInitTest)')","[19481, 78004]"
"('URIish.java', 'org.eclipse.jgit.transport.URIish', '<init>', '^([a-z][a-z0-9+-]+)://(?:(?:([^/:@]+)(?::([^\\\\/]+))?@)?((?:[^\\\\/:]+)|(?:\\[[0-9a-f:]+\\]))(?::(\\d+))?((?:/~(?:[^\\\\/]+))?[\\\\/]))?(.+)?$', 'http://lusr\\example@example.com:1234//abc')",[143935]
"('URIish.java', 'org.eclipse.jgit.transport.URIish', '<init>', '^(file):([\\\\/](?![\\\\/])((?:[A-Za-z]:)?[\\\\/]?(?:(?:[^\\\\/]+[\\\\/]+)*[^\\\\/]+[\\\\/]*)))$', 'https://example.com/D:/x')","[171558, 171742, 172662, 172846, 173766, 173950]"
"('Description.java', 'org.junit.runner.Description', 'methodAndClassNamePatternGroupOrDefault', '([\\s\\S]*)\\((.*)\\)', 'testToString_WithPrefix(org.eclipse.jgit.util.RefMapTest)')","[37055, 94922]"
"('URIish.java', 'org.eclipse.jgit.transport.URIish', '<init>', '^(file):([\\\\/](?![\\\\/])((?:[A-Za-z]:)?[\\\\/]?(?:(?:[^\\\\/]+[\\\\/]+)*[^\\\\/]+[\\\\/]*)))$', 'file:///tmp/jgit_test_2508525924116804520_tmp/tmp_206281197134566940/.git/')",[182969]
"('URIish.java', 'org.eclipse.jgit.transport.URIish', '<init>', '^(file):([\\\\/](?![\\\\/])((?:[A-Za-z]:)?[\\\\/]?(?:(?:[^\\\\/]+[\\\\/]+)*[^\\\\/]+[\\\\/]*)))$', 'https://lusr\\example@[::1]//abc')","[161208, 161392]"
"('URIish.java', 'org.eclipse.jgit.transport.URIish', '<init>', '^(file):([\\\\/](?![\\\\/])((?:[A-Za-z]:)?[\\\\/]?(?:(?:[^\\\\/]+[\\\\/]+)*[^\\\\/]+[\\\\/]*)))$', 'ssh://DOMAIN\\user:pass@example.com:33/some/p ath')","[175905, 175951]"
"('URIish.java', 'org.eclipse.jgit.transport.URIish', '<init>', '^(file):([\\\\/](?![\\\\/])((?:[A-Za-z]:)?[\\\\/]?(?:(?:[^\\\\/]+[\\\\/]+)*[^\\\\/]+[\\\\/]*)))$', 'ssh+git://me@1.2.3.4:80//')",[138898]
"('URIish.java', 'org.eclipse.jgit.transport.URIish', '<init>', '^(file):([\\\\/](?![\\\\/])((?:[A-Za-z]:)?[\\\\/]?(?:(?:[^\\\\/]+[\\\\/]+)*[^\\\\/]+[\\\\/]*)))$', 'ssh+git://l usr\\example.com:wtf@[::1]:1234//')",[126938]
"('URIish.java', 'org.eclipse.jgit.transport.URIish', '<init>', '^([a-z][a-z0-9+-]+)://(?:(?:([^/:@]+)(?::([^\\\\/]+))?@)?((?:[^\\\\/:]+)|(?:\\[[0-9a-f:]+\\]))(?::(\\d+))?((?:/~(?:[^\\\\/]+))?[\\\\/]))?(.+)?$', 'http://me@example.com:80//abc')",[141911]
"('URIish.java', 'org.eclipse.jgit.transport.URIish', '<init>', '^(file):([\\\\/](?![\\\\/])((?:[A-Za-z]:)?[\\\\/]?(?:(?:[^\\\\/]+[\\\\/]+)*[^\\\\/]+[\\\\/]*)))$', 'https://example.com//')","[171466, 171650, 172570, 172754, 173674, 173858]"
"('URIish.java', 'org.eclipse.jgit.transport.URIish', '<init>', '^(file):([\\\\/](?![\\\\/])((?:[A-Za-z]:)?[\\\\/]?(?:(?:[^\\\\/]+[\\\\/]+)*[^\\\\/]+[\\\\/]*)))$', 'ssh://1.2.3.4//')","[161898, 162082, 163002, 163186, 164106, 164290]"
"('Description.java', 'org.junit.runner.Description', 'methodAndClassNamePatternGroupOrDefault', '([\\s\\S]*)\\((.*)\\)', 'testRead(org.eclipse.jgit.internal.storage.dfs.DfsOutputStreamTest)')","[52433, 109838]"
"('Description.java', 'org.junit.runner.Description', 'methodAndClassNamePatternGroupOrDefault', '([\\s\\S]*)\\((.*)\\)', 'testNonNotesWithNonNoteConflict(org.eclipse.jgit.notes.NoteMapMergerTest)')","[41005, 98662]"
"('Description.java', 'org.junit.runner.Description', 'methodAndClassNamePatternGroupOrDefault', '([\\s\\S]*)\\((.*)\\)', 'testWrite_CH_DATA(org.eclipse.jgit.transport.SideBandOutputStreamTest)')","[4504, 63528]"
"('Description.java', 'org.junit.runner.Description', 'methodAndClassNamePatternGroupOrDefault', '([\\s\\S]*)\\((.*)\\)', 'testPushWithoutPushRefSpec(org.eclipse.jgit.api.PushCommandTest)')","[42129, 99740]"
"('Description.java', 'org.junit.runner.Description', 'methodAndClassNamePatternGroupOrDefault', '([\\s\\S]*)\\((.*)\\)', 'testForbiddenNamesOnWindowsEgCon1(org.eclipse.jgit.lib.DirCacheCheckoutMaliciousPathTest)')","[21454, 79852]"
"('Description.java', 'org.junit.runner.Description', 'methodAndClassNamePatternGroupOrDefault', '([\\s\\S]*)\\((.*)\\)', 'testRepositoryStateChecks(org.eclipse.jgit.api.RebaseCommandTest)')","[45486, 103018]"
"('Description.java', 'org.junit.runner.Description', 'methodAndClassNamePatternGroupOrDefault', '([\\s\\S]*)\\((.*)\\)', 'test000_sort_05(org.eclipse.jgit.lib.T0002_TreeTest)')","[24975, 83262]"
"('URIish.java', 'org.eclipse.jgit.transport.URIish', '<init>', '^([a-z][a-z0-9+-]+)://(?:(?:([^/:@]+)(?::([^\\\\/]+))?@)?((?:[^\\\\/:]+)|(?:\\[[0-9a-f:]+\\]))(?::(\\d+))?((?:/~(?:[^\\\\/]+))?[\\\\/]))?(.+)?$', 'https://l usr\\example.com:wtf@1.2.3.4:1234/D:/x')",[133309]
"('URIish.java', 'org.eclipse.jgit.transport.URIish', '<init>', '^(file):([\\\\/](?![\\\\/])((?:[A-Za-z]:)?[\\\\/]?(?:(?:[^\\\\/]+[\\\\/]+)*[^\\\\/]+[\\\\/]*)))$', 'ssh://lusr\\example@1.2.3.4:80/D:/x')",[137886]
"('URIish.java', 'org.eclipse.jgit.transport.URIish', '<init>', '^(file):([\\\\/](?![\\\\/])((?:[A-Za-z]:)?[\\\\/]?(?:(?:[^\\\\/]+[\\\\/]+)*[^\\\\/]+[\\\\/]*)))$', 'ssh://me:wtf@1.2.3.4:80//')",[122338]
"('URIish.java', 'org.eclipse.jgit.transport.URIish', '<init>', '^([a-z][a-z0-9+-]+)://(?:(?:([^/:@]+)(?::([^\\\\/]+))?@)?((?:[^\\\\/:]+)|(?:\\[[0-9a-f:]+\\]))(?::(\\d+))?((?:/~(?:[^\\\\/]+))?[\\\\/]))?(.+)?$', 'http://lusr\\example@[::1]//')","[157873, 158057]"
"('ChangeIdUtil.java', 'org.eclipse.jgit.util.ChangeIdUtil', 'indexOfFirstFooterLine', '(^[a-zA-Z0-9-]+:(?!//).*$)', 'https://example.com/ fixes this')",[190316]
"('URIish.java', 'org.eclipse.jgit.transport.URIish', '<init>', '^(file):([\\\\/](?![\\\\/])((?:[A-Za-z]:)?[\\\\/]?(?:(?:[^\\\\/]+[\\\\/]+)*[^\\\\/]+[\\\\/]*)))$', 'ssh+git://lusr\\example@1.2.3.4:1234/D:/x')",[141014]
"('Description.java', 'org.junit.runner.Description', 'methodAndClassNamePatternGroupOrDefault', '([\\s\\S]*)\\((.*)\\)', 'shouldRaiseErrorOnNullURI(org.eclipse.jgit.transport.URIishTest)')","[1160, 60184]"
"('Description.java', 'org.junit.runner.Description', 'methodAndClassNamePatternGroupOrDefault', '([\\s\\S]*)\\((.*)\\)', 'testExtendB(org.eclipse.jgit.diff.EditTest)')","[15810, 74198]"
"('Description.java', 'org.junit.runner.Description', 'methodAndClassNamePatternGroupOrDefault', '([\\s\\S]*)\\((.*)\\)', 'testRegularCommit(org.eclipse.jgit.util.ChangeIdUtilTest)')","[38141, 96000]"
"('URIish.java', 'org.eclipse.jgit.transport.URIish', '<init>', '^([a-z][a-z0-9+-]+)://(?:(?:([^/:@]+)(?::([^\\\\/]+))?@)?((?:[^\\\\/:]+)|(?:\\[[0-9a-f:]+\\]))(?::(\\d+))?((?:/~(?:[^\\\\/]+))?[\\\\/]))?(.+)?$', 'http://me@1.2.3.4/D:/x')","[155389, 155573]"
"('Description.java', 'org.junit.runner.Description', 'methodAndClassNamePatternGroupOrDefault', '([\\s\\S]*)\\((.*)\\)', 'testGetInvalidEnum(org.eclipse.jgit.lib.ConfigTest)')","[28302, 86628]"
"('Description.java', 'org.junit.runner.Description', 'methodAndClassNamePatternGroupOrDefault', '([\\s\\S]*)\\((.*)\\)', 'testValidTree6(org.eclipse.jgit.lib.ObjectCheckerTest)')","[25622, 83900]"
"('Description.java', 'org.junit.runner.Description', 'methodAndClassNamePatternGroupOrDefault', '([\\s\\S]*)\\((.*)\\)', 'testTimeout_writeByte_Success2(org.eclipse.jgit.util.io.TimeoutOutputStreamTest)')","[32479, 90566]"
"('Description.java', 'org.junit.runner.Description', 'methodAndClassNamePatternGroupOrDefault', '([\\s\\S]*)\\((.*)\\)', 'test4(org.eclipse.jgit.revwalk.RevWalkPathFilter6012Test)')","[9471, 68214]"
"('Description.java', 'org.junit.runner.Description', 'methodAndClassNamePatternGroupOrDefault', '([\\s\\S]*)\\((.*)\\)', 'test1_FromString(org.eclipse.jgit.lib.AbbreviatedObjectIdTest)')","[22517, 80886]"
"('Description.java', 'org.junit.runner.Description', 'methodAndClassNamePatternGroupOrDefault', '([\\s\\S]*)\\((.*)\\)', 'testPullFastForwardWithBranchInSource(org.eclipse.jgit.api.PullCommandWithRebaseTest)')","[42919, 100488]"
"('URIish.java', 'org.eclipse.jgit.transport.URIish', '<init>', '^(file):([\\\\/](?![\\\\/])((?:[A-Za-z]:)?[\\\\/]?(?:(?:[^\\\\/]+[\\\\/]+)*[^\\\\/]+[\\\\/]*)))$', 'file:///D:/m y')","[179631, 179677]"
"('URIish.java', 'org.eclipse.jgit.transport.URIish', '<init>', '^(?:([^/:@]+)(?::([^\\\\/]+))?@)?([^\\\\/:]{2,}):([\\\\/](?:(?:[^\\\\/]+[\\\\/]+)*[^\\\\/]+[\\\\/]*))$', '/tmp/jgit_test_2564324336982684232_tmp/tmp_7539504802091562184')","[199449, 199589, 199738, 199888, 200038]"
"('URIish.java', 'org.eclipse.jgit.transport.URIish', '<init>', '^([a-z][a-z0-9+-]+)://(?:(?:([^/:@]+)(?::([^\\\\/]+))?@)?((?:[^\\\\/:]+)|(?:\\[[0-9a-f:]+\\]))(?::(\\d+))?((?:/~(?:[^\\\\/]+))?[\\\\/]))?(.+)?$', 'file:///tmp/jgit_test_6348174030093370646_tmp/tmp_3748150825080448751/.git/')",[195860]
"('URIish.java', 'org.eclipse.jgit.transport.URIish', '<init>', '^(file):([\\\\/](?![\\\\/])((?:[A-Za-z]:)?[\\\\/]?(?:(?:[^\\\\/]+[\\\\/]+)*[^\\\\/]+[\\\\/]*)))$', 'http://l usr\\example.com:wtf@1.2.3.4:80//abc')",[130112]
"('Description.java', 'org.junit.runner.Description', 'methodAndClassNamePatternGroupOrDefault', '([\\s\\S]*)\\((.*)\\)', 'testOnlyOption_f1_13_e(org.eclipse.jgit.api.CommitOnlyTest)')","[50103, 107616]"
"('Description.java', 'org.junit.runner.Description', 'methodAndClassNamePatternGroupOrDefault', '([\\s\\S]*)\\((.*)\\)', 'testDirectoryFileConflicts_15(org.eclipse.jgit.lib.DirCacheCheckoutTest)')","[23689, 82074]"
"('Description.java', 'org.junit.runner.Description', 'methodAndClassNamePatternGroupOrDefault', '([\\s\\S]*)\\((.*)\\)', 'testFillToHighMark2(org.eclipse.jgit.revwalk.RevCommitListTest)')","[7540, 66410]"
"('Description.java', 'org.junit.runner.Description', 'methodAndClassNamePatternGroupOrDefault', '([\\s\\S]*)\\((.*)\\)', 'testCombinedRangesInOneGroupCase2(org.eclipse.jgit.fnmatch.FileNameMatcherTest)')","[16438, 74836]"
"('Description.java', 'org.junit.runner.Description', 'methodAndClassNamePatternGroupOrDefault', '([\\s\\S]*)\\((.*)\\)', 'testEdits_MatchAll(org.eclipse.jgit.revwalk.RevWalkPathFilter1Test)')","[5630, 64628]"
"('URIish.java', 'org.eclipse.jgit.transport.URIish', '<init>', '^(file):([\\\\/](?![\\\\/])((?:[A-Za-z]:)?[\\\\/]?(?:(?:[^\\\\/]+[\\\\/]+)*[^\\\\/]+[\\\\/]*)))$', 'http://l usr\\example.com@example.com//')","[156010, 156194]"
"('URIish.java', 'org.eclipse.jgit.transport.URIish', '<init>', '^([a-z][a-z0-9+-]+)://(?:(?:([^/:@]+)(?::([^\\\\/]+))?@)?((?:[^\\\\/:]+)|(?:\\[[0-9a-f:]+\\]))(?::(\\d+))?((?:/~(?:[^\\\\/]+))?[\\\\/]))?(.+)?$', 'ssh+git://lusr\\example@1.2.3.4:1234/D:\\x')",[141083]
"('Description.java', 'org.junit.runner.Description', 'methodAndClassNamePatternGroupOrDefault', '([\\s\\S]*)\\((.*)\\)', 'testLimitedGetCachedBytes(org.eclipse.jgit.lib.ObjectLoaderTest)')","[24561, 82888]"
"('Description.java', 'org.junit.runner.Description', 'methodAndClassNamePatternGroupOrDefault', '([\\s\\S]*)\\((.*)\\)', 'testEmptyCache_Clear_NoCacheTree(org.eclipse.jgit.dircache.DirCacheTreeTest)')","[11900, 70480]"
"('URIish.java', 'org.eclipse.jgit.transport.URIish', '<init>', '^(file):([\\\\/](?![\\\\/])((?:[A-Za-z]:)?[\\\\/]?(?:(?:[^\\\\/]+[\\\\/]+)*[^\\\\/]+[\\\\/]*)))$', 'ssh://lusr\\example:wtf@[::1]:1234//')",[124730]
"('Description.java', 'org.junit.runner.Description', 'methodAndClassNamePatternGroupOrDefault', '([\\s\\S]*)\\((.*)\\)', 'testUnknownUpstream(org.eclipse.jgit.api.RebaseCommandTest)')","[45927, 103480]"
"('Description.java', 'org.junit.runner.Description', 'methodAndClassNamePatternGroupOrDefault', '([\\s\\S]*)\\((.*)\\)', 'testQuote_User(org.eclipse.jgit.util.QuotedStringBourneUserPathStyleTest)')","[38744, 96572]"
"('URIish.java', 'org.eclipse.jgit.transport.URIish', '<init>', '^([a-z][a-z0-9+-]+)://(?:(?:([^/:@]+)(?::([^\\\\/]+))?@)?((?:[^\\\\/:]+)|(?:\\[[0-9a-f:]+\\]))(?::(\\d+))?((?:/~(?:[^\\\\/]+))?[\\\\/]))?(.+)?$', 'http://me@[::1]/D:/x')","[155757, 155941]"
"('Description.java', 'org.junit.runner.Description', 'methodAndClassNamePatternGroupOrDefault', '([\\s\\S]*)\\((.*)\\)', 'testCheckBlob(org.eclipse.jgit.lib.ObjectCheckerTest)')","[26546, 84868]"
"('URIish.java', 'org.eclipse.jgit.transport.URIish', '<init>', '^(file):([\\\\/](?![\\\\/])((?:[A-Za-z]:)?[\\\\/]?(?:(?:[^\\\\/]+[\\\\/]+)*[^\\\\/]+[\\\\/]*)))$', 'http://me@1.2.3.4//')","[155274, 155458]"
"('URIish.java', 'org.eclipse.jgit.transport.URIish', '<init>', '^(file):([\\\\/](?![\\\\/])((?:[A-Za-z]:)?[\\\\/]?(?:(?:[^\\\\/]+[\\\\/]+)*[^\\\\/]+[\\\\/]*)))$', 'ssh://lusr\\example@1.2.3.4:1234//abc')",[137656]
"('Description.java', 'org.junit.runner.Description', 'methodAndClassNamePatternGroupOrDefault', '([\\s\\S]*)\\((.*)\\)', 'testPackFormat_DeltaNotAllowed(org.eclipse.jgit.internal.storage.file.UnpackedObjectTest)')","[56793, 113908]"
"('Description.java', 'org.junit.runner.Description', 'methodAndClassNamePatternGroupOrDefault', '([\\s\\S]*)\\((.*)\\)', 'testOnlyOption_f1_3_a(org.eclipse.jgit.api.CommitOnlyTest)')","[48654, 106098]"
"('Description.java', 'org.junit.runner.Description', 'methodAndClassNamePatternGroupOrDefault', '([\\s\\S]*)\\((.*)\\)', 'testBuilder_AddThenSort(org.eclipse.jgit.util.RefListTest)')","[35120, 93074]"
"('Description.java', 'org.junit.runner.Description', 'methodAndClassNamePatternGroupOrDefault', '([\\s\\S]*)\\((.*)\\)', 'testSpaceGroupCase3(org.eclipse.jgit.fnmatch.FileNameMatcherTest)')","[17383, 75826]"
"('Description.java', 'org.junit.runner.Description', 'methodAndClassNamePatternGroupOrDefault', '([\\s\\S]*)\\((.*)\\)', 'twoCommits(org.eclipse.jgit.revwalk.RevWalkUtilsReachableTest)')","[5981, 64936]"
"('URIish.java', 'org.eclipse.jgit.transport.URIish', '<init>', '^(?:([^/:@]+)(?::([^\\\\/]+))?@)?((?:[^\\\\/:]+)|(?:\\[[0-9a-f:]+\\])):((?:(?:/~(?:[^\\\\/]+))[\\\\/])?(?:(?:[^\\\\/]+[\\\\/]+)*[^\\\\/]+[\\\\/]*))$', '/tmp/jgit_test_4163267304466129697_tmp/tmp_7112159680923869662.git')","[117063, 117191]"
"('URIish.java', 'org.eclipse.jgit.transport.URIish', '<init>', '^([a-z][a-z0-9+-]+)://(?:(?:([^/:@]+)(?::([^\\\\/]+))?@)?((?:[^\\\\/:]+)|(?:\\[[0-9a-f:]+\\]))(?::(\\d+))?((?:/~(?:[^\\\\/]+))?[\\\\/]))?(.+)?$', 'https://me@1.2.3.4/D:\\x')","[158747, 158931]"
"('URIish.java', 'org.eclipse.jgit.transport.URIish', '<init>', '^(?:([^/:@]+)(?::([^\\\\/]+))?@)?((?:[^\\\\/:]+)|(?:\\[[0-9a-f:]+\\])):((?:(?:/~(?:[^\\\\/]+))[\\\\/])?(?:(?:[^\\\\/]+[\\\\/]+)*[^\\\\/]+[\\\\/]*))$', 'user@example.com:egit.git')",[118660]
"('Description.java', 'org.junit.runner.Description', 'methodAndClassNamePatternGroupOrDefault', '([\\s\\S]*)\\((.*)\\)', 'testProperlyCullAllAncestors2(org.eclipse.jgit.revwalk.RevWalkCullTest)')","[5899, 64870]"
"('Description.java', 'org.junit.runner.Description', 'methodAndClassNamePatternGroupOrDefault', '([\\s\\S]*)\\((.*)\\)', 'testFolderChangedToFileCommittedComparedWithInitialCommit(org.eclipse.jgit.treewalk.filter.IndexDiffFilterTest)')","[30548, 88762]"
"('Description.java', 'org.junit.runner.Description', 'methodAndClassNamePatternGroupOrDefault', '([\\s\\S]*)\\((.*)\\)', 'testGCmoreCommits(org.eclipse.jgit.api.GarbageCollectCommandTest)')","[41400, 99036]"
"('Description.java', 'org.junit.runner.Description', 'methodAndClassNamePatternGroupOrDefault', '([\\s\\S]*)\\((.*)\\)', 'testDegenerate_InsertEnd(org.eclipse.jgit.diff.HistogramDiffTest)')","[15289, 73692]"
"('URIish.java', 'org.eclipse.jgit.transport.URIish', '<init>', '^([a-z][a-z0-9+-]+)://(?:(?:([^/:@]+)(?::([^\\\\/]+))?@)?((?:[^\\\\/:]+)|(?:\\[[0-9a-f:]+\\]))(?::(\\d+))?((?:/~(?:[^\\\\/]+))?[\\\\/]))?(.+)?$', '/tmp/jgit_test_6729380522621655077_tmp/tmp_6942243649056967235')","[203301, 203431, 203578, 203728]"
"('Description.java', 'org.junit.runner.Description', 'methodAndClassNamePatternGroupOrDefault', '([\\s\\S]*)\\((.*)\\)', 'testDescribe(org.eclipse.jgit.api.DescribeCommandTest)')","[44654, 102226]"
"('URIish.java', 'org.eclipse.jgit.transport.URIish', '<init>', '^(file):([\\\\/](?![\\\\/])((?:[A-Za-z]:)?[\\\\/]?(?:(?:[^\\\\/]+[\\\\/]+)*[^\\\\/]+[\\\\/]*)))$', 'ssh://lusr\\example@[::1]/D:/x')","[151318, 151502]"
"('URIish.java', 'org.eclipse.jgit.transport.URIish', '<init>', '^([a-z][a-z0-9+-]+)://(?:(?:([^/:@]+)(?::([^\\\\/]+))?@)?((?:[^\\\\/:]+)|(?:\\[[0-9a-f:]+\\]))(?::(\\d+))?((?:/~(?:[^\\\\/]+))?[\\\\/]))?(.+)?$', 'http://lusr\\example@[::1]/D:\\x')","[158011, 158195]"
"('Description.java', 'org.junit.runner.Description', 'methodAndClassNamePatternGroupOrDefault', '([\\s\\S]*)\\((.*)\\)', 'logPathWithMaxCount(org.eclipse.jgit.api.LogCommandTest)')","[47614, 105108]"
"('URIish.java', 'org.eclipse.jgit.transport.URIish', '<init>', '^(file):([\\\\/](?![\\\\/])((?:[A-Za-z]:)?[\\\\/]?(?:(?:[^\\\\/]+[\\\\/]+)*[^\\\\/]+[\\\\/]*)))$', 'https://lusr\\example:wtf@[::1]:1234/D:/x')",[134758]
"('URIish.java', 'org.eclipse.jgit.transport.URIish', '<init>', '^(file):([\\\\/](?![\\\\/])((?:[A-Za-z]:)?[\\\\/]?(?:(?:[^\\\\/]+[\\\\/]+)*[^\\\\/]+[\\\\/]*)))$', 'ssh://l usr\\example.com@example.com:80/D:/x')",[136414]
"('URIish.java', 'org.eclipse.jgit.transport.URIish', '<init>', '^(?:([^/:@]+)(?::([^\\\\/]+))?@)?((?:[^\\\\/:]+)|(?:\\[[0-9a-f:]+\\])):((?:(?:/~(?:[^\\\\/]+))[\\\\/])?(?:(?:[^\\\\/]+[\\\\/]+)*[^\\\\/]+[\\\\/]*))$', '/more/dirs')","[117837, 118537, 120125]"
"('Description.java', 'org.junit.runner.Description', 'methodAndClassNamePatternGroupOrDefault', '([\\s\\S]*)\\((.*)\\)', 'testCreateFileHeader_Modify(org.eclipse.jgit.diff.DiffFormatterTest)')","[13957, 72416]"
"('ChangeIdUtil.java', 'org.eclipse.jgit.util.ChangeIdUtil', 'indexOfChangeId', '(^Change-Id: *I[a-f0-9]{40}$)', 'https://example.com/ fixes this')",[190264]
"('URIish.java', 'org.eclipse.jgit.transport.URIish', '<init>', '^(file):([\\\\/](?![\\\\/])((?:[A-Za-z]:)?[\\\\/]?(?:(?:[^\\\\/]+[\\\\/]+)*[^\\\\/]+[\\\\/]*)))$', 'http://l usr\\example.com@[::1]:1234/D:/x')",[143590]
"('Description.java', 'org.junit.runner.Description', 'methodAndClassNamePatternGroupOrDefault', '([\\s\\S]*)\\((.*)\\)', 'testAddOne(org.eclipse.jgit.diff.EditListTest)')","[13482, 71998]"
"('Description.java', 'org.junit.runner.Description', 'methodAndClassNamePatternGroupOrDefault', '([\\s\\S]*)\\((.*)\\)', 'testResetState(org.eclipse.jgit.ignore.IgnoreMatcherTest)')","[31920, 90060]"
"('Description.java', 'org.junit.runner.Description', 'methodAndClassNamePatternGroupOrDefault', '([\\s\\S]*)\\((.*)\\)', 'testPullFastForwardWithLocalCommitAndRebaseFlagSet(org.eclipse.jgit.api.PullCommandWithRebaseTest)')","[42940, 100510]"
"('Description.java', 'org.junit.runner.Description', 'methodAndClassNamePatternGroupOrDefault', '([\\s\\S]*)\\((.*)\\)', 'testOneByte(org.eclipse.jgit.util.TemporaryBufferTest)')","[34431, 92392]"
"('URIish.java', 'org.eclipse.jgit.transport.URIish', '<init>', '^(file):([\\\\/](?![\\\\/])((?:[A-Za-z]:)?[\\\\/]?(?:(?:[^\\\\/]+[\\\\/]+)*[^\\\\/]+[\\\\/]*)))$', 'ssh://l usr\\example.com@1.2.3.4/D:/x')","[149846, 150030]"
"('Description.java', 'org.junit.runner.Description', 'methodAndClassNamePatternGroupOrDefault', '([\\s\\S]*)\\((.*)\\)', 'testExactRename_OneDeleteManyAdds(org.eclipse.jgit.diff.RenameDetectorTest)')","[12751, 71272]"
"('Description.java', 'org.junit.runner.Description', 'methodAndClassNamePatternGroupOrDefault', '([\\s\\S]*)\\((.*)\\)', 'org.eclipse.jgit.util.RawParseUtils_FormatTest')","[33576, 186721]"
"('URIish.java', 'org.eclipse.jgit.transport.URIish', '<init>', '^([a-z][a-z0-9+-]+)://(?:(?:([^/:@]+)(?::([^\\\\/]+))?@)?((?:[^\\\\/:]+)|(?:\\[[0-9a-f:]+\\]))(?::(\\d+))?((?:/~(?:[^\\\\/]+))?[\\\\/]))?(.+)?$', 'ssh+git://me:wtf@1.2.3.4:1234//abc')",[125535]
"('Description.java', 'org.junit.runner.Description', 'methodAndClassNamePatternGroupOrDefault', '([\\s\\S]*)\\((.*)\\)', 'org.eclipse.jgit.diff.RawTextIgnoreWhitespaceChangeTest')","[14957, 182748]"
"('Description.java', 'org.junit.runner.Description', 'methodAndClassNamePatternGroupOrDefault', '([\\s\\S]*)\\((.*)\\)', 'testEmpty_NoPrefix2(org.eclipse.jgit.util.RefMapTest)')","[37139, 95010]"
"('Description.java', 'org.junit.runner.Description', 'methodAndClassNamePatternGroupOrDefault', '([\\s\\S]*)\\((.*)\\)', 'testRenameOverExistingFile(org.eclipse.jgit.util.FileUtilTest)')","[33847, 91820]"
"('URIish.java', 'org.eclipse.jgit.transport.URIish', '<init>', '^(file):([\\\\/](?![\\\\/])((?:[A-Za-z]:)?[\\\\/]?(?:(?:[^\\\\/]+[\\\\/]+)*[^\\\\/]+[\\\\/]*)))$', 'ssh://me@1.2.3.4:80/D:/x')",[135678]
"('Description.java', 'org.junit.runner.Description', 'methodAndClassNamePatternGroupOrDefault', '([\\s\\S]*)\\((.*)\\)', 'testNoFooters_NewlineOnlyBody1(org.eclipse.jgit.revwalk.FooterLineTest)')","[6189, 65134]"
"('Description.java', 'org.junit.runner.Description', 'methodAndClassNamePatternGroupOrDefault', '([\\s\\S]*)\\((.*)\\)', 'testPathCompare(org.eclipse.jgit.treewalk.AbstractTreeIteratorTest)')","[29176, 87464]"
"('URIish.java', 'org.eclipse.jgit.transport.URIish', '<init>', '^(file):([\\\\/](?![\\\\/])((?:[A-Za-z]:)?[\\\\/]?(?:(?:[^\\\\/]+[\\\\/]+)*[^\\\\/]+[\\\\/]*)))$', 'ssh+git://lusr\\example@example.com/D:\\x')","[153940, 154124]"
"('Description.java', 'org.junit.runner.Description', 'methodAndClassNamePatternGroupOrDefault', '([\\s\\S]*)\\((.*)\\)', 'org.eclipse.jgit.internal.storage.file.PackIndexV1Test')","[54446, 209813]"
"('Description.java', 'org.junit.runner.Description', 'methodAndClassNamePatternGroupOrDefault', '([\\s\\S]*)\\((.*)\\)', 'testIteratorReturnedValues1(org.eclipse.jgit.internal.storage.file.PackIndexV1Test)')","[54530, 111796]"
"('ChangeIdUtil.java', 'org.eclipse.jgit.util.ChangeIdUtil', 'indexOfFirstFooterLine', '(^[a-zA-Z0-9-]+:(?!//).*$)', 'does not fix it.')",[191048]
"('Description.java', 'org.junit.runner.Description', 'methodAndClassNamePatternGroupOrDefault', '([\\s\\S]*)\\((.*)\\)', 'org.eclipse.jgit.api.NameRevCommandTest')","[51540, 208890]"
"('URIish.java', 'org.eclipse.jgit.transport.URIish', '<init>', '^([a-z][a-z0-9+-]+)://(?:(?:([^/:@]+)(?::([^\\\\/]+))?@)?((?:[^\\\\/:]+)|(?:\\[[0-9a-f:]+\\]))(?::(\\d+))?((?:/~(?:[^\\\\/]+))?[\\\\/]))?(.+)?$', 'ssh://me@[::1]/D:\\x')","[149179, 149363]"
"('Description.java', 'org.junit.runner.Description', 'methodAndClassNamePatternGroupOrDefault', '([\\s\\S]*)\\((.*)\\)', 'testRevert(org.eclipse.jgit.api.RevertCommandTest)')","[48030, 105504]"
"('Description.java', 'org.junit.runner.Description', 'methodAndClassNamePatternGroupOrDefault', '([\\s\\S]*)\\((.*)\\)', 'testMaliciousGitPath1Case(org.eclipse.jgit.lib.DirCacheCheckoutMaliciousPathTest)')","[21265, 79654]"
"('ChangeIdUtil.java', 'org.eclipse.jgit.util.ChangeIdUtil', 'indexOfChangeId', '(^Change-Id: *I[a-f0-9]{40}$)', 'g')",[191516]
"('Description.java', 'org.junit.runner.Description', 'methodAndClassNamePatternGroupOrDefault', '([\\s\\S]*)\\((.*)\\)', 'testDeleteMiddleLines(org.eclipse.jgit.api.BlameCommandTest)')","[52204, 109618]"
"('Description.java', 'org.junit.runner.Description', 'methodAndClassNamePatternGroupOrDefault', '([\\s\\S]*)\\((.*)\\)', 'testIndexOfChangeId(org.eclipse.jgit.util.ChangeIdUtilTest)')","[37700, 95538]"
"('Description.java', 'org.junit.runner.Description', 'methodAndClassNamePatternGroupOrDefault', '([\\s\\S]*)\\((.*)\\)', 'testCorruptChecksumAtFooter(org.eclipse.jgit.dircache.DirCacheCGitCompatabilityTest)')","[11509, 70150]"
"('URIish.java', 'org.eclipse.jgit.transport.URIish', '<init>', '^(file):([\\\\/](?![\\\\/])((?:[A-Za-z]:)?[\\\\/]?(?:(?:[^\\\\/]+[\\\\/]+)*[^\\\\/]+[\\\\/]*)))$', 'http://l usr\\example.com@1.2.3.4:1234//abc')",[143176]
"('Description.java', 'org.junit.runner.Description', 'methodAndClassNamePatternGroupOrDefault', '([\\s\\S]*)\\((.*)\\)', 'testFormatSeconds(org.eclipse.jgit.util.RelativeDateFormatterTest)')","[35849, 93778]"
"('Description.java', 'org.junit.runner.Description', 'methodAndClassNamePatternGroupOrDefault', '([\\s\\S]*)\\((.*)\\)', 'testStandardFormat_SmallObject(org.eclipse.jgit.internal.storage.file.UnpackedObjectTest)')","[56604, 113710]"
"('Description.java', 'org.junit.runner.Description', 'methodAndClassNamePatternGroupOrDefault', '([\\s\\S]*)\\((.*)\\)', 'testDirectoryFileConflicts_7(org.eclipse.jgit.lib.DirCacheCheckoutTest)')","[23458, 81832]"
"('Description.java', 'org.junit.runner.Description', 'methodAndClassNamePatternGroupOrDefault', '([\\s\\S]*)\\((.*)\\)', 'testSpi(org.eclipse.jgit.transport.TransportTest)')","[4025, 63066]"
"('Description.java', 'org.junit.runner.Description', 'methodAndClassNamePatternGroupOrDefault', '([\\s\\S]*)\\((.*)\\)', 'testReadLines_mixed(org.eclipse.jgit.util.ReadLinesTest)')","[32126, 90236]"
"('URIish.java', 'org.eclipse.jgit.transport.URIish', '<init>', '^([a-z][a-z0-9+-]+)://(?:(?:([^/:@]+)(?::([^\\\\/]+))?@)?((?:[^\\\\/:]+)|(?:\\[[0-9a-f:]+\\]))(?::(\\d+))?((?:/~(?:[^\\\\/]+))?[\\\\/]))?(.+)?$', 'http://l usr\\example.com:wtf@1.2.3.4:80//')",[130089]
"('Description.java', 'org.junit.runner.Description', 'methodAndClassNamePatternGroupOrDefault', '([\\s\\S]*)\\((.*)\\)', 'relativeGitDirRef(org.eclipse.jgit.internal.storage.file.FileRepositoryBuilderTest)')","[53717, 111004]"
"('URIish.java', 'org.eclipse.jgit.transport.URIish', '<init>', '^(file):([\\\\/](?![\\\\/])((?:[A-Za-z]:)?[\\\\/]?(?:(?:[^\\\\/]+[\\\\/]+)*[^\\\\/]+[\\\\/]*)))$', 'file:/tmp/jgit_test_8069771755053160600_tmp/tmp_6950575543562770897/.git/')",[183285]
"('Description.java', 'org.junit.runner.Description', 'methodAndClassNamePatternGroupOrDefault', '([\\s\\S]*)\\((.*)\\)', 'testRemoveMiddleOfList(org.eclipse.jgit.util.RefListTest)')","[35141, 93096]"
"('URIish.java', 'org.eclipse.jgit.transport.URIish', 'getHumanishName', '^([\\\\/]?((?:[A-Za-z]:)?[\\\\/]?(?:(?:[^\\\\/]+[\\\\/]+)*[^\\\\/]+[\\\\/]*)))$', 'abc')",[174870]
"('URIish.java', 'org.eclipse.jgit.transport.URIish', '<init>', '^(file):([\\\\/](?![\\\\/])((?:[A-Za-z]:)?[\\\\/]?(?:(?:[^\\\\/]+[\\\\/]+)*[^\\\\/]+[\\\\/]*)))$', 'ssh://me@example.com:80/D:\\x')",[135356]
"('Description.java', 'org.junit.runner.Description', 'methodAndClassNamePatternGroupOrDefault', '([\\s\\S]*)\\((.*)\\)', 'testObjectDirectorySnapshot(org.eclipse.jgit.revwalk.RevWalkShallowTest)')","[9616, 68346]"
"('URIish.java', 'org.eclipse.jgit.transport.URIish', '<init>', '^([a-z][a-z0-9+-]+)://(?:(?:([^/:@]+)(?::([^\\\\/]+))?@)?((?:[^\\\\/:]+)|(?:\\[[0-9a-f:]+\\]))(?::(\\d+))?((?:/~(?:[^\\\\/]+))?[\\\\/]))?(.+)?$', 'ssh://me@example.com:80/D:\\x')",[135379]
"('Description.java', 'org.junit.runner.Description', 'methodAndClassNamePatternGroupOrDefault', '([\\s\\S]*)\\((.*)\\)', 'testDepth1(org.eclipse.jgit.revwalk.RevWalkShallowTest)')","[9637, 68368]"
"('Description.java', 'org.junit.runner.Description', 'methodAndClassNamePatternGroupOrDefault', '([\\s\\S]*)\\((.*)\\)', 'testMerge_PackedLooseLoose(org.eclipse.jgit.util.RefMapTest)')","[36971, 94834]"
"('URIish.java', 'org.eclipse.jgit.transport.URIish', '<init>', '^(file):([\\\\/](?![\\\\/])((?:[A-Za-z]:)?[\\\\/]?(?:(?:[^\\\\/]+[\\\\/]+)*[^\\\\/]+[\\\\/]*)))$', 'http://user:secret@host.xy:80/some%2Fpath')","[177814, 177860]"
"('Description.java', 'org.junit.runner.Description', 'methodAndClassNamePatternGroupOrDefault', '([\\s\\S]*)\\((.*)\\)', 'testUTF8withBOM(org.eclipse.jgit.storage.file.FileBasedConfigTest)')","[38908, 96704]"
"('Description.java', 'org.junit.runner.Description', 'methodAndClassNamePatternGroupOrDefault', '([\\s\\S]*)\\((.*)\\)', 'testCleanWithDryRun(org.eclipse.jgit.api.CleanCommandTest)')","[46345, 103898]"
"('URIish.java', 'org.eclipse.jgit.transport.URIish', '<init>', '^([a-z][a-z0-9+-]+)://(?:(?:([^/:@]+)(?::([^\\\\/]+))?@)?((?:[^\\\\/:]+)|(?:\\[[0-9a-f:]+\\]))(?::(\\d+))?((?:/~(?:[^\\\\/]+))?[\\\\/]))?(.+)?$', 'http://www.spearce.org/egit.git')","[118105, 118830, 118880, 119220, 119393, 119443, 119738, 120513, 120663, 120788]"
"('Description.java', 'org.junit.runner.Description', 'methodAndClassNamePatternGroupOrDefault', '([\\s\\S]*)\\((.*)\\)', 'testCheckoutWithStartPointOnlyCertainFiles(org.eclipse.jgit.api.CheckoutCommandTest)')","[43211, 100774]"
"('Description.java', 'org.junit.runner.Description', 'methodAndClassNamePatternGroupOrDefault', '([\\s\\S]*)\\((.*)\\)', 'testParse_explicit_bad_encoded2(org.eclipse.jgit.revwalk.RevCommitParseTest)')","[8868, 67642]"
"('URIish.java', 'org.eclipse.jgit.transport.URIish', '<init>', '^([a-z][a-z0-9+-]+)://(?:(?:([^/:@]+)(?::([^\\\\/]+))?@)?((?:[^\\\\/:]+)|(?:\\[[0-9a-f:]+\\]))(?::(\\d+))?((?:/~(?:[^\\\\/]+))?[\\\\/]))?(.+)?$', 'https://lusr\\example:wtf@[::1]:1234/D:\\x')",[134827]
"('Description.java', 'org.junit.runner.Description', 'methodAndClassNamePatternGroupOrDefault', '([\\s\\S]*)\\((.*)\\)', 'testPack2Commits(org.eclipse.jgit.internal.storage.file.GcBasicPackingTest)')","[53160, 110520]"
"('Description.java', 'org.junit.runner.Description', 'methodAndClassNamePatternGroupOrDefault', '([\\s\\S]*)\\((.*)\\)', 'test000_sort_04(org.eclipse.jgit.lib.T0002_TreeTest)')","[24954, 83240]"
"('Description.java', 'org.junit.runner.Description', 'methodAndClassNamePatternGroupOrDefault', '([\\s\\S]*)\\((.*)\\)', 'testFastIterator(org.eclipse.jgit.util.BlockListTest)')","[35559, 93514]"
"('Description.java', 'org.junit.runner.Description', 'methodAndClassNamePatternGroupOrDefault', '([\\s\\S]*)\\((.*)\\)', 'testHasAllFlag(org.eclipse.jgit.revwalk.RevObjectTest)')","[8618, 67400]"
"('Description.java', 'org.junit.runner.Description', 'methodAndClassNamePatternGroupOrDefault', '([\\s\\S]*)\\((.*)\\)', 'org.eclipse.jgit.internal.storage.file.GcBasicPackingTest')","[53034, 209597]"
"('Description.java', 'org.junit.runner.Description', 'methodAndClassNamePatternGroupOrDefault', '([\\s\\S]*)\\((.*)\\)', 'testRebaseTodoLineSetComment(org.eclipse.jgit.api.RebaseCommandTest)')","[45129, 102644]"
"('URIish.java', 'org.eclipse.jgit.transport.URIish', '<init>', '^([a-z][a-z0-9+-]+)://(?:(?:([^/:@]+)(?::([^\\\\/]+))?@)?((?:[^\\\\/:]+)|(?:\\[[0-9a-f:]+\\]))(?::(\\d+))?((?:/~(?:[^\\\\/]+))?[\\\\/]))?(.+)?$', 'file:///tmp/jgit_test_4270275380775586211_tmp/tmp_4705012969864141780')","[194246, 194308, 194366]"
"('URIish.java', 'org.eclipse.jgit.transport.URIish', '<init>', '^([a-z][a-z0-9+-]+)://(?:(?:([^/:@]+)(?::([^\\\\/]+))?@)?((?:[^\\\\/:]+)|(?:\\[[0-9a-f:]+\\]))(?::(\\d+))?((?:/~(?:[^\\\\/]+))?[\\\\/]))?(.+)?$', 'ssh+git://l usr\\example.com@[::1]:80/D:\\x')",[140531]
"('Description.java', 'org.junit.runner.Description', 'methodAndClassNamePatternGroupOrDefault', '([\\s\\S]*)\\((.*)\\)', 'checkMergeEqualTreesWithoutIndex(org.eclipse.jgit.merge.ResolveMergerTest)')","[10658, 69358]"
"('URIish.java', 'org.eclipse.jgit.transport.URIish', '<init>', '^(file):([\\\\/](?![\\\\/])((?:[A-Za-z]:)?[\\\\/]?(?:(?:[^\\\\/]+[\\\\/]+)*[^\\\\/]+[\\\\/]*)))$', 'http://lusr\\example@1.2.3.4/D:/x')","[157574, 157758]"
"('URIish.java', 'org.eclipse.jgit.transport.URIish', '<init>', '^(file):([\\\\/](?![\\\\/])((?:[A-Za-z]:)?[\\\\/]?(?:(?:[^\\\\/]+[\\\\/]+)*[^\\\\/]+[\\\\/]*)))$', 'https://lusr\\example@example.com:80//abc')",[147408]
"('URIish.java', 'org.eclipse.jgit.transport.URIish', '<init>', '^([a-z][a-z0-9+-]+)://(?:(?:([^/:@]+)(?::([^\\\\/]+))?@)?((?:[^\\\\/:]+)|(?:\\[[0-9a-f:]+\\]))(?::(\\d+))?((?:/~(?:[^\\\\/]+))?[\\\\/]))?(.+)?$', 'http://1.2.3.4/D:/x')","[168637, 168821, 169741, 169925, 170845, 171029]"
"('Description.java', 'org.junit.runner.Description', 'methodAndClassNamePatternGroupOrDefault', '([\\s\\S]*)\\((.*)\\)', 'testDirCacheSavesObjectsWithPruneNow(org.eclipse.jgit.internal.storage.file.GcDirCacheSavesObjectsTest)')","[56503, 113644]"
"('Description.java', 'org.junit.runner.Description', 'methodAndClassNamePatternGroupOrDefault', '([\\s\\S]*)\\((.*)\\)', 'addSubmodule(org.eclipse.jgit.submodule.SubmoduleAddTest)')","[19998, 78466]"
"('Description.java', 'org.junit.runner.Description', 'methodAndClassNamePatternGroupOrDefault', '([\\s\\S]*)\\((.*)\\)', 'testRenameBranchCannotLockAFileHEADisFromLockFrom(org.eclipse.jgit.internal.storage.file.RefUpdateTest)')","[56066, 113226]"
"('URIish.java', 'org.eclipse.jgit.transport.URIish', '<init>', '^([a-z][a-z0-9+-]+)://(?:(?:([^/:@]+)(?::([^\\\\/]+))?@)?((?:[^\\\\/:]+)|(?:\\[[0-9a-f:]+\\]))(?::(\\d+))?((?:/~(?:[^\\\\/]+))?[\\\\/]))?(.+)?$', 'ssh://me:wtf@[::1]:80/D:\\x')",[122867]
"('URIish.java', 'org.eclipse.jgit.transport.URIish', '<init>', '^([a-z][a-z0-9+-]+)://(?:(?:([^/:@]+)(?::([^\\\\/]+))?@)?((?:[^\\\\/:]+)|(?:\\[[0-9a-f:]+\\]))(?::(\\d+))?((?:/~(?:[^\\\\/]+))?[\\\\/]))?(.+)?$', 'http://me@example.com:80/D:/x')",[141957]
"('Description.java', 'org.junit.runner.Description', 'methodAndClassNamePatternGroupOrDefault', '([\\s\\S]*)\\((.*)\\)', 'testLsRemoteWithoutLocalRepository(org.eclipse.jgit.api.LsRemoteCommandTest)')","[41318, 98970]"
"('Description.java', 'org.junit.runner.Description', 'methodAndClassNamePatternGroupOrDefault', '([\\s\\S]*)\\((.*)\\)', 'testParseGitFileName_Empty(org.eclipse.jgit.patch.FileHeaderTest)')","[39530, 97276]"
"('URIish.java', 'org.eclipse.jgit.transport.URIish', '<init>', '^([a-z][a-z0-9+-]+)://(?:(?:([^/:@]+)(?::([^\\\\/]+))?@)?((?:[^\\\\/:]+)|(?:\\[[0-9a-f:]+\\]))(?::(\\d+))?((?:/~(?:[^\\\\/]+))?[\\\\/]))?(.+)?$', 'ssh://me@example.com:1234//')",[135057]
"('URIish.java', 'org.eclipse.jgit.transport.URIish', '<init>', '^(file):([\\\\/](?![\\\\/])((?:[A-Za-z]:)?[\\\\/]?(?:(?:[^\\\\/]+[\\\\/]+)*[^\\\\/]+[\\\\/]*)))$', 'ssh+git://l usr\\example.com:wtf@example.com:80//abc')",[126432]
"('URIish.java', 'org.eclipse.jgit.transport.URIish', '<init>', '^(file):([\\\\/](?![\\\\/])((?:[A-Za-z]:)?[\\\\/]?(?:(?:[^\\\\/]+[\\\\/]+)*[^\\\\/]+[\\\\/]*)))$', 'https://l usr\\example.com:wtf@example.com:1234/D:/x')",[132918]
"('URIish.java', 'org.eclipse.jgit.transport.URIish', '<init>', '^([a-z][a-z0-9+-]+)://(?:(?:([^/:@]+)(?::([^\\\\/]+))?@)?((?:[^\\\\/:]+)|(?:\\[[0-9a-f:]+\\]))(?::(\\d+))?((?:/~(?:[^\\\\/]+))?[\\\\/]))?(.+)?$', 'http://lusr\\example@[::1]:1234/D:\\x')",[144763]
"('Description.java', 'org.junit.runner.Description', 'methodAndClassNamePatternGroupOrDefault', '([\\s\\S]*)\\((.*)\\)', 'testSignedOffBy_IgnoreWhitespace(org.eclipse.jgit.revwalk.FooterLineTest)')","[6273, 65222]"
"('Description.java', 'org.junit.runner.Description', 'methodAndClassNamePatternGroupOrDefault', '([\\s\\S]*)\\((.*)\\)', 'testFilter_MY_ALL_Or_NONE(org.eclipse.jgit.revwalk.RevWalkFilterTest)')","[8284, 67070]"
"('Description.java', 'org.junit.runner.Description', 'methodAndClassNamePatternGroupOrDefault', '([\\s\\S]*)\\((.*)\\)', 'org.eclipse.jgit.treewalk.filter.PathFilterGroupTest')","[31172, 186289]"
"('Description.java', 'org.junit.runner.Description', 'methodAndClassNamePatternGroupOrDefault', '([\\s\\S]*)\\((.*)\\)', 'testOnlyOption_f1_13_a(org.eclipse.jgit.api.CommitOnlyTest)')","[50019, 107528]"
"('Description.java', 'org.junit.runner.Description', 'methodAndClassNamePatternGroupOrDefault', '([\\s\\S]*)\\((.*)\\)', 'testDiffWithNegativeLineCount(org.eclipse.jgit.api.DiffCommandTest)')","[48215, 105658]"
"('URIish.java', 'org.eclipse.jgit.transport.URIish', '<init>', '^([a-z][a-z0-9+-]+)://(?:(?:([^/:@]+)(?::([^\\\\/]+))?@)?((?:[^\\\\/:]+)|(?:\\[[0-9a-f:]+\\]))(?::(\\d+))?((?:/~(?:[^\\\\/]+))?[\\\\/]))?(.+)?$', 'ssh+git://me@[::1]:1234//abc')",[139151]
"('URIish.java', 'org.eclipse.jgit.transport.URIish', '<init>', '^([a-z][a-z0-9+-]+)://(?:(?:([^/:@]+)(?::([^\\\\/]+))?@)?((?:[^\\\\/:]+)|(?:\\[[0-9a-f:]+\\]))(?::(\\d+))?((?:/~(?:[^\\\\/]+))?[\\\\/]))?(.+)?$', 'http://lusr\\example:wtf@[::1]:1234//abc')",[131423]
"('Description.java', 'org.junit.runner.Description', 'methodAndClassNamePatternGroupOrDefault', '([\\s\\S]*)\\((.*)\\)', 'testMergeCommitEntirelyShallow(org.eclipse.jgit.revwalk.RevWalkShallowTest)')","[9574, 68302]"
"('Description.java', 'org.junit.runner.Description', 'methodAndClassNamePatternGroupOrDefault', '([\\s\\S]*)\\((.*)\\)', 'testValidHead(org.eclipse.jgit.lib.ValidRefNameTest)')","[24355, 82712]"
"('URIish.java', 'org.eclipse.jgit.transport.URIish', '<init>', '^(file):([\\\\/](?![\\\\/])((?:[A-Za-z]:)?[\\\\/]?(?:(?:[^\\\\/]+[\\\\/]+)*[^\\\\/]+[\\\\/]*)))$', 'https://me:wtf@[::1]:1234/D:\\x')",[132596]
"('Description.java', 'org.junit.runner.Description', 'methodAndClassNamePatternGroupOrDefault', '([\\s\\S]*)\\((.*)\\)', 'testStandardFormat_LargeObject_TruncatedZLibStream(org.eclipse.jgit.internal.storage.file.UnpackedObjectTest)')","[56646, 113754]"
"('Description.java', 'org.junit.runner.Description', 'methodAndClassNamePatternGroupOrDefault', '([\\s\\S]*)\\((.*)\\)', 'org.eclipse.jgit.util.RelativeDateFormatterTest')","[35702, 186937]"
"('Description.java', 'org.junit.runner.Description', 'methodAndClassNamePatternGroupOrDefault', '([\\s\\S]*)\\((.*)\\)', 'testDistance_past_root(org.eclipse.jgit.lib.RepositoryResolveTest)')","[27132, 85462]"
"('Description.java', 'org.junit.runner.Description', 'methodAndClassNamePatternGroupOrDefault', '([\\s\\S]*)\\((.*)\\)', 'testRecursiveMergeWithConflict(org.eclipse.jgit.api.MergeCommandTest)')","[43711, 101258]"
"('URIish.java', 'org.eclipse.jgit.transport.URIish', '<init>', '^(file):([\\\\/](?![\\\\/])((?:[A-Za-z]:)?[\\\\/]?(?:(?:[^\\\\/]+[\\\\/]+)*[^\\\\/]+[\\\\/]*)))$', 'ssh+git://l usr\\example.com:wtf@example.com:1234//abc')",[126248]
"('ChangeIdUtil.java', 'org.eclipse.jgit.util.ChangeIdUtil', 'indexOfChangeId', '(^Change-Id: *I[a-f0-9]{40}$)', 'with header and body')",[190763]
"('URIish.java', 'org.eclipse.jgit.transport.URIish', '<init>', '^([a-z][a-z0-9+-]+)://(?:(?:([^/:@]+)(?::([^\\\\/]+))?@)?((?:[^\\\\/:]+)|(?:\\[[0-9a-f:]+\\]))(?::(\\d+))?((?:/~(?:[^\\\\/]+))?[\\\\/]))?(.+)?$', 'ssh://l usr\\example.com@example.com//abc')","[149455, 149639]"
"('Description.java', 'org.junit.runner.Description', 'methodAndClassNamePatternGroupOrDefault', '([\\s\\S]*)\\((.*)\\)', 'testCopyWholeObject_Length123(org.eclipse.jgit.internal.storage.pack.DeltaIndexTest)')","[52828, 110212]"
"('URIish.java', 'org.eclipse.jgit.transport.URIish', '<init>', '^(file):([\\\\/](?![\\\\/])((?:[A-Za-z]:)?[\\\\/]?(?:(?:[^\\\\/]+[\\\\/]+)*[^\\\\/]+[\\\\/]*)))$', 'http://me:wtf@example.com:1234//')",[128410]
"('Description.java', 'org.junit.runner.Description', 'methodAndClassNamePatternGroupOrDefault', '([\\s\\S]*)\\((.*)\\)', 'testSshProtoWithADUserPassAndPort(org.eclipse.jgit.transport.URIishTest)')","[1559, 60602]"
"('URIish.java', 'org.eclipse.jgit.transport.URIish', '<init>', '^([a-z][a-z0-9+-]+)://(?:(?:([^/:@]+)(?::([^\\\\/]+))?@)?((?:[^\\\\/:]+)|(?:\\[[0-9a-f:]+\\]))(?::(\\d+))?((?:/~(?:[^\\\\/]+))?[\\\\/]))?(.+)?$', 'http://me@example.com:80/D:\\x')",[142003]
"('Description.java', 'org.junit.runner.Description', 'methodAndClassNamePatternGroupOrDefault', '([\\s\\S]*)\\((.*)\\)', 'testCreate_ByStringPathAndStage(org.eclipse.jgit.dircache.DirCacheEntryTest)')","[11757, 70370]"
"('Description.java', 'org.junit.runner.Description', 'methodAndClassNamePatternGroupOrDefault', '([\\s\\S]*)\\((.*)\\)', 'testVerySimpleWirdcardCase0(org.eclipse.jgit.fnmatch.FileNameMatcherTest)')","[16375, 74770]"
"('URIish.java', 'org.eclipse.jgit.transport.URIish', '<init>', '^([a-z][a-z0-9+-]+)://(?:(?:([^/:@]+)(?::([^\\\\/]+))?@)?((?:[^\\\\/:]+)|(?:\\[[0-9a-f:]+\\]))(?::(\\d+))?((?:/~(?:[^\\\\/]+))?[\\\\/]))?(.+)?$', 'https://me:wtf@1.2.3.4:1234//abc')",[132159]
"('URIish.java', 'org.eclipse.jgit.transport.URIish', '<init>', '^([a-z][a-z0-9+-]+)://(?:(?:([^/:@]+)(?::([^\\\\/]+))?@)?((?:[^\\\\/:]+)|(?:\\[[0-9a-f:]+\\]))(?::(\\d+))?((?:/~(?:[^\\\\/]+))?[\\\\/]))?(.+)?$', 'ssh://me@example.com:1234/D:/x')",[135149]
"('URIish.java', 'org.eclipse.jgit.transport.URIish', '<init>', '^(file):([\\\\/](?![\\\\/])((?:[A-Za-z]:)?[\\\\/]?(?:(?:[^\\\\/]+[\\\\/]+)*[^\\\\/]+[\\\\/]*)))$', 'ssh://me@1.2.3.4:80/D:\\x')",[135724]
"('Description.java', 'org.junit.runner.Description', 'methodAndClassNamePatternGroupOrDefault', '([\\s\\S]*)\\((.*)\\)', 'testBuildOneFile_Commit_IndexChangedEvent(org.eclipse.jgit.dircache.DirCacheBuilderTest)')","[12108, 70678]"
"('Description.java', 'org.junit.runner.Description', 'methodAndClassNamePatternGroupOrDefault', '([\\s\\S]*)\\((.*)\\)', 'testNewNamespaceConflictWithLoosePrefixNameExists(org.eclipse.jgit.internal.storage.file.RefUpdateTest)')","[56339, 113512]"
"('Description.java', 'org.junit.runner.Description', 'methodAndClassNamePatternGroupOrDefault', '([\\s\\S]*)\\((.*)\\)', 'testCreate_ByStringPath(org.eclipse.jgit.dircache.DirCacheEntryTest)')","[11673, 70282]"
"('URIish.java', 'org.eclipse.jgit.transport.URIish', '<init>', '^(file):([\\\\/](?![\\\\/])((?:[A-Za-z]:)?[\\\\/]?(?:(?:[^\\\\/]+[\\\\/]+)*[^\\\\/]+[\\\\/]*)))$', '/tmp/jgit_test_5272834838855978774_tmp/tmp_5245828813622345398')","[200092, 200217]"
"('Description.java', 'org.junit.runner.Description', 'methodAndClassNamePatternGroupOrDefault', '([\\s\\S]*)\\((.*)\\)', 'testFirstParentAltersId(org.eclipse.jgit.util.ChangeIdUtilTest)')","[37889, 95736]"
"('Description.java', 'org.junit.runner.Description', 'methodAndClassNamePatternGroupOrDefault', '([\\s\\S]*)\\((.*)\\)', 'testAddDifferentNotes(org.eclipse.jgit.notes.NoteMapMergerTest)')","[41236, 98904]"
"('URIish.java', 'org.eclipse.jgit.transport.URIish', '<init>', '^(?:([^/:@]+)(?::([^\\\\/]+))?@)?((?:[^\\\\/:]+)|(?:\\[[0-9a-f:]+\\])):((?:(?:/~(?:[^\\\\/]+))[\\\\/])?(?:(?:[^\\\\/]+[\\\\/]+)*[^\\\\/]+[\\\\/]*))$', '/a/b/c//')",[179447]
"('Description.java', 'org.junit.runner.Description', 'methodAndClassNamePatternGroupOrDefault', '([\\s\\S]*)\\((.*)\\)', 'invalidNames(org.eclipse.jgit.lib.RepositoryResolveTest)')","[27237, 85572]"
"('URIish.java', 'org.eclipse.jgit.transport.URIish', '<init>', '^(file):([\\\\/](?![\\\\/])((?:[A-Za-z]:)?[\\\\/]?(?:(?:[^\\\\/]+[\\\\/]+)*[^\\\\/]+[\\\\/]*)))$', 'ssh://lusr\\example@1.2.3.4/D:\\x')","[150996, 151180]"
"('URIish.java', 'org.eclipse.jgit.transport.URIish', '<init>', '^([a-z][a-z0-9+-]+)://(?:(?:([^/:@]+)(?::([^\\\\/]+))?@)?((?:[^\\\\/:]+)|(?:\\[[0-9a-f:]+\\]))(?::(\\d+))?((?:/~(?:[^\\\\/]+))?[\\\\/]))?(.+)?$', 'http://l usr\\example.com:wtf@example.com:80/D:/x')",[129813]
"('Description.java', 'org.junit.runner.Description', 'methodAndClassNamePatternGroupOrDefault', '([\\s\\S]*)\\((.*)\\)', 'org.eclipse.jgit.dircache.DirCacheFindTest')","[12585, 182451]"
"('URIish.java', 'org.eclipse.jgit.transport.URIish', '<init>', '^([a-z][a-z0-9+-]+)://(?:(?:([^/:@]+)(?::([^\\\\/]+))?@)?((?:[^\\\\/:]+)|(?:\\[[0-9a-f:]+\\]))(?::(\\d+))?((?:/~(?:[^\\\\/]+))?[\\\\/]))?(.+)?$', 'https://l usr\\example.com@1.2.3.4/D:\\x')","[159851, 160035]"
"('Description.java', 'org.junit.runner.Description', 'methodAndClassNamePatternGroupOrDefault', '([\\s\\S]*)\\((.*)\\)', 'testAddSameNoteDifferentContent(org.eclipse.jgit.notes.NoteMapMergerTest)')","[41026, 98684]"
"('Description.java', 'org.junit.runner.Description', 'methodAndClassNamePatternGroupOrDefault', '([\\s\\S]*)\\((.*)\\)', 'testComparatorReduceCommonStartButLastLineNoEol_2(org.eclipse.jgit.diff.RawTextTest)')","[14354, 72812]"
"('Description.java', 'org.junit.runner.Description', 'methodAndClassNamePatternGroupOrDefault', '([\\s\\S]*)\\((.*)\\)', 'testTwoSameSameAssumeValidDifferentContent(org.eclipse.jgit.treewalk.filter.InterIndexDiffFilterTest)')","[31588, 89752]"
"('URIish.java', 'org.eclipse.jgit.transport.URIish', '<init>', '^([a-z][a-z0-9+-]+)://(?:(?:([^/:@]+)(?::([^\\\\/]+))?@)?((?:[^\\\\/:]+)|(?:\\[[0-9a-f:]+\\]))(?::(\\d+))?((?:/~(?:[^\\\\/]+))?[\\\\/]))?(.+)?$', '/tmp/jgit_test_936098334176453163_tmp/tmp_2532274317419163208/.git')","[205903, 206041]"
"('Description.java', 'org.junit.runner.Description', 'methodAndClassNamePatternGroupOrDefault', '([\\s\\S]*)\\((.*)\\)', 'testACommitWithSubject_NoBodySobAndBug(org.eclipse.jgit.util.ChangeIdUtilTest)')","[38246, 96110]"
"('URIish.java', 'org.eclipse.jgit.transport.URIish', '<init>', '^(file):([\\\\/](?![\\\\/])((?:[A-Za-z]:)?[\\\\/]?(?:(?:[^\\\\/]+[\\\\/]+)*[^\\\\/]+[\\\\/]*)))$', '/tmp/jgit_test_1887039081032232823_tmp/tmp_6446132997626944273')","[202562, 202687, 202833, 202983, 203133]"
"('Description.java', 'org.junit.runner.Description', 'methodAndClassNamePatternGroupOrDefault', '([\\s\\S]*)\\((.*)\\)', 'org.eclipse.jgit.lib.ReflogResolveTest')","[27508, 185593]"
"('URIish.java', 'org.eclipse.jgit.transport.URIish', '<init>', '^(file):([\\\\/](?![\\\\/])((?:[A-Za-z]:)?[\\\\/]?(?:(?:[^\\\\/]+[\\\\/]+)*[^\\\\/]+[\\\\/]*)))$', 'https://example.com//abc')","[171512, 171696, 172616, 172800, 173720, 173904]"
"('Description.java', 'org.junit.runner.Description', 'methodAndClassNamePatternGroupOrDefault', '([\\s\\S]*)\\((.*)\\)', 'testEmptyString(org.eclipse.jgit.lib.ValidRefNameTest)')","[24397, 82756]"
"('Description.java', 'org.junit.runner.Description', 'methodAndClassNamePatternGroupOrDefault', '([\\s\\S]*)\\((.*)\\)', 'testOnlyOption_f1_12_d(org.eclipse.jgit.api.CommitOnlyTest)')","[49977, 107484]"
"('URIish.java', 'org.eclipse.jgit.transport.URIish', '<init>', '^([a-z][a-z0-9+-]+)://(?:(?:([^/:@]+)(?::([^\\\\/]+))?@)?((?:[^\\\\/:]+)|(?:\\[[0-9a-f:]+\\]))(?::(\\d+))?((?:/~(?:[^\\\\/]+))?[\\\\/]))?(.+)?$', 'ssh://lusr\\example@1.2.3.4/D:/x')","[150973, 151157]"
"('URIish.java', 'org.eclipse.jgit.transport.URIish', '<init>', '^(file):([\\\\/](?![\\\\/])((?:[A-Za-z]:)?[\\\\/]?(?:(?:[^\\\\/]+[\\\\/]+)*[^\\\\/]+[\\\\/]*)))$', 'https://l usr\\example.com@example.com:80/D:/x')",[146350]
"('ChangeIdUtil.java', 'org.eclipse.jgit.util.ChangeIdUtil', 'indexOfChangeId', '(^Change-Id: *I[a-f0-9]{40}$)', 'oneliner followed by blank')",[188049]
"('URIish.java', 'org.eclipse.jgit.transport.URIish', '<init>', '^([a-z][a-z0-9+-]+)://(?:(?:([^/:@]+)(?::([^\\\\/]+))?@)?((?:[^\\\\/:]+)|(?:\\[[0-9a-f:]+\\]))(?::(\\d+))?((?:/~(?:[^\\\\/]+))?[\\\\/]))?(.+)?$', '../tmp_1145110896699918732')",[180899]
"('Description.java', 'org.junit.runner.Description', 'methodAndClassNamePatternGroupOrDefault', '([\\s\\S]*)\\((.*)\\)', 'testParse_ShortLineOnlyEmbeddedAndEndingLF(org.eclipse.jgit.revwalk.RevCommitParseTest)')","[8994, 67774]"
"('Description.java', 'org.junit.runner.Description', 'methodAndClassNamePatternGroupOrDefault', '([\\s\\S]*)\\((.*)\\)', 'testParseAllFields(org.eclipse.jgit.revwalk.RevTagParseTest)')","[7040, 65926]"
"('ChangeIdUtil.java', 'org.eclipse.jgit.util.ChangeIdUtil', 'indexOfChangeId', '(^Change-Id: *I[a-f0-9]{40}$)', 'f')",[191542]
"('URIish.java', 'org.eclipse.jgit.transport.URIish', '<init>', '^(file):([\\\\/](?![\\\\/])((?:[A-Za-z]:)?[\\\\/]?(?:(?:[^\\\\/]+[\\\\/]+)*[^\\\\/]+[\\\\/]*)))$', 'git://example.com/home/m y')","[179539, 179585]"
"('Description.java', 'org.junit.runner.Description', 'methodAndClassNamePatternGroupOrDefault', '([\\s\\S]*)\\((.*)\\)', 'testDataAfterPackFooterSingleRead(org.eclipse.jgit.transport.PackParserTest)')","[4359, 63396]"
"('URIish.java', 'org.eclipse.jgit.transport.URIish', '<init>', '^(file):([\\\\/](?![\\\\/])((?:[A-Za-z]:)?[\\\\/]?(?:(?:[^\\\\/]+[\\\\/]+)*[^\\\\/]+[\\\\/]*)))$', 'https://lusr\\example@1.2.3.4:1234//')",[147546]
"('Description.java', 'org.junit.runner.Description', 'methodAndClassNamePatternGroupOrDefault', '([\\s\\S]*)\\((.*)\\)', 'org.eclipse.jgit.util.io.AutoCRLFOutputStreamTest')","[32603, 186532]"
"('URIish.java', 'org.eclipse.jgit.transport.URIish', '<init>', '^(file):([\\\\/](?![\\\\/])((?:[A-Za-z]:)?[\\\\/]?(?:(?:[^\\\\/]+[\\\\/]+)*[^\\\\/]+[\\\\/]*)))$', '/more/dirs')","[117789, 118489, 120077]"
"('Description.java', 'org.junit.runner.Description', 'methodAndClassNamePatternGroupOrDefault', '([\\s\\S]*)\\((.*)\\)', 'testInvalidTreeModeStartsWithZero2(org.eclipse.jgit.lib.ObjectCheckerTest)')","[26903, 85242]"
"('Description.java', 'org.junit.runner.Description', 'methodAndClassNamePatternGroupOrDefault', '([\\s\\S]*)\\((.*)\\)', 'testEmpty(org.eclipse.jgit.util.RawParseUtils_LineMapTest)')","[34744, 92700]"
"('Description.java', 'org.junit.runner.Description', 'methodAndClassNamePatternGroupOrDefault', '([\\s\\S]*)\\((.*)\\)', 'fetchShouldAutoFollowTagForFetchedObjects(org.eclipse.jgit.api.FetchCommandTest)')","[51914, 109354]"
