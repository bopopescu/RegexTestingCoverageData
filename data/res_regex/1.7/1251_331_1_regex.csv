"('Description.java', 'org.junit.runner.Description', 'methodAndClassNamePatternGroupOrDefault', '([\\s\\S]*)\\((.*)\\)', 'handlesAMalformedMessage(lemma.library.TCPReaderTest)')","[384, 1323]"
"('Description.java', 'org.junit.runner.Description', 'methodAndClassNamePatternGroupOrDefault', '([\\s\\S]*)\\((.*)\\)', 'canary(lemma.library.LemmaTest)')","[430, 1348]"
"('Description.java', 'org.junit.runner.Description', 'methodAndClassNamePatternGroupOrDefault', '([\\s\\S]*)\\((.*)\\)', 'readsAMessageWithExtraStuffOnTheBuffer(lemma.library.TCPReaderTest)')","[312, 1248]"
"('Description.java', 'org.junit.runner.Description', 'methodAndClassNamePatternGroupOrDefault', '([\\s\\S]*)\\((.*)\\)', 'readsAMessageWithSmallTcpBuffer(lemma.library.TCPReaderTest)')","[360, 1298]"
"('Description.java', 'org.junit.runner.Description', 'methodAndClassNamePatternGroupOrDefault', '([\\s\\S]*)\\((.*)\\)', 'parseEventBooleanArray(lemma.library.MessageParserTest)')","[524, 1423]"
"('Description.java', 'org.junit.runner.Description', 'methodAndClassNamePatternGroupOrDefault', '([\\s\\S]*)\\((.*)\\)', 'buildEventBoolArray(lemma.library.MessageBuilderTest)')","[1098, 1998]"
"('Description.java', 'org.junit.runner.Description', 'methodAndClassNamePatternGroupOrDefault', '([\\s\\S]*)\\((.*)\\)', 'parseEventFloat(lemma.library.MessageParserTest)')","[620, 1523]"
"('Description.java', 'org.junit.runner.Description', 'methodAndClassNamePatternGroupOrDefault', '([\\s\\S]*)\\((.*)\\)', 'buildEventDouble(lemma.library.MessageBuilderTest)')","[1002, 1898]"
"('Description.java', 'org.junit.runner.Description', 'methodAndClassNamePatternGroupOrDefault', '([\\s\\S]*)\\((.*)\\)', 'lemma.library.EventFilterTest')","[34, 218, 2092]"
"('Description.java', 'org.junit.runner.Description', 'methodAndClassNamePatternGroupOrDefault', '([\\s\\S]*)\\((.*)\\)', 'buildEventInt(lemma.library.MessageBuilderTest)')","[978, 1873]"
"('Description.java', 'org.junit.runner.Description', 'methodAndClassNamePatternGroupOrDefault', '([\\s\\S]*)\\((.*)\\)', 'lemma.library.MessageBuilderTest')","[102, 810, 2717]"
"('Description.java', 'org.junit.runner.Description', 'methodAndClassNamePatternGroupOrDefault', '([\\s\\S]*)\\((.*)\\)', 'parseEventDouble(lemma.library.MessageParserTest)')","[548, 1448]"
"('Description.java', 'org.junit.runner.Description', 'methodAndClassNamePatternGroupOrDefault', '([\\s\\S]*)\\((.*)\\)', 'lemma.library.MessageParserTest')","[85, 500, 2690]"
"('Description.java', 'org.junit.runner.Description', 'methodAndClassNamePatternGroupOrDefault', '([\\s\\S]*)\\((.*)\\)', 'lemma.library.LemmaTest')","[68, 406, 2643]"
"('Description.java', 'org.junit.runner.Description', 'methodAndClassNamePatternGroupOrDefault', '([\\s\\S]*)\\((.*)\\)', 'parseEventBool(lemma.library.MessageParserTest)')","[716, 1623]"
"('Description.java', 'org.junit.runner.Description', 'methodAndClassNamePatternGroupOrDefault', '([\\s\\S]*)\\((.*)\\)', 'parsePoloMessage(lemma.library.MessageParserTest)')","[644, 1548]"
"('Description.java', 'org.junit.runner.Description', 'methodAndClassNamePatternGroupOrDefault', '([\\s\\S]*)\\((.*)\\)', 'buildEventString(lemma.library.MessageBuilderTest)')","[1026, 1923]"
"('Description.java', 'org.junit.runner.Description', 'methodAndClassNamePatternGroupOrDefault', '([\\s\\S]*)\\((.*)\\)', 'noOpsWhenNoHandlersAreSetUp(lemma.library.EventFilterTest)')","[242, 1198]"
"('Description.java', 'org.junit.runner.Description', 'methodAndClassNamePatternGroupOrDefault', '([\\s\\S]*)\\((.*)\\)', 'buildAMarcoMessage(lemma.library.MessageBuilderTest)')","[930, 1823]"
"('Description.java', 'org.junit.runner.Description', 'methodAndClassNamePatternGroupOrDefault', '([\\s\\S]*)\\((.*)\\)', 'startsWithDefaultValue(lemma.library.ModeratorLocatorTest)')","[172, 1148]"
"('Description.java', 'org.junit.runner.Description', 'methodAndClassNamePatternGroupOrDefault', '([\\s\\S]*)\\((.*)\\)', 'buildEventDoubleArray(lemma.library.MessageBuilderTest)')","[882, 1773]"
"('Description.java', 'org.junit.runner.Description', 'methodAndClassNamePatternGroupOrDefault', '([\\s\\S]*)\\((.*)\\)', 'parseEventStringArray(lemma.library.MessageParserTest)')","[692, 1598]"
"('Description.java', 'org.junit.runner.Description', 'methodAndClassNamePatternGroupOrDefault', '([\\s\\S]*)\\((.*)\\)', 'handlesNullEvents(lemma.library.EventFilterTest)')","[266, 1223]"
"('Description.java', 'org.junit.runner.Description', 'methodAndClassNamePatternGroupOrDefault', '([\\s\\S]*)\\((.*)\\)', 'buildEventBool(lemma.library.MessageBuilderTest)')","[1074, 1973]"
"('Description.java', 'org.junit.runner.Description', 'methodAndClassNamePatternGroupOrDefault', '([\\s\\S]*)\\((.*)\\)', 'lemma.library.ModeratorLocatorTest')","[17, 124, 2045]"
"('Description.java', 'org.junit.runner.Description', 'methodAndClassNamePatternGroupOrDefault', '([\\s\\S]*)\\((.*)\\)', 'parseEventDoubleArray(lemma.library.MessageParserTest)')","[668, 1573]"
"('Description.java', 'org.junit.runner.Description', 'methodAndClassNamePatternGroupOrDefault', '([\\s\\S]*)\\((.*)\\)', 'parseEventString(lemma.library.MessageParserTest)')","[596, 1498]"
"('Description.java', 'org.junit.runner.Description', 'methodAndClassNamePatternGroupOrDefault', '([\\s\\S]*)\\((.*)\\)', 'buildEventFloatArray(lemma.library.MessageBuilderTest)')","[954, 1848]"
"('Description.java', 'org.junit.runner.Description', 'methodAndClassNamePatternGroupOrDefault', '([\\s\\S]*)\\((.*)\\)', 'buildEventFloat(lemma.library.MessageBuilderTest)')","[834, 1723]"
"('Description.java', 'org.junit.runner.Description', 'methodAndClassNamePatternGroupOrDefault', '([\\s\\S]*)\\((.*)\\)', 'parsesAPacket(lemma.library.ModeratorLocatorTest)')","[196, 1173]"
"('Description.java', 'org.junit.runner.Description', 'methodAndClassNamePatternGroupOrDefault', '([\\s\\S]*)\\((.*)\\)', 'buildEventIntArray(lemma.library.MessageBuilderTest)')","[858, 1748]"
"('Description.java', 'org.junit.runner.Description', 'methodAndClassNamePatternGroupOrDefault', '([\\s\\S]*)\\((.*)\\)', 'readsAGoodMessage(lemma.library.TCPReaderTest)')","[336, 1273]"
"('Description.java', 'org.junit.runner.Description', 'methodAndClassNamePatternGroupOrDefault', '([\\s\\S]*)\\((.*)\\)', 'parseEventFloatArray(lemma.library.MessageParserTest)')","[788, 1698]"
"('Lemma.java', 'lemma.library.Lemma', 'isValidLemmaId', '^[a-zA-Z_][a-zA-Z0-9_]*$', 'Lemma Name')","[2550, 2596]"
"('Description.java', 'org.junit.runner.Description', 'methodAndClassNamePatternGroupOrDefault', '([\\s\\S]*)\\((.*)\\)', 'testValidNames(lemma.library.LemmaTest)')","[454, 1373]"
"('Lemma.java', 'lemma.library.Lemma', 'isValidLemmaId', '^[a-zA-Z_][a-zA-Z0-9_]*$', 'LemmaName')","[2185, 2230, 2276, 2321, 2367, 2412, 2458, 2503]"
"('Description.java', 'org.junit.runner.Description', 'methodAndClassNamePatternGroupOrDefault', '([\\s\\S]*)\\((.*)\\)', 'buildAnEventMessage(lemma.library.MessageBuilderTest)')","[1050, 1948]"
"('Description.java', 'org.junit.runner.Description', 'methodAndClassNamePatternGroupOrDefault', '([\\s\\S]*)\\((.*)\\)', 'parseEventInt(lemma.library.MessageParserTest)')","[572, 1473]"
"('Description.java', 'org.junit.runner.Description', 'methodAndClassNamePatternGroupOrDefault', '([\\s\\S]*)\\((.*)\\)', 'testInvalidNames(lemma.library.LemmaTest)')","[478, 1398]"
"('Description.java', 'org.junit.runner.Description', 'methodAndClassNamePatternGroupOrDefault', '([\\s\\S]*)\\((.*)\\)', 'parseEventIntArray(lemma.library.MessageParserTest)')","[740, 1648]"
"('Description.java', 'org.junit.runner.Description', 'methodAndClassNamePatternGroupOrDefault', '([\\s\\S]*)\\((.*)\\)', 'lemma.library.TCPReaderTest')","[51, 288, 2139]"
"('Description.java', 'org.junit.runner.Description', 'methodAndClassNamePatternGroupOrDefault', '([\\s\\S]*)\\((.*)\\)', 'parseBadPoloMessage(lemma.library.MessageParserTest)')","[764, 1673]"
"('Description.java', 'org.junit.runner.Description', 'methodAndClassNamePatternGroupOrDefault', '([\\s\\S]*)\\((.*)\\)', 'fallsBackToDefaultOnLegacyMessage(lemma.library.ModeratorLocatorTest)')","[148, 1123]"
"('Description.java', 'org.junit.runner.Description', 'methodAndClassNamePatternGroupOrDefault', '([\\s\\S]*)\\((.*)\\)', 'buildEventStringArray(lemma.library.MessageBuilderTest)')","[906, 1798]"
