"('Description.java', 'org.junit.runner.Description', 'getClassName', '(.*)\\((.*)\\)', 'org.sagebionetworks.markdown.parsers.SuperscriptParserTest')","[26394, 26417, 26441, 26464]"
"('Description.java', 'org.junit.runner.Description', 'getClassName', '(.*)\\((.*)\\)', 'org.sagebionetworks.markdown.parsers.EscapedDashParserTest')","[26112, 26135, 26159, 26182]"
"('ListParser.java', 'org.sagebionetworks.markdown.parsers.ListParser', 'processLine', '(^[> \t\n\x0c\r]*)([-+*])(\\s+)(.+)', '2. Second item')",[31222]
"('MathParser.java', 'org.sagebionetworks.markdown.parsers.MathParser', 'processLine', '(^[> \t\n\x0c\r]*)[$]{2}\\s*$', 'Contains a Synapse widget ${fakewidget?param1=a} in the markdown.')",[7133]
"('CodeParser.java', 'org.sagebionetworks.markdown.parsers.CodeParser', 'processLine', '(^[> \t\n\x0c\r]*)[`]{3}\\s*([a-zA-Z_0-9-]*)\\s*$', 'sudo apt-get install git')",[30180]
"('ListParser.java', 'org.sagebionetworks.markdown.parsers.ListParser', 'processLine', '(^[> \t\n\x0c\r]*)([-+*])(\\s+)(.+)', '<tbody><tr><td>             </td><td>          Grouping           </td></tr>\n<tr><td>First Header  </td><td> Second Header </td><td> Third Header </td></tr>\n')",[10911]
"('Description.java', 'org.junit.runner.Description', 'getClassName', '(.*)\\((.*)\\)', 'testEscaping(org.sagebionetworks.markdown.parsers.EscapedUnderscoreParserTest)')",[1141]
"('ListParser.java', 'org.sagebionetworks.markdown.parsers.ListParser', 'processLine', '(^[> \t\n\x0c\r]*)([-+*])(\\s+)(.+)', '1. #### Heading1')",[30841]
"('HorizontalLineParser.java', 'org.sagebionetworks.markdown.parsers.HorizontalLineParser', 'processLine', '^[*]{3,}$', '<tbody><tr><td>Tau</td><td>MAPT</td><td>MCF7,BT20</td></tr>\n<tr><td>VASP</td><td>VASP</td><td>MCF7,BT20</td></tr>\n')",[20160]
"('HorizontalLineParser.java', 'org.sagebionetworks.markdown.parsers.HorizontalLineParser', 'processLine', '^[*]{3,}$', '<h3>HelloWorld</h3>')",[4510]
"('TableParser.java', 'org.sagebionetworks.markdown.parsers.TableParser', 'processLine', '(\\{\\|\\s*class=&quot;(.*?)&quot;\\s*)|(\\{\\|\\s*)', 'First')",[16230]
"('CodeParser.java', 'org.sagebionetworks.markdown.parsers.CodeParser', 'processLine', '(^[> \t\n\x0c\r]*)[`]{3}\\s*([a-zA-Z_0-9-]*)\\s*$', ""&amp; ==&gt; &amp;&quot; ==&gt; &quot;&gt; ==&gt; &gt;&lt; ==&gt; &lt;' ="")",[23666]
"('TableParser.java', 'org.sagebionetworks.markdown.parsers.TableParser', 'processLine', '(\\{\\|\\s*class=&quot;(.*?)&quot;\\s*)|(\\{\\|\\s*)', '--: | -- | :--')",[32170]
"('CodeParser.java', 'org.sagebionetworks.markdown.parsers.CodeParser', 'processLine', '(^[> \t\n\x0c\r]*)[`]{3}\\s*([a-zA-Z_0-9-]*)\\s*$', ' SubItem 2b')",[14717]
"('ListParser.java', 'org.sagebionetworks.markdown.parsers.ListParser', 'getListItem', '(^\\s*(>(\\s?))(.*))', '2. Second item')",[31246]
"('BlockQuoteParser.java', 'org.sagebionetworks.markdown.parsers.BlockQuoteParser', 'processLine', '(^\\s*(>(\\s?))(.*))', '`python s3cmd --configure s3://&lt;your_bucket_name&gt;`')",[22974]
"('ListParser.java', 'org.sagebionetworks.markdown.parsers.ListParser', 'processLine', '(^[> \t\n\x0c\r]*)(\\d+)[.](\\s+)(.+)', 'This is a ref ${reference?text=very simple&amp;inlineWidget=true}.')",[9153]
"('BlockQuoteParser.java', 'org.sagebionetworks.markdown.parsers.BlockQuoteParser', 'processLine', '(^\\s*(>(\\s?))(.*))', 'Second')",[16465]
"('Description.java', 'org.junit.runner.Description', 'getClassName', '(.*)\\((.*)\\)', 'org.sagebionetworks.markdown.parsers.StrikeoutParserTest')","[26864, 26887, 26911, 26934]"
"('HorizontalLineParser.java', 'org.sagebionetworks.markdown.parsers.HorizontalLineParser', 'processLine', '^[-]{3,}$', '<tr><td>------------</td><td>:-----------:</td><td>-----------:</td></tr>\n')",[11267]
"('Description.java', 'org.junit.runner.Description', 'getClassName', '(.*)\\((.*)\\)', 'testHeading(org.sagebionetworks.markdown.parsers.HeadingParserTest)')",[1676]
"('ListParser.java', 'org.sagebionetworks.markdown.parsers.ListParser', 'processLine', '(^[> \t\n\x0c\r]*)(\\d+)[.](\\s+)(.+)', '>   2. SubItem 2b')",[14582]
"('Description.java', 'org.junit.runner.Description', 'parseMethod', '(.*)\\((.*)\\)', 'testBold(org.sagebionetworks.markdown.parsers.BoldParserTest)')",[1615]
"('Description.java', 'org.junit.runner.Description', 'getClassName', '(.*)\\((.*)\\)', 'test(org.sagebionetworks.markdown.parsers.SynapseMarkdownWidgetParserTest)')",[1347]
"('Description.java', 'org.junit.runner.Description', 'parseMethod', '(.*)\\((.*)\\)', 'testRowColumn(org.sagebionetworks.markdown.parsers.RowColumnParserTest)')",[1512]
"('BlockQuoteParser.java', 'org.sagebionetworks.markdown.parsers.BlockQuoteParser', 'processLine', '(^\\s*(>(\\s?))(.*))', '{column}')","[4535, 5459]"
"('Description.java', 'org.junit.runner.Description', 'parseMethod', '(.*)\\((.*)\\)', 'testHtmlStripping(org.sagebionetworks.markdown.SynapseMarkdownProcessorTest)')",[480]
"('TableParser.java', 'org.sagebionetworks.markdown.parsers.TableParser', 'processLine', '(\\{\\|\\s*class=&quot;(.*?)&quot;\\s*)|(\\{\\|\\s*)', '### How are you?')",[5306]
"('ListParser.java', 'org.sagebionetworks.markdown.parsers.ListParser', 'processLine', '(^[> \t\n\x0c\r]*)([-+*])(\\s+)(.+)', '&lt;table&gt;&lt;tr&gt;&lt;td&gt;this is a test&lt;/td&gt;&lt;td&gt;column 2&lt;/td&gt;&lt;/tr&gt;&lt;/table&gt;&lt;iframe width=&quot;420&quot; height=&quot;315&quot; src=&quot;http://www.youtube.com/embed/AOjaQ7Vl7SM&quot; frameborder=&quot;0&quot; allowfullscreen&gt;&lt;/iframe&gt;&lt;embed&gt;')",[8517]
"('HeadingParser.java', 'org.sagebionetworks.markdown.parsers.HeadingParser', 'processLine', '(^[> \t\n\x0c\r]*)(#{1,6})\\s*(.*)', 'SubItem 2b')",[18343]
"('HeadingParser.java', 'org.sagebionetworks.markdown.parsers.HeadingParser', 'processLine', '(^[> \t\n\x0c\r]*)(#{1,6})\\s*(.*)', ""&amp; ==&gt; &amp;&quot; ==&gt; &quot;&gt; ==&gt; &gt;&lt; ==&gt; &lt;' ="")",[23853]
"('TableParser.java', 'org.sagebionetworks.markdown.parsers.TableParser', 'processLine', '\\s*\\|\\}\\s*', '### Hello World')",[4407]
"('ListParser.java', 'org.sagebionetworks.markdown.parsers.ListParser', 'processLine', '(^[> \t\n\x0c\r]*)([-+*])(\\s+)(.+)', '    1.  bunk')",[28938]
"('HeadingParser.java', 'org.sagebionetworks.markdown.parsers.HeadingParser', 'processLine', '(^[> \t\n\x0c\r]*)(#{1,6})\\s*(.*)', 'Contains a Synapse widget <span id=""widgetsyntax-0-suffix-test""></span> in the markdown.')",[7292]
"('HorizontalLineParser.java', 'org.sagebionetworks.markdown.parsers.HorizontalLineParser', 'processLine', '^[-]{3,}$', '<tr><td>Content</td><td><strong>Cell</strong></td><td>Cell</td></tr>\n')",[11863]
"('ListParser.java', 'org.sagebionetworks.markdown.parsers.ListParser', 'processLine', '(^[> \t\n\x0c\r]*)([-+*])(\\s+)(.+)', 'Text in this line after (0.01&lt;LALA&lt;0.05) is not included in the output html')",[7853]
"('CodeParser.java', 'org.sagebionetworks.markdown.parsers.CodeParser', 'processLine', '(^[> \t\n\x0c\r]*)[`]{3}\\s*([a-zA-Z_0-9-]*)\\s*$', '<tr><td>Content       </td><td>          *Long Cell*        </td></tr>\n')",[11423]
"('TableParser.java', 'org.sagebionetworks.markdown.parsers.TableParser', 'processLine', '(.+[|]{1}.*)+', '##-&gt;Centered Headline&lt;-')",[2470]
"('ListParser.java', 'org.sagebionetworks.markdown.parsers.ListParser', 'processLine', '(^[> \t\n\x0c\r]*)([-+*])(\\s+)(.+)', ' ')","[15487, 18982]"
"('ListParser.java', 'org.sagebionetworks.markdown.parsers.ListParser', 'processLine', '(^[> \t\n\x0c\r]*)([-+*])(\\s+)(.+)', '_italicized_')",[22132]
"('ListParser.java', 'org.sagebionetworks.markdown.parsers.ListParser', 'processLine', '(^[> \t\n\x0c\r]*)([-+*])(\\s+)(.+)', '1. First')",[16179]
"('ListParser.java', 'org.sagebionetworks.markdown.parsers.ListParser', 'processLine', '(^[> \t\n\x0c\r]*)(\\d+)[.](\\s+)(.+)', '    2.  bupkis')",[28988]
"('TableParser.java', 'org.sagebionetworks.markdown.parsers.TableParser', 'processLine', '\\s*\\|\\}\\s*', ' ')","[15565, 17258, 19060]"
"('TableParser.java', 'org.sagebionetworks.markdown.parsers.TableParser', 'processLine', '\\s*\\|\\}\\s*', 'Content       |          *Long Cell*        ||')",[11343]
"('CodeParser.java', 'org.sagebionetworks.markdown.parsers.CodeParser', 'processLine', '(^[> \t\n\x0c\r]*)[`]{3}\\s*([a-zA-Z_0-9-]*)\\s*$', '``` r')","[15088, 18583]"
"('TableParser.java', 'org.sagebionetworks.markdown.parsers.TableParser', 'processLine', '(\\{\\|\\s*class=&quot;(.*?)&quot;\\s*)|(\\{\\|\\s*)', 'Tau | MAPT | MCF7,BT20')",[19699]
"('TableParser.java', 'org.sagebionetworks.markdown.parsers.TableParser', 'processLine', '\\s*\\|\\}\\s*', 'Second')",[16571]
"('ListParser.java', 'org.sagebionetworks.markdown.parsers.ListParser', 'processLine', '(^[> \t\n\x0c\r]*)(\\d+)[.](\\s+)(.+)', '--------------------------------')",[20642]
"('TableParser.java', 'org.sagebionetworks.markdown.parsers.TableParser', 'processLine', '\\s*\\|\\}\\s*', 'Configure s3cmd by executing')",[22846]
"('HeadingParser.java', 'org.sagebionetworks.markdown.parsers.HeadingParser', 'processLine', '(^[> \t\n\x0c\r]*)(#{1,6})\\s*(.*)', '&lt;table&gt;&lt;tr&gt;&lt;td&gt;this is a test&lt;/td&gt;&lt;td&gt;column 2&lt;/td&gt;&lt;/tr&gt;&lt;/table&gt;&lt;iframe width=&quot;420&quot; height=&quot;315&quot; src=&quot;<span id=""autolink-0""></span>; frameborder=&quot;0&quot; allowfullscreen&gt;&lt;/iframe&gt;&lt;embed&gt;')",[8620]
"('TableParser.java', 'org.sagebionetworks.markdown.parsers.TableParser', 'processLine', '\\s*\\|\\}\\s*', ' |}')",[12843]
"('BlockQuoteParser.java', 'org.sagebionetworks.markdown.parsers.BlockQuoteParser', 'processLine', '(^\\s*(>(\\s?))(.*))', 'This is a ref ${reference?text=very simple&amp;inlineWidget=true}.')",[9069]
"('MathParser.java', 'org.sagebionetworks.markdown.parsers.MathParser', 'processLine', '(^[> \t\n\x0c\r]*)[$]{2}\\s*$', '{| class=&quot;border text-align-center&quot; ')",[12344]
"('TableParser.java', 'org.sagebionetworks.markdown.parsers.TableParser', 'processLine', '(\\{\\|\\s*class=&quot;(.*?)&quot;\\s*)|(\\{\\|\\s*)', 'Row 2 Content Cell 1  | Row 2 Content Cell 2  | Row 2 Content Cell 3')",[32795]
"('Description.java', 'org.junit.runner.Description', 'getClassName', '(.*)\\((.*)\\)', 'testCenterHeadlineText(org.sagebionetworks.markdown.SynapseMarkdownProcessorTest)')",[186]
"('Description.java', 'org.junit.runner.Description', 'parseMethod', '(.*)\\((.*)\\)', 'testMathBlock(org.sagebionetworks.markdown.parsers.MathParserTest)')",[543]
"('Description.java', 'org.junit.runner.Description', 'parseMethod', '(.*)\\((.*)\\)', 'testHappyCase(org.sagebionetworks.markdown.parsers.BlockQuoteParserTest)')",[792]
"('HeadingParser.java', 'org.sagebionetworks.markdown.parsers.HeadingParser', 'processLine', '(^[> \t\n\x0c\r]*)(#{1,6})\\s*(.*)', 'First')",[16308]
"('ListParser.java', 'org.sagebionetworks.markdown.parsers.ListParser', 'processLine', '(^[> \t\n\x0c\r]*)(\\d+)[.](\\s+)(.+)', '### Hello World')",[4329]
"('Description.java', 'org.junit.runner.Description', 'parseMethod', '(.*)\\((.*)\\)', 'testSuperscript(org.sagebionetworks.markdown.parsers.SuperscriptParserTest)')",[977]
"('Description.java', 'org.junit.runner.Description', 'parseMethod', '(.*)\\((.*)\\)', 'testHR1(org.sagebionetworks.markdown.parsers.HorizontalLineParserTest)')",[1244]
"('TableParser.java', 'org.sagebionetworks.markdown.parsers.TableParser', 'processLine', '\\s*\\|\\}\\s*', ' #### SubItem 2a')",[14451]
"('BlockQuoteParser.java', 'org.sagebionetworks.markdown.parsers.BlockQuoteParser', 'processLine', '(^\\s*(>(\\s?))(.*))', '### Hello World')",[4245]
"('CodeParser.java', 'org.sagebionetworks.markdown.parsers.CodeParser', 'processLine', '(^[> \t\n\x0c\r]*)[`]{3}\\s*([a-zA-Z_0-9-]*)\\s*$', 'Second')",[16493]
"('BlockQuoteParser.java', 'org.sagebionetworks.markdown.parsers.BlockQuoteParser', 'processLine', '(^[> \t\n\x0c\r]*)[`]{3}\\s*([a-zA-Z_0-9-]*)\\s*$', '> first line text')",[25828]
"('MathParser.java', 'org.sagebionetworks.markdown.parsers.MathParser', 'processLine', '(^[> \t\n\x0c\r]*)[$]{2}\\s*$', '\\nabla \\cdot \\vec{\\mathbf{B}} & = 0 \\end{aligned}')",[25539]
"('HeadingParser.java', 'org.sagebionetworks.markdown.parsers.HeadingParser', 'processLine', '(^[> \t\n\x0c\r]*)(#{1,6})\\s*(.*)', '<tr><td> Row 1 Content Cell 1 </td><td> Row 1 Content Cell 2 </td><td> Row 1 Content Cell 3 </td></tr>\n')",[12875]
"('BlockQuoteParser.java', 'org.sagebionetworks.markdown.parsers.BlockQuoteParser', 'processLine', '(^\\s*(>(\\s?))(.*))', '> SubItem 2b')",[14661]
"('CodeParser.java', 'org.sagebionetworks.markdown.parsers.CodeParser', 'processLine', '(^[> \t\n\x0c\r]*)[`]{3}\\s*([a-zA-Z_0-9-]*)\\s*$', '{column}')","[4563, 5487]"
"('BlockQuoteParser.java', 'org.sagebionetworks.markdown.parsers.BlockQuoteParser', 'processLine', '(^\\s*(>(\\s?))(.*))', '> * Item 2')",[17386]
"('ListParser.java', 'org.sagebionetworks.markdown.parsers.ListParser', 'processLine', '(^[> \t\n\x0c\r]*)([-+*])(\\s+)(.+)', '    sudo apt-get install git')",[30105]
"('MathParser.java', 'org.sagebionetworks.markdown.parsers.MathParser', 'processLine', '(^[> \t\n\x0c\r]*)[$]{2}\\s*$', '### Hello World')",[4301]
"('ListParser.java', 'org.sagebionetworks.markdown.parsers.ListParser', 'processLine', '(^[> \t\n\x0c\r]*)([-+*])(\\s+)(.+)', 'DemoClinicalOnlyModel &lt;- setRefClass(Class  = &quot;CINModel&quot;,...')",[9845]
"('HorizontalLineParser.java', 'org.sagebionetworks.markdown.parsers.HorizontalLineParser', 'processLine', '^[*]{3,}$', '<tr><td>Content</td><td><strong>Cell</strong></td><td>Cell</td></tr>\n')",[11889]
"('TableParser.java', 'org.sagebionetworks.markdown.parsers.TableParser', 'processLine', '\\s*\\|\\}\\s*', '&lt;table&gt;&lt;tr&gt;&lt;td&gt;this is a test&lt;/td&gt;&lt;td&gt;column 2&lt;/td&gt;&lt;/tr&gt;&lt;/table&gt;&lt;iframe width=&quot;420&quot; height=&quot;315&quot; src=&quot;http://www.youtube.com/embed/AOjaQ7Vl7SM&quot; frameborder=&quot;0&quot; allowfullscreen&gt;&lt;/iframe&gt;&lt;embed&gt;')",[8567]
"('HeadingParser.java', 'org.sagebionetworks.markdown.parsers.HeadingParser', 'processLine', '(^[> \t\n\x0c\r]*)(#{1,6})\\s*(.*)', '##-&gt;Centered Headline&lt;-')",[2498]
"('BlockQuoteParser.java', 'org.sagebionetworks.markdown.parsers.BlockQuoteParser', 'processLine', '(^[> \t\n\x0c\r]*)[`]{3}\\s*([a-zA-Z_0-9-]*)\\s*$', '> Item 2')",[14001]
"('ListParser.java', 'org.sagebionetworks.markdown.parsers.ListParser', 'processLine', '(^[> \t\n\x0c\r]*)([-+*])(\\s+)(.+)', '*   Bubbles')",[28862]
"('Description.java', 'org.junit.runner.Description', 'parseMethod', '(.*)\\((.*)\\)', 'testEscaping(org.sagebionetworks.markdown.parsers.EscapedUnderscoreParserTest)')",[1121]
"('ListParser.java', 'org.sagebionetworks.markdown.parsers.ListParser', 'processLine', '(^\\s*(>(\\s?))(.*))', '``` r')",[18555]
"('Description.java', 'org.junit.runner.Description', 'getClassName', '(.*)\\((.*)\\)', 'testHappyCase(org.sagebionetworks.markdown.parsers.CodeParserTest)')",[1779]
"('CodeParser.java', 'org.sagebionetworks.markdown.parsers.CodeParser', 'processLine', '(^[> \t\n\x0c\r]*)[`]{3}\\s*([a-zA-Z_0-9-]*)\\s*$', '')","[2601, 3265, 6067, 6731, 7395, 8059, 8723, 9387, 10051, 12017, 12631, 12986, 13276, 15721, 16836, 19216, 21141, 22313, 23292, 23956, 24969]"
"('ListParser.java', 'org.sagebionetworks.markdown.parsers.ListParser', 'getListItem', '(^\\s*(>(\\s?))(.*))', '   1. #### SubItem 2a')",[17840]
"('CodeParser.java', 'org.sagebionetworks.markdown.parsers.CodeParser', 'processLine', '(^[> \t\n\x0c\r]*)[`]{3}\\s*([a-zA-Z_0-9-]*)\\s*$', '``` ruby')",[28486]
"('CodeParser.java', 'org.sagebionetworks.markdown.parsers.CodeParser', 'processLine', '(^[> \t\n\x0c\r]*)[`]{3}\\s*([a-zA-Z_0-9-]*)\\s*$', ' spaces  and')",[24595]
"('TableParser.java', 'org.sagebionetworks.markdown.parsers.TableParser', 'processLine', '\\s*\\|\\}\\s*', 'Row 1 Content Cell 1 | Row 1 Content Cell 2')",[31986]
"('TableParser.java', 'org.sagebionetworks.markdown.parsers.TableParser', 'processLine', '\\s*\\|\\}\\s*', '--: | -- | :--')",[32193]
"('HorizontalLineParser.java', 'org.sagebionetworks.markdown.parsers.HorizontalLineParser', 'processLine', '^[*]{3,}$', '***')",[27026]
"('CodeParser.java', 'org.sagebionetworks.markdown.parsers.CodeParser', 'processLine', '(^[> \t\n\x0c\r]*)[`]{3}\\s*([a-zA-Z_0-9-]*)\\s*$', '<tr><td> ------------ </td><td> :-----------: </td><td> -----------: </td></tr>\n')",[11125]
"('HeadingParser.java', 'org.sagebionetworks.markdown.parsers.HeadingParser', 'processLine', '(^[> \t\n\x0c\r]*)(#{1,6})\\s*(.*)', '<tbody><tr><td>             </td><td>          Grouping           </td></tr>\n<tr><td>First Header  </td><td> Second Header </td><td> Third Header </td></tr>\n')",[10941]
"('HorizontalLineParser.java', 'org.sagebionetworks.markdown.parsers.HorizontalLineParser', 'processLine', '^[-]{3,}$', 'Thisisaref<spanid=""wikiReference1"">&nbsp;</span><spanid=""widgetsyntax-0""></span>.')",[9309]
"('Description.java', 'org.junit.runner.Description', 'getClassName', '(.*)\\((.*)\\)', 'org.sagebionetworks.markdown.parsers.TildeParserTest')","[28056, 28079, 28103, 28126]"
"('TableParser.java', 'org.sagebionetworks.markdown.parsers.TableParser', 'processLine', '\\s*\\|\\}\\s*', ' SubItem 2b')",[14795]
"('ListParser.java', 'org.sagebionetworks.markdown.parsers.ListParser', 'processLine', '(^[> \t\n\x0c\r]*)(\\d+)[.](\\s+)(.+)', '    sudo pip install python-magic')",[30460]
"('ListParser.java', 'org.sagebionetworks.markdown.parsers.ListParser', 'processLine', '(^[> \t\n\x0c\r]*)([-+*])(\\s+)(.+)', '* First item')","[29445, 29876]"
"('CodeParser.java', 'org.sagebionetworks.markdown.parsers.CodeParser', 'processLine', '(^[> \t\n\x0c\r]*)[`]{3}\\s*([a-zA-Z_0-9-]*)\\s*$', '<tr><td>Content       </td><td>   **Cell**    </td><td>         Cell </td></tr>\n')",[11721]
"('HorizontalLineParser.java', 'org.sagebionetworks.markdown.parsers.HorizontalLineParser', 'processLine', '^[-]{3,}$', '&lt;table&gt;&lt;tr&gt;&lt;td&gt;thisisatest&lt;/td&gt;&lt;td&gt;column2&lt;/td&gt;&lt;/tr&gt;&lt;/table&gt;&lt;iframewidth=&quot;420&quot;height=&quot;315&quot;src=&quot;<spanid=""autolink-0""></span>;frameborder=&quot;0&quot;allowfullscreen&gt;&lt;/iframe&gt;&lt;embed&gt;')",[8645]
"('TableParser.java', 'org.sagebionetworks.markdown.parsers.TableParser', 'processLine', '(.+[|]{1}.*)+', '{column}')","[4722, 5646]"
"('TableParser.java', 'org.sagebionetworks.markdown.parsers.TableParser', 'processLine', '(\\{\\|\\s*class=&quot;(.*?)&quot;\\s*)|(\\{\\|\\s*)', 'First Header  | Second Header | Third Header |')",[10687]
"('MathParser.java', 'org.sagebionetworks.markdown.parsers.MathParser', 'processLine', '(^[> \t\n\x0c\r]*)[$]{2}\\s*$', 'Contains this inline math $\\[\\left( \\sum_{k=1}^n a_k b_k \\right)^2 \\leq \\left( \\sum_{k=1}^n a_k^2 \\right) \\left( \\sum_{k=1}^n b_k^2 \\right)\\]$ equation')",[25591]
"('HorizontalLineParser.java', 'org.sagebionetworks.markdown.parsers.HorizontalLineParser', 'processLine', '^[*]{3,}$', '{row}')","[3876, 6014]"
"('CodeParser.java', 'org.sagebionetworks.markdown.parsers.CodeParser', 'processLine', '(^[> \t\n\x0c\r]*)[`]{3}\\s*([a-zA-Z_0-9-]*)\\s*$', '<tbody><tr><td>             </td><td>          Grouping           </td></tr>\n<tr><td>First Header  </td><td> Second Header </td><td> Third Header </td></tr>\n')",[10821]
"('TableParser.java', 'org.sagebionetworks.markdown.parsers.TableParser', 'processLine', '(.+[|]{1}.*)+', 'XIAP | XIAP | MCF7,BT20')",[20235]
"('HeadingParser.java', 'org.sagebionetworks.markdown.parsers.HeadingParser', 'processLine', '(^[> \t\n\x0c\r]*)(#{1,6})\\s*(.*)', '<tr><td> ------------ </td><td> :-----------: </td><td> -----------: </td></tr>\n')",[11241]
"('HorizontalLineParser.java', 'org.sagebionetworks.markdown.parsers.HorizontalLineParser', 'processLine', '^[-]{3,}$', '***')",[27003]
"('TableParser.java', 'org.sagebionetworks.markdown.parsers.TableParser', 'processLine', '(.+[|]{1}.*)+', ' SubItem 2b')",[14820]
"('ListParser.java', 'org.sagebionetworks.markdown.parsers.ListParser', 'processLine', '(^[> \t\n\x0c\r]*)(\\d+)[.](\\s+)(.+)', '<tr><td>XIAP </td><td> XIAP </td><td> MCF7,BT20</td></tr>\n')",[20348]
"('Description.java', 'org.junit.runner.Description', 'getClassName', '(.*)\\((.*)\\)', 'testMixedNestedLists(org.sagebionetworks.markdown.parsers.ListParserTest)')",[1820]
"('TableParser.java', 'org.sagebionetworks.markdown.parsers.TableParser', 'processLine', '(\\{\\|\\s*class=&quot;(.*?)&quot;\\s*)|(\\{\\|\\s*)', ' ')","[15540, 17233, 19035]"
"('BlockQuoteParser.java', 'org.sagebionetworks.markdown.parsers.BlockQuoteParser', 'processLine', '(^\\s*(>(\\s?))(.*))', '```')",[24302]
"('TableParser.java', 'org.sagebionetworks.markdown.parsers.TableParser', 'processLine', '(.+[|]{1}.*)+', '')","[2760, 3424, 6226, 6890, 7554, 8218, 8882, 9546, 10210, 11964, 13223, 15191, 15880, 16939, 18686, 19375, 21088, 21599, 21917, 22497, 23451, 24115, 24489, 24863, 25153, 32078, 32310, 32542, 32680, 32958]"
"('Description.java', 'org.junit.runner.Description', 'getClassName', '(.*)\\((.*)\\)', 'org.sagebionetworks.markdown.parsers.RowColumnParserTest')","[27868, 27891, 27915, 27938]"
"('Description.java', 'org.junit.runner.Description', 'parseMethod', '(.*)\\((.*)\\)', 'testRowColumnHappyCase(org.sagebionetworks.markdown.parsers.RowColumnParserTest)')",[1471]
"('ListParser.java', 'org.sagebionetworks.markdown.parsers.ListParser', 'processLine', '(^[> \t\n\x0c\r]*)([-+*])(\\s+)(.+)', '##-&gt;Centered Headline&lt;-')",[2395]
"('Description.java', 'org.junit.runner.Description', 'parseMethod', '(.*)\\((.*)\\)', 'testExampleTable(org.sagebionetworks.markdown.parsers.TableParserTest)')",[2070]
"('Scanner.java', 'java.util.Scanner', 'getCompleteTokenInBuffer', '(?s).*', ' width=5 offset=1')","[27519, 27544, 27569, 27594]"
"('HorizontalLineParser.java', 'org.sagebionetworks.markdown.parsers.HorizontalLineParser', 'processLine', '^[*]{3,}$', 'SubItem2b')","[14898, 18393]"
"('BlockQuoteParser.java', 'org.sagebionetworks.markdown.parsers.BlockQuoteParser', 'processLine', '(^[> \t\n\x0c\r]*)[`]{3}\\s*([a-zA-Z_0-9-]*)\\s*$', '> Then a code block!')","[15350, 18845]"
"('TableParser.java', 'org.sagebionetworks.markdown.parsers.TableParser', 'processLine', '\\s*\\|\\}\\s*', 'link to the doi:10.7303/syn2699915 for the challenge')",[6575]
"('ListParser.java', 'org.sagebionetworks.markdown.parsers.ListParser', 'processLine', '(^[> \t\n\x0c\r]*)([-+*])(\\s+)(.+)', '>   1. #### SubItem 2a')",[14266]
"('Description.java', 'org.junit.runner.Description', 'parseMethod', '(.*)\\((.*)\\)', 'testTableWithOneLine(org.sagebionetworks.markdown.parsers.TableParserTest)')",[2049]
"('HorizontalLineParser.java', 'org.sagebionetworks.markdown.parsers.HorizontalLineParser', 'processLine', '^[-]{3,}$', '*******')",[27049]
"('MathParser.java', 'org.sagebionetworks.markdown.parsers.MathParser', 'processLine', '(^[> \t\n\x0c\r]*)[$]{2}\\s*$', ' SubItem 2b')",[14745]
"('TableParser.java', 'org.sagebionetworks.markdown.parsers.TableParser', 'processLine', '(.+[|]{1}.*)+', '--: | -- | :--')",[32216]
"('HeadingParser.java', 'org.sagebionetworks.markdown.parsers.HeadingParser', 'processLine', '(^[> \t\n\x0c\r]*)(#{1,6})\\s*(.*)', 'Text in this line after (0.01&lt;LALA&lt;0.05) is not included in the output html')",[7956]
"('Description.java', 'org.junit.runner.Description', 'parseMethod', '(.*)\\((.*)\\)', 'testAssignIdsToHeadings(org.sagebionetworks.markdown.utils.ServerMarkdownUtilsTest)')",[124]
"('HeadingParser.java', 'org.sagebionetworks.markdown.parsers.HeadingParser', 'processLine', '(^[> \t\n\x0c\r]*)(#{1,6})\\s*(.*)', 'Item 2')",[17655]
"('ListParser.java', 'org.sagebionetworks.markdown.parsers.ListParser', 'getListItem', '(^\\s*(>(\\s?))(.*))', '*   Bubbles')",[28886]
"('ListParser.java', 'org.sagebionetworks.markdown.parsers.ListParser', 'processLine', '(^[> \t\n\x0c\r]*)(\\d+)[.](\\s+)(.+)', '>   1. #### SubItem 2a')",[14238]
"('ListParser.java', 'org.sagebionetworks.markdown.parsers.ListParser', 'getListItem', '(^\\s*(>(\\s?))(.*))', '2. Second one')",[31651]
"('TableParser.java', 'org.sagebionetworks.markdown.parsers.TableParser', 'processLine', '(.+[|]{1}.*)+', '_italicized_')",[22207]
"('HorizontalLineParser.java', 'org.sagebionetworks.markdown.parsers.HorizontalLineParser', 'processLine', '^[-]{3,}$', '<h2>-&gt;CenteredHeadline&lt;-</h2>')",[2523]
"('Description.java', 'org.junit.runner.Description', 'getClassName', '(.*)\\((.*)\\)', 'org.sagebionetworks.markdown.parsers.HeadingParserTest')","[28296, 28319, 28343, 28366]"
"('HorizontalLineParser.java', 'org.sagebionetworks.markdown.parsers.HorizontalLineParser', 'processLine', '^[*]{3,}$', '<tr><td>XIAP</td><td>XIAP</td><td>MCF7,BT20</td></tr>\n')",[20458]
"('ListParser.java', 'org.sagebionetworks.markdown.parsers.ListParser', 'processLine', '(^[> \t\n\x0c\r]*)(\\d+)[.](\\s+)(.+)', '{column}')","[4619, 5543]"
"('Description.java', 'org.junit.runner.Description', 'parseMethod', '(.*)\\((.*)\\)', 'testTableWithHeader(org.sagebionetworks.markdown.parsers.TableParserTest)')",[2007]
"('HorizontalLineParser.java', 'org.sagebionetworks.markdown.parsers.HorizontalLineParser', 'processLine', '^[-]{3,}$', '{row}')","[3851, 5989]"
"('CodeParser.java', 'org.sagebionetworks.markdown.parsers.CodeParser', 'processLine', '(^[> \t\n\x0c\r]*)[`]{3}\\s*([a-zA-Z_0-9-]*)\\s*$', 'Text in this line after (0.01&lt;LALA&lt;0.05) is not included in the output html')",[7769]
"('ListParser.java', 'org.sagebionetworks.markdown.parsers.ListParser', 'processLine', '(^[> \t\n\x0c\r]*)([-+*])(\\s+)(.+)', '2. Second')",[16414]
"('ListParser.java', 'org.sagebionetworks.markdown.parsers.ListParser', 'processLine', '(^[> \t\n\x0c\r]*)(\\d+)[.](\\s+)(.+)', 'DemoClinicalOnlyModel &lt;- setRefClass(Class  = &quot;CINModel&quot;,...')",[9817]
"('ListParser.java', 'org.sagebionetworks.markdown.parsers.ListParser', 'processLine', '(^[> \t\n\x0c\r]*)(\\d+)[.](\\s+)(.+)', '2. Second item')",[31196]
"('Description.java', 'org.junit.runner.Description', 'parseMethod', '(.*)\\((.*)\\)', 'testRAssign(org.sagebionetworks.markdown.SynapseMarkdownProcessorTest)')",[354]
"('Description.java', 'org.junit.runner.Description', 'parseMethod', '(.*)\\((.*)\\)', 'testHR2(org.sagebionetworks.markdown.parsers.HorizontalLineParserTest)')",[1285]
"('TableParser.java', 'org.sagebionetworks.markdown.parsers.TableParser', 'processLine', '(\\{\\|\\s*class=&quot;(.*?)&quot;\\s*)|(\\{\\|\\s*)', '##-&gt;Centered Headline&lt;-')",[2420]
"('ListParser.java', 'org.sagebionetworks.markdown.parsers.ListParser', 'getListItem', '(^\\s*(>(\\s?))(.*))', '        * BELITTLER')",[29114]
"('TableParser.java', 'org.sagebionetworks.markdown.parsers.TableParser', 'processLine', '\\s*\\|\\}\\s*', 'XIAP | XIAP | MCF7,BT20')",[20210]
"('TableParser.java', 'org.sagebionetworks.markdown.parsers.TableParser', 'processLine', '(\\{\\|\\s*class=&quot;(.*?)&quot;\\s*)|(\\{\\|\\s*)', '|             |          Grouping           ||')",[10534]
"('HorizontalLineParser.java', 'org.sagebionetworks.markdown.parsers.HorizontalLineParser', 'processLine', '^[-]{3,}$', 'Second')",[16649]
"('CodeParser.java', 'org.sagebionetworks.markdown.parsers.CodeParser', 'processLine', '(^[> \t\n\x0c\r]*)[`]{3}\\s*([a-zA-Z_0-9-]*)\\s*$', '#### SubItem 2a')",[17868]
"('ListParser.java', 'org.sagebionetworks.markdown.parsers.ListParser', 'processLine', '(^[> \t\n\x0c\r]*)(\\d+)[.](\\s+)(.+)', 'The hi in t**hi**s is bold. No spaces in H~2~O.')",[3031]
"('ListParser.java', 'org.sagebionetworks.markdown.parsers.ListParser', 'getListItem', '(^\\s*(>(\\s?))(.*))', '    2. bupkis')",[31575]
"('BlockQuoteParser.java', 'org.sagebionetworks.markdown.parsers.BlockQuoteParser', 'processLine', '(^\\s*(>(\\s?))(.*))', 'Contains a Synapse widget ${fakewidget?param1=a} in the markdown.')",[7077]
"('TableParser.java', 'org.sagebionetworks.markdown.parsers.TableParser', 'processLine', '\\s*\\|\\}\\s*', '| Row 1 Content Cell 1 | Row 1 Content Cell 2  | Row 1 Content Cell 3 |')",[32356]
"('Description.java', 'org.junit.runner.Description', 'getClassName', '(.*)\\((.*)\\)', 'org.sagebionetworks.markdown.parsers.LinkParserTest')","[25709, 25732, 25756, 25779]"
"('MathParser.java', 'org.sagebionetworks.markdown.parsers.MathParser', 'processLine', '(^[> \t\n\x0c\r]*)[$]{2}\\s*$', 'link to the doi:10.7303/syn2699915 for the challenge')",[6469]
"('ListParser.java', 'org.sagebionetworks.markdown.parsers.ListParser', 'processLine', '(^[> \t\n\x0c\r]*)([-+*])(\\s+)(.+)', ' * Item 2')",[17470]
"('TableParser.java', 'org.sagebionetworks.markdown.parsers.TableParser', 'processLine', '(.+[|]{1}.*)+', '## Additional Data Details')",[20798]
"('MathParser.java', 'org.sagebionetworks.markdown.parsers.MathParser', 'processLine', '(^[> \t\n\x0c\r]*)[$]{2}\\s*$', '\\begin{aligned}')",[25461]
"('Description.java', 'org.junit.runner.Description', 'getClassName', '(.*)\\((.*)\\)', 'org.sagebionetworks.markdown.parsers.BookmarkTargetParserTest')","[27330, 27353, 27377, 27400]"
"('TableParser.java', 'org.sagebionetworks.markdown.parsers.TableParser', 'processLine', '(.+[|]{1}.*)+', 'Item 2')",[17627]
"('ListParser.java', 'org.sagebionetworks.markdown.parsers.ListParser', 'processLine', '(^[> \t\n\x0c\r]*)([-+*])(\\s+)(.+)', '{column}')","[4647, 5571]"
"('MathParser.java', 'org.sagebionetworks.markdown.parsers.MathParser', 'processLine', '(^[> \t\n\x0c\r]*)[$]{2}\\s*$', '{column width=6}')","[3957, 4881]"
"('Description.java', 'org.junit.runner.Description', 'parseMethod', '(.*)\\((.*)\\)', 'testMixedNestedLists(org.sagebionetworks.markdown.parsers.ListParserTest)')",[1800]
"('TableParser.java', 'org.sagebionetworks.markdown.parsers.TableParser', 'processLine', '\\s*\\|\\}\\s*', '##-&gt;Centered Headline&lt;-')",[2445]
"('Description.java', 'org.junit.runner.Description', 'parseMethod', '(.*)\\((.*)\\)', 'testReference(org.sagebionetworks.markdown.SynapseMarkdownProcessorTest)')",[333]
"('ListParser.java', 'org.sagebionetworks.markdown.parsers.ListParser', 'processLine', '(^[> \t\n\x0c\r]*)([-+*])(\\s+)(.+)', 'The hi in t**hi**s is bold. No spaces in H~2~O.')",[3059]
"('HorizontalLineParser.java', 'org.sagebionetworks.markdown.parsers.HorizontalLineParser', 'processLine', '^[-]{3,}$', '<divclass=""overflow-auto""><tableid=""markdown-table-0""class=""tablesortermarkdowntablebordertext-align-center"">')",[12503]
"('Description.java', 'org.junit.runner.Description', 'getClassName', '(.*)\\((.*)\\)', 'org.sagebionetworks.markdown.parsers.ReferenceParserTest')","[26582, 26605, 26629, 26652]"
"('TableParser.java', 'org.sagebionetworks.markdown.parsers.TableParser', 'processLine', '(\\{\\|\\s*class=&quot;(.*?)&quot;\\s*)|(\\{\\|\\s*)', '')","[2710, 3374, 6176, 6840, 7504, 8168, 8832, 9496, 10160, 11914, 13173, 15141, 15830, 16889, 18636, 19325, 21038, 21549, 21867, 22447, 23401, 24065, 24439, 24813, 25103, 32032, 32264, 32496, 32634, 32912]"
"('Description.java', 'org.junit.runner.Description', 'parseMethod', '(.*)\\((.*)\\)', 'testDoiLink(org.sagebionetworks.markdown.SynapseMarkdownProcessorTest)')",[249]
"('Description.java', 'org.junit.runner.Description', 'getClassName', '(.*)\\((.*)\\)', 'testStrikeout(org.sagebionetworks.markdown.parsers.StrikeoutParserTest)')",[1223]
"('TableParser.java', 'org.sagebionetworks.markdown.parsers.TableParser', 'processLine', '(.+[|]{1}.*)+', ' ')","[15590, 17283, 19085]"
"('Description.java', 'org.junit.runner.Description', 'parseMethod', '(.*)\\((.*)\\)', 'testWithHeader(org.sagebionetworks.markdown.parsers.ListParserTest)')",[1883]
"('Description.java', 'org.junit.runner.Description', 'parseMethod', '(.*)\\((.*)\\)', 'testAutoLink(org.sagebionetworks.markdown.parsers.SynapseAutoLinkParserTest)')",[1533]
"('Description.java', 'org.junit.runner.Description', 'getClassName', '(.*)\\((.*)\\)', 'org.sagebionetworks.markdown.parsers.SubscriptParserTest')","[28390, 28413, 28437, 28460]"
"('MathParser.java', 'org.sagebionetworks.markdown.parsers.MathParser', 'processLine', '(^[> \t\n\x0c\r]*)[$]{2}\\s*$', 'This is a ref ${reference?text=very simple&amp;inlineWidget=true}.')",[9125]
"('ListParser.java', 'org.sagebionetworks.markdown.parsers.ListParser', 'processLine', '(^[> \t\n\x0c\r]*)(\\d+)[.](\\s+)(.+)', '    3. burper')",[29140]
"('MathParser.java', 'org.sagebionetworks.markdown.parsers.MathParser', 'processLine', '(^[> \t\n\x0c\r]*)[$]{2}\\s*$', '--------------------------------')",[20614]
"('ListParser.java', 'org.sagebionetworks.markdown.parsers.ListParser', 'processLine', '(^[> \t\n\x0c\r]*)([-+*])(\\s+)(.+)', '### How are you?')",[5281]
"('HorizontalLineParser.java', 'org.sagebionetworks.markdown.parsers.HorizontalLineParser', 'processLine', '^[*]{3,}$', '<h2>AdditionalDataDetails</h2>')",[21013]
"('HeadingParser.java', 'org.sagebionetworks.markdown.parsers.HeadingParser', 'processLine', '(^[> \t\n\x0c\r]*)(#{1,6})\\s*(.*)', ' ')","[15618, 17311, 19113]"
"('TableParser.java', 'org.sagebionetworks.markdown.parsers.TableParser', 'processLine', '(.+[|]{1}.*)+', 'This is a ref ${reference?text=very simple&amp;inlineWidget=true}.')",[9256]
"('ListParser.java', 'org.sagebionetworks.markdown.parsers.ListParser', 'processLine', '(^[> \t\n\x0c\r]*)([-+*])(\\s+)(.+)', '        * BELITTLER')",[29090]
"('HorizontalLineParser.java', 'org.sagebionetworks.markdown.parsers.HorizontalLineParser', 'processLine', '^[*]{3,}$', 'DemoClinicalOnlyModel&lt;-setRefClass(Class=&quot;CINModel&quot;,...')",[9998]
"('TableParser.java', 'org.sagebionetworks.markdown.parsers.TableParser', 'processLine', '(.+[|]{1}.*)+', '| Row 1 Content Cell 1 | Row 1 Content Cell 2  | Row 1 Content Cell 3 |')",[32379]
"('TableParser.java', 'org.sagebionetworks.markdown.parsers.TableParser', 'processLine', '(.+[|]{1}.*)+', '**Row 1 Content Cell 1** | Row\\_Content\\_2  | Row 1 Content Cell 3')",[32611]
"('ListParser.java', 'org.sagebionetworks.markdown.parsers.ListParser', 'getListItem', '(^\\s*(>(\\s?))(.*))', '> * Item 2')",[13948]
"('ListParser.java', 'org.sagebionetworks.markdown.parsers.ListParser', 'processLine', '(^[> \t\n\x0c\r]*)([-+*])(\\s+)(.+)', '    3. burper')",[29166]
"('HeadingParser.java', 'org.sagebionetworks.markdown.parsers.HeadingParser', 'processLine', '(^[> \t\n\x0c\r]*)(#{1,6})\\s*(.*)', 'This is a ref <span id=""wikiReference1"">&nbsp;</span><span id=""widgetsyntax-0""></span>.')",[9284]
"('MathParser.java', 'org.sagebionetworks.markdown.parsers.MathParser', 'processLine', '(^[> \t\n\x0c\r]*)[$]{2}\\s*$', '## Additional Data Details')",[20879]
"('CodeParser.java', 'org.sagebionetworks.markdown.parsers.CodeParser', 'processLine', '(^[> \t\n\x0c\r]*)[`]{3}\\s*([a-zA-Z_0-9-]*)\\s*$', '* First item')",[29393]
"('ListParser.java', 'org.sagebionetworks.markdown.parsers.ListParser', 'processLine', '(^[> \t\n\x0c\r]*)([-+*])(\\s+)(.+)', '<tr><td>Content       </td><td>   **Cell**    </td><td>         Cell </td></tr>\n')",[11808]
"('CodeParser.java', 'org.sagebionetworks.markdown.parsers.CodeParser', 'processLine', '(^[> \t\n\x0c\r]*)[`]{3}\\s*([a-zA-Z_0-9-]*)\\s*$', '&lt;table&gt;&lt;tr&gt;&lt;td&gt;this is a test&lt;/td&gt;&lt;td&gt;column 2&lt;/td&gt;&lt;/tr&gt;&lt;/table&gt;&lt;iframe width=&quot;420&quot; height=&quot;315&quot; src=&quot;http://www.youtube.com/embed/AOjaQ7Vl7SM&quot; frameborder=&quot;0&quot; allowfullscreen&gt;&lt;/iframe&gt;&lt;embed&gt;')",[8433]
"('CodeParser.java', 'org.sagebionetworks.markdown.parsers.CodeParser', 'processLine', '(^[> \t\n\x0c\r]*)[`]{3}\\s*([a-zA-Z_0-9-]*)\\s*$', '  preservation in preformatted  code blocks')",[24651]
"('Description.java', 'org.junit.runner.Description', 'getClassName', '(.*)\\((.*)\\)', 'org.sagebionetworks.markdown.parsers.CenterTextParserTest')","[26018, 26041, 26065, 26088]"
"('Description.java', 'org.junit.runner.Description', 'getClassName', '(.*)\\((.*)\\)', 'testBold(org.sagebionetworks.markdown.parsers.BoldParserTest)')",[1635]
"('ListParser.java', 'org.sagebionetworks.markdown.parsers.ListParser', 'processLine', '(^[> \t\n\x0c\r]*)([-+*])(\\s+)(.+)', '<tr><td> ------------ </td><td> :-----------: </td><td> -----------: </td></tr>\n')",[11212]
"('TableParser.java', 'org.sagebionetworks.markdown.parsers.TableParser', 'processLine', '\\s*\\|\\}\\s*', 'First')",[16255]
"('TableParser.java', 'org.sagebionetworks.markdown.parsers.TableParser', 'processLine', '(.+[|]{1}.*)+', '|             |          Grouping           ||')",[10584]
"('Description.java', 'org.junit.runner.Description', 'parseMethod', '(.*)\\((.*)\\)', 'testMarkdownInFencedCode(org.sagebionetworks.markdown.SynapseMarkdownProcessorTest)')",[459]
"('MathParser.java', 'org.sagebionetworks.markdown.parsers.MathParser', 'processLine', '(^[> \t\n\x0c\r]*)[$]{2}\\s*$', '##-&gt;Centered Headline&lt;-')",[2339]
"('Description.java', 'org.junit.runner.Description', 'getClassName', '(.*)\\((.*)\\)', 'org.sagebionetworks.markdown.parsers.HorizontalLineParserTest')","[27142, 27165, 27189, 27212]"
"('HorizontalLineParser.java', 'org.sagebionetworks.markdown.parsers.HorizontalLineParser', 'processLine', '^[*]{3,}$', 'dashesorasterisks***intheline---')",[27118]
"('Description.java', 'org.junit.runner.Description', 'parseMethod', '(.*)\\((.*)\\)', 'testTableClassSupport(org.sagebionetworks.markdown.SynapseMarkdownProcessorTest)')",[396]
"('HorizontalLineParser.java', 'org.sagebionetworks.markdown.parsers.HorizontalLineParser', 'processLine', '^[*]{3,}$', '<spanid=""codespan-0""></span>')",[23239]
"('TableParser.java', 'org.sagebionetworks.markdown.parsers.TableParser', 'processLine', '\\s*\\|\\}\\s*', 'Item 2')",[17602]
"('ListParser.java', 'org.sagebionetworks.markdown.parsers.ListParser', 'processLine', '(^[> \t\n\x0c\r]*)([-+*])(\\s+)(.+)', '> * Item 1')",[17073]
"('HeadingParser.java', 'org.sagebionetworks.markdown.parsers.HeadingParser', 'processLine', '(^[> \t\n\x0c\r]*)(#{1,6})\\s*(.*)', '_italicized_')",[22235]
"('ListParser.java', 'org.sagebionetworks.markdown.parsers.ListParser', 'getListItem', '(^\\s*(>(\\s?))(.*))', '*   Cunning')",[29266]
"('Description.java', 'org.junit.runner.Description', 'getClassName', '(.*)\\((.*)\\)', 'org.sagebionetworks.markdown.parsers.ListParserTest')","[31776, 31799, 31823, 31846]"
"('TableParser.java', 'org.sagebionetworks.markdown.parsers.TableParser', 'isHeaderBorder', '([\\s-:|]+[|]{1}[\\s-:|]*)+', '| --: | -- | :-- |')",[32473]
"('Description.java', 'org.junit.runner.Description', 'parseMethod', '(.*)\\((.*)\\)', 'testIsNotSingleLine(org.sagebionetworks.markdown.parsers.BlockQuoteParserTest)')",[751]
"('TableParser.java', 'org.sagebionetworks.markdown.parsers.TableParser', 'processLine', '(.+[|]{1}.*)+', 'SubItem 2b')",[18315]
"('ListParser.java', 'org.sagebionetworks.markdown.parsers.ListParser', 'processLine', '(^[> \t\n\x0c\r]*)([-+*])(\\s+)(.+)', 'Tau | MAPT | MCF7,BT20')",[19674]
"('HorizontalLineParser.java', 'org.sagebionetworks.markdown.parsers.HorizontalLineParser', 'processLine', '^[*]{3,}$', '<h4>SubItem2a</h4>')","[14554, 18049]"
"('ListParser.java', 'org.sagebionetworks.markdown.parsers.ListParser', 'processLine', '(^[> \t\n\x0c\r]*)(\\d+)[.](\\s+)(.+)', '### How are you?')",[5253]
"('TableParser.java', 'org.sagebionetworks.markdown.parsers.TableParser', 'processLine', '\\s*\\|\\}\\s*', '| --: | -- | :-- |')",[32425]
"('BlockQuoteParser.java', 'org.sagebionetworks.markdown.parsers.BlockQuoteParser', 'processLine', '(^\\s*(>(\\s?))(.*))', '> Then a code block!')","[15322, 18817]"
"('HorizontalLineParser.java', 'org.sagebionetworks.markdown.parsers.HorizontalLineParser', 'processLine', '^[-]{3,}$', '-----')",[26980]
"('Description.java', 'org.junit.runner.Description', 'getClassName', '(.*)\\((.*)\\)', 'testHR1(org.sagebionetworks.markdown.parsers.HorizontalLineParserTest)')",[1264]
"('CodeParser.java', 'org.sagebionetworks.markdown.parsers.CodeParser', 'processLine', '(^[> \t\n\x0c\r]*)[`]{3}\\s*([a-zA-Z_0-9-]*)\\s*$', 'String s = &quot;should not be **bold**&quot;;')",[21705]
"('ListParser.java', 'org.sagebionetworks.markdown.parsers.ListParser', 'processLine', '(^[> \t\n\x0c\r]*)([-+*])(\\s+)(.+)', ""&amp; ==&gt; &amp;&quot; ==&gt; &quot;&gt; ==&gt; &gt;&lt; ==&gt; &lt;' ="")",[23750]
"('MathParser.java', 'org.sagebionetworks.markdown.parsers.MathParser', 'processLine', '(^[> \t\n\x0c\r]*)[$]{2}\\s*$', ' * Item 1')",[13631]
"('HorizontalLineParser.java', 'org.sagebionetworks.markdown.parsers.HorizontalLineParser', 'processLine', '^[-]{3,}$', '<spanid=""codespan-0""></span>')",[23214]
"('TableParser.java', 'org.sagebionetworks.markdown.parsers.TableParser', 'processLine', '(\\{\\|\\s*class=&quot;(.*?)&quot;\\s*)|(\\{\\|\\s*)', 'Item 2')",[17577]
"('HorizontalLineParser.java', 'org.sagebionetworks.markdown.parsers.HorizontalLineParser', 'processLine', '^[-]{3,}$', '<tbody><tr><td></td><td>Grouping</td></tr>\n<tr><td>FirstHeader</td><td>SecondHeader</td><td>ThirdHeader</td></tr>\n')",[10968]
"('Description.java', 'org.junit.runner.Description', 'parseMethod', '(.*)\\((.*)\\)', 'testStrikeout(org.sagebionetworks.markdown.parsers.StrikeoutParserTest)')",[1203]
"('BlockQuoteParser.java', 'org.sagebionetworks.markdown.parsers.BlockQuoteParser', 'processLine', '(^[> \t\n\x0c\r]*)[`]{3}\\s*([a-zA-Z_0-9-]*)\\s*$', '> #### SubItem 2a')",[14345]
"('ListParser.java', 'org.sagebionetworks.markdown.parsers.ListParser', 'processLine', '(^[> \t\n\x0c\r]*)([-+*])(\\s+)(.+)', '   2. SubItem 2b')",[18158]
"('Description.java', 'org.junit.runner.Description', 'parseMethod', '(.*)\\((.*)\\)', 'testCenterHeadlineText(org.sagebionetworks.markdown.SynapseMarkdownProcessorTest)')",[166]
"('TableParser.java', 'org.sagebionetworks.markdown.parsers.TableParser', 'processLine', '\\s*\\|\\}\\s*', '**Row 1 Content Cell 1** | Row\\_Content\\_2  | Row 1 Content Cell 3')",[32588]
"('ListParser.java', 'org.sagebionetworks.markdown.parsers.ListParser', 'processLine', '(^[> \t\n\x0c\r]*)([-+*])(\\s+)(.+)', '<tbody><tr><td>Tau </td><td> MAPT </td><td> MCF7,BT20</td></tr>\n<tr><td>VASP </td><td> VASP </td><td> MCF7,BT20</td></tr>\n')",[20076]
"('HorizontalLineParser.java', 'org.sagebionetworks.markdown.parsers.HorizontalLineParser', 'processLine', '^[-]{3,}$', '<h4>SubItem2a</h4>')","[14529, 18024]"
"('CodeParser.java', 'org.sagebionetworks.markdown.parsers.CodeParser', 'processLine', '(^[> \t\n\x0c\r]*)[`]{3}\\s*([a-zA-Z_0-9-]*)\\s*$', '    This is another paragraph')","[29495, 29622]"
"('ListParser.java', 'org.sagebionetworks.markdown.parsers.ListParser', 'processLine', '(^[> \t\n\x0c\r]*)([-+*])(\\s+)(.+)', '    1. #### Heading2')",[30943]
"('HorizontalLineParser.java', 'org.sagebionetworks.markdown.parsers.HorizontalLineParser', 'processLine', '^[-]{3,}$', '--------------------------------')",[20723]
"('HeadingParser.java', 'org.sagebionetworks.markdown.parsers.HeadingParser', 'processLine', '(^[> \t\n\x0c\r]*)(#{1,6})\\s*(.*)', '<tr><td>XIAP </td><td> XIAP </td><td> MCF7,BT20</td></tr>\n')",[20406]
"('HorizontalLineParser.java', 'org.sagebionetworks.markdown.parsers.HorizontalLineParser', 'processLine', '^[-]{3,}$', '<divclass=""overflow-auto""><tableid=""markdown-table-0""class=""tablesortermarkdowntable"">')","[10637, 19802]"
"('Description.java', 'org.junit.runner.Description', 'getClassName', '(.*)\\((.*)\\)', 'org.sagebionetworks.markdown.parsers.ImageParserTest')","[26206, 26229, 26253, 26276]"
"('HeadingParser.java', 'org.sagebionetworks.markdown.parsers.HeadingParser', 'processLine', '(^[> \t\n\x0c\r]*)(#{1,6})\\s*(.*)', '')","[2788, 2868, 3452, 3532, 6254, 6334, 6918, 6998, 7582, 7662, 8246, 8326, 8910, 8990, 9574, 10238, 10318, 12129, 12209, 12743, 13098, 13388, 13468, 15219, 15908, 15988, 16967, 18714, 19403, 19483, 21253, 21333, 21627, 21945, 22525, 22605, 23479, 23559, 24143, 24223, 24517, 24891, 25181, 25261]"
"('CodeParser.java', 'org.sagebionetworks.markdown.parsers.CodeParser', 'processLine', '(^[> \t\n\x0c\r]*)[`]{3}\\s*([a-zA-Z_0-9-]*)\\s*$', 'sudo apt-get install curl')",[30307]
"('MathParser.java', 'org.sagebionetworks.markdown.parsers.MathParser', 'processLine', '(^[> \t\n\x0c\r]*)[$]{2}\\s*$', '<tr><td>XIAP </td><td> XIAP </td><td> MCF7,BT20</td></tr>\n')",[20319]
"('TableParser.java', 'org.sagebionetworks.markdown.parsers.TableParser', 'processLine', '(\\{\\|\\s*class=&quot;(.*?)&quot;\\s*)|(\\{\\|\\s*)', ""&amp; ==&gt; &amp;&quot; ==&gt; &quot;&gt; ==&gt; &gt;&lt; ==&gt; &lt;' ="")",[23775]
"('TableParser.java', 'org.sagebionetworks.markdown.parsers.TableParser', 'processLine', '(\\{\\|\\s*class=&quot;(.*?)&quot;\\s*)|(\\{\\|\\s*)', '{| class=&quot;border&quot;')",[32703]
"('ListParser.java', 'org.sagebionetworks.markdown.parsers.ListParser', 'getListItem', '(^\\s*(>(\\s?))(.*))', '1. First item')",[31170]
"('TableParser.java', 'org.sagebionetworks.markdown.parsers.TableParser', 'processLine', '(.+[|]{1}.*)+', 'Text in this line after (0.01&lt;LALA&lt;0.05) is not included in the output html')",[7928]
"('Description.java', 'org.junit.runner.Description', 'parseMethod', '(.*)\\((.*)\\)', 'testMultipleParagraphs(org.sagebionetworks.markdown.parsers.ListParserTest)')",[1841]
"('TableParser.java', 'org.sagebionetworks.markdown.parsers.TableParser', 'processLine', '(\\{\\|\\s*class=&quot;(.*?)&quot;\\s*)|(\\{\\|\\s*)', '_italicized_')",[22157]
"('ListParser.java', 'org.sagebionetworks.markdown.parsers.ListParser', 'getListItem', '(^\\s*(>(\\s?))(.*))', '    2.  bupkis')",[29038]
"('MathParser.java', 'org.sagebionetworks.markdown.parsers.MathParser', 'processLine', '(^[> \t\n\x0c\r]*)[$]{2}\\s*$', 'SubItem 2b')",[18240]
"('BlockQuoteParser.java', 'org.sagebionetworks.markdown.parsers.BlockQuoteParser', 'processLine', '(^\\s*(>(\\s?))(.*))', '```java')",[21412]
"('HeadingParser.java', 'org.sagebionetworks.markdown.parsers.HeadingParser', 'processLine', '(^[> \t\n\x0c\r]*)(#{1,6})\\s*(.*)', '{column}')","[4750, 5674]"
"('Description.java', 'org.junit.runner.Description', 'getClassName', '(.*)\\((.*)\\)', 'org.sagebionetworks.markdown.parsers.EscapedUnderscoreParserTest')","[26676, 26699, 26723, 26746]"
"('BlockQuoteParser.java', 'org.sagebionetworks.markdown.parsers.BlockQuoteParser', 'processLine', '(^\\s*(>(\\s?))(.*))', 'The hi in t**hi**s is bold. No spaces in H~2~O.')",[2947]
"('BlockQuoteParser.java', 'org.sagebionetworks.markdown.parsers.BlockQuoteParser', 'processLine', '(^\\s*(>(\\s?))(.*))', ""&amp; ==&gt; &amp;&quot; ==&gt; &quot;&gt; ==&gt; &gt;&lt; ==&gt; &lt;' ="")",[23638]
"('TableParser.java', 'org.sagebionetworks.markdown.parsers.TableParser', 'processLine', '\\s*\\|\\}\\s*', '{column width=6}')","[4063, 4987]"
"('ListParser.java', 'org.sagebionetworks.markdown.parsers.ListParser', 'processLine', '(^[> \t\n\x0c\r]*)(\\d+)[.](\\s+)(.+)', '{column width=6}')","[3985, 4909]"
"('HorizontalLineParser.java', 'org.sagebionetworks.markdown.parsers.HorizontalLineParser', 'processLine', '^[-]{3,}$', '<spanid=""widgetsyntax-1""></span><spanid=""wikiFootnote1""class=""margin-left-5"">verysimple</span><br>')",[9681]
"('TableParser.java', 'org.sagebionetworks.markdown.parsers.TableParser', 'processLine', '(.+[|]{1}.*)+', 'Configure s3cmd by executing')",[22871]
"('TableParser.java', 'org.sagebionetworks.markdown.parsers.TableParser', 'processLine', '(\\{\\|\\s*class=&quot;(.*?)&quot;\\s*)|(\\{\\|\\s*)', 'Content       |          *Long Cell*        ||')",[11318]
"('HorizontalLineParser.java', 'org.sagebionetworks.markdown.parsers.HorizontalLineParser', 'processLine', '^[-]{3,}$', 'Item2')","[14185, 17680]"
"('TableParser.java', 'org.sagebionetworks.markdown.parsers.TableParser', 'processLine', '\\s*\\|\\}\\s*', 'Contains a Synapse widget ${fakewidget?param1=a} in the markdown.')",[7239]
"('Description.java', 'org.junit.runner.Description', 'parseMethod', '(.*)\\((.*)\\)', 'testSynapseLinkWithText(org.sagebionetworks.markdown.parsers.LinkParserTest)')",[688]
"('TableParser.java', 'org.sagebionetworks.markdown.parsers.TableParser', 'processLine', '\\s*\\|\\}\\s*', ' ------------ | :-----------: | -----------: |')",[11045]
"('Description.java', 'org.junit.runner.Description', 'parseMethod', '(.*)\\((.*)\\)', 'testItalics(org.sagebionetworks.markdown.parsers.ItalicsParserTest)')",[1162]
"('ListParser.java', 'org.sagebionetworks.markdown.parsers.ListParser', 'getListItem', '(^\\s*(>(\\s?))(.*))', '    1.  bunk')",[28962]
"('TableParser.java', 'org.sagebionetworks.markdown.parsers.TableParser', 'processLine', '\\s*\\|\\}\\s*', 'VASP | VASP | MCF7,BT20')",[19877]
"('HorizontalLineParser.java', 'org.sagebionetworks.markdown.parsers.HorizontalLineParser', 'processLine', '^[-]{3,}$', '_italicized_')",[22260]
"('BlockQuoteParser.java', 'org.sagebionetworks.markdown.parsers.BlockQuoteParser', 'processLine', '(^\\s*(>(\\s?))(.*))', 'Tau | MAPT | MCF7,BT20')",[19562]
"('TableParser.java', 'org.sagebionetworks.markdown.parsers.TableParser', 'processLine', '(\\{\\|\\s*class=&quot;(.*?)&quot;\\s*)|(\\{\\|\\s*)', ' SubItem 2b')",[14770]
"('Description.java', 'org.junit.runner.Description', 'getClassName', '(.*)\\((.*)\\)', 'testRowColumnHappyCase(org.sagebionetworks.markdown.parsers.RowColumnParserTest)')",[1491]
"('ListParser.java', 'org.sagebionetworks.markdown.parsers.ListParser', 'getListItem', '(^\\s*(>(\\s?))(.*))', '*   Abacus')",[28734]
"('CodeParser.java', 'org.sagebionetworks.markdown.parsers.CodeParser', 'processLine', '(^[> \t\n\x0c\r]*)[`]{3}\\s*([a-zA-Z_0-9-]*)\\s*$', 'newline    -  test')",[24623]
"('TableParser.java', 'org.sagebionetworks.markdown.parsers.TableParser', 'processLine', '(\\{\\|\\s*class=&quot;(.*?)&quot;\\s*)|(\\{\\|\\s*)', 'XIAP | XIAP | MCF7,BT20')",[20185]
"('MathParser.java', 'org.sagebionetworks.markdown.parsers.MathParser', 'processLine', '(^[> \t\n\x0c\r]*)[$]{2}\\s*$', '\\nabla \\times \\vec{\\mathbf{E}}\\, +\\, \\frac1c\\, \\frac{\\partial\\vec{\\mathbf{B}}}{\\partial t} & = \\vec{\\mathbf{0}} \\\\')",[25513]
"('Description.java', 'org.junit.runner.Description', 'parseMethod', '(.*)\\((.*)\\)', 'testEscaping(org.sagebionetworks.markdown.parsers.EscapedDashParserTest)')",[854]
"('Description.java', 'org.junit.runner.Description', 'getClassName', '(.*)\\((.*)\\)', 'org.sagebionetworks.markdown.parsers.SynapseAutoLinkParserTest')","[27962, 27985, 28009, 28032]"
"('TableParser.java', 'org.sagebionetworks.markdown.parsers.TableParser', 'processLine', '(.+[|]{1}.*)+', 'First Header  | Second Header | Third Header |')",[10737]
"('BlockQuoteParser.java', 'org.sagebionetworks.markdown.parsers.BlockQuoteParser', 'processLine', '(^\\s*(>(\\s?))(.*))', '> Item 2')",[13973]
"('ListParser.java', 'org.sagebionetworks.markdown.parsers.ListParser', 'getListItem', '(^\\s*(>(\\s?))(.*))', '    3. burper')",[29190]
"('TableParser.java', 'org.sagebionetworks.markdown.parsers.TableParser', 'processLine', '(\\{\\|\\s*class=&quot;(.*?)&quot;\\s*)|(\\{\\|\\s*)', 'Contains a Synapse widget ${fakewidget?param1=a} in the markdown.')",[7214]
"('Description.java', 'org.junit.runner.Description', 'getClassName', '(.*)\\((.*)\\)', 'org.sagebionetworks.markdown.utils.WidgetEncodingUtilTest')","[2094, 2117, 2141, 2164]"
"('MathParser.java', 'org.sagebionetworks.markdown.parsers.MathParser', 'processLine', '(^[> \t\n\x0c\r]*)[$]{2}\\s*$', '\\nabla \\times \\vec{\\mathbf{B}} -\\, \\frac1c\\, \\frac{\\partial\\vec{\\mathbf{E}}}{\\partial t} & = \\frac{4\\pi}{c}\\vec{\\mathbf{j}} \\\\   \\nabla \\cdot \\vec{\\mathbf{E}} & = 4 \\pi \\rho \\\\')",[25487]
"('HorizontalLineParser.java', 'org.sagebionetworks.markdown.parsers.HorizontalLineParser', 'processLine', '^[-]{3,}$', '<tbody><tr><td>Tau</td><td>MAPT</td><td>MCF7,BT20</td></tr>\n<tr><td>VASP</td><td>VASP</td><td>MCF7,BT20</td></tr>\n')",[20133]
"('Description.java', 'org.junit.runner.Description', 'getClassName', '(.*)\\((.*)\\)', 'testLink(org.sagebionetworks.markdown.parsers.LinkParserTest)')",[625]
"('ListParser.java', 'org.sagebionetworks.markdown.parsers.ListParser', 'processLine', '(^\\s*(>(\\s?))(.*))', '    sudo pip install python-magic')",[30535]
"('HorizontalLineParser.java', 'org.sagebionetworks.markdown.parsers.HorizontalLineParser', 'processLine', '^[*]{3,}$', ""&amp;==&gt;&amp;&quot;==&gt;&quot;&gt;==&gt;&gt;&lt;==&gt;&lt;'="")",[23903]
"('ListParser.java', 'org.sagebionetworks.markdown.parsers.ListParser', 'processLine', '(^[> \t\n\x0c\r]*)([-+*])(\\s+)(.+)', '>   2. SubItem 2b')",[14610]
"('TableParser.java', 'org.sagebionetworks.markdown.parsers.TableParser', 'processLine', '(\\{\\|\\s*class=&quot;(.*?)&quot;\\s*)|(\\{\\|\\s*)', '&lt;table&gt;&lt;tr&gt;&lt;td&gt;this is a test&lt;/td&gt;&lt;td&gt;column 2&lt;/td&gt;&lt;/tr&gt;&lt;/table&gt;&lt;iframe width=&quot;420&quot; height=&quot;315&quot; src=&quot;http://www.youtube.com/embed/AOjaQ7Vl7SM&quot; frameborder=&quot;0&quot; allowfullscreen&gt;&lt;/iframe&gt;&lt;embed&gt;')",[8542]
"('Description.java', 'org.junit.runner.Description', 'parseMethod', '(.*)\\((.*)\\)', 'testLink(org.sagebionetworks.markdown.parsers.LinkParserTest)')",[605]
"('TableParser.java', 'org.sagebionetworks.markdown.parsers.TableParser', 'processLine', '\\s*\\|\\}\\s*', 'Content       |   **Cell**    |         Cell |')",[11641]
"('BlockQuoteParser.java', 'org.sagebionetworks.markdown.parsers.BlockQuoteParser', 'processLine', '(^\\s*(>(\\s?))(.*))', '<tr><td>Content       </td><td>          *Long Cell*        </td></tr>\n')",[11394]
"('Description.java', 'org.junit.runner.Description', 'parseMethod', '(.*)\\((.*)\\)', 'testRemoveAllHTML(org.sagebionetworks.markdown.SynapseMarkdownProcessorTest)')",[312]
"('TableParser.java', 'org.sagebionetworks.markdown.parsers.TableParser', 'processLine', '(.+[|]{1}.*)+', '{column width=6}')","[4088, 5012]"
"('Description.java', 'org.junit.runner.Description', 'parseMethod', '(.*)\\((.*)\\)', 'testCodeSpan(org.sagebionetworks.markdown.parsers.CodeSpanParserTest)')",[1925]
"('TableParser.java', 'org.sagebionetworks.markdown.parsers.TableParser', 'processLine', '(.+[|]{1}.*)+', '### How are you?')",[5356]
"('HeadingParser.java', 'org.sagebionetworks.markdown.parsers.HeadingParser', 'processLine', '(^[> \t\n\x0c\r]*)(#{1,6})\\s*(.*)', '<tbody><tr><td>Tau </td><td> MAPT </td><td> MCF7,BT20</td></tr>\n<tr><td>VASP </td><td> VASP </td><td> MCF7,BT20</td></tr>\n')",[20106]
"('HeadingParser.java', 'org.sagebionetworks.markdown.parsers.HeadingParser', 'processLine', '(^[> \t\n\x0c\r]*)(#{1,6})\\s*(.*)', '--------------------------------')",[20698]
"('Description.java', 'org.junit.runner.Description', 'getClassName', '(.*)\\((.*)\\)', 'testCenterText(org.sagebionetworks.markdown.parsers.CenterTextParserTest)')",[833]
"('BlockQuoteParser.java', 'org.sagebionetworks.markdown.parsers.BlockQuoteParser', 'processLine', '(^\\s*(>(\\s?))(.*))', ' \t> second line text')",[25851]
"('HeadingParser.java', 'org.sagebionetworks.markdown.parsers.HeadingParser', 'processLine', '(^[> \t\n\x0c\r]*)(#{1,6})\\s*(.*)', '<tr><td>Content       </td><td>   <strong>Cell</strong>    </td><td>         Cell </td></tr>\n')",[11837]
"('CodeParser.java', 'org.sagebionetworks.markdown.parsers.CodeParser', 'processLine', '(^[> \t\n\x0c\r]*)[`]{3}\\s*([a-zA-Z_0-9-]*)\\s*$', 'Tau | MAPT | MCF7,BT20')",[19590]
"('HorizontalLineParser.java', 'org.sagebionetworks.markdown.parsers.HorizontalLineParser', 'processLine', '^[*]{3,}$', '<tbody><tr><td></td><td>Grouping</td></tr>\n<tr><td>FirstHeader</td><td>SecondHeader</td><td>ThirdHeader</td></tr>\n')",[10995]
"('BlockQuoteParser.java', 'org.sagebionetworks.markdown.parsers.BlockQuoteParser', 'processLine', '(^\\s*(>(\\s?))(.*))', '> #### SubItem 2a')",[14317]
"('TableParser.java', 'org.sagebionetworks.markdown.parsers.TableParser', 'processLine', '(\\{\\|\\s*class=&quot;(.*?)&quot;\\s*)|(\\{\\|\\s*)', 'link to the doi:10.7303/syn2699915 for the challenge')",[6550]
"('HeadingParser.java', 'org.sagebionetworks.markdown.parsers.HeadingParser', 'processLine', '(^[> \t\n\x0c\r]*)(#{1,6})\\s*(.*)', '{row}')","[3826, 5964]"
"('Description.java', 'org.junit.runner.Description', 'parseMethod', '(.*)\\((.*)\\)', 'testAutoLink(org.sagebionetworks.markdown.parsers.UrlAutoLinkParserTest)')",[936]
"('CodeParser.java', 'org.sagebionetworks.markdown.parsers.CodeParser', 'processLine', '(^[> \t\n\x0c\r]*)[`]{3}\\s*([a-zA-Z_0-9-]*)\\s*$', ' ')",[17180]
"('TableParser.java', 'org.sagebionetworks.markdown.parsers.TableParser', 'processLine', '(\\{\\|\\s*class=&quot;(.*?)&quot;\\s*)|(\\{\\|\\s*)', 'Content       |   **Cell**    |         Cell |')",[11616]
"('ListParser.java', 'org.sagebionetworks.markdown.parsers.ListParser', 'processLine', '(^[> \t\n\x0c\r]*)(\\d+)[.](\\s+)(.+)', '    sudo apt-get install git')",[30079]
"('TableParser.java', 'org.sagebionetworks.markdown.parsers.TableParser', 'processLine', '(\\{\\|\\s*class=&quot;(.*?)&quot;\\s*)|(\\{\\|\\s*)', 'Second')",[16546]
"('ListParser.java', 'org.sagebionetworks.markdown.parsers.ListParser', 'processLine', '(^[> \t\n\x0c\r]*)(\\d+)[.](\\s+)(.+)', '## Additional Data Details')",[20907]
"('TableParser.java', 'org.sagebionetworks.markdown.parsers.TableParser', 'processLine', '\\s*\\|\\}\\s*', '## Additional Data Details')",[20773]
"('TableParser.java', 'org.sagebionetworks.markdown.parsers.TableParser', 'processLine', '(\\{\\|\\s*class=&quot;(.*?)&quot;\\s*)|(\\{\\|\\s*)', '`python s3cmd --configure s3://&lt;your_bucket_name&gt;`')",[23111]
"('ListParser.java', 'org.sagebionetworks.markdown.parsers.ListParser', 'processLine', '(^[> \t\n\x0c\r]*)(.*)', '    sudo pip install python-magic')",[30512]
"('ListParser.java', 'org.sagebionetworks.markdown.parsers.ListParser', 'processLine', '(^[> \t\n\x0c\r]*)(\\d+)[.](\\s+)(.+)', '    2. bupkis')",[31525]
"('HorizontalLineParser.java', 'org.sagebionetworks.markdown.parsers.HorizontalLineParser', 'processLine', '^[-]{3,}$', 'DemoClinicalOnlyModel&lt;-setRefClass(Class=&quot;CINModel&quot;,...')",[9973]
"('ListParser.java', 'org.sagebionetworks.markdown.parsers.ListParser', 'processLine', '(^[> \t\n\x0c\r]*)([-+*])(\\s+)(.+)', 'Contains a Synapse widget ${fakewidget?param1=a} in the markdown.')",[7189]
"('TableParser.java', 'org.sagebionetworks.markdown.parsers.TableParser', 'processLine', '(.+[|]{1}.*)+', 'The hi in t**hi**s is bold. No spaces in H~2~O.')",[3134]
"('ListParser.java', 'org.sagebionetworks.markdown.parsers.ListParser', 'processLine', '(^[> \t\n\x0c\r]*)(\\d+)[.](\\s+)(.+)', 'Configure s3cmd by executing')",[22768]
"('Description.java', 'org.junit.runner.Description', 'getClassName', '(.*)\\((.*)\\)', 'org.sagebionetworks.markdown.parsers.CodeParserTest')","[28588, 28611, 28635, 28658]"
"('CodeParser.java', 'org.sagebionetworks.markdown.parsers.CodeParser', 'processLine', '(^[> \t\n\x0c\r]*)[`]{3}\\s*([a-zA-Z_0-9-]*)\\s*$', '{column width=6}')","[3929, 4853]"
"('HorizontalLineParser.java', 'org.sagebionetworks.markdown.parsers.HorizontalLineParser', 'processLine', '^[-]{3,}$', ""&amp;==&gt;&amp;&quot;==&gt;&quot;&gt;==&gt;&gt;&lt;==&gt;&lt;'="")",[23878]
"('CodeParser.java', 'org.sagebionetworks.markdown.parsers.CodeParser', 'processLine', '(^[> \t\n\x0c\r]*)[`]{3}\\s*([a-zA-Z_0-9-]*)\\s*$', ' * Item 1')",[13603]
"('ListParser.java', 'org.sagebionetworks.markdown.parsers.ListParser', 'processLine', '(^[> \t\n\x0c\r]*)([-+*])(\\s+)(.+)', '### Hello World')",[4357]
"('CodeParser.java', 'org.sagebionetworks.markdown.parsers.CodeParser', 'processLine', '(^[> \t\n\x0c\r]*)[`]{3}\\s*([a-zA-Z_0-9-]*)\\s*$', '> ```')","[15378, 18873]"
"('Description.java', 'org.junit.runner.Description', 'parseMethod', '(.*)\\((.*)\\)', 'testForCompleteness(org.sagebionetworks.markdown.parsers.LinkParserTest)')",[667]
"('MathParser.java', 'org.sagebionetworks.markdown.parsers.MathParser', 'processLine', '(^[> \t\n\x0c\r]*)[$]{2}\\s*$', ""&amp; ==&gt; &amp;&quot; ==&gt; &quot;&gt; ==&gt; &gt;&lt; ==&gt; &lt;' ="")",[23694]
"('Description.java', 'org.junit.runner.Description', 'getClassName', '(.*)\\((.*)\\)', 'testMathBlock(org.sagebionetworks.markdown.parsers.MathParserTest)')",[563]
"('TableParser.java', 'org.sagebionetworks.markdown.parsers.TableParser', 'processLine', '(.+[|]{1}.*)+', 'Tau | MAPT | MCF7,BT20')",[19749]
"('HorizontalLineParser.java', 'org.sagebionetworks.markdown.parsers.HorizontalLineParser', 'processLine', '^[-]{3,}$', 'dashesorasterisks***intheline---')",[27095]
"('ListParser.java', 'org.sagebionetworks.markdown.parsers.ListParser', 'processLine', '(^[> \t\n\x0c\r]*)(\\d+)[.](\\s+)(.+)', '> ``` r')",[14926]
"('ListParser.java', 'org.sagebionetworks.markdown.parsers.ListParser', 'getListItem', '(^\\s*(>(\\s?))(.*))', '2. Second')",[16440]
"('ListParser.java', 'org.sagebionetworks.markdown.parsers.ListParser', 'processLine', '(^[> \t\n\x0c\r]*)(\\d+)[.](\\s+)(.+)', '*   Bubbles')",[28836]
"('ListParser.java', 'org.sagebionetworks.markdown.parsers.ListParser', 'processLine', '(^[> \t\n\x0c\r]*)(\\d+)[.](\\s+)(.+)', '1. List item one')",[31373]
"('Description.java', 'org.junit.runner.Description', 'parseMethod', '(.*)\\((.*)\\)', 'testOrderedList(org.sagebionetworks.markdown.parsers.ListParserTest)')",[1904]
"('MathParser.java', 'org.sagebionetworks.markdown.parsers.MathParser', 'processLine', '(^[> \t\n\x0c\r]*)[$]{2}\\s*$', ' ')","[15515, 17208, 19010]"
"('TableParser.java', 'org.sagebionetworks.markdown.parsers.TableParser', 'processLine', '(\\{\\|\\s*class=&quot;(.*?)&quot;\\s*)|(\\{\\|\\s*)', 'VASP | VASP | MCF7,BT20')",[19852]
"('ListParser.java', 'org.sagebionetworks.markdown.parsers.ListParser', 'processLine', '(^[> \t\n\x0c\r]*)([-+*])(\\s+)(.+)', '{row}')","[3723, 5861]"
"('CodeParser.java', 'org.sagebionetworks.markdown.parsers.CodeParser', 'processLine', '(^[> \t\n\x0c\r]*)[`]{3}\\s*([a-zA-Z_0-9-]*)\\s*$', 'sudo pip install python-magic')",[30561]
"('ListParser.java', 'org.sagebionetworks.markdown.parsers.ListParser', 'processLine', '(^[> \t\n\x0c\r]*)(\\d+)[.](\\s+)(.+)', '`python s3cmd --configure s3://&lt;your_bucket_name&gt;`')",[23058]
"('HorizontalLineParser.java', 'org.sagebionetworks.markdown.parsers.HorizontalLineParser', 'processLine', '^[*]{3,}$', '<h2>-&gt;CenteredHeadline&lt;-</h2>')",[2548]
"('TableParser.java', 'org.sagebionetworks.markdown.parsers.TableParser', 'processLine', '(\\{\\|\\s*class=&quot;(.*?)&quot;\\s*)|(\\{\\|\\s*)', '--------------------------------')",[20483]
"('TableParser.java', 'org.sagebionetworks.markdown.parsers.TableParser', 'processLine', '(\\{\\|\\s*class=&quot;(.*?)&quot;\\s*)|(\\{\\|\\s*)', '| --: | -- | :-- |')",[32402]
"('Description.java', 'org.junit.runner.Description', 'getClassName', '(.*)\\((.*)\\)', 'org.sagebionetworks.markdown.parsers.UrlAutoLinkParserTest')","[26300, 26323, 26347, 26370]"
"('TableParser.java', 'org.sagebionetworks.markdown.parsers.TableParser', 'processLine', '(\\{\\|\\s*class=&quot;(.*?)&quot;\\s*)|(\\{\\|\\s*)', '{| class=&quot;border text-align-center&quot; ')",[12425]
"('ListParser.java', 'org.sagebionetworks.markdown.parsers.ListParser', 'processLine', '(^[> \t\n\x0c\r]*)(\\d+)[.](\\s+)(.+)', '<tr><td>Content       </td><td>   **Cell**    </td><td>         Cell </td></tr>\n')",[11779]
"('MathParser.java', 'org.sagebionetworks.markdown.parsers.MathParser', 'processLine', '(^[> \t\n\x0c\r]*)[$]{2}\\s*$', '')","[2629, 3293, 6095, 6759, 7423, 8087, 8751, 9415, 10079, 12045, 12659, 13014, 13304, 15116, 15805, 16864, 18611, 19300, 21169, 21468, 21786, 22366, 23320, 23984, 24358, 24732, 25022]"
"('HorizontalLineParser.java', 'org.sagebionetworks.markdown.parsers.HorizontalLineParser', 'processLine', '^[-]{3,}$', '<tr><td>Content</td><td>*LongCell*</td></tr>\n')",[11565]
"('BlockQuoteParser.java', 'org.sagebionetworks.markdown.parsers.BlockQuoteParser', 'processLine', '(^\\s*(>(\\s?))(.*))', 'third line not in blockquote')",[25900]
"('Description.java', 'org.junit.runner.Description', 'parseMethod', '(.*)\\((.*)\\)', 'testSWC2854(org.sagebionetworks.markdown.SynapseMarkdownProcessorTest)')",[291]
"('TableParser.java', 'org.sagebionetworks.markdown.parsers.TableParser', 'processLine', '(\\{\\|\\s*class=&quot;(.*?)&quot;\\s*)|(\\{\\|\\s*)', '#### SubItem 2a')",[17921]
"('Description.java', 'org.junit.runner.Description', 'getClassName', '(.*)\\((.*)\\)', 'testCodeSpan(org.sagebionetworks.markdown.parsers.CodeSpanParserTest)')",[1945]
"('MathParser.java', 'org.sagebionetworks.markdown.parsers.MathParser', 'processLine', '(^[> \t\n\x0c\r]*)[$]{2}\\s*$', 'Text in this line after (0.01&lt;LALA&lt;0.05) is not included in the output html')",[7797]
"('BlockQuoteParser.java', 'org.sagebionetworks.markdown.parsers.BlockQuoteParser', 'processLine', '(^\\s*(>(\\s?))(.*))', '<tr><td>XIAP </td><td> XIAP </td><td> MCF7,BT20</td></tr>\n')",[20261]
"('HeadingParser.java', 'org.sagebionetworks.markdown.parsers.HeadingParser', 'processLine', '(^[> \t\n\x0c\r]*)(#{1,6})\\s*(.*)', '## Additional Data Details')",[20963]
"('Description.java', 'org.junit.runner.Description', 'parseMethod', '(.*)\\((.*)\\)', 'testMarkdown2HtmlEscapeControlCharacters(org.sagebionetworks.markdown.SynapseMarkdownProcessorTest)')",[501]
"('BlockQuoteParser.java', 'org.sagebionetworks.markdown.parsers.BlockQuoteParser', 'processLine', '(^\\s*(>(\\s?))(.*))', '> first line text')",[25802]
"('ListParser.java', 'org.sagebionetworks.markdown.parsers.ListParser', 'processLine', '(^[> \t\n\x0c\r]*)(.*)', '    sudo apt-get install python python-setuptools python-pip')",[30385]
"('CodeParser.java', 'org.sagebionetworks.markdown.parsers.CodeParser', 'processLine', '(^[> \t\n\x0c\r]*)[`]{3}\\s*([a-zA-Z_0-9-]*)\\s*$', 'some code')",[28512]
"('HeadingParser.java', 'org.sagebionetworks.markdown.parsers.HeadingParser', 'processLine', '(^[> \t\n\x0c\r]*)(#{1,6})\\s*(.*)', 'Second')",[16624]
"('Description.java', 'org.junit.runner.Description', 'parseMethod', '(.*)\\((.*)\\)', 'testEscaping(org.sagebionetworks.markdown.parsers.EscapedBacktickParserTest)')",[1430]
"('ListParser.java', 'org.sagebionetworks.markdown.parsers.ListParser', 'processLine', '(^[> \t\n\x0c\r]*)(.*)', '``` r')",[18530]
"('Description.java', 'org.junit.runner.Description', 'parseMethod', '(.*)\\((.*)\\)', 'testHappyCase(org.sagebionetworks.markdown.parsers.CodeParserTest)')",[1759]
"('ListParser.java', 'org.sagebionetworks.markdown.parsers.ListParser', 'processLine', '(^[> \t\n\x0c\r]*)(\\d+)[.](\\s+)(.+)', '1. #### Heading1')",[30815]
"('HeadingParser.java', 'org.sagebionetworks.markdown.parsers.HeadingParser', 'processLine', '(^[> \t\n\x0c\r]*)(#{1,6})\\s*(.*)', 'link to the <span id=""doi-0""></span> for the challenge')",[6628]
"('HorizontalLineParser.java', 'org.sagebionetworks.markdown.parsers.HorizontalLineParser', 'processLine', '^[*]{3,}$', 'First')",[16358]
"('HeadingParser.java', 'org.sagebionetworks.markdown.parsers.HeadingParser', 'processLine', '(^[> \t\n\x0c\r]*)(#{1,6})\\s*(.*)', '#### Heading1')",[30891]
"('ListParser.java', 'org.sagebionetworks.markdown.parsers.ListParser', 'processLine', '(^[> \t\n\x0c\r]*)(\\d+)[.](\\s+)(.+)', '*   Cunning')",[29216]
"('TableParser.java', 'org.sagebionetworks.markdown.parsers.TableParser', 'processLine', '\\s*\\|\\}\\s*', '{| class=&quot;border&quot;')",[32726]
"('Description.java', 'org.junit.runner.Description', 'parseMethod', '(.*)\\((.*)\\)', 'testBookmarkTarget(org.sagebionetworks.markdown.parsers.BookmarkTargetParserTest)')",[1389]
"('ListParser.java', 'org.sagebionetworks.markdown.parsers.ListParser', 'getListItem', '(^\\s*(>(\\s?))(.*))', '1. #### Heading1')",[30865]
"('TableParser.java', 'org.sagebionetworks.markdown.parsers.TableParser', 'processLine', '\\s*\\|\\}\\s*', '_italicized_')",[22182]
"('HeadingParser.java', 'org.sagebionetworks.markdown.parsers.HeadingParser', 'processLine', '(^[> \t\n\x0c\r]*)(#{1,6})\\s*(.*)', 'DemoClinicalOnlyModel &lt;- setRefClass(Class  = &quot;CINModel&quot;,...')",[9948]
"('TableParser.java', 'org.sagebionetworks.markdown.parsers.TableParser', 'processLine', '\\s*\\|\\}\\s*', 'Tau | MAPT | MCF7,BT20')",[19724]
"('TableParser.java', 'org.sagebionetworks.markdown.parsers.TableParser', 'processLine', '(\\{\\|\\s*class=&quot;(.*?)&quot;\\s*)|(\\{\\|\\s*)', '{row}')","[3748, 5886]"
"('BlockQuoteParser.java', 'org.sagebionetworks.markdown.parsers.BlockQuoteParser', 'processLine', '(^\\s*(>(\\s?))(.*))', '>   2. SubItem 2b')",[18074]
"('TableParser.java', 'org.sagebionetworks.markdown.parsers.TableParser', 'processLine', '\\s*\\|\\}\\s*', 'Item 1')",[13763]
"('TableParser.java', 'org.sagebionetworks.markdown.parsers.TableParser', 'processLine', '\\s*\\|\\}\\s*', 'Row 2 Content Cell 1  | Row 2 Content Cell 2  | Row 2 Content Cell 3')",[32818]
"('ListParser.java', 'org.sagebionetworks.markdown.parsers.ListParser', 'processLine', '(^[> \t\n\x0c\r]*)([-+*])(\\s+)(.+)', '    1. bunk')",[31475]
"('ListParser.java', 'org.sagebionetworks.markdown.parsers.ListParser', 'getListItem', '(^\\s*(>(\\s?))(.*))', '>   2. SubItem 2b')",[14636]
"('TableParser.java', 'org.sagebionetworks.markdown.parsers.TableParser', 'processLine', '\\s*\\|\\}\\s*', '`python s3cmd --configure s3://&lt;your_bucket_name&gt;`')",[23136]
"('Description.java', 'org.junit.runner.Description', 'parseMethod', '(.*)\\((.*)\\)', 'testInnerBrackets(org.sagebionetworks.markdown.parsers.LinkParserTest)')",[730]
"('CodeParser.java', 'org.sagebionetworks.markdown.parsers.CodeParser', 'processLine', '(^[> \t\n\x0c\r]*)[`]{3}\\s*([a-zA-Z_0-9-]*)\\s*$', '_italicized_')",[22023]
"('ListParser.java', 'org.sagebionetworks.markdown.parsers.ListParser', 'processLine', '(^[> \t\n\x0c\r]*)(.*)', '    This is another paragraph')","[29573, 29700]"
"('ListParser.java', 'org.sagebionetworks.markdown.parsers.ListParser', 'processLine', '(^[> \t\n\x0c\r]*)([-+*])(\\s+)(.+)', '   1. #### SubItem 2a')",[17814]
"('BlockQuoteParser.java', 'org.sagebionetworks.markdown.parsers.BlockQuoteParser', 'processLine', '(^\\s*(>(\\s?))(.*))', '{| class=&quot;border text-align-center&quot; ')",[12288]
"('Description.java', 'org.junit.runner.Description', 'getClassName', '(.*)\\((.*)\\)', 'org.sagebionetworks.markdown.parsers.EscapedVerticalLineParserTest')","[26488, 26511, 26535, 26558]"
"('BlockQuoteParser.java', 'org.sagebionetworks.markdown.parsers.BlockQuoteParser', 'processLine', '(^\\s*(>(\\s?))(.*))', 'Text in this line after (0.01&lt;LALA&lt;0.05) is not included in the output html')",[7741]
"('TableParser.java', 'org.sagebionetworks.markdown.parsers.TableParser', 'processLine', '(\\{\\|\\s*class=&quot;(.*?)&quot;\\s*)|(\\{\\|\\s*)', ' ------------ | :-----------: | -----------: |')",[11020]
"('CodeParser.java', 'org.sagebionetworks.markdown.parsers.CodeParser', 'processLine', '(^[> \t\n\x0c\r]*)[`]{3}\\s*([a-zA-Z_0-9-]*)\\s*$', '### How are you?')",[5197]
"('ListParser.java', 'org.sagebionetworks.markdown.parsers.ListParser', 'processLine', '(^[> \t\n\x0c\r]*)(.*)', '')","[16758, 29344, 29801, 30766, 31071, 31324, 31729]"
"('ListParser.java', 'org.sagebionetworks.markdown.parsers.ListParser', 'processLine', '(^[> \t\n\x0c\r]*)(\\d+)[.](\\s+)(.+)', '2. Second one')",[31601]
"('ListParser.java', 'org.sagebionetworks.markdown.parsers.ListParser', 'processLine', '(^[> \t\n\x0c\r]*)([-+*])(\\s+)(.+)', '`python s3cmd --configure s3://&lt;your_bucket_name&gt;`')",[23086]
"('HorizontalLineParser.java', 'org.sagebionetworks.markdown.parsers.HorizontalLineParser', 'processLine', '^[*]{3,}$', 'Item1')",[13866]
"('Description.java', 'org.junit.runner.Description', 'parseMethod', '(.*)\\((.*)\\)', 'testEscaping(org.sagebionetworks.markdown.parsers.EscapedVerticalLineParserTest)')",[1018]
"('HorizontalLineParser.java', 'org.sagebionetworks.markdown.parsers.HorizontalLineParser', 'processLine', '^[*]{3,}$', '&lt;table&gt;&lt;tr&gt;&lt;td&gt;thisisatest&lt;/td&gt;&lt;td&gt;column2&lt;/td&gt;&lt;/tr&gt;&lt;/table&gt;&lt;iframewidth=&quot;420&quot;height=&quot;315&quot;src=&quot;<spanid=""autolink-0""></span>;frameborder=&quot;0&quot;allowfullscreen&gt;&lt;/iframe&gt;&lt;embed&gt;')",[8670]
"('Description.java', 'org.junit.runner.Description', 'parseMethod', '(.*)\\((.*)\\)', 'testRowColumnMultiline(org.sagebionetworks.markdown.SynapseMarkdownProcessorTest)')",[228]
"('MathParser.java', 'org.sagebionetworks.markdown.parsers.MathParser', 'processLine', '(^[> \t\n\x0c\r]*)[$]{2}\\s*$', '<tr><td>Content       </td><td>          *Long Cell*        </td></tr>\n')",[11452]
"('HeadingParser.java', 'org.sagebionetworks.markdown.parsers.HeadingParser', 'processLine', '(^[> \t\n\x0c\r]*)(#{1,6})\\s*(.*)', '<div class=""overflow-auto""><table id=""markdown-table-0"" class=""tablesorter markdowntable"">')","[10612, 19777]"
"('Description.java', 'org.junit.runner.Description', 'getClassName', '(.*)\\((.*)\\)', 'org.sagebionetworks.markdown.utils.ServerMarkdownUtilsTest')","[2188, 2211, 2235, 2258]"
"('BlockQuoteParser.java', 'org.sagebionetworks.markdown.parsers.BlockQuoteParser', 'processLine', '(^[> \t\n\x0c\r]*)[`]{3}\\s*([a-zA-Z_0-9-]*)\\s*$', '>   1. #### SubItem 2a')",[17758]
"('TableParser.java', 'org.sagebionetworks.markdown.parsers.TableParser', 'processLine', '\\s*\\|\\}\\s*', '### How are you?')",[5331]
"('ListParser.java', 'org.sagebionetworks.markdown.parsers.ListParser', 'processLine', '(^[> \t\n\x0c\r]*)(\\d+)[.](\\s+)(.+)', '*   Abacus')",[28684]
"('MathParser.java', 'org.sagebionetworks.markdown.parsers.MathParser', 'processLine', '(^[> \t\n\x0c\r]*)[$]{2}\\s*$', '1. First')",[16123]
"('TableParser.java', 'org.sagebionetworks.markdown.parsers.TableParser', 'processLine', '(.+[|]{1}.*)+', '| --: | -- | :-- |')",[32448]
"('TableParser.java', 'org.sagebionetworks.markdown.parsers.TableParser', 'processLine', '(.+[|]{1}.*)+', ' Item 2')",[14132]
"('CodeParser.java', 'org.sagebionetworks.markdown.parsers.CodeParser', 'processLine', '(^[> \t\n\x0c\r]*)[`]{3}\\s*([a-zA-Z_0-9-]*)\\s*$', 'SubItem 2b')",[18212]
"('CodeParser.java', 'org.sagebionetworks.markdown.parsers.CodeParser', 'processLine', '(^[> \t\n\x0c\r]*)[`]{3}\\s*([a-zA-Z_0-9-]*)\\s*$', 'third line')",[28538]
"('Description.java', 'org.junit.runner.Description', 'parseMethod', '(.*)\\((.*)\\)', 'testEscaping(org.sagebionetworks.markdown.parsers.TildeParserTest)')",[1574]
"('HeadingParser.java', 'org.sagebionetworks.markdown.parsers.HeadingParser', 'processLine', '(^[> \t\n\x0c\r]*)(#{1,6})\\s*(.*)', ' Item 2')",[14160]
"('HorizontalLineParser.java', 'org.sagebionetworks.markdown.parsers.HorizontalLineParser', 'processLine', '^[-]{3,}$', '{column}')","[4775, 5699]"
"('HorizontalLineParser.java', 'org.sagebionetworks.markdown.parsers.HorizontalLineParser', 'processLine', '^[-]{3,}$', 'Item1')",[13841]
"('Description.java', 'org.junit.runner.Description', 'parseMethod', '(.*)\\((.*)\\)', 'test(org.sagebionetworks.markdown.parsers.SynapseMarkdownWidgetParserTest)')",[1327]
"('MathParser.java', 'org.sagebionetworks.markdown.parsers.MathParser', 'processLine', '(^[> \t\n\x0c\r]*)[$]{2}\\s*$', 'Configure s3cmd by executing')",[22740]
"('TableParser.java', 'org.sagebionetworks.markdown.parsers.TableParser', 'processLine', '(.+[|]{1}.*)+', 'link to the doi:10.7303/syn2699915 for the challenge')",[6600]
"('MathParser.java', 'org.sagebionetworks.markdown.parsers.MathParser', 'processLine', '(^[> \t\n\x0c\r]*)[$]{2}\\s*$', '|             |          Grouping           ||')",[10453]
"('ListParser.java', 'org.sagebionetworks.markdown.parsers.ListParser', 'processLine', '(^[> \t\n\x0c\r]*)(.*)', '    ```')","[30004, 30639]"
"('ListParser.java', 'org.sagebionetworks.markdown.parsers.ListParser', 'processLine', '(^[> \t\n\x0c\r]*)([-+*])(\\s+)(.+)', '{| class=&quot;border text-align-center&quot; ')",[12400]
"('TableParser.java', 'org.sagebionetworks.markdown.parsers.TableParser', 'processLine', '\\s*\\|\\}\\s*', 'SubItem 2b')",[18290]
"('BlockQuoteParser.java', 'org.sagebionetworks.markdown.parsers.BlockQuoteParser', 'processLine', '(^\\s*(>(\\s?))(.*))', '## Additional Data Details')",[20823]
"('Description.java', 'org.junit.runner.Description', 'parseMethod', '(.*)\\((.*)\\)', 'testTableWithDifferentHeader(org.sagebionetworks.markdown.parsers.TableParserTest)')",[2028]
"('HorizontalLineParser.java', 'org.sagebionetworks.markdown.parsers.HorizontalLineParser', 'processLine', '^[*]{3,}$', '<divclass=""overflow-auto""><tableid=""markdown-table-0""class=""tablesortermarkdowntablebordertext-align-center"">')",[12528]
"('Description.java', 'org.junit.runner.Description', 'parseMethod', '(.*)\\((.*)\\)', 'testListAndHeaderInBlockquote(org.sagebionetworks.markdown.SynapseMarkdownProcessorTest)')",[417]
"('ListParser.java', 'org.sagebionetworks.markdown.parsers.ListParser', 'processLine', '(^[> \t\n\x0c\r]*)(\\d+)[.](\\s+)(.+)', '    1. bunk')",[31449]
"('HorizontalLineParser.java', 'org.sagebionetworks.markdown.parsers.HorizontalLineParser', 'processLine', '^[*]{3,}$', '*******')",[27072]
"('CodeParser.java', 'org.sagebionetworks.markdown.parsers.CodeParser', 'processLine', '(^[> \t\n\x0c\r]*)[`]{3}\\s*([a-zA-Z_0-9-]*)\\s*$', '{| class=&quot;border text-align-center&quot; ')",[12316]
"('ListParser.java', 'org.sagebionetworks.markdown.parsers.ListParser', 'processLine', '(^[> \t\n\x0c\r]*)(\\d+)[.](\\s+)(.+)', '##-&gt;Centered Headline&lt;-')",[2367]
"('ListParser.java', 'org.sagebionetworks.markdown.parsers.ListParser', 'processLine', '(^[> \t\n\x0c\r]*)(\\d+)[.](\\s+)(.+)', '   2. SubItem 2b')",[18130]
"('BlockQuoteParser.java', 'org.sagebionetworks.markdown.parsers.BlockQuoteParser', 'processLine', '(^\\s*(>(\\s?))(.*))', '### How are you?')",[5169]
"('ListParser.java', 'org.sagebionetworks.markdown.parsers.ListParser', 'processLine', '(^[> \t\n\x0c\r]*)([-+*])(\\s+)(.+)', '1. List item one')",[31399]
"('HorizontalLineParser.java', 'org.sagebionetworks.markdown.parsers.HorizontalLineParser', 'processLine', '^[-]{3,}$', 'linktothe<spanid=""doi-0""></span>forthechallenge')",[6653]
"('Description.java', 'org.junit.runner.Description', 'getClassName', '(.*)\\((.*)\\)', 'org.sagebionetworks.markdown.parsers.BoldParserTest')","[28150, 28173, 28197, 28220]"
"('HorizontalLineParser.java', 'org.sagebionetworks.markdown.parsers.HorizontalLineParser', 'processLine', '^[*]{3,}$', 'ContainsaSynapsewidget<spanid=""widgetsyntax-0-suffix-test""></span>inthemarkdown.')",[7342]
"('BlockQuoteParser.java', 'org.sagebionetworks.markdown.parsers.BlockQuoteParser', 'processLine', '(^\\s*(>(\\s?))(.*))', '&lt;table&gt;&lt;tr&gt;&lt;td&gt;this is a test&lt;/td&gt;&lt;td&gt;column 2&lt;/td&gt;&lt;/tr&gt;&lt;/table&gt;&lt;iframe width=&quot;420&quot; height=&quot;315&quot; src=&quot;http://www.youtube.com/embed/AOjaQ7Vl7SM&quot; frameborder=&quot;0&quot; allowfullscreen&gt;&lt;/iframe&gt;&lt;embed&gt;')",[8405]
"('HeadingParser.java', 'org.sagebionetworks.markdown.parsers.HeadingParser', 'processLine', '(^[> \t\n\x0c\r]*)(#{1,6})\\s*(.*)', 'The hi in t<strong>hi</strong>s is bold. No spaces in H~2~O.')",[3162]
"('TableParser.java', 'org.sagebionetworks.markdown.parsers.TableParser', 'processLine', '\\s*\\|\\}\\s*', '{row}')","[3773, 5911]"
"('TableParser.java', 'org.sagebionetworks.markdown.parsers.TableParser', 'processLine', '(\\{\\|\\s*class=&quot;(.*?)&quot;\\s*)|(\\{\\|\\s*)', '### Hello World')",[4382]
"('MathParser.java', 'org.sagebionetworks.markdown.parsers.MathParser', 'processLine', '(^[> \t\n\x0c\r]*)[$]{2}\\s*$', '$$')","[25435, 25565]"
"('Description.java', 'org.junit.runner.Description', 'parseMethod', '(.*)\\((.*)\\)', 'testSubscript(org.sagebionetworks.markdown.parsers.SubscriptParserTest)')",[1718]
"('CodeParser.java', 'org.sagebionetworks.markdown.parsers.CodeParser', 'processLine', '(^[> \t\n\x0c\r]*)[`]{3}\\s*([a-zA-Z_0-9-]*)\\s*$', 'Item 2')",[17524]
"('TableParser.java', 'org.sagebionetworks.markdown.parsers.TableParser', 'processLine', '(\\{\\|\\s*class=&quot;(.*?)&quot;\\s*)|(\\{\\|\\s*)', 'Item 1')",[13738]
"('ListParser.java', 'org.sagebionetworks.markdown.parsers.ListParser', 'processLine', '(^[> \t\n\x0c\r]*)(\\d+)[.](\\s+)(.+)', 'Tau | MAPT | MCF7,BT20')",[19646]
"('MathParser.java', 'org.sagebionetworks.markdown.parsers.MathParser', 'processLine', '(^[> \t\n\x0c\r]*)[$]{2}\\s*$', '&lt;table&gt;&lt;tr&gt;&lt;td&gt;this is a test&lt;/td&gt;&lt;td&gt;column 2&lt;/td&gt;&lt;/tr&gt;&lt;/table&gt;&lt;iframe width=&quot;420&quot; height=&quot;315&quot; src=&quot;http://www.youtube.com/embed/AOjaQ7Vl7SM&quot; frameborder=&quot;0&quot; allowfullscreen&gt;&lt;/iframe&gt;&lt;embed&gt;')",[8461]
"('ListParser.java', 'org.sagebionetworks.markdown.parsers.ListParser', 'processLine', '(^[> \t\n\x0c\r]*)(\\d+)[.](\\s+)(.+)', '    This is another paragraph')","[29521, 29648]"
"('CodeParser.java', 'org.sagebionetworks.markdown.parsers.CodeParser', 'processLine', '(^[> \t\n\x0c\r]*)[`]{3}\\s*([a-zA-Z_0-9-]*)\\s*$', '```java')",[21440]
"('HorizontalLineParser.java', 'org.sagebionetworks.markdown.parsers.HorizontalLineParser', 'processLine', '^[*]{3,}$', '<tr><td>Row1ContentCell1</td><td>Row1ContentCell2</td><td>Row1ContentCell3</td></tr>\n')",[12933]
"('ListParser.java', 'org.sagebionetworks.markdown.parsers.ListParser', 'processLine', '(^[> \t\n\x0c\r]*)([-+*])(\\s+)(.+)', '    ```')","[29978, 30613]"
"('BlockQuoteParser.java', 'org.sagebionetworks.markdown.parsers.BlockQuoteParser', 'processLine', '(^[> \t\n\x0c\r]*)[`]{3}\\s*([a-zA-Z_0-9-]*)\\s*$', '>   2. SubItem 2b')",[18102]
"('TableParser.java', 'org.sagebionetworks.markdown.parsers.TableParser', 'processLine', '(.+[|]{1}.*)+', 'First')",[16280]
"('HorizontalLineParser.java', 'org.sagebionetworks.markdown.parsers.HorizontalLineParser', 'processLine', '^[*]{3,}$', '')","[2838, 2922, 3502, 3586, 6304, 6388, 6968, 7052, 7632, 7716, 8296, 8380, 8960, 9044, 9624, 10288, 10372, 12179, 12263, 12793, 13148, 13438, 13522, 15269, 15668, 15958, 16042, 17017, 17361, 18764, 19163, 19453, 19537, 21303, 21387, 21677, 21995, 22575, 22659, 23529, 23613, 24193, 24277, 24567, 24941, 25231, 25315]"
"('TableParser.java', 'org.sagebionetworks.markdown.parsers.TableParser', 'processLine', '(\\{\\|\\s*class=&quot;(.*?)&quot;\\s*)|(\\{\\|\\s*)', ' Item 2')",[14082]
"('Description.java', 'org.junit.runner.Description', 'getClassName', '(.*)\\((.*)\\)', 'org.sagebionetworks.markdown.parsers.EscapedBacktickParserTest')","[27424, 27447, 27471, 27494]"
"('ListParser.java', 'org.sagebionetworks.markdown.parsers.ListParser', 'processLine', '(^[> \t\n\x0c\r]*)([-+*])(\\s+)(.+)', 'link to the doi:10.7303/syn2699915 for the challenge')",[6525]
"('ListParser.java', 'org.sagebionetworks.markdown.parsers.ListParser', 'processLine', '(^[> \t\n\x0c\r]*)(\\d+)[.](\\s+)(.+)', '2. Second')",[16386]
"('ListParser.java', 'org.sagebionetworks.markdown.parsers.ListParser', 'getListItem', '(^\\s*(>(\\s?))(.*))', '    1. bunk')",[31499]
"('HorizontalLineParser.java', 'org.sagebionetworks.markdown.parsers.HorizontalLineParser', 'processLine', '^[*]{3,}$', '<tr><td>Content</td><td>*LongCell*</td></tr>\n')",[11591]
"('TableParser.java', 'org.sagebionetworks.markdown.parsers.TableParser', 'processLine', '\\s*\\|\\}\\s*', '{| class=&quot;border text-align-center&quot; ')",[12450]
"('TableParser.java', 'org.sagebionetworks.markdown.parsers.TableParser', 'processLine', '(\\{\\|\\s*class=&quot;(.*?)&quot;\\s*)|(\\{\\|\\s*)', ' #### SubItem 2a')",[14426]
"('ListParser.java', 'org.sagebionetworks.markdown.parsers.ListParser', 'processLine', '(^[> \t\n\x0c\r]*)(\\d+)[.](\\s+)(.+)', '    1.  bunk')",[28912]
"('Description.java', 'org.junit.runner.Description', 'getClassName', '(.*)\\((.*)\\)', 'testAutoLink(org.sagebionetworks.markdown.parsers.UrlAutoLinkParserTest)')",[956]
"('CodeParser.java', 'org.sagebionetworks.markdown.parsers.CodeParser', 'processLine', '(^[> \t\n\x0c\r]*)[`]{3}\\s*([a-zA-Z_0-9-]*)\\s*$', '<tbody><tr><td>Tau </td><td> MAPT </td><td> MCF7,BT20</td></tr>\n<tr><td>VASP </td><td> VASP </td><td> MCF7,BT20</td></tr>\n')",[19986]
"('MathParser.java', 'org.sagebionetworks.markdown.parsers.MathParser', 'processLine', '(^[> \t\n\x0c\r]*)[$]{2}\\s*$', 'Second')",[16521]
"('HorizontalLineParser.java', 'org.sagebionetworks.markdown.parsers.HorizontalLineParser', 'processLine', '^[-]{3,}$', 'SubItem2b')","[14873, 18368]"
"('CodeParser.java', 'org.sagebionetworks.markdown.parsers.CodeParser', 'processLine', '(^[> \t\n\x0c\r]*)[`]{3}\\s*([a-zA-Z_0-9-]*)\\s*$', 'DemoClinicalOnlyModel &lt;- setRefClass(Class  = &quot;CINModel&quot;,...')",[9761]
"('Description.java', 'org.junit.runner.Description', 'parseMethod', '(.*)\\((.*)\\)', 'testCenterText(org.sagebionetworks.markdown.parsers.CenterTextParserTest)')",[813]
"('HorizontalLineParser.java', 'org.sagebionetworks.markdown.parsers.HorizontalLineParser', 'processLine', '^[*]{3,}$', '{columnwidth=6}')","[4166, 5090]"
"('ListParser.java', 'org.sagebionetworks.markdown.parsers.ListParser', 'processLine', '(^\\s*(>(\\s?))(.*))', '    sudo apt-get install curl')",[30281]
"('Description.java', 'org.junit.runner.Description', 'parseMethod', '(.*)\\((.*)\\)', 'testTableThenHR(org.sagebionetworks.markdown.SynapseMarkdownProcessorTest)')",[438]
"('HorizontalLineParser.java', 'org.sagebionetworks.markdown.parsers.HorizontalLineParser', 'processLine', '^[-]{3,}$', '{columnwidth=6}')","[4141, 5065]"
"('ListParser.java', 'org.sagebionetworks.markdown.parsers.ListParser', 'processLine', '(^[> \t\n\x0c\r]*)([-+*])(\\s+)(.+)', '1. First item')",[31146]
"('ListParser.java', 'org.sagebionetworks.markdown.parsers.ListParser', 'processLine', '(^[> \t\n\x0c\r]*)(\\d+)[.](\\s+)(.+)', ' ')","[15459, 18954]"
"('HorizontalLineParser.java', 'org.sagebionetworks.markdown.parsers.HorizontalLineParser', 'processLine', '^[*]{3,}$', '<divclass=""overflow-auto""><tableid=""markdown-table-0""class=""tablesortermarkdowntable"">')","[10662, 19827]"
"('TableParser.java', 'org.sagebionetworks.markdown.parsers.TableParser', 'processLine', '\\s*\\|\\}\\s*', '')","[2735, 3399, 6201, 6865, 7529, 8193, 8857, 9521, 10185, 11939, 13198, 15166, 15855, 16914, 18661, 19350, 21063, 21574, 21892, 22472, 23426, 24090, 24464, 24838, 25128, 32055, 32287, 32519, 32657, 32935]"
"('HorizontalLineParser.java', 'org.sagebionetworks.markdown.parsers.HorizontalLineParser', 'processLine', '^[*]{3,}$', 'Thehiint<strong>hi</strong>sisbold.NospacesinH~2~O.')",[3212]
"('MathParser.java', 'org.sagebionetworks.markdown.parsers.MathParser', 'processLine', '(^[> \t\n\x0c\r]*)[$]{2}\\s*$', ' Item 2')",[14057]
"('HorizontalLineParser.java', 'org.sagebionetworks.markdown.parsers.HorizontalLineParser', 'processLine', '^[*]{3,}$', '<h3>Howareyou?</h3>')",[5434]
"('ListParser.java', 'org.sagebionetworks.markdown.parsers.ListParser', 'getListItem', '(^\\s*(>(\\s?))(.*))', ' * Item 2')",[17496]
"('Description.java', 'org.junit.runner.Description', 'getClassName', '(.*)\\((.*)\\)', 'testTableWithTwoCol(org.sagebionetworks.markdown.parsers.TableParserTest)')",[1986]
"('ListParser.java', 'org.sagebionetworks.markdown.parsers.ListParser', 'processLine', '(^[> \t\n\x0c\r]*)(\\d+)[.](\\s+)(.+)', '> * Item 2')",[13894]
"('ListParser.java', 'org.sagebionetworks.markdown.parsers.ListParser', 'processLine', '(^[> \t\n\x0c\r]*)(\\d+)[.](\\s+)(.+)', '1. First')",[16151]
"('Description.java', 'org.junit.runner.Description', 'getClassName', '(.*)\\((.*)\\)', 'testEscaping(org.sagebionetworks.markdown.parsers.EscapedVerticalLineParserTest)')",[1038]
"('CodeParser.java', 'org.sagebionetworks.markdown.parsers.CodeParser', 'processLine', '(^[> \t\n\x0c\r]*)[`]{3}\\s*([a-zA-Z_0-9-]*)\\s*$', '> Then a code block!')","[15297, 18792]"
"('Description.java', 'org.junit.runner.Description', 'getClassName', '(.*)\\((.*)\\)', 'test(org.sagebionetworks.markdown.parsers.ImageParserTest)')",[915]
"('TableParser.java', 'org.sagebionetworks.markdown.parsers.TableParser', 'processLine', '\\s*\\|\\}\\s*', '{column}')","[4697, 5621]"
"('ListParser.java', 'org.sagebionetworks.markdown.parsers.ListParser', 'processLine', '(^\\s*(>(\\s?))(.*))', '> ``` r')",[15007]
"('Description.java', 'org.junit.runner.Description', 'getClassName', '(.*)\\((.*)\\)', 'testDoubleRoundTripEncodeDecode(org.sagebionetworks.markdown.utils.WidgetEncodingUtilTest)')",[41]
"('MathParser.java', 'org.sagebionetworks.markdown.parsers.MathParser', 'processLine', '(^[> \t\n\x0c\r]*)[$]{2}\\s*$', '#### SubItem 2a')",[17896]
"('HeadingParser.java', 'org.sagebionetworks.markdown.parsers.HeadingParser', 'processLine', '(^[> \t\n\x0c\r]*)(#{1,6})\\s*(.*)', '{column width=6}')","[4116, 5040]"
"('ListParser.java', 'org.sagebionetworks.markdown.parsers.ListParser', 'getListItem', '(^\\s*(>(\\s?))(.*))', '    * answer')",[28810]
"('TableParser.java', 'org.sagebionetworks.markdown.parsers.TableParser', 'processLine', '\\s*\\|\\}\\s*', 'DemoClinicalOnlyModel &lt;- setRefClass(Class  = &quot;CINModel&quot;,...')",[9895]
"('HeadingParser.java', 'org.sagebionetworks.markdown.parsers.HeadingParser', 'processLine', '(^[> \t\n\x0c\r]*)(#{1,6})\\s*(.*)', '<span id=""codespan-0""></span>')",[23189]
"('Description.java', 'org.junit.runner.Description', 'parseMethod', '(.*)\\((.*)\\)', 'testHeadingInBlockquote(org.sagebionetworks.markdown.parsers.HeadingParserTest)')",[1697]
"('HeadingParser.java', 'org.sagebionetworks.markdown.parsers.HeadingParser', 'processLine', '(^[> \t\n\x0c\r]*)(#{1,6})\\s*(.*)', '### Hello World')",[4460]
"('HorizontalLineParser.java', 'org.sagebionetworks.markdown.parsers.HorizontalLineParser', 'processLine', '^[-]{3,}$', '')","[2813, 2895, 3477, 3559, 6279, 6361, 6943, 7025, 7607, 7689, 8271, 8353, 8935, 9017, 9599, 10263, 10345, 12154, 12236, 12768, 13123, 13413, 13495, 15244, 15643, 15933, 16015, 16992, 17336, 18739, 19138, 19428, 19510, 21278, 21360, 21652, 21970, 22550, 22632, 23504, 23586, 24168, 24250, 24542, 24916, 25206, 25288]"
"('Description.java', 'org.junit.runner.Description', 'parseMethod', '(.*)\\((.*)\\)', 'testGetStartLink(org.sagebionetworks.markdown.utils.ServerMarkdownUtilsTest)')",[145]
"('TableParser.java', 'org.sagebionetworks.markdown.parsers.TableParser', 'processLine', '\\s*\\|\\}\\s*', '|}')",[32889]
"('HeadingParser.java', 'org.sagebionetworks.markdown.parsers.HeadingParser', 'processLine', '(^[> \t\n\x0c\r]*)(#{1,6})\\s*(.*)', 'Item 1')",[13816]
"('CodeParser.java', 'org.sagebionetworks.markdown.parsers.CodeParser', 'processLine', '(^[> \t\n\x0c\r]*)[`]{3}\\s*([a-zA-Z_0-9-]*)\\s*$', '## Additional Data Details')",[20851]
"('ListParser.java', 'org.sagebionetworks.markdown.parsers.ListParser', 'getListItem', '(^\\s*(>(\\s?))(.*))', '> * Item 1')",[17099]
"('HeadingParser.java', 'org.sagebionetworks.markdown.parsers.HeadingParser', 'processLine', '(^[> \t\n\x0c\r]*)(#{1,6})\\s*(.*)', '<tr><td>Content       </td><td>          *Long Cell*        </td></tr>\n')",[11539]
"('BlockQuoteParser.java', 'org.sagebionetworks.markdown.parsers.BlockQuoteParser', 'processLine', '(^\\s*(>(\\s?))(.*))', '<tr><td>Content       </td><td>   **Cell**    </td><td>         Cell </td></tr>\n')",[11692]
"('ListParser.java', 'org.sagebionetworks.markdown.parsers.ListParser', 'processLine', '(^[> \t\n\x0c\r]*)([-+*])(\\s+)(.+)', '*   Cunning')",[29242]
"('CodeParser.java', 'org.sagebionetworks.markdown.parsers.CodeParser', 'processLine', '(^[> \t\n\x0c\r]*)[`]{3}\\s*([a-zA-Z_0-9-]*)\\s*$', 'First item')",[29926]
"('TableParser.java', 'org.sagebionetworks.markdown.parsers.TableParser', 'processLine', '\\s*\\|\\}\\s*', '#### SubItem 2a')",[17946]
"('HeadingParser.java', 'org.sagebionetworks.markdown.parsers.HeadingParser', 'processLine', '(^[> \t\n\x0c\r]*)(#{1,6})\\s*(.*)', '<div class=""overflow-auto""><table id=""markdown-table-0"" class=""tablesorter markdowntable border text-align-center"">')",[12478]
"('BlockQuoteParser.java', 'org.sagebionetworks.markdown.parsers.BlockQuoteParser', 'processLine', '(^\\s*(>(\\s?))(.*))', '{row}')","[3611, 5749]"
"('ListParser.java', 'org.sagebionetworks.markdown.parsers.ListParser', 'processLine', '(^[> \t\n\x0c\r]*)(.*)', '    sudo apt-get install git')",[30131]
"('BlockQuoteParser.java', 'org.sagebionetworks.markdown.parsers.BlockQuoteParser', 'processLine', '(^\\s*(>(\\s?))(.*))', '##-&gt;Centered Headline&lt;-')",[2283]
"('ListParser.java', 'org.sagebionetworks.markdown.parsers.ListParser', 'processLine', '(^[> \t\n\x0c\r]*)([-+*])(\\s+)(.+)', ' * Item 1')",[13687]
"('BlockQuoteParser.java', 'org.sagebionetworks.markdown.parsers.BlockQuoteParser', 'processLine', '(^\\s*(>(\\s?))(.*))', 'Configure s3cmd by executing')",[22684]
"('Description.java', 'org.junit.runner.Description', 'getClassName', '(.*)\\((.*)\\)', 'testInsertExtractedContent(org.sagebionetworks.markdown.utils.ServerMarkdownUtilsTest)')",[103]
"('ListParser.java', 'org.sagebionetworks.markdown.parsers.ListParser', 'processLine', '(^[> \t\n\x0c\r]*)(.*)', '    sudo apt-get install curl')",[30258]
"('HeadingParser.java', 'org.sagebionetworks.markdown.parsers.HeadingParser', 'processLine', '(^[> \t\n\x0c\r]*)(#{1,6})\\s*(.*)', '### Basic Heading')",[28246]
"('Description.java', 'org.junit.runner.Description', 'getClassName', '(.*)\\((.*)\\)', 'testIsNotSingleLine(org.sagebionetworks.markdown.parsers.BlockQuoteParserTest)')",[771]
"('ListParser.java', 'org.sagebionetworks.markdown.parsers.ListParser', 'processLine', '(^[> \t\n\x0c\r]*)(\\d+)[.](\\s+)(.+)', '_italicized_')",[22104]
"('HorizontalLineParser.java', 'org.sagebionetworks.markdown.parsers.HorizontalLineParser', 'processLine', '^[-]{3,}$', '<h3>Howareyou?</h3>')",[5409]
"('CodeParser.java', 'org.sagebionetworks.markdown.parsers.CodeParser', 'processLine', '(^[> \t\n\x0c\r]*)[`]{3}\\s*([a-zA-Z_0-9-]*)\\s*$', 'Contains a Synapse widget ${fakewidget?param1=a} in the markdown.')",[7105]
"('CodeParser.java', 'org.sagebionetworks.markdown.parsers.CodeParser', 'processLine', '(^[> \t\n\x0c\r]*)[`]{3}\\s*([a-zA-Z_0-9-]*)\\s*$', '--------------------------------')",[20586]
"('Description.java', 'org.junit.runner.Description', 'parseMethod', '(.*)\\((.*)\\)', 'testInternalLink(org.sagebionetworks.markdown.parsers.LinkParserTest)')",[646]
"('ListParser.java', 'org.sagebionetworks.markdown.parsers.ListParser', 'processLine', '(^[> \t\n\x0c\r]*)(\\d+)[.](\\s+)(.+)', '   1. #### SubItem 2a')",[17786]
"('HeadingParser.java', 'org.sagebionetworks.markdown.parsers.HeadingParser', 'processLine', '(^[> \t\n\x0c\r]*)(#{1,6})\\s*(.*)', ' #### SubItem 2a')",[14504]
"('ListParser.java', 'org.sagebionetworks.markdown.parsers.ListParser', 'processLine', '(^[> \t\n\x0c\r]*)([-+*])(\\s+)(.+)', '--------------------------------')",[20670]
"('BlockQuoteParser.java', 'org.sagebionetworks.markdown.parsers.BlockQuoteParser', 'processLine', '(^[> \t\n\x0c\r]*)[`]{3}\\s*([a-zA-Z_0-9-]*)\\s*$', '> * Item 2')",[17414]
"('MathParser.java', 'org.sagebionetworks.markdown.parsers.MathParser', 'processLine', '(^[> \t\n\x0c\r]*)[$]{2}\\s*$', '### How are you?')",[5225]
"('MathParser.java', 'org.sagebionetworks.markdown.parsers.MathParser', 'processLine', '(^[> \t\n\x0c\r]*)[$]{2}\\s*$', '<tbody><tr><td>             </td><td>          Grouping           </td></tr>\n<tr><td>First Header  </td><td> Second Header </td><td> Third Header </td></tr>\n')",[10851]
"('ListParser.java', 'org.sagebionetworks.markdown.parsers.ListParser', 'getListItem', '(^\\s*(>(\\s?))(.*))', '    1. #### Heading2')",[30967]
"('ListParser.java', 'org.sagebionetworks.markdown.parsers.ListParser', 'processLine', '(^[> \t\n\x0c\r]*)(\\d+)[.](\\s+)(.+)', '|             |          Grouping           ||')",[10481]
"('CodeParser.java', 'org.sagebionetworks.markdown.parsers.CodeParser', 'processLine', '(^[> \t\n\x0c\r]*)[`]{3}\\s*([a-zA-Z_0-9-]*)\\s*$', ' Item 2')",[14029]
"('HorizontalLineParser.java', 'org.sagebionetworks.markdown.parsers.HorizontalLineParser', 'processLine', '^[-]{3,}$', 'Textinthislineafter(0.01&lt;LALA&lt;0.05)isnotincludedintheoutputhtml')",[7981]
"('ListParser.java', 'org.sagebionetworks.markdown.parsers.ListParser', 'processLine', '(^[> \t\n\x0c\r]*)(\\d+)[.](\\s+)(.+)', '<tbody><tr><td>Tau </td><td> MAPT </td><td> MCF7,BT20</td></tr>\n<tr><td>VASP </td><td> VASP </td><td> MCF7,BT20</td></tr>\n')",[20046]
"('TableParser.java', 'org.sagebionetworks.markdown.parsers.TableParser', 'processLine', '(\\{\\|\\s*class=&quot;(.*?)&quot;\\s*)|(\\{\\|\\s*)', 'The hi in t**hi**s is bold. No spaces in H~2~O.')",[3084]
"('Description.java', 'org.junit.runner.Description', 'parseMethod', '(.*)\\((.*)\\)', 'testDoubleRoundTripEncodeDecode(org.sagebionetworks.markdown.utils.WidgetEncodingUtilTest)')",[21]
"('Description.java', 'org.junit.runner.Description', 'getClassName', '(.*)\\((.*)\\)', 'testSuperscript(org.sagebionetworks.markdown.parsers.SuperscriptParserTest)')",[997]
"('MathParser.java', 'org.sagebionetworks.markdown.parsers.MathParser', 'processLine', '(^[> \t\n\x0c\r]*)[$]{2}\\s*$', '<tr><td>Content       </td><td>   **Cell**    </td><td>         Cell </td></tr>\n')",[11750]
"('Description.java', 'org.junit.runner.Description', 'parseMethod', '(.*)\\((.*)\\)', 'test(org.sagebionetworks.markdown.parsers.ImageParserTest)')",[895]
"('HorizontalLineParser.java', 'org.sagebionetworks.markdown.parsers.HorizontalLineParser', 'processLine', '^[*]{3,}$', 'Second')",[16674]
"('CodeParser.java', 'org.sagebionetworks.markdown.parsers.CodeParser', 'processLine', '(^[> \t\n\x0c\r]*)[`]{3}\\s*([a-zA-Z_0-9-]*)\\s*$', 'link to the doi:10.7303/syn2699915 for the challenge')",[6441]
"('MathParser.java', 'org.sagebionetworks.markdown.parsers.MathParser', 'processLine', '(^[> \t\n\x0c\r]*)[$]{2}\\s*$', '<tr><td> ------------ </td><td> :-----------: </td><td> -----------: </td></tr>\n')",[11154]
"('Description.java', 'org.junit.runner.Description', 'parseMethod', '(.*)\\((.*)\\)', 'testTableWithTwoCol(org.sagebionetworks.markdown.parsers.TableParserTest)')",[1966]
"('Description.java', 'org.junit.runner.Description', 'getClassName', '(.*)\\((.*)\\)', 'testReference(org.sagebionetworks.markdown.parsers.ReferenceParserTest)')",[1079]
"('TableParser.java', 'org.sagebionetworks.markdown.parsers.TableParser', 'processLine', '\\s*\\|\\}\\s*', ""&amp; ==&gt; &amp;&quot; ==&gt; &quot;&gt; ==&gt; &gt;&lt; ==&gt; &lt;' ="")",[23800]
"('CodeParser.java', 'org.sagebionetworks.markdown.parsers.CodeParser', 'processLine', '(^[> \t\n\x0c\r]*)[`]{3}\\s*([a-zA-Z_0-9-]*)\\s*$', 'sudo apt-get install python python-setuptools python-pip')",[30434]
"('TableParser.java', 'org.sagebionetworks.markdown.parsers.TableParser', 'processLine', '(.+[|]{1}.*)+', '#### SubItem 2a')",[17971]
"('ListParser.java', 'org.sagebionetworks.markdown.parsers.ListParser', 'processLine', '(^[> \t\n\x0c\r]*)(\\d+)[.](\\s+)(.+)', ' * Item 1')",[13659]
"('ListParser.java', 'org.sagebionetworks.markdown.parsers.ListParser', 'getListItem', '(^\\s*(>(\\s?))(.*))', '* First item')","[29469, 29900]"
"('ListParser.java', 'org.sagebionetworks.markdown.parsers.ListParser', 'processLine', '(^\\s*(>(\\s?))(.*))', '    sudo apt-get install python python-setuptools python-pip')",[30408]
"('ListParser.java', 'org.sagebionetworks.markdown.parsers.ListParser', 'processLine', '(^[> \t\n\x0c\r]*)(\\d+)[.](\\s+)(.+)', '<tr><td> ------------ </td><td> :-----------: </td><td> -----------: </td></tr>\n')",[11183]
"('BlockQuoteParser.java', 'org.sagebionetworks.markdown.parsers.BlockQuoteParser', 'processLine', '(^\\s*(>(\\s?))(.*))', '> ``` r')","[15032, 18418]"
"('BlockQuoteParser.java', 'org.sagebionetworks.markdown.parsers.BlockQuoteParser', 'processLine', '(^\\s*(>(\\s?))(.*))', '')","[2573, 3237, 6039, 6703, 7367, 8031, 8695, 9359, 10023, 11989, 12603, 12958, 13248, 15693, 16808, 19188, 21113, 21758, 22338, 23264, 23928, 24704, 24994]"
"('ListParser.java', 'org.sagebionetworks.markdown.parsers.ListParser', 'processLine', '(^[> \t\n\x0c\r]*)(\\d+)[.](\\s+)(.+)', '&lt;table&gt;&lt;tr&gt;&lt;td&gt;this is a test&lt;/td&gt;&lt;td&gt;column 2&lt;/td&gt;&lt;/tr&gt;&lt;/table&gt;&lt;iframe width=&quot;420&quot; height=&quot;315&quot; src=&quot;http://www.youtube.com/embed/AOjaQ7Vl7SM&quot; frameborder=&quot;0&quot; allowfullscreen&gt;&lt;/iframe&gt;&lt;embed&gt;')",[8489]
"('TableParser.java', 'org.sagebionetworks.markdown.parsers.TableParser', 'processLine', '(\\{\\|\\s*class=&quot;(.*?)&quot;\\s*)|(\\{\\|\\s*)', '{column width=6}')","[4038, 4962]"
"('Description.java', 'org.junit.runner.Description', 'parseMethod', '(.*)\\((.*)\\)', 'testMailTo(org.sagebionetworks.markdown.parsers.LinkParserTest)')",[709]
"('MathParser.java', 'org.sagebionetworks.markdown.parsers.MathParser', 'processLine', '(^[> \t\n\x0c\r]*)[$]{2}\\s*$', '{column}')","[4591, 5515]"
"('MathParser.java', 'org.sagebionetworks.markdown.parsers.MathParser', 'processLine', '(^[> \t\n\x0c\r]*)[$]{2}\\s*$', 'The hi in t**hi**s is bold. No spaces in H~2~O.')",[3003]
"('ListParser.java', 'org.sagebionetworks.markdown.parsers.ListParser', 'processLine', '(^\\s*(>(\\s?))(.*))', '    sudo apt-get install git')",[30154]
"('ListParser.java', 'org.sagebionetworks.markdown.parsers.ListParser', 'processLine', '(^[> \t\n\x0c\r]*)([-+*])(\\s+)(.+)', 'This is a ref ${reference?text=very simple&amp;inlineWidget=true}.')",[9181]
"('Scanner.java', 'java.util.Scanner', 'getCompleteTokenInBuffer', '(?s).*', ' width=6')","[4193, 4220, 5117, 5144, 27619, 27644]"
"('CodeParser.java', 'org.sagebionetworks.markdown.parsers.CodeParser', 'processLine', '(^[> \t\n\x0c\r]*)[`]{3}\\s*([a-zA-Z_0-9-]*)\\s*$', '{row}')","[3639, 5777]"
"('ListParser.java', 'org.sagebionetworks.markdown.parsers.ListParser', 'processLine', '(^[> \t\n\x0c\r]*)(\\d+)[.](\\s+)(.+)', '``` r')",[18474]
"('Description.java', 'org.junit.runner.Description', 'parseMethod', '(.*)\\((.*)\\)', 'testReferenceWithUrl(org.sagebionetworks.markdown.parsers.ReferenceParserTest)')",[1100]
"('TableParser.java', 'org.sagebionetworks.markdown.parsers.TableParser', 'processLine', '\\s*\\|\\}\\s*', ' Item 2')",[14107]
"('Description.java', 'org.junit.runner.Description', 'getClassName', '(.*)\\((.*)\\)', 'testEscaping(org.sagebionetworks.markdown.parsers.TildeParserTest)')",[1594]
"('BlockQuoteParser.java', 'org.sagebionetworks.markdown.parsers.BlockQuoteParser', 'processLine', '(^\\s*(>(\\s?))(.*))', 'DemoClinicalOnlyModel &lt;- setRefClass(Class  = &quot;CINModel&quot;,...')",[9733]
"('TableParser.java', 'org.sagebionetworks.markdown.parsers.TableParser', 'processLine', '(.+[|]{1}.*)+', '{row}')","[3798, 5936]"
"('TableParser.java', 'org.sagebionetworks.markdown.parsers.TableParser', 'processLine', '(.+[|]{1}.*)+', 'Content       |   **Cell**    |         Cell |')",[11666]
"('ListParser.java', 'org.sagebionetworks.markdown.parsers.ListParser', 'processLine', '(^[> \t\n\x0c\r]*)(\\d+)[.](\\s+)(.+)', ""&amp; ==&gt; &amp;&quot; ==&gt; &quot;&gt; ==&gt; &gt;&lt; ==&gt; &lt;' ="")",[23722]
"('BlockQuoteParser.java', 'org.sagebionetworks.markdown.parsers.BlockQuoteParser', 'processLine', '(^[> \t\n\x0c\r]*)[`]{3}\\s*([a-zA-Z_0-9-]*)\\s*$', '> SubItem 2b')",[14689]
"('TableParser.java', 'org.sagebionetworks.markdown.parsers.TableParser', 'processLine', '(\\{\\|\\s*class=&quot;(.*?)&quot;\\s*)|(\\{\\|\\s*)', '**Row 1 Content Cell 1** | Row\\_Content\\_2  | Row 1 Content Cell 3')",[32565]
"('BlockQuoteParser.java', 'org.sagebionetworks.markdown.parsers.BlockQuoteParser', 'processLine', '(^\\s*(>(\\s?))(.*))', '> ')","[15403, 17124, 18898]"
"('TableParser.java', 'org.sagebionetworks.markdown.parsers.TableParser', 'processLine', '\\s*\\|\\}\\s*', '--------------------------------')",[20508]
"('CodeParser.java', 'org.sagebionetworks.markdown.parsers.CodeParser', 'processLine', '(^[> \t\n\x0c\r]*)[`]{3}\\s*([a-zA-Z_0-9-]*)\\s*$', 'This is a ref ${reference?text=very simple&amp;inlineWidget=true}.')",[9097]
"('MathParser.java', 'org.sagebionetworks.markdown.parsers.MathParser', 'processLine', '(^[> \t\n\x0c\r]*)[$]{2}\\s*$', 'DemoClinicalOnlyModel &lt;- setRefClass(Class  = &quot;CINModel&quot;,...')",[9789]
"('Description.java', 'org.junit.runner.Description', 'parseMethod', '(.*)\\((.*)\\)', 'testReference(org.sagebionetworks.markdown.parsers.SynapseMarkdownWidgetParserTest)')",[1368]
"('TableParser.java', 'org.sagebionetworks.markdown.parsers.TableParser', 'processLine', '(.+[|]{1}.*)+', 'Row 1 Content Cell 1 | Row 1 Content Cell 2  | Row 1 Content Cell 3')",[32147]
"('ListParser.java', 'org.sagebionetworks.markdown.parsers.ListParser', 'processLine', '(^[> \t\n\x0c\r]*)(\\d+)[.](\\s+)(.+)', '1. First item')",[31120]
"('MathParser.java', 'org.sagebionetworks.markdown.parsers.MathParser', 'processLine', '(^[> \t\n\x0c\r]*)[$]{2}\\s*$', '`python s3cmd --configure s3://&lt;your_bucket_name&gt;`')",[23030]
"('TableParser.java', 'org.sagebionetworks.markdown.parsers.TableParser', 'isHeaderBorder', '([\\s-:|]+[|]{1}[\\s-:|]*)+', '--: | -- | :--')",[32241]
"('ListParser.java', 'org.sagebionetworks.markdown.parsers.ListParser', 'processLine', '(^[> \t\n\x0c\r]*)([-+*])(\\s+)(.+)', '## Additional Data Details')",[20935]
"('HorizontalLineParser.java', 'org.sagebionetworks.markdown.parsers.HorizontalLineParser', 'processLine', '^[-]{3,}$', '<h3>HelloWorld</h3>')",[4485]
"('HeadingParser.java', 'org.sagebionetworks.markdown.parsers.HeadingParser', 'processLine', '(^[> \t\n\x0c\r]*)(#{1,6})\\s*(.*)', '#### SubItem 2a')",[17999]
"('CodeParser.java', 'org.sagebionetworks.markdown.parsers.CodeParser', 'processLine', '(^[> \t\n\x0c\r]*)[`]{3}\\s*([a-zA-Z_0-9-]*)\\s*$', ' #### SubItem 2a')",[14373]
"('Description.java', 'org.junit.runner.Description', 'getClassName', '(.*)\\((.*)\\)', 'testBookmarkTarget(org.sagebionetworks.markdown.parsers.BookmarkTargetParserTest)')",[1409]
"('Description.java', 'org.junit.runner.Description', 'getClassName', '(.*)\\((.*)\\)', 'testSubscript(org.sagebionetworks.markdown.parsers.SubscriptParserTest)')",[1738]
"('ListParser.java', 'org.sagebionetworks.markdown.parsers.ListParser', 'processLine', '(^[> \t\n\x0c\r]*)(\\d+)[.](\\s+)(.+)', '    * answer')",[28760]
"('ListParser.java', 'org.sagebionetworks.markdown.parsers.ListParser', 'processLine', '(^[> \t\n\x0c\r]*)(.*)', '> ``` r')",[14982]
"('BlockQuoteParser.java', 'org.sagebionetworks.markdown.parsers.BlockQuoteParser', 'processLine', '(^\\s*(>(\\s?))(.*))', '{column width=6}')","[3901, 4825]"
"('ListParser.java', 'org.sagebionetworks.markdown.parsers.ListParser', 'processLine', '(^\\s*(>(\\s?))(.*))', '')","[16783, 29367, 29824, 30789, 31094, 31347, 31752]"
"('Description.java', 'org.junit.runner.Description', 'getClassName', '(.*)\\((.*)\\)', 'org.sagebionetworks.markdown.SynapseMarkdownProcessorTest')","[25339, 25362, 25386, 25409]"
"('TableParser.java', 'org.sagebionetworks.markdown.parsers.TableParser', 'processLine', '(.+[|]{1}.*)+', 'Item 1')",[13788]
"('HorizontalLineParser.java', 'org.sagebionetworks.markdown.parsers.HorizontalLineParser', 'processLine', '^[-]{3,}$', 'Configures3cmdbyexecuting')",[22924]
"('TableParser.java', 'org.sagebionetworks.markdown.parsers.TableParser', 'processLine', '\\s*\\|\\}\\s*', ' Row 1 Content Cell 1 | Row 1 Content Cell 2 | Row 1 Content Cell 3 ')",[12578]
"('ListParser.java', 'org.sagebionetworks.markdown.parsers.ListParser', 'processLine', '(^[> \t\n\x0c\r]*)(\\d+)[.](\\s+)(.+)', '    sudo apt-get install python python-setuptools python-pip')",[30333]
"('CodeParser.java', 'org.sagebionetworks.markdown.parsers.CodeParser', 'processLine', '(^[> \t\n\x0c\r]*)[`]{3}\\s*([a-zA-Z_0-9-]*)\\s*$', 'Configure s3cmd by executing')",[22712]
"('HorizontalLineParser.java', 'org.sagebionetworks.markdown.parsers.HorizontalLineParser', 'processLine', '^[*]{3,}$', '_italicized_')",[22285]
"('Description.java', 'org.junit.runner.Description', 'getClassName', '(.*)\\((.*)\\)', 'org.sagebionetworks.markdown.parsers.TableParserTest')","[32979, 32999, 33020, 33040]"
"('ListParser.java', 'org.sagebionetworks.markdown.parsers.ListParser', 'processLine', '(^[> \t\n\x0c\r]*)(\\d+)[.](\\s+)(.+)', '{| class=&quot;border text-align-center&quot; ')",[12372]
"('BlockQuoteParser.java', 'org.sagebionetworks.markdown.parsers.BlockQuoteParser', 'processLine', '(^\\s*(>(\\s?))(.*))', '--------------------------------')",[20558]
"('BlockQuoteParser.java', 'org.sagebionetworks.markdown.parsers.BlockQuoteParser', 'processLine', '(^\\s*(>(\\s?))(.*))', '> * Item 1')",[13547]
"('MathParser.java', 'org.sagebionetworks.markdown.parsers.MathParser', 'processLine', '(^[> \t\n\x0c\r]*)[$]{2}\\s*$', 'Item 2')",[17552]
"('CodeParser.java', 'org.sagebionetworks.markdown.parsers.CodeParser', 'processLine', '(^[> \t\n\x0c\r]*)[`]{3}\\s*([a-zA-Z_0-9-]*)\\s*$', 'The hi in t**hi**s is bold. No spaces in H~2~O.')",[2975]
"('ListParser.java', 'org.sagebionetworks.markdown.parsers.ListParser', 'processLine', '(^[> \t\n\x0c\r]*)(\\d+)[.](\\s+)(.+)', '    1. #### Heading2')",[30917]
"('ListParser.java', 'org.sagebionetworks.markdown.parsers.ListParser', 'processLine', '(^[> \t\n\x0c\r]*)([-+*])(\\s+)(.+)', '    sudo apt-get install python python-setuptools python-pip')",[30359]
"('ListParser.java', 'org.sagebionetworks.markdown.parsers.ListParser', 'getListItem', '(^\\s*(>(\\s?))(.*))', '   2. SubItem 2b')",[18184]
"('TableParser.java', 'org.sagebionetworks.markdown.parsers.TableParser', 'processLine', '(.+[|]{1}.*)+', 'DemoClinicalOnlyModel &lt;- setRefClass(Class  = &quot;CINModel&quot;,...')",[9920]
"('ListParser.java', 'org.sagebionetworks.markdown.parsers.ListParser', 'processLine', '(^[> \t\n\x0c\r]*)([-+*])(\\s+)(.+)', '{column width=6}')","[4013, 4937]"
"('HorizontalLineParser.java', 'org.sagebionetworks.markdown.parsers.HorizontalLineParser', 'processLine', '^[*]{3,}$', 'linktothe<spanid=""doi-0""></span>forthechallenge')",[6678]
"('HorizontalLineParser.java', 'org.sagebionetworks.markdown.parsers.HorizontalLineParser', 'processLine', '^[*]{3,}$', 'Configures3cmdbyexecuting')",[22949]
"('CodeParser.java', 'org.sagebionetworks.markdown.parsers.CodeParser', 'processLine', '(^[> \t\n\x0c\r]*)[`]{3}\\s*([a-zA-Z_0-9-]*)\\s*$', '### Hello World')",[4273]
"('Description.java', 'org.junit.runner.Description', 'getClassName', '(.*)\\((.*)\\)', 'testEscaping(org.sagebionetworks.markdown.parsers.EscapedBacktickParserTest)')",[1450]
"('ListParser.java', 'org.sagebionetworks.markdown.parsers.ListParser', 'processLine', '(^[> \t\n\x0c\r]*)([-+*])(\\s+)(.+)', '*   Abacus')",[28710]
"('ListParser.java', 'org.sagebionetworks.markdown.parsers.ListParser', 'processLine', '(^[> \t\n\x0c\r]*)(\\d+)[.](\\s+)(.+)', '<tbody><tr><td>             </td><td>          Grouping           </td></tr>\n<tr><td>First Header  </td><td> Second Header </td><td> Third Header </td></tr>\n')",[10881]
"('HorizontalLineParser.java', 'org.sagebionetworks.markdown.parsers.HorizontalLineParser', 'processLine', '^[*]{3,}$', 'Item2')","[14210, 17705]"
"('ListParser.java', 'org.sagebionetworks.markdown.parsers.ListParser', 'getListItem', '(^\\s*(>(\\s?))(.*))', '>   1. #### SubItem 2a')",[14292]
"('ListParser.java', 'org.sagebionetworks.markdown.parsers.ListParser', 'processLine', '(^[> \t\n\x0c\r]*)([-+*])(\\s+)(.+)', '')","[2685, 3349, 6151, 6815, 7479, 8143, 8807, 9471, 10135, 12101, 12715, 13070, 13360, 15777, 16730, 19272, 21225, 21524, 21842, 22422, 23376, 24040, 24414, 24788, 25078, 29318, 29775, 30740, 31045, 31298, 31703]"
"('TableParser.java', 'org.sagebionetworks.markdown.parsers.TableParser', 'processLine', '(.+[|]{1}.*)+', '`python s3cmd --configure s3://&lt;your_bucket_name&gt;`')",[23161]
"('ListParser.java', 'org.sagebionetworks.markdown.parsers.ListParser', 'processLine', '(^[> \t\n\x0c\r]*)([-+*])(\\s+)(.+)', '> ``` r')",[14954]
"('BlockQuoteParser.java', 'org.sagebionetworks.markdown.parsers.BlockQuoteParser', 'processLine', '(^\\s*(>(\\s?))(.*))', '<tbody><tr><td>             </td><td>          Grouping           </td></tr>\n<tr><td>First Header  </td><td> Second Header </td><td> Third Header </td></tr>\n')",[10791]
"('TableParser.java', 'org.sagebionetworks.markdown.parsers.TableParser', 'processLine', '(.+[|]{1}.*)+', 'Second')",[16596]
"('BlockQuoteParser.java', 'org.sagebionetworks.markdown.parsers.BlockQuoteParser', 'processLine', '(^\\s*(>(\\s?))(.*))', '>   1. #### SubItem 2a')",[17730]
"('ListParser.java', 'org.sagebionetworks.markdown.parsers.ListParser', 'processLine', '(^[> \t\n\x0c\r]*)([-+*])(\\s+)(.+)', '<tr><td>XIAP </td><td> XIAP </td><td> MCF7,BT20</td></tr>\n')",[20377]
"('TableParser.java', 'org.sagebionetworks.markdown.parsers.TableParser', 'processLine', '\\s*\\|\\}\\s*', 'Text in this line after (0.01&lt;LALA&lt;0.05) is not included in the output html')",[7903]
"('Description.java', 'org.junit.runner.Description', 'parseMethod', '(.*)\\((.*)\\)', 'testSuffix(org.sagebionetworks.markdown.SynapseMarkdownProcessorTest)')",[270]
"('TableParser.java', 'org.sagebionetworks.markdown.parsers.TableParser', 'processLine', '(\\{\\|\\s*class=&quot;(.*?)&quot;\\s*)|(\\{\\|\\s*)', '{column}')","[4672, 5596]"
"('HeadingParser.java', 'org.sagebionetworks.markdown.parsers.HeadingParser', 'processLine', '(^[> \t\n\x0c\r]*)(#{1,6})\\s*(.*)', '### How are you?')",[5384]
"('TableParser.java', 'org.sagebionetworks.markdown.parsers.TableParser', 'processLine', '(\\{\\|\\s*class=&quot;(.*?)&quot;\\s*)|(\\{\\|\\s*)', ' |}')",[12818]
"('CodeParser.java', 'org.sagebionetworks.markdown.parsers.CodeParser', 'processLine', '(^[> \t\n\x0c\r]*)[`]{3}\\s*([a-zA-Z_0-9-]*)\\s*$', '```')","[21733, 24330, 24679, 28564, 30053, 30688]"
"('HorizontalLineParser.java', 'org.sagebionetworks.markdown.parsers.HorizontalLineParser', 'processLine', '^[-]{3,}$', 'First')",[16333]
"('HeadingParser.java', 'org.sagebionetworks.markdown.parsers.HeadingParser', 'processLine', '(^[> \t\n\x0c\r]*)(#{1,6})\\s*(.*)', '#### Heading2')",[30993]
"('ListParser.java', 'org.sagebionetworks.markdown.parsers.ListParser', 'processLine', '(^[> \t\n\x0c\r]*)(\\d+)[.](\\s+)(.+)', '')","[2657, 3321, 6123, 6787, 7451, 8115, 8779, 9443, 10107, 12073, 12687, 13042, 13332, 15749, 16702, 19244, 21197, 21496, 21814, 22394, 23348, 24012, 24386, 24760, 25050, 29292, 29749, 30714, 31019, 31272, 31677]"
"('HeadingParser.java', 'org.sagebionetworks.markdown.parsers.HeadingParser', 'processLine', '(^[> \t\n\x0c\r]*)(#{1,6})\\s*(.*)', '> ### Basic Heading')",[28272]
"('TableParser.java', 'org.sagebionetworks.markdown.parsers.TableParser', 'processLine', '\\s*\\|\\}\\s*', '|             |          Grouping           ||')",[10559]
"('TableParser.java', 'org.sagebionetworks.markdown.parsers.TableParser', 'isHeaderBorder', '([\\s-:|]+[|]{1}[\\s-:|]*)+', 'First Header  | Second Header | Third Header |')",[10764]
"('BlockQuoteParser.java', 'org.sagebionetworks.markdown.parsers.BlockQuoteParser', 'processLine', '(^\\s*(>(\\s?))(.*))', '<tr><td> ------------ </td><td> :-----------: </td><td> -----------: </td></tr>\n')",[11096]
"('TableParser.java', 'org.sagebionetworks.markdown.parsers.TableParser', 'processLine', '(\\{\\|\\s*class=&quot;(.*?)&quot;\\s*)|(\\{\\|\\s*)', ' Row 1 Content Cell 1 | Row 1 Content Cell 2 | Row 1 Content Cell 3 ')",[12553]
"('ListParser.java', 'org.sagebionetworks.markdown.parsers.ListParser', 'processLine', '(^[> \t\n\x0c\r]*)([-+*])(\\s+)(.+)', '    sudo pip install python-magic')",[30486]
"('ListParser.java', 'org.sagebionetworks.markdown.parsers.ListParser', 'processLine', '(^[> \t\n\x0c\r]*)([-+*])(\\s+)(.+)', '|             |          Grouping           ||')",[10509]
"('TableParser.java', 'org.sagebionetworks.markdown.parsers.TableParser', 'processLine', '(.+[|]{1}.*)+', ' ------------ | :-----------: | -----------: |')",[11070]
"('BlockQuoteParser.java', 'org.sagebionetworks.markdown.parsers.BlockQuoteParser', 'processLine', '(^[> \t\n\x0c\r]*)[`]{3}\\s*([a-zA-Z_0-9-]*)\\s*$', ' \t> second line text')",[25877]
"('ListParser.java', 'org.sagebionetworks.markdown.parsers.ListParser', 'processLine', '(^[> \t\n\x0c\r]*)([-+*])(\\s+)(.+)', '    2.  bupkis')",[29014]
"('HorizontalLineParser.java', 'org.sagebionetworks.markdown.parsers.HorizontalLineParser', 'processLine', '^[-]{3,}$', '---')",[26957]
"('ListParser.java', 'org.sagebionetworks.markdown.parsers.ListParser', 'getListItem', '(^\\s*(>(\\s?))(.*))', ' * Item 1')",[13713]
"('CodeParser.java', 'org.sagebionetworks.markdown.parsers.CodeParser', 'processLine', '(^[> \t\n\x0c\r]*)[`]{3}\\s*([a-zA-Z_0-9-]*)\\s*$', '`python s3cmd --configure s3://&lt;your_bucket_name&gt;`')",[23002]
"('TableParser.java', 'org.sagebionetworks.markdown.parsers.TableParser', 'processLine', '(.+[|]{1}.*)+', '&lt;table&gt;&lt;tr&gt;&lt;td&gt;this is a test&lt;/td&gt;&lt;td&gt;column 2&lt;/td&gt;&lt;/tr&gt;&lt;/table&gt;&lt;iframe width=&quot;420&quot; height=&quot;315&quot; src=&quot;http://www.youtube.com/embed/AOjaQ7Vl7SM&quot; frameborder=&quot;0&quot; allowfullscreen&gt;&lt;/iframe&gt;&lt;embed&gt;')",[8592]
"('Description.java', 'org.junit.runner.Description', 'getClassName', '(.*)\\((.*)\\)', 'org.sagebionetworks.markdown.parsers.SynapseMarkdownWidgetParserTest')","[27236, 27259, 27283, 27306]"
"('ListParser.java', 'org.sagebionetworks.markdown.parsers.ListParser', 'processLine', '(^[> \t\n\x0c\r]*)(\\d+)[.](\\s+)(.+)', '<tr><td>Content       </td><td>          *Long Cell*        </td></tr>\n')",[11481]
"('BlockQuoteParser.java', 'org.sagebionetworks.markdown.parsers.BlockQuoteParser', 'processLine', '(^[> \t\n\x0c\r]*)[`]{3}\\s*([a-zA-Z_0-9-]*)\\s*$', '> ')","[15431, 17152, 18926]"
"('MathParser.java', 'org.sagebionetworks.markdown.parsers.MathParser', 'processLine', '(^[> \t\n\x0c\r]*)[$]{2}\\s*$', 'Tau | MAPT | MCF7,BT20')",[19618]
"('HorizontalLineParser.java', 'org.sagebionetworks.markdown.parsers.HorizontalLineParser', 'processLine', '^[*]{3,}$', '<spanid=""widgetsyntax-1""></span><spanid=""wikiFootnote1""class=""margin-left-5"">verysimple</span><br>')",[9708]
"('TableParser.java', 'org.sagebionetworks.markdown.parsers.TableParser', 'processLine', '(\\{\\|\\s*class=&quot;(.*?)&quot;\\s*)|(\\{\\|\\s*)', '| Row 1 Content Cell 1 | Row 1 Content Cell 2  | Row 1 Content Cell 3 |')",[32333]
"('ListParser.java', 'org.sagebionetworks.markdown.parsers.ListParser', 'processLine', '(^[> \t\n\x0c\r]*)(\\d+)[.](\\s+)(.+)', '{row}')","[3695, 5833]"
"('TableParser.java', 'org.sagebionetworks.markdown.parsers.TableParser', 'processLine', '(\\{\\|\\s*class=&quot;(.*?)&quot;\\s*)|(\\{\\|\\s*)', 'This is a ref ${reference?text=very simple&amp;inlineWidget=true}.')",[9206]
"('HorizontalLineParser.java', 'org.sagebionetworks.markdown.parsers.HorizontalLineParser', 'processLine', '^[-]{3,}$', 'Thehiint<strong>hi</strong>sisbold.NospacesinH~2~O.')",[3187]
"('ListParser.java', 'org.sagebionetworks.markdown.parsers.ListParser', 'processLine', '(^[> \t\n\x0c\r]*)(\\d+)[.](\\s+)(.+)', ' * Item 2')",[17442]
"('Scanner.java', 'java.util.Scanner', 'getCompleteTokenInBuffer', '(?s).*', ' offset = 1 width = 2')","[27669, 27694, 27719, 27744, 27769, 27794, 27819, 27844]"
"('TableParser.java', 'org.sagebionetworks.markdown.parsers.TableParser', 'processLine', '(\\{\\|\\s*class=&quot;(.*?)&quot;\\s*)|(\\{\\|\\s*)', 'SubItem 2b')",[18265]
"('ListParser.java', 'org.sagebionetworks.markdown.parsers.ListParser', 'processLine', '(^[> \t\n\x0c\r]*)([-+*])(\\s+)(.+)', '2. Second one')",[31627]
"('TableParser.java', 'org.sagebionetworks.markdown.parsers.TableParser', 'processLine', '(\\{\\|\\s*class=&quot;(.*?)&quot;\\s*)|(\\{\\|\\s*)', '|}')",[32866]
"('TableParser.java', 'org.sagebionetworks.markdown.parsers.TableParser', 'processLine', '(.+[|]{1}.*)+', ' #### SubItem 2a')",[14476]
"('Description.java', 'org.junit.runner.Description', 'parseMethod', '(.*)\\((.*)\\)', 'testListWithCode(org.sagebionetworks.markdown.parsers.ListParserTest)')",[1862]
"('HeadingParser.java', 'org.sagebionetworks.markdown.parsers.HeadingParser', 'processLine', '(^[> \t\n\x0c\r]*)(#{1,6})\\s*(.*)', '<span id=""widgetsyntax-1""></span><span id=""wikiFootnote1"" class=""margin-left-5"">very simple</span><br>')",[9654]
"('Description.java', 'org.junit.runner.Description', 'parseMethod', '(.*)\\((.*)\\)', 'testInsertExtractedContent(org.sagebionetworks.markdown.utils.ServerMarkdownUtilsTest)')",[83]
"('ListParser.java', 'org.sagebionetworks.markdown.parsers.ListParser', 'processLine', '(^\\s*(>(\\s?))(.*))', '    ```')","[30027, 30662]"
"('ListParser.java', 'org.sagebionetworks.markdown.parsers.ListParser', 'processLine', '(^[> \t\n\x0c\r]*)(\\d+)[.](\\s+)(.+)', 'link to the doi:10.7303/syn2699915 for the challenge')",[6497]
"('Description.java', 'org.junit.runner.Description', 'parseMethod', '(.*)\\((.*)\\)', 'testMathSpan(org.sagebionetworks.markdown.parsers.MathParserTest)')",[584]
"('TableParser.java', 'org.sagebionetworks.markdown.parsers.TableParser', 'processLine', '(.+[|]{1}.*)+', 'Content       |          *Long Cell*        ||')",[11368]
"('BlockQuoteParser.java', 'org.sagebionetworks.markdown.parsers.BlockQuoteParser', 'processLine', '(^\\s*(>(\\s?))(.*))', 'link to the doi:10.7303/syn2699915 for the challenge')",[6413]
"('TableParser.java', 'org.sagebionetworks.markdown.parsers.TableParser', 'processLine', '(\\{\\|\\s*class=&quot;(.*?)&quot;\\s*)|(\\{\\|\\s*)', 'Configure s3cmd by executing')",[22821]
"('TableParser.java', 'org.sagebionetworks.markdown.parsers.TableParser', 'processLine', '\\s*\\|\\}\\s*', 'First Header  | Second Header | Third Header |')",[10712]
"('ListParser.java', 'org.sagebionetworks.markdown.parsers.ListParser', 'processLine', '(^[> \t\n\x0c\r]*)([-+*])(\\s+)(.+)', '<tr><td>Content       </td><td>          *Long Cell*        </td></tr>\n')",[11510]
"('HorizontalLineParser.java', 'org.sagebionetworks.markdown.parsers.HorizontalLineParser', 'processLine', '^[-]{3,}$', '<tr><td>Row1ContentCell1</td><td>Row1ContentCell2</td><td>Row1ContentCell3</td></tr>\n')",[12904]
"('TableParser.java', 'org.sagebionetworks.markdown.parsers.TableParser', 'processLine', '(\\{\\|\\s*class=&quot;(.*?)&quot;\\s*)|(\\{\\|\\s*)', '## Additional Data Details')",[20748]
"('ListParser.java', 'org.sagebionetworks.markdown.parsers.ListParser', 'processLine', '(^[> \t\n\x0c\r]*)([-+*])(\\s+)(.+)', '    * answer')",[28786]
"('Description.java', 'org.junit.runner.Description', 'parseMethod', '(.*)\\((.*)\\)', 'testNotHRs(org.sagebionetworks.markdown.parsers.HorizontalLineParserTest)')",[1306]
"('ListParser.java', 'org.sagebionetworks.markdown.parsers.ListParser', 'processLine', '(^[> \t\n\x0c\r]*)(\\d+)[.](\\s+)(.+)', '        * BELITTLER')",[29064]
"('ListParser.java', 'org.sagebionetworks.markdown.parsers.ListParser', 'processLine', '(^[> \t\n\x0c\r]*)([-+*])(\\s+)(.+)', '    This is another paragraph')","[29547, 29674]"
"('HorizontalLineParser.java', 'org.sagebionetworks.markdown.parsers.HorizontalLineParser', 'processLine', '^[-]{3,}$', '<tr><td>XIAP</td><td>XIAP</td><td>MCF7,BT20</td></tr>\n')",[20432]
"('TableParser.java', 'org.sagebionetworks.markdown.parsers.TableParser', 'processLine', '(.+[|]{1}.*)+', '### Hello World')",[4432]
"('ListParser.java', 'org.sagebionetworks.markdown.parsers.ListParser', 'processLine', '(^[> \t\n\x0c\r]*)(\\d+)[.](\\s+)(.+)', '> * Item 1')",[17045]
"('ListParser.java', 'org.sagebionetworks.markdown.parsers.ListParser', 'processLine', '(^\\s*(>(\\s?))(.*))', '    This is another paragraph')","[29596, 29723]"
"('TableParser.java', 'org.sagebionetworks.markdown.parsers.TableParser', 'isHeaderBorder', '([\\s-:|]+[|]{1}[\\s-:|]*)+', 'Row 2 Content Cell 1  | Row 2 Content Cell 2  | Row 2 Content Cell 3')",[32843]
"('ListParser.java', 'org.sagebionetworks.markdown.parsers.ListParser', 'processLine', '(^[> \t\n\x0c\r]*)([-+*])(\\s+)(.+)', 'Configure s3cmd by executing')",[22796]
"('TableParser.java', 'org.sagebionetworks.markdown.parsers.TableParser', 'processLine', '(.+[|]{1}.*)+', '--------------------------------')",[20533]
"('TableParser.java', 'org.sagebionetworks.markdown.parsers.TableParser', 'processLine', '\\s*\\|\\}\\s*', 'The hi in t**hi**s is bold. No spaces in H~2~O.')",[3109]
"('TableParser.java', 'org.sagebionetworks.markdown.parsers.TableParser', 'processLine', '(\\{\\|\\s*class=&quot;(.*?)&quot;\\s*)|(\\{\\|\\s*)', 'Row 1 Content Cell 1 | Row 1 Content Cell 2')",[31963]
"('ListParser.java', 'org.sagebionetworks.markdown.parsers.ListParser', 'processLine', '(^[> \t\n\x0c\r]*)(\\d+)[.](\\s+)(.+)', '* First item')","[29419, 29850]"
"('TableParser.java', 'org.sagebionetworks.markdown.parsers.TableParser', 'processLine', '(.+[|]{1}.*)+', 'VASP | VASP | MCF7,BT20')",[19902]
"('CodeParser.java', 'org.sagebionetworks.markdown.parsers.CodeParser', 'processLine', '(^[> \t\n\x0c\r]*)[`]{3}\\s*([a-zA-Z_0-9-]*)\\s*$', '##-&gt;Centered Headline&lt;-')",[2311]
"('ListParser.java', 'org.sagebionetworks.markdown.parsers.ListParser', 'getListItem', '(^\\s*(>(\\s?))(.*))', '1. First')",[16205]
"('TableParser.java', 'org.sagebionetworks.markdown.parsers.TableParser', 'processLine', '(.+[|]{1}.*)+', 'Row 1 Content Cell 1 | Row 1 Content Cell 2')",[32009]
"('HorizontalLineParser.java', 'org.sagebionetworks.markdown.parsers.HorizontalLineParser', 'processLine', '^[-]{3,}$', 'ContainsaSynapsewidget<spanid=""widgetsyntax-0-suffix-test""></span>inthemarkdown.')",[7317]
"('BlockQuoteParser.java', 'org.sagebionetworks.markdown.parsers.BlockQuoteParser', 'processLine', '(^\\s*(>(\\s?))(.*))', '1. First')",[16067]
"('ListParser.java', 'org.sagebionetworks.markdown.parsers.ListParser', 'processLine', '(^[> \t\n\x0c\r]*)([-+*])(\\s+)(.+)', '    sudo apt-get install curl')",[30232]
"('ListParser.java', 'org.sagebionetworks.markdown.parsers.ListParser', 'processLine', '(^[> \t\n\x0c\r]*)([-+*])(\\s+)(.+)', '``` r')",[18502]
"('Description.java', 'org.junit.runner.Description', 'getClassName', '(.*)\\((.*)\\)', 'org.sagebionetworks.markdown.parsers.ItalicsParserTest')","[26770, 26793, 26817, 26840]"
"('HorizontalLineParser.java', 'org.sagebionetworks.markdown.parsers.HorizontalLineParser', 'processLine', '^[*]{3,}$', 'Thisisaref<spanid=""wikiReference1"">&nbsp;</span><spanid=""widgetsyntax-0""></span>.')",[9334]
"('Description.java', 'org.junit.runner.Description', 'parseMethod', '(.*)\\((.*)\\)', 'testSpaces(org.sagebionetworks.markdown.SynapseMarkdownProcessorTest)')",[207]
"('Description.java', 'org.junit.runner.Description', 'getClassName', '(.*)\\((.*)\\)', 'testEscaping(org.sagebionetworks.markdown.parsers.EscapedDashParserTest)')",[874]
"('TableParser.java', 'org.sagebionetworks.markdown.parsers.TableParser', 'isHeaderBorder', '([\\s-:|]+[|]{1}[\\s-:|]*)+', 'VASP | VASP | MCF7,BT20')",[19929]
"('Description.java', 'org.junit.runner.Description', 'getClassName', '(.*)\\((.*)\\)', 'org.sagebionetworks.markdown.parsers.CodeSpanParserTest')","[31870, 31893, 31917, 31940]"
"('Description.java', 'org.junit.runner.Description', 'getClassName', '(.*)\\((.*)\\)', 'org.sagebionetworks.markdown.parsers.BlockQuoteParserTest')","[25924, 25947, 25971, 25994]"
"('BlockQuoteParser.java', 'org.sagebionetworks.markdown.parsers.BlockQuoteParser', 'processLine', '(^\\s*(>(\\s?))(.*))', '<tbody><tr><td>Tau </td><td> MAPT </td><td> MCF7,BT20</td></tr>\n<tr><td>VASP </td><td> VASP </td><td> MCF7,BT20</td></tr>\n')",[19956]
"('CodeParser.java', 'org.sagebionetworks.markdown.parsers.CodeParser', 'processLine', '(^[> \t\n\x0c\r]*)[`]{3}\\s*([a-zA-Z_0-9-]*)\\s*$', '<tr><td>XIAP </td><td> XIAP </td><td> MCF7,BT20</td></tr>\n')",[20290]
"('HeadingParser.java', 'org.sagebionetworks.markdown.parsers.HeadingParser', 'processLine', '(^[> \t\n\x0c\r]*)(#{1,6})\\s*(.*)', 'Configure s3cmd by executing')",[22899]
"('BlockQuoteParser.java', 'org.sagebionetworks.markdown.parsers.BlockQuoteParser', 'processLine', '(^\\s*(>(\\s?))(.*))', '|             |          Grouping           ||')",[10397]
"('ListParser.java', 'org.sagebionetworks.markdown.parsers.ListParser', 'processLine', '(^[> \t\n\x0c\r]*)(\\d+)[.](\\s+)(.+)', '    sudo apt-get install curl')",[30206]
"('ListParser.java', 'org.sagebionetworks.markdown.parsers.ListParser', 'processLine', '(^[> \t\n\x0c\r]*)(\\d+)[.](\\s+)(.+)', '    ```')","[29952, 30587]"
"('TableParser.java', 'org.sagebionetworks.markdown.parsers.TableParser', 'processLine', '\\s*\\|\\}\\s*', 'This is a ref ${reference?text=very simple&amp;inlineWidget=true}.')",[9231]
"('Description.java', 'org.junit.runner.Description', 'parseMethod', '(.*)\\((.*)\\)', 'testHeading(org.sagebionetworks.markdown.parsers.HeadingParserTest)')",[1656]
"('MathParser.java', 'org.sagebionetworks.markdown.parsers.MathParser', 'processLine', '(^[> \t\n\x0c\r]*)[$]{2}\\s*$', '{row}')","[3667, 5805]"
"('TableParser.java', 'org.sagebionetworks.markdown.parsers.TableParser', 'processLine', '\\s*\\|\\}\\s*', 'Row 1 Content Cell 1 | Row 1 Content Cell 2  | Row 1 Content Cell 3')","[32124, 32772]"
"('MathParser.java', 'org.sagebionetworks.markdown.parsers.MathParser', 'processLine', '(^[> \t\n\x0c\r]*)[$]{2}\\s*$', '<tbody><tr><td>Tau </td><td> MAPT </td><td> MCF7,BT20</td></tr>\n<tr><td>VASP </td><td> VASP </td><td> MCF7,BT20</td></tr>\n')",[20016]
"('TableParser.java', 'org.sagebionetworks.markdown.parsers.TableParser', 'processLine', '(\\{\\|\\s*class=&quot;(.*?)&quot;\\s*)|(\\{\\|\\s*)', 'Text in this line after (0.01&lt;LALA&lt;0.05) is not included in the output html')",[7878]
"('BlockQuoteParser.java', 'org.sagebionetworks.markdown.parsers.BlockQuoteParser', 'processLine', '(^[> \t\n\x0c\r]*)[`]{3}\\s*([a-zA-Z_0-9-]*)\\s*$', '> * Item 1')",[13575]
"('HorizontalLineParser.java', 'org.sagebionetworks.markdown.parsers.HorizontalLineParser', 'processLine', '^[-]{3,}$', '<h2>AdditionalDataDetails</h2>')",[20988]
"('BlockQuoteParser.java', 'org.sagebionetworks.markdown.parsers.BlockQuoteParser', 'processLine', '(^[> \t\n\x0c\r]*)[`]{3}\\s*([a-zA-Z_0-9-]*)\\s*$', '> ``` r')","[15060, 18446]"
"('ListParser.java', 'org.sagebionetworks.markdown.parsers.ListParser', 'processLine', '(^[> \t\n\x0c\r]*)([-+*])(\\s+)(.+)', '> * Item 2')",[13922]
"('Description.java', 'org.junit.runner.Description', 'getClassName', '(.*)\\((.*)\\)', 'testItalics(org.sagebionetworks.markdown.parsers.ItalicsParserTest)')",[1182]
"('BlockQuoteParser.java', 'org.sagebionetworks.markdown.parsers.BlockQuoteParser', 'processLine', '(^\\s*(>(\\s?))(.*))', '_italicized_')",[22048]
"('TableParser.java', 'org.sagebionetworks.markdown.parsers.TableParser', 'processLine', '(.+[|]{1}.*)+', ""&amp; ==&gt; &amp;&quot; ==&gt; &quot;&gt; ==&gt; &gt;&lt; ==&gt; &lt;' ="")",[23825]
"('Description.java', 'org.junit.runner.Description', 'parseMethod', '(.*)\\((.*)\\)', 'testReference(org.sagebionetworks.markdown.parsers.ReferenceParserTest)')",[1059]
"('TableParser.java', 'org.sagebionetworks.markdown.parsers.TableParser', 'processLine', '(\\{\\|\\s*class=&quot;(.*?)&quot;\\s*)|(\\{\\|\\s*)', 'Row 1 Content Cell 1 | Row 1 Content Cell 2  | Row 1 Content Cell 3')","[32101, 32749]"
"('Description.java', 'org.junit.runner.Description', 'parseMethod', '(.*)\\((.*)\\)', 'testWhitespacePreservation(org.sagebionetworks.markdown.SynapseMarkdownProcessorTest)')",[522]
"('HorizontalLineParser.java', 'org.sagebionetworks.markdown.parsers.HorizontalLineParser', 'processLine', '^[*]{3,}$', '{column}')","[4800, 5724]"
"('HorizontalLineParser.java', 'org.sagebionetworks.markdown.parsers.HorizontalLineParser', 'processLine', '^[*]{3,}$', 'Textinthislineafter(0.01&lt;LALA&lt;0.05)isnotincludedintheoutputhtml')",[8006]
"('MathParser.java', 'org.sagebionetworks.markdown.parsers.MathParser', 'processLine', '(^[> \t\n\x0c\r]*)[$]{2}\\s*$', ' #### SubItem 2a')",[14401]
"('MathParser.java', 'org.sagebionetworks.markdown.parsers.MathParser', 'processLine', '(^[> \t\n\x0c\r]*)[$]{2}\\s*$', '_italicized_')",[22076]
"('Description.java', 'org.junit.runner.Description', 'parseMethod', '(.*)\\((.*)\\)', 'testRoundTripEncodeDecode(org.sagebionetworks.markdown.utils.WidgetEncodingUtilTest)')",[62]
"('ListParser.java', 'org.sagebionetworks.markdown.parsers.ListParser', 'processLine', '(^[> \t\n\x0c\r]*)(\\d+)[.](\\s+)(.+)', 'Text in this line after (0.01&lt;LALA&lt;0.05) is not included in the output html')",[7825]
"('ListParser.java', 'org.sagebionetworks.markdown.parsers.ListParser', 'processLine', '(^[> \t\n\x0c\r]*)(\\d+)[.](\\s+)(.+)', 'Contains a Synapse widget ${fakewidget?param1=a} in the markdown.')",[7161]
"('TableParser.java', 'org.sagebionetworks.markdown.parsers.TableParser', 'processLine', '(\\{\\|\\s*class=&quot;(.*?)&quot;\\s*)|(\\{\\|\\s*)', 'DemoClinicalOnlyModel &lt;- setRefClass(Class  = &quot;CINModel&quot;,...')",[9870]
"('ListParser.java', 'org.sagebionetworks.markdown.parsers.ListParser', 'processLine', '(^[> \t\n\x0c\r]*)([-+*])(\\s+)(.+)', '    2. bupkis')",[31551]
"('Description.java', 'org.junit.runner.Description', 'getClassName', '(.*)\\((.*)\\)', 'org.sagebionetworks.markdown.parsers.MathParserTest')","[25615, 25638, 25662, 25685]"
"('Description.java', 'org.junit.runner.Description', 'getClassName', '(.*)\\((.*)\\)', 'testAutoLink(org.sagebionetworks.markdown.parsers.SynapseAutoLinkParserTest)')",[1553]
"('TableParser.java', 'org.sagebionetworks.markdown.parsers.TableParser', 'processLine', '(.+[|]{1}.*)+', 'Contains a Synapse widget ${fakewidget?param1=a} in the markdown.')",[7264]
"('Description.java', 'org.junit.runner.Description', 'parseMethod', '(.*)\\((.*)\\)', 'testTableSupport(org.sagebionetworks.markdown.SynapseMarkdownProcessorTest)')",[375]
"('CodeParser.java', 'org.sagebionetworks.markdown.parsers.CodeParser', 'processLine', '(^[> \t\n\x0c\r]*)[`]{3}\\s*([a-zA-Z_0-9-]*)\\s*$', '1. First')",[16095]
"('HorizontalLineParser.java', 'org.sagebionetworks.markdown.parsers.HorizontalLineParser', 'processLine', '^[*]{3,}$', '<tr><td>------------</td><td>:-----------:</td><td>-----------:</td></tr>\n')",[11293]
"('ListParser.java', 'org.sagebionetworks.markdown.parsers.ListParser', 'getListItem', '(^\\s*(>(\\s?))(.*))', '1. List item one')",[31423]
"('CodeParser.java', 'org.sagebionetworks.markdown.parsers.CodeParser', 'processLine', '(^[> \t\n\x0c\r]*)[`]{3}\\s*([a-zA-Z_0-9-]*)\\s*$', '|             |          Grouping           ||')",[10425]
"('HeadingParser.java', 'org.sagebionetworks.markdown.parsers.HeadingParser', 'processLine', '(^[> \t\n\x0c\r]*)(#{1,6})\\s*(.*)', ' SubItem 2b')",[14848]
