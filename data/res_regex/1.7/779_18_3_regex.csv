"('Description.java', 'org.junit.runner.Description', 'methodAndClassNamePatternGroupOrDefault', '(.*)\\((.*)\\)', '[3]')",[189]
"('Description.java', 'org.junit.runner.Description', 'methodAndClassNamePatternGroupOrDefault', '(.*)\\((.*)\\)', 'mapShouldNotContainEntryForNotExistingLength(code.google.killerword.logic.TestClauseCalculatorInitClauses)')","[443, 1238]"
"('Description.java', 'org.junit.runner.Description', 'methodAndClassNamePatternGroupOrDefault', '(.*)\\((.*)\\)', 'buildPatternShouldReplaceDotsAtSpecificPositions(code.google.killerword.logic.TestClausePartitioner)')","[794, 1532]"
"('Description.java', 'org.junit.runner.Description', 'methodAndClassNamePatternGroupOrDefault', '(.*)\\((.*)\\)', 'noNewPartitionShouldBeCreatedIfWordsNotContainGivenCharacter(code.google.killerword.logic.TestClausePartitionerPartition)')","[609, 1385]"
"('Description.java', 'org.junit.runner.Description', 'methodAndClassNamePatternGroupOrDefault', '(.*)\\((.*)\\)', 'createNewClauseShouldNotIncrementLostPointsOnNonEmptyPositions(code.google.killerword.logic.TestClausePartitioner)')","[773, 1511]"
"('Description.java', 'org.junit.runner.Description', 'methodAndClassNamePatternGroupOrDefault', '(.*)\\((.*)\\)', 'determineKillerWords2(code.google.killerword.logic.TestClauseEvaluator)')","[1021, 1721]"
"('Description.java', 'org.junit.runner.Description', 'methodAndClassNamePatternGroupOrDefault', '(.*)\\((.*)\\)', '[2]')",[145]
"('Description.java', 'org.junit.runner.Description', 'methodAndClassNamePatternGroupOrDefault', '(.*)\\((.*)\\)', 'code.google.killerword.logic.TestClausePartitionerCalculatePositionSet')",[36]
"('Description.java', 'org.junit.runner.Description', 'methodAndClassNamePatternGroupOrDefault', '(.*)\\((.*)\\)', 'code.google.killerword.logic.TestClauseEvaluator')","[979, 1873]"
"('Description.java', 'org.junit.runner.Description', 'methodAndClassNamePatternGroupOrDefault', '(.*)\\((.*)\\)', 'code.google.killerword.logic.TestClausePartitioner')","[689, 1825]"
"('Description.java', 'org.junit.runner.Description', 'methodAndClassNamePatternGroupOrDefault', '(.*)\\((.*)\\)', '[1]')",[101]
"('Description.java', 'org.junit.runner.Description', 'methodAndClassNamePatternGroupOrDefault', '(.*)\\((.*)\\)', '[5]')",[277]
"('Description.java', 'org.junit.runner.Description', 'methodAndClassNamePatternGroupOrDefault', '(.*)\\((.*)\\)', 'calculateWordPositions[0](code.google.killerword.logic.TestClausePartitionerCalculatePositionSet)')","[80, 1043]"
"('Description.java', 'org.junit.runner.Description', 'methodAndClassNamePatternGroupOrDefault', '(.*)\\((.*)\\)', 'calculateWordPositions[2](code.google.killerword.logic.TestClausePartitionerCalculatePositionSet)')","[168, 1087]"
"('Description.java', 'org.junit.runner.Description', 'methodAndClassNamePatternGroupOrDefault', '(.*)\\((.*)\\)', 'determineKillerWords1(code.google.killerword.logic.TestClauseEvaluator)')","[1000, 1700]"
"('Description.java', 'org.junit.runner.Description', 'methodAndClassNamePatternGroupOrDefault', '(.*)\\((.*)\\)', 'patternLengthInCreatedClauseShouldMatchWordsLength(code.google.killerword.logic.TestClauseCalculatorInitClauses)')","[464, 1259]"
"('Description.java', 'org.junit.runner.Description', 'methodAndClassNamePatternGroupOrDefault', '(.*)\\((.*)\\)', 'createNewClauseShouldIncrementLostPointsOnEmptyPositions(code.google.killerword.logic.TestClausePartitioner)')","[752, 1490]"
"('Description.java', 'org.junit.runner.Description', 'methodAndClassNamePatternGroupOrDefault', '(.*)\\((.*)\\)', 'lostWordsShouldIncrementInClauseWhichNotContainCharacter(code.google.killerword.logic.TestClausePartitionerPartition)')","[588, 1364]"
"('Description.java', 'org.junit.runner.Description', 'methodAndClassNamePatternGroupOrDefault', '(.*)\\((.*)\\)', 'buildPatternShouldNotChangePatternOnEmptyPositionsSet(code.google.killerword.logic.TestClausePartitioner)')","[710, 1448]"
"('Description.java', 'org.junit.runner.Description', 'methodAndClassNamePatternGroupOrDefault', '(.*)\\((.*)\\)', 'extractMaxLostPointsShouldReturnParameterIfThereIsNoBetterClause(code.google.killerword.logic.TestClauseCalculator)')","[897, 1616]"
"('Description.java', 'org.junit.runner.Description', 'methodAndClassNamePatternGroupOrDefault', '(.*)\\((.*)\\)', 'buildPatternShouldNotReplaceCharactersOtherThanDots(code.google.killerword.logic.TestClausePartitioner)')","[731, 1469]"
"('Description.java', 'org.junit.runner.Description', 'methodAndClassNamePatternGroupOrDefault', '(.*)\\((.*)\\)', 'specificClausesHasToBeCreated(code.google.killerword.logic.TestClausePartitionerPartition)')","[546, 1322]"
"('Description.java', 'org.junit.runner.Description', 'methodAndClassNamePatternGroupOrDefault', '(.*)\\((.*)\\)', 'extractFinishedShouldExtractFinishedClauses(code.google.killerword.logic.TestClauseCalculator)')","[918, 1637]"
"('Description.java', 'org.junit.runner.Description', 'methodAndClassNamePatternGroupOrDefault', '(.*)\\((.*)\\)', 'calculateWordPositions[1](code.google.killerword.logic.TestClausePartitionerCalculatePositionSet)')","[124, 1065]"
"('Description.java', 'org.junit.runner.Description', 'methodAndClassNamePatternGroupOrDefault', '(.*)\\((.*)\\)', 'code.google.killerword.logic.TestClausePartitionerMapBuilder')","[628, 1799]"
"('Description.java', 'org.junit.runner.Description', 'methodAndClassNamePatternGroupOrDefault', '(.*)\\((.*)\\)', 'extractMaxLostPointsShouldNotModifyMaxSetIfThereIsNotBetterClause(code.google.killerword.logic.TestClauseCalculator)')","[939, 1658]"
"('Description.java', 'org.junit.runner.Description', 'methodAndClassNamePatternGroupOrDefault', '(.*)\\((.*)\\)', 'code.google.killerword.logic.TestClauseCalculator')","[813, 1851]"
"('Description.java', 'org.junit.runner.Description', 'methodAndClassNamePatternGroupOrDefault', '(.*)\\((.*)\\)', '[0]')",[57]
"('Description.java', 'org.junit.runner.Description', 'methodAndClassNamePatternGroupOrDefault', '(.*)\\((.*)\\)', 'calculateWordPositions[4](code.google.killerword.logic.TestClausePartitionerCalculatePositionSet)')","[256, 1131]"
"('Description.java', 'org.junit.runner.Description', 'methodAndClassNamePatternGroupOrDefault', '(.*)\\((.*)\\)', '[4]')",[233]
"('Description.java', 'org.junit.runner.Description', 'methodAndClassNamePatternGroupOrDefault', '(.*)\\((.*)\\)', 'calculateWordPositions[3](code.google.killerword.logic.TestClausePartitionerCalculatePositionSet)')","[212, 1109]"
"('Description.java', 'org.junit.runner.Description', 'methodAndClassNamePatternGroupOrDefault', '(.*)\\((.*)\\)', 'extractMaxLostPointsShouldModifyMaxSetIfThereIsBetterClause(code.google.killerword.logic.TestClauseCalculator)')","[960, 1679]"
"('Description.java', 'org.junit.runner.Description', 'methodAndClassNamePatternGroupOrDefault', '(.*)\\((.*)\\)', 'wordsSizeInCreatedClauseShouldBeEqualWithNumberOfWordsOfGivenLength(code.google.killerword.logic.TestClauseCalculatorInitClauses)')","[422, 1217]"
"('Description.java', 'org.junit.runner.Description', 'methodAndClassNamePatternGroupOrDefault', '(.*)\\((.*)\\)', 'extractFinishedShouldReturnSetOfFinishedClauses(code.google.killerword.logic.TestClauseCalculator)')","[876, 1595]"
"('Description.java', 'org.junit.runner.Description', 'methodAndClassNamePatternGroupOrDefault', '(.*)\\((.*)\\)', 'calculateWordPositions[6](code.google.killerword.logic.TestClausePartitionerCalculatePositionSet)')","[344, 1175]"
"('Description.java', 'org.junit.runner.Description', 'methodAndClassNamePatternGroupOrDefault', '(.*)\\((.*)\\)', 'specificNumberOfPartitionsShouldBeCreatedIfWordsContainGivenCharacter(code.google.killerword.logic.TestClausePartitionerPartition)')","[525, 1301]"
"('Description.java', 'org.junit.runner.Description', 'methodAndClassNamePatternGroupOrDefault', '(.*)\\((.*)\\)', 'calculateWordPositions[5](code.google.killerword.logic.TestClausePartitionerCalculatePositionSet)')","[300, 1153]"
"('Description.java', 'org.junit.runner.Description', 'methodAndClassNamePatternGroupOrDefault', '(.*)\\((.*)\\)', 'code.google.killerword.logic.TestClauseCalculatorInitClauses')","[380, 1747]"
"('Description.java', 'org.junit.runner.Description', 'methodAndClassNamePatternGroupOrDefault', '(.*)\\((.*)\\)', 'mapKeysetSizeShouldBeEqualWithNumberOfDifferentLengthsInWords(code.google.killerword.logic.TestClauseCalculatorInitClauses)')","[401, 1196]"
"('Description.java', 'org.junit.runner.Description', 'methodAndClassNamePatternGroupOrDefault', '(.*)\\((.*)\\)', 'partialPartitionMapShouldBeReturnedOnNonEmtpyPattern(code.google.killerword.logic.TestClausePartitionerMapBuilder)')","[670, 1427]"
"('Description.java', 'org.junit.runner.Description', 'methodAndClassNamePatternGroupOrDefault', '(.*)\\((.*)\\)', 'fullPartitionMapShouldBeReturnedOnEmtpyPattern(code.google.killerword.logic.TestClausePartitionerMapBuilder)')","[649, 1406]"
"('Description.java', 'org.junit.runner.Description', 'methodAndClassNamePatternGroupOrDefault', '(.*)\\((.*)\\)', 'null')","[17, 361]"
"('Description.java', 'org.junit.runner.Description', 'methodAndClassNamePatternGroupOrDefault', '(.*)\\((.*)\\)', 'buildWordsLengthMapShouldReturnSpecifiedMap(code.google.killerword.logic.TestClauseCalculator)')","[834, 1553]"
"('Description.java', 'org.junit.runner.Description', 'methodAndClassNamePatternGroupOrDefault', '(.*)\\((.*)\\)', 'code.google.killerword.logic.TestClausePartitionerPartition')","[504, 1773]"
"('Description.java', 'org.junit.runner.Description', 'methodAndClassNamePatternGroupOrDefault', '(.*)\\((.*)\\)', 'sizeOfWordsInNewClausesShouldBeAtLeastOne(code.google.killerword.logic.TestClausePartitionerPartition)')","[567, 1343]"
"('Description.java', 'org.junit.runner.Description', 'methodAndClassNamePatternGroupOrDefault', '(.*)\\((.*)\\)', '[6]')","[321, 1895, 1917]"
"('Description.java', 'org.junit.runner.Description', 'methodAndClassNamePatternGroupOrDefault', '(.*)\\((.*)\\)', 'patternShouldBeEmptyInCreatedClauses(code.google.killerword.logic.TestClauseCalculatorInitClauses)')","[485, 1280]"
"('Description.java', 'org.junit.runner.Description', 'methodAndClassNamePatternGroupOrDefault', '(.*)\\((.*)\\)', 'buildCharacterSetShouldContainOnlyAndAllCharsInWords(code.google.killerword.logic.TestClauseCalculator)')","[855, 1574]"
