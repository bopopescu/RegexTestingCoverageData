"('CommandMultilines.java', 'net.sourceforge.plantuml.command.CommandMultilines', 'isValid', ""(?i)^[\\s\xa0]*/['‘’].*$"", 'left to right diretcion')",[38997]
"('HtmlColorUtils.java', 'net.sourceforge.plantuml.graphic.HtmlColorUtils', 'isValid', '[0-9A-Fa-f]{6}', '84be84')","[67962, 68059]"
"('CommandMultilines.java', 'net.sourceforge.plantuml.command.CommandMultilines', 'isValid', '(?i)^title$', 'left to ight direction')",[23380]
"('CommandMultilines.java', 'net.sourceforge.plantuml.command.CommandMultilines', 'isValid', '(?i)^(?:(left|right|center)?[\\s\xa0]*)header$', 'leftto right direction')",[21246]
"('CommandMultilines.java', 'net.sourceforge.plantuml.command.CommandMultilines', 'isValid', '(?i)^(?:(left|right|center)?[\\s\xa0]*)footer$', 'left o right direction')",[21731]
"('CommandMultilines.java', 'net.sourceforge.plantuml.command.CommandMultilines', 'isValid', ""(?i)^[\\s\xa0]*/['‘’].*$"", 'class Employee {')","[53512, 53978, 54542]"
"('CommandMultilines.java', 'net.sourceforge.plantuml.command.CommandMultilines', 'isValid', ""(?i)^[\\s\xa0]*/['‘’].*$"", 'left toright direction')",[22701]
"('CommandMultilines.java', 'net.sourceforge.plantuml.command.CommandMultilines', 'isValid', '(?i)^title$', 'left to rigth direction')",[36184]
"('CommandMultilines.java', 'net.sourceforge.plantuml.command.CommandMultilines', 'isValid', '(?i)^ref(#\\w+)?[\\s\xa0]+over[\\s\xa0]+((?:[\\p{L}0-9_.@]+|[""“”«»][^""“”«»]+[""“”«»])(?:[\\s\xa0]*,[\\s\xa0]*(?:[\\p{L}0-9_.@]+|[""“”«»][^""“”«»]+[""“”«»]))*)[\\s\xa0]*(#\\w+)?$', 'left to right directon')",[30752]
"('HtmlColorUtils.java', 'net.sourceforge.plantuml.graphic.HtmlColorUtils', 'build', '[0-9A-Fa-f]{6}', '0000ff')","[57807, 57910]"
"('HtmlColorUtils.java', 'net.sourceforge.plantuml.graphic.HtmlColorUtils', 'isValid', '[0-9A-Fa-f]{6}', 'ff0000')","[56772, 56875]"
"('CommandMultilines.java', 'net.sourceforge.plantuml.command.CommandMultilines', 'isValid', ""(?i)^[\\s\xa0]*/['‘’].*$"", 'left to right directoin')",[40161]
"('CommandMultilines.java', 'net.sourceforge.plantuml.command.CommandMultilines', 'isValid', '(?i)^title$', 'eft to right direction')",[18724]
"('CommandMultilines.java', 'net.sourceforge.plantuml.command.CommandMultilines', 'isValid', ""(?i)^[\\s\xa0]*/['‘’].*$"", 'left to rigt direction')",[25029]
"('CommandMultilines.java', 'net.sourceforge.plantuml.command.CommandMultilines', 'isValid', '(?i)^ref(#\\w+)?[\\s\xa0]+over[\\s\xa0]+((?:[\\p{L}0-9_.@]+|[""“”«»][^""“”«»]+[""“”«»])(?:[\\s\xa0]*,[\\s\xa0]*(?:[\\p{L}0-9_.@]+|[""“”«»][^""“”«»]+[""“”«»]))*)[\\s\xa0]*(#\\w+)?$', 'left to right dierction')",[38318]
"('Scanner.java', 'java.util.Scanner', 'getCompleteTokenInBuffer', '(?s).*', '<?xml version=""1.0""?>\n<xsl:stylesheet xmlns:xsl=""http://www.w3.org/1999/XSL/Transform""\n    xmlns:xs=""http://www.w3.org/2001/XMLSchema""\n    xmlns:fn=""http://www.w3.org/2005/xpath-functions""\n    xmlns:r=""org.requs.facet.XsltFuncs""\n    version=""2.0"" exclude-result-prefixes=""xs fn r"">\n    <xsl:output method=""xml"" cdata-section-elements=""svg html""/>\n    <xsl:strip-space elements=""*""/>\n    <xsl:template match=""/spec"">\n        <xsl:copy>\n            <xsl:apply-templates select=""node()|@*""/>\n        </xsl:copy>\n    </xsl:template>\n    <xsl:template match=""method"">\n        <xsl:variable name=""md"">\n            <x>\n                <xsl:apply-templates select=""."" mode=""x""/>\n            </x>\n        </xsl:variable>\n        <xsl:copy>\n            <xsl:apply-templates select=""node()|@*""/>\n            <xsl:variable name=""markdown"" select=""r:print($md)""/>\n            <markdown>\n                <xsl:value-of select=""$markdown""/>\n            </markdown>\n            <html>\n                <xsl:value-of select=""r:html($markdown)""/>\n            </html>\n        </xsl:copy>\n    </xsl:template>\n    <xsl:template match=""method"" mode=""x"">\n        <xsl:text>The following table describes all technical details of Use Case `</xsl:text>\n        <xsl:value-of select=""id""/>\n        <xsl:text>`:&#10;&#10;</xsl:text>\n        <div>\n            <table>\n                <thead>\n                    <tr>\n                        <th>\n                            <xsl:text>Property</xsl:text>\n                        </th>\n                        <th>\n                            <xsl:text>Details</xsl:text>\n                        </th>\n                    </tr>\n                </thead>\n                <tbody>\n                    <tr>\n                        <td>\n                            <xsl:text>ID</xsl:text>\n                        </td>\n                        <td>\n                            <xsl:value-of select=""id""/>\n                        </td>\n                    </tr>\n                    <tr>\n                        <td>\n                            <xsl:text>Signature</xsl:text>\n                        </td>\n                        <td>\n                            <xsl:call-template name=""signature"">\n                                <xsl:with-param name=""home"" select="".""/>\n                            </xsl:call-template>\n                        </td>\n                    </tr>\n                    <tr>\n                        <td>\n                            <xsl:text>Primary</xsl:text>\n                        </td>\n                        <td>\n                            <xsl:value-of select=""bindings/binding[name=\'_self\']/type""/>\n                        </td>\n                    </tr>\n                    <tr>\n                        <td>\n                            <xsl:text>Actors</xsl:text>\n                        </td>\n                        <td>\n                            <xsl:for-each select=""bindings/binding[name!=\'_self\']"">\n                                <xsl:if test=""position() != 1"">\n                                    <xsl:text>; </xsl:text>\n                                </xsl:if>\n                                <code>\n                                    <xsl:value-of select=""name""/>\n                                </code>\n                                <xsl:text> as </xsl:text>\n                                <xsl:value-of select=""type""/>\n                            </xsl:for-each>\n                        </td>\n                    </tr>\n                    <xsl:if test=""info/informal"">\n                        <tr>\n                            <td>\n                                <xsl:text>Brief</xsl:text>\n                            </td>\n                            <td>\n                                <xsl:for-each select=""info/informal"">\n                                    <xsl:if test=""position() != 1"">\n                                        <br/>\n                                    </xsl:if>\n                                    <xsl:apply-templates select=""."" mode=""x""/>\n                                </xsl:for-each>\n                            </td>\n                        </tr>\n                    </xsl:if>\n                    <xsl:if test=""steps/step"">\n                        <tr>\n                            <td>\n                                <xsl:text>Success Flow</xsl:text>\n                            </td>\n                            <td>\n                                <xsl:apply-templates select=""steps"" mode=""x""/>\n                            </td>\n                        </tr>\n                    </xsl:if>\n                    <xsl:if test=""nfrs/nfr"">\n                        <tr>\n                            <td>\n                                <xsl:text>NFRs</xsl:text>\n                            </td>\n                            <td>\n                                <xsl:apply-templates select=""nfrs"" mode=""x""/>\n                            </td>\n                        </tr>\n                    </xsl:if>\n                </tbody>\n            </table>\n        </div>\n        <xsl:text>&#10;&#10;Actors taking participation in the Use Case have the following properties:&#10;&#10;</xsl:text>\n        <div>\n            <table>\n                <thead>\n                    <tr>\n                        <th>\n                            <xsl:text>Actor</xsl:text>\n                        </th>\n                        <th>\n                            <xsl:text>Properties</xsl:text>\n                        </th>\n                    </tr>\n                </thead>\n                <tbody>\n                    <xsl:for-each-group select=""bindings/binding"" group-by=""type"">\n                        <xsl:variable name=""type"" select=""fn:current-grouping-key()""/>\n                        <tr>\n                            <td>\n                                <xsl:value-of select=""$type""/>\n                            </td>\n                            <td>\n                                <xsl:apply-templates select=""/spec/types/type[name=$type]"" mode=""x""/>\n                            </td>\n                        </tr>\n                    </xsl:for-each-group>\n                </tbody>\n            </table>\n        </div>\n    </xsl:template>\n    <xsl:template match=""steps"" mode=""x"">\n        <xsl:for-each select=""step"">\n            <xsl:if test=""position() != 1"">\n                <br/>\n            </xsl:if>\n            <xsl:apply-templates select=""."" mode=""x""/>\n        </xsl:for-each>\n    </xsl:template>\n    <xsl:template match=""step"" mode=""x"">\n        <xsl:value-of select=""number""/>\n        <xsl:text>. </xsl:text>\n        <xsl:call-template name=""signature"">\n            <xsl:with-param name=""home"" select="".""/>\n        </xsl:call-template>\n    </xsl:template>\n    <xsl:template match=""informal"" mode=""x"">\n        <xsl:text>&quot;</xsl:text>\n        <xsl:value-of select=""fn:replace(., \'[&#10; ]+\', \' \')""/>\n        <xsl:text>&quot;</xsl:text>\n    </xsl:template>\n    <xsl:template name=""signature"">\n        <xsl:param name=""home""/>\n        <code>\n            <xsl:value-of select=""$home/object""/>\n        </code>\n        <xsl:text> </xsl:text>\n        <xsl:value-of select=""$home/signature""/>\n        <xsl:if test=""$home/result"">\n            <xsl:text> </xsl:text>\n            <code>\n                <xsl:value-of select=""$home/result""/>\n            </code>\n        </xsl:if>\n        <xsl:if test=""$home/args/arg"">\n            <xsl:text> using </xsl:text>\n            <xsl:for-each select=""$home/args/arg"">\n                <xsl:if test=""position() > 1"">\n                    <xsl:text> and </xsl:text>\n                </xsl:if>\n                <code>\n                    <xsl:value-of select="".""/>\n                </code>\n            </xsl:for-each>\n        </xsl:if>\n    </xsl:template>\n    <xsl:template match=""type"" mode=""x"">\n        <xsl:for-each select=""info/informal"">\n            <xsl:if test=""position() > 1"">\n                <br/>\n            </xsl:if>\n            <xsl:apply-templates select=""."" mode=""x""/>\n        </xsl:for-each>\n        <xsl:if test=""slots/slot"">\n            <ul>\n                <xsl:for-each select=""slots/slot"">\n                    <li>\n                        <code>\n                            <xsl:value-of select=""name""/>\n                        </code>\n                        <xsl:text>: </xsl:text>\n                        <xsl:value-of select=""type""/>\n                        <xsl:apply-templates select=""info"" mode=""x""/>\n                    </li>\n                </xsl:for-each>\n            </ul>\n        </xsl:if>\n    </xsl:template>\n    <xsl:template match=""nfrs"" mode=""x"">\n        <xsl:for-each select=""nfr"">\n            <xsl:if test=""position() != 1"">\n                <br/>\n            </xsl:if>\n            <xsl:apply-templates select=""."" mode=""x""/>\n        </xsl:for-each>\n    </xsl:template>\n    <xsl:template match=""nfr"" mode=""x"">\n        <xsl:value-of select=""id""/>\n        <xsl:text> must </xsl:text>\n        <xsl:apply-templates select=""info"" mode=""x""/>\n    </xsl:template>\n    <xsl:template match=""info"" mode=""x"">\n        <xsl:if test=""informal"">\n            <xsl:text> </xsl:text>\n            <xsl:for-each select=""informal"">\n                <xsl:if test=""position() > 1"">\n                    <xsl:text> and </xsl:text>\n                </xsl:if>\n                <xsl:apply-templates select=""."" mode=""x""/>\n            </xsl:for-each>\n        </xsl:if>\n    </xsl:template>\n    <xsl:template match=""node()|@*"">\n        <xsl:copy>\n            <xsl:apply-templates select=""node()|@*""/>\n        </xsl:copy>\n    </xsl:template>\n</xsl:stylesheet>\n')",[7505]
"('CommandMultilinesBracket.java', 'net.sourceforge.plantuml.command.CommandMultilinesBracket', 'isValid', '(?i)^skinparam[\\s\xa0]*(?:[\\s\xa0]+([\\w.]*(?:\\<\\<.*\\>\\>)?[\\w.]*))?[\\s\xa0]*\\{$', 'left to -right direction')",[43459]
"('CommandMultilines.java', 'net.sourceforge.plantuml.command.CommandMultilines', 'isValid', '(?i)^title$', 'left to right direction')","[13006, 18146, 51559, 52024]"
"('CommandMultilines.java', 'net.sourceforge.plantuml.command.CommandMultilines', 'isValid', '(?i)^ref(#\\w+)?[\\s\xa0]+over[\\s\xa0]+((?:[\\p{L}0-9_.@]+|[""“”«»][^""“”«»]+[""“”«»])(?:[\\s\xa0]*,[\\s\xa0]*(?:[\\p{L}0-9_.@]+|[""“”«»][^""“”«»]+[""“”«»]))*)[\\s\xa0]*(#\\w+)?$', 'left to irght direction')",[34826]
"('CommandMultilines.java', 'net.sourceforge.plantuml.command.CommandMultilines', 'isValid', ""(?i)^[\\s\xa0]*/['‘’].*$"", 'left- to right direction')",[41325]
"('DomParser.java', 'com.jcabi.xml.DomParser', '<init>', '(?:<\\?xml.*\\?>\\s*)?(?:<!DOCTYPE.*>)?(?:<!--.*-->)?\\<[_\\:a-zA-ZÀ-ÖØ-öø-˿Ͱ-ͽͿ-\u1fff\u200c-\u200d⁰-\u218fⰀ-\u2fef、-\ud7ff豈-\ufdcfﷰ-�](?:[·\\.\\-0-9̀-ͯ‿-⁀])*.*(?:[_\\:a-zA-ZÀ-ÖØ-öø-˿Ͱ-ͽͿ-\u1fff\u200c-\u200d⁰-\u218fⰀ-\u2fef、-\ud7ff豈-\ufdcfﷰ-�](?:[·\\.\\-0-9̀-ͯ‿-⁀])*|/)\\>', '<?xmlversion=""1.0""encoding=""UTF-8""?><svgxmlns=""http://www.w3.org/2000/svg""xmlns:xlink=""http://www.w3.org/1999/xlink""height=""72pt""style=""width:190px;height:72px;""version=""1.1""viewBox=""0019072""width=""190pt""><defsxmlns=""""><filterheight=""300%""id=""f1""width=""300%""x=""-1""y=""-1""><feGaussianBlurresult=""blurOut""stdDeviation=""2.0""/><feColorMatrixin=""blurOut""result=""blurOut2""type=""matrix""values=""000000000000000000.40""/><feOffsetdx=""4.0""dy=""4.0""in=""blurOut2""result=""blurOut3""/><feBlendin=""SourceGraphic""in2=""blurOut3""mode=""normal""/></filter></defs><gxmlns=""""><textfill=""#000000""font-family=""sans-serif""font-size=""13""font-weight=""bold""lengthAdjust=""spacingAndGlyphs""textLength=""189""x=""0""y=""12.0669"">Employee:ClassDiagram</text><rectfill=""#FEFECE""filter=""url(#f1)""height=""39.9688""style=""stroke:#A80036;stroke-width:1.5;""width=""66""x=""55.5""y=""23.1328""/><textfill=""#000000""font-family=""sans-serif""font-size=""12""lengthAdjust=""spacingAndGlyphs""textLength=""60""x=""58.5""y=""39.2715"">Employee</text><linestyle=""stroke:#A80036;stroke-width:1.5;""x1=""56.5""x2=""120.5""y1=""47.1016""y2=""47.1016""/><linestyle=""stroke:#A80036;stroke-width:1.5;""x1=""56.5""x2=""120.5""y1=""55.1016""y2=""55.1016""/></g></svg>')","[69317, 69417]"
"('CommandMultilines.java', 'net.sourceforge.plantuml.command.CommandMultilines', 'isValid', ""(?i)^[\\s\xa0]*/['‘’].*$"", 'left to right diection')",[27939]
"('CommandMultilines.java', 'net.sourceforge.plantuml.command.CommandMultilines', 'isValid', '(?i)^title$', 'skinparam sequenceTitleFontSize 13')","[11518, 11890, 15858, 16240, 16620, 50071, 50443]"
"('HtmlColorUtils.java', 'net.sourceforge.plantuml.graphic.HtmlColorUtils', 'build', '[0-9A-Fa-f]{6}', 'dddddd')","[63477, 63574, 65037, 65134]"
"('Scanner.java', 'java.util.Scanner', 'getCompleteTokenInBuffer', '(?s).*', '<?xml version=""1.0""?>\n<xsl:stylesheet xmlns:xsl=""http://www.w3.org/1999/XSL/Transform"" xmlns:xs=""http://www.w3.org/2001/XMLSchema"" version=""2.0"" exclude-result-prefixes=""xs"">\n    <xsl:output method=""xml"" cdata-section-elements=""svg html""/>\n    <xsl:strip-space elements=""*""/>\n    <xsl:template match=""/spec/errors"">\n        <xsl:copy>\n            <xsl:apply-templates select=""error""/>\n            <xsl:for-each select=""//method[@seal != \'\']"">\n                <xsl:variable name=""method"" select="".""/>\n                <xsl:for-each select=""attributes/attribute[@seal != \'\']"">\n                    <xsl:if test=""$method/@seal != @seal"">\n                        <error type=""seal"" pos=""0"">\n                            <xsl:attribute name=""line"">\n                                <xsl:value-of select=""$method/mentioned/where[1]""/>\n                            </xsl:attribute>\n                            <xsl:text>Seal &quot;</xsl:text>\n                            <xsl:value-of select=""$method/@seal""/>\n                            <xsl:text>&quot; at the method </xsl:text>\n                            <xsl:value-of select=""$method/id""/>\n                            <xsl:text> doesn\'t match &quot;</xsl:text>\n                            <xsl:value-of select=""@seal""/>\n                            <xsl:text>&quot; at the attribute &quot;</xsl:text>\n                            <xsl:value-of select=""text()""/>\n                            <xsl:text>&quot;</xsl:text>\n                        </error>\n                    </xsl:if>\n                </xsl:for-each>\n            </xsl:for-each>\n        </xsl:copy>\n    </xsl:template>\n    <xsl:template match=""node()|@*"">\n        <xsl:copy>\n            <xsl:apply-templates select=""node()|@*""/>\n        </xsl:copy>\n    </xsl:template>\n</xsl:stylesheet>\n')",[5067]
"('CommandMultilines.java', 'net.sourceforge.plantuml.command.CommandMultilines', 'isValid', ""(?i)^[\\s\xa0]*/['‘’].*$"", 'title Employee: Class Diagram')","[53326, 53419]"
"('CommandMultilines.java', 'net.sourceforge.plantuml.command.CommandMultilines', 'isValid', '(?i)^title$', 'left t right direction')",[22216]
"('CommandMultilines.java', 'net.sourceforge.plantuml.command.CommandMultilines', 'isValid', ""(?i)^[\\s\xa0]*/['‘’].*$"", 'leftto right direction')",[20955]
"('CommandMultilines.java', 'net.sourceforge.plantuml.command.CommandMultilines', 'isValid', '(?i)^ref(#\\w+)?[\\s\xa0]+over[\\s\xa0]+((?:[\\p{L}0-9_.@]+|[""“”«»][^""“”«»]+[""“”«»])(?:[\\s\xa0]*,[\\s\xa0]*(?:[\\p{L}0-9_.@]+|[""“”«»][^""“”«»]+[""“”«»]))*)[\\s\xa0]*(#\\w+)?$', 'left to rigth direction')",[36572]
"('CommandMultilines.java', 'net.sourceforge.plantuml.command.CommandMultilines', 'isValid', '(?i)^title$', 'left to right directon')",[30364]
"('HtmlColorUtils.java', 'net.sourceforge.plantuml.graphic.HtmlColorUtils', 'isValid', '[0-9A-Fa-f]{6}', 'add1b2')","[61332, 61429]"
"('CommandMultilines.java', 'net.sourceforge.plantuml.command.CommandMultilines', 'isValid', '(?i)^ref(#\\w+)?[\\s\xa0]+over[\\s\xa0]+((?:[\\p{L}0-9_.@]+|[""“”«»][^""“”«»]+[""“”«»])(?:[\\s\xa0]*,[\\s\xa0]*(?:[\\p{L}0-9_.@]+|[""“”«»][^""“”«»]+[""“”«»]))*)[\\s\xa0]*(#\\w+)?$', 'left- to right direction')",[41810]
"('HtmlColorUtils.java', 'net.sourceforge.plantuml.graphic.HtmlColorUtils', 'build', '[0-9A-Fa-f]{6}', 'fef6f3')","[56151, 56254]"
"('Description.java', 'org.junit.runner.Description', 'methodAndClassNamePatternGroupOrDefault', '([\\s\\S]*)\\((.*)\\)', 'compilesRequsSources(org.requs.exec.MainTest)')","[57, 142]"
"('Scanner.java', 'java.util.Scanner', 'getCompleteTokenInBuffer', '(?s).*', '<?xml version=""1.0""?>\n<xsl:stylesheet xmlns:xsl=""http://www.w3.org/1999/XSL/Transform"" xmlns:xs=""http://www.w3.org/2001/XMLSchema"" version=""2.0"" exclude-result-prefixes=""xs"">\n    <xsl:output method=""xml"" cdata-section-elements=""svg html""/>\n    <xsl:strip-space elements=""*""/>\n    <xsl:template match=""/spec/errors"">\n        <xsl:copy>\n            <xsl:apply-templates select=""error""/>\n            <xsl:for-each select=""//steps/step[signature and not(starts-with(signature,\'&quot;\') and ends-with(signature,\'&quot;\'))]"">\n                <xsl:if test=""signature!=\'creates\' and signature!=\'reads\' and signature!=\'updates\' and signature!=\'deletes\' and signature!=\'fail\'"">\n                    <xsl:variable name=""step"" select="".""/>\n                    <xsl:if test=""/spec[not(methods/method/signature=$step/signature)]"">\n                        <error type=""seal"" pos=""0"">\n                            <xsl:attribute name=""line"">\n                                <xsl:value-of select=""$step/mentioned/where[1]""/>\n                            </xsl:attribute>\n                            <xsl:text>Step &quot;</xsl:text>\n                            <xsl:value-of select=""$step/number""/>\n                            <xsl:text>&quot; refers to a non-existing use case &quot;</xsl:text>\n                            <xsl:value-of select=""$step/signature""/>\n                            <xsl:text>&quot;</xsl:text>\n                        </error>\n                    </xsl:if>\n                </xsl:if>\n            </xsl:for-each>\n        </xsl:copy>\n    </xsl:template>\n    <xsl:template match=""node()|@*"">\n        <xsl:copy>\n            <xsl:apply-templates select=""node()|@*""/>\n        </xsl:copy>\n    </xsl:template>\n</xsl:stylesheet>\n')",[4627]
"('HtmlColorUtils.java', 'net.sourceforge.plantuml.graphic.HtmlColorUtils', 'isValid', '[0-9A-Fa-f]{6}', 'c82930')","[65232, 65329]"
"('HtmlColorUtils.java', 'net.sourceforge.plantuml.graphic.HtmlColorUtils', 'isValid', '[0-9A-Fa-f]{6}', '00ff00')","[57186, 57289]"
"('CommandMultilinesBracket.java', 'net.sourceforge.plantuml.command.CommandMultilinesBracket', 'isValid', '(?i)^skinparam[\\s\xa0]*(?:[\\s\xa0]+([\\w.]*(?:\\<\\<.*\\>\\>)?[\\w.]*))?[\\s\xa0]*\\{$', 'elft to right direction')",[32401]
"('CommandMultilines.java', 'net.sourceforge.plantuml.command.CommandMultilines', 'isValid', '(?i)^(?:(left|right|center)?[\\s\xa0]*)header$', 'left to right driection')",[37542]
"('CommandMultilines.java', 'net.sourceforge.plantuml.command.CommandMultilines', 'isValid', ""(?i)^[\\s\xa0]*/['‘’].*$"", 'let to right direction')",[19791]
"('CommandMultilines.java', 'net.sourceforge.plantuml.command.CommandMultilines', 'isValid', '(?i)^(?:(left|right|center)?[\\s\xa0]*)footer$', 'left to right drection')",[27551]
"('XpathDirective.java', 'org.xembly.XpathDirective', 'exec', '/([^/\\(\\[\\{:]+)', ""/spec/types/type[name='Employee']"")","[1129, 1182]"
"('CommandMultilines.java', 'net.sourceforge.plantuml.command.CommandMultilines', 'isValid', '(?i)^(?:(left|right|center)?[\\s\xa0]*)header$', 'left to right irection')",[27066]
"('Scanner.java', 'java.util.Scanner', 'getCompleteTokenInBuffer', '(?s).*', '<?xml version=""1.0""?>\n<xsl:stylesheet xmlns:xsl=""http://www.w3.org/1999/XSL/Transform"" xmlns:xs=""http://www.w3.org/2001/XMLSchema"" version=""2.0"" exclude-result-prefixes=""xs"">\n    <xsl:output method=""xml"" cdata-section-elements=""svg html""/>\n    <xsl:strip-space elements=""*"" />\n    <xsl:template match=""node()|@*"">\n        <xsl:copy>\n            <xsl:apply-templates select=""node()|@*""/>\n        </xsl:copy>\n    </xsl:template>\n    <xsl:template match=""errors"">\n        <xsl:copy>\n            <xsl:apply-templates select=""node()|@*""/>\n            <xsl:for-each select=""//step[count(object) &gt; 1]"">\n                <error type=""syntax"" pos=""0"">\n                    <xsl:attribute name=""line"">\n                        <xsl:value-of select=""mentioned/where[1]""/>\n                    </xsl:attribute>\n                    <xsl:text>step </xsl:text>\n                    <xsl:value-of select=""number""/>\n                    <xsl:text> has </xsl:text>\n                    <xsl:value-of select=""count(object)""/>\n                    <xsl:text> objects</xsl:text>\n                </error>\n            </xsl:for-each>\n        </xsl:copy>\n    </xsl:template>\n    <xsl:template match=""//step[count(object) &gt; 1]"">\n        <xsl:copy>\n            <xsl:apply-templates select=""(node() except object)|@*""/>\n            <object>\n                <xsl:value-of select=""object[1]""/>\n            </object>\n        </xsl:copy>\n    </xsl:template>\n</xsl:stylesheet>\n')",[1729]
"('CommandMultilines.java', 'net.sourceforge.plantuml.command.CommandMultilines', 'isValid', '(?i)^title$', 'left to right directio')",[31528]
"('CommandMultilines.java', 'net.sourceforge.plantuml.command.CommandMultilines', 'isValid', ""(?i)^[\\s\xa0]*/['‘’].*$"", 'left o right direction')",[21537]
"('CommandMultilinesBracket.java', 'net.sourceforge.plantuml.command.CommandMultilinesBracket', 'isValid', '(?i)^skinparam[\\s\xa0]*(?:[\\s\xa0]+([\\w.]*(?:\\<\\<.*\\>\\>)?[\\w.]*))?[\\s\xa0]*\\{$', 'left to right direciton')",[39967]
"('HtmlColorUtils.java', 'net.sourceforge.plantuml.graphic.HtmlColorUtils', 'build', '[0-9A-Fa-f]{6}', '038048')","[67767, 67864]"
"('CommandMultilines.java', 'net.sourceforge.plantuml.command.CommandMultilines', 'isValid', '(?i)^ref(#\\w+)?[\\s\xa0]+over[\\s\xa0]+((?:[\\p{L}0-9_.@]+|[""“”«»][^""“”«»]+[""“”«»])(?:[\\s\xa0]*,[\\s\xa0]*(?:[\\p{L}0-9_.@]+|[""“”«»][^""“”«»]+[""“”«»]))*)[\\s\xa0]*(#\\w+)?$', 'left to right driection')",[37736]
"('CommandMultilines.java', 'net.sourceforge.plantuml.command.CommandMultilines', 'isValid', '(?i)^title$', 'lfet to right direction')",[32692]
"('CommandMultilines.java', 'net.sourceforge.plantuml.command.CommandMultilines', 'isValid', '(?i)^(?:(left|right|center)?[\\s\xa0]*)footer$', 'elft to right direction')",[32207]
"('CommandMultilines.java', 'net.sourceforge.plantuml.command.CommandMultilines', 'isValid', '(?i)^(?:(left|right|center)?[\\s\xa0]*)footer$', 'left to- right direction')",[42683]
"('CommandMultilines.java', 'net.sourceforge.plantuml.command.CommandMultilines', 'isValid', '(?i)^ref(#\\w+)?[\\s\xa0]+over[\\s\xa0]+((?:[\\p{L}0-9_.@]+|[""“”«»][^""“”«»]+[""“”«»])(?:[\\s\xa0]*,[\\s\xa0]*(?:[\\p{L}0-9_.@]+|[""“”«»][^""“”«»]+[""“”«»]))*)[\\s\xa0]*(#\\w+)?$', 'left to right direction')","[13378, 18530]"
"('CommandMultilines.java', 'net.sourceforge.plantuml.command.CommandMultilines', 'isValid', ""(?i)^[\\s\xa0]*/['‘’].*$"", 'left to right idrection')",[36669]
"('CommandMultilinesBracket.java', 'net.sourceforge.plantuml.command.CommandMultilinesBracket', 'isValid', '(?i)^skinparam[\\s\xa0]*(?:[\\s\xa0]+([\\w.]*(?:\\<\\<.*\\>\\>)?[\\w.]*))?[\\s\xa0]*\\{$', 'left to right diretion')",[29491]
"('DomParser.java', 'com.jcabi.xml.DomParser', '<init>', '(?:<\\?xml.*\\?>\\s*)?(?:<!DOCTYPE.*>)?(?:<!--.*-->)?\\<[_\\:a-zA-ZÀ-ÖØ-öø-˿Ͱ-ͽͿ-\u1fff\u200c-\u200d⁰-\u218fⰀ-\u2fef、-\ud7ff豈-\ufdcfﷰ-�](?:[·\\.\\-0-9̀-ͯ‿-⁀])*.*(?:[_\\:a-zA-ZÀ-ÖØ-öø-˿Ͱ-ͽͿ-\u1fff\u200c-\u200d⁰-\u218fⰀ-\u2fef、-\ud7ff豈-\ufdcfﷰ-�](?:[·\\.\\-0-9̀-ͯ‿-⁀])*|/)\\>', '<?xmlversion=""1.0""encoding=""UTF-8""?><?xml-stylesheethref=\'requs.xsl\'type=\'text/xsl\'?><spec><files><fileid=""0""line=""1"">/tmp/junit6135137912157695896/junit6933773851868817004/employee.req</file></files><input>Employeeisa""userofthesystem"".</input></spec>')","[802, 860, 917]"
"('DomParser.java', 'com.jcabi.xml.DomParser', '<init>', '(?:<\\?xml.*\\?>\\s*)?(?:<!DOCTYPE.*>)?(?:<!--.*-->)?\\<[_\\:a-zA-ZÀ-ÖØ-öø-˿Ͱ-ͽͿ-\u1fff\u200c-\u200d⁰-\u218fⰀ-\u2fef、-\ud7ff豈-\ufdcfﷰ-�](?:[·\\.\\-0-9̀-ͯ‿-⁀])*.*(?:[_\\:a-zA-ZÀ-ÖØ-öø-˿Ͱ-ͽͿ-\u1fff\u200c-\u200d⁰-\u218fⰀ-\u2fef、-\ud7ff豈-\ufdcfﷰ-�](?:[·\\.\\-0-9̀-ͯ‿-⁀])*|/)\\>', '<?xmlversion=""1.0""encoding=""UTF-8""standalone=""yes""?><svgxmlns=""http://www.w3.org/2000/svg""xmlns:xlink=""http://www.w3.org/1999/xlink""height=""72pt""style=""width:190px;height:72px;""version=""1.1""viewBox=""0019072""width=""190pt""><defsxmlns=""""><filterheight=""300%""id=""f1""width=""300%""x=""-1""y=""-1""><feGaussianBlurresult=""blurOut""stdDeviation=""2.0""/><feColorMatrixin=""blurOut""result=""blurOut2""type=""matrix""values=""000000000000000000.40""/><feOffsetdx=""4.0""dy=""4.0""in=""blurOut2""result=""blurOut3""/><feBlendin=""SourceGraphic""in2=""blurOut3""mode=""normal""/></filter></defs><gxmlns=""""><textfill=""#000000""font-family=""sans-serif""font-size=""13""font-weight=""bold""lengthAdjust=""spacingAndGlyphs""textLength=""189""x=""0""y=""12.0669"">Employee:ClassDiagram</text><rectfill=""#FEFECE""filter=""url(#f1)""height=""39.9688""style=""stroke:#A80036;stroke-width:1.5;""width=""66""x=""55.5""y=""23.1328""/><textfill=""#000000""font-family=""sans-serif""font-size=""12""lengthAdjust=""spacingAndGlyphs""textLength=""60""x=""58.5""y=""39.2715"">Employee</text><linestyle=""stroke:#A80036;stroke-width:1.5;""x1=""56.5""x2=""120.5""y1=""47.1016""y2=""47.1016""/><linestyle=""stroke:#A80036;stroke-width:1.5;""x1=""56.5""x2=""120.5""y1=""55.1016""y2=""55.1016""/></g></svg>')",[69216]
"('CommandMultilines.java', 'net.sourceforge.plantuml.command.CommandMultilines', 'isValid', '(?i)^title$', 'left  to right direction')","[44914, 45496]"
"('CommandMultilines.java', 'net.sourceforge.plantuml.command.CommandMultilines', 'isValid', '(?i)^title$', 'left to rght direction')",[23962]
"('CommandMultilines.java', 'net.sourceforge.plantuml.command.CommandMultilines', 'isValid', '(?i)^(?:(left|right|center)?[\\s\xa0]*)footer$', 'left to right directin')",[31043]
"('Scanner.java', 'java.util.Scanner', 'getCompleteTokenInBuffer', '(?s).*', '<?xml version=""1.0""?>\n<xsl:stylesheet xmlns:xsl=""http://www.w3.org/1999/XSL/Transform"" xmlns:xs=""http://www.w3.org/2001/XMLSchema"" version=""2.0"" exclude-result-prefixes=""xs"">\n    <xsl:output method=""xml"" cdata-section-elements=""svg html""/>\n    <xsl:strip-space elements=""*"" />\n    <xsl:template match=""errors"">\n        <xsl:copy>\n            <xsl:apply-templates select=""node()|@*""/>\n            <xsl:for-each select=""//step[result and empty(result/text())]"">\n                <error type=""lost"" pos=""0"">\n                    <xsl:attribute name=""line"">\n                        <xsl:value-of select=""mentioned/where[1]""/>\n                    </xsl:attribute>\n                    <xsl:text>step </xsl:text>\n                    <xsl:value-of select=""number""/>\n                    <xsl:text> has broken result declaration</xsl:text>\n                </error>\n            </xsl:for-each>\n        </xsl:copy>\n    </xsl:template>\n    <xsl:template match=""step[result and empty(result/text())]"">\n        <xsl:copy>\n            <xsl:apply-templates select=""(node() except result)|@*""/>\n        </xsl:copy>\n    </xsl:template>\n    <xsl:template match=""node()|@*"">\n        <xsl:copy>\n            <xsl:apply-templates select=""node()|@*""/>\n        </xsl:copy>\n    </xsl:template>\n</xsl:stylesheet>\n')",[3820]
"('CommandMultilines.java', 'net.sourceforge.plantuml.command.CommandMultilines', 'isValid', '(?i)^(?:(left|right|center)?[\\s\xa0]*)footer$', 'left to right  direction')","[47339, 47921]"
"('Scanner.java', 'java.util.Scanner', 'getCompleteTokenInBuffer', '(?s).*', '<?xml version=""1.0""?>\n<xsl:stylesheet xmlns:xsl=""http://www.w3.org/1999/XSL/Transform"" xmlns:xs=""http://www.w3.org/2001/XMLSchema"" version=""2.0"" exclude-result-prefixes=""xs"">\n    <xsl:output method=""xml"" cdata-section-elements=""svg html""/>\n    <xsl:strip-space elements=""*""/>\n    <xsl:template match=""/spec/errors"">\n        <xsl:copy>\n            <xsl:apply-templates select=""error""/>\n            <xsl:for-each select=""/spec/types/type/slots/slot[type]"">\n                <xsl:variable name=""slot"" select="".""/>\n                <xsl:if test=""/spec[not(types/type/name=$slot/type)]"">\n                    <error type=""seal"" pos=""0"">\n                        <xsl:attribute name=""line"">\n                            <xsl:value-of select=""$slot/mentioned/where[1]""/>\n                        </xsl:attribute>\n                        <xsl:text>Slot &quot;</xsl:text>\n                        <xsl:value-of select=""$slot/name""/>\n                        <xsl:text>&quot; of type &quot;</xsl:text>\n                        <xsl:value-of select=""$slot/../../name""/>\n                        <xsl:text>&quot; refers to a non-existing type &quot;</xsl:text>\n                        <xsl:value-of select=""$slot/type""/>\n                        <xsl:text>&quot;</xsl:text>\n                    </error>\n                </xsl:if>\n            </xsl:for-each>\n            <xsl:for-each select=""/spec/methods/method/bindings/binding"">\n                <xsl:variable name=""binding"" select="".""/>\n                <xsl:if test=""/spec/types[not(type/name=$binding/type)]"">\n                    <error type=""seal"" pos=""0"">\n                        <xsl:attribute name=""line"">\n                            <xsl:value-of select=""$binding/../../mentioned/where[1]""/>\n                        </xsl:attribute>\n                        <xsl:text>Use case &quot;</xsl:text>\n                        <xsl:value-of select=""$binding/../../id""/>\n                        <xsl:text>&quot; refers to a non-existing type &quot;</xsl:text>\n                        <xsl:value-of select=""$binding/type""/>\n                        <xsl:text>&quot;</xsl:text>\n                    </error>\n                </xsl:if>\n            </xsl:for-each>\n            <xsl:for-each select=""/spec/types/type/parents/type"">\n                <xsl:variable name=""type"" select="".""/>\n                <xsl:if test=""/spec[not(types/type/name=$type)]"">\n                    <error type=""seal"" pos=""0"">\n                        <xsl:attribute name=""line"">\n                            <xsl:value-of select=""$type/../../mentioned/where[1]""/>\n                        </xsl:attribute>\n                        <xsl:text>Parent of type &quot;</xsl:text>\n                        <xsl:value-of select=""$type/../../name""/>\n                        <xsl:text>&quot; refers to a non-existing type &quot;</xsl:text>\n                        <xsl:value-of select=""$type""/>\n                        <xsl:text>&quot;</xsl:text>\n                    </error>\n                </xsl:if>\n            </xsl:for-each>\n        </xsl:copy>\n    </xsl:template>\n    <xsl:template match=""node()|@*"">\n        <xsl:copy>\n            <xsl:apply-templates select=""node()|@*""/>\n        </xsl:copy>\n    </xsl:template>\n</xsl:stylesheet>\n')",[4860]
"('CommandMultilinesBracket.java', 'net.sourceforge.plantuml.command.CommandMultilinesBracket', 'isValid', '(?i)^skinparam[\\s\xa0]*(?:[\\s\xa0]+([\\w.]*(?:\\<\\<.*\\>\\>)?[\\w.]*))?[\\s\xa0]*\\{$', 'left to rght direction')",[24253]
"('CommandMultilines.java', 'net.sourceforge.plantuml.command.CommandMultilines', 'isValid', '(?i)^(?:(left|right|center)?[\\s\xa0]*)footer$', 'left to -right direction')",[43265]
"('CommandMultilines.java', 'net.sourceforge.plantuml.command.CommandMultilines', 'isValid', '(?i)^(?:(left|right|center)?[\\s\xa0]*)footer$', 'lft to right direction')",[19403]
"('CommandMultilines.java', 'net.sourceforge.plantuml.command.CommandMultilines', 'isValid', ""(?i)^[\\s\xa0]*/['‘’].*$"", 'left to right -direction')",[44235]
"('CommandMultilines.java', 'net.sourceforge.plantuml.command.CommandMultilines', 'isValid', ""(?i)^[\\s\xa0]*/['‘’].*$"", 'eft to right direction')",[18627]
"('HtmlColorUtils.java', 'net.sourceforge.plantuml.graphic.HtmlColorUtils', 'build', '[0-9A-Fa-f]{6}', '1963a0')","[66207, 66304]"
"('CommandMultilines.java', 'net.sourceforge.plantuml.command.CommandMultilines', 'isValid', '(?i)^ref(#\\w+)?[\\s\xa0]+over[\\s\xa0]+((?:[\\p{L}0-9_.@]+|[""“”«»][^""“”«»]+[""“”«»])(?:[\\s\xa0]*,[\\s\xa0]*(?:[\\p{L}0-9_.@]+|[""“”«»][^""“”«»]+[""“”«»]))*)[\\s\xa0]*(#\\w+)?$', 'left to right idrection')",[37154]
"('CommandMultilines.java', 'net.sourceforge.plantuml.command.CommandMultilines', 'isValid', ""(?i)^[\\s\xa0]*/['‘’].*$"", 'left to right direction')","[12913, 18050, 51466, 51931]"
"('CommandMultilines.java', 'net.sourceforge.plantuml.command.CommandMultilines', 'isValid', '(?i)^(?:(left|right|center)?[\\s\xa0]*)header$', 'hide class circle')","[52675, 53140]"
"('CommandMultilines.java', 'net.sourceforge.plantuml.command.CommandMultilines', 'isValid', '(?i)^ref(#\\w+)?[\\s\xa0]+over[\\s\xa0]+((?:[\\p{L}0-9_.@]+|[""“”«»][^""“”«»]+[""“”«»])(?:[\\s\xa0]*,[\\s\xa0]*(?:[\\p{L}0-9_.@]+|[""“”«»][^""“”«»]+[""“”«»]))*)[\\s\xa0]*(#\\w+)?$', 'left  to right direction')","[45302, 45884]"
"('CommandMultilines.java', 'net.sourceforge.plantuml.command.CommandMultilines', 'isValid', '(?i)^title$', 'left- to right direction')",[41422]
"('DomParser.java', 'com.jcabi.xml.DomParser', '<init>', '(?:<\\?xml.*\\?>\\s*)?(?:<!DOCTYPE.*>)?(?:<!--.*-->)?\\<[_\\:a-zA-ZÀ-ÖØ-öø-˿Ͱ-ͽͿ-\u1fff\u200c-\u200d⁰-\u218fⰀ-\u2fef、-\ud7ff豈-\ufdcfﷰ-�](?:[·\\.\\-0-9̀-ͯ‿-⁀])*.*(?:[_\\:a-zA-ZÀ-ÖØ-öø-˿Ͱ-ͽͿ-\u1fff\u200c-\u200d⁰-\u218fⰀ-\u2fef、-\ud7ff豈-\ufdcfﷰ-�](?:[·\\.\\-0-9̀-ͯ‿-⁀])*|/)\\>', '<?xmlversion=""1.0""encoding=""UTF-8""?><?xml-stylesheethref=\'requs.xsl\'type=\'text/xsl\'?><spec><files><fileid=""0""line=""1"">/tmp/junit6135137912157695896/junit6933773851868817004/employee.req</file></files><input>Employeeisa""userofthesystem"".</input><types><type><name>Employee</name><mentioned><where>1</where></mentioned><info><informal>userofthesystem</informal></info></type></types><errors/></spec>')","[1440, 1646, 1852, 2058, 2282, 2501, 2712, 2918, 3124, 3338, 3540, 3742, 3943, 4142, 4345, 4547, 4750, 4983, 5190, 5391, 5587, 5784, 5982, 6176, 6374, 6573]"
"('CommandMultilines.java', 'net.sourceforge.plantuml.command.CommandMultilines', 'isValid', '(?i)^title$', 'left to riht direction')",[24544]
"('CommandMultilines.java', 'net.sourceforge.plantuml.command.CommandMultilines', 'isValid', ""(?i)^[\\s\xa0]*/['‘’].*$"", 'skinparam titleFontStyle bold')","[10681, 11053, 14618, 15001, 15381, 49234, 49606]"
"('Scanner.java', 'java.util.Scanner', 'getCompleteTokenInBuffer', '(?s).*', '<?xml version=""1.0""?>\n<xsl:stylesheet xmlns:xsl=""http://www.w3.org/1999/XSL/Transform"" xmlns:xs=""http://www.w3.org/2001/XMLSchema"" version=""2.0"" exclude-result-prefixes=""xs"">\n    <xsl:output method=""xml"" cdata-section-elements=""svg html""/>\n    <xsl:strip-space elements=""*"" />\n    <xsl:template match=""node()|@*"">\n        <xsl:copy>\n            <xsl:apply-templates select=""node()|@*""/>\n        </xsl:copy>\n    </xsl:template>\n    <xsl:template match=""errors"">\n        <xsl:copy>\n            <xsl:apply-templates select=""node()|@*""/>\n            <xsl:for-each select=""//steps"">\n                <xsl:variable name=""unique"" select=""count(step[not(number=preceding-sibling::step/number)])""/>\n                <xsl:variable name=""total"" select=""count(step)""/>\n                <xsl:if test=""$unique != $total"">\n                    <error type=""syntax"" pos=""0"">\n                        <xsl:attribute name=""line"">\n                            <xsl:value-of select=""step[1]/mentioned/where[1]""/>\n                        </xsl:attribute>\n                        <xsl:text>there are </xsl:text>\n                        <xsl:value-of select=""$total""/>\n                        <xsl:text> steps in the flow, while only </xsl:text>\n                        <xsl:value-of select=""$unique""/>\n                        <xsl:text> of them are unique, obvious duplication of numbers</xsl:text>\n                    </error>\n                </xsl:if>\n            </xsl:for-each>\n        </xsl:copy>\n    </xsl:template>\n    <xsl:template match=""//steps[count(step[not(number=preceding-sibling::step/number)]) != count(step)]"">\n        <steps/>\n    </xsl:template>\n</xsl:stylesheet>\n')",[1317]
"('CommandMultilines.java', 'net.sourceforge.plantuml.command.CommandMultilines', 'isValid', '(?i)^(?:(left|right|center)?[\\s\xa0]*)header$', 'skinparam titleFontSize 13')","[10216, 10588, 13762, 14142, 14522, 48769, 49141]"
"('CommandMultilinesBracket.java', 'net.sourceforge.plantuml.command.CommandMultilinesBracket', 'isValid', '(?i)^skinparam[\\s\xa0]*(?:[\\s\xa0]+([\\w.]*(?:\\<\\<.*\\>\\>)?[\\w.]*))?[\\s\xa0]*\\{$', 'left -to right direction')",[42295]
"('CommandMultilines.java', 'net.sourceforge.plantuml.command.CommandMultilines', 'isValid', '(?i)^title$', 'left to right dircetion')",[38512]
"('CommandMultilines.java', 'net.sourceforge.plantuml.command.CommandMultilines', 'isValid', '(?i)^title$', 'left to right diretcion')",[39094]
"('CommandMultilines.java', 'net.sourceforge.plantuml.command.CommandMultilines', 'isValid', ""(?i)^[\\s\xa0]*/['‘’].*$"", 'left  to right direction')","[44817, 45399]"
"('CommandMultilines.java', 'net.sourceforge.plantuml.command.CommandMultilines', 'isValid', '(?i)^(?:(left|right|center)?[\\s\xa0]*)header$', 'left to right- direction')",[43944]
"('CommandMultilines.java', 'net.sourceforge.plantuml.command.CommandMultilines', 'isValid', '(?i)^title$', 'left to right diection')",[28036]
"('CommandMultilines.java', 'net.sourceforge.plantuml.command.CommandMultilines', 'isValid', '(?i)^(?:(left|right|center)?[\\s\xa0]*)footer$', 'hide class circle')","[52582, 53047]"
"('CommandMultilines.java', 'net.sourceforge.plantuml.command.CommandMultilines', 'isValid', '(?i)^(?:(left|right|center)?[\\s\xa0]*)header$', 'left to right directon')",[30558]
"('CommandMultilines.java', 'net.sourceforge.plantuml.command.CommandMultilines', 'isValid', '(?i)^(?:(left|right|center)?[\\s\xa0]*)footer$', 'let to right direction')",[19985]
"('CommandMultilinesBracket.java', 'net.sourceforge.plantuml.command.CommandMultilinesBracket', 'isValid', '(?i)^skinparam[\\s\xa0]*(?:[\\s\xa0]+([\\w.]*(?:\\<\\<.*\\>\\>)?[\\w.]*))?[\\s\xa0]*\\{$', 'left to right idrection')",[37057]
"('HtmlColorUtils.java', 'net.sourceforge.plantuml.graphic.HtmlColorUtils', 'isValid', '[0-9A-Fa-f]{6}', '0000ff')","[57600, 57703]"
"('CommandMultilines.java', 'net.sourceforge.plantuml.command.CommandMultilines', 'isValid', '(?i)^ref(#\\w+)?[\\s\xa0]+over[\\s\xa0]+((?:[\\p{L}0-9_.@]+|[""“”«»][^""“”«»]+[""“”«»])(?:[\\s\xa0]*,[\\s\xa0]*(?:[\\p{L}0-9_.@]+|[""“”«»][^""“”«»]+[""“”«»]))*)[\\s\xa0]*(#\\w+)?$', 'lfet to right direction')",[33080]
"('CommandMultilines.java', 'net.sourceforge.plantuml.command.CommandMultilines', 'isValid', '(?i)^(?:(left|right|center)?[\\s\xa0]*)header$', 'left to -right direction')",[43362]
"('CommandMultilines.java', 'net.sourceforge.plantuml.command.CommandMultilines', 'isValid', '(?i)^(?:(left|right|center)?[\\s\xa0]*)header$', 'left to right  direction')","[47436, 48018]"
"('Scanner.java', 'java.util.Scanner', 'getCompleteTokenInBuffer', '(?s).*', '<?xml version=""1.0""?>\n<xsl:stylesheet xmlns:xsl=""http://www.w3.org/1999/XSL/Transform""\n    xmlns:xs=""http://www.w3.org/2001/XMLSchema""\n    xmlns:fn=""http://www.w3.org/2005/xpath-functions""\n    xmlns:r=""org.requs.facet.XsltFuncs""\n    version=""2.0"" exclude-result-prefixes=""xs fn r"">\n    <xsl:output method=""xml"" cdata-section-elements=""svg html""/>\n    <xsl:strip-space elements=""*""/>\n    <xsl:template match=""/spec"">\n        <xsl:copy>\n            <xsl:apply-templates select=""node()|@*""/>\n        </xsl:copy>\n    </xsl:template>\n    <xsl:template match=""page"">\n        <xsl:copy>\n            <xsl:apply-templates select=""node()|@*""/>\n            <html>\n                <xsl:value-of select=""r:html(info/informal)""/>\n            </html>\n        </xsl:copy>\n    </xsl:template>\n    <xsl:template match=""node()|@*"">\n        <xsl:copy>\n            <xsl:apply-templates select=""node()|@*""/>\n        </xsl:copy>\n    </xsl:template>\n</xsl:stylesheet>\n')",[7762]
"('CommandMultilines.java', 'net.sourceforge.plantuml.command.CommandMultilines', 'isValid', '(?i)^(?:(left|right|center)?[\\s\xa0]*)footer$', 'left to right diretion')",[29297]
"('Scanner.java', 'java.util.Scanner', 'getCompleteTokenInBuffer', '(?s).*', '<?xml version=""1.0""?>\n<xsl:stylesheet xmlns:xsl=""http://www.w3.org/1999/XSL/Transform""\n    xmlns:xs=""http://www.w3.org/2001/XMLSchema""\n    version=""2.0"" exclude-result-prefixes=""xs"">\n    <xsl:output method=""xml"" cdata-section-elements=""svg html""/>\n    <xsl:strip-space elements=""*""/>\n    <xsl:template match=""/spec"">\n        <xsl:copy>\n            <xsl:apply-templates select=""node()|@*""/>\n            <metrics>\n                <metric id=""ambiguity.total"">\n                    <xsl:variable name=""crud"" select=""count(//signature[.=\'creates\' or .=\'reads\' or .=\'updates\' or .=\'deletes\' or .= \'fail\'])""/>\n                    <xsl:variable name=""informal"" select=""count(//signature[starts-with(.,\'&quot;\')])""/>\n                    <xsl:variable name=""total"" select=""$crud + $informal""/>\n                    <xsl:choose>\n                        <xsl:when test=""$total = 0"">\n                            <xsl:value-of select=""$total""/>\n                        </xsl:when>\n                        <xsl:otherwise>\n                            <xsl:value-of select=""format-number($informal div $total, \'0.000\')""/>\n                        </xsl:otherwise>\n                    </xsl:choose>\n                </metric>\n            </metrics>\n        </xsl:copy>\n    </xsl:template>\n    <xsl:template match=""node()|@*"">\n        <xsl:copy>\n            <xsl:apply-templates select=""node()|@*""/>\n        </xsl:copy>\n    </xsl:template>\n</xsl:stylesheet>\n')",[7965]
"('CommandMultilinesBracket.java', 'net.sourceforge.plantuml.command.CommandMultilinesBracket', 'isValid', '(?i)^skinparam[\\s\xa0]*(?:[\\s\xa0]+([\\w.]*(?:\\<\\<.*\\>\\>)?[\\w.]*))?[\\s\xa0]*\\{$', 'left to right directon')",[30655]
"('CommandMultilines.java', 'net.sourceforge.plantuml.command.CommandMultilines', 'isValid', '(?i)^ref(#\\w+)?[\\s\xa0]+over[\\s\xa0]+((?:[\\p{L}0-9_.@]+|[""“”«»][^""“”«»]+[""“”«»])(?:[\\s\xa0]*,[\\s\xa0]*(?:[\\p{L}0-9_.@]+|[""“”«»][^""“”«»]+[""“”«»]))*)[\\s\xa0]*(#\\w+)?$', 'left -to right direction')",[42392]
"('CommandMultilines.java', 'net.sourceforge.plantuml.command.CommandMultilines', 'isValid', '(?i)^ref(#\\w+)?[\\s\xa0]+over[\\s\xa0]+((?:[\\p{L}0-9_.@]+|[""“”«»][^""“”«»]+[""“”«»])(?:[\\s\xa0]*,[\\s\xa0]*(?:[\\p{L}0-9_.@]+|[""“”«»][^""“”«»]+[""“”«»]))*)[\\s\xa0]*(#\\w+)?$', 'left to riht direction')",[24932]
"('CommandMultilines.java', 'net.sourceforge.plantuml.command.CommandMultilines', 'isValid', '(?i)^ref(#\\w+)?[\\s\xa0]+over[\\s\xa0]+((?:[\\p{L}0-9_.@]+|[""“”«»][^""“”«»]+[""“”«»])(?:[\\s\xa0]*,[\\s\xa0]*(?:[\\p{L}0-9_.@]+|[""“”«»][^""“”«»]+[""“”«»]))*)[\\s\xa0]*(#\\w+)?$', 'left to right direcion')",[30170]
"('CommandMultilinesBracket.java', 'net.sourceforge.plantuml.command.CommandMultilinesBracket', 'isValid', '(?i)^skinparam[\\s\xa0]*(?:[\\s\xa0]+([\\w.]*(?:\\<\\<.*\\>\\>)?[\\w.]*))?[\\s\xa0]*\\{$', 'left to right directio')",[31819]
"('CommandMultilines.java', 'net.sourceforge.plantuml.command.CommandMultilines', 'isValid', '(?i)^(?:(left|right|center)?[\\s\xa0]*)header$', 'left to- right direction')",[42780]
"('CommandMultilines.java', 'net.sourceforge.plantuml.command.CommandMultilines', 'isValid', '(?i)^(?:(left|right|center)?[\\s\xa0]*)footer$', 'left to right irection')",[26969]
"('CommandMultilinesBracket.java', 'net.sourceforge.plantuml.command.CommandMultilinesBracket', 'isValid', '(?i)^skinparam[\\s\xa0]*(?:[\\s\xa0]+([\\w.]*(?:\\<\\<.*\\>\\>)?[\\w.]*))?[\\s\xa0]*\\{$', 'left to rightdirection')",[26581]
"('CommandMultilines.java', 'net.sourceforge.plantuml.command.CommandMultilines', 'isValid', '(?i)^(?:(left|right|center)?[\\s\xa0]*)header$', 'left to right dirction')",[28812]
"('CommandMultilines.java', 'net.sourceforge.plantuml.command.CommandMultilines', 'isValid', '(?i)^(?:(left|right|center)?[\\s\xa0]*)header$', 'left to  right direction')","[46272, 46854]"
"('CommandMultilines.java', 'net.sourceforge.plantuml.command.CommandMultilines', 'isValid', '(?i)^ref(#\\w+)?[\\s\xa0]+over[\\s\xa0]+((?:[\\p{L}0-9_.@]+|[""“”«»][^""“”«»]+[""“”«»])(?:[\\s\xa0]*,[\\s\xa0]*(?:[\\p{L}0-9_.@]+|[""“”«»][^""“”«»]+[""“”«»]))*)[\\s\xa0]*(#\\w+)?$', 'left to right -direction')",[44720]
"('CommandMultilines.java', 'net.sourceforge.plantuml.command.CommandMultilines', 'isValid', '(?i)^ref(#\\w+)?[\\s\xa0]+over[\\s\xa0]+((?:[\\p{L}0-9_.@]+|[""“”«»][^""“”«»]+[""“”«»])(?:[\\s\xa0]*,[\\s\xa0]*(?:[\\p{L}0-9_.@]+|[""“”«»][^""“”«»]+[""“”«»]))*)[\\s\xa0]*(#\\w+)?$', 'left t right direction')",[22604]
"('CommandMultilines.java', 'net.sourceforge.plantuml.command.CommandMultilines', 'isValid', ""(?i)^[\\s\xa0]*/['‘’].*$"", 'left to irght direction')",[34341]
"('DomParser.java', 'com.jcabi.xml.DomParser', '<init>', '(?:<\\?xml.*\\?>\\s*)?(?:<!DOCTYPE.*>)?(?:<!--.*-->)?\\<[_\\:a-zA-ZÀ-ÖØ-öø-˿Ͱ-ͽͿ-\u1fff\u200c-\u200d⁰-\u218fⰀ-\u2fef、-\ud7ff豈-\ufdcfﷰ-�](?:[·\\.\\-0-9̀-ͯ‿-⁀])*.*(?:[_\\:a-zA-ZÀ-ÖØ-öø-˿Ͱ-ͽͿ-\u1fff\u200c-\u200d⁰-\u218fⰀ-\u2fef、-\ud7ff豈-\ufdcfﷰ-�](?:[·\\.\\-0-9̀-ͯ‿-⁀])*|/)\\>', '<?xmlversion=""1.0""encoding=""UTF-8""?><?xml-stylesheethref=\'requs.xsl\'type=\'text/xsl\'?><spec><files><fileid=""0""line=""1"">/tmp/junit6135137912157695896/junit6933773851868817004/employee.req</file></files><input>Employeeisa""userofthesystem"".</input><types><type><name>Employee</name><mentioned><where>1</where></mentioned><info><informal>userofthesystem</informal></info><diagrams><diagram><uml>lefttorightdirectionhideclasscircletitleEmployee:ClassDiagramclassEmployee{}</uml><svg>&lt;svgxmlns=""http://www.w3.org/2000/svg""xmlns:xlink=""http://www.w3.org/1999/xlink""height=""72pt""style=""width:190px;height:72px;""version=""1.1""viewBox=""0019072""width=""190pt""&gt;&lt;defs&gt;&lt;filterheight=""300%""id=""f1""width=""300%""x=""-1""y=""-1""&gt;&lt;feGaussianBlurresult=""blurOut""stdDeviation=""2.0""/&gt;&lt;feColorMatrixin=""blurOut""result=""blurOut2""type=""matrix""values=""000000000000000000.40""/&gt;&lt;feOffsetdx=""4.0""dy=""4.0""in=""blurOut2""result=""blurOut3""/&gt;&lt;feBlendin=""SourceGraphic""in2=""blurOut3""mode=""normal""/&gt;&lt;/filter&gt;&lt;/defs&gt;&lt;g&gt;&lt;textfill=""#000000""font-family=""sans-serif""font-size=""13""font-weight=""bold""lengthAdjust=""spacingAndGlyphs""textLength=""189""x=""0""y=""12.0669""&gt;Employee:ClassDiagram&lt;/text&gt;&lt;rectfill=""#FEFECE""filter=""url(#f1)""height=""39.9688""style=""stroke:#A80036;stroke-width:1.5;""width=""66""x=""55.5""y=""23.1328""/&gt;&lt;textfill=""#000000""font-family=""sans-serif""font-size=""12""lengthAdjust=""spacingAndGlyphs""textLength=""60""x=""58.5""y=""39.2715""&gt;Employee&lt;/text&gt;&lt;linestyle=""stroke:#A80036;stroke-width:1.5;""x1=""56.5""x2=""120.5""y1=""47.1016""y2=""47.1016""/&gt;&lt;linestyle=""stroke:#A80036;stroke-width:1.5;""x1=""56.5""x2=""120.5""y1=""55.1016""y2=""55.1016""/&gt;&lt;/g&gt;&lt;/svg&gt;</svg></diagram></diagrams></type></types><errors><errorline=""1""pos=""0""type=""seal"">Type""Employee""isnotusedinanyslotorausecase</error></errors><metrics><metricid=""ambiguity.total"">0</metric></metrics><tbds/></spec>')","[69466, 69530, 69593, 69657, 69720, 69822]"
"('Scanner.java', 'java.util.Scanner', 'getCompleteTokenInBuffer', '(?s).*', '<?xml version=""1.0""?>\n<xsl:stylesheet xmlns:xsl=""http://www.w3.org/1999/XSL/Transform"" xmlns:xs=""http://www.w3.org/2001/XMLSchema"" version=""2.0"" exclude-result-prefixes=""xs"">\n    <xsl:output method=""xml"" cdata-section-elements=""svg html""/>\n    <xsl:strip-space elements=""*""/>\n    <xsl:template match=""/spec/errors"">\n        <xsl:copy>\n            <xsl:apply-templates select=""error""/>\n            <xsl:for-each select=""//step[signature=\'creates\' and result]"">\n                <xsl:variable name=""binding"" select=""result""/>\n                <xsl:variable name=""type"" select=""ancestor::method/bindings/binding[name=$binding]/type""/>\n                <xsl:if test=""/spec/types/type[name=$type and actor=\'true\']"">\n                    <error type=""semantic"" pos=""0"">\n                        <xsl:attribute name=""line"">\n                            <xsl:value-of select=""mentioned/where[1]""/>\n                        </xsl:attribute>\n                        <xsl:text>&quot;</xsl:text>\n                        <xsl:value-of select=""$type/name""/>\n                        <xsl:text>&quot; can\'t be created in step &quot;</xsl:text>\n                        <xsl:value-of select=""number""/>\n                        <xsl:text>&quot; because it is an actor</xsl:text>\n                    </error>\n                </xsl:if>\n            </xsl:for-each>\n        </xsl:copy>\n    </xsl:template>\n    <xsl:template match=""node()|@*"">\n        <xsl:copy>\n            <xsl:apply-templates select=""node()|@*""/>\n        </xsl:copy>\n    </xsl:template>\n</xsl:stylesheet>\n')",[6885]
"('CommandMultilines.java', 'net.sourceforge.plantuml.command.CommandMultilines', 'isValid', '(?i)^(?:(left|right|center)?[\\s\xa0]*)header$', 'left to right directio')",[31722]
"('CommandMultilines.java', 'net.sourceforge.plantuml.command.CommandMultilines', 'isValid', ""(?i)^[\\s\xa0]*/['‘’].*$"", 'left to rght direction')",[23865]
"('CommandMultilines.java', 'net.sourceforge.plantuml.command.CommandMultilines', 'isValid', '(?i)^(?:(left|right|center)?[\\s\xa0]*)footer$', 'left to right directio')",[31625]
"('CommandMultilines.java', 'net.sourceforge.plantuml.command.CommandMultilines', 'isValid', '(?i)^(?:(left|right|center)?[\\s\xa0]*)footer$', 'left to right driection')",[37445]
"('CommandMultilines.java', 'net.sourceforge.plantuml.command.CommandMultilines', 'isValid', '(?i)^title$', 'skinparam sequenceTitleFontStyle bold')","[12262, 12634, 17002, 17384, 17764, 50815, 51187]"
"('CommandMultilines.java', 'net.sourceforge.plantuml.command.CommandMultilines', 'isValid', ""(?i)^[\\s\xa0]*/['‘’].*$"", 'left to right directon')",[30267]
"('DomParser.java', 'com.jcabi.xml.DomParser', '<init>', '(?:<\\?xml.*\\?>\\s*)?(?:<!DOCTYPE.*>)?(?:<!--.*-->)?\\<[_\\:a-zA-ZÀ-ÖØ-öø-˿Ͱ-ͽͿ-\u1fff\u200c-\u200d⁰-\u218fⰀ-\u2fef、-\ud7ff豈-\ufdcfﷰ-�](?:[·\\.\\-0-9̀-ͯ‿-⁀])*.*(?:[_\\:a-zA-ZÀ-ÖØ-öø-˿Ͱ-ͽͿ-\u1fff\u200c-\u200d⁰-\u218fⰀ-\u2fef、-\ud7ff豈-\ufdcfﷰ-�](?:[·\\.\\-0-9̀-ͯ‿-⁀])*|/)\\>', '<?xmlversion=""1.0""encoding=""UTF-8""?><?xml-stylesheethref=\'requs.xsl\'type=\'text/xsl\'?><spec><files><fileid=""0""line=""1"">/tmp/junit6135137912157695896/junit6933773851868817004/employee.req</file></files><input>Employeeisa""userofthesystem"".</input><types><type><name>Employee</name><mentioned><where>1</where></mentioned><info><informal>userofthesystem</informal></info></type></types><errors><errorline=""1""pos=""0""type=""seal"">Type""Employee""isnotusedinanyslotorausecase</error></errors><metrics><metricid=""ambiguity.total"">0</metric></metrics><tbds/></spec>')","[8782, 9215, 9659]"
"('CommandMultilines.java', 'net.sourceforge.plantuml.command.CommandMultilines', 'isValid', '(?i)^(?:(left|right|center)?[\\s\xa0]*)header$', 'left to right direcion')",[29976]
"('CommandMultilines.java', 'net.sourceforge.plantuml.command.CommandMultilines', 'isValid', '(?i)^(?:(left|right|center)?[\\s\xa0]*)footer$', 'left to  right direction')","[46175, 46757]"
"('CommandMultilines.java', 'net.sourceforge.plantuml.command.CommandMultilines', 'isValid', '(?i)^(?:(left|right|center)?[\\s\xa0]*)footer$', 'skinparam titleFontStyle bold')","[10867, 11239, 14810, 15191, 15571, 49420, 49792]"
"('DomParser.java', 'com.jcabi.xml.DomParser', '<init>', '(?:<\\?xml.*\\?>\\s*)?(?:<!DOCTYPE.*>)?(?:<!--.*-->)?\\<[_\\:a-zA-ZÀ-ÖØ-öø-˿Ͱ-ͽͿ-\u1fff\u200c-\u200d⁰-\u218fⰀ-\u2fef、-\ud7ff豈-\ufdcfﷰ-�](?:[·\\.\\-0-9̀-ͯ‿-⁀])*.*(?:[_\\:a-zA-ZÀ-ÖØ-öø-˿Ͱ-ͽͿ-\u1fff\u200c-\u200d⁰-\u218fⰀ-\u2fef、-\ud7ff豈-\ufdcfﷰ-�](?:[·\\.\\-0-9̀-ͯ‿-⁀])*|/)\\>', '<?xmlversion=""1.0""encoding=""UTF-8""?><?xml-stylesheethref=\'requs.xsl\'type=\'text/xsl\'?><spectime=""2018-01-13T01:04:16""><files><fileid=""0""line=""1"">/tmp/junit6135137912157695896/junit6933773851868817004/employee.req</file></files><input>Employeeisa""userofthesystem"".</input><types><type><name>Employee</name><mentioned><where>1</where></mentioned><info><informal>userofthesystem</informal></info><diagrams><diagram><uml>lefttorightdirectionhideclasscircletitleEmployee:ClassDiagramclassEmployee{}</uml><svg>&lt;svgxmlns=""http://www.w3.org/2000/svg""xmlns:xlink=""http://www.w3.org/1999/xlink""height=""72pt""style=""width:190px;height:72px;""version=""1.1""viewBox=""0019072""width=""190pt""&gt;&lt;defs&gt;&lt;filterheight=""300%""id=""f1""width=""300%""x=""-1""y=""-1""&gt;&lt;feGaussianBlurresult=""blurOut""stdDeviation=""2.0""/&gt;&lt;feColorMatrixin=""blurOut""result=""blurOut2""type=""matrix""values=""000000000000000000.40""/&gt;&lt;feOffsetdx=""4.0""dy=""4.0""in=""blurOut2""result=""blurOut3""/&gt;&lt;feBlendin=""SourceGraphic""in2=""blurOut3""mode=""normal""/&gt;&lt;/filter&gt;&lt;/defs&gt;&lt;g&gt;&lt;textfill=""#000000""font-family=""sans-serif""font-size=""13""font-weight=""bold""lengthAdjust=""spacingAndGlyphs""textLength=""189""x=""0""y=""12.0669""&gt;Employee:ClassDiagram&lt;/text&gt;&lt;rectfill=""#FEFECE""filter=""url(#f1)""height=""39.9688""style=""stroke:#A80036;stroke-width:1.5;""width=""66""x=""55.5""y=""23.1328""/&gt;&lt;textfill=""#000000""font-family=""sans-serif""font-size=""12""lengthAdjust=""spacingAndGlyphs""textLength=""60""x=""58.5""y=""39.2715""&gt;Employee&lt;/text&gt;&lt;linestyle=""stroke:#A80036;stroke-width:1.5;""x1=""56.5""x2=""120.5""y1=""47.1016""y2=""47.1016""/&gt;&lt;linestyle=""stroke:#A80036;stroke-width:1.5;""x1=""56.5""x2=""120.5""y1=""55.1016""y2=""55.1016""/&gt;&lt;/g&gt;&lt;/svg&gt;</svg></diagram></diagrams></type></types><errors><errorline=""1""pos=""0""type=""seal"">Type""Employee""isnotusedinanyslotorausecase</error></errors><metrics><metricid=""ambiguity.total"">0</metric></metrics><tbds/><requs><version>1.0-SNAPSHOT</version><revision>1a2b3e4f</revision><date>1-Jan-2017</date></requs></spec>')",[70088]
"('HtmlColorUtils.java', 'net.sourceforge.plantuml.graphic.HtmlColorUtils', 'build', '[0-9A-Fa-f]{6}', 'ffff44')","[67377, 67474]"
"('CommandMultilines.java', 'net.sourceforge.plantuml.command.CommandMultilines', 'isValid', '(?i)^title$', 'left ot right direction')",[33856]
"('Scanner.java', 'java.util.Scanner', 'getCompleteTokenInBuffer', '(?s).*', '<?xml version=""1.0""?>\n<xsl:stylesheet xmlns:xsl=""http://www.w3.org/1999/XSL/Transform"" xmlns:xs=""http://www.w3.org/2001/XMLSchema"" version=""2.0"" exclude-result-prefixes=""xs"">\n    <xsl:output method=""xml"" cdata-section-elements=""svg html""/>\n    <xsl:strip-space elements=""*"" />\n    <xsl:template match=""errors"">\n        <xsl:copy>\n            <xsl:apply-templates select=""node()|@*""/>\n            <xsl:for-each select=""//step[empty(object/text())]"">\n                <error type=""lost"" pos=""0"">\n                    <xsl:attribute name=""line"">\n                        <xsl:value-of select=""mentioned/where[1]""/>\n                    </xsl:attribute>\n                    <xsl:text>step </xsl:text>\n                    <xsl:value-of select=""number""/>\n                    <xsl:text> doesn\'t have an object</xsl:text>\n                </error>\n            </xsl:for-each>\n        </xsl:copy>\n    </xsl:template>\n    <xsl:template match=""step[empty(object/text())]"">\n        <xsl:copy>\n            <xsl:apply-templates select=""(node() except object)|@*""/>\n            <object>_self</object>\n        </xsl:copy>\n    </xsl:template>\n    <xsl:template match=""node()|@*"">\n        <xsl:copy>\n            <xsl:apply-templates select=""node()|@*""/>\n        </xsl:copy>\n    </xsl:template>\n</xsl:stylesheet>\n')",[3417]
"('CommandMultilines.java', 'net.sourceforge.plantuml.command.CommandMultilines', 'isValid', ""(?i)^[\\s\xa0]*/['‘’].*$"", 'left t right direction')",[22119]
"('CommandMultilines.java', 'net.sourceforge.plantuml.command.CommandMultilines', 'isValid', '(?i)^title$', 'class Employee {')","[53605, 54072, 54636]"
"('HtmlColorUtils.java', 'net.sourceforge.plantuml.graphic.HtmlColorUtils', 'isValid', '[0-9A-Fa-f]{6}', 'fbfb77')","[62892, 62989]"
"('CommandMultilines.java', 'net.sourceforge.plantuml.command.CommandMultilines', 'isValid', '(?i)^(?:(left|right|center)?[\\s\xa0]*)header$', 'lfet to right direction')",[32886]
"('CommandMultilinesBracket.java', 'net.sourceforge.plantuml.command.CommandMultilinesBracket', 'isValid', '(?i)^skinparam[\\s\xa0]*(?:[\\s\xa0]+([\\w.]*(?:\\<\\<.*\\>\\>)?[\\w.]*))?[\\s\xa0]*\\{$', 'class Employee {')","[53884, 54354, 54918]"
"('CommandMultilines.java', 'net.sourceforge.plantuml.command.CommandMultilines', 'isValid', ""(?i)^[\\s\xa0]*/['‘’].*$"", 'left to right directin')",[30849]
"('CommandMultilines.java', 'net.sourceforge.plantuml.command.CommandMultilines', 'isValid', '(?i)^ref(#\\w+)?[\\s\xa0]+over[\\s\xa0]+((?:[\\p{L}0-9_.@]+|[""“”«»][^""“”«»]+[""“”«»])(?:[\\s\xa0]*,[\\s\xa0]*(?:[\\p{L}0-9_.@]+|[""“”«»][^""“”«»]+[""“”«»]))*)[\\s\xa0]*(#\\w+)?$', 'left to right  direction')","[47630, 48212]"
"('CommandMultilines.java', 'net.sourceforge.plantuml.command.CommandMultilines', 'isValid', '(?i)^ref(#\\w+)?[\\s\xa0]+over[\\s\xa0]+((?:[\\p{L}0-9_.@]+|[""“”«»][^""“”«»]+[""“”«»])(?:[\\s\xa0]*,[\\s\xa0]*(?:[\\p{L}0-9_.@]+|[""“”«»][^""“”«»]+[""“”«»]))*)[\\s\xa0]*(#\\w+)?$', 'lft to right direction')",[19694]
"('CommandMultilines.java', 'net.sourceforge.plantuml.command.CommandMultilines', 'isValid', '(?i)^(?:(left|right|center)?[\\s\xa0]*)header$', 'left to rght direction')",[24156]
"('CommandMultilinesBracket.java', 'net.sourceforge.plantuml.command.CommandMultilinesBracket', 'isValid', '(?i)^skinparam[\\s\xa0]*(?:[\\s\xa0]+([\\w.]*(?:\\<\\<.*\\>\\>)?[\\w.]*))?[\\s\xa0]*\\{$', 'lef to right direction')",[20761]
"('Scanner.java', 'java.util.Scanner', 'getCompleteTokenInBuffer', '(?s).*', '<?xml version=""1.0""?>\n<xsl:stylesheet xmlns:xsl=""http://www.w3.org/1999/XSL/Transform"" xmlns:xs=""http://www.w3.org/2001/XMLSchema"" version=""2.0"" exclude-result-prefixes=""xs"">\n    <xsl:output method=""xml"" cdata-section-elements=""svg html""/>\n    <xsl:strip-space elements=""*"" />\n    <xsl:template match=""errors"">\n        <xsl:copy>\n            <xsl:apply-templates select=""node()|@*""/>\n            <xsl:for-each select=""//method[not(signature) and not(object)]"">\n                <error type=""lost"" pos=""0"">\n                    <xsl:attribute name=""line"">\n                        <xsl:value-of select=""mentioned/where""/>\n                    </xsl:attribute>\n                    <xsl:text>method </xsl:text>\n                    <xsl:value-of select=""id""/>\n                    <xsl:text> was mentioned by never declared</xsl:text>\n                </error>\n            </xsl:for-each>\n            <xsl:for-each select=""//method[not(signature)]"">\n                <error type=""lost"" pos=""0"">\n                    <xsl:attribute name=""line"">\n                        <xsl:value-of select=""mentioned/where""/>\n                    </xsl:attribute>\n                    <xsl:text>method </xsl:text>\n                    <xsl:value-of select=""id""/>\n                    <xsl:text> doesn\'t have a signature</xsl:text>\n                </error>\n            </xsl:for-each>\n        </xsl:copy>\n    </xsl:template>\n    <xsl:template match=""method[not(signature) and not(object)]"">\n        <xsl:copy>\n            <xsl:apply-templates select=""node()|@*""/>\n            <signature>""undefined""</signature>\n            <object>_self</object>\n        </xsl:copy>\n    </xsl:template>\n    <xsl:template match=""method[object and not(signature)]"">\n        <xsl:copy>\n            <xsl:apply-templates select=""node()|@*""/>\n            <signature>""undefined""</signature>\n        </xsl:copy>\n    </xsl:template>\n    <xsl:template match=""node()|@*"">\n        <xsl:copy>\n            <xsl:apply-templates select=""node()|@*""/>\n        </xsl:copy>\n    </xsl:template>\n</xsl:stylesheet>\n')",[2378]
"('Scanner.java', 'java.util.Scanner', 'getCompleteTokenInBuffer', '(?s).*', '<?xml version=""1.0""?>\n<xsl:stylesheet xmlns:xsl=""http://www.w3.org/1999/XSL/Transform"" xmlns:xs=""http://www.w3.org/2001/XMLSchema"" version=""2.0"" exclude-result-prefixes=""xs"">\n    <xsl:output method=""xml"" cdata-section-elements=""svg html""/>\n    <xsl:strip-space elements=""*""/>\n    <xsl:template match=""/spec/errors"">\n        <xsl:copy>\n            <xsl:apply-templates select=""error""/>\n            <xsl:for-each select=""//exception[steps/step[position()=last() and signature!=\'fail\']]"">\n                <xsl:variable name=""step"" select=""steps/step[last()]""/>\n                <error type=""semantic"" pos=""0"">\n                    <xsl:attribute name=""line"">\n                        <xsl:value-of select=""$step/mentioned/where[1]""/>\n                    </xsl:attribute>\n                    <xsl:text>Step &quot;</xsl:text>\n                    <xsl:value-of select=""$step/number""/>\n                    <xsl:text>&quot; of alternative flow of &quot;</xsl:text>\n                    <xsl:value-of select=""../../../../id""/>\n                    <xsl:text>/</xsl:text>\n                    <xsl:value-of select=""../../number""/>\n                    <xsl:text>&quot; must throw an exception</xsl:text>\n                </error>\n            </xsl:for-each>\n        </xsl:copy>\n    </xsl:template>\n    <xsl:template match=""node()|@*"">\n        <xsl:copy>\n            <xsl:apply-templates select=""node()|@*""/>\n        </xsl:copy>\n    </xsl:template>\n</xsl:stylesheet>\n')",[5268]
"('Replace.java', 'net.sf.saxon.functions.Replace', 'maybePrecompile', '[\\n\\r\\t\\x20]+', '')","[8671, 9104, 9548]"
"('CommandMultilines.java', 'net.sourceforge.plantuml.command.CommandMultilines', 'isValid', '(?i)^ref(#\\w+)?[\\s\xa0]+over[\\s\xa0]+((?:[\\p{L}0-9_.@]+|[""“”«»][^""“”«»]+[""“”«»])(?:[\\s\xa0]*,[\\s\xa0]*(?:[\\p{L}0-9_.@]+|[""“”«»][^""“”«»]+[""“”«»]))*)[\\s\xa0]*(#\\w+)?$', 'elft to right direction')",[32498]
"('HtmlColorUtils.java', 'net.sourceforge.plantuml.graphic.HtmlColorUtils', 'isValid', '[0-9A-Fa-f]{6}', 'fefece')","[58842, 58945]"
"('CommandMultilines.java', 'net.sourceforge.plantuml.command.CommandMultilines', 'isValid', '(?i)^ref(#\\w+)?[\\s\xa0]+over[\\s\xa0]+((?:[\\p{L}0-9_.@]+|[""“”«»][^""“”«»]+[""“”«»])(?:[\\s\xa0]*,[\\s\xa0]*(?:[\\p{L}0-9_.@]+|[""“”«»][^""“”«»]+[""“”«»]))*)[\\s\xa0]*(#\\w+)?$', 'left ot right direction')",[34244]
"('Scanner.java', 'java.util.Scanner', 'getCompleteTokenInBuffer', '(?s).*', '<?xml version=""1.0""?>\n<xsl:stylesheet xmlns:xsl=""http://www.w3.org/1999/XSL/Transform"" xmlns:xs=""http://www.w3.org/2001/XMLSchema"" version=""2.0"" exclude-result-prefixes=""xs"">\n    <xsl:output method=""xml"" cdata-section-elements=""svg html""/>\n    <xsl:strip-space elements=""*""/>\n    <xsl:template match=""/spec/errors"">\n        <xsl:copy>\n            <xsl:apply-templates select=""error""/>\n            <xsl:for-each select=""//exception/steps[count(step) = 1 and step/signature=\'fail\']"">\n                <error type=""semantic"" pos=""0"">\n                    <xsl:attribute name=""line"">\n                        <xsl:value-of select=""step[1]/mentioned/where[1]""/>\n                    </xsl:attribute>\n                    <xsl:text>Exception flow of </xsl:text>\n                    <xsl:value-of select=""../../../../../id""/>\n                    <xsl:text>/</xsl:text>\n                    <xsl:value-of select=""../../../number""/>\n                    <xsl:text> simply re-throws an exception, it is pointless</xsl:text>\n                </error>\n            </xsl:for-each>\n        </xsl:copy>\n    </xsl:template>\n    <xsl:template match=""node()|@*"">\n        <xsl:copy>\n            <xsl:apply-templates select=""node()|@*""/>\n        </xsl:copy>\n    </xsl:template>\n</xsl:stylesheet>\n')",[6251]
"('CommandMultilines.java', 'net.sourceforge.plantuml.command.CommandMultilines', 'isValid', '(?i)^(?:(left|right|center)?[\\s\xa0]*)footer$', 'left to irght direction')",[34535]
"('CommandMultilines.java', 'net.sourceforge.plantuml.command.CommandMultilines', 'isValid', '(?i)^ref(#\\w+)?[\\s\xa0]+over[\\s\xa0]+((?:[\\p{L}0-9_.@]+|[""“”«»][^""“”«»]+[""“”«»])(?:[\\s\xa0]*,[\\s\xa0]*(?:[\\p{L}0-9_.@]+|[""“”«»][^""“”«»]+[""“”«»]))*)[\\s\xa0]*(#\\w+)?$', 'left to right directino')",[41228]
"('CommandMultilines.java', 'net.sourceforge.plantuml.command.CommandMultilines', 'isValid', '(?i)^(?:(left|right|center)?[\\s\xa0]*)header$', 'left o right direction')",[21828]
"('CommandMultilinesBracket.java', 'net.sourceforge.plantuml.command.CommandMultilinesBracket', 'isValid', '(?i)^skinparam[\\s\xa0]*(?:[\\s\xa0]+([\\w.]*(?:\\<\\<.*\\>\\>)?[\\w.]*))?[\\s\xa0]*\\{$', 'left to right direcion')",[30073]
"('CommandMultilines.java', 'net.sourceforge.plantuml.command.CommandMultilines', 'isValid', '(?i)^ref(#\\w+)?[\\s\xa0]+over[\\s\xa0]+((?:[\\p{L}0-9_.@]+|[""“”«»][^""“”«»]+[""“”«»])(?:[\\s\xa0]*,[\\s\xa0]*(?:[\\p{L}0-9_.@]+|[""“”«»][^""“”«»]+[""“”«»]))*)[\\s\xa0]*(#\\w+)?$', 'left o right direction')",[22022]
"('HtmlColorUtils.java', 'net.sourceforge.plantuml.graphic.HtmlColorUtils', 'build', '[0-9A-Fa-f]{6}', 'fbfb77')","[63087, 63184]"
"('CommandMultilines.java', 'net.sourceforge.plantuml.command.CommandMultilines', 'isValid', ""(?i)^[\\s\xa0]*/['‘’].*$"", 'letf to right direction')",[33177]
"('DomParser.java', 'com.jcabi.xml.DomParser', '<init>', '(?:<\\?xml.*\\?>\\s*)?(?:<!DOCTYPE.*>)?(?:<!--.*-->)?\\<[_\\:a-zA-ZÀ-ÖØ-öø-˿Ͱ-ͽͿ-\u1fff\u200c-\u200d⁰-\u218fⰀ-\u2fef、-\ud7ff豈-\ufdcfﷰ-�](?:[·\\.\\-0-9̀-ͯ‿-⁀])*.*(?:[_\\:a-zA-ZÀ-ÖØ-öø-˿Ͱ-ͽͿ-\u1fff\u200c-\u200d⁰-\u218fⰀ-\u2fef、-\ud7ff豈-\ufdcfﷰ-�](?:[·\\.\\-0-9̀-ͯ‿-⁀])*|/)\\>', '<?xmlversion=""1.0""encoding=""UTF-8""?><?xml-stylesheethref=\'requs.xsl\'type=\'text/xsl\'?><specmsec=""2913""time=""2018-01-13T01:04:16""><files><fileid=""0""line=""1"">/tmp/junit6135137912157695896/junit6933773851868817004/employee.req</file></files><input>Employeeisa""userofthesystem"".</input><types><type><name>Employee</name><mentioned><where>0:1</where></mentioned><info><informal>userofthesystem</informal></info><diagrams><diagram><uml>lefttorightdirectionhideclasscircletitleEmployee:ClassDiagramclassEmployee{}</uml><svg>&lt;svgxmlns=""http://www.w3.org/2000/svg""xmlns:xlink=""http://www.w3.org/1999/xlink""height=""72pt""style=""width:190px;height:72px;""version=""1.1""viewBox=""0019072""width=""190pt""&gt;&lt;defs&gt;&lt;filterheight=""300%""id=""f1""width=""300%""x=""-1""y=""-1""&gt;&lt;feGaussianBlurresult=""blurOut""stdDeviation=""2.0""/&gt;&lt;feColorMatrixin=""blurOut""result=""blurOut2""type=""matrix""values=""000000000000000000.40""/&gt;&lt;feOffsetdx=""4.0""dy=""4.0""in=""blurOut2""result=""blurOut3""/&gt;&lt;feBlendin=""SourceGraphic""in2=""blurOut3""mode=""normal""/&gt;&lt;/filter&gt;&lt;/defs&gt;&lt;g&gt;&lt;textfill=""#000000""font-family=""sans-serif""font-size=""13""font-weight=""bold""lengthAdjust=""spacingAndGlyphs""textLength=""189""x=""0""y=""12.0669""&gt;Employee:ClassDiagram&lt;/text&gt;&lt;rectfill=""#FEFECE""filter=""url(#f1)""height=""39.9688""style=""stroke:#A80036;stroke-width:1.5;""width=""66""x=""55.5""y=""23.1328""/&gt;&lt;textfill=""#000000""font-family=""sans-serif""font-size=""12""lengthAdjust=""spacingAndGlyphs""textLength=""60""x=""58.5""y=""39.2715""&gt;Employee&lt;/text&gt;&lt;linestyle=""stroke:#A80036;stroke-width:1.5;""x1=""56.5""x2=""120.5""y1=""47.1016""y2=""47.1016""/&gt;&lt;linestyle=""stroke:#A80036;stroke-width:1.5;""x1=""56.5""x2=""120.5""y1=""55.1016""y2=""55.1016""/&gt;&lt;/g&gt;&lt;/svg&gt;</svg></diagram></diagrams></type></types><errors><errorfile=""0""line=""1""pos=""0""type=""seal"">Type""Employee""isnotusedinanyslotorausecase</error></errors><metrics><metricid=""ambiguity.total"">0</metric></metrics><tbds/><requs><version>1.0-SNAPSHOT</version><revision>1a2b3e4f</revision><date>1-Jan-2017</date></requs></spec>')","[70233, 70263, 70299, 70346, 70394, 70441]"
"('CommandMultilines.java', 'net.sourceforge.plantuml.command.CommandMultilines', 'isValid', '(?i)^(?:(left|right|center)?[\\s\xa0]*)footer$', 'left to rgiht direction')",[35117]
"('CommandMultilines.java', 'net.sourceforge.plantuml.command.CommandMultilines', 'isValid', ""(?i)^[\\s\xa0]*/['‘’].*$"", 'left to right dircetion')",[38415]
"('Scanner.java', 'java.util.Scanner', 'getCompleteTokenInBuffer', '(?s).*', '<?xml version=""1.0""?>\n<xsl:stylesheet xmlns:xsl=""http://www.w3.org/1999/XSL/Transform"" xmlns:xs=""http://www.w3.org/2001/XMLSchema"" version=""2.0"" exclude-result-prefixes=""xs"">\n    <xsl:output method=""xml"" cdata-section-elements=""svg html""/>\n    <xsl:strip-space elements=""*"" />\n    <xsl:template match=""errors"">\n        <xsl:copy>\n            <xsl:apply-templates select=""node()|@*""/>\n            <xsl:for-each select=""//method[bindings/binding[empty(name/text())]]"">\n                <error type=""lost"" pos=""0"">\n                    <xsl:attribute name=""line"">\n                        <xsl:value-of select=""mentioned/where[1]""/>\n                    </xsl:attribute>\n                    <xsl:text>method </xsl:text>\n                    <xsl:value-of select=""id""/>\n                    <xsl:text> has incorrect binding</xsl:text>\n                </error>\n            </xsl:for-each>\n        </xsl:copy>\n    </xsl:template>\n    <xsl:template match=""binding[empty(name/text())]"">\n        <!-- nothing -->\n    </xsl:template>\n    <xsl:template match=""node()|@*"">\n        <xsl:copy>\n            <xsl:apply-templates select=""node()|@*""/>\n        </xsl:copy>\n    </xsl:template>\n</xsl:stylesheet>\n')",[4019]
"('CommandMultilines.java', 'net.sourceforge.plantuml.command.CommandMultilines', 'isValid', '(?i)^ref(#\\w+)?[\\s\xa0]+over[\\s\xa0]+((?:[\\p{L}0-9_.@]+|[""“”«»][^""“”«»]+[""“”«»])(?:[\\s\xa0]*,[\\s\xa0]*(?:[\\p{L}0-9_.@]+|[""“”«»][^""“”«»]+[""“”«»]))*)[\\s\xa0]*(#\\w+)?$', 'leftto right direction')",[21440]
"('CommandMultilines.java', 'net.sourceforge.plantuml.command.CommandMultilines', 'isValid', '(?i)^(?:(left|right|center)?[\\s\xa0]*)footer$', 'left to right- direction')",[43847]
"('CommandMultilinesBracket.java', 'net.sourceforge.plantuml.command.CommandMultilinesBracket', 'isValid', '(?i)^skinparam[\\s\xa0]*(?:[\\s\xa0]+([\\w.]*(?:\\<\\<.*\\>\\>)?[\\w.]*))?[\\s\xa0]*\\{$', 'left to  right direction')","[46369, 46951]"
"('CommandMultilines.java', 'net.sourceforge.plantuml.command.CommandMultilines', 'isValid', ""(?i)^[\\s\xa0]*/['‘’].*$"", 'left to rihgt direction')",[35505]
"('CommandMultilines.java', 'net.sourceforge.plantuml.command.CommandMultilines', 'isValid', ""(?i)^[\\s\xa0]*/['‘’].*$"", 'skinparam sequenceTitleFontStyle bold')","[12169, 12541, 16906, 17289, 17669, 50722, 51094]"
"('CommandMultilines.java', 'net.sourceforge.plantuml.command.CommandMultilines', 'isValid', ""(?i)^[\\s\xa0]*/['‘’].*$"", 'left to right diretion')",[29103]
"('Scanner.java', 'java.util.Scanner', 'getCompleteTokenInBuffer', '(?s).*', '<?xml version=""1.0""?>\n<xsl:stylesheet xmlns:xsl=""http://www.w3.org/1999/XSL/Transform""\n    xmlns:xs=""http://www.w3.org/2001/XMLSchema""\n    xmlns:re=""http://www.requs.org""\n    xmlns:r=""org.requs.facet.uml.Plant"" version=""2.0""\n    exclude-result-prefixes=""xs r re"">\n    <xsl:import href=""uml/functions.xsl""/>\n    <xsl:output method=""xml"" cdata-section-elements=""svg html""/>\n    <xsl:strip-space elements=""*""/>\n    <xsl:template match=""method"">\n        <xsl:copy>\n            <xsl:apply-templates select=""(node() except diagrams)|@*""/>\n            <xsl:variable name=""uml"">\n                <xsl:text>hide footbox&#10;</xsl:text>\n                <xsl:text>title </xsl:text>\n                <xsl:value-of select=""id""/>\n                <xsl:text>: Sequence Diagram&#10;</xsl:text>\n                <xsl:apply-templates select=""."" mode=""uml""/>\n            </xsl:variable>\n            <diagrams>\n                <xsl:apply-templates select=""diagrams/*""/>\n                <diagram>\n                    <uml>\n                        <xsl:value-of select=""$uml""/>\n                    </uml>\n                    <svg>\n                        <xsl:value-of select=""r:svg(re:plant($uml))""/>\n                    </svg>\n                </diagram>\n            </diagrams>\n        </xsl:copy>\n    </xsl:template>\n    <xsl:template match=""method"" mode=""uml"">\n        <xsl:for-each select=""bindings/binding[not(starts-with(name, \'_\'))]"">\n            <xsl:variable name=""type"" select=""type""/>\n            <xsl:choose>\n                <xsl:when test=""/spec/types/type[name=$type and actor=\'true\']"">\n                    <xsl:text>actor</xsl:text>\n                </xsl:when>\n                <xsl:otherwise>\n                    <xsl:text>participant</xsl:text>\n                </xsl:otherwise>\n            </xsl:choose>\n            <xsl:text> &quot;</xsl:text>\n            <xsl:value-of select=""name""/>\n            <xsl:text>&quot; as </xsl:text>\n            <xsl:value-of select=""name""/>\n            <xsl:text>&#10;</xsl:text>\n        </xsl:for-each>\n        <xsl:for-each select=""steps/step"">\n            <xsl:value-of select=""object""/>\n            <xsl:text> -&gt; </xsl:text>\n            <xsl:choose>\n                <xsl:when test=""result"">\n                    <xsl:value-of select=""result""/>\n                </xsl:when>\n                <xsl:otherwise>\n                    <xsl:value-of select=""object""/>\n                </xsl:otherwise>\n            </xsl:choose>\n            <xsl:text> : </xsl:text>\n            <xsl:value-of select=""re:signature(signature)""/>\n            <xsl:text>&#10;</xsl:text>\n        </xsl:for-each>\n    </xsl:template>\n    <xsl:template match=""node()|@*"">\n        <xsl:copy>\n            <xsl:apply-templates select=""node()|@*""/>\n        </xsl:copy>\n    </xsl:template>\n</xsl:stylesheet>\n')",[8460]
"('CommandMultilines.java', 'net.sourceforge.plantuml.command.CommandMultilines', 'isValid', '(?i)^(?:(left|right|center)?[\\s\xa0]*)header$', 'elft to right direction')",[32304]
"('Scanner.java', 'java.util.Scanner', 'getCompleteTokenInBuffer', '(?s).*', '<?xml version=""1.0""?>\n<xsl:stylesheet xmlns:xsl=""http://www.w3.org/1999/XSL/Transform"" xmlns:xs=""http://www.w3.org/2001/XMLSchema"" version=""2.0"" exclude-result-prefixes=""xs"">\n    <xsl:output method=""xml"" cdata-section-elements=""svg html""/>\n    <xsl:strip-space elements=""*""/>\n    <xsl:template match=""/spec/errors"">\n        <xsl:copy>\n            <xsl:apply-templates select=""error""/>\n            <xsl:for-each select=""//steps[count(step) &gt; 8]"">\n                <error type=""semantic"" pos=""0"">\n                    <xsl:attribute name=""line"">\n                        <xsl:value-of select=""step[1]/mentioned/where[1]""/>\n                    </xsl:attribute>\n                    <xsl:text>There are more than eight steps, the flow is difficult to understand</xsl:text>\n                </error>\n            </xsl:for-each>\n        </xsl:copy>\n    </xsl:template>\n    <xsl:template match=""node()|@*"">\n        <xsl:copy>\n            <xsl:apply-templates select=""node()|@*""/>\n        </xsl:copy>\n    </xsl:template>\n</xsl:stylesheet>\n')",[6053]
"('CommandMultilines.java', 'net.sourceforge.plantuml.command.CommandMultilines', 'isValid', ""(?i)^[\\s\xa0]*/['‘’].*$"", 'hide class circle')","[52396, 52861]"
"('CommandMultilines.java', 'net.sourceforge.plantuml.command.CommandMultilines', 'isValid', '(?i)^ref(#\\w+)?[\\s\xa0]+over[\\s\xa0]+((?:[\\p{L}0-9_.@]+|[""“”«»][^""“”«»]+[""“”«»])(?:[\\s\xa0]*,[\\s\xa0]*(?:[\\p{L}0-9_.@]+|[""“”«»][^""“”«»]+[""“”«»]))*)[\\s\xa0]*(#\\w+)?$', 'letf to right direction')",[33662]
"('CommandMultilines.java', 'net.sourceforge.plantuml.command.CommandMultilines', 'isValid', '(?i)^title$', 'left to right  direction')","[47242, 47824]"
"('CommandMultilines.java', 'net.sourceforge.plantuml.command.CommandMultilines', 'isValid', '(?i)^title$', 'lft to right direction')",[19306]
"('CommandMultilines.java', 'net.sourceforge.plantuml.command.CommandMultilines', 'isValid', '(?i)^(?:(left|right|center)?[\\s\xa0]*)header$', 'left to right idrection')",[36960]
"('CommandMultilines.java', 'net.sourceforge.plantuml.command.CommandMultilines', 'isValid', '(?i)^(?:(left|right|center)?[\\s\xa0]*)footer$', 'left to right directoin')",[40355]
"('CommandMultilinesBracket.java', 'net.sourceforge.plantuml.command.CommandMultilinesBracket', 'isValid', '(?i)^skinparam[\\s\xa0]*(?:[\\s\xa0]+([\\w.]*(?:\\<\\<.*\\>\\>)?[\\w.]*))?[\\s\xa0]*\\{$', 'left to- right direction')",[42877]
"('CommandMultilines.java', 'net.sourceforge.plantuml.command.CommandMultilines', 'isValid', '(?i)^ref(#\\w+)?[\\s\xa0]+over[\\s\xa0]+((?:[\\p{L}0-9_.@]+|[""“”«»][^""“”«»]+[""“”«»])(?:[\\s\xa0]*,[\\s\xa0]*(?:[\\p{L}0-9_.@]+|[""“”«»][^""“”«»]+[""“”«»]))*)[\\s\xa0]*(#\\w+)?$', 'left to rigt direction')",[25514]
"('CommandMultilines.java', 'net.sourceforge.plantuml.command.CommandMultilines', 'isValid', '(?i)^(?:(left|right|center)?[\\s\xa0]*)footer$', 'lef to right direction')",[20567]
"('HtmlColorUtils.java', 'net.sourceforge.plantuml.graphic.HtmlColorUtils', 'isValid', '[0-9A-Fa-f]{6}', '4177af')","[66402, 66499]"
"('Description.java', 'org.junit.runner.Description', 'methodAndClassNamePatternGroupOrDefault', '([\\s\\S]*)\\((.*)\\)', 'displaysVersionNumber(org.requs.exec.MainTest)')","[99, 186]"
"('CommandMultilinesBracket.java', 'net.sourceforge.plantuml.command.CommandMultilinesBracket', 'isValid', '(?i)^skinparam[\\s\xa0]*(?:[\\s\xa0]+([\\w.]*(?:\\<\\<.*\\>\\>)?[\\w.]*))?[\\s\xa0]*\\{$', 'left to rigth direction')",[36475]
"('XpathDirective.java', 'org.xembly.XpathDirective', 'exec', '/([^/\\(\\[\\{:]+)', '/*')",[70190]
"('CommandMultilines.java', 'net.sourceforge.plantuml.command.CommandMultilines', 'isValid', '(?i)^title$', 'leftto right direction')",[21052]
"('CommandMultilines.java', 'net.sourceforge.plantuml.command.CommandMultilines', 'isValid', '(?i)^ref(#\\w+)?[\\s\xa0]+over[\\s\xa0]+((?:[\\p{L}0-9_.@]+|[""“”«»][^""“”«»]+[""“”«»])(?:[\\s\xa0]*,[\\s\xa0]*(?:[\\p{L}0-9_.@]+|[""“”«»][^""“”«»]+[""“”«»]))*)[\\s\xa0]*(#\\w+)?$', 'left to right directio')",[31916]
"('CommandMultilines.java', 'net.sourceforge.plantuml.command.CommandMultilines', 'isValid', '(?i)^(?:(left|right|center)?[\\s\xa0]*)header$', 'left to right directoin')",[40452]
"('CommandMultilines.java', 'net.sourceforge.plantuml.command.CommandMultilines', 'isValid', '(?i)^(?:(left|right|center)?[\\s\xa0]*)footer$', 'left to right diretcion')",[39191]
"('HtmlColorUtils.java', 'net.sourceforge.plantuml.graphic.HtmlColorUtils', 'isValid', '[0-9A-Fa-f]{6}', '808080')","[58014, 58117]"
"('Scanner.java', 'java.util.Scanner', 'getCompleteTokenInBuffer', '(?s).*', '<?xml version=""1.0""?>\n<xs:schema xmlns:xs=""http://www.w3.org/2001/XMLSchema"">\n    <xs:complexType name=""requs"">\n        <xs:all>\n            <xs:element name=""version"" type=""xs:string""/>\n            <xs:element name=""revision"" type=""xs:string""/>\n            <xs:element name=""date"" type=""xs:string""/>\n        </xs:all>\n    </xs:complexType>\n    <xs:complexType name=""metrics"">\n        <xs:sequence>\n            <xs:element name=""metric"" type=""metric"" maxOccurs=""unbounded"" minOccurs=""0""/>\n        </xs:sequence>\n    </xs:complexType>\n    <xs:complexType name=""metric"">\n        <xs:simpleContent>\n            <xs:extension base=""xs:string"">\n                <xs:attribute name=""id"" type=""xs:string"" use=""required""/>\n            </xs:extension>\n        </xs:simpleContent>\n    </xs:complexType>\n    <xs:complexType name=""info"">\n        <xs:sequence>\n            <xs:element name=""informal"" type=""xs:string"" maxOccurs=""unbounded"" minOccurs=""0""/>\n        </xs:sequence>\n    </xs:complexType>\n    <xs:simpleType name=""lineNo"">\n        <xs:restriction base=""xs:string"">\n            <xs:pattern value=""([0-9]+:)?[0-9]+"" />\n        </xs:restriction>\n    </xs:simpleType>\n    <xs:complexType name=""mentioned"">\n        <xs:sequence>\n            <xs:element name=""where"" type=""lineNo"" maxOccurs=""unbounded"" minOccurs=""0""/>\n        </xs:sequence>\n    </xs:complexType>\n    <xs:complexType name=""slot"">\n        <xs:all>\n            <xs:element name=""name"" type=""object""/>\n            <xs:element name=""arity"">\n                <xs:simpleType>\n                    <xs:restriction base=""xs:string"">\n                        <xs:enumeration value=""0..*""/>\n                        <xs:enumeration value=""1""/>\n                        <xs:enumeration value=""1..*""/>\n                    </xs:restriction>\n                </xs:simpleType>\n            </xs:element>\n            <xs:element name=""mentioned"" type=""mentioned""/>\n            <xs:element name=""composition"" type=""xs:boolean""/>\n            <xs:element name=""type"" type=""class"" minOccurs=""0""/>\n            <xs:element name=""info"" type=""info"" minOccurs=""0""/>\n        </xs:all>\n    </xs:complexType>\n    <xs:simpleType name=""uc"">\n        <xs:restriction base=""xs:string"">\n            <xs:minLength value=""1""/>\n        </xs:restriction>\n    </xs:simpleType>\n    <xs:simpleType name=""class"">\n        <xs:restriction base=""xs:string"">\n            <xs:minLength value=""1""/>\n        </xs:restriction>\n    </xs:simpleType>\n    <xs:simpleType name=""object"">\n        <xs:restriction base=""xs:string"">\n            <xs:minLength value=""1""/>\n        </xs:restriction>\n    </xs:simpleType>\n    <xs:complexType name=""arguments"">\n        <xs:sequence>\n            <xs:element name=""arg"" type=""xs:string"" maxOccurs=""unbounded"" minOccurs=""0""/>\n        </xs:sequence>\n    </xs:complexType>\n    <xs:complexType name=""step"">\n        <xs:all>\n            <xs:element name=""number"" type=""xs:integer""/>\n            <xs:element name=""object"" type=""object""/>\n            <xs:element name=""signature"">\n                <xs:complexType>\n                    <xs:simpleContent>\n                        <xs:extension base=""xs:string"">\n                            <xs:attribute name=""ref"" type=""xs:string""/>\n                        </xs:extension>\n                    </xs:simpleContent>\n                </xs:complexType>\n            </xs:element>\n            <xs:element name=""mentioned"" type=""mentioned""/>\n            <xs:element name=""result"" type=""object"" minOccurs=""0""/>\n            <xs:element name=""info"" type=""info"" minOccurs=""0""/>\n            <xs:element name=""args"" type=""arguments"" minOccurs=""0""/>\n            <xs:element name=""exceptions"" minOccurs=""0"">\n                <xs:complexType>\n                    <xs:sequence>\n                        <xs:element name=""exception"" maxOccurs=""unbounded"" minOccurs=""0"">\n                            <xs:complexType>\n                                <xs:all>\n                                    <xs:element name=""when"" type=""xs:string""/>\n                                    <xs:element name=""steps"" type=""steps"" minOccurs=""0"">\n                                        <xs:unique name=""uniqueStep"">\n                                            <xs:selector xpath=""./step"" />\n                                            <xs:field xpath=""number"" />\n                                        </xs:unique>\n                                    </xs:element>\n                                </xs:all>\n                            </xs:complexType>\n                        </xs:element>\n                    </xs:sequence>\n                </xs:complexType>\n            </xs:element>\n        </xs:all>\n    </xs:complexType>\n    <xs:complexType name=""steps"">\n        <xs:sequence>\n            <xs:element name=""step"" type=""step"" maxOccurs=""unbounded"" minOccurs=""0""/>\n        </xs:sequence>\n    </xs:complexType>\n    <xs:complexType name=""diagrams"">\n        <xs:sequence>\n            <xs:element name=""diagram"" maxOccurs=""unbounded"" minOccurs=""0"">\n                <xs:complexType>\n                    <xs:all>\n                        <xs:element name=""uml"" type=""xs:string""/>\n                        <xs:element name=""svg"" type=""xs:string""/>\n                    </xs:all>\n                </xs:complexType>\n            </xs:element>\n        </xs:sequence>\n    </xs:complexType>\n    <xs:complexType name=""nfr"">\n        <xs:all>\n            <xs:element name=""id"">\n                <xs:simpleType>\n                    <xs:restriction base=""xs:string"">\n                        <xs:pattern value=""[A-Z]+"" />\n                    </xs:restriction>\n                </xs:simpleType>\n            </xs:element>\n            <xs:element name=""info"" type=""info"" minOccurs=""0""/>\n        </xs:all>\n    </xs:complexType>\n    <xs:complexType name=""method"">\n        <xs:all>\n            <xs:element name=""mentioned"" type=""mentioned""/>\n            <xs:element name=""id"" type=""uc""/>\n            <xs:element name=""object"" type=""object""/>\n            <xs:element name=""signature"" type=""xs:string""/>\n            <xs:element name=""result"" type=""object"" minOccurs=""0""/>\n            <xs:element name=""args"" type=""arguments"" minOccurs=""0""/>\n            <xs:element name=""info"" type=""info"" minOccurs=""0""/>\n            <xs:element name=""markdown"" type=""xs:string"" minOccurs=""0""/>\n            <xs:element name=""html"" type=""xs:string"" minOccurs=""0""/>\n            <xs:element name=""diagrams"" type=""diagrams"" minOccurs=""0""/>\n            <xs:element name=""steps"" type=""steps"" minOccurs=""0"">\n                <xs:unique name=""uniqueStepNumber"">\n                    <xs:selector xpath=""./step"" />\n                    <xs:field xpath=""number"" />\n                </xs:unique>\n            </xs:element>\n            <xs:element name=""bindings"" minOccurs=""0"">\n                <xs:complexType>\n                    <xs:sequence>\n                        <xs:element name=""binding"" minOccurs=""0"" maxOccurs=""unbounded"">\n                            <xs:complexType>\n                                <xs:all>\n                                    <xs:element name=""name"" type=""object""/>\n                                    <xs:element name=""type"" type=""class""/>\n                                </xs:all>\n                            </xs:complexType>\n                        </xs:element>\n                    </xs:sequence>\n                </xs:complexType>\n                <xs:unique name=""uniqueBinding"">\n                    <xs:selector xpath=""./binding"" />\n                    <xs:field xpath=""name"" />\n                </xs:unique>\n            </xs:element>\n            <xs:element name=""attributes"" minOccurs=""0"">\n                <xs:complexType>\n                    <xs:sequence>\n                        <xs:element name=""attribute"" minOccurs=""0"" maxOccurs=""unbounded"">\n                            <xs:complexType>\n                                <xs:simpleContent>\n                                    <xs:extension base=""xs:string"">\n                                        <xs:attribute name=""seal"" type=""xs:string"" use=""optional""/>\n                                    </xs:extension>\n                                </xs:simpleContent>\n                            </xs:complexType>\n                        </xs:element>\n                    </xs:sequence>\n                </xs:complexType>\n            </xs:element>\n            <xs:element name=""nfrs"" minOccurs=""0"">\n                <xs:complexType>\n                    <xs:sequence>\n                        <xs:element name=""nfr"" type=""nfr"" minOccurs=""0"" maxOccurs=""unbounded""/>\n                    </xs:sequence>\n                </xs:complexType>\n            </xs:element>\n        </xs:all>\n        <xs:attribute name=""seal"" use=""optional"">\n            <xs:simpleType>\n                <xs:restriction base=""xs:string"">\n                    <xs:pattern value=""[a-f0-9]{6}"" />\n                </xs:restriction>\n            </xs:simpleType>\n        </xs:attribute>\n    </xs:complexType>\n    <xs:complexType name=""type"">\n        <xs:all>\n            <xs:element name=""mentioned"" type=""mentioned""/>\n            <xs:element name=""name"" type=""class""/>\n            <xs:element name=""actor"" type=""xs:boolean"" minOccurs=""0""/>\n            <xs:element name=""info"" type=""info"" minOccurs=""0""/>\n            <xs:element name=""diagrams"" type=""diagrams"" minOccurs=""0""/>\n            <xs:element name=""slots"" minOccurs=""0"">\n                <xs:complexType>\n                    <xs:sequence>\n                        <xs:element name=""slot"" type=""slot"" maxOccurs=""unbounded"" minOccurs=""0""/>\n                    </xs:sequence>\n                </xs:complexType>\n                <xs:unique name=""uniqueSlotName"">\n                    <xs:selector xpath=""./slot"" />\n                    <xs:field xpath=""name"" />\n                </xs:unique>\n            </xs:element>\n            <xs:element name=""parents"" minOccurs=""0"">\n                <xs:complexType>\n                    <xs:sequence>\n                        <xs:element name=""type"" type=""class"" maxOccurs=""unbounded"" minOccurs=""0""/>\n                    </xs:sequence>\n                </xs:complexType>\n            </xs:element>\n        </xs:all>\n    </xs:complexType>\n    <xs:complexType name=""page"">\n        <xs:all>\n            <xs:element name=""title"" type=""class""/>\n            <xs:element name=""mentioned"" type=""mentioned""/>\n            <xs:element name=""info"" type=""info"" minOccurs=""0""/>\n            <xs:element name=""html"" type=""xs:string"" minOccurs=""0""/>\n        </xs:all>\n    </xs:complexType>\n    <xs:complexType name=""acronym"">\n        <xs:all>\n            <xs:element name=""name"">\n                <xs:simpleType>\n                    <xs:restriction base=""xs:string"">\n                        <xs:pattern value=""[A-Z]{2,}"" />\n                    </xs:restriction>\n                </xs:simpleType>\n            </xs:element>\n            <xs:element name=""mentioned"" type=""mentioned""/>\n            <xs:element name=""info"" type=""info"" minOccurs=""0""/>\n        </xs:all>\n    </xs:complexType>\n    <xs:complexType name=""tbd"">\n        <xs:all>\n            <xs:element name=""subject"" type=""xs:string""/>\n            <xs:element name=""description"" type=""xs:string""/>\n        </xs:all>\n        <xs:attribute name=""id"" use=""required"" type=""xs:string""/>\n    </xs:complexType>\n    <xs:element name=""spec"">\n        <xs:complexType>\n            <xs:all>\n                <xs:element name=""input"" type=""xs:string""/>\n                <xs:element name=""files"">\n                    <xs:complexType>\n                        <xs:sequence maxOccurs=""unbounded"">\n                            <xs:element name=""file"" minOccurs=""0"" maxOccurs=""unbounded"">\n                                <xs:complexType>\n                                    <xs:simpleContent>\n                                        <xs:extension base=""xs:string"">\n                                            <xs:attribute name=""id"" type=""xs:integer""/>\n                                            <xs:attribute name=""line"" type=""xs:integer""/>\n                                        </xs:extension>\n                                    </xs:simpleContent>\n                                </xs:complexType>\n                            </xs:element>\n                        </xs:sequence>\n                    </xs:complexType>\n                </xs:element>\n                <xs:element name=""requs"" type=""requs"" minOccurs=""0""/>\n                <xs:element name=""errors"">\n                    <xs:complexType>\n                        <xs:sequence maxOccurs=""unbounded"">\n                            <xs:element name=""error"" minOccurs=""0"" maxOccurs=""unbounded"">\n                                <xs:complexType>\n                                    <xs:simpleContent>\n                                        <xs:extension base=""xs:string"">\n                                            <xs:attribute name=""type"" type=""xs:string""/>\n                                            <xs:attribute name=""line"" type=""lineNo""/>\n                                            <xs:attribute name=""pos"" type=""xs:integer""/>\n                                            <xs:attribute name=""file"" type=""xs:integer"" use=""optional""/>\n                                        </xs:extension>\n                                    </xs:simpleContent>\n                                </xs:complexType>\n                            </xs:element>\n                        </xs:sequence>\n                    </xs:complexType>\n                </xs:element>\n                <xs:element name=""types"" minOccurs=""0"">\n                    <xs:complexType>\n                        <xs:sequence maxOccurs=""unbounded"">\n                            <xs:element name=""type"" type=""type"" minOccurs=""0"" maxOccurs=""unbounded""/>\n                        </xs:sequence>\n                    </xs:complexType>\n                </xs:element>\n                <xs:element name=""methods"" minOccurs=""0"">\n                    <xs:complexType>\n                        <xs:sequence>\n                            <xs:element name=""method"" type=""method"" maxOccurs=""unbounded"" minOccurs=""0""/>\n                        </xs:sequence>\n                    </xs:complexType>\n                </xs:element>\n                <xs:element name=""pages"" minOccurs=""0"">\n                    <xs:complexType>\n                        <xs:sequence>\n                            <xs:element name=""page"" type=""page"" maxOccurs=""unbounded"" minOccurs=""0""/>\n                        </xs:sequence>\n                    </xs:complexType>\n                </xs:element>\n                <xs:element name=""acronyms"" minOccurs=""0"">\n                    <xs:complexType>\n                        <xs:sequence>\n                            <xs:element name=""acronym"" type=""acronym"" maxOccurs=""unbounded"" minOccurs=""0""/>\n                        </xs:sequence>\n                    </xs:complexType>\n                </xs:element>\n                <xs:element name=""metrics"" minOccurs=""0"">\n                    <xs:complexType>\n                        <xs:sequence maxOccurs=""unbounded"">\n                            <xs:element name=""metric"" type=""metric"" minOccurs=""0"" maxOccurs=""unbounded""/>\n                        </xs:sequence>\n                    </xs:complexType>\n                </xs:element>\n                <xs:element name=""tbds"" minOccurs=""0"">\n                    <xs:complexType>\n                        <xs:sequence maxOccurs=""unbounded"">\n                            <xs:element name=""tbd"" type=""tbd"" minOccurs=""0"" maxOccurs=""unbounded""/>\n                        </xs:sequence>\n                    </xs:complexType>\n                </xs:element>\n            </xs:all>\n            <xs:attribute name=""time"" use=""optional"" type=""xs:dateTime""/>\n            <xs:attribute name=""msec"" use=""optional"" type=""xs:integer""/>\n        </xs:complexType>\n        <xs:unique name=""uniqueMethodId"">\n            <xs:selector xpath=""./methods/method"" />\n            <xs:field xpath=""id"" />\n        </xs:unique>\n        <xs:unique name=""uniqueTypeName"">\n            <xs:selector xpath=""./types/type"" />\n            <xs:field xpath=""name"" />\n        </xs:unique>\n        <xs:unique name=""uniquePageName"">\n            <xs:selector xpath=""./pages/page"" />\n            <xs:field xpath=""name"" />\n        </xs:unique>\n        <xs:unique name=""uniqueMethodSignature"">\n            <xs:selector xpath=""./methods/method"" />\n            <xs:field xpath=""signature"" />\n        </xs:unique>\n    </xs:element>\n</xs:schema>\n')",[615]
"('CommandMultilines.java', 'net.sourceforge.plantuml.command.CommandMultilines', 'isValid', '(?i)^title$', 'left to right direciton')",[39676]
"('CommandMultilines.java', 'net.sourceforge.plantuml.command.CommandMultilines', 'isValid', ""(?i)^[\\s\xa0]*/['‘’].*$"", 'left to right dirction')",[28521]
"('CommandMultilines.java', 'net.sourceforge.plantuml.command.CommandMultilines', 'isValid', '(?i)^(?:(left|right|center)?[\\s\xa0]*)footer$', 'left to right dirction')",[28715]
"('CommandMultilines.java', 'net.sourceforge.plantuml.command.CommandMultilines', 'isValid', '(?i)^(?:(left|right|center)?[\\s\xa0]*)header$', 'left to rigth direction')",[36378]
"('CommandMultilines.java', 'net.sourceforge.plantuml.command.CommandMultilines', 'isValid', '(?i)^(?:(left|right|center)?[\\s\xa0]*)footer$', 'left to right diection')",[28133]
"('HtmlColorUtils.java', 'net.sourceforge.plantuml.graphic.HtmlColorUtils', 'build', '[0-9A-Fa-f]{6}', '00ff00')","[57393, 57496]"
"('CommandMultilines.java', 'net.sourceforge.plantuml.command.CommandMultilines', 'isValid', '(?i)^(?:(left|right|center)?[\\s\xa0]*)header$', 'left to right diection')",[28230]
"('CommandMultilines.java', 'net.sourceforge.plantuml.command.CommandMultilines', 'isValid', '(?i)^title$', 'left to right directino')",[40840]
"('HtmlColorUtils.java', 'net.sourceforge.plantuml.graphic.HtmlColorUtils', 'isValid', '[0-9A-Fa-f]{6}', 'fef6f3')","[55944, 56047]"
"('Description.java', 'org.junit.runner.Description', 'methodAndClassNamePatternGroupOrDefault', '([\\s\\S]*)\\((.*)\\)', 'org.requs.exec.MainTest')","[36, 70464]"
"('CommandMultilines.java', 'net.sourceforge.plantuml.command.CommandMultilines', 'isValid', '(?i)^title$', 'let to right direction')",[19888]
"('CommandMultilines.java', 'net.sourceforge.plantuml.command.CommandMultilines', 'isValid', '(?i)^(?:(left|right|center)?[\\s\xa0]*)header$', 'lef to right direction')",[20664]
"('HtmlColorUtils.java', 'net.sourceforge.plantuml.graphic.HtmlColorUtils', 'build', '[0-9A-Fa-f]{6}', 'white')","[55737, 55840, 61137, 61234]"
"('CommandMultilinesBracket.java', 'net.sourceforge.plantuml.command.CommandMultilinesBracket', 'isValid', '(?i)^skinparam[\\s\xa0]*(?:[\\s\xa0]+([\\w.]*(?:\\<\\<.*\\>\\>)?[\\w.]*))?[\\s\xa0]*\\{$', 'hide class circle')","[52768, 53233]"
"('CommandMultilines.java', 'net.sourceforge.plantuml.command.CommandMultilines', 'isValid', '(?i)^(?:(left|right|center)?[\\s\xa0]*)footer$', 'left to right direcion')",[29879]
"('CommandMultilinesBracket.java', 'net.sourceforge.plantuml.command.CommandMultilinesBracket', 'isValid', '(?i)^skinparam[\\s\xa0]*(?:[\\s\xa0]+([\\w.]*(?:\\<\\<.*\\>\\>)?[\\w.]*))?[\\s\xa0]*\\{$', 'let to right direction')",[20179]
"('CommandMultilines.java', 'net.sourceforge.plantuml.command.CommandMultilines', 'isValid', '(?i)^(?:(left|right|center)?[\\s\xa0]*)footer$', 'left t right direction')",[22313]
"('Description.java', 'org.junit.runner.Description', 'methodAndClassNamePatternGroupOrDefault', '([\\s\\S]*)\\((.*)\\)', 'testMakesAnIncorrectAttemptToInstantiateClass(org.requs.exec.MainTest)')","[120, 208]"
"('Scanner.java', 'java.util.Scanner', 'getCompleteTokenInBuffer', '(?s).*', '<?xml version=""1.0""?>\n<xsl:stylesheet xmlns:xsl=""http://www.w3.org/1999/XSL/Transform""\n    xmlns:xs=""http://www.w3.org/2001/XMLSchema""\n    version=""2.0"" exclude-result-prefixes=""xs"">\n    <xsl:output method=""xml"" cdata-section-elements=""svg html""/>\n    <xsl:strip-space elements=""*""/>\n    <xsl:template match=""step/signature"">\n        <xsl:copy>\n            <xsl:variable name=""text"" select="".""/>\n            <xsl:variable name=""method"" select=""//method[signature=$text]""/>\n            <xsl:if test=""$method"">\n                <xsl:attribute name=""ref"">\n                    <xsl:value-of select=""$method/id""/>\n                </xsl:attribute>\n            </xsl:if>\n            <xsl:apply-templates select=""node()|@*""/>\n        </xsl:copy>\n    </xsl:template>\n    <xsl:template match=""node()|@*"">\n        <xsl:copy>\n            <xsl:apply-templates select=""node()|@*""/>\n        </xsl:copy>\n    </xsl:template>\n</xsl:stylesheet>\n')",[7080]
"('CommandMultilines.java', 'net.sourceforge.plantuml.command.CommandMultilines', 'isValid', ""(?i)^[\\s\xa0]*/['‘’].*$"", 'left to right irection')",[26775]
"('Description.java', 'org.junit.runner.Description', 'methodAndClassNamePatternGroupOrDefault', '([\\s\\S]*)\\((.*)\\)', 'null')",[17]
"('CommandMultilines.java', 'net.sourceforge.plantuml.command.CommandMultilines', 'isValid', '(?i)^(?:(left|right|center)?[\\s\xa0]*)header$', 'left to right diretion')",[29394]
"('CommandMultilines.java', 'net.sourceforge.plantuml.command.CommandMultilines', 'isValid', '(?i)^title$', 'letf to right direction')",[33274]
"('CommandMultilines.java', 'net.sourceforge.plantuml.command.CommandMultilines', 'isValid', '(?i)^(?:(left|right|center)?[\\s\xa0]*)header$', 'left  to right direction')","[45108, 45690]"
"('CommandMultilines.java', 'net.sourceforge.plantuml.command.CommandMultilines', 'isValid', '(?i)^title$', 'left to rightdirection')",[26290]
"('CommandMultilines.java', 'net.sourceforge.plantuml.command.CommandMultilines', 'isValid', '(?i)^(?:(left|right|center)?[\\s\xa0]*)header$', 'left to irght direction')",[34632]
"('CommandMultilinesBracket.java', 'net.sourceforge.plantuml.command.CommandMultilinesBracket', 'isValid', '(?i)^skinparam[\\s\xa0]*(?:[\\s\xa0]+([\\w.]*(?:\\<\\<.*\\>\\>)?[\\w.]*))?[\\s\xa0]*\\{$', 'left to rgiht direction')",[35311]
"('CommandMultilinesBracket.java', 'net.sourceforge.plantuml.command.CommandMultilinesBracket', 'isValid', '(?i)^skinparam[\\s\xa0]*(?:[\\s\xa0]+([\\w.]*(?:\\<\\<.*\\>\\>)?[\\w.]*))?[\\s\xa0]*\\{$', 'left t right direction')",[22507]
"('CommandMultilines.java', 'net.sourceforge.plantuml.command.CommandMultilines', 'isValid', '(?i)^ref(#\\w+)?[\\s\xa0]+over[\\s\xa0]+((?:[\\p{L}0-9_.@]+|[""“”«»][^""“”«»]+[""“”«»])(?:[\\s\xa0]*,[\\s\xa0]*(?:[\\p{L}0-9_.@]+|[""“”«»][^""“”«»]+[""“”«»]))*)[\\s\xa0]*(#\\w+)?$', 'left to rght direction')",[24350]
"('HtmlColorUtils.java', 'net.sourceforge.plantuml.graphic.HtmlColorUtils', 'build', '[0-9A-Fa-f]{6}', 'a9dcdf')","[61917, 62014]"
"('HtmlColorUtils.java', 'net.sourceforge.plantuml.graphic.HtmlColorUtils', 'isValid', '[0-9A-Fa-f]{6}', 'white')","[55530, 55633, 60942, 61039]"
"('CommandMultilines.java', 'net.sourceforge.plantuml.command.CommandMultilines', 'isValid', '(?i)^(?:(left|right|center)?[\\s\xa0]*)header$', 'left to right -direction')",[44526]
"('CommandMultilinesBracket.java', 'net.sourceforge.plantuml.command.CommandMultilinesBracket', 'isValid', '(?i)^skinparam[\\s\xa0]*(?:[\\s\xa0]+([\\w.]*(?:\\<\\<.*\\>\\>)?[\\w.]*))?[\\s\xa0]*\\{$', 'left to right dierction')",[38221]
"('CommandMultilines.java', 'net.sourceforge.plantuml.command.CommandMultilines', 'isValid', '(?i)^title$', 'left to rihgt direction')",[35602]
"('CommandMultilines.java', 'net.sourceforge.plantuml.command.CommandMultilines', 'isValid', '(?i)^ref(#\\w+)?[\\s\xa0]+over[\\s\xa0]+((?:[\\p{L}0-9_.@]+|[""“”«»][^""“”«»]+[""“”«»])(?:[\\s\xa0]*,[\\s\xa0]*(?:[\\p{L}0-9_.@]+|[""“”«»][^""“”«»]+[""“”«»]))*)[\\s\xa0]*(#\\w+)?$', 'left to right diretion')",[29588]
"('SkinParam.java', 'net.sourceforge.plantuml.SkinParam', 'getFontSize', '\\d+', '13')","[68351, 68447, 68544, 68640]"
"('CommandMultilines.java', 'net.sourceforge.plantuml.command.CommandMultilines', 'isValid', '(?i)^(?:(left|right|center)?[\\s\xa0]*)header$', 'left to rgiht direction')",[35214]
"('CommandMultilinesBracket.java', 'net.sourceforge.plantuml.command.CommandMultilinesBracket', 'isValid', '(?i)^skinparam[\\s\xa0]*(?:[\\s\xa0]+([\\w.]*(?:\\<\\<.*\\>\\>)?[\\w.]*))?[\\s\xa0]*\\{$', 'left o right direction')",[21925]
"('CommandMultilines.java', 'net.sourceforge.plantuml.command.CommandMultilines', 'isValid', '(?i)^title$', 'left to  right direction')","[46078, 46660]"
"('HtmlColorUtils.java', 'net.sourceforge.plantuml.graphic.HtmlColorUtils', 'build', '[0-9A-Fa-f]{6}', '808080')","[58221, 58324]"
"('CommandMultilines.java', 'net.sourceforge.plantuml.command.CommandMultilines', 'isValid', '(?i)^title$', 'skinparam titleFontStyle bold')","[10774, 11146, 14714, 15096, 15476, 49327, 49699]"
"('CommandMultilines.java', 'net.sourceforge.plantuml.command.CommandMultilines', 'isValid', '(?i)^title$', 'left o right direction')",[21634]
"('CommandMultilines.java', 'net.sourceforge.plantuml.command.CommandMultilines', 'isValid', ""(?i)^[\\s\xa0]*/['‘’].*$"", 'left to rgiht direction')",[34923]
"('CommandMultilines.java', 'net.sourceforge.plantuml.command.CommandMultilines', 'isValid', '(?i)^ref(#\\w+)?[\\s\xa0]+over[\\s\xa0]+((?:[\\p{L}0-9_.@]+|[""“”«»][^""“”«»]+[""“”«»])(?:[\\s\xa0]*,[\\s\xa0]*(?:[\\p{L}0-9_.@]+|[""“”«»][^""“”«»]+[""“”«»]))*)[\\s\xa0]*(#\\w+)?$', 'left to right dircetion')",[38900]
"('CommandMultilinesBracket.java', 'net.sourceforge.plantuml.command.CommandMultilinesBracket', 'isValid', '(?i)^skinparam[\\s\xa0]*(?:[\\s\xa0]+([\\w.]*(?:\\<\\<.*\\>\\>)?[\\w.]*))?[\\s\xa0]*\\{$', 'left to right driection')",[37639]
"('CommandMultilines.java', 'net.sourceforge.plantuml.command.CommandMultilines', 'isValid', '(?i)^title$', 'left to righ direction')",[25708]
"('CommandMultilines.java', 'net.sourceforge.plantuml.command.CommandMultilines', 'isValid', '(?i)^(?:(left|right|center)?[\\s\xa0]*)footer$', 'left to rigth direction')",[36281]
"('CommandMultilines.java', 'net.sourceforge.plantuml.command.CommandMultilines', 'isValid', ""(?i)^[\\s\xa0]*/['‘’].*$"", 'lef to right direction')",[20373]
"('HtmlColorUtils.java', 'net.sourceforge.plantuml.graphic.HtmlColorUtils', 'build', '[0-9A-Fa-f]{6}', 'a80036')","[59463, 59566]"
"('CommandMultilines.java', 'net.sourceforge.plantuml.command.CommandMultilines', 'isValid', '(?i)^title$', 'hide class circle')","[52489, 52954]"
"('Scanner.java', 'java.util.Scanner', 'getCompleteTokenInBuffer', '(?s).*', '<?xml version=""1.0""?>\n<xsl:stylesheet xmlns:xsl=""http://www.w3.org/1999/XSL/Transform"" xmlns:xs=""http://www.w3.org/2001/XMLSchema"" version=""2.0"" exclude-result-prefixes=""xs"">\n    <xsl:output method=""xml"" cdata-section-elements=""svg html""/>\n    <xsl:strip-space elements=""*""/>\n    <xsl:template match=""/spec/errors"">\n        <xsl:copy>\n            <xsl:apply-templates select=""error""/>\n            <xsl:for-each select=""//step[position() != last() and signature=\'fail\' and count(info/informal) &lt; 2]"">\n                <error type=""semantic"" pos=""0"">\n                    <xsl:attribute name=""line"">\n                        <xsl:value-of select=""mentioned/where[1]""/>\n                    </xsl:attribute>\n                    <xsl:text>Step &quot;</xsl:text>\n                    <xsl:value-of select=""number""/>\n                    <xsl:text>&quot; fails while it is not the last step in the flow</xsl:text>\n                </error>\n            </xsl:for-each>\n        </xsl:copy>\n    </xsl:template>\n    <xsl:template match=""node()|@*"">\n        <xsl:copy>\n            <xsl:apply-templates select=""node()|@*""/>\n        </xsl:copy>\n    </xsl:template>\n</xsl:stylesheet>\n')",[5464]
"('HtmlColorUtils.java', 'net.sourceforge.plantuml.graphic.HtmlColorUtils', 'build', '[0-9A-Fa-f]{6}', 'eeeeee')","[63867, 63964, 64257, 64354, 64647, 64744]"
"('DomParser.java', 'com.jcabi.xml.DomParser', '<init>', '(?:<\\?xml.*\\?>\\s*)?(?:<!DOCTYPE.*>)?(?:<!--.*-->)?\\<[_\\:a-zA-ZÀ-ÖØ-öø-˿Ͱ-ͽͿ-\u1fff\u200c-\u200d⁰-\u218fⰀ-\u2fef、-\ud7ff豈-\ufdcfﷰ-�](?:[·\\.\\-0-9̀-ͯ‿-⁀])*.*(?:[_\\:a-zA-ZÀ-ÖØ-öø-˿Ͱ-ͽͿ-\u1fff\u200c-\u200d⁰-\u218fⰀ-\u2fef、-\ud7ff豈-\ufdcfﷰ-�](?:[·\\.\\-0-9̀-ͯ‿-⁀])*|/)\\>', ""<?xml-stylesheethref='requs.xsl'type='text/xsl'?><spec/>"")",[651]
"('Scanner.java', 'java.util.Scanner', 'getCompleteTokenInBuffer', '(?s).*', '<?xml version=""1.0""?>\n<xsl:stylesheet xmlns:xsl=""http://www.w3.org/1999/XSL/Transform"" xmlns:xs=""http://www.w3.org/2001/XMLSchema"" version=""2.0"" exclude-result-prefixes=""xs"">\n    <xsl:output method=""xml"" cdata-section-elements=""svg html""/>\n    <xsl:strip-space elements=""*""/>\n    <xsl:template match=""node()|@*"">\n        <xsl:copy>\n            <xsl:apply-templates select=""node()|@*""/>\n        </xsl:copy>\n    </xsl:template>\n    <xsl:template match=""errors"">\n        <xsl:copy>\n            <xsl:apply-templates select=""node()|@*""/>\n            <xsl:for-each select=""//method[count(signature) &gt; 1]"">\n                <error type=""duplicate"" pos=""0"">\n                    <xsl:attribute name=""line"">\n                        <xsl:value-of select=""mentioned/where[1]""/>\n                    </xsl:attribute>\n                    <xsl:text>method </xsl:text>\n                    <xsl:value-of select=""id""/>\n                    <xsl:text> has multiple declarations: &quot;</xsl:text>\n                    <xsl:value-of select=""signature"" separator=""&quot;, &quot;""/>\n                    <xsl:text>&quot;</xsl:text>\n                </error>\n            </xsl:for-each>\n        </xsl:copy>\n    </xsl:template>\n    <xsl:template match=""method[count(signature) &gt; 1]"">\n        <xsl:copy>\n            <xsl:apply-templates select=""(node() except signature)|@*""/>\n            <signature>\n                <xsl:value-of select=""signature[1]""/>\n            </signature>\n        </xsl:copy>\n    </xsl:template>\n</xsl:stylesheet>\n')",[2795]
"('CommandMultilines.java', 'net.sourceforge.plantuml.command.CommandMultilines', 'isValid', '(?i)^(?:(left|right|center)?[\\s\xa0]*)footer$', 'left to ight direction')",[23477]
"('CommandMultilinesBracket.java', 'net.sourceforge.plantuml.command.CommandMultilinesBracket', 'isValid', '(?i)^skinparam[\\s\xa0]*(?:[\\s\xa0]+([\\w.]*(?:\\<\\<.*\\>\\>)?[\\w.]*))?[\\s\xa0]*\\{$', 'left to right dirction')",[28909]
"('CommandMultilines.java', 'net.sourceforge.plantuml.command.CommandMultilines', 'isValid', ""(?i)^[\\s\xa0]*/['‘’].*$"", 'left to right drection')",[27357]
"('CommandMultilinesBracket.java', 'net.sourceforge.plantuml.command.CommandMultilinesBracket', 'isValid', '(?i)^skinparam[\\s\xa0]*(?:[\\s\xa0]+([\\w.]*(?:\\<\\<.*\\>\\>)?[\\w.]*))?[\\s\xa0]*\\{$', 'left to riht direction')",[24835]
"('CommandMultilines.java', 'net.sourceforge.plantuml.command.CommandMultilines', 'isValid', '(?i)^title$', 'left -to right direction')",[42004]
"('CommandMultilinesBracket.java', 'net.sourceforge.plantuml.command.CommandMultilinesBracket', 'isValid', '(?i)^skinparam[\\s\xa0]*(?:[\\s\xa0]+([\\w.]*(?:\\<\\<.*\\>\\>)?[\\w.]*))?[\\s\xa0]*\\{$', 'left to right dircetion')",[38803]
"('CommandMultilines.java', 'net.sourceforge.plantuml.command.CommandMultilines', 'isValid', '(?i)^(?:(left|right|center)?[\\s\xa0]*)footer$', 'skinparam sequenceTitleFontSize 13')","[11611, 11983, 15954, 16335, 16715, 50164, 50536]"
"('CommandMultilines.java', 'net.sourceforge.plantuml.command.CommandMultilines', 'isValid', '(?i)^(?:(left|right|center)?[\\s\xa0]*)header$', 'left to rigt direction')",[25320]
"('CommandMultilinesBracket.java', 'net.sourceforge.plantuml.command.CommandMultilinesBracket', 'isValid', '(?i)^skinparam[\\s\xa0]*(?:[\\s\xa0]+([\\w.]*(?:\\<\\<.*\\>\\>)?[\\w.]*))?[\\s\xa0]*\\{$', 'left- to right direction')",[41713]
"('CommandMultilines.java', 'net.sourceforge.plantuml.command.CommandMultilines', 'isValid', '(?i)^ref(#\\w+)?[\\s\xa0]+over[\\s\xa0]+((?:[\\p{L}0-9_.@]+|[""“”«»][^""“”«»]+[""“”«»])(?:[\\s\xa0]*,[\\s\xa0]*(?:[\\p{L}0-9_.@]+|[""“”«»][^""“”«»]+[""“”«»]))*)[\\s\xa0]*(#\\w+)?$', 'left to rightdirection')",[26678]
"('CommandMultilines.java', 'net.sourceforge.plantuml.command.CommandMultilines', 'isValid', ""(?i)^[\\s\xa0]*/['‘’].*$"", 'lft to right direction')",[19209]
"('CommandMultilines.java', 'net.sourceforge.plantuml.command.CommandMultilines', 'isValid', '(?i)^(?:(left|right|center)?[\\s\xa0]*)header$', 'left to riht direction')",[24738]
"('CommandMultilines.java', 'net.sourceforge.plantuml.command.CommandMultilines', 'isValid', '(?i)^(?:(left|right|center)?[\\s\xa0]*)footer$', 'eft to right direction')",[18821]
"('Scanner.java', 'java.util.Scanner', 'getCompleteTokenInBuffer', '(?s).*', '<?xml version=""1.0""?>\n<xsl:stylesheet xmlns:xsl=""http://www.w3.org/1999/XSL/Transform"" xmlns:xs=""http://www.w3.org/2001/XMLSchema"" version=""2.0"" exclude-result-prefixes=""xs"">\n    <xsl:output method=""xml"" cdata-section-elements=""svg html""/>\n    <xsl:strip-space elements=""*""/>\n    <xsl:template match=""errors"">\n        <xsl:copy>\n            <xsl:apply-templates select=""node()|@*""/>\n            <xsl:for-each select=""//method"">\n                <xsl:variable name=""method"" select="".""/>\n                <xsl:variable name=""dups"" select=""//method[signature=$method/signature and id!=$method/id]""/>\n                <xsl:if test=""count($dups) &gt; 0"">\n                    <error type=""duplicate"" pos=""0"">\n                        <xsl:attribute name=""line"">\n                            <xsl:value-of select=""mentioned/where[1]""/>\n                        </xsl:attribute>\n                        <xsl:text>method </xsl:text>\n                        <xsl:value-of select=""id""/>\n                        <xsl:text> has the same signature as </xsl:text>\n                        <xsl:value-of select=""$dups/id"" separator="", ""/>\n                        <xsl:text>: &quot;</xsl:text>\n                        <xsl:value-of select=""signature""/>\n                        <xsl:text>&quot;</xsl:text>\n                    </error>\n                </xsl:if>\n            </xsl:for-each>\n        </xsl:copy>\n    </xsl:template>\n    <xsl:template match=""methods"">\n        <xsl:copy>\n            <xsl:for-each-group select=""method"" group-by=""signature[1]"">\n                <xsl:copy-of select=""current-group()[1]""/>\n            </xsl:for-each-group>\n        </xsl:copy>\n    </xsl:template>\n    <xsl:template match=""node()|@*"">\n        <xsl:copy>\n            <xsl:apply-templates select=""node()|@*""/>\n        </xsl:copy>\n    </xsl:template>\n</xsl:stylesheet>\n')",[2589]
"('HtmlColorUtils.java', 'net.sourceforge.plantuml.graphic.HtmlColorUtils', 'build', '[0-9A-Fa-f]{6}', 'c82930')","[65427, 65524]"
"('CommandMultilines.java', 'net.sourceforge.plantuml.command.CommandMultilines', 'isValid', '(?i)^ref(#\\w+)?[\\s\xa0]+over[\\s\xa0]+((?:[\\p{L}0-9_.@]+|[""“”«»][^""“”«»]+[""“”«»])(?:[\\s\xa0]*,[\\s\xa0]*(?:[\\p{L}0-9_.@]+|[""“”«»][^""“”«»]+[""“”«»]))*)[\\s\xa0]*(#\\w+)?$', 'left to- right direction')",[42974]
"('CommandMultilines.java', 'net.sourceforge.plantuml.command.CommandMultilines', 'isValid', '(?i)^(?:(left|right|center)?[\\s\xa0]*)footer$', 'left to right direction')","[13099, 18242, 51652, 52117]"
"('UmlSource.java', 'net.sourceforge.plantuml.core.UmlSource', 'isEmpty', ""\\s*'.*"", 'skinparam titleFontSize 13')","[9752, 9844, 48305, 48397]"
"('CommandMultilines.java', 'net.sourceforge.plantuml.command.CommandMultilines', 'isValid', '(?i)^ref(#\\w+)?[\\s\xa0]+over[\\s\xa0]+((?:[\\p{L}0-9_.@]+|[""“”«»][^""“”«»]+[""“”«»])(?:[\\s\xa0]*,[\\s\xa0]*(?:[\\p{L}0-9_.@]+|[""“”«»][^""“”«»]+[""“”«»]))*)[\\s\xa0]*(#\\w+)?$', 'left to right dirction')",[29006]
"('Tokenize.java', 'net.sf.saxon.functions.Tokenize', 'maybePrecompile', '[\\x20\\n\\r\\t]', '')","[8731, 9164, 9608]"
"('Scanner.java', 'java.util.Scanner', 'getCompleteTokenInBuffer', '(?s).*', '<?xml version=""1.0""?>\n<xsl:stylesheet xmlns:xsl=""http://www.w3.org/1999/XSL/Transform"" xmlns:xs=""http://www.w3.org/2001/XMLSchema"" version=""2.0"" exclude-result-prefixes=""xs"">\n    <xsl:output method=""xml"" cdata-section-elements=""svg html""/>\n    <xsl:strip-space elements=""*""/>\n    <xsl:template match=""/spec/errors"">\n        <xsl:copy>\n            <xsl:apply-templates select=""error""/>\n            <xsl:for-each select=""//step[number(number) &lt; preceding-sibling::step/number(number)\n                or number(number) &gt; following-sibling::step/number(number)]"">\n                <error type=""semantic"" pos=""0"">\n                    <xsl:attribute name=""line"">\n                        <xsl:value-of select=""mentioned/where[1]""/>\n                    </xsl:attribute>\n                    <xsl:text>Step &quot;</xsl:text>\n                    <xsl:value-of select=""number""/>\n                    <xsl:text>&quot; is not in order with others</xsl:text>\n                </error>\n            </xsl:for-each>\n        </xsl:copy>\n    </xsl:template>\n    <xsl:template match=""node()|@*"">\n        <xsl:copy>\n            <xsl:apply-templates select=""node()|@*""/>\n        </xsl:copy>\n    </xsl:template>\n</xsl:stylesheet>\n')",[5661]
"('CommandMultilines.java', 'net.sourceforge.plantuml.command.CommandMultilines', 'isValid', ""(?i)^[\\s\xa0]*/['‘’].*$"", 'skinparam titleFontSize 13')","[9937, 10309, 13474, 13857, 14237, 48490, 48862]"
"('XpathDirective.java', 'org.xembly.XpathDirective', 'exec', '/([^/\\(\\[\\{:]+)', ""/spec/types[not(type/name='Employee')]"")",[1076]
"('CommandMultilines.java', 'net.sourceforge.plantuml.command.CommandMultilines', 'isValid', '(?i)^(?:(left|right|center)?[\\s\xa0]*)footer$', 'class Employee {')","[53698, 54166, 54730]"
"('CommandMultilines.java', 'net.sourceforge.plantuml.command.CommandMultilines', 'isValid', '(?i)^(?:(left|right|center)?[\\s\xa0]*)header$', 'left to rihgt direction')",[35796]
"('CommandMultilines.java', 'net.sourceforge.plantuml.command.CommandMultilines', 'isValid', '(?i)^(?:(left|right|center)?[\\s\xa0]*)header$', 'skinparam sequenceTitleFontStyle bold')","[12448, 12820, 17194, 17574, 17954, 51001, 51373]"
"('CommandMultilines.java', 'net.sourceforge.plantuml.command.CommandMultilines', 'isValid', '(?i)^title$', 'left to right driection')",[37348]
"('CommandMultilines.java', 'net.sourceforge.plantuml.command.CommandMultilines', 'isValid', '(?i)^ref(#\\w+)?[\\s\xa0]+over[\\s\xa0]+((?:[\\p{L}0-9_.@]+|[""“”«»][^""“”«»]+[""“”«»])(?:[\\s\xa0]*,[\\s\xa0]*(?:[\\p{L}0-9_.@]+|[""“”«»][^""“”«»]+[""“”«»]))*)[\\s\xa0]*(#\\w+)?$', 'left to righ direction')",[26096]
"('CommandMultilines.java', 'net.sourceforge.plantuml.command.CommandMultilines', 'isValid', ""(?i)^[\\s\xa0]*/['‘’].*$"", 'left to right directio')",[31431]
"('CommandMultilines.java', 'net.sourceforge.plantuml.command.CommandMultilines', 'isValid', ""(?i)^[\\s\xa0]*/['‘’].*$"", 'left to right driection')",[37251]
"('CommandMultilines.java', 'net.sourceforge.plantuml.command.CommandMultilines', 'isValid', '(?i)^(?:(left|right|center)?[\\s\xa0]*)header$', 'let to right direction')",[20082]
"('CommandMultilines.java', 'net.sourceforge.plantuml.command.CommandMultilines', 'isValid', '(?i)^(?:(left|right|center)?[\\s\xa0]*)footer$', 'left to right directon')",[30461]
"('CommandMultilines.java', 'net.sourceforge.plantuml.command.CommandMultilines', 'isValid', ""(?i)^[\\s\xa0]*/['‘’].*$"", 'left to  right direction')","[45981, 46563]"
"('UrlBuilder.java', 'net.sourceforge.plantuml.UrlBuilder', 'getUrl', '(?i).*\\[\\[([""“”«»][^""“”«»]+[""“”«»]|[^{}\\s\xa0\\]\\[]*)(?:[\\s\xa0]*\\{([^{}]+)\\})?(?:[\\s\xa0]*([^\\]\\[]+))?\\]\\].*', 'Employee')",[69129]
"('CommandMultilines.java', 'net.sourceforge.plantuml.command.CommandMultilines', 'isValid', '(?i)^title$', 'elft to right direction')",[32110]
"('CommandMultilines.java', 'net.sourceforge.plantuml.command.CommandMultilines', 'isValid', '(?i)^(?:(left|right|center)?[\\s\xa0]*)footer$', 'left to right dierction')",[38027]
"('CommandMultilines.java', 'net.sourceforge.plantuml.command.CommandMultilines', 'isValid', '(?i)^(?:(left|right|center)?[\\s\xa0]*)footer$', 'left to right directino')",[40937]
"('HtmlColorUtils.java', 'net.sourceforge.plantuml.graphic.HtmlColorUtils', 'isValid', '[0-9A-Fa-f]{6}', 'a9dcdf')","[61722, 61819]"
"('CommandMultilinesBracket.java', 'net.sourceforge.plantuml.command.CommandMultilinesBracket', 'isValid', '(?i)^skinparam[\\s\xa0]*(?:[\\s\xa0]+([\\w.]*(?:\\<\\<.*\\>\\>)?[\\w.]*))?[\\s\xa0]*\\{$', 'left to right  direction')","[47533, 48115]"
"('CommandMultilines.java', 'net.sourceforge.plantuml.command.CommandMultilines', 'isValid', ""(?i)^[\\s\xa0]*/['‘’].*$"", 'left to ight direction')",[23283]
"('CommandMultilinesBracket.java', 'net.sourceforge.plantuml.command.CommandMultilinesBracket', 'isValid', '(?i)^skinparam[\\s\xa0]*(?:[\\s\xa0]+([\\w.]*(?:\\<\\<.*\\>\\>)?[\\w.]*))?[\\s\xa0]*\\{$', 'lft to right direction')",[19597]
"('CommandMultilines.java', 'net.sourceforge.plantuml.command.CommandMultilines', 'isValid', '(?i)^title$', 'left to right irection')",[26872]
"('CommandMultilinesBracket.java', 'net.sourceforge.plantuml.command.CommandMultilinesBracket', 'isValid', '(?i)^skinparam[\\s\xa0]*(?:[\\s\xa0]+([\\w.]*(?:\\<\\<.*\\>\\>)?[\\w.]*))?[\\s\xa0]*\\{$', 'left to righ direction')",[25999]
"('CommandMultilines.java', 'net.sourceforge.plantuml.command.CommandMultilines', 'isValid', '(?i)^ref(#\\w+)?[\\s\xa0]+over[\\s\xa0]+((?:[\\p{L}0-9_.@]+|[""“”«»][^""“”«»]+[""“”«»])(?:[\\s\xa0]*,[\\s\xa0]*(?:[\\p{L}0-9_.@]+|[""“”«»][^""“”«»]+[""“”«»]))*)[\\s\xa0]*(#\\w+)?$', 'lef to right direction')",[20858]
"('CommandMultilines.java', 'net.sourceforge.plantuml.command.CommandMultilines', 'isValid', ""(?i)^[\\s\xa0]*/['‘’].*$"", 'left to right- direction')",[43653]
"('Scanner.java', 'java.util.Scanner', 'getCompleteTokenInBuffer', '(?s).*', '<?xml version=""1.0""?>\n<xsl:stylesheet xmlns:xsl=""http://www.w3.org/1999/XSL/Transform"" xmlns:xs=""http://www.w3.org/2001/XMLSchema"" version=""2.0"" exclude-result-prefixes=""xs"">\n    <xsl:output method=""xml"" cdata-section-elements=""svg html""/>\n    <xsl:strip-space elements=""*""/>\n    <xsl:template match=""node()|@*"">\n        <xsl:copy>\n            <xsl:apply-templates select=""node()|@*""/>\n        </xsl:copy>\n    </xsl:template>\n    <xsl:template match=""errors"">\n        <xsl:copy>\n            <xsl:apply-templates select=""node()|@*""/>\n            <xsl:for-each select=""//method"">\n                <xsl:variable name=""method"" select="".""/>\n                <xsl:for-each select=""bindings/binding"">\n                    <xsl:variable name=""self"" select="".""/>\n                    <xsl:variable name=""dups"" select=""count(../binding[name=$self/name])""/>\n                    <xsl:if test=""$dups &gt; 1"">\n                        <error type=""duplicate"" pos=""0"">\n                            <xsl:attribute name=""line"">\n                                <xsl:value-of select=""$method/mentioned/where[1]""/>\n                            </xsl:attribute>\n                            <xsl:text>method </xsl:text>\n                            <xsl:value-of select=""$method/id""/>\n                            <xsl:text> has </xsl:text>\n                            <xsl:value-of select=""$dups""/>\n                            <xsl:text> duplicate bindings: &quot;</xsl:text>\n                            <xsl:value-of select=""$self/name""/>\n                            <xsl:text>&quot;</xsl:text>\n                        </error>\n                    </xsl:if>\n                </xsl:for-each>\n            </xsl:for-each>\n        </xsl:copy>\n    </xsl:template>\n    <xsl:template match=""bindings"">\n        <xsl:copy>\n            <xsl:for-each-group select=""binding"" group-by=""name"">\n                <xsl:copy-of select=""current-group()[1]""/>\n            </xsl:for-each-group>\n        </xsl:copy>\n    </xsl:template>\n</xsl:stylesheet>\n')",[3215]
"('CommandMultilines.java', 'net.sourceforge.plantuml.command.CommandMultilines', 'isValid', '(?i)^(?:(left|right|center)?[\\s\xa0]*)footer$', 'lfet to right direction')",[32789]
"('CommandMultilines.java', 'net.sourceforge.plantuml.command.CommandMultilines', 'isValid', '(?i)^(?:(left|right|center)?[\\s\xa0]*)header$', 'lft to right direction')",[19500]
"('Scanner.java', 'java.util.Scanner', 'getCompleteTokenInBuffer', '(?s).*', '<?xml version=""1.0""?>\n<xsl:stylesheet xmlns:xsl=""http://www.w3.org/1999/XSL/Transform""\n    xmlns:r=""org.requs"" exclude-result-prefixes=""r""\n    version=""2.0"">\n    <xsl:output method=""xml"" cdata-section-elements=""svg html""/>\n    <xsl:strip-space elements=""*""/>\n    <xsl:template match=""mentioned/where"">\n        <xsl:variable name=""line"" select=""number(.)""/>\n        <xsl:copy>\n            <xsl:value-of select=""r:file(/spec/files, $line)""/>\n            <xsl:text>:</xsl:text>\n            <xsl:value-of select=""r:line(/spec/files, $line)""/>\n        </xsl:copy>\n    </xsl:template>\n    <xsl:template match=""error"">\n        <xsl:variable name=""line"" select=""number(@line)""/>\n        <xsl:copy>\n            <xsl:attribute name=""file"">\n                <xsl:value-of select=""r:file(/spec/files, $line)""/>\n            </xsl:attribute>\n            <xsl:attribute name=""line"">\n                <xsl:value-of select=""r:line(/spec/files, $line)""/>\n            </xsl:attribute>\n            <xsl:apply-templates select=""node()|(@* except @line)""/>\n        </xsl:copy>\n    </xsl:template>\n    <xsl:function name=""r:file"">\n        <xsl:param name=""files""/>\n        <xsl:param name=""line""/>\n        <xsl:value-of select=""$files/file[@line &lt;= $line and not(following-sibling::file/@line &lt;= $line)]/@id""/>\n    </xsl:function>\n    <xsl:function name=""r:line"">\n        <xsl:param name=""files""/>\n        <xsl:param name=""line""/>\n        <xsl:value-of select=""$line - $files/file[@id=r:file($files, $line)]/@line + 1""/>\n    </xsl:function>\n    <xsl:template match=""node()|@*"">\n        <xsl:copy>\n            <xsl:apply-templates select=""node()|@*""/>\n        </xsl:copy>\n    </xsl:template>\n</xsl:stylesheet>\n')",[69965]
"('Scanner.java', 'java.util.Scanner', 'getCompleteTokenInBuffer', '(?s).*', '<?xml version=""1.0""?>\n<xsl:stylesheet xmlns:xsl=""http://www.w3.org/1999/XSL/Transform""\n    xmlns:xs=""http://www.w3.org/2001/XMLSchema""\n    xmlns:re=""http://www.requs.org""\n    xmlns:r=""org.requs.facet.uml.Plant"" version=""2.0""\n    exclude-result-prefixes=""xs r re"">\n    <xsl:import href=""uml/functions.xsl""/>\n    <xsl:output method=""xml"" cdata-section-elements=""svg html""/>\n    <xsl:strip-space elements=""*""/>\n    <xsl:template match=""method"">\n        <xsl:copy>\n            <xsl:apply-templates select=""(node() except diagrams)|@*""/>\n            <xsl:variable name=""uml"">\n                <xsl:text>left to right direction&#10;</xsl:text>\n                <xsl:text>title </xsl:text>\n                <xsl:value-of select=""id""/>\n                <xsl:text>: Use Case Diagram&#10;</xsl:text>\n                <xsl:apply-templates select=""."" mode=""uml""/>\n            </xsl:variable>\n            <diagrams>\n                <xsl:apply-templates select=""diagrams/*""/>\n                <diagram>\n                    <uml>\n                        <xsl:value-of select=""$uml""/>\n                    </uml>\n                    <svg>\n                        <xsl:value-of select=""r:svg(re:plant($uml))""/>\n                    </svg>\n                </diagram>\n            </diagrams>\n        </xsl:copy>\n    </xsl:template>\n    <xsl:template match=""method"" mode=""uml"">\n        <xsl:variable name=""primary"" select=""bindings/binding[name=\'_self\']/type""/>\n        <xsl:text>actor </xsl:text>\n        <xsl:value-of select=""$primary""/>\n        <xsl:text> as primary&#10;</xsl:text>\n        <xsl:text>usecase main as</xsl:text>\n        <xsl:text>&quot;</xsl:text>\n        <xsl:value-of select=""id""/>\n        <xsl:text>&#10;</xsl:text>\n        <xsl:value-of select=""re:signature(signature)""/>\n        <xsl:text>&quot;&#10;</xsl:text>\n        <xsl:text>primary -> main&#10;</xsl:text>\n        <xsl:for-each select="".//signature[@ref]"">\n            <xsl:text>usecase </xsl:text>\n            <xsl:value-of select=""@ref""/>\n            <xsl:text>as &quot;</xsl:text>\n            <xsl:value-of select=""@ref""/>\n            <xsl:text>&#10;</xsl:text>\n            <xsl:value-of select=""re:signature(/spec/methods/method[id=current()/@ref]/signature)""/>\n            <xsl:text>&quot;&#10;</xsl:text>\n            <xsl:text>main ---> </xsl:text>\n            <xsl:value-of select=""@ref""/>\n            <xsl:text>&#10;</xsl:text>\n        </xsl:for-each>\n    </xsl:template>\n    <xsl:template match=""node()|@*"">\n        <xsl:copy>\n            <xsl:apply-templates select=""node()|@*""/>\n        </xsl:copy>\n    </xsl:template>\n</xsl:stylesheet>\n')",[8893]
"('HtmlColorUtils.java', 'net.sourceforge.plantuml.graphic.HtmlColorUtils', 'build', '[0-9A-Fa-f]{6}', 'b38d22')","[66987, 67084]"
"('HtmlColorUtils.java', 'net.sourceforge.plantuml.graphic.HtmlColorUtils', 'isValid', '[0-9A-Fa-f]{6}', '038048')","[67572, 67669]"
"('CommandMultilines.java', 'net.sourceforge.plantuml.command.CommandMultilines', 'isValid', '(?i)^(?:(left|right|center)?[\\s\xa0]*)footer$', 'left- to right direction')",[41519]
"('CommandMultilinesBracket.java', 'net.sourceforge.plantuml.command.CommandMultilinesBracket', 'isValid', '(?i)^skinparam[\\s\xa0]*(?:[\\s\xa0]+([\\w.]*(?:\\<\\<.*\\>\\>)?[\\w.]*))?[\\s\xa0]*\\{$', 'left to right -direction')",[44623]
"('Scanner.java', 'java.util.Scanner', 'getCompleteTokenInBuffer', '(?s).*', '<?xml version=""1.0""?>\n<xsl:stylesheet xmlns:xsl=""http://www.w3.org/1999/XSL/Transform"" xmlns:xs=""http://www.w3.org/2001/XMLSchema"" version=""2.0"" exclude-result-prefixes=""xs"">\n    <xsl:output method=""xml"" cdata-section-elements=""svg html""/>\n    <xsl:strip-space elements=""*"" />\n    <xsl:template match=""node()|@*"">\n        <xsl:copy>\n            <xsl:apply-templates select=""node()|@*""/>\n        </xsl:copy>\n    </xsl:template>\n    <xsl:template match=""errors"">\n        <xsl:copy>\n            <xsl:apply-templates select=""node()|@*""/>\n            <xsl:for-each select=""//step[count(result) &gt; 1]"">\n                <error type=""syntax"" pos=""0"">\n                    <xsl:attribute name=""line"">\n                        <xsl:value-of select=""mentioned/where[1]""/>\n                    </xsl:attribute>\n                    <xsl:text>step </xsl:text>\n                    <xsl:value-of select=""number""/>\n                    <xsl:text> has </xsl:text>\n                    <xsl:value-of select=""count(result)""/>\n                    <xsl:text> results</xsl:text>\n                </error>\n            </xsl:for-each>\n        </xsl:copy>\n    </xsl:template>\n    <xsl:template match=""//step[count(result) &gt; 1]"">\n        <xsl:copy>\n            <xsl:apply-templates select=""(node() except result)|@*""/>\n            <result>\n                <xsl:value-of select=""result[1]""/>\n            </result>\n        </xsl:copy>\n    </xsl:template>\n</xsl:stylesheet>\n')",[1935]
"('CommandMultilines.java', 'net.sourceforge.plantuml.command.CommandMultilines', 'isValid', '(?i)^(?:(left|right|center)?[\\s\xa0]*)header$', 'eft to right direction')",[18918]
"('CommandMultilinesBracket.java', 'net.sourceforge.plantuml.command.CommandMultilinesBracket', 'isValid', '(?i)^skinparam[\\s\xa0]*(?:[\\s\xa0]+([\\w.]*(?:\\<\\<.*\\>\\>)?[\\w.]*))?[\\s\xa0]*\\{$', 'left to right irection')",[27163]
"('HtmlColorUtils.java', 'net.sourceforge.plantuml.graphic.HtmlColorUtils', 'isValid', '[0-9A-Fa-f]{6}', 'eb937f')","[62502, 62599]"
"('CommandMultilines.java', 'net.sourceforge.plantuml.command.CommandMultilines', 'isValid', '(?i)^title$', 'left to -right direction')",[43168]
"('CommandMultilines.java', 'net.sourceforge.plantuml.command.CommandMultilines', 'isValid', '(?i)^(?:(left|right|center)?[\\s\xa0]*)header$', 'skinparam titleFontStyle bold')","[10960, 11332, 14906, 15286, 15666, 49513, 49885]"
"('CommandMultilines.java', 'net.sourceforge.plantuml.command.CommandMultilines', 'isValid', '(?i)^ref(#\\w+)?[\\s\xa0]+over[\\s\xa0]+((?:[\\p{L}0-9_.@]+|[""“”«»][^""“”«»]+[""“”«»])(?:[\\s\xa0]*,[\\s\xa0]*(?:[\\p{L}0-9_.@]+|[""“”«»][^""“”«»]+[""“”«»]))*)[\\s\xa0]*(#\\w+)?$', 'left to right drection')",[27842]
"('Scanner.java', 'java.util.Scanner', 'getCompleteTokenInBuffer', '(?s).*', '<?xml version=""1.0""?>\n<xsl:stylesheet xmlns:xsl=""http://www.w3.org/1999/XSL/Transform"" xmlns:xs=""http://www.w3.org/2001/XMLSchema"" version=""2.0"" exclude-result-prefixes=""xs"">\n    <xsl:output method=""xml"" cdata-section-elements=""svg html""/>\n    <xsl:strip-space elements=""*"" />\n    <xsl:template match=""node()|@*"">\n        <xsl:copy>\n            <xsl:apply-templates select=""node()|@*""/>\n        </xsl:copy>\n    </xsl:template>\n    <xsl:template match=""errors"">\n        <xsl:copy>\n            <xsl:apply-templates select=""node()|@*""/>\n            <xsl:for-each select=""//step[not(signature)]"">\n                <error type=""lost"" pos=""0"">\n                    <xsl:attribute name=""line"">\n                        <xsl:value-of select=""mentioned/where[1]""/>\n                    </xsl:attribute>\n                    <xsl:text>step </xsl:text>\n                    <xsl:value-of select=""number""/>\n                    <xsl:text> doesn\'t have a signature</xsl:text>\n                </error>\n            </xsl:for-each>\n        </xsl:copy>\n    </xsl:template>\n    <xsl:template match=""step[not(signature)]"">\n        <xsl:copy>\n            <xsl:apply-templates select=""node()|@*""/>\n            <signature>unknown</signature>\n        </xsl:copy>\n    </xsl:template>\n</xsl:stylesheet>\n')",[3619]
"('CommandMultilinesBracket.java', 'net.sourceforge.plantuml.command.CommandMultilinesBracket', 'isValid', '(?i)^skinparam[\\s\xa0]*(?:[\\s\xa0]+([\\w.]*(?:\\<\\<.*\\>\\>)?[\\w.]*))?[\\s\xa0]*\\{$', 'left to right diretcion')",[39385]
"('CommandMultilinesBracket.java', 'net.sourceforge.plantuml.command.CommandMultilinesBracket', 'isValid', '(?i)^skinparam[\\s\xa0]*(?:[\\s\xa0]+([\\w.]*(?:\\<\\<.*\\>\\>)?[\\w.]*))?[\\s\xa0]*\\{$', 'eft to right direction')",[19015]
"('CommandMultilines.java', 'net.sourceforge.plantuml.command.CommandMultilines', 'isValid', '(?i)^(?:(left|right|center)?[\\s\xa0]*)header$', 'left toright direction')",[22992]
"('HtmlColorUtils.java', 'net.sourceforge.plantuml.graphic.HtmlColorUtils', 'isValid', '[0-9A-Fa-f]{6}', 'b4a7e5')","[62112, 62209]"
"('DomParser.java', 'com.jcabi.xml.DomParser', '<init>', '(?:<\\?xml.*\\?>\\s*)?(?:<!DOCTYPE.*>)?(?:<!--.*-->)?\\<[_\\:a-zA-ZÀ-ÖØ-öø-˿Ͱ-ͽͿ-\u1fff\u200c-\u200d⁰-\u218fⰀ-\u2fef、-\ud7ff豈-\ufdcfﷰ-�](?:[·\\.\\-0-9̀-ͯ‿-⁀])*.*(?:[_\\:a-zA-ZÀ-ÖØ-öø-˿Ͱ-ͽͿ-\u1fff\u200c-\u200d⁰-\u218fⰀ-\u2fef、-\ud7ff豈-\ufdcfﷰ-�](?:[·\\.\\-0-9̀-ͯ‿-⁀])*|/)\\>', '<?xmlversion=""1.0""encoding=""UTF-8""?><?xml-stylesheethref=\'requs.xsl\'type=\'text/xsl\'?><spec/>')",[700]
"('CommandMultilines.java', 'net.sourceforge.plantuml.command.CommandMultilines', 'isValid', '(?i)^(?:(left|right|center)?[\\s\xa0]*)footer$', 'left toright direction')",[22895]
"('HtmlColorUtils.java', 'net.sourceforge.plantuml.graphic.HtmlColorUtils', 'build', '[0-9A-Fa-f]{6}', 'add1b2')","[61527, 61624]"
"('Scanner.java', 'java.util.Scanner', 'getCompleteTokenInBuffer', '(?s).*', '<?xml version=""1.0""?>\n<xsl:stylesheet xmlns:xsl=""http://www.w3.org/1999/XSL/Transform"" xmlns:xs=""http://www.w3.org/2001/XMLSchema"" version=""2.0"" exclude-result-prefixes=""xs"">\n    <xsl:output method=""xml"" cdata-section-elements=""svg html""/>\n    <xsl:strip-space elements=""*"" />\n    <xsl:template match=""node()|@*"">\n        <xsl:copy>\n            <xsl:apply-templates select=""node()|@*""/>\n        </xsl:copy>\n    </xsl:template>\n    <xsl:template match=""errors"">\n        <xsl:copy>\n            <xsl:apply-templates select=""node()|@*""/>\n            <xsl:for-each select=""//step[count(signature) &gt; 1]"">\n                <error type=""syntax"" pos=""0"">\n                    <xsl:attribute name=""line"">\n                        <xsl:value-of select=""mentioned/where[1]""/>\n                    </xsl:attribute>\n                    <xsl:text>step </xsl:text>\n                    <xsl:value-of select=""number""/>\n                    <xsl:text> has </xsl:text>\n                    <xsl:value-of select=""count(signature)""/>\n                    <xsl:text> signatures</xsl:text>\n                </error>\n            </xsl:for-each>\n        </xsl:copy>\n    </xsl:template>\n    <xsl:template match=""//step[count(signature) &gt; 1]"">\n        <xsl:copy>\n            <xsl:apply-templates select=""(node() except signature)|@*""/>\n            <signature>\n                <xsl:value-of select=""signature[1]""/>\n            </signature>\n        </xsl:copy>\n    </xsl:template>\n</xsl:stylesheet>\n')",[1523]
"('Scanner.java', 'java.util.Scanner', 'getCompleteTokenInBuffer', '(?s).*', '<?xml version=""1.0""?>\n<xsl:stylesheet xmlns:xsl=""http://www.w3.org/1999/XSL/Transform"" xmlns:xs=""http://www.w3.org/2001/XMLSchema"" version=""2.0"" exclude-result-prefixes=""xs"">\n    <xsl:output method=""xml"" cdata-section-elements=""svg html""/>\n    <xsl:strip-space elements=""*""/>\n    <xsl:template match=""/spec/errors"">\n        <xsl:copy>\n            <xsl:apply-templates select=""error""/>\n            <xsl:for-each select=""//step[number(preceding-sibling::step[1]/number) &lt; (number(number) - 1)]"">\n                <error type=""semantic"" pos=""0"">\n                    <xsl:attribute name=""line"">\n                        <xsl:value-of select=""mentioned/where[1]""/>\n                    </xsl:attribute>\n                    <xsl:text>Step &quot;</xsl:text>\n                    <xsl:value-of select=""number""/>\n                    <xsl:text>&quot; follows &quot;</xsl:text>\n                    <xsl:value-of select=""preceding-sibling::step[1]/number""/>\n                    <xsl:text>&quot;, some steps are probably missing</xsl:text>\n                </error>\n            </xsl:for-each>\n        </xsl:copy>\n    </xsl:template>\n    <xsl:template match=""node()|@*"">\n        <xsl:copy>\n            <xsl:apply-templates select=""node()|@*""/>\n        </xsl:copy>\n    </xsl:template>\n</xsl:stylesheet>\n')",[5859]
"('HtmlColorUtils.java', 'net.sourceforge.plantuml.graphic.HtmlColorUtils', 'isValid', '[0-9A-Fa-f]{6}', 'dddddd')","[63282, 63379, 64842, 64939]"
"('CommandMultilines.java', 'net.sourceforge.plantuml.command.CommandMultilines', 'isValid', '(?i)^title$', 'lef to right direction')",[20470]
"('CommandMultilines.java', 'net.sourceforge.plantuml.command.CommandMultilines', 'isValid', '(?i)^title$', 'left to right diretion')",[29200]
"('CommandMultilines.java', 'net.sourceforge.plantuml.command.CommandMultilines', 'isValid', '(?i)^ref(#\\w+)?[\\s\xa0]+over[\\s\xa0]+((?:[\\p{L}0-9_.@]+|[""“”«»][^""“”«»]+[""“”«»])(?:[\\s\xa0]*,[\\s\xa0]*(?:[\\p{L}0-9_.@]+|[""“”«»][^""“”«»]+[""“”«»]))*)[\\s\xa0]*(#\\w+)?$', 'left to right irection')",[27260]
"('HtmlColorUtils.java', 'net.sourceforge.plantuml.graphic.HtmlColorUtils', 'build', '[0-9A-Fa-f]{6}', 'b4a7e5')","[62307, 62404]"
"('CommandMultilines.java', 'net.sourceforge.plantuml.command.CommandMultilines', 'isValid', '(?i)^title$', 'left to right idrection')",[36766]
"('Scanner.java', 'java.util.Scanner', 'getCompleteTokenInBuffer', '(?s).*', '<?xml version=""1.0""?>\n<xsl:stylesheet xmlns:xsl=""http://www.w3.org/1999/XSL/Transform"" xmlns:xs=""http://www.w3.org/2001/XMLSchema"" version=""2.0"" exclude-result-prefixes=""xs"">\n    <xsl:output method=""xml"" cdata-section-elements=""svg html""/>\n    <xsl:strip-space elements=""*""/>\n    <xsl:template match=""/spec/errors"">\n        <xsl:copy>\n            <xsl:apply-templates select=""error""/>\n            <xsl:for-each select=""//method"">\n                <xsl:variable name=""method"" select="".""/>\n                <xsl:for-each select="".//step"">\n                    <xsl:variable name=""step"" select="".""/>\n                    <xsl:if test=""$step/object and not($method/bindings/binding[name=$step/object])"">\n                        <xsl:call-template name=""error"">\n                            <xsl:with-param name=""method"" select=""$method""/>\n                            <xsl:with-param name=""step"" select=""$step""/>\n                            <xsl:with-param name=""ref"" select=""$step/object""/>\n                        </xsl:call-template>\n                    </xsl:if>\n                    <xsl:if test=""$step/result and not($method/bindings/binding[name=$step/result])"">\n                        <xsl:call-template name=""error"">\n                            <xsl:with-param name=""method"" select=""$method""/>\n                            <xsl:with-param name=""step"" select=""$step""/>\n                            <xsl:with-param name=""ref"" select=""$step/result""/>\n                        </xsl:call-template>\n                    </xsl:if>\n                    <xsl:for-each select=""$step/args/arg"">\n                        <xsl:variable name=""arg"" select="".""/>\n                        <xsl:if test=""not($method/bindings/binding[name=$arg])"">\n                            <xsl:call-template name=""error"">\n                                <xsl:with-param name=""method"" select=""$method""/>\n                                <xsl:with-param name=""step"" select=""$step""/>\n                                <xsl:with-param name=""ref"" select="".""/>\n                            </xsl:call-template>\n                        </xsl:if>\n                    </xsl:for-each>\n                </xsl:for-each>\n            </xsl:for-each>\n        </xsl:copy>\n    </xsl:template>\n    <xsl:template name=""error"">\n        <xsl:param name=""method""/>\n        <xsl:param name=""step""/>\n        <xsl:param name=""ref""/>\n        <error type=""semantic"" pos=""0"">\n            <xsl:attribute name=""line"">\n                <xsl:value-of select=""$step/mentioned/where[1]""/>\n            </xsl:attribute>\n            <xsl:text>&quot;</xsl:text>\n            <xsl:value-of select=""$ref""/>\n            <xsl:text>&quot; is mentioned in step &quot;</xsl:text>\n            <xsl:value-of select=""$step/number""/>\n            <xsl:text>&quot; but was never declared in method &quot;</xsl:text>\n            <xsl:value-of select=""$method/id""/>\n            <xsl:text>&quot;</xsl:text>\n        </error>\n    </xsl:template>\n    <xsl:template match=""node()|@*"">\n        <xsl:copy>\n            <xsl:apply-templates select=""node()|@*""/>\n        </xsl:copy>\n    </xsl:template>\n</xsl:stylesheet>\n')",[6683]
"('CommandMultilines.java', 'net.sourceforge.plantuml.command.CommandMultilines', 'isValid', '(?i)^ref(#\\w+)?[\\s\xa0]+over[\\s\xa0]+((?:[\\p{L}0-9_.@]+|[""“”«»][^""“”«»]+[""“”«»])(?:[\\s\xa0]*,[\\s\xa0]*(?:[\\p{L}0-9_.@]+|[""“”«»][^""“”«»]+[""“”«»]))*)[\\s\xa0]*(#\\w+)?$', 'left to right direciton')",[40064]
"('CommandMultilinesBracket.java', 'net.sourceforge.plantuml.command.CommandMultilinesBracket', 'isValid', '(?i)^skinparam[\\s\xa0]*(?:[\\s\xa0]+([\\w.]*(?:\\<\\<.*\\>\\>)?[\\w.]*))?[\\s\xa0]*\\{$', 'left to rigt direction')",[25417]
"('CommandMultilines.java', 'net.sourceforge.plantuml.command.CommandMultilines', 'isValid', '(?i)^(?:(left|right|center)?[\\s\xa0]*)footer$', 'left  to right direction')","[45011, 45593]"
"('CommandMultilines.java', 'net.sourceforge.plantuml.command.CommandMultilines', 'isValid', '(?i)^(?:(left|right|center)?[\\s\xa0]*)header$', 'letf to right direction')",[33468]
"('CommandMultilines.java', 'net.sourceforge.plantuml.command.CommandMultilines', 'isValid', '(?i)^title$', 'left to rigt direction')",[25126]
"('Scanner.java', 'java.util.Scanner', 'getCompleteTokenInBuffer', '(?s).*', '<?xml version=""1.0""?>\n<xsl:stylesheet xmlns:xsl=""http://www.w3.org/1999/XSL/Transform"" xmlns:xs=""http://www.w3.org/2001/XMLSchema"" version=""2.0"" exclude-result-prefixes=""xs"">\n    <xsl:output method=""xml"" cdata-section-elements=""svg html""/>\n    <xsl:strip-space elements=""*""/>\n    <xsl:template match=""/spec/errors"">\n        <xsl:copy>\n            <xsl:apply-templates select=""error""/>\n            <xsl:for-each select=""/spec/types/type"">\n                <xsl:variable name=""type"" select="".""/>\n                <xsl:if test=""not(//binding/type=$type/name) and not(//slot/type=$type/name)"">\n                    <error type=""seal"" pos=""0"">\n                        <xsl:attribute name=""line"">\n                            <xsl:value-of select=""$type/mentioned/where[1]""/>\n                        </xsl:attribute>\n                        <xsl:text>Type &quot;</xsl:text>\n                        <xsl:value-of select=""$type/name""/>\n                        <xsl:text>&quot; is not used in any slot or a use case</xsl:text>\n                    </error>\n                </xsl:if>\n            </xsl:for-each>\n        </xsl:copy>\n    </xsl:template>\n    <xsl:template match=""node()|@*"">\n        <xsl:copy>\n            <xsl:apply-templates select=""node()|@*""/>\n        </xsl:copy>\n    </xsl:template>\n</xsl:stylesheet>\n')",[6450]
"('CommandMultilines.java', 'net.sourceforge.plantuml.command.CommandMultilines', 'isValid', ""(?i)^[\\s\xa0]*/['‘’].*$"", 'elft to right direction')",[32013]
"('CommandMultilines.java', 'net.sourceforge.plantuml.command.CommandMultilines', 'isValid', ""(?i)^[\\s\xa0]*/['‘’].*$"", 'left to- right direction')",[42489]
"('CommandMultilines.java', 'net.sourceforge.plantuml.command.CommandMultilines', 'isValid', '(?i)^(?:(left|right|center)?[\\s\xa0]*)footer$', 'left to right idrection')",[36863]
"('DecimalValue.java', 'net.sf.saxon.value.DecimalValue', 'makeDecimalValue', '(\\-|\\+)?((\\.[0-9]+)|([0-9]+(\\.[0-9]*)?))', '2.0')","[1389, 1595, 1801, 2007, 2231, 2450, 2661, 2867, 3073, 3287, 3489, 3691, 3892, 4091, 4294, 4496, 4699, 4932, 5139, 5340, 5536, 5733, 5931, 6125, 6323, 6522, 6755, 6957, 7152, 7577, 7834, 8037, 8290, 8532, 8608, 8965, 9041, 9409, 9485, 70037]"
"('CommandMultilines.java', 'net.sourceforge.plantuml.command.CommandMultilines', 'isValid', '(?i)^(?:(left|right|center)?[\\s\xa0]*)footer$', 'left to right -direction')",[44429]
"('HtmlColorUtils.java', 'net.sourceforge.plantuml.graphic.HtmlColorUtils', 'build', '[0-9A-Fa-f]{6}', 'eb937f')","[62697, 62794]"
"('HtmlColorUtils.java', 'net.sourceforge.plantuml.graphic.HtmlColorUtils', 'build', '[0-9A-Fa-f]{6}', 'ff0000')","[56979, 57082]"
"('CommandMultilinesBracket.java', 'net.sourceforge.plantuml.command.CommandMultilinesBracket', 'isValid', '(?i)^skinparam[\\s\xa0]*(?:[\\s\xa0]+([\\w.]*(?:\\<\\<.*\\>\\>)?[\\w.]*))?[\\s\xa0]*\\{$', 'left to irght direction')",[34729]
"('CommandMultilines.java', 'net.sourceforge.plantuml.command.CommandMultilines', 'isValid', '(?i)^(?:(left|right|center)?[\\s\xa0]*)header$', 'left ot right direction')",[34050]
"('CommandMultilines.java', 'net.sourceforge.plantuml.command.CommandMultilines', 'isValid', ""(?i)^[\\s\xa0]*/['‘’].*$"", 'left to rightdirection')",[26193]
"('CommandMultilinesBracket.java', 'net.sourceforge.plantuml.command.CommandMultilinesBracket', 'isValid', '(?i)^skinparam[\\s\xa0]*(?:[\\s\xa0]+([\\w.]*(?:\\<\\<.*\\>\\>)?[\\w.]*))?[\\s\xa0]*\\{$', 'left to ight direction')",[23671]
"('CommandMultilinesBracket.java', 'net.sourceforge.plantuml.command.CommandMultilinesBracket', 'isValid', '(?i)^skinparam[\\s\xa0]*(?:[\\s\xa0]+([\\w.]*(?:\\<\\<.*\\>\\>)?[\\w.]*))?[\\s\xa0]*\\{$', 'left to right directin')",[31237]
"('CommandMultilinesBracket.java', 'net.sourceforge.plantuml.command.CommandMultilinesBracket', 'isValid', '(?i)^skinparam[\\s\xa0]*(?:[\\s\xa0]+([\\w.]*(?:\\<\\<.*\\>\\>)?[\\w.]*))?[\\s\xa0]*\\{$', 'lfet to right direction')",[32983]
"('CommandMultilines.java', 'net.sourceforge.plantuml.command.CommandMultilines', 'isValid', '(?i)^(?:(left|right|center)?[\\s\xa0]*)header$', 'left to right directino')",[41034]
"('HtmlColorUtils.java', 'net.sourceforge.plantuml.graphic.HtmlColorUtils', 'build', '[0-9A-Fa-f]{6}', 'black')","[55323, 55426, 59889, 59996, 60319, 60426, 60740, 60844, 68936, 69034]"
"('CommandMultilinesBracket.java', 'net.sourceforge.plantuml.command.CommandMultilinesBracket', 'isValid', '(?i)^skinparam[\\s\xa0]*(?:[\\s\xa0]+([\\w.]*(?:\\<\\<.*\\>\\>)?[\\w.]*))?[\\s\xa0]*\\{$', 'left to rihgt direction')",[35893]
"('CommandMultilines.java', 'net.sourceforge.plantuml.command.CommandMultilines', 'isValid', '(?i)^(?:(left|right|center)?[\\s\xa0]*)footer$', 'left to righ direction')",[25805]
"('CommandMultilines.java', 'net.sourceforge.plantuml.command.CommandMultilines', 'isValid', ""(?i)^[\\s\xa0]*/['‘’].*$"", 'left to right direciton')",[39579]
"('Replace.java', 'net.sf.saxon.functions.Replace', 'maybePrecompile', '[\\n\\x20]+', '')",[7636]
"('CommandMultilines.java', 'net.sourceforge.plantuml.command.CommandMultilines', 'isValid', '(?i)^(?:(left|right|center)?[\\s\xa0]*)header$', 'left to righ direction')",[25902]
"('CommandMultilines.java', 'net.sourceforge.plantuml.command.CommandMultilines', 'isValid', '(?i)^title$', 'skinparam titleFontSize 13')","[10030, 10402, 13570, 13952, 14332, 48583, 48955]"
"('CommandMultilines.java', 'net.sourceforge.plantuml.command.CommandMultilines', 'isValid', '(?i)^title$', 'left to right- direction')",[43750]
"('CommandMultilines.java', 'net.sourceforge.plantuml.command.CommandMultilines', 'isValid', '(?i)^ref(#\\w+)?[\\s\xa0]+over[\\s\xa0]+((?:[\\p{L}0-9_.@]+|[""“”«»][^""“”«»]+[""“”«»])(?:[\\s\xa0]*,[\\s\xa0]*(?:[\\p{L}0-9_.@]+|[""“”«»][^""“”«»]+[""“”«»]))*)[\\s\xa0]*(#\\w+)?$', 'let to right direction')",[20276]
"('CommandMultilines.java', 'net.sourceforge.plantuml.command.CommandMultilines', 'isValid', '(?i)^(?:(left|right|center)?[\\s\xa0]*)footer$', 'left ot right direction')",[33953]
"('Scanner.java', 'java.util.Scanner', 'getCompleteTokenInBuffer', '(?s).*', '<?xml version=""1.0""?>\n<xsl:stylesheet xmlns:xsl=""http://www.w3.org/1999/XSL/Transform"" xmlns:xs=""http://www.w3.org/2001/XMLSchema"" version=""2.0"" exclude-result-prefixes=""xs"">\n    <xsl:output method=""xml"" cdata-section-elements=""svg html""/>\n    <xsl:strip-space elements=""*"" />\n    <xsl:template match=""node()|@*"">\n        <xsl:copy>\n            <xsl:apply-templates select=""node()|@*""/>\n        </xsl:copy>\n    </xsl:template>\n    <xsl:template match=""errors"">\n        <xsl:copy>\n            <xsl:apply-templates select=""node()|@*""/>\n            <xsl:for-each select=""//step[exceptions/exception and not(signature) and not(object)]"">\n                <error type=""lost"" pos=""0"">\n                    <xsl:attribute name=""line"">\n                        <xsl:choose>\n                            <xsl:when test=""exceptions/exception/steps/step/mentioned/where"">\n                                <xsl:value-of select=""exceptions/exception[1]/steps/step[1]/mentioned/where[1]""/>\n                            </xsl:when>\n                            <xsl:otherwise>\n                                <xsl:text>0:0</xsl:text>\n                            </xsl:otherwise>\n                        </xsl:choose>\n                    </xsl:attribute>\n                    <xsl:text>step &quot;</xsl:text>\n                    <xsl:value-of select=""number""/>\n                    <xsl:text>&quot; of method &quot;</xsl:text>\n                    <xsl:value-of select=""../../id""/>\n                    <xsl:text>&quot; was mentioned but never declared</xsl:text>\n                </error>\n            </xsl:for-each>\n        </xsl:copy>\n    </xsl:template>\n    <xsl:template match=""step[exceptions/exception and not(signature) and not(object)]"">\n        <xsl:copy>\n            <xsl:apply-templates select=""(node() except mentioned)|@*""/>\n            <signature>""undefined""</signature>\n            <object>_self</object>\n            <mentioned>\n                <where>\n                    <xsl:choose>\n                        <xsl:when test=""exceptions/exception/steps/step/mentioned/where"">\n                            <xsl:value-of select=""exceptions/exception[1]/steps/step[1]/mentioned/where[1]""/>\n                        </xsl:when>\n                        <xsl:otherwise>\n                            <xsl:text>0:0</xsl:text>\n                        </xsl:otherwise>\n                    </xsl:choose>\n                </where>\n            </mentioned>\n        </xsl:copy>\n    </xsl:template>\n</xsl:stylesheet>\n')",[2159]
"('CommandMultilines.java', 'net.sourceforge.plantuml.command.CommandMultilines', 'isValid', '(?i)^(?:(left|right|center)?[\\s\xa0]*)footer$', 'left to rihgt direction')",[35699]
"('CommandMultilines.java', 'net.sourceforge.plantuml.command.CommandMultilines', 'isValid', '(?i)^(?:(left|right|center)?[\\s\xa0]*)footer$', 'skinparam sequenceTitleFontStyle bold')","[12355, 12727, 17098, 17479, 17859, 50908, 51280]"
"('HtmlColorUtils.java', 'net.sourceforge.plantuml.graphic.HtmlColorUtils', 'isValid', '[0-9A-Fa-f]{6}', 'cd0a0a')","[56358, 56461]"
"('CommandMultilines.java', 'net.sourceforge.plantuml.command.CommandMultilines', 'isValid', '(?i)^(?:(left|right|center)?[\\s\xa0]*)footer$', 'left -to right direction')",[42101]
"('CommandMultilines.java', 'net.sourceforge.plantuml.command.CommandMultilines', 'isValid', ""(?i)^[\\s\xa0]*/['‘’].*$"", 'left to riht direction')",[24447]
"('CommandMultilines.java', 'net.sourceforge.plantuml.command.CommandMultilines', 'isValid', '(?i)^ref(#\\w+)?[\\s\xa0]+over[\\s\xa0]+((?:[\\p{L}0-9_.@]+|[""“”«»][^""“”«»]+[""“”«»])(?:[\\s\xa0]*,[\\s\xa0]*(?:[\\p{L}0-9_.@]+|[""“”«»][^""“”«»]+[""“”«»]))*)[\\s\xa0]*(#\\w+)?$', 'left to rgiht direction')",[35408]
"('Scanner.java', 'java.util.Scanner', 'getCompleteTokenInBuffer', '(?s).*', '<?xml version=""1.0""?>\n<xsl:stylesheet xmlns:xsl=""http://www.w3.org/1999/XSL/Transform""\n    xmlns:xs=""http://www.w3.org/2001/XMLSchema""\n    xmlns:digest=""org.apache.commons.codec.digest.DigestUtils""\n    xmlns:r=""http://www.requs.org/"" version=""2.0""\n    exclude-result-prefixes=""xs r digest"">\n    <xsl:output method=""xml"" cdata-section-elements=""svg html""/>\n    <xsl:strip-space elements=""*""/>\n    <xsl:template match=""/spec"">\n        <xsl:copy>\n            <xsl:apply-templates select=""node()|@*""/>\n            <tbds>\n                <xsl:apply-templates select=""methods"" mode=""x""/>\n            </tbds>\n        </xsl:copy>\n    </xsl:template>\n    <xsl:template match=""methods"" mode=""x"">\n        <xsl:for-each select=""method[info/informal]"">\n            <tbd>\n                <xsl:attribute name=""id"">\n                    <xsl:value-of select=""r:identifier(id)""/>\n                </xsl:attribute>\n                <subject>\n                    <xsl:value-of select=""id""/>\n                </subject>\n                <description>\n                    <xsl:text>Method </xsl:text>\n                    <xsl:value-of select=""id""/>\n                    <xsl:text> has </xsl:text>\n                    <xsl:variable name=""total"" select=""count(info/informal)""/>\n                    <xsl:choose>\n                        <xsl:when test=""$total = 1"">\n                            <xsl:text>an informal description</xsl:text>\n                            <xsl:text> that increases its ambiguity</xsl:text>\n                            <xsl:text> and has to be eliminated</xsl:text>\n                        </xsl:when>\n                        <xsl:when test=""$total &lt; 4"">\n                            <xsl:value-of select=""$total""/>\n                            <xsl:text> informal statements in its description,</xsl:text>\n                            <xsl:text> which increase ambiguity</xsl:text>\n                            <xsl:text> and have to be eliminated</xsl:text>\n                        </xsl:when>\n                        <xsl:otherwise>\n                            <xsl:text>a lot of informality in its description</xsl:text>\n                            <xsl:text> that significantly increases ambiguity</xsl:text>\n                            <xsl:text> and has to be eliminated</xsl:text>\n                        </xsl:otherwise>\n                    </xsl:choose>\n                </description>\n            </tbd>\n        </xsl:for-each>\n        <xsl:for-each select=""method/steps/step[starts-with(signature,\'&quot;\')]"">\n            <tbd>\n                <xsl:attribute name=""id"">\n                    <xsl:value-of select=""r:identifier(concat(../../id, \'/\', number))""/>\n                </xsl:attribute>\n                <subject>\n                    <xsl:value-of select=""../../id""/>\n                </subject>\n                <description>\n                    <xsl:text>Step #</xsl:text>\n                    <xsl:value-of select=""number""/>\n                    <xsl:text> in method </xsl:text>\n                    <xsl:value-of select=""../../id""/>\n                    <xsl:text> has an informal signature </xsl:text>\n                    <xsl:value-of select=""signature""/>\n                    <xsl:text> that increases the ambiguity</xsl:text>\n                    <xsl:text> of the entire method and has to be eliminated</xsl:text>\n                </description>\n            </tbd>\n        </xsl:for-each>\n    </xsl:template>\n    <xsl:function name=""r:identifier"" as=""xs:string"">\n        <xsl:param name=""text"" as=""xs:string""/>\n        <xsl:value-of select=""concat(\'TBD-\', substring(digest:md5Hex(xs:string($text)), 28))""/>\n    </xsl:function>\n    <xsl:template match=""node()|@*"">\n        <xsl:copy>\n            <xsl:apply-templates select=""node()|@*""/>\n        </xsl:copy>\n    </xsl:template>\n</xsl:stylesheet>\n')",[8218]
"('CommandMultilines.java', 'net.sourceforge.plantuml.command.CommandMultilines', 'isValid', '(?i)^(?:(left|right|center)?[\\s\xa0]*)header$', 'left to right direction')","[13192, 18338, 51745, 52210]"
"('HtmlColorUtils.java', 'net.sourceforge.plantuml.graphic.HtmlColorUtils', 'isValid', '[0-9A-Fa-f]{6}', '1963a0')","[66012, 66109]"
"('CommandMultilines.java', 'net.sourceforge.plantuml.command.CommandMultilines', 'isValid', '(?i)^ref(#\\w+)?[\\s\xa0]+over[\\s\xa0]+((?:[\\p{L}0-9_.@]+|[""“”«»][^""“”«»]+[""“”«»])(?:[\\s\xa0]*,[\\s\xa0]*(?:[\\p{L}0-9_.@]+|[""“”«»][^""“”«»]+[""“”«»]))*)[\\s\xa0]*(#\\w+)?$', 'left to right- direction')",[44138]
"('CommandMultilinesBracket.java', 'net.sourceforge.plantuml.command.CommandMultilinesBracket', 'isValid', '(?i)^skinparam[\\s\xa0]*(?:[\\s\xa0]+([\\w.]*(?:\\<\\<.*\\>\\>)?[\\w.]*))?[\\s\xa0]*\\{$', 'left to right- direction')",[44041]
"('CommandMultilines.java', 'net.sourceforge.plantuml.command.CommandMultilines', 'isValid', '(?i)^(?:(left|right|center)?[\\s\xa0]*)header$', 'left to right directin')",[31140]
"('CommandMultilinesBracket.java', 'net.sourceforge.plantuml.command.CommandMultilinesBracket', 'isValid', '(?i)^skinparam[\\s\xa0]*(?:[\\s\xa0]+([\\w.]*(?:\\<\\<.*\\>\\>)?[\\w.]*))?[\\s\xa0]*\\{$', 'left toright direction')",[23089]
"('CommandMultilines.java', 'net.sourceforge.plantuml.command.CommandMultilines', 'isValid', ""(?i)^[\\s\xa0]*/['‘’].*$"", 'lfet to right direction')",[32595]
"('HtmlColorUtils.java', 'net.sourceforge.plantuml.graphic.HtmlColorUtils', 'build', '[0-9A-Fa-f]{6}', 'cd0a0a')","[56565, 56668]"
"('CommandMultilinesBracket.java', 'net.sourceforge.plantuml.command.CommandMultilinesBracket', 'isValid', '(?i)^skinparam[\\s\xa0]*(?:[\\s\xa0]+([\\w.]*(?:\\<\\<.*\\>\\>)?[\\w.]*))?[\\s\xa0]*\\{$', 'left to right diection')",[28327]
"('CommandMultilines.java', 'net.sourceforge.plantuml.command.CommandMultilines', 'isValid', '(?i)^ref(#\\w+)?[\\s\xa0]+over[\\s\xa0]+((?:[\\p{L}0-9_.@]+|[""“”«»][^""“”«»]+[""“”«»])(?:[\\s\xa0]*,[\\s\xa0]*(?:[\\p{L}0-9_.@]+|[""“”«»][^""“”«»]+[""“”«»]))*)[\\s\xa0]*(#\\w+)?$', 'left to ight direction')",[23768]
"('CommandMultilines.java', 'net.sourceforge.plantuml.command.CommandMultilines', 'isValid', '(?i)^(?:(left|right|center)?[\\s\xa0]*)footer$', 'left to right direciton')",[39773]
"('HtmlColorUtils.java', 'net.sourceforge.plantuml.graphic.HtmlColorUtils', 'isValid', '[0-9A-Fa-f]{6}', 'c0c0c0')","[58428, 58531]"
"('CommandMultilinesBracket.java', 'net.sourceforge.plantuml.command.CommandMultilinesBracket', 'isValid', '(?i)^skinparam[\\s\xa0]*(?:[\\s\xa0]+([\\w.]*(?:\\<\\<.*\\>\\>)?[\\w.]*))?[\\s\xa0]*\\{$', 'left to right direction')","[13285, 18434, 51838, 52303]"
"('CommandMultilines.java', 'net.sourceforge.plantuml.command.CommandMultilines', 'isValid', '(?i)^(?:(left|right|center)?[\\s\xa0]*)header$', 'class Employee {')","[53791, 54260, 54824]"
"('CommandMultilines.java', 'net.sourceforge.plantuml.command.CommandMultilines', 'isValid', '(?i)^ref(#\\w+)?[\\s\xa0]+over[\\s\xa0]+((?:[\\p{L}0-9_.@]+|[""“”«»][^""“”«»]+[""“”«»])(?:[\\s\xa0]*,[\\s\xa0]*(?:[\\p{L}0-9_.@]+|[""“”«»][^""“”«»]+[""“”«»]))*)[\\s\xa0]*(#\\w+)?$', 'left to right directoin')",[40646]
"('CommandMultilines.java', 'net.sourceforge.plantuml.command.CommandMultilines', 'isValid', '(?i)^ref(#\\w+)?[\\s\xa0]+over[\\s\xa0]+((?:[\\p{L}0-9_.@]+|[""“”«»][^""“”«»]+[""“”«»])(?:[\\s\xa0]*,[\\s\xa0]*(?:[\\p{L}0-9_.@]+|[""“”«»][^""“”«»]+[""“”«»]))*)[\\s\xa0]*(#\\w+)?$', 'left to  right direction')","[46466, 47048]"
"('CommandMultilines.java', 'net.sourceforge.plantuml.command.CommandMultilines', 'isValid', '(?i)^ref(#\\w+)?[\\s\xa0]+over[\\s\xa0]+((?:[\\p{L}0-9_.@]+|[""“”«»][^""“”«»]+[""“”«»])(?:[\\s\xa0]*,[\\s\xa0]*(?:[\\p{L}0-9_.@]+|[""“”«»][^""“”«»]+[""“”«»]))*)[\\s\xa0]*(#\\w+)?$', 'left to right directin')",[31334]
"('CommandMultilines.java', 'net.sourceforge.plantuml.command.CommandMultilines', 'isValid', '(?i)^(?:(left|right|center)?[\\s\xa0]*)header$', 'left to right drection')",[27648]
"('CommandMultilines.java', 'net.sourceforge.plantuml.command.CommandMultilines', 'isValid', '(?i)^title$', 'left to rgiht direction')",[35020]
"('CommandMultilines.java', 'net.sourceforge.plantuml.command.CommandMultilines', 'isValid', '(?i)^ref(#\\w+)?[\\s\xa0]+over[\\s\xa0]+((?:[\\p{L}0-9_.@]+|[""“”«»][^""“”«»]+[""“”«»])(?:[\\s\xa0]*,[\\s\xa0]*(?:[\\p{L}0-9_.@]+|[""“”«»][^""“”«»]+[""“”«»]))*)[\\s\xa0]*(#\\w+)?$', 'left toright direction')",[23186]
"('Scanner.java', 'java.util.Scanner', 'getCompleteTokenInBuffer', '(?s).*', '<?xml version=""1.0""?>\n<xsl:stylesheet xmlns:xsl=""http://www.w3.org/1999/XSL/Transform"" xmlns:xs=""http://www.w3.org/2001/XMLSchema"" version=""2.0"" exclude-result-prefixes=""xs"">\n    <xsl:output method=""xml"" cdata-section-elements=""svg html""/>\n    <xsl:strip-space elements=""*""/>\n    <xsl:template match=""node()|@*"">\n        <xsl:copy>\n            <xsl:apply-templates select=""node()|@*""/>\n        </xsl:copy>\n    </xsl:template>\n    <xsl:template match=""errors"">\n        <xsl:copy>\n            <xsl:apply-templates select=""node()|@*""/>\n            <xsl:for-each select=""//exception[bindings]"">\n                <error type=""semantic"" pos=""0"">\n                    <xsl:attribute name=""line"">\n                        <xsl:value-of select=""steps/step/mentioned/where[1]""/>\n                    </xsl:attribute>\n                    <xsl:text>exception of step </xsl:text>\n                    <xsl:value-of select=""../../number""/>\n                    <xsl:text> of method </xsl:text>\n                    <xsl:value-of select=""../../../id""/>\n                    <xsl:text> has variable declarations (it is prohibited)</xsl:text>\n                </error>\n            </xsl:for-each>\n        </xsl:copy>\n    </xsl:template>\n    <xsl:template match=""exception[bindings]"">\n        <xsl:copy>\n            <xsl:apply-templates select=""(node() except bindings)|@*""/>\n        </xsl:copy>\n    </xsl:template>\n</xsl:stylesheet>\n')",[4222]
"('CommandMultilines.java', 'net.sourceforge.plantuml.command.CommandMultilines', 'isValid', ""(?i)^[\\s\xa0]*/['‘’].*$"", 'left to righ direction')",[25611]
"('CommandMultilines.java', 'net.sourceforge.plantuml.command.CommandMultilines', 'isValid', ""(?i)^[\\s\xa0]*/['‘’].*$"", 'left to right direcion')",[29685]
"('CommandMultilines.java', 'net.sourceforge.plantuml.command.CommandMultilines', 'isValid', '(?i)^title$', 'left to right dierction')",[37930]
"('CommandMultilinesBracket.java', 'net.sourceforge.plantuml.command.CommandMultilinesBracket', 'isValid', '(?i)^skinparam[\\s\xa0]*(?:[\\s\xa0]+([\\w.]*(?:\\<\\<.*\\>\\>)?[\\w.]*))?[\\s\xa0]*\\{$', 'left ot right direction')",[34147]
"('CommandMultilines.java', 'net.sourceforge.plantuml.command.CommandMultilines', 'isValid', '(?i)^(?:(left|right|center)?[\\s\xa0]*)header$', 'left to right dircetion')",[38706]
"('HtmlColorUtils.java', 'net.sourceforge.plantuml.graphic.HtmlColorUtils', 'build', '[0-9A-Fa-f]{6}', 'c0c0c0')","[58635, 58738]"
"('CommandMultilines.java', 'net.sourceforge.plantuml.command.CommandMultilines', 'isValid', '(?i)^title$', 'left to irght direction')",[34438]
"('CommandMultilines.java', 'net.sourceforge.plantuml.command.CommandMultilines', 'isValid', '(?i)^ref(#\\w+)?[\\s\xa0]+over[\\s\xa0]+((?:[\\p{L}0-9_.@]+|[""“”«»][^""“”«»]+[""“”«»])(?:[\\s\xa0]*,[\\s\xa0]*(?:[\\p{L}0-9_.@]+|[""“”«»][^""“”«»]+[""“”«»]))*)[\\s\xa0]*(#\\w+)?$', 'left to right diretcion')",[39482]
"('CommandMultilines.java', 'net.sourceforge.plantuml.command.CommandMultilines', 'isValid', '(?i)^title$', 'left to right -direction')",[44332]
"('Scanner.java', 'java.util.Scanner', 'getCompleteTokenInBuffer', '(?s).*', '<?xml version=""1.0""?>\n<xsl:stylesheet xmlns:xsl=""http://www.w3.org/1999/XSL/Transform""\n    xmlns:xs=""http://www.w3.org/2001/XMLSchema""\n    xmlns:re=""http://www.requs.org""\n    xmlns:r=""org.requs.facet.uml.Plant"" version=""2.0""\n    exclude-result-prefixes=""xs r re"">\n    <xsl:import href=""uml/functions.xsl""/>\n    <xsl:output method=""xml"" cdata-section-elements=""svg html""/>\n    <xsl:strip-space elements=""*""/>\n    <xsl:template match=""spec/types/type"">\n        <xsl:copy>\n            <xsl:apply-templates select=""(node() except diagrams)|@*""/>\n            <xsl:variable name=""uml"">\n                <xsl:text>left to right direction&#10;</xsl:text>\n                <xsl:text>hide class circle&#10;</xsl:text>\n                <xsl:text>title </xsl:text>\n                <xsl:value-of select=""name""/>\n                <xsl:text>: Class Diagram&#10;</xsl:text>\n                <xsl:apply-templates select=""."" mode=""uml""/>\n            </xsl:variable>\n            <diagrams>\n                <xsl:apply-templates select=""diagrams/*""/>\n                <diagram>\n                    <uml>\n                        <xsl:value-of select=""$uml""/>\n                    </uml>\n                    <svg>\n                        <xsl:value-of select=""r:svg(re:plant($uml))""/>\n                    </svg>\n                </diagram>\n            </diagrams>\n        </xsl:copy>\n    </xsl:template>\n    <xsl:template match=""type"" mode=""uml"">\n        <xsl:variable name=""type"" select=""name""/>\n        <xsl:text>class </xsl:text>\n        <xsl:value-of select=""$type""/>\n        <xsl:text> {&#10;</xsl:text>\n        <xsl:for-each select=""slots/slot[not(type)]"">\n            <xsl:text>  </xsl:text>\n            <xsl:value-of select=""name""/>\n            <xsl:if test=""arity != \'1\'"">\n                <xsl:text>[]</xsl:text>\n            </xsl:if>\n            <xsl:text>&#10;</xsl:text>\n        </xsl:for-each>\n        <xsl:text>}&#10;</xsl:text>\n        <xsl:for-each select=""slots/slot[type]"">\n            <xsl:text>class </xsl:text>\n            <xsl:value-of select=""type""/>\n            <xsl:text>&#10;</xsl:text>\n            <xsl:value-of select=""$type""/>\n            <xsl:text> </xsl:text>\n            <xsl:choose>\n                <xsl:when test=""composition=\'true\'"">\n                    <xsl:text> *--</xsl:text>\n                </xsl:when>\n                <xsl:otherwise>\n                    <xsl:text> o--</xsl:text>\n                </xsl:otherwise>\n            </xsl:choose>\n            <xsl:text> </xsl:text>\n            <xsl:value-of select=""type""/>\n            <xsl:text>: </xsl:text>\n            <xsl:value-of select=""name""/>\n            <xsl:text>&#10;</xsl:text>\n        </xsl:for-each>\n    </xsl:template>\n    <xsl:template match=""node()|@*"">\n        <xsl:copy>\n            <xsl:apply-templates select=""node()|@*""/>\n        </xsl:copy>\n    </xsl:template>\n</xsl:stylesheet>\n')",[9337]
"('CommandMultilines.java', 'net.sourceforge.plantuml.command.CommandMultilines', 'isValid', '(?i)^title$', 'left to right directoin')",[40258]
"('CommandMultilines.java', 'net.sourceforge.plantuml.command.CommandMultilines', 'isValid', '(?i)^ref(#\\w+)?[\\s\xa0]+over[\\s\xa0]+((?:[\\p{L}0-9_.@]+|[""“”«»][^""“”«»]+[""“”«»])(?:[\\s\xa0]*,[\\s\xa0]*(?:[\\p{L}0-9_.@]+|[""“”«»][^""“”«»]+[""“”«»]))*)[\\s\xa0]*(#\\w+)?$', 'left to -right direction')",[43556]
"('HtmlColorUtils.java', 'net.sourceforge.plantuml.graphic.HtmlColorUtils', 'isValid', '[0-9A-Fa-f]{6}', 'f24d5c')","[65622, 65719]"
"('CommandMultilinesBracket.java', 'net.sourceforge.plantuml.command.CommandMultilinesBracket', 'isValid', '(?i)^skinparam[\\s\xa0]*(?:[\\s\xa0]+([\\w.]*(?:\\<\\<.*\\>\\>)?[\\w.]*))?[\\s\xa0]*\\{$', 'left to right directino')",[41131]
"('CommandMultilines.java', 'net.sourceforge.plantuml.command.CommandMultilines', 'isValid', '(?i)^title$', 'left to right drection')",[27454]
"('CommandMultilines.java', 'net.sourceforge.plantuml.command.CommandMultilines', 'isValid', '(?i)^(?:(left|right|center)?[\\s\xa0]*)header$', 'left -to right direction')",[42198]
"('HtmlColorUtils.java', 'net.sourceforge.plantuml.graphic.HtmlColorUtils', 'build', '[0-9A-Fa-f]{6}', '4177af')","[66597, 66694]"
"('XpathDirective.java', 'org.xembly.XpathDirective', 'exec', '/([^/\\(\\[\\{:]+)', '/')",[970]
"('CommandMultilines.java', 'net.sourceforge.plantuml.command.CommandMultilines', 'isValid', '(?i)^(?:(left|right|center)?[\\s\xa0]*)header$', 'left to right dierction')",[38124]
"('CommandMultilines.java', 'net.sourceforge.plantuml.command.CommandMultilines', 'isValid', ""(?i)^[\\s\xa0]*/['‘’].*$"", 'skinparam sequenceTitleFontSize 13')","[11425, 11797, 15762, 16145, 16525, 49978, 50350]"
"('CommandMultilinesBracket.java', 'net.sourceforge.plantuml.command.CommandMultilinesBracket', 'isValid', '(?i)^skinparam[\\s\xa0]*(?:[\\s\xa0]+([\\w.]*(?:\\<\\<.*\\>\\>)?[\\w.]*))?[\\s\xa0]*\\{$', 'leftto right direction')",[21343]
"('CommandMultilines.java', 'net.sourceforge.plantuml.command.CommandMultilines', 'isValid', '(?i)^title$', 'left to- right direction')",[42586]
"('CommandMultilines.java', 'net.sourceforge.plantuml.command.CommandMultilines', 'isValid', '(?i)^(?:(left|right|center)?[\\s\xa0]*)header$', 'left to right direciton')",[39870]
"('HtmlColorUtils.java', 'net.sourceforge.plantuml.graphic.HtmlColorUtils', 'build', '[0-9A-Fa-f]{6}', 'f24d5c')","[65817, 65914]"
"('CommandMultilines.java', 'net.sourceforge.plantuml.command.CommandMultilines', 'isValid', '(?i)^title$', 'left to right dirction')",[28618]
"('CommandMultilines.java', 'net.sourceforge.plantuml.command.CommandMultilines', 'isValid', '(?i)^(?:(left|right|center)?[\\s\xa0]*)footer$', 'left to rght direction')",[24059]
"('CommandMultilines.java', 'net.sourceforge.plantuml.command.CommandMultilines', 'isValid', '(?i)^title$', 'left to right directin')",[30946]
"('CommandMultilines.java', 'net.sourceforge.plantuml.command.CommandMultilines', 'isValid', '(?i)^title$', 'left toright direction')",[22798]
"('HtmlColorUtils.java', 'net.sourceforge.plantuml.graphic.HtmlColorUtils', 'build', '[0-9A-Fa-f]{6}', 'fefece')","[59049, 59152]"
"('CommandMultilines.java', 'net.sourceforge.plantuml.command.CommandMultilines', 'isValid', '(?i)^(?:(left|right|center)?[\\s\xa0]*)header$', 'left t right direction')",[22410]
"('HtmlColorUtils.java', 'net.sourceforge.plantuml.graphic.HtmlColorUtils', 'isValid', '[0-9A-Fa-f]{6}', 'black')","[55116, 55219, 59674, 59781, 60104, 60211, 60531, 60635, 68739, 68837]"
"('CommandMultilines.java', 'net.sourceforge.plantuml.command.CommandMultilines', 'isValid', '(?i)^(?:(left|right|center)?[\\s\xa0]*)footer$', 'leftto right direction')",[21149]
"('CommandMultilines.java', 'net.sourceforge.plantuml.command.CommandMultilines', 'isValid', ""(?i)^[\\s\xa0]*/['‘’].*$"", 'left to rigth direction')",[36087]
"('CommandMultilines.java', 'net.sourceforge.plantuml.command.CommandMultilines', 'isValid', '(?i)^ref(#\\w+)?[\\s\xa0]+over[\\s\xa0]+((?:[\\p{L}0-9_.@]+|[""“”«»][^""“”«»]+[""“”«»])(?:[\\s\xa0]*,[\\s\xa0]*(?:[\\p{L}0-9_.@]+|[""“”«»][^""“”«»]+[""“”«»]))*)[\\s\xa0]*(#\\w+)?$', 'left to rihgt direction')",[35990]
"('CommandMultilines.java', 'net.sourceforge.plantuml.command.CommandMultilines', 'isValid', ""(?i)^[\\s\xa0]*/['‘’].*$"", 'left -to right direction')",[41907]
"('CommandMultilines.java', 'net.sourceforge.plantuml.command.CommandMultilines', 'isValid', '(?i)^(?:(left|right|center)?[\\s\xa0]*)footer$', 'letf to right direction')",[33371]
"('HtmlColorUtils.java', 'net.sourceforge.plantuml.graphic.HtmlColorUtils', 'isValid', '[0-9A-Fa-f]{6}', 'eeeeee')","[63672, 63769, 64062, 64159, 64452, 64549]"
"('Description.java', 'org.junit.runner.Description', 'methodAndClassNamePatternGroupOrDefault', '([\\s\\S]*)\\((.*)\\)', 'rendersHelpMessage(org.requs.exec.MainTest)')","[78, 164]"
"('CommandMultilines.java', 'net.sourceforge.plantuml.command.CommandMultilines', 'isValid', '(?i)^(?:(left|right|center)?[\\s\xa0]*)footer$', 'left to riht direction')",[24641]
"('CommandMultilines.java', 'net.sourceforge.plantuml.command.CommandMultilines', 'isValid', '(?i)^(?:(left|right|center)?[\\s\xa0]*)header$', 'left to right diretcion')",[39288]
"('CommandMultilines.java', 'net.sourceforge.plantuml.command.CommandMultilines', 'isValid', '(?i)^(?:(left|right|center)?[\\s\xa0]*)footer$', 'left to right dircetion')",[38609]
"('CommandMultilines.java', 'net.sourceforge.plantuml.command.CommandMultilines', 'isValid', '(?i)^(?:(left|right|center)?[\\s\xa0]*)footer$', 'left to rigt direction')",[25223]
"('CommandMultilines.java', 'net.sourceforge.plantuml.command.CommandMultilines', 'isValid', '(?i)^(?:(left|right|center)?[\\s\xa0]*)header$', 'skinparam sequenceTitleFontSize 13')","[11704, 12076, 16050, 16430, 16810, 50257, 50629]"
"('CommandMultilinesBracket.java', 'net.sourceforge.plantuml.command.CommandMultilinesBracket', 'isValid', '(?i)^skinparam[\\s\xa0]*(?:[\\s\xa0]+([\\w.]*(?:\\<\\<.*\\>\\>)?[\\w.]*))?[\\s\xa0]*\\{$', 'left  to right direction')","[45205, 45787]"
"('CommandMultilines.java', 'net.sourceforge.plantuml.command.CommandMultilines', 'isValid', '(?i)^title$', 'left to right direcion')",[29782]
"('CommandMultilines.java', 'net.sourceforge.plantuml.command.CommandMultilines', 'isValid', ""(?i)^[\\s\xa0]*/['‘’].*$"", 'left to right dierction')",[37833]
"('CommandMultilines.java', 'net.sourceforge.plantuml.command.CommandMultilines', 'isValid', ""(?i)^[\\s\xa0]*/['‘’].*$"", 'left to right directino')",[40743]
"('CommandMultilines.java', 'net.sourceforge.plantuml.command.CommandMultilines', 'isValid', '(?i)^(?:(left|right|center)?[\\s\xa0]*)footer$', 'left to rightdirection')",[26387]
"('HtmlColorUtils.java', 'net.sourceforge.plantuml.graphic.HtmlColorUtils', 'isValid', '[0-9A-Fa-f]{6}', 'ffff44')","[67182, 67279]"
"('CommandMultilines.java', 'net.sourceforge.plantuml.command.CommandMultilines', 'isValid', '(?i)^(?:(left|right|center)?[\\s\xa0]*)header$', 'left to rightdirection')",[26484]
"('XpathDirective.java', 'org.xembly.XpathDirective', 'exec', '/([^/\\(\\[\\{:]+)', '/spec')","[753, 1023, 1235, 69773, 69875]"
"('CommandMultilines.java', 'net.sourceforge.plantuml.command.CommandMultilines', 'isValid', '(?i)^(?:(left|right|center)?[\\s\xa0]*)header$', 'left to ight direction')",[23574]
"('DomParser.java', 'com.jcabi.xml.DomParser', '<init>', '(?:<\\?xml.*\\?>\\s*)?(?:<!DOCTYPE.*>)?(?:<!--.*-->)?\\<[_\\:a-zA-ZÀ-ÖØ-öø-˿Ͱ-ͽͿ-\u1fff\u200c-\u200d⁰-\u218fⰀ-\u2fef、-\ud7ff豈-\ufdcfﷰ-�](?:[·\\.\\-0-9̀-ͯ‿-⁀])*.*(?:[_\\:a-zA-ZÀ-ÖØ-öø-˿Ͱ-ͽͿ-\u1fff\u200c-\u200d⁰-\u218fⰀ-\u2fef、-\ud7ff豈-\ufdcfﷰ-�](?:[·\\.\\-0-9̀-ͯ‿-⁀])*|/)\\>', '<?xmlversion=""1.0""encoding=""UTF-8""?><?xml-stylesheethref=\'requs.xsl\'type=\'text/xsl\'?><spec><files><fileid=""0""line=""1"">/tmp/junit6135137912157695896/junit6933773851868817004/employee.req</file></files><input>Employeeisa""userofthesystem"".</input><types><type><name>Employee</name><mentioned><where>1</where></mentioned><info><informal>userofthesystem</informal></info></type></types><errors><errorline=""1""pos=""0""type=""seal"">Type""Employee""isnotusedinanyslotorausecase</error></errors><metrics><metricid=""ambiguity.total"">0</metric></metrics></spec>')",[8341]
"('DomParser.java', 'com.jcabi.xml.DomParser', '<init>', '(?:<\\?xml.*\\?>\\s*)?(?:<!DOCTYPE.*>)?(?:<!--.*-->)?\\<[_\\:a-zA-ZÀ-ÖØ-öø-˿Ͱ-ͽͿ-\u1fff\u200c-\u200d⁰-\u218fⰀ-\u2fef、-\ud7ff豈-\ufdcfﷰ-�](?:[·\\.\\-0-9̀-ͯ‿-⁀])*.*(?:[_\\:a-zA-ZÀ-ÖØ-öø-˿Ͱ-ͽͿ-\u1fff\u200c-\u200d⁰-\u218fⰀ-\u2fef、-\ud7ff豈-\ufdcfﷰ-�](?:[·\\.\\-0-9̀-ͯ‿-⁀])*|/)\\>', '<?xmlversion=""1.0""encoding=""UTF-8""?><?xml-stylesheethref=\'requs.xsl\'type=\'text/xsl\'?><spec><files><fileid=""0""line=""1"">/tmp/junit6135137912157695896/junit6933773851868817004/employee.req</file></files><input>Employeeisa""userofthesystem"".</input><types><type><name>Employee</name><mentioned><where>1</where></mentioned><info><informal>userofthesystem</informal></info></type></types><errors><errorline=""1""pos=""0""type=""seal"">Type""Employee""isnotusedinanyslotorausecase</error></errors></spec>')","[6806, 7008, 7203, 7687, 7885, 8088]"
"('HtmlColorUtils.java', 'net.sourceforge.plantuml.graphic.HtmlColorUtils', 'build', '[0-9A-Fa-f]{6}', '84be84')","[68157, 68254]"
"('HtmlColorUtils.java', 'net.sourceforge.plantuml.graphic.HtmlColorUtils', 'isValid', '[0-9A-Fa-f]{6}', 'b38d22')","[66792, 66889]"
"('CommandMultilines.java', 'net.sourceforge.plantuml.command.CommandMultilines', 'isValid', '(?i)^ref(#\\w+)?[\\s\xa0]+over[\\s\xa0]+((?:[\\p{L}0-9_.@]+|[""“”«»][^""“”«»]+[""“”«»])(?:[\\s\xa0]*,[\\s\xa0]*(?:[\\p{L}0-9_.@]+|[""“”«»][^""“”«»]+[""“”«»]))*)[\\s\xa0]*(#\\w+)?$', 'left to right diection')",[28424]
"('CommandMultilines.java', 'net.sourceforge.plantuml.command.CommandMultilines', 'isValid', '(?i)^(?:(left|right|center)?[\\s\xa0]*)footer$', 'skinparam titleFontSize 13')","[10123, 10495, 13666, 14047, 14427, 48676, 49048]"
"('CommandMultilinesBracket.java', 'net.sourceforge.plantuml.command.CommandMultilinesBracket', 'isValid', '(?i)^skinparam[\\s\xa0]*(?:[\\s\xa0]+([\\w.]*(?:\\<\\<.*\\>\\>)?[\\w.]*))?[\\s\xa0]*\\{$', 'letf to right direction')",[33565]
"('CommandMultilines.java', 'net.sourceforge.plantuml.command.CommandMultilines', 'isValid', ""(?i)^[\\s\xa0]*/['‘’].*$"", 'left to right  direction')","[47145, 47727]"
"('CommandMultilinesBracket.java', 'net.sourceforge.plantuml.command.CommandMultilinesBracket', 'isValid', '(?i)^skinparam[\\s\xa0]*(?:[\\s\xa0]+([\\w.]*(?:\\<\\<.*\\>\\>)?[\\w.]*))?[\\s\xa0]*\\{$', 'left to right drection')",[27745]
"('DomParser.java', 'com.jcabi.xml.DomParser', '<init>', '(?:<\\?xml.*\\?>\\s*)?(?:<!DOCTYPE.*>)?(?:<!--.*-->)?\\<[_\\:a-zA-ZÀ-ÖØ-öø-˿Ͱ-ͽͿ-\u1fff\u200c-\u200d⁰-\u218fⰀ-\u2fef、-\ud7ff豈-\ufdcfﷰ-�](?:[·\\.\\-0-9̀-ͯ‿-⁀])*.*(?:[_\\:a-zA-ZÀ-ÖØ-öø-˿Ͱ-ͽͿ-\u1fff\u200c-\u200d⁰-\u218fⰀ-\u2fef、-\ud7ff豈-\ufdcfﷰ-�](?:[·\\.\\-0-9̀-ͯ‿-⁀])*|/)\\>', '<?xmlversion=""1.0""encoding=""UTF-8""?><?xml-stylesheethref=\'requs.xsl\'type=\'text/xsl\'?><spectime=""2018-01-13T01:04:16""><files><fileid=""0""line=""1"">/tmp/junit6135137912157695896/junit6933773851868817004/employee.req</file></files><input>Employeeisa""userofthesystem"".</input><types><type><name>Employee</name><mentioned><where>0:1</where></mentioned><info><informal>userofthesystem</informal></info><diagrams><diagram><uml>lefttorightdirectionhideclasscircletitleEmployee:ClassDiagramclassEmployee{}</uml><svg>&lt;svgxmlns=""http://www.w3.org/2000/svg""xmlns:xlink=""http://www.w3.org/1999/xlink""height=""72pt""style=""width:190px;height:72px;""version=""1.1""viewBox=""0019072""width=""190pt""&gt;&lt;defs&gt;&lt;filterheight=""300%""id=""f1""width=""300%""x=""-1""y=""-1""&gt;&lt;feGaussianBlurresult=""blurOut""stdDeviation=""2.0""/&gt;&lt;feColorMatrixin=""blurOut""result=""blurOut2""type=""matrix""values=""000000000000000000.40""/&gt;&lt;feOffsetdx=""4.0""dy=""4.0""in=""blurOut2""result=""blurOut3""/&gt;&lt;feBlendin=""SourceGraphic""in2=""blurOut3""mode=""normal""/&gt;&lt;/filter&gt;&lt;/defs&gt;&lt;g&gt;&lt;textfill=""#000000""font-family=""sans-serif""font-size=""13""font-weight=""bold""lengthAdjust=""spacingAndGlyphs""textLength=""189""x=""0""y=""12.0669""&gt;Employee:ClassDiagram&lt;/text&gt;&lt;rectfill=""#FEFECE""filter=""url(#f1)""height=""39.9688""style=""stroke:#A80036;stroke-width:1.5;""width=""66""x=""55.5""y=""23.1328""/&gt;&lt;textfill=""#000000""font-family=""sans-serif""font-size=""12""lengthAdjust=""spacingAndGlyphs""textLength=""60""x=""58.5""y=""39.2715""&gt;Employee&lt;/text&gt;&lt;linestyle=""stroke:#A80036;stroke-width:1.5;""x1=""56.5""x2=""120.5""y1=""47.1016""y2=""47.1016""/&gt;&lt;linestyle=""stroke:#A80036;stroke-width:1.5;""x1=""56.5""x2=""120.5""y1=""55.1016""y2=""55.1016""/&gt;&lt;/g&gt;&lt;/svg&gt;</svg></diagram></diagrams></type></types><errors><errorfile=""0""line=""1""pos=""0""type=""seal"">Type""Employee""isnotusedinanyslotorausecase</error></errors><metrics><metricid=""ambiguity.total"">0</metric></metrics><tbds/><requs><version>1.0-SNAPSHOT</version><revision>1a2b3e4f</revision><date>1-Jan-2017</date></requs></spec>')",[70137]
"('CommandMultilines.java', 'net.sourceforge.plantuml.command.CommandMultilines', 'isValid', ""(?i)^[\\s\xa0]*/['‘’].*$"", 'left to -right direction')",[43071]
"('CommandMultilines.java', 'net.sourceforge.plantuml.command.CommandMultilines', 'isValid', '(?i)^ref(#\\w+)?[\\s\xa0]+over[\\s\xa0]+((?:[\\p{L}0-9_.@]+|[""“”«»][^""“”«»]+[""“”«»])(?:[\\s\xa0]*,[\\s\xa0]*(?:[\\p{L}0-9_.@]+|[""“”«»][^""“”«»]+[""“”«»]))*)[\\s\xa0]*(#\\w+)?$', 'eft to right direction')",[19112]
"('Scanner.java', 'java.util.Scanner', 'getCompleteTokenInBuffer', '(?s).*', '<?xml version=""1.0""?>\n<xsl:stylesheet xmlns:xsl=""http://www.w3.org/1999/XSL/Transform""\n    xmlns:xs=""http://www.w3.org/2001/XMLSchema""\n    xmlns:r=""org.requs.facet.XsltFuncs""\n    version=""2.0"" exclude-result-prefixes=""xs r"">\n    <xsl:output method=""xml"" cdata-section-elements=""svg html""/>\n    <xsl:strip-space elements=""*""/>\n    <xsl:template match=""/spec"">\n        <xsl:copy>\n            <xsl:apply-templates select=""node()|@*""/>\n        </xsl:copy>\n    </xsl:template>\n    <xsl:template match=""method"">\n        <xsl:variable name=""m"">\n            <xsl:copy>\n                <xsl:apply-templates select=""(node() except (id|mentioned|attributes|markdown))|@*""/>\n            </xsl:copy>\n        </xsl:variable>\n        <xsl:copy>\n            <xsl:attribute name=""seal"">\n                <xsl:value-of select=""r:seal($m)""/>\n            </xsl:attribute>\n            <xsl:apply-templates select=""node()|@*""/>\n        </xsl:copy>\n    </xsl:template>\n    <xsl:template match=""node()|@*"">\n        <xsl:copy>\n            <xsl:apply-templates select=""node()|@*""/>\n        </xsl:copy>\n    </xsl:template>\n</xsl:stylesheet>\n')",[4424]
"('CommandMultilines2.java', 'net.sourceforge.plantuml.command.CommandMultilines2', 'isValid', '(?i)^[\\s\xa0]*\\}[\\s\xa0]*$', '}')","[54448, 55012]"
"('HtmlColorUtils.java', 'net.sourceforge.plantuml.graphic.HtmlColorUtils', 'isValid', '[0-9A-Fa-f]{6}', 'a80036')","[59256, 59359]"
"('CommandMultilinesBracket.java', 'net.sourceforge.plantuml.command.CommandMultilinesBracket', 'isValid', '(?i)^skinparam[\\s\xa0]*(?:[\\s\xa0]+([\\w.]*(?:\\<\\<.*\\>\\>)?[\\w.]*))?[\\s\xa0]*\\{$', 'left to right directoin')",[40549]
"('CommandMultilines.java', 'net.sourceforge.plantuml.command.CommandMultilines', 'isValid', '(?i)^(?:(left|right|center)?[\\s\xa0]*)header$', 'left- to right direction')",[41616]
"('Scanner.java', 'java.util.Scanner', 'getCompleteTokenInBuffer', '(?s).*', '<?xml version=""1.0""?>\n<xsl:stylesheet xmlns:xsl=""http://www.w3.org/1999/XSL/Transform"" xmlns:xs=""http://www.w3.org/2001/XMLSchema"" version=""2.0"" exclude-result-prefixes=""xs"">\n    <xsl:output method=""xml"" cdata-section-elements=""svg html""/>\n    <xsl:strip-space elements=""*""/>\n    <xsl:template match=""node()|@*"">\n        <xsl:copy>\n            <xsl:apply-templates select=""node()|@*""/>\n        </xsl:copy>\n    </xsl:template>\n    <xsl:template match=""errors"">\n        <xsl:copy>\n            <xsl:apply-templates select=""node()|@*""/>\n            <xsl:for-each select=""//method[count(object) &gt; 1]"">\n                <error type=""duplicate"" pos=""0"">\n                    <xsl:attribute name=""line"">\n                        <xsl:value-of select=""mentioned/where[1]""/>\n                    </xsl:attribute>\n                    <xsl:text>method </xsl:text>\n                    <xsl:value-of select=""id""/>\n                    <xsl:text> has multiple objects: &quot;</xsl:text>\n                    <xsl:value-of select=""object"" separator=""&quot;, &quot;""/>\n                    <xsl:text>&quot;</xsl:text>\n                </error>\n            </xsl:for-each>\n        </xsl:copy>\n    </xsl:template>\n    <xsl:template match=""method[count(object) &gt; 1]"">\n        <xsl:copy>\n            <xsl:apply-templates select=""(node() except object)|@*""/>\n            <object>\n                <xsl:value-of select=""object[1]""/>\n            </object>\n        </xsl:copy>\n    </xsl:template>\n</xsl:stylesheet>\n')",[3001]
"('CommandMultilines.java', 'net.sourceforge.plantuml.command.CommandMultilines', 'isValid', ""(?i)^[\\s\xa0]*/['‘’].*$"", 'left ot right direction')",[33759]
