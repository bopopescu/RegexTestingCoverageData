"('Description.java', 'org.junit.runner.Description', 'methodAndClassNamePatternGroupOrDefault', '(.*)\\((.*)\\)', 'shouldCallFulfillExpectationsForLogEntry(me.lorenc.dreadlogs.captor.LogMatcherTest)')","[6173, 12393]"
"('Description.java', 'org.junit.runner.Description', 'methodAndClassNamePatternGroupOrDefault', '(.*)\\((.*)\\)', 'shouldCreateWithLoggerNameAndLevel(me.lorenc.dreadlogs.captor.log4j.Log4jCaptorTest)')","[6043, 12309]"
"('PatternMatcher.java', 'me.lorenc.dreadlogs.captor.PatternMatcher', 'matchesSafely', '^[abc]*$', 'no match')",[13718]
"('Description.java', 'org.junit.runner.Description', 'methodAndClassNamePatternGroupOrDefault', '(.*)\\((.*)\\)', 'shouldReturnFalseIfNotExpectingSpecificExceptionMessage(me.lorenc.dreadlogs.captor.LogExpectationsTest)')","[6583, 12750]"
"('Description.java', 'org.junit.runner.Description', 'methodAndClassNamePatternGroupOrDefault', '(.*)\\((.*)\\)', 'shouldGetExceptionClass(me.lorenc.dreadlogs.captor.log4j.Log4jEntryTest)')","[5480, 11847]"
"('Description.java', 'org.junit.runner.Description', 'methodAndClassNamePatternGroupOrDefault', '(.*)\\((.*)\\)', 'shouldGetLevel(me.lorenc.dreadlogs.captor.logback.LogbackEntryTest)')","[4247, 10923]"
"('Description.java', 'org.junit.runner.Description', 'methodAndClassNamePatternGroupOrDefault', '(.*)\\((.*)\\)', 'shouldSetExpectedExceptionMessage(me.lorenc.dreadlogs.captor.LogMatcherTest)')","[6380, 12582]"
"('Description.java', 'org.junit.runner.Description', 'methodAndClassNamePatternGroupOrDefault', '(.*)\\((.*)\\)', 'me.lorenc.dreadlogs.captor.logback.LogbackHasLogMatcherTest')","[4615, 14790]"
"('Description.java', 'org.junit.runner.Description', 'methodAndClassNamePatternGroupOrDefault', '(.*)\\((.*)\\)', 'shouldNullReturnExceptionClassWhenNoThrowable(me.lorenc.dreadlogs.captor.log4j.Log4jEntryTest)')","[5641, 11994]"
"('Description.java', 'org.junit.runner.Description', 'methodAndClassNamePatternGroupOrDefault', '(.*)\\((.*)\\)', 'shouldReturnNullExceptionMessageWhenNoThrown(me.lorenc.dreadlogs.captor.jul.JulEntryTest)')","[5304, 11721]"
"('Description.java', 'org.junit.runner.Description', 'methodAndClassNamePatternGroupOrDefault', '(.*)\\((.*)\\)', 'shouldCreateLog4jEntryFromLoggingEvent(me.lorenc.dreadlogs.captor.log4j.Log4jNoLogMatcherTest)')","[6085, 12330]"
"('Description.java', 'org.junit.runner.Description', 'methodAndClassNamePatternGroupOrDefault', '(.*)\\((.*)\\)', 'me.lorenc.dreadlogs.captor.log4j.functional.Log4jCaptorLoggerNameFilteringFunctionalTest')","[2736, 14100]"
"('Description.java', 'org.junit.runner.Description', 'methodAndClassNamePatternGroupOrDefault', '(.*)\\((.*)\\)', 'shouldNotCaptureTraceLogIfLevelDisabled(me.lorenc.dreadlogs.captor.log4j.functional.Log4jCaptorLogLevelFilteringFunctionalTest)')","[2591, 9516]"
"('Description.java', 'org.junit.runner.Description', 'methodAndClassNamePatternGroupOrDefault', '(.*)\\((.*)\\)', 'shouldAppendNullClass(me.lorenc.dreadlogs.captor.OnlyExpectedToStringBuilderTest)')","[183, 7374]"
"('Description.java', 'org.junit.runner.Description', 'methodAndClassNamePatternGroupOrDefault', '(.*)\\((.*)\\)', 'shouldAppendedNullValue(me.lorenc.dreadlogs.captor.OnlyExpectedToStringBuilderTest)')","[120, 7311]"
"('Description.java', 'org.junit.runner.Description', 'methodAndClassNamePatternGroupOrDefault', '(.*)\\((.*)\\)', 'shouldCaptureLogWithCorrectLoggerName(me.lorenc.dreadlogs.captor.logback.functional.LogbackCaptorHasLogFunctionalTest)')","[681, 7815]"
"('Description.java', 'org.junit.runner.Description', 'methodAndClassNamePatternGroupOrDefault', '(.*)\\((.*)\\)', 'shouldNotCaptureLogWhenCaptorSetToChildPackage(me.lorenc.dreadlogs.captor.jul.functional.JulCaptorLoggerNameFilteringFunctionalTest)')","[1469, 8508]"
"('Description.java', 'org.junit.runner.Description', 'methodAndClassNamePatternGroupOrDefault', '(.*)\\((.*)\\)', 'shouldReturnEmptyStringIfNull(me.lorenc.dreadlogs.util.DefaultStringTest)')","[3608, 10419]"
"('Description.java', 'org.junit.runner.Description', 'methodAndClassNamePatternGroupOrDefault', '(.*)\\((.*)\\)', 'shouldNotCaptureInfoLogIfLevelDisabled(me.lorenc.dreadlogs.captor.logback.functional.LogbackCaptorLogLevelFilteringFunctionalTest)')","[931, 8046]"
"('Description.java', 'org.junit.runner.Description', 'methodAndClassNamePatternGroupOrDefault', '(.*)\\((.*)\\)', 'shouldSetExpectedExceptionMessageAndClass(me.lorenc.dreadlogs.captor.LogMatcherTest)')","[6426, 12624]"
"('Description.java', 'org.junit.runner.Description', 'methodAndClassNamePatternGroupOrDefault', '(.*)\\((.*)\\)', 'shouldDetachAppender(me.lorenc.dreadlogs.captor.log4j.Log4jCaptorTest)')","[5882, 12162]"
"('Description.java', 'org.junit.runner.Description', 'methodAndClassNamePatternGroupOrDefault', '(.*)\\((.*)\\)', 'shouldAppendEmptyMap(me.lorenc.dreadlogs.captor.OnlyExpectedToStringBuilderTest)')","[162, 7353]"
"('Description.java', 'org.junit.runner.Description', 'methodAndClassNamePatternGroupOrDefault', '(.*)\\((.*)\\)', 'shouldCaptureLogForExactLoggerName(me.lorenc.dreadlogs.captor.jul.functional.JulCaptorLoggerNameFilteringFunctionalTest)')","[1427, 8466]"
"('Description.java', 'org.junit.runner.Description', 'methodAndClassNamePatternGroupOrDefault', '(.*)\\((.*)\\)', 'shouldGetMessage(me.lorenc.dreadlogs.captor.jul.JulEntryTest)')","[5281, 11700]"
"('Description.java', 'org.junit.runner.Description', 'methodAndClassNamePatternGroupOrDefault', '(.*)\\((.*)\\)', 'shouldCaptureLogWhenCaptorSetToParrentPackage(me.lorenc.dreadlogs.captor.jul.functional.JulCaptorLoggerNameFilteringFunctionalTest)')","[1490, 8529]"
"('Description.java', 'org.junit.runner.Description', 'methodAndClassNamePatternGroupOrDefault', '(.*)\\((.*)\\)', 'shouldReturnFalseIfNotExpectingSpecificMdc(me.lorenc.dreadlogs.captor.LogExpectationsTest)')","[6997, 13128]"
"('Description.java', 'org.junit.runner.Description', 'methodAndClassNamePatternGroupOrDefault', '(.*)\\((.*)\\)', 'me.lorenc.dreadlogs.captor.logback.functional.LogbackCaptorLoggerNameFilteringFunctionalTest')","[452, 13453]"
"('Description.java', 'org.junit.runner.Description', 'methodAndClassNamePatternGroupOrDefault', '(.*)\\((.*)\\)', 'shouldCreateHasLogMatcherForStringMatcher(me.lorenc.dreadlogs.captor.logback.LogbackMatchersTest)')","[1179, 8256]"
"('Description.java', 'org.junit.runner.Description', 'methodAndClassNamePatternGroupOrDefault', '(.*)\\((.*)\\)', 'shouldCaptureLogWithExceptionClassAndMessageMatchingMatcher(me.lorenc.dreadlogs.captor.logback.functional.LogbackCaptorHasLogFunctionalTest)')","[723, 7857]"
"('Description.java', 'org.junit.runner.Description', 'methodAndClassNamePatternGroupOrDefault', '(.*)\\((.*)\\)', 'shouldReturnFalseWhenNoExceptionClassMatch(me.lorenc.dreadlogs.captor.LogExpectationsTest)')","[6882, 13023]"
"('Description.java', 'org.junit.runner.Description', 'methodAndClassNamePatternGroupOrDefault', '(.*)\\((.*)\\)', 'me.lorenc.dreadlogs.captor.log4j.functional.Log4jCaptorLogLevelFilteringFunctionalTest')","[2465, 14074]"
"('Description.java', 'org.junit.runner.Description', 'methodAndClassNamePatternGroupOrDefault', '(.*)\\((.*)\\)', 'shouldReturnNullExceptionMessageWhenNoThrowableProxy(me.lorenc.dreadlogs.captor.logback.LogbackEntryTest)')","[4178, 10860]"
"('Description.java', 'org.junit.runner.Description', 'methodAndClassNamePatternGroupOrDefault', '(.*)\\((.*)\\)', 'shouldReturnCapturedLogs(me.lorenc.dreadlogs.captor.jul.JulCapturingHandlerTest)')","[5040, 11532]"
"('Description.java', 'org.junit.runner.Description', 'methodAndClassNamePatternGroupOrDefault', '(.*)\\((.*)\\)', 'shouldReturnTrueAsLogbackSupportsMdc(me.lorenc.dreadlogs.captor.logback.LogbackEntryTest)')","[4201, 10881]"
"('Description.java', 'org.junit.runner.Description', 'methodAndClassNamePatternGroupOrDefault', '(.*)\\((.*)\\)', 'shouldCreateNoLogMatcherForLevelAndStringMatcher(me.lorenc.dreadlogs.captor.logback.LogbackMatchersTest)')","[1263, 8340]"
"('PatternMatcher.java', 'me.lorenc.dreadlogs.captor.PatternMatcher', 'matchesSafely', '^a [a-z]* message$', 'a regex message')","[13590, 13881, 14211]"
"('Description.java', 'org.junit.runner.Description', 'methodAndClassNamePatternGroupOrDefault', '(.*)\\((.*)\\)', 'shouldReturnFalseIfNoMatch(me.lorenc.dreadlogs.captor.PatternMatcherTest)')","[1366, 8424]"
"('Description.java', 'org.junit.runner.Description', 'methodAndClassNamePatternGroupOrDefault', '(.*)\\((.*)\\)', 'shouldReturnTrueWhenMessageMatcherMatches(me.lorenc.dreadlogs.captor.LogExpectationsTest)')","[6468, 12645]"
"('Description.java', 'org.junit.runner.Description', 'methodAndClassNamePatternGroupOrDefault', '(.*)\\((.*)\\)', 'me.lorenc.dreadlogs.captor.log4j.Log4jSimpleLayoutTest')","[5369, 15175]"
"('Description.java', 'org.junit.runner.Description', 'methodAndClassNamePatternGroupOrDefault', '(.*)\\((.*)\\)', 'me.lorenc.dreadlogs.captor.OnlyExpectedToStringBuilderTest')","[36, 13364]"
"('Description.java', 'org.junit.runner.Description', 'methodAndClassNamePatternGroupOrDefault', '(.*)\\((.*)\\)', 'shouldCreateHasLogMatcherForLevelAndMessage(me.lorenc.dreadlogs.captor.logback.LogbackMatchersTest)')","[1284, 8361]"
"('Description.java', 'org.junit.runner.Description', 'methodAndClassNamePatternGroupOrDefault', '(.*)\\((.*)\\)', 'shouldNotFindLogWhenNoMdcPresent(me.lorenc.dreadlogs.captor.logback.functional.LogbackCaptorMdcFunctionalTest)')","[1055, 8151]"
"('Description.java', 'org.junit.runner.Description', 'methodAndClassNamePatternGroupOrDefault', '(.*)\\((.*)\\)', 'shouldNotCaptureDebugLogIfLevelDisabled(me.lorenc.dreadlogs.captor.logback.functional.LogbackCaptorLogLevelFilteringFunctionalTest)')","[952, 8067]"
"('Description.java', 'org.junit.runner.Description', 'methodAndClassNamePatternGroupOrDefault', '(.*)\\((.*)\\)', 'shouldCaptureLogWithExceptionMessageMatchingMatcher(me.lorenc.dreadlogs.captor.jul.functional.JulCaptorHasLogFunctionalTest)')","[1677, 8697]"
"('Description.java', 'org.junit.runner.Description', 'methodAndClassNamePatternGroupOrDefault', '(.*)\\((.*)\\)', 'shouldReturnTrueWhenNoMatches(me.lorenc.dreadlogs.captor.NoLogMatcherTest)')","[4703, 11259]"
"('Description.java', 'org.junit.runner.Description', 'methodAndClassNamePatternGroupOrDefault', '(.*)\\((.*)\\)', 'shouldNotCaptureInfoLogIfLevelDisabled(me.lorenc.dreadlogs.captor.log4j.functional.Log4jCaptorLogLevelFilteringFunctionalTest)')","[2633, 9558]"
"('Description.java', 'org.junit.runner.Description', 'methodAndClassNamePatternGroupOrDefault', '(.*)\\((.*)\\)', 'me.lorenc.dreadlogs.captor.NoLogMatcherTest')","[4657, 14845]"
"('Description.java', 'org.junit.runner.Description', 'methodAndClassNamePatternGroupOrDefault', '(.*)\\((.*)\\)', 'shouldCaptureLogWithMessageMatchingRegex(me.lorenc.dreadlogs.captor.jul.functional.JulCaptorHasLogFunctionalTest)')","[1572, 8592]"
"('Description.java', 'org.junit.runner.Description', 'methodAndClassNamePatternGroupOrDefault', '(.*)\\((.*)\\)', 'shouldCreateLog4jEntryFromLoggingEvent(me.lorenc.dreadlogs.captor.log4j.Log4jHasLogMatcherTest)')","[5817, 12120]"
"('Description.java', 'org.junit.runner.Description', 'methodAndClassNamePatternGroupOrDefault', '(.*)\\((.*)\\)', 'shouldCaptureLogWhenCaptorSetToParrentPackage(me.lorenc.dreadlogs.captor.logback.functional.LogbackCaptorLoggerNameFilteringFunctionalTest)')","[536, 7689]"
"('Description.java', 'org.junit.runner.Description', 'methodAndClassNamePatternGroupOrDefault', '(.*)\\((.*)\\)', 'shouldCreateNoLogMatcherForMessage(me.lorenc.dreadlogs.captor.log4j.Log4jMatchersTest)')","[3421, 10251]"
"('Description.java', 'org.junit.runner.Description', 'methodAndClassNamePatternGroupOrDefault', '(.*)\\((.*)\\)', 'shouldAppendDescription(me.lorenc.dreadlogs.captor.PatternMatcherTest)')","[1387, 8445]"
"('Description.java', 'org.junit.runner.Description', 'methodAndClassNamePatternGroupOrDefault', '(.*)\\((.*)\\)', 'me.lorenc.dreadlogs.util.DefaultStringTest')","[3566, 15527]"
"('Description.java', 'org.junit.runner.Description', 'methodAndClassNamePatternGroupOrDefault', '(.*)\\((.*)\\)', 'shouldGetMdc(me.lorenc.dreadlogs.captor.logback.LogbackEntryTest)')","[4109, 10797]"
"('Description.java', 'org.junit.runner.Description', 'methodAndClassNamePatternGroupOrDefault', '(.*)\\((.*)\\)', 'shouldReturnTrueWhenNullMdcValuesMatch(me.lorenc.dreadlogs.captor.LogExpectationsTest)')","[6652, 12813]"
"('Description.java', 'org.junit.runner.Description', 'methodAndClassNamePatternGroupOrDefault', '(.*)\\((.*)\\)', 'shouldCreateHasLogMatcherForLevelAndStringMatcher(me.lorenc.dreadlogs.captor.logback.LogbackMatchersTest)')","[1221, 8298]"
"('Description.java', 'org.junit.runner.Description', 'methodAndClassNamePatternGroupOrDefault', '(.*)\\((.*)\\)', 'shouldCreateNoLogMatcherForLevelAndMessage(me.lorenc.dreadlogs.captor.logback.LogbackMatchersTest)')","[1137, 8214]"
"('Description.java', 'org.junit.runner.Description', 'methodAndClassNamePatternGroupOrDefault', '(.*)\\((.*)\\)', 'shouldFormatLoggingEvent(me.lorenc.dreadlogs.captor.log4j.Log4jSimpleLayoutTest)')","[5392, 11784]"
"('Description.java', 'org.junit.runner.Description', 'methodAndClassNamePatternGroupOrDefault', '(.*)\\((.*)\\)', 'shouldCaptureLogWithMessageMatchingRegex(me.lorenc.dreadlogs.captor.log4j.functional.Log4jCaptorHasLogFunctionalTest)')","[2902, 9789]"
"('Description.java', 'org.junit.runner.Description', 'methodAndClassNamePatternGroupOrDefault', '(.*)\\((.*)\\)', 'shouldCreateHasLogMatcherForLevelAndMessage(me.lorenc.dreadlogs.captor.jul.JulMatchersTest)')","[2446, 9390]"
"('Description.java', 'org.junit.runner.Description', 'methodAndClassNamePatternGroupOrDefault', '(.*)\\((.*)\\)', 'shouldNotFindLogWhenNoLevelMatch(me.lorenc.dreadlogs.captor.log4j.functional.Log4jCaptorNoLogFunctionalTest)')","[3152, 10020]"
"('Description.java', 'org.junit.runner.Description', 'methodAndClassNamePatternGroupOrDefault', '(.*)\\((.*)\\)', 'me.lorenc.dreadlogs.captor.logback.LogbackNoLogMatcherTest')","[4573, 14735]"
"('Description.java', 'org.junit.runner.Description', 'methodAndClassNamePatternGroupOrDefault', '(.*)\\((.*)\\)', 'shouldGetMdc(me.lorenc.dreadlogs.captor.log4j.Log4jEntryTest)')","[5457, 11826]"
"('Description.java', 'org.junit.runner.Description', 'methodAndClassNamePatternGroupOrDefault', '(.*)\\((.*)\\)', 'shouldCaptureFatalLog(me.lorenc.dreadlogs.captor.log4j.functional.Log4jCaptorLogLevelFilteringFunctionalTest)')","[2696, 9621]"
"('Description.java', 'org.junit.runner.Description', 'methodAndClassNamePatternGroupOrDefault', '(.*)\\((.*)\\)', 'shouldNotFindLogWhenNoExactExceptionClassMatch(me.lorenc.dreadlogs.captor.log4j.functional.Log4jCaptorNoLogFunctionalTest)')","[3173, 10041]"
"('Description.java', 'org.junit.runner.Description', 'methodAndClassNamePatternGroupOrDefault', '(.*)\\((.*)\\)', 'shouldCreateNoLogMatcherForMessage(me.lorenc.dreadlogs.captor.jul.JulMatchersTest)')","[2320, 9264]"
"('Description.java', 'org.junit.runner.Description', 'methodAndClassNamePatternGroupOrDefault', '(.*)\\((.*)\\)', 'shouldAppendValueWithLabel(me.lorenc.dreadlogs.captor.OnlyExpectedToStringBuilderTest)')","[57, 7248]"
"('Description.java', 'org.junit.runner.Description', 'methodAndClassNamePatternGroupOrDefault', '(.*)\\((.*)\\)', 'shouldResetLogCapture(me.lorenc.dreadlogs.captor.jul.JulCapturingHandlerTest)')","[4994, 11490]"
"('Description.java', 'org.junit.runner.Description', 'methodAndClassNamePatternGroupOrDefault', '(.*)\\((.*)\\)', 'shouldCaptureLogWithMatchingMessage(me.lorenc.dreadlogs.captor.logback.functional.LogbackCaptorLogLevelFilteringFunctionalTest)')","[805, 7920]"
"('Description.java', 'org.junit.runner.Description', 'methodAndClassNamePatternGroupOrDefault', '(.*)\\((.*)\\)', 'shouldCaptureLogWithExceptionMessageMatchingMatcher(me.lorenc.dreadlogs.captor.logback.functional.LogbackCaptorHasLogFunctionalTest)')","[702, 7836]"
"('Description.java', 'org.junit.runner.Description', 'methodAndClassNamePatternGroupOrDefault', '(.*)\\((.*)\\)', 'shouldReturnTrueWhenOneLogEntryMatchesExpectations(me.lorenc.dreadlogs.captor.HasLogMatcherTest)')","[3776, 10545]"
"('Description.java', 'org.junit.runner.Description', 'methodAndClassNamePatternGroupOrDefault', '(.*)\\((.*)\\)', 'shouldReturnTrueIfExpectingSpecificMessage(me.lorenc.dreadlogs.captor.LogExpectationsTest)')","[7089, 13212]"
"('Description.java', 'org.junit.runner.Description', 'methodAndClassNamePatternGroupOrDefault', '(.*)\\((.*)\\)', 'shouldCaptureTraceLog(me.lorenc.dreadlogs.captor.log4j.functional.Log4jCaptorLogLevelFilteringFunctionalTest)')","[2717, 9642]"
"('Description.java', 'org.junit.runner.Description', 'methodAndClassNamePatternGroupOrDefault', '(.*)\\((.*)\\)', 'shouldResetLogCapture(me.lorenc.dreadlogs.captor.logback.LogbackCapturingAppenderTest)')","[4335, 10986]"
"('Description.java', 'org.junit.runner.Description', 'methodAndClassNamePatternGroupOrDefault', '(.*)\\((.*)\\)', 'me.lorenc.dreadlogs.captor.logback.functional.LogbackCaptorMdcFunctionalTest')","[1013, 13642]"
"('Description.java', 'org.junit.runner.Description', 'methodAndClassNamePatternGroupOrDefault', '(.*)\\((.*)\\)', 'shouldStringifyOnlySetValues(me.lorenc.dreadlogs.captor.LogExpectationsTest)')","[6537, 12708]"
"('Description.java', 'org.junit.runner.Description', 'methodAndClassNamePatternGroupOrDefault', '(.*)\\((.*)\\)', 'shouldNotCaptureSevereLogIfLevelDisabled(me.lorenc.dreadlogs.captor.jul.functional.JulCaptorLogLevelFilteringFunctionalTest)')","[1841, 8823]"
"('Description.java', 'org.junit.runner.Description', 'methodAndClassNamePatternGroupOrDefault', '(.*)\\((.*)\\)', 'shouldAttachAppenderToLoggerAndStartItOnConstruction(me.lorenc.dreadlogs.captor.logback.LogbackCaptorTest)')","[4488, 11112]"
"('Description.java', 'org.junit.runner.Description', 'methodAndClassNamePatternGroupOrDefault', '(.*)\\((.*)\\)', 'shouldCaptureLogWithCorrectExceptionClassAndMessage(me.lorenc.dreadlogs.captor.jul.functional.JulCaptorHasLogFunctionalTest)')","[1719, 8739]"
"('Description.java', 'org.junit.runner.Description', 'methodAndClassNamePatternGroupOrDefault', '(.*)\\((.*)\\)', 'shouldCaptureErrorLog(me.lorenc.dreadlogs.captor.log4j.functional.Log4jCaptorLogLevelFilteringFunctionalTest)')","[2486, 9411]"
"('Description.java', 'org.junit.runner.Description', 'methodAndClassNamePatternGroupOrDefault', '(.*)\\((.*)\\)', 'shouldNotCaptureFineLogIfLevelDisabled(me.lorenc.dreadlogs.captor.jul.functional.JulCaptorLogLevelFilteringFunctionalTest)')","[1820, 8802]"
"('Description.java', 'org.junit.runner.Description', 'methodAndClassNamePatternGroupOrDefault', '(.*)\\((.*)\\)', 'shouldCreateWithLoggerNameOnly(me.lorenc.dreadlogs.captor.jul.JulCaptorTest)')","[4814, 11343]"
"('Description.java', 'org.junit.runner.Description', 'methodAndClassNamePatternGroupOrDefault', '(.*)\\((.*)\\)', 'shouldDescribeMismatchForEmptyLogs(me.lorenc.dreadlogs.captor.LogMatcherTest)')","[6334, 12540]"
"('Description.java', 'org.junit.runner.Description', 'methodAndClassNamePatternGroupOrDefault', '(.*)\\((.*)\\)', 'shouldCreateHasLogMatcherForMessage(me.lorenc.dreadlogs.captor.jul.JulMatchersTest)')","[2362, 9306]"
"('Description.java', 'org.junit.runner.Description', 'methodAndClassNamePatternGroupOrDefault', '(.*)\\((.*)\\)', 'shouldNotCaptureLogForDifferentLoggerName(me.lorenc.dreadlogs.captor.logback.functional.LogbackCaptorLoggerNameFilteringFunctionalTest)')","[494, 7647]"
"('Description.java', 'org.junit.runner.Description', 'methodAndClassNamePatternGroupOrDefault', '(.*)\\((.*)\\)', 'me.lorenc.dreadlogs.captor.logback.LogbackCapturingAppenderTest')","[4312, 14625]"
"('Description.java', 'org.junit.runner.Description', 'methodAndClassNamePatternGroupOrDefault', '(.*)\\((.*)\\)', 'shouldReturnNullExceptionClassWhenNoThrown(me.lorenc.dreadlogs.captor.jul.JulEntryTest)')","[5258, 11679]"
"('Description.java', 'org.junit.runner.Description', 'methodAndClassNamePatternGroupOrDefault', '(.*)\\((.*)\\)', 'shouldNotCaptureFatalLogIfLevelDisabled(me.lorenc.dreadlogs.captor.log4j.functional.Log4jCaptorLogLevelFilteringFunctionalTest)')","[2528, 9453]"
"('Description.java', 'org.junit.runner.Description', 'methodAndClassNamePatternGroupOrDefault', '(.*)\\((.*)\\)', 'shouldCreateJulEntryFromLoggingRecord(me.lorenc.dreadlogs.captor.jul.JulNoLogMatcherTest)')","[5124, 11574]"
"('Description.java', 'org.junit.runner.Description', 'methodAndClassNamePatternGroupOrDefault', '(.*)\\((.*)\\)', 'shouldStringifyForNullValues(me.lorenc.dreadlogs.captor.LogEntryTest)')","[3864, 10608]"
"('Description.java', 'org.junit.runner.Description', 'methodAndClassNamePatternGroupOrDefault', '(.*)\\((.*)\\)', 'shouldCaptureDebugLog(me.lorenc.dreadlogs.captor.logback.functional.LogbackCaptorLogLevelFilteringFunctionalTest)')","[973, 8088]"
"('Description.java', 'org.junit.runner.Description', 'methodAndClassNamePatternGroupOrDefault', '(.*)\\((.*)\\)', 'shouldReturnStringifyIfNotNull(me.lorenc.dreadlogs.util.DefaultStringTest)')","[3671, 10482]"
"('Description.java', 'org.junit.runner.Description', 'methodAndClassNamePatternGroupOrDefault', '(.*)\\((.*)\\)', 'me.lorenc.dreadlogs.captor.PatternMatcherTest')","[1303, 13744]"
"('Description.java', 'org.junit.runner.Description', 'methodAndClassNamePatternGroupOrDefault', '(.*)\\((.*)\\)', 'shouldCaptureLogWithCorrectExceptionMessage(me.lorenc.dreadlogs.captor.jul.functional.JulCaptorHasLogFunctionalTest)')","[1551, 8571]"
"('Description.java', 'org.junit.runner.Description', 'methodAndClassNamePatternGroupOrDefault', '(.*)\\((.*)\\)', 'shouldStringifyAppender(me.lorenc.dreadlogs.captor.log4j.Log4jCaptorTest)')","[5974, 12246]"
"('Description.java', 'org.junit.runner.Description', 'methodAndClassNamePatternGroupOrDefault', '(.*)\\((.*)\\)', 'shouldReturnTrueIfExpectingSpecificLoggerName(me.lorenc.dreadlogs.captor.LogExpectationsTest)')","[6514, 12687]"
"('Description.java', 'org.junit.runner.Description', 'methodAndClassNamePatternGroupOrDefault', '(.*)\\((.*)\\)', 'me.lorenc.dreadlogs.captor.log4j.functional.Log4jCaptorMdcFunctionalTest')","[3276, 14326]"
"('Description.java', 'org.junit.runner.Description', 'methodAndClassNamePatternGroupOrDefault', '(.*)\\((.*)\\)', 'shouldNotFindLogWhenNoLoggerNameMatch(me.lorenc.dreadlogs.captor.log4j.functional.Log4jCaptorNoLogFunctionalTest)')","[3257, 10125]"
"('Description.java', 'org.junit.runner.Description', 'methodAndClassNamePatternGroupOrDefault', '(.*)\\((.*)\\)', 'shouldCaptureLogWithCorrectMessage(me.lorenc.dreadlogs.captor.jul.functional.JulCaptorHasLogFunctionalTest)')","[1530, 8550]"
"('Description.java', 'org.junit.runner.Description', 'methodAndClassNamePatternGroupOrDefault', '(.*)\\((.*)\\)', 'shouldReturnEmptyString(me.lorenc.dreadlogs.captor.OnlyExpectedToStringBuilderTest)')","[141, 7332]"
"('Description.java', 'org.junit.runner.Description', 'methodAndClassNamePatternGroupOrDefault', '(.*)\\((.*)\\)', 'shouldReturnFalseWhenExpectedMdcNull(me.lorenc.dreadlogs.captor.LogExpectationsTest)')","[6790, 12939]"
"('Description.java', 'org.junit.runner.Description', 'methodAndClassNamePatternGroupOrDefault', '(.*)\\((.*)\\)', 'shouldCaptureInfoLog(me.lorenc.dreadlogs.captor.logback.functional.LogbackCaptorLogLevelFilteringFunctionalTest)')","[868, 7983]"
"('Description.java', 'org.junit.runner.Description', 'methodAndClassNamePatternGroupOrDefault', '(.*)\\((.*)\\)', 'shouldSetExpectedLoggerName(me.lorenc.dreadlogs.captor.LogMatcherTest)')","[6150, 12372]"
"('Description.java', 'org.junit.runner.Description', 'methodAndClassNamePatternGroupOrDefault', '(.*)\\((.*)\\)', 'shouldNotCaptureLogWhenCaptorSetToChildPackage(me.lorenc.dreadlogs.captor.logback.functional.LogbackCaptorLoggerNameFilteringFunctionalTest)')","[515, 7668]"
"('Description.java', 'org.junit.runner.Description', 'methodAndClassNamePatternGroupOrDefault', '(.*)\\((.*)\\)', 'me.lorenc.dreadlogs.captor.logback.functional.LogbackCaptorLogLevelFilteringFunctionalTest')","[763, 13616]"
"('Description.java', 'org.junit.runner.Description', 'methodAndClassNamePatternGroupOrDefault', '(.*)\\((.*)\\)', 'shouldCaptureLogWithCorrectExceptionClassAndMessage(me.lorenc.dreadlogs.captor.logback.functional.LogbackCaptorHasLogFunctionalTest)')","[744, 7878]"
"('Description.java', 'org.junit.runner.Description', 'methodAndClassNamePatternGroupOrDefault', '(.*)\\((.*)\\)', 'me.lorenc.dreadlogs.captor.jul.JulCapturingHandlerTest')","[4948, 14955]"
"('Description.java', 'org.junit.runner.Description', 'methodAndClassNamePatternGroupOrDefault', '(.*)\\((.*)\\)', 'shouldGetLoggerName(me.lorenc.dreadlogs.captor.jul.JulEntryTest)')","[5212, 11637]"
"('Description.java', 'org.junit.runner.Description', 'methodAndClassNamePatternGroupOrDefault', '(.*)\\((.*)\\)', 'shouldNotFindLogWhenMessageDoesNotMatchRegex(me.lorenc.dreadlogs.captor.jul.functional.JulCaptorNoLogFunctionalTest)')","[2196, 9159]"
"('Description.java', 'org.junit.runner.Description', 'methodAndClassNamePatternGroupOrDefault', '(.*)\\((.*)\\)', 'shouldCaptureLogWithCorrectMessage(me.lorenc.dreadlogs.captor.log4j.functional.Log4jCaptorHasLogFunctionalTest)')","[2860, 9747]"
"('Description.java', 'org.junit.runner.Description', 'methodAndClassNamePatternGroupOrDefault', '(.*)\\((.*)\\)', 'shouldDetachAppenderOnAfter(me.lorenc.dreadlogs.captor.log4j.Log4jCaptorTest)')","[5997, 12267]"
"('Description.java', 'org.junit.runner.Description', 'methodAndClassNamePatternGroupOrDefault', '(.*)\\((.*)\\)', 'shouldReturnFalseOnFirstMatchingLogEntry(me.lorenc.dreadlogs.captor.NoLogMatcherTest)')","[4749, 11301]"
"('Description.java', 'org.junit.runner.Description', 'methodAndClassNamePatternGroupOrDefault', '(.*)\\((.*)\\)', 'shouldCreateNoLogMatcherForLevelAndStringMatcher(me.lorenc.dreadlogs.captor.jul.JulMatchersTest)')","[2425, 9369]"
"('Description.java', 'org.junit.runner.Description', 'methodAndClassNamePatternGroupOrDefault', '(.*)\\((.*)\\)', 'shouldNotCaptureLogForDifferentLoggerName(me.lorenc.dreadlogs.captor.jul.functional.JulCaptorLoggerNameFilteringFunctionalTest)')","[1448, 8487]"
"('Description.java', 'org.junit.runner.Description', 'methodAndClassNamePatternGroupOrDefault', '(.*)\\((.*)\\)', 'shouldGetMessage(me.lorenc.dreadlogs.captor.logback.LogbackEntryTest)')","[4224, 10902]"
"('Description.java', 'org.junit.runner.Description', 'methodAndClassNamePatternGroupOrDefault', '(.*)\\((.*)\\)', 'shouldNotFindLogWhenExceptionMessageMatcherDoesNotMatch(me.lorenc.dreadlogs.captor.jul.functional.JulCaptorNoLogFunctionalTest)')","[2217, 9180]"
"('Description.java', 'org.junit.runner.Description', 'methodAndClassNamePatternGroupOrDefault', '(.*)\\((.*)\\)', 'shouldGetLoggerName(me.lorenc.dreadlogs.captor.logback.LogbackEntryTest)')","[4155, 10839]"
"('Description.java', 'org.junit.runner.Description', 'methodAndClassNamePatternGroupOrDefault', '(.*)\\((.*)\\)', 'shouldNotFindLogsOnOtherLevels(me.lorenc.dreadlogs.captor.jul.functional.JulCaptorLogLevelFilteringFunctionalTest)')","[1925, 8907]"
"('Description.java', 'org.junit.runner.Description', 'methodAndClassNamePatternGroupOrDefault', '(.*)\\((.*)\\)', 'me.lorenc.dreadlogs.captor.logback.LogbackEntryTest')","[4086, 14572]"
"('Description.java', 'org.junit.runner.Description', 'methodAndClassNamePatternGroupOrDefault', '(.*)\\((.*)\\)', 'shouldStringifyWithMatchers(me.lorenc.dreadlogs.captor.LogExpectationsTest)')","[6767, 12918]"
"('Description.java', 'org.junit.runner.Description', 'methodAndClassNamePatternGroupOrDefault', '(.*)\\((.*)\\)', 'shouldCaptureLogWithExceptionMessageMatchingMatcher(me.lorenc.dreadlogs.captor.log4j.functional.Log4jCaptorHasLogFunctionalTest)')","[3007, 9894]"
"('Description.java', 'org.junit.runner.Description', 'methodAndClassNamePatternGroupOrDefault', '(.*)\\((.*)\\)', 'shouldCaptureLogWithCorrectLevel(me.lorenc.dreadlogs.captor.logback.functional.LogbackCaptorHasLogFunctionalTest)')","[618, 7752]"
"('Description.java', 'org.junit.runner.Description', 'methodAndClassNamePatternGroupOrDefault', '(.*)\\((.*)\\)', 'shouldCaptureLogWithCorrectLoggerName(me.lorenc.dreadlogs.captor.jul.functional.JulCaptorHasLogFunctionalTest)')","[1656, 8676]"
"('Description.java', 'org.junit.runner.Description', 'methodAndClassNamePatternGroupOrDefault', '(.*)\\((.*)\\)', 'me.lorenc.dreadlogs.captor.LogCaptureTest')","[3975, 14517]"
"('Description.java', 'org.junit.runner.Description', 'methodAndClassNamePatternGroupOrDefault', '(.*)\\((.*)\\)', 'shouldStringifyAppender(me.lorenc.dreadlogs.captor.log4j.Log4jCapturingAppenderTest)')","[5775, 12099]"
"('Description.java', 'org.junit.runner.Description', 'methodAndClassNamePatternGroupOrDefault', '(.*)\\((.*)\\)', 'shouldReturnCapturedLogs(me.lorenc.dreadlogs.captor.logback.LogbackCapturingAppenderTest)')","[4381, 11028]"
"('Description.java', 'org.junit.runner.Description', 'methodAndClassNamePatternGroupOrDefault', '(.*)\\((.*)\\)', 'shouldNotFindLogWhenExceptionMessageMatcherDoesNotMatch(me.lorenc.dreadlogs.captor.log4j.functional.Log4jCaptorNoLogFunctionalTest)')","[3215, 10083]"
"('Description.java', 'org.junit.runner.Description', 'methodAndClassNamePatternGroupOrDefault', '(.*)\\((.*)\\)', 'me.lorenc.dreadlogs.captor.log4j.functional.Log4jCaptorNoLogFunctionalTest')","[3068, 14300]"
"('Description.java', 'org.junit.runner.Description', 'methodAndClassNamePatternGroupOrDefault', '(.*)\\((.*)\\)', 'shouldNotFindLogWhenNoLoggerNameMatch(me.lorenc.dreadlogs.captor.logback.functional.LogbackCaptorNoLogFunctionalTest)')","[433, 7605]"
"('Description.java', 'org.junit.runner.Description', 'methodAndClassNamePatternGroupOrDefault', '(.*)\\((.*)\\)', 'shouldReturnTrueIfMatches(me.lorenc.dreadlogs.captor.PatternMatcherTest)')","[1324, 8382]"
"('Description.java', 'org.junit.runner.Description', 'methodAndClassNamePatternGroupOrDefault', '(.*)\\((.*)\\)', 'shouldGetExceptionClass(me.lorenc.dreadlogs.captor.logback.LogbackEntryTest)')","[4132, 10818]"
"('Description.java', 'org.junit.runner.Description', 'methodAndClassNamePatternGroupOrDefault', '(.*)\\((.*)\\)', 'shouldReturnFalseWhenNoMdcValueMatch(me.lorenc.dreadlogs.captor.LogExpectationsTest)')","[6859, 13002]"
"('Description.java', 'org.junit.runner.Description', 'methodAndClassNamePatternGroupOrDefault', '(.*)\\((.*)\\)', 'shouldSetExpectedMessage(me.lorenc.dreadlogs.captor.LogMatcherTest)')","[6196, 12414]"
"('Description.java', 'org.junit.runner.Description', 'methodAndClassNamePatternGroupOrDefault', '(.*)\\((.*)\\)', 'shouldCreateHasLogMatcherForStringMatcher(me.lorenc.dreadlogs.captor.log4j.Log4jMatchersTest)')","[3442, 10272]"
"('Description.java', 'org.junit.runner.Description', 'methodAndClassNamePatternGroupOrDefault', '(.*)\\((.*)\\)', 'shouldCreateLogbackEntryFromLoggingEvent(me.lorenc.dreadlogs.captor.logback.LogbackNoLogMatcherTest)')","[4596, 11196]"
"('Description.java', 'org.junit.runner.Description', 'methodAndClassNamePatternGroupOrDefault', '(.*)\\((.*)\\)', 'shouldGetExceptionMessage(me.lorenc.dreadlogs.captor.jul.JulEntryTest)')","[5350, 11763]"
"('Description.java', 'org.junit.runner.Description', 'methodAndClassNamePatternGroupOrDefault', '(.*)\\((.*)\\)', 'shouldResetLogCapture(me.lorenc.dreadlogs.captor.log4j.Log4jCapturingAppenderTest)')","[5683, 12015]"
"('Description.java', 'org.junit.runner.Description', 'methodAndClassNamePatternGroupOrDefault', '(.*)\\((.*)\\)', 'shouldCaptureLogWithCorrectMdcValues(me.lorenc.dreadlogs.captor.logback.functional.LogbackCaptorMdcFunctionalTest)')","[1076, 8172]"
"('Description.java', 'org.junit.runner.Description', 'methodAndClassNamePatternGroupOrDefault', '(.*)\\((.*)\\)', 'shouldReturnTrueIfExpectingSpecificMdc(me.lorenc.dreadlogs.captor.LogExpectationsTest)')","[7112, 13233]"
"('Description.java', 'org.junit.runner.Description', 'methodAndClassNamePatternGroupOrDefault', '(.*)\\((.*)\\)', 'shouldNotFindLogWhenNoExactExceptionClassMatch(me.lorenc.dreadlogs.captor.logback.functional.LogbackCaptorNoLogFunctionalTest)')","[349, 7521]"
"('Description.java', 'org.junit.runner.Description', 'methodAndClassNamePatternGroupOrDefault', '(.*)\\((.*)\\)', 'shouldNotFindLogWhenNoExceptionMessageMatch(me.lorenc.dreadlogs.captor.log4j.functional.Log4jCaptorNoLogFunctionalTest)')","[3110, 9978]"
"('Description.java', 'org.junit.runner.Description', 'methodAndClassNamePatternGroupOrDefault', '(.*)\\((.*)\\)', 'shouldCaptureLogWithExceptionClassAndMessageMatchingMatcher(me.lorenc.dreadlogs.captor.log4j.functional.Log4jCaptorHasLogFunctionalTest)')","[3028, 9915]"
"('Description.java', 'org.junit.runner.Description', 'methodAndClassNamePatternGroupOrDefault', '(.*)\\((.*)\\)', 'shouldNotCaptureErrorLogIfLevelDisabled(me.lorenc.dreadlogs.captor.log4j.functional.Log4jCaptorLogLevelFilteringFunctionalTest)')","[2549, 9474]"
"('Description.java', 'org.junit.runner.Description', 'methodAndClassNamePatternGroupOrDefault', '(.*)\\((.*)\\)', 'shouldCaptureLogWithCorrectExceptionClass(me.lorenc.dreadlogs.captor.jul.functional.JulCaptorHasLogFunctionalTest)')","[1614, 8634]"
"('Description.java', 'org.junit.runner.Description', 'methodAndClassNamePatternGroupOrDefault', '(.*)\\((.*)\\)', 'shouldNotBeAbleToAddToCapturedLogList(me.lorenc.dreadlogs.captor.LogCaptureTest)')","[4021, 10734]"
"('Description.java', 'org.junit.runner.Description', 'methodAndClassNamePatternGroupOrDefault', '(.*)\\((.*)\\)', 'me.lorenc.dreadlogs.captor.jul.functional.JulCaptorMdcFunctionalTest')","[1738, 13933]"
"('Description.java', 'org.junit.runner.Description', 'methodAndClassNamePatternGroupOrDefault', '(.*)\\((.*)\\)', 'shouldCaptureWarnLog(me.lorenc.dreadlogs.captor.logback.functional.LogbackCaptorLogLevelFilteringFunctionalTest)')","[826, 7941]"
"('Description.java', 'org.junit.runner.Description', 'methodAndClassNamePatternGroupOrDefault', '(.*)\\((.*)\\)', 'shouldSetExpectedMessageMatcher(me.lorenc.dreadlogs.captor.LogMatcherTest)')","[6288, 12498]"
"('Description.java', 'org.junit.runner.Description', 'methodAndClassNamePatternGroupOrDefault', '(.*)\\((.*)\\)', 'shouldCaptureLogWithCorrectExceptionMessage(me.lorenc.dreadlogs.captor.log4j.functional.Log4jCaptorHasLogFunctionalTest)')","[2881, 9768]"
"('Description.java', 'org.junit.runner.Description', 'methodAndClassNamePatternGroupOrDefault', '(.*)\\((.*)\\)', 'shouldNotFindLogWhenNoMessageMatch(me.lorenc.dreadlogs.captor.jul.functional.JulCaptorNoLogFunctionalTest)')","[2091, 9054]"
"('Description.java', 'org.junit.runner.Description', 'methodAndClassNamePatternGroupOrDefault', '(.*)\\((.*)\\)', 'me.lorenc.dreadlogs.captor.jul.JulMatchersTest')","[2278, 14048]"
"('Description.java', 'org.junit.runner.Description', 'methodAndClassNamePatternGroupOrDefault', '(.*)\\((.*)\\)', 'shouldCreateHasLogMatcherForLevelAndStringMatcher(me.lorenc.dreadlogs.captor.jul.JulMatchersTest)')","[2383, 9327]"
"('Description.java', 'org.junit.runner.Description', 'methodAndClassNamePatternGroupOrDefault', '(.*)\\((.*)\\)', 'shouldNotFindLogWhenMessageMatcherDoesNotMatch(me.lorenc.dreadlogs.captor.logback.functional.LogbackCaptorNoLogFunctionalTest)')","[412, 7584]"
"('Description.java', 'org.junit.runner.Description', 'methodAndClassNamePatternGroupOrDefault', '(.*)\\((.*)\\)', 'shouldCreateHasLogMatcherForLevelAndMessage(me.lorenc.dreadlogs.captor.log4j.Log4jMatchersTest)')","[3547, 10377]"
"('Description.java', 'org.junit.runner.Description', 'methodAndClassNamePatternGroupOrDefault', '(.*)\\((.*)\\)', 'shouldCaptureLogWithCorrectMdcValues(me.lorenc.dreadlogs.captor.log4j.functional.Log4jCaptorMdcFunctionalTest)')","[3339, 10188]"
"('Description.java', 'org.junit.runner.Description', 'methodAndClassNamePatternGroupOrDefault', '(.*)\\((.*)\\)', 'me.lorenc.dreadlogs.captor.jul.functional.JulCaptorNoLogFunctionalTest')","[2070, 14022]"
"('Description.java', 'org.junit.runner.Description', 'methodAndClassNamePatternGroupOrDefault', '(.*)\\((.*)\\)', 'shouldNotFindLogWhenNoMessageMatch(me.lorenc.dreadlogs.captor.logback.functional.LogbackCaptorNoLogFunctionalTest)')","[265, 7437]"
"('Description.java', 'org.junit.runner.Description', 'methodAndClassNamePatternGroupOrDefault', '(.*)\\((.*)\\)', 'shouldGetMessage(me.lorenc.dreadlogs.captor.log4j.Log4jEntryTest)')","[5572, 11931]"
"('Description.java', 'org.junit.runner.Description', 'methodAndClassNamePatternGroupOrDefault', '(.*)\\((.*)\\)', 'shouldReturnFalseWhenNoLevelMatch(me.lorenc.dreadlogs.captor.LogExpectationsTest)')","[6905, 13044]"
"('Description.java', 'org.junit.runner.Description', 'methodAndClassNamePatternGroupOrDefault', '(.*)\\((.*)\\)', 'shouldCaptureLogWithCorrectMdcValue(me.lorenc.dreadlogs.captor.log4j.functional.Log4jCaptorMdcFunctionalTest)')","[3360, 10209]"
"('PatternMatcher.java', 'me.lorenc.dreadlogs.captor.PatternMatcher', 'matchesSafely', 'a regex message', 'a regex message')","[13516, 13807, 14137]"
"('Description.java', 'org.junit.runner.Description', 'methodAndClassNamePatternGroupOrDefault', '(.*)\\((.*)\\)', 'shouldCaptureDebugLog(me.lorenc.dreadlogs.captor.log4j.functional.Log4jCaptorLogLevelFilteringFunctionalTest)')","[2675, 9600]"
"('Description.java', 'org.junit.runner.Description', 'methodAndClassNamePatternGroupOrDefault', '(.*)\\((.*)\\)', 'me.lorenc.dreadlogs.captor.log4j.Log4jMatchersTest')","[3379, 14352]"
"('Description.java', 'org.junit.runner.Description', 'methodAndClassNamePatternGroupOrDefault', '(.*)\\((.*)\\)', 'shouldNotCaptureFinerLogIfLevelDisabled(me.lorenc.dreadlogs.captor.jul.functional.JulCaptorLogLevelFilteringFunctionalTest)')","[1946, 8928]"
"('Description.java', 'org.junit.runner.Description', 'methodAndClassNamePatternGroupOrDefault', '(.*)\\((.*)\\)', 'shouldNotFindLogWhenNoExceptionPresent(me.lorenc.dreadlogs.captor.jul.functional.JulCaptorNoLogFunctionalTest)')","[2133, 9096]"
"('Description.java', 'org.junit.runner.Description', 'methodAndClassNamePatternGroupOrDefault', '(.*)\\((.*)\\)', 'shouldReturnFalseWhenOneLogEntryMatchesExpectations(me.lorenc.dreadlogs.captor.NoLogMatcherTest)')","[4726, 11280]"
"('PatternMatcher.java', 'me.lorenc.dreadlogs.captor.PatternMatcher', 'matchesSafely', '^regex message$', 'a message')","[13401, 13996, 14274]"
"('Description.java', 'org.junit.runner.Description', 'methodAndClassNamePatternGroupOrDefault', '(.*)\\((.*)\\)', 'shouldCreateHasLogMatcherForMessage(me.lorenc.dreadlogs.captor.log4j.Log4jMatchersTest)')","[3463, 10293]"
"('Description.java', 'org.junit.runner.Description', 'methodAndClassNamePatternGroupOrDefault', '(.*)\\((.*)\\)', 'shouldSetExpectedLevel(me.lorenc.dreadlogs.captor.LogMatcherTest)')","[6219, 12435]"
"('Description.java', 'org.junit.runner.Description', 'methodAndClassNamePatternGroupOrDefault', '(.*)\\((.*)\\)', 'shouldReturnTrueWhenMdcNotSupportedAndNotSet(me.lorenc.dreadlogs.captor.LogExpectationsTest)')","[6721, 12876]"
"('Description.java', 'org.junit.runner.Description', 'methodAndClassNamePatternGroupOrDefault', '(.*)\\((.*)\\)', 'shouldReturnEmptyStringIfNullMap(me.lorenc.dreadlogs.util.DefaultStringTest)')","[3587, 10398]"
"('Description.java', 'org.junit.runner.Description', 'methodAndClassNamePatternGroupOrDefault', '(.*)\\((.*)\\)', 'shouldCaptureLogWithCorrectLevel(me.lorenc.dreadlogs.captor.jul.functional.JulCaptorHasLogFunctionalTest)')","[1593, 8613]"
"('Description.java', 'org.junit.runner.Description', 'methodAndClassNamePatternGroupOrDefault', '(.*)\\((.*)\\)', 'shouldCreateWithLoggerNameAndLevel(me.lorenc.dreadlogs.captor.jul.JulCaptorTest)')","[4929, 11448]"
"('Description.java', 'org.junit.runner.Description', 'methodAndClassNamePatternGroupOrDefault', '(.*)\\((.*)\\)', 'shouldStringifyAllExpectedExceptMdcIfNotSupported(me.lorenc.dreadlogs.captor.LogEntryTest)')","[3841, 10587]"
"('Description.java', 'org.junit.runner.Description', 'methodAndClassNamePatternGroupOrDefault', '(.*)\\((.*)\\)', 'shouldCaptureLogWithMessageMatchingMatcher(me.lorenc.dreadlogs.captor.log4j.functional.Log4jCaptorHasLogFunctionalTest)')","[2965, 9852]"
"('Description.java', 'org.junit.runner.Description', 'methodAndClassNamePatternGroupOrDefault', '(.*)\\((.*)\\)', 'shouldStringifyOnlyExpectedValues(me.lorenc.dreadlogs.captor.LogEntryTest)')","[3887, 10629]"
"('Description.java', 'org.junit.runner.Description', 'methodAndClassNamePatternGroupOrDefault', '(.*)\\((.*)\\)', 'shouldNotFindLogWhenNoExceptionPresent(me.lorenc.dreadlogs.captor.log4j.functional.Log4jCaptorNoLogFunctionalTest)')","[3131, 9999]"
"('Description.java', 'org.junit.runner.Description', 'methodAndClassNamePatternGroupOrDefault', '(.*)\\((.*)\\)', 'shouldReturnTrueIfExpectingSpecificLevel(me.lorenc.dreadlogs.captor.LogExpectationsTest)')","[7181, 13296]"
"('PatternMatcher.java', 'me.lorenc.dreadlogs.captor.PatternMatcher', 'matchesSafely', '^[a-z]* value$', 'matching value')",[13693]
"('Description.java', 'org.junit.runner.Description', 'methodAndClassNamePatternGroupOrDefault', '(.*)\\((.*)\\)', 'shouldReturnFalseWhenNoMessageMatcherMatch(me.lorenc.dreadlogs.captor.LogExpectationsTest)')","[6606, 12771]"
"('Description.java', 'org.junit.runner.Description', 'methodAndClassNamePatternGroupOrDefault', '(.*)\\((.*)\\)', 'shouldDetachAppender(me.lorenc.dreadlogs.captor.jul.JulCaptorTest)')","[4791, 11322]"
"('Description.java', 'org.junit.runner.Description', 'methodAndClassNamePatternGroupOrDefault', '(.*)\\((.*)\\)', 'shouldReturnNullMdcIfNotFound(me.lorenc.dreadlogs.captor.log4j.Log4jEntryTest)')","[5549, 11910]"
"('Description.java', 'org.junit.runner.Description', 'methodAndClassNamePatternGroupOrDefault', '(.*)\\((.*)\\)', 'shouldAppendDescription(me.lorenc.dreadlogs.captor.LogMatcherTest)')","[6311, 12519]"
"('Description.java', 'org.junit.runner.Description', 'methodAndClassNamePatternGroupOrDefault', '(.*)\\((.*)\\)', 'shouldThrowUnsupportedOperationExceptionOnNoLogMdcExpectations(me.lorenc.dreadlogs.captor.jul.functional.JulCaptorMdcFunctionalTest)')","[1780, 8781]"
"('Description.java', 'org.junit.runner.Description', 'methodAndClassNamePatternGroupOrDefault', '(.*)\\((.*)\\)', 'me.lorenc.dreadlogs.captor.LogExpectationsTest')","[6445, 15549]"
"('Description.java', 'org.junit.runner.Description', 'methodAndClassNamePatternGroupOrDefault', '(.*)\\((.*)\\)', 'shouldNotFindLogWhenNoMdcMatch(me.lorenc.dreadlogs.captor.logback.functional.LogbackCaptorMdcFunctionalTest)')","[1034, 8130]"
"('Description.java', 'org.junit.runner.Description', 'methodAndClassNamePatternGroupOrDefault', '(.*)\\((.*)\\)', 'shouldCaptureFinestLog(me.lorenc.dreadlogs.captor.jul.functional.JulCaptorLogLevelFilteringFunctionalTest)')","[2009, 8991]"
"('Description.java', 'org.junit.runner.Description', 'methodAndClassNamePatternGroupOrDefault', '(.*)\\((.*)\\)', 'shouldReturnTrueIfExpectingSpecificExceptionMessage(me.lorenc.dreadlogs.captor.LogExpectationsTest)')","[6836, 12981]"
"('Description.java', 'org.junit.runner.Description', 'methodAndClassNamePatternGroupOrDefault', '(.*)\\((.*)\\)', 'shouldReturnFalseWhenNoMdcFound(me.lorenc.dreadlogs.captor.LogExpectationsTest)')","[6951, 13086]"
"('PatternMatcher.java', 'me.lorenc.dreadlogs.captor.PatternMatcher', 'matchesSafely', '^a regex message$', 'a regex message')","[13553, 13844, 14174]"
"('Description.java', 'org.junit.runner.Description', 'methodAndClassNamePatternGroupOrDefault', '(.*)\\((.*)\\)', 'shouldAttachHandlerToLoggerOnConstruction(me.lorenc.dreadlogs.captor.jul.JulCaptorTest)')","[4837, 11364]"
"('Description.java', 'org.junit.runner.Description', 'methodAndClassNamePatternGroupOrDefault', '(.*)\\((.*)\\)', 'me.lorenc.dreadlogs.captor.log4j.Log4jHasLogMatcherTest')","[5794, 15340]"
"('Description.java', 'org.junit.runner.Description', 'methodAndClassNamePatternGroupOrDefault', '(.*)\\((.*)\\)', 'shouldCaptureLoggingEvent(me.lorenc.dreadlogs.captor.log4j.Log4jCapturingAppenderTest)')","[5706, 12036]"
"('Description.java', 'org.junit.runner.Description', 'methodAndClassNamePatternGroupOrDefault', '(.*)\\((.*)\\)', 'shouldCaptureLogWithMessageMatchingMatcher(me.lorenc.dreadlogs.captor.logback.functional.LogbackCaptorHasLogFunctionalTest)')","[660, 7794]"
"('Description.java', 'org.junit.runner.Description', 'methodAndClassNamePatternGroupOrDefault', '(.*)\\((.*)\\)', 'shouldCaptureLogWithMessageMatchingMatcher(me.lorenc.dreadlogs.captor.jul.functional.JulCaptorHasLogFunctionalTest)')","[1635, 8655]"
"('Description.java', 'org.junit.runner.Description', 'methodAndClassNamePatternGroupOrDefault', '(.*)\\((.*)\\)', 'shouldNotCaptureDebugLogIfLevelDisabled(me.lorenc.dreadlogs.captor.log4j.functional.Log4jCaptorLogLevelFilteringFunctionalTest)')","[2654, 9579]"
"('Description.java', 'org.junit.runner.Description', 'methodAndClassNamePatternGroupOrDefault', '(.*)\\((.*)\\)', 'shouldStringifyWithoutMdcWhenNotSupported(me.lorenc.dreadlogs.captor.LogEntryTest)')","[3956, 10692]"
"('Description.java', 'org.junit.runner.Description', 'methodAndClassNamePatternGroupOrDefault', '(.*)\\((.*)\\)', 'shouldNotFindLogWhenNoMdcMatch(me.lorenc.dreadlogs.captor.log4j.functional.Log4jCaptorMdcFunctionalTest)')","[3297, 10146]"
"('Description.java', 'org.junit.runner.Description', 'methodAndClassNamePatternGroupOrDefault', '(.*)\\((.*)\\)', 'me.lorenc.dreadlogs.captor.jul.JulCaptorTest')","[4768, 14900]"
"('Description.java', 'org.junit.runner.Description', 'methodAndClassNamePatternGroupOrDefault', '(.*)\\((.*)\\)', 'shouldAttachAppenderToLoggerOnConstruction(me.lorenc.dreadlogs.captor.log4j.Log4jCaptorTest)')","[6020, 12288]"
"('Description.java', 'org.junit.runner.Description', 'methodAndClassNamePatternGroupOrDefault', '(.*)\\((.*)\\)', 'shouldSetLoggerLevelOnConstruction(me.lorenc.dreadlogs.captor.jul.JulCaptorTest)')","[4906, 11427]"
"('Description.java', 'org.junit.runner.Description', 'methodAndClassNamePatternGroupOrDefault', '(.*)\\((.*)\\)', 'shouldNotCaptureLogForDifferentLoggerName(me.lorenc.dreadlogs.captor.log4j.functional.Log4jCaptorLoggerNameFilteringFunctionalTest)')","[2778, 9684]"
"('Description.java', 'org.junit.runner.Description', 'methodAndClassNamePatternGroupOrDefault', '(.*)\\((.*)\\)', 'shouldCreateWithLoggerNameAndLevel(me.lorenc.dreadlogs.captor.logback.LogbackCaptorTest)')","[4444, 11070]"
"('Description.java', 'org.junit.runner.Description', 'methodAndClassNamePatternGroupOrDefault', '(.*)\\((.*)\\)', 'shouldCaptureLogForExactLoggerName(me.lorenc.dreadlogs.captor.logback.functional.LogbackCaptorLoggerNameFilteringFunctionalTest)')","[473, 7626]"
"('Description.java', 'org.junit.runner.Description', 'methodAndClassNamePatternGroupOrDefault', '(.*)\\((.*)\\)', 'me.lorenc.dreadlogs.captor.HasLogMatcherTest')","[3707, 14407]"
"('Description.java', 'org.junit.runner.Description', 'methodAndClassNamePatternGroupOrDefault', '(.*)\\((.*)\\)', 'shouldImplementRestOfHandlerMethods(me.lorenc.dreadlogs.captor.jul.JulCapturingHandlerTest)')","[5017, 11511]"
"('Description.java', 'org.junit.runner.Description', 'methodAndClassNamePatternGroupOrDefault', '(.*)\\((.*)\\)', 'shouldSetExpectedExceptionMessageMatcherAndClass(me.lorenc.dreadlogs.captor.LogMatcherTest)')","[6265, 12477]"
"('Description.java', 'org.junit.runner.Description', 'methodAndClassNamePatternGroupOrDefault', '(.*)\\((.*)\\)', 'shouldStringifyAllIfAllExpected(me.lorenc.dreadlogs.captor.LogEntryTest)')","[3933, 10671]"
"('Description.java', 'org.junit.runner.Description', 'methodAndClassNamePatternGroupOrDefault', '(.*)\\((.*)\\)', 'shouldCreateNoLogMatcherForLevelAndMessage(me.lorenc.dreadlogs.captor.jul.JulMatchersTest)')","[2299, 9243]"
"('Description.java', 'org.junit.runner.Description', 'methodAndClassNamePatternGroupOrDefault', '(.*)\\((.*)\\)', 'shouldReturnTrueIfExpectingSpecificExceptionClass(me.lorenc.dreadlogs.captor.LogExpectationsTest)')","[7043, 13170]"
"('Description.java', 'org.junit.runner.Description', 'methodAndClassNamePatternGroupOrDefault', '(.*)\\((.*)\\)', 'shouldGetNullMdcAsJulDoesNotSupportMdc(me.lorenc.dreadlogs.captor.jul.JulEntryTest)')","[5166, 11595]"
"('Description.java', 'org.junit.runner.Description', 'methodAndClassNamePatternGroupOrDefault', '(.*)\\((.*)\\)', 'shouldCaptureWarnLog(me.lorenc.dreadlogs.captor.log4j.functional.Log4jCaptorLogLevelFilteringFunctionalTest)')","[2507, 9432]"
"('Description.java', 'org.junit.runner.Description', 'methodAndClassNamePatternGroupOrDefault', '(.*)\\((.*)\\)', 'me.lorenc.dreadlogs.captor.jul.functional.JulCaptorLoggerNameFilteringFunctionalTest')","[1406, 13770]"
"('Description.java', 'org.junit.runner.Description', 'methodAndClassNamePatternGroupOrDefault', '(.*)\\((.*)\\)', 'shouldDetachAppender(me.lorenc.dreadlogs.captor.logback.LogbackCaptorTest)')","[4510, 11133]"
"('Description.java', 'org.junit.runner.Description', 'methodAndClassNamePatternGroupOrDefault', '(.*)\\((.*)\\)', 'shouldGetExceptionMessage(me.lorenc.dreadlogs.captor.logback.LogbackEntryTest)')","[4293, 10965]"
"('Description.java', 'org.junit.runner.Description', 'methodAndClassNamePatternGroupOrDefault', '(.*)\\((.*)\\)', 'shouldGetExceptionMessage(me.lorenc.dreadlogs.captor.log4j.Log4jEntryTest)')","[5618, 11973]"
"('Description.java', 'org.junit.runner.Description', 'methodAndClassNamePatternGroupOrDefault', '(.*)\\((.*)\\)', 'shouldReturnFalseIfNotExpectingSpecificLevel(me.lorenc.dreadlogs.captor.LogExpectationsTest)')","[7066, 13191]"
"('Description.java', 'org.junit.runner.Description', 'methodAndClassNamePatternGroupOrDefault', '(.*)\\((.*)\\)', 'shouldCaptureWarningLog(me.lorenc.dreadlogs.captor.jul.functional.JulCaptorLogLevelFilteringFunctionalTest)')","[2030, 9012]"
"('Description.java', 'org.junit.runner.Description', 'methodAndClassNamePatternGroupOrDefault', '(.*)\\((.*)\\)', 'shouldGetLevel(me.lorenc.dreadlogs.captor.log4j.Log4jEntryTest)')","[5595, 11952]"
"('Description.java', 'org.junit.runner.Description', 'methodAndClassNamePatternGroupOrDefault', '(.*)\\((.*)\\)', 'shouldCreateHasLogMatcherForMessage(me.lorenc.dreadlogs.captor.logback.LogbackMatchersTest)')","[1200, 8277]"
"('Description.java', 'org.junit.runner.Description', 'methodAndClassNamePatternGroupOrDefault', '(.*)\\((.*)\\)', 'shouldStringify(me.lorenc.dreadlogs.captor.LogExpectationsTest)')","[6675, 12834]"
"('Description.java', 'org.junit.runner.Description', 'methodAndClassNamePatternGroupOrDefault', '(.*)\\((.*)\\)', 'shouldDetachAppenderInAfter(me.lorenc.dreadlogs.captor.jul.JulCaptorTest)')","[4860, 11385]"
"('Description.java', 'org.junit.runner.Description', 'methodAndClassNamePatternGroupOrDefault', '(.*)\\((.*)\\)', 'shouldReturnCapturedLogs(me.lorenc.dreadlogs.captor.log4j.Log4jCapturingAppenderTest)')","[5752, 12078]"
"('Description.java', 'org.junit.runner.Description', 'methodAndClassNamePatternGroupOrDefault', '(.*)\\((.*)\\)', 'shouldCaptureLogWithCorrectExceptionClass(me.lorenc.dreadlogs.captor.logback.functional.LogbackCaptorHasLogFunctionalTest)')","[639, 7773]"
"('Description.java', 'org.junit.runner.Description', 'methodAndClassNamePatternGroupOrDefault', '(.*)\\((.*)\\)', 'shouldCreateWithLoggerNameOnly(me.lorenc.dreadlogs.captor.log4j.Log4jCaptorTest)')","[5905, 12183]"
"('Description.java', 'org.junit.runner.Description', 'methodAndClassNamePatternGroupOrDefault', '(.*)\\((.*)\\)', 'shouldReturnFalseWhenNoMatches(me.lorenc.dreadlogs.captor.HasLogMatcherTest)')","[3730, 10503]"
"('Description.java', 'org.junit.runner.Description', 'methodAndClassNamePatternGroupOrDefault', '(.*)\\((.*)\\)', 'me.lorenc.dreadlogs.captor.jul.functional.JulCaptorLogLevelFilteringFunctionalTest')","[1799, 13959]"
"('Description.java', 'org.junit.runner.Description', 'methodAndClassNamePatternGroupOrDefault', '(.*)\\((.*)\\)', 'me.lorenc.dreadlogs.captor.LogMatcherTest')","[6104, 15505]"
"('Description.java', 'org.junit.runner.Description', 'methodAndClassNamePatternGroupOrDefault', '(.*)\\((.*)\\)', 'shouldReturnTrueWhenNoLogEntries(me.lorenc.dreadlogs.captor.NoLogMatcherTest)')","[4680, 11238]"
"('Description.java', 'org.junit.runner.Description', 'methodAndClassNamePatternGroupOrDefault', '(.*)\\((.*)\\)', 'shouldStringifyMapInNotEmpty(me.lorenc.dreadlogs.util.DefaultStringTest)')","[3629, 10440]"
"('Description.java', 'org.junit.runner.Description', 'methodAndClassNamePatternGroupOrDefault', '(.*)\\((.*)\\)', 'shouldReturnNullExceptionMessageWhenNoThrowable(me.lorenc.dreadlogs.captor.log4j.Log4jEntryTest)')","[5434, 11805]"
"('Description.java', 'org.junit.runner.Description', 'methodAndClassNamePatternGroupOrDefault', '(.*)\\((.*)\\)', 'me.lorenc.dreadlogs.captor.logback.functional.LogbackCaptorHasLogFunctionalTest')","[555, 13479]"
"('Description.java', 'org.junit.runner.Description', 'methodAndClassNamePatternGroupOrDefault', '(.*)\\((.*)\\)', 'shouldReturnFalseWhenNoExceptionMessageMetcherMatch(me.lorenc.dreadlogs.captor.LogExpectationsTest)')","[6744, 12897]"
"('Description.java', 'org.junit.runner.Description', 'methodAndClassNamePatternGroupOrDefault', '(.*)\\((.*)\\)', 'shouldReturnFalseWhenNoMessageMatch(me.lorenc.dreadlogs.captor.LogExpectationsTest)')","[6928, 13065]"
"('Description.java', 'org.junit.runner.Description', 'methodAndClassNamePatternGroupOrDefault', '(.*)\\((.*)\\)', 'shouldNotFindLogsOnOtherLevels(me.lorenc.dreadlogs.captor.logback.functional.LogbackCaptorLogLevelFilteringFunctionalTest)')","[910, 8025]"
"('Description.java', 'org.junit.runner.Description', 'methodAndClassNamePatternGroupOrDefault', '(.*)\\((.*)\\)', 'shouldNotCaptureInfoLogIfLevelDisabled(me.lorenc.dreadlogs.captor.jul.functional.JulCaptorLogLevelFilteringFunctionalTest)')","[2051, 9033]"
"('Description.java', 'org.junit.runner.Description', 'methodAndClassNamePatternGroupOrDefault', '(.*)\\((.*)\\)', 'shouldReturnTrueWhenNoExpectationsSpecified(me.lorenc.dreadlogs.captor.LogExpectationsTest)')","[6698, 12855]"
"('Description.java', 'org.junit.runner.Description', 'methodAndClassNamePatternGroupOrDefault', '(.*)\\((.*)\\)', 'shouldCreateLogbackEntryFromLoggingEvent(me.lorenc.dreadlogs.captor.logback.LogbackHasLogMatcherTest)')","[4638, 11217]"
"('Description.java', 'org.junit.runner.Description', 'methodAndClassNamePatternGroupOrDefault', '(.*)\\((.*)\\)', 'shouldCreateWithFullConstructor(me.lorenc.dreadlogs.captor.log4j.Log4jCaptorTest)')","[5928, 12204]"
"('Description.java', 'org.junit.runner.Description', 'methodAndClassNamePatternGroupOrDefault', '(.*)\\((.*)\\)', 'shouldImplementRestOfHandlerMethods(me.lorenc.dreadlogs.captor.log4j.Log4jCapturingAppenderTest)')","[5729, 12057]"
"('Description.java', 'org.junit.runner.Description', 'methodAndClassNamePatternGroupOrDefault', '(.*)\\((.*)\\)', 'shouldStringify(me.lorenc.dreadlogs.captor.LogEntryTest)')","[3910, 10650]"
"('Description.java', 'org.junit.runner.Description', 'methodAndClassNamePatternGroupOrDefault', '(.*)\\((.*)\\)', 'shouldReturnFalseWhenNoLogEntries(me.lorenc.dreadlogs.captor.HasLogMatcherTest)')","[3753, 10524]"
"('Description.java', 'org.junit.runner.Description', 'methodAndClassNamePatternGroupOrDefault', '(.*)\\((.*)\\)', 'shouldCaptureLoggingEvent(me.lorenc.dreadlogs.captor.logback.LogbackCapturingAppenderTest)')","[4358, 11007]"
"('Description.java', 'org.junit.runner.Description', 'methodAndClassNamePatternGroupOrDefault', '(.*)\\((.*)\\)', 'shouldDescribeMismatch(me.lorenc.dreadlogs.captor.PatternMatcherTest)')","[1345, 8403]"
"('Description.java', 'org.junit.runner.Description', 'methodAndClassNamePatternGroupOrDefault', '(.*)\\((.*)\\)', 'shouldNotFindLogWhenNoMessageMatch(me.lorenc.dreadlogs.captor.log4j.functional.Log4jCaptorNoLogFunctionalTest)')","[3089, 9957]"
"('Description.java', 'org.junit.runner.Description', 'methodAndClassNamePatternGroupOrDefault', '(.*)\\((.*)\\)', 'shouldDetachAppenderOnAfer(me.lorenc.dreadlogs.captor.logback.LogbackCaptorTest)')","[4532, 11154]"
"('Description.java', 'org.junit.runner.Description', 'methodAndClassNamePatternGroupOrDefault', '(.*)\\((.*)\\)', 'shouldNotFindLogWhenNoExactExceptionClassMatch(me.lorenc.dreadlogs.captor.jul.functional.JulCaptorNoLogFunctionalTest)')","[2175, 9138]"
"('Description.java', 'org.junit.runner.Description', 'methodAndClassNamePatternGroupOrDefault', '(.*)\\((.*)\\)', 'shouldNotFindLogWhenNoLevelMatch(me.lorenc.dreadlogs.captor.logback.functional.LogbackCaptorNoLogFunctionalTest)')","[328, 7500]"
"('Description.java', 'org.junit.runner.Description', 'methodAndClassNamePatternGroupOrDefault', '(.*)\\((.*)\\)', 'shouldAppendClassNameValue(me.lorenc.dreadlogs.captor.OnlyExpectedToStringBuilderTest)')","[204, 7395]"
"('Description.java', 'org.junit.runner.Description', 'methodAndClassNamePatternGroupOrDefault', '(.*)\\((.*)\\)', 'shouldNotFindLogWhenNoLoggerNameMatch(me.lorenc.dreadlogs.captor.jul.functional.JulCaptorNoLogFunctionalTest)')","[2259, 9222]"
"('Description.java', 'org.junit.runner.Description', 'methodAndClassNamePatternGroupOrDefault', '(.*)\\((.*)\\)', 'shouldCreateNoLogMatcherForMessage(me.lorenc.dreadlogs.captor.logback.LogbackMatchersTest)')","[1158, 8235]"
"('Description.java', 'org.junit.runner.Description', 'methodAndClassNamePatternGroupOrDefault', '(.*)\\((.*)\\)', 'me.lorenc.dreadlogs.captor.jul.JulNoLogMatcherTest')","[5101, 15065]"
"('Description.java', 'org.junit.runner.Description', 'methodAndClassNamePatternGroupOrDefault', '(.*)\\((.*)\\)', 'shouldSetExpectedExceptionClass(me.lorenc.dreadlogs.captor.LogMatcherTest)')","[6127, 12351]"
"('Description.java', 'org.junit.runner.Description', 'methodAndClassNamePatternGroupOrDefault', '(.*)\\((.*)\\)', 'shouldReturnTrueOnFirstMatchingLogEntry(me.lorenc.dreadlogs.captor.HasLogMatcherTest)')","[3799, 10566]"
"('Description.java', 'org.junit.runner.Description', 'methodAndClassNamePatternGroupOrDefault', '(.*)\\((.*)\\)', 'shouldReturnFalseWhenNoExceptionMessageMatch(me.lorenc.dreadlogs.captor.LogExpectationsTest)')","[6491, 12666]"
"('Description.java', 'org.junit.runner.Description', 'methodAndClassNamePatternGroupOrDefault', '(.*)\\((.*)\\)', 'shouldCaptureLogWhenCaptorSetToParrentPackage(me.lorenc.dreadlogs.captor.log4j.functional.Log4jCaptorLoggerNameFilteringFunctionalTest)')","[2820, 9726]"
"('Description.java', 'org.junit.runner.Description', 'methodAndClassNamePatternGroupOrDefault', '(.*)\\((.*)\\)', 'me.lorenc.dreadlogs.captor.log4j.Log4jCapturingAppenderTest')","[5660, 15285]"
"('Description.java', 'org.junit.runner.Description', 'methodAndClassNamePatternGroupOrDefault', '(.*)\\((.*)\\)', 'shouldReturnSnapshotOfCapturedLogs(me.lorenc.dreadlogs.captor.LogCaptureTest)')","[4044, 10755]"
"('Description.java', 'org.junit.runner.Description', 'methodAndClassNamePatternGroupOrDefault', '(.*)\\((.*)\\)', 'shouldAddExpectedMdc(me.lorenc.dreadlogs.captor.LogMatcherTest)')","[6403, 12603]"
"('Description.java', 'org.junit.runner.Description', 'methodAndClassNamePatternGroupOrDefault', '(.*)\\((.*)\\)', 'shouldThrowUnsupportedOperationExceptionOnHasLogMdcExpectations(me.lorenc.dreadlogs.captor.jul.functional.JulCaptorMdcFunctionalTest)')","[1759, 8760]"
"('Description.java', 'org.junit.runner.Description', 'methodAndClassNamePatternGroupOrDefault', '(.*)\\((.*)\\)', 'shouldReturnEmptyStringIfEmptyMap(me.lorenc.dreadlogs.util.DefaultStringTest)')","[3650, 10461]"
"('Description.java', 'org.junit.runner.Description', 'methodAndClassNamePatternGroupOrDefault', '(.*)\\((.*)\\)', 'shouldAppendNonEmptyMap(me.lorenc.dreadlogs.captor.OnlyExpectedToStringBuilderTest)')","[225, 7416]"
"('Description.java', 'org.junit.runner.Description', 'methodAndClassNamePatternGroupOrDefault', '(.*)\\((.*)\\)', 'shouldNotCaptureTraceLogIfLevelDisabled(me.lorenc.dreadlogs.captor.logback.functional.LogbackCaptorLogLevelFilteringFunctionalTest)')","[889, 8004]"
"('Description.java', 'org.junit.runner.Description', 'methodAndClassNamePatternGroupOrDefault', '(.*)\\((.*)\\)', 'shouldCaptureLogWithExceptionClassAndMessageMatchingMatcher(me.lorenc.dreadlogs.captor.jul.functional.JulCaptorHasLogFunctionalTest)')","[1698, 8718]"
"('Description.java', 'org.junit.runner.Description', 'methodAndClassNamePatternGroupOrDefault', '(.*)\\((.*)\\)', 'shouldCreateNoLogMatcherForStringMatcher(me.lorenc.dreadlogs.captor.logback.LogbackMatchersTest)')","[1242, 8319]"
"('Description.java', 'org.junit.runner.Description', 'methodAndClassNamePatternGroupOrDefault', '(.*)\\((.*)\\)', 'shouldCaptureLogWithCorrectExceptionClassAndMessage(me.lorenc.dreadlogs.captor.log4j.functional.Log4jCaptorHasLogFunctionalTest)')","[3049, 9936]"
"('Description.java', 'org.junit.runner.Description', 'methodAndClassNamePatternGroupOrDefault', '(.*)\\((.*)\\)', 'shouldCaptureTraceLog(me.lorenc.dreadlogs.captor.logback.functional.LogbackCaptorLogLevelFilteringFunctionalTest)')","[994, 8109]"
"('Description.java', 'org.junit.runner.Description', 'methodAndClassNamePatternGroupOrDefault', '(.*)\\((.*)\\)', 'shouldCreateWithLoggerNameOnly(me.lorenc.dreadlogs.captor.logback.LogbackCaptorTest)')","[4422, 11049]"
"('Description.java', 'org.junit.runner.Description', 'methodAndClassNamePatternGroupOrDefault', '(.*)\\((.*)\\)', 'shouldCreateJulEntryFromLogRecord(me.lorenc.dreadlogs.captor.jul.JulHasLogMatcherTest)')","[5082, 11553]"
"('Description.java', 'org.junit.runner.Description', 'methodAndClassNamePatternGroupOrDefault', '(.*)\\((.*)\\)', 'me.lorenc.dreadlogs.captor.logback.LogbackCaptorTest')","[4400, 14680]"
"('Description.java', 'org.junit.runner.Description', 'methodAndClassNamePatternGroupOrDefault', '(.*)\\((.*)\\)', 'shouldCaptureLogForExactLoggerName(me.lorenc.dreadlogs.captor.log4j.functional.Log4jCaptorLoggerNameFilteringFunctionalTest)')","[2757, 9663]"
"('Description.java', 'org.junit.runner.Description', 'methodAndClassNamePatternGroupOrDefault', '(.*)\\((.*)\\)', 'shouldGetLevel(me.lorenc.dreadlogs.captor.jul.JulEntryTest)')","[5327, 11742]"
"('Description.java', 'org.junit.runner.Description', 'methodAndClassNamePatternGroupOrDefault', '(.*)\\((.*)\\)', 'shouldNotFindLogWhenMessageMatcherDoesNotMatch(me.lorenc.dreadlogs.captor.jul.functional.JulCaptorNoLogFunctionalTest)')","[2238, 9201]"
"('Description.java', 'org.junit.runner.Description', 'methodAndClassNamePatternGroupOrDefault', '(.*)\\((.*)\\)', 'shouldCaptureLogWithCorrectLevel(me.lorenc.dreadlogs.captor.log4j.functional.Log4jCaptorHasLogFunctionalTest)')","[2923, 9810]"
"('Description.java', 'org.junit.runner.Description', 'methodAndClassNamePatternGroupOrDefault', '(.*)\\((.*)\\)', 'shouldCaptureLogWithCorrectExceptionMessage(me.lorenc.dreadlogs.captor.logback.functional.LogbackCaptorHasLogFunctionalTest)')","[597, 7731]"
"('Description.java', 'org.junit.runner.Description', 'methodAndClassNamePatternGroupOrDefault', '(.*)\\((.*)\\)', 'shouldReturnFalseWhenNoLoggerNameMatch(me.lorenc.dreadlogs.captor.LogExpectationsTest)')","[6560, 12729]"
"('Description.java', 'org.junit.runner.Description', 'methodAndClassNamePatternGroupOrDefault', '(.*)\\((.*)\\)', 'shouldCaptureLog(me.lorenc.dreadlogs.captor.LogCaptureTest)')","[3998, 10713]"
"('Description.java', 'org.junit.runner.Description', 'methodAndClassNamePatternGroupOrDefault', '(.*)\\((.*)\\)', 'me.lorenc.dreadlogs.captor.log4j.Log4jCaptorTest')","[5836, 15395]"
"('Description.java', 'org.junit.runner.Description', 'methodAndClassNamePatternGroupOrDefault', '(.*)\\((.*)\\)', 'shouldNotFindLogWhenMessageDoesNotMatchRegex(me.lorenc.dreadlogs.captor.logback.functional.LogbackCaptorNoLogFunctionalTest)')","[370, 7542]"
"('Description.java', 'org.junit.runner.Description', 'methodAndClassNamePatternGroupOrDefault', '(.*)\\((.*)\\)', 'shouldReturnLogRecords(me.lorenc.dreadlogs.captor.jul.JulCaptorTest)')","[4883, 11406]"
"('Description.java', 'org.junit.runner.Description', 'methodAndClassNamePatternGroupOrDefault', '(.*)\\((.*)\\)', 'shouldCaptureSevereLog(me.lorenc.dreadlogs.captor.jul.functional.JulCaptorLogLevelFilteringFunctionalTest)')","[1862, 8844]"
"('Description.java', 'org.junit.runner.Description', 'methodAndClassNamePatternGroupOrDefault', '(.*)\\((.*)\\)', 'shouldDescribeMismatch(me.lorenc.dreadlogs.captor.LogMatcherTest)')","[6242, 12456]"
"('Description.java', 'org.junit.runner.Description', 'methodAndClassNamePatternGroupOrDefault', '(.*)\\((.*)\\)', 'shouldCreateHasLogMatcherForLevelAndStringMatcher(me.lorenc.dreadlogs.captor.log4j.Log4jMatchersTest)')","[3484, 10314]"
"('Description.java', 'org.junit.runner.Description', 'methodAndClassNamePatternGroupOrDefault', '(.*)\\((.*)\\)', 'shouldNotAppendIfConditionFalse(me.lorenc.dreadlogs.captor.OnlyExpectedToStringBuilderTest)')","[78, 7269]"
"('Description.java', 'org.junit.runner.Description', 'methodAndClassNamePatternGroupOrDefault', '(.*)\\((.*)\\)', 'shouldCaptureFinerLog(me.lorenc.dreadlogs.captor.jul.functional.JulCaptorLogLevelFilteringFunctionalTest)')","[1967, 8949]"
"('Description.java', 'org.junit.runner.Description', 'methodAndClassNamePatternGroupOrDefault', '(.*)\\((.*)\\)', 'shouldReturnFalseAsJulDoesNotSupportMdc(me.lorenc.dreadlogs.captor.jul.JulEntryTest)')","[5235, 11658]"
"('Description.java', 'org.junit.runner.Description', 'methodAndClassNamePatternGroupOrDefault', '(.*)\\((.*)\\)', 'shouldReturnFalseIfNotExpectingSpecificMessage(me.lorenc.dreadlogs.captor.LogExpectationsTest)')","[7204, 13317]"
"('Description.java', 'org.junit.runner.Description', 'methodAndClassNamePatternGroupOrDefault', '(.*)\\((.*)\\)', 'shouldNullReturnExceptionClassWhenNoThrowableProxy(me.lorenc.dreadlogs.captor.logback.LogbackEntryTest)')","[4270, 10944]"
"('Description.java', 'org.junit.runner.Description', 'methodAndClassNamePatternGroupOrDefault', '(.*)\\((.*)\\)', 'shouldReturnFalseIfNotExpectingSpecificLogerName(me.lorenc.dreadlogs.captor.LogExpectationsTest)')","[6813, 12960]"
"('Description.java', 'org.junit.runner.Description', 'methodAndClassNamePatternGroupOrDefault', '(.*)\\((.*)\\)', 'shouldCaptureLogWithCorrectExceptionClass(me.lorenc.dreadlogs.captor.log4j.functional.Log4jCaptorHasLogFunctionalTest)')","[2944, 9831]"
"('Description.java', 'org.junit.runner.Description', 'methodAndClassNamePatternGroupOrDefault', '(.*)\\((.*)\\)', 'shouldClearCapturedLogsOnReset(me.lorenc.dreadlogs.captor.LogCaptureTest)')","[4067, 10776]"
"('Description.java', 'org.junit.runner.Description', 'methodAndClassNamePatternGroupOrDefault', '(.*)\\((.*)\\)', 'shouldNotCaptureFinestLogIfLevelDisabled(me.lorenc.dreadlogs.captor.jul.functional.JulCaptorLogLevelFilteringFunctionalTest)')","[1883, 8865]"
"('Description.java', 'org.junit.runner.Description', 'methodAndClassNamePatternGroupOrDefault', '(.*)\\((.*)\\)', 'shouldNotCaptureLogWhenCaptorSetToChildPackage(me.lorenc.dreadlogs.captor.log4j.functional.Log4jCaptorLoggerNameFilteringFunctionalTest)')","[2799, 9705]"
"('Description.java', 'org.junit.runner.Description', 'methodAndClassNamePatternGroupOrDefault', '(.*)\\((.*)\\)', 'shouldSetLoggerLevelOnConstruction(me.lorenc.dreadlogs.captor.log4j.Log4jCaptorTest)')","[5951, 12225]"
"('Description.java', 'org.junit.runner.Description', 'methodAndClassNamePatternGroupOrDefault', '(.*)\\((.*)\\)', 'shouldThrowUnsupportedOperationExceptionWhenMdcSetButNotSupported(me.lorenc.dreadlogs.captor.LogExpectationsTest)')","[7020, 13149]"
"('Description.java', 'org.junit.runner.Description', 'methodAndClassNamePatternGroupOrDefault', '(.*)\\((.*)\\)', 'me.lorenc.dreadlogs.captor.jul.JulHasLogMatcherTest')","[5059, 15010]"
"('Description.java', 'org.junit.runner.Description', 'methodAndClassNamePatternGroupOrDefault', '(.*)\\((.*)\\)', 'shouldNotFindLogWhenMessageMatcherDoesNotMatch(me.lorenc.dreadlogs.captor.log4j.functional.Log4jCaptorNoLogFunctionalTest)')","[3236, 10104]"
"('Description.java', 'org.junit.runner.Description', 'methodAndClassNamePatternGroupOrDefault', '(.*)\\((.*)\\)', 'shouldReturnTrueWhenMutlipleMdcsMatch(me.lorenc.dreadlogs.captor.LogExpectationsTest)')","[6629, 12792]"
"('Description.java', 'org.junit.runner.Description', 'methodAndClassNamePatternGroupOrDefault', '(.*)\\((.*)\\)', 'me.lorenc.dreadlogs.captor.log4j.Log4jEntryTest')","[5411, 15230]"
"('Description.java', 'org.junit.runner.Description', 'methodAndClassNamePatternGroupOrDefault', '(.*)\\((.*)\\)', 'shouldNotFindLogWhenExceptionMessageMatcherDoesNotMatch(me.lorenc.dreadlogs.captor.logback.functional.LogbackCaptorNoLogFunctionalTest)')","[391, 7563]"
"('Description.java', 'org.junit.runner.Description', 'methodAndClassNamePatternGroupOrDefault', '(.*)\\((.*)\\)', 'shouldCreateNoLogMatcherForStringMatcher(me.lorenc.dreadlogs.captor.log4j.Log4jMatchersTest)')","[3505, 10335]"
"('Description.java', 'org.junit.runner.Description', 'methodAndClassNamePatternGroupOrDefault', '(.*)\\((.*)\\)', 'shouldNotFindLogWhenNoExceptionPresent(me.lorenc.dreadlogs.captor.logback.functional.LogbackCaptorNoLogFunctionalTest)')","[307, 7479]"
"('Description.java', 'org.junit.runner.Description', 'methodAndClassNamePatternGroupOrDefault', '(.*)\\((.*)\\)', 'shouldNotCaptureErrorLogIfLevelDisabled(me.lorenc.dreadlogs.captor.logback.functional.LogbackCaptorLogLevelFilteringFunctionalTest)')","[847, 7962]"
"('Description.java', 'org.junit.runner.Description', 'methodAndClassNamePatternGroupOrDefault', '(.*)\\((.*)\\)', 'shouldReturnLoggingEvents(me.lorenc.dreadlogs.captor.log4j.Log4jCaptorTest)')","[5859, 12141]"
"('Description.java', 'org.junit.runner.Description', 'methodAndClassNamePatternGroupOrDefault', '(.*)\\((.*)\\)', 'shouldSetLoggerLevelOnConstruction(me.lorenc.dreadlogs.captor.logback.LogbackCaptorTest)')","[4466, 11091]"
"('Description.java', 'org.junit.runner.Description', 'methodAndClassNamePatternGroupOrDefault', '(.*)\\((.*)\\)', 'me.lorenc.dreadlogs.captor.logback.functional.LogbackCaptorNoLogFunctionalTest')","[244, 13427]"
"('Description.java', 'org.junit.runner.Description', 'methodAndClassNamePatternGroupOrDefault', '(.*)\\((.*)\\)', 'shouldNotFindLogWhenNoExceptionMessageMatch(me.lorenc.dreadlogs.captor.jul.functional.JulCaptorNoLogFunctionalTest)')","[2112, 9075]"
"('Description.java', 'org.junit.runner.Description', 'methodAndClassNamePatternGroupOrDefault', '(.*)\\((.*)\\)', 'null')","[17, 3688]"
"('Description.java', 'org.junit.runner.Description', 'methodAndClassNamePatternGroupOrDefault', '(.*)\\((.*)\\)', 'shouldCaptureLogRecord(me.lorenc.dreadlogs.captor.jul.JulCapturingHandlerTest)')","[4971, 11469]"
"('Description.java', 'org.junit.runner.Description', 'methodAndClassNamePatternGroupOrDefault', '(.*)\\((.*)\\)', 'shouldNotFindLogWhenNoLevelMatch(me.lorenc.dreadlogs.captor.jul.functional.JulCaptorNoLogFunctionalTest)')","[2154, 9117]"
"('Description.java', 'org.junit.runner.Description', 'methodAndClassNamePatternGroupOrDefault', '(.*)\\((.*)\\)', 'me.lorenc.dreadlogs.captor.LogEntryTest')","[3818, 14462]"
"('Description.java', 'org.junit.runner.Description', 'methodAndClassNamePatternGroupOrDefault', '(.*)\\((.*)\\)', 'shouldCreateHasLogMatcherForStringMatcher(me.lorenc.dreadlogs.captor.jul.JulMatchersTest)')","[2341, 9285]"
"('Description.java', 'org.junit.runner.Description', 'methodAndClassNamePatternGroupOrDefault', '(.*)\\((.*)\\)', 'shouldReturnFalseIfNotExpectingSpecificExceptionClass(me.lorenc.dreadlogs.captor.LogExpectationsTest)')","[7158, 13275]"
"('Description.java', 'org.junit.runner.Description', 'methodAndClassNamePatternGroupOrDefault', '(.*)\\((.*)\\)', 'shouldAppendIfConditionTrue(me.lorenc.dreadlogs.captor.OnlyExpectedToStringBuilderTest)')","[99, 7290]"
"('Description.java', 'org.junit.runner.Description', 'methodAndClassNamePatternGroupOrDefault', '(.*)\\((.*)\\)', 'shouldCaptureErrorLog(me.lorenc.dreadlogs.captor.logback.functional.LogbackCaptorLogLevelFilteringFunctionalTest)')","[784, 7899]"
"('Description.java', 'org.junit.runner.Description', 'methodAndClassNamePatternGroupOrDefault', '(.*)\\((.*)\\)', 'shouldReturnTrueAsLog4jSupportsMdc(me.lorenc.dreadlogs.captor.log4j.Log4jEntryTest)')","[5526, 11889]"
"('Description.java', 'org.junit.runner.Description', 'methodAndClassNamePatternGroupOrDefault', '(.*)\\((.*)\\)', 'shouldNotFindLogsOnOtherLevels(me.lorenc.dreadlogs.captor.log4j.functional.Log4jCaptorLogLevelFilteringFunctionalTest)')","[2612, 9537]"
"('Description.java', 'org.junit.runner.Description', 'methodAndClassNamePatternGroupOrDefault', '(.*)\\((.*)\\)', 'shouldReturnTrueWhenExceptionMessageMatcherMatches(me.lorenc.dreadlogs.captor.LogExpectationsTest)')","[7135, 13254]"
"('Description.java', 'org.junit.runner.Description', 'methodAndClassNamePatternGroupOrDefault', '(.*)\\((.*)\\)', 'shouldCaptureInfoLog(me.lorenc.dreadlogs.captor.jul.functional.JulCaptorLogLevelFilteringFunctionalTest)')","[1904, 8886]"
"('Description.java', 'org.junit.runner.Description', 'methodAndClassNamePatternGroupOrDefault', '(.*)\\((.*)\\)', 'shouldCreateNoLogMatcherForLevelAndMessage(me.lorenc.dreadlogs.captor.log4j.Log4jMatchersTest)')","[3400, 10230]"
"('Description.java', 'org.junit.runner.Description', 'methodAndClassNamePatternGroupOrDefault', '(.*)\\((.*)\\)', 'shouldStringifyToEmptyStringWhenAllNullValues(me.lorenc.dreadlogs.captor.LogExpectationsTest)')","[7227, 13338]"
"('Description.java', 'org.junit.runner.Description', 'methodAndClassNamePatternGroupOrDefault', '(.*)\\((.*)\\)', 'shouldReturnTrueWhenAllExpectationsMatch(me.lorenc.dreadlogs.captor.LogExpectationsTest)')","[6974, 13107]"
"('Description.java', 'org.junit.runner.Description', 'methodAndClassNamePatternGroupOrDefault', '(.*)\\((.*)\\)', 'shouldGetExceptionClass(me.lorenc.dreadlogs.captor.jul.JulEntryTest)')","[5189, 11616]"
"('Description.java', 'org.junit.runner.Description', 'methodAndClassNamePatternGroupOrDefault', '(.*)\\((.*)\\)', 'shouldNotFindLogWhenMessageDoesNotMatchRegex(me.lorenc.dreadlogs.captor.log4j.functional.Log4jCaptorNoLogFunctionalTest)')","[3194, 10062]"
"('Description.java', 'org.junit.runner.Description', 'methodAndClassNamePatternGroupOrDefault', '(.*)\\((.*)\\)', 'shouldCreateNoLogMatcherForLevelAndStringMatcher(me.lorenc.dreadlogs.captor.log4j.Log4jMatchersTest)')","[3526, 10356]"
"('Description.java', 'org.junit.runner.Description', 'methodAndClassNamePatternGroupOrDefault', '(.*)\\((.*)\\)', 'me.lorenc.dreadlogs.captor.logback.LogbackMatchersTest')","[1116, 13668]"
"('Description.java', 'org.junit.runner.Description', 'methodAndClassNamePatternGroupOrDefault', '(.*)\\((.*)\\)', 'shouldNotFindLogWhenNoExceptionMessageMatch(me.lorenc.dreadlogs.captor.logback.functional.LogbackCaptorNoLogFunctionalTest)')","[286, 7458]"
"('Description.java', 'org.junit.runner.Description', 'methodAndClassNamePatternGroupOrDefault', '(.*)\\((.*)\\)', 'me.lorenc.dreadlogs.captor.log4j.Log4jNoLogMatcherTest')","[6062, 15450]"
"('Description.java', 'org.junit.runner.Description', 'methodAndClassNamePatternGroupOrDefault', '(.*)\\((.*)\\)', 'me.lorenc.dreadlogs.captor.log4j.functional.Log4jCaptorHasLogFunctionalTest')","[2839, 14237]"
"('Description.java', 'org.junit.runner.Description', 'methodAndClassNamePatternGroupOrDefault', '(.*)\\((.*)\\)', 'shouldCaptureInfoLog(me.lorenc.dreadlogs.captor.log4j.functional.Log4jCaptorLogLevelFilteringFunctionalTest)')","[2570, 9495]"
"('Description.java', 'org.junit.runner.Description', 'methodAndClassNamePatternGroupOrDefault', '(.*)\\((.*)\\)', 'shouldCaptureLogWithCorrectMdcValue(me.lorenc.dreadlogs.captor.logback.functional.LogbackCaptorMdcFunctionalTest)')","[1097, 8193]"
"('Description.java', 'org.junit.runner.Description', 'methodAndClassNamePatternGroupOrDefault', '(.*)\\((.*)\\)', 'shouldCaptureLogWithCorrectMessage(me.lorenc.dreadlogs.captor.logback.functional.LogbackCaptorHasLogFunctionalTest)')","[576, 7710]"
"('Description.java', 'org.junit.runner.Description', 'methodAndClassNamePatternGroupOrDefault', '(.*)\\((.*)\\)', 'shouldReturnLoggingEvents(me.lorenc.dreadlogs.captor.logback.LogbackCaptorTest)')","[4554, 11175]"
"('Description.java', 'org.junit.runner.Description', 'methodAndClassNamePatternGroupOrDefault', '(.*)\\((.*)\\)', 'shouldCaptureLogWithCorrectLoggerName(me.lorenc.dreadlogs.captor.log4j.functional.Log4jCaptorHasLogFunctionalTest)')","[2986, 9873]"
"('Description.java', 'org.junit.runner.Description', 'methodAndClassNamePatternGroupOrDefault', '(.*)\\((.*)\\)', 'shouldGetLoggerName(me.lorenc.dreadlogs.captor.log4j.Log4jEntryTest)')","[5503, 11868]"
"('Description.java', 'org.junit.runner.Description', 'methodAndClassNamePatternGroupOrDefault', '(.*)\\((.*)\\)', 'me.lorenc.dreadlogs.captor.jul.functional.JulCaptorHasLogFunctionalTest')","[1509, 13907]"
"('Description.java', 'org.junit.runner.Description', 'methodAndClassNamePatternGroupOrDefault', '(.*)\\((.*)\\)', 'shouldNotFindLogWhenNoMdcPresent(me.lorenc.dreadlogs.captor.log4j.functional.Log4jCaptorMdcFunctionalTest)')","[3318, 10167]"
"('Description.java', 'org.junit.runner.Description', 'methodAndClassNamePatternGroupOrDefault', '(.*)\\((.*)\\)', 'me.lorenc.dreadlogs.captor.jul.JulEntryTest')","[5143, 15120]"
"('Description.java', 'org.junit.runner.Description', 'methodAndClassNamePatternGroupOrDefault', '(.*)\\((.*)\\)', 'shouldCaptureFineLog(me.lorenc.dreadlogs.captor.jul.functional.JulCaptorLogLevelFilteringFunctionalTest)')","[1988, 8970]"
"('Description.java', 'org.junit.runner.Description', 'methodAndClassNamePatternGroupOrDefault', '(.*)\\((.*)\\)', 'shouldCreateNoLogMatcherForStringMatcher(me.lorenc.dreadlogs.captor.jul.JulMatchersTest)')","[2404, 9348]"
"('Description.java', 'org.junit.runner.Description', 'methodAndClassNamePatternGroupOrDefault', '(.*)\\((.*)\\)', 'shouldSetExpectedExceptionMessageMatcher(me.lorenc.dreadlogs.captor.LogMatcherTest)')","[6357, 12561]"
