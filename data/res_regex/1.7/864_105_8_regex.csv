"('Description.java', 'org.junit.runner.Description', 'parseMethod', '(.*)\\((.*)\\)', 'testOperatorNames(org.springframework.expression.spel.OperatorTests)')",[4292]
"('Description.java', 'org.junit.runner.Description', 'parseMethod', '(.*)\\((.*)\\)', 'testRootContextObject(org.springframework.expression.spel.ExpressionStateTests)')",[3642]
"('Description.java', 'org.junit.runner.Description', 'getClassName', '(.*)\\((.*)\\)', 'org.springframework.expression.spel.support.ReflectionHelperTests')","[12357, 12380, 12404, 12427]"
"('Description.java', 'org.junit.runner.Description', 'parseMethod', '(.*)\\((.*)\\)', 'selectionWithArray(org.springframework.expression.spel.SelectionAndProjectionTests)')",[9462]
"('Description.java', 'org.junit.runner.Description', 'getClassName', '(.*)\\((.*)\\)', 'org.springframework.expression.spel.OperatorOverloaderTests')","[10281, 10304, 10328, 10351]"
"('Description.java', 'org.junit.runner.Description', 'parseMethod', '(.*)\\((.*)\\)', 'testDivide(org.springframework.expression.spel.OperatorTests)')",[4208]
"('Description.java', 'org.junit.runner.Description', 'parseMethod', '(.*)\\((.*)\\)', 'testCreateListsOnAttemptToIndexNull01(org.springframework.expression.spel.EvaluationTests)')",[1505]
"('Description.java', 'org.junit.runner.Description', 'parseMethod', '(.*)\\((.*)\\)', 'testSimpleArrayWithInitializer(org.springframework.expression.spel.ArrayConstructorTests)')",[1255]
"('Description.java', 'org.junit.runner.Description', 'parseMethod', '(.*)\\((.*)\\)', 'testProjection01(org.springframework.expression.spel.InProgressTests)')",[3223]
"('Description.java', 'org.junit.runner.Description', 'parseMethod', '(.*)\\((.*)\\)', 'testStringType(org.springframework.expression.spel.EvaluationTests)')",[2806]
"('Description.java', 'org.junit.runner.Description', 'parseMethod', '(.*)\\((.*)\\)', 'testGetValue(org.springframework.expression.spel.LiteralExpressionTests)')",[6973]
"('Description.java', 'org.junit.runner.Description', 'parseMethod', '(.*)\\((.*)\\)', 'testRelOperatorsLT01(org.springframework.expression.spel.ParsingTests)')",[6448]
"('Description.java', 'org.junit.runner.Description', 'parseMethod', '(.*)\\((.*)\\)', 'testSetConstruction01(org.springframework.expression.spel.InProgressTests)')",[3119]
"('Description.java', 'org.junit.runner.Description', 'parseMethod', '(.*)\\((.*)\\)', 'testRelOperatorsGT01(org.springframework.expression.spel.ParsingTests)')",[6427]
"('Description.java', 'org.junit.runner.Description', 'parseMethod', '(.*)\\((.*)\\)', 'testConstructorInvocation06(org.springframework.expression.spel.EvaluationTests)')",[2155]
"('Description.java', 'org.junit.runner.Description', 'getClassName', '(.*)\\((.*)\\)', 'org.springframework.expression.spel.ExpressionStateTests')","[11417, 11440, 11464, 11487]"
"('Description.java', 'org.junit.runner.Description', 'parseMethod', '(.*)\\((.*)\\)', 'testVarargsInvocation01(org.springframework.expression.spel.ConstructorInvocationTests)')",[4605]
"('Description.java', 'org.junit.runner.Description', 'parseMethod', '(.*)\\((.*)\\)', 'testRelOperatorsLE01(org.springframework.expression.spel.ParsingTests)')",[6469]
"('Description.java', 'org.junit.runner.Description', 'parseMethod', '(.*)\\((.*)\\)', 'testMathOperatorsSubtract01(org.springframework.expression.spel.ParsingTests)')",[6616]
"('Description.java', 'org.junit.runner.Description', 'getClassName', '(.*)\\((.*)\\)', 'org.springframework.expression.spel.ArrayConstructorTests')","[10093, 10116, 10140, 10163]"
"('Description.java', 'org.junit.runner.Description', 'getClassName', '(.*)\\((.*)\\)', 'testSimpleAccess01(org.springframework.expression.spel.PropertyAccessTests)')",[8604]
"('Description.java', 'org.junit.runner.Description', 'parseMethod', '(.*)\\((.*)\\)', 'testLiteralLong01(org.springframework.expression.spel.ParsingTests)')",[6091]
"('Description.java', 'org.junit.runner.Description', 'parseMethod', '(.*)\\((.*)\\)', 'testMixedOperands_DoublesAndInts(org.springframework.expression.spel.OperatorTests)')",[4376]
"('Description.java', 'org.junit.runner.Description', 'parseMethod', '(.*)\\((.*)\\)', 'selectFirstItemInSet(org.springframework.expression.spel.SelectionAndProjectionTests)')",[9420]
"('Description.java', 'org.junit.runner.Description', 'parseMethod', '(.*)\\((.*)\\)', 'testMethodFiltering_SPR6764(org.springframework.expression.spel.MethodInvocationTests)')",[271]
"('Description.java', 'org.junit.runner.Description', 'parseMethod', '(.*)\\((.*)\\)', 'testOr(org.springframework.expression.spel.BooleanExpressionTests)')",[1338]
"('Description.java', 'org.junit.runner.Description', 'parseMethod', '(.*)\\((.*)\\)', 'testGreaterThan(org.springframework.expression.spel.OperatorTests)')",[4019]
"('Description.java', 'org.junit.runner.Description', 'parseMethod', '(.*)\\((.*)\\)', 'testSetGenericListElementValueTypeCoersionOK(org.springframework.expression.spel.SetValueTests)')",[9127]
"('Description.java', 'org.junit.runner.Description', 'parseMethod', '(.*)\\((.*)\\)', 'testPopulatedNestedScopesMap(org.springframework.expression.spel.ExpressionStateTests)')",[3726]
"('Description.java', 'org.junit.runner.Description', 'parseMethod', '(.*)\\((.*)\\)', 'testRelOperatorLE01(org.springframework.expression.spel.EvaluationTests)')",[1672]
"('OperatorMatches.java', 'org.springframework.expression.spel.ast.OperatorMatches', 'getValueInternal', '.*o.*', 'monday')",[10795]
"('Description.java', 'org.junit.runner.Description', 'parseMethod', '(.*)\\((.*)\\)', 'arithmeticPrecedence3(org.springframework.expression.spel.standard.SpelParserTests)')",[4981]
"('Description.java', 'org.junit.runner.Description', 'parseMethod', '(.*)\\((.*)\\)', 'testRelOperatorsMatches02(org.springframework.expression.spel.EvaluationTests)')",[1840]
"('Description.java', 'org.junit.runner.Description', 'parseMethod', '(.*)\\((.*)\\)', 'testCreateObjectsOnAttemptToReferenceNull(org.springframework.expression.spel.EvaluationTests)')",[1567]
"('Description.java', 'org.junit.runner.Description', 'parseMethod', '(.*)\\((.*)\\)', 'testAssignment(org.springframework.expression.spel.SpelDocumentationTests)')",[8270]
"('Description.java', 'org.junit.runner.Description', 'parseMethod', '(.*)\\((.*)\\)', 'selectLastItemInArray(org.springframework.expression.spel.SelectionAndProjectionTests)')",[9504]
"('Description.java', 'org.junit.runner.Description', 'parseMethod', '(.*)\\((.*)\\)', 'initializingCollectionElementsOnWrite(org.springframework.expression.spel.EvaluationTests)')",[2932]
"('Description.java', 'org.junit.runner.Description', 'parseMethod', '(.*)\\((.*)\\)', 'testLiteralString02(org.springframework.expression.spel.ParsingTests)')",[6175]
"('Description.java', 'org.junit.runner.Description', 'getClassName', '(.*)\\((.*)\\)', 'org.springframework.expression.spel.EvaluationTests')","[10453, 10476, 10500, 10523]"
"('Description.java', 'org.junit.runner.Description', 'getClassName', '(.*)\\((.*)\\)', 'org.springframework.expression.spel.LiteralExpressionTests')","[12263, 12286, 12310, 12333]"
"('OperatorMatches.java', 'org.springframework.expression.spel.ast.OperatorMatches', 'getValueInternal', '.*r.*', 'sunday')","[11019, 11215]"
"('Description.java', 'org.junit.runner.Description', 'getClassName', '(.*)\\((.*)\\)', 'org.springframework.expression.spel.ConstructorInvocationTests')","[11699, 11722, 11746, 11769]"
"('Description.java', 'org.junit.runner.Description', 'parseMethod', '(.*)\\((.*)\\)', 'testIndexingAsAPropertyAccess_SPR6968_3(org.springframework.expression.spel.SpringEL300Tests)')",[5651]
"('Description.java', 'org.junit.runner.Description', 'parseMethod', '(.*)\\((.*)\\)', 'testSetArrayElementValue(org.springframework.expression.spel.SetValueTests)')",[8897]
"('Description.java', 'org.junit.runner.Description', 'parseMethod', '(.*)\\((.*)\\)', 'testLiteralNull01(org.springframework.expression.spel.LiteralTests)')",[7599]
"('Description.java', 'org.junit.runner.Description', 'parseMethod', '(.*)\\((.*)\\)', 'testMethods02(org.springframework.expression.spel.EvaluationTests)')",[2092]
"('Description.java', 'org.junit.runner.Description', 'parseMethod', '(.*)\\((.*)\\)', 'testTypeReferencesPrimitive(org.springframework.expression.spel.EvaluationTests)')",[2764]
"('OperatorMatches.java', 'org.springframework.expression.spel.ast.OperatorMatches', 'getValueInternal', '^.*2.*$', '27')",[10429]
"('Description.java', 'org.junit.runner.Description', 'parseMethod', '(.*)\\((.*)\\)', 'testInlineListWriting(org.springframework.expression.spel.ListTests)')",[774]
"('Description.java', 'org.junit.runner.Description', 'parseMethod', '(.*)\\((.*)\\)', 'testIntegerLiteral(org.springframework.expression.spel.OperatorTests)')",[3852]
"('Description.java', 'org.junit.runner.Description', 'getClassName', '(.*)\\((.*)\\)', 'props(org.springframework.expression.spel.standard.PropertiesConversionSpelTests)')",[5253]
"('OperatorMatches.java', 'org.springframework.expression.spel.ast.OperatorMatches', 'getValueInternal', '.*o.*', 'friday')",[10879]
"('Description.java', 'org.junit.runner.Description', 'parseMethod', '(.*)\\((.*)\\)', 'testMapAccessThroughIndexer(org.springframework.expression.spel.MapAccessTests)')",[2994]
"('Description.java', 'org.junit.runner.Description', 'parseMethod', '(.*)\\((.*)\\)', 'testArrayLengthAccess(org.springframework.expression.spel.SpelDocumentationTests)')",[7997]
"('Description.java', 'org.junit.runner.Description', 'parseMethod', '(.*)\\((.*)\\)', 'testRelOperatorsGE01(org.springframework.expression.spel.ParsingTests)')",[6490]
"('Description.java', 'org.junit.runner.Description', 'parseMethod', '(.*)\\((.*)\\)', 'testMethodInvocation(org.springframework.expression.spel.SpelDocumentationTests)')",[7955]
"('Description.java', 'org.junit.runner.Description', 'parseMethod', '(.*)\\((.*)\\)', 'testBrokenExpression02(org.springframework.expression.spel.ParserErrorMessagesTests)')",[21]
"('Description.java', 'org.junit.runner.Description', 'parseMethod', '(.*)\\((.*)\\)', 'testSetArrayElementValueAllPrimitiveTypesErrors(org.springframework.expression.spel.SetValueTests)')",[9043]
"('Description.java', 'org.junit.runner.Description', 'parseMethod', '(.*)\\((.*)\\)', 'testLiteralString01(org.springframework.expression.spel.ParsingTests)')",[6154]
"('Description.java', 'org.junit.runner.Description', 'getClassName', '(.*)\\((.*)\\)', 'testSimpleMapAccess01(org.springframework.expression.spel.MapAccessTests)')",[2973]
"('Description.java', 'org.junit.runner.Description', 'getClassName', '(.*)\\((.*)\\)', 'org.springframework.expression.spel.MapAccessTests')","[10547, 10570, 10594, 10617]"
"('Description.java', 'org.junit.runner.Description', 'parseMethod', '(.*)\\((.*)\\)', 'testBooleanFalse(org.springframework.expression.spel.BooleanExpressionTests)')",[1317]
"('Description.java', 'org.junit.runner.Description', 'parseMethod', '(.*)\\((.*)\\)', 'testCompositeStringExpression(org.springframework.expression.spel.TemplateExpressionParsingTests)')",[920]
"('Description.java', 'org.junit.runner.Description', 'parseMethod', '(.*)\\((.*)\\)', 'testWritability(org.springframework.expression.spel.BooleanExpressionTests)')",[1422]
"('Description.java', 'org.junit.runner.Description', 'parseMethod', '(.*)\\((.*)\\)', 'testLessThan(org.springframework.expression.spel.OperatorTests)')",[3914]
"('Description.java', 'org.junit.runner.Description', 'parseMethod', '(.*)\\((.*)\\)', 'testNonExistentType(org.springframework.expression.spel.ConstructorInvocationTests)')",[4668]
"('Description.java', 'org.junit.runner.Description', 'parseMethod', '(.*)\\((.*)\\)', 'testReflectionHelperCompareArguments_RequiresConversionMatching(org.springframework.expression.spel.support.ReflectionHelperTests)')",[7181]
"('Description.java', 'org.junit.runner.Description', 'parseMethod', '(.*)\\((.*)\\)', 'testPrimitiveTypeArrayConstructorsElements(org.springframework.expression.spel.ArrayConstructorTests)')",[1150]
"('Description.java', 'org.junit.runner.Description', 'parseMethod', '(.*)\\((.*)\\)', 'testTernaryOperator04(org.springframework.expression.spel.EvaluationTests)')",[2449]
"('Description.java', 'org.junit.runner.Description', 'parseMethod', '(.*)\\((.*)\\)', 'testReflectionHelperCompareArguments_Varargs_ExactMatching(org.springframework.expression.spel.support.ReflectionHelperTests)')",[7223]
"('Description.java', 'org.junit.runner.Description', 'parseMethod', '(.*)\\((.*)\\)', 'testTernaryOperator01(org.springframework.expression.spel.EvaluationTests)')",[2386]
"('Description.java', 'org.junit.runner.Description', 'parseMethod', '(.*)\\((.*)\\)', 'testConvertArguments2(org.springframework.expression.spel.support.ReflectionHelperTests)')",[7265]
"('Description.java', 'org.junit.runner.Description', 'parseMethod', '(.*)\\((.*)\\)', 'testRelOperatorGE01(org.springframework.expression.spel.EvaluationTests)')",[1693]
"('Description.java', 'org.junit.runner.Description', 'parseMethod', '(.*)\\((.*)\\)', 'testVariableMapAccess(org.springframework.expression.spel.MapAccessTests)')",[3036]
"('Description.java', 'org.junit.runner.Description', 'parseMethod', '(.*)\\((.*)\\)', 'testErrorCase(org.springframework.expression.spel.SetValueTests)')",[8938]
"('Description.java', 'org.junit.runner.Description', 'parseMethod', '(.*)\\((.*)\\)', 'testMethods01(org.springframework.expression.spel.EvaluationTests)')",[2071]
"('Description.java', 'org.junit.runner.Description', 'parseMethod', '(.*)\\((.*)\\)', 'testIndexerError(org.springframework.expression.spel.EvaluationTests)')",[2617]
"('Description.java', 'org.junit.runner.Description', 'parseMethod', '(.*)\\((.*)\\)', 'testLiteralString06(org.springframework.expression.spel.LiteralTests)')",[7683]
"('Description.java', 'org.junit.runner.Description', 'parseMethod', '(.*)\\((.*)\\)', 'testDoubleArrayCoercion(org.springframework.expression.spel.SpringEL300Tests)')",[5420]
"('Description.java', 'org.junit.runner.Description', 'parseMethod', '(.*)\\((.*)\\)', 'testMixedOperands_FloatsAndDoubles(org.springframework.expression.spel.OperatorTests)')",[4355]
"('Description.java', 'org.junit.runner.Description', 'parseMethod', '(.*)\\((.*)\\)', 'testAdvancedNumerics(org.springframework.expression.spel.EvaluationTests)')",[2848]
"('Description.java', 'org.junit.runner.Description', 'parseMethod', '(.*)\\((.*)\\)', 'testScenario_DefiningVariablesThatWillBeAccessibleInExpressions(org.springframework.expression.spel.ExpressionLanguageScenarioTests)')",[8792]
"('Description.java', 'org.junit.runner.Description', 'parseMethod', '(.*)\\((.*)\\)', 'testNonExistentPropertiesAndMethods(org.springframework.expression.spel.PropertyAccessTests)')",[8709]
"('Description.java', 'org.junit.runner.Description', 'parseMethod', '(.*)\\((.*)\\)', 'testLiteralReal04_BadExpressions(org.springframework.expression.spel.LiteralTests)')",[7851]
"('Description.java', 'org.junit.runner.Description', 'parseMethod', '(.*)\\((.*)\\)', 'testLiteralInteger01(org.springframework.expression.spel.ParsingTests)')",[6049]
"('Description.java', 'org.junit.runner.Description', 'getClassName', '(.*)\\((.*)\\)', 'org.springframework.expression.spel.BooleanExpressionTests')","[10187, 10210, 10234, 10257]"
"('Description.java', 'org.junit.runner.Description', 'parseMethod', '(.*)\\((.*)\\)', 'arithmeticPrecedence2(org.springframework.expression.spel.standard.SpelParserTests)')",[4960]
"('Description.java', 'org.junit.runner.Description', 'parseMethod', '(.*)\\((.*)\\)', 'testSelectionLast01(org.springframework.expression.spel.InProgressTests)')",[3454]
"('Description.java', 'org.junit.runner.Description', 'parseMethod', '(.*)\\((.*)\\)', 'testExceptions(org.springframework.expression.spel.standard.SpelParserTests)')",[5191]
"('Description.java', 'org.junit.runner.Description', 'getClassName', '(.*)\\((.*)\\)', 'org.springframework.expression.spel.InProgressTests')","[11323, 11346, 11370, 11393]"
"('Description.java', 'org.junit.runner.Description', 'parseMethod', '(.*)\\((.*)\\)', 'testGreaterThanOrEqual(org.springframework.expression.spel.OperatorTests)')",[3998]
"('Description.java', 'org.junit.runner.Description', 'getClassName', '(.*)\\((.*)\\)', 'testBrokenExpression02(org.springframework.expression.spel.ParserErrorMessagesTests)')",[41]
"('Description.java', 'org.junit.runner.Description', 'parseMethod', '(.*)\\((.*)\\)', 'props(org.springframework.expression.spel.standard.PropertiesConversionSpelTests)')",[5233]
"('Description.java', 'org.junit.runner.Description', 'parseMethod', '(.*)\\((.*)\\)', 'testIndexingAsAPropertyAccess_SPR6968_5(org.springframework.expression.spel.SpringEL300Tests)')",[5693]
"('Description.java', 'org.junit.runner.Description', 'getClassName', '(.*)\\((.*)\\)', 'org.springframework.expression.spel.standard.PropertiesConversionSpelTests')","[11981, 12004, 12028, 12051]"
"('Description.java', 'org.junit.runner.Description', 'parseMethod', '(.*)\\((.*)\\)', 'testLiteralBoolean02(org.springframework.expression.spel.ParsingTests)')",[6112]
"('Description.java', 'org.junit.runner.Description', 'getClassName', '(.*)\\((.*)\\)', 'org.springframework.expression.spel.SelectionAndProjectionTests')","[13156, 13176, 13197, 13217]"
"('Description.java', 'org.junit.runner.Description', 'parseMethod', '(.*)\\((.*)\\)', 'testProperties02(org.springframework.expression.spel.ParsingTests)')",[6784]
"('Description.java', 'org.junit.runner.Description', 'parseMethod', '(.*)\\((.*)\\)', 'testLiteralReal03_UsingExponents(org.springframework.expression.spel.LiteralTests)')",[7830]
"('Description.java', 'org.junit.runner.Description', 'getClassName', '(.*)\\((.*)\\)', 'org.springframework.expression.spel.DefaultComparatorUnitTests')","[11605, 11628, 11652, 11675]"
"('Description.java', 'org.junit.runner.Description', 'parseMethod', '(.*)\\((.*)\\)', 'testRelOperatorsBetweenErrors03(org.springframework.expression.spel.InProgressTests)')",[3202]
"('Description.java', 'org.junit.runner.Description', 'getClassName', '(.*)\\((.*)\\)', 'org.springframework.expression.spel.standard.SpelParserTests')","[11887, 11910, 11934, 11957]"
"('Description.java', 'org.junit.runner.Description', 'parseMethod', '(.*)\\((.*)\\)', 'testOptimalReflectivePropertyResolver(org.springframework.expression.spel.support.ReflectionHelperTests)')",[7328]
"('Description.java', 'org.junit.runner.Description', 'getClassName', '(.*)\\((.*)\\)', 'org.springframework.expression.spel.SetValueTests')","[13065, 13088, 13112, 13135]"
"('Description.java', 'org.junit.runner.Description', 'parseMethod', '(.*)\\((.*)\\)', 'testTemplateParserContext(org.springframework.expression.spel.TemplateExpressionParsingTests)')",[1025]
"('Description.java', 'org.junit.runner.Description', 'parseMethod', '(.*)\\((.*)\\)', 'booleanOperators(org.springframework.expression.spel.standard.SpelParserTests)')",[5065]
"('Description.java', 'org.junit.runner.Description', 'parseMethod', '(.*)\\((.*)\\)', 'testScenario_AddingYourOwnPropertyResolvers_2(org.springframework.expression.spel.ExpressionLanguageScenarioTests)')",[8876]
"('Description.java', 'org.junit.runner.Description', 'parseMethod', '(.*)\\((.*)\\)', 'testMinus(org.springframework.expression.spel.OperatorTests)')",[4166]
"('Description.java', 'org.junit.runner.Description', 'parseMethod', '(.*)\\((.*)\\)', 'testFunctionAccess01(org.springframework.expression.spel.EvaluationTests)')",[2680]
"('Description.java', 'org.junit.runner.Description', 'parseMethod', '(.*)\\((.*)\\)', 'testMathOperatorsDivide01(org.springframework.expression.spel.ParsingTests)')",[6658]
"('Description.java', 'org.junit.runner.Description', 'parseMethod', '(.*)\\((.*)\\)', 'testStrings(org.springframework.expression.spel.OperatorTests)')",[4397]
"('Description.java', 'org.junit.runner.Description', 'parseMethod', '(.*)\\((.*)\\)', 'testProperties01(org.springframework.expression.spel.ParsingTests)')",[6763]
"('Description.java', 'org.junit.runner.Description', 'parseMethod', '(.*)\\((.*)\\)', 'testLiteralString03(org.springframework.expression.spel.ParsingTests)')",[6196]
"('Description.java', 'org.junit.runner.Description', 'parseMethod', '(.*)\\((.*)\\)', 'testTypes(org.springframework.expression.spel.SpelDocumentationTests)')",[8291]
"('Description.java', 'org.junit.runner.Description', 'parseMethod', '(.*)\\((.*)\\)', 'testMultiDimensionalArray(org.springframework.expression.spel.ArrayConstructorTests)')",[1213]
"('Description.java', 'org.junit.runner.Description', 'parseMethod', '(.*)\\((.*)\\)', 'testConstructorInvocation05(org.springframework.expression.spel.EvaluationTests)')",[2134]
"('Description.java', 'org.junit.runner.Description', 'parseMethod', '(.*)\\((.*)\\)', 'testSimpleOperations(org.springframework.expression.spel.OperatorOverloaderTests)')",[1464]
"('Description.java', 'org.junit.runner.Description', 'parseMethod', '(.*)\\((.*)\\)', 'testParsingSimpleTemplateExpression04(org.springframework.expression.spel.TemplateExpressionParsingTests)')",[899]
"('Description.java', 'org.junit.runner.Description', 'getClassName', '(.*)\\((.*)\\)', 'testFormatHelperForClassName(org.springframework.expression.spel.support.ReflectionHelperTests)')",[7076]
"('Description.java', 'org.junit.runner.Description', 'parseMethod', '(.*)\\((.*)\\)', 'testPositionalInformation(org.springframework.expression.spel.standard.SpelParserTests)')",[5128]
"('Description.java', 'org.junit.runner.Description', 'parseMethod', '(.*)\\((.*)\\)', 'testVariables(org.springframework.expression.spel.SpelDocumentationTests)')",[7914]
"('Description.java', 'org.junit.runner.Description', 'getClassName', '(.*)\\((.*)\\)', 'org.springframework.expression.spel.OperatorTests')","[11511, 11534, 11558, 11581]"
"('Description.java', 'org.junit.runner.Description', 'parseMethod', '(.*)\\((.*)\\)', 'testInlineListCreation05(org.springframework.expression.spel.ListTests)')",[585]
"('Description.java', 'org.junit.runner.Description', 'parseMethod', '(.*)\\((.*)\\)', 'testVariables(org.springframework.expression.spel.ExpressionStateTests)')",[3579]
"('Description.java', 'org.junit.runner.Description', 'parseMethod', '(.*)\\((.*)\\)', 'testStaticRef02(org.springframework.expression.spel.EvaluationTests)')",[2638]
"('Description.java', 'org.junit.runner.Description', 'parseMethod', '(.*)\\((.*)\\)', 'testRelOperatorsMatches03(org.springframework.expression.spel.EvaluationTests)')",[1861]
"('Description.java', 'org.junit.runner.Description', 'parseMethod', '(.*)\\((.*)\\)', 'testSPR5899(org.springframework.expression.spel.SpringEL300Tests)')",[5441]
"('Description.java', 'org.junit.runner.Description', 'parseMethod', '(.*)\\((.*)\\)', 'testVariableAccess_WellKnownVariables(org.springframework.expression.spel.VariableAndFunctionTests)')",[8521]
"('Description.java', 'org.junit.runner.Description', 'parseMethod', '(.*)\\((.*)\\)', 'testReflectivePropertyResolver(org.springframework.expression.spel.support.ReflectionHelperTests)')",[7307]
"('Description.java', 'org.junit.runner.Description', 'parseMethod', '(.*)\\((.*)\\)', 'mapWithAllStringValues(org.springframework.expression.spel.standard.PropertiesConversionSpelTests)')",[5274]
"('Description.java', 'org.junit.runner.Description', 'parseMethod', '(.*)\\((.*)\\)', 'testOtherOperators(org.springframework.expression.spel.SpelDocumentationTests)')",[8207]
"('Description.java', 'org.junit.runner.Description', 'getClassName', '(.*)\\((.*)\\)', 'testVariableAccess01(org.springframework.expression.spel.VariableAndFunctionTests)')",[8458]
"('Description.java', 'org.junit.runner.Description', 'parseMethod', '(.*)\\((.*)\\)', 'testInvocationOnNullContextObject(org.springframework.expression.spel.MethodInvocationTests)')",[418]
"('Description.java', 'org.junit.runner.Description', 'parseMethod', '(.*)\\((.*)\\)', 'testAccessingOnNullObject(org.springframework.expression.spel.PropertyAccessTests)')",[8730]
"('Description.java', 'org.junit.runner.Description', 'parseMethod', '(.*)\\((.*)\\)', 'testConvertArguments(org.springframework.expression.spel.support.ReflectionHelperTests)')",[7244]
"('Description.java', 'org.junit.runner.Description', 'parseMethod', '(.*)\\((.*)\\)', 'testLogicalOperators(org.springframework.expression.spel.SpelDocumentationTests)')",[8228]
"('Description.java', 'org.junit.runner.Description', 'parseMethod', '(.*)\\((.*)\\)', 'arithmeticPlus2(org.springframework.expression.spel.standard.SpelParserTests)')",[4876]
"('Description.java', 'org.junit.runner.Description', 'parseMethod', '(.*)\\((.*)\\)', 'testAndWithNullValueOnLeft(org.springframework.expression.spel.EvaluationTests)')",[2281]
"('Description.java', 'org.junit.runner.Description', 'parseMethod', '(.*)\\((.*)\\)', 'testPower(org.springframework.expression.spel.OperatorTests)')",[4334]
"('Description.java', 'org.junit.runner.Description', 'parseMethod', '(.*)\\((.*)\\)', 'testRootObjectConstructor(org.springframework.expression.spel.ExpressionStateTests)')",[3705]
"('Description.java', 'org.junit.runner.Description', 'parseMethod', '(.*)\\((.*)\\)', 'testStringClass(org.springframework.expression.spel.MethodInvocationTests)')",[355]
"('Description.java', 'org.junit.runner.Description', 'parseMethod', '(.*)\\((.*)\\)', 'testVarargsInvocation02(org.springframework.expression.spel.MethodInvocationTests)')",[397]
"('Description.java', 'org.junit.runner.Description', 'parseMethod', '(.*)\\((.*)\\)', 'testTypeConversion(org.springframework.expression.spel.ExpressionStateTests)')",[3810]
"('Description.java', 'org.junit.runner.Description', 'parseMethod', '(.*)\\((.*)\\)', 'testMethodInvocation2(org.springframework.expression.spel.SpelDocumentationTests)')",[8165]
"('Description.java', 'org.junit.runner.Description', 'parseMethod', '(.*)\\((.*)\\)', 'testLongIntInteractions01(org.springframework.expression.spel.LiteralTests)')",[7746]
"('Description.java', 'org.junit.runner.Description', 'parseMethod', '(.*)\\((.*)\\)', 'testInlineListCreation06(org.springframework.expression.spel.ListTests)')",[606]
"('Description.java', 'org.junit.runner.Description', 'parseMethod', '(.*)\\((.*)\\)', 'mapWithNonStringValue(org.springframework.expression.spel.standard.PropertiesConversionSpelTests)')",[5295]
"('Description.java', 'org.junit.runner.Description', 'getClassName', '(.*)\\((.*)\\)', 'org.springframework.expression.spel.LiteralTests')","[12545, 12568, 12592, 12615]"
"('Description.java', 'org.junit.runner.Description', 'parseMethod', '(.*)\\((.*)\\)', 'testTernaryOperator01(org.springframework.expression.spel.ParsingTests)')",[5965]
"('Description.java', 'org.junit.runner.Description', 'parseMethod', '(.*)\\((.*)\\)', 'testDollars2(org.springframework.expression.spel.SpringEL300Tests)')",[5735]
"('Description.java', 'org.junit.runner.Description', 'parseMethod', '(.*)\\((.*)\\)', 'testLiteralDate02(org.springframework.expression.spel.ParsingTests)')",[6280]
"('Description.java', 'org.junit.runner.Description', 'parseMethod', '(.*)\\((.*)\\)', 'testScenario_UsingStandardInfrastructure(org.springframework.expression.spel.ExpressionLanguageScenarioTests)')",[8751]
"('Description.java', 'org.junit.runner.Description', 'parseMethod', '(.*)\\((.*)\\)', 'projectionWithArray(org.springframework.expression.spel.SelectionAndProjectionTests)')",[9693]
"('OperatorMatches.java', 'org.springframework.expression.spel.ast.OperatorMatches', 'getValueInternal', '.*o.*', 'tuesday')",[10907]
"('Description.java', 'org.junit.runner.Description', 'parseMethod', '(.*)\\((.*)\\)', 'testIndexingAsAPropertyAccess_SPR6968_4(org.springframework.expression.spel.SpringEL300Tests)')",[5672]
"('Description.java', 'org.junit.runner.Description', 'parseMethod', '(.*)\\((.*)\\)', 'testEqualityCheck(org.springframework.expression.spel.SpelDocumentationTests)')",[8039]
"('Description.java', 'org.junit.runner.Description', 'parseMethod', '(.*)\\((.*)\\)', 'testTernaryOperator02(org.springframework.expression.spel.EvaluationTests)')",[2407]
"('Description.java', 'org.junit.runner.Description', 'parseMethod', '(.*)\\((.*)\\)', 'testIntegerArithmetic(org.springframework.expression.spel.OperatorTests)')",[4124]
"('Description.java', 'org.junit.runner.Description', 'parseMethod', '(.*)\\((.*)\\)', 'testInlineListCreation02(org.springframework.expression.spel.ListTests)')",[439]
"('Description.java', 'org.junit.runner.Description', 'parseMethod', '(.*)\\((.*)\\)', 'testMathOperatorsInChains(org.springframework.expression.spel.OperatorTests)')",[4103]
"('Description.java', 'org.junit.runner.Description', 'parseMethod', '(.*)\\((.*)\\)', 'testRelOperatorsBetween01(org.springframework.expression.spel.InProgressTests)')",[3160]
"('Description.java', 'org.junit.runner.Description', 'parseMethod', '(.*)\\((.*)\\)', 'testBooleanOperatorsMix01(org.springframework.expression.spel.ParsingTests)')",[6406]
"('Description.java', 'org.junit.runner.Description', 'parseMethod', '(.*)\\((.*)\\)', 'testReferences01(org.springframework.expression.spel.ParsingTests)')",[6721]
"('Description.java', 'org.junit.runner.Description', 'getClassName', '(.*)\\((.*)\\)', 'testIntegerLiteral(org.springframework.expression.spel.OperatorTests)')",[3872]
"('Description.java', 'org.junit.runner.Description', 'parseMethod', '(.*)\\((.*)\\)', 'generalExpressions(org.springframework.expression.spel.standard.SpelParserTests)')",[4939]
"('Description.java', 'org.junit.runner.Description', 'parseMethod', '(.*)\\((.*)\\)', 'testIndexingAsAPropertyAccess_SPR6968_1(org.springframework.expression.spel.SpringEL300Tests)')",[5588]
"('Description.java', 'org.junit.runner.Description', 'parseMethod', '(.*)\\((.*)\\)', 'selectLastItemInList(org.springframework.expression.spel.SelectionAndProjectionTests)')",[9378]
"('Description.java', 'org.junit.runner.Description', 'parseMethod', '(.*)\\((.*)\\)', 'testMultiplyStringInt(org.springframework.expression.spel.OperatorTests)')",[4040]
"('Description.java', 'org.junit.runner.Description', 'parseMethod', '(.*)\\((.*)\\)', 'selectLastItemInMap(org.springframework.expression.spel.SelectionAndProjectionTests)')",[9630]
"('Description.java', 'org.junit.runner.Description', 'parseMethod', '(.*)\\((.*)\\)', 'testSetArrayElementValueAllPrimitiveTypes(org.springframework.expression.spel.SetValueTests)')",[9022]
"('Description.java', 'org.junit.runner.Description', 'parseMethod', '(.*)\\((.*)\\)', 'testMixedOperators01(org.springframework.expression.spel.ParsingTests)')",[6700]
"('Description.java', 'org.junit.runner.Description', 'parseMethod', '(.*)\\((.*)\\)', 'testCallingIllegalFunctions(org.springframework.expression.spel.VariableAndFunctionTests)')",[8563]
"('Description.java', 'org.junit.runner.Description', 'parseMethod', '(.*)\\((.*)\\)', 'testPrimitives(org.springframework.expression.spel.DefaultComparatorUnitTests)')",[4439]
"('Description.java', 'org.junit.runner.Description', 'parseMethod', '(.*)\\((.*)\\)', 'testLiteralNull01(org.springframework.expression.spel.ParsingTests)')",[6301]
"('Description.java', 'org.junit.runner.Description', 'parseMethod', '(.*)\\((.*)\\)', 'selectFirstItemInMap(org.springframework.expression.spel.SelectionAndProjectionTests)')",[9609]
"('Description.java', 'org.junit.runner.Description', 'getClassName', '(.*)\\((.*)\\)', 'testSetConstruction01(org.springframework.expression.spel.InProgressTests)')",[3139]
"('Description.java', 'org.junit.runner.Description', 'parseMethod', '(.*)\\((.*)\\)', 'testSetArrayElementInvalidIndex(org.springframework.expression.spel.SetValueTests)')",[9169]
"('Description.java', 'org.junit.runner.Description', 'parseMethod', '(.*)\\((.*)\\)', 'testRelOperatorsMatches05(org.springframework.expression.spel.EvaluationTests)')",[1903]
"('Description.java', 'org.junit.runner.Description', 'parseMethod', '(.*)\\((.*)\\)', 'selectLastItemInPrimitiveArray(org.springframework.expression.spel.SelectionAndProjectionTests)')",[9567]
"('Description.java', 'org.junit.runner.Description', 'parseMethod', '(.*)\\((.*)\\)', 'testUtilities(org.springframework.expression.spel.support.ReflectionHelperTests)')",[7097]
"('Description.java', 'org.junit.runner.Description', 'parseMethod', '(.*)\\((.*)\\)', 'testPopulatedNestedScopes(org.springframework.expression.spel.ExpressionStateTests)')",[3684]
"('Description.java', 'org.junit.runner.Description', 'parseMethod', '(.*)\\((.*)\\)', 'testStandardEvaluationContext(org.springframework.expression.spel.support.StandardComponentsTests)')",[7349]
"('Description.java', 'org.junit.runner.Description', 'parseMethod', '(.*)\\((.*)\\)', 'testSelectionFirst01(org.springframework.expression.spel.InProgressTests)')",[3412]
"('Description.java', 'org.junit.runner.Description', 'parseMethod', '(.*)\\((.*)\\)', 'testAccessingNullPropertyViaReflection_SPR5663(org.springframework.expression.spel.SpringEL300Tests)')",[5546]
"('Description.java', 'org.junit.runner.Description', 'parseMethod', '(.*)\\((.*)\\)', 'testIndexingIntoUnsupportedType(org.springframework.expression.spel.SetValueTests)')",[9211]
"('Description.java', 'org.junit.runner.Description', 'parseMethod', '(.*)\\((.*)\\)', 'testReflectionHelperCompareArguments_CloseMatching(org.springframework.expression.spel.support.ReflectionHelperTests)')",[7160]
"('Description.java', 'org.junit.runner.Description', 'parseMethod', '(.*)\\((.*)\\)', 'testPropertyField02_SPR7100(org.springframework.expression.spel.EvaluationTests)')",[1966]
"('Description.java', 'org.junit.runner.Description', 'parseMethod', '(.*)\\((.*)\\)', 'testRelOperatorsBetweenErrors02(org.springframework.expression.spel.ListTests)')",[732]
"('Description.java', 'org.junit.runner.Description', 'parseMethod', '(.*)\\((.*)\\)', 'testLiteralInteger01(org.springframework.expression.spel.LiteralTests)')",[7453]
"('Description.java', 'org.junit.runner.Description', 'parseMethod', '(.*)\\((.*)\\)', 'testPropertiesNested01(org.springframework.expression.spel.EvaluationTests)')",[2008]
"('Description.java', 'org.junit.runner.Description', 'parseMethod', '(.*)\\((.*)\\)', 'testErrorCases(org.springframework.expression.spel.ArrayConstructorTests)')",[1046]
"('Description.java', 'org.junit.runner.Description', 'parseMethod', '(.*)\\((.*)\\)', 'testLocalVariableNestedScopes(org.springframework.expression.spel.ExpressionStateTests)')",[3621]
"('Description.java', 'org.junit.runner.Description', 'parseMethod', '(.*)\\((.*)\\)', 'testTypedValue(org.springframework.expression.spel.support.ReflectionHelperTests)')",[7118]
"('Description.java', 'org.junit.runner.Description', 'parseMethod', '(.*)\\((.*)\\)', 'arithmeticPrecedence1(org.springframework.expression.spel.standard.SpelParserTests)')",[4918]
"('Description.java', 'org.junit.runner.Description', 'parseMethod', '(.*)\\((.*)\\)', 'testSetPropertyTypeCoersionThroughSetter(org.springframework.expression.spel.SetValueTests)')",[9253]
"('Description.java', 'org.junit.runner.Description', 'parseMethod', '(.*)\\((.*)\\)', 'testRelOperatorsBetween03(org.springframework.expression.spel.ListTests)')",[711]
"('Description.java', 'org.junit.runner.Description', 'parseMethod', '(.*)\\((.*)\\)', 'testTernaryOperator05(org.springframework.expression.spel.EvaluationTests)')",[2470]
"('Description.java', 'org.junit.runner.Description', 'parseMethod', '(.*)\\((.*)\\)', 'testInlineListAndNesting(org.springframework.expression.spel.ListTests)')",[522]
"('Description.java', 'org.junit.runner.Description', 'parseMethod', '(.*)\\((.*)\\)', 'testPropertiesNested02(org.springframework.expression.spel.EvaluationTests)')",[2029]
"('Description.java', 'org.junit.runner.Description', 'parseMethod', '(.*)\\((.*)\\)', 'testInlineListCreation03(org.springframework.expression.spel.ListTests)')",[480]
"('Description.java', 'org.junit.runner.Description', 'parseMethod', '(.*)\\((.*)\\)', 'testVarargsInvocation01(org.springframework.expression.spel.MethodInvocationTests)')",[376]
"('Description.java', 'org.junit.runner.Description', 'parseMethod', '(.*)\\((.*)\\)', 'testLiteralReal01_CreatingDoubles(org.springframework.expression.spel.LiteralTests)')",[7788]
"('Description.java', 'org.junit.runner.Description', 'parseMethod', '(.*)\\((.*)\\)', 'testSimpleAccess01(org.springframework.expression.spel.PropertyAccessTests)')",[8584]
"('OperatorMatches.java', 'org.springframework.expression.spel.ast.OperatorMatches', 'getValueInternal', '.*o.*', 'wednesday')",[10739]
"('Description.java', 'org.junit.runner.Description', 'getClassName', '(.*)\\((.*)\\)', 'org.springframework.expression.spel.support.StandardComponentsTests')","[12451, 12474, 12498, 12521]"
"('Description.java', 'org.junit.runner.Description', 'parseMethod', '(.*)\\((.*)\\)', 'testWidening01(org.springframework.expression.spel.ConstructorInvocationTests)')",[4543]
"('Description.java', 'org.junit.runner.Description', 'parseMethod', '(.*)\\((.*)\\)', 'testLocalVariables(org.springframework.expression.spel.ExpressionStateTests)')",[3558]
"('Description.java', 'org.junit.runner.Description', 'parseMethod', '(.*)\\((.*)\\)', 'testMathOperatorModulus01(org.springframework.expression.spel.ParsingTests)')",[6679]
"('Description.java', 'org.junit.runner.Description', 'parseMethod', '(.*)\\((.*)\\)', 'testBrokenExpression05(org.springframework.expression.spel.ParserErrorMessagesTests)')",[83]
"('Description.java', 'org.junit.runner.Description', 'parseMethod', '(.*)\\((.*)\\)', 'testConversion(org.springframework.expression.spel.ArrayConstructorTests)')",[1087]
"('Description.java', 'org.junit.runner.Description', 'parseMethod', '(.*)\\((.*)\\)', 'testSetListElementNestedValue(org.springframework.expression.spel.SetValueTests)')",[9148]
"('Description.java', 'org.junit.runner.Description', 'getClassName', '(.*)\\((.*)\\)', 'testBooleanTrue(org.springframework.expression.spel.BooleanExpressionTests)')",[1296]
"('Description.java', 'org.junit.runner.Description', 'parseMethod', '(.*)\\((.*)\\)', 'testGetValueType(org.springframework.expression.spel.LiteralExpressionTests)')",[7035]
"('Description.java', 'org.junit.runner.Description', 'parseMethod', '(.*)\\((.*)\\)', 'testNumericalOperators(org.springframework.expression.spel.SpelDocumentationTests)')",[8249]
"('Description.java', 'org.junit.runner.Description', 'parseMethod', '(.*)\\((.*)\\)', 'testWidening01(org.springframework.expression.spel.MethodInvocationTests)')",[187]
"('Description.java', 'org.junit.runner.Description', 'parseMethod', '(.*)\\((.*)\\)', 'testConstructorInvocation01(org.springframework.expression.spel.EvaluationTests)')",[2113]
"('Description.java', 'org.junit.runner.Description', 'parseMethod', '(.*)\\((.*)\\)', 'testSPR5804(org.springframework.expression.spel.SpringEL300Tests)')",[5483]
"('Description.java', 'org.junit.runner.Description', 'parseMethod', '(.*)\\((.*)\\)', 'testSetValue(org.springframework.expression.spel.LiteralExpressionTests)')",[7014]
"('OperatorMatches.java', 'org.springframework.expression.spel.ast.OperatorMatches', 'getValueInternal', '^-?\\d+(\\.\\d{2})?$', '5.0067')","[10377, 12665]"
"('Description.java', 'org.junit.runner.Description', 'getClassName', '(.*)\\((.*)\\)', 'org.springframework.expression.spel.ParsingTests')","[12169, 12192, 12216, 12239]"
"('Description.java', 'org.junit.runner.Description', 'parseMethod', '(.*)\\((.*)\\)', 'testTypeConstructors(org.springframework.expression.spel.ConstructorInvocationTests)')",[4647]
"('Description.java', 'org.junit.runner.Description', 'parseMethod', '(.*)\\((.*)\\)', 'testSPR5905_InnerTypeReferences(org.springframework.expression.spel.SpringEL300Tests)')",[5462]
"('Description.java', 'org.junit.runner.Description', 'parseMethod', '(.*)\\((.*)\\)', 'testScenario_UsingADifferentRootContextObject(org.springframework.expression.spel.ExpressionLanguageScenarioTests)')",[8813]
"('Description.java', 'org.junit.runner.Description', 'parseMethod', '(.*)\\((.*)\\)', 'testRelOperatorsBetweenErrors01(org.springframework.expression.spel.InProgressTests)')",[3181]
"('Description.java', 'org.junit.runner.Description', 'parseMethod', '(.*)\\((.*)\\)', 'selectionWithSet(org.springframework.expression.spel.SelectionAndProjectionTests)')",[9399]
"('Description.java', 'org.junit.runner.Description', 'parseMethod', '(.*)\\((.*)\\)', 'testTypeReferences01(org.springframework.expression.spel.EvaluationTests)')",[2722]
"('Description.java', 'org.junit.runner.Description', 'parseMethod', '(.*)\\((.*)\\)', 'arithmeticPlus1(org.springframework.expression.spel.standard.SpelParserTests)')",[4855]
"('Description.java', 'org.junit.runner.Description', 'parseMethod', '(.*)\\((.*)\\)', 'testSPR5847(org.springframework.expression.spel.SpringEL300Tests)')",[5504]
"('Description.java', 'org.junit.runner.Description', 'parseMethod', '(.*)\\((.*)\\)', 'testSelection04(org.springframework.expression.spel.InProgressTests)')",[3370]
"('Description.java', 'org.junit.runner.Description', 'parseMethod', '(.*)\\((.*)\\)', 'testObjects(org.springframework.expression.spel.DefaultComparatorUnitTests)')",[4480]
"('Description.java', 'org.junit.runner.Description', 'parseMethod', '(.*)\\((.*)\\)', 'testParsingSimpleTemplateExpression01(org.springframework.expression.spel.TemplateExpressionParsingTests)')",[816]
"('Description.java', 'org.junit.runner.Description', 'parseMethod', '(.*)\\((.*)\\)', 'testArgumentConversion01(org.springframework.expression.spel.MethodInvocationTests)')",[313]
"('Description.java', 'org.junit.runner.Description', 'parseMethod', '(.*)\\((.*)\\)', 'testMethodThrowingException_SPR6941(org.springframework.expression.spel.MethodInvocationTests)')",[229]
"('Description.java', 'org.junit.runner.Description', 'parseMethod', '(.*)\\((.*)\\)', 'testSelectionFirst02(org.springframework.expression.spel.InProgressTests)')",[3433]
"('Description.java', 'org.junit.runner.Description', 'parseMethod', '(.*)\\((.*)\\)', 'testFunctions02(org.springframework.expression.spel.ParsingTests)')",[6910]
"('Description.java', 'org.junit.runner.Description', 'parseMethod', '(.*)\\((.*)\\)', 'testRelOperatorGE02(org.springframework.expression.spel.EvaluationTests)')",[1714]
"('Description.java', 'org.junit.runner.Description', 'parseMethod', '(.*)\\((.*)\\)', 'testLiteralInteger02(org.springframework.expression.spel.LiteralTests)')",[7620]
"('Description.java', 'org.junit.runner.Description', 'getClassName', '(.*)\\((.*)\\)', 'org.springframework.expression.spel.SpringEL300Tests')","[12075, 12098, 12122, 12145]"
"('Description.java', 'org.junit.runner.Description', 'parseMethod', '(.*)\\((.*)\\)', 'methodCallWithRootReferenceThroughParameterThatIsAFunctionCall(org.springframework.expression.spel.EvaluationTests)')",[2575]
"('Description.java', 'org.junit.runner.Description', 'parseMethod', '(.*)\\((.*)\\)', 'testAssign(org.springframework.expression.spel.SetValueTests)')",[9274]
"('Description.java', 'org.junit.runner.Description', 'parseMethod', '(.*)\\((.*)\\)', 'testOrWithNullValueOnLeft(org.springframework.expression.spel.EvaluationTests)')",[2323]
"('Description.java', 'org.junit.runner.Description', 'getClassName', '(.*)\\((.*)\\)', 'testLiteralInteger01(org.springframework.expression.spel.LiteralTests)')",[7473]
"('Description.java', 'org.junit.runner.Description', 'parseMethod', '(.*)\\((.*)\\)', 'valueType(org.springframework.expression.spel.standard.SpelParserTests)')",[4813]
"('Description.java', 'org.junit.runner.Description', 'parseMethod', '(.*)\\((.*)\\)', 'testMethods03(org.springframework.expression.spel.ParsingTests)')",[6826]
"('Description.java', 'org.junit.runner.Description', 'parseMethod', '(.*)\\((.*)\\)', 'testRelOperatorsMatches02(org.springframework.expression.spel.ParsingTests)')",[5881]
"('Description.java', 'org.junit.runner.Description', 'parseMethod', '(.*)\\((.*)\\)', 'testComparison(org.springframework.expression.spel.EvaluationTests)')",[2869]
"('Description.java', 'org.junit.runner.Description', 'getClassName', '(.*)\\((.*)\\)', 'org.springframework.expression.spel.VariableAndFunctionTests')","[12783, 12806, 12830, 12853]"
"('Description.java', 'org.junit.runner.Description', 'getClassName', '(.*)\\((.*)\\)', 'testScenario_UsingStandardInfrastructure(org.springframework.expression.spel.ExpressionLanguageScenarioTests)')",[8771]
"('Description.java', 'org.junit.runner.Description', 'parseMethod', '(.*)\\((.*)\\)', 'testFunctionAccess02(org.springframework.expression.spel.VariableAndFunctionTests)')",[8500]
"('Description.java', 'org.junit.runner.Description', 'parseMethod', '(.*)\\((.*)\\)', 'testNumbers01(org.springframework.expression.spel.EvaluationTests)')",[2827]
"('Description.java', 'org.junit.runner.Description', 'parseMethod', '(.*)\\((.*)\\)', 'testFunctions(org.springframework.expression.spel.SpelDocumentationTests)')",[8354]
"('Description.java', 'org.junit.runner.Description', 'parseMethod', '(.*)\\((.*)\\)', 'testXMLBasedConfig(org.springframework.expression.spel.SpelDocumentationTests)')",[8060]
"('Description.java', 'org.junit.runner.Description', 'parseMethod', '(.*)\\((.*)\\)', 'testPropertyNavigation(org.springframework.expression.spel.SpelDocumentationTests)')",[8123]
"('Description.java', 'org.junit.runner.Description', 'parseMethod', '(.*)\\((.*)\\)', 'testScenario_AddingYourOwnPropertyResolvers_1(org.springframework.expression.spel.ExpressionLanguageScenarioTests)')",[8855]
"('Description.java', 'org.junit.runner.Description', 'parseMethod', '(.*)\\((.*)\\)', 'testRelOperatorsMatches01(org.springframework.expression.spel.EvaluationTests)')",[1819]
"('Description.java', 'org.junit.runner.Description', 'parseMethod', '(.*)\\((.*)\\)', 'testRelOperatorsIs01(org.springframework.expression.spel.ParsingTests)')",[6532]
"('Description.java', 'org.junit.runner.Description', 'parseMethod', '(.*)\\((.*)\\)', 'testHexIntLiteral01(org.springframework.expression.spel.LiteralTests)')",[7704]
"('Description.java', 'org.junit.runner.Description', 'parseMethod', '(.*)\\((.*)\\)', 'testLiteralInteger02(org.springframework.expression.spel.ParsingTests)')",[6952]
"('Description.java', 'org.junit.runner.Description', 'parseMethod', '(.*)\\((.*)\\)', 'testRelOperatorsBetween01(org.springframework.expression.spel.ListTests)')",[669]
"('Description.java', 'org.junit.runner.Description', 'parseMethod', '(.*)\\((.*)\\)', 'testAssignmentToVariables01(org.springframework.expression.spel.ParsingTests)')",[5944]
"('Description.java', 'org.junit.runner.Description', 'parseMethod', '(.*)\\((.*)\\)', 'testSelection05(org.springframework.expression.spel.InProgressTests)')",[3391]
"('Description.java', 'org.junit.runner.Description', 'parseMethod', '(.*)\\((.*)\\)', 'testMathOperatorsAdd02(org.springframework.expression.spel.ParsingTests)')",[6574]
"('Description.java', 'org.junit.runner.Description', 'getClassName', '(.*)\\((.*)\\)', 'org.springframework.expression.spel.TemplateExpressionParsingTests')","[9999, 10022, 10046, 10069]"
"('Description.java', 'org.junit.runner.Description', 'parseMethod', '(.*)\\((.*)\\)', 'testCanCompare(org.springframework.expression.spel.DefaultComparatorUnitTests)')",[4501]
"('Description.java', 'org.junit.runner.Description', 'getClassName', '(.*)\\((.*)\\)', 'testCreateListsOnAttemptToIndexNull01(org.springframework.expression.spel.EvaluationTests)')",[1525]
"('Description.java', 'org.junit.runner.Description', 'parseMethod', '(.*)\\((.*)\\)', 'testRelOperatorsInstanceof01(org.springframework.expression.spel.EvaluationTests)')",[1735]
"('Description.java', 'org.junit.runner.Description', 'parseMethod', '(.*)\\((.*)\\)', 'testRelOperatorLT01(org.springframework.expression.spel.EvaluationTests)')",[1651]
"('Description.java', 'org.junit.runner.Description', 'parseMethod', '(.*)\\((.*)\\)', 'projectionWithSet(org.springframework.expression.spel.SelectionAndProjectionTests)')",[9672]
"('Description.java', 'org.junit.runner.Description', 'parseMethod', '(.*)\\((.*)\\)', 'testOperatorOverloading(org.springframework.expression.spel.OperatorTests)')",[4313]
"('Description.java', 'org.junit.runner.Description', 'parseMethod', '(.*)\\((.*)\\)', 'testPropertyAccess(org.springframework.expression.spel.SpelDocumentationTests)')",[8102]
"('OperatorMatches.java', 'org.springframework.expression.spel.ast.OperatorMatches', 'getValueInternal', '.*r.*', 'wednesday')","[10935, 11131]"
"('Description.java', 'org.junit.runner.Description', 'parseMethod', '(.*)\\((.*)\\)', 'testSpecialVariables(org.springframework.expression.spel.SpelDocumentationTests)')",[8333]
"('Description.java', 'org.junit.runner.Description', 'parseMethod', '(.*)\\((.*)\\)', 'testMathOperatorDivide_ConvertToDouble(org.springframework.expression.spel.OperatorTests)')",[4229]
"('Description.java', 'org.junit.runner.Description', 'parseMethod', '(.*)\\((.*)\\)', 'testLiteralString01(org.springframework.expression.spel.LiteralTests)')",[7536]
"('Description.java', 'org.junit.runner.Description', 'getClassName', '(.*)\\((.*)\\)', 'testParsingSimpleTemplateExpression01(org.springframework.expression.spel.TemplateExpressionParsingTests)')",[836]
"('Description.java', 'org.junit.runner.Description', 'parseMethod', '(.*)\\((.*)\\)', 'testMathOperatorsAdd03(org.springframework.expression.spel.ParsingTests)')",[6595]
"('Description.java', 'org.junit.runner.Description', 'parseMethod', '(.*)\\((.*)\\)', 'testReflectionHelperCompareArguments_ExactMatching(org.springframework.expression.spel.support.ReflectionHelperTests)')",[7139]
"('Description.java', 'org.junit.runner.Description', 'parseMethod', '(.*)\\((.*)\\)', 'testStringLiterals(org.springframework.expression.spel.standard.SpelParserTests)')",[5086]
"('Description.java', 'org.junit.runner.Description', 'parseMethod', '(.*)\\((.*)\\)', 'testConstructors(org.springframework.expression.spel.SpelDocumentationTests)')",[8312]
"('OperatorMatches.java', 'org.springframework.expression.spel.ast.OperatorMatches', 'getValueInternal', '.*r.*', 'tuesday')","[11103, 11299]"
"('Description.java', 'org.junit.runner.Description', 'parseMethod', '(.*)\\((.*)\\)', 'testIndexingAsAPropertyAccess_SPR6968_2(org.springframework.expression.spel.SpringEL300Tests)')",[5609]
"('Description.java', 'org.junit.runner.Description', 'parseMethod', '(.*)\\((.*)\\)', 'testMethodThrowingException_SPR6760(org.springframework.expression.spel.MethodInvocationTests)')",[334]
"('Description.java', 'org.junit.runner.Description', 'parseMethod', '(.*)\\((.*)\\)', 'selectFirstItemInPrimitiveArray(org.springframework.expression.spel.SelectionAndProjectionTests)')",[9546]
"('Description.java', 'org.junit.runner.Description', 'parseMethod', '(.*)\\((.*)\\)', 'testRogueTrailingDotCausesNPE_SPR6866(org.springframework.expression.spel.EvaluationTests)')",[1987]
"('Description.java', 'org.junit.runner.Description', 'parseMethod', '(.*)\\((.*)\\)', 'testTemplating(org.springframework.expression.spel.SpelDocumentationTests)')",[8417]
"('Description.java', 'org.junit.runner.Description', 'parseMethod', '(.*)\\((.*)\\)', 'testNoVariableInteference(org.springframework.expression.spel.ExpressionStateTests)')",[3600]
"('Description.java', 'org.junit.runner.Description', 'getClassName', '(.*)\\((.*)\\)', 'org.springframework.expression.spel.MethodInvocationTests')","[9811, 9834, 9858, 9881]"
"('Description.java', 'org.junit.runner.Description', 'getClassName', '(.*)\\((.*)\\)', 'testPerformanceOfPropertyAccess(org.springframework.expression.spel.PerformanceTests)')",[4751]
"('Description.java', 'org.junit.runner.Description', 'parseMethod', '(.*)\\((.*)\\)', 'testAddingRemovingAccessors(org.springframework.expression.spel.PropertyAccessTests)')",[8646]
"('Description.java', 'org.junit.runner.Description', 'getClassName', '(.*)\\((.*)\\)', 'testSetArrayElementValue(org.springframework.expression.spel.SetValueTests)')",[8917]
"('Description.java', 'org.junit.runner.Description', 'parseMethod', '(.*)\\((.*)\\)', 'testRelOperatorsInstanceof06(org.springframework.expression.spel.EvaluationTests)')",[1798]
"('Description.java', 'org.junit.runner.Description', 'parseMethod', '(.*)\\((.*)\\)', 'testTypeArrayConstructors(org.springframework.expression.spel.ArrayConstructorTests)')",[1171]
"('Description.java', 'org.junit.runner.Description', 'parseMethod', '(.*)\\((.*)\\)', 'testAnd(org.springframework.expression.spel.BooleanExpressionTests)')",[1359]
"('Description.java', 'org.junit.runner.Description', 'parseMethod', '(.*)\\((.*)\\)', 'testStandardTypeConverter(org.springframework.expression.spel.support.StandardComponentsTests)')",[7432]
"('Description.java', 'org.junit.runner.Description', 'parseMethod', '(.*)\\((.*)\\)', 'testUnaryNot01(org.springframework.expression.spel.EvaluationTests)')",[2218]
"('Description.java', 'org.junit.runner.Description', 'parseMethod', '(.*)\\((.*)\\)', 'testMethodThrowingException_SPR6941_2(org.springframework.expression.spel.MethodInvocationTests)')",[250]
"('Description.java', 'org.junit.runner.Description', 'parseMethod', '(.*)\\((.*)\\)', 'testParsingSimpleTemplateExpression02(org.springframework.expression.spel.TemplateExpressionParsingTests)')",[857]
"('Description.java', 'org.junit.runner.Description', 'parseMethod', '(.*)\\((.*)\\)', 'testRelOperatorsInstanceof04(org.springframework.expression.spel.EvaluationTests)')",[1756]
"('Description.java', 'org.junit.runner.Description', 'parseMethod', '(.*)\\((.*)\\)', 'testCustomMapAccessor(org.springframework.expression.spel.MapAccessTests)')",[3015]
"('OperatorMatches.java', 'org.springframework.expression.spel.ast.OperatorMatches', 'getValueInternal', '.*o.*', 'sunday')",[10823]
"('Description.java', 'org.junit.runner.Description', 'parseMethod', '(.*)\\((.*)\\)', 'testNotWritable(org.springframework.expression.spel.LiteralTests)')",[7893]
"('Description.java', 'org.junit.runner.Description', 'parseMethod', '(.*)\\((.*)\\)', 'methodCallWithRootReferenceThroughParameter(org.springframework.expression.spel.EvaluationTests)')",[2512]
"('Description.java', 'org.junit.runner.Description', 'parseMethod', '(.*)\\((.*)\\)', 'theMostBasic(org.springframework.expression.spel.standard.SpelParserTests)')",[4772]
"('Description.java', 'org.junit.runner.Description', 'parseMethod', '(.*)\\((.*)\\)', 'testSafeNavigation(org.springframework.expression.spel.EvaluationTests)')",[1609]
"('Description.java', 'org.junit.runner.Description', 'parseMethod', '(.*)\\((.*)\\)', 'elvis_SPR7209_1(org.springframework.expression.spel.SpringEL300Tests)')",[5777]
"('Description.java', 'org.junit.runner.Description', 'parseMethod', '(.*)\\((.*)\\)', 'testToken(org.springframework.expression.spel.standard.SpelParserTests)')",[5170]
"('Description.java', 'org.junit.runner.Description', 'parseMethod', '(.*)\\((.*)\\)', 'selectionWithMap(org.springframework.expression.spel.SelectionAndProjectionTests)')",[9588]
"('Description.java', 'org.junit.runner.Description', 'parseMethod', '(.*)\\((.*)\\)', 'testProperties03(org.springframework.expression.spel.ParsingTests)')",[6805]
"('Description.java', 'org.junit.runner.Description', 'parseMethod', '(.*)\\((.*)\\)', 'testLiteralReal01(org.springframework.expression.spel.ParsingTests)')",[6217]
"('Description.java', 'org.junit.runner.Description', 'parseMethod', '(.*)\\((.*)\\)', 'testArgumentConversion01(org.springframework.expression.spel.ConstructorInvocationTests)')",[4584]
"('Description.java', 'org.junit.runner.Description', 'getClassName', '(.*)\\((.*)\\)', 'testNonExistentMethods(org.springframework.expression.spel.MethodInvocationTests)')",[166]
"('Description.java', 'org.junit.runner.Description', 'parseMethod', '(.*)\\((.*)\\)', 'selectFirstItemInList(org.springframework.expression.spel.SelectionAndProjectionTests)')",[9357]
"('Description.java', 'org.junit.runner.Description', 'parseMethod', '(.*)\\((.*)\\)', 'testInlineListError(org.springframework.expression.spel.ListTests)')",[543]
"('Description.java', 'org.junit.runner.Description', 'parseMethod', '(.*)\\((.*)\\)', 'testSetElementOfNull(org.springframework.expression.spel.SetValueTests)')",[9001]
"('Description.java', 'org.junit.runner.Description', 'getClassName', '(.*)\\((.*)\\)', 'org.springframework.expression.spel.PerformanceTests')","[11793, 11816, 11840, 11863]"
"('Description.java', 'org.junit.runner.Description', 'parseMethod', '(.*)\\((.*)\\)', 'testLiteralString04(org.springframework.expression.spel.LiteralTests)')",[7641]
"('Description.java', 'org.junit.runner.Description', 'parseMethod', '(.*)\\((.*)\\)', 'testInlineListCreation01(org.springframework.expression.spel.ListTests)')",[795]
"('Description.java', 'org.junit.runner.Description', 'parseMethod', '(.*)\\((.*)\\)', 'testConstructorInvocation03(org.springframework.expression.spel.ArrayConstructorTests)')",[1234]
"('Description.java', 'org.junit.runner.Description', 'getClassName', '(.*)\\((.*)\\)', 'org.springframework.expression.spel.ParserErrorMessagesTests')","[9717, 9740, 9764, 9787]"
"('Description.java', 'org.junit.runner.Description', 'getClassName', '(.*)\\((.*)\\)', 'testWidening01(org.springframework.expression.spel.ConstructorInvocationTests)')",[4563]
"('Description.java', 'org.junit.runner.Description', 'parseMethod', '(.*)\\((.*)\\)', 'testAndWithNullValueOnRight(org.springframework.expression.spel.EvaluationTests)')",[2302]
"('Description.java', 'org.junit.runner.Description', 'parseMethod', '(.*)\\((.*)\\)', 'testTernary(org.springframework.expression.spel.SpelDocumentationTests)')",[8375]
"('Description.java', 'org.junit.runner.Description', 'parseMethod', '(.*)\\((.*)\\)', 'testLongIntLiteral01(org.springframework.expression.spel.LiteralTests)')",[7725]
"('Description.java', 'org.junit.runner.Description', 'parseMethod', '(.*)\\((.*)\\)', 'testTypeReferences02(org.springframework.expression.spel.EvaluationTests)')",[2785]
"('Description.java', 'org.junit.runner.Description', 'parseMethod', '(.*)\\((.*)\\)', 'testErrorCases(org.springframework.expression.spel.TemplateExpressionParsingTests)')",[1004]
"('Description.java', 'org.junit.runner.Description', 'parseMethod', '(.*)\\((.*)\\)', 'testNonExistentMethods(org.springframework.expression.spel.MethodInvocationTests)')",[146]
"('Description.java', 'org.junit.runner.Description', 'getClassName', '(.*)\\((.*)\\)', 'testGetValue(org.springframework.expression.spel.LiteralExpressionTests)')",[6993]
"('Description.java', 'org.junit.runner.Description', 'parseMethod', '(.*)\\((.*)\\)', 'testConversions(org.springframework.expression.spel.LiteralTests)')",[7872]
"('Description.java', 'org.junit.runner.Description', 'getClassName', '(.*)\\((.*)\\)', 'theMostBasic(org.springframework.expression.spel.standard.SpelParserTests)')",[4792]
"('Description.java', 'org.junit.runner.Description', 'parseMethod', '(.*)\\((.*)\\)', 'testParsingNormalExpressionThroughTemplateParser(org.springframework.expression.spel.TemplateExpressionParsingTests)')",[983]
"('Description.java', 'org.junit.runner.Description', 'parseMethod', '(.*)\\((.*)\\)', 'testEqual(org.springframework.expression.spel.OperatorTests)')",[3956]
"('Description.java', 'org.junit.runner.Description', 'parseMethod', '(.*)\\((.*)\\)', 'testRelationalOperators(org.springframework.expression.spel.SpelDocumentationTests)')",[8186]
"('Description.java', 'org.junit.runner.Description', 'parseMethod', '(.*)\\((.*)\\)', 'testStandardOperatorOverloader(org.springframework.expression.spel.support.StandardComponentsTests)')",[7390]
"('Description.java', 'org.junit.runner.Description', 'parseMethod', '(.*)\\((.*)\\)', 'testSelection02(org.springframework.expression.spel.InProgressTests)')",[3307]
"('Description.java', 'org.junit.runner.Description', 'parseMethod', '(.*)\\((.*)\\)', 'testSetArrayElementNestedValue(org.springframework.expression.spel.SetValueTests)')",[9064]
"('Description.java', 'org.junit.runner.Description', 'parseMethod', '(.*)\\((.*)\\)', 'testAddingMethodResolvers(org.springframework.expression.spel.MethodInvocationTests)')",[292]
"('Description.java', 'org.junit.runner.Description', 'parseMethod', '(.*)\\((.*)\\)', 'testTypeReferencesAndQualifiedIdentifierCaching(org.springframework.expression.spel.EvaluationTests)')",[2743]
"('Description.java', 'org.junit.runner.Description', 'parseMethod', '(.*)\\((.*)\\)', 'elvis_SPR7209_2(org.springframework.expression.spel.SpringEL300Tests)')",[5798]
"('Description.java', 'org.junit.runner.Description', 'parseMethod', '(.*)\\((.*)\\)', 'testSimpleAccess02(org.springframework.expression.spel.PropertyAccessTests)')",[8667]
"('Description.java', 'org.junit.runner.Description', 'parseMethod', '(.*)\\((.*)\\)', 'testComparator(org.springframework.expression.spel.ExpressionStateTests)')",[3768]
"('Description.java', 'org.junit.runner.Description', 'parseMethod', '(.*)\\((.*)\\)', 'testNumerics(org.springframework.expression.spel.standard.SpelParserTests)')",[5212]
"('Description.java', 'org.junit.runner.Description', 'parseMethod', '(.*)\\((.*)\\)', 'testNotEqual(org.springframework.expression.spel.OperatorTests)')",[3977]
"('Description.java', 'org.junit.runner.Description', 'parseMethod', '(.*)\\((.*)\\)', 'ctorCallWithRootReferenceThroughParameter(org.springframework.expression.spel.EvaluationTests)')",[2533]
"('Description.java', 'org.junit.runner.Description', 'parseMethod', '(.*)\\((.*)\\)', 'testLessThanOrEqual(org.springframework.expression.spel.OperatorTests)')",[3935]
"('Description.java', 'org.junit.runner.Description', 'parseMethod', '(.*)\\((.*)\\)', 'testConstantRepresentation1(org.springframework.expression.spel.ListTests)')",[753]
"('Description.java', 'org.junit.runner.Description', 'parseMethod', '(.*)\\((.*)\\)', 'testScenario_RegisteringJavaMethodsAsFunctionsAndCallingThem(org.springframework.expression.spel.ExpressionLanguageScenarioTests)')",[8834]
"('Description.java', 'org.junit.runner.Description', 'parseMethod', '(.*)\\((.*)\\)', 'testCreateMapsOnAttemptToIndexNull01(org.springframework.expression.spel.EvaluationTests)')",[1546]
"('Description.java', 'org.junit.runner.Description', 'parseMethod', '(.*)\\((.*)\\)', 'testTokenKind(org.springframework.expression.spel.standard.SpelParserTests)')",[5149]
"('Description.java', 'org.junit.runner.Description', 'parseMethod', '(.*)\\((.*)\\)', 'testMathOperatorDivide04_ConvertToFloat(org.springframework.expression.spel.OperatorTests)')",[4250]
"('Description.java', 'org.junit.runner.Description', 'getClassName', '(.*)\\((.*)\\)', 'testNPE_SPR5661(org.springframework.expression.spel.SpringEL300Tests)')",[5357]
"('Description.java', 'org.junit.runner.Description', 'parseMethod', '(.*)\\((.*)\\)', 'testSetGenericMapElementRequiresCoercion(org.springframework.expression.spel.SetValueTests)')",[9295]
"('Description.java', 'org.junit.runner.Description', 'parseMethod', '(.*)\\((.*)\\)', 'testResolvingString(org.springframework.expression.spel.EvaluationTests)')",[2911]
"('Description.java', 'org.junit.runner.Description', 'parseMethod', '(.*)\\((.*)\\)', 'testFunctionAccess01(org.springframework.expression.spel.VariableAndFunctionTests)')",[8479]
"('Description.java', 'org.junit.runner.Description', 'parseMethod', '(.*)\\((.*)\\)', 'testSelection03(org.springframework.expression.spel.InProgressTests)')",[3349]
"('Description.java', 'org.junit.runner.Description', 'parseMethod', '(.*)\\((.*)\\)', 'testLiteralDate01(org.springframework.expression.spel.ParsingTests)')",[6259]
"('Description.java', 'org.junit.runner.Description', 'getClassName', '(.*)\\((.*)\\)', 'testInlineListCreation02(org.springframework.expression.spel.ListTests)')",[459]
"('Description.java', 'org.junit.runner.Description', 'parseMethod', '(.*)\\((.*)\\)', 'testUnaryNotWithNullValue(org.springframework.expression.spel.EvaluationTests)')",[2260]
"('Description.java', 'org.junit.runner.Description', 'parseMethod', '(.*)\\((.*)\\)', 'projectionWithList(org.springframework.expression.spel.SelectionAndProjectionTests)')",[9651]
"('OperatorMatches.java', 'org.springframework.expression.spel.ast.OperatorMatches', 'getValueInternal', '.*o.*', 'saturday')",[10851]
"('Description.java', 'org.junit.runner.Description', 'parseMethod', '(.*)\\((.*)\\)', 'testOrWithNullValueOnRight(org.springframework.expression.spel.EvaluationTests)')",[2344]
"('Description.java', 'org.junit.runner.Description', 'parseMethod', '(.*)\\((.*)\\)', 'selectFirstItemInArray(org.springframework.expression.spel.SelectionAndProjectionTests)')",[9483]
"('Description.java', 'org.junit.runner.Description', 'parseMethod', '(.*)\\((.*)\\)', 'testBrokenExpression04(org.springframework.expression.spel.ParserErrorMessagesTests)')",[62]
"('Description.java', 'org.junit.runner.Description', 'parseMethod', '(.*)\\((.*)\\)', 'testBooleanOperatorsOr04(org.springframework.expression.spel.ParsingTests)')",[6385]
"('Description.java', 'org.junit.runner.Description', 'parseMethod', '(.*)\\((.*)\\)', 'testBrokenExpression01(org.springframework.expression.spel.ParserErrorMessagesTests)')",[125]
"('Description.java', 'org.junit.runner.Description', 'parseMethod', '(.*)\\((.*)\\)', 'testSelection(org.springframework.expression.spel.SpelDocumentationTests)')",[8396]
"('Description.java', 'org.junit.runner.Description', 'parseMethod', '(.*)\\((.*)\\)', 'testSetListElementValue(org.springframework.expression.spel.SetValueTests)')",[9085]
"('Description.java', 'org.junit.runner.Description', 'parseMethod', '(.*)\\((.*)\\)', 'testRootObject(org.springframework.expression.spel.SpelDocumentationTests)')",[8018]
"('OperatorMatches.java', 'org.springframework.expression.spel.ast.OperatorMatches', 'getValueInternal', '.*o.*', 'thursday')",[10767]
"('Description.java', 'org.junit.runner.Description', 'parseMethod', '(.*)\\((.*)\\)', 'testSimpleAccess03(org.springframework.expression.spel.PropertyAccessTests)')",[8688]
"('Description.java', 'org.junit.runner.Description', 'parseMethod', '(.*)\\((.*)\\)', 'testBeanPropertyAccess(org.springframework.expression.spel.SpelDocumentationTests)')",[7976]
"('Description.java', 'org.junit.runner.Description', 'parseMethod', '(.*)\\((.*)\\)', 'testPropertyAccessors(org.springframework.expression.spel.ExpressionStateTests)')",[3831]
"('OperatorMatches.java', 'org.springframework.expression.spel.ast.OperatorMatches', 'getValueInternal', '.*r.*', 'monday')","[10991, 11187]"
"('Description.java', 'org.junit.runner.Description', 'parseMethod', '(.*)\\((.*)\\)', 'testMultiplyDoubleDoubleGivesDouble(org.springframework.expression.spel.OperatorTests)')",[4061]
"('Description.java', 'org.junit.runner.Description', 'parseMethod', '(.*)\\((.*)\\)', 'testConstructorThrowingException_SPR6760(org.springframework.expression.spel.ConstructorInvocationTests)')",[4689]
"('Description.java', 'org.junit.runner.Description', 'parseMethod', '(.*)\\((.*)\\)', 'testFormatHelperForClassName(org.springframework.expression.spel.support.ReflectionHelperTests)')",[7056]
"('Description.java', 'org.junit.runner.Description', 'parseMethod', '(.*)\\((.*)\\)', 'testMethods01(org.springframework.expression.spel.ParsingTests)')",[5902]
"('Description.java', 'org.junit.runner.Description', 'parseMethod', '(.*)\\((.*)\\)', 'testTypeLocator(org.springframework.expression.spel.ExpressionStateTests)')",[3789]
"('Description.java', 'org.junit.runner.Description', 'parseMethod', '(.*)\\((.*)\\)', 'testPropertyField01(org.springframework.expression.spel.EvaluationTests)')",[1945]
"('OperatorMatches.java', 'org.springframework.expression.spel.ast.OperatorMatches', 'getValueInternal', '.*r.*', 'saturday')","[11047, 11243]"
"('Description.java', 'org.junit.runner.Description', 'parseMethod', '(.*)\\((.*)\\)', 'testMixingOperators01(org.springframework.expression.spel.EvaluationTests)')",[1924]
"('Description.java', 'org.junit.runner.Description', 'parseMethod', '(.*)\\((.*)\\)', 'testMathOperatorsMultiply01(org.springframework.expression.spel.ParsingTests)')",[6637]
"('OperatorMatches.java', 'org.springframework.expression.spel.ast.OperatorMatches', 'getValueInternal', '^-?\\d+(\\.\\d{2})?$', '5.00')","[10403, 12640]"
"('Description.java', 'org.junit.runner.Description', 'parseMethod', '(.*)\\((.*)\\)', 'testPlus(org.springframework.expression.spel.OperatorTests)')",[4145]
"('Description.java', 'org.junit.runner.Description', 'getClassName', '(.*)\\((.*)\\)', 'selectionWithList(org.springframework.expression.spel.SelectionAndProjectionTests)')",[9336]
"('Description.java', 'org.junit.runner.Description', 'parseMethod', '(.*)\\((.*)\\)', 'testBooleanErrors01(org.springframework.expression.spel.BooleanExpressionTests)')",[1443]
"('Description.java', 'org.junit.runner.Description', 'parseMethod', '(.*)\\((.*)\\)', 'testCallVarargsFunction(org.springframework.expression.spel.VariableAndFunctionTests)')",[8542]
"('Description.java', 'org.junit.runner.Description', 'getClassName', '(.*)\\((.*)\\)', 'testErrorCases(org.springframework.expression.spel.ArrayConstructorTests)')",[1066]
"('Description.java', 'org.junit.runner.Description', 'parseMethod', '(.*)\\((.*)\\)', 'testLiteralBoolean03(org.springframework.expression.spel.ParsingTests)')",[6133]
"('Description.java', 'org.junit.runner.Description', 'getClassName', '(.*)\\((.*)\\)', 'org.springframework.expression.spel.ExpressionLanguageScenarioTests')","[12971, 12994, 13018, 13041]"
"('Description.java', 'org.junit.runner.Description', 'parseMethod', '(.*)\\((.*)\\)', 'testMathOperatorAdd02(org.springframework.expression.spel.OperatorTests)')",[4082]
"('Description.java', 'org.junit.runner.Description', 'parseMethod', '(.*)\\((.*)\\)', 'testBooleanOperatorsOr03(org.springframework.expression.spel.ParsingTests)')",[6364]
"('Description.java', 'org.junit.runner.Description', 'parseMethod', '(.*)\\((.*)\\)', 'beanResolution(org.springframework.expression.spel.SpringEL300Tests)')",[5756]
"('Description.java', 'org.junit.runner.Description', 'parseMethod', '(.*)\\((.*)\\)', 'testRelOperatorsGE02(org.springframework.expression.spel.ParsingTests)')",[6511]
"('Description.java', 'org.junit.runner.Description', 'parseMethod', '(.*)\\((.*)\\)', 'testRealLiteral(org.springframework.expression.spel.OperatorTests)')",[3893]
"('Description.java', 'org.junit.runner.Description', 'parseMethod', '(.*)\\((.*)\\)', 'selectionWithPrimitiveArray(org.springframework.expression.spel.SelectionAndProjectionTests)')",[9525]
"('Description.java', 'org.junit.runner.Description', 'parseMethod', '(.*)\\((.*)\\)', 'fnCallWithRootReferenceThroughParameter(org.springframework.expression.spel.EvaluationTests)')",[2554]
"('Description.java', 'org.junit.runner.Description', 'parseMethod', '(.*)\\((.*)\\)', 'testAddingConstructorResolvers(org.springframework.expression.spel.ConstructorInvocationTests)')",[4710]
"('Description.java', 'org.junit.runner.Description', 'getClassName', '(.*)\\((.*)\\)', 'org.springframework.expression.spel.ListTests')","[9905, 9928, 9952, 9975]"
"('Description.java', 'org.junit.runner.Description', 'getClassName', '(.*)\\((.*)\\)', 'testConstruction(org.springframework.expression.spel.ExpressionStateTests)')",[3537]
"('Description.java', 'org.junit.runner.Description', 'parseMethod', '(.*)\\((.*)\\)', 'testPropertiesNested03(org.springframework.expression.spel.EvaluationTests)')",[2050]
"('Description.java', 'org.junit.runner.Description', 'parseMethod', '(.*)\\((.*)\\)', 'testLiteralReal02_CreatingFloats(org.springframework.expression.spel.LiteralTests)')",[7809]
"('Description.java', 'org.junit.runner.Description', 'getClassName', '(.*)\\((.*)\\)', 'testSimpleOperations(org.springframework.expression.spel.OperatorOverloaderTests)')",[1484]
"('OperatorMatches.java', 'org.springframework.expression.spel.ast.OperatorMatches', 'getValueInternal', '.*r.*', 'friday')","[11075, 11271]"
"('Description.java', 'org.junit.runner.Description', 'parseMethod', '(.*)\\((.*)\\)', 'testParsingSimpleTemplateExpression03(org.springframework.expression.spel.TemplateExpressionParsingTests)')",[878]
"('Description.java', 'org.junit.runner.Description', 'parseMethod', '(.*)\\((.*)\\)', 'testDoubleCoercion(org.springframework.expression.spel.SpringEL300Tests)')",[5399]
"('Description.java', 'org.junit.runner.Description', 'parseMethod', '(.*)\\((.*)\\)', 'testRelOperatorsInstanceof05(org.springframework.expression.spel.EvaluationTests)')",[1777]
"('Description.java', 'org.junit.runner.Description', 'parseMethod', '(.*)\\((.*)\\)', 'testBooleanTrue(org.springframework.expression.spel.BooleanExpressionTests)')",[1276]
"('Description.java', 'org.junit.runner.Description', 'parseMethod', '(.*)\\((.*)\\)', 'testLiteralString05(org.springframework.expression.spel.LiteralTests)')",[7662]
"('Description.java', 'org.junit.runner.Description', 'parseMethod', '(.*)\\((.*)\\)', 'testSimpleAccess01(org.springframework.expression.spel.MethodInvocationTests)')",[208]
"('Description.java', 'org.junit.runner.Description', 'parseMethod', '(.*)\\((.*)\\)', 'testPerformanceOfPropertyAccess(org.springframework.expression.spel.PerformanceTests)')",[4731]
"('Description.java', 'org.junit.runner.Description', 'parseMethod', '(.*)\\((.*)\\)', 'testNestedExpressions(org.springframework.expression.spel.TemplateExpressionParsingTests)')",[941]
"('Description.java', 'org.junit.runner.Description', 'parseMethod', '(.*)\\((.*)\\)', 'testStandardTypeLocator(org.springframework.expression.spel.support.StandardComponentsTests)')",[7411]
"('Description.java', 'org.junit.runner.Description', 'parseMethod', '(.*)\\((.*)\\)', 'testRelOperatorGT01(org.springframework.expression.spel.EvaluationTests)')",[1630]
"('Description.java', 'org.junit.runner.Description', 'parseMethod', '(.*)\\((.*)\\)', 'testAddingSpecificPropertyAccessor(org.springframework.expression.spel.PropertyAccessTests)')",[8625]
"('Description.java', 'org.junit.runner.Description', 'parseMethod', '(.*)\\((.*)\\)', 'testRelOperatorsBetween02(org.springframework.expression.spel.ListTests)')",[690]
"('Description.java', 'org.junit.runner.Description', 'parseMethod', '(.*)\\((.*)\\)', 'testSetupArguments(org.springframework.expression.spel.support.ReflectionHelperTests)')",[7286]
"('Description.java', 'org.junit.runner.Description', 'parseMethod', '(.*)\\((.*)\\)', 'testVariableAccess01(org.springframework.expression.spel.EvaluationTests)')",[2659]
"('Description.java', 'org.junit.runner.Description', 'parseMethod', '(.*)\\((.*)\\)', 'testProjection06(org.springframework.expression.spel.InProgressTests)')",[3286]
"('Description.java', 'org.junit.runner.Description', 'parseMethod', '(.*)\\((.*)\\)', 'testBasicArray(org.springframework.expression.spel.ArrayConstructorTests)')",[1192]
"('Description.java', 'org.junit.runner.Description', 'parseMethod', '(.*)\\((.*)\\)', 'testSetProperty(org.springframework.expression.spel.SetValueTests)')",[8980]
"('Description.java', 'org.junit.runner.Description', 'parseMethod', '(.*)\\((.*)\\)', 'testFunctions01(org.springframework.expression.spel.ParsingTests)')",[6889]
"('Description.java', 'org.junit.runner.Description', 'parseMethod', '(.*)\\((.*)\\)', 'testNestedProperties_SPR6923(org.springframework.expression.spel.SpringEL300Tests)')",[5567]
"('Description.java', 'org.junit.runner.Description', 'parseMethod', '(.*)\\((.*)\\)', 'testAssignmentToVariables01(org.springframework.expression.spel.EvaluationTests)')",[2365]
"('Description.java', 'org.junit.runner.Description', 'parseMethod', '(.*)\\((.*)\\)', 'testSelectionError_NonBooleanSelectionCriteria(org.springframework.expression.spel.InProgressTests)')",[3328]
"('Description.java', 'org.junit.runner.Description', 'parseMethod', '(.*)\\((.*)\\)', 'testConstructors01(org.springframework.expression.spel.ParsingTests)')",[6847]
"('Description.java', 'org.junit.runner.Description', 'parseMethod', '(.*)\\((.*)\\)', 'testVarargsInvocation02(org.springframework.expression.spel.ConstructorInvocationTests)')",[4626]
"('Description.java', 'org.junit.runner.Description', 'parseMethod', '(.*)\\((.*)\\)', 'testReflectionHelperCompareArguments_NotAMatch(org.springframework.expression.spel.support.ReflectionHelperTests)')",[7202]
"('Description.java', 'org.junit.runner.Description', 'parseMethod', '(.*)\\((.*)\\)', 'testCombinations01(org.springframework.expression.spel.BooleanExpressionTests)')",[1401]
"('Description.java', 'org.junit.runner.Description', 'parseMethod', '(.*)\\((.*)\\)', 'testSignedIntLiterals(org.springframework.expression.spel.LiteralTests)')",[7767]
"('Description.java', 'org.junit.runner.Description', 'parseMethod', '(.*)\\((.*)\\)', 'testInlineList1(org.springframework.expression.spel.ParsingTests)')",[6931]
"('Description.java', 'org.junit.runner.Description', 'parseMethod', '(.*)\\((.*)\\)', 'testSetMapElements(org.springframework.expression.spel.SetValueTests)')",[9190]
"('Description.java', 'org.junit.runner.Description', 'parseMethod', '(.*)\\((.*)\\)', 'testSetConstruction01(org.springframework.expression.spel.ListTests)')",[648]
"('Description.java', 'org.junit.runner.Description', 'getClassName', '(.*)\\((.*)\\)', 'testStandardEvaluationContext(org.springframework.expression.spel.support.StandardComponentsTests)')",[7369]
"('Description.java', 'org.junit.runner.Description', 'parseMethod', '(.*)\\((.*)\\)', 'testUnaryPlus01(org.springframework.expression.spel.EvaluationTests)')",[2197]
"('Description.java', 'org.junit.runner.Description', 'parseMethod', '(.*)\\((.*)\\)', 'testSetGenericListElementValueTypeCoersion(org.springframework.expression.spel.SetValueTests)')",[9106]
"('Description.java', 'org.junit.runner.Description', 'parseMethod', '(.*)\\((.*)\\)', 'testLiteralHex01(org.springframework.expression.spel.ParsingTests)')",[6238]
"('Description.java', 'org.junit.runner.Description', 'parseMethod', '(.*)\\((.*)\\)', 'testBooleanOperatorsOr02(org.springframework.expression.spel.ParsingTests)')",[6343]
"('Description.java', 'org.junit.runner.Description', 'parseMethod', '(.*)\\((.*)\\)', 'testFunctionAccess02(org.springframework.expression.spel.EvaluationTests)')",[2701]
"('Description.java', 'org.junit.runner.Description', 'getClassName', '(.*)\\((.*)\\)', 'testVariables(org.springframework.expression.spel.SpelDocumentationTests)')",[7934]
"('Description.java', 'org.junit.runner.Description', 'parseMethod', '(.*)\\((.*)\\)', 'testNulls(org.springframework.expression.spel.DefaultComparatorUnitTests)')",[4522]
"('Description.java', 'org.junit.runner.Description', 'getClassName', '(.*)\\((.*)\\)', 'testPrimitives(org.springframework.expression.spel.DefaultComparatorUnitTests)')",[4459]
"('Description.java', 'org.junit.runner.Description', 'getClassName', '(.*)\\((.*)\\)', 'testRelOperatorsMatches01(org.springframework.expression.spel.ParsingTests)')",[5860]
"('Description.java', 'org.junit.runner.Description', 'parseMethod', '(.*)\\((.*)\\)', 'testLiteralBoolean02(org.springframework.expression.spel.LiteralTests)')",[7515]
"('Description.java', 'org.junit.runner.Description', 'parseMethod', '(.*)\\((.*)\\)', 'testMapOfMap_SPR7244(org.springframework.expression.spel.SpringEL300Tests)')",[5819]
"('Description.java', 'org.junit.runner.Description', 'parseMethod', '(.*)\\((.*)\\)', 'testNPE_SPR5673(org.springframework.expression.spel.SpringEL300Tests)')",[5525]
"('Description.java', 'org.junit.runner.Description', 'getClassName', '(.*)\\((.*)\\)', 'org.springframework.expression.spel.PropertyAccessTests')","[12877, 12900, 12924, 12947]"
"('Description.java', 'org.junit.runner.Description', 'parseMethod', '(.*)\\((.*)\\)', 'testRelOperatorsMatches01(org.springframework.expression.spel.ParsingTests)')",[5840]
"('Description.java', 'org.junit.runner.Description', 'parseMethod', '(.*)\\((.*)\\)', 'testPrimitiveTypeArrayConstructors(org.springframework.expression.spel.ArrayConstructorTests)')",[1129]
"('Description.java', 'org.junit.runner.Description', 'parseMethod', '(.*)\\((.*)\\)', 'testSWF1086(org.springframework.expression.spel.SpringEL300Tests)')",[5378]
"('Description.java', 'org.junit.runner.Description', 'parseMethod', '(.*)\\((.*)\\)', 'testConstruction(org.springframework.expression.spel.ExpressionStateTests)')",[3517]
"('Description.java', 'org.junit.runner.Description', 'parseMethod', '(.*)\\((.*)\\)', 'testModulus(org.springframework.expression.spel.OperatorTests)')",[4187]
"('Description.java', 'org.junit.runner.Description', 'parseMethod', '(.*)\\((.*)\\)', 'testIndexer03(org.springframework.expression.spel.EvaluationTests)')",[2596]
"('Description.java', 'org.junit.runner.Description', 'parseMethod', '(.*)\\((.*)\\)', 'testMathOperatorsAdd01(org.springframework.expression.spel.ParsingTests)')",[6553]
"('Description.java', 'org.junit.runner.Description', 'parseMethod', '(.*)\\((.*)\\)', 'testVariableAccess01(org.springframework.expression.spel.VariableAndFunctionTests)')",[8438]
"('Description.java', 'org.junit.runner.Description', 'parseMethod', '(.*)\\((.*)\\)', 'testBrokenExpression07(org.springframework.expression.spel.ParserErrorMessagesTests)')",[104]
"('Description.java', 'org.junit.runner.Description', 'parseMethod', '(.*)\\((.*)\\)', 'testTypeReferences01(org.springframework.expression.spel.ParsingTests)')",[5986]
"('Description.java', 'org.junit.runner.Description', 'parseMethod', '(.*)\\((.*)\\)', 'testDollarPrefixedIdentifier_SPR7100(org.springframework.expression.spel.SpringEL300Tests)')",[5630]
"('Description.java', 'org.junit.runner.Description', 'parseMethod', '(.*)\\((.*)\\)', 'testSelectionLast02(org.springframework.expression.spel.InProgressTests)')",[3475]
"('Description.java', 'org.junit.runner.Description', 'parseMethod', '(.*)\\((.*)\\)', 'testBooleanOperatorsOr01(org.springframework.expression.spel.ParsingTests)')",[6322]
"('Description.java', 'org.junit.runner.Description', 'parseMethod', '(.*)\\((.*)\\)', 'testUnaryMinus01(org.springframework.expression.spel.EvaluationTests)')",[2176]
"('Description.java', 'org.junit.runner.Description', 'parseMethod', '(.*)\\((.*)\\)', 'testVariables01(org.springframework.expression.spel.ParsingTests)')",[6868]
"('Description.java', 'org.junit.runner.Description', 'parseMethod', '(.*)\\((.*)\\)', 'testSimpleMapAccess01(org.springframework.expression.spel.MapAccessTests)')",[2953]
"('Description.java', 'org.junit.runner.Description', 'parseMethod', '(.*)\\((.*)\\)', 'testNPE_SPR5661(org.springframework.expression.spel.SpringEL300Tests)')",[5337]
"('Description.java', 'org.junit.runner.Description', 'parseMethod', '(.*)\\((.*)\\)', 'testMethods02(org.springframework.expression.spel.ParsingTests)')",[5923]
"('Description.java', 'org.junit.runner.Description', 'parseMethod', '(.*)\\((.*)\\)', 'testLiteralBoolean01(org.springframework.expression.spel.ParsingTests)')",[6070]
"('Description.java', 'org.junit.runner.Description', 'parseMethod', '(.*)\\((.*)\\)', 'arithmeticMultiply1(org.springframework.expression.spel.standard.SpelParserTests)')",[4897]
"('Description.java', 'org.junit.runner.Description', 'getClassName', '(.*)\\((.*)\\)', 'testImports(org.springframework.expression.spel.StandardTypeLocatorTests)')",[3098]
"('Description.java', 'org.junit.runner.Description', 'parseMethod', '(.*)\\((.*)\\)', 'testElvis01(org.springframework.expression.spel.EvaluationTests)')",[1588]
"('Description.java', 'org.junit.runner.Description', 'parseMethod', '(.*)\\((.*)\\)', 'testImports(org.springframework.expression.spel.StandardTypeLocatorTests)')",[3078]
"('OperatorMatches.java', 'org.springframework.expression.spel.ast.OperatorMatches', 'getValueInternal', '.*r.*', 'thursday')","[10963, 11159]"
"('Description.java', 'org.junit.runner.Description', 'parseMethod', '(.*)\\((.*)\\)', 'selectionWithList(org.springframework.expression.spel.SelectionAndProjectionTests)')",[9316]
"('Description.java', 'org.junit.runner.Description', 'parseMethod', '(.*)\\((.*)\\)', 'testProjection02(org.springframework.expression.spel.InProgressTests)')",[3244]
"('Description.java', 'org.junit.runner.Description', 'parseMethod', '(.*)\\((.*)\\)', 'testDoubles(org.springframework.expression.spel.OperatorTests)')",[4271]
"('Description.java', 'org.junit.runner.Description', 'parseMethod', '(.*)\\((.*)\\)', 'arithmeticPrecedence4(org.springframework.expression.spel.standard.SpelParserTests)')",[5002]
"('Description.java', 'org.junit.runner.Description', 'parseMethod', '(.*)\\((.*)\\)', 'testUnaryNot02(org.springframework.expression.spel.EvaluationTests)')",[2239]
"('Description.java', 'org.junit.runner.Description', 'parseMethod', '(.*)\\((.*)\\)', 'testElvis(org.springframework.expression.spel.ParsingTests)')",[6028]
"('Description.java', 'org.junit.runner.Description', 'parseMethod', '(.*)\\((.*)\\)', 'testActiveContextObject(org.springframework.expression.spel.ExpressionStateTests)')",[3663]
"('Description.java', 'org.junit.runner.Description', 'parseMethod', '(.*)\\((.*)\\)', 'testLiterals(org.springframework.expression.spel.SpelDocumentationTests)')",[8081]
"('Description.java', 'org.junit.runner.Description', 'parseMethod', '(.*)\\((.*)\\)', 'selectLastItemInSet(org.springframework.expression.spel.SelectionAndProjectionTests)')",[9441]
"('Description.java', 'org.junit.runner.Description', 'parseMethod', '(.*)\\((.*)\\)', 'testDictionaryAccess(org.springframework.expression.spel.SpelDocumentationTests)')",[8144]
"('Description.java', 'org.junit.runner.Description', 'parseMethod', '(.*)\\((.*)\\)', 'customMapWithNonStringValue(org.springframework.expression.spel.standard.PropertiesConversionSpelTests)')",[5316]
"('Description.java', 'org.junit.runner.Description', 'parseMethod', '(.*)\\((.*)\\)', 'testProjection05(org.springframework.expression.spel.InProgressTests)')",[3265]
"('Description.java', 'org.junit.runner.Description', 'parseMethod', '(.*)\\((.*)\\)', 'testNot(org.springframework.expression.spel.BooleanExpressionTests)')",[1380]
"('Description.java', 'org.junit.runner.Description', 'parseMethod', '(.*)\\((.*)\\)', 'arithmeticPrecedence6(org.springframework.expression.spel.standard.SpelParserTests)')",[5044]
"('Description.java', 'org.junit.runner.Description', 'parseMethod', '(.*)\\((.*)\\)', 'testStringLiterals2(org.springframework.expression.spel.standard.SpelParserTests)')",[5107]
"('Description.java', 'org.junit.runner.Description', 'parseMethod', '(.*)\\((.*)\\)', 'testMultidimensionalArrays(org.springframework.expression.spel.ArrayConstructorTests)')",[1108]
"('Description.java', 'org.junit.runner.Description', 'getClassName', '(.*)\\((.*)\\)', 'org.springframework.expression.spel.SpelDocumentationTests')","[12689, 12712, 12736, 12759]"
"('Description.java', 'org.junit.runner.Description', 'parseMethod', '(.*)\\((.*)\\)', 'testRelOperatorsMatches04(org.springframework.expression.spel.EvaluationTests)')",[1882]
"('Description.java', 'org.junit.runner.Description', 'parseMethod', '(.*)\\((.*)\\)', 'testTypeReferences02(org.springframework.expression.spel.ParsingTests)')",[6007]
"('Description.java', 'org.junit.runner.Description', 'parseMethod', '(.*)\\((.*)\\)', 'testLongs(org.springframework.expression.spel.OperatorTests)')",[4418]
"('Description.java', 'org.junit.runner.Description', 'getClassName', '(.*)\\((.*)\\)', 'org.springframework.expression.spel.StandardTypeLocatorTests')","[10641, 10664, 10688, 10711]"
"('Description.java', 'org.junit.runner.Description', 'parseMethod', '(.*)\\((.*)\\)', 'testTernaryOperator03(org.springframework.expression.spel.EvaluationTests)')",[2428]
"('Description.java', 'org.junit.runner.Description', 'parseMethod', '(.*)\\((.*)\\)', 'testLiteralBoolean01(org.springframework.expression.spel.LiteralTests)')",[7494]
"('Description.java', 'org.junit.runner.Description', 'parseMethod', '(.*)\\((.*)\\)', 'testResolvingList(org.springframework.expression.spel.EvaluationTests)')",[2890]
"('Description.java', 'org.junit.runner.Description', 'parseMethod', '(.*)\\((.*)\\)', 'testSetPropertyTypeCoersion(org.springframework.expression.spel.SetValueTests)')",[9232]
"('Description.java', 'org.junit.runner.Description', 'parseMethod', '(.*)\\((.*)\\)', 'testOperators(org.springframework.expression.spel.ExpressionStateTests)')",[3747]
"('Description.java', 'org.junit.runner.Description', 'parseMethod', '(.*)\\((.*)\\)', 'testRelOperatorsIs02(org.springframework.expression.spel.ListTests)')",[564]
"('Description.java', 'org.junit.runner.Description', 'parseMethod', '(.*)\\((.*)\\)', 'testInlineListAndProjectionSelection(org.springframework.expression.spel.ListTests)')",[627]
"('Description.java', 'org.junit.runner.Description', 'parseMethod', '(.*)\\((.*)\\)', 'testSetNestedProperty(org.springframework.expression.spel.SetValueTests)')",[8959]
"('Description.java', 'org.junit.runner.Description', 'parseMethod', '(.*)\\((.*)\\)', 'whitespace(org.springframework.expression.spel.standard.SpelParserTests)')",[4834]
"('Description.java', 'org.junit.runner.Description', 'parseMethod', '(.*)\\((.*)\\)', 'testSelectionAST(org.springframework.expression.spel.InProgressTests)')",[3496]
"('Description.java', 'org.junit.runner.Description', 'parseMethod', '(.*)\\((.*)\\)', 'testGetValue(org.springframework.expression.spel.MapAccessTests)')",[3057]
"('Description.java', 'org.junit.runner.Description', 'parseMethod', '(.*)\\((.*)\\)', 'testClashingWithSuffixes(org.springframework.expression.spel.TemplateExpressionParsingTests)')",[962]
"('Description.java', 'org.junit.runner.Description', 'parseMethod', '(.*)\\((.*)\\)', 'testLiteralString02(org.springframework.expression.spel.LiteralTests)')",[7557]
"('Description.java', 'org.junit.runner.Description', 'parseMethod', '(.*)\\((.*)\\)', 'testReferences03(org.springframework.expression.spel.ParsingTests)')",[6742]
"('Description.java', 'org.junit.runner.Description', 'parseMethod', '(.*)\\((.*)\\)', 'testInlineListCreation04(org.springframework.expression.spel.ListTests)')",[501]
"('Description.java', 'org.junit.runner.Description', 'parseMethod', '(.*)\\((.*)\\)', 'testTernaryOperatorWithNullValue(org.springframework.expression.spel.EvaluationTests)')",[2491]
"('Description.java', 'org.junit.runner.Description', 'parseMethod', '(.*)\\((.*)\\)', 'testDollars(org.springframework.expression.spel.SpringEL300Tests)')",[5714]
"('Description.java', 'org.junit.runner.Description', 'parseMethod', '(.*)\\((.*)\\)', 'testLiteralString03(org.springframework.expression.spel.LiteralTests)')",[7578]
"('Description.java', 'org.junit.runner.Description', 'parseMethod', '(.*)\\((.*)\\)', 'arithmeticPrecedence5(org.springframework.expression.spel.standard.SpelParserTests)')",[5023]
