"('Description.java', 'org.junit.runner.Description', 'methodAndClassNamePatternGroupOrDefault', '([\\s\\S]*)\\((.*)\\)', 'testCheckstyleTrueNegative[13](com.qulice.checkstyle.ChecksTest)')","[974, 2460]"
"('FileContents.java', 'com.puppycrawl.tools.checkstyle.api.FileContents', 'lineIsComment', '^\\s*//.*$', '    public static void methodWithoutInnerClasses() {')","[6420, 6457]"
"('Description.java', 'org.junit.runner.Description', 'methodAndClassNamePatternGroupOrDefault', '([\\s\\S]*)\\((.*)\\)', '[2]')",[191]
"('FileContents.java', 'com.puppycrawl.tools.checkstyle.api.FileContents', 'lineIsComment', '^\\s*//.*$', '        throw new IllegalStateException(""This method is not to be called,"" +')",[4616]
"('Description.java', 'org.junit.runner.Description', 'methodAndClassNamePatternGroupOrDefault', '([\\s\\S]*)\\((.*)\\)', 'testCheckstyleTrueNegative[1](com.qulice.checkstyle.ChecksTest)')","[170, 1908]"
"('FileContents.java', 'com.puppycrawl.tools.checkstyle.api.FileContents', 'lineIsComment', '^\\s*//.*$', '        throw new UnsupportedOperationException();')",[4406]
"('FileContents.java', 'com.puppycrawl.tools.checkstyle.api.FileContents', 'lineIsComment', '^\\s*//.*$', '    private static final String CONST_VALUE = ""foo"";')","[22641, 22677, 22714, 22750, 22786, 22968]"
"('JavadocTagsCheck.java', 'com.qulice.checkstyle.JavadocTagsCheck', 'matchTagFormat', '^([A-Z](\\.|[a-z]+) )+\\([A-Za-z0-9._%+-]+@[A-Za-z0-9.-]+\\.[A-Za-z]{2,4}\\)$', 'First Author (first@author.com)')",[3388]
"('FileContents.java', 'com.puppycrawl.tools.checkstyle.api.FileContents', 'lineIsComment', '^\\s*//.*$', '            "" one line."");')",[4686]
"('Description.java', 'org.junit.runner.Description', 'methodAndClassNamePatternGroupOrDefault', '([\\s\\S]*)\\((.*)\\)', 'testCheckstyleTrueNegative[3](com.qulice.checkstyle.ChecksTest)')","[304, 2000]"
"('FileContents.java', 'com.puppycrawl.tools.checkstyle.api.FileContents', 'lineIsComment', '^\\s*//.*$', '         */')","[10518, 10554, 10590, 10627, 11787, 11823, 11859, 11895]"
"('Description.java', 'org.junit.runner.Description', 'methodAndClassNamePatternGroupOrDefault', '([\\s\\S]*)\\((.*)\\)', 'testCheckstyleTruePositive[11](com.qulice.checkstyle.ChecksTest)')","[817, 2345]"
"('Description.java', 'org.junit.runner.Description', 'methodAndClassNamePatternGroupOrDefault', '([\\s\\S]*)\\((.*)\\)', 'testCheckstyleTrueNegative[8](com.qulice.checkstyle.ChecksTest)')","[639, 2230]"
"('Description.java', 'org.junit.runner.Description', 'methodAndClassNamePatternGroupOrDefault', '([\\s\\S]*)\\((.*)\\)', 'com.qulice.checkstyle.CheckstyleValidatorTest')","[1144, 27017]"
"('SuppressWarningsCheck.java', 'com.puppycrawl.tools.checkstyle.checks.annotation.SuppressWarningsCheck', 'logMatch', '^$|^\\s+$', 'PMD.TooManyMethods')",[15244]
"('Description.java', 'org.junit.runner.Description', 'methodAndClassNamePatternGroupOrDefault', '([\\s\\S]*)\\((.*)\\)', 'testCheckstyleTrueNegative[9](com.qulice.checkstyle.ChecksTest)')","[706, 2276]"
"('FileContents.java', 'com.puppycrawl.tools.checkstyle.api.FileContents', 'lineIsComment', '^\\s*//.*$', '        }')","[4266, 18289, 19281]"
"('Description.java', 'org.junit.runner.Description', 'methodAndClassNamePatternGroupOrDefault', '([\\s\\S]*)\\((.*)\\)', '[9]')",[660]
"('FileContents.java', 'com.puppycrawl.tools.checkstyle.api.FileContents', 'lineIsComment', '^\\s*//.*$', '    public static void innerClassUsage() {')","[10301, 10337, 11569, 11605]"
"('Description.java', 'org.junit.runner.Description', 'methodAndClassNamePatternGroupOrDefault', '([\\s\\S]*)\\((.*)\\)', '[13]')",[928]
"('FileContents.java', 'com.puppycrawl.tools.checkstyle.api.FileContents', 'lineIsComment', '^\\s*//.*$', '            throw ae;')",[19170]
"('Description.java', 'org.junit.runner.Description', 'methodAndClassNamePatternGroupOrDefault', '([\\s\\S]*)\\((.*)\\)', '[1]')",[124]
"('Description.java', 'org.junit.runner.Description', 'methodAndClassNamePatternGroupOrDefault', '([\\s\\S]*)\\((.*)\\)', 'acceptsConstructorParametersNamedJustLikeFields(com.qulice.checkstyle.CheckstyleValidatorTest)')","[1333, 2750]"
"('FileContents.java', 'com.puppycrawl.tools.checkstyle.api.FileContents', 'lineIsComment', '^\\s*//.*$', '    public static final int TEN = 10;')","[11170, 11206, 11242, 11278, 11314, 11932]"
"('Description.java', 'org.junit.runner.Description', 'methodAndClassNamePatternGroupOrDefault', '([\\s\\S]*)\\((.*)\\)', 'testCheckstyleTruePositive[10](com.qulice.checkstyle.ChecksTest)')","[750, 2299]"
"('FileContents.java', 'com.puppycrawl.tools.checkstyle.api.FileContents', 'lineIsComment', '^\\s*//.*$', '            final int a = ++it + ++very_long_variable_id;')",[19096]
"('FileContents.java', 'com.puppycrawl.tools.checkstyle.api.FileContents', 'lineIsComment', '^\\s*//.*$', '     */')","[3818, 3852, 5045, 5081, 5117, 5153, 5476, 5512, 5548, 5585, 6275, 6311, 6347, 6384, 6494, 6531, 6855, 6891, 6927, 6963, 7000, 7036, 7072, 7108, 7218, 7255, 7587, 7624, 7662, 7699, 7812, 8422, 8459, 8495, 8531, 8854, 8890, 8926, 8963, 8999, 9035, 9072, 9108, 9144, 9180, 9217, 9254, 9291, 10155, 10191, 10228, 10264, 10373, 10410, 10446, 10482, 10701, 11025, 11061, 11097, 11133, 11424, 11460, 11496, 11532, 11641, 11678, 11714, 11750, 11969, 12469, 12505, 12542, 12578, 12615, 12939, 12975, 13011, 13047, 13084, 13120, 13156, 13192, 13302, 13625, 13662, 13698, 13734, 13770, 13807, 13843, 13879, 13916, 13953, 14285, 14323, 14360, 14397, 14435, 14732, 14769, 14806, 14994, 15709, 15745, 15782, 15818, 16509, 16832, 16868, 16905, 16941, 16978, 17301, 17338, 17374, 17410, 17446, 17483, 17519, 17555, 17592, 17628, 17664, 17700, 17737, 17773, 17809, 17845, 17882, 18362, 18398, 18434, 18763, 19354, 19390, 19426, 19974, 20010, 20046, 20082, 20119, 20156, 20193, 20230, 20267, 20599, 20637, 20674, 20711, 20749, 21081, 21118, 21155, 21193, 21231, 21555, 21591, 21627, 21664, 21700, 21736, 21772, 21809, 21845, 21881, 21917, 21954, 21990, 22026, 22062, 22099, 22136, 22173, 22496, 22533, 22569, 22605, 22823, 22859, 22895, 22931, 23543, 23580, 23616, 23652, 23688, 23725, 23761, 23797, 23833, 23870, 23906, 23942, 23979, 24016, 24339, 24375, 24412, 24449, 24772, 24808, 24844, 24881, 24917, 24953, 24989, 25026, 25062, 25098, 25134, 25171, 25207, 25243, 25279, 25316, 25352, 25388, 25424, 25461, 25497, 25533, 25569, 25606, 25642, 25678, 25714, 25751, 25787, 25823, 25859, 25896, 25932, 25968, 26004, 26041, 26077, 26113, 26149, 26186, 26222, 26258, 26294, 26331, 26368, 26405, 26442, 26479, 26802, 26838, 26874, 26911, 26948]"
"('FileContents.java', 'com.puppycrawl.tools.checkstyle.api.FileContents', 'lineIsComment', '^\\s*//.*$', '        // this methods throws an exception with a description that spans')",[4511]
"('Description.java', 'org.junit.runner.Description', 'methodAndClassNamePatternGroupOrDefault', '([\\s\\S]*)\\((.*)\\)', 'acceptsDefaultMethodsWithFinalModifiers(com.qulice.checkstyle.CheckstyleValidatorTest)')","[1228, 2640]"
"('JavadocTagsCheck.java', 'com.qulice.checkstyle.JavadocTagsCheck', 'matchTagFormat', '^([A-Z](\\.|[a-z]+) )+\\([A-Za-z0-9._%+-]+@[A-Za-z0-9.-]+\\.[A-Za-z]{2,4}\\)$', 'second author has incorrect format')","[3421, 3586]"
"('FileContents.java', 'com.puppycrawl.tools.checkstyle.api.FileContents', 'lineIsComment', '^\\s*//.*$', 'public final class Valid {')",[3920]
"('Description.java', 'org.junit.runner.Description', 'methodAndClassNamePatternGroupOrDefault', '([\\s\\S]*)\\((.*)\\)', 'distinguishesValidCatchParameterNames(com.qulice.checkstyle.CheckstyleValidatorTest)')","[1753, 3190]"
"('FileContents.java', 'com.puppycrawl.tools.checkstyle.api.FileContents', 'lineIsComment', '^\\s*//.*$', '            ThatClass.name();')",[4161]
"('Description.java', 'org.junit.runner.Description', 'methodAndClassNamePatternGroupOrDefault', '([\\s\\S]*)\\((.*)\\)', 'passesWindowsEndsOfLineWithoutException(com.qulice.checkstyle.CheckstyleValidatorTest)')","[1459, 2882]"
"('Description.java', 'org.junit.runner.Description', 'methodAndClassNamePatternGroupOrDefault', '([\\s\\S]*)\\((.*)\\)', 'allowsUppercaseAbbreviationExceptions(com.qulice.checkstyle.CheckstyleValidatorTest)')","[1711, 3146]"
"('Description.java', 'org.junit.runner.Description', 'methodAndClassNamePatternGroupOrDefault', '([\\s\\S]*)\\((.*)\\)', 'allowsDiamondOperatorUsage(com.qulice.checkstyle.CheckstyleValidatorTest)')","[1396, 2816]"
"('Description.java', 'org.junit.runner.Description', 'methodAndClassNamePatternGroupOrDefault', '([\\s\\S]*)\\((.*)\\)', 'testCheckstyleTruePositive[9](com.qulice.checkstyle.ChecksTest)')","[683, 2253]"
"('FileContents.java', 'com.puppycrawl.tools.checkstyle.api.FileContents', 'lineIsComment', '^\\s*//.*$', '        // throw new OldException();')",[4581]
"('Description.java', 'org.junit.runner.Description', 'methodAndClassNamePatternGroupOrDefault', '([\\s\\S]*)\\((.*)\\)', '[14]')",[995]
"('FileContents.java', 'com.puppycrawl.tools.checkstyle.api.FileContents', 'lineIsComment', '^\\s*//.*$', '            throw ex;')",[18252]
"('FileContents.java', 'com.puppycrawl.tools.checkstyle.api.FileContents', 'lineIsComment', '^\\s*//.*$', '        final Runnable runnables = new Runnable() {')","[6021, 6057, 6093, 6130, 16254, 16291, 16327, 16363]"
"('JavadocTagsCheck.java', 'com.qulice.checkstyle.JavadocTagsCheck', 'matchTagFormat', '^([A-Z](\\.|[a-z]+) )+\\([A-Za-z0-9._%+-]+@[A-Za-z0-9.-]+\\.[A-Za-z]{2,4}\\)$', 'first author has incorrect format')",[3553]
"('JavadocTagsCheck.java', 'com.qulice.checkstyle.JavadocTagsCheck', 'matchTagFormat', '^([A-Z](\\.|[a-z]+) )+\\([A-Za-z0-9._%+-]+@[A-Za-z0-9.-]+\\.[A-Za-z]{2,4}\\)$', 'John Smith (john@example.com)')","[4866, 5334, 6603, 7404, 8171, 8675, 9363, 9758, 10882, 12290, 12760, 13447, 14064, 14658, 15066, 15530, 16726, 17050, 20490, 20897, 21303, 22245, 23077, 23365, 24196, 24557, 26587]"
"('FileContents.java', 'com.puppycrawl.tools.checkstyle.api.FileContents', 'lineIsComment', '^\\s*//.*$', '    void valid() {')",[17919]
"('Description.java', 'org.junit.runner.Description', 'methodAndClassNamePatternGroupOrDefault', '([\\s\\S]*)\\((.*)\\)', 'testCheckstyleTruePositive[2](com.qulice.checkstyle.ChecksTest)')","[214, 1931]"
"('SuppressWarningsCheck.java', 'com.puppycrawl.tools.checkstyle.checks.annotation.SuppressWarningsCheck', 'logMatch', '^$|^\\s+$', 'PMD.ExcessiveImports')",[15279]
"('Description.java', 'org.junit.runner.Description', 'methodAndClassNamePatternGroupOrDefault', '([\\s\\S]*)\\((.*)\\)', 'testCheckstyleTrueNegative[7](com.qulice.checkstyle.ChecksTest)')","[572, 2184]"
"('FileContents.java', 'com.puppycrawl.tools.checkstyle.api.FileContents', 'lineIsComment', '^\\s*//.*$', '        } catch (final IllegalStateException ise) {')",[18141]
"('FileContents.java', 'com.puppycrawl.tools.checkstyle.api.FileContents', 'lineIsComment', '^\\s*//.*$', '        final Runnable runnable = new Runnable() {')","[5694, 5730, 5766, 5803, 15927, 15964, 16000, 16036]"
"('Description.java', 'org.junit.runner.Description', 'methodAndClassNamePatternGroupOrDefault', '([\\s\\S]*)\\((.*)\\)', 'reportsErrorWhenLineWrap(com.qulice.checkstyle.CheckstyleValidatorTest)')","[1648, 3080]"
"('FileContents.java', 'com.puppycrawl.tools.checkstyle.api.FileContents', 'lineIsComment', '^\\s*//.*$', '            throw ise;')",[18178]
"('Description.java', 'org.junit.runner.Description', 'methodAndClassNamePatternGroupOrDefault', '([\\s\\S]*)\\((.*)\\)', 'acceptsNonStaticMethodsInIt(com.qulice.checkstyle.CheckstyleValidatorTest)')","[1438, 2860]"
"('Description.java', 'org.junit.runner.Description', 'methodAndClassNamePatternGroupOrDefault', '([\\s\\S]*)\\((.*)\\)', 'testCheckstyleTruePositive[12](com.qulice.checkstyle.ChecksTest)')","[884, 2391]"
"('Description.java', 'org.junit.runner.Description', 'methodAndClassNamePatternGroupOrDefault', '([\\s\\S]*)\\((.*)\\)', 'acceptsValidIndentation(com.qulice.checkstyle.CheckstyleValidatorTest)')","[1774, 3212]"
"('FileContents.java', 'com.puppycrawl.tools.checkstyle.api.FileContents', 'lineIsComment', '^\\s*//.*$', '        ) {')","[7737, 7774, 13229, 13265]"
"('FileContents.java', 'com.puppycrawl.tools.checkstyle.api.FileContents', 'lineIsComment', '^\\s*//.*$', '            final int ise = 0;')","[18067, 18690, 18726]"
"('FileContents.java', 'com.puppycrawl.tools.checkstyle.api.FileContents', 'lineIsComment', '^\\s*//.*$', '        } catch (final IllegalArgumentException e) {')",[19207]
"('JavadocTagsCheck.java', 'com.qulice.checkstyle.JavadocTagsCheck', 'matchTagFormat', '^\\d+(\\.\\d+){1,2}(\\.[0-9A-Za-z-]+(\\.[0-9A-Za-z-]+)*)?$', 'a1.0 - incorrect format')",[3322]
"('JavadocTagsCheck.java', 'com.qulice.checkstyle.JavadocTagsCheck', 'matchTagFormat', '^\\$Id.*\\$$', '$Id$')","[3520, 3652, 3784, 4936, 5404, 6673, 7476, 8099, 8241, 8745, 9433, 9828, 10952, 12360, 12830, 14136, 14694, 15136, 15600, 16796, 17120, 20562, 20969, 21373, 22315, 23112, 23435, 24266, 24627, 26657]"
"('Description.java', 'org.junit.runner.Description', 'methodAndClassNamePatternGroupOrDefault', '([\\s\\S]*)\\((.*)\\)', 'testCheckstyleTruePositive[14](com.qulice.checkstyle.ChecksTest)')","[1018, 2483]"
"('Description.java', 'org.junit.runner.Description', 'methodAndClassNamePatternGroupOrDefault', '([\\s\\S]*)\\((.*)\\)', 'testCheckstyleTrueNegative[2](com.qulice.checkstyle.ChecksTest)')","[237, 1954]"
"('Description.java', 'org.junit.runner.Description', 'methodAndClassNamePatternGroupOrDefault', '([\\s\\S]*)\\((.*)\\)', '[15]')","[1062, 26971, 26994]"
"('Description.java', 'org.junit.runner.Description', 'methodAndClassNamePatternGroupOrDefault', '([\\s\\S]*)\\((.*)\\)', 'testCheckstyleTrueNegative[14](com.qulice.checkstyle.ChecksTest)')","[1041, 2506]"
"('FileContents.java', 'com.puppycrawl.tools.checkstyle.api.FileContents', 'lineIsComment', '^\\s*//.*$', '        try {')","[4126, 17956, 18471, 18507, 18837, 19463, 19499]"
"('FileContents.java', 'com.puppycrawl.tools.checkstyle.api.FileContents', 'lineIsComment', '^\\s*//.*$', '        );')","[14919, 14956]"
"('JavadocTagsCheck.java', 'com.qulice.checkstyle.JavadocTagsCheck', 'matchTagFormat', '^([A-Z](\\.|[a-z]+) )+\\([A-Za-z0-9._%+-]+@[A-Za-z0-9.-]+\\.[A-Za-z]{2,4}\\)$', 'John Smith - incorrect format of author')",[3289]
"('Description.java', 'org.junit.runner.Description', 'methodAndClassNamePatternGroupOrDefault', '([\\s\\S]*)\\((.*)\\)', 'testCheckstyleTrueNegative[11](com.qulice.checkstyle.ChecksTest)')","[840, 2368]"
"('FileContents.java', 'com.puppycrawl.tools.checkstyle.api.FileContents', 'lineIsComment', '^\\s*//.*$', '    public String name() {')",[4091]
"('Description.java', 'org.junit.runner.Description', 'methodAndClassNamePatternGroupOrDefault', '([\\s\\S]*)\\((.*)\\)', 'testCheckstyleTrueNegative[4](com.qulice.checkstyle.ChecksTest)')","[371, 2046]"
"('Description.java', 'org.junit.runner.Description', 'methodAndClassNamePatternGroupOrDefault', '([\\s\\S]*)\\((.*)\\)', 'testCheckstyleTruePositive[1](com.qulice.checkstyle.ChecksTest)')","[147, 1885]"
"('Description.java', 'org.junit.runner.Description', 'methodAndClassNamePatternGroupOrDefault', '([\\s\\S]*)\\((.*)\\)', '[5]')",[392]
"('FileContents.java', 'com.puppycrawl.tools.checkstyle.api.FileContents', 'lineIsComment', '^\\s*//.*$', '    void invalid() {')",[18800]
"('Description.java', 'org.junit.runner.Description', 'methodAndClassNamePatternGroupOrDefault', '([\\s\\S]*)\\((.*)\\)', 'allowsProperIndentationInAnnotations(com.qulice.checkstyle.CheckstyleValidatorTest)')","[1564, 2992]"
"('Description.java', 'org.junit.runner.Description', 'methodAndClassNamePatternGroupOrDefault', '([\\s\\S]*)\\((.*)\\)', 'reportsAllCharEncodingUsages(com.qulice.checkstyle.CheckstyleValidatorTest)')","[1606, 3036]"
"('Description.java', 'org.junit.runner.Description', 'methodAndClassNamePatternGroupOrDefault', '([\\s\\S]*)\\((.*)\\)', 'acceptsConstantUsedInMethodAnnotation(com.qulice.checkstyle.CheckstyleValidatorTest)')","[1795, 3234]"
"('FileContents.java', 'com.puppycrawl.tools.checkstyle.api.FileContents', 'lineIsComment', '^\\s*//.*$', ' */')","[4758, 4795, 4831, 4972, 5008, 5190, 5226, 5262, 5299, 5440, 6568, 6710, 6746, 6782, 6818, 7293, 7330, 7368, 7513, 7550, 7849, 7886, 7922, 7958, 7994, 8136, 8277, 8314, 8350, 8386, 8568, 8604, 8640, 8781, 8818, 9328, 9470, 9506, 9542, 9578, 9615, 9651, 9687, 9723, 9865, 10738, 10775, 10811, 10847, 10988, 12005, 12183, 12219, 12255, 12397, 12433, 12652, 12689, 12725, 12866, 12902, 13339, 13375, 13412, 13553, 13589, 13991, 14028, 14173, 14210, 14248, 14473, 14511, 14548, 14585, 14622, 15031, 15173, 15209, 15350, 15386, 15423, 15459, 15495, 15637, 15673, 16546, 16582, 16619, 16655, 16691, 17015, 17157, 17193, 17229, 17265, 20305, 20342, 20379, 20417, 20454, 20787, 20824, 20861, 21006, 21044, 21268, 21410, 21446, 21482, 21518, 22210, 22352, 22388, 22424, 22460, 23005, 23042, 23148, 23184, 23220, 23257, 23293, 23330, 23471, 23507, 24053, 24089, 24125, 24161, 24303, 24486, 24522, 24663, 24699, 24736, 26516, 26552, 26693, 26730, 26766]"
"('Description.java', 'org.junit.runner.Description', 'methodAndClassNamePatternGroupOrDefault', '([\\s\\S]*)\\((.*)\\)', 'reportsErrorWhenIndentationIsIncorrect(com.qulice.checkstyle.CheckstyleValidatorTest)')","[1543, 2970]"
"('FileContents.java', 'com.puppycrawl.tools.checkstyle.api.FileContents', 'lineIsComment', '^\\s*//.*$', '    public List<String> firstTen(final String... args) {')","[10083, 10119, 11351, 11387]"
"('Description.java', 'org.junit.runner.Description', 'methodAndClassNamePatternGroupOrDefault', '([\\s\\S]*)\\((.*)\\)', 'testCheckstyleTrueNegative[0](com.qulice.checkstyle.ChecksTest)')","[103, 1862]"
"('JavadocTagsCheck.java', 'com.qulice.checkstyle.JavadocTagsCheck', 'matchTagFormat', '^([A-Z](\\.|[a-z]+) )+\\([A-Za-z0-9._%+-]+@[A-Za-z0-9.-]+\\.[A-Za-z]{2,4}\\)$', 'Yegor Bugayenko (yegor@tpc2.com)')",[3685]
"('FileContents.java', 'com.puppycrawl.tools.checkstyle.api.FileContents', 'lineIsComment', '^\\s*//.*$', '    /** Javadoc. */')",[3886]
"('FileContents.java', 'com.puppycrawl.tools.checkstyle.api.FileContents', 'lineIsComment', '^\\s*//.*$', '    */')",[4056]
"('FileContents.java', 'com.puppycrawl.tools.checkstyle.api.FileContents', 'lineIsComment', '^\\s*//.*$', '            final int number1 = ++prolongations;')","[19022, 19828, 19864]"
"('Description.java', 'org.junit.runner.Description', 'methodAndClassNamePatternGroupOrDefault', '([\\s\\S]*)\\((.*)\\)', 'acceptsTryWithResourcesWithoutSemicolon(com.qulice.checkstyle.CheckstyleValidatorTest)')","[1480, 2904]"
"('FileContents.java', 'com.puppycrawl.tools.checkstyle.api.FileContents', 'lineIsComment', '^\\s*//.*$', '            int prolongations = 0;')","[18874, 19536, 19572]"
"('Description.java', 'org.junit.runner.Description', 'methodAndClassNamePatternGroupOrDefault', '([\\s\\S]*)\\((.*)\\)', 'testCheckstyleTruePositive[4](com.qulice.checkstyle.ChecksTest)')","[348, 2023]"
"('FileContents.java', 'com.puppycrawl.tools.checkstyle.api.FileContents', 'lineIsComment', '^\\s*//.*$', '            throw e;')",[19244]
"('Description.java', 'org.junit.runner.Description', 'methodAndClassNamePatternGroupOrDefault', '([\\s\\S]*)\\((.*)\\)', 'acceptsNonStaticMethodsInItCases(com.qulice.checkstyle.CheckstyleValidatorTest)')","[1816, 3256]"
"('Description.java', 'org.junit.runner.Description', 'methodAndClassNamePatternGroupOrDefault', '([\\s\\S]*)\\((.*)\\)', 'com.qulice.checkstyle.ChecksTest')",[36]
"('FileContents.java', 'com.puppycrawl.tools.checkstyle.api.FileContents', 'lineIsComment', '^\\s*//.*$', '    public InvalidIndentation() {')","[14844, 14881]"
"('Description.java', 'org.junit.runner.Description', 'methodAndClassNamePatternGroupOrDefault', '([\\s\\S]*)\\((.*)\\)', 'testCheckstyleTrueNegative[6](com.qulice.checkstyle.ChecksTest)')","[505, 2138]"
"('Description.java', 'org.junit.runner.Description', 'methodAndClassNamePatternGroupOrDefault', '([\\s\\S]*)\\((.*)\\)', '[8]')",[593]
"('FileContents.java', 'com.puppycrawl.tools.checkstyle.api.FileContents', 'lineIsComment', '^\\s*//.*$', '            int id = ++aaa;')","[18030, 18617, 18653]"
"('FileContents.java', 'com.puppycrawl.tools.checkstyle.api.FileContents', 'lineIsComment', '^\\s*//.*$', '            int it = 0;')","[18985, 19755, 19791]"
"('JavadocTagsCheck.java', 'com.qulice.checkstyle.JavadocTagsCheck', 'matchTagFormat', '^\\d+(\\.\\d+){1,2}(\\.[0-9A-Za-z-]+(\\.[0-9A-Za-z-]+)*)?$', '1.0')","[3487, 3619, 4901, 5369, 6638, 7440, 8064, 8206, 8710, 9398, 9793, 10917, 12325, 12795, 13482, 14100, 15101, 15565, 16761, 17085, 20526, 20933, 21338, 22280, 23400, 24231, 24592, 26622]"
"('FileContents.java', 'com.puppycrawl.tools.checkstyle.api.FileContents', 'lineIsComment', '^\\s*//.*$', 'public final class InvalidDiamondsUsage {')","[9901, 9937, 9973, 10010, 10046, 10664]"
"('FileContents.java', 'com.puppycrawl.tools.checkstyle.api.FileContents', 'lineIsComment', '^\\s*//.*$', '            int camelCase = this.field;')","[18948, 19682, 19718]"
"('Description.java', 'org.junit.runner.Description', 'methodAndClassNamePatternGroupOrDefault', '([\\s\\S]*)\\((.*)\\)', '[0]')",[57]
"('FileContents.java', 'com.puppycrawl.tools.checkstyle.api.FileContents', 'lineIsComment', '^\\s*//.*$', '            }')","[5839, 5875, 5912, 6166, 6202, 6239, 16072, 16109, 16145, 16399, 16436, 16472]"
"('Description.java', 'org.junit.runner.Description', 'methodAndClassNamePatternGroupOrDefault', '([\\s\\S]*)\\((.*)\\)', '[11]')",[794]
"('FileContents.java', 'com.puppycrawl.tools.checkstyle.api.FileContents', 'lineIsComment', '^\\s*//.*$', '        } catch (IOException e) {')",[4196]
"('Description.java', 'org.junit.runner.Description', 'methodAndClassNamePatternGroupOrDefault', '([\\s\\S]*)\\((.*)\\)', 'acceptsSingleNameAuthor(com.qulice.checkstyle.CheckstyleValidatorTest)')","[1291, 2706]"
"('Description.java', 'org.junit.runner.Description', 'methodAndClassNamePatternGroupOrDefault', '([\\s\\S]*)\\((.*)\\)', 'allowsITUppercaseAbbreviation(com.qulice.checkstyle.CheckstyleValidatorTest)')","[1165, 2574]"
"('FileContents.java', 'com.puppycrawl.tools.checkstyle.api.FileContents', 'lineIsComment', '^\\s*//.*$', '            final int ex = ++camelCase;')","[19059, 19901, 19937]"
"('FileContents.java', 'com.puppycrawl.tools.checkstyle.api.FileContents', 'lineIsComment', '^\\s*//.*$', '        } catch (final IllegalArgumentException ex) {')",[18215]
"('FileContents.java', 'com.puppycrawl.tools.checkstyle.api.FileContents', 'lineIsComment', '^\\s*//.*$', '        };')","[5948, 5985, 16182, 16218]"
"('Description.java', 'org.junit.runner.Description', 'methodAndClassNamePatternGroupOrDefault', '([\\s\\S]*)\\((.*)\\)', 'testCheckstyleTruePositive[15](com.qulice.checkstyle.ChecksTest)')","[1085, 2529]"
"('FileContents.java', 'com.puppycrawl.tools.checkstyle.api.FileContents', 'lineIsComment', '^\\s*//.*$', '            int aaa = this.field;')","[17993, 18544, 18580]"
"('Description.java', 'org.junit.runner.Description', 'methodAndClassNamePatternGroupOrDefault', '([\\s\\S]*)\\((.*)\\)', 'reportsErrorWhenCommentOrJavadocIsTooLong(com.qulice.checkstyle.CheckstyleValidatorTest)')","[1732, 3168]"
"('Description.java', 'org.junit.runner.Description', 'methodAndClassNamePatternGroupOrDefault', '([\\s\\S]*)\\((.*)\\)', '[7]')",[526]
"('Description.java', 'org.junit.runner.Description', 'methodAndClassNamePatternGroupOrDefault', '([\\s\\S]*)\\((.*)\\)', 'testCheckstyleTruePositive[3](com.qulice.checkstyle.ChecksTest)')","[281, 1977]"
"('Description.java', 'org.junit.runner.Description', 'methodAndClassNamePatternGroupOrDefault', '([\\s\\S]*)\\((.*)\\)', 'doesNotRejectUrlsInLongLines(com.qulice.checkstyle.CheckstyleValidatorTest)')","[1354, 2772]"
"('Description.java', 'org.junit.runner.Description', 'methodAndClassNamePatternGroupOrDefault', '([\\s\\S]*)\\((.*)\\)', 'rejectsNonDiamondOperatorUsage(com.qulice.checkstyle.CheckstyleValidatorTest)')","[1375, 2794]"
"('FileContents.java', 'com.puppycrawl.tools.checkstyle.api.FileContents', 'lineIsComment', '^\\s*//.*$', '        } catch (final ArithmeticException ae) {')",[19133]
"('Description.java', 'org.junit.runner.Description', 'methodAndClassNamePatternGroupOrDefault', '([\\s\\S]*)\\((.*)\\)', 'acceptsInstanceMethodReferences(com.qulice.checkstyle.CheckstyleValidatorTest)')","[1501, 2926]"
"('Description.java', 'org.junit.runner.Description', 'methodAndClassNamePatternGroupOrDefault', '([\\s\\S]*)\\((.*)\\)', 'testWindowsEndsOfLineWithLinuxSources(com.qulice.checkstyle.CheckstyleValidatorTest)')","[1186, 2596]"
"('FileContents.java', 'com.puppycrawl.tools.checkstyle.api.FileContents', 'lineIsComment', '^\\s*//.*$', '        // this method is not yet implemented')",[4371]
"('FileContents.java', 'com.puppycrawl.tools.checkstyle.api.FileContents', 'lineIsComment', '^\\s*//.*$', 'package foo;')","[12040, 12076, 12111, 12146]"
"('Description.java', 'org.junit.runner.Description', 'methodAndClassNamePatternGroupOrDefault', '([\\s\\S]*)\\((.*)\\)', 'testExtraSemicolonInTryWithResources(com.qulice.checkstyle.CheckstyleValidatorTest)')","[1249, 2662]"
"('Description.java', 'org.junit.runner.Description', 'methodAndClassNamePatternGroupOrDefault', '([\\s\\S]*)\\((.*)\\)', 'doesNotThrowExceptionIfImportsOnly(com.qulice.checkstyle.CheckstyleValidatorTest)')","[1270, 2684]"
"('FileContents.java', 'com.puppycrawl.tools.checkstyle.api.FileContents', 'lineIsComment', '^\\s*//.*$', '    public void anotherThrowsExceptionMethod() {')",[4476]
"('FileContents.java', 'com.puppycrawl.tools.checkstyle.api.FileContents', 'lineIsComment', '^\\s*//.*$', '    default void forEach(final Consumer<String> action) {')","[7145, 7181]"
"('Description.java', 'org.junit.runner.Description', 'methodAndClassNamePatternGroupOrDefault', '([\\s\\S]*)\\((.*)\\)', 'catchesCheckstyleViolationsInLicense(com.qulice.checkstyle.CheckstyleValidatorTest)')","[1417, 2838]"
"('Description.java', 'org.junit.runner.Description', 'methodAndClassNamePatternGroupOrDefault', '([\\s\\S]*)\\((.*)\\)', 'testCheckstyleTruePositive[5](com.qulice.checkstyle.ChecksTest)')","[415, 2069]"
"('Description.java', 'org.junit.runner.Description', 'methodAndClassNamePatternGroupOrDefault', '([\\s\\S]*)\\((.*)\\)', '[12]')",[861]
"('JavadocTagsCheck.java', 'com.qulice.checkstyle.JavadocTagsCheck', 'matchTagFormat', '^([A-Z](\\.|[a-z]+) )+\\([A-Za-z0-9._%+-]+@[A-Za-z0-9.-]+\\.[A-Za-z]{2,4}\\)$', 'Gerrit (han.solo@xmpp.mobilezoo.org)')",[8029]
"('FileContents.java', 'com.puppycrawl.tools.checkstyle.api.FileContents', 'lineIsComment', '^\\s*//.*$', '        // more than one and and has a commented out line of code.')",[4546]
"('Description.java', 'org.junit.runner.Description', 'methodAndClassNamePatternGroupOrDefault', '([\\s\\S]*)\\((.*)\\)', '[6]')",[459]
"('FileContents.java', 'com.puppycrawl.tools.checkstyle.api.FileContents', 'lineIsComment', '^\\s*//.*$', '    //@todo')",[3988]
"('Description.java', 'org.junit.runner.Description', 'methodAndClassNamePatternGroupOrDefault', '([\\s\\S]*)\\((.*)\\)', 'null')","[17, 1125]"
"('FileContents.java', 'com.puppycrawl.tools.checkstyle.api.FileContents', 'lineIsComment', '^\\s*//.*$', '    }')","[3954, 4022, 4301, 4441, 4721, 18326, 19318]"
"('Description.java', 'org.junit.runner.Description', 'methodAndClassNamePatternGroupOrDefault', '([\\s\\S]*)\\((.*)\\)', 'testCheckstyleTrueNegative[12](com.qulice.checkstyle.ChecksTest)')","[907, 2414]"
"('JavadocTagsCheck.java', 'com.qulice.checkstyle.JavadocTagsCheck', 'matchTagFormat', '^([A-Z](\\.|[a-z]+) )+\\([A-Za-z0-9._%+-]+@[A-Za-z0-9.-]+\\.[A-Za-z]{2,4}\\)$', 'Third Author (third@author.com)')",[3454]
"('FileContents.java', 'com.puppycrawl.tools.checkstyle.api.FileContents', 'lineIsComment', '^\\s*//.*$', '            int very_long_variable_id = 0;')","[18911, 19609, 19645]"
"('FileContents.java', 'com.puppycrawl.tools.checkstyle.api.FileContents', 'lineIsComment', '^\\s*//.*$', '            "" because it has a really long description that spans more than"" +')",[4651]
"('Description.java', 'org.junit.runner.Description', 'methodAndClassNamePatternGroupOrDefault', '([\\s\\S]*)\\((.*)\\)', 'testCheckstyleTruePositive[13](com.qulice.checkstyle.ChecksTest)')","[951, 2437]"
"('Description.java', 'org.junit.runner.Description', 'methodAndClassNamePatternGroupOrDefault', '([\\s\\S]*)\\((.*)\\)', 'rejectsUppercaseAbbreviations(com.qulice.checkstyle.CheckstyleValidatorTest)')","[1312, 2728]"
"('FileContents.java', 'com.puppycrawl.tools.checkstyle.api.FileContents', 'lineIsComment', '^\\s*//.*$', '            throw new IllegalStateException(e);')",[4231]
"('Description.java', 'org.junit.runner.Description', 'methodAndClassNamePatternGroupOrDefault', '([\\s\\S]*)\\((.*)\\)', 'allowsOnlyProperlyNamedLocalVariables(com.qulice.checkstyle.CheckstyleValidatorTest)')","[1627, 3058]"
"('Description.java', 'org.junit.runner.Description', 'methodAndClassNamePatternGroupOrDefault', '([\\s\\S]*)\\((.*)\\)', 'reportsErrorWhenParameterObjectIsNotDocumented(com.qulice.checkstyle.CheckstyleValidatorTest)')","[1522, 2948]"
"('FileContents.java', 'com.puppycrawl.tools.checkstyle.api.FileContents', 'lineIsComment', '^\\s*//.*$', '    public void methodwithAnonymousInnerClass() {')","[5621, 5658, 15855, 15891]"
"('FileContents.java', 'com.puppycrawl.tools.checkstyle.api.FileContents', 'lineIsComment', '^\\s*//.*$', '            final int twelveletter = ++aaa + ++id;')",[18104]
"('Description.java', 'org.junit.runner.Description', 'methodAndClassNamePatternGroupOrDefault', '([\\s\\S]*)\\((.*)\\)', '[10]')",[727]
"('JavadocTagsCheck.java', 'com.qulice.checkstyle.JavadocTagsCheck', 'matchTagFormat', '^\\$Id.*\\$$', '$Id $')",[13517]
"('Description.java', 'org.junit.runner.Description', 'methodAndClassNamePatternGroupOrDefault', '([\\s\\S]*)\\((.*)\\)', 'testCheckstyleTruePositive[8](com.qulice.checkstyle.ChecksTest)')","[616, 2207]"
"('Description.java', 'org.junit.runner.Description', 'methodAndClassNamePatternGroupOrDefault', '([\\s\\S]*)\\((.*)\\)', 'reportsErrorOnMoreThanOneReturnStatement(com.qulice.checkstyle.CheckstyleValidatorTest)')","[1669, 3102]"
"('JavadocTagsCheck.java', 'com.qulice.checkstyle.JavadocTagsCheck', 'matchTagFormat', '^([A-Z](\\.|[a-z]+) )+\\([A-Za-z0-9._%+-]+@[A-Za-z0-9.-]+\\.[A-Za-z]{2,4}\\)$', 'Some Name (some@name.com)')",[3718]
"('Description.java', 'org.junit.runner.Description', 'methodAndClassNamePatternGroupOrDefault', '([\\s\\S]*)\\((.*)\\)', 'testCheckstyleTrueNegative[15](com.qulice.checkstyle.ChecksTest)')","[1108, 2552]"
"('FileContents.java', 'com.puppycrawl.tools.checkstyle.api.FileContents', 'lineIsComment', '^\\s*//.*$', '    public void someUnimplementedMethod() {')",[4336]
"('Description.java', 'org.junit.runner.Description', 'methodAndClassNamePatternGroupOrDefault', '([\\s\\S]*)\\((.*)\\)', 'allowsSpacesBetweenMethodsOfAnonymousClasses(com.qulice.checkstyle.CheckstyleValidatorTest)')","[1585, 3014]"
"('JavadocTagsCheck.java', 'com.qulice.checkstyle.JavadocTagsCheck', 'matchTagFormat', '^\\d+(\\.\\d+){1,2}(\\.[0-9A-Za-z-]+(\\.[0-9A-Za-z-]+)*)?$', '0.28.3')",[3751]
"('Description.java', 'org.junit.runner.Description', 'methodAndClassNamePatternGroupOrDefault', '([\\s\\S]*)\\((.*)\\)', 'testCheckstyleTruePositive[7](com.qulice.checkstyle.ChecksTest)')","[549, 2161]"
"('Description.java', 'org.junit.runner.Description', 'methodAndClassNamePatternGroupOrDefault', '([\\s\\S]*)\\((.*)\\)', 'testCheckstyleTrueNegative[10](com.qulice.checkstyle.ChecksTest)')","[773, 2322]"
"('Description.java', 'org.junit.runner.Description', 'methodAndClassNamePatternGroupOrDefault', '([\\s\\S]*)\\((.*)\\)', 'testCheckstyleTrueNegative[5](com.qulice.checkstyle.ChecksTest)')","[438, 2092]"
"('SuppressWarningsCheck.java', 'com.puppycrawl.tools.checkstyle.checks.annotation.SuppressWarningsCheck', 'logMatch', '^$|^\\s+$', 'PMD.AvoidDuplicateLiterals')",[15314]
"('JavadocTagsCheck.java', 'com.qulice.checkstyle.JavadocTagsCheck', 'matchTagFormat', '^\\$Id.*\\$$', '1.1 - incorrect format')",[3355]
"('Description.java', 'org.junit.runner.Description', 'methodAndClassNamePatternGroupOrDefault', '([\\s\\S]*)\\((.*)\\)', 'allowsOnlyProperlyOrderedAtClauses(com.qulice.checkstyle.CheckstyleValidatorTest)')","[1690, 3124]"
"('Description.java', 'org.junit.runner.Description', 'methodAndClassNamePatternGroupOrDefault', '([\\s\\S]*)\\((.*)\\)', 'testCheckstyleTruePositive[0](com.qulice.checkstyle.ChecksTest)')","[80, 1839]"
"('Description.java', 'org.junit.runner.Description', 'methodAndClassNamePatternGroupOrDefault', '([\\s\\S]*)\\((.*)\\)', 'testCheckstyleTruePositive[6](com.qulice.checkstyle.ChecksTest)')","[482, 2115]"
"('Description.java', 'org.junit.runner.Description', 'methodAndClassNamePatternGroupOrDefault', '([\\s\\S]*)\\((.*)\\)', 'rejectsSpacesInsideMethods(com.qulice.checkstyle.CheckstyleValidatorTest)')","[1207, 2618]"
"('Description.java', 'org.junit.runner.Description', 'methodAndClassNamePatternGroupOrDefault', '([\\s\\S]*)\\((.*)\\)', '[3]')",[258]
"('Description.java', 'org.junit.runner.Description', 'methodAndClassNamePatternGroupOrDefault', '([\\s\\S]*)\\((.*)\\)', '[4]')",[325]
