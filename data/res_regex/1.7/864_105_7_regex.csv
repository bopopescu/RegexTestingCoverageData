"('Description.java', 'org.junit.runner.Description', 'parseMethod', '(.*)\\((.*)\\)', 'testListToObjectConversion(org.springframework.core.convert.support.GenericConversionServiceTests)')",[3979]
"('Description.java', 'org.junit.runner.Description', 'parseMethod', '(.*)\\((.*)\\)', 'testParseLocalizedBigDecimalNumber3(org.springframework.util.NumberUtilsTests)')",[14286]
"('Description.java', 'org.junit.runner.Description', 'parseMethod', '(.*)\\((.*)\\)', 'testStringArrayToResourceArray(org.springframework.core.convert.support.GenericConversionServiceTests)')",[4084]
"('Description.java', 'org.junit.runner.Description', 'parseMethod', '(.*)\\((.*)\\)', 'lexicalHandler(org.springframework.util.xml.StaxEventXMLReaderTests)')",[7174]
"('AntPathStringMatcher.java', 'org.springframework.util.AntPathStringMatcher', 'matchStrings', '\\Qtes\\E.', 'tes')","[25378, 27146, 29077]"
"('Description.java', 'org.junit.runner.Description', 'parseMethod', '(.*)\\((.*)\\)', 'testNullSafeToStringWithStringArrayEqualToNull(org.springframework.util.ObjectUtilsTests)')",[12147]
"('Description.java', 'org.junit.runner.Description', 'parseMethod', '(.*)\\((.*)\\)', 'testStartsEnds(org.springframework.util.PatternMatchUtilsTests)')",[14682]
"('Description.java', 'org.junit.runner.Description', 'getClassName', '(.*)\\((.*)\\)', 'org.springframework.core.io.support.PathMatchingResourcePatternResolverTests')","[24254, 24277, 24301, 24324]"
"('Description.java', 'org.junit.runner.Description', 'parseMethod', '(.*)\\((.*)\\)', 'testValidUsage(org.springframework.util.StopWatchTests)')",[14808]
"('Description.java', 'org.junit.runner.Description', 'parseMethod', '(.*)\\((.*)\\)', 'testSetAndGet(org.springframework.core.AttributeAccessorSupportTests)')",[8467]
"('AntPathStringMatcher.java', 'org.springframework.util.AntPathStringMatcher', 'matchStrings', '\\QResource\\E.*\\QEditor.class\\E', 'VfsPatternUtils.class')",[20592]
"('Description.java', 'org.junit.runner.Description', 'parseMethod', '(.*)\\((.*)\\)', 'testExtractJarFileURL(org.springframework.util.ResourceUtilsTests)')",[13951]
"('Description.java', 'org.junit.runner.Description', 'parseMethod', '(.*)\\((.*)\\)', 'testParseLocaleWithMultiValuedVariant(org.springframework.util.StringUtilsTests)')",[11310]
"('Description.java', 'org.junit.runner.Description', 'parseMethod', '(.*)\\((.*)\\)', 'testIsCompatibleWithThrowsClause(org.springframework.util.ObjectUtilsTests)')",[12168]
"('Description.java', 'org.junit.runner.Description', 'parseMethod', '(.*)\\((.*)\\)', 'eventWriterSource(org.springframework.util.xml.StaxResultTests)')",[6550]
"('Description.java', 'org.junit.runner.Description', 'parseMethod', '(.*)\\((.*)\\)', 'testNullSafeToStringWithPlainOldString(org.springframework.util.ObjectUtilsTests)')",[11958]
"('Description.java', 'org.junit.runner.Description', 'parseMethod', '(.*)\\((.*)\\)', 'setAndGetAsTextWithNull(org.springframework.core.io.ResourceEditorTests)')",[187]
"('Description.java', 'org.junit.runner.Description', 'parseMethod', '(.*)\\((.*)\\)', 'convertObjectToObjectConstructor(org.springframework.core.convert.support.DefaultConversionTests)')",[3518]
"('Description.java', 'org.junit.runner.Description', 'parseMethod', '(.*)\\((.*)\\)', 'convertArrayToArray(org.springframework.core.convert.support.DefaultConversionTests)')",[3203]
"('Description.java', 'org.junit.runner.Description', 'parseMethod', '(.*)\\((.*)\\)', 'testSPR3485(org.springframework.core.BridgeMethodResolverTests)')",[1672]
"('Description.java', 'org.junit.runner.Description', 'parseMethod', '(.*)\\((.*)\\)', 'convertCollectionToArrayWithElementConversion(org.springframework.core.convert.support.DefaultConversionTests)')",[2993]
"('Description.java', 'org.junit.runner.Description', 'getClassName', '(.*)\\((.*)\\)', 'sunnyDay(org.springframework.core.io.ResourceEditorTests)')",[145]
"('Description.java', 'org.junit.runner.Description', 'parseMethod', '(.*)\\((.*)\\)', 'testToCode(org.springframework.core.ConstantsTests)')",[9657]
"('Description.java', 'org.junit.runner.Description', 'parseMethod', '(.*)\\((.*)\\)', 'testGetQualifiedName(org.springframework.util.ClassUtilsTests)')",[15581]
"('Description.java', 'org.junit.runner.Description', 'parseMethod', '(.*)\\((.*)\\)', 'testCodeFoundForAbstractEnums(org.springframework.core.enums.LabeledEnumTests)')",[10052]
"('Description.java', 'org.junit.runner.Description', 'parseMethod', '(.*)\\((.*)\\)', 'testIsPrimitiveOrWrapperWithCharacterClass(org.springframework.util.ObjectUtilsTests)')",[12714]
"('Description.java', 'org.junit.runner.Description', 'parseMethod', '(.*)\\((.*)\\)', 'testIsPrimitiveOrWrapperWithByteWrapperClass(org.springframework.util.ObjectUtilsTests)')",[12693]
"('AntPathStringMatcher.java', 'org.springframework.util.AntPathStringMatcher', 'matchStrings', '.*\\Qtest\\E', 'Anothertest')","[25690, 27328, 29389]"
"('Description.java', 'org.junit.runner.Description', 'parseMethod', '(.*)\\((.*)\\)', 'testParseBigDecimalNumber2(org.springframework.util.NumberUtilsTests)')",[14202]
"('Description.java', 'org.junit.runner.Description', 'parseMethod', '(.*)\\((.*)\\)', 'testForNameWithPrimitiveClasses(org.springframework.util.ClassUtilsTests)')",[15329]
"('Description.java', 'org.junit.runner.Description', 'parseMethod', '(.*)\\((.*)\\)', 'testParseLocalizedBigDecimalNumber1(org.springframework.util.NumberUtilsTests)')",[14244]
"('Description.java', 'org.junit.runner.Description', 'parseMethod', '(.*)\\((.*)\\)', 'testInterfaceArrayToStringArray(org.springframework.core.convert.support.GenericConversionServiceTests)')",[4042]
"('Description.java', 'org.junit.runner.Description', 'getClassName', '(.*)\\((.*)\\)', 'org.springframework.util.ReflectionUtilsTests')","[25100, 25123, 25147, 25170]"
"('AntPathStringMatcher.java', 'org.springframework.util.AntPathStringMatcher', 'matchStrings', '\\Qspring3.1\\E', 'spring3.1')","[16432, 16912, 17392, 17872, 18352, 18832, 19312, 19792, 20272, 20752, 21232, 21712, 22192]"
"('AntPathStringMatcher.java', 'org.springframework.util.AntPathStringMatcher', 'matchStrings', '\\Qhome\\E', 'home')","[16304, 16784, 17264, 17744, 18224, 18704, 19184, 19664, 20144, 20624, 21104, 21584, 22064]"
"('Description.java', 'org.junit.runner.Description', 'parseMethod', '(.*)\\((.*)\\)', 'testWithMultipleProperties(org.springframework.util.PropertyPlaceholderHelperTests)')",[7508]
"('Description.java', 'org.junit.runner.Description', 'parseMethod', '(.*)\\((.*)\\)', 'setField(org.springframework.util.ReflectionUtilsTests)')",[5213]
"('Description.java', 'org.junit.runner.Description', 'parseMethod', '(.*)\\((.*)\\)', 'testCommaDelimitedListToStringArrayWithNullProducesEmptyArray(org.springframework.util.StringUtilsTests)')",[11016]
"('Description.java', 'org.junit.runner.Description', 'parseMethod', '(.*)\\((.*)\\)', 'testStringToShort(org.springframework.core.convert.support.DefaultConversionTests)')",[2132]
"('Description.java', 'org.junit.runner.Description', 'parseMethod', '(.*)\\((.*)\\)', 'testIsPrimitiveOrWrapperWithShortPrimitiveClass(org.springframework.util.ObjectUtilsTests)')",[12945]
"('Description.java', 'org.junit.runner.Description', 'parseMethod', '(.*)\\((.*)\\)', 'testToObjectArrayWithNonPrimitiveArray(org.springframework.util.ObjectUtilsTests)')",[12252]
"('Description.java', 'org.junit.runner.Description', 'parseMethod', '(.*)\\((.*)\\)', 'testNonInheritedAnnotationDoesNotMatch(org.springframework.core.type.AnnotationTypeFilterTests)')",[8342]
"('Description.java', 'org.junit.runner.Description', 'parseMethod', '(.*)\\((.*)\\)', 'testIsAssignable(org.springframework.util.ClassUtilsTests)')",[15812]
"('Description.java', 'org.junit.runner.Description', 'getClassName', '(.*)\\((.*)\\)', 'testFileSystemResourceWithRelativePath(org.springframework.core.io.ResourceTests)')",[374]
"('Description.java', 'org.junit.runner.Description', 'parseMethod', '(.*)\\((.*)\\)', 'extractUriTemplateVariablesCustomRegex(org.springframework.util.AntPathMatcherTests)')",[5590]
"('Description.java', 'org.junit.runner.Description', 'parseMethod', '(.*)\\((.*)\\)', 'testReplaceFromSystemPropertyWithExpressionDefault(org.springframework.util.SystemPropertyUtilsTests)')",[5861]
"('Description.java', 'org.junit.runner.Description', 'parseMethod', '(.*)\\((.*)\\)', 'testArgsStaticMethod(org.springframework.util.ClassUtilsTests)')",[15791]
"('AntPathStringMatcher.java', 'org.springframework.util.AntPathStringMatcher', 'matchStrings', '\\Qte\\E..', 'test')","[25326, 27094, 29025]"
"('Description.java', 'org.junit.runner.Description', 'parseMethod', '(.*)\\((.*)\\)', 'testReplaceWithExpressionContainingDefault(org.springframework.util.SystemPropertyUtilsTests)')",[5945]
"('Description.java', 'org.junit.runner.Description', 'parseMethod', '(.*)\\((.*)\\)', 'testGetValuesWithWhitespacedStringPrefix(org.springframework.core.ConstantsTests)')",[9469]
"('Description.java', 'org.junit.runner.Description', 'parseMethod', '(.*)\\((.*)\\)', 'testA(org.springframework.core.GenericCollectionTypeResolverTests)')",[8571]
"('Description.java', 'org.junit.runner.Description', 'getClassName', '(.*)\\((.*)\\)', 'org.springframework.core.convert.support.DefaultConversionTests')","[24536, 24559, 24583, 24606]"
"('AntPathStringMatcher.java', 'org.springframework.util.AntPathStringMatcher', 'matchStrings', '.*\\Q/\\E.*', 'test/test/test')",[27406]
"('AntPathStringMatcher.java', 'org.springframework.util.AntPathStringMatcher', 'matchStrings', '.*\\Qbla\\E', 'XXXbla')","[26600, 28186, 30325]"
"('Description.java', 'org.junit.runner.Description', 'getClassName', '(.*)\\((.*)\\)', 'org.springframework.core.annotation.AnnotationUtilsTests')","[38996, 39016, 39037, 39057]"
"('Description.java', 'org.junit.runner.Description', 'parseMethod', '(.*)\\((.*)\\)', 'convertStringToArray(org.springframework.core.convert.support.DefaultConversionTests)')",[2804]
"('Description.java', 'org.junit.runner.Description', 'parseMethod', '(.*)\\((.*)\\)', 'serializeNonSerializable(org.springframework.util.SerializationUtilsTests)')",[4585]
"('Description.java', 'org.junit.runner.Description', 'parseMethod', '(.*)\\((.*)\\)', 'testStringToIntegerArray(org.springframework.core.convert.support.GenericConversionServiceTests)')",[4126]
"('Description.java', 'org.junit.runner.Description', 'parseMethod', '(.*)\\((.*)\\)', 'testCopyToByteArray(org.springframework.util.FileCopyUtilsTests)')",[11518]
"('Description.java', 'org.junit.runner.Description', 'parseMethod', '(.*)\\((.*)\\)', 'convertNullSource(org.springframework.core.convert.support.GenericConversionServiceTests)')",[3685]
"('Description.java', 'org.junit.runner.Description', 'parseMethod', '(.*)\\((.*)\\)', 'testShortToString(org.springframework.core.convert.support.DefaultConversionTests)')",[2153]
"('AntPathStringMatcher.java', 'org.springframework.util.AntPathStringMatcher', 'matchStrings', '.*\\Q.class\\E', 'LogConfigurationException.class')","[23194, 24006]"
"('Description.java', 'org.junit.runner.Description', 'parseMethod', '(.*)\\((.*)\\)', 'testFindBridgedMethodFromParent(org.springframework.core.BridgeMethodResolverTests)')",[1357]
"('Description.java', 'org.junit.runner.Description', 'parseMethod', '(.*)\\((.*)\\)', 'testEndsWithIgnoreCase(org.springframework.util.StringUtilsTests)')",[11226]
"('Description.java', 'org.junit.runner.Description', 'getClassName', '(.*)\\((.*)\\)', 'testHasTextBlank(org.springframework.util.StringUtilsTests)')",[10323]
"('Description.java', 'org.junit.runner.Description', 'parseMethod', '(.*)\\((.*)\\)', 'testParseNumber(org.springframework.util.NumberUtilsTests)')",[13972]
"('Description.java', 'org.junit.runner.Description', 'parseMethod', '(.*)\\((.*)\\)', 'testInterfaceThroughSuperClassMatch(org.springframework.core.type.AssignableTypeFilterTests)')",[8176]
"('Description.java', 'org.junit.runner.Description', 'parseMethod', '(.*)\\((.*)\\)', 'getNamespaceURI(org.springframework.util.xml.SimpleNamespaceContextTests)')",[6862]
"('Description.java', 'org.junit.runner.Description', 'parseMethod', '(.*)\\((.*)\\)', 'testBigIntegerToString(org.springframework.core.convert.support.DefaultConversionTests)')",[2363]
"('Description.java', 'org.junit.runner.Description', 'parseMethod', '(.*)\\((.*)\\)', 'testPropertiesPersisterWithReader(org.springframework.util.PropertiesPersisterTests)')",[14495]
"('Description.java', 'org.junit.runner.Description', 'parseMethod', '(.*)\\((.*)\\)', 'testIsPresent(org.springframework.util.ClassUtilsTests)')",[15287]
"('Description.java', 'org.junit.runner.Description', 'parseMethod', '(.*)\\((.*)\\)', 'testSPR3534(org.springframework.core.BridgeMethodResolverTests)')",[1693]
"('Description.java', 'org.junit.runner.Description', 'parseMethod', '(.*)\\((.*)\\)', 'md5Hex(org.springframework.util.DigestUtilsTests)')",[4440]
"('Description.java', 'org.junit.runner.Description', 'parseMethod', '(.*)\\((.*)\\)', 'testSimpleCollectionSuperclassType(org.springframework.core.GenericTypeResolverTests)')",[4398]
"('Description.java', 'org.junit.runner.Description', 'parseMethod', '(.*)\\((.*)\\)', 'testFindMethodAnnotationOnBridgeMethod(org.springframework.core.annotation.AnnotationUtilsTests)')",[1148]
"('Description.java', 'org.junit.runner.Description', 'parseMethod', '(.*)\\((.*)\\)', 'testStringWithMethodInvoker(org.springframework.util.MethodInvokerTests)')",[15099]
"('AntPathStringMatcher.java', 'org.springframework.util.AntPathStringMatcher', 'matchStrings', '\\Qtes\\E.', 'test')","[25300, 27068, 28999]"
"('Description.java', 'org.junit.runner.Description', 'parseMethod', '(.*)\\((.*)\\)', 'testStringToObject(org.springframework.core.convert.support.GenericConversionServiceTests)')",[4231]
"('Description.java', 'org.junit.runner.Description', 'parseMethod', '(.*)\\((.*)\\)', 'testGetQualifiedAttributeName(org.springframework.core.ConventionsTests)')",[9197]
"('Description.java', 'org.junit.runner.Description', 'getClassName', '(.*)\\((.*)\\)', 'testEquals(org.springframework.core.enums.LabeledEnumTests)')",[9989]
"('Description.java', 'org.junit.runner.Description', 'parseMethod', '(.*)\\((.*)\\)', 'testNullSafeToStringWithBooleanArray(org.springframework.util.ObjectUtilsTests)')",[13596]
"('Description.java', 'org.junit.runner.Description', 'parseMethod', '(.*)\\((.*)\\)', 'testNullSafeHashCodeWithFloatArray(org.springframework.util.ObjectUtilsTests)')",[13155]
"('Description.java', 'org.junit.runner.Description', 'getClassName', '(.*)\\((.*)\\)', 'org.springframework.core.NestedExceptionTests')","[32652, 32700, 32749, 32797]"
"('Description.java', 'org.junit.runner.Description', 'parseMethod', '(.*)\\((.*)\\)', 'testClassNamesToString(org.springframework.util.ClassUtilsTests)')",[15896]
"('Description.java', 'org.junit.runner.Description', 'parseMethod', '(.*)\\((.*)\\)', 'doesNotContainWithNullSubstringDoesNotThrowException(org.springframework.util.AssertTests)')",[4920]
"('Description.java', 'org.junit.runner.Description', 'parseMethod', '(.*)\\((.*)\\)', 'testIsPrimitiveOrWrapperWithFloatPrimitiveClass(org.springframework.util.ObjectUtilsTests)')",[12798]
"('Description.java', 'org.junit.runner.Description', 'parseMethod', '(.*)\\((.*)\\)', 'streamWriterSource(org.springframework.util.xml.StaxResultTests)')",[6509]
"('Description.java', 'org.junit.runner.Description', 'parseMethod', '(.*)\\((.*)\\)', 'testCompareTwoNonOrderedInstancesEndsUpAsSame(org.springframework.core.OrderComparatorTests)')",[8905]
"('Description.java', 'org.junit.runner.Description', 'getClassName', '(.*)\\((.*)\\)', 'testSimpleCollectionInterfaceType(org.springframework.core.GenericTypeResolverTests)')",[4356]
"('Description.java', 'org.junit.runner.Description', 'parseMethod', '(.*)\\((.*)\\)', 'testProgrammaticListIntrospection(org.springframework.core.GenericCollectionTypeResolverTests)')",[8822]
"('Description.java', 'org.junit.runner.Description', 'parseMethod', '(.*)\\((.*)\\)', 'convertCollectionToCollectionSpecialCaseSourceImpl(org.springframework.core.convert.support.DefaultConversionTests)')",[3329]
"('Description.java', 'org.junit.runner.Description', 'parseMethod', '(.*)\\((.*)\\)', 'testRidiculous(org.springframework.util.PatternMatchUtilsTests)')",[14724]
"('Description.java', 'org.junit.runner.Description', 'parseMethod', '(.*)\\((.*)\\)', 'convertObjectToObjectNoValueOFMethodOrConstructor(org.springframework.core.convert.support.DefaultConversionTests)')",[3539]
"('Description.java', 'org.junit.runner.Description', 'parseMethod', '(.*)\\((.*)\\)', 'testNullSafeToStringWithIntArrayBeingEmpty(org.springframework.util.ObjectUtilsTests)')",[11853]
"('Description.java', 'org.junit.runner.Description', 'parseMethod', '(.*)\\((.*)\\)', 'enableIndentingSunnyDayWithCustomKosherIndentAmount(org.springframework.util.xml.TransformerUtilsTests)')",[6383]
"('Description.java', 'org.junit.runner.Description', 'parseMethod', '(.*)\\((.*)\\)', 'testPartial(org.springframework.util.xml.StaxStreamXMLReaderTests)')",[6737]
"('Description.java', 'org.junit.runner.Description', 'parseMethod', '(.*)\\((.*)\\)', 'testSingleResourceOnFileSystem(org.springframework.core.io.support.PathMatchingResourcePatternResolverTests)')",[792]
"('Description.java', 'org.junit.runner.Description', 'parseMethod', '(.*)\\((.*)\\)', 'testVIPWithMethodInvoker(org.springframework.util.MethodInvokerTests)')",[15225]
"('Description.java', 'org.junit.runner.Description', 'parseMethod', '(.*)\\((.*)\\)', 'testHasMethod(org.springframework.util.ClassUtilsTests)')",[15686]
"('Description.java', 'org.junit.runner.Description', 'parseMethod', '(.*)\\((.*)\\)', 'testGetShortNameForMultiDimensionalPrimitiveArrayClass(org.springframework.util.ClassUtilsTests)')",[15476]
"('Description.java', 'org.junit.runner.Description', 'parseMethod', '(.*)\\((.*)\\)', 'testClassResolution(org.springframework.core.GenericCollectionTypeResolverTests)')",[8843]
"('Description.java', 'org.junit.runner.Description', 'parseMethod', '(.*)\\((.*)\\)', 'convertArrayToAbstractCollection(org.springframework.core.convert.support.DefaultConversionTests)')",[2720]
"('Description.java', 'org.junit.runner.Description', 'parseMethod', '(.*)\\((.*)\\)', 'testNullSafeToStringWithFloatArrayEqualToNull(org.springframework.util.ObjectUtilsTests)')",[11811]
"('Description.java', 'org.junit.runner.Description', 'parseMethod', '(.*)\\((.*)\\)', 'convertArrayToPrimitiveArray(org.springframework.core.convert.support.DefaultConversionTests)')",[3224]
"('Description.java', 'org.junit.runner.Description', 'parseMethod', '(.*)\\((.*)\\)', 'md5StringBuilder(org.springframework.util.DigestUtilsTests)')",[4481]
"('AntPathStringMatcher.java', 'org.springframework.util.AntPathStringMatcher', 'matchStrings', '.*\\Q.class\\E', 'LogFactory$1.class')","[23222, 24034]"
"('Description.java', 'org.junit.runner.Description', 'parseMethod', '(.*)\\((.*)\\)', 'equals(org.springframework.util.LinkedMultiValueMapTests)')",[5736]
"('Description.java', 'org.junit.runner.Description', 'parseMethod', '(.*)\\((.*)\\)', 'convertCollectionToObjectWithElementConversion(org.springframework.core.convert.support.DefaultConversionTests)')",[3140]
"('Description.java', 'org.junit.runner.Description', 'parseMethod', '(.*)\\((.*)\\)', 'testValidCache(org.springframework.util.CachingMapDecoratorTests)')",[11415]
"('Description.java', 'org.junit.runner.Description', 'parseMethod', '(.*)\\((.*)\\)', 'testIsEmpty(org.springframework.util.CollectionUtilsTests)')",[7195]
"('Description.java', 'org.junit.runner.Description', 'parseMethod', '(.*)\\((.*)\\)', 'ctorWithNullResourceLoader(org.springframework.core.io.ResourceEditorTests)')",[166]
"('Description.java', 'org.junit.runner.Description', 'parseMethod', '(.*)\\((.*)\\)', 'match(org.springframework.util.AntPathMatcherTests)')",[5674]
"('Description.java', 'org.junit.runner.Description', 'parseMethod', '(.*)\\((.*)\\)', 'testMergePropertiesIntoMap(org.springframework.util.CollectionUtilsTests)')",[7278]
"('Description.java', 'org.junit.runner.Description', 'parseMethod', '(.*)\\((.*)\\)', 'testTrimLeadingWhitespace(org.springframework.util.StringUtilsTests)')",[10449]
"('Description.java', 'org.junit.runner.Description', 'parseMethod', '(.*)\\((.*)\\)', 'testReplaceFromSystemPropertyWithDefault(org.springframework.util.SystemPropertyUtilsTests)')",[5840]
"('Description.java', 'org.junit.runner.Description', 'parseMethod', '(.*)\\((.*)\\)', 'testNullSafeToStringWithDoubleArray(org.springframework.util.ObjectUtilsTests)')",[11706]
"('Description.java', 'org.junit.runner.Description', 'parseMethod', '(.*)\\((.*)\\)', 'testNullSafeHashCodeWithObjectBeingFloatArray(org.springframework.util.ObjectUtilsTests)')",[13428]
"('Description.java', 'org.junit.runner.Description', 'parseMethod', '(.*)\\((.*)\\)', 'testC(org.springframework.core.GenericCollectionTypeResolverTests)')",[8675]
"('Description.java', 'org.junit.runner.Description', 'parseMethod', '(.*)\\((.*)\\)', 'testIsPrimitiveOrWrapperWithCharClass(org.springframework.util.ObjectUtilsTests)')",[12735]
"('Description.java', 'org.junit.runner.Description', 'parseMethod', '(.*)\\((.*)\\)', 'testInitLoggingWithRefreshIntervalAndFileNotFound(org.springframework.util.Log4jConfigurerTests)')",[13889]
"('Description.java', 'org.junit.runner.Description', 'parseMethod', '(.*)\\((.*)\\)', 'testCopyToString(org.springframework.util.FileCopyUtilsTests)')",[11581]
"('Description.java', 'org.junit.runner.Description', 'getClassName', '(.*)\\((.*)\\)', 'md5Hex(org.springframework.util.DigestUtilsTests)')",[4460]
"('Description.java', 'org.junit.runner.Description', 'getClassName', '(.*)\\((.*)\\)', 'testNestedRuntimeExceptionWithNoRootCause(org.springframework.core.NestedExceptionTests)')",[7654]
"('Description.java', 'org.junit.runner.Description', 'parseMethod', '(.*)\\((.*)\\)', 'testNumberToNumber(org.springframework.core.convert.support.DefaultConversionTests)')",[2573]
"('AntPathStringMatcher.java', 'org.springframework.util.AntPathStringMatcher', 'matchStrings', '.*\\Qbla\\E.*', 'XXXblaXXXX')","[26704, 26730, 26756, 26782, 26808, 26834, 26860, 26886, 30455, 30559, 30637, 30741, 30845, 30949, 31027, 31131]"
"('Description.java', 'org.junit.runner.Description', 'parseMethod', '(.*)\\((.*)\\)', 'contentHandlerNamespacesNoPrefixes(org.springframework.util.xml.StaxEventXMLReaderTests)')",[7091]
"('Description.java', 'org.junit.runner.Description', 'parseMethod', '(.*)\\((.*)\\)', 'testTokenizeToStringArray(org.springframework.util.StringUtilsTests)')",[10953]
"('Description.java', 'org.junit.runner.Description', 'parseMethod', '(.*)\\((.*)\\)', 'testIsArrayOfPrimitivesWithNonArray(org.springframework.util.ObjectUtilsTests)')",[12609]
"('Description.java', 'org.junit.runner.Description', 'parseMethod', '(.*)\\((.*)\\)', 'testTrimAllWhitespace(org.springframework.util.StringUtilsTests)')",[10428]
"('Description.java', 'org.junit.runner.Description', 'parseMethod', '(.*)\\((.*)\\)', 'testD(org.springframework.core.GenericCollectionTypeResolverTests)')",[8696]
"('Description.java', 'org.junit.runner.Description', 'parseMethod', '(.*)\\((.*)\\)', 'testStringToCharacterEmptyString(org.springframework.core.convert.support.DefaultConversionTests)')",[1922]
"('Description.java', 'org.junit.runner.Description', 'getClassName', '(.*)\\((.*)\\)', 'org.springframework.util.PropertiesPersisterTests')","[37696, 37744, 37793, 37841]"
"('Description.java', 'org.junit.runner.Description', 'parseMethod', '(.*)\\((.*)\\)', 'testStringToLong(org.springframework.core.convert.support.DefaultConversionTests)')",[2216]
"('AntPathStringMatcher.java', 'org.springframework.util.AntPathStringMatcher', 'matchStrings', '.*', 'test')","[25456, 27224, 29155]"
"('Description.java', 'org.junit.runner.Description', 'parseMethod', '(.*)\\((.*)\\)', 'testWithClass(org.springframework.util.AutoPopulatingListTests)')",[14933]
"('Description.java', 'org.junit.runner.Description', 'parseMethod', '(.*)\\((.*)\\)', 'testStartsEndsBetween(org.springframework.util.PatternMatchUtilsTests)')",[14703]
"('Description.java', 'org.junit.runner.Description', 'parseMethod', '(.*)\\((.*)\\)', 'withGenericArrayTypes(org.springframework.util.TypeUtilsTests)')",[6154]
"('Description.java', 'org.junit.runner.Description', 'getClassName', '(.*)\\((.*)\\)', 'org.springframework.core.DefaultControlFlowTests')","[35756, 35804, 35853, 35901]"
"('Description.java', 'org.junit.runner.Description', 'parseMethod', '(.*)\\((.*)\\)', 'testOverloadedMethod(org.springframework.core.LocalVariableTableParameterNameDiscovererTests)')",[9385]
"('Description.java', 'org.junit.runner.Description', 'parseMethod', '(.*)\\((.*)\\)', 'isNullDoesNotThrowExceptionIfArgumentIsNullWithMessage(org.springframework.util.AssertTests)')",[4731]
"('Description.java', 'org.junit.runner.Description', 'parseMethod', '(.*)\\((.*)\\)', 'testNonAnnotatedClassDoesntMatch(org.springframework.core.type.AnnotationTypeFilterTests)')",[8363]
"('AntPathStringMatcher.java', 'org.springframework.util.AntPathStringMatcher', 'matchStrings', '..\\Qst\\E', 'test')","[25274, 27042, 28973]"
"('Description.java', 'org.junit.runner.Description', 'parseMethod', '(.*)\\((.*)\\)', 'testNullSafeToStringWithStringArray(org.springframework.util.ObjectUtilsTests)')",[12105]
"('Description.java', 'org.junit.runner.Description', 'parseMethod', '(.*)\\((.*)\\)', 'testFailureToStartBeforeStop(org.springframework.util.StopWatchTests)')",[14891]
"('AntPathStringMatcher.java', 'org.springframework.util.AntPathStringMatcher', 'matchStrings', '.*\\Q.class\\E', 'LogFactory$3.class')","[23278, 24090]"
"('AntPathStringMatcher.java', 'org.springframework.util.AntPathStringMatcher', 'matchStrings', '.*\\Q/\\E.*', 'tsttst')",[27562]
"('Description.java', 'org.junit.runner.Description', 'parseMethod', '(.*)\\((.*)\\)', 'convertStringToArrayWithElementConversion(org.springframework.core.convert.support.DefaultConversionTests)')",[2825]
"('AntPathStringMatcher.java', 'org.springframework.util.AntPathStringMatcher', 'matchStrings', '\\Qh\\E.\\Qtels\\E', 'hotels')",[28316]
"('Description.java', 'org.junit.runner.Description', 'getClassName', '(.*)\\((.*)\\)', 'listDescriptor(org.springframework.core.convert.TypeDescriptorTests)')",[1734]
"('Description.java', 'org.junit.runner.Description', 'parseMethod', '(.*)\\((.*)\\)', 'testBooleanComparatorTrueHigh(org.springframework.util.comparator.ComparatorTests)')",[6237]
"('Description.java', 'org.junit.runner.Description', 'parseMethod', '(.*)\\((.*)\\)', 'testListToIterableConversion(org.springframework.core.convert.support.GenericConversionServiceTests)')",[3958]
"('Description.java', 'org.junit.runner.Description', 'parseMethod', '(.*)\\((.*)\\)', 'add(org.springframework.util.LinkedMultiValueMapTests)')",[5695]
"('Description.java', 'org.junit.runner.Description', 'parseMethod', '(.*)\\((.*)\\)', 'testNullSafeHashCodeWithBooleanArray(org.springframework.util.ObjectUtilsTests)')",[12987]
"('Description.java', 'org.junit.runner.Description', 'parseMethod', '(.*)\\((.*)\\)', 'testEquals(org.springframework.core.convert.TypeDescriptorTests)')",[1860]
"('AntPathStringMatcher.java', 'org.springframework.util.AntPathStringMatcher', 'matchStrings', '\\Qprojects\\E', 'projects')","[16464, 16944, 17424, 17904, 18384, 18864, 19344, 19824, 20304, 20784, 21264, 21744, 22224]"
"('Description.java', 'org.junit.runner.Description', 'parseMethod', '(.*)\\((.*)\\)', 'testNullSafeHashCodeWithCharArray(org.springframework.util.ObjectUtilsTests)')",[13071]
"('Description.java', 'org.junit.runner.Description', 'parseMethod', '(.*)\\((.*)\\)', 'convertEmptyArrayToString(org.springframework.core.convert.support.DefaultConversionTests)')",[2783]
"('Description.java', 'org.junit.runner.Description', 'parseMethod', '(.*)\\((.*)\\)', 'testParseBigDecimalNumber3(org.springframework.util.NumberUtilsTests)')",[14223]
"('Description.java', 'org.junit.runner.Description', 'parseMethod', '(.*)\\((.*)\\)', 'testFindMethodAnnotationOnLeaf(org.springframework.core.annotation.AnnotationUtilsTests)')",[1064]
"('AntPathStringMatcher.java', 'org.springframework.util.AntPathStringMatcher', 'matchStrings', '.*\\Q/\\E.*', 'test/')",[27354]
"('Description.java', 'org.junit.runner.Description', 'parseMethod', '(.*)\\((.*)\\)', 'testIsArrayOfPrimitivesWithObjectArray(org.springframework.util.ObjectUtilsTests)')",[12588]
"('AntPathStringMatcher.java', 'org.springframework.util.AntPathStringMatcher', 'matchStrings', '\\Qtest-classes\\E', 'test-classes')","[16560, 17040]"
"('Description.java', 'org.junit.runner.Description', 'parseMethod', '(.*)\\((.*)\\)', 'rejectsNullDest(org.springframework.util.ReflectionUtilsTests)')",[5339]
"('Description.java', 'org.junit.runner.Description', 'parseMethod', '(.*)\\((.*)\\)', 'testSPR2454(org.springframework.core.BridgeMethodResolverTests)')",[1483]
"('Description.java', 'org.junit.runner.Description', 'getClassName', '(.*)\\((.*)\\)', 'contentHandlerNamespacesNoPrefixes(org.springframework.util.xml.StaxEventXMLReaderTests)')",[7111]
"('Description.java', 'org.junit.runner.Description', 'parseMethod', '(.*)\\((.*)\\)', 'testCodeFound(org.springframework.core.enums.LabeledEnumTests)')",[10010]
"('Description.java', 'org.junit.runner.Description', 'getClassName', '(.*)\\((.*)\\)', 'testPropertiesPersister(org.springframework.util.PropertiesPersisterTests)')",[14411]
"('Description.java', 'org.junit.runner.Description', 'getClassName', '(.*)\\((.*)\\)', 'testGetValuesWithWhitespacedStringPrefix(org.springframework.core.ConstantsTests)')",[9489]
"('Description.java', 'org.junit.runner.Description', 'parseMethod', '(.*)\\((.*)\\)', 'testLinkedMap(org.springframework.core.CollectionFactoryTests)')",[8968]
"('AntPathStringMatcher.java', 'org.springframework.util.AntPathStringMatcher', 'matchStrings', '\\QResource\\E.*\\QEditor.class\\E', 'ResourcePatternResolver.class')",[18672]
"('AntPathStringMatcher.java', 'org.springframework.util.AntPathStringMatcher', 'matchStrings', '\\Qsupport\\E', 'support')","[16720, 17200, 17680, 18160, 18640, 19120, 19600, 20080, 20560, 21040, 21520, 22000, 22480]"
"('Description.java', 'org.junit.runner.Description', 'getClassName', '(.*)\\((.*)\\)', 'serializeAndDeserializeString(org.springframework.core.serializer.SerializationConverterTests)')",[41]
"('AntPathStringMatcher.java', 'org.springframework.util.AntPathStringMatcher', 'matchStrings', '\\Qbla\\E.*\\Qbla\\E', 'blaXXXbla')","[26548, 28134, 30273]"
"('Description.java', 'org.junit.runner.Description', 'getClassName', '(.*)\\((.*)\\)', 'testWithClass(org.springframework.util.AutoPopulatingListTests)')",[14953]
"('Description.java', 'org.junit.runner.Description', 'parseMethod', '(.*)\\((.*)\\)', 'testAbstractResourceExceptions(org.springframework.core.io.ResourceTests)')",[416]
"('Description.java', 'org.junit.runner.Description', 'parseMethod', '(.*)\\((.*)\\)', 'testGetShortNameForMultiDimensionalObjectArrayClass(org.springframework.util.ClassUtilsTests)')",[15434]
"('AntPathStringMatcher.java', 'org.springframework.util.AntPathStringMatcher', 'matchStrings', '(.*)', '2')",[28446]
"('AntPathStringMatcher.java', 'org.springframework.util.AntPathStringMatcher', 'matchStrings', '\\Qbookings\\E', 'bookings')",[28420]
"('Description.java', 'org.junit.runner.Description', 'parseMethod', '(.*)\\((.*)\\)', 'testGetQualifiedNameForPrimitiveArrayClass(org.springframework.util.ClassUtilsTests)')",[15644]
"('AntPathStringMatcher.java', 'org.springframework.util.AntPathStringMatcher', 'matchStrings', '\\Qtest\\E.*', 'tsttest')","[25872, 27484, 29545]"
"('Description.java', 'org.junit.runner.Description', 'parseMethod', '(.*)\\((.*)\\)', 'testDelimitedListToStringArrayWithNullDelimiter(org.springframework.util.StringUtilsTests)')",[11121]
"('Description.java', 'org.junit.runner.Description', 'parseMethod', '(.*)\\((.*)\\)', 'testCustomerWithMethodInvoker(org.springframework.util.MethodInvokerTests)')",[15183]
"('AntPathStringMatcher.java', 'org.springframework.util.AntPathStringMatcher', 'matchStrings', '.*\\Qtest\\E.*', 'tsttst')","[26002, 27510, 29649]"
"('Description.java', 'org.junit.runner.Description', 'parseMethod', '(.*)\\((.*)\\)', 'testInheritedAnnotationFromBaseClassDoesMatch(org.springframework.core.type.AnnotationTypeFilterTests)')",[8321]
"('Description.java', 'org.junit.runner.Description', 'parseMethod', '(.*)\\((.*)\\)', 'testConsParameterNameDiscoveryNoArgs(org.springframework.core.LocalVariableTableParameterNameDiscovererTests)')",[9280]
"('AntPathStringMatcher.java', 'org.springframework.util.AntPathStringMatcher', 'matchStrings', '\\QResource\\E.*\\QEditor.class\\E', 'PropertiesLoaderSupport.class')",[21552]
"('Description.java', 'org.junit.runner.Description', 'parseMethod', '(.*)\\((.*)\\)', 'testNullSafeHashCodeWithDoubleArrayEqualToNull(org.springframework.util.ObjectUtilsTests)')",[13134]
"('Description.java', 'org.junit.runner.Description', 'parseMethod', '(.*)\\((.*)\\)', 'testStringToLocale(org.springframework.core.convert.support.DefaultConversionTests)')",[2531]
"('Description.java', 'org.junit.runner.Description', 'parseMethod', '(.*)\\((.*)\\)', 'testNullSafeToStringWithLongArrayBeingEmpty(org.springframework.util.ObjectUtilsTests)')",[11916]
"('AntPathStringMatcher.java', 'org.springframework.util.AntPathStringMatcher', 'matchStrings', '\\Qbla\\E', 'testing')","[30481, 30507, 30663, 30689, 30767, 30793, 30871, 30897, 31053, 31079, 31183]"
"('AntPathStringMatcher.java', 'org.springframework.util.AntPathStringMatcher', 'matchStrings', '.*\\Q/\\E.*', 'test/test')",[27380]
"('Description.java', 'org.junit.runner.Description', 'parseMethod', '(.*)\\((.*)\\)', 'testDeleteAny(org.springframework.util.StringUtilsTests)')",[10596]
"('Description.java', 'org.junit.runner.Description', 'parseMethod', '(.*)\\((.*)\\)', 'assertNotEmptyWithCollectionSunnyDay(org.springframework.util.AssertTests)')",[5004]
"('Description.java', 'org.junit.runner.Description', 'parseMethod', '(.*)\\((.*)\\)', 'testNullSafeToStringWithCharArrayEqualToNull(org.springframework.util.ObjectUtilsTests)')",[11685]
"('Description.java', 'org.junit.runner.Description', 'parseMethod', '(.*)\\((.*)\\)', 'testNullSafeToStringWithShortArrayEqualToNull(org.springframework.util.ObjectUtilsTests)')",[12084]
"('Description.java', 'org.junit.runner.Description', 'parseMethod', '(.*)\\((.*)\\)', 'contentHandlerNamespacePrefixes(org.springframework.util.xml.StaxEventContentHandlerTests)')",[7070]
"('AntPathStringMatcher.java', 'org.springframework.util.AntPathStringMatcher', 'matchStrings', '(.*)', '1')","[28290, 28342, 28394, 28472]"
"('Description.java', 'org.junit.runner.Description', 'parseMethod', '(.*)\\((.*)\\)', 'testB2(org.springframework.core.GenericCollectionTypeResolverTests)')",[8633]
"('Description.java', 'org.junit.runner.Description', 'parseMethod', '(.*)\\((.*)\\)', 'testNullSafeHashCodeWithObjectArray(org.springframework.util.ObjectUtilsTests)')",[13302]
"('Description.java', 'org.junit.runner.Description', 'parseMethod', '(.*)\\((.*)\\)', 'convertObjectToObjectValueOfMethod(org.springframework.core.convert.support.DefaultConversionTests)')",[3497]
"('Description.java', 'org.junit.runner.Description', 'parseMethod', '(.*)\\((.*)\\)', 'testSPR3173(org.springframework.core.BridgeMethodResolverTests)')",[1588]
"('Description.java', 'org.junit.runner.Description', 'parseMethod', '(.*)\\((.*)\\)', 'testWithElementFactoryAndUserSuppliedBackingList(org.springframework.util.AutoPopulatingListTests)')",[15016]
"('Description.java', 'org.junit.runner.Description', 'parseMethod', '(.*)\\((.*)\\)', 'testGetDefaultValueFromAnnotationType(org.springframework.core.annotation.AnnotationUtilsTests)')",[1001]
"('Description.java', 'org.junit.runner.Description', 'parseMethod', '(.*)\\((.*)\\)', 'testB(org.springframework.core.GenericCollectionTypeResolverTests)')",[8612]
"('Description.java', 'org.junit.runner.Description', 'parseMethod', '(.*)\\((.*)\\)', 'convertArrayToCollectionInterface(org.springframework.core.convert.support.DefaultConversionTests)')",[2657]
"('Description.java', 'org.junit.runner.Description', 'parseMethod', '(.*)\\((.*)\\)', 'convertArrayToString(org.springframework.core.convert.support.DefaultConversionTests)')",[2741]
"('Description.java', 'org.junit.runner.Description', 'parseMethod', '(.*)\\((.*)\\)', 'contentHandlerNoNamespacesPrefixes(org.springframework.util.xml.StaxStreamXMLReaderTests)')",[6820]
"('Description.java', 'org.junit.runner.Description', 'parseMethod', '(.*)\\((.*)\\)', 'withWildcardTypes(org.springframework.util.TypeUtilsTests)')",[6133]
"('Description.java', 'org.junit.runner.Description', 'parseMethod', '(.*)\\((.*)\\)', 'findMethod(org.springframework.util.ReflectionUtilsTests)')",[5151]
"('Description.java', 'org.junit.runner.Description', 'parseMethod', '(.*)\\((.*)\\)', 'testNullSafeHashCodeWithObjectBeingShortArray(org.springframework.util.ObjectUtilsTests)')",[13512]
"('Description.java', 'org.junit.runner.Description', 'parseMethod', '(.*)\\((.*)\\)', 'testNullSafeHashCodeWithObjectBeingDoubleArray(org.springframework.util.ObjectUtilsTests)')",[13407]
"('Description.java', 'org.junit.runner.Description', 'getClassName', '(.*)\\((.*)\\)', 'testSet(org.springframework.core.style.ToStringCreatorTests)')",[7758]
"('AntPathStringMatcher.java', 'org.springframework.util.AntPathStringMatcher', 'matchStrings', '\\Qhotels\\E', 'hotels')","[28264, 28368, 28524]"
"('Description.java', 'org.junit.runner.Description', 'parseMethod', '(.*)\\((.*)\\)', 'getFirst(org.springframework.util.LinkedMultiValueMapTests)')",[5778]
"('Description.java', 'org.junit.runner.Description', 'parseMethod', '(.*)\\((.*)\\)', 'testForNameWithPrimitiveArrays(org.springframework.util.ClassUtilsTests)')",[15350]
"('Description.java', 'org.junit.runner.Description', 'parseMethod', '(.*)\\((.*)\\)', 'testNestedRuntimeExceptionWithRootCause(org.springframework.core.NestedExceptionTests)')",[7696]
"('Description.java', 'org.junit.runner.Description', 'parseMethod', '(.*)\\((.*)\\)', 'multiplePrefixes(org.springframework.util.xml.SimpleNamespaceContextTests)')",[6966]
"('AntPathStringMatcher.java', 'org.springframework.util.AntPathStringMatcher', 'matchStrings', '\\Qbla\\E', 'x')",[31261]
"('Description.java', 'org.junit.runner.Description', 'parseMethod', '(.*)\\((.*)\\)', 'testStringToInteger(org.springframework.core.convert.support.DefaultConversionTests)')",[2174]
"('Description.java', 'org.junit.runner.Description', 'parseMethod', '(.*)\\((.*)\\)', 'testHashCodeWithLong(org.springframework.util.ObjectUtilsTests)')",[12504]
"('Description.java', 'org.junit.runner.Description', 'parseMethod', '(.*)\\((.*)\\)', 'testStringToByte(org.springframework.core.convert.support.DefaultConversionTests)')",[2090]
"('Description.java', 'org.junit.runner.Description', 'getClassName', '(.*)\\((.*)\\)', 'org.springframework.util.LinkedMultiValueMapTests')","[31405, 31428, 31452, 31475]"
"('Description.java', 'org.junit.runner.Description', 'getClassName', '(.*)\\((.*)\\)', 'testA(org.springframework.core.GenericCollectionTypeResolverTests)')",[8591]
"('Description.java', 'org.junit.runner.Description', 'parseMethod', '(.*)\\((.*)\\)', 'getPrefix(org.springframework.util.xml.SimpleNamespaceContextTests)')",[7008]
"('Description.java', 'org.junit.runner.Description', 'parseMethod', '(.*)\\((.*)\\)', 'classLoaderConstructorRaisesExceptionWithFullyQualifiedPath(org.springframework.core.io.ClassPathResourceTests)')",[333]
"('Description.java', 'org.junit.runner.Description', 'parseMethod', '(.*)\\((.*)\\)', 'convertObjectToObjectFinderMethodWithNull(org.springframework.core.convert.support.DefaultConversionTests)')",[3581]
"('Description.java', 'org.junit.runner.Description', 'getClassName', '(.*)\\((.*)\\)', 'testCopyFromInputStream(org.springframework.util.FileCopyUtilsTests)')",[11476]
"('Description.java', 'org.junit.runner.Description', 'getClassName', '(.*)\\((.*)\\)', 'testOverloadedStaticMethod(org.springframework.util.ClassUtilsTests)')",[15266]
"('Description.java', 'org.junit.runner.Description', 'parseMethod', '(.*)\\((.*)\\)', 'testMethodParameterNameDiscoveryWithArgs(org.springframework.core.LocalVariableTableParameterNameDiscovererTests)')",[9259]
"('Description.java', 'org.junit.runner.Description', 'parseMethod', '(.*)\\((.*)\\)', 'testNullSafeHashCodeWithObjectEqualToNull(org.springframework.util.ObjectUtilsTests)')",[13533]
"('Description.java', 'org.junit.runner.Description', 'parseMethod', '(.*)\\((.*)\\)', 'testReplaceFromSystemPropertyWithExpressionContainingDefault(org.springframework.util.SystemPropertyUtilsTests)')",[5882]
"('Description.java', 'org.junit.runner.Description', 'getClassName', '(.*)\\((.*)\\)', 'org.springframework.util.AssertTests')","[25006, 25029, 25053, 25076]"
"('Description.java', 'org.junit.runner.Description', 'parseMethod', '(.*)\\((.*)\\)', 'testNoArgsStaticMethod(org.springframework.util.ClassUtilsTests)')",[15770]
"('Description.java', 'org.junit.runner.Description', 'parseMethod', '(.*)\\((.*)\\)', 'testAnnotationPatternNoMathces(org.springframework.core.type.AspectJTypeFilterTests)')",[7967]
"('AntPathStringMatcher.java', 'org.springframework.util.AntPathStringMatcher', 'matchStrings', '([\\w\\.]+)\\Q-sources-\\E([\\w\\.]+)\\Q.jar\\E', 'com.example-sources-1.0.0.jar')",[28680]
"('AntPathStringMatcher.java', 'org.springframework.util.AntPathStringMatcher', 'matchStrings', '(.*)\\Q.\\E(.*)', 'test.html')",[28628]
"('Description.java', 'org.junit.runner.Description', 'parseMethod', '(.*)\\((.*)\\)', 'testInitLoggingWithClasspath(org.springframework.util.Log4jConfigurerTests)')",[13743]
"('Description.java', 'org.junit.runner.Description', 'getClassName', '(.*)\\((.*)\\)', 'testWithProperties(org.springframework.util.PropertyPlaceholderHelperTests)')",[7487]
"('Description.java', 'org.junit.runner.Description', 'parseMethod', '(.*)\\((.*)\\)', 'testAddObjectToArrayWhenEmpty(org.springframework.util.ObjectUtilsTests)')",[12294]
"('Description.java', 'org.junit.runner.Description', 'parseMethod', '(.*)\\((.*)\\)', 'testInputStreamResource(org.springframework.core.io.ResourceTests)')",[563]
"('Description.java', 'org.junit.runner.Description', 'parseMethod', '(.*)\\((.*)\\)', 'testConstants(org.springframework.core.ConstantsTests)')",[9552]
"('Description.java', 'org.junit.runner.Description', 'parseMethod', '(.*)\\((.*)\\)', 'testHasTextBlank(org.springframework.util.StringUtilsTests)')",[10303]
"('Description.java', 'org.junit.runner.Description', 'getClassName', '(.*)\\((.*)\\)', 'testThisClassPlease(org.springframework.core.Jdk14ControlFlowTests)')",[9865]
"('AntPathStringMatcher.java', 'org.springframework.util.AntPathStringMatcher', 'matchStrings', '.*\\Q.class\\E', 'Log.class')","[23166, 23978]"
"('Description.java', 'org.junit.runner.Description', 'parseMethod', '(.*)\\((.*)\\)', 'testMemUsage(org.springframework.core.LocalVariableTableParameterNameDiscovererTests)')",[9448]
"('Description.java', 'org.junit.runner.Description', 'parseMethod', '(.*)\\((.*)\\)', 'convertCollectionToCollectionNotGeneric(org.springframework.core.convert.support.DefaultConversionTests)')",[3308]
"('Description.java', 'org.junit.runner.Description', 'getClassName', '(.*)\\((.*)\\)', 'testNoParametersDiscoverers(org.springframework.core.PrioritizedParameterNameDiscovererTests)')",[8404]
"('AntPathStringMatcher.java', 'org.springframework.util.AntPathStringMatcher', 'matchStrings', '.*\\Q.class\\E', 'LogFactory$4.class')","[23306, 24118]"
"('Description.java', 'org.junit.runner.Description', 'parseMethod', '(.*)\\((.*)\\)', 'testThisClassPlease(org.springframework.core.DefaultControlFlowTests)')",[9907]
"('Description.java', 'org.junit.runner.Description', 'parseMethod', '(.*)\\((.*)\\)', 'testNamePatternNoMatches(org.springframework.core.type.AspectJTypeFilterTests)')",[8051]
"('AntPathStringMatcher.java', 'org.springframework.util.AntPathStringMatcher', 'matchStrings', '\\QRepoReaper\\E', 'RepoReaper')","[16368, 16848, 17328, 17808, 18288, 18768, 19248, 19728, 20208, 20688, 21168, 21648, 22128]"
"('Description.java', 'org.junit.runner.Description', 'getClassName', '(.*)\\((.*)\\)', 'org.springframework.core.io.ResourceEditorTests')","[16014, 16037, 16061, 16084]"
"('Description.java', 'org.junit.runner.Description', 'getClassName', '(.*)\\((.*)\\)', 'testFindBridgedMethod(org.springframework.core.BridgeMethodResolverTests)')",[1210]
"('Description.java', 'org.junit.runner.Description', 'parseMethod', '(.*)\\((.*)\\)', 'testContainsWhitespace(org.springframework.util.StringUtilsTests)')",[10386]
"('Description.java', 'org.junit.runner.Description', 'parseMethod', '(.*)\\((.*)\\)', 'testOrderedParameterDiscoverers2(org.springframework.core.PrioritizedParameterNameDiscovererTests)')",[8446]
"('Description.java', 'org.junit.runner.Description', 'getClassName', '(.*)\\((.*)\\)', 'org.springframework.util.xml.SimpleNamespaceContextTests')","[32251, 32274, 32298, 32321]"
"('Description.java', 'org.junit.runner.Description', 'parseMethod', '(.*)\\((.*)\\)', 'testCopyFromString(org.springframework.util.FileCopyUtilsTests)')",[11560]
"('Description.java', 'org.junit.runner.Description', 'parseMethod', '(.*)\\((.*)\\)', 'stateWithFalseExpressionThrowsException(org.springframework.util.AssertTests)')",[5109]
"('Description.java', 'org.junit.runner.Description', 'getClassName', '(.*)\\((.*)\\)', 'testNullSafeToStringWithByteArrayEqualToNull(org.springframework.util.ObjectUtilsTests)')",[11622]
"('Description.java', 'org.junit.runner.Description', 'getClassName', '(.*)\\((.*)\\)', 'streamWriterSource(org.springframework.util.xml.StaxResultTests)')",[6529]
"('Description.java', 'org.junit.runner.Description', 'getClassName', '(.*)\\((.*)\\)', 'testMethodParameterNameDiscoveryNoArgs(org.springframework.core.LocalVariableTableParameterNameDiscovererTests)')",[9238]
"('Description.java', 'org.junit.runner.Description', 'parseMethod', '(.*)\\((.*)\\)', 'testUnderClassAndMethod(org.springframework.core.Jdk14ControlFlowTests)')",[9886]
"('Description.java', 'org.junit.runner.Description', 'parseMethod', '(.*)\\((.*)\\)', 'testGetDefaultValueFromAnnotation(org.springframework.core.annotation.AnnotationUtilsTests)')",[980]
"('Description.java', 'org.junit.runner.Description', 'parseMethod', '(.*)\\((.*)\\)', 'testNullSafeComparatorNullsLow(org.springframework.util.comparator.ComparatorTests)')",[6258]
"('Description.java', 'org.junit.runner.Description', 'parseMethod', '(.*)\\((.*)\\)', 'validCopy(org.springframework.util.ReflectionUtilsTests)')",[5360]
"('Description.java', 'org.junit.runner.Description', 'parseMethod', '(.*)\\((.*)\\)', 'testNullSafeHashCodeWithIntArray(org.springframework.util.ObjectUtilsTests)')",[13197]
"('Description.java', 'org.junit.runner.Description', 'parseMethod', '(.*)\\((.*)\\)', 'convertCollectionToCollectionNull(org.springframework.core.convert.support.DefaultConversionTests)')",[3287]
"('Description.java', 'org.junit.runner.Description', 'parseMethod', '(.*)\\((.*)\\)', 'testArray(org.springframework.core.ConventionsTests)')",[9134]
"('Description.java', 'org.junit.runner.Description', 'parseMethod', '(.*)\\((.*)\\)', 'isInstanceofClassWithNullInstanceThrowsException(org.springframework.util.AssertTests)')",[5088]
"('Description.java', 'org.junit.runner.Description', 'parseMethod', '(.*)\\((.*)\\)', 'testD3(org.springframework.core.GenericCollectionTypeResolverTests)')",[8738]
"('Description.java', 'org.junit.runner.Description', 'getClassName', '(.*)\\((.*)\\)', 'org.springframework.core.io.ResourceTests')","[16202, 16225, 16249, 16272]"
"('Description.java', 'org.junit.runner.Description', 'parseMethod', '(.*)\\((.*)\\)', 'convertCollectionToObject(org.springframework.core.convert.support.DefaultConversionTests)')",[3119]
"('Description.java', 'org.junit.runner.Description', 'parseMethod', '(.*)\\((.*)\\)', 'testHasUniqueObject(org.springframework.util.CollectionUtilsTests)')",[7446]
"('Description.java', 'org.junit.runner.Description', 'parseMethod', '(.*)\\((.*)\\)', 'validCopyToSubTypeWithFinalField(org.springframework.util.ReflectionUtilsTests)')",[5423]
"('Description.java', 'org.junit.runner.Description', 'parseMethod', '(.*)\\((.*)\\)', 'testWithGenericParameter(org.springframework.core.BridgeMethodResolverTests)')",[1420]
"('Description.java', 'org.junit.runner.Description', 'parseMethod', '(.*)\\((.*)\\)', 'testSPR2583(org.springframework.core.BridgeMethodResolverTests)')",[1462]
"('Description.java', 'org.junit.runner.Description', 'parseMethod', '(.*)\\((.*)\\)', 'testCommaDelimitedListToStringArrayMatchWords(org.springframework.util.StringUtilsTests)')",[11142]
"('Description.java', 'org.junit.runner.Description', 'parseMethod', '(.*)\\((.*)\\)', 'testBigDecimalToBigInteger(org.springframework.util.NumberUtilsTests)')",[14139]
"('Description.java', 'org.junit.runner.Description', 'parseMethod', '(.*)\\((.*)\\)', 'testStaticMethodParameterNameDiscoveryNoArgs(org.springframework.core.LocalVariableTableParameterNameDiscovererTests)')",[9322]
"('Description.java', 'org.junit.runner.Description', 'parseMethod', '(.*)\\((.*)\\)', 'testConsParameterNameDiscoveryArgs(org.springframework.core.LocalVariableTableParameterNameDiscovererTests)')",[9301]
"('Description.java', 'org.junit.runner.Description', 'parseMethod', '(.*)\\((.*)\\)', 'testAttributeNames(org.springframework.core.AttributeAccessorSupportTests)')",[8550]
"('Description.java', 'org.junit.runner.Description', 'parseMethod', '(.*)\\((.*)\\)', 'testClassPathResourceWithRelativePath(org.springframework.core.io.ResourceTests)')",[521]
"('Description.java', 'org.junit.runner.Description', 'parseMethod', '(.*)\\((.*)\\)', 'testNullSafeToStringWithObjectArray(org.springframework.util.ObjectUtilsTests)')",[11979]
"('Description.java', 'org.junit.runner.Description', 'parseMethod', '(.*)\\((.*)\\)', 'testUnresolvedPlaceholderIsIgnored(org.springframework.util.PropertyPlaceholderHelperTests)')",[7592]
"('Description.java', 'org.junit.runner.Description', 'getClassName', '(.*)\\((.*)\\)', 'org.springframework.util.Log4jConfigurerTests')","[37114, 37162, 37211, 37259]"
"('Description.java', 'org.junit.runner.Description', 'parseMethod', '(.*)\\((.*)\\)', 'testSimpleSuperclassType(org.springframework.core.GenericTypeResolverTests)')",[4377]
"('Description.java', 'org.junit.runner.Description', 'parseMethod', '(.*)\\((.*)\\)', 'testClasspathStarWithPatternOnFileSystem(org.springframework.core.io.support.PathMatchingResourcePatternResolverTests)')",[834]
"('Description.java', 'org.junit.runner.Description', 'parseMethod', '(.*)\\((.*)\\)', 'testComparableComparator(org.springframework.util.comparator.ComparatorTests)')",[6321]
"('Description.java', 'org.junit.runner.Description', 'parseMethod', '(.*)\\((.*)\\)', 'testPropertiesPersisterWithReaderAndHeader(org.springframework.util.PropertiesPersisterTests)')",[14537]
"('Description.java', 'org.junit.runner.Description', 'getClassName', '(.*)\\((.*)\\)', 'org.springframework.core.GenericTypeResolverTests')","[24724, 24747, 24771, 24794]"
"('Description.java', 'org.junit.runner.Description', 'parseMethod', '(.*)\\((.*)\\)', 'testPropertiesPersisterWithEmptyValue(org.springframework.util.PropertiesPersisterTests)')",[14474]
"('Description.java', 'org.junit.runner.Description', 'parseMethod', '(.*)\\((.*)\\)', 'testSPR3357(org.springframework.core.BridgeMethodResolverTests)')",[1651]
"('Description.java', 'org.junit.runner.Description', 'parseMethod', '(.*)\\((.*)\\)', 'testContainsInstanceWithNullInstance(org.springframework.util.CollectionUtilsTests)')",[7404]
"('Description.java', 'org.junit.runner.Description', 'parseMethod', '(.*)\\((.*)\\)', 'testContainsAny(org.springframework.util.CollectionUtilsTests)')",[7320]
"('Description.java', 'org.junit.runner.Description', 'parseMethod', '(.*)\\((.*)\\)', 'testMethodParameterNameDiscoveryNoArgs(org.springframework.core.LocalVariableTableParameterNameDiscovererTests)')",[9218]
"('Description.java', 'org.junit.runner.Description', 'parseMethod', '(.*)\\((.*)\\)', 'testFindMethodAnnotationNotAnnotated(org.springframework.core.annotation.AnnotationUtilsTests)')",[1127]
"('Description.java', 'org.junit.runner.Description', 'getClassName', '(.*)\\((.*)\\)', 'streamReaderSourceToDOMResult(org.springframework.util.xml.StaxSourceTests)')",[6591]
"('Description.java', 'org.junit.runner.Description', 'parseMethod', '(.*)\\((.*)\\)', 'testHashCodeWithFloat(org.springframework.util.ObjectUtilsTests)')",[12483]
"('Description.java', 'org.junit.runner.Description', 'parseMethod', '(.*)\\((.*)\\)', 'testNamePatternMatches(org.springframework.core.type.AspectJTypeFilterTests)')",[8030]
"('Description.java', 'org.junit.runner.Description', 'getClassName', '(.*)\\((.*)\\)', 'org.springframework.util.CachingMapDecoratorTests')","[36532, 36580, 36629, 36677]"
"('Description.java', 'org.junit.runner.Description', 'parseMethod', '(.*)\\((.*)\\)', 'findField(org.springframework.util.ReflectionUtilsTests)')",[5192]
"('Description.java', 'org.junit.runner.Description', 'parseMethod', '(.*)\\((.*)\\)', 'testNullSafeToStringWithObjectArrayBeingEmpty(org.springframework.util.ObjectUtilsTests)')",[12000]
"('Description.java', 'org.junit.runner.Description', 'parseMethod', '(.*)\\((.*)\\)', 'testCompoundComparatorEmpty(org.springframework.util.comparator.ComparatorTests)')",[6300]
"('Description.java', 'org.junit.runner.Description', 'parseMethod', '(.*)\\((.*)\\)', 'testIntegerToString(org.springframework.core.convert.support.DefaultConversionTests)')",[2195]
"('AntPathStringMatcher.java', 'org.springframework.util.AntPathStringMatcher', 'matchStrings', '\\QResource\\E.*\\QEditor.class\\E', 'PropertiesLoaderUtils.class')",[18192]
"('Description.java', 'org.junit.runner.Description', 'parseMethod', '(.*)\\((.*)\\)', 'testTrimTrailingCharacter(org.springframework.util.StringUtilsTests)')",[10533]
"('AntPathStringMatcher.java', 'org.springframework.util.AntPathStringMatcher', 'matchStrings', '\\Qhotels\\E', 'booking')","[28707, 28734, 28761]"
"('Description.java', 'org.junit.runner.Description', 'getClassName', '(.*)\\((.*)\\)', 'org.springframework.util.xml.StaxStreamContentHandlerTests')","[32063, 32086, 32110, 32133]"
"('AntPathStringMatcher.java', 'org.springframework.util.AntPathStringMatcher', 'matchStrings', '\\Qbla\\E', 'bla')","[26470, 26496, 26522, 27952, 27978, 28004, 28030, 28082, 28108, 30091, 30117, 30143, 30169, 30221, 30247, 30533, 30611, 30715, 30819, 30923, 31001, 31105]"
"('Description.java', 'org.junit.runner.Description', 'parseMethod', '(.*)\\((.*)\\)', 'testNullSafeHashCodeWithObjectBeingLongArray(org.springframework.util.ObjectUtilsTests)')",[13470]
"('Description.java', 'org.junit.runner.Description', 'getClassName', '(.*)\\((.*)\\)', 'testDuplicateIterators(org.springframework.util.CompositeIteratorTests)')",[10198]
"('Description.java', 'org.junit.runner.Description', 'parseMethod', '(.*)\\((.*)\\)', 'convertArrayToStringWithElementConversion(org.springframework.core.convert.support.DefaultConversionTests)')",[2762]
"('Description.java', 'org.junit.runner.Description', 'parseMethod', '(.*)\\((.*)\\)', 'convertObjectToCollection(org.springframework.core.convert.support.DefaultConversionTests)')",[3161]
"('Description.java', 'org.junit.runner.Description', 'getClassName', '(.*)\\((.*)\\)', 'contentHandler(org.springframework.util.xml.StaxStreamContentHandlerTests)')",[6695]
"('Description.java', 'org.junit.runner.Description', 'getClassName', '(.*)\\((.*)\\)', 'org.springframework.core.CollectionFactoryTests')","[34592, 34640, 34689, 34737]"
"('Description.java', 'org.junit.runner.Description', 'parseMethod', '(.*)\\((.*)\\)', 'testGetShortName(org.springframework.util.ClassUtilsTests)')",[15392]
"('Description.java', 'org.junit.runner.Description', 'parseMethod', '(.*)\\((.*)\\)', 'testStrictSystemPropertyReplacement(org.springframework.core.io.ResourceEditorTests)')",[250]
"('Description.java', 'org.junit.runner.Description', 'parseMethod', '(.*)\\((.*)\\)', 'testContains(org.springframework.util.CollectionUtilsTests)')",[7299]
"('Description.java', 'org.junit.runner.Description', 'parseMethod', '(.*)\\((.*)\\)', 'convertStringToCollectionWithElementConversion(org.springframework.core.convert.support.DefaultConversionTests)')",[3077]
"('Description.java', 'org.junit.runner.Description', 'parseMethod', '(.*)\\((.*)\\)', 'testParseLocaleWithMultiValuedVariantUsingUnderscoresAsSeparatorsWithLotsOfLeadingWhitespace(org.springframework.util.StringUtilsTests)')",[11394]
"('Description.java', 'org.junit.runner.Description', 'parseMethod', '(.*)\\((.*)\\)', 'testCompositionPatternNoMatches(org.springframework.core.type.AspectJTypeFilterTests)')",[8009]
"('Description.java', 'org.junit.runner.Description', 'parseMethod', '(.*)\\((.*)\\)', 'testE3(org.springframework.core.GenericCollectionTypeResolverTests)')",[8801]
"('Description.java', 'org.junit.runner.Description', 'getClassName', '(.*)\\((.*)\\)', 'testStringToCharacter(org.springframework.core.convert.support.DefaultConversionTests)')",[1901]
"('Description.java', 'org.junit.runner.Description', 'parseMethod', '(.*)\\((.*)\\)', 'convertCollectionToArray(org.springframework.core.convert.support.DefaultConversionTests)')",[2972]
"('Description.java', 'org.junit.runner.Description', 'parseMethod', '(.*)\\((.*)\\)', 'testMergeStringArrays(org.springframework.util.StringUtilsTests)')",[10848]
"('Description.java', 'org.junit.runner.Description', 'parseMethod', '(.*)\\((.*)\\)', 'testAddObjectToSingleNullElementArray(org.springframework.util.ObjectUtilsTests)')",[12336]
"('Description.java', 'org.junit.runner.Description', 'getClassName', '(.*)\\((.*)\\)', 'add(org.springframework.util.LinkedMultiValueMapTests)')",[5715]
"('Description.java', 'org.junit.runner.Description', 'parseMethod', '(.*)\\((.*)\\)', 'streamReaderSourceToStreamResult(org.springframework.util.xml.StaxSourceTests)')",[6654]
"('Description.java', 'org.junit.runner.Description', 'parseMethod', '(.*)\\((.*)\\)', 'testToObjectArrayWithNonArrayType(org.springframework.util.ObjectUtilsTests)')",[12231]
"('Description.java', 'org.junit.runner.Description', 'getClassName', '(.*)\\((.*)\\)', 'org.springframework.core.serializer.SerializationConverterTests')","[15920, 15943, 15967, 15990]"
"('Description.java', 'org.junit.runner.Description', 'parseMethod', '(.*)\\((.*)\\)', 'testParseLocaleStringSunnyDay(org.springframework.util.StringUtilsTests)')",[11247]
"('Description.java', 'org.junit.runner.Description', 'getClassName', '(.*)\\((.*)\\)', 'org.springframework.core.type.AssignableTypeFilterTests')","[33234, 33282, 33331, 33379]"
"('Description.java', 'org.junit.runner.Description', 'getClassName', '(.*)\\((.*)\\)', 'org.springframework.core.ConventionsTests')","[34786, 34834, 34883, 34931]"
"('Description.java', 'org.junit.runner.Description', 'parseMethod', '(.*)\\((.*)\\)', 'testFindMethodAnnotationOnRootButOverridden(org.springframework.core.annotation.AnnotationUtilsTests)')",[1106]
"('Description.java', 'org.junit.runner.Description', 'parseMethod', '(.*)\\((.*)\\)', 'testValidUsageNotKeepingTaskList(org.springframework.util.StopWatchTests)')",[14849]
"('Description.java', 'org.junit.runner.Description', 'getClassName', '(.*)\\((.*)\\)', 'org.springframework.core.convert.support.GenericConversionServiceTests')","[24630, 24653, 24677, 24700]"
"('Description.java', 'org.junit.runner.Description', 'parseMethod', '(.*)\\((.*)\\)', 'sunnyDay(org.springframework.core.io.ResourceEditorTests)')",[125]
"('Description.java', 'org.junit.runner.Description', 'getClassName', '(.*)\\((.*)\\)', 'testDirectMatch(org.springframework.core.type.AssignableTypeFilterTests)')",[8113]
"('Description.java', 'org.junit.runner.Description', 'parseMethod', '(.*)\\((.*)\\)', 'testCopyFromByteArray(org.springframework.util.FileCopyUtilsTests)')",[11497]
"('Description.java', 'org.junit.runner.Description', 'parseMethod', '(.*)\\((.*)\\)', 'testThreadFactoryOverridesDefaults(org.springframework.core.task.SimpleAsyncTaskExecutorTests)')",[9803]
"('Description.java', 'org.junit.runner.Description', 'parseMethod', '(.*)\\((.*)\\)', 'testContainsInstanceWithNullCollection(org.springframework.util.CollectionUtilsTests)')",[7341]
"('Description.java', 'org.junit.runner.Description', 'parseMethod', '(.*)\\((.*)\\)', 'testParseBigDecimalNumber1(org.springframework.util.NumberUtilsTests)')",[14181]
"('Description.java', 'org.junit.runner.Description', 'parseMethod', '(.*)\\((.*)\\)', 'testTrimLeadingCharacter(org.springframework.util.StringUtilsTests)')",[10512]
"('Description.java', 'org.junit.runner.Description', 'parseMethod', '(.*)\\((.*)\\)', 'extractPathWithinPattern(org.springframework.util.AntPathMatcherTests)')",[5548]
"('Description.java', 'org.junit.runner.Description', 'parseMethod', '(.*)\\((.*)\\)', 'testMapToObjectConversion(org.springframework.core.convert.support.GenericConversionServiceTests)')",[4000]
"('Description.java', 'org.junit.runner.Description', 'parseMethod', '(.*)\\((.*)\\)', 'testCharacterToString(org.springframework.core.convert.support.DefaultConversionTests)')",[1964]
"('AntPathStringMatcher.java', 'org.springframework.util.AntPathStringMatcher', 'matchStrings', '.*\\Q.class\\E', 'LogFactory.class')","[23390, 24202]"
"('Description.java', 'org.junit.runner.Description', 'parseMethod', '(.*)\\((.*)\\)', 'genericConverterDelegatingBackToConversionServiceConverterNotFound(org.springframework.core.convert.support.GenericConversionServiceTests)')",[3937]
"('Description.java', 'org.junit.runner.Description', 'getClassName', '(.*)\\((.*)\\)', 'testIsJarURL(org.springframework.util.ResourceUtilsTests)')",[13930]
"('Description.java', 'org.junit.runner.Description', 'parseMethod', '(.*)\\((.*)\\)', 'testGetPackageName(org.springframework.util.ClassUtilsTests)')",[15560]
"('Description.java', 'org.junit.runner.Description', 'getClassName', '(.*)\\((.*)\\)', 'convert(org.springframework.core.convert.support.GenericConversionServiceTests)')",[3643]
"('Description.java', 'org.junit.runner.Description', 'parseMethod', '(.*)\\((.*)\\)', 'getPrefixes(org.springframework.util.xml.SimpleNamespaceContextTests)')",[6945]
"('Description.java', 'org.junit.runner.Description', 'parseMethod', '(.*)\\((.*)\\)', 'testShopperWithMethodInvoker(org.springframework.util.MethodInvokerTests)')",[15141]
"('Description.java', 'org.junit.runner.Description', 'parseMethod', '(.*)\\((.*)\\)', 'testGetValuesWithEmptyStringPrefix(org.springframework.core.ConstantsTests)')",[9699]
"('Description.java', 'org.junit.runner.Description', 'parseMethod', '(.*)\\((.*)\\)', 'convertStringToCollection(org.springframework.core.convert.support.DefaultConversionTests)')",[3056]
"('Description.java', 'org.junit.runner.Description', 'getClassName', '(.*)\\((.*)\\)', 'testThisClassPlease(org.springframework.core.DefaultControlFlowTests)')",[9927]
"('Description.java', 'org.junit.runner.Description', 'getClassName', '(.*)\\((.*)\\)', 'org.springframework.core.LocalVariableTableParameterNameDiscovererTests')","[34980, 35028, 35077, 35125]"
"('AntPathStringMatcher.java', 'org.springframework.util.AntPathStringMatcher', 'matchStrings', '.*\\Q.class\\E', 'LogFactory$6.class')","[23362, 24174]"
"('Description.java', 'org.junit.runner.Description', 'parseMethod', '(.*)\\((.*)\\)', 'testThisClassPlease(org.springframework.core.Jdk14ControlFlowTests)')",[9845]
"('AntPathStringMatcher.java', 'org.springframework.util.AntPathStringMatcher', 'matchStrings', '\\QResource\\E.*\\QEditor.class\\E', 'EncodedResource.class')",[19632]
"('Description.java', 'org.junit.runner.Description', 'parseMethod', '(.*)\\((.*)\\)', 'testVanillaResource(org.springframework.core.io.support.ResourceArrayPropertyEditorTests)')",[709]
"('Description.java', 'org.junit.runner.Description', 'parseMethod', '(.*)\\((.*)\\)', 'withClasses(org.springframework.util.TypeUtilsTests)')",[6071]
"('Description.java', 'org.junit.runner.Description', 'parseMethod', '(.*)\\((.*)\\)', 'testNullSafeHashCodeWithObjectBeingBooleanArray(org.springframework.util.ObjectUtilsTests)')",[13344]
"('Description.java', 'org.junit.runner.Description', 'parseMethod', '(.*)\\((.*)\\)', 'testGetValuesWithNullPrefix(org.springframework.core.ConstantsTests)')",[9678]
"('Description.java', 'org.junit.runner.Description', 'parseMethod', '(.*)\\((.*)\\)', 'testNullSafeHashCodeWithObjectBeingIntArray(org.springframework.util.ObjectUtilsTests)')",[13449]
"('Description.java', 'org.junit.runner.Description', 'parseMethod', '(.*)\\((.*)\\)', 'testIsPrimitiveOrWrapperWithFloatWrapperClass(org.springframework.util.ObjectUtilsTests)')",[12819]
"('Description.java', 'org.junit.runner.Description', 'parseMethod', '(.*)\\((.*)\\)', 'convertArrayToCollectionGenericTypeConversion(org.springframework.core.convert.support.DefaultConversionTests)')",[2678]
"('Description.java', 'org.junit.runner.Description', 'parseMethod', '(.*)\\((.*)\\)', 'testCountOccurrencesOf(org.springframework.util.StringUtilsTests)')",[10554]
"('Description.java', 'org.junit.runner.Description', 'parseMethod', '(.*)\\((.*)\\)', 'deserializeNull(org.springframework.util.SerializationUtilsTests)')",[4648]
"('Description.java', 'org.junit.runner.Description', 'parseMethod', '(.*)\\((.*)\\)', 'testIdentityToStringWithNullObject(org.springframework.util.ObjectUtilsTests)')",[12546]
"('Description.java', 'org.junit.runner.Description', 'getClassName', '(.*)\\((.*)\\)', 'findMethod(org.springframework.util.ReflectionUtilsTests)')",[5171]
"('Description.java', 'org.junit.runner.Description', 'getClassName', '(.*)\\((.*)\\)', 'testParseNumber(org.springframework.util.NumberUtilsTests)')",[13992]
"('Description.java', 'org.junit.runner.Description', 'getClassName', '(.*)\\((.*)\\)', 'org.springframework.util.NumberUtilsTests')","[37502, 37550, 37599, 37647]"
"('Description.java', 'org.junit.runner.Description', 'parseMethod', '(.*)\\((.*)\\)', 'testConcurrentMapWithExplicitInterface(org.springframework.core.CollectionFactoryTests)')",[9051]
"('Description.java', 'org.junit.runner.Description', 'parseMethod', '(.*)\\((.*)\\)', 'testGetMethodCountForName(org.springframework.util.ClassUtilsTests)')",[15728]
"('AntPathStringMatcher.java', 'org.springframework.util.AntPathStringMatcher', 'matchStrings', '(.*)\\Q.html\\E', '42.html')",[28550]
"('Description.java', 'org.junit.runner.Description', 'getClassName', '(.*)\\((.*)\\)', 'testAsmAnnotationMetadata(org.springframework.core.type.AnnotationMetadataTests)')",[8217]
"('Description.java', 'org.junit.runner.Description', 'getClassName', '(.*)\\((.*)\\)', 'enableIndentingSunnyDay(org.springframework.util.xml.TransformerUtilsTests)')",[6362]
"('Description.java', 'org.junit.runner.Description', 'parseMethod', '(.*)\\((.*)\\)', 'testClassPathResourceWithClassLoader(org.springframework.core.io.ResourceTests)')",[437]
"('Description.java', 'org.junit.runner.Description', 'parseMethod', '(.*)\\((.*)\\)', 'testNullSafeToStringWithByteArrayBeingEmpty(org.springframework.util.ObjectUtilsTests)')",[13680]
"('Description.java', 'org.junit.runner.Description', 'getClassName', '(.*)\\((.*)\\)', 'org.springframework.core.Jdk14ControlFlowTests')","[35562, 35610, 35659, 35707]"
"('Description.java', 'org.junit.runner.Description', 'parseMethod', '(.*)\\((.*)\\)', 'testPerformance3(org.springframework.core.convert.support.GenericConversionServiceTests)')",[4315]
"('Description.java', 'org.junit.runner.Description', 'parseMethod', '(.*)\\((.*)\\)', 'hasLengthWithWhitespaceOnlyStringDoesNotThrowException(org.springframework.util.AssertTests)')",[4857]
"('Description.java', 'org.junit.runner.Description', 'parseMethod', '(.*)\\((.*)\\)', 'testNullSafeToStringWithLongArray(org.springframework.util.ObjectUtilsTests)')",[11895]
"('Description.java', 'org.junit.runner.Description', 'parseMethod', '(.*)\\((.*)\\)', 'testPerformance1(org.springframework.core.convert.support.GenericConversionServiceTests)')",[4273]
"('Description.java', 'org.junit.runner.Description', 'parseMethod', '(.*)\\((.*)\\)', 'testStringToFloat(org.springframework.core.convert.support.DefaultConversionTests)')",[2258]
"('Description.java', 'org.junit.runner.Description', 'parseMethod', '(.*)\\((.*)\\)', 'testSPR3324(org.springframework.core.BridgeMethodResolverTests)')",[1630]
"('Description.java', 'org.junit.runner.Description', 'parseMethod', '(.*)\\((.*)\\)', 'testParseWithTrim(org.springframework.util.NumberUtilsTests)')",[14034]
"('Description.java', 'org.junit.runner.Description', 'parseMethod', '(.*)\\((.*)\\)', 'testEnumToString(org.springframework.core.convert.support.DefaultConversionTests)')",[2510]
"('Description.java', 'org.junit.runner.Description', 'getClassName', '(.*)\\((.*)\\)', 'org.springframework.core.convert.TypeDescriptorTests')","[24442, 24465, 24489, 24512]"
"('AntPathStringMatcher.java', 'org.springframework.util.AntPathStringMatcher', 'matchStrings', '\\Qtarget\\E', 'target')","[16528, 17008, 17488, 17968, 18448, 18928, 19408, 19888, 20368, 20848, 21328, 21808, 22288]"
"('Description.java', 'org.junit.runner.Description', 'getClassName', '(.*)\\((.*)\\)', 'testValidCache(org.springframework.util.CachingMapDecoratorTests)')",[11435]
"('Description.java', 'org.junit.runner.Description', 'parseMethod', '(.*)\\((.*)\\)', 'testReplaceWithEmptyDefault(org.springframework.util.SystemPropertyUtilsTests)')",[6008]
"('Description.java', 'org.junit.runner.Description', 'parseMethod', '(.*)\\((.*)\\)', 'testNullSafeComparatorNullsHigh(org.springframework.util.comparator.ComparatorTests)')",[6279]
"('Description.java', 'org.junit.runner.Description', 'getClassName', '(.*)\\((.*)\\)', 'org.springframework.core.task.SimpleAsyncTaskExecutorTests')","[35368, 35416, 35465, 35513]"
"('Description.java', 'org.junit.runner.Description', 'getClassName', '(.*)\\((.*)\\)', 'org.springframework.core.ConstantsTests')","[35174, 35222, 35271, 35319]"
"('AntPathStringMatcher.java', 'org.springframework.util.AntPathStringMatcher', 'matchStrings', '.', 'a')","[26132, 26158, 26366, 27640, 27666, 27874, 29779, 29805, 30013]"
"('Description.java', 'org.junit.runner.Description', 'getClassName', '(.*)\\((.*)\\)', 'testSubclassPatternNoMatches(org.springframework.core.type.AspectJTypeFilterTests)')",[7925]
"('Description.java', 'org.junit.runner.Description', 'getClassName', '(.*)\\((.*)\\)', 'org.springframework.util.PatternMatchUtilsTests')","[38084, 38132, 38181, 38229]"
"('Description.java', 'org.junit.runner.Description', 'getClassName', '(.*)\\((.*)\\)', 'org.springframework.core.io.ClassPathResourceTests')","[16108, 16131, 16155, 16178]"
"('Description.java', 'org.junit.runner.Description', 'parseMethod', '(.*)\\((.*)\\)', 'getBoundPrefixes(org.springframework.util.xml.SimpleNamespaceContextTests)')",[6924]
"('Description.java', 'org.junit.runner.Description', 'parseMethod', '(.*)\\((.*)\\)', 'testFloatToString(org.springframework.core.convert.support.DefaultConversionTests)')",[2279]
"('Description.java', 'org.junit.runner.Description', 'parseMethod', '(.*)\\((.*)\\)', 'testWithElementFactory(org.springframework.util.AutoPopulatingListTests)')",[14995]
"('Description.java', 'org.junit.runner.Description', 'parseMethod', '(.*)\\((.*)\\)', 'testHashCodeWithBooleanTrue(org.springframework.util.ObjectUtilsTests)')",[12441]
"('Description.java', 'org.junit.runner.Description', 'parseMethod', '(.*)\\((.*)\\)', 'testCopyFromReader(org.springframework.util.FileCopyUtilsTests)')",[11539]
"('AntPathStringMatcher.java', 'org.springframework.util.AntPathStringMatcher', 'matchStrings', '\\Qclasses\\E', 'classes')","[17520, 18000, 18480, 18960, 19440, 19920, 20400, 20880, 21360, 21840, 22320]"
"('Description.java', 'org.junit.runner.Description', 'parseMethod', '(.*)\\((.*)\\)', 'convertArrayToArrayAssignable(org.springframework.core.convert.support.DefaultConversionTests)')",[3245]
"('Description.java', 'org.junit.runner.Description', 'parseMethod', '(.*)\\((.*)\\)', 'testFindBridgedMethodFromMultipleBridges(org.springframework.core.BridgeMethodResolverTests)')",[1336]
"('Description.java', 'org.junit.runner.Description', 'parseMethod', '(.*)\\((.*)\\)', 'testGetValues(org.springframework.core.ConstantsTests)')",[9594]
"('Description.java', 'org.junit.runner.Description', 'parseMethod', '(.*)\\((.*)\\)', 'testParseNegativeOverflow(org.springframework.util.NumberUtilsTests)')",[14328]
"('Description.java', 'org.junit.runner.Description', 'parseMethod', '(.*)\\((.*)\\)', 'assertNotEmptyWithNullCollectionThrowsException(org.springframework.util.AssertTests)')",[4962]
"('Description.java', 'org.junit.runner.Description', 'parseMethod', '(.*)\\((.*)\\)', 'testOverloadedStaticMethodInInnerClass(org.springframework.core.LocalVariableTableParameterNameDiscovererTests)')",[9364]
"('Description.java', 'org.junit.runner.Description', 'getClassName', '(.*)\\((.*)\\)', 'org.springframework.util.CollectionUtilsTests')","[32533, 32556, 32580, 32603]"
"('Description.java', 'org.junit.runner.Description', 'parseMethod', '(.*)\\((.*)\\)', 'testWithClassAndUserSuppliedBackingList(org.springframework.util.AutoPopulatingListTests)')",[14974]
"('Description.java', 'org.junit.runner.Description', 'parseMethod', '(.*)\\((.*)\\)', 'testGetValuesInTurkey(org.springframework.core.ConstantsTests)')",[9615]
"('Description.java', 'org.junit.runner.Description', 'parseMethod', '(.*)\\((.*)\\)', 'testMergePrimitiveArrayIntoCollection(org.springframework.util.CollectionUtilsTests)')",[7257]
"('AntPathStringMatcher.java', 'org.springframework.util.AntPathStringMatcher', 'matchStrings', '\\Qtest\\E.*\\Qaaa\\E', 'test')","[26080, 27588, 29727]"
"('Description.java', 'org.junit.runner.Description', 'parseMethod', '(.*)\\((.*)\\)', 'testNullSafeHashCodeWithFloatArrayEqualToNull(org.springframework.util.ObjectUtilsTests)')",[13176]
"('Description.java', 'org.junit.runner.Description', 'parseMethod', '(.*)\\((.*)\\)', 'testNullSafeToStringWithFloatArray(org.springframework.util.ObjectUtilsTests)')",[11769]
"('AntPathStringMatcher.java', 'org.springframework.util.AntPathStringMatcher', 'matchStrings', '\\QResource\\E.*\\QEditor.class\\E', 'PathMatchingResourcePatternResolverTests.class')",[17232]
"('Description.java', 'org.junit.runner.Description', 'parseMethod', '(.*)\\((.*)\\)', 'testNullSafeHashCodeWithObjectBeingObjectArray(org.springframework.util.ObjectUtilsTests)')",[13491]
"('Description.java', 'org.junit.runner.Description', 'parseMethod', '(.*)\\((.*)\\)', 'testFindMethodAnnotationOnRoot(org.springframework.core.annotation.AnnotationUtilsTests)')",[1085]
"('Description.java', 'org.junit.runner.Description', 'parseMethod', '(.*)\\((.*)\\)', 'testIsPrimitiveOrWrapperWithIntClass(org.springframework.util.ObjectUtilsTests)')",[12840]
"('Description.java', 'org.junit.runner.Description', 'parseMethod', '(.*)\\((.*)\\)', 'testNullSafeToStringWithCharArray(org.springframework.util.ObjectUtilsTests)')",[11643]
"('Description.java', 'org.junit.runner.Description', 'parseMethod', '(.*)\\((.*)\\)', 'testUnqualify(org.springframework.util.StringUtilsTests)')",[10659]
"('Description.java', 'org.junit.runner.Description', 'parseMethod', '(.*)\\((.*)\\)', 'convertStringToProperties(org.springframework.core.convert.support.DefaultConversionTests)')",[3392]
"('Description.java', 'org.junit.runner.Description', 'parseMethod', '(.*)\\((.*)\\)', 'testForName(org.springframework.util.ClassUtilsTests)')",[15308]
"('Description.java', 'org.junit.runner.Description', 'getClassName', '(.*)\\((.*)\\)', 'org.springframework.util.MethodInvokerTests')","[38666, 38714, 38763, 38811]"
"('AntPathStringMatcher.java', 'org.springframework.util.AntPathStringMatcher', 'matchStrings', '..', 'bb')","[26340, 27848, 29987]"
"('Description.java', 'org.junit.runner.Description', 'parseMethod', '(.*)\\((.*)\\)', 'testRemoveDuplicateStrings(org.springframework.util.StringUtilsTests)')",[10890]
"('Description.java', 'org.junit.runner.Description', 'parseMethod', '(.*)\\((.*)\\)', 'testInitLoggingWithClasspathAndRefreshInterval(org.springframework.util.Log4jConfigurerTests)')",[13826]
"('Description.java', 'org.junit.runner.Description', 'parseMethod', '(.*)\\((.*)\\)', 'testSPR2603(org.springframework.core.BridgeMethodResolverTests)')",[1504]
"('Description.java', 'org.junit.runner.Description', 'parseMethod', '(.*)\\((.*)\\)', 'testHashCodeWithDouble(org.springframework.util.ObjectUtilsTests)')",[12462]
"('Description.java', 'org.junit.runner.Description', 'parseMethod', '(.*)\\((.*)\\)', 'testNullSafeHashCodeWithBooleanArrayEqualToNull(org.springframework.util.ObjectUtilsTests)')",[13008]
"('Description.java', 'org.junit.runner.Description', 'getClassName', '(.*)\\((.*)\\)', 'org.springframework.util.SystemPropertyUtilsTests')","[31499, 31522, 31546, 31569]"
"('Description.java', 'org.junit.runner.Description', 'parseMethod', '(.*)\\((.*)\\)', 'testStringToBigInteger(org.springframework.core.convert.support.DefaultConversionTests)')",[2342]
"('AntPathStringMatcher.java', 'org.springframework.util.AntPathStringMatcher', 'matchStrings', '.*\\Q.\\E.*', '*.html')",[28869]
"('AntPathStringMatcher.java', 'org.springframework.util.AntPathStringMatcher', 'matchStrings', '.*\\Q.html\\E', 'hotel')",[28815]
"('Description.java', 'org.junit.runner.Description', 'parseMethod', '(.*)\\((.*)\\)', 'testHashCodeWithBooleanFalse(org.springframework.util.ObjectUtilsTests)')",[12420]
"('Description.java', 'org.junit.runner.Description', 'parseMethod', '(.*)\\((.*)\\)', 'md5(org.springframework.util.DigestUtilsTests)')",[4502]
"('Description.java', 'org.junit.runner.Description', 'parseMethod', '(.*)\\((.*)\\)', 'testIdentityMap(org.springframework.core.CollectionFactoryTests)')",[9009]
"('Description.java', 'org.junit.runner.Description', 'parseMethod', '(.*)\\((.*)\\)', 'convertEmptyStringToCollection(org.springframework.core.convert.support.DefaultConversionTests)')",[3098]
"('Description.java', 'org.junit.runner.Description', 'parseMethod', '(.*)\\((.*)\\)', 'testAddObjectToNullArray(org.springframework.util.ObjectUtilsTests)')",[12357]
"('AntPathStringMatcher.java', 'org.springframework.util.AntPathStringMatcher', 'matchStrings', '\\Qpwang7\\E', 'pwang7')","[16336, 16816, 17296, 17776, 18256, 18736, 19216, 19696, 20176, 20656, 21136, 21616, 22096]"
"('Description.java', 'org.junit.runner.Description', 'parseMethod', '(.*)\\((.*)\\)', 'testToObjectArrayWithEmptyPrimitiveArray(org.springframework.util.ObjectUtilsTests)')",[12210]
"('Description.java', 'org.junit.runner.Description', 'parseMethod', '(.*)\\((.*)\\)', 'testCommaDelimitedListToStringArraySingleString(org.springframework.util.StringUtilsTests)')",[11163]
"('Description.java', 'org.junit.runner.Description', 'getClassName', '(.*)\\((.*)\\)', 'testCannotExecuteWhenConcurrencyIsSwitchedOff(org.springframework.core.task.SimpleAsyncTaskExecutorTests)')",[9740]
"('Description.java', 'org.junit.runner.Description', 'parseMethod', '(.*)\\((.*)\\)', 'testSystemPropertyReplacement(org.springframework.core.io.ResourceEditorTests)')",[229]
"('AntPathStringMatcher.java', 'org.springframework.util.AntPathStringMatcher', 'matchStrings', '\\Qtest\\E.*', 'tst')","[25820, 27458, 29519]"
"('AntPathStringMatcher.java', 'org.springframework.util.AntPathStringMatcher', 'matchStrings', '([\\w\\.]+)\\Q-\\E([\\w\\.]+)\\Q.jar\\E', 'com.example-1.0.0.jar')",[28654]
"('Description.java', 'org.junit.runner.Description', 'parseMethod', '(.*)\\((.*)\\)', 'testBetween(org.springframework.util.PatternMatchUtilsTests)')",[14641]
"('Description.java', 'org.junit.runner.Description', 'parseMethod', '(.*)\\((.*)\\)', 'testIsPrimitiveOrWrapperWithIntegerClass(org.springframework.util.ObjectUtilsTests)')",[12861]
"('Description.java', 'org.junit.runner.Description', 'parseMethod', '(.*)\\((.*)\\)', 'disableIndentingSunnyDay(org.springframework.util.xml.TransformerUtilsTests)')",[6404]
"('Description.java', 'org.junit.runner.Description', 'parseMethod', '(.*)\\((.*)\\)', 'testCapitalize(org.springframework.util.StringUtilsTests)')",[10680]
"('Description.java', 'org.junit.runner.Description', 'parseMethod', '(.*)\\((.*)\\)', 'testStringArrayToIntegerArray(org.springframework.core.convert.support.GenericConversionServiceTests)')",[4105]
"('Description.java', 'org.junit.runner.Description', 'parseMethod', '(.*)\\((.*)\\)', 'assertNotEmptyWithNullMapThrowsException(org.springframework.util.AssertTests)')",[5025]
"('Description.java', 'org.junit.runner.Description', 'parseMethod', '(.*)\\((.*)\\)', 'testNullSafeHashCodeWithLongArray(org.springframework.util.ObjectUtilsTests)')",[13239]
"('Description.java', 'org.junit.runner.Description', 'parseMethod', '(.*)\\((.*)\\)', 'testAddResourcePathToPackagePath(org.springframework.util.ClassUtilsTests)')",[15854]
"('Description.java', 'org.junit.runner.Description', 'parseMethod', '(.*)\\((.*)\\)', 'testReplaceWithNoDefault(org.springframework.util.SystemPropertyUtilsTests)')",[5966]
"('Description.java', 'org.junit.runner.Description', 'parseMethod', '(.*)\\((.*)\\)', 'converterNotFound(org.springframework.core.convert.support.GenericConversionServiceTests)')",[3727]
"('Description.java', 'org.junit.runner.Description', 'parseMethod', '(.*)\\((.*)\\)', 'testTrimWhitespace(org.springframework.util.StringUtilsTests)')",[10407]
"('Description.java', 'org.junit.runner.Description', 'parseMethod', '(.*)\\((.*)\\)', 'convert(org.springframework.core.convert.support.GenericConversionServiceTests)')",[3623]
"('Description.java', 'org.junit.runner.Description', 'parseMethod', '(.*)\\((.*)\\)', 'testSortStringArray(org.springframework.util.StringUtilsTests)')",[10869]
"('Description.java', 'org.junit.runner.Description', 'parseMethod', '(.*)\\((.*)\\)', 'testNullSafeHashCodeWithShortArrayEqualToNull(org.springframework.util.ObjectUtilsTests)')",[13575]
"('Description.java', 'org.junit.runner.Description', 'parseMethod', '(.*)\\((.*)\\)', 'testIsPrimitiveOrWrapperWithNonPrimitiveOrWrapperClass(org.springframework.util.ObjectUtilsTests)')",[12924]
"('Description.java', 'org.junit.runner.Description', 'parseMethod', '(.*)\\((.*)\\)', 'contentHandlerNamespacesPrefixes(org.springframework.util.xml.StaxStreamXMLReaderTests)')",[6799]
"('Description.java', 'org.junit.runner.Description', 'getClassName', '(.*)\\((.*)\\)', 'org.springframework.util.xml.StaxEventContentHandlerTests')","[32345, 32368, 32392, 32415]"
"('Description.java', 'org.junit.runner.Description', 'parseMethod', '(.*)\\((.*)\\)', 'testInitLoggingWithRelativeFilePath(org.springframework.util.Log4jConfigurerTests)')",[13784]
"('Description.java', 'org.junit.runner.Description', 'parseMethod', '(.*)\\((.*)\\)', 'testNullSafeHashCodeWithObjectArrayEqualToNull(org.springframework.util.ObjectUtilsTests)')",[13323]
"('Description.java', 'org.junit.runner.Description', 'getClassName', '(.*)\\((.*)\\)', 'org.springframework.util.ClassUtilsTests')","[38832, 38852, 38873, 38893]"
"('Description.java', 'org.junit.runner.Description', 'parseMethod', '(.*)\\((.*)\\)', 'testRecursiveFromSystemProperty(org.springframework.util.SystemPropertyUtilsTests)')",[6029]
"('Description.java', 'org.junit.runner.Description', 'parseMethod', '(.*)\\((.*)\\)', 'testRecurseInProperty(org.springframework.util.PropertyPlaceholderHelperTests)')",[7529]
"('Description.java', 'org.junit.runner.Description', 'parseMethod', '(.*)\\((.*)\\)', 'convertEmptyStringToArray(org.springframework.core.convert.support.DefaultConversionTests)')",[2867]
"('AntPathStringMatcher.java', 'org.springframework.util.AntPathStringMatcher', 'matchStrings', '\\QResource\\E.*\\QEditor.class\\E', 'ResourceArrayPropertyEditorTests.class')",[16752]
"('Description.java', 'org.junit.runner.Description', 'parseMethod', '(.*)\\((.*)\\)', 'testEmptyMap(org.springframework.core.convert.support.GenericConversionServiceTests)')",[4210]
"('AntPathStringMatcher.java', 'org.springframework.util.AntPathStringMatcher', 'matchStrings', '.*\\Q.html\\E', 'hotel.html')",[28788]
"('Description.java', 'org.junit.runner.Description', 'parseMethod', '(.*)\\((.*)\\)', 'testRejectsStartTwice(org.springframework.util.StopWatchTests)')",[14912]
"('Description.java', 'org.junit.runner.Description', 'parseMethod', '(.*)\\((.*)\\)', 'testIdentityToString(org.springframework.util.ObjectUtilsTests)')",[12525]
"('Description.java', 'org.junit.runner.Description', 'parseMethod', '(.*)\\((.*)\\)', 'serializeAndDeserializeString(org.springframework.core.serializer.SerializationConverterTests)')",[21]
"('Description.java', 'org.junit.runner.Description', 'parseMethod', '(.*)\\((.*)\\)', 'testSuperClassMatch(org.springframework.core.type.AssignableTypeFilterTests)')",[8155]
"('Description.java', 'org.junit.runner.Description', 'parseMethod', '(.*)\\((.*)\\)', 'enableIndentingSunnyDay(org.springframework.util.xml.TransformerUtilsTests)')",[6342]
"('Description.java', 'org.junit.runner.Description', 'parseMethod', '(.*)\\((.*)\\)', 'testNestedRuntimeExceptionWithNoRootCause(org.springframework.core.NestedExceptionTests)')",[7634]
"('Description.java', 'org.junit.runner.Description', 'parseMethod', '(.*)\\((.*)\\)', 'testAddObjectToSingleNonNullElementArray(org.springframework.util.ObjectUtilsTests)')",[12315]
"('Description.java', 'org.junit.runner.Description', 'parseMethod', '(.*)\\((.*)\\)', 'testStringToEnumEmptyString(org.springframework.core.convert.support.DefaultConversionTests)')",[2489]
"('Description.java', 'org.junit.runner.Description', 'parseMethod', '(.*)\\((.*)\\)', 'eventReaderSourceToStreamResult(org.springframework.util.xml.StaxSourceTests)')",[6612]
"('Description.java', 'org.junit.runner.Description', 'parseMethod', '(.*)\\((.*)\\)', 'testAttributeNameToPropertyName(org.springframework.core.ConventionsTests)')",[9176]
"('Description.java', 'org.junit.runner.Description', 'parseMethod', '(.*)\\((.*)\\)', 'deserializationFailure(org.springframework.core.serializer.SerializationConverterTests)')",[104]
"('AntPathStringMatcher.java', 'org.springframework.util.AntPathStringMatcher', 'matchStrings', '\\QResource\\E.*\\QEditor.class\\E', 'ResourcePatternUtils.class')",[17712]
"('Description.java', 'org.junit.runner.Description', 'parseMethod', '(.*)\\((.*)\\)', 'convertObjectToArrayWithElementConversion(org.springframework.core.convert.support.DefaultConversionTests)')",[2951]
"('Description.java', 'org.junit.runner.Description', 'getClassName', '(.*)\\((.*)\\)', 'testComparableComparatorIllegalArgs(org.springframework.util.comparator.ComparatorTests)')",[6195]
"('Description.java', 'org.junit.runner.Description', 'parseMethod', '(.*)\\((.*)\\)', 'testIsAnnotationDeclaredLocally(org.springframework.core.annotation.AnnotationUtilsTests)')",[897]
"('Description.java', 'org.junit.runner.Description', 'parseMethod', '(.*)\\((.*)\\)', 'testStringToNumber(org.springframework.core.convert.support.DefaultConversionTests)')",[2426]
"('Description.java', 'org.junit.runner.Description', 'parseMethod', '(.*)\\((.*)\\)', 'testCommaDelimitedListToStringArrayEmptyStrings(org.springframework.util.StringUtilsTests)')",[11205]
"('Description.java', 'org.junit.runner.Description', 'parseMethod', '(.*)\\((.*)\\)', 'testNullSafeToStringWithCharArrayBeingEmpty(org.springframework.util.ObjectUtilsTests)')",[11664]
"('Description.java', 'org.junit.runner.Description', 'parseMethod', '(.*)\\((.*)\\)', 'stateWithTrueExpressionSunnyDay(org.springframework.util.AssertTests)')",[5130]
"('Description.java', 'org.junit.runner.Description', 'parseMethod', '(.*)\\((.*)\\)', 'set(org.springframework.util.LinkedMultiValueMapTests)')",[5757]
"('Description.java', 'org.junit.runner.Description', 'parseMethod', '(.*)\\((.*)\\)', 'testReplaceWithDefault(org.springframework.util.SystemPropertyUtilsTests)')",[5903]
"('Description.java', 'org.junit.runner.Description', 'parseMethod', '(.*)\\((.*)\\)', 'testReplaceFromEnv(org.springframework.util.SystemPropertyUtilsTests)')",[6050]
"('Description.java', 'org.junit.runner.Description', 'parseMethod', '(.*)\\((.*)\\)', 'testFindBridgedMethod(org.springframework.core.BridgeMethodResolverTests)')",[1190]
"('Description.java', 'org.junit.runner.Description', 'parseMethod', '(.*)\\((.*)\\)', 'testStrictSystemPropertyReplacement(org.springframework.core.io.support.ResourceArrayPropertyEditorTests)')",[688]
"('Description.java', 'org.junit.runner.Description', 'parseMethod', '(.*)\\((.*)\\)', 'testSplitArrayElementsIntoProperties(org.springframework.util.StringUtilsTests)')",[10911]
"('Description.java', 'org.junit.runner.Description', 'parseMethod', '(.*)\\((.*)\\)', 'testDelimitedListToStringArrayWithSemicolon(org.springframework.util.StringUtilsTests)')",[11079]
"('Description.java', 'org.junit.runner.Description', 'parseMethod', '(.*)\\((.*)\\)', 'testOnAllMethods(org.springframework.core.BridgeMethodResolverTests)')",[1441]
"('Description.java', 'org.junit.runner.Description', 'parseMethod', '(.*)\\((.*)\\)', 'testNullSafeToStringWithIntArray(org.springframework.util.ObjectUtilsTests)')",[11832]
"('Description.java', 'org.junit.runner.Description', 'getClassName', '(.*)\\((.*)\\)', 'org.springframework.util.xml.StaxResultTests')","[31875, 31898, 31922, 31945]"
"('Description.java', 'org.junit.runner.Description', 'parseMethod', '(.*)\\((.*)\\)', 'testClasspathWithPatternInJar(org.springframework.core.io.support.PathMatchingResourcePatternResolverTests)')",[855]
"('Description.java', 'org.junit.runner.Description', 'parseMethod', '(.*)\\((.*)\\)', 'testGetFilename(org.springframework.util.StringUtilsTests)')",[10722]
"('Description.java', 'org.junit.runner.Description', 'parseMethod', '(.*)\\((.*)\\)', 'testStringToCharacterInvalidString(org.springframework.core.convert.support.DefaultConversionTests)')",[1943]
"('Description.java', 'org.junit.runner.Description', 'parseMethod', '(.*)\\((.*)\\)', 'testDeserializationOfStandAloneEnums(org.springframework.core.enums.LabeledEnumTests)')",[10094]
"('Description.java', 'org.junit.runner.Description', 'parseMethod', '(.*)\\((.*)\\)', 'testDeserializationOfInnerClassEnums(org.springframework.core.enums.LabeledEnumTests)')",[10073]
"('Description.java', 'org.junit.runner.Description', 'parseMethod', '(.*)\\((.*)\\)', 'testSplitArrayElementsIntoPropertiesAndDeletedChars(org.springframework.util.StringUtilsTests)')",[10932]
"('Description.java', 'org.junit.runner.Description', 'parseMethod', '(.*)\\((.*)\\)', 'testClass(org.springframework.core.style.ToStringCreatorTests)')",[7779]
"('Description.java', 'org.junit.runner.Description', 'parseMethod', '(.*)\\((.*)\\)', 'testNullSafeHashCodeWithDoubleArray(org.springframework.util.ObjectUtilsTests)')",[13113]
"('Description.java', 'org.junit.runner.Description', 'parseMethod', '(.*)\\((.*)\\)', 'testStringToBooleanEmptyString(org.springframework.core.convert.support.DefaultConversionTests)')",[2027]
"('Description.java', 'org.junit.runner.Description', 'parseMethod', '(.*)\\((.*)\\)', 'testStringToBooleanFalse(org.springframework.core.convert.support.DefaultConversionTests)')",[2006]
"('Description.java', 'org.junit.runner.Description', 'parseMethod', '(.*)\\((.*)\\)', 'withParameterizedTypes(org.springframework.util.TypeUtilsTests)')",[6112]
"('Description.java', 'org.junit.runner.Description', 'parseMethod', '(.*)\\((.*)\\)', 'testNumberToCharacter(org.springframework.core.convert.support.DefaultConversionTests)')",[2615]
"('Description.java', 'org.junit.runner.Description', 'parseMethod', '(.*)\\((.*)\\)', 'convertObjectToStringNotSupported(org.springframework.core.convert.support.DefaultConversionTests)')",[3476]
"('Description.java', 'org.junit.runner.Description', 'parseMethod', '(.*)\\((.*)\\)', 'testHasTextValid(org.springframework.util.StringUtilsTests)')",[10365]
"('Description.java', 'org.junit.runner.Description', 'parseMethod', '(.*)\\((.*)\\)', 'testCopyFromInputStream(org.springframework.util.FileCopyUtilsTests)')",[11456]
"('Description.java', 'org.junit.runner.Description', 'parseMethod', '(.*)\\((.*)\\)', 'testNullSafeHashCodeWithByteArray(org.springframework.util.ObjectUtilsTests)')",[13029]
"('Description.java', 'org.junit.runner.Description', 'parseMethod', '(.*)\\((.*)\\)', 'testCompositionPatternMatches(org.springframework.core.type.AspectJTypeFilterTests)')",[7988]
"('Description.java', 'org.junit.runner.Description', 'parseMethod', '(.*)\\((.*)\\)', 'patternComparator(org.springframework.util.AntPathMatcherTests)')",[5611]
"('Description.java', 'org.junit.runner.Description', 'parseMethod', '(.*)\\((.*)\\)', 'assertNotEmptyWithEmptyCollectionThrowsException(org.springframework.util.AssertTests)')",[4983]
"('Description.java', 'org.junit.runner.Description', 'parseMethod', '(.*)\\((.*)\\)', 'convertWrongTypeArgument(org.springframework.core.convert.support.GenericConversionServiceTests)')",[3853]
"('Description.java', 'org.junit.runner.Description', 'parseMethod', '(.*)\\((.*)\\)', 'stringConstructorRaisesExceptionWithFullyQualifiedPath(org.springframework.core.io.ClassPathResourceTests)')",[271]
"('AntPathStringMatcher.java', 'org.springframework.util.AntPathStringMatcher', 'matchStrings', '.*', 't')","[25612, 29311]"
"('Description.java', 'org.junit.runner.Description', 'parseMethod', '(.*)\\((.*)\\)', 'testSPR3304(org.springframework.core.BridgeMethodResolverTests)')",[1609]
"('Description.java', 'org.junit.runner.Description', 'parseMethod', '(.*)\\((.*)\\)', 'contentHandler(org.springframework.util.xml.StaxEventContentHandlerTests)')",[7029]
"('Description.java', 'org.junit.runner.Description', 'parseMethod', '(.*)\\((.*)\\)', 'testParseLocaleStringWithMalformedLocaleString(org.springframework.util.StringUtilsTests)')",[11268]
"('Description.java', 'org.junit.runner.Description', 'parseMethod', '(.*)\\((.*)\\)', 'arrayTypeDescriptor(org.springframework.core.convert.TypeDescriptorTests)')",[1797]
"('Description.java', 'org.junit.runner.Description', 'getClassName', '(.*)\\((.*)\\)', 'testIsEmpty(org.springframework.util.CollectionUtilsTests)')",[7215]
"('Description.java', 'org.junit.runner.Description', 'parseMethod', '(.*)\\((.*)\\)', 'testClasspathStartWithPatternInJar(org.springframework.core.io.support.PathMatchingResourcePatternResolverTests)')",[876]
"('Description.java', 'org.junit.runner.Description', 'parseMethod', '(.*)\\((.*)\\)', 'testHasTextNullEmpty(org.springframework.util.StringUtilsTests)')",[10344]
"('Description.java', 'org.junit.runner.Description', 'parseMethod', '(.*)\\((.*)\\)', 'testStringToBooleanInvalidString(org.springframework.core.convert.support.DefaultConversionTests)')",[2048]
"('Description.java', 'org.junit.runner.Description', 'getClassName', '(.*)\\((.*)\\)', 'org.springframework.util.FileCopyUtilsTests')","[36726, 36774, 36823, 36871]"
"('Description.java', 'org.junit.runner.Description', 'parseMethod', '(.*)\\((.*)\\)', 'testFindAnnotationFromInterface(org.springframework.core.annotation.AnnotationUtilsTests)')",[1022]
"('Description.java', 'org.junit.runner.Description', 'parseMethod', '(.*)\\((.*)\\)', 'testAnnotationPatternMatches(org.springframework.core.type.AspectJTypeFilterTests)')",[7946]
"('Description.java', 'org.junit.runner.Description', 'getClassName', '(.*)\\((.*)\\)', 'org.springframework.util.xml.TransformerUtilsTests')","[31781, 31804, 31828, 31851]"
"('AntPathStringMatcher.java', 'org.springframework.util.AntPathStringMatcher', 'matchStrings', '.*\\Q.html\\E', 'hotel.*')",[28842]
"('Description.java', 'org.junit.runner.Description', 'getClassName', '(.*)\\((.*)\\)', 'org.springframework.util.PropertyPlaceholderHelperTests')","[38914, 38934, 38955, 38975]"
"('Description.java', 'org.junit.runner.Description', 'parseMethod', '(.*)\\((.*)\\)', 'listOfListOfStringDescriptor(org.springframework.core.convert.TypeDescriptorTests)')",[1755]
"('Description.java', 'org.junit.runner.Description', 'parseMethod', '(.*)\\((.*)\\)', 'testStringToEnum(org.springframework.core.convert.support.DefaultConversionTests)')",[2468]
"('Description.java', 'org.junit.runner.Description', 'getClassName', '(.*)\\((.*)\\)', 'org.springframework.core.OrderComparatorTests')","[34398, 34446, 34495, 34543]"
"('Description.java', 'org.junit.runner.Description', 'getClassName', '(.*)\\((.*)\\)', 'org.springframework.util.TypeUtilsTests')","[31593, 31616, 31640, 31663]"
"('Description.java', 'org.junit.runner.Description', 'getClassName', '(.*)\\((.*)\\)', 'testPlainMethodInvoker(org.springframework.util.MethodInvokerTests)')",[15078]
"('Description.java', 'org.junit.runner.Description', 'parseMethod', '(.*)\\((.*)\\)', 'convertArrayToObject(org.springframework.core.convert.support.DefaultConversionTests)')",[2888]
"('Description.java', 'org.junit.runner.Description', 'parseMethod', '(.*)\\((.*)\\)', 'testStringToBooleanTrue(org.springframework.core.convert.support.DefaultConversionTests)')",[1985]
"('Description.java', 'org.junit.runner.Description', 'parseMethod', '(.*)\\((.*)\\)', 'convertStringToPrimitiveArrayWithElementConversion(org.springframework.core.convert.support.DefaultConversionTests)')",[2846]
"('Description.java', 'org.junit.runner.Description', 'getClassName', '(.*)\\((.*)\\)', 'testLinkedMap(org.springframework.core.CollectionFactoryTests)')",[8988]
"('Description.java', 'org.junit.runner.Description', 'parseMethod', '(.*)\\((.*)\\)', 'convertStringToPropertiesWithSpaces(org.springframework.core.convert.support.DefaultConversionTests)')",[3413]
"('Description.java', 'org.junit.runner.Description', 'parseMethod', '(.*)\\((.*)\\)', 'testUnresolvedPlaceholderAsError(org.springframework.util.PropertyPlaceholderHelperTests)')",[7613]
"('Description.java', 'org.junit.runner.Description', 'parseMethod', '(.*)\\((.*)\\)', 'testOverloadedMethodInInnerClass(org.springframework.core.LocalVariableTableParameterNameDiscovererTests)')",[9406]
"('Description.java', 'org.junit.runner.Description', 'parseMethod', '(.*)\\((.*)\\)', 'testFindAnnotationFromInterfaceOnSuper(org.springframework.core.annotation.AnnotationUtilsTests)')",[1043]
"('Description.java', 'org.junit.runner.Description', 'parseMethod', '(.*)\\((.*)\\)', 'testRemove(org.springframework.core.AttributeAccessorSupportTests)')",[8529]
"('Description.java', 'org.junit.runner.Description', 'parseMethod', '(.*)\\((.*)\\)', 'hasLengthSunnyDay(org.springframework.util.AssertTests)')",[4878]
"('AntPathStringMatcher.java', 'org.springframework.util.AntPathStringMatcher', 'matchStrings', '\\QResource\\E.*\\QEditor.class\\E', 'PathMatchingResourcePatternResolver$VfsResourceMatchingDelegate.class')",[21072]
"('AntPathStringMatcher.java', 'org.springframework.util.AntPathStringMatcher', 'matchStrings', '\\Qtes\\E.', 'testt')","[25404, 27172, 29103]"
"('Description.java', 'org.junit.runner.Description', 'getClassName', '(.*)\\((.*)\\)', 'testDirectAnnotationMatch(org.springframework.core.type.AnnotationTypeFilterTests)')",[8279]
"('Description.java', 'org.junit.runner.Description', 'parseMethod', '(.*)\\((.*)\\)', 'testEndsWith(org.springframework.util.PatternMatchUtilsTests)')",[14787]
"('Description.java', 'org.junit.runner.Description', 'getClassName', '(.*)\\((.*)\\)', 'org.springframework.core.AttributeAccessorSupportTests')","[34010, 34058, 34107, 34155]"
"('Description.java', 'org.junit.runner.Description', 'parseMethod', '(.*)\\((.*)\\)', 'testInterfaceToString(org.springframework.core.convert.support.GenericConversionServiceTests)')",[4021]
"('Description.java', 'org.junit.runner.Description', 'parseMethod', '(.*)\\((.*)\\)', 'testThreadNameGetsSetCorrectly(org.springframework.core.task.SimpleAsyncTaskExecutorTests)')",[9782]
"('Description.java', 'org.junit.runner.Description', 'parseMethod', '(.*)\\((.*)\\)', 'declaresException(org.springframework.util.ReflectionUtilsTests)')",[5276]
"('Description.java', 'org.junit.runner.Description', 'parseMethod', '(.*)\\((.*)\\)', 'uniqueDeliminator(org.springframework.util.AntPathMatcherTests)')",[5527]
"('AntPathStringMatcher.java', 'org.springframework.util.AntPathStringMatcher', 'matchStrings', '\\Qio\\E', 'io')","[16688, 17168, 17648, 18128, 18608, 19088, 19568, 20048, 20528, 21008, 21488, 21968, 22448]"
"('Description.java', 'org.junit.runner.Description', 'parseMethod', '(.*)\\((.*)\\)', 'convertMapToMap(org.springframework.core.convert.support.DefaultConversionTests)')",[3350]
"('Description.java', 'org.junit.runner.Description', 'parseMethod', '(.*)\\((.*)\\)', 'testGetShortNameForPrimitiveArrayClass(org.springframework.util.ClassUtilsTests)')",[15455]
"('Description.java', 'org.junit.runner.Description', 'getClassName', '(.*)\\((.*)\\)', 'org.springframework.core.type.AspectJTypeFilterTests')","[33040, 33088, 33137, 33185]"
"('Description.java', 'org.junit.runner.Description', 'parseMethod', '(.*)\\((.*)\\)', 'testCountOverloadedMethods(org.springframework.util.ClassUtilsTests)')",[15749]
"('Description.java', 'org.junit.runner.Description', 'parseMethod', '(.*)\\((.*)\\)', 'testRecurseInPlaceholder(org.springframework.util.PropertyPlaceholderHelperTests)')",[7550]
"('Description.java', 'org.junit.runner.Description', 'parseMethod', '(.*)\\((.*)\\)', 'testConcatenateStringArrays(org.springframework.util.StringUtilsTests)')",[10827]
"('Description.java', 'org.junit.runner.Description', 'parseMethod', '(.*)\\((.*)\\)', 'testDefaultStyleArray(org.springframework.core.style.ToStringCreatorTests)')",[7821]
"('Description.java', 'org.junit.runner.Description', 'parseMethod', '(.*)\\((.*)\\)', 'testNullSafeToStringWithBooleanArrayBeingEmpty(org.springframework.util.ObjectUtilsTests)')",[13617]
"('Description.java', 'org.junit.runner.Description', 'parseMethod', '(.*)\\((.*)\\)', 'testParseNegativeOverflowUsingNumberFormat(org.springframework.util.NumberUtilsTests)')",[14370]
"('Description.java', 'org.junit.runner.Description', 'parseMethod', '(.*)\\((.*)\\)', 'testLinkedSet(org.springframework.core.CollectionFactoryTests)')",[9072]
"('Description.java', 'org.junit.runner.Description', 'parseMethod', '(.*)\\((.*)\\)', 'testSimpleInterfaceType(org.springframework.core.GenericTypeResolverTests)')",[4419]
"('Description.java', 'org.junit.runner.Description', 'getClassName', '(.*)\\((.*)\\)', 'org.springframework.util.ResourceUtilsTests')","[37308, 37356, 37405, 37453]"
"('Description.java', 'org.junit.runner.Description', 'parseMethod', '(.*)\\((.*)\\)', 'testCommaDelimitedListToStringArrayWithOtherPunctuation(org.springframework.util.StringUtilsTests)')",[11184]
"('Description.java', 'org.junit.runner.Description', 'parseMethod', '(.*)\\((.*)\\)', 'testSet(org.springframework.core.style.ToStringCreatorTests)')",[7738]
"('Description.java', 'org.junit.runner.Description', 'parseMethod', '(.*)\\((.*)\\)', 'testPropertiesPersister(org.springframework.util.PropertiesPersisterTests)')",[14391]
"('Description.java', 'org.junit.runner.Description', 'parseMethod', '(.*)\\((.*)\\)', 'testDefaultStyleMap(org.springframework.core.style.ToStringCreatorTests)')",[7800]
"('Description.java', 'org.junit.runner.Description', 'parseMethod', '(.*)\\((.*)\\)', 'convertObjectToPrimitiveViaConverterFactory(org.springframework.core.convert.support.GenericConversionServiceTests)')",[3916]
"('Description.java', 'org.junit.runner.Description', 'parseMethod', '(.*)\\((.*)\\)', 'testInheritedAnnotationFromInterfaceDoesNotMatch(org.springframework.core.type.AnnotationTypeFilterTests)')",[8300]
"('Description.java', 'org.junit.runner.Description', 'parseMethod', '(.*)\\((.*)\\)', 'testSystemPropertyReplacement(org.springframework.core.io.support.ResourceArrayPropertyEditorTests)')",[647]
"('Description.java', 'org.junit.runner.Description', 'parseMethod', '(.*)\\((.*)\\)', 'testFileSystemResource(org.springframework.core.io.ResourceTests)')",[479]
"('Description.java', 'org.junit.runner.Description', 'parseMethod', '(.*)\\((.*)\\)', 'testCharacterToNumber(org.springframework.core.convert.support.DefaultConversionTests)')",[2636]
"('Description.java', 'org.junit.runner.Description', 'getClassName', '(.*)\\((.*)\\)', 'testDeleteRecursively(org.springframework.util.FileSystemUtilsTests)')",[14599]
"('Description.java', 'org.junit.runner.Description', 'parseMethod', '(.*)\\((.*)\\)', 'testIsJarURL(org.springframework.util.ResourceUtilsTests)')",[13910]
"('Description.java', 'org.junit.runner.Description', 'parseMethod', '(.*)\\((.*)\\)', 'convertNullTypeDescriptor(org.springframework.core.convert.support.GenericConversionServiceTests)')",[3832]
"('AntPathStringMatcher.java', 'org.springframework.util.AntPathStringMatcher', 'matchStrings', '.*\\Qtest\\E.*', 'AnothertestTest')","[25664, 27302, 29363]"
"('Description.java', 'org.junit.runner.Description', 'parseMethod', '(.*)\\((.*)\\)', 'testStringToString(org.springframework.core.convert.support.GenericConversionServiceTests)')",[3664]
"('Description.java', 'org.junit.runner.Description', 'getClassName', '(.*)\\((.*)\\)', 'testInitLoggingWithClasspath(org.springframework.util.Log4jConfigurerTests)')",[13763]
"('Description.java', 'org.junit.runner.Description', 'parseMethod', '(.*)\\((.*)\\)', 'testUrlResource(org.springframework.core.io.ResourceTests)')",[500]
"('Description.java', 'org.junit.runner.Description', 'parseMethod', '(.*)\\((.*)\\)', 'testPropertiesPersisterWithWhitespace(org.springframework.util.PropertiesPersisterTests)')",[14432]
"('Description.java', 'org.junit.runner.Description', 'parseMethod', '(.*)\\((.*)\\)', 'convertObjectToStringValueOfMethodPresent(org.springframework.core.convert.support.DefaultConversionTests)')",[3434]
"('Description.java', 'org.junit.runner.Description', 'parseMethod', '(.*)\\((.*)\\)', 'testNullSafeEqualsWithArrays(org.springframework.util.ObjectUtilsTests)')",[12399]
"('Description.java', 'org.junit.runner.Description', 'parseMethod', '(.*)\\((.*)\\)', 'convertObjectToCollectionWithElementConversion(org.springframework.core.convert.support.DefaultConversionTests)')",[3182]
"('Description.java', 'org.junit.runner.Description', 'parseMethod', '(.*)\\((.*)\\)', 'testParseOverflowUsingNumberFormat(org.springframework.util.NumberUtilsTests)')",[14349]
"('Description.java', 'org.junit.runner.Description', 'getClassName', '(.*)\\((.*)\\)', 'org.springframework.core.BridgeMethodResolverTests')","[24348, 24371, 24395, 24418]"
"('AntPathStringMatcher.java', 'org.springframework.util.AntPathStringMatcher', 'matchStrings', '\\Qtest\\E', 'test')","[25196, 25222, 25534, 25586, 25638, 25950, 25976, 26574, 26626, 26964, 26990, 28056, 28160, 28212, 28895, 28921, 29233, 29285, 29337, 29623, 30195, 30299, 30351]"
"('Description.java', 'org.junit.runner.Description', 'getClassName', '(.*)\\((.*)\\)', 'contentHandler(org.springframework.util.xml.StaxEventContentHandlerTests)')",[7049]
"('Description.java', 'org.junit.runner.Description', 'parseMethod', '(.*)\\((.*)\\)', 'testSPR3041(org.springframework.core.BridgeMethodResolverTests)')",[1567]
"('AntPathStringMatcher.java', 'org.springframework.util.AntPathStringMatcher', 'matchStrings', '\\Qx\\E', 'x')","[26912, 26938, 31209, 31235]"
"('Description.java', 'org.junit.runner.Description', 'parseMethod', '(.*)\\((.*)\\)', 'convertCollectionToCollection(org.springframework.core.convert.support.DefaultConversionTests)')",[3266]
"('Description.java', 'org.junit.runner.Description', 'parseMethod', '(.*)\\((.*)\\)', 'testNullSafeToStringWithFloatArrayBeingEmpty(org.springframework.util.ObjectUtilsTests)')",[11790]
"('Description.java', 'org.junit.runner.Description', 'getClassName', '(.*)\\((.*)\\)', 'instanceOf(org.springframework.util.AssertTests)')",[4689]
"('Description.java', 'org.junit.runner.Description', 'parseMethod', '(.*)\\((.*)\\)', 'testOrderedParameterDiscoverers1(org.springframework.core.PrioritizedParameterNameDiscovererTests)')",[8425]
"('Description.java', 'org.junit.runner.Description', 'parseMethod', '(.*)\\((.*)\\)', 'testList(org.springframework.core.style.ToStringCreatorTests)')",[7863]
"('Description.java', 'org.junit.runner.Description', 'parseMethod', '(.*)\\((.*)\\)', 'isTrueWithTrueExpressionSunnyDay(org.springframework.util.AssertTests)')",[4794]
"('AntPathStringMatcher.java', 'org.springframework.util.AntPathStringMatcher', 'matchStrings', '\\Qspringframework\\E', 'springframework')","[16624, 17104, 17584, 18064, 18544, 19024, 19504, 19984, 20464, 20944, 21424, 21904, 22384]"
"('Description.java', 'org.junit.runner.Description', 'getClassName', '(.*)\\((.*)\\)', 'org.springframework.core.PrioritizedParameterNameDiscovererTests')","[33816, 33864, 33913, 33961]"
"('Description.java', 'org.junit.runner.Description', 'parseMethod', '(.*)\\((.*)\\)', 'testBooleanComparatorTrueLow(org.springframework.util.comparator.ComparatorTests)')",[6216]
"('Description.java', 'org.junit.runner.Description', 'parseMethod', '(.*)\\((.*)\\)', 'validCopyToSubType(org.springframework.util.ReflectionUtilsTests)')",[5402]
"('Description.java', 'org.junit.runner.Description', 'getClassName', '(.*)\\((.*)\\)', 'org.springframework.util.xml.StaxEventXMLReaderTests')","[32439, 32462, 32486, 32509]"
"('AntPathStringMatcher.java', 'org.springframework.util.AntPathStringMatcher', 'matchStrings', '.*\\Q.\\E.*', 'test.test')","[25742, 29441]"
"('Description.java', 'org.junit.runner.Description', 'parseMethod', '(.*)\\((.*)\\)', 'testNullSafeHashCodeWithByteArrayEqualToNull(org.springframework.util.ObjectUtilsTests)')",[13050]
"('Description.java', 'org.junit.runner.Description', 'getClassName', '(.*)\\((.*)\\)', 'testBetween(org.springframework.util.PatternMatchUtilsTests)')",[14661]
"('Description.java', 'org.junit.runner.Description', 'parseMethod', '(.*)\\((.*)\\)', 'testClassPathResourceWithClass(org.springframework.core.io.ResourceTests)')",[458]
"('Description.java', 'org.junit.runner.Description', 'parseMethod', '(.*)\\((.*)\\)', 'testCtorWithNullClass(org.springframework.core.ConstantsTests)')",[9531]
"('Description.java', 'org.junit.runner.Description', 'parseMethod', '(.*)\\((.*)\\)', 'convertArrayToObjectWithElementConversion(org.springframework.core.convert.support.DefaultConversionTests)')",[2909]
"('Description.java', 'org.junit.runner.Description', 'parseMethod', '(.*)\\((.*)\\)', 'testCopyRecursively(org.springframework.util.FileSystemUtilsTests)')",[14620]
"('Description.java', 'org.junit.runner.Description', 'parseMethod', '(.*)\\((.*)\\)', 'testDelimitedListToStringArrayWithEmptyString(org.springframework.util.StringUtilsTests)')",[11100]
"('Description.java', 'org.junit.runner.Description', 'parseMethod', '(.*)\\((.*)\\)', 'invokeMethod(org.springframework.util.ReflectionUtilsTests)')",[5255]
"('Description.java', 'org.junit.runner.Description', 'parseMethod', '(.*)\\((.*)\\)', 'testDoubleParameterization(org.springframework.core.BridgeMethodResolverTests)')",[1315]
"('Description.java', 'org.junit.runner.Description', 'getClassName', '(.*)\\((.*)\\)', 'org.springframework.core.type.AnnotationTypeFilterTests')","[33622, 33670, 33719, 33767]"
"('Description.java', 'org.junit.runner.Description', 'parseMethod', '(.*)\\((.*)\\)', 'testBigDecimalToString(org.springframework.core.convert.support.DefaultConversionTests)')",[2405]
"('Description.java', 'org.junit.runner.Description', 'parseMethod', '(.*)\\((.*)\\)', 'testIsPrimitiveOrWrapperWithDoubleWrapperClass(org.springframework.util.ObjectUtilsTests)')",[12777]
"('AntPathStringMatcher.java', 'org.springframework.util.AntPathStringMatcher', 'matchStrings', '\\QResource\\E.*\\QEditor.class\\E', 'ResourceArrayPropertyEditor.class')",[22032]
"('Description.java', 'org.junit.runner.Description', 'parseMethod', '(.*)\\((.*)\\)', 'testNullSafeToStringWithShortArray(org.springframework.util.ObjectUtilsTests)')",[12042]
"('Description.java', 'org.junit.runner.Description', 'parseMethod', '(.*)\\((.*)\\)', 'testClassPackageAsResourcePath(org.springframework.util.ClassUtilsTests)')",[15833]
"('Description.java', 'org.junit.runner.Description', 'parseMethod', '(.*)\\((.*)\\)', 'testIsPrimitiveOrWrapperWithShortWrapperClass(org.springframework.util.ObjectUtilsTests)')",[12966]
"('AntPathStringMatcher.java', 'org.springframework.util.AntPathStringMatcher', 'matchStrings', '.*\\Q.\\E.*', 'test.')","[25716, 29415]"
"('AntPathStringMatcher.java', 'org.springframework.util.AntPathStringMatcher', 'matchStrings', '\\Qorg\\E', 'org')","[16592, 17072, 17552, 18032, 18512, 18992, 19472, 19952, 20432, 20912, 21392, 21872, 22352]"
"('Description.java', 'org.junit.runner.Description', 'parseMethod', '(.*)\\((.*)\\)', 'copySrcToDestinationOfIncorrectClass(org.springframework.util.ReflectionUtilsTests)')",[5297]
"('Description.java', 'org.junit.runner.Description', 'parseMethod', '(.*)\\((.*)\\)', 'testInitLoggingWithRelativeFilePathAndRefreshInterval(org.springframework.util.Log4jConfigurerTests)')",[13847]
"('Description.java', 'org.junit.runner.Description', 'parseMethod', '(.*)\\((.*)\\)', 'deserializeNonSerializable(org.springframework.util.SerializationUtilsTests)')",[4606]
"('AntPathStringMatcher.java', 'org.springframework.util.AntPathStringMatcher', 'matchStrings', '.*\\Q.\\E.*', 'test.test.test')","[25768, 29467]"
"('Description.java', 'org.junit.runner.Description', 'parseMethod', '(.*)\\((.*)\\)', 'testWithDoubleBoundParameterizedOnInstantiate(org.springframework.core.BridgeMethodResolverTests)')",[1399]
"('Description.java', 'org.junit.runner.Description', 'parseMethod', '(.*)\\((.*)\\)', 'validCopyOnSubTypeWithNewField(org.springframework.util.ReflectionUtilsTests)')",[5381]
"('Description.java', 'org.junit.runner.Description', 'parseMethod', '(.*)\\((.*)\\)', 'testSubclassPatternNoMatches(org.springframework.core.type.AspectJTypeFilterTests)')",[7905]
"('Description.java', 'org.junit.runner.Description', 'parseMethod', '(.*)\\((.*)\\)', 'testIgnoreCopyConstructor(org.springframework.core.convert.support.GenericConversionServiceTests)')",[4252]
"('Description.java', 'org.junit.runner.Description', 'parseMethod', '(.*)\\((.*)\\)', 'testGetQualifiedNameForMultiDimensionalPrimitiveArrayClass(org.springframework.util.ClassUtilsTests)')",[15665]
"('Description.java', 'org.junit.runner.Description', 'parseMethod', '(.*)\\((.*)\\)', 'duplicatesFound(org.springframework.util.ReflectionUtilsTests)')",[5465]
"('Description.java', 'org.junit.runner.Description', 'parseMethod', '(.*)\\((.*)\\)', 'testNullSafeToStringWithBooleanArrayEqualToNull(org.springframework.util.ObjectUtilsTests)')",[13638]
"('Description.java', 'org.junit.runner.Description', 'parseMethod', '(.*)\\((.*)\\)', 'convertObjectToStringStringConstructorPresent(org.springframework.core.convert.support.DefaultConversionTests)')",[3455]
"('Description.java', 'org.junit.runner.Description', 'parseMethod', '(.*)\\((.*)\\)', 'extractUriTemplateVariables(org.springframework.util.AntPathMatcherTests)')",[5569]
"('Description.java', 'org.junit.runner.Description', 'parseMethod', '(.*)\\((.*)\\)', 'testFindBridgedVarargMethod(org.springframework.core.BridgeMethodResolverTests)')",[1231]
"('Description.java', 'org.junit.runner.Description', 'parseMethod', '(.*)\\((.*)\\)', 'convertObjectToObjectFinderMethod(org.springframework.core.convert.support.DefaultConversionTests)')",[3560]
"('AntPathStringMatcher.java', 'org.springframework.util.AntPathStringMatcher', 'matchStrings', '\\Qa\\E', 'a')","[26184, 26210, 26288, 26314, 27692, 27718, 27796, 27822, 29831, 29857, 29935, 29961]"
"('Description.java', 'org.junit.runner.Description', 'parseMethod', '(.*)\\((.*)\\)', 'testEquals(org.springframework.core.enums.LabeledEnumTests)')",[9969]
"('Description.java', 'org.junit.runner.Description', 'parseMethod', '(.*)\\((.*)\\)', 'testD2(org.springframework.core.GenericCollectionTypeResolverTests)')",[8717]
"('Description.java', 'org.junit.runner.Description', 'parseMethod', '(.*)\\((.*)\\)', 'testCompareOrderedInstancesSame(org.springframework.core.OrderComparatorTests)')",[8947]
"('Description.java', 'org.junit.runner.Description', 'parseMethod', '(.*)\\((.*)\\)', 'disableIndentingWithNullTransformer(org.springframework.util.xml.TransformerUtilsTests)')",[6446]
"('Description.java', 'org.junit.runner.Description', 'parseMethod', '(.*)\\((.*)\\)', 'testE2(org.springframework.core.GenericCollectionTypeResolverTests)')",[8780]
"('Description.java', 'org.junit.runner.Description', 'parseMethod', '(.*)\\((.*)\\)', 'testNullSafeToStringWithObjectArrayEqualToNull(org.springframework.util.ObjectUtilsTests)')",[12021]
"('Description.java', 'org.junit.runner.Description', 'getClassName', '(.*)\\((.*)\\)', 'testIsAnnotationDeclaredLocally(org.springframework.core.annotation.AnnotationUtilsTests)')",[917]
"('Description.java', 'org.junit.runner.Description', 'parseMethod', '(.*)\\((.*)\\)', 'isTrueWithFalseExpressionThrowsException(org.springframework.util.AssertTests)')",[4773]
"('Description.java', 'org.junit.runner.Description', 'parseMethod', '(.*)\\((.*)\\)', 'assertNotEmptyWithEmptyMapThrowsException(org.springframework.util.AssertTests)')",[5046]
"('Description.java', 'org.junit.runner.Description', 'getClassName', '(.*)\\((.*)\\)', 'org.springframework.util.AntPathMatcherTests')","[31311, 31334, 31358, 31381]"
"('Description.java', 'org.junit.runner.Description', 'parseMethod', '(.*)\\((.*)\\)', 'hasLengthWithEmptyStringThrowsException(org.springframework.util.AssertTests)')",[4836]
"('Description.java', 'org.junit.runner.Description', 'parseMethod', '(.*)\\((.*)\\)', 'testParseAsHex(org.springframework.util.NumberUtilsTests)')",[14076]
"('Description.java', 'org.junit.runner.Description', 'parseMethod', '(.*)\\((.*)\\)', 'setAndGetAsTextWithWhitespaceResource(org.springframework.core.io.ResourceEditorTests)')",[208]
"('Description.java', 'org.junit.runner.Description', 'parseMethod', '(.*)\\((.*)\\)', 'testTokenizeToStringArrayWithNotTrimTokens(org.springframework.util.StringUtilsTests)')",[10995]
"('Description.java', 'org.junit.runner.Description', 'parseMethod', '(.*)\\((.*)\\)', 'testCommaDelimitedListToStringArrayWithEmptyStringProducesEmptyArray(org.springframework.util.StringUtilsTests)')",[11037]
"('AntPathStringMatcher.java', 'org.springframework.util.AntPathStringMatcher', 'matchStrings', '.*\\Qbla\\E', 'bbb')",[30429]
"('AntPathStringMatcher.java', 'org.springframework.util.AntPathStringMatcher', 'matchStrings', '....', 'bala')","[26678, 30403]"
"('Description.java', 'org.junit.runner.Description', 'parseMethod', '(.*)\\((.*)\\)', 'contentHandler(org.springframework.util.xml.StaxStreamContentHandlerTests)')",[6675]
"('Description.java', 'org.junit.runner.Description', 'parseMethod', '(.*)\\((.*)\\)', 'testDirectAnnotationMatch(org.springframework.core.type.AnnotationTypeFilterTests)')",[8259]
"('AntPathStringMatcher.java', 'org.springframework.util.AntPathStringMatcher', 'matchStrings', '\\QA-\\E(.*)\\Q-C\\E', 'A-b-C')",[28602]
"('Description.java', 'org.junit.runner.Description', 'parseMethod', '(.*)\\((.*)\\)', 'convertObjectToArray(org.springframework.core.convert.support.DefaultConversionTests)')",[2930]
"('Description.java', 'org.junit.runner.Description', 'parseMethod', '(.*)\\((.*)\\)', 'testGetShortNameAsProperty(org.springframework.util.ClassUtilsTests)')",[15518]
"('Description.java', 'org.junit.runner.Description', 'parseMethod', '(.*)\\((.*)\\)', 'contentHandlerNamespacesNoPrefixes(org.springframework.util.xml.StaxStreamXMLReaderTests)')",[6778]
"('AntPathStringMatcher.java', 'org.springframework.util.AntPathStringMatcher', 'matchStrings', '\\Qtest\\E.*\\Qaaa\\E', 'testblaaab')","[26106, 27614, 29753]"
"('Description.java', 'org.junit.runner.Description', 'parseMethod', '(.*)\\((.*)\\)', 'testReplaceFromSystemProperty(org.springframework.util.SystemPropertyUtilsTests)')",[5799]
"('Description.java', 'org.junit.runner.Description', 'parseMethod', '(.*)\\((.*)\\)', 'testParseLocaleStringWithEmptyLocaleStringYieldsNullLocale(org.springframework.util.StringUtilsTests)')",[11289]
"('Description.java', 'org.junit.runner.Description', 'parseMethod', '(.*)\\((.*)\\)', 'testGetClassFileName(org.springframework.util.ClassUtilsTests)')",[15539]
"('Description.java', 'org.junit.runner.Description', 'parseMethod', '(.*)\\((.*)\\)', 'testNullSafeToStringWithByteArrayEqualToNull(org.springframework.util.ObjectUtilsTests)')",[11602]
"('Description.java', 'org.junit.runner.Description', 'parseMethod', '(.*)\\((.*)\\)', 'convertCollectionToString(org.springframework.core.convert.support.DefaultConversionTests)')",[3014]
"('AntPathStringMatcher.java', 'org.springframework.util.AntPathStringMatcher', 'matchStrings', '.*\\Q.\\E.*', 'tsttst')","[26054, 29701]"
"('Description.java', 'org.junit.runner.Description', 'parseMethod', '(.*)\\((.*)\\)', 'testStripFilenameExtension(org.springframework.util.StringUtilsTests)')",[10764]
"('Description.java', 'org.junit.runner.Description', 'parseMethod', '(.*)\\((.*)\\)', 'testInterfaceMatch(org.springframework.core.type.AssignableTypeFilterTests)')",[8134]
"('Description.java', 'org.junit.runner.Description', 'parseMethod', '(.*)\\((.*)\\)', 'contentHandlerNamespacePrefixes(org.springframework.util.xml.StaxStreamContentHandlerTests)')",[6716]
"('Description.java', 'org.junit.runner.Description', 'getClassName', '(.*)\\((.*)\\)', 'testValidUsage(org.springframework.util.StopWatchTests)')",[14828]
"('Description.java', 'org.junit.runner.Description', 'getClassName', '(.*)\\((.*)\\)', 'org.springframework.util.xml.StaxStreamXMLReaderTests')","[32157, 32180, 32204, 32227]"
"('Description.java', 'org.junit.runner.Description', 'parseMethod', '(.*)\\((.*)\\)', 'testParseLocaleWithMultiValuedVariantUsingSpacesAsSeparatorsWithLotsOfLeadingWhitespace(org.springframework.util.StringUtilsTests)')",[11373]
"('Description.java', 'org.junit.runner.Description', 'parseMethod', '(.*)\\((.*)\\)', 'withMatchStart(org.springframework.util.AntPathMatcherTests)')",[5486]
"('Description.java', 'org.junit.runner.Description', 'getClassName', '(.*)\\((.*)\\)', 'testInvalidPrefixWithPatternElementInIt(org.springframework.core.io.support.PathMatchingResourcePatternResolverTests)')",[771]
"('Description.java', 'org.junit.runner.Description', 'parseMethod', '(.*)\\((.*)\\)', 'testStringToNumberEmptyString(org.springframework.core.convert.support.DefaultConversionTests)')",[2447]
"('Description.java', 'org.junit.runner.Description', 'parseMethod', '(.*)\\((.*)\\)', 'testFileSystemResourceWithRelativePath(org.springframework.core.io.ResourceTests)')",[354]
"('Description.java', 'org.junit.runner.Description', 'parseMethod', '(.*)\\((.*)\\)', 'testAsmAnnotationMetadata(org.springframework.core.type.AnnotationMetadataTests)')",[8197]
"('Description.java', 'org.junit.runner.Description', 'parseMethod', '(.*)\\((.*)\\)', 'testNullSafeToStringWithShortArrayBeingEmpty(org.springframework.util.ObjectUtilsTests)')",[12063]
"('Description.java', 'org.junit.runner.Description', 'parseMethod', '(.*)\\((.*)\\)', 'convertObjectToObjectFinderMethodWithIdConversion(org.springframework.core.convert.support.DefaultConversionTests)')",[3602]
"('Description.java', 'org.junit.runner.Description', 'parseMethod', '(.*)\\((.*)\\)', 'testNullSafeHashCodeWithLongArrayEqualToNull(org.springframework.util.ObjectUtilsTests)')",[13260]
"('Description.java', 'org.junit.runner.Description', 'parseMethod', '(.*)\\((.*)\\)', 'testByteArrayResource(org.springframework.core.io.ResourceTests)')",[542]
"('Description.java', 'org.junit.runner.Description', 'parseMethod', '(.*)\\((.*)\\)', 'testGetQualifiedNameForMultiDimensionalObjectArrayClass(org.springframework.util.ClassUtilsTests)')",[15623]
"('Description.java', 'org.junit.runner.Description', 'getClassName', '(.*)\\((.*)\\)', 'org.springframework.util.AutoPopulatingListTests')","[38472, 38520, 38569, 38617]"
"('Description.java', 'org.junit.runner.Description', 'parseMethod', '(.*)\\((.*)\\)', 'testB3(org.springframework.core.GenericCollectionTypeResolverTests)')",[8654]
"('Description.java', 'org.junit.runner.Description', 'parseMethod', '(.*)\\((.*)\\)', 'testIsPrimitiveOrWrapperWithBooleanPrimitiveClass(org.springframework.util.ObjectUtilsTests)')",[12630]
"('Description.java', 'org.junit.runner.Description', 'getClassName', '(.*)\\((.*)\\)', 'getNamespaceURI(org.springframework.util.xml.SimpleNamespaceContextTests)')",[6882]
"('Description.java', 'org.junit.runner.Description', 'parseMethod', '(.*)\\((.*)\\)', 'testClassPathResource(org.springframework.core.io.ResourceTests)')",[626]
"('Description.java', 'org.junit.runner.Description', 'parseMethod', '(.*)\\((.*)\\)', 'testLongToString(org.springframework.core.convert.support.DefaultConversionTests)')",[2237]
"('Description.java', 'org.junit.runner.Description', 'parseMethod', '(.*)\\((.*)\\)', 'testGetMethodIfAvailable(org.springframework.util.ClassUtilsTests)')",[15707]
"('Description.java', 'org.junit.runner.Description', 'parseMethod', '(.*)\\((.*)\\)', 'assertNotEmptyWithMapSunnyDay(org.springframework.util.AssertTests)')",[5067]
"('Description.java', 'org.junit.runner.Description', 'parseMethod', '(.*)\\((.*)\\)', 'testCompareOrderedInstancesAfter(org.springframework.core.OrderComparatorTests)')",[8864]
"('Description.java', 'org.junit.runner.Description', 'parseMethod', '(.*)\\((.*)\\)', 'testSerialization(org.springframework.util.AutoPopulatingListTests)')",[15037]
"('Description.java', 'org.junit.runner.Description', 'parseMethod', '(.*)\\((.*)\\)', 'testThrowsExceptionWhenSuppliedWithNullRunnable(org.springframework.core.task.SimpleAsyncTaskExecutorTests)')",[9824]
"('Description.java', 'org.junit.runner.Description', 'parseMethod', '(.*)\\((.*)\\)', 'testDoesNotMatchWrongClass(org.springframework.core.enums.LabeledEnumTests)')",[10031]
"('Description.java', 'org.junit.runner.Description', 'parseMethod', '(.*)\\((.*)\\)', 'testSingleResourceInJar(org.springframework.core.io.support.PathMatchingResourcePatternResolverTests)')",[813]
"('Description.java', 'org.junit.runner.Description', 'parseMethod', '(.*)\\((.*)\\)', 'lexicalHandler(org.springframework.util.xml.StaxStreamXMLReaderTests)')",[6841]
"('Description.java', 'org.junit.runner.Description', 'getClassName', '(.*)\\((.*)\\)', 'testSimpleObject(org.springframework.core.ConventionsTests)')",[9113]
"('AntPathStringMatcher.java', 'org.springframework.util.AntPathStringMatcher', 'matchStrings', '.*', 'Test')","[25560, 29259]"
"('Description.java', 'org.junit.runner.Description', 'parseMethod', '(.*)\\((.*)\\)', 'testInitLoggingWithAbsoluteFilePath(org.springframework.util.Log4jConfigurerTests)')",[13805]
"('Description.java', 'org.junit.runner.Description', 'getClassName', '(.*)\\((.*)\\)', 'org.springframework.util.xml.StaxSourceTests')","[31969, 31992, 32016, 32039]"
"('Description.java', 'org.junit.runner.Description', 'parseMethod', '(.*)\\((.*)\\)', 'testSPR2648(org.springframework.core.BridgeMethodResolverTests)')",[1525]
"('Description.java', 'org.junit.runner.Description', 'parseMethod', '(.*)\\((.*)\\)', 'testNestedCheckedExceptionWithRootCause(org.springframework.core.NestedExceptionTests)')",[7717]
"('Description.java', 'org.junit.runner.Description', 'parseMethod', '(.*)\\((.*)\\)', 'eventReaderSourceToDOMResult(org.springframework.util.xml.StaxSourceTests)')",[6633]
"('Description.java', 'org.junit.runner.Description', 'parseMethod', '(.*)\\((.*)\\)', 'contentHandlerNamespacesPrefixes(org.springframework.util.xml.StaxEventXMLReaderTests)')",[7132]
"('Description.java', 'org.junit.runner.Description', 'parseMethod', '(.*)\\((.*)\\)', 'testQuote(org.springframework.util.StringUtilsTests)')",[10617]
"('Description.java', 'org.junit.runner.Description', 'parseMethod', '(.*)\\((.*)\\)', 'testParseWithTrimUsingNumberFormat(org.springframework.util.NumberUtilsTests)')",[14055]
"('Description.java', 'org.junit.runner.Description', 'parseMethod', '(.*)\\((.*)\\)', 'testOverloadedStaticMethod(org.springframework.core.LocalVariableTableParameterNameDiscovererTests)')",[9343]
"('Description.java', 'org.junit.runner.Description', 'parseMethod', '(.*)\\((.*)\\)', 'testIsArrayOfPrimitivesWithBooleanArray(org.springframework.util.ObjectUtilsTests)')",[12567]
"('Description.java', 'org.junit.runner.Description', 'parseMethod', '(.*)\\((.*)\\)', 'testPlainMethodInvoker(org.springframework.util.MethodInvokerTests)')",[15058]
"('Description.java', 'org.junit.runner.Description', 'parseMethod', '(.*)\\((.*)\\)', 'testSimpleCollectionInterfaceType(org.springframework.core.GenericTypeResolverTests)')",[4336]
"('Description.java', 'org.junit.runner.Description', 'parseMethod', '(.*)\\((.*)\\)', 'testObjectArrayToStringArray(org.springframework.core.convert.support.GenericConversionServiceTests)')",[4063]
"('Description.java', 'org.junit.runner.Description', 'parseMethod', '(.*)\\((.*)\\)', 'removeBinding(org.springframework.util.xml.SimpleNamespaceContextTests)')",[6903]
"('Description.java', 'org.junit.runner.Description', 'parseMethod', '(.*)\\((.*)\\)', 'convertPropertiesToString(org.springframework.core.convert.support.DefaultConversionTests)')",[3371]
"('Description.java', 'org.junit.runner.Description', 'parseMethod', '(.*)\\((.*)\\)', 'testGetValueFromAnnotation(org.springframework.core.annotation.AnnotationUtilsTests)')",[959]
"('Description.java', 'org.junit.runner.Description', 'getClassName', '(.*)\\((.*)\\)', 'org.springframework.core.style.ToStringCreatorTests')","[32846, 32894, 32943, 32991]"
"('Description.java', 'org.junit.runner.Description', 'parseMethod', '(.*)\\((.*)\\)', 'testDuplicateIterators(org.springframework.util.CompositeIteratorTests)')",[10178]
"('AntPathStringMatcher.java', 'org.springframework.util.AntPathStringMatcher', 'matchStrings', '..', 'aa')","[26262, 27770, 29909]"
"('Description.java', 'org.junit.runner.Description', 'parseMethod', '(.*)\\((.*)\\)', 'testNullSafeToStringWithIntArrayEqualToNull(org.springframework.util.ObjectUtilsTests)')",[11874]
"('Description.java', 'org.junit.runner.Description', 'parseMethod', '(.*)\\((.*)\\)', 'testNullSafeToStringWithDoubleArrayBeingEmpty(org.springframework.util.ObjectUtilsTests)')",[11727]
"('Description.java', 'org.junit.runner.Description', 'parseMethod', '(.*)\\((.*)\\)', 'testLabelFoundForStandAloneEnum(org.springframework.core.enums.LabeledEnumTests)')",[10136]
"('Description.java', 'org.junit.runner.Description', 'parseMethod', '(.*)\\((.*)\\)', 'testDoubleToBigInteger(org.springframework.util.NumberUtilsTests)')",[14118]
"('AntPathStringMatcher.java', 'org.springframework.util.AntPathStringMatcher', 'matchStrings', '\\Qorg.springframework.core\\E', 'org.springframework.core')","[16496, 16976, 17456, 17936, 18416, 18896, 19376, 19856, 20336, 20816, 21296, 21776, 22256]"
"('Description.java', 'org.junit.runner.Description', 'parseMethod', '(.*)\\((.*)\\)', 'testInUse(org.springframework.util.CompositeIteratorTests)')",[10282]
"('Description.java', 'org.junit.runner.Description', 'parseMethod', '(.*)\\((.*)\\)', 'testStringToCharacter(org.springframework.core.convert.support.DefaultConversionTests)')",[1881]
"('Description.java', 'org.junit.runner.Description', 'parseMethod', '(.*)\\((.*)\\)', 'testMergeArrayIntoCollection(org.springframework.util.CollectionUtilsTests)')",[7236]
"('Description.java', 'org.junit.runner.Description', 'parseMethod', '(.*)\\((.*)\\)', 'sourceTypeIsVoid(org.springframework.core.convert.support.GenericConversionServiceTests)')",[3769]
"('Description.java', 'org.junit.runner.Description', 'parseMethod', '(.*)\\((.*)\\)', 'testToObjectArray(org.springframework.util.ObjectUtilsTests)')",[13722]
"('Description.java', 'org.junit.runner.Description', 'getClassName', '(.*)\\((.*)\\)', 'org.springframework.core.io.support.ResourceArrayPropertyEditorTests')","[22536, 22559, 22583, 22606]"
"('Description.java', 'org.junit.runner.Description', 'parseMethod', '(.*)\\((.*)\\)', 'testIsPrimitiveOrWrapperWithLongPrimitiveClass(org.springframework.util.ObjectUtilsTests)')",[12882]
"('Description.java', 'org.junit.runner.Description', 'parseMethod', '(.*)\\((.*)\\)', 'testPropertiesPersisterWithReaderAndWhitespace(org.springframework.util.PropertiesPersisterTests)')",[14516]
"('AntPathStringMatcher.java', 'org.springframework.util.AntPathStringMatcher', 'matchStrings', '.*\\Q.class\\E', 'LogFactory$2.class')","[23250, 24062]"
"('Description.java', 'org.junit.runner.Description', 'parseMethod', '(.*)\\((.*)\\)', 'testStringToBigDecimal(org.springframework.core.convert.support.DefaultConversionTests)')",[2384]
"('Description.java', 'org.junit.runner.Description', 'parseMethod', '(.*)\\((.*)\\)', 'testGetShortNameForObjectArrayClass(org.springframework.util.ClassUtilsTests)')",[15413]
"('Description.java', 'org.junit.runner.Description', 'parseMethod', '(.*)\\((.*)\\)', 'testReplace(org.springframework.util.StringUtilsTests)')",[10491]
"('Description.java', 'org.junit.runner.Description', 'parseMethod', '(.*)\\((.*)\\)', 'testStandardAnnotationMetadata(org.springframework.core.type.AnnotationMetadataTests)')",[8238]
"('Description.java', 'org.junit.runner.Description', 'parseMethod', '(.*)\\((.*)\\)', 'testCompareOrderedInstancesBefore(org.springframework.core.OrderComparatorTests)')",[8926]
"('Description.java', 'org.junit.runner.Description', 'parseMethod', '(.*)\\((.*)\\)', 'testOverloadedStaticMethod(org.springframework.util.ClassUtilsTests)')",[15246]
"('Description.java', 'org.junit.runner.Description', 'parseMethod', '(.*)\\((.*)\\)', 'testDirectMatch(org.springframework.core.type.AssignableTypeFilterTests)')",[8093]
"('Description.java', 'org.junit.runner.Description', 'parseMethod', '(.*)\\((.*)\\)', 'testToObjectArrayWithNull(org.springframework.util.ObjectUtilsTests)')",[12189]
"('Description.java', 'org.junit.runner.Description', 'parseMethod', '(.*)\\((.*)\\)', 'testIsCheckedException(org.springframework.util.ObjectUtilsTests)')",[13701]
"('Description.java', 'org.junit.runner.Description', 'parseMethod', '(.*)\\((.*)\\)', 'convertSuperSourceType(org.springframework.core.convert.support.GenericConversionServiceTests)')",[3874]
"('Description.java', 'org.junit.runner.Description', 'parseMethod', '(.*)\\((.*)\\)', 'convertObjectToPrimitive(org.springframework.core.convert.support.GenericConversionServiceTests)')",[3895]
"('Description.java', 'org.junit.runner.Description', 'getClassName', '(.*)\\((.*)\\)', 'org.springframework.util.StopWatchTests')","[38278, 38326, 38375, 38423]"
"('Description.java', 'org.junit.runner.Description', 'parseMethod', '(.*)\\((.*)\\)', 'testNullSafeHashCodeWithObjectBeingCharArray(org.springframework.util.ObjectUtilsTests)')",[13386]
"('Description.java', 'org.junit.runner.Description', 'parseMethod', '(.*)\\((.*)\\)', 'testThrottleIsNotActiveByDefault(org.springframework.core.task.SimpleAsyncTaskExecutorTests)')",[9761]
"('Description.java', 'org.junit.runner.Description', 'parseMethod', '(.*)\\((.*)\\)', 'nonSerializableField(org.springframework.core.serializer.SerializationConverterTests)')",[83]
"('Description.java', 'org.junit.runner.Description', 'parseMethod', '(.*)\\((.*)\\)', 'testEmptyList(org.springframework.core.convert.support.GenericConversionServiceTests)')",[4189]
"('Description.java', 'org.junit.runner.Description', 'parseMethod', '(.*)\\((.*)\\)', 'buildingArrayTypeDescriptor(org.springframework.core.convert.TypeDescriptorTests)')",[1818]
"('Description.java', 'org.junit.runner.Description', 'parseMethod', '(.*)\\((.*)\\)', 'testSPR2763(org.springframework.core.BridgeMethodResolverTests)')",[1546]
"('Description.java', 'org.junit.runner.Description', 'getClassName', '(.*)\\((.*)\\)', 'testPartial(org.springframework.util.xml.StaxStreamXMLReaderTests)')",[6757]
"('Description.java', 'org.junit.runner.Description', 'parseMethod', '(.*)\\((.*)\\)', 'patternComparatorSort(org.springframework.util.AntPathMatcherTests)')",[5632]
"('AntPathStringMatcher.java', 'org.springframework.util.AntPathStringMatcher', 'matchStrings', '\\QResource\\E.*\\QEditor.class\\E', 'PathMatchingResourcePatternResolver$PatternVirtualFileVisitor.class')",[19152]
"('Description.java', 'org.junit.runner.Description', 'parseMethod', '(.*)\\((.*)\\)', 'testPatternResource(org.springframework.core.io.support.ResourceArrayPropertyEditorTests)')",[730]
"('Description.java', 'org.junit.runner.Description', 'parseMethod', '(.*)\\((.*)\\)', 'isNullDoesNotThrowExceptionIfArgumentIsNull(org.springframework.util.AssertTests)')",[4710]
"('Description.java', 'org.junit.runner.Description', 'parseMethod', '(.*)\\((.*)\\)', 'combine(org.springframework.util.AntPathMatcherTests)')",[5653]
"('Description.java', 'org.junit.runner.Description', 'parseMethod', '(.*)\\((.*)\\)', 'listDescriptor(org.springframework.core.convert.TypeDescriptorTests)')",[1714]
"('Description.java', 'org.junit.runner.Description', 'parseMethod', '(.*)\\((.*)\\)', 'testComparableComparatorIllegalArgs(org.springframework.util.comparator.ComparatorTests)')",[6175]
"('Description.java', 'org.junit.runner.Description', 'parseMethod', '(.*)\\((.*)\\)', 'testCannotExecuteWhenConcurrencyIsSwitchedOff(org.springframework.core.task.SimpleAsyncTaskExecutorTests)')",[9720]
"('Description.java', 'org.junit.runner.Description', 'parseMethod', '(.*)\\((.*)\\)', 'testInvalidPrefixWithPatternElementInIt(org.springframework.core.io.support.PathMatchingResourcePatternResolverTests)')",[751]
"('Description.java', 'org.junit.runner.Description', 'parseMethod', '(.*)\\((.*)\\)', 'testCreateTypeVariableMap(org.springframework.core.BridgeMethodResolverTests)')",[1294]
"('Description.java', 'org.junit.runner.Description', 'parseMethod', '(.*)\\((.*)\\)', 'testParseOverflow(org.springframework.util.NumberUtilsTests)')",[14307]
"('Description.java', 'org.junit.runner.Description', 'parseMethod', '(.*)\\((.*)\\)', 'testIsBridgeMethodFor(org.springframework.core.BridgeMethodResolverTests)')",[1273]
"('AntPathStringMatcher.java', 'org.springframework.util.AntPathStringMatcher', 'matchStrings', '\\Qtes\\E.', 'tsst')","[25430, 27198, 29129]"
"('AntPathStringMatcher.java', 'org.springframework.util.AntPathStringMatcher', 'matchStrings', '\\QResource\\E.*\\QEditor.class\\E', 'PathMatchingResourcePatternResolver.class')",[20112]
"('Description.java', 'org.junit.runner.Description', 'parseMethod', '(.*)\\((.*)\\)', 'testNumberToNumberNotSupportedNumber(org.springframework.core.convert.support.DefaultConversionTests)')",[2594]
"('Description.java', 'org.junit.runner.Description', 'parseMethod', '(.*)\\((.*)\\)', 'testNullSafeHashCodeWithObject(org.springframework.util.ObjectUtilsTests)')",[13281]
"('AntPathStringMatcher.java', 'org.springframework.util.AntPathStringMatcher', 'matchStrings', '(.*)\\Q.\\E.*', '42.html')",[28576]
"('Description.java', 'org.junit.runner.Description', 'getClassName', '(.*)\\((.*)\\)', 'org.springframework.util.ObjectUtilsTests')","[36920, 36968, 37017, 37065]"
"('Description.java', 'org.junit.runner.Description', 'parseMethod', '(.*)\\((.*)\\)', 'testPropertiesPersisterWithHeader(org.springframework.util.PropertiesPersisterTests)')",[14453]
"('Description.java', 'org.junit.runner.Description', 'parseMethod', '(.*)\\((.*)\\)', 'complexTypeDescriptor(org.springframework.core.convert.TypeDescriptorTests)')",[1839]
"('Description.java', 'org.junit.runner.Description', 'parseMethod', '(.*)\\((.*)\\)', 'convertArrayToCollectionImpl(org.springframework.core.convert.support.DefaultConversionTests)')",[2699]
"('Description.java', 'org.junit.runner.Description', 'getClassName', '(.*)\\((.*)\\)', 'testCompareOrderedInstancesAfter(org.springframework.core.OrderComparatorTests)')",[8884]
"('Description.java', 'org.junit.runner.Description', 'parseMethod', '(.*)\\((.*)\\)', 'testListOfList(org.springframework.core.convert.support.GenericConversionServiceTests)')",[4168]
"('Description.java', 'org.junit.runner.Description', 'parseMethod', '(.*)\\((.*)\\)', 'testSingleIterator(org.springframework.util.CompositeIteratorTests)')",[10240]
"('AntPathStringMatcher.java', 'org.springframework.util.AntPathStringMatcher', 'matchStrings', '\\Qtest\\E.*', 'test')","[25482, 25846, 25898, 25924, 26418, 26444, 27250, 29181, 29571, 29597]"
"('Description.java', 'org.junit.runner.Description', 'parseMethod', '(.*)\\((.*)\\)', 'testDelimitedListToStringArrayWithComma(org.springframework.util.StringUtilsTests)')",[11058]
"('Description.java', 'org.junit.runner.Description', 'parseMethod', '(.*)\\((.*)\\)', 'testHasLengthWithNullStringThrowsException(org.springframework.util.AssertTests)')",[4815]
"('AntPathStringMatcher.java', 'org.springframework.util.AntPathStringMatcher', 'matchStrings', '\\Q864_105\\E', '864_105')","[16400, 16880, 17360, 17840, 18320, 18800, 19280, 19760, 20240, 20720, 21200, 21680, 22160]"
"('Description.java', 'org.junit.runner.Description', 'parseMethod', '(.*)\\((.*)\\)', 'testGetQualifiedNameForObjectArrayClass(org.springframework.util.ClassUtilsTests)')",[15602]
"('Description.java', 'org.junit.runner.Description', 'parseMethod', '(.*)\\((.*)\\)', 'targetTypeIsVoid(org.springframework.core.convert.support.GenericConversionServiceTests)')",[3790]
"('Description.java', 'org.junit.runner.Description', 'getClassName', '(.*)\\((.*)\\)', 'org.springframework.util.comparator.ComparatorTests')","[31687, 31710, 31734, 31757]"
"('Description.java', 'org.junit.runner.Description', 'parseMethod', '(.*)\\((.*)\\)', 'testDeleteRecursively(org.springframework.util.FileSystemUtilsTests)')",[14579]
"('Description.java', 'org.junit.runner.Description', 'parseMethod', '(.*)\\((.*)\\)', 'testNullSafeToStringWithLongArrayEqualToNull(org.springframework.util.ObjectUtilsTests)')",[11937]
"('Description.java', 'org.junit.runner.Description', 'parseMethod', '(.*)\\((.*)\\)', 'testTokenizeToStringArrayWithNotIgnoreEmptyTokens(org.springframework.util.StringUtilsTests)')",[10974]
"('Description.java', 'org.junit.runner.Description', 'parseMethod', '(.*)\\((.*)\\)', 'doWithProtectedMethods(org.springframework.util.ReflectionUtilsTests)')",[5444]
"('Description.java', 'org.junit.runner.Description', 'parseMethod', '(.*)\\((.*)\\)', 'testQuoteIfString(org.springframework.util.StringUtilsTests)')",[10638]
"('Description.java', 'org.junit.runner.Description', 'parseMethod', '(.*)\\((.*)\\)', 'testNoIterators(org.springframework.util.CompositeIteratorTests)')",[10219]
"('Description.java', 'org.junit.runner.Description', 'parseMethod', '(.*)\\((.*)\\)', 'testNullSafeToStringWithStringArrayBeingEmpty(org.springframework.util.ObjectUtilsTests)')",[12126]
"('Description.java', 'org.junit.runner.Description', 'parseMethod', '(.*)\\((.*)\\)', 'testPropertiesPersisterWithReaderAndEmptyValue(org.springframework.util.PropertiesPersisterTests)')",[14558]
"('Description.java', 'org.junit.runner.Description', 'parseMethod', '(.*)\\((.*)\\)', 'testByteToString(org.springframework.core.convert.support.DefaultConversionTests)')",[2111]
"('Description.java', 'org.junit.runner.Description', 'parseMethod', '(.*)\\((.*)\\)', 'testAddNullObjectToNullArray(org.springframework.util.ObjectUtilsTests)')",[12378]
"('Description.java', 'org.junit.runner.Description', 'parseMethod', '(.*)\\((.*)\\)', 'testRegularWithMethodInvoker(org.springframework.util.MethodInvokerTests)')",[15204]
"('Description.java', 'org.junit.runner.Description', 'parseMethod', '(.*)\\((.*)\\)', 'testNoParametersDiscoverers(org.springframework.core.PrioritizedParameterNameDiscovererTests)')",[8384]
"('Description.java', 'org.junit.runner.Description', 'parseMethod', '(.*)\\((.*)\\)', 'rejectsNullSrc(org.springframework.util.ReflectionUtilsTests)')",[5318]
"('Description.java', 'org.junit.runner.Description', 'parseMethod', '(.*)\\((.*)\\)', 'testNestedCheckedExceptionWithNoRootCause(org.springframework.core.NestedExceptionTests)')",[7675]
"('Description.java', 'org.junit.runner.Description', 'parseMethod', '(.*)\\((.*)\\)', 'testParseLocaleWithMultiValuedVariantUsingMixtureOfUnderscoresAndSpacesAsSeparators(org.springframework.util.StringUtilsTests)')",[11352]
"('Description.java', 'org.junit.runner.Description', 'getClassName', '(.*)\\((.*)\\)', 'org.springframework.util.CompositeIteratorTests')","[36144, 36192, 36241, 36289]"
"('Description.java', 'org.junit.runner.Description', 'parseMethod', '(.*)\\((.*)\\)', 'convertAssignableSource(org.springframework.core.convert.support.GenericConversionServiceTests)')",[3706]
"('Description.java', 'org.junit.runner.Description', 'parseMethod', '(.*)\\((.*)\\)', 'testPerformance2(org.springframework.core.convert.support.GenericConversionServiceTests)')",[4294]
"('Description.java', 'org.junit.runner.Description', 'parseMethod', '(.*)\\((.*)\\)', 'testWithClassThatExposesNoConstants(org.springframework.core.ConstantsTests)')",[9510]
"('Description.java', 'org.junit.runner.Description', 'parseMethod', '(.*)\\((.*)\\)', 'testNullSafeHashCodeWithShortArray(org.springframework.util.ObjectUtilsTests)')",[13554]
"('Description.java', 'org.junit.runner.Description', 'parseMethod', '(.*)\\((.*)\\)', 'testCleanPath(org.springframework.util.StringUtilsTests)')",[10785]
"('Description.java', 'org.junit.runner.Description', 'getClassName', '(.*)\\((.*)\\)', 'org.springframework.util.SerializationUtilsTests')","[24912, 24935, 24959, 24982]"
"('Description.java', 'org.junit.runner.Description', 'parseMethod', '(.*)\\((.*)\\)', 'testWithSingleBoundParameterizedOnInstantiate(org.springframework.core.BridgeMethodResolverTests)')",[1378]
"('Description.java', 'org.junit.runner.Description', 'parseMethod', '(.*)\\((.*)\\)', 'testIsPrimitiveOrWrapperWithBooleanWrapperClass(org.springframework.util.ObjectUtilsTests)')",[12651]
"('Description.java', 'org.junit.runner.Description', 'parseMethod', '(.*)\\((.*)\\)', 'testUnderClassAndMethod(org.springframework.core.DefaultControlFlowTests)')",[9948]
"('Description.java', 'org.junit.runner.Description', 'parseMethod', '(.*)\\((.*)\\)', 'testDoubleToString(org.springframework.core.convert.support.DefaultConversionTests)')",[2321]
"('AntPathStringMatcher.java', 'org.springframework.util.AntPathStringMatcher', 'matchStrings', '.*\\Q.class\\E', 'LogFactory$5.class')","[23334, 24146]"
"('Description.java', 'org.junit.runner.Description', 'parseMethod', '(.*)\\((.*)\\)', 'testIsPrimitiveOrWrapperWithBytePrimitiveClass(org.springframework.util.ObjectUtilsTests)')",[12672]
"('Description.java', 'org.junit.runner.Description', 'parseMethod', '(.*)\\((.*)\\)', 'enableIndentingWithZeroIndentAmount(org.springframework.util.xml.TransformerUtilsTests)')",[6488]
"('Description.java', 'org.junit.runner.Description', 'parseMethod', '(.*)\\((.*)\\)', 'testNullSafeHashCodeWithCharArrayEqualToNull(org.springframework.util.ObjectUtilsTests)')",[13092]
"('Description.java', 'org.junit.runner.Description', 'parseMethod', '(.*)\\((.*)\\)', 'testSetAndHas(org.springframework.core.AttributeAccessorSupportTests)')",[8508]
"('Description.java', 'org.junit.runner.Description', 'getClassName', '(.*)\\((.*)\\)', 'testSetAndGet(org.springframework.core.AttributeAccessorSupportTests)')",[8487]
"('Description.java', 'org.junit.runner.Description', 'parseMethod', '(.*)\\((.*)\\)', 'testNullSafeHashCodeWithObjectBeingByteArray(org.springframework.util.ObjectUtilsTests)')",[13365]
"('Description.java', 'org.junit.runner.Description', 'parseMethod', '(.*)\\((.*)\\)', 'testNullSafeToStringWithDoubleArrayEqualToNull(org.springframework.util.ObjectUtilsTests)')",[11748]
"('Description.java', 'org.junit.runner.Description', 'parseMethod', '(.*)\\((.*)\\)', 'contentHandlerNoNamespacesPrefixes(org.springframework.util.xml.StaxEventXMLReaderTests)')",[7153]
"('Description.java', 'org.junit.runner.Description', 'parseMethod', '(.*)\\((.*)\\)', 'testInputStreamResourceWithDescription(org.springframework.core.io.ResourceTests)')",[605]
"('Description.java', 'org.junit.runner.Description', 'parseMethod', '(.*)\\((.*)\\)', 'enableIndentingWithNullTransformer(org.springframework.util.xml.TransformerUtilsTests)')",[6425]
"('Description.java', 'org.junit.runner.Description', 'parseMethod', '(.*)\\((.*)\\)', 'testFindFirstMatch(org.springframework.util.CollectionUtilsTests)')",[7425]
"('Description.java', 'org.junit.runner.Description', 'parseMethod', '(.*)\\((.*)\\)', 'testReplaceWithNoDefaultIgnored(org.springframework.util.SystemPropertyUtilsTests)')",[5987]
"('Description.java', 'org.junit.runner.Description', 'parseMethod', '(.*)\\((.*)\\)', 'testParseLocalizedBigDecimalNumber2(org.springframework.util.NumberUtilsTests)')",[14265]
"('Description.java', 'org.junit.runner.Description', 'parseMethod', '(.*)\\((.*)\\)', 'testGetShortNameForInnerClass(org.springframework.util.ClassUtilsTests)')",[15497]
"('Description.java', 'org.junit.runner.Description', 'getClassName', '(.*)\\((.*)\\)', 'org.springframework.core.GenericCollectionTypeResolverTests')","[34204, 34252, 34301, 34349]"
"('Description.java', 'org.junit.runner.Description', 'parseMethod', '(.*)\\((.*)\\)', 'testParseNegativeHex(org.springframework.util.NumberUtilsTests)')",[14097]
"('Description.java', 'org.junit.runner.Description', 'parseMethod', '(.*)\\((.*)\\)', 'enableIndentingWithNegativeIndentAmount(org.springframework.util.xml.TransformerUtilsTests)')",[6467]
"('Description.java', 'org.junit.runner.Description', 'getClassName', '(.*)\\((.*)\\)', 'org.springframework.core.enums.LabeledEnumTests')","[35950, 35998, 36047, 36095]"
"('Description.java', 'org.junit.runner.Description', 'parseMethod', '(.*)\\((.*)\\)', 'convertCollectionToStringWithElementConversion(org.springframework.core.convert.support.DefaultConversionTests)')",[3035]
"('Description.java', 'org.junit.runner.Description', 'parseMethod', '(.*)\\((.*)\\)', 'testInitLoggingWithFileUrlAndRefreshInterval(org.springframework.util.Log4jConfigurerTests)')",[13868]
"('Description.java', 'org.junit.runner.Description', 'parseMethod', '(.*)\\((.*)\\)', 'classLiteralConstructorRaisesExceptionWithFullyQualifiedPath(org.springframework.core.io.ClassPathResourceTests)')",[312]
"('Description.java', 'org.junit.runner.Description', 'parseMethod', '(.*)\\((.*)\\)', 'testFindAnnotationDeclaringClass(org.springframework.core.annotation.AnnotationUtilsTests)')",[1169]
"('Description.java', 'org.junit.runner.Description', 'getClassName', '(.*)\\((.*)\\)', 'org.springframework.util.FileSystemUtilsTests')","[37890, 37938, 37987, 38035]"
"('Description.java', 'org.junit.runner.Description', 'parseMethod', '(.*)\\((.*)\\)', 'testSalesmanWithMethodInvoker(org.springframework.util.MethodInvokerTests)')",[15162]
"('Description.java', 'org.junit.runner.Description', 'getClassName', '(.*)\\((.*)\\)', 'serializeCycleSunnyDay(org.springframework.util.SerializationUtilsTests)')",[4543]
"('Description.java', 'org.junit.runner.Description', 'parseMethod', '(.*)\\((.*)\\)', 'testUncapitalize(org.springframework.util.StringUtilsTests)')",[10701]
"('AntPathStringMatcher.java', 'org.springframework.util.AntPathStringMatcher', 'matchStrings', '.\\Qes\\E.', 'test')","[25352, 27120, 29051]"
"('Description.java', 'org.junit.runner.Description', 'parseMethod', '(.*)\\((.*)\\)', 'serializeNull(org.springframework.util.SerializationUtilsTests)')",[4627]
"('Description.java', 'org.junit.runner.Description', 'parseMethod', '(.*)\\((.*)\\)', 'doesNotContainWithNullSearchStringDoesNotThrowException(org.springframework.util.AssertTests)')",[4899]
"('Description.java', 'org.junit.runner.Description', 'parseMethod', '(.*)\\((.*)\\)', 'testBooleanToString(org.springframework.core.convert.support.DefaultConversionTests)')",[2069]
"('Description.java', 'org.junit.runner.Description', 'parseMethod', '(.*)\\((.*)\\)', 'testLabelFound(org.springframework.core.enums.LabeledEnumTests)')",[10115]
"('Description.java', 'org.junit.runner.Description', 'parseMethod', '(.*)\\((.*)\\)', 'testTrivial(org.springframework.util.PatternMatchUtilsTests)')",[14745]
"('Description.java', 'org.junit.runner.Description', 'parseMethod', '(.*)\\((.*)\\)', 'testE(org.springframework.core.GenericCollectionTypeResolverTests)')",[8759]
"('Description.java', 'org.junit.runner.Description', 'parseMethod', '(.*)\\((.*)\\)', 'testSuffixAccess(org.springframework.core.ConstantsTests)')",[9636]
"('AntPathStringMatcher.java', 'org.springframework.util.AntPathStringMatcher', 'matchStrings', '\\Qtest\\E.*\\Qaaa\\E', 'testblaaaa')","[25794, 27432, 29493]"
"('AntPathStringMatcher.java', 'org.springframework.util.AntPathStringMatcher', 'matchStrings', '\\Qhotels\\E', 'foo')",[28498]
"('Description.java', 'org.junit.runner.Description', 'getClassName', '(.*)\\((.*)\\)', 'testSystemPropertyReplacement(org.springframework.core.io.support.ResourceArrayPropertyEditorTests)')",[667]
"('Description.java', 'org.junit.runner.Description', 'parseMethod', '(.*)\\((.*)\\)', 'setBindings(org.springframework.util.xml.SimpleNamespaceContextTests)')",[6987]
"('Description.java', 'org.junit.runner.Description', 'getClassName', '(.*)\\((.*)\\)', 'org.springframework.util.StringUtilsTests')","[36338, 36386, 36435, 36483]"
"('Description.java', 'org.junit.runner.Description', 'parseMethod', '(.*)\\((.*)\\)', 'testWithResolver(org.springframework.util.PropertyPlaceholderHelperTests)')",[7571]
"('Description.java', 'org.junit.runner.Description', 'getClassName', '(.*)\\((.*)\\)', 'stringConstructorRaisesExceptionWithFullyQualifiedPath(org.springframework.core.io.ClassPathResourceTests)')",[291]
"('Description.java', 'org.junit.runner.Description', 'getClassName', '(.*)\\((.*)\\)', 'org.springframework.util.DigestUtilsTests')","[24818, 24841, 24865, 24888]"
"('Description.java', 'org.junit.runner.Description', 'parseMethod', '(.*)\\((.*)\\)', 'testGetFilenameExtension(org.springframework.util.StringUtilsTests)')",[10743]
"('Description.java', 'org.junit.runner.Description', 'parseMethod', '(.*)\\((.*)\\)', 'serializeCycleSunnyDay(org.springframework.util.SerializationUtilsTests)')",[4523]
"('Description.java', 'org.junit.runner.Description', 'parseMethod', '(.*)\\((.*)\\)', 'testIsPrimitiveOrWrapperWithLongWrapperClass(org.springframework.util.ObjectUtilsTests)')",[12903]
"('Description.java', 'org.junit.runner.Description', 'parseMethod', '(.*)\\((.*)\\)', 'deserializeUndefined(org.springframework.util.SerializationUtilsTests)')",[4564]
"('Description.java', 'org.junit.runner.Description', 'parseMethod', '(.*)\\((.*)\\)', 'testLabelFoundForAbstractEnums(org.springframework.core.enums.LabeledEnumTests)')",[10157]
"('Description.java', 'org.junit.runner.Description', 'parseMethod', '(.*)\\((.*)\\)', 'testConcurrentMap(org.springframework.core.CollectionFactoryTests)')",[9030]
"('Description.java', 'org.junit.runner.Description', 'parseMethod', '(.*)\\((.*)\\)', 'doesNotContainWithEmptySubstringDoesNotThrowException(org.springframework.util.AssertTests)')",[4941]
"('Description.java', 'org.junit.runner.Description', 'parseMethod', '(.*)\\((.*)\\)', 'testNullSafeToStringWithByteArray(org.springframework.util.ObjectUtilsTests)')",[13659]
"('Description.java', 'org.junit.runner.Description', 'parseMethod', '(.*)\\((.*)\\)', 'testParseNumberUsingNumberFormat(org.springframework.util.NumberUtilsTests)')",[14013]
"('Description.java', 'org.junit.runner.Description', 'parseMethod', '(.*)\\((.*)\\)', 'testStartsWith(org.springframework.util.PatternMatchUtilsTests)')",[14766]
"('Description.java', 'org.junit.runner.Description', 'parseMethod', '(.*)\\((.*)\\)', 'testTrimTrailingWhitespace(org.springframework.util.StringUtilsTests)')",[10470]
"('AntPathStringMatcher.java', 'org.springframework.util.AntPathStringMatcher', 'matchStrings', '\\Qbla\\E.*\\Qbla\\E', 'blaXXXbl')","[26652, 28238, 30377]"
"('Description.java', 'org.junit.runner.Description', 'parseMethod', '(.*)\\((.*)\\)', 'testGenerifiedClass(org.springframework.core.LocalVariableTableParameterNameDiscovererTests)')",[9427]
"('Description.java', 'org.junit.runner.Description', 'parseMethod', '(.*)\\((.*)\\)', 'addConverterNoSourceTargetClassInfoAvailable(org.springframework.core.convert.support.GenericConversionServiceTests)')",[3748]
"('Description.java', 'org.junit.runner.Description', 'parseMethod', '(.*)\\((.*)\\)', 'testForNameWithPrimitiveArraysInternalName(org.springframework.util.ClassUtilsTests)')",[15371]
"('Description.java', 'org.junit.runner.Description', 'getClassName', '(.*)\\((.*)\\)', 'testReplaceFromSystemProperty(org.springframework.util.SystemPropertyUtilsTests)')",[5819]
"('Description.java', 'org.junit.runner.Description', 'parseMethod', '(.*)\\((.*)\\)', 'testNonExactBigDecimalToBigInteger(org.springframework.util.NumberUtilsTests)')",[14160]
"('AntPathStringMatcher.java', 'org.springframework.util.AntPathStringMatcher', 'matchStrings', '.*\\Qtest\\E', 'tsttst')","[26028, 27536, 29675]"
"('Description.java', 'org.junit.runner.Description', 'parseMethod', '(.*)\\((.*)\\)', 'testWildcardMap(org.springframework.core.convert.support.GenericConversionServiceTests)')",[4147]
"('Description.java', 'org.junit.runner.Description', 'parseMethod', '(.*)\\((.*)\\)', 'testCollections(org.springframework.core.ConventionsTests)')",[9155]
"('Description.java', 'org.junit.runner.Description', 'parseMethod', '(.*)\\((.*)\\)', 'isNullThrowsExceptionIfArgumentIsNotNull(org.springframework.util.AssertTests)')",[4752]
"('Description.java', 'org.junit.runner.Description', 'parseMethod', '(.*)\\((.*)\\)', 'testStringToString(org.springframework.core.convert.support.DefaultConversionTests)')",[2552]
"('Description.java', 'org.junit.runner.Description', 'parseMethod', '(.*)\\((.*)\\)', 'setFieldIllegal(org.springframework.util.ReflectionUtilsTests)')",[5234]
"('Description.java', 'org.junit.runner.Description', 'parseMethod', '(.*)\\((.*)\\)', 'testFailureToStartBeforeGettingTimings(org.springframework.util.StopWatchTests)')",[14870]
"('Description.java', 'org.junit.runner.Description', 'parseMethod', '(.*)\\((.*)\\)', 'testParseLocaleWithMultiValuedVariantUsingSpacesAsSeparators(org.springframework.util.StringUtilsTests)')",[11331]
"('Description.java', 'org.junit.runner.Description', 'parseMethod', '(.*)\\((.*)\\)', 'testPrimitiveArrays(org.springframework.core.style.ToStringCreatorTests)')",[7842]
"('Description.java', 'org.junit.runner.Description', 'parseMethod', '(.*)\\((.*)\\)', 'testSubclassPatternMatches(org.springframework.core.type.AspectJTypeFilterTests)')",[8072]
"('Description.java', 'org.junit.runner.Description', 'parseMethod', '(.*)\\((.*)\\)', 'testNullSafeHashCodeWithIntArrayEqualToNull(org.springframework.util.ObjectUtilsTests)')",[13218]
"('Description.java', 'org.junit.runner.Description', 'parseMethod', '(.*)\\((.*)\\)', 'listOfListOfUnknownDescriptor(org.springframework.core.convert.TypeDescriptorTests)')",[1776]
"('AntPathStringMatcher.java', 'org.springframework.util.AntPathStringMatcher', 'matchStrings', '.', 'b')","[26236, 27744, 29883]"
"('AntPathStringMatcher.java', 'org.springframework.util.AntPathStringMatcher', 'matchStrings', '(.*)\\Q.\\E.*', 'testing.html')",[31287]
"('AntPathStringMatcher.java', 'org.springframework.util.AntPathStringMatcher', 'matchStrings', '\\Qt\\E.\\Qst\\E', 'test')","[25248, 27016, 28947]"
"('Description.java', 'org.junit.runner.Description', 'parseMethod', '(.*)\\((.*)\\)', 'nonSerializableObject(org.springframework.core.serializer.SerializationConverterTests)')",[62]
"('Description.java', 'org.junit.runner.Description', 'parseMethod', '(.*)\\((.*)\\)', 'testMultipleIterators(org.springframework.util.CompositeIteratorTests)')",[10261]
"('AntPathStringMatcher.java', 'org.springframework.util.AntPathStringMatcher', 'matchStrings', '.*\\Q.class\\E', 'impl')","[22634, 22662, 22690, 22718, 22746, 22774, 22802, 22830, 22858, 22886, 22914, 22942, 22970, 22998, 23026, 23054, 23082, 23110, 23138, 23446, 23474, 23502, 23530, 23558, 23586, 23614, 23642, 23670, 23698, 23726, 23754, 23782, 23810, 23838, 23866, 23894, 23922, 23950]"
"('Description.java', 'org.junit.runner.Description', 'parseMethod', '(.*)\\((.*)\\)', 'testStringToDouble(org.springframework.core.convert.support.DefaultConversionTests)')",[2300]
"('Description.java', 'org.junit.runner.Description', 'parseMethod', '(.*)\\((.*)\\)', 'testPurchaserWithMethodInvoker(org.springframework.util.MethodInvokerTests)')",[15120]
"('Description.java', 'org.junit.runner.Description', 'parseMethod', '(.*)\\((.*)\\)', 'testUrlResourceWithRelativePath(org.springframework.core.io.ResourceTests)')",[395]
"('Description.java', 'org.junit.runner.Description', 'parseMethod', '(.*)\\((.*)\\)', 'testIsPrimitiveOrWrapperWithDoublePrimitiveClass(org.springframework.util.ObjectUtilsTests)')",[12756]
"('Description.java', 'org.junit.runner.Description', 'parseMethod', '(.*)\\((.*)\\)', 'testGetNames(org.springframework.core.ConstantsTests)')",[9573]
"('Description.java', 'org.junit.runner.Description', 'parseMethod', '(.*)\\((.*)\\)', 'testReplaceWithExpressionDefault(org.springframework.util.SystemPropertyUtilsTests)')",[5924]
"('Description.java', 'org.junit.runner.Description', 'parseMethod', '(.*)\\((.*)\\)', 'testGetAllInterfaces(org.springframework.util.ClassUtilsTests)')",[15875]
"('Description.java', 'org.junit.runner.Description', 'getClassName', '(.*)\\((.*)\\)', 'withMatchStart(org.springframework.util.AntPathMatcherTests)')",[5506]
"('Description.java', 'org.junit.runner.Description', 'parseMethod', '(.*)\\((.*)\\)', 'testPathEquals(org.springframework.util.StringUtilsTests)')",[10806]
"('Description.java', 'org.junit.runner.Description', 'parseMethod', '(.*)\\((.*)\\)', 'testAddObjectToArraySunnyDay(org.springframework.util.ObjectUtilsTests)')",[12273]
"('Description.java', 'org.junit.runner.Description', 'parseMethod', '(.*)\\((.*)\\)', 'testWithProperties(org.springframework.util.PropertyPlaceholderHelperTests)')",[7467]
"('AntPathStringMatcher.java', 'org.springframework.util.AntPathStringMatcher', 'matchStrings', '\\QResource\\E.*\\QEditor.class\\E', 'LocalizedResourceHelper.class')",[22512]
"('Description.java', 'org.junit.runner.Description', 'parseMethod', '(.*)\\((.*)\\)', 'testSimpleObject(org.springframework.core.ConventionsTests)')",[9093]
"('Description.java', 'org.junit.runner.Description', 'parseMethod', '(.*)\\((.*)\\)', 'testIsAnnotationInherited(org.springframework.core.annotation.AnnotationUtilsTests)')",[938]
"('Description.java', 'org.junit.runner.Description', 'parseMethod', '(.*)\\((.*)\\)', 'testDelete(org.springframework.util.StringUtilsTests)')",[10575]
"('Description.java', 'org.junit.runner.Description', 'parseMethod', '(.*)\\((.*)\\)', 'convertNull(org.springframework.core.convert.support.GenericConversionServiceTests)')",[3811]
"('Description.java', 'org.junit.runner.Description', 'parseMethod', '(.*)\\((.*)\\)', 'instanceOf(org.springframework.util.AssertTests)')",[4669]
"('AntPathStringMatcher.java', 'org.springframework.util.AntPathStringMatcher', 'matchStrings', '\\Qtest\\E.*', 'testTest')","[25508, 27276, 29207]"
"('Description.java', 'org.junit.runner.Description', 'parseMethod', '(.*)\\((.*)\\)', 'testContainsInstanceWithSameInstance(org.springframework.util.CollectionUtilsTests)')",[7383]
"('Description.java', 'org.junit.runner.Description', 'parseMethod', '(.*)\\((.*)\\)', 'testByteArrayResourceWithDescription(org.springframework.core.io.ResourceTests)')",[584]
"('Description.java', 'org.junit.runner.Description', 'parseMethod', '(.*)\\((.*)\\)', 'streamReaderSourceToDOMResult(org.springframework.util.xml.StaxSourceTests)')",[6571]
"('Description.java', 'org.junit.runner.Description', 'getClassName', '(.*)\\((.*)\\)', 'withClasses(org.springframework.util.TypeUtilsTests)')",[6091]
"('Description.java', 'org.junit.runner.Description', 'parseMethod', '(.*)\\((.*)\\)', 'testMethod(org.springframework.core.style.ToStringCreatorTests)')",[7884]
"('AntPathStringMatcher.java', 'org.springframework.util.AntPathStringMatcher', 'matchStrings', '\\Qcore\\E', 'core')","[16656, 17136, 17616, 18096, 18576, 19056, 19536, 20016, 20496, 20976, 21456, 21936, 22416]"
"('Description.java', 'org.junit.runner.Description', 'parseMethod', '(.*)\\((.*)\\)', 'testContainsInstanceWithInstancesThatAreEqualButDistinct(org.springframework.util.CollectionUtilsTests)')",[7362]
"('AntPathStringMatcher.java', 'org.springframework.util.AntPathStringMatcher', 'matchStrings', '.*\\Q.class\\E', 'LogSource.class')","[23418, 24230]"
"('Description.java', 'org.junit.runner.Description', 'getClassName', '(.*)\\((.*)\\)', 'org.springframework.core.type.AnnotationMetadataTests')","[33428, 33476, 33525, 33573]"
"('Description.java', 'org.junit.runner.Description', 'parseMethod', '(.*)\\((.*)\\)', 'testFindBridgedMethodInHierarchy(org.springframework.core.BridgeMethodResolverTests)')",[1252]
"('AntPathStringMatcher.java', 'org.springframework.util.AntPathStringMatcher', 'matchStrings', '.*', 'testing')","[26392, 27900, 27926, 30039, 30065, 30585, 30975, 31157]"
