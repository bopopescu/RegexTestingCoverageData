"('Description.java', 'org.junit.runner.Description', 'parseMethod', '(.*)\\((.*)\\)', 'testThatTagWithContentWorksWithCaptureGroup(br.com.adaptideas.scraper.ScraperSpecificationTest)')",[271]
"('Description.java', 'org.junit.runner.Description', 'parseMethod', '(.*)\\((.*)\\)', 'testThatOnlySearchTagsOnTemplate2(br.com.adaptideas.scraper.SingleTemplateTest)')",[2855]
"('Description.java', 'org.junit.runner.Description', 'getClassName', '(.*)\\((.*)\\)', 'testThatDoesNotConvertValuesIfNotNeeded(br.com.adaptideas.scraper.converter.DataConverterTest)')",[1602]
"('Description.java', 'org.junit.runner.Description', 'getClassName', '(.*)\\((.*)\\)', 'testThatSecondTemplateDoesNotOverrideFirst(br.com.adaptideas.scraper.SplitTemplateTest)')",[41]
"('Description.java', 'org.junit.runner.Description', 'parseMethod', '(.*)\\((.*)\\)', 'testThatDoesNotRemoveTagsWithCaptureGroupsInsideAttributes(br.com.adaptideas.scraper.cleaner.IrrelevantTagCleanerTest)')",[3127]
"('Description.java', 'org.junit.runner.Description', 'parseMethod', '(.*)\\((.*)\\)', 'testThatIgnoresBeginningWhiteChars(br.com.adaptideas.scraper.tag.TagReaderTest)')",[1249]
"('Description.java', 'org.junit.runner.Description', 'parseMethod', '(.*)\\((.*)\\)', 'testThatUsesConvertersWhenSetting(br.com.adaptideas.scraper.SingleTemplateTest)')",[2834]
"('IrrelevantContentTagCleaner.java', 'br.com.adaptideas.scraper.cleaner.IrrelevantContentTagCleaner', 'contentMatches', '(?i)(?s)^\\Qignore\\E \\Q\\E(.*?)\\Q\\E \\Qcontent\\E \\Q\\E(.*?)\\Q\\E$', 'ignore bar content capture')",[4115]
"('TemplateTagTest.java', 'br.com.adaptideas.scraper.matcher.TemplateTagTest', 'testThatMatchesOrdinaryWords', '(?i)(?s)^\\Qsimple\\E \\Qtext\\E$', 'simple text')",[6690]
"('Description.java', 'org.junit.runner.Description', 'getClassName', '(.*)\\((.*)\\)', 'testThatWorksForTagA(br.com.adaptideas.scraper.tag.TagReaderTest)')",[1186]
"('DefaultTagMatcher.java', 'br.com.adaptideas.scraper.tag.DefaultTagMatcher', 'contentMatches', '(?i)(?s)^\\Q\\E(.*?)\\Q\\E \\Qhour\\E \\Q\\E.*?\\Q\\E$', 'capture hour just some text to ignore')",[3886]
"('Description.java', 'org.junit.runner.Description', 'getClassName', '(.*)\\((.*)\\)', 'shouldMatchIfContentIsContainedIntoOtherContentWithSpaces(br.com.adaptideas.scraper.tag.StringAttributeTest)')",[1415]
"('IrrelevantContentTagCleaner.java', 'br.com.adaptideas.scraper.cleaner.IrrelevantContentTagCleaner', 'contentMatches', '(?i)(?s)^\\Q\\E(.*?)\\Q\\E$', 'more some text text')",[7646]
"('Description.java', 'org.junit.runner.Description', 'getClassName', '(.*)\\((.*)\\)', 'testTrimsTagName(br.com.adaptideas.scraper.BangTagTest)')",[1519]
"('Description.java', 'org.junit.runner.Description', 'getClassName', '(.*)\\((.*)\\)', 'br.com.adaptideas.scraper.tag.StringAttributeTest')","[6300, 6323, 6347, 6370]"
"('Description.java', 'org.junit.runner.Description', 'parseMethod', '(.*)\\((.*)\\)', 'shouldMatchIfContentIsEquals(br.com.adaptideas.scraper.tag.StringAttributeTest)')",[1436]
"('TemplateTagTest.java', 'br.com.adaptideas.scraper.matcher.TemplateTagTest', 'testThatMatcherIsCaseInsensitive', '(?i)(?s)^\\Q\\E.*?\\Q\\E \\QANYthing\\E \\Q\\E(.*?)\\Q\\E \\Qsimple\\E \\Q\\E(.*?)\\Q\\E \\Qtext\\E \\Q\\E.*?\\Q\\E$', 'a anything to JUST ignore simple and normal text after')",[6624]
"('Description.java', 'org.junit.runner.Description', 'parseMethod', '(.*)\\((.*)\\)', 'shouldNotMatchIfContentIsNotEquals(br.com.adaptideas.scraper.tag.PatternAttributeTest)')",[540]
"('Description.java', 'org.junit.runner.Description', 'parseMethod', '(.*)\\((.*)\\)', 'shouldFindSingleItemWithSplit(br.com.adaptideas.scraper.MultipleMatchTemplateTest)')",[3335]
"('Description.java', 'org.junit.runner.Description', 'parseMethod', '(.*)\\((.*)\\)', 'shouldMatchIfContentIsContainedIntoOtherContent(br.com.adaptideas.scraper.tag.StringAttributeTest)')",[1478]
"('Description.java', 'org.junit.runner.Description', 'getClassName', '(.*)\\((.*)\\)', 'testThatThrowsExceptionIfInputStreamIsNull(br.com.adaptideas.scraper.SingleTemplateTest)')",[2729]
"('Description.java', 'org.junit.runner.Description', 'parseMethod', '(.*)\\((.*)\\)', 'testThatItReturnsOpenIfTheCharacterIsNeitherSlashNorBang(br.com.adaptideas.scraper.tag.TagTypeTest)')",[1374]
"('Description.java', 'org.junit.runner.Description', 'getClassName', '(.*)\\((.*)\\)', 'br.com.adaptideas.scraper.tag.TagListMatcherTest')","[5924, 5947, 5971, 5994]"
"('Description.java', 'org.junit.runner.Description', 'parseMethod', '(.*)\\((.*)\\)', 'testThatToStringReturnsSomethingGoodToRead(br.com.adaptideas.scraper.BangTagTest)')",[1561]
"('DefaultTagMatcher.java', 'br.com.adaptideas.scraper.tag.DefaultTagMatcher', 'contentMatches', '(?i)(?s)^\\Qcontent\\E \\Q\\E(.*?)\\Q\\E$', 'content capture')",[3772]
"('IrrelevantContentTagCleaner.java', 'br.com.adaptideas.scraper.cleaner.IrrelevantContentTagCleaner', 'contentMatches', '(?i)(?s)^\\QNúmero\\E \\Qde\\E \\QHoras\\E$', 'Carga Horária')",[8228]
"('Description.java', 'org.junit.runner.Description', 'parseMethod', '(.*)\\((.*)\\)', 'testThatKeepsWhiteCharsInsideAttributeValue(br.com.adaptideas.scraper.tag.TagSanitizerTest)')",[1061]
"('DefaultTagMatcher.java', 'br.com.adaptideas.scraper.tag.DefaultTagMatcher', 'contentMatches', '(?i)(?s)^\\Qcontent\\E$', 'content')","[4744, 4916]"
"('Description.java', 'org.junit.runner.Description', 'parseMethod', '(.*)\\((.*)\\)', 'testThatRecoverDataFromAttributes(br.com.adaptideas.scraper.matcher.TemplateTagTest)')",[1769]
"('IrrelevantContentTagCleaner.java', 'br.com.adaptideas.scraper.cleaner.IrrelevantContentTagCleaner', 'contentMatches', '(?i)(?s)^\\Qcontent\\E$', 'content')","[4629, 4801]"
"('Description.java', 'org.junit.runner.Description', 'parseMethod', '(.*)\\((.*)\\)', 'shouldNotRemoveTagWithComplexAttribute(br.com.adaptideas.scraper.cleaner.IrrelevantContentTagCleanerTest)')",[3252]
"('Description.java', 'org.junit.runner.Description', 'getClassName', '(.*)\\((.*)\\)', 'br.com.adaptideas.scraper.ScraperSpecificationTest')","[5082, 5105, 5129, 5152]"
"('TemplateTagTest.java', 'br.com.adaptideas.scraper.matcher.TemplateTagTest', 'testThatMatchesWithCaptureGroups', '(?i)(?s)^\\Q\\E(.*?)\\Q\\E \\Qsimple\\E \\Qtext\\E$', 'anything to just ignore simple text')",[6712]
"('Description.java', 'org.junit.runner.Description', 'parseMethod', '(.*)\\((.*)\\)', 'testThatReturnsEmptyStringIfCreatedWithNullContent(br.com.adaptideas.scraper.CloseTagTest)')",[2164]
"('Description.java', 'org.junit.runner.Description', 'parseMethod', '(.*)\\((.*)\\)', 'testThatThrowsExceptionIfTypeIsNull(br.com.adaptideas.scraper.SingleTemplateTest)')",[2771]
"('DefaultTagMatcher.java', 'br.com.adaptideas.scraper.tag.DefaultTagMatcher', 'contentMatches', '(?i)(?s)^\\Q\\E(.*?)\\Q\\E$', '123')","[7389, 7446, 7503, 7560, 7617, 7731]"
"('Description.java', 'org.junit.runner.Description', 'getClassName', '(.*)\\((.*)\\)', 'br.com.adaptideas.scraper.OpenTagTest')","[5176, 5199, 5223, 5246]"
"('Description.java', 'org.junit.runner.Description', 'parseMethod', '(.*)\\((.*)\\)', 'testThatAcceptsAnything(br.com.adaptideas.scraper.matcher.regex.CaptureGroupsRegexCreatorTest)')",[2040]
"('Description.java', 'org.junit.runner.Description', 'parseMethod', '(.*)\\((.*)\\)', 'testThatDoesNotRemoveImportantWhitespace(br.com.adaptideas.scraper.SingleTemplateTest)')",[2897]
"('Description.java', 'org.junit.runner.Description', 'parseMethod', '(.*)\\((.*)\\)', 'testThatMatchesWithBizarreContent(br.com.adaptideas.scraper.matcher.TemplateTagTest)')",[1664]
"('Description.java', 'org.junit.runner.Description', 'parseMethod', '(.*)\\((.*)\\)', 'shouldReturnAnEmptyListIfNoItemIsFound(br.com.adaptideas.scraper.MultipleMatchTemplateTest)')",[3273]
"('Description.java', 'org.junit.runner.Description', 'getClassName', '(.*)\\((.*)\\)', 'br.com.adaptideas.scraper.tag.DefaultTagMatcherTest')","[5830, 5853, 5877, 5900]"
"('Description.java', 'org.junit.runner.Description', 'getClassName', '(.*)\\((.*)\\)', 'br.com.adaptideas.scraper.cleaner.IrrelevantContentTagCleanerTest')","[8276, 8299, 8323, 8346]"
"('Description.java', 'org.junit.runner.Description', 'getClassName', '(.*)\\((.*)\\)', 'br.com.adaptideas.scraper.matcher.TemplateTagTest')","[6736, 6759, 6783, 6806]"
"('IrrelevantContentTagCleaner.java', 'br.com.adaptideas.scraper.cleaner.IrrelevantContentTagCleaner', 'contentMatches', '(?i)(?s)^\\Q\\E(.*?)\\Q\\E$', 'abc')",[7988]
"('Description.java', 'org.junit.runner.Description', 'parseMethod', '(.*)\\((.*)\\)', 'shouldMatchIfContentCanBeCaptured(br.com.adaptideas.scraper.tag.PatternAttributeTest)')",[561]
"('DefaultTagMatcher.java', 'br.com.adaptideas.scraper.tag.DefaultTagMatcher', 'contentMatches', '(?i)(?s)^\\Q\\E(.*?)\\Q\\E \\Qcontent\\E$', 'capture content')",[3829]
"('Description.java', 'org.junit.runner.Description', 'getClassName', '(.*)\\((.*)\\)', 'br.com.adaptideas.scraper.TagParserTest')","[7260, 7283, 7307, 7330]"
"('IrrelevantContentTagCleaner.java', 'br.com.adaptideas.scraper.cleaner.IrrelevantContentTagCleaner', 'contentMatches', '(?i)(?s)^\\Q\\E(.*?)\\Q\\E$', '123')","[7360, 7418, 7475, 7532, 7589, 7703]"
"('Description.java', 'org.junit.runner.Description', 'parseMethod', '(.*)\\((.*)\\)', 'testThatAcceptsSelfClosingTag(br.com.adaptideas.scraper.TagParserTest)')",[2583]
"('Description.java', 'org.junit.runner.Description', 'getClassName', '(.*)\\((.*)\\)', 'br.com.adaptideas.scraper.tag.PatternAttributeTest')","[5642, 5665, 5689, 5712]"
"('Description.java', 'org.junit.runner.Description', 'getClassName', '(.*)\\((.*)\\)', 'testThatMatchesSameSequence(br.com.adaptideas.scraper.tag.TagListMatcherTest)')",[936]
"('Description.java', 'org.junit.runner.Description', 'parseMethod', '(.*)\\((.*)\\)', 'testThatTagWithAttributesWorksWithCaptureGroup(br.com.adaptideas.scraper.ScraperSpecificationTest)')",[250]
"('Description.java', 'org.junit.runner.Description', 'parseMethod', '(.*)\\((.*)\\)', 'testThatDoesNotMatchIfThereIsNoMatchingSequence(br.com.adaptideas.scraper.tag.TagListMatcherTest)')",[978]
"('DefaultTagMatcher.java', 'br.com.adaptideas.scraper.tag.DefaultTagMatcher', 'contentMatches', '(?i)(?s)^\\Q\\E.*?\\Q\\E \\Qbefore\\E \\Q\\E(.*?)\\Q\\E \\Qbefore\\E \\Q\\E(.*?)\\Q\\E \\Qhour\\E \\Q\\E.*?\\Q\\E$', 'more content to ignore before jarjar before bar foo hour capture')",[4371]
"('DefaultTagMatcher.java', 'br.com.adaptideas.scraper.tag.DefaultTagMatcher', 'contentMatches', '(?i)(?s)^\\Q\\E(.*?)\\Q\\E$', 'should capture')","[4772, 4944]"
"('Description.java', 'org.junit.runner.Description', 'parseMethod', '(.*)\\((.*)\\)', 'testThatWorksForTagA(br.com.adaptideas.scraper.tag.TagReaderTest)')",[1166]
"('Description.java', 'org.junit.runner.Description', 'getClassName', '(.*)\\((.*)\\)', 'br.com.adaptideas.scraper.MultipleMatchTemplateTest')","[8783, 8803, 8824, 8844]"
"('Description.java', 'org.junit.runner.Description', 'getClassName', '(.*)\\((.*)\\)', 'testThatDoesNotMatchIfAttributeValueIsDifferent(br.com.adaptideas.scraper.tag.DefaultTagMatcherTest)')",[706]
"('DefaultTagMatcher.java', 'br.com.adaptideas.scraper.tag.DefaultTagMatcher', 'contentMatches', '(?i)(?s)^\\Q\\E(.*?)\\Q\\E$', 'more some text text')",[7674]
"('Description.java', 'org.junit.runner.Description', 'parseMethod', '(.*)\\((.*)\\)', 'testThatCreatesQuotingRegex(br.com.adaptideas.scraper.matcher.regex.OrdinaryWordRegexCreatorTest)')",[2019]
"('Description.java', 'org.junit.runner.Description', 'getClassName', '(.*)\\((.*)\\)', 'testThatKeepsGoodTags(br.com.adaptideas.scraper.tag.TagSanitizerTest)')",[1019]
"('Description.java', 'org.junit.runner.Description', 'parseMethod', '(.*)\\((.*)\\)', 'testThatReturnsEmptyStringIfCreatedWithNullContent(br.com.adaptideas.scraper.BangTagTest)')",[1540]
"('Description.java', 'org.junit.runner.Description', 'parseMethod', '(.*)\\((.*)\\)', 'testThatCreatesEllipsisRegexWithText(br.com.adaptideas.scraper.matcher.regex.EllipsisRegexCreatorTest)')",[1957]
"('Description.java', 'org.junit.runner.Description', 'parseMethod', '(.*)\\((.*)\\)', 'testThatRecognizesTwoTags(br.com.adaptideas.scraper.TagParserTest)')",[2310]
"('IrrelevantContentTagCleaner.java', 'br.com.adaptideas.scraper.cleaner.IrrelevantContentTagCleaner', 'contentMatches', '(?i)(?s)^\\Qcontent\\E$', 'should capture')","[4687, 4859]"
"('Description.java', 'org.junit.runner.Description', 'parseMethod', '(.*)\\((.*)\\)', 'testThatMatchesIfAttributeContentIsContainedInHtmlAttribute(br.com.adaptideas.scraper.tag.DefaultTagMatcherTest)')",[748]
"('Description.java', 'org.junit.runner.Description', 'parseMethod', '(.*)\\((.*)\\)', 'shouldMatchIfContentIsContainedIntoOtherContent(br.com.adaptideas.scraper.tag.PatternAttributeTest)')",[603]
"('Description.java', 'org.junit.runner.Description', 'parseMethod', '(.*)\\((.*)\\)', 'testThatRemovesTagNotPresentOnRelevantTags(br.com.adaptideas.scraper.cleaner.IrrelevantTagCleanerTest)')",[3148]
"('Description.java', 'org.junit.runner.Description', 'parseMethod', '(.*)\\((.*)\\)', 'testThatMatchingIsCaseInsensitive(br.com.adaptideas.scraper.tag.DefaultTagMatcherTest)')",[790]
"('IrrelevantContentTagCleaner.java', 'br.com.adaptideas.scraper.cleaner.IrrelevantContentTagCleaner', 'contentMatches', '(?i)(?s)^\\Qcontent\\E \\Q\\E(.*?)\\Q\\E$', 'cont capture')",[3715]
"('IrrelevantContentTagCleaner.java', 'br.com.adaptideas.scraper.cleaner.IrrelevantContentTagCleaner', 'contentMatches', '(?i)(?s)^\\Qcontent\\E$', '')",[4571]
"('Description.java', 'org.junit.runner.Description', 'parseMethod', '(.*)\\((.*)\\)', 'testThatIfFirstTemplateCantFindTheSecondFinds(br.com.adaptideas.scraper.SplitTemplateTest)')",[62]
"('DefaultTagMatcher.java', 'br.com.adaptideas.scraper.tag.DefaultTagMatcher', 'contentMatches', '(?i)(?s)^\\Q\\E(.*?)\\Q\\E \\Qignore\\E \\Q\\E(.*?)\\Q\\E \\Qhour\\E \\Q\\E.*?\\Q\\E$', 'something ignore capture hour just some text to ignore')",[4257]
"('Description.java', 'org.junit.runner.Description', 'parseMethod', '(.*)\\((.*)\\)', 'testThatKeepsTagsWithContent(br.com.adaptideas.scraper.TagParserTest)')",[2646]
"('Description.java', 'org.junit.runner.Description', 'parseMethod', '(.*)\\((.*)\\)', 'testThatThrowsExceptionIfTemplateIsNull(br.com.adaptideas.scraper.SingleTemplateTest)')",[2750]
"('Description.java', 'org.junit.runner.Description', 'parseMethod', '(.*)\\((.*)\\)', 'testThatRecognizesAnyCloseTag(br.com.adaptideas.scraper.TagParserTest)')",[2415]
"('Description.java', 'org.junit.runner.Description', 'parseMethod', '(.*)\\((.*)\\)', 'testThatIgnoresWhiteChars(br.com.adaptideas.scraper.tag.TagSanitizerTest)')",[1040]
"('TemplateTagTest.java', 'br.com.adaptideas.scraper.matcher.TemplateTagTest', 'testThatMatchesWithEllipsis', '(?i)(?s)^\\Q\\E.*?\\Q\\E \\Qsimple\\E \\Qtext\\E$', 'anything to just ignore simple text')",[6646]
"('Description.java', 'org.junit.runner.Description', 'getClassName', '(.*)\\((.*)\\)', 'br.com.adaptideas.scraper.matcher.regex.CaptureGroupsRegexCreatorTest')","[7018, 7041, 7065, 7088]"
"('Description.java', 'org.junit.runner.Description', 'parseMethod', '(.*)\\((.*)\\)', 'testThatTrimsContent(br.com.adaptideas.scraper.TagParserTest)')",[2688]
"('Description.java', 'org.junit.runner.Description', 'getClassName', '(.*)\\((.*)\\)', 'br.com.adaptideas.scraper.CloseTagTest')","[7112, 7135, 7159, 7182]"
"('Description.java', 'org.junit.runner.Description', 'getClassName', '(.*)\\((.*)\\)', 'br.com.adaptideas.scraper.BangTagTest')","[6394, 6417, 6441, 6464]"
"('Description.java', 'org.junit.runner.Description', 'parseMethod', '(.*)\\((.*)\\)', 'testThatDoesNotConvertValuesIfNotNeeded(br.com.adaptideas.scraper.converter.DataConverterTest)')",[1582]
"('Description.java', 'org.junit.runner.Description', 'parseMethod', '(.*)\\((.*)\\)', 'testThatAttributeCaptureGroupsWork(br.com.adaptideas.scraper.ScraperSpecificationTest)')",[166]
"('Description.java', 'org.junit.runner.Description', 'parseMethod', '(.*)\\((.*)\\)', 'testThatRecoversData(br.com.adaptideas.scraper.SingleTemplateTest)')",[2813]
"('Description.java', 'org.junit.runner.Description', 'parseMethod', '(.*)\\((.*)\\)', 'testThatOnlySearchTagsOnTemplate(br.com.adaptideas.scraper.SingleTemplateTest)')",[2876]
"('Description.java', 'org.junit.runner.Description', 'parseMethod', '(.*)\\((.*)\\)', 'testThatCreatesCaptureGroupRegexWithinCharacters(br.com.adaptideas.scraper.matcher.regex.CaptureGroupsRegexCreatorTest)')",[2102]
"('IrrelevantContentTagCleaner.java', 'br.com.adaptideas.scraper.cleaner.IrrelevantContentTagCleaner', 'contentMatches', '(?i)(?s)^\\Q\\E(.*?)\\Q\\E$', 'content')","[4457, 4514, 4973, 5030]"
"('IrrelevantContentTagCleaner.java', 'br.com.adaptideas.scraper.cleaner.IrrelevantContentTagCleaner', 'contentMatches', '(?i)(?s)^\\QCarga\\E \\Qhor&aacute;ria\\E \\Q-\\E \\Q\\E(.*?)\\Qh\\E$', 'Carga hor&aacute;ria - 16h')",[4400]
"('IrrelevantContentTagCleaner.java', 'br.com.adaptideas.scraper.cleaner.IrrelevantContentTagCleaner', 'contentMatches', '(?i)(?s)^\\Qignore\\E \\Q\\E(.*?)\\Q\\E \\Qcontent\\E \\Q\\E(.*?)\\Q\\E \\Qignore\\E$', 'ignore bar content capture ignore')",[4172]
"('IrrelevantContentTagCleaner.java', 'br.com.adaptideas.scraper.cleaner.IrrelevantContentTagCleaner', 'contentMatches', '(?i)(?s)^\\Q\\E(.*?)\\Q\\E$', 'Segurança em Servidores Linux: Norma ISO 27002 a distancia (466)')",[8252]
"('IrrelevantContentTagCleaner.java', 'br.com.adaptideas.scraper.cleaner.IrrelevantContentTagCleaner', 'contentMatches', '(?i)(?s)^\\Q\\E(.*?)\\Q\\E \\Qcontent\\E \\Q\\E(.*?)\\Q\\E$', 'bar cont capture')",[4029]
"('DefaultTagMatcher.java', 'br.com.adaptideas.scraper.tag.DefaultTagMatcher', 'contentMatches', '(?i)(?s)^\\Qbefore\\E \\Q\\E(.*?)\\Q\\E \\Qbefore\\E \\Q\\E(.*?)\\Q\\E \\Qhour\\E \\Q\\E.*?\\Q\\E$', 'before jarjar before bar foo hour capture')",[4314]
"('Description.java', 'org.junit.runner.Description', 'getClassName', '(.*)\\((.*)\\)', 'testThatAcceptsAnything(br.com.adaptideas.scraper.matcher.regex.CaptureGroupsRegexCreatorTest)')",[2060]
"('Description.java', 'org.junit.runner.Description', 'parseMethod', '(.*)\\((.*)\\)', 'testThatIgnoresWhiteCharsInsideTag(br.com.adaptideas.scraper.TagParserTest)')",[2331]
"('Description.java', 'org.junit.runner.Description', 'parseMethod', '(.*)\\((.*)\\)', 'testThatFindsTwoAttributes(br.com.adaptideas.scraper.tag.TagReaderTest)')",[1291]
"('Description.java', 'org.junit.runner.Description', 'getClassName', '(.*)\\((.*)\\)', 'br.com.adaptideas.scraper.converter.DataConverterTest')","[6488, 6511, 6535, 6558]"
"('IrrelevantContentTagCleaner.java', 'br.com.adaptideas.scraper.cleaner.IrrelevantContentTagCleaner', 'contentMatches', '(?i)(?s)^\\Qcontent\\E \\Q\\E(.*?)\\Q\\E$', 'content value')","[7209, 7236]"
"('DefaultTagMatcher.java', 'br.com.adaptideas.scraper.tag.DefaultTagMatcher', 'contentMatches', '(?i)(?s)^\\Q\\E(.*?)\\Q\\E$', 'content')","[4485, 4542, 5001, 5058]"
"('Description.java', 'org.junit.runner.Description', 'parseMethod', '(.*)\\((.*)\\)', 'testThatIgnoresMissingLesserThanChar(br.com.adaptideas.scraper.TagParserTest)')",[2373]
"('Description.java', 'org.junit.runner.Description', 'parseMethod', '(.*)\\((.*)\\)', 'shouldMatchIfThereIsPartialContent(br.com.adaptideas.scraper.tag.PatternAttributeTest)')",[582]
"('Description.java', 'org.junit.runner.Description', 'parseMethod', '(.*)\\((.*)\\)', 'testThatRecognizesOpenHtmlTag(br.com.adaptideas.scraper.TagParserTest)')",[2268]
"('Description.java', 'org.junit.runner.Description', 'getClassName', '(.*)\\((.*)\\)', 'br.com.adaptideas.scraper.tag.TagSanitizerTest')","[6018, 6041, 6065, 6088]"
"('Description.java', 'org.junit.runner.Description', 'parseMethod', '(.*)\\((.*)\\)', 'testThatAcceptsSelfClosingTagWithAttributes(br.com.adaptideas.scraper.TagParserTest)')",[2604]
"('Description.java', 'org.junit.runner.Description', 'parseMethod', '(.*)\\((.*)\\)', 'testThatDoenstMatchIfTagNameIsDifferent(br.com.adaptideas.scraper.tag.DefaultTagMatcherTest)')",[832]
"('Description.java', 'org.junit.runner.Description', 'getClassName', '(.*)\\((.*)\\)', 'testThatTagWithContentWorksWithCaptureGroupAndContent(br.com.adaptideas.scraper.ScraperSpecificationTest)')",[124]
"('Description.java', 'org.junit.runner.Description', 'getClassName', '(.*)\\((.*)\\)', 'testThatMatchesWithCaptureGroupWithWhiteSpaceWithoutOtherContent(br.com.adaptideas.scraper.matcher.TemplateTagTest)')",[1643]
"('Description.java', 'org.junit.runner.Description', 'getClassName', '(.*)\\((.*)\\)', 'testThatItReturnsBangIfTheCharacterIsExclamationMark(br.com.adaptideas.scraper.tag.TagTypeTest)')",[1332]
"('Description.java', 'org.junit.runner.Description', 'parseMethod', '(.*)\\((.*)\\)', 'testThatMatchesSameSequence(br.com.adaptideas.scraper.tag.TagListMatcherTest)')",[916]
"('Description.java', 'org.junit.runner.Description', 'parseMethod', '(.*)\\((.*)\\)', 'testThatRemovesTagWithoutAttributes(br.com.adaptideas.scraper.cleaner.IrrelevantTagCleanerTest)')",[3064]
"('Description.java', 'org.junit.runner.Description', 'parseMethod', '(.*)\\((.*)\\)', 'testThatMatchesWithTextSpreadedAcrossTags(br.com.adaptideas.scraper.SingleTemplateTest)')",[2981]
"('Description.java', 'org.junit.runner.Description', 'parseMethod', '(.*)\\((.*)\\)', 'shouldFindMultipleItems(br.com.adaptideas.scraper.MultipleMatchTemplateTest)')",[3356]
"('Description.java', 'org.junit.runner.Description', 'parseMethod', '(.*)\\((.*)\\)', 'testThatOnlyMatchesIfAttributesSettedOnTemplateWereSettedOnHtml(br.com.adaptideas.scraper.tag.DefaultTagMatcherTest)')",[874]
"('Description.java', 'org.junit.runner.Description', 'parseMethod', '(.*)\\((.*)\\)', 'testThatRecoverWithMultipleCaptureGroups(br.com.adaptideas.scraper.matcher.TemplateTagTest)')",[1748]
"('IrrelevantContentTagCleaner.java', 'br.com.adaptideas.scraper.cleaner.IrrelevantContentTagCleaner', 'contentMatches', '(?i)(?s)^\\Q\\E(.*?)\\Q\\E$', 'foo')",[3445]
"('Description.java', 'org.junit.runner.Description', 'getClassName', '(.*)\\((.*)\\)', 'br.com.adaptideas.scraper.SingleTemplateTest')","[8040, 8063, 8087, 8110]"
"('DefaultTagMatcher.java', 'br.com.adaptideas.scraper.tag.DefaultTagMatcher', 'contentMatches', '(?i)(?s)^\\Qa\\E$', 'a')",[7845]
"('Description.java', 'org.junit.runner.Description', 'parseMethod', '(.*)\\((.*)\\)', 'testThatReadsOnlyRelevantTags(br.com.adaptideas.scraper.TagParserTest)')",[2625]
"('Description.java', 'org.junit.runner.Description', 'parseMethod', '(.*)\\((.*)\\)', 'testThatDoesNotRemovesTagWithAttributes(br.com.adaptideas.scraper.cleaner.IrrelevantTagCleanerTest)')",[3023]
"('Description.java', 'org.junit.runner.Description', 'parseMethod', '(.*)\\((.*)\\)', 'testThatFindsTagName(br.com.adaptideas.scraper.tag.TagReaderTest)')",[1207]
"('Description.java', 'org.junit.runner.Description', 'parseMethod', '(.*)\\((.*)\\)', 'testThatRemovesTagOfDifferentType(br.com.adaptideas.scraper.cleaner.IrrelevantTagCleanerTest)')",[3169]
"('Description.java', 'org.junit.runner.Description', 'getClassName', '(.*)\\((.*)\\)', 'testThatAcceptsAnything(br.com.adaptideas.scraper.matcher.regex.OrdinaryWordRegexCreatorTest)')",[1998]
"('Description.java', 'org.junit.runner.Description', 'parseMethod', '(.*)\\((.*)\\)', 'testThatThrowsExceptionFieldDoenstExists(br.com.adaptideas.scraper.SingleTemplateTest)')",[2792]
"('DefaultTagMatcher.java', 'br.com.adaptideas.scraper.tag.DefaultTagMatcher', 'contentMatches', '(?i)(?s)^\\Q\\E(.*?)\\Q\\E \\Q(\\E(.*?)\\Q)\\E$', '123 (bar)')",[7817]
"('Description.java', 'org.junit.runner.Description', 'parseMethod', '(.*)\\((.*)\\)', 'shouldMatchIfContentIsContainedIntoOtherContentWithSpaces(br.com.adaptideas.scraper.tag.StringAttributeTest)')",[1395]
"('IrrelevantContentTagCleaner.java', 'br.com.adaptideas.scraper.cleaner.IrrelevantContentTagCleaner', 'contentMatches', '(?i)(?s)^\\Q\\E(.*?)\\Q\\E \\Qhour\\E \\Q\\E.*?\\Q\\E$', 'capture hour just some text to ignore')",[3858]
"('Description.java', 'org.junit.runner.Description', 'parseMethod', '(.*)\\((.*)\\)', 'testThatWorksOnMessyTagsWithoutAttributes(br.com.adaptideas.scraper.tag.TagSanitizerTest)')",[1145]
"('Description.java', 'org.junit.runner.Description', 'parseMethod', '(.*)\\((.*)\\)', 'testThatReadsOnlyRelevantTagsCaseInsensitive(br.com.adaptideas.scraper.TagParserTest)')",[2667]
"('TemplateTagTest.java', 'br.com.adaptideas.scraper.matcher.TemplateTagTest', 'testThatMatchesWithCaptureGroupWithWhiteSpaceWithoutOtherContent', '(?i)(?s)^\\Q\\E(.*?)\\Q\\E$', 'anything to just ignore simple text')",[6580]
"('Description.java', 'org.junit.runner.Description', 'parseMethod', '(.*)\\((.*)\\)', 'testThatAcceptsWhiteSpaceOnAttributeValue(br.com.adaptideas.scraper.TagParserTest)')",[2520]
"('Description.java', 'org.junit.runner.Description', 'getClassName', '(.*)\\((.*)\\)', 'shouldReturnAnEmptyListIfNoItemIsFound(br.com.adaptideas.scraper.MultipleMatchTemplateTest)')",[3293]
"('IrrelevantContentTagCleaner.java', 'br.com.adaptideas.scraper.cleaner.IrrelevantContentTagCleaner', 'contentMatches', '(?i)(?s)^\\Q\\E(.*?)\\Q\\E \\Qignore\\E \\Q\\E(.*?)\\Q\\E \\Qhour\\E \\Q\\E.*?\\Q\\E$', 'something ignore capture hour just some text to ignore')",[4229]
"('IrrelevantContentTagCleaner.java', 'br.com.adaptideas.scraper.cleaner.IrrelevantContentTagCleaner', 'contentMatches', '(?i)(?s)^\\Q\\E(.*?)\\Q\\E$', 'test2')","[8584, 8673, 8762]"
"('Description.java', 'org.junit.runner.Description', 'parseMethod', '(.*)\\((.*)\\)', 'testThatCreatesCaptureGroupRegex(br.com.adaptideas.scraper.matcher.regex.CaptureGroupsRegexCreatorTest)')",[2081]
"('DefaultTagMatcher.java', 'br.com.adaptideas.scraper.tag.DefaultTagMatcher', 'contentMatches', '(?i)(?s)^\\Qignore\\E \\Q\\E(.*?)\\Q\\E \\Qcontent\\E \\Q\\E(.*?)\\Q\\E$', 'ignore bar content capture')",[4143]
"('Description.java', 'org.junit.runner.Description', 'parseMethod', '(.*)\\((.*)\\)', 'testThatTagWorksWithMultipleCaptureGroupsAndIgnoreAllMatcher(br.com.adaptideas.scraper.ScraperSpecificationTest)')",[208]
"('Description.java', 'org.junit.runner.Description', 'parseMethod', '(.*)\\((.*)\\)', 'testThatMatchesWithCaptureGroupWithWhiteSpaceWithoutOtherContent(br.com.adaptideas.scraper.matcher.TemplateTagTest)')",[1623]
"('Description.java', 'org.junit.runner.Description', 'parseMethod', '(.*)\\((.*)\\)', 'testCharsetConvertion(br.com.adaptideas.scraper.HtmlTest)')",[437]
"('Description.java', 'org.junit.runner.Description', 'parseMethod', '(.*)\\((.*)\\)', 'testThatKeepsGoodTags(br.com.adaptideas.scraper.tag.TagSanitizerTest)')",[999]
"('Description.java', 'org.junit.runner.Description', 'parseMethod', '(.*)\\((.*)\\)', 'testThatMatchesOrdinaryWords(br.com.adaptideas.scraper.matcher.TemplateTagTest)')",[1853]
"('IrrelevantContentTagCleaner.java', 'br.com.adaptideas.scraper.cleaner.IrrelevantContentTagCleaner', 'contentMatches', '(?i)(?s)^\\Q\\E(.*?)\\Q\\E$', 'test')","[3386, 3504, 3563, 4600, 8376, 8435, 8465, 8524, 8554, 8643, 8732]"
"('Description.java', 'org.junit.runner.Description', 'parseMethod', '(.*)\\((.*)\\)', 'shouldMatchIfContentIsEquals(br.com.adaptideas.scraper.tag.PatternAttributeTest)')",[499]
"('Description.java', 'org.junit.runner.Description', 'parseMethod', '(.*)\\((.*)\\)', 'testThatFindsAttributes(br.com.adaptideas.scraper.tag.TagReaderTest)')",[1270]
"('IrrelevantContentTagCleaner.java', 'br.com.adaptideas.scraper.cleaner.IrrelevantContentTagCleaner', 'contentMatches', '(?i)(?s)^\\Q\\E(.*?)\\Q\\E \\Qcontent\\E \\Q\\E(.*?)\\Q\\E$', 'bar content capture')",[4058]
"('Description.java', 'org.junit.runner.Description', 'parseMethod', '(.*)\\((.*)\\)', 'testThatIfDoesNotHaveTagReturnsEmptyList(br.com.adaptideas.scraper.TagParserTest)')",[2247]
"('Description.java', 'org.junit.runner.Description', 'parseMethod', '(.*)\\((.*)\\)', 'testThatTagWorksWithCaptureGroupsAndIgnoreAllMatcher(br.com.adaptideas.scraper.ScraperSpecificationTest)')",[145]
"('Description.java', 'org.junit.runner.Description', 'parseMethod', '(.*)\\((.*)\\)', 'testTrimsTagName(br.com.adaptideas.scraper.BangTagTest)')",[1499]
"('Scanner.java', 'java.util.Scanner', 'getCompleteTokenInBuffer', '(?s).*', '\ntext \n\t \r other    text\n\r')",[5524]
"('DefaultTagMatcher.java', 'br.com.adaptideas.scraper.tag.DefaultTagMatcher', 'contentMatches', '(?i)(?s)^\\Q\\E(.*?)\\Q\\E$', 'Segurança em Servidores Linux: Norma ISO 27002 à distância (466)')",[7902]
"('Description.java', 'org.junit.runner.Description', 'parseMethod', '(.*)\\((.*)\\)', 'testThatThrowsExceptionIfInputStreamIsNull(br.com.adaptideas.scraper.SingleTemplateTest)')",[2709]
"('Description.java', 'org.junit.runner.Description', 'parseMethod', '(.*)\\((.*)\\)', 'testThatIgnoresTags(br.com.adaptideas.scraper.HtmlTest)')",[396]
"('Description.java', 'org.junit.runner.Description', 'getClassName', '(.*)\\((.*)\\)', 'br.com.adaptideas.scraper.cleaner.IrrelevantTagCleanerTest')","[8134, 8157, 8181, 8204]"
"('Description.java', 'org.junit.runner.Description', 'parseMethod', '(.*)\\((.*)\\)', 'testThatIgnoresWhiteCharOnTagName(br.com.adaptideas.scraper.TagParserTest)')",[2478]
"('Description.java', 'org.junit.runner.Description', 'parseMethod', '(.*)\\((.*)\\)', 'testThatIgnoresAttributesNotSettedOnTemplateElement(br.com.adaptideas.scraper.tag.DefaultTagMatcherTest)')",[853]
"('Description.java', 'org.junit.runner.Description', 'parseMethod', '(.*)\\((.*)\\)', 'testThatRecognizesCloseHtmlTag(br.com.adaptideas.scraper.TagParserTest)')",[2289]
"('IrrelevantContentTagCleaner.java', 'br.com.adaptideas.scraper.cleaner.IrrelevantContentTagCleaner', 'contentMatches', '(?i)(?s)^\\Qbefore\\E \\Q\\E(.*?)\\Q\\E \\Qbefore\\E \\Q\\E(.*?)\\Q\\E \\Qhour\\E \\Q\\E.*?\\Q\\E$', 'before jarjar before bar foo hour capture')",[4286]
"('Description.java', 'org.junit.runner.Description', 'parseMethod', '(.*)\\((.*)\\)', 'testThatCreatesEllipsisRegex(br.com.adaptideas.scraper.matcher.regex.EllipsisRegexCreatorTest)')",[1936]
"('Description.java', 'org.junit.runner.Description', 'getClassName', '(.*)\\((.*)\\)', 'testThatDoesNotRemovesTagWithAttributes(br.com.adaptideas.scraper.cleaner.IrrelevantTagCleanerTest)')",[3043]
"('Description.java', 'org.junit.runner.Description', 'parseMethod', '(.*)\\((.*)\\)', 'testThatIgnoresWhiteChars(br.com.adaptideas.scraper.TagParserTest)')",[2206]
"('Description.java', 'org.junit.runner.Description', 'getClassName', '(.*)\\((.*)\\)', 'testThatIgnoresTags(br.com.adaptideas.scraper.HtmlTest)')",[416]
"('Description.java', 'org.junit.runner.Description', 'parseMethod', '(.*)\\((.*)\\)', 'testThatItReturnsCloseIfTheCharacterIsSlash(br.com.adaptideas.scraper.tag.TagTypeTest)')",[1353]
"('Description.java', 'org.junit.runner.Description', 'parseMethod', '(.*)\\((.*)\\)', 'testThatDoesNotRemovesTagPresentOnRelevantTags(br.com.adaptideas.scraper.cleaner.IrrelevantTagCleanerTest)')",[3190]
"('IrrelevantContentTagCleaner.java', 'br.com.adaptideas.scraper.cleaner.IrrelevantContentTagCleaner', 'contentMatches', '(?i)(?s)^\\Qa\\E$', 'a')",[7789]
"('Description.java', 'org.junit.runner.Description', 'parseMethod', '(.*)\\((.*)\\)', 'testThatOnlySearchTagsOnTemplateWithMultipleCaptureGroups(br.com.adaptideas.scraper.SingleTemplateTest)')",[2939]
"('Description.java', 'org.junit.runner.Description', 'parseMethod', '(.*)\\((.*)\\)', 'testThatRecognizesWithWhiteSpaces(br.com.adaptideas.scraper.ScraperSpecificationTest)')",[229]
"('Description.java', 'org.junit.runner.Description', 'parseMethod', '(.*)\\((.*)\\)', 'testThatMatchesWithEllipsis(br.com.adaptideas.scraper.matcher.TemplateTagTest)')",[1811]
"('Description.java', 'org.junit.runner.Description', 'parseMethod', '(.*)\\((.*)\\)', 'testThatWorksAsSingleTemplate(br.com.adaptideas.scraper.SplitTemplateTest)')",[83]
"('Description.java', 'org.junit.runner.Description', 'getClassName', '(.*)\\((.*)\\)', 'br.com.adaptideas.scraper.HtmlTest')","[5425, 5448, 5472, 5495]"
"('Description.java', 'org.junit.runner.Description', 'getClassName', '(.*)\\((.*)\\)', 'testTrimsTagName(br.com.adaptideas.scraper.OpenTagTest)')",[333]
"('Description.java', 'org.junit.runner.Description', 'parseMethod', '(.*)\\((.*)\\)', 'testThatToStringReturnsSomethingGoodToRead(br.com.adaptideas.scraper.CloseTagTest)')",[2185]
"('Description.java', 'org.junit.runner.Description', 'parseMethod', '(.*)\\((.*)\\)', 'testThatDoesNotMatchIfAttributeValueIsDifferent(br.com.adaptideas.scraper.tag.DefaultTagMatcherTest)')",[686]
"('DefaultTagMatcher.java', 'br.com.adaptideas.scraper.tag.DefaultTagMatcher', 'contentMatches', '(?i)(?s)^\\Q\\E.*?\\Q\\E \\Qbefore\\E \\Q\\E(.*?)\\Q\\E \\Qhour\\E \\Q\\E.*?\\Q\\E$', 'something just to be ignored before bar foo hour capture')",[4000]
"('Description.java', 'org.junit.runner.Description', 'getClassName', '(.*)\\((.*)\\)', 'br.com.adaptideas.scraper.matcher.regex.EllipsisRegexCreatorTest')","[6830, 6853, 6877, 6900]"
"('Description.java', 'org.junit.runner.Description', 'getClassName', '(.*)\\((.*)\\)', 'br.com.adaptideas.scraper.matcher.regex.OrdinaryWordRegexCreatorTest')","[6924, 6947, 6971, 6994]"
"('TemplateTagTest.java', 'br.com.adaptideas.scraper.matcher.TemplateTagTest', 'testThatMatchesWithCaptureGroupWithoutOtherContent', '(?i)(?s)^\\Q\\E(.*?)\\Q\\E$', 'anything to just ignore simple text')",[6668]
"('Description.java', 'org.junit.runner.Description', 'parseMethod', '(.*)\\((.*)\\)', 'testThatRecognizesAnyOpenTag(br.com.adaptideas.scraper.TagParserTest)')",[2394]
"('IrrelevantContentTagCleaner.java', 'br.com.adaptideas.scraper.cleaner.IrrelevantContentTagCleaner', 'contentMatches', '(?i)(?s)^\\Qbefore\\E \\Q\\E(.*?)\\Q\\E \\Qhour\\E \\Q\\E.*?\\Q\\E$', 'before bar foo hour capture')",[3915]
"('IrrelevantContentTagCleaner.java', 'br.com.adaptideas.scraper.cleaner.IrrelevantContentTagCleaner', 'contentMatches', '(?i)(?s)^\\Q\\E(.*?)\\Q\\E \\Qcontent\\E$', 'capture content')",[3801]
"('Description.java', 'org.junit.runner.Description', 'parseMethod', '(.*)\\((.*)\\)', 'testThatIgnoresMissingGreaterThanChar(br.com.adaptideas.scraper.TagParserTest)')",[2352]
"('Description.java', 'org.junit.runner.Description', 'parseMethod', '(.*)\\((.*)\\)', 'testThatSecondTemplateDoesNotOverrideFirst(br.com.adaptideas.scraper.SplitTemplateTest)')",[21]
"('Description.java', 'org.junit.runner.Description', 'parseMethod', '(.*)\\((.*)\\)', 'testThatMatchesIfAttributeHasSharp(br.com.adaptideas.scraper.SingleTemplateTest)')",[3002]
"('Description.java', 'org.junit.runner.Description', 'getClassName', '(.*)\\((.*)\\)', 'testTrimsTagName(br.com.adaptideas.scraper.CloseTagTest)')",[2143]
"('Description.java', 'org.junit.runner.Description', 'parseMethod', '(.*)\\((.*)\\)', 'testThatDoesntMatchDifferentElementType(br.com.adaptideas.scraper.tag.DefaultTagMatcherTest)')",[811]
"('Description.java', 'org.junit.runner.Description', 'parseMethod', '(.*)\\((.*)\\)', 'testThatFindsContent(br.com.adaptideas.scraper.TagParserTest)')",[2436]
"('TemplateTagTest.java', 'br.com.adaptideas.scraper.matcher.TemplateTagTest', 'testThatMatchesWithBizarreContent', '(?i)(?s)^\\Q\\E.*?\\Q\\E \\Qanything\\E \\Q\\E(.*?)\\Q\\E \\Qsimple\\E \\Q\\E(.*?)\\Q\\E \\Qtext\\E \\Q\\E.*?\\Q\\E$', 'a anything to just ignore simple and normal text after')",[6602]
"('Description.java', 'org.junit.runner.Description', 'parseMethod', '(.*)\\((.*)\\)', 'testThatRemovesTagWithDifferentContent(br.com.adaptideas.scraper.cleaner.IrrelevantContentTagCleanerTest)')",[3211]
"('Description.java', 'org.junit.runner.Description', 'parseMethod', '(.*)\\((.*)\\)', 'shouldNotMatchIfContentIsNotEquals(br.com.adaptideas.scraper.tag.StringAttributeTest)')",[1457]
"('Description.java', 'org.junit.runner.Description', 'getClassName', '(.*)\\((.*)\\)', 'br.com.adaptideas.scraper.tag.AttributeTest')","[5736, 5759, 5783, 5806]"
"('Description.java', 'org.junit.runner.Description', 'parseMethod', '(.*)\\((.*)\\)', 'testThatRecoverCaptureGroup(br.com.adaptideas.scraper.matcher.TemplateTagTest)')",[1706]
"('Description.java', 'org.junit.runner.Description', 'parseMethod', '(.*)\\((.*)\\)', 'testThatItReturnsBangIfTheCharacterIsExclamationMark(br.com.adaptideas.scraper.tag.TagTypeTest)')",[1312]
"('IrrelevantContentTagCleaner.java', 'br.com.adaptideas.scraper.cleaner.IrrelevantContentTagCleaner', 'contentMatches', '(?i)(?s)^\\Q\\E.*?\\Q\\E \\Qbefore\\E \\Q\\E(.*?)\\Q\\E \\Qhour\\E \\Q\\E.*?\\Q\\E$', 'something just to be ignored before bar foo hour capture')",[3972]
"('Description.java', 'org.junit.runner.Description', 'getClassName', '(.*)\\((.*)\\)', 'testThatRemovesWhiteChars(br.com.adaptideas.scraper.infra.InputStreamToStringReaderTest)')",[478]
"('IrrelevantContentTagCleaner.java', 'br.com.adaptideas.scraper.cleaner.IrrelevantContentTagCleaner', 'contentMatches', '(?i)(?s)^\\Qcontent\\E \\Q\\E(.*?)\\Q\\E$', 'content capture')",[3744]
"('Description.java', 'org.junit.runner.Description', 'getClassName', '(.*)\\((.*)\\)', 'testThatRemovesTagWithDifferentContent(br.com.adaptideas.scraper.cleaner.IrrelevantContentTagCleanerTest)')",[3231]
"('DefaultTagMatcher.java', 'br.com.adaptideas.scraper.tag.DefaultTagMatcher', 'contentMatches', '(?i)(?s)^\\Q\\E(.*?)\\Q\\E \\Qcontent\\E \\Q\\E(.*?)\\Q\\E$', 'bar content capture')",[4086]
"('Description.java', 'org.junit.runner.Description', 'parseMethod', '(.*)\\((.*)\\)', 'testThatRecognizesAtributes(br.com.adaptideas.scraper.TagParserTest)')",[2499]
"('Description.java', 'org.junit.runner.Description', 'getClassName', '(.*)\\((.*)\\)', 'br.com.adaptideas.scraper.SplitTemplateTest')","[3616, 3639, 3663, 3686]"
"('Description.java', 'org.junit.runner.Description', 'parseMethod', '(.*)\\((.*)\\)', 'shouldMatchTagOnStrangeTags(br.com.adaptideas.scraper.SingleTemplateTest)')",[2960]
"('Description.java', 'org.junit.runner.Description', 'getClassName', '(.*)\\((.*)\\)', 'testThatAcceptsAnything(br.com.adaptideas.scraper.matcher.regex.EllipsisRegexCreatorTest)')",[1915]
"('Description.java', 'org.junit.runner.Description', 'parseMethod', '(.*)\\((.*)\\)', 'testThatRecoverDataFromAttributesWithMultipleCaptureGroups(br.com.adaptideas.scraper.matcher.TemplateTagTest)')",[1790]
"('IrrelevantContentTagCleaner.java', 'br.com.adaptideas.scraper.cleaner.IrrelevantContentTagCleaner', 'contentMatches', '(?i)(?s)^\\Q\\E.*?\\Q\\E \\Qbefore\\E \\Q\\E(.*?)\\Q\\E \\Qbefore\\E \\Q\\E(.*?)\\Q\\E \\Qhour\\E \\Q\\E.*?\\Q\\E$', 'more content to ignore before jarjar before bar foo hour capture')",[4343]
"('Description.java', 'org.junit.runner.Description', 'parseMethod', '(.*)\\((.*)\\)', 'testThatToStringReturnsSomethingGoodToRead(br.com.adaptideas.scraper.OpenTagTest)')",[375]
"('Scanner.java', 'java.util.Scanner', 'getCompleteTokenInBuffer', '(?s).*', '<a><tr>áéíóú</tr></a>')","[5277, 5308, 5339, 5370, 5401]"
"('DefaultTagMatcher.java', 'br.com.adaptideas.scraper.tag.DefaultTagMatcher', 'contentMatches', '(?i)(?s)^\\Q\\E(.*?)\\Q\\E$', 'foo')",[3474]
"('Description.java', 'org.junit.runner.Description', 'parseMethod', '(.*)\\((.*)\\)', 'testThatSimpleTagWorksWithCaptureGroup(br.com.adaptideas.scraper.ScraperSpecificationTest)')",[292]
"('IrrelevantContentTagCleaner.java', 'br.com.adaptideas.scraper.cleaner.IrrelevantContentTagCleaner', 'contentMatches', '(?i)(?s)^\\QA\\E \\Q\\E(.*?)\\Q\\E \\QB\\E.*?\\Q\\E$', 'A de sc B asdf')",[7931]
"('DefaultTagMatcher.java', 'br.com.adaptideas.scraper.tag.DefaultTagMatcher', 'contentMatches', '(?i)(?s)^\\Q\\E(.*?)\\Q\\E$', 'abc')",[8016]
"('Description.java', 'org.junit.runner.Description', 'parseMethod', '(.*)\\((.*)\\)', 'shouldReturnPatternAttribute(br.com.adaptideas.scraper.tag.AttributeTest)')",[665]
"('Description.java', 'org.junit.runner.Description', 'getClassName', '(.*)\\((.*)\\)', 'br.com.adaptideas.scraper.infra.InputStreamToStringReaderTest')","[5548, 5571, 5595, 5618]"
"('IrrelevantContentTagCleaner.java', 'br.com.adaptideas.scraper.cleaner.IrrelevantContentTagCleaner', 'contentMatches', '(?i)(?s)^\\Q\\E(.*?)\\Q\\E \\Q(\\E(.*?)\\Q)\\E$', '123 (bar)')",[7760]
"('Description.java', 'org.junit.runner.Description', 'parseMethod', '(.*)\\((.*)\\)', 'testThatOnlySearchTagsOnTemplate3(br.com.adaptideas.scraper.SingleTemplateTest)')",[2918]
"('DefaultTagMatcher.java', 'br.com.adaptideas.scraper.tag.DefaultTagMatcher', 'contentMatches', '(?i)(?s)^\\Qbefore\\E \\Q\\E(.*?)\\Q\\E \\Qhour\\E \\Q\\E.*?\\Q\\E$', 'before bar foo hour capture')",[3943]
"('Description.java', 'org.junit.runner.Description', 'parseMethod', '(.*)\\((.*)\\)', 'testThatWorksOnTagsWithoutAttributes(br.com.adaptideas.scraper.tag.TagSanitizerTest)')",[1124]
"('Description.java', 'org.junit.runner.Description', 'parseMethod', '(.*)\\((.*)\\)', 'testThatAcceptsAnything(br.com.adaptideas.scraper.matcher.regex.OrdinaryWordRegexCreatorTest)')",[1978]
"('Description.java', 'org.junit.runner.Description', 'parseMethod', '(.*)\\((.*)\\)', 'testThatDoesNotRemoveTagsWithMultipleCaptureGroups(br.com.adaptideas.scraper.cleaner.IrrelevantTagCleanerTest)')",[3106]
"('Description.java', 'org.junit.runner.Description', 'getClassName', '(.*)\\((.*)\\)', 'br.com.adaptideas.scraper.tag.TagReaderTest')","[6112, 6135, 6159, 6182]"
"('Description.java', 'org.junit.runner.Description', 'parseMethod', '(.*)\\((.*)\\)', 'testTrimsTagName(br.com.adaptideas.scraper.OpenTagTest)')",[313]
"('Description.java', 'org.junit.runner.Description', 'parseMethod', '(.*)\\((.*)\\)', 'testThatRemovesWhiteChars(br.com.adaptideas.scraper.infra.InputStreamToStringReaderTest)')",[458]
"('Description.java', 'org.junit.runner.Description', 'parseMethod', '(.*)\\((.*)\\)', 'shouldReturnStringAttribute(br.com.adaptideas.scraper.tag.AttributeTest)')",[624]
"('Description.java', 'org.junit.runner.Description', 'parseMethod', '(.*)\\((.*)\\)', 'testThatDoesNotMatchIfAttributeIsNotSettedOnHtml(br.com.adaptideas.scraper.tag.DefaultTagMatcherTest)')",[727]
"('Description.java', 'org.junit.runner.Description', 'parseMethod', '(.*)\\((.*)\\)', 'testThatMatchesWithCaptureGroupWithoutOtherContent(br.com.adaptideas.scraper.matcher.TemplateTagTest)')",[1832]
"('Description.java', 'org.junit.runner.Description', 'parseMethod', '(.*)\\((.*)\\)', 'testThatAcceptsTheTagA(br.com.adaptideas.scraper.TagParserTest)')",[2541]
"('Description.java', 'org.junit.runner.Description', 'parseMethod', '(.*)\\((.*)\\)', 'testThatAcceptsAnything(br.com.adaptideas.scraper.matcher.regex.EllipsisRegexCreatorTest)')",[1895]
"('Description.java', 'org.junit.runner.Description', 'parseMethod', '(.*)\\((.*)\\)', 'shouldFindSingleItem(br.com.adaptideas.scraper.MultipleMatchTemplateTest)')",[3314]
"('Description.java', 'org.junit.runner.Description', 'getClassName', '(.*)\\((.*)\\)', 'testThatIgnoresWhiteChars(br.com.adaptideas.scraper.TagParserTest)')",[2226]
"('DefaultTagMatcher.java', 'br.com.adaptideas.scraper.tag.DefaultTagMatcher', 'contentMatches', '(?i)(?s)^\\Q\\E(.*?)\\Q\\E$', 'test2')",[8702]
"('Description.java', 'org.junit.runner.Description', 'parseMethod', '(.*)\\((.*)\\)', 'testThatKeepsContentOnFirstTag(br.com.adaptideas.scraper.TagParserTest)')",[2457]
"('IrrelevantContentTagCleaner.java', 'br.com.adaptideas.scraper.cleaner.IrrelevantContentTagCleaner', 'contentMatches', '(?i)(?s)^\\Q\\E(.*?)\\Q\\E$', '')","[4658, 4716, 4830, 4888]"
"('IrrelevantContentTagCleaner.java', 'br.com.adaptideas.scraper.cleaner.IrrelevantContentTagCleaner', 'contentMatches', '(?i)(?s)^\\Q\\E(.*?)\\Q\\E$', 'Segurança em Servidores Linux: Norma ISO 27002 à distância (466)')",[7874]
"('Description.java', 'org.junit.runner.Description', 'parseMethod', '(.*)\\((.*)\\)', 'testTrimsTagName(br.com.adaptideas.scraper.CloseTagTest)')",[2123]
"('DefaultTagMatcher.java', 'br.com.adaptideas.scraper.tag.DefaultTagMatcher', 'contentMatches', '(?i)(?s)^\\Q\\E(.*?)\\Q\\E$', 'test')","[3415, 3533, 3592, 8405, 8494, 8613]"
"('Description.java', 'org.junit.runner.Description', 'parseMethod', '(.*)\\((.*)\\)', 'testThatDoesNotRemovesTagWithSimilarContent(br.com.adaptideas.scraper.cleaner.IrrelevantTagCleanerTest)')",[3085]
"('DefaultTagMatcher.java', 'br.com.adaptideas.scraper.tag.DefaultTagMatcher', 'contentMatches', '(?i)(?s)^\\QA\\E \\Q\\E(.*?)\\Q\\E \\QB\\E.*?\\Q\\E$', 'A de sc B asdf')",[7959]
"('Description.java', 'org.junit.runner.Description', 'getClassName', '(.*)\\((.*)\\)', 'shouldReturnStringAttribute(br.com.adaptideas.scraper.tag.AttributeTest)')",[644]
"('Description.java', 'org.junit.runner.Description', 'parseMethod', '(.*)\\((.*)\\)', 'testThatTagWithContentWorksWithMultipleCaptureGroupsAndContent(br.com.adaptideas.scraper.ScraperSpecificationTest)')",[187]
"('Description.java', 'org.junit.runner.Description', 'parseMethod', '(.*)\\((.*)\\)', 'testThatMatchesMoreThanOneSequence(br.com.adaptideas.scraper.tag.TagListMatcherTest)')",[957]
"('Description.java', 'org.junit.runner.Description', 'parseMethod', '(.*)\\((.*)\\)', 'testThatReadsComments(br.com.adaptideas.scraper.TagParserTest)')",[2562]
"('Description.java', 'org.junit.runner.Description', 'parseMethod', '(.*)\\((.*)\\)', 'testThatMatcherIsCaseInsensitive(br.com.adaptideas.scraper.matcher.TemplateTagTest)')",[1685]
"('Description.java', 'org.junit.runner.Description', 'parseMethod', '(.*)\\((.*)\\)', 'testThatRemovesSlash(br.com.adaptideas.scraper.tag.TagReaderTest)')",[1228]
"('Description.java', 'org.junit.runner.Description', 'parseMethod', '(.*)\\((.*)\\)', 'testThatRecoverCaptureGroupWithoutOtherContent(br.com.adaptideas.scraper.matcher.TemplateTagTest)')",[1727]
"('Description.java', 'org.junit.runner.Description', 'parseMethod', '(.*)\\((.*)\\)', 'testThatMatchesSameElement(br.com.adaptideas.scraper.tag.DefaultTagMatcherTest)')",[769]
"('Description.java', 'org.junit.runner.Description', 'parseMethod', '(.*)\\((.*)\\)', 'testThatReturnsEmptyStringIfCreatedWithNullContent(br.com.adaptideas.scraper.OpenTagTest)')",[354]
"('Description.java', 'org.junit.runner.Description', 'parseMethod', '(.*)\\((.*)\\)', 'testThatKeepsWhiteCharsInsideAttributeValueAndRemovesThoseOutside(br.com.adaptideas.scraper.tag.TagSanitizerTest)')",[1103]
"('DefaultTagMatcher.java', 'br.com.adaptideas.scraper.tag.DefaultTagMatcher', 'contentMatches', '(?i)(?s)^\\QCarga\\E \\Qhor&aacute;ria\\E \\Q-\\E \\Q\\E(.*?)\\Qh\\E$', 'Carga hor&aacute;ria - 16h')",[4428]
"('Description.java', 'org.junit.runner.Description', 'getClassName', '(.*)\\((.*)\\)', 'br.com.adaptideas.scraper.tag.TagTypeTest')","[6206, 6229, 6253, 6276]"
"('Description.java', 'org.junit.runner.Description', 'parseMethod', '(.*)\\((.*)\\)', 'testThatMatchesWithCaptureGroups(br.com.adaptideas.scraper.matcher.TemplateTagTest)')",[1874]
"('Description.java', 'org.junit.runner.Description', 'parseMethod', '(.*)\\((.*)\\)', 'testThatTagWithContentWorksWithCaptureGroupAndContent(br.com.adaptideas.scraper.ScraperSpecificationTest)')",[104]
"('Description.java', 'org.junit.runner.Description', 'getClassName', '(.*)\\((.*)\\)', 'shouldMatchIfContentIsEquals(br.com.adaptideas.scraper.tag.PatternAttributeTest)')",[519]
"('DefaultTagMatcher.java', 'br.com.adaptideas.scraper.tag.DefaultTagMatcher', 'contentMatches', '(?i)(?s)^\\Qignore\\E \\Q\\E(.*?)\\Q\\E \\Qcontent\\E \\Q\\E(.*?)\\Q\\E \\Qignore\\E$', 'ignore bar content capture ignore')",[4200]
"('Description.java', 'org.junit.runner.Description', 'parseMethod', '(.*)\\((.*)\\)', 'testThatChangesSingleQuoteToDoubleQuote(br.com.adaptideas.scraper.tag.TagSanitizerTest)')",[1082]
"('Description.java', 'org.junit.runner.Description', 'parseMethod', '(.*)\\((.*)\\)', 'testThatDoesNotMatchIfTemplateAttributeIsNotFoundOnHtml(br.com.adaptideas.scraper.tag.DefaultTagMatcherTest)')",[895]
