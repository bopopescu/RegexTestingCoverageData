"('Description.java', 'org.junit.runner.Description', 'parseMethod', '(.*)\\((.*)\\)', 'shouldReplaceTokenInMulipleLines(com.google.code.maven_replacer_plugin.TokenReplacerTest)')","[8762, 16506]"
"('Description.java', 'org.junit.runner.Description', 'parseMethod', '(.*)\\((.*)\\)', 'shouldThrowIllegalArgumentExceptionIfFileIsDirectory(com.google.code.maven_replacer_plugin.file.FileUtilsTest)')","[7968, 16277]"
"('Description.java', 'org.junit.runner.Description', 'getClassName', '(.*)\\((.*)\\)', 'shouldThrowIllegalArgumentExceptionWhenFlagIsInvalid[4](com.google.code.maven_replacer_plugin.PatternFlagsFactoryTest)')","[1015, 1038, 1061]"
"('Description.java', 'org.junit.runner.Description', 'parseMethod', '(.*)\\((.*)\\)', 'shouldWriteReplacedRegexTextToFile(com.google.code.maven_replacer_plugin.ReplacementProcessorTest)')","[10046, 16860]"
"('Description.java', 'org.junit.runner.Description', 'parseMethod', '(.*)\\((.*)\\)', 'shouldReturnRegexReplacementsFromFileUnescaping(com.google.code.maven_replacer_plugin.TokenValueMapFactoryTest)')","[13231, 17634]"
"('Description.java', 'org.junit.runner.Description', 'parseMethod', '(.*)\\((.*)\\)', 'shouldIgnoreTokensWithNoSeparatedValue(com.google.code.maven_replacer_plugin.TokenValueMapFactoryTest)')","[13047, 17572]"
"('Description.java', 'org.junit.runner.Description', 'parseMethod', '(.*)\\((.*)\\)', 'shouldThrowIllegalArgumentExceptionWhenFlagIsInvalid[4](com.google.code.maven_replacer_plugin.PatternFlagsFactoryTest)')","[992, 14380]"
"('Description.java', 'org.junit.runner.Description', 'getClassName', '(.*)\\((.*)\\)', 'shouldReplaceNonRegexTokenLocatedByXPath(com.google.code.maven_replacer_plugin.ReplacerMojoIntegrationTest)')","[4255, 4276, 4297]"
"('Description.java', 'org.junit.runner.Description', 'parseMethod', '(.*)\\((.*)\\)', 'shouldReplaceNonRegexTokenWithValue(com.google.code.maven_replacer_plugin.TokenReplacerTest)')","[8510, 16423]"
"('Description.java', 'org.junit.runner.Description', 'getClassName', '(.*)\\((.*)\\)', '[10]')","[19599, 19640]"
"('Description.java', 'org.junit.runner.Description', 'getClassName', '(.*)\\((.*)\\)', 'com.google.code.maven_replacer_plugin.ReplacerMojoIntegrationTest')","[18043, 18067, 18092, 18116]"
"('Description.java', 'org.junit.runner.Description', 'parseMethod', '(.*)\\((.*)\\)', '[9]')",[1902]
"('Description.java', 'org.junit.runner.Description', 'getClassName', '(.*)\\((.*)\\)', 'shouldWriteReplacedRegexTextToFile(com.google.code.maven_replacer_plugin.ReplacementProcessorTest)')","[10069, 10092, 10115]"
"('Description.java', 'org.junit.runner.Description', 'parseMethod', '(.*)\\((.*)\\)', 'shouldReplaceContentsAndWriteToOutputDirWithBaseDirAndPreservingAsDefault(com.google.code.maven_replacer_plugin.ReplacerMojoIntegrationTest)')","[6754, 15943]"
"('Description.java', 'org.junit.runner.Description', 'parseMethod', '(.*)\\((.*)\\)', 'shouldNotThrowExceptionWhenIgnoringErrors(com.google.code.maven_replacer_plugin.ReplacerMojoTest)')","[12089, 17342]"
"('Description.java', 'org.junit.runner.Description', 'parseMethod', '(.*)\\((.*)\\)', 'shouldReplaceContentsInFileButNotReportWhenQuiet(com.google.code.maven_replacer_plugin.ReplacerMojoIntegrationTest)')","[4906, 15481]"
"('Description.java', 'org.junit.runner.Description', 'parseMethod', '(.*)\\((.*)\\)', 'com.google.code.maven_replacer_plugin.ReplacerFactoryTest')",[9636]
"('Description.java', 'org.junit.runner.Description', 'parseMethod', '(.*)\\((.*)\\)', 'shouldReturnBitValueForFlags[7](com.google.code.maven_replacer_plugin.PatternFlagsFactoryTest)')","[1515, 14532]"
"('Description.java', 'org.junit.runner.Description', 'getClassName', '(.*)\\((.*)\\)', 'shouldReturnConstructorParameters(com.google.code.maven_replacer_plugin.ReplacementTest)')","[12223, 12246, 12269, 17383]"
"('Description.java', 'org.junit.runner.Description', 'parseMethod', '(.*)\\((.*)\\)', 'shouldReturnReplacementsFromFileAndIgnoreBlankLinesAndComments(com.google.code.maven_replacer_plugin.TokenValueMapFactoryTest)')","[13783, 17760]"
"('Description.java', 'org.junit.runner.Description', 'getClassName', '(.*)\\((.*)\\)', 'shouldThrowIllegalArgumentExceptionWhenFlagIsInvalid[6](com.google.code.maven_replacer_plugin.PatternFlagsFactoryTest)')","[1425, 1448, 1471]"
"('Description.java', 'org.junit.runner.Description', 'getClassName', '(.*)\\((.*)\\)', 'shouldReplaceContentsWithTokenValuesInDelimiteredMap(com.google.code.maven_replacer_plugin.ReplacerMojoIntegrationTest)')","[5767, 5788, 5809]"
"('Description.java', 'org.junit.runner.Description', 'parseMethod', '(.*)\\((.*)\\)', 'shouldWriteToFileEnsuringFolderStructureExists(com.google.code.maven_replacer_plugin.file.FileUtilsTest)')","[8052, 16298]"
"('Description.java', 'org.junit.runner.Description', 'getClassName', '(.*)\\((.*)\\)', 'shouldWriteToOutputDirBasedOnOutputBaseDir(com.google.code.maven_replacer_plugin.ReplacerMojoIntegrationTest)')","[6103, 6124, 6145]"
"('Description.java', 'org.junit.runner.Description', 'parseMethod', '(.*)\\((.*)\\)', 'shouldRegexReplaceContentsInFile(com.google.code.maven_replacer_plugin.ReplacerMojoIntegrationTest)')","[6670, 15922]"
"('Description.java', 'org.junit.runner.Description', 'getClassName', '(.*)\\((.*)\\)', 'shouldReturnBitValueForFlags[0](com.google.code.maven_replacer_plugin.PatternFlagsFactoryTest)')","[103, 126, 149, 14098]"
"('Description.java', 'org.junit.runner.Description', 'getClassName', '(.*)\\((.*)\\)', 'shouldReturnUnchangedTokenWhenNoValueGiven(com.google.code.maven_replacer_plugin.DelimiterBuilderTest)')","[6962, 6983, 7004, 16005]"
"('Description.java', 'org.junit.runner.Description', 'parseMethod', '(.*)\\((.*)\\)', 'com.google.code.maven_replacer_plugin.OutputFilenameBuilderTest')",[2327]
"('Description.java', 'org.junit.runner.Description', 'getClassName', '(.*)\\((.*)\\)', 'shouldIgnoreErrorsInXPath(com.google.code.maven_replacer_plugin.ReplacerMojoIntegrationTest)')","[4423, 4444, 4465]"
"('Description.java', 'org.junit.runner.Description', 'parseMethod', '(.*)\\((.*)\\)', 'shouldSupportNoExcludes(com.google.code.maven_replacer_plugin.include.FileSelectorTest)')","[9369, 16673]"
"('Description.java', 'org.junit.runner.Description', 'parseMethod', '(.*)\\((.*)\\)', 'shouldReturnBitValueForFlags[6](com.google.code.maven_replacer_plugin.PatternFlagsFactoryTest)')","[1310, 14467]"
"('Description.java', 'org.junit.runner.Description', 'getClassName', '(.*)\\((.*)\\)', 'shouldReturnTokenWithValueAtStartAndEndWhenNoMiddle(com.google.code.maven_replacer_plugin.DelimiterBuilderTest)')","[7046, 7067, 7088]"
"('Description.java', 'org.junit.runner.Description', 'parseMethod', '(.*)\\((.*)\\)', 'shouldReturnFilenameWhenJustFilenameParam(com.google.code.maven_replacer_plugin.file.FileUtilsTest)')","[7296, 16089]"
"('Description.java', 'org.junit.runner.Description', 'parseMethod', '(.*)\\((.*)\\)', 'shouldUseTokenFromFileUtilsIfGiven(com.google.code.maven_replacer_plugin.ReplacementTest)')","[12568, 17467]"
"('Description.java', 'org.junit.runner.Description', 'parseMethod', '(.*)\\((.*)\\)', 'shouldReturnFullPathWithAllOutputFileParams(com.google.code.maven_replacer_plugin.OutputFilenameBuilderTest)')","[3020, 14979]"
"('Description.java', 'org.junit.runner.Description', 'parseMethod', '(.*)\\((.*)\\)', 'shouldSetAndGetSameValues(com.google.code.maven_replacer_plugin.ReplacementTest)')","[12844, 17530]"
"('Description.java', 'org.junit.runner.Description', 'getClassName', '(.*)\\((.*)\\)', 'shouldReplaceTokenWithCaseInsensitivity(com.google.code.maven_replacer_plugin.TokenReplacerTest)')","[8951, 8972, 8993]"
"('Description.java', 'org.junit.runner.Description', 'getClassName', '(.*)\\((.*)\\)', 'shouldReplaceContentsInReplacementsButNotPrintSummaryIfQuiet(com.google.code.maven_replacer_plugin.ReplacerMojoTest)')","[10732, 10755, 10778]"
"('Description.java', 'org.junit.runner.Description', 'getClassName', '(.*)\\((.*)\\)', 'com.google.code.maven_replacer_plugin.file.FileUtilsTest')","[18239, 18263, 18288, 18312]"
"('Description.java', 'org.junit.runner.Description', 'getClassName', '(.*)\\((.*)\\)', 'shouldReplaceContentsInFilesToIncludeAndExclude(com.google.code.maven_replacer_plugin.ReplacerMojoTest)')","[10916, 10939, 10962]"
"('Description.java', 'org.junit.runner.Description', 'getClassName', '(.*)\\((.*)\\)', 'shouldReturnFilenameWhenJustFilenameParam(com.google.code.maven_replacer_plugin.file.FileUtilsTest)')","[7317, 7338, 7359, 16109]"
"('Description.java', 'org.junit.runner.Description', 'parseMethod', '(.*)\\((.*)\\)', 'shouldPrefixBasedirWhenNotPreservingPath(com.google.code.maven_replacer_plugin.OutputFilenameBuilderTest)')","[2348, 14791]"
"('Description.java', 'org.junit.runner.Description', 'getClassName', '(.*)\\((.*)\\)', 'shouldWriteFileWithoutSpecifiedEncoding(com.google.code.maven_replacer_plugin.file.FileUtilsTest)')","[8157, 8178, 8199]"
"('Description.java', 'org.junit.runner.Description', 'parseMethod', '(.*)\\((.*)\\)', 'shouldReturnBitValueForFlags[5](com.google.code.maven_replacer_plugin.PatternFlagsFactoryTest)')","[1105, 14402]"
"('Description.java', 'org.junit.runner.Description', 'parseMethod', '(.*)\\((.*)\\)', '[2]')",[467]
"('Description.java', 'org.junit.runner.Description', 'parseMethod', '(.*)\\((.*)\\)', 'shouldWriteIntoTransformedOutputFilesFromInputFilePattern(com.google.code.maven_replacer_plugin.ReplacerMojoIntegrationTest)')","[5326, 15586]"
"('Description.java', 'org.junit.runner.Description', 'parseMethod', '(.*)\\((.*)\\)', 'shouldReplaceContentsInReplacementsInSameFileWhenNoOutputFile(com.google.code.maven_replacer_plugin.ReplacerMojoIntegrationTest)')","[3898, 15229]"
"('Description.java', 'org.junit.runner.Description', 'getClassName', '(.*)\\((.*)\\)', 'shouldWriteToFileOutsideBaseDir(com.google.code.maven_replacer_plugin.ReplacerMojoIntegrationTest)')","[6187, 6208, 6229]"
"('Description.java', 'org.junit.runner.Description', 'getClassName', '(.*)\\((.*)\\)', 'shouldWriteToOutputFileWhenNotUsingOutputDirAndIsSet(com.google.code.maven_replacer_plugin.OutputFilenameBuilderTest)')","[2873, 2894, 2915]"
"('Description.java', 'org.junit.runner.Description', 'getClassName', '(.*)\\((.*)\\)', 'shouldUseValueFromFileUtilsIfGiven(com.google.code.maven_replacer_plugin.ReplacementTest)')","[12683, 12706, 12729]"
"('Description.java', 'org.junit.runner.Description', 'parseMethod', '(.*)\\((.*)\\)', 'shouldWriteIntoTransformedOutputFilesFromInputFilePatternFromFilesToInclude(com.google.code.maven_replacer_plugin.ReplacerMojoIntegrationTest)')","[5578, 15649]"
"('Description.java', 'org.junit.runner.Description', 'getClassName', '(.*)\\((.*)\\)', 'shouldReturnListOfReplacementsFromVariable(com.google.code.maven_replacer_plugin.TokenValueMapFactoryTest)')","[13530, 13553, 13576]"
"('Description.java', 'org.junit.runner.Description', 'getClassName', '(.*)\\((.*)\\)', 'shouldThrowExceptionIfNoTokenForValue(com.google.code.maven_replacer_plugin.TokenValueMapFactoryTest)')","[13346, 13369, 13392]"
"('Description.java', 'org.junit.runner.Description', 'parseMethod', '(.*)\\((.*)\\)', 'shouldReplaceContentsWithTokenAndValue(com.google.code.maven_replacer_plugin.ReplacerMojoTest)')","[11261, 17153]"
"('Description.java', 'org.junit.runner.Description', 'parseMethod', '(.*)\\((.*)\\)', 'shouldUseValueFromFileUtilsIfGiven(com.google.code.maven_replacer_plugin.ReplacementTest)')","[12660, 17488]"
"('Description.java', 'org.junit.runner.Description', 'parseMethod', '(.*)\\((.*)\\)', 'shouldReplaceContentsInReplacements(com.google.code.maven_replacer_plugin.ReplacerMojoTest)')","[10341, 16923]"
"('Description.java', 'org.junit.runner.Description', 'parseMethod', '(.*)\\((.*)\\)', 'shouldReplaceContentsInFileWithDelimiteredToken(com.google.code.maven_replacer_plugin.ReplacerMojoIntegrationTest)')","[4738, 15439]"
"('Description.java', 'org.junit.runner.Description', 'getClassName', '(.*)\\((.*)\\)', 'shouldReturnXPathReplacerWhenUsingXPath(com.google.code.maven_replacer_plugin.ReplacerFactoryTest)')","[9774, 9797, 9820]"
"('Description.java', 'org.junit.runner.Description', 'getClassName', '(.*)\\((.*)\\)', 'com.google.code.maven_replacer_plugin.include.FileSelectorTest')","[19681, 19701, 19722, 19742]"
"('Description.java', 'org.junit.runner.Description', 'parseMethod', '(.*)\\((.*)\\)', 'shouldThrowExceptionIfNoTokenForValue(com.google.code.maven_replacer_plugin.TokenValueMapFactoryTest)')","[13323, 17655]"
"('Description.java', 'org.junit.runner.Description', 'getClassName', '(.*)\\((.*)\\)', 'com.google.code.maven_replacer_plugin.ReplacementProcessorTest')","[18776, 18829, 18883, 18936]"
"('Description.java', 'org.junit.runner.Description', 'getClassName', '(.*)\\((.*)\\)', 'com.google.code.maven_replacer_plugin.TokenValueMapFactoryTest')","[19418, 19471, 19525, 19578]"
"('Description.java', 'org.junit.runner.Description', 'parseMethod', '(.*)\\((.*)\\)', 'shouldPrefixOutputDirWhenUsingOutputDirAndOutputFile(com.google.code.maven_replacer_plugin.OutputFilenameBuilderTest)')","[3104, 15000]"
"('Description.java', 'org.junit.runner.Description', 'parseMethod', '(.*)\\((.*)\\)', 'shouldReturnBitValueForFlags[9](com.google.code.maven_replacer_plugin.PatternFlagsFactoryTest)')","[1925, 14662]"
"('Description.java', 'org.junit.runner.Description', 'parseMethod', '(.*)\\((.*)\\)', 'shouldReturnRegexReplacementsFromFile(com.google.code.maven_replacer_plugin.TokenValueMapFactoryTest)')","[13139, 17613]"
"('Description.java', 'org.junit.runner.Description', 'parseMethod', '(.*)\\((.*)\\)', 'shouldReturnBitValueForFlags[4](com.google.code.maven_replacer_plugin.PatternFlagsFactoryTest)')","[900, 14337]"
"('Description.java', 'org.junit.runner.Description', 'getClassName', '(.*)\\((.*)\\)', 'shouldThrowIllegalArgumentExceptionWhenFlagIsInvalid[9](com.google.code.maven_replacer_plugin.PatternFlagsFactoryTest)')","[2040, 2063, 2086]"
"('Description.java', 'org.junit.runner.Description', 'parseMethod', '(.*)\\((.*)\\)', 'shouldReturnIgnoreBaseDirForOutputFileWhenStartsWithAbsolutePath(com.google.code.maven_replacer_plugin.OutputFilenameBuilderTest)')","[2936, 14958]"
"('Description.java', 'org.junit.runner.Description', 'getClassName', '(.*)\\((.*)\\)', 'shouldThrowIllegalArgumentExceptionWhenFlagIsInvalid[2](com.google.code.maven_replacer_plugin.PatternFlagsFactoryTest)')","[605, 628, 651]"
"('Description.java', 'org.junit.runner.Description', 'parseMethod', '(.*)\\((.*)\\)', 'shouldAddToSummaryAndPrintToLog(com.google.code.maven_replacer_plugin.SummaryBuilderTest)')","[8407, 16382]"
"('Description.java', 'org.junit.runner.Description', 'getClassName', '(.*)\\((.*)\\)', 'com.google.code.maven_replacer_plugin.TokenReplacerTest')","[18435, 18459, 18484, 18508]"
"('Description.java', 'org.junit.runner.Description', 'parseMethod', '(.*)\\((.*)\\)', 'shouldThrowExceptionWhenUsingIgnoreMissingFilesAndNoFileSpecified(com.google.code.maven_replacer_plugin.ReplacerMojoTest)')","[11813, 17279]"
"('Description.java', 'org.junit.runner.Description', 'parseMethod', '(.*)\\((.*)\\)', 'shouldReturnBitValueForFlags[2](com.google.code.maven_replacer_plugin.PatternFlagsFactoryTest)')","[490, 14207]"
"('Description.java', 'org.junit.runner.Description', 'parseMethod', '(.*)\\((.*)\\)', '[4]')",[877]
"('Description.java', 'org.junit.runner.Description', 'parseMethod', '(.*)\\((.*)\\)', 'shouldReturnReplacementsFromFile(com.google.code.maven_replacer_plugin.TokenValueMapFactoryTest)')","[13691, 17739]"
"('Description.java', 'org.junit.runner.Description', 'getClassName', '(.*)\\((.*)\\)', 'shouldReplaceNodeStringLocatedByXpath(com.google.code.maven_replacer_plugin.XPathReplacerTest)')","[3648, 3669, 3690]"
"('Description.java', 'org.junit.runner.Description', 'getClassName', '(.*)\\((.*)\\)', 'shouldReplaceContentsWithTokenValuesInMapWithoutComments(com.google.code.maven_replacer_plugin.ReplacerMojoTest)')","[11100, 11123, 11146]"
"('Description.java', 'org.junit.runner.Description', 'parseMethod', '(.*)\\((.*)\\)', 'null')","[17, 2308, 9617]"
"('Description.java', 'org.junit.runner.Description', 'getClassName', '(.*)\\((.*)\\)', 'shouldSkipAndDoNothing(com.google.code.maven_replacer_plugin.ReplacerMojoTest)')","[10456, 10479, 10502]"
"('Description.java', 'org.junit.runner.Description', 'getClassName', '(.*)\\((.*)\\)', 'shouldCopyAllPoliciesReferencedByProxyFile(com.google.code.maven_replacer_plugin.ProxyFileProcessorTest)')","[14009, 14032, 14055, 17822]"
"('Description.java', 'org.junit.runner.Description', 'parseMethod', '(.*)\\((.*)\\)', 'shouldReplaceNodeStringLocatedByXpath(com.google.code.maven_replacer_plugin.XPathReplacerTest)')","[3627, 15146]"
"('Description.java', 'org.junit.runner.Description', 'getClassName', '(.*)\\((.*)\\)', 'shouldReplaceContentsInFileButNotReportWhenQuiet(com.google.code.maven_replacer_plugin.ReplacerMojoIntegrationTest)')","[4927, 4948, 4969]"
"('Description.java', 'org.junit.runner.Description', 'getClassName', '(.*)\\((.*)\\)', 'com.google.code.maven_replacer_plugin.ReplacerFactoryTest')","[18562, 18615, 18669, 18722]"
"('Description.java', 'org.junit.runner.Description', 'parseMethod', '(.*)\\((.*)\\)', 'shouldReplaceContentsInIncludeAndExcludes(com.google.code.maven_replacer_plugin.ReplacerMojoTest)')","[10801, 17048]"
"('Description.java', 'org.junit.runner.Description', 'parseMethod', '(.*)\\((.*)\\)', 'shouldReturnConstructorParameters(com.google.code.maven_replacer_plugin.ReplacementTest)')","[12200, 17363]"
"('Description.java', 'org.junit.runner.Description', 'getClassName', '(.*)\\((.*)\\)', 'shouldReplaceContentsAndWriteToOutputFile(com.google.code.maven_replacer_plugin.ReplacerMojoIntegrationTest)')","[6019, 6040, 6061]"
"('Description.java', 'org.junit.runner.Description', 'getClassName', '(.*)\\((.*)\\)', 'shouldReplaceContentsWithTokenValuesInTokenAndValueFiles(com.google.code.maven_replacer_plugin.ReplacerMojoTest)')","[11468, 11491, 11514]"
"('Description.java', 'org.junit.runner.Description', 'getClassName', '(.*)\\((.*)\\)', 'shouldNotReplaceIfIgnoringMissingFilesAndFileNotExists(com.google.code.maven_replacer_plugin.ReplacerMojoTest)')","[11744, 11767, 11790]"
"('Description.java', 'org.junit.runner.Description', 'parseMethod', '(.*)\\((.*)\\)', 'shouldThrowExceptionIfNoToken(com.google.code.maven_replacer_plugin.ReplacementProcessorTest)')","[10230, 16902]"
"('Description.java', 'org.junit.runner.Description', 'getClassName', '(.*)\\((.*)\\)', 'shouldReplaceContentsWithTokenAndValueUnescaped(com.google.code.maven_replacer_plugin.ReplacerMojoTest)')","[11376, 11399, 11422]"
"('Description.java', 'org.junit.runner.Description', 'getClassName', '(.*)\\((.*)\\)', 'shouldReplaceContentsWithTokenValuesInMap(com.google.code.maven_replacer_plugin.ReplacerMojoIntegrationTest)')","[6859, 6880, 6901]"
"('Description.java', 'org.junit.runner.Description', 'parseMethod', '(.*)\\((.*)\\)', 'shouldReturnInputFileWithBaseDirWhenNoOutputDirOrNoOutputFile(com.google.code.maven_replacer_plugin.OutputFilenameBuilderTest)')","[2768, 14916]"
"('Description.java', 'org.junit.runner.Description', 'getClassName', '(.*)\\((.*)\\)', 'shouldThrowIllegalArgumentExceptionWhenFlagIsInvalid[3](com.google.code.maven_replacer_plugin.PatternFlagsFactoryTest)')","[810, 833, 856]"
"('Description.java', 'org.junit.runner.Description', 'getClassName', '(.*)\\((.*)\\)', 'shouldProcessProxyFilesIfReplacementIsProxy(com.google.code.maven_replacer_plugin.ReplacementProcessorTest)')","[9977, 10000, 10023]"
"('Description.java', 'org.junit.runner.Description', 'getClassName', '(.*)\\((.*)\\)', 'shouldEnsureFileFolderExists(com.google.code.maven_replacer_plugin.file.FileUtilsTest)')","[7821, 7842, 7863]"
"('Description.java', 'org.junit.runner.Description', 'parseMethod', '(.*)\\((.*)\\)', 'shouldThrowIllegalArgumentExceptionWhenFlagIsInvalid[7](com.google.code.maven_replacer_plugin.PatternFlagsFactoryTest)')","[1607, 14575]"
"('Description.java', 'org.junit.runner.Description', 'parseMethod', '(.*)\\((.*)\\)', 'com.google.code.maven_replacer_plugin.DelimiterBuilderTest')",[6920]
"('Description.java', 'org.junit.runner.Description', 'parseMethod', '(.*)\\((.*)\\)', 'shouldThrowIllegalArgumentExceptionWhenFlagIsInvalid[10](com.google.code.maven_replacer_plugin.PatternFlagsFactoryTest)')","[2222, 14770]"
"('Description.java', 'org.junit.runner.Description', 'parseMethod', '(.*)\\((.*)\\)', 'shouldReplaceContentsInReplacementsInSameFileWhenNoOutputFile(com.google.code.maven_replacer_plugin.ReplacerMojoTest)')","[11537, 17216]"
"('Description.java', 'org.junit.runner.Description', 'getClassName', '(.*)\\((.*)\\)', 'com.google.code.maven_replacer_plugin.XPathReplacerTest')","[17945, 17969, 17994, 18018]"
"('Description.java', 'org.junit.runner.Description', 'getClassName', '(.*)\\((.*)\\)', 'shouldReplaceContentsInAbsolutePathedFile(com.google.code.maven_replacer_plugin.ReplacerMojoIntegrationTest)')","[5095, 5116, 5137]"
"('Description.java', 'org.junit.runner.Description', 'parseMethod', '(.*)\\((.*)\\)', 'shouldHandleEmptyContentsGracefully(com.google.code.maven_replacer_plugin.TokenReplacerTest)')","[9014, 16569]"
"('Description.java', 'org.junit.runner.Description', 'parseMethod', '(.*)\\((.*)\\)', 'com.google.code.maven_replacer_plugin.PatternFlagsFactoryTest')",[36]
"('Description.java', 'org.junit.runner.Description', 'parseMethod', '(.*)\\((.*)\\)', 'shouldReplaceTokenWithEmptyValue(com.google.code.maven_replacer_plugin.TokenReplacerTest)')","[8678, 16485]"
"('Description.java', 'org.junit.runner.Description', 'parseMethod', '(.*)\\((.*)\\)', 'shouldReplaceWithGroups(com.google.code.maven_replacer_plugin.TokenReplacerTest)')","[9182, 16611]"
"('Description.java', 'org.junit.runner.Description', 'parseMethod', '(.*)\\((.*)\\)', 'com.google.code.maven_replacer_plugin.ReplacementProcessorTest')",[9839]
"('Description.java', 'org.junit.runner.Description', 'getClassName', '(.*)\\((.*)\\)', 'shouldReplaceContentsInReplacementsInSameFileWhenNoOutputFile(com.google.code.maven_replacer_plugin.ReplacerMojoIntegrationTest)')","[3919, 3940, 3961]"
"('Description.java', 'org.junit.runner.Description', 'parseMethod', '(.*)\\((.*)\\)', 'com.google.code.maven_replacer_plugin.XPathReplacerTest')",[3270]
"('Description.java', 'org.junit.runner.Description', 'getClassName', '(.*)\\((.*)\\)', 'shouldThrowIllegalArgumentExceptionWhenFlagIsInvalid[5](com.google.code.maven_replacer_plugin.PatternFlagsFactoryTest)')","[1220, 1243, 1266]"
"('Description.java', 'org.junit.runner.Description', 'parseMethod', '(.*)\\((.*)\\)', 'shouldReturnListOfReplacementsFromVariable(com.google.code.maven_replacer_plugin.TokenValueMapFactoryTest)')","[13507, 17697]"
"('Description.java', 'org.junit.runner.Description', 'getClassName', '(.*)\\((.*)\\)', 'shouldReplaceContentsWithTokenValuesInMapWithAbsolutePath(com.google.code.maven_replacer_plugin.ReplacerMojoIntegrationTest)')","[5179, 5200, 5221]"
"('Description.java', 'org.junit.runner.Description', 'getClassName', '(.*)\\((.*)\\)', 'shouldThrowIllegalArgumentExceptionWhenFlagIsInvalid[1](com.google.code.maven_replacer_plugin.PatternFlagsFactoryTest)')","[400, 423, 446]"
"('Description.java', 'org.junit.runner.Description', 'getClassName', '(.*)\\((.*)\\)', 'shouldWriteFileWithSpecifiedEncoding(com.google.code.maven_replacer_plugin.file.FileUtilsTest)')","[8241, 8262, 8283]"
"('Description.java', 'org.junit.runner.Description', 'getClassName', '(.*)\\((.*)\\)', 'shouldReturnListOfReplacementsFromSingleVariable(com.google.code.maven_replacer_plugin.TokenValueMapFactoryTest)')","[13622, 13645, 13668]"
"('Description.java', 'org.junit.runner.Description', 'getClassName', '(.*)\\((.*)\\)', 'shouldThrowIllegalArgumentExceptionWhenFlagIsInvalid[8](com.google.code.maven_replacer_plugin.PatternFlagsFactoryTest)')","[1835, 1858, 1881]"
"('Description.java', 'org.junit.runner.Description', 'parseMethod', '(.*)\\((.*)\\)', 'shouldWriteFileWithSpecifiedEncoding(com.google.code.maven_replacer_plugin.file.FileUtilsTest)')","[8220, 16340]"
"('Description.java', 'org.junit.runner.Description', 'getClassName', '(.*)\\((.*)\\)', 'shouldIgnoreErrors(com.google.code.maven_replacer_plugin.ReplacerMojoIntegrationTest)')","[4507, 4528, 4549]"
"('Description.java', 'org.junit.runner.Description', 'parseMethod', '(.*)\\((.*)\\)', 'shouldReplaceNonRegexTokenLocatedByXPathWithinReplacements(com.google.code.maven_replacer_plugin.ReplacerMojoIntegrationTest)')","[4318, 15334]"
"('Description.java', 'org.junit.runner.Description', 'getClassName', '(.*)\\((.*)\\)', 'shouldReturnIgnoreBaseDirForOutputFileWhenStartsWithAbsolutePath(com.google.code.maven_replacer_plugin.OutputFilenameBuilderTest)')","[2957, 2978, 2999]"
"('Description.java', 'org.junit.runner.Description', 'parseMethod', '(.*)\\((.*)\\)', 'shouldReturnUnchangedTokenWhenNoValueGiven(com.google.code.maven_replacer_plugin.DelimiterBuilderTest)')","[6941, 15985]"
"('Description.java', 'org.junit.runner.Description', 'getClassName', '(.*)\\((.*)\\)', 'com.google.code.maven_replacer_plugin.OutputFilenameBuilderTest')","[17847, 17871, 17896, 17920]"
"('Description.java', 'org.junit.runner.Description', 'parseMethod', '(.*)\\((.*)\\)', 'shouldWriteToOutputDirBasedOnOutputBaseDir(com.google.code.maven_replacer_plugin.ReplacerMojoIntegrationTest)')","[6082, 15775]"
"('Description.java', 'org.junit.runner.Description', 'getClassName', '(.*)\\((.*)\\)', 'shouldRegexReplaceContentsInFile(com.google.code.maven_replacer_plugin.ReplacerMojoIntegrationTest)')","[6691, 6712, 6733]"
"('Description.java', 'org.junit.runner.Description', 'parseMethod', '(.*)\\((.*)\\)', 'shouldReplaceContentsWithTokenValuesInDelimiteredMap(com.google.code.maven_replacer_plugin.ReplacerMojoIntegrationTest)')","[5746, 15691]"
"('Description.java', 'org.junit.runner.Description', 'getClassName', '(.*)\\((.*)\\)', 'shouldReturnBitValueForFlags[6](com.google.code.maven_replacer_plugin.PatternFlagsFactoryTest)')","[1333, 1356, 1379, 14488]"
"('Description.java', 'org.junit.runner.Description', 'parseMethod', '(.*)\\((.*)\\)', 'shouldReplaceContentsWithTokenValuesInTokenAndValueFiles(com.google.code.maven_replacer_plugin.ReplacerMojoIntegrationTest)')","[3814, 15188]"
"('Description.java', 'org.junit.runner.Description', 'parseMethod', '(.*)\\((.*)\\)', 'shouldUseEscapedTokensAndValuesFromFiles(com.google.code.maven_replacer_plugin.ReplacementTest)')","[12476, 17446]"
"('Description.java', 'org.junit.runner.Description', 'parseMethod', '(.*)\\((.*)\\)', 'shouldIgnoreBaseDirWhenFileIsAbsolutePathed(com.google.code.maven_replacer_plugin.ReplacerMojoTest)')","[10525, 16985]"
"('Description.java', 'org.junit.runner.Description', 'getClassName', '(.*)\\((.*)\\)', 'shouldIgnoreErrorsWithMissingTokenValueMapFile(com.google.code.maven_replacer_plugin.ReplacerMojoIntegrationTest)')","[4591, 4612, 4633]"
"('Description.java', 'org.junit.runner.Description', 'getClassName', '(.*)\\((.*)\\)', 'shouldReturnReplacementsFromFile(com.google.code.maven_replacer_plugin.TokenValueMapFactoryTest)')","[13714, 13737, 13760]"
"('Description.java', 'org.junit.runner.Description', 'getClassName', '(.*)\\((.*)\\)', 'shouldReturnReplacementsFromFileAndIgnoreBlankLinesAndComments(com.google.code.maven_replacer_plugin.TokenValueMapFactoryTest)')","[13806, 13829, 13852]"
"('Description.java', 'org.junit.runner.Description', 'getClassName', '(.*)\\((.*)\\)', 'shouldRethrowIOExceptionsAsMojoExceptions(com.google.code.maven_replacer_plugin.ReplacerMojoTest)')","[12020, 12043, 12066]"
"('Description.java', 'org.junit.runner.Description', 'getClassName', '(.*)\\((.*)\\)', 'shouldLogErrorWhenDelimitersHaveRegexAndRegexEnabled(com.google.code.maven_replacer_plugin.ReplacerMojoIntegrationTest)')","[4843, 4864, 4885]"
"('Description.java', 'org.junit.runner.Description', 'getClassName', '(.*)\\((.*)\\)', 'shouldAddToSummaryAndPrintToLog(com.google.code.maven_replacer_plugin.SummaryBuilderTest)')","[8428, 8449, 8470, 16402]"
"('Description.java', 'org.junit.runner.Description', 'parseMethod', '(.*)\\((.*)\\)', 'shouldReplaceContentsWithTokenValuesInMapWithoutComments(com.google.code.maven_replacer_plugin.ReplacerMojoTest)')","[11077, 17111]"
"('Description.java', 'org.junit.runner.Description', 'parseMethod', '(.*)\\((.*)\\)', 'shouldReturnFileText(com.google.code.maven_replacer_plugin.file.FileUtilsTest)')","[8304, 16361]"
"('Description.java', 'org.junit.runner.Description', 'parseMethod', '(.*)\\((.*)\\)', 'shouldNotReplaceIfIgnoringMissingFilesAndFileNotExists(com.google.code.maven_replacer_plugin.ReplacerMojoIntegrationTest)')","[3982, 15250]"
"('Description.java', 'org.junit.runner.Description', 'parseMethod', '(.*)\\((.*)\\)', 'shouldReturnMultipleFilesToInclude(com.google.code.maven_replacer_plugin.include.FileSelectorTest)')","[9285, 16632]"
"('Description.java', 'org.junit.runner.Description', 'parseMethod', '(.*)\\((.*)\\)', 'shouldRethrowIOExceptionsAsMojoExceptions(com.google.code.maven_replacer_plugin.ReplacerMojoIntegrationTest)')","[4066, 15271]"
"('Description.java', 'org.junit.runner.Description', 'getClassName', '(.*)\\((.*)\\)', 'shouldPreserveFilePathWhenUsingIncludesAndOutputDir(com.google.code.maven_replacer_plugin.ReplacerMojoIntegrationTest)')","[5935, 5956, 5977]"
"('Description.java', 'org.junit.runner.Description', 'getClassName', '(.*)\\((.*)\\)', 'shouldReplaceContentsInFilesToInclude(com.google.code.maven_replacer_plugin.ReplacerMojoIntegrationTest)')","[5515, 5536, 5557]"
"('Description.java', 'org.junit.runner.Description', 'parseMethod', '(.*)\\((.*)\\)', 'shouldReturnEmptyListWhenEmptyIncludes(com.google.code.maven_replacer_plugin.include.FileSelectorTest)')","[9453, 16694]"
"('Description.java', 'org.junit.runner.Description', 'parseMethod', '(.*)\\((.*)\\)', 'shouldReplaceAttributeValueLocatedByXpath(com.google.code.maven_replacer_plugin.XPathReplacerTest)')","[3291, 15042]"
"('Description.java', 'org.junit.runner.Description', 'getClassName', '(.*)\\((.*)\\)', 'shouldReturnCopyOfReplacementInFrom(com.google.code.maven_replacer_plugin.ReplacementTest)')","[12959, 12982, 13005]"
"('Description.java', 'org.junit.runner.Description', 'parseMethod', '(.*)\\((.*)\\)', 'com.google.code.maven_replacer_plugin.file.FileUtilsTest')",[7275]
"('Description.java', 'org.junit.runner.Description', 'parseMethod', '(.*)\\((.*)\\)', 'shouldWriteReplacedNonRegexTextToFile(com.google.code.maven_replacer_plugin.ReplacementProcessorTest)')","[10138, 16881]"
"('Description.java', 'org.junit.runner.Description', 'getClassName', '(.*)\\((.*)\\)', 'shouldNotReturnReplacedOutputFilenameWhenMissingEitherInputOrOutputPattern(com.google.code.maven_replacer_plugin.OutputFilenameBuilderTest)')","[2537, 2558, 2579]"
"('Description.java', 'org.junit.runner.Description', 'parseMethod', '(.*)\\((.*)\\)', 'shouldReplaceContentsWithTokenAndValueUnescaped(com.google.code.maven_replacer_plugin.ReplacerMojoTest)')","[11353, 17174]"
"('Description.java', 'org.junit.runner.Description', 'parseMethod', '(.*)\\((.*)\\)', 'shouldReplaceContentsWithTokenValuesInMap(com.google.code.maven_replacer_plugin.ReplacerMojoIntegrationTest)')","[6838, 15964]"
"('Description.java', 'org.junit.runner.Description', 'parseMethod', '(.*)\\((.*)\\)', 'shouldReturnXPathReplacerWhenUsingXPath(com.google.code.maven_replacer_plugin.ReplacerFactoryTest)')","[9751, 16777]"
"('Description.java', 'org.junit.runner.Description', 'getClassName', '(.*)\\((.*)\\)', 'shouldReplaceContentsInReplacements(com.google.code.maven_replacer_plugin.ReplacerMojoTest)')","[10364, 10387, 10410, 16943]"
"('Description.java', 'org.junit.runner.Description', 'parseMethod', '(.*)\\((.*)\\)', 'shouldReplaceContentsInIncludeButNotExcludesAndNotPreserveWhenDisabled(com.google.code.maven_replacer_plugin.ReplacerMojoIntegrationTest)')","[5830, 15712]"
"('Description.java', 'org.junit.runner.Description', 'parseMethod', '(.*)\\((.*)\\)', 'shouldReturnBitValueForFlags[10](com.google.code.maven_replacer_plugin.PatternFlagsFactoryTest)')","[2130, 14727]"
"('Description.java', 'org.junit.runner.Description', 'parseMethod', '(.*)\\((.*)\\)', 'shouldReturnBitValueForFlags[1](com.google.code.maven_replacer_plugin.PatternFlagsFactoryTest)')","[285, 14142]"
"('Description.java', 'org.junit.runner.Description', 'getClassName', '(.*)\\((.*)\\)', 'shouldThrowIllegalArgumentExceptionWhenFlagIsInvalid[0](com.google.code.maven_replacer_plugin.PatternFlagsFactoryTest)')","[195, 218, 241]"
"('Description.java', 'org.junit.runner.Description', 'getClassName', '(.*)\\((.*)\\)', 'shouldUseProcessProxyFileFromFileUtilsIfGiven(com.google.code.maven_replacer_plugin.ReplacementTest)')","[12775, 12798, 12821]"
"('Description.java', 'org.junit.runner.Description', 'parseMethod', '(.*)\\((.*)\\)', 'shouldReplaceRegexTokenLocatedByXPath(com.google.code.maven_replacer_plugin.ReplacerMojoIntegrationTest)')","[4150, 15292]"
"('Description.java', 'org.junit.runner.Description', 'getClassName', '(.*)\\((.*)\\)', 'com.google.code.maven_replacer_plugin.DelimiterBuilderTest')","[18141, 18165, 18190, 18214]"
"('Description.java', 'org.junit.runner.Description', 'getClassName', '(.*)\\((.*)\\)', 'shouldThrowExceptionWhenCannotCreateDir(com.google.code.maven_replacer_plugin.file.FileUtilsTest)')","[7569, 7590, 7611]"
"('Description.java', 'org.junit.runner.Description', 'getClassName', '(.*)\\((.*)\\)', 'shouldReplaceContentsWithTokenAndValue(com.google.code.maven_replacer_plugin.ReplacerMojoTest)')","[11284, 11307, 11330]"
"('Description.java', 'org.junit.runner.Description', 'parseMethod', '(.*)\\((.*)\\)', 'shouldNotDoAnythingIfRootDirectory(com.google.code.maven_replacer_plugin.file.FileUtilsTest)')","[7884, 16256]"
"('Description.java', 'org.junit.runner.Description', 'getClassName', '(.*)\\((.*)\\)', 'shouldCreateNewInstancesOfDepenenciesOnConstructor(com.google.code.maven_replacer_plugin.ReplacerMojoTest)')","[11928, 11951, 11974]"
"('Description.java', 'org.junit.runner.Description', 'getClassName', '(.*)\\((.*)\\)', 'shouldReturnRegexReplacementsFromFileUnescaping(com.google.code.maven_replacer_plugin.TokenValueMapFactoryTest)')","[13254, 13277, 13300]"
"('Description.java', 'org.junit.runner.Description', 'getClassName', '(.*)\\((.*)\\)', 'shouldWriteReplacedNonRegexTextToFile(com.google.code.maven_replacer_plugin.ReplacementProcessorTest)')","[10161, 10184, 10207]"
"('Description.java', 'org.junit.runner.Description', 'parseMethod', '(.*)\\((.*)\\)', 'shouldCreateNewInstancesOfDepenenciesOnConstructor(com.google.code.maven_replacer_plugin.ReplacerMojoTest)')","[11905, 17300]"
"('Description.java', 'org.junit.runner.Description', 'parseMethod', '(.*)\\((.*)\\)', 'shouldReplaceContentsWithTokenValuesInMapWithAbsolutePath(com.google.code.maven_replacer_plugin.ReplacerMojoIntegrationTest)')","[5158, 15544]"
"('Description.java', 'org.junit.runner.Description', 'parseMethod', '(.*)\\((.*)\\)', 'shouldReplaceContentsInFile(com.google.code.maven_replacer_plugin.ReplacerMojoIntegrationTest)')","[4990, 15502]"
"('Description.java', 'org.junit.runner.Description', 'parseMethod', '(.*)\\((.*)\\)', 'shouldReplaceVersionInPomAsWithXPathTextMatch(com.google.code.maven_replacer_plugin.ReplacerMojoIntegrationTest)')","[6250, 15817]"
"('Description.java', 'org.junit.runner.Description', 'parseMethod', '(.*)\\((.*)\\)', 'shouldThrowIllegalArgumentExceptionWhenFlagIsInvalid[1](com.google.code.maven_replacer_plugin.PatternFlagsFactoryTest)')","[377, 14185]"
"('Description.java', 'org.junit.runner.Description', 'getClassName', '(.*)\\((.*)\\)', 'shouldWriteToFileEnsuringFolderStructureExists(com.google.code.maven_replacer_plugin.file.FileUtilsTest)')","[8073, 8094, 8115]"
"('Description.java', 'org.junit.runner.Description', 'parseMethod', '(.*)\\((.*)\\)', '[8]')",[1697]
"('Description.java', 'org.junit.runner.Description', 'getClassName', '(.*)\\((.*)\\)', 'shouldReturnMultipleFilesToInclude(com.google.code.maven_replacer_plugin.include.FileSelectorTest)')","[9306, 9327, 9348, 16652]"
"('Description.java', 'org.junit.runner.Description', 'parseMethod', '(.*)\\((.*)\\)', 'shouldReturnTrueWhenAbsolutePathFilename(com.google.code.maven_replacer_plugin.file.FileUtilsTest)')","[7632, 16193]"
"('Description.java', 'org.junit.runner.Description', 'parseMethod', '(.*)\\((.*)\\)', 'shouldRethrowIOExceptionsAsMojoExceptions(com.google.code.maven_replacer_plugin.ReplacerMojoTest)')","[11997, 17321]"
"('Description.java', 'org.junit.runner.Description', 'parseMethod', '(.*)\\((.*)\\)', 'shouldSupportEmptyFileAndReturnNoReplacements(com.google.code.maven_replacer_plugin.TokenValueMapFactoryTest)')","[13415, 17676]"
"('Description.java', 'org.junit.runner.Description', 'getClassName', '(.*)\\((.*)\\)', 'shouldReturnTokenWithSplitValueAtStartAndEndWhenHasMiddleAsterix(com.google.code.maven_replacer_plugin.DelimiterBuilderTest)')","[7130, 7151, 7172]"
"('Description.java', 'org.junit.runner.Description', 'getClassName', '(.*)\\((.*)\\)', 'shouldSkipNullsGracefullyWhenBuildingPath(com.google.code.maven_replacer_plugin.file.FileUtilsTest)')","[7485, 7506, 7527]"
"('Description.java', 'org.junit.runner.Description', 'getClassName', '(.*)\\((.*)\\)', 'shouldReturnTrueWhenAbsolutePathFilename(com.google.code.maven_replacer_plugin.file.FileUtilsTest)')","[7653, 7674, 7695]"
"('Description.java', 'org.junit.runner.Description', 'getClassName', '(.*)\\((.*)\\)', 'shouldThrowExceptionWhenAttemptingToConstructWithoutTokenReplacer(com.google.code.maven_replacer_plugin.XPathReplacerTest)')","[3480, 3501, 3522]"
"('Description.java', 'org.junit.runner.Description', 'getClassName', '(.*)\\((.*)\\)', 'shouldThrowExceptionIfEmptyToken(com.google.code.maven_replacer_plugin.ReplacementProcessorTest)')","[9885, 9908, 9931, 16818]"
"('Description.java', 'org.junit.runner.Description', 'getClassName', '(.*)\\((.*)\\)', 'shouldReplaceVersionInPomAsWithXPathAttrMatch(com.google.code.maven_replacer_plugin.ReplacerMojoIntegrationTest)')","[6355, 6376, 6397]"
"('Description.java', 'org.junit.runner.Description', 'parseMethod', '(.*)\\((.*)\\)', 'shouldBuildFullPathFromDirsAndFilename(com.google.code.maven_replacer_plugin.file.FileUtilsTest)')","[7380, 16130]"
"('Description.java', 'org.junit.runner.Description', 'getClassName', '(.*)\\((.*)\\)', 'shouldReturnEmptyOrNullIfTokenEmptyOrNull(com.google.code.maven_replacer_plugin.DelimiterBuilderTest)')","[7214, 7235, 7256]"
"('Description.java', 'org.junit.runner.Description', 'getClassName', '(.*)\\((.*)\\)', 'shouldThrowIllegalArgumentExceptionWhenFlagIsInvalid[7](com.google.code.maven_replacer_plugin.PatternFlagsFactoryTest)')","[1630, 1653, 1676]"
"('Description.java', 'org.junit.runner.Description', 'parseMethod', '(.*)\\((.*)\\)', 'shouldDetermineIfFileExists(com.google.code.maven_replacer_plugin.file.FileUtilsTest)')","[7716, 16214]"
"('Description.java', 'org.junit.runner.Description', 'parseMethod', '(.*)\\((.*)\\)', 'shouldWriteFileWithoutSpecifiedEncoding(com.google.code.maven_replacer_plugin.file.FileUtilsTest)')","[8136, 16319]"
"('Description.java', 'org.junit.runner.Description', 'parseMethod', '(.*)\\((.*)\\)', 'shouldReplaceVersionInPomAsWithXPathAttrMatch(com.google.code.maven_replacer_plugin.ReplacerMojoIntegrationTest)')","[6334, 15838]"
"('Description.java', 'org.junit.runner.Description', 'getClassName', '(.*)\\((.*)\\)', 'shouldBuildFullPathFromDirsAndFilename(com.google.code.maven_replacer_plugin.file.FileUtilsTest)')","[7401, 7422, 7443]"
"('Description.java', 'org.junit.runner.Description', 'parseMethod', '(.*)\\((.*)\\)', 'shouldThrowExceptionWhenAttemptingToConstructWithoutTokenReplacer(com.google.code.maven_replacer_plugin.XPathReplacerTest)')","[3459, 15104]"
"('Description.java', 'org.junit.runner.Description', 'getClassName', '(.*)\\((.*)\\)', 'com.google.code.maven_replacer_plugin.ReplacementTest')","[19204, 19257, 19311, 19364]"
"('Description.java', 'org.junit.runner.Description', 'getClassName', '(.*)\\((.*)\\)', 'shouldDetermineIfFileExists(com.google.code.maven_replacer_plugin.file.FileUtilsTest)')","[7737, 7758, 7779]"
"('Description.java', 'org.junit.runner.Description', 'parseMethod', '(.*)\\((.*)\\)', 'shouldReplaceNonRegexTokenLocatedByXPath(com.google.code.maven_replacer_plugin.ReplacerMojoIntegrationTest)')","[4234, 15313]"
"('Description.java', 'org.junit.runner.Description', 'parseMethod', '(.*)\\((.*)\\)', 'shouldThrowIllegalArgumentExceptionWhenFlagIsInvalid[3](com.google.code.maven_replacer_plugin.PatternFlagsFactoryTest)')","[787, 14315]"
"('Description.java', 'org.junit.runner.Description', 'parseMethod', '(.*)\\((.*)\\)', 'shouldReturnEmptyOrNullIfTokenEmptyOrNull(com.google.code.maven_replacer_plugin.DelimiterBuilderTest)')","[7193, 16068]"
"('Description.java', 'org.junit.runner.Description', 'parseMethod', '(.*)\\((.*)\\)', 'shouldReplaceTokenWithCaseInsensitivity(com.google.code.maven_replacer_plugin.TokenReplacerTest)')","[8930, 16548]"
"('Description.java', 'org.junit.runner.Description', 'parseMethod', '(.*)\\((.*)\\)', 'shouldReplaceContentsInReplacementsButNotPrintSummaryIfQuiet(com.google.code.maven_replacer_plugin.ReplacerMojoTest)')","[10709, 17027]"
"('Description.java', 'org.junit.runner.Description', 'getClassName', '(.*)\\((.*)\\)', 'shouldRethrowIOExceptionsAsMojoExceptions(com.google.code.maven_replacer_plugin.ReplacerMojoIntegrationTest)')","[4087, 4108, 4129]"
"('Description.java', 'org.junit.runner.Description', 'getClassName', '(.*)\\((.*)\\)', 'shouldReplaceContentsInIncludeAndExcludes(com.google.code.maven_replacer_plugin.ReplacerMojoTest)')","[10824, 10847, 10870]"
"('Description.java', 'org.junit.runner.Description', 'parseMethod', '(.*)\\((.*)\\)', 'com.google.code.maven_replacer_plugin.ReplacerMojoIntegrationTest')",[3793]
"('Description.java', 'org.junit.runner.Description', 'parseMethod', '(.*)\\((.*)\\)', 'shouldReturnCopyOfReplacementInFrom(com.google.code.maven_replacer_plugin.ReplacementTest)')","[12936, 17551]"
"('Description.java', 'org.junit.runner.Description', 'getClassName', '(.*)\\((.*)\\)', 'shouldReplaceAttributeValueLocatedByXpathInChild(com.google.code.maven_replacer_plugin.XPathReplacerTest)')","[3396, 3417, 3438]"
"('Description.java', 'org.junit.runner.Description', 'getClassName', '(.*)\\((.*)\\)', 'shouldReplaceRegexTokenWithValue(com.google.code.maven_replacer_plugin.TokenReplacerTest)')","[8615, 8636, 8657]"
"('Description.java', 'org.junit.runner.Description', 'getClassName', '(.*)\\((.*)\\)', 'shouldThrowExceptionWhenTryingToReplaceParentNodeValue(com.google.code.maven_replacer_plugin.XPathReplacerTest)')","[3564, 3585, 3606]"
"('Description.java', 'org.junit.runner.Description', 'parseMethod', '(.*)\\((.*)\\)', 'shouldWriteToFileOutsideBaseDir(com.google.code.maven_replacer_plugin.ReplacerMojoIntegrationTest)')","[6166, 15796]"
"('Description.java', 'org.junit.runner.Description', 'getClassName', '(.*)\\((.*)\\)', 'shouldReturnBitValueForFlags[3](com.google.code.maven_replacer_plugin.PatternFlagsFactoryTest)')","[718, 741, 764, 14293]"
"('Description.java', 'org.junit.runner.Description', 'parseMethod', '(.*)\\((.*)\\)', 'shouldReplaceAttributeValueLocatedByXpathInChild(com.google.code.maven_replacer_plugin.XPathReplacerTest)')","[3375, 15083]"
"('Description.java', 'org.junit.runner.Description', 'getClassName', '(.*)\\((.*)\\)', 'shouldApplyToTokenDelimeterIfExists(com.google.code.maven_replacer_plugin.ReplacementTest)')","[12315, 12338, 12361]"
"('Description.java', 'org.junit.runner.Description', 'getClassName', '(.*)\\((.*)\\)', 'shouldReplaceTokenWithEmptyValue(com.google.code.maven_replacer_plugin.TokenReplacerTest)')","[8699, 8720, 8741]"
"('Description.java', 'org.junit.runner.Description', 'parseMethod', '(.*)\\((.*)\\)', 'shouldReplaceContentsWithTokenValuesInMapWithComments(com.google.code.maven_replacer_plugin.ReplacerMojoTest)')","[10985, 17090]"
"('Description.java', 'org.junit.runner.Description', 'getClassName', '(.*)\\((.*)\\)', 'shouldReplaceContentsAndWriteToOutputDirWithBaseDirAndPreservingAsDefault(com.google.code.maven_replacer_plugin.ReplacerMojoIntegrationTest)')","[6775, 6796, 6817]"
"('Description.java', 'org.junit.runner.Description', 'parseMethod', '(.*)\\((.*)\\)', 'shouldIgnoreErrors(com.google.code.maven_replacer_plugin.ReplacerMojoIntegrationTest)')","[4486, 15376]"
"('Description.java', 'org.junit.runner.Description', 'getClassName', '(.*)\\((.*)\\)', 'shouldReplaceContentsInLocalFile(com.google.code.maven_replacer_plugin.ReplacerMojoTest)')","[10640, 10663, 10686]"
"('Description.java', 'org.junit.runner.Description', 'getClassName', '(.*)\\((.*)\\)', 'shouldReturnRegexReplacementsFromFile(com.google.code.maven_replacer_plugin.TokenValueMapFactoryTest)')","[13162, 13185, 13208]"
"('Description.java', 'org.junit.runner.Description', 'getClassName', '(.*)\\((.*)\\)', 'shouldReplaceVersionInPomAsWithXPathTextMatch(com.google.code.maven_replacer_plugin.ReplacerMojoIntegrationTest)')","[6271, 6292, 6313]"
"('Description.java', 'org.junit.runner.Description', 'getClassName', '(.*)\\((.*)\\)', 'shouldNotDoAnythingIfRootDirectory(com.google.code.maven_replacer_plugin.file.FileUtilsTest)')","[7905, 7926, 7947]"
"('Description.java', 'org.junit.runner.Description', 'getClassName', '(.*)\\((.*)\\)', 'shouldIgnoreTokensWithNoSeparatedValue(com.google.code.maven_replacer_plugin.TokenValueMapFactoryTest)')","[13070, 13093, 13116, 17592]"
"('Description.java', 'org.junit.runner.Description', 'getClassName', '(.*)\\((.*)\\)', 'shouldWriteIntoTransformedOutputFilesFromInputFilePattern(com.google.code.maven_replacer_plugin.ReplacerMojoIntegrationTest)')","[5347, 5368, 5389]"
"('Description.java', 'org.junit.runner.Description', 'parseMethod', '(.*)\\((.*)\\)', 'shouldThrowIllegalArgumentExceptionWhenFlagIsInvalid[2](com.google.code.maven_replacer_plugin.PatternFlagsFactoryTest)')","[582, 14250]"
"('Description.java', 'org.junit.runner.Description', 'parseMethod', '(.*)\\((.*)\\)', 'shouldReturnTokenReplacerWhenNotUsingXPath(com.google.code.maven_replacer_plugin.ReplacerFactoryTest)')","[9659, 16736]"
"('Description.java', 'org.junit.runner.Description', 'getClassName', '(.*)\\((.*)\\)', 'shouldReturnReplacedOutputFilenameFromPatterns(com.google.code.maven_replacer_plugin.OutputFilenameBuilderTest)')","[3209, 3230, 3251]"
"('Description.java', 'org.junit.runner.Description', 'getClassName', '(.*)\\((.*)\\)', 'shouldUseEscapedTokensAndValues(com.google.code.maven_replacer_plugin.ReplacementTest)')","[12407, 12430, 12453]"
"('Description.java', 'org.junit.runner.Description', 'parseMethod', '(.*)\\((.*)\\)', 'shouldReplaceContentsWithTokenAndValueWithDelimiters(com.google.code.maven_replacer_plugin.ReplacerMojoTest)')","[11169, 17132]"
"('Description.java', 'org.junit.runner.Description', 'parseMethod', '(.*)\\((.*)\\)', 'shouldWriteToOutputFileWhenNotUsingOutputDirAndIsSet(com.google.code.maven_replacer_plugin.OutputFilenameBuilderTest)')","[2852, 14937]"
"('Description.java', 'org.junit.runner.Description', 'parseMethod', '(.*)\\((.*)\\)', 'com.google.code.maven_replacer_plugin.TokenReplacerTest')",[8489]
"('Description.java', 'org.junit.runner.Description', 'parseMethod', '(.*)\\((.*)\\)', 'shouldLogErrorWhenDelimitersHaveRegexAndRegexEnabled(com.google.code.maven_replacer_plugin.ReplacerMojoIntegrationTest)')","[4822, 15460]"
"('Description.java', 'org.junit.runner.Description', 'getClassName', '(.*)\\((.*)\\)', 'shouldReturnBitValueForFlags[7](com.google.code.maven_replacer_plugin.PatternFlagsFactoryTest)')","[1538, 1561, 1584, 14553]"
"('Description.java', 'org.junit.runner.Description', 'parseMethod', '(.*)\\((.*)\\)', 'com.google.code.maven_replacer_plugin.include.FileSelectorTest')",[9264]
"('Description.java', 'org.junit.runner.Description', 'getClassName', '(.*)\\((.*)\\)', 'shouldReplaceAllNewLineChars(com.google.code.maven_replacer_plugin.ReplacerMojoIntegrationTest)')","[6523, 6544, 6565]"
"('Description.java', 'org.junit.runner.Description', 'parseMethod', '(.*)\\((.*)\\)', 'shouldReturnBitValueForFlags[0](com.google.code.maven_replacer_plugin.PatternFlagsFactoryTest)')","[80, 14077]"
"('Description.java', 'org.junit.runner.Description', 'getClassName', '(.*)\\((.*)\\)', 'shouldThrowExceptionWhenTryingToReplaceWithInvalidXPath(com.google.code.maven_replacer_plugin.XPathReplacerTest)')","[3732, 3753, 3774]"
"('Description.java', 'org.junit.runner.Description', 'parseMethod', '(.*)\\((.*)\\)', 'shouldReplaceAllNewLineChars(com.google.code.maven_replacer_plugin.ReplacerMojoIntegrationTest)')","[6502, 15880]"
"('Description.java', 'org.junit.runner.Description', 'getClassName', '(.*)\\((.*)\\)', 'shouldReplaceRegexTokenLocatedByXPath(com.google.code.maven_replacer_plugin.ReplacerMojoIntegrationTest)')","[4171, 4192, 4213]"
"('Description.java', 'org.junit.runner.Description', 'parseMethod', '(.*)\\((.*)\\)', 'shouldProcessProxyFilesIfReplacementIsProxy(com.google.code.maven_replacer_plugin.ReplacementProcessorTest)')","[9954, 16839]"
"('Description.java', 'org.junit.runner.Description', 'getClassName', '(.*)\\((.*)\\)', 'shouldReplaceNonRegexTokenLocatedByXPathWithinReplacements(com.google.code.maven_replacer_plugin.ReplacerMojoIntegrationTest)')","[4339, 4360, 4381]"
"('Description.java', 'org.junit.runner.Description', 'getClassName', '(.*)\\((.*)\\)', 'shouldPreservePathWhenPreserveIsEnabled(com.google.code.maven_replacer_plugin.OutputFilenameBuilderTest)')","[2453, 2474, 2495]"
"('Description.java', 'org.junit.runner.Description', 'getClassName', '(.*)\\((.*)\\)', 'shouldReplaceContentsInFileWithDelimiteredToken(com.google.code.maven_replacer_plugin.ReplacerMojoIntegrationTest)')","[4759, 4780, 4801]"
"('Description.java', 'org.junit.runner.Description', 'getClassName', '(.*)\\((.*)\\)', 'shouldReturnFullPathWithAllOutputFileParams(com.google.code.maven_replacer_plugin.OutputFilenameBuilderTest)')","[3041, 3062, 3083]"
"('Description.java', 'org.junit.runner.Description', 'getClassName', '(.*)\\((.*)\\)', 'shouldPrefixBasedirWhenNotUsingOutputBasedir(com.google.code.maven_replacer_plugin.OutputFilenameBuilderTest)')","[2621, 2642, 2663]"
"('Description.java', 'org.junit.runner.Description', 'parseMethod', '(.*)\\((.*)\\)', 'shouldReplaceContentsWithTokenValuesInTokenAndValueFiles(com.google.code.maven_replacer_plugin.ReplacerMojoTest)')","[11445, 17195]"
"('Description.java', 'org.junit.runner.Description', 'parseMethod', '(.*)\\((.*)\\)', '[1]')",[262]
"('Description.java', 'org.junit.runner.Description', 'parseMethod', '(.*)\\((.*)\\)', 'shouldPreserveFilePathWhenUsingIncludesAndOutputDir(com.google.code.maven_replacer_plugin.ReplacerMojoIntegrationTest)')","[5914, 15733]"
"('Description.java', 'org.junit.runner.Description', 'getClassName', '(.*)\\((.*)\\)', 'shouldReturnInputFileWithBaseDirWhenNoOutputDirOrNoOutputFile(com.google.code.maven_replacer_plugin.OutputFilenameBuilderTest)')","[2789, 2810, 2831]"
"('Description.java', 'org.junit.runner.Description', 'parseMethod', '(.*)\\((.*)\\)', 'shouldReplaceRegexCharContentsInFile(com.google.code.maven_replacer_plugin.ReplacerMojoIntegrationTest)')","[6586, 15901]"
"('Description.java', 'org.junit.runner.Description', 'getClassName', '(.*)\\((.*)\\)', 'shouldReplaceTokenOnCompleteLine(com.google.code.maven_replacer_plugin.TokenReplacerTest)')","[8867, 8888, 8909]"
"('Description.java', 'org.junit.runner.Description', 'getClassName', '(.*)\\((.*)\\)', 'shouldPrefixWithOutputBasedirWhenUsingOutputBasedir(com.google.code.maven_replacer_plugin.OutputFilenameBuilderTest)')","[2705, 2726, 2747]"
"('Description.java', 'org.junit.runner.Description', 'parseMethod', '(.*)\\((.*)\\)', 'shouldCopyAllPoliciesReferencedByProxyFile(com.google.code.maven_replacer_plugin.ProxyFileProcessorTest)')","[13986, 17802]"
"('Description.java', 'org.junit.runner.Description', 'parseMethod', '(.*)\\((.*)\\)', 'shouldPrefixWithOutputBasedirWhenUsingOutputBasedir(com.google.code.maven_replacer_plugin.OutputFilenameBuilderTest)')","[2684, 14895]"
"('Description.java', 'org.junit.runner.Description', 'parseMethod', '(.*)\\((.*)\\)', 'shouldReplaceTokenOnCompleteLine(com.google.code.maven_replacer_plugin.TokenReplacerTest)')","[8846, 16527]"
"('Description.java', 'org.junit.runner.Description', 'parseMethod', '(.*)\\((.*)\\)', 'shouldReplaceContentsWithVariableTokenValueMap(com.google.code.maven_replacer_plugin.ReplacerMojoTest)')","[11629, 17237]"
"('Description.java', 'org.junit.runner.Description', 'getClassName', '(.*)\\((.*)\\)', 'shouldThrowExceptionWhenUsingIgnoreMissingFilesAndNoFileSpecified(com.google.code.maven_replacer_plugin.ReplacerMojoTest)')","[11836, 11859, 11882]"
"('Description.java', 'org.junit.runner.Description', 'getClassName', '(.*)\\((.*)\\)', 'shouldReturnBitValueForFlags[8](com.google.code.maven_replacer_plugin.PatternFlagsFactoryTest)')","[1743, 1766, 1789, 14618]"
"('Description.java', 'org.junit.runner.Description', 'parseMethod', '(.*)\\((.*)\\)', 'shouldEnsureFileFolderExists(com.google.code.maven_replacer_plugin.file.FileUtilsTest)')","[7800, 16235]"
"('Description.java', 'org.junit.runner.Description', 'getClassName', '(.*)\\((.*)\\)', 'com.google.code.maven_replacer_plugin.ProxyFileProcessorTest')","[19763, 19783, 19804, 19824]"
"('Description.java', 'org.junit.runner.Description', 'parseMethod', '(.*)\\((.*)\\)', 'shouldThrowIllegalArgumentExceptionWhenFlagIsInvalid[8](com.google.code.maven_replacer_plugin.PatternFlagsFactoryTest)')","[1812, 14640]"
"('Description.java', 'org.junit.runner.Description', 'getClassName', '(.*)\\((.*)\\)', 'shouldReplaceRegexCharContentsInFile(com.google.code.maven_replacer_plugin.ReplacerMojoIntegrationTest)')","[6607, 6628, 6649]"
"('Description.java', 'org.junit.runner.Description', 'getClassName', '(.*)\\((.*)\\)', 'shouldReturnBitValueForFlags[4](com.google.code.maven_replacer_plugin.PatternFlagsFactoryTest)')","[923, 946, 969, 14358]"
"('Description.java', 'org.junit.runner.Description', 'getClassName', '(.*)\\((.*)\\)', 'shouldReplaceTokenInMulipleLines(com.google.code.maven_replacer_plugin.TokenReplacerTest)')","[8783, 8804, 8825]"
"('Description.java', 'org.junit.runner.Description', 'getClassName', '(.*)\\((.*)\\)', 'shouldThrowIllegalArgumentExceptionIfFileIsDirectory(com.google.code.maven_replacer_plugin.file.FileUtilsTest)')","[7989, 8010, 8031]"
"('Description.java', 'org.junit.runner.Description', 'getClassName', '(.*)\\((.*)\\)', 'shouldNotReplaceIfIgnoringMissingFilesAndFileNotExists(com.google.code.maven_replacer_plugin.ReplacerMojoIntegrationTest)')","[4003, 4024, 4045]"
"('Description.java', 'org.junit.runner.Description', 'parseMethod', '(.*)\\((.*)\\)', 'com.google.code.maven_replacer_plugin.ProxyFileProcessorTest')",[13963]
"('Description.java', 'org.junit.runner.Description', 'parseMethod', '(.*)\\((.*)\\)', 'shouldSkipNullsGracefullyWhenBuildingPath(com.google.code.maven_replacer_plugin.file.FileUtilsTest)')","[7464, 16151]"
"('Description.java', 'org.junit.runner.Description', 'parseMethod', '(.*)\\((.*)\\)', 'shouldUseEscapedTokensAndValues(com.google.code.maven_replacer_plugin.ReplacementTest)')","[12384, 17425]"
"('Description.java', 'org.junit.runner.Description', 'parseMethod', '(.*)\\((.*)\\)', 'shouldReplaceContentsInLocalFile(com.google.code.maven_replacer_plugin.ReplacerMojoTest)')","[10617, 17006]"
"('Description.java', 'org.junit.runner.Description', 'getClassName', '(.*)\\((.*)\\)', 'shouldIgnoreBaseDirWhenFileIsAbsolutePathed(com.google.code.maven_replacer_plugin.ReplacerMojoTest)')","[10548, 10571, 10594]"
"('Description.java', 'org.junit.runner.Description', 'parseMethod', '(.*)\\((.*)\\)', 'shouldReturnReplacementsFromFileAndIgnoreBlankLinesUsingCommentLinesIfCommentsDisabled(com.google.code.maven_replacer_plugin.TokenValueMapFactoryTest)')","[13875, 17781]"
"('Description.java', 'org.junit.runner.Description', 'parseMethod', '(.*)\\((.*)\\)', 'com.google.code.maven_replacer_plugin.ReplacementTest')",[12177]
"('Description.java', 'org.junit.runner.Description', 'getClassName', '(.*)\\((.*)\\)', 'com.google.code.maven_replacer_plugin.ReplacerMojoTest')","[18990, 19043, 19097, 19150]"
"('Description.java', 'org.junit.runner.Description', 'getClassName', '(.*)\\((.*)\\)', 'shouldReturnReplacementsFromFileAndIgnoreBlankLinesUsingCommentLinesIfCommentsDisabled(com.google.code.maven_replacer_plugin.TokenValueMapFactoryTest)')","[13898, 13921, 13944]"
"('Description.java', 'org.junit.runner.Description', 'parseMethod', '(.*)\\((.*)\\)', 'shouldWriteIntoTransformedOutputFilesFromInputFilePatternFromIncludes(com.google.code.maven_replacer_plugin.ReplacerMojoIntegrationTest)')","[5410, 15607]"
"('Description.java', 'org.junit.runner.Description', 'parseMethod', '(.*)\\((.*)\\)', 'shouldReplaceContentsInFilesToInclude(com.google.code.maven_replacer_plugin.ReplacerMojoIntegrationTest)')","[5494, 15628]"
"('Description.java', 'org.junit.runner.Description', 'parseMethod', '(.*)\\((.*)\\)', 'shouldReplaceContentsWithTokenValuesInMapWithAbsolutePathAndIncludes(com.google.code.maven_replacer_plugin.ReplacerMojoIntegrationTest)')","[5242, 15565]"
"('Description.java', 'org.junit.runner.Description', 'parseMethod', '(.*)\\((.*)\\)', 'shouldNotReturnReplacedOutputFilenameWhenMissingEitherInputOrOutputPattern(com.google.code.maven_replacer_plugin.OutputFilenameBuilderTest)')","[2516, 14853]"
"('Description.java', 'org.junit.runner.Description', 'getClassName', '(.*)\\((.*)\\)', 'shouldReplaceContentsWithTokenValuesInInlineMap(com.google.code.maven_replacer_plugin.ReplacerMojoIntegrationTest)')","[5683, 5704, 5725]"
"('Description.java', 'org.junit.runner.Description', 'getClassName', '(.*)\\((.*)\\)', 'shouldReturnBitValueForFlags[5](com.google.code.maven_replacer_plugin.PatternFlagsFactoryTest)')","[1128, 1151, 1174, 14423]"
"('Description.java', 'org.junit.runner.Description', 'getClassName', '(.*)\\((.*)\\)', 'shouldReplaceContentsInFileWithBackreferences(com.google.code.maven_replacer_plugin.ReplacerMojoIntegrationTest)')","[4675, 4696, 4717]"
"('Description.java', 'org.junit.runner.Description', 'parseMethod', '(.*)\\((.*)\\)', 'shouldNotReplaceIfIgnoringMissingFilesAndFileNotExists(com.google.code.maven_replacer_plugin.ReplacerMojoTest)')","[11721, 17258]"
"('Description.java', 'org.junit.runner.Description', 'getClassName', '(.*)\\((.*)\\)', 'shouldThrowExceptionIfNoToken(com.google.code.maven_replacer_plugin.ReplacementProcessorTest)')","[10253, 10276, 10299]"
"('Description.java', 'org.junit.runner.Description', 'parseMethod', '(.*)\\((.*)\\)', '[5]')",[1082]
"('Description.java', 'org.junit.runner.Description', 'getClassName', '(.*)\\((.*)\\)', 'shouldUseTokenFromFileUtilsIfGiven(com.google.code.maven_replacer_plugin.ReplacementTest)')","[12591, 12614, 12637]"
"('Description.java', 'org.junit.runner.Description', 'getClassName', '(.*)\\((.*)\\)', 'shouldReplaceContentsWithTokenValuesInMapWithAbsolutePathAndIncludes(com.google.code.maven_replacer_plugin.ReplacerMojoIntegrationTest)')","[5263, 5284, 5305]"
"('Description.java', 'org.junit.runner.Description', 'getClassName', '(.*)\\((.*)\\)', 'shouldWriteIntoTransformedOutputFilesFromInputFilePatternFromIncludes(com.google.code.maven_replacer_plugin.ReplacerMojoIntegrationTest)')","[5431, 5452, 5473]"
"('Description.java', 'org.junit.runner.Description', 'parseMethod', '(.*)\\((.*)\\)', 'shouldReturnTokenWithValueAtStartAndEndWhenNoMiddle(com.google.code.maven_replacer_plugin.DelimiterBuilderTest)')","[7025, 16026]"
"('Description.java', 'org.junit.runner.Description', 'parseMethod', '(.*)\\((.*)\\)', 'shouldReplaceContentsInFileWithBackreferences(com.google.code.maven_replacer_plugin.ReplacerMojoIntegrationTest)')","[4654, 15418]"
"('Description.java', 'org.junit.runner.Description', 'parseMethod', '(.*)\\((.*)\\)', 'shouldReplaceContentsWithTokenValuesInInlineMap(com.google.code.maven_replacer_plugin.ReplacerMojoIntegrationTest)')","[5662, 15670]"
"('Description.java', 'org.junit.runner.Description', 'getClassName', '(.*)\\((.*)\\)', 'shouldSetAndGetSameValues(com.google.code.maven_replacer_plugin.ReplacementTest)')","[12867, 12890, 12913]"
"('Description.java', 'org.junit.runner.Description', 'parseMethod', '(.*)\\((.*)\\)', 'shouldPreservePathWhenPreserveIsEnabled(com.google.code.maven_replacer_plugin.OutputFilenameBuilderTest)')","[2432, 14832]"
"('Description.java', 'org.junit.runner.Description', 'parseMethod', '(.*)\\((.*)\\)', 'shouldReturnBitValueForFlags[3](com.google.code.maven_replacer_plugin.PatternFlagsFactoryTest)')","[695, 14272]"
"('Description.java', 'org.junit.runner.Description', 'getClassName', '(.*)\\((.*)\\)', 'shouldWriteIntoTransformedOutputFilesFromInputFilePatternFromFilesToInclude(com.google.code.maven_replacer_plugin.ReplacerMojoIntegrationTest)')","[5599, 5620, 5641]"
"('Description.java', 'org.junit.runner.Description', 'parseMethod', '(.*)\\((.*)\\)', 'shouldUseProcessProxyFileFromFileUtilsIfGiven(com.google.code.maven_replacer_plugin.ReplacementTest)')","[12752, 17509]"
"('Description.java', 'org.junit.runner.Description', 'getClassName', '(.*)\\((.*)\\)', 'shouldReplaceContentsInFileWithTokenContainingEscapedChars(com.google.code.maven_replacer_plugin.ReplacerMojoIntegrationTest)')","[6439, 6460, 6481]"
"('Description.java', 'org.junit.runner.Description', 'getClassName', '(.*)\\((.*)\\)', 'shouldReplaceContentsWithTokenValuesInMapWithComments(com.google.code.maven_replacer_plugin.ReplacerMojoTest)')","[11008, 11031, 11054]"
"('Description.java', 'org.junit.runner.Description', 'parseMethod', '(.*)\\((.*)\\)', 'shouldReplaceContentsInFilesToIncludeAndExclude(com.google.code.maven_replacer_plugin.ReplacerMojoTest)')","[10893, 17069]"
"('Description.java', 'org.junit.runner.Description', 'parseMethod', '(.*)\\((.*)\\)', 'shouldApplyToTokenDelimeterIfExists(com.google.code.maven_replacer_plugin.ReplacementTest)')","[12292, 17404]"
"('Description.java', 'org.junit.runner.Description', 'parseMethod', '(.*)\\((.*)\\)', 'shouldThrowExceptionWhenCannotCreateDir(com.google.code.maven_replacer_plugin.file.FileUtilsTest)')","[7548, 16172]"
"('Description.java', 'org.junit.runner.Description', 'parseMethod', '(.*)\\((.*)\\)', '[6]')",[1287]
"('Description.java', 'org.junit.runner.Description', 'parseMethod', '(.*)\\((.*)\\)', 'shouldReplaceContentsInAbsolutePathedFile(com.google.code.maven_replacer_plugin.ReplacerMojoIntegrationTest)')","[5074, 15523]"
"('Description.java', 'org.junit.runner.Description', 'getClassName', '(.*)\\((.*)\\)', 'shouldHandleEmptyContentsGracefully(com.google.code.maven_replacer_plugin.TokenReplacerTest)')","[9035, 9056, 9077]"
"('Description.java', 'org.junit.runner.Description', 'getClassName', '(.*)\\((.*)\\)', 'shouldReturnFileText(com.google.code.maven_replacer_plugin.file.FileUtilsTest)')","[8325, 8346, 8367]"
"('Description.java', 'org.junit.runner.Description', 'getClassName', '(.*)\\((.*)\\)', 'shouldReturnBitValueForFlags[1](com.google.code.maven_replacer_plugin.PatternFlagsFactoryTest)')","[308, 331, 354, 14163]"
"('Description.java', 'org.junit.runner.Description', 'parseMethod', '(.*)\\((.*)\\)', '[10]')",[2107]
"('Description.java', 'org.junit.runner.Description', 'parseMethod', '(.*)\\((.*)\\)', 'shouldIgnoreErrorsInXPath(com.google.code.maven_replacer_plugin.ReplacerMojoIntegrationTest)')","[4402, 15355]"
"('Description.java', 'org.junit.runner.Description', 'getClassName', '(.*)\\((.*)\\)', 'shouldHandleEmptyValueForNonRegex(com.google.code.maven_replacer_plugin.TokenReplacerTest)')","[9119, 9140, 9161]"
"('Description.java', 'org.junit.runner.Description', 'parseMethod', '(.*)\\((.*)\\)', 'com.google.code.maven_replacer_plugin.TokenValueMapFactoryTest')",[13024]
"('Description.java', 'org.junit.runner.Description', 'getClassName', '(.*)\\((.*)\\)', 'shouldNotThrowExceptionWhenIgnoringErrors(com.google.code.maven_replacer_plugin.ReplacerMojoTest)')","[12112, 12135, 12158]"
"('Description.java', 'org.junit.runner.Description', 'parseMethod', '(.*)\\((.*)\\)', 'shouldReturnTokenWithSplitValueAtStartAndEndWhenHasMiddleAsterix(com.google.code.maven_replacer_plugin.DelimiterBuilderTest)')","[7109, 16047]"
"('Description.java', 'org.junit.runner.Description', 'getClassName', '(.*)\\((.*)\\)', 'shouldReplaceAttributeValueLocatedByXpath(com.google.code.maven_replacer_plugin.XPathReplacerTest)')","[3312, 3333, 3354, 15062]"
"('Description.java', 'org.junit.runner.Description', 'parseMethod', '(.*)\\((.*)\\)', 'shouldHandleEmptyValueForNonRegex(com.google.code.maven_replacer_plugin.TokenReplacerTest)')","[9098, 16590]"
"('Description.java', 'org.junit.runner.Description', 'getClassName', '(.*)\\((.*)\\)', 'shouldReturnBitValueForFlags[9](com.google.code.maven_replacer_plugin.PatternFlagsFactoryTest)')","[1948, 1971, 1994, 14683]"
"('Description.java', 'org.junit.runner.Description', 'getClassName', '(.*)\\((.*)\\)', 'shouldReplaceContentsWithVariableTokenValueMap(com.google.code.maven_replacer_plugin.ReplacerMojoTest)')","[11652, 11675, 11698]"
"('Description.java', 'org.junit.runner.Description', 'parseMethod', '(.*)\\((.*)\\)', 'shouldThrowIllegalArgumentExceptionWhenFlagIsInvalid[9](com.google.code.maven_replacer_plugin.PatternFlagsFactoryTest)')","[2017, 14705]"
"('Description.java', 'org.junit.runner.Description', 'parseMethod', '(.*)\\((.*)\\)', 'shouldReturnBitValueForFlags[8](com.google.code.maven_replacer_plugin.PatternFlagsFactoryTest)')","[1720, 14597]"
"('Description.java', 'org.junit.runner.Description', 'parseMethod', '(.*)\\((.*)\\)', 'com.google.code.maven_replacer_plugin.ReplacerMojoTest')",[10318]
"('Description.java', 'org.junit.runner.Description', 'parseMethod', '(.*)\\((.*)\\)', 'shouldIgnoreErrorsWithMissingTokenValueMapFile(com.google.code.maven_replacer_plugin.ReplacerMojoIntegrationTest)')","[4570, 15397]"
"('Description.java', 'org.junit.runner.Description', 'parseMethod', '(.*)\\((.*)\\)', '[0]')",[57]
"('Description.java', 'org.junit.runner.Description', 'getClassName', '(.*)\\((.*)\\)', 'shouldSupportEmptyFileAndReturnNoReplacements(com.google.code.maven_replacer_plugin.TokenValueMapFactoryTest)')","[13438, 13461, 13484]"
"('Description.java', 'org.junit.runner.Description', 'parseMethod', '(.*)\\((.*)\\)', 'shouldThrowExceptionWhenTryingToReplaceWithInvalidXPath(com.google.code.maven_replacer_plugin.XPathReplacerTest)')","[3711, 15167]"
"('Description.java', 'org.junit.runner.Description', 'getClassName', '(.*)\\((.*)\\)', 'shouldUseEscapedTokensAndValuesFromFiles(com.google.code.maven_replacer_plugin.ReplacementTest)')","[12499, 12522, 12545]"
"('Description.java', 'org.junit.runner.Description', 'getClassName', '(.*)\\((.*)\\)', 'shouldReplaceContentsWithTokenAndValueWithDelimiters(com.google.code.maven_replacer_plugin.ReplacerMojoTest)')","[11192, 11215, 11238]"
"('Description.java', 'org.junit.runner.Description', 'getClassName', '(.*)\\((.*)\\)', 'shouldReplaceContentsWithTokenValuesInTokenAndValueFiles(com.google.code.maven_replacer_plugin.ReplacerMojoIntegrationTest)')","[3835, 3856, 3877, 15208]"
"('Description.java', 'org.junit.runner.Description', 'parseMethod', '(.*)\\((.*)\\)', 'shouldReturnListOfReplacementsFromSingleVariable(com.google.code.maven_replacer_plugin.TokenValueMapFactoryTest)')","[13599, 17718]"
"('Description.java', 'org.junit.runner.Description', 'getClassName', '(.*)\\((.*)\\)', 'shouldReplaceContentsInFile(com.google.code.maven_replacer_plugin.ReplacerMojoIntegrationTest)')","[5011, 5032, 5053]"
"('Description.java', 'org.junit.runner.Description', 'parseMethod', '(.*)\\((.*)\\)', 'shouldReplaceContentsInFileWithTokenContainingEscapedChars(com.google.code.maven_replacer_plugin.ReplacerMojoIntegrationTest)')","[6418, 15859]"
"('Description.java', 'org.junit.runner.Description', 'getClassName', '(.*)\\((.*)\\)', 'shouldSelectFilesInBackDirectories(com.google.code.maven_replacer_plugin.include.FileSelectorTest)')","[9558, 9579, 9600]"
"('Description.java', 'org.junit.runner.Description', 'getClassName', '(.*)\\((.*)\\)', 'shouldPrefixBasedirWhenNotPreservingPath(com.google.code.maven_replacer_plugin.OutputFilenameBuilderTest)')","[2369, 2390, 2411, 14811]"
"('Description.java', 'org.junit.runner.Description', 'getClassName', '(.*)\\((.*)\\)', 'shouldReturnEmptyListWhenEmptyIncludes(com.google.code.maven_replacer_plugin.include.FileSelectorTest)')","[9474, 9495, 9516]"
"('Description.java', 'org.junit.runner.Description', 'parseMethod', '(.*)\\((.*)\\)', 'shouldPrefixBasedirWhenNotUsingOutputBasedir(com.google.code.maven_replacer_plugin.OutputFilenameBuilderTest)')","[2600, 14874]"
"('Description.java', 'org.junit.runner.Description', 'parseMethod', '(.*)\\((.*)\\)', 'shouldReturnReplacedOutputFilenameFromPatterns(com.google.code.maven_replacer_plugin.OutputFilenameBuilderTest)')","[3188, 15021]"
"('Description.java', 'org.junit.runner.Description', 'parseMethod', '(.*)\\((.*)\\)', 'com.google.code.maven_replacer_plugin.SummaryBuilderTest')",[8386]
"('Description.java', 'org.junit.runner.Description', 'getClassName', '(.*)\\((.*)\\)', 'shouldSupportNoExcludes(com.google.code.maven_replacer_plugin.include.FileSelectorTest)')","[9390, 9411, 9432]"
"('Description.java', 'org.junit.runner.Description', 'parseMethod', '(.*)\\((.*)\\)', 'shouldReplaceContentsAndWriteToOutputFile(com.google.code.maven_replacer_plugin.ReplacerMojoIntegrationTest)')","[5998, 15754]"
"('Description.java', 'org.junit.runner.Description', 'parseMethod', '(.*)\\((.*)\\)', 'shouldSelectFilesInBackDirectories(com.google.code.maven_replacer_plugin.include.FileSelectorTest)')","[9537, 16715]"
"('Description.java', 'org.junit.runner.Description', 'parseMethod', '(.*)\\((.*)\\)', '[3]')",[672]
"('Description.java', 'org.junit.runner.Description', 'getClassName', '(.*)\\((.*)\\)', 'shouldReplaceWithGroups(com.google.code.maven_replacer_plugin.TokenReplacerTest)')","[9203, 9224, 9245]"
"('Description.java', 'org.junit.runner.Description', 'getClassName', '(.*)\\((.*)\\)', 'shouldReturnTokenReplacerWhenNotUsingXPath(com.google.code.maven_replacer_plugin.ReplacerFactoryTest)')","[9682, 9705, 9728, 16756]"
"('Description.java', 'org.junit.runner.Description', 'parseMethod', '(.*)\\((.*)\\)', 'shouldReplaceRegexTokenWithValue(com.google.code.maven_replacer_plugin.TokenReplacerTest)')","[8594, 16464]"
"('Description.java', 'org.junit.runner.Description', 'parseMethod', '(.*)\\((.*)\\)', 'shouldThrowExceptionWhenTryingToReplaceParentNodeValue(com.google.code.maven_replacer_plugin.XPathReplacerTest)')","[3543, 15125]"
"('Description.java', 'org.junit.runner.Description', 'getClassName', '(.*)\\((.*)\\)', 'shouldPrefixOutputDirWhenUsingOutputDirAndOutputFile(com.google.code.maven_replacer_plugin.OutputFilenameBuilderTest)')","[3125, 3146, 3167]"
"('Description.java', 'org.junit.runner.Description', 'getClassName', '(.*)\\((.*)\\)', 'shouldReturnBitValueForFlags[2](com.google.code.maven_replacer_plugin.PatternFlagsFactoryTest)')","[513, 536, 559, 14228]"
"('Description.java', 'org.junit.runner.Description', 'parseMethod', '(.*)\\((.*)\\)', 'shouldThrowIllegalArgumentExceptionWhenFlagIsInvalid[5](com.google.code.maven_replacer_plugin.PatternFlagsFactoryTest)')","[1197, 14445]"
"('Description.java', 'org.junit.runner.Description', 'parseMethod', '(.*)\\((.*)\\)', 'shouldThrowIllegalArgumentExceptionWhenFlagIsInvalid[6](com.google.code.maven_replacer_plugin.PatternFlagsFactoryTest)')","[1402, 14510]"
"('Description.java', 'org.junit.runner.Description', 'getClassName', '(.*)\\((.*)\\)', 'shouldReplaceContentsInIncludeButNotExcludesAndNotPreserveWhenDisabled(com.google.code.maven_replacer_plugin.ReplacerMojoIntegrationTest)')","[5851, 5872, 5893]"
"('Description.java', 'org.junit.runner.Description', 'getClassName', '(.*)\\((.*)\\)', 'shouldReturnBitValueForFlags[10](com.google.code.maven_replacer_plugin.PatternFlagsFactoryTest)')","[2153, 2176, 2199, 14748, 19619, 19660]"
"('Description.java', 'org.junit.runner.Description', 'parseMethod', '(.*)\\((.*)\\)', 'shouldSkipAndDoNothing(com.google.code.maven_replacer_plugin.ReplacerMojoTest)')","[10433, 16964]"
"('Description.java', 'org.junit.runner.Description', 'getClassName', '(.*)\\((.*)\\)', 'shouldThrowIllegalArgumentExceptionWhenFlagIsInvalid[10](com.google.code.maven_replacer_plugin.PatternFlagsFactoryTest)')","[2245, 2268, 2291]"
"('Description.java', 'org.junit.runner.Description', 'parseMethod', '(.*)\\((.*)\\)', 'shouldThrowIllegalArgumentExceptionWhenFlagIsInvalid[0](com.google.code.maven_replacer_plugin.PatternFlagsFactoryTest)')","[172, 14120]"
"('Description.java', 'org.junit.runner.Description', 'getClassName', '(.*)\\((.*)\\)', 'shouldReplaceContentsInReplacementsInSameFileWhenNoOutputFile(com.google.code.maven_replacer_plugin.ReplacerMojoTest)')","[11560, 11583, 11606]"
"('Description.java', 'org.junit.runner.Description', 'parseMethod', '(.*)\\((.*)\\)', 'shouldThrowExceptionIfEmptyToken(com.google.code.maven_replacer_plugin.ReplacementProcessorTest)')","[9862, 16798]"
"('Description.java', 'org.junit.runner.Description', 'parseMethod', '(.*)\\((.*)\\)', '[7]')",[1492]
"('Description.java', 'org.junit.runner.Description', 'getClassName', '(.*)\\((.*)\\)', 'com.google.code.maven_replacer_plugin.SummaryBuilderTest')","[18337, 18361, 18386, 18410]"
"('Description.java', 'org.junit.runner.Description', 'getClassName', '(.*)\\((.*)\\)', 'shouldReplaceNonRegexTokenWithValue(com.google.code.maven_replacer_plugin.TokenReplacerTest)')","[8531, 8552, 8573, 16443]"
