"('Description.java', 'org.junit.runner.Description', 'methodAndClassNamePatternGroupOrDefault', '([\\s\\S]*)\\((.*)\\)', 'testRemoveLastURI(org.spearce.jgit.transport.RemoteConfigTest)')","[15813, 33421]"
"('Description.java', 'org.junit.runner.Description', 'methodAndClassNamePatternGroupOrDefault', '([\\s\\S]*)\\((.*)\\)', 'org.spearce.jgit.dircache.DirCacheBasicTest')","[10980, 38841]"
"('Description.java', 'org.junit.runner.Description', 'methodAndClassNamePatternGroupOrDefault', '([\\s\\S]*)\\((.*)\\)', 'testEncodeASCII_FailOnNonASCII(org.spearce.jgit.lib.ConstantsEncodingTest)')","[8832, 26557]"
"('Description.java', 'org.junit.runner.Description', 'methodAndClassNamePatternGroupOrDefault', '([\\s\\S]*)\\((.*)\\)', 'testBoth(org.spearce.jgit.lib.IndexTreeWalkerTest)')","[8115, 25831]"
"('Description.java', 'org.junit.runner.Description', 'methodAndClassNamePatternGroupOrDefault', '([\\s\\S]*)\\((.*)\\)', 'testParse_CcDeleteFile(org.spearce.jgit.patch.PatchCcTest)')","[812, 18153]"
"('Description.java', 'org.junit.runner.Description', 'methodAndClassNamePatternGroupOrDefault', '([\\s\\S]*)\\((.*)\\)', 'testBlankGroupCase0(org.spearce.jgit.fnmatch.FileNameMatcherTest)')","[5340, 22883]"
"('Description.java', 'org.junit.runner.Description', 'methodAndClassNamePatternGroupOrDefault', '([\\s\\S]*)\\((.*)\\)', 'testAddFails(org.spearce.jgit.revwalk.AlwaysEmptyRevQueueTest)')","[12012, 29637]"
"('Description.java', 'org.junit.runner.Description', 'methodAndClassNamePatternGroupOrDefault', '([\\s\\S]*)\\((.*)\\)', 'testUpdateUnexpectedRemote(org.spearce.jgit.transport.PushProcessTest)')","[15434, 33025]"
"('Description.java', 'org.junit.runner.Description', 'methodAndClassNamePatternGroupOrDefault', '([\\s\\S]*)\\((.*)\\)', 'testParseGitFileName_FailFooBar(org.spearce.jgit.patch.FileHeaderTest)')","[215, 17559]"
"('Description.java', 'org.junit.runner.Description', 'methodAndClassNamePatternGroupOrDefault', '([\\s\\S]*)\\((.*)\\)', 'testParse_explicit_bad_encoded2(org.spearce.jgit.revwalk.RevTagParseTest)')","[13403, 30979]"
"('Description.java', 'org.junit.runner.Description', 'methodAndClassNamePatternGroupOrDefault', '([\\s\\S]*)\\((.*)\\)', 'testMultipleHeads_SameBase2(org.spearce.jgit.revwalk.RevWalkMergeBaseTest)')","[12488, 30077]"
"('Description.java', 'org.junit.runner.Description', 'methodAndClassNamePatternGroupOrDefault', '([\\s\\S]*)\\((.*)\\)', 'testMixedGroupCase1(org.spearce.jgit.fnmatch.FileNameMatcherTest)')","[3440, 20793]"
"('Description.java', 'org.junit.runner.Description', 'methodAndClassNamePatternGroupOrDefault', '([\\s\\S]*)\\((.*)\\)', 'testValidTreeSorting3(org.spearce.jgit.lib.ObjectCheckerTest)')","[6539, 24181]"
"('Description.java', 'org.junit.runner.Description', 'methodAndClassNamePatternGroupOrDefault', '([\\s\\S]*)\\((.*)\\)', 'testUpperGroupCase2(org.spearce.jgit.fnmatch.FileNameMatcherTest)')","[5260, 22795]"
"('Description.java', 'org.junit.runner.Description', 'methodAndClassNamePatternGroupOrDefault', '([\\s\\S]*)\\((.*)\\)', 'testVerySimpleWildCardCase3(org.spearce.jgit.fnmatch.FileNameMatcherTest)')","[3320, 20661]"
"('Description.java', 'org.junit.runner.Description', 'methodAndClassNamePatternGroupOrDefault', '([\\s\\S]*)\\((.*)\\)', 'testWordroupCase0(org.spearce.jgit.fnmatch.FileNameMatcherTest)')","[5660, 23235]"
"('Description.java', 'org.junit.runner.Description', 'methodAndClassNamePatternGroupOrDefault', '([\\s\\S]*)\\((.*)\\)', 'testCull(org.spearce.jgit.revwalk.ObjectWalkTest)')","[12349, 29945]"
"('Description.java', 'org.junit.runner.Description', 'methodAndClassNamePatternGroupOrDefault', '([\\s\\S]*)\\((.*)\\)', 'testInvalidTagNoObject4(org.spearce.jgit.lib.ObjectCheckerTest)')","[7259, 24973]"
"('Description.java', 'org.junit.runner.Description', 'methodAndClassNamePatternGroupOrDefault', '([\\s\\S]*)\\((.*)\\)', 'testEdits_MatchNone(org.spearce.jgit.revwalk.RevWalkPathFilter1Test)')","[11873, 29505]"
"('Description.java', 'org.junit.runner.Description', 'methodAndClassNamePatternGroupOrDefault', '([\\s\\S]*)\\((.*)\\)', 'testFilter_MY_ALL_And_NONE(org.spearce.jgit.revwalk.RevWalkFilterTest)')","[13802, 31397]"
"('Description.java', 'org.junit.runner.Description', 'methodAndClassNamePatternGroupOrDefault', '([\\s\\S]*)\\((.*)\\)', 'testTwoEntries_BackwardsOneAtATime(org.spearce.jgit.treewalk.CanonicalTreeParserTest)')","[16530, 34147]"
"('Description.java', 'org.junit.runner.Description', 'methodAndClassNamePatternGroupOrDefault', '([\\s\\S]*)\\((.*)\\)', 'testDecodeUInt16(org.spearce.jgit.util.NBTest)')","[2502, 19803]"
"('Description.java', 'org.junit.runner.Description', 'methodAndClassNamePatternGroupOrDefault', '([\\s\\S]*)\\((.*)\\)', 'testUpdateNonFastForwardUnknownObject(org.spearce.jgit.transport.PushProcessTest)')","[15634, 33245]"
"('Description.java', 'org.junit.runner.Description', 'methodAndClassNamePatternGroupOrDefault', '([\\s\\S]*)\\((.*)\\)', 'org.spearce.jgit.lib.IndexTreeWalkerTest')","[8075, 38076]"
"('Description.java', 'org.junit.runner.Description', 'methodAndClassNamePatternGroupOrDefault', '([\\s\\S]*)\\((.*)\\)', 'testValidTree4(org.spearce.jgit.lib.ObjectCheckerTest)')","[6359, 23983]"
"('Description.java', 'org.junit.runner.Description', 'methodAndClassNamePatternGroupOrDefault', '([\\s\\S]*)\\((.*)\\)', 'org.spearce.jgit.revwalk.DateRevQueueTest')","[11594, 39147]"
"('Description.java', 'org.junit.runner.Description', 'methodAndClassNamePatternGroupOrDefault', '([\\s\\S]*)\\((.*)\\)', 'testFunc(org.spearce.jgit.lib.ObjectIdMapTest)')","[8056, 25787]"
"('Description.java', 'org.junit.runner.Description', 'methodAndClassNamePatternGroupOrDefault', '([\\s\\S]*)\\((.*)\\)', 'testSimpleStarCase1(org.spearce.jgit.fnmatch.FileNameMatcherTest)')","[4440, 21893]"
"('Description.java', 'org.junit.runner.Description', 'methodAndClassNamePatternGroupOrDefault', '([\\s\\S]*)\\((.*)\\)', 'testMatch_TooSmall(org.spearce.jgit.util.RawParseUtils_MatchTest)')","[1388, 18703]"
"('Description.java', 'org.junit.runner.Description', 'methodAndClassNamePatternGroupOrDefault', '([\\s\\S]*)\\((.*)\\)', 'testThreeEntries_BackwardsTwo(org.spearce.jgit.treewalk.CanonicalTreeParserTest)')","[16430, 34037]"
"('Description.java', 'org.junit.runner.Description', 'methodAndClassNamePatternGroupOrDefault', '([\\s\\S]*)\\((.*)\\)', 'testSpecialGroupCase5(org.spearce.jgit.fnmatch.FileNameMatcherTest)')","[3180, 20507]"
"('Description.java', 'org.junit.runner.Description', 'methodAndClassNamePatternGroupOrDefault', '([\\s\\S]*)\\((.*)\\)', 'testDirectoryFileConflicts_18(org.spearce.jgit.lib.ReadTreeTest)')","[9668, 27393]"
"('Description.java', 'org.junit.runner.Description', 'methodAndClassNamePatternGroupOrDefault', '([\\s\\S]*)\\((.*)\\)', 'testParseUnicodeName_DeleteFile(org.spearce.jgit.patch.FileHeaderTest)')","[475, 17845]"
"('Description.java', 'org.junit.runner.Description', 'methodAndClassNamePatternGroupOrDefault', '([\\s\\S]*)\\((.*)\\)', 'testTrivialTwoWay_rightDFconflict1(org.spearce.jgit.merge.SimpleMergeTest)')","[1049, 18351]"
"('Description.java', 'org.junit.runner.Description', 'methodAndClassNamePatternGroupOrDefault', '([\\s\\S]*)\\((.*)\\)', 'testTrivialTwoWay_disjointhistories(org.spearce.jgit.merge.SimpleMergeTest)')","[1249, 18571]"
"('Description.java', 'org.junit.runner.Description', 'methodAndClassNamePatternGroupOrDefault', '([\\s\\S]*)\\((.*)\\)', 'org.spearce.jgit.treewalk.PostOrderTreeWalkTest')","[16887, 44339]"
"('Description.java', 'org.junit.runner.Description', 'methodAndClassNamePatternGroupOrDefault', '([\\s\\S]*)\\((.*)\\)', 'testDestroyWhileOpen(org.spearce.jgit.util.TemporaryBufferTest)')","[1627, 18945]"
"('Description.java', 'org.junit.runner.Description', 'methodAndClassNamePatternGroupOrDefault', '([\\s\\S]*)\\((.*)\\)', 'testXDigitGroupCase2(org.spearce.jgit.fnmatch.FileNameMatcherTest)')","[5540, 23103]"
"('Description.java', 'org.junit.runner.Description', 'methodAndClassNamePatternGroupOrDefault', '([\\s\\S]*)\\((.*)\\)', 'testReadIndex_DirCacheTree(org.spearce.jgit.dircache.DirCacheCGitCompatabilityTest)')","[11535, 29175]"
"('Description.java', 'org.junit.runner.Description', 'methodAndClassNamePatternGroupOrDefault', '([\\s\\S]*)\\((.*)\\)', 'testPathFilterGroup_DoesNotSkipTail(org.spearce.jgit.dircache.DirCacheBuilderIteratorTest)')","[11377, 29043]"
"('Description.java', 'org.junit.runner.Description', 'methodAndClassNamePatternGroupOrDefault', '([\\s\\S]*)\\((.*)\\)', 'testAddLargeBlocks(org.spearce.jgit.revwalk.FIFORevQueueTest)')","[12111, 29725]"
"('Description.java', 'org.junit.runner.Description', 'methodAndClassNamePatternGroupOrDefault', '([\\s\\S]*)\\((.*)\\)', 'testNotEquals_DiffLength(org.spearce.jgit.lib.AbbreviatedObjectIdTest)')","[8713, 26447]"
"('Description.java', 'org.junit.runner.Description', 'methodAndClassNamePatternGroupOrDefault', '([\\s\\S]*)\\((.*)\\)', 'testCombinedRangesInOneGroupCase1(org.spearce.jgit.fnmatch.FileNameMatcherTest)')","[3380, 20727]"
"('Description.java', 'org.junit.runner.Description', 'methodAndClassNamePatternGroupOrDefault', '([\\s\\S]*)\\((.*)\\)', 'testEncode_Unicode(org.spearce.jgit.lib.ConstantsEncodingTest)')","[8772, 26491]"
"('Description.java', 'org.junit.runner.Description', 'methodAndClassNamePatternGroupOrDefault', '([\\s\\S]*)\\((.*)\\)', 'testParse_ShortLineOnlyNoLF(org.spearce.jgit.revwalk.RevTagParseTest)')","[13383, 30957]"
"('Description.java', 'org.junit.runner.Description', 'methodAndClassNamePatternGroupOrDefault', '([\\s\\S]*)\\((.*)\\)', 'testCombinedRangesInOneGroupCase2(org.spearce.jgit.fnmatch.FileNameMatcherTest)')","[3400, 20749]"
"('Description.java', 'org.junit.runner.Description', 'methodAndClassNamePatternGroupOrDefault', '([\\s\\S]*)\\((.*)\\)', 'testGitProtoWindowsPort(org.spearce.jgit.transport.URIishTest)')","[14578, 32167]"
"('Description.java', 'org.junit.runner.Description', 'methodAndClassNamePatternGroupOrDefault', '([\\s\\S]*)\\((.*)\\)', 'testPathCompare(org.spearce.jgit.treewalk.AbstractTreeIteratorTest)')","[17344, 34917]"
"('Description.java', 'org.junit.runner.Description', 'methodAndClassNamePatternGroupOrDefault', '([\\s\\S]*)\\((.*)\\)', 'testValidTreeSorting1(org.spearce.jgit.lib.ObjectCheckerTest)')","[6499, 24137]"
"('Description.java', 'org.junit.runner.Description', 'methodAndClassNamePatternGroupOrDefault', '([\\s\\S]*)\\((.*)\\)', 'testSaveRemoveFirstURI(org.spearce.jgit.transport.RemoteConfigTest)')","[15953, 33575]"
"('Description.java', 'org.junit.runner.Description', 'methodAndClassNamePatternGroupOrDefault', '([\\s\\S]*)\\((.*)\\)', 'org.spearce.jgit.transport.URIishTest')","[14378, 42087]"
"('Description.java', 'org.junit.runner.Description', 'methodAndClassNamePatternGroupOrDefault', '([\\s\\S]*)\\((.*)\\)', 'testNoPostOrder(org.spearce.jgit.treewalk.PostOrderTreeWalkTest)')","[16907, 34499]"
"('Description.java', 'org.junit.runner.Description', 'methodAndClassNamePatternGroupOrDefault', '([\\s\\S]*)\\((.*)\\)', 'testInvalidTreeBadSorting2(org.spearce.jgit.lib.ObjectCheckerTest)')","[6459, 24093]"
"('Description.java', 'org.junit.runner.Description', 'methodAndClassNamePatternGroupOrDefault', '([\\s\\S]*)\\((.*)\\)', 'testAdd_LargeGroup(org.spearce.jgit.util.IntListTest)')","[1726, 19033]"
"('Description.java', 'org.junit.runner.Description', 'methodAndClassNamePatternGroupOrDefault', '([\\s\\S]*)\\((.*)\\)', 'testSpecialGroupCase3(org.spearce.jgit.fnmatch.FileNameMatcherTest)')","[3140, 20463]"
"('Description.java', 'org.junit.runner.Description', 'methodAndClassNamePatternGroupOrDefault', '([\\s\\S]*)\\((.*)\\)', 'org.spearce.jgit.lib.TreeIteratorLeafOnlyTest')","[7917, 37974]"
"('Description.java', 'org.junit.runner.Description', 'methodAndClassNamePatternGroupOrDefault', '([\\s\\S]*)\\((.*)\\)', 'testValidTreeSorting8(org.spearce.jgit.lib.ObjectCheckerTest)')","[6639, 24291]"
"('Description.java', 'org.junit.runner.Description', 'methodAndClassNamePatternGroupOrDefault', '([\\s\\S]*)\\((.*)\\)', 'testTagCommit(org.spearce.jgit.revwalk.RevTagParseTest)')","[13523, 31111]"
"('Description.java', 'org.junit.runner.Description', 'methodAndClassNamePatternGroupOrDefault', '([\\s\\S]*)\\((.*)\\)', 'testALL_ShouldNotBeRecursive(org.spearce.jgit.treewalk.filter.TreeFilterTest)')","[17305, 34895]"
"('Description.java', 'org.junit.runner.Description', 'methodAndClassNamePatternGroupOrDefault', '([\\s\\S]*)\\((.*)\\)', 'testAlias_BatchModeYes(org.spearce.jgit.transport.OpenSshConfigTest)')","[15255, 32849]"
"('Description.java', 'org.junit.runner.Description', 'methodAndClassNamePatternGroupOrDefault', '([\\s\\S]*)\\((.*)\\)', 'testAlias_InheritBatchMode(org.spearce.jgit.transport.OpenSshConfigTest)')","[15175, 32761]"
"('Description.java', 'org.junit.runner.Description', 'methodAndClassNamePatternGroupOrDefault', '([\\s\\S]*)\\((.*)\\)', 'org.spearce.jgit.util.RawParseUtils_LineMapTest')","[2144, 37617]"
"('Description.java', 'org.junit.runner.Description', 'methodAndClassNamePatternGroupOrDefault', '([\\s\\S]*)\\((.*)\\)', 'testInitialize_NoPostOrder(org.spearce.jgit.treewalk.PostOrderTreeWalkTest)')","[16927, 34521]"
"('Description.java', 'org.junit.runner.Description', 'methodAndClassNamePatternGroupOrDefault', '([\\s\\S]*)\\((.*)\\)', 'test004_PutGetSimple(org.spearce.jgit.lib.RepositoryConfigTest)')","[7898, 25655]"
"('Description.java', 'org.junit.runner.Description', 'methodAndClassNamePatternGroupOrDefault', '([\\s\\S]*)\\((.*)\\)', 'testUnixFile(org.spearce.jgit.transport.URIishTest)')","[14478, 32057]"
"('Description.java', 'org.junit.runner.Description', 'methodAndClassNamePatternGroupOrDefault', '([\\s\\S]*)\\((.*)\\)', 'org.spearce.jgit.transport.OpenSshConfigTest')","[15115, 42240]"
"('Description.java', 'org.junit.runner.Description', 'methodAndClassNamePatternGroupOrDefault', '([\\s\\S]*)\\((.*)\\)', 'testCloseNameConflicts1(org.spearce.jgit.lib.ReadTreeTest)')","[9248, 26931]"
"('Description.java', 'org.junit.runner.Description', 'methodAndClassNamePatternGroupOrDefault', '([\\s\\S]*)\\((.*)\\)', 'org.spearce.jgit.revwalk.RevFlagSetTest')","[12806, 39555]"
"('Description.java', 'org.junit.runner.Description', 'methodAndClassNamePatternGroupOrDefault', '([\\s\\S]*)\\((.*)\\)', 'testAdd_InGitSortOrder(org.spearce.jgit.dircache.DirCacheBuilderTest)')","[10961, 28669]"
"('Description.java', 'org.junit.runner.Description', 'methodAndClassNamePatternGroupOrDefault', '([\\s\\S]*)\\((.*)\\)', 'testIteratorMethodsContract(org.spearce.jgit.lib.PackIndexV2Test)')","[8911, 26623]"
"('Description.java', 'org.junit.runner.Description', 'methodAndClassNamePatternGroupOrDefault', '([\\s\\S]*)\\((.*)\\)', 'org.spearce.jgit.util.QuotedStringBourneStyleTest')","[2263, 37668]"
"('Description.java', 'org.junit.runner.Description', 'methodAndClassNamePatternGroupOrDefault', '([\\s\\S]*)\\((.*)\\)', 'testSingleSubtree_Recursive(org.spearce.jgit.dircache.DirCacheIteratorTest)')","[10682, 28383]"
"('Description.java', 'org.junit.runner.Description', 'methodAndClassNamePatternGroupOrDefault', '([\\s\\S]*)\\((.*)\\)', 'testGraphGroupCase2(org.spearce.jgit.fnmatch.FileNameMatcherTest)')","[3680, 21057]"
"('Description.java', 'org.junit.runner.Description', 'methodAndClassNamePatternGroupOrDefault', '([\\s\\S]*)\\((.*)\\)', 'testGraphGroupCase3(org.spearce.jgit.fnmatch.FileNameMatcherTest)')","[3700, 21079]"
"('Description.java', 'org.junit.runner.Description', 'methodAndClassNamePatternGroupOrDefault', '([\\s\\S]*)\\((.*)\\)', 'testCopyConstructor(org.spearce.jgit.fnmatch.FileNameMatcherTest)')","[3620, 20991]"
"('Description.java', 'org.junit.runner.Description', 'methodAndClassNamePatternGroupOrDefault', '([\\s\\S]*)\\((.*)\\)', 'testInvalidCommitInvalidAuthor5(org.spearce.jgit.lib.ObjectCheckerTest)')","[6879, 24555]"
"('Description.java', 'org.junit.runner.Description', 'methodAndClassNamePatternGroupOrDefault', '([\\s\\S]*)\\((.*)\\)', 'testInvalidTreeModeStartsWithZero2(org.spearce.jgit.lib.ObjectCheckerTest)')","[7639, 25391]"
"('Description.java', 'org.junit.runner.Description', 'methodAndClassNamePatternGroupOrDefault', '([\\s\\S]*)\\((.*)\\)', 'testParseGitFileName_DqFooSpLfNulBar(org.spearce.jgit.patch.FileHeaderTest)')","[135, 17471]"
"('Description.java', 'org.junit.runner.Description', 'methodAndClassNamePatternGroupOrDefault', '([\\s\\S]*)\\((.*)\\)', 'testDirectoryFileConflicts_9(org.spearce.jgit.lib.ReadTreeTest)')","[9468, 27173]"
"('Description.java', 'org.junit.runner.Description', 'methodAndClassNamePatternGroupOrDefault', '([\\s\\S]*)\\((.*)\\)', 'testFilter_NONE_Or_ALL(org.spearce.jgit.revwalk.RevWalkFilterTest)')","[13682, 31265]"
"('Description.java', 'org.junit.runner.Description', 'methodAndClassNamePatternGroupOrDefault', '([\\s\\S]*)\\((.*)\\)', 'testSimpleF1(org.spearce.jgit.lib.TreeIteratorPreOrderTest)')","[10563, 28273]"
"('Description.java', 'org.junit.runner.Description', 'methodAndClassNamePatternGroupOrDefault', '([\\s\\S]*)\\((.*)\\)', 'testAtEOF(org.spearce.jgit.treewalk.EmptyTreeIteratorTest)')","[16271, 33883]"
"('Description.java', 'org.junit.runner.Description', 'methodAndClassNamePatternGroupOrDefault', '([\\s\\S]*)\\((.*)\\)', 'testStopWalkCallsParent(org.spearce.jgit.treewalk.EmptyTreeIteratorTest)')","[16311, 33927]"
"('Description.java', 'org.junit.runner.Description', 'methodAndClassNamePatternGroupOrDefault', '([\\s\\S]*)\\((.*)\\)', 'testInvalidTagNoObject2(org.spearce.jgit.lib.ObjectCheckerTest)')","[7219, 24929]"
"('Description.java', 'org.junit.runner.Description', 'methodAndClassNamePatternGroupOrDefault', '([\\s\\S]*)\\((.*)\\)', 'testFindObjectWrongOffset(org.spearce.jgit.lib.PackReverseIndexTest)')","[9727, 27437]"
"('Description.java', 'org.junit.runner.Description', 'methodAndClassNamePatternGroupOrDefault', '([\\s\\S]*)\\((.*)\\)', 'testDirectoryFileConflicts_13(org.spearce.jgit.lib.ReadTreeTest)')","[9568, 27283]"
"('Description.java', 'org.junit.runner.Description', 'methodAndClassNamePatternGroupOrDefault', '([\\s\\S]*)\\((.*)\\)', 'testUpdateRejectedByConnection(org.spearce.jgit.transport.PushProcessTest)')","[15534, 33135]"
"('Description.java', 'org.junit.runner.Description', 'methodAndClassNamePatternGroupOrDefault', '([\\s\\S]*)\\((.*)\\)', 'testWindowsFile2(org.spearce.jgit.transport.URIishTest)')","[14538, 32123]"
"('Description.java', 'org.junit.runner.Description', 'methodAndClassNamePatternGroupOrDefault', '([\\s\\S]*)\\((.*)\\)', 'testInvalidTreeModeNotSupportedMode1(org.spearce.jgit.lib.ObjectCheckerTest)')","[6259, 23873]"
"('Description.java', 'org.junit.runner.Description', 'methodAndClassNamePatternGroupOrDefault', '([\\s\\S]*)\\((.*)\\)', 'testResetDoesNotAffectPostOrder(org.spearce.jgit.treewalk.PostOrderTreeWalkTest)')","[16967, 34565]"
"('Description.java', 'org.junit.runner.Description', 'methodAndClassNamePatternGroupOrDefault', '([\\s\\S]*)\\((.*)\\)', 'testProperlyCullAllAncestors2(org.spearce.jgit.revwalk.RevWalkCullTest)')","[13184, 30759]"
"('Description.java', 'org.junit.runner.Description', 'methodAndClassNamePatternGroupOrDefault', '([\\s\\S]*)\\((.*)\\)', 'testSshProto(org.spearce.jgit.transport.URIishTest)')","[14638, 32233]"
"('Description.java', 'org.junit.runner.Description', 'methodAndClassNamePatternGroupOrDefault', '([\\s\\S]*)\\((.*)\\)', 'testScpStyleWithoutUser(org.spearce.jgit.transport.URIishTest)')","[14718, 32321]"
"('Description.java', 'org.junit.runner.Description', 'methodAndClassNamePatternGroupOrDefault', '([\\s\\S]*)\\((.*)\\)', 'testPrefixCompare_Full(org.spearce.jgit.lib.AbbreviatedObjectIdTest)')","[8453, 26161]"
"('Description.java', 'org.junit.runner.Description', 'methodAndClassNamePatternGroupOrDefault', '([\\s\\S]*)\\((.*)\\)', 'testWrap(org.spearce.jgit.treewalk.filter.NotTreeFilterTest)')","[17086, 34675]"
"('Description.java', 'org.junit.runner.Description', 'methodAndClassNamePatternGroupOrDefault', '([\\s\\S]*)\\((.*)\\)', 'testSeparatorParsing(org.spearce.jgit.transport.OpenSshConfigTest)')","[15295, 32893]"
"('Description.java', 'org.junit.runner.Description', 'methodAndClassNamePatternGroupOrDefault', '([\\s\\S]*)\\((.*)\\)', 'testComputeFileObjectId(org.spearce.jgit.treewalk.FileTreeIteratorTest)')","[16729, 34345]"
"('Description.java', 'org.junit.runner.Description', 'methodAndClassNamePatternGroupOrDefault', '([\\s\\S]*)\\((.*)\\)', 'testPrefixCompare_1(org.spearce.jgit.lib.AbbreviatedObjectIdTest)')","[8373, 26073]"
"('Description.java', 'org.junit.runner.Description', 'methodAndClassNamePatternGroupOrDefault', '([\\s\\S]*)\\((.*)\\)', 'testParseRename100_NewStyle(org.spearce.jgit.patch.FileHeaderTest)')","[175, 17515]"
"('Description.java', 'org.junit.runner.Description', 'methodAndClassNamePatternGroupOrDefault', '([\\s\\S]*)\\((.*)\\)', 'testSimple(org.spearce.jgit.revwalk.RevWalkMergeBaseTest)')","[12548, 30143]"
"('Description.java', 'org.junit.runner.Description', 'methodAndClassNamePatternGroupOrDefault', '([\\s\\S]*)\\((.*)\\)', 'testDeleteMaster(org.spearce.jgit.transport.RefSpecTestCase)')","[14956, 32541]"
"('Description.java', 'org.junit.runner.Description', 'methodAndClassNamePatternGroupOrDefault', '([\\s\\S]*)\\((.*)\\)', 'testOneEntry_Forward(org.spearce.jgit.treewalk.CanonicalTreeParserTest)')","[16490, 34103]"
"('Description.java', 'org.junit.runner.Description', 'methodAndClassNamePatternGroupOrDefault', '([\\s\\S]*)\\((.*)\\)', 'testTrivialTwoWay_ok(org.spearce.jgit.merge.SimpleMergeTest)')","[1089, 18395]"
"('Description.java', 'org.junit.runner.Description', 'methodAndClassNamePatternGroupOrDefault', '([\\s\\S]*)\\((.*)\\)', 'testSetSource(org.spearce.jgit.transport.RefSpecTestCase)')","[14996, 32585]"
"('Description.java', 'org.junit.runner.Description', 'methodAndClassNamePatternGroupOrDefault', '([\\s\\S]*)\\((.*)\\)', 'testUpdateCreateRef(org.spearce.jgit.transport.PushProcessTest)')","[15714, 33333]"
"('Description.java', 'org.junit.runner.Description', 'methodAndClassNamePatternGroupOrDefault', '([\\s\\S]*)\\((.*)\\)', 'org.spearce.jgit.revwalk.RevWalkPathFilter6012Test')","[12965, 39606]"
"('Description.java', 'org.junit.runner.Description', 'methodAndClassNamePatternGroupOrDefault', '([\\s\\S]*)\\((.*)\\)', 'testSplitLastColon(org.spearce.jgit.transport.RefSpecTestCase)')","[15096, 32695]"
"('Description.java', 'org.junit.runner.Description', 'methodAndClassNamePatternGroupOrDefault', '([\\s\\S]*)\\((.*)\\)', 'testError_CcTruncatedOld(org.spearce.jgit.patch.PatchCcErrorTest)')","[56, 17405]"
"('Description.java', 'org.junit.runner.Description', 'methodAndClassNamePatternGroupOrDefault', '([\\s\\S]*)\\((.*)\\)', 'testInvalidCommitInvalidTree3(org.spearce.jgit.lib.ObjectCheckerTest)')","[6199, 23807]"
"('Description.java', 'org.junit.runner.Description', 'methodAndClassNamePatternGroupOrDefault', '([\\s\\S]*)\\((.*)\\)', 'testInvalidCommitNoCommitter1(org.spearce.jgit.lib.ObjectCheckerTest)')","[7159, 24863]"
"('Description.java', 'org.junit.runner.Description', 'methodAndClassNamePatternGroupOrDefault', '([\\s\\S]*)\\((.*)\\)', 'testEmptyTree_AtEOF(org.spearce.jgit.treewalk.CanonicalTreeParserTest)')","[16650, 34279]"
"('Description.java', 'org.junit.runner.Description', 'methodAndClassNamePatternGroupOrDefault', '([\\s\\S]*)\\((.*)\\)', 'testError_TruncatedOld(org.spearce.jgit.patch.PatchErrorTest)')","[574, 17933]"
"('Description.java', 'org.junit.runner.Description', 'methodAndClassNamePatternGroupOrDefault', '([\\s\\S]*)\\((.*)\\)', 'testTrackingRefUpdateDisabled(org.spearce.jgit.transport.PushProcessTest)')","[15734, 33355]"
"('Description.java', 'org.junit.runner.Description', 'methodAndClassNamePatternGroupOrDefault', '([\\s\\S]*)\\((.*)\\)', 'testValidCommit128Parent(org.spearce.jgit.lib.ObjectCheckerTest)')","[7399, 25127]"
"('Description.java', 'org.junit.runner.Description', 'methodAndClassNamePatternGroupOrDefault', '([\\s\\S]*)\\((.*)\\)', 'testAlphaGroupCase0(org.spearce.jgit.fnmatch.FileNameMatcherTest)')","[4100, 21519]"
"('Description.java', 'org.junit.runner.Description', 'methodAndClassNamePatternGroupOrDefault', '([\\s\\S]*)\\((.*)\\)', 'testError_GarbageBetweenFiles(org.spearce.jgit.patch.PatchErrorTest)')","[594, 17955]"
"('Description.java', 'org.junit.runner.Description', 'methodAndClassNamePatternGroupOrDefault', '([\\s\\S]*)\\((.*)\\)', 'testMatch_Prefix(org.spearce.jgit.util.RawParseUtils_MatchTest)')","[1368, 18681]"
"('Description.java', 'org.junit.runner.Description', 'methodAndClassNamePatternGroupOrDefault', '([\\s\\S]*)\\((.*)\\)', 'testUnknown(org.spearce.jgit.transport.RemoteConfigTest)')","[15873, 33487]"
"('Description.java', 'org.junit.runner.Description', 'methodAndClassNamePatternGroupOrDefault', '([\\s\\S]*)\\((.*)\\)', 'testInvalidTreeModeStartsWithZero1(org.spearce.jgit.lib.ObjectCheckerTest)')","[7619, 25369]"
"('Description.java', 'org.junit.runner.Description', 'methodAndClassNamePatternGroupOrDefault', '([\\s\\S]*)\\((.*)\\)', 'testNoCacheObjectIdSubclass(org.spearce.jgit.lib.RefUpdateTest)')","[10384, 28097]"
"('Description.java', 'org.junit.runner.Description', 'methodAndClassNamePatternGroupOrDefault', '([\\s\\S]*)\\((.*)\\)', 'testEmpty(org.spearce.jgit.revwalk.FIFORevQueueTest)')","[12071, 29681]"
"('Description.java', 'org.junit.runner.Description', 'methodAndClassNamePatternGroupOrDefault', '([\\s\\S]*)\\((.*)\\)', 'test2_FromString(org.spearce.jgit.lib.AbbreviatedObjectIdTest)')","[8513, 26227]"
"('Description.java', 'org.junit.runner.Description', 'methodAndClassNamePatternGroupOrDefault', '([\\s\\S]*)\\((.*)\\)', 'testSpaceGroupCase3(org.spearce.jgit.fnmatch.FileNameMatcherTest)')","[4300, 21739]"
"('Description.java', 'org.junit.runner.Description', 'methodAndClassNamePatternGroupOrDefault', '([\\s\\S]*)\\((.*)\\)', 'testDequote_LoneBackslash(org.spearce.jgit.util.QuotedStringBourneStyleTest)')","[2343, 19649]"
"('Description.java', 'org.junit.runner.Description', 'methodAndClassNamePatternGroupOrDefault', '([\\s\\S]*)\\((.*)\\)', 'org.spearce.jgit.revwalk.ObjectWalkTest')","[12289, 39402]"
"('Description.java', 'org.junit.runner.Description', 'methodAndClassNamePatternGroupOrDefault', '([\\s\\S]*)\\((.*)\\)', 'testFilter_NOT_ALL(org.spearce.jgit.revwalk.RevWalkFilterTest)')","[13642, 31221]"
"('Description.java', 'org.junit.runner.Description', 'methodAndClassNamePatternGroupOrDefault', '([\\s\\S]*)\\((.*)\\)', 'test005_PutGetStringList(org.spearce.jgit.lib.RepositoryConfigTest)')","[7818, 25567]"
"('Description.java', 'org.junit.runner.Description', 'methodAndClassNamePatternGroupOrDefault', '([\\s\\S]*)\\((.*)\\)', 'testMixedGroupCase2(org.spearce.jgit.fnmatch.FileNameMatcherTest)')","[3460, 20815]"
"('Description.java', 'org.junit.runner.Description', 'methodAndClassNamePatternGroupOrDefault', '([\\s\\S]*)\\((.*)\\)', 'testInvalidCommitNoTree4(org.spearce.jgit.lib.ObjectCheckerTest)')","[7479, 25215]"
"('Description.java', 'org.junit.runner.Description', 'methodAndClassNamePatternGroupOrDefault', '([\\s\\S]*)\\((.*)\\)', 'testEmpty(org.spearce.jgit.revwalk.RevFlagSetTest)')","[12826, 30407]"
"('Description.java', 'org.junit.runner.Description', 'methodAndClassNamePatternGroupOrDefault', '([\\s\\S]*)\\((.*)\\)', 'testParse_explicit_encoded(org.spearce.jgit.revwalk.RevCommitParseTest)')","[14300, 31903]"
"('Description.java', 'org.junit.runner.Description', 'methodAndClassNamePatternGroupOrDefault', '([\\s\\S]*)\\((.*)\\)', 'testIncompleteRangesInOneGroupCase1(org.spearce.jgit.fnmatch.FileNameMatcherTest)')","[4960, 22465]"
"('Description.java', 'org.junit.runner.Description', 'methodAndClassNamePatternGroupOrDefault', '([\\s\\S]*)\\((.*)\\)', 'testRemoveRevFlag(org.spearce.jgit.revwalk.RevObjectTest)')","[12687, 30275]"
"('Description.java', 'org.junit.runner.Description', 'methodAndClassNamePatternGroupOrDefault', '([\\s\\S]*)\\((.*)\\)', 'testWrite1(org.spearce.jgit.transport.BundleWriterTest)')","[14359, 31947]"
"('Description.java', 'org.junit.runner.Description', 'methodAndClassNamePatternGroupOrDefault', '([\\s\\S]*)\\((.*)\\)', 'testEmptyCache_CreateEmptyCacheTree(org.spearce.jgit.dircache.DirCacheTreeTest)')","[11279, 28977]"
"('Description.java', 'org.junit.runner.Description', 'methodAndClassNamePatternGroupOrDefault', '([\\s\\S]*)\\((.*)\\)', 'org.spearce.jgit.transport.RemoteConfigTest')","[15753, 43828]"
"('Description.java', 'org.junit.runner.Description', 'methodAndClassNamePatternGroupOrDefault', '([\\s\\S]*)\\((.*)\\)', 'testCombinedRangesInOneGroupCase0(org.spearce.jgit.fnmatch.FileNameMatcherTest)')","[3360, 20705]"
"('Description.java', 'org.junit.runner.Description', 'methodAndClassNamePatternGroupOrDefault', '([\\s\\S]*)\\((.*)\\)', 'testScpStyleWithUser(org.spearce.jgit.transport.URIishTest)')","[14558, 32145]"
"('Description.java', 'org.junit.runner.Description', 'methodAndClassNamePatternGroupOrDefault', '([\\s\\S]*)\\((.*)\\)', 'testGitProtoWindows(org.spearce.jgit.transport.URIishTest)')","[14658, 32255]"
"('Description.java', 'org.junit.runner.Description', 'methodAndClassNamePatternGroupOrDefault', '([\\s\\S]*)\\((.*)\\)', 'org.spearce.jgit.revwalk.FIFORevQueueTest')","[12031, 39300]"
"('Description.java', 'org.junit.runner.Description', 'methodAndClassNamePatternGroupOrDefault', '([\\s\\S]*)\\((.*)\\)', 'testReadMissing_TempIndex(org.spearce.jgit.dircache.DirCacheBasicTest)')","[11060, 28757]"
"('Description.java', 'org.junit.runner.Description', 'methodAndClassNamePatternGroupOrDefault', '([\\s\\S]*)\\((.*)\\)', 'org.spearce.jgit.treewalk.CanonicalTreeParserTest')","[16390, 44186]"
"('URIish.java', 'org.spearce.jgit.transport.URIish', '<init>', '^(?:([^@]+?)@)?([^:]+?):(.+)$', 'example.com:some/p ath')","[41944, 42036]"
"('Description.java', 'org.junit.runner.Description', 'methodAndClassNamePatternGroupOrDefault', '([\\s\\S]*)\\((.*)\\)', 'testLowerGroupCase2(org.spearce.jgit.fnmatch.FileNameMatcherTest)')","[3860, 21255]"
"('Description.java', 'org.junit.runner.Description', 'methodAndClassNamePatternGroupOrDefault', '([\\s\\S]*)\\((.*)\\)', 'testParseGitFileName_NoLF(org.spearce.jgit.patch.FileHeaderTest)')","[335, 17691]"
"('Description.java', 'org.junit.runner.Description', 'methodAndClassNamePatternGroupOrDefault', '([\\s\\S]*)\\((.*)\\)', 'testDigitGroupCase3(org.spearce.jgit.fnmatch.FileNameMatcherTest)')","[4560, 22025]"
"('Description.java', 'org.junit.runner.Description', 'methodAndClassNamePatternGroupOrDefault', '([\\s\\S]*)\\((.*)\\)', 'testRemoved(org.spearce.jgit.lib.IndexDiffTest)')","[10305, 28031]"
"('Description.java', 'org.junit.runner.Description', 'methodAndClassNamePatternGroupOrDefault', '([\\s\\S]*)\\((.*)\\)', 'testGetText_Convert(org.spearce.jgit.patch.GetTextTest)')","[733, 18087]"
"('Description.java', 'org.junit.runner.Description', 'methodAndClassNamePatternGroupOrDefault', '([\\s\\S]*)\\((.*)\\)', 'testBuilderClear(org.spearce.jgit.dircache.DirCacheBuilderTest)')","[10921, 28625]"
"('Description.java', 'org.junit.runner.Description', 'methodAndClassNamePatternGroupOrDefault', '([\\s\\S]*)\\((.*)\\)', 'testDF_GapByOne(org.spearce.jgit.treewalk.NameConflictTreeWalkTest)')","[16848, 34455]"
"('Description.java', 'org.junit.runner.Description', 'methodAndClassNamePatternGroupOrDefault', '([\\s\\S]*)\\((.*)\\)', 'testSpecialGroupCase8(org.spearce.jgit.fnmatch.FileNameMatcherTest)')","[3240, 20573]"
"('Description.java', 'org.junit.runner.Description', 'methodAndClassNamePatternGroupOrDefault', '([\\s\\S]*)\\((.*)\\)', 'testRemoveOnlyURI(org.spearce.jgit.transport.RemoteConfigTest)')","[16113, 33751]"
"('Description.java', 'org.junit.runner.Description', 'methodAndClassNamePatternGroupOrDefault', '([\\s\\S]*)\\((.*)\\)', 'testQuote_NamedEscapes(org.spearce.jgit.util.QuotedStringGitPathStyleTest)')","[3021, 20353]"
"('Description.java', 'org.junit.runner.Description', 'methodAndClassNamePatternGroupOrDefault', '([\\s\\S]*)\\((.*)\\)', 'testSpecialGroupCase9(org.spearce.jgit.fnmatch.FileNameMatcherTest)')","[3260, 20595]"
"('Description.java', 'org.junit.runner.Description', 'methodAndClassNamePatternGroupOrDefault', '([\\s\\S]*)\\((.*)\\)', 'testTwoGroupsCase2(org.spearce.jgit.fnmatch.FileNameMatcherTest)')","[4380, 21827]"
"('Description.java', 'org.junit.runner.Description', 'methodAndClassNamePatternGroupOrDefault', '([\\s\\S]*)\\((.*)\\)', 'org.spearce.jgit.lib.ConstantsEncodingTest')","[8752, 38229]"
"('Description.java', 'org.junit.runner.Description', 'methodAndClassNamePatternGroupOrDefault', '([\\s\\S]*)\\((.*)\\)', 'testTwoLevelSubtree(org.spearce.jgit.dircache.DirCacheTreeTest)')","[11259, 28955]"
"('Description.java', 'org.junit.runner.Description', 'methodAndClassNamePatternGroupOrDefault', '([\\s\\S]*)\\((.*)\\)', 'testDequote_Latin1(org.spearce.jgit.util.QuotedStringGitPathStyleTest)')","[2781, 20089]"
"('Description.java', 'org.junit.runner.Description', 'methodAndClassNamePatternGroupOrDefault', '([\\s\\S]*)\\((.*)\\)', 'testThreeEntries_Seek3IsEOF(org.spearce.jgit.treewalk.CanonicalTreeParserTest)')","[16450, 34059]"
"('Description.java', 'org.junit.runner.Description', 'methodAndClassNamePatternGroupOrDefault', '([\\s\\S]*)\\((.*)\\)', 'testError_GitBinaryNoForwardHunk(org.spearce.jgit.patch.PatchErrorTest)')","[614, 17977]"
"('Description.java', 'org.junit.runner.Description', 'methodAndClassNamePatternGroupOrDefault', '([\\s\\S]*)\\((.*)\\)', 'org.spearce.jgit.revwalk.LIFORevQueueTest')","[12170, 39351]"
"('Description.java', 'org.junit.runner.Description', 'methodAndClassNamePatternGroupOrDefault', '([\\s\\S]*)\\((.*)\\)', 'testParse_OnlyLFMessage(org.spearce.jgit.revwalk.RevCommitParseTest)')","[14100, 31683]"
"('Description.java', 'org.junit.runner.Description', 'methodAndClassNamePatternGroupOrDefault', '([\\s\\S]*)\\((.*)\\)', 'testDirectoryFileConflicts_5(org.spearce.jgit.lib.ReadTreeTest)')","[9408, 27107]"
"('Description.java', 'org.junit.runner.Description', 'methodAndClassNamePatternGroupOrDefault', '([\\s\\S]*)\\((.*)\\)', 'testParse_NoBinary(org.spearce.jgit.patch.PatchTest)')","[851, 18175]"
"('Description.java', 'org.junit.runner.Description', 'methodAndClassNamePatternGroupOrDefault', '([\\s\\S]*)\\((.*)\\)', 'testALL_IdentityClone(org.spearce.jgit.treewalk.filter.TreeFilterTest)')","[17205, 34785]"
"('Description.java', 'org.junit.runner.Description', 'methodAndClassNamePatternGroupOrDefault', '([\\s\\S]*)\\((.*)\\)', 'org.spearce.jgit.revwalk.AlwaysEmptyRevQueueTest')","[11952, 39249]"
"('Description.java', 'org.junit.runner.Description', 'methodAndClassNamePatternGroupOrDefault', '([\\s\\S]*)\\((.*)\\)', 'testEncode_SimpleASCII(org.spearce.jgit.lib.ConstantsEncodingTest)')","[8812, 26535]"
"('Description.java', 'org.junit.runner.Description', 'methodAndClassNamePatternGroupOrDefault', '([\\s\\S]*)\\((.*)\\)', 'testIteratorReturnedValues2(org.spearce.jgit.lib.PackIndexV1Test)')","[8274, 25985]"
"('Description.java', 'org.junit.runner.Description', 'methodAndClassNamePatternGroupOrDefault', '([\\s\\S]*)\\((.*)\\)', 'testBuildThenClear(org.spearce.jgit.dircache.DirCacheBasicTest)')","[11100, 28801]"
"('Description.java', 'org.junit.runner.Description', 'methodAndClassNamePatternGroupOrDefault', '([\\s\\S]*)\\((.*)\\)', 'testFilter_Negate_ALL(org.spearce.jgit.revwalk.RevWalkFilterTest)')","[13622, 31199]"
"('Description.java', 'org.junit.runner.Description', 'methodAndClassNamePatternGroupOrDefault', '([\\s\\S]*)\\((.*)\\)', 'testWriteEmptyPack2(org.spearce.jgit.lib.PackWriterTest)')","[9866, 27569]"
"('Description.java', 'org.junit.runner.Description', 'methodAndClassNamePatternGroupOrDefault', '([\\s\\S]*)\\((.*)\\)', 'testInvalidTagNoType1(org.spearce.jgit.lib.ObjectCheckerTest)')","[7499, 25237]"
"('Description.java', 'org.junit.runner.Description', 'methodAndClassNamePatternGroupOrDefault', '([\\s\\S]*)\\((.*)\\)', 'testTheirs(org.spearce.jgit.merge.SimpleMergeTest)')","[1269, 18593]"
"('Description.java', 'org.junit.runner.Description', 'methodAndClassNamePatternGroupOrDefault', '([\\s\\S]*)\\((.*)\\)', 'org.spearce.jgit.lib.TreeIteratorPostOrderTest')","[9049, 38382]"
"('Description.java', 'org.junit.runner.Description', 'methodAndClassNamePatternGroupOrDefault', '([\\s\\S]*)\\((.*)\\)', 'testRemoveFirstURI(org.spearce.jgit.transport.RemoteConfigTest)')","[16013, 33641]"
"('Description.java', 'org.junit.runner.Description', 'methodAndClassNamePatternGroupOrDefault', '([\\s\\S]*)\\((.*)\\)', 'testAddTwo(org.spearce.jgit.revwalk.RevFlagSetTest)')","[12906, 30495]"
"('Description.java', 'org.junit.runner.Description', 'methodAndClassNamePatternGroupOrDefault', '([\\s\\S]*)\\((.*)\\)', 'testOneEntry_Backwards(org.spearce.jgit.treewalk.CanonicalTreeParserTest)')","[16570, 34191]"
"('Description.java', 'org.junit.runner.Description', 'methodAndClassNamePatternGroupOrDefault', '([\\s\\S]*)\\((.*)\\)', 'testParseAllFields(org.spearce.jgit.revwalk.RevTagParseTest)')","[13343, 30913]"
"('Description.java', 'org.junit.runner.Description', 'methodAndClassNamePatternGroupOrDefault', '([\\s\\S]*)\\((.*)\\)', 'testInvalidTreeNameIsEmpty(org.spearce.jgit.lib.ObjectCheckerTest)')","[6039, 23631]"
"('Description.java', 'org.junit.runner.Description', 'methodAndClassNamePatternGroupOrDefault', '([\\s\\S]*)\\((.*)\\)', 'testDequote_OctalAll(org.spearce.jgit.util.QuotedStringGitPathStyleTest)')","[2681, 19979]"
"('Description.java', 'org.junit.runner.Description', 'methodAndClassNamePatternGroupOrDefault', '([\\s\\S]*)\\((.*)\\)', 'test003_PutRemote(org.spearce.jgit.lib.RepositoryConfigTest)')","[7878, 25633]"
"('Description.java', 'org.junit.runner.Description', 'methodAndClassNamePatternGroupOrDefault', '([\\s\\S]*)\\((.*)\\)', 'testPrintGroupCase0(org.spearce.jgit.fnmatch.FileNameMatcherTest)')","[5000, 22509]"
"('URIish.java', 'org.spearce.jgit.transport.URIish', '<init>', '^(?:([^@]+?)@)?([^:]+?):(.+)$', 'user@example.com:egit.git')",[42707]
"('Description.java', 'org.junit.runner.Description', 'methodAndClassNamePatternGroupOrDefault', '([\\s\\S]*)\\((.*)\\)', 'testParseFullIndexLine_NoMode(org.spearce.jgit.patch.FileHeaderTest)')","[275, 17625]"
"('Description.java', 'org.junit.runner.Description', 'methodAndClassNamePatternGroupOrDefault', '([\\s\\S]*)\\((.*)\\)', 'org.spearce.jgit.patch.PatchErrorTest')","[514, 35092]"
"('Description.java', 'org.junit.runner.Description', 'methodAndClassNamePatternGroupOrDefault', '([\\s\\S]*)\\((.*)\\)', 'testTwoEntries_Seek2IsEOF(org.spearce.jgit.treewalk.CanonicalTreeParserTest)')","[16510, 34125]"
"('Description.java', 'org.junit.runner.Description', 'methodAndClassNamePatternGroupOrDefault', '([\\s\\S]*)\\((.*)\\)', 'testLogDeleted(org.spearce.jgit.lib.RefUpdateTest)')","[10404, 28119]"
"('Description.java', 'org.junit.runner.Description', 'methodAndClassNamePatternGroupOrDefault', '([\\s\\S]*)\\((.*)\\)', 'org.spearce.jgit.revwalk.RevWalkMergeBaseTest')","[12448, 39453]"
"('Description.java', 'org.junit.runner.Description', 'methodAndClassNamePatternGroupOrDefault', '([\\s\\S]*)\\((.*)\\)', 'test6_FromString(org.spearce.jgit.lib.AbbreviatedObjectIdTest)')","[8593, 26315]"
"('Description.java', 'org.junit.runner.Description', 'methodAndClassNamePatternGroupOrDefault', '([\\s\\S]*)\\((.*)\\)', 'testVerySimpleGroupCase2(org.spearce.jgit.fnmatch.FileNameMatcherTest)')","[6000, 23609]"
"('Description.java', 'org.junit.runner.Description', 'methodAndClassNamePatternGroupOrDefault', '([\\s\\S]*)\\((.*)\\)', 'testInvalidTreeDuplicateNames1(org.spearce.jgit.lib.ObjectCheckerTest)')","[7679, 25435]"
"('Description.java', 'org.junit.runner.Description', 'methodAndClassNamePatternGroupOrDefault', '([\\s\\S]*)\\((.*)\\)', 'testVerySimplePatternCase3(org.spearce.jgit.fnmatch.FileNameMatcherTest)')","[4040, 21453]"
"('Description.java', 'org.junit.runner.Description', 'methodAndClassNamePatternGroupOrDefault', '([\\s\\S]*)\\((.*)\\)', 'testTwoLineFooBar(org.spearce.jgit.util.RawParseUtils_LineMapTest)')","[2204, 19517]"
"('Description.java', 'org.junit.runner.Description', 'methodAndClassNamePatternGroupOrDefault', '([\\s\\S]*)\\((.*)\\)', 'testId(org.spearce.jgit.revwalk.RevObjectTest)')","[12647, 30231]"
"('Description.java', 'org.junit.runner.Description', 'methodAndClassNamePatternGroupOrDefault', '([\\s\\S]*)\\((.*)\\)', 'testToString(org.spearce.jgit.util.IntListTest)')","[1826, 19143]"
"('Description.java', 'org.junit.runner.Description', 'methodAndClassNamePatternGroupOrDefault', '([\\s\\S]*)\\((.*)\\)', 'testPath_4095(org.spearce.jgit.dircache.DirCacheLargePathTest)')","[11456, 29109]"
"('Description.java', 'org.junit.runner.Description', 'methodAndClassNamePatternGroupOrDefault', '([\\s\\S]*)\\((.*)\\)', 'test2(org.spearce.jgit.transport.IndexPackTest)')","[14777, 32365]"
"('Description.java', 'org.junit.runner.Description', 'methodAndClassNamePatternGroupOrDefault', '([\\s\\S]*)\\((.*)\\)', 'testWrite0(org.spearce.jgit.transport.BundleWriterTest)')","[14339, 31925]"
"('Description.java', 'org.junit.runner.Description', 'methodAndClassNamePatternGroupOrDefault', '([\\s\\S]*)\\((.*)\\)', 'org.spearce.jgit.revwalk.RevTagParseTest')","[13203, 39708]"
"('Description.java', 'org.junit.runner.Description', 'methodAndClassNamePatternGroupOrDefault', '([\\s\\S]*)\\((.*)\\)', 'testQuote_User(org.spearce.jgit.util.QuotedStringBourneUserPathStyleTest)')","[2085, 19407]"
"('Description.java', 'org.junit.runner.Description', 'methodAndClassNamePatternGroupOrDefault', '([\\s\\S]*)\\((.*)\\)', 'testSpecialGroupCase6(org.spearce.jgit.fnmatch.FileNameMatcherTest)')","[3200, 20529]"
"('Description.java', 'org.junit.runner.Description', 'methodAndClassNamePatternGroupOrDefault', '([\\s\\S]*)\\((.*)\\)', 'testUpdateUpToDate(org.spearce.jgit.transport.PushProcessTest)')","[15554, 33157]"
"('Description.java', 'org.junit.runner.Description', 'methodAndClassNamePatternGroupOrDefault', '([\\s\\S]*)\\((.*)\\)', 'test1(org.spearce.jgit.transport.IndexPackTest)')","[14757, 32343]"
"('Description.java', 'org.junit.runner.Description', 'methodAndClassNamePatternGroupOrDefault', '([\\s\\S]*)\\((.*)\\)', 'testEmpty_FromByteArray(org.spearce.jgit.lib.AbbreviatedObjectIdTest)')","[8733, 26469]"
"('Description.java', 'org.junit.runner.Description', 'methodAndClassNamePatternGroupOrDefault', '([\\s\\S]*)\\((.*)\\)', 'testDequote_SoleSq(org.spearce.jgit.util.QuotedStringBourneStyleTest)')","[2363, 19671]"
"('Description.java', 'org.junit.runner.Description', 'methodAndClassNamePatternGroupOrDefault', '([\\s\\S]*)\\((.*)\\)', 'testRemoveMiddleURI(org.spearce.jgit.transport.RemoteConfigTest)')","[15773, 33377]"
"('Description.java', 'org.junit.runner.Description', 'methodAndClassNamePatternGroupOrDefault', '([\\s\\S]*)\\((.*)\\)', 'testDeleteFastForward(org.spearce.jgit.lib.RefUpdateTest)')","[10504, 28229]"
"('Description.java', 'org.junit.runner.Description', 'methodAndClassNamePatternGroupOrDefault', '([\\s\\S]*)\\((.*)\\)', 'org.spearce.jgit.merge.SimpleMergeTest')","[1029, 35347]"
"('Description.java', 'org.junit.runner.Description', 'methodAndClassNamePatternGroupOrDefault', '([\\s\\S]*)\\((.*)\\)', 'testLarge_SingleWrite(org.spearce.jgit.util.TemporaryBufferTest)')","[1507, 18813]"
"('Description.java', 'org.junit.runner.Description', 'methodAndClassNamePatternGroupOrDefault', '([\\s\\S]*)\\((.*)\\)', 'testSimpleStarCase0(org.spearce.jgit.fnmatch.FileNameMatcherTest)')","[4420, 21871]"
"('Description.java', 'org.junit.runner.Description', 'methodAndClassNamePatternGroupOrDefault', '([\\s\\S]*)\\((.*)\\)', 'testLowerGroupCase1(org.spearce.jgit.fnmatch.FileNameMatcherTest)')","[3840, 21233]"
"('URIish.java', 'org.spearce.jgit.transport.URIish', '<init>', '^(?:([a-z][a-z0-9+-]+)://(?:([^/]+?)(?::([^/]+?))?@)?(?:([^/]+?))?(?::(\\d+))?)?((?:[A-Za-z]:)?/.+)$', 'git://example.com:338/D:/m y')","[41254, 41300]"
"('Description.java', 'org.junit.runner.Description', 'methodAndClassNamePatternGroupOrDefault', '([\\s\\S]*)\\((.*)\\)', 'testInvalidTreeNameContainsSlash(org.spearce.jgit.lib.ObjectCheckerTest)')","[6099, 23697]"
"('Description.java', 'org.junit.runner.Description', 'methodAndClassNamePatternGroupOrDefault', '([\\s\\S]*)\\((.*)\\)', 'testTrivialTwoWay_rightDFconflict2(org.spearce.jgit.merge.SimpleMergeTest)')","[1069, 18373]"
"('Description.java', 'org.junit.runner.Description', 'methodAndClassNamePatternGroupOrDefault', '([\\s\\S]*)\\((.*)\\)', 'testWritePack2(org.spearce.jgit.lib.PackWriterTest)')","[9946, 27657]"
"('Description.java', 'org.junit.runner.Description', 'methodAndClassNamePatternGroupOrDefault', '([\\s\\S]*)\\((.*)\\)', 'testSingleSubtree(org.spearce.jgit.dircache.DirCacheTreeTest)')","[11299, 28999]"
"('Description.java', 'org.junit.runner.Description', 'methodAndClassNamePatternGroupOrDefault', '([\\s\\S]*)\\((.*)\\)', 'testIncompleteRangesInOneGroupCase0(org.spearce.jgit.fnmatch.FileNameMatcherTest)')","[4940, 22443]"
"('Description.java', 'org.junit.runner.Description', 'methodAndClassNamePatternGroupOrDefault', '([\\s\\S]*)\\((.*)\\)', 'testLowerGroupCase5(org.spearce.jgit.fnmatch.FileNameMatcherTest)')","[3920, 21321]"
"('Description.java', 'org.junit.runner.Description', 'methodAndClassNamePatternGroupOrDefault', '([\\s\\S]*)\\((.*)\\)', 'testSimpleStarCase2(org.spearce.jgit.fnmatch.FileNameMatcherTest)')","[4460, 21915]"
"('URIish.java', 'org.spearce.jgit.transport.URIish', '<init>', '^(?:([a-z][a-z0-9+-]+)://(?:([^/]+?)(?::([^/]+?))?@)?(?:([^/]+?))?(?::(\\d+))?)?((?:[A-Za-z]:)?/.+)$', '/more/dirs')","[42429, 42613, 43404]"
"('Description.java', 'org.junit.runner.Description', 'methodAndClassNamePatternGroupOrDefault', '([\\s\\S]*)\\((.*)\\)', 'org.spearce.jgit.transport.IndexPackTest')","[14737, 42138]"
"('Description.java', 'org.junit.runner.Description', 'methodAndClassNamePatternGroupOrDefault', '([\\s\\S]*)\\((.*)\\)', 'testSaveAddURI(org.spearce.jgit.transport.RemoteConfigTest)')","[15913, 33531]"
"('Description.java', 'org.junit.runner.Description', 'methodAndClassNamePatternGroupOrDefault', '([\\s\\S]*)\\((.*)\\)', 'testParseRename100_OldStyle(org.spearce.jgit.patch.FileHeaderTest)')","[95, 17427]"
"('URIish.java', 'org.spearce.jgit.transport.URIish', '<init>', '^(?:([a-z][a-z0-9+-]+)://(?:([^/]+?)(?::([^/]+?))?@)?(?:([^/]+?))?(?::(\\d+))?)?((?:[A-Za-z]:)?/.+)$', 'http://www.spearce.org/egit.git')","[42800, 42847, 42986, 43079, 43126, 43266, 43543, 43684, 43731]"
"('Description.java', 'org.junit.runner.Description', 'methodAndClassNamePatternGroupOrDefault', '([\\s\\S]*)\\((.*)\\)', 'org.spearce.jgit.transport.BundleWriterTest')","[14319, 40288]"
"('Description.java', 'org.junit.runner.Description', 'methodAndClassNamePatternGroupOrDefault', '([\\s\\S]*)\\((.*)\\)', 'testTwoEntries_ForwardOneAtATime(org.spearce.jgit.treewalk.CanonicalTreeParserTest)')","[16470, 34081]"
"('Description.java', 'org.junit.runner.Description', 'methodAndClassNamePatternGroupOrDefault', '([\\s\\S]*)\\((.*)\\)', 'testNotIgnoreNonExistingObjects(org.spearce.jgit.lib.PackWriterTest)')","[10126, 27855]"
"('Description.java', 'org.junit.runner.Description', 'methodAndClassNamePatternGroupOrDefault', '([\\s\\S]*)\\((.*)\\)', 'testInvalidTagNoObject1(org.spearce.jgit.lib.ObjectCheckerTest)')","[7199, 24907]"
"('Description.java', 'org.junit.runner.Description', 'methodAndClassNamePatternGroupOrDefault', '([\\s\\S]*)\\((.*)\\)', 'testSpecialGroupCase1(org.spearce.jgit.fnmatch.FileNameMatcherTest)')","[3100, 20419]"
"('Description.java', 'org.junit.runner.Description', 'methodAndClassNamePatternGroupOrDefault', '([\\s\\S]*)\\((.*)\\)', 'testEmpty(org.spearce.jgit.patch.PatchTest)')","[871, 18197]"
"('Description.java', 'org.junit.runner.Description', 'methodAndClassNamePatternGroupOrDefault', '([\\s\\S]*)\\((.*)\\)', 'testDirectoryFileConflicts_17(org.spearce.jgit.lib.ReadTreeTest)')","[9648, 27371]"
"('Description.java', 'org.junit.runner.Description', 'methodAndClassNamePatternGroupOrDefault', '([\\s\\S]*)\\((.*)\\)', 'testPunctGroupCase3(org.spearce.jgit.fnmatch.FileNameMatcherTest)')","[4840, 22333]"
"('Description.java', 'org.junit.runner.Description', 'methodAndClassNamePatternGroupOrDefault', '([\\s\\S]*)\\((.*)\\)', 'testTrackingRefUpdateEnabled(org.spearce.jgit.transport.PushProcessTest)')","[15694, 33311]"
"('Description.java', 'org.junit.runner.Description', 'methodAndClassNamePatternGroupOrDefault', '([\\s\\S]*)\\((.*)\\)', 'testCloneEmpty(org.spearce.jgit.revwalk.FIFORevQueueTest)')","[12091, 29703]"
"('Description.java', 'org.junit.runner.Description', 'methodAndClassNamePatternGroupOrDefault', '([\\s\\S]*)\\((.*)\\)', 'testParseFullIndexLine_WithMode(org.spearce.jgit.patch.FileHeaderTest)')","[155, 17493]"
"('URIish.java', 'org.spearce.jgit.transport.URIish', '<init>', '^(?:([a-z][a-z0-9+-]+)://(?:([^/]+?)(?::([^/]+?))?@)?(?:([^/]+?))?(?::(\\d+))?)?((?:[A-Za-z]:)?/.+)$', 'git://example.com/D:/m y')","[41622, 41668]"
"('Description.java', 'org.junit.runner.Description', 'methodAndClassNamePatternGroupOrDefault', '([\\s\\S]*)\\((.*)\\)', 'testParseGitFileName_EmptyHeader(org.spearce.jgit.patch.FileHeaderTest)')","[295, 17647]"
"('Description.java', 'org.junit.runner.Description', 'methodAndClassNamePatternGroupOrDefault', '([\\s\\S]*)\\((.*)\\)', 'testSpecialGroupCase4(org.spearce.jgit.fnmatch.FileNameMatcherTest)')","[3160, 20485]"
"('Description.java', 'org.junit.runner.Description', 'methodAndClassNamePatternGroupOrDefault', '([\\s\\S]*)\\((.*)\\)', 'testParse_ShortLineOnlyEmbeddedAndEndingLF(org.spearce.jgit.revwalk.RevCommitParseTest)')","[14260, 31859]"
"('Description.java', 'org.junit.runner.Description', 'methodAndClassNamePatternGroupOrDefault', '([\\s\\S]*)\\((.*)\\)', 'testInvalidTagNoTaggerHeader1(org.spearce.jgit.lib.ObjectCheckerTest)')","[6659, 24313]"
"('Description.java', 'org.junit.runner.Description', 'methodAndClassNamePatternGroupOrDefault', '([\\s\\S]*)\\((.*)\\)', 'testFindRemoteRefUpdatesTwoRefSpecs(org.spearce.jgit.transport.TransportTest)')","[16152, 33773]"
"('Description.java', 'org.junit.runner.Description', 'methodAndClassNamePatternGroupOrDefault', '([\\s\\S]*)\\((.*)\\)', 'testVerySimpleWildCardCase1(org.spearce.jgit.fnmatch.FileNameMatcherTest)')","[3280, 20617]"
"('Description.java', 'org.junit.runner.Description', 'methodAndClassNamePatternGroupOrDefault', '([\\s\\S]*)\\((.*)\\)', 'testHasFlags(org.spearce.jgit.revwalk.LIFORevQueueTest)')","[12270, 29879]"
"('Description.java', 'org.junit.runner.Description', 'methodAndClassNamePatternGroupOrDefault', '([\\s\\S]*)\\((.*)\\)', 'testWindowsFile(org.spearce.jgit.transport.URIishTest)')","[14618, 32211]"
"('Description.java', 'org.junit.runner.Description', 'methodAndClassNamePatternGroupOrDefault', '([\\s\\S]*)\\((.*)\\)', 'testAddLargeBlocks(org.spearce.jgit.revwalk.LIFORevQueueTest)')","[12230, 29835]"
"('Description.java', 'org.junit.runner.Description', 'methodAndClassNamePatternGroupOrDefault', '([\\s\\S]*)\\((.*)\\)', 'testValidCommitNoParent(org.spearce.jgit.lib.ObjectCheckerTest)')","[7359, 25083]"
"('Description.java', 'org.junit.runner.Description', 'methodAndClassNamePatternGroupOrDefault', '([\\s\\S]*)\\((.*)\\)', 'testSpecialGroupCase0(org.spearce.jgit.fnmatch.FileNameMatcherTest)')","[3080, 20397]"
"('Description.java', 'org.junit.runner.Description', 'methodAndClassNamePatternGroupOrDefault', '([\\s\\S]*)\\((.*)\\)', 'testAlnumGroupCase2(org.spearce.jgit.fnmatch.FileNameMatcherTest)')","[5820, 23411]"
"('Description.java', 'org.junit.runner.Description', 'methodAndClassNamePatternGroupOrDefault', '([\\s\\S]*)\\((.*)\\)', 'testWordroupCase2(org.spearce.jgit.fnmatch.FileNameMatcherTest)')","[5700, 23279]"
"('Description.java', 'org.junit.runner.Description', 'methodAndClassNamePatternGroupOrDefault', '([\\s\\S]*)\\((.*)\\)', 'testSingleSubtree_NoRecursion(org.spearce.jgit.dircache.DirCacheIteratorTest)')","[10742, 28449]"
"('Description.java', 'org.junit.runner.Description', 'methodAndClassNamePatternGroupOrDefault', '([\\s\\S]*)\\((.*)\\)', 'testExpandFromDestination_Wildcard(org.spearce.jgit.transport.RefSpecTestCase)')","[15056, 32651]"
"('Description.java', 'org.junit.runner.Description', 'methodAndClassNamePatternGroupOrDefault', '([\\s\\S]*)\\((.*)\\)', 'testTwoRangesInOneGroupCase1(org.spearce.jgit.fnmatch.FileNameMatcherTest)')","[5860, 23455]"
"('Description.java', 'org.junit.runner.Description', 'methodAndClassNamePatternGroupOrDefault', '([\\s\\S]*)\\((.*)\\)', 'testInvalidTagNoTagHeader3(org.spearce.jgit.lib.ObjectCheckerTest)')","[7059, 24753]"
"('Description.java', 'org.junit.runner.Description', 'methodAndClassNamePatternGroupOrDefault', '([\\s\\S]*)\\((.*)\\)', 'testParse_NoMessage(org.spearce.jgit.revwalk.RevCommitParseTest)')","[14080, 31661]"
"('Description.java', 'org.junit.runner.Description', 'methodAndClassNamePatternGroupOrDefault', '([\\s\\S]*)\\((.*)\\)', 'testFilter_NONE_And_ALL(org.spearce.jgit.revwalk.RevWalkFilterTest)')","[13762, 31353]"
"('Description.java', 'org.junit.runner.Description', 'methodAndClassNamePatternGroupOrDefault', '([\\s\\S]*)\\((.*)\\)', 'testParse_OneFileCc(org.spearce.jgit.patch.PatchCcTest)')","[772, 18109]"
"('Description.java', 'org.junit.runner.Description', 'methodAndClassNamePatternGroupOrDefault', '([\\s\\S]*)\\((.*)\\)', 'testTricky(org.spearce.jgit.lib.TreeIteratorLeafOnlyTest)')","[8017, 25765]"
"('QuotedString.java', 'org.spearce.jgit.util.QuotedString$BourneUserPathStyle', 'quote', '^~[A-Za-z0-9_-]*/.*$', '~/a')","[36692, 36739]"
"('Description.java', 'org.junit.runner.Description', 'methodAndClassNamePatternGroupOrDefault', '([\\s\\S]*)\\((.*)\\)', 'org.spearce.jgit.lib.PackReverseIndexTest')","[9707, 38484]"
"('Description.java', 'org.junit.runner.Description', 'methodAndClassNamePatternGroupOrDefault', '([\\s\\S]*)\\((.*)\\)', 'testStringOfPearls_FilePath1(org.spearce.jgit.revwalk.RevWalkPathFilter1Test)')","[11793, 29417]"
"('Description.java', 'org.junit.runner.Description', 'methodAndClassNamePatternGroupOrDefault', '([\\s\\S]*)\\((.*)\\)', 'testValidTree3(org.spearce.jgit.lib.ObjectCheckerTest)')","[6339, 23961]"
"('Description.java', 'org.junit.runner.Description', 'methodAndClassNamePatternGroupOrDefault', '([\\s\\S]*)\\((.*)\\)', 'testInvalidCommitInvalidAuthor7(org.spearce.jgit.lib.ObjectCheckerTest)')","[6919, 24599]"
"('Description.java', 'org.junit.runner.Description', 'methodAndClassNamePatternGroupOrDefault', '([\\s\\S]*)\\((.*)\\)', 'testRemoveRevFlagSet(org.spearce.jgit.revwalk.RevObjectTest)')","[12767, 30363]"
"('Description.java', 'org.junit.runner.Description', 'methodAndClassNamePatternGroupOrDefault', '([\\s\\S]*)\\((.*)\\)', 'test6(org.spearce.jgit.revwalk.RevWalkPathFilter6012Test)')","[13085, 30671]"
"('Description.java', 'org.junit.runner.Description', 'methodAndClassNamePatternGroupOrDefault', '([\\s\\S]*)\\((.*)\\)', 'testFilter_ALL_And_NONE(org.spearce.jgit.revwalk.RevWalkFilterTest)')","[13822, 31419]"
"('Description.java', 'org.junit.runner.Description', 'methodAndClassNamePatternGroupOrDefault', '([\\s\\S]*)\\((.*)\\)', 'testGetText_BothISO88591(org.spearce.jgit.patch.GetTextTest)')","[713, 18065]"
"('Description.java', 'org.junit.runner.Description', 'methodAndClassNamePatternGroupOrDefault', '([\\s\\S]*)\\((.*)\\)', 'test9_FromString(org.spearce.jgit.lib.AbbreviatedObjectIdTest)')","[8693, 26425]"
"('URIish.java', 'org.spearce.jgit.transport.URIish', '<init>', '^(?:([a-z][a-z0-9+-]+)://(?:([^/]+?)(?::([^/]+?))?@)?(?:([^/]+?))?(?::(\\d+))?)?((?:[A-Za-z]:)?/.+)$', 'user@example.com:some/p ath')","[41070, 41162]"
"('Description.java', 'org.junit.runner.Description', 'methodAndClassNamePatternGroupOrDefault', '([\\s\\S]*)\\((.*)\\)', 'testTagTree(org.spearce.jgit.revwalk.RevTagParseTest)')","[13243, 30803]"
"('Description.java', 'org.junit.runner.Description', 'methodAndClassNamePatternGroupOrDefault', '([\\s\\S]*)\\((.*)\\)', 'testInvalidCommitInvalidParent1(org.spearce.jgit.lib.ObjectCheckerTest)')","[6679, 24335]"
"('Description.java', 'org.junit.runner.Description', 'methodAndClassNamePatternGroupOrDefault', '([\\s\\S]*)\\((.*)\\)', 'testBuildOneFile_Commit(org.spearce.jgit.dircache.DirCacheBuilderTest)')","[10941, 28647]"
"('Description.java', 'org.junit.runner.Description', 'methodAndClassNamePatternGroupOrDefault', '([\\s\\S]*)\\((.*)\\)', 'testDequote_Empty1(org.spearce.jgit.util.QuotedStringGitPathStyleTest)')","[2721, 20023]"
"('Description.java', 'org.junit.runner.Description', 'methodAndClassNamePatternGroupOrDefault', '([\\s\\S]*)\\((.*)\\)', 'testOneBlockAndHalf_SingleWrite(org.spearce.jgit.util.TemporaryBufferTest)')","[1607, 18923]"
"('Description.java', 'org.junit.runner.Description', 'methodAndClassNamePatternGroupOrDefault', '([\\s\\S]*)\\((.*)\\)', 'testInvalidTreeTruncatedInName(org.spearce.jgit.lib.ObjectCheckerTest)')","[7579, 25325]"
"('Description.java', 'org.junit.runner.Description', 'methodAndClassNamePatternGroupOrDefault', '([\\s\\S]*)\\((.*)\\)', 'testUpdateExpectedRemote(org.spearce.jgit.transport.PushProcessTest)')","[15594, 33201]"
"('Description.java', 'org.junit.runner.Description', 'methodAndClassNamePatternGroupOrDefault', '([\\s\\S]*)\\((.*)\\)', 'org.spearce.jgit.merge.CherryPickTest')","[990, 35296]"
"('Description.java', 'org.junit.runner.Description', 'methodAndClassNamePatternGroupOrDefault', '([\\s\\S]*)\\((.*)\\)', 'testInvalidCommitNoTree1(org.spearce.jgit.lib.ObjectCheckerTest)')","[7419, 25149]"
"('Description.java', 'org.junit.runner.Description', 'methodAndClassNamePatternGroupOrDefault', '([\\s\\S]*)\\((.*)\\)', 'testEmpty(org.spearce.jgit.util.RawParseUtils_LineMapTest)')","[2164, 19473]"
"('Description.java', 'org.junit.runner.Description', 'methodAndClassNamePatternGroupOrDefault', '([\\s\\S]*)\\((.*)\\)', 'org.spearce.jgit.revwalk.RevWalkSortTest')","[13861, 39810]"
"('Description.java', 'org.junit.runner.Description', 'methodAndClassNamePatternGroupOrDefault', '([\\s\\S]*)\\((.*)\\)', 'testQuote_NamedEscapes(org.spearce.jgit.util.QuotedStringBourneStyleTest)')","[2463, 19781]"
"('Description.java', 'org.junit.runner.Description', 'methodAndClassNamePatternGroupOrDefault', '([\\s\\S]*)\\((.*)\\)', 'org.spearce.jgit.dircache.DirCacheCGitCompatabilityTest')","[11515, 39096]"
"('Description.java', 'org.junit.runner.Description', 'methodAndClassNamePatternGroupOrDefault', '([\\s\\S]*)\\((.*)\\)', 'testContructor(org.spearce.jgit.lib.PackWriterTest)')","[10066, 27789]"
"('URIish.java', 'org.spearce.jgit.transport.URIish', '<init>', '^(?:([a-z][a-z0-9+-]+)://(?:([^/]+?)(?::([^/]+?))?@)?(?:([^/]+?))?(?::(\\d+))?)?((?:[A-Za-z]:)?/.+)$', 'http://everyones.loves.git/u/2')","[43869, 43910, 43951, 43992, 44033]"
"('Description.java', 'org.junit.runner.Description', 'methodAndClassNamePatternGroupOrDefault', '([\\s\\S]*)\\((.*)\\)', 'testEncodeInt16(org.spearce.jgit.util.NBTest)')","[2602, 19913]"
"('Description.java', 'org.junit.runner.Description', 'methodAndClassNamePatternGroupOrDefault', '([\\s\\S]*)\\((.*)\\)', 'testSimpleAlwaysTags(org.spearce.jgit.transport.RemoteConfigTest)')","[15993, 33619]"
"('Description.java', 'org.junit.runner.Description', 'methodAndClassNamePatternGroupOrDefault', '([\\s\\S]*)\\((.*)\\)', 'testWritePack2SizeDeltasVsNoDeltas(org.spearce.jgit.lib.PackWriterTest)')","[10186, 27921]"
"('Description.java', 'org.junit.runner.Description', 'methodAndClassNamePatternGroupOrDefault', '([\\s\\S]*)\\((.*)\\)', 'testGetText_DiffCc(org.spearce.jgit.patch.GetTextTest)')","[673, 18021]"
"('Description.java', 'org.junit.runner.Description', 'methodAndClassNamePatternGroupOrDefault', '([\\s\\S]*)\\((.*)\\)', 'testInvalidTreeDuplicateNames2(org.spearce.jgit.lib.ObjectCheckerTest)')","[7699, 25457]"
"('Description.java', 'org.junit.runner.Description', 'methodAndClassNamePatternGroupOrDefault', '([\\s\\S]*)\\((.*)\\)', 'testAlias_InheritPreferredAuthentications(org.spearce.jgit.transport.OpenSshConfigTest)')","[15375, 32981]"
"('Description.java', 'org.junit.runner.Description', 'methodAndClassNamePatternGroupOrDefault', '([\\s\\S]*)\\((.*)\\)', 'testParseCopy100(org.spearce.jgit.patch.FileHeaderTest)')","[315, 17669]"
"('Description.java', 'org.junit.runner.Description', 'methodAndClassNamePatternGroupOrDefault', '([\\s\\S]*)\\((.*)\\)', 'testParse_GitBinaryLiteral(org.spearce.jgit.patch.PatchTest)')","[911, 18241]"
"('Description.java', 'org.junit.runner.Description', 'methodAndClassNamePatternGroupOrDefault', '([\\s\\S]*)\\((.*)\\)', 'testInvalidCommitInvalidParent4(org.spearce.jgit.lib.ObjectCheckerTest)')","[6739, 24401]"
"('Description.java', 'org.junit.runner.Description', 'methodAndClassNamePatternGroupOrDefault', '([\\s\\S]*)\\((.*)\\)', 'testCloneEmpty(org.spearce.jgit.revwalk.LIFORevQueueTest)')","[12210, 29813]"
"('Description.java', 'org.junit.runner.Description', 'methodAndClassNamePatternGroupOrDefault', '([\\s\\S]*)\\((.*)\\)', 'testANY_DIFF_ShouldNotBeRecursive(org.spearce.jgit.treewalk.filter.TreeFilterTest)')","[17225, 34807]"
"('Description.java', 'org.junit.runner.Description', 'methodAndClassNamePatternGroupOrDefault', '([\\s\\S]*)\\((.*)\\)', 'testCompareEntriesOffsetsWithFindOffsets(org.spearce.jgit.lib.PackIndexV2Test)')","[8971, 26689]"
"('Description.java', 'org.junit.runner.Description', 'methodAndClassNamePatternGroupOrDefault', '([\\s\\S]*)\\((.*)\\)', 'testParse_ShortLineOnlyEndLF(org.spearce.jgit.revwalk.RevCommitParseTest)')","[14240, 31837]"
"('Description.java', 'org.junit.runner.Description', 'methodAndClassNamePatternGroupOrDefault', '([\\s\\S]*)\\((.*)\\)', 'org.spearce.jgit.lib.PackIndexV1Test')","[8194, 38127]"
"('Description.java', 'org.junit.runner.Description', 'methodAndClassNamePatternGroupOrDefault', '([\\s\\S]*)\\((.*)\\)', 'testUnsupportedGroupCase0(org.spearce.jgit.fnmatch.FileNameMatcherTest)')","[4740, 22223]"
"('Description.java', 'org.junit.runner.Description', 'methodAndClassNamePatternGroupOrDefault', '([\\s\\S]*)\\((.*)\\)', 'org.spearce.jgit.patch.GetTextTest')","[653, 35143]"
"('Description.java', 'org.junit.runner.Description', 'methodAndClassNamePatternGroupOrDefault', '([\\s\\S]*)\\((.*)\\)', 'testParseGitFileName_DqFooTabBar(org.spearce.jgit.patch.FileHeaderTest)')","[195, 17537]"
"('Description.java', 'org.junit.runner.Description', 'methodAndClassNamePatternGroupOrDefault', '([\\s\\S]*)\\((.*)\\)', 'testPath_4090(org.spearce.jgit.dircache.DirCacheLargePathTest)')","[11416, 29065]"
"('Description.java', 'org.junit.runner.Description', 'methodAndClassNamePatternGroupOrDefault', '([\\s\\S]*)\\((.*)\\)', 'testCloneEmpty(org.spearce.jgit.revwalk.DateRevQueueTest)')","[11694, 29329]"
"('Description.java', 'org.junit.runner.Description', 'methodAndClassNamePatternGroupOrDefault', '([\\s\\S]*)\\((.*)\\)', 'testDequote_NamedEscapes(org.spearce.jgit.util.QuotedStringBourneStyleTest)')","[2403, 19715]"
"('Description.java', 'org.junit.runner.Description', 'methodAndClassNamePatternGroupOrDefault', '([\\s\\S]*)\\((.*)\\)', 'testTwoEntries_BackwardsTwo(org.spearce.jgit.treewalk.CanonicalTreeParserTest)')","[16630, 34257]"
"('Description.java', 'org.junit.runner.Description', 'methodAndClassNamePatternGroupOrDefault', '([\\s\\S]*)\\((.*)\\)', 'testWriteEmptyCommit_RealIndex(org.spearce.jgit.dircache.DirCacheBasicTest)')","[11020, 28713]"
"('Description.java', 'org.junit.runner.Description', 'methodAndClassNamePatternGroupOrDefault', '([\\s\\S]*)\\((.*)\\)', 'testLowerGroupCase3(org.spearce.jgit.fnmatch.FileNameMatcherTest)')","[3880, 21277]"
"('Description.java', 'org.junit.runner.Description', 'methodAndClassNamePatternGroupOrDefault', '([\\s\\S]*)\\((.*)\\)', 'testEmptyIfRootIsFile(org.spearce.jgit.treewalk.FileTreeIteratorTest)')","[16749, 34367]"
"('Description.java', 'org.junit.runner.Description', 'methodAndClassNamePatternGroupOrDefault', '([\\s\\S]*)\\((.*)\\)', 'testSimpleF2(org.spearce.jgit.lib.TreeIteratorLeafOnlyTest)')","[7977, 25721]"
"('Description.java', 'org.junit.runner.Description', 'methodAndClassNamePatternGroupOrDefault', '([\\s\\S]*)\\((.*)\\)', 'testSaveRemoveLastURI(org.spearce.jgit.transport.RemoteConfigTest)')","[15973, 33597]"
"('Description.java', 'org.junit.runner.Description', 'methodAndClassNamePatternGroupOrDefault', '([\\s\\S]*)\\((.*)\\)', 'testDequote_FooTabBar(org.spearce.jgit.util.QuotedStringGitPathStyleTest)')","[3001, 20331]"
"('Description.java', 'org.junit.runner.Description', 'methodAndClassNamePatternGroupOrDefault', '([\\s\\S]*)\\((.*)\\)', 'testUpdateUnexpectedRemoteVsForce(org.spearce.jgit.transport.PushProcessTest)')","[15514, 33113]"
"('Description.java', 'org.junit.runner.Description', 'methodAndClassNamePatternGroupOrDefault', '([\\s\\S]*)\\((.*)\\)', 'testGitProtoUnixPort(org.spearce.jgit.transport.URIishTest)')","[14518, 32101]"
"('Description.java', 'org.junit.runner.Description', 'methodAndClassNamePatternGroupOrDefault', '([\\s\\S]*)\\((.*)\\)', 'testValidTreeSorting5(org.spearce.jgit.lib.ObjectCheckerTest)')","[6579, 24225]"
"('Description.java', 'org.junit.runner.Description', 'methodAndClassNamePatternGroupOrDefault', '([\\s\\S]*)\\((.*)\\)', 'testAdded(org.spearce.jgit.lib.IndexDiffTest)')","[10265, 27987]"
"('Description.java', 'org.junit.runner.Description', 'methodAndClassNamePatternGroupOrDefault', '([\\s\\S]*)\\((.*)\\)', 'testRules4thru13_IndexEntryNotInHead(org.spearce.jgit.lib.ReadTreeTest)')","[9488, 27195]"
"('Description.java', 'org.junit.runner.Description', 'methodAndClassNamePatternGroupOrDefault', '([\\s\\S]*)\\((.*)\\)', 'testVerySimplePatternCase0(org.spearce.jgit.fnmatch.FileNameMatcherTest)')","[3980, 21387]"
"('QuotedString.java', 'org.spearce.jgit.util.QuotedString$BourneUserPathStyle', 'quote', '^~[A-Za-z0-9_-]+$', '~/a')","[36597, 36644]"
"('URIish.java', 'org.spearce.jgit.transport.URIish', '<init>', '^(?:([^@]+?)@)?([^:]+?):(.+)$', 'user@example.com:some/p ath')","[41116, 41208]"
"('Description.java', 'org.junit.runner.Description', 'methodAndClassNamePatternGroupOrDefault', '([\\s\\S]*)\\((.*)\\)', 'testInvalidCommitInvalidTree2(org.spearce.jgit.lib.ObjectCheckerTest)')","[6179, 23785]"
"('Description.java', 'org.junit.runner.Description', 'methodAndClassNamePatternGroupOrDefault', '([\\s\\S]*)\\((.*)\\)', 'testAlias_BatchModeDefault(org.spearce.jgit.transport.OpenSshConfigTest)')","[15195, 32783]"
"('Description.java', 'org.junit.runner.Description', 'methodAndClassNamePatternGroupOrDefault', '([\\s\\S]*)\\((.*)\\)', 'testManySolutionsCase0(org.spearce.jgit.fnmatch.FileNameMatcherTest)')","[5120, 22641]"
"('Description.java', 'org.junit.runner.Description', 'methodAndClassNamePatternGroupOrDefault', '([\\s\\S]*)\\((.*)\\)', 'testVerySimpleGroupRangeCase1(org.spearce.jgit.fnmatch.FileNameMatcherTest)')","[4640, 22113]"
"('Description.java', 'org.junit.runner.Description', 'methodAndClassNamePatternGroupOrDefault', '([\\s\\S]*)\\((.*)\\)', 'testIncompleteRangesInOneGroupCase2(org.spearce.jgit.fnmatch.FileNameMatcherTest)')","[4980, 22487]"
"('Description.java', 'org.junit.runner.Description', 'methodAndClassNamePatternGroupOrDefault', '([\\s\\S]*)\\((.*)\\)', 'testDeleteNotFound(org.spearce.jgit.lib.RefUpdateTest)')","[10364, 28075]"
"('Description.java', 'org.junit.runner.Description', 'methodAndClassNamePatternGroupOrDefault', '([\\s\\S]*)\\((.*)\\)', 'testParse_implicit_mixed_encoded(org.spearce.jgit.revwalk.RevCommitParseTest)')","[14040, 31617]"
"('Description.java', 'org.junit.runner.Description', 'methodAndClassNamePatternGroupOrDefault', '([\\s\\S]*)\\((.*)\\)', 'testANY_DIFF_IncludesSingleTreeCase(org.spearce.jgit.treewalk.filter.TreeFilterTest)')","[17185, 34763]"
"('Description.java', 'org.junit.runner.Description', 'methodAndClassNamePatternGroupOrDefault', '([\\s\\S]*)\\((.*)\\)', 'testNoConfig(org.spearce.jgit.transport.OpenSshConfigTest)')","[15355, 32959]"
"('Description.java', 'org.junit.runner.Description', 'methodAndClassNamePatternGroupOrDefault', '([\\s\\S]*)\\((.*)\\)', 'testValidTag(org.spearce.jgit.lib.ObjectCheckerTest)')","[6419, 24049]"
"('Description.java', 'org.junit.runner.Description', 'methodAndClassNamePatternGroupOrDefault', '([\\s\\S]*)\\((.*)\\)', 'testCloneIsDeepClone(org.spearce.jgit.treewalk.filter.NotTreeFilterTest)')","[17066, 34653]"
"('Description.java', 'org.junit.runner.Description', 'methodAndClassNamePatternGroupOrDefault', '([\\s\\S]*)\\((.*)\\)', 'testFillTo1(org.spearce.jgit.util.IntListTest)')","[1766, 19077]"
"('Description.java', 'org.junit.runner.Description', 'methodAndClassNamePatternGroupOrDefault', '([\\s\\S]*)\\((.*)\\)', 'testTrivialTwoWay_leftDFconflict1(org.spearce.jgit.merge.SimpleMergeTest)')","[1169, 18483]"
"('Description.java', 'org.junit.runner.Description', 'methodAndClassNamePatternGroupOrDefault', '([\\s\\S]*)\\((.*)\\)', 'testLowerGroupCase4(org.spearce.jgit.fnmatch.FileNameMatcherTest)')","[3900, 21299]"
"('Description.java', 'org.junit.runner.Description', 'methodAndClassNamePatternGroupOrDefault', '([\\s\\S]*)\\((.*)\\)', 'testClear(org.spearce.jgit.revwalk.AlwaysEmptyRevQueueTest)')","[11972, 29593]"
"('Description.java', 'org.junit.runner.Description', 'methodAndClassNamePatternGroupOrDefault', '([\\s\\S]*)\\((.*)\\)', 'org.spearce.jgit.lib.RefUpdateTest')","[10324, 38637]"
"('Description.java', 'org.junit.runner.Description', 'methodAndClassNamePatternGroupOrDefault', '([\\s\\S]*)\\((.*)\\)', 'org.spearce.jgit.treewalk.AbstractTreeIteratorTest')","[17324, 44492]"
"('Description.java', 'org.junit.runner.Description', 'methodAndClassNamePatternGroupOrDefault', '([\\s\\S]*)\\((.*)\\)', 'testInversedGroupCase2(org.spearce.jgit.fnmatch.FileNameMatcherTest)')","[4200, 21629]"
"('Description.java', 'org.junit.runner.Description', 'methodAndClassNamePatternGroupOrDefault', '([\\s\\S]*)\\((.*)\\)', 'testTwoRangesInOneGroupCase0(org.spearce.jgit.fnmatch.FileNameMatcherTest)')","[5840, 23433]"
"('Description.java', 'org.junit.runner.Description', 'methodAndClassNamePatternGroupOrDefault', '([\\s\\S]*)\\((.*)\\)', 'testDequote_RawUTF8(org.spearce.jgit.util.QuotedStringGitPathStyleTest)')","[2841, 20155]"
"('Description.java', 'org.junit.runner.Description', 'methodAndClassNamePatternGroupOrDefault', '([\\s\\S]*)\\((.*)\\)', 'testMixedGroupCase3(org.spearce.jgit.fnmatch.FileNameMatcherTest)')","[3480, 20837]"
"('Description.java', 'org.junit.runner.Description', 'methodAndClassNamePatternGroupOrDefault', '([\\s\\S]*)\\((.*)\\)', 'testTrivialTwoWay_leftDFconflict2(org.spearce.jgit.merge.SimpleMergeTest)')","[1189, 18505]"
"('Description.java', 'org.junit.runner.Description', 'methodAndClassNamePatternGroupOrDefault', '([\\s\\S]*)\\((.*)\\)', 'testParse_ShortLineOnlyEndLF(org.spearce.jgit.revwalk.RevTagParseTest)')","[13463, 31045]"
"('Description.java', 'org.junit.runner.Description', 'methodAndClassNamePatternGroupOrDefault', '([\\s\\S]*)\\((.*)\\)', 'test17_FromString(org.spearce.jgit.lib.AbbreviatedObjectIdTest)')","[8413, 26117]"
"('Description.java', 'org.junit.runner.Description', 'methodAndClassNamePatternGroupOrDefault', '([\\s\\S]*)\\((.*)\\)', 'testDequote_BareA(org.spearce.jgit.util.QuotedStringBourneUserPathStyleTest)')","[2005, 19319]"
"('Description.java', 'org.junit.runner.Description', 'methodAndClassNamePatternGroupOrDefault', '([\\s\\S]*)\\((.*)\\)', 'org.spearce.jgit.dircache.DirCacheTreeTest')","[11179, 38892]"
"('Description.java', 'org.junit.runner.Description', 'methodAndClassNamePatternGroupOrDefault', '([\\s\\S]*)\\((.*)\\)', 'testInvalidCommitInvalidCommitter(org.spearce.jgit.lib.ObjectCheckerTest)')","[7339, 25061]"
"('Description.java', 'org.junit.runner.Description', 'methodAndClassNamePatternGroupOrDefault', '([\\s\\S]*)\\((.*)\\)', 'testQuoteParsing(org.spearce.jgit.transport.OpenSshConfigTest)')","[15275, 32871]"
"('Description.java', 'org.junit.runner.Description', 'methodAndClassNamePatternGroupOrDefault', '([\\s\\S]*)\\((.*)\\)', 'testParse_ShortLineOnlyNoLF(org.spearce.jgit.revwalk.RevCommitParseTest)')","[14160, 31749]"
"('Description.java', 'org.junit.runner.Description', 'methodAndClassNamePatternGroupOrDefault', '([\\s\\S]*)\\((.*)\\)', 'testTwoLevelSubtree_Recursive(org.spearce.jgit.dircache.DirCacheIteratorTest)')","[10782, 28493]"
"('Description.java', 'org.junit.runner.Description', 'methodAndClassNamePatternGroupOrDefault', '([\\s\\S]*)\\((.*)\\)', 'testFilter_NONE_Or_MY_ALL(org.spearce.jgit.revwalk.RevWalkFilterTest)')","[13742, 31331]"
"('Description.java', 'org.junit.runner.Description', 'methodAndClassNamePatternGroupOrDefault', '([\\s\\S]*)\\((.*)\\)', 'testInitialize_TogglePostOrder(org.spearce.jgit.treewalk.PostOrderTreeWalkTest)')","[16947, 34543]"
"('Description.java', 'org.junit.runner.Description', 'methodAndClassNamePatternGroupOrDefault', '([\\s\\S]*)\\((.*)\\)', 'testFilePathSimpleCase(org.spearce.jgit.fnmatch.FileNameMatcherTest)')","[3760, 21145]"
"('Description.java', 'org.junit.runner.Description', 'methodAndClassNamePatternGroupOrDefault', '([\\s\\S]*)\\((.*)\\)', 'testDigitGroupCase4(org.spearce.jgit.fnmatch.FileNameMatcherTest)')","[4580, 22047]"
"('Description.java', 'org.junit.runner.Description', 'methodAndClassNamePatternGroupOrDefault', '([\\s\\S]*)\\((.*)\\)', 'testUpdateFastForward(org.spearce.jgit.transport.PushProcessTest)')","[15494, 33091]"
"('QuotedString.java', 'org.spearce.jgit.util.QuotedString$BourneUserPathStyle', 'quote', '^~[A-Za-z0-9_-]*/.*$', ""'"")","[36885, 36933]"
"('Description.java', 'org.junit.runner.Description', 'methodAndClassNamePatternGroupOrDefault', '([\\s\\S]*)\\((.*)\\)', 'testDirectoryFileConflicts_2(org.spearce.jgit.lib.ReadTreeTest)')","[9348, 27041]"
"('Description.java', 'org.junit.runner.Description', 'methodAndClassNamePatternGroupOrDefault', '([\\s\\S]*)\\((.*)\\)', 'testSimpleF1(org.spearce.jgit.lib.TreeIteratorPostOrderTest)')","[9089, 26777]"
"('Description.java', 'org.junit.runner.Description', 'methodAndClassNamePatternGroupOrDefault', '([\\s\\S]*)\\((.*)\\)', 'testEmpty(org.spearce.jgit.lib.TreeIteratorPreOrderTest)')","[10543, 28251]"
"('Description.java', 'org.junit.runner.Description', 'methodAndClassNamePatternGroupOrDefault', '([\\s\\S]*)\\((.*)\\)', 'org.spearce.jgit.revwalk.RevWalkFilterTest')","[13562, 39759]"
"('Description.java', 'org.junit.runner.Description', 'methodAndClassNamePatternGroupOrDefault', '([\\s\\S]*)\\((.*)\\)', 'testXDigitGroupCase6(org.spearce.jgit.fnmatch.FileNameMatcherTest)')","[5620, 23191]"
"('Description.java', 'org.junit.runner.Description', 'methodAndClassNamePatternGroupOrDefault', '([\\s\\S]*)\\((.*)\\)', 'testGraphGroupCase1(org.spearce.jgit.fnmatch.FileNameMatcherTest)')","[3660, 21035]"
"('Description.java', 'org.junit.runner.Description', 'methodAndClassNamePatternGroupOrDefault', '([\\s\\S]*)\\((.*)\\)', 'testUnchangedSimple(org.spearce.jgit.lib.IndexDiffTest)')","[10245, 27965]"
"('Description.java', 'org.junit.runner.Description', 'methodAndClassNamePatternGroupOrDefault', '([\\s\\S]*)\\((.*)\\)', 'org.spearce.jgit.treewalk.filter.NotTreeFilterTest')","[17026, 44390]"
"('Description.java', 'org.junit.runner.Description', 'methodAndClassNamePatternGroupOrDefault', '([\\s\\S]*)\\((.*)\\)', 'testDirectoryFileConflicts_11(org.spearce.jgit.lib.ReadTreeTest)')","[9528, 27239]"
"('Description.java', 'org.junit.runner.Description', 'methodAndClassNamePatternGroupOrDefault', '([\\s\\S]*)\\((.*)\\)', 'testParseGitFileName_SrcFooC(org.spearce.jgit.patch.FileHeaderTest)')","[355, 17713]"
"('Description.java', 'org.junit.runner.Description', 'methodAndClassNamePatternGroupOrDefault', '([\\s\\S]*)\\((.*)\\)', 'testValidCommitBlankAuthor(org.spearce.jgit.lib.ObjectCheckerTest)')","[7139, 24841]"
"('Description.java', 'org.junit.runner.Description', 'methodAndClassNamePatternGroupOrDefault', '([\\s\\S]*)\\((.*)\\)', 'testStringOfPearls_FilePath2(org.spearce.jgit.revwalk.RevWalkPathFilter1Test)')","[11813, 29439]"
"('Description.java', 'org.junit.runner.Description', 'methodAndClassNamePatternGroupOrDefault', '([\\s\\S]*)\\((.*)\\)', 'testLeavingTree(org.spearce.jgit.lib.IndexTreeWalkerTest)')","[8095, 25809]"
"('Description.java', 'org.junit.runner.Description', 'methodAndClassNamePatternGroupOrDefault', '([\\s\\S]*)\\((.*)\\)', 'testInvalidCommitNoTree2(org.spearce.jgit.lib.ObjectCheckerTest)')","[7439, 25171]"
"('Description.java', 'org.junit.runner.Description', 'methodAndClassNamePatternGroupOrDefault', '([\\s\\S]*)\\((.*)\\)', 'testCntrlGroupCase0(org.spearce.jgit.fnmatch.FileNameMatcherTest)')","[3940, 21343]"
"('Description.java', 'org.junit.runner.Description', 'methodAndClassNamePatternGroupOrDefault', '([\\s\\S]*)\\((.*)\\)', 'testInvalidTagNoTagHeader1(org.spearce.jgit.lib.ObjectCheckerTest)')","[7019, 24709]"
"('URIish.java', 'org.spearce.jgit.transport.URIish', '<init>', '^(?:([a-z][a-z0-9+-]+)://(?:([^/]+?)(?::([^/]+?))?@)?(?:([^/]+?))?(?::(\\d+))?)?((?:[A-Za-z]:)?/.+)$', 'user@repo.or.cz:/srv/git/egit.git')",[43590]
"('Description.java', 'org.junit.runner.Description', 'methodAndClassNamePatternGroupOrDefault', '([\\s\\S]*)\\((.*)\\)', 'testForceRemotesOrigin(org.spearce.jgit.transport.RefSpecTestCase)')","[15036, 32629]"
"('Description.java', 'org.junit.runner.Description', 'methodAndClassNamePatternGroupOrDefault', '([\\s\\S]*)\\((.*)\\)', 'testDequote_BareABCZ_OnlyBC(org.spearce.jgit.util.QuotedStringBourneStyleTest)')","[2283, 19583]"
"('Description.java', 'org.junit.runner.Description', 'methodAndClassNamePatternGroupOrDefault', '([\\s\\S]*)\\((.*)\\)', 'testAlnumGroupCase1(org.spearce.jgit.fnmatch.FileNameMatcherTest)')","[5800, 23389]"
"('Description.java', 'org.junit.runner.Description', 'methodAndClassNamePatternGroupOrDefault', '([\\s\\S]*)\\((.*)\\)', 'testUpperGroupCase3(org.spearce.jgit.fnmatch.FileNameMatcherTest)')","[5280, 22817]"
"('Description.java', 'org.junit.runner.Description', 'methodAndClassNamePatternGroupOrDefault', '([\\s\\S]*)\\((.*)\\)', 'testInCoreLimit_SwitchBeforeAppendByte(org.spearce.jgit.util.TemporaryBufferTest)')","[1527, 18835]"
"('Description.java', 'org.junit.runner.Description', 'methodAndClassNamePatternGroupOrDefault', '([\\s\\S]*)\\((.*)\\)', 'org.spearce.jgit.patch.PatchCcTest')","[752, 35194]"
"('Description.java', 'org.junit.runner.Description', 'methodAndClassNamePatternGroupOrDefault', '([\\s\\S]*)\\((.*)\\)', 'testCheckingOutWithConflicts(org.spearce.jgit.lib.WorkDirCheckoutTest)')","[9010, 26711]"
"('Description.java', 'org.junit.runner.Description', 'methodAndClassNamePatternGroupOrDefault', '([\\s\\S]*)\\((.*)\\)', 'testSimpleNoTags(org.spearce.jgit.transport.RemoteConfigTest)')","[15893, 33509]"
"('Description.java', 'org.junit.runner.Description', 'methodAndClassNamePatternGroupOrDefault', '([\\s\\S]*)\\((.*)\\)', 'org.spearce.jgit.patch.PatchCcErrorTest')","[36, 34990]"
"('Description.java', 'org.junit.runner.Description', 'methodAndClassNamePatternGroupOrDefault', '([\\s\\S]*)\\((.*)\\)', 'testStringOfPearls_FilePath3(org.spearce.jgit.revwalk.RevWalkPathFilter1Test)')","[11833, 29461]"
"('Description.java', 'org.junit.runner.Description', 'methodAndClassNamePatternGroupOrDefault', '([\\s\\S]*)\\((.*)\\)', 'org.spearce.jgit.util.RawParseUtils_MatchTest')","[1308, 35398]"
"('Description.java', 'org.junit.runner.Description', 'methodAndClassNamePatternGroupOrDefault', '([\\s\\S]*)\\((.*)\\)', 'testTwoCommitsEmptyTree(org.spearce.jgit.revwalk.ObjectWalkTest)')","[12429, 30033]"
"('Description.java', 'org.junit.runner.Description', 'methodAndClassNamePatternGroupOrDefault', '([\\s\\S]*)\\((.*)\\)', 'testFindSingleFile(org.spearce.jgit.dircache.DirCacheBuilderTest)')","[10861, 28559]"
"('Description.java', 'org.junit.runner.Description', 'methodAndClassNamePatternGroupOrDefault', '([\\s\\S]*)\\((.*)\\)', 'testWordroupCase1(org.spearce.jgit.fnmatch.FileNameMatcherTest)')","[5680, 23257]"
"('Description.java', 'org.junit.runner.Description', 'methodAndClassNamePatternGroupOrDefault', '([\\s\\S]*)\\((.*)\\)', 'testDequote_Empty1(org.spearce.jgit.util.QuotedStringBourneStyleTest)')","[2303, 19605]"
"('Description.java', 'org.junit.runner.Description', 'methodAndClassNamePatternGroupOrDefault', '([\\s\\S]*)\\((.*)\\)', 'testPunctGroupCase0(org.spearce.jgit.fnmatch.FileNameMatcherTest)')","[4780, 22267]"
"('Description.java', 'org.junit.runner.Description', 'methodAndClassNamePatternGroupOrDefault', '([\\s\\S]*)\\((.*)\\)', 'testInvalidTagNoType3(org.spearce.jgit.lib.ObjectCheckerTest)')","[7539, 25281]"
"('Description.java', 'org.junit.runner.Description', 'methodAndClassNamePatternGroupOrDefault', '([\\s\\S]*)\\((.*)\\)', 'testInvalidCommitInvalidAuthor4(org.spearce.jgit.lib.ObjectCheckerTest)')","[6859, 24533]"
"('Description.java', 'org.junit.runner.Description', 'methodAndClassNamePatternGroupOrDefault', '([\\s\\S]*)\\((.*)\\)', 'testPrintGroupCase5(org.spearce.jgit.fnmatch.FileNameMatcherTest)')","[5100, 22619]"
"('Description.java', 'org.junit.runner.Description', 'methodAndClassNamePatternGroupOrDefault', '([\\s\\S]*)\\((.*)\\)', 'testEntriesWithin(org.spearce.jgit.dircache.DirCacheFindTest)')","[11338, 29021]"
"('Description.java', 'org.junit.runner.Description', 'methodAndClassNamePatternGroupOrDefault', '([\\s\\S]*)\\((.*)\\)', 'testInvalidCommitInvalidAuthor3(org.spearce.jgit.lib.ObjectCheckerTest)')","[6839, 24511]"
"('Description.java', 'org.junit.runner.Description', 'methodAndClassNamePatternGroupOrDefault', '([\\s\\S]*)\\((.*)\\)', 'testMixedGroupCase5(org.spearce.jgit.fnmatch.FileNameMatcherTest)')","[3520, 20881]"
"('Description.java', 'org.junit.runner.Description', 'methodAndClassNamePatternGroupOrDefault', '([\\s\\S]*)\\((.*)\\)', 'testFilePathCase3(org.spearce.jgit.fnmatch.FileNameMatcherTest)')","[4920, 22421]"
"('Description.java', 'org.junit.runner.Description', 'methodAndClassNamePatternGroupOrDefault', '([\\s\\S]*)\\((.*)\\)', 'testTrackingRefUpdateOnReject(org.spearce.jgit.transport.PushProcessTest)')","[15454, 33047]"
"('Description.java', 'org.junit.runner.Description', 'methodAndClassNamePatternGroupOrDefault', '([\\s\\S]*)\\((.*)\\)', 'testDirectoryFileConflicts_10(org.spearce.jgit.lib.ReadTreeTest)')","[9508, 27217]"
"('Description.java', 'org.junit.runner.Description', 'methodAndClassNamePatternGroupOrDefault', '([\\s\\S]*)\\((.*)\\)', 'testDigitGroupCase0(org.spearce.jgit.fnmatch.FileNameMatcherTest)')","[4500, 21959]"
"('Description.java', 'org.junit.runner.Description', 'methodAndClassNamePatternGroupOrDefault', '([\\s\\S]*)\\((.*)\\)', 'testHasFlags(org.spearce.jgit.revwalk.DateRevQueueTest)')","[11734, 29373]"
"('Description.java', 'org.junit.runner.Description', 'methodAndClassNamePatternGroupOrDefault', '([\\s\\S]*)\\((.*)\\)', 'testDeleteEmptyDirs(org.spearce.jgit.lib.RefUpdateTest)')","[10424, 28141]"
"('Description.java', 'org.junit.runner.Description', 'methodAndClassNamePatternGroupOrDefault', '([\\s\\S]*)\\((.*)\\)', 'testDirectoryFileSimple(org.spearce.jgit.lib.ReadTreeTest)')","[9208, 26887]"
"('QuotedString.java', 'org.spearce.jgit.util.QuotedString$BourneUserPathStyle', 'quote', '^~[A-Za-z0-9_-]*/.*$', '~/')","[36312, 36359]"
"('Description.java', 'org.junit.runner.Description', 'methodAndClassNamePatternGroupOrDefault', '([\\s\\S]*)\\((.*)\\)', 'test001_ReadBareKey(org.spearce.jgit.lib.RepositoryConfigTest)')","[7838, 25589]"
"('Description.java', 'org.junit.runner.Description', 'methodAndClassNamePatternGroupOrDefault', '([\\s\\S]*)\\((.*)\\)', 'testWritePack2SizeOffsetsVsRefs(org.spearce.jgit.lib.PackWriterTest)')","[10146, 27877]"
"('Description.java', 'org.junit.runner.Description', 'methodAndClassNamePatternGroupOrDefault', '([\\s\\S]*)\\((.*)\\)', 'testSimpleF2(org.spearce.jgit.lib.TreeIteratorPostOrderTest)')","[9109, 26799]"
"('Description.java', 'org.junit.runner.Description', 'methodAndClassNamePatternGroupOrDefault', '([\\s\\S]*)\\((.*)\\)', 'testEquals_Full(org.spearce.jgit.lib.AbbreviatedObjectIdTest)')","[8333, 26029]"
"('Description.java', 'org.junit.runner.Description', 'methodAndClassNamePatternGroupOrDefault', '([\\s\\S]*)\\((.*)\\)', 'testPath_16384(org.spearce.jgit.dircache.DirCacheLargePathTest)')","[11496, 29153]"
"('Description.java', 'org.junit.runner.Description', 'methodAndClassNamePatternGroupOrDefault', '([\\s\\S]*)\\((.*)\\)', 'testIteratorReturnedValues2(org.spearce.jgit.lib.PackIndexV2Test)')","[8951, 26667]"
"('Description.java', 'org.junit.runner.Description', 'methodAndClassNamePatternGroupOrDefault', '([\\s\\S]*)\\((.*)\\)', 'testUnsupportedGroupCase1(org.spearce.jgit.fnmatch.FileNameMatcherTest)')","[4760, 22245]"
"('Description.java', 'org.junit.runner.Description', 'methodAndClassNamePatternGroupOrDefault', '([\\s\\S]*)\\((.*)\\)', 'testQuote_Empty(org.spearce.jgit.util.QuotedStringBourneStyleTest)')","[2443, 19759]"
"('QuotedString.java', 'org.spearce.jgit.util.QuotedString$BourneUserPathStyle', 'quote', '^~[A-Za-z0-9_-]*/.*$', ""a'b"")","[37273, 37321]"
"('URIish.java', 'org.spearce.jgit.transport.URIish', '<init>', '^(?:([a-z][a-z0-9+-]+)://(?:([^/]+?)(?::([^/]+?))?@)?(?:([^/]+?))?(?::(\\d+))?)?((?:[A-Za-z]:)?/.+)$', 'ssh://user:pass@example.com:33/some/p ath')","[40426, 40472]"
"('Description.java', 'org.junit.runner.Description', 'methodAndClassNamePatternGroupOrDefault', '([\\s\\S]*)\\((.*)\\)', 'testInversedGroupCase0(org.spearce.jgit.fnmatch.FileNameMatcherTest)')","[4160, 21585]"
"('Description.java', 'org.junit.runner.Description', 'methodAndClassNamePatternGroupOrDefault', '([\\s\\S]*)\\((.*)\\)', 'testDequote_SoleDq(org.spearce.jgit.util.QuotedStringGitPathStyleTest)')","[2801, 20111]"
"('QuotedString.java', 'org.spearce.jgit.util.QuotedString$BourneUserPathStyle', 'quote', '^~[A-Za-z0-9_-]+$', '~foo')","[35932, 35979]"
"('Description.java', 'org.junit.runner.Description', 'methodAndClassNamePatternGroupOrDefault', '([\\s\\S]*)\\((.*)\\)', 'testWordroupCase3(org.spearce.jgit.fnmatch.FileNameMatcherTest)')","[5720, 23301]"
"('Description.java', 'org.junit.runner.Description', 'methodAndClassNamePatternGroupOrDefault', '([\\s\\S]*)\\((.*)\\)', 'testDequote_LoneBackslash(org.spearce.jgit.util.QuotedStringGitPathStyleTest)')","[2761, 20067]"
"('Description.java', 'org.junit.runner.Description', 'methodAndClassNamePatternGroupOrDefault', '([\\s\\S]*)\\((.*)\\)', 'testDecodeUInt64(org.spearce.jgit.util.NBTest)')","[2542, 19847]"
"('Description.java', 'org.junit.runner.Description', 'methodAndClassNamePatternGroupOrDefault', '([\\s\\S]*)\\((.*)\\)', 'testWordroupCase4(org.spearce.jgit.fnmatch.FileNameMatcherTest)')","[5740, 23323]"
"('Description.java', 'org.junit.runner.Description', 'methodAndClassNamePatternGroupOrDefault', '([\\s\\S]*)\\((.*)\\)', 'testParse_explicit_encoded(org.spearce.jgit.revwalk.RevTagParseTest)')","[13543, 31133]"
"('Description.java', 'org.junit.runner.Description', 'methodAndClassNamePatternGroupOrDefault', '([\\s\\S]*)\\((.*)\\)', 'testDeleteForce(org.spearce.jgit.lib.RefUpdateTest)')","[10344, 28053]"
"('Description.java', 'org.junit.runner.Description', 'methodAndClassNamePatternGroupOrDefault', '([\\s\\S]*)\\((.*)\\)', 'testEqualsIsIdentity(org.spearce.jgit.revwalk.RevObjectTest)')","[12787, 30385]"
"('Description.java', 'org.junit.runner.Description', 'methodAndClassNamePatternGroupOrDefault', '([\\s\\S]*)\\((.*)\\)', 'testDequote_User(org.spearce.jgit.util.QuotedStringBourneUserPathStyleTest)')","[2125, 19451]"
"('Description.java', 'org.junit.runner.Description', 'methodAndClassNamePatternGroupOrDefault', '([\\s\\S]*)\\((.*)\\)', 'testUNC(org.spearce.jgit.transport.URIishTest)')","[14398, 31969]"
"('Description.java', 'org.junit.runner.Description', 'methodAndClassNamePatternGroupOrDefault', '([\\s\\S]*)\\((.*)\\)', 'testCloneIsSparseWhenPossible(org.spearce.jgit.treewalk.filter.NotTreeFilterTest)')","[17126, 34719]"
"('Description.java', 'org.junit.runner.Description', 'methodAndClassNamePatternGroupOrDefault', '([\\s\\S]*)\\((.*)\\)', 'testCreateEmpty(org.spearce.jgit.transport.RefSpecTestCase)')","[14876, 32453]"
"('Description.java', 'org.junit.runner.Description', 'methodAndClassNamePatternGroupOrDefault', '([\\s\\S]*)\\((.*)\\)', 'testNoSubtree_NoTreeWalk(org.spearce.jgit.dircache.DirCacheIteratorTest)')","[10762, 28471]"
"('Description.java', 'org.junit.runner.Description', 'methodAndClassNamePatternGroupOrDefault', '([\\s\\S]*)\\((.*)\\)', 'testInvalidTagNoObject3(org.spearce.jgit.lib.ObjectCheckerTest)')","[7239, 24951]"
"('Description.java', 'org.junit.runner.Description', 'methodAndClassNamePatternGroupOrDefault', '([\\s\\S]*)\\((.*)\\)', 'testTrivialTwoWay_conflict(org.spearce.jgit.merge.SimpleMergeTest)')","[1229, 18549]"
"('Description.java', 'org.junit.runner.Description', 'methodAndClassNamePatternGroupOrDefault', '([\\s\\S]*)\\((.*)\\)', 'testError_TruncatedNew(org.spearce.jgit.patch.PatchErrorTest)')","[554, 17911]"
"('Description.java', 'org.junit.runner.Description', 'methodAndClassNamePatternGroupOrDefault', '([\\s\\S]*)\\((.*)\\)', 'testUnpopAtFront(org.spearce.jgit.revwalk.FIFORevQueueTest)')","[12051, 29659]"
"('Description.java', 'org.junit.runner.Description', 'methodAndClassNamePatternGroupOrDefault', '([\\s\\S]*)\\((.*)\\)', 'testBlankGroupCase2(org.spearce.jgit.fnmatch.FileNameMatcherTest)')","[5380, 22927]"
"('Description.java', 'org.junit.runner.Description', 'methodAndClassNamePatternGroupOrDefault', '([\\s\\S]*)\\((.*)\\)', 'testContains(org.spearce.jgit.revwalk.RevFlagSetTest)')","[12866, 30451]"
"('Description.java', 'org.junit.runner.Description', 'methodAndClassNamePatternGroupOrDefault', '([\\s\\S]*)\\((.*)\\)', 'org.spearce.jgit.transport.PushProcessTest')","[15394, 42291]"
"('Description.java', 'org.junit.runner.Description', 'methodAndClassNamePatternGroupOrDefault', '([\\s\\S]*)\\((.*)\\)', 'testTwoRangesInOneGroupCase3(org.spearce.jgit.fnmatch.FileNameMatcherTest)')","[5900, 23499]"
"('Description.java', 'org.junit.runner.Description', 'methodAndClassNamePatternGroupOrDefault', '([\\s\\S]*)\\((.*)\\)', 'testClear(org.spearce.jgit.util.IntListTest)')","[1786, 19099]"
"('Description.java', 'org.junit.runner.Description', 'methodAndClassNamePatternGroupOrDefault', '([\\s\\S]*)\\((.*)\\)', 'testDirectoryFileConflicts_14(org.spearce.jgit.lib.ReadTreeTest)')","[9588, 27305]"
"('Description.java', 'org.junit.runner.Description', 'methodAndClassNamePatternGroupOrDefault', '([\\s\\S]*)\\((.*)\\)', 'testWritePack4ThinPack(org.spearce.jgit.lib.PackWriterTest)')","[10026, 27745]"
"('Description.java', 'org.junit.runner.Description', 'methodAndClassNamePatternGroupOrDefault', '([\\s\\S]*)\\((.*)\\)', 'testParse_GitStyleMessage(org.spearce.jgit.revwalk.RevTagParseTest)')","[13363, 30935]"
"('Description.java', 'org.junit.runner.Description', 'methodAndClassNamePatternGroupOrDefault', '([\\s\\S]*)\\((.*)\\)', 'testPick(org.spearce.jgit.merge.CherryPickTest)')","[1010, 18329]"
"('Description.java', 'org.junit.runner.Description', 'methodAndClassNamePatternGroupOrDefault', '([\\s\\S]*)\\((.*)\\)', 'org.spearce.jgit.transport.TransportTest')","[16132, 44084]"
"('Description.java', 'org.junit.runner.Description', 'methodAndClassNamePatternGroupOrDefault', '([\\s\\S]*)\\((.*)\\)', 'testInCoreLimit_SwitchOnAppendByte(org.spearce.jgit.util.TemporaryBufferTest)')","[1487, 18791]"
"('Description.java', 'org.junit.runner.Description', 'methodAndClassNamePatternGroupOrDefault', '([\\s\\S]*)\\((.*)\\)', 'testError_DisconnectedHunk(org.spearce.jgit.patch.PatchErrorTest)')","[534, 17889]"
"('Description.java', 'org.junit.runner.Description', 'methodAndClassNamePatternGroupOrDefault', '([\\s\\S]*)\\((.*)\\)', 'testCompareUInt32(org.spearce.jgit.util.NBTest)')","[2582, 19891]"
"('Description.java', 'org.junit.runner.Description', 'methodAndClassNamePatternGroupOrDefault', '([\\s\\S]*)\\((.*)\\)', 'testFull_FromByteArray(org.spearce.jgit.lib.AbbreviatedObjectIdTest)')","[8473, 26183]"
"('Description.java', 'org.junit.runner.Description', 'methodAndClassNamePatternGroupOrDefault', '([\\s\\S]*)\\((.*)\\)', 'testDequote_BareA(org.spearce.jgit.util.QuotedStringGitPathStyleTest)')","[2861, 20177]"
"('QuotedString.java', 'org.spearce.jgit.util.QuotedString$BourneUserPathStyle', 'quote', '^~[A-Za-z0-9_-]+$', '~foo/')","[36027, 36074]"
"('Description.java', 'org.junit.runner.Description', 'methodAndClassNamePatternGroupOrDefault', '([\\s\\S]*)\\((.*)\\)', 'testInvalidTreeModeNotOctal1(org.spearce.jgit.lib.ObjectCheckerTest)')","[6119, 23719]"
"('Description.java', 'org.junit.runner.Description', 'methodAndClassNamePatternGroupOrDefault', '([\\s\\S]*)\\((.*)\\)', 'testInsertTie(org.spearce.jgit.revwalk.DateRevQueueTest)')","[11674, 29307]"
"('Description.java', 'org.junit.runner.Description', 'methodAndClassNamePatternGroupOrDefault', '([\\s\\S]*)\\((.*)\\)', 'testGetText_NoBinary(org.spearce.jgit.patch.GetTextTest)')","[693, 18043]"
"('Description.java', 'org.junit.runner.Description', 'methodAndClassNamePatternGroupOrDefault', '([\\s\\S]*)\\((.*)\\)', 'testDequote_Empty2(org.spearce.jgit.util.QuotedStringBourneStyleTest)')","[2323, 19627]"
"('Description.java', 'org.junit.runner.Description', 'methodAndClassNamePatternGroupOrDefault', '([\\s\\S]*)\\((.*)\\)', 'testPunctGroupCase2(org.spearce.jgit.fnmatch.FileNameMatcherTest)')","[4820, 22311]"
"('Description.java', 'org.junit.runner.Description', 'methodAndClassNamePatternGroupOrDefault', '([\\s\\S]*)\\((.*)\\)', 'testSaveNoTags(org.spearce.jgit.transport.RemoteConfigTest)')","[15933, 33553]"
"('Description.java', 'org.junit.runner.Description', 'methodAndClassNamePatternGroupOrDefault', '([\\s\\S]*)\\((.*)\\)', 'testStringOfPearls_DirPath2(org.spearce.jgit.revwalk.RevWalkPathFilter1Test)')","[11853, 29483]"
"('QuotedString.java', 'org.spearce.jgit.util.QuotedString$BourneUserPathStyle', 'quote', '^~[A-Za-z0-9_-]+$', '~foo/a')","[36407, 36454]"
"('Description.java', 'org.junit.runner.Description', 'methodAndClassNamePatternGroupOrDefault', '([\\s\\S]*)\\((.*)\\)', 'testUpperGroupCase0(org.spearce.jgit.fnmatch.FileNameMatcherTest)')","[5220, 22751]"
"('Description.java', 'org.junit.runner.Description', 'methodAndClassNamePatternGroupOrDefault', '([\\s\\S]*)\\((.*)\\)', 'testQuote_Empty(org.spearce.jgit.util.QuotedStringBourneUserPathStyleTest)')","[2065, 19385]"
"('Description.java', 'org.junit.runner.Description', 'methodAndClassNamePatternGroupOrDefault', '([\\s\\S]*)\\((.*)\\)', 'testDequote_NamedEscapes(org.spearce.jgit.util.QuotedStringBourneUserPathStyleTest)')","[2025, 19341]"
"('Description.java', 'org.junit.runner.Description', 'methodAndClassNamePatternGroupOrDefault', '([\\s\\S]*)\\((.*)\\)', 'testPath_4094(org.spearce.jgit.dircache.DirCacheLargePathTest)')","[11436, 29087]"
"('URIish.java', 'org.spearce.jgit.transport.URIish', '<init>', '^(?:([a-z][a-z0-9+-]+)://(?:([^/]+?)(?::([^/]+?))?@)?(?:([^/]+?))?(?::(\\d+))?)?((?:[A-Za-z]:)?/.+)$', 'git://example.com/home/m y')","[41714, 41760]"
"('Description.java', 'org.junit.runner.Description', 'methodAndClassNamePatternGroupOrDefault', '([\\s\\S]*)\\((.*)\\)', 'testInvalidTreeNameIsDotDot(org.spearce.jgit.lib.ObjectCheckerTest)')","[7119, 24819]"
"('Description.java', 'org.junit.runner.Description', 'methodAndClassNamePatternGroupOrDefault', '([\\s\\S]*)\\((.*)\\)', 'testCheckoutOutChanges(org.spearce.jgit.lib.ReadTreeTest)')","[9268, 26953]"
"('Description.java', 'org.junit.runner.Description', 'methodAndClassNamePatternGroupOrDefault', '([\\s\\S]*)\\((.*)\\)', 'testOneCommitOneTreeTwoBlob(org.spearce.jgit.revwalk.ObjectWalkTest)')","[12329, 29923]"
"('Description.java', 'org.junit.runner.Description', 'methodAndClassNamePatternGroupOrDefault', '([\\s\\S]*)\\((.*)\\)', 'testInsertOutOfOrder(org.spearce.jgit.revwalk.DateRevQueueTest)')","[11614, 29241]"
"('Description.java', 'org.junit.runner.Description', 'methodAndClassNamePatternGroupOrDefault', '([\\s\\S]*)\\((.*)\\)', 'testCRC32(org.spearce.jgit.lib.PackIndexV2Test)')","[8891, 26601]"
"('Description.java', 'org.junit.runner.Description', 'methodAndClassNamePatternGroupOrDefault', '([\\s\\S]*)\\((.*)\\)', 'testEncodeASCII_SimpleASCII(org.spearce.jgit.lib.ConstantsEncodingTest)')","[8792, 26513]"
"('Description.java', 'org.junit.runner.Description', 'methodAndClassNamePatternGroupOrDefault', '([\\s\\S]*)\\((.*)\\)', 'testAlias_OptionsKeywordCaseInsensitive(org.spearce.jgit.transport.OpenSshConfigTest)')","[15315, 32915]"
"('Description.java', 'org.junit.runner.Description', 'methodAndClassNamePatternGroupOrDefault', '([\\s\\S]*)\\((.*)\\)', 'testNegateIsUnwrap(org.spearce.jgit.treewalk.filter.NotTreeFilterTest)')","[17046, 34631]"
"('Description.java', 'org.junit.runner.Description', 'methodAndClassNamePatternGroupOrDefault', '([\\s\\S]*)\\((.*)\\)', 'org.spearce.jgit.lib.WorkDirCheckoutTest')","[8990, 38331]"
"('Description.java', 'org.junit.runner.Description', 'methodAndClassNamePatternGroupOrDefault', '([\\s\\S]*)\\((.*)\\)', 'testHasFlags(org.spearce.jgit.revwalk.FIFORevQueueTest)')","[12151, 29769]"
"('Description.java', 'org.junit.runner.Description', 'methodAndClassNamePatternGroupOrDefault', '([\\s\\S]*)\\((.*)\\)', 'testParseGitFileName_FooSpBar(org.spearce.jgit.patch.FileHeaderTest)')","[435, 17801]"
"('Description.java', 'org.junit.runner.Description', 'methodAndClassNamePatternGroupOrDefault', '([\\s\\S]*)\\((.*)\\)', 'testNoCommits(org.spearce.jgit.revwalk.ObjectWalkTest)')","[12309, 29901]"
"('Description.java', 'org.junit.runner.Description', 'methodAndClassNamePatternGroupOrDefault', '([\\s\\S]*)\\((.*)\\)', 'testCRC32(org.spearce.jgit.lib.PackIndexV1Test)')","[8214, 25919]"
"('Description.java', 'org.junit.runner.Description', 'methodAndClassNamePatternGroupOrDefault', '([\\s\\S]*)\\((.*)\\)', 'testEmpty(org.spearce.jgit.lib.TreeIteratorLeafOnlyTest)')","[7937, 25677]"
"('Description.java', 'org.junit.runner.Description', 'methodAndClassNamePatternGroupOrDefault', '([\\s\\S]*)\\((.*)\\)', 'testDequote_SoleSq(org.spearce.jgit.util.QuotedStringBourneUserPathStyleTest)')","[1985, 19297]"
"('Description.java', 'org.junit.runner.Description', 'methodAndClassNamePatternGroupOrDefault', '([\\s\\S]*)\\((.*)\\)', 'testMixedGroupCase0(org.spearce.jgit.fnmatch.FileNameMatcherTest)')","[3420, 20771]"
"('Description.java', 'org.junit.runner.Description', 'methodAndClassNamePatternGroupOrDefault', '([\\s\\S]*)\\((.*)\\)', 'testInvalidTreeModeNotOctal2(org.spearce.jgit.lib.ObjectCheckerTest)')","[6139, 23741]"
"('Description.java', 'org.junit.runner.Description', 'methodAndClassNamePatternGroupOrDefault', '([\\s\\S]*)\\((.*)\\)', 'testFillTo0(org.spearce.jgit.util.IntListTest)')","[1746, 19055]"
"('Description.java', 'org.junit.runner.Description', 'methodAndClassNamePatternGroupOrDefault', '([\\s\\S]*)\\((.*)\\)', 'testEquals_Short(org.spearce.jgit.lib.AbbreviatedObjectIdTest)')","[8613, 26337]"
"('Description.java', 'org.junit.runner.Description', 'methodAndClassNamePatternGroupOrDefault', '([\\s\\S]*)\\((.*)\\)', 'testInvalidTreeModeStartsWithZero3(org.spearce.jgit.lib.ObjectCheckerTest)')","[7659, 25413]"
"('Description.java', 'org.junit.runner.Description', 'methodAndClassNamePatternGroupOrDefault', '([\\s\\S]*)\\((.*)\\)', 'org.spearce.jgit.patch.PatchTest')","[831, 35245]"
"('Description.java', 'org.junit.runner.Description', 'methodAndClassNamePatternGroupOrDefault', '([\\s\\S]*)\\((.*)\\)', 'testTwoRangesInOneGroupCase4(org.spearce.jgit.fnmatch.FileNameMatcherTest)')","[5920, 23521]"
"('Description.java', 'org.junit.runner.Description', 'methodAndClassNamePatternGroupOrDefault', '([\\s\\S]*)\\((.*)\\)', 'testDequote_NamedEscapes(org.spearce.jgit.util.QuotedStringGitPathStyleTest)')","[2901, 20221]"
"('Description.java', 'org.junit.runner.Description', 'methodAndClassNamePatternGroupOrDefault', '([\\s\\S]*)\\((.*)\\)', 'testFull_FromString(org.spearce.jgit.lib.AbbreviatedObjectIdTest)')","[8653, 26381]"
"('Description.java', 'org.junit.runner.Description', 'methodAndClassNamePatternGroupOrDefault', '([\\s\\S]*)\\((.*)\\)', 'testDirectoryFileConflicts_16(org.spearce.jgit.lib.ReadTreeTest)')","[9628, 27349]"
"('Description.java', 'org.junit.runner.Description', 'methodAndClassNamePatternGroupOrDefault', '([\\s\\S]*)\\((.*)\\)', 'testAlias_OptionsInherit(org.spearce.jgit.transport.OpenSshConfigTest)')","[15235, 32827]"
"('Description.java', 'org.junit.runner.Description', 'methodAndClassNamePatternGroupOrDefault', '([\\s\\S]*)\\((.*)\\)', 'testSimpleT(org.spearce.jgit.lib.TreeIteratorPostOrderTest)')","[9129, 26821]"
"('Description.java', 'org.junit.runner.Description', 'methodAndClassNamePatternGroupOrDefault', '([\\s\\S]*)\\((.*)\\)', 'testWritePack2DeltasCRC32Copy(org.spearce.jgit.lib.PackWriterTest)')","[10166, 27899]"
"('Description.java', 'org.junit.runner.Description', 'methodAndClassNamePatternGroupOrDefault', '([\\s\\S]*)\\((.*)\\)', 'testVerySimpleGroupCase0(org.spearce.jgit.fnmatch.FileNameMatcherTest)')","[5960, 23565]"
"('Description.java', 'org.junit.runner.Description', 'methodAndClassNamePatternGroupOrDefault', '([\\s\\S]*)\\((.*)\\)', 'testParseModeChange(org.spearce.jgit.patch.FileHeaderTest)')","[255, 17603]"
"('Description.java', 'org.junit.runner.Description', 'methodAndClassNamePatternGroupOrDefault', '([\\s\\S]*)\\((.*)\\)', 'testNotEquals_SameLength(org.spearce.jgit.lib.AbbreviatedObjectIdTest)')","[8353, 26051]"
"('Description.java', 'org.junit.runner.Description', 'methodAndClassNamePatternGroupOrDefault', '([\\s\\S]*)\\((.*)\\)', 'testAdd_SmallGroup(org.spearce.jgit.util.IntListTest)')","[1866, 19187]"
"('Description.java', 'org.junit.runner.Description', 'methodAndClassNamePatternGroupOrDefault', '([\\s\\S]*)\\((.*)\\)', 'testParseGitFileName_Foo(org.spearce.jgit.patch.FileHeaderTest)')","[495, 17867]"
"('Description.java', 'org.junit.runner.Description', 'methodAndClassNamePatternGroupOrDefault', '([\\s\\S]*)\\((.*)\\)', 'testVerySimpleWirdcardCase0(org.spearce.jgit.fnmatch.FileNameMatcherTest)')","[3340, 20683]"
"('Description.java', 'org.junit.runner.Description', 'methodAndClassNamePatternGroupOrDefault', '([\\s\\S]*)\\((.*)\\)', 'testFileProtoWindows(org.spearce.jgit.transport.URIishTest)')","[14698, 32299]"
"('Description.java', 'org.junit.runner.Description', 'methodAndClassNamePatternGroupOrDefault', '([\\s\\S]*)\\((.*)\\)', 'testSimpleF1(org.spearce.jgit.lib.TreeIteratorLeafOnlyTest)')","[7957, 25699]"
"('QuotedString.java', 'org.spearce.jgit.util.QuotedString$BourneUserPathStyle', 'quote', '^~[A-Za-z0-9_-]+$', '!')","[36982, 37030]"
"('Description.java', 'org.junit.runner.Description', 'methodAndClassNamePatternGroupOrDefault', '([\\s\\S]*)\\((.*)\\)', 'testOneBlock_BulkWrite(org.spearce.jgit.util.TemporaryBufferTest)')","[1547, 18857]"
"('Description.java', 'org.junit.runner.Description', 'methodAndClassNamePatternGroupOrDefault', '([\\s\\S]*)\\((.*)\\)', 'testOneEntry_Seek1IsEOF(org.spearce.jgit.treewalk.CanonicalTreeParserTest)')","[16550, 34169]"
"('Description.java', 'org.junit.runner.Description', 'methodAndClassNamePatternGroupOrDefault', '([\\s\\S]*)\\((.*)\\)', 'testTwoRangesInOneGroupCase2(org.spearce.jgit.fnmatch.FileNameMatcherTest)')","[5880, 23477]"
"('Description.java', 'org.junit.runner.Description', 'methodAndClassNamePatternGroupOrDefault', '([\\s\\S]*)\\((.*)\\)', 'org.spearce.jgit.lib.PackIndexV2Test')","[8871, 38280]"
"('Description.java', 'org.junit.runner.Description', 'methodAndClassNamePatternGroupOrDefault', '([\\s\\S]*)\\((.*)\\)', 'testIteratorMethodsContract(org.spearce.jgit.lib.PackIndexV1Test)')","[8234, 25941]"
"('Description.java', 'org.junit.runner.Description', 'methodAndClassNamePatternGroupOrDefault', '([\\s\\S]*)\\((.*)\\)', 'testDigitGroupCase1(org.spearce.jgit.fnmatch.FileNameMatcherTest)')","[4520, 21981]"
"('Description.java', 'org.junit.runner.Description', 'methodAndClassNamePatternGroupOrDefault', '([\\s\\S]*)\\((.*)\\)', 'testFilePathCase2(org.spearce.jgit.fnmatch.FileNameMatcherTest)')","[4900, 22399]"
"('Description.java', 'org.junit.runner.Description', 'methodAndClassNamePatternGroupOrDefault', '([\\s\\S]*)\\((.*)\\)', 'testQuote_Ang(org.spearce.jgit.util.QuotedStringGitPathStyleTest)')","[2821, 20133]"
"('Description.java', 'org.junit.runner.Description', 'methodAndClassNamePatternGroupOrDefault', '([\\s\\S]*)\\((.*)\\)', 'testForceMasterMaster(org.spearce.jgit.transport.RefSpecTestCase)')","[14816, 32387]"
"('QuotedString.java', 'org.spearce.jgit.util.QuotedString$BourneUserPathStyle', 'quote', '^~[A-Za-z0-9_-]*/.*$', '')","[35837, 35884]"
"('Description.java', 'org.junit.runner.Description', 'methodAndClassNamePatternGroupOrDefault', '([\\s\\S]*)\\((.*)\\)', 'testValidCommit2Parent(org.spearce.jgit.lib.ObjectCheckerTest)')","[6779, 24445]"
"('Description.java', 'org.junit.runner.Description', 'methodAndClassNamePatternGroupOrDefault', '([\\s\\S]*)\\((.*)\\)', 'testSort_TOPO(org.spearce.jgit.revwalk.RevWalkSortTest)')","[13981, 31573]"
"('Description.java', 'org.junit.runner.Description', 'methodAndClassNamePatternGroupOrDefault', '([\\s\\S]*)\\((.*)\\)', 'org.spearce.jgit.revwalk.RevWalkPathFilter1Test')","[11753, 39198]"
"('Description.java', 'org.junit.runner.Description', 'methodAndClassNamePatternGroupOrDefault', '([\\s\\S]*)\\((.*)\\)', 'testXDigitGroupCase4(org.spearce.jgit.fnmatch.FileNameMatcherTest)')","[5580, 23147]"
"('Description.java', 'org.junit.runner.Description', 'methodAndClassNamePatternGroupOrDefault', '([\\s\\S]*)\\((.*)\\)', 'testANY_DIFF_IdentityClone(org.spearce.jgit.treewalk.filter.TreeFilterTest)')","[17265, 34851]"
"('Description.java', 'org.junit.runner.Description', 'methodAndClassNamePatternGroupOrDefault', '([\\s\\S]*)\\((.*)\\)', 'testParseAbbrIndexLine_WithMode(org.spearce.jgit.patch.FileHeaderTest)')","[235, 17581]"
"('URIish.java', 'org.spearce.jgit.transport.URIish', '<init>', '^(?:([a-z][a-z0-9+-]+)://(?:([^/]+?)(?::([^/]+?))?@)?(?:([^/]+?))?(?::(\\d+))?)?((?:[A-Za-z]:)?/.+)$', 'file:///D:/m y')","[41806, 41852]"
"('Description.java', 'org.junit.runner.Description', 'methodAndClassNamePatternGroupOrDefault', '([\\s\\S]*)\\((.*)\\)', 'testInversedGroupCase3(org.spearce.jgit.fnmatch.FileNameMatcherTest)')","[4220, 21651]"
"('Description.java', 'org.junit.runner.Description', 'methodAndClassNamePatternGroupOrDefault', '([\\s\\S]*)\\((.*)\\)', 'testFourLineBlanks(org.spearce.jgit.util.RawParseUtils_LineMapTest)')","[2224, 19539]"
"('QuotedString.java', 'org.spearce.jgit.util.QuotedString$BourneUserPathStyle', 'quote', '^~[A-Za-z0-9_-]*/.*$', 'a')","[35646, 35694]"
"('Description.java', 'org.junit.runner.Description', 'methodAndClassNamePatternGroupOrDefault', '([\\s\\S]*)\\((.*)\\)', 'testInvalidCommitNoAuthor(org.spearce.jgit.lib.ObjectCheckerTest)')","[7379, 25105]"
"('Description.java', 'org.junit.runner.Description', 'methodAndClassNamePatternGroupOrDefault', '([\\s\\S]*)\\((.*)\\)', 'testTrivialTwoWay(org.spearce.jgit.merge.SimpleMergeTest)')","[1109, 18417]"
"('Description.java', 'org.junit.runner.Description', 'methodAndClassNamePatternGroupOrDefault', '([\\s\\S]*)\\((.*)\\)', 'testError_BodyTooLong(org.spearce.jgit.patch.PatchErrorTest)')","[634, 17999]"
"('Description.java', 'org.junit.runner.Description', 'methodAndClassNamePatternGroupOrDefault', '([\\s\\S]*)\\((.*)\\)', 'testUnchangedComplex(org.spearce.jgit.lib.IndexDiffTest)')","[10225, 27943]"
"('URIish.java', 'org.spearce.jgit.transport.URIish', '<init>', '^(?:([a-z][a-z0-9+-]+)://(?:([^/]+?)(?::([^/]+?))?@)?(?:([^/]+?))?(?::(\\d+))?)?((?:[A-Za-z]:)?/.+)$', 'D:/m y')","[40978, 41024, 41438, 41484]"
"('Description.java', 'org.junit.runner.Description', 'methodAndClassNamePatternGroupOrDefault', '([\\s\\S]*)\\((.*)\\)', 'org.spearce.jgit.treewalk.EmptyTreeIteratorTest')","[16251, 44135]"
"('Description.java', 'org.junit.runner.Description', 'methodAndClassNamePatternGroupOrDefault', '([\\s\\S]*)\\((.*)\\)', 'testCheckBlob(org.spearce.jgit.lib.ObjectCheckerTest)')","[7319, 25039]"
"('Description.java', 'org.junit.runner.Description', 'methodAndClassNamePatternGroupOrDefault', '([\\s\\S]*)\\((.*)\\)', 'testDequote_RawLatin1(org.spearce.jgit.util.QuotedStringGitPathStyleTest)')","[2981, 20309]"
"('Description.java', 'org.junit.runner.Description', 'methodAndClassNamePatternGroupOrDefault', '([\\s\\S]*)\\((.*)\\)', 'org.spearce.jgit.lib.ReadTreeTest')","[9168, 38433]"
"('URIish.java', 'org.spearce.jgit.transport.URIish', '<init>', '^(?:([a-z][a-z0-9+-]+)://(?:([^/]+?)(?::([^/]+?))?@)?(?:([^/]+?))?(?::(\\d+))?)?((?:[A-Za-z]:)?/.+)$', 'git://example.com:333/home/m y')","[40886, 40932]"
"('Description.java', 'org.junit.runner.Description', 'methodAndClassNamePatternGroupOrDefault', '([\\s\\S]*)\\((.*)\\)', 'testParse_ShortLineOnlyEmbeddedLF(org.spearce.jgit.revwalk.RevCommitParseTest)')","[14220, 31815]"
"('Description.java', 'org.junit.runner.Description', 'methodAndClassNamePatternGroupOrDefault', '([\\s\\S]*)\\((.*)\\)', 'testXDigitGroupCase0(org.spearce.jgit.fnmatch.FileNameMatcherTest)')","[5500, 23059]"
"('Description.java', 'org.junit.runner.Description', 'methodAndClassNamePatternGroupOrDefault', '([\\s\\S]*)\\((.*)\\)', 'testFillTo100(org.spearce.jgit.util.IntListTest)')","[1846, 19165]"
"('Description.java', 'org.junit.runner.Description', 'methodAndClassNamePatternGroupOrDefault', '([\\s\\S]*)\\((.*)\\)', 'testCompareEntriesOffsetsWithFindOffsets(org.spearce.jgit.lib.PackIndexV1Test)')","[8294, 26007]"
"('URIish.java', 'org.spearce.jgit.transport.URIish', '<init>', '^(?:([a-z][a-z0-9+-]+)://(?:([^/]+?)(?::([^/]+?))?@)?(?:([^/]+?))?(?::(\\d+))?)?((?:[A-Za-z]:)?/.+)$', '//some/place')","[40334, 40380]"
"('Description.java', 'org.junit.runner.Description', 'methodAndClassNamePatternGroupOrDefault', '([\\s\\S]*)\\((.*)\\)', 'testEmpty_NoMatch(org.spearce.jgit.revwalk.RevWalkPathFilter1Test)')","[11893, 29527]"
"('QuotedString.java', 'org.spearce.jgit.util.QuotedString$BourneUserPathStyle', 'quote', '^~[A-Za-z0-9_-]*/.*$', '~foo/')","[36122, 36169]"
"('Description.java', 'org.junit.runner.Description', 'methodAndClassNamePatternGroupOrDefault', '([\\s\\S]*)\\((.*)\\)', 'testMixedGroupCase4(org.spearce.jgit.fnmatch.FileNameMatcherTest)')","[3500, 20859]"
"('Description.java', 'org.junit.runner.Description', 'methodAndClassNamePatternGroupOrDefault', '([\\s\\S]*)\\((.*)\\)', 'testInvalidTreeBadSorting1(org.spearce.jgit.lib.ObjectCheckerTest)')","[6439, 24071]"
"('Description.java', 'org.junit.runner.Description', 'methodAndClassNamePatternGroupOrDefault', '([\\s\\S]*)\\((.*)\\)', 'testValidTree6(org.spearce.jgit.lib.ObjectCheckerTest)')","[6399, 24027]"
"('Description.java', 'org.junit.runner.Description', 'methodAndClassNamePatternGroupOrDefault', '([\\s\\S]*)\\((.*)\\)', 'testVerySimpleStarCase2(org.spearce.jgit.fnmatch.FileNameMatcherTest)')","[5480, 23037]"
"('Description.java', 'org.junit.runner.Description', 'methodAndClassNamePatternGroupOrDefault', '([\\s\\S]*)\\((.*)\\)', 'testCreateOrigin(org.spearce.jgit.transport.RemoteConfigTest)')","[15793, 33399]"
"('Description.java', 'org.junit.runner.Description', 'methodAndClassNamePatternGroupOrDefault', '([\\s\\S]*)\\((.*)\\)', 'org.spearce.jgit.revwalk.RevObjectTest')","[12587, 39504]"
"('Description.java', 'org.junit.runner.Description', 'methodAndClassNamePatternGroupOrDefault', '([\\s\\S]*)\\((.*)\\)', 'org.spearce.jgit.dircache.DirCacheLargePathTest')","[11396, 39045]"
"('Description.java', 'org.junit.runner.Description', 'methodAndClassNamePatternGroupOrDefault', '([\\s\\S]*)\\((.*)\\)', 'test2AlphaGroupsCase0(org.spearce.jgit.fnmatch.FileNameMatcherTest)')","[4080, 21497]"
"('Description.java', 'org.junit.runner.Description', 'methodAndClassNamePatternGroupOrDefault', '([\\s\\S]*)\\((.*)\\)', 'testSpaceGroupCase2(org.spearce.jgit.fnmatch.FileNameMatcherTest)')","[4280, 21717]"
"('Description.java', 'org.junit.runner.Description', 'methodAndClassNamePatternGroupOrDefault', '([\\s\\S]*)\\((.*)\\)', 'testXDigitGroupCase5(org.spearce.jgit.fnmatch.FileNameMatcherTest)')","[5600, 23169]"
"('Description.java', 'org.junit.runner.Description', 'methodAndClassNamePatternGroupOrDefault', '([\\s\\S]*)\\((.*)\\)', 'testDirectoryFileConflicts_1(org.spearce.jgit.lib.ReadTreeTest)')","[9328, 27019]"
"('Description.java', 'org.junit.runner.Description', 'methodAndClassNamePatternGroupOrDefault', '([\\s\\S]*)\\((.*)\\)', 'testParse_FixNoNewline(org.spearce.jgit.patch.PatchTest)')","[951, 18285]"
"('Description.java', 'org.junit.runner.Description', 'methodAndClassNamePatternGroupOrDefault', '([\\s\\S]*)\\((.*)\\)', 'testQuote_Empty(org.spearce.jgit.util.QuotedStringGitPathStyleTest)')","[2961, 20287]"
"('Description.java', 'org.junit.runner.Description', 'methodAndClassNamePatternGroupOrDefault', '([\\s\\S]*)\\((.*)\\)', 'testSort_REVERSE(org.spearce.jgit.revwalk.RevWalkSortTest)')","[14001, 31595]"
"('Description.java', 'org.junit.runner.Description', 'methodAndClassNamePatternGroupOrDefault', '([\\s\\S]*)\\((.*)\\)', 'testDigitGroupCase2(org.spearce.jgit.fnmatch.FileNameMatcherTest)')","[4540, 22003]"
"('Description.java', 'org.junit.runner.Description', 'methodAndClassNamePatternGroupOrDefault', '([\\s\\S]*)\\((.*)\\)', 'testParseGitFileName_SrcFooCNonStandardPrefix(org.spearce.jgit.patch.FileHeaderTest)')","[415, 17779]"
"('Description.java', 'org.junit.runner.Description', 'methodAndClassNamePatternGroupOrDefault', '([\\s\\S]*)\\((.*)\\)', 'testDirectoryFileConflicts_12(org.spearce.jgit.lib.ReadTreeTest)')","[9548, 27261]"
"('Description.java', 'org.junit.runner.Description', 'methodAndClassNamePatternGroupOrDefault', '([\\s\\S]*)\\((.*)\\)', 'org.spearce.jgit.revwalk.RevWalkCullTest')","[13124, 39657]"
"('Description.java', 'org.junit.runner.Description', 'methodAndClassNamePatternGroupOrDefault', '([\\s\\S]*)\\((.*)\\)', 'testTrivialTwoWay_concurrentSubtreeChange(org.spearce.jgit.merge.SimpleMergeTest)')","[1289, 18615]"
"('Description.java', 'org.junit.runner.Description', 'methodAndClassNamePatternGroupOrDefault', '([\\s\\S]*)\\((.*)\\)', 'testVerySimplePatternCase1(org.spearce.jgit.fnmatch.FileNameMatcherTest)')","[4000, 21409]"
"('Description.java', 'org.junit.runner.Description', 'methodAndClassNamePatternGroupOrDefault', '([\\s\\S]*)\\((.*)\\)', 'testCntrlGroupCase1(org.spearce.jgit.fnmatch.FileNameMatcherTest)')","[3960, 21365]"
"('Description.java', 'org.junit.runner.Description', 'methodAndClassNamePatternGroupOrDefault', '([\\s\\S]*)\\((.*)\\)', 'testClear(org.spearce.jgit.revwalk.DateRevQueueTest)')","[11714, 29351]"
"('Description.java', 'org.junit.runner.Description', 'methodAndClassNamePatternGroupOrDefault', '([\\s\\S]*)\\((.*)\\)', 'testEmptyTree_WithTreeWalk(org.spearce.jgit.dircache.DirCacheIteratorTest)')","[10702, 28405]"
"('Description.java', 'org.junit.runner.Description', 'methodAndClassNamePatternGroupOrDefault', '([\\s\\S]*)\\((.*)\\)', 'org.spearce.jgit.treewalk.filter.TreeFilterTest')","[17165, 44441]"
"('Description.java', 'org.junit.runner.Description', 'methodAndClassNamePatternGroupOrDefault', '([\\s\\S]*)\\((.*)\\)', 'test7(org.spearce.jgit.revwalk.RevWalkPathFilter6012Test)')","[13105, 30693]"
"('Description.java', 'org.junit.runner.Description', 'methodAndClassNamePatternGroupOrDefault', '([\\s\\S]*)\\((.*)\\)', 'testVerySimpleStarCase1(org.spearce.jgit.fnmatch.FileNameMatcherTest)')","[5460, 23015]"
"('Description.java', 'org.junit.runner.Description', 'methodAndClassNamePatternGroupOrDefault', '([\\s\\S]*)\\((.*)\\)', 'testParse_ConfigCaseInsensitive(org.spearce.jgit.patch.PatchTest)')","[971, 18307]"
"('Description.java', 'org.junit.runner.Description', 'methodAndClassNamePatternGroupOrDefault', '([\\s\\S]*)\\((.*)\\)', 'testInvalidTagNoTagHeader2(org.spearce.jgit.lib.ObjectCheckerTest)')","[7039, 24731]"
"('Description.java', 'org.junit.runner.Description', 'methodAndClassNamePatternGroupOrDefault', '([\\s\\S]*)\\((.*)\\)', 'testGitSshProto(org.spearce.jgit.transport.URIishTest)')","[14598, 32189]"
"('Description.java', 'org.junit.runner.Description', 'methodAndClassNamePatternGroupOrDefault', '([\\s\\S]*)\\((.*)\\)', 'testVerySimpleStarCase0(org.spearce.jgit.fnmatch.FileNameMatcherTest)')","[5440, 22993]"
"('Description.java', 'org.junit.runner.Description', 'methodAndClassNamePatternGroupOrDefault', '([\\s\\S]*)\\((.*)\\)', 'testEmpty(org.spearce.jgit.util.TemporaryBufferTest)')","[1467, 18769]"
"('Description.java', 'org.junit.runner.Description', 'methodAndClassNamePatternGroupOrDefault', '([\\s\\S]*)\\((.*)\\)', 'testDisallowTreeFilter(org.spearce.jgit.revwalk.RevWalkMergeBaseTest)')","[12528, 30121]"
"('Description.java', 'org.junit.runner.Description', 'methodAndClassNamePatternGroupOrDefault', '([\\s\\S]*)\\((.*)\\)', 'testTricky(org.spearce.jgit.lib.TreeIteratorPreOrderTest)')","[10623, 28339]"
"('Description.java', 'org.junit.runner.Description', 'methodAndClassNamePatternGroupOrDefault', '([\\s\\S]*)\\((.*)\\)', 'testCrissCross(org.spearce.jgit.revwalk.RevWalkMergeBaseTest)')","[12568, 30165]"
"('Description.java', 'org.junit.runner.Description', 'methodAndClassNamePatternGroupOrDefault', '([\\s\\S]*)\\((.*)\\)', 'testEmptyIfRootIsEmpty(org.spearce.jgit.treewalk.FileTreeIteratorTest)')","[16689, 34301]"
"('Description.java', 'org.junit.runner.Description', 'methodAndClassNamePatternGroupOrDefault', '([\\s\\S]*)\\((.*)\\)', 'test5_FromString(org.spearce.jgit.lib.AbbreviatedObjectIdTest)')","[8573, 26293]"
"('URIish.java', 'org.spearce.jgit.transport.URIish', '<init>', '^(?:([^@]+?)@)?([^:]+?):(.+)$', 'in-memory://')","[39955, 40049, 40143, 40237]"
"('Description.java', 'org.junit.runner.Description', 'methodAndClassNamePatternGroupOrDefault', '([\\s\\S]*)\\((.*)\\)', 'testDequote_BareA(org.spearce.jgit.util.QuotedStringBourneStyleTest)')","[2383, 19693]"
"('Description.java', 'org.junit.runner.Description', 'methodAndClassNamePatternGroupOrDefault', '([\\s\\S]*)\\((.*)\\)', 'testInvalidTagNoType2(org.spearce.jgit.lib.ObjectCheckerTest)')","[7519, 25259]"
"('Description.java', 'org.junit.runner.Description', 'methodAndClassNamePatternGroupOrDefault', '([\\s\\S]*)\\((.*)\\)', 'testDirectoryFileConflicts_19(org.spearce.jgit.lib.ReadTreeTest)')","[9688, 27415]"
"('URIish.java', 'org.spearce.jgit.transport.URIish', '<init>', '^(?:([a-z][a-z0-9+-]+)://(?:([^/]+?)(?::([^/]+?))?@)?(?:([^/]+?))?(?::(\\d+))?)?((?:[A-Za-z]:)?/.+)$', '/some/dir')","[42337, 42475, 42521, 42753, 42893, 42939, 43033, 43173, 43219, 43312, 43450, 43496, 43777]"
"('Description.java', 'org.junit.runner.Description', 'methodAndClassNamePatternGroupOrDefault', '([\\s\\S]*)\\((.*)\\)', 'testInvalidTreeModeMissingName(org.spearce.jgit.lib.ObjectCheckerTest)')","[7599, 25347]"
"('Description.java', 'org.junit.runner.Description', 'methodAndClassNamePatternGroupOrDefault', '([\\s\\S]*)\\((.*)\\)', 'org.spearce.jgit.lib.RepositoryConfigTest')","[7758, 37923]"
"('Description.java', 'org.junit.runner.Description', 'methodAndClassNamePatternGroupOrDefault', '([\\s\\S]*)\\((.*)\\)', 'testQuote_NamedEscapes(org.spearce.jgit.util.QuotedStringBourneUserPathStyleTest)')","[2105, 19429]"
"('Description.java', 'org.junit.runner.Description', 'methodAndClassNamePatternGroupOrDefault', '([\\s\\S]*)\\((.*)\\)', 'testManySolutionsCase4(org.spearce.jgit.fnmatch.FileNameMatcherTest)')","[5200, 22729]"
"('Description.java', 'org.junit.runner.Description', 'methodAndClassNamePatternGroupOrDefault', '([\\s\\S]*)\\((.*)\\)', 'testFindObject(org.spearce.jgit.lib.PackReverseIndexTest)')","[9767, 27481]"
"('Description.java', 'org.junit.runner.Description', 'methodAndClassNamePatternGroupOrDefault', '([\\s\\S]*)\\((.*)\\)', 'testFilter_ALL_Or_NONE(org.spearce.jgit.revwalk.RevWalkFilterTest)')","[13662, 31243]"
"('Description.java', 'org.junit.runner.Description', 'methodAndClassNamePatternGroupOrDefault', '([\\s\\S]*)\\((.*)\\)', 'testIteratorReturnedValues1(org.spearce.jgit.lib.PackIndexV1Test)')","[8254, 25963]"
"('Description.java', 'org.junit.runner.Description', 'methodAndClassNamePatternGroupOrDefault', '([\\s\\S]*)\\((.*)\\)', 'testTreeWalk_LsFiles(org.spearce.jgit.dircache.DirCacheCGitCompatabilityTest)')","[11575, 29219]"
"('Description.java', 'org.junit.runner.Description', 'methodAndClassNamePatternGroupOrDefault', '([\\s\\S]*)\\((.*)\\)', 'testContainsAll(org.spearce.jgit.revwalk.RevFlagSetTest)')","[12846, 30429]"
"('Description.java', 'org.junit.runner.Description', 'methodAndClassNamePatternGroupOrDefault', '([\\s\\S]*)\\((.*)\\)', 'testFilter_NOT_NONE(org.spearce.jgit.revwalk.RevWalkFilterTest)')","[13582, 31155]"
"('Description.java', 'org.junit.runner.Description', 'methodAndClassNamePatternGroupOrDefault', '([\\s\\S]*)\\((.*)\\)', 'testNotALL_IncludesNothing(org.spearce.jgit.treewalk.filter.TreeFilterTest)')","[17245, 34829]"
"('Description.java', 'org.junit.runner.Description', 'methodAndClassNamePatternGroupOrDefault', '([\\s\\S]*)\\((.*)\\)', 'testVerySimpleGroupRangeCase3(org.spearce.jgit.fnmatch.FileNameMatcherTest)')","[4680, 22157]"
"('Description.java', 'org.junit.runner.Description', 'methodAndClassNamePatternGroupOrDefault', '([\\s\\S]*)\\((.*)\\)', 'testMixedGroupCase6(org.spearce.jgit.fnmatch.FileNameMatcherTest)')","[3540, 20903]"
"('Description.java', 'org.junit.runner.Description', 'methodAndClassNamePatternGroupOrDefault', '([\\s\\S]*)\\((.*)\\)', 'testSpaceGroupCase1(org.spearce.jgit.fnmatch.FileNameMatcherTest)')","[4260, 21695]"
"('QuotedString.java', 'org.spearce.jgit.util.QuotedString$BourneUserPathStyle', 'quote', '^~[A-Za-z0-9_-]+$', 'a')","[35549, 35597]"
"('Description.java', 'org.junit.runner.Description', 'methodAndClassNamePatternGroupOrDefault', '([\\s\\S]*)\\((.*)\\)', 'testSimpleF2(org.spearce.jgit.lib.TreeIteratorPreOrderTest)')","[10583, 28295]"
"('Description.java', 'org.junit.runner.Description', 'methodAndClassNamePatternGroupOrDefault', '([\\s\\S]*)\\((.*)\\)', 'org.spearce.jgit.fnmatch.FileNameMatcherTest')","[3060, 37821]"
"('Description.java', 'org.junit.runner.Description', 'methodAndClassNamePatternGroupOrDefault', '([\\s\\S]*)\\((.*)\\)', 'testPushResult(org.spearce.jgit.transport.PushProcessTest)')","[15614, 33223]"
"('Description.java', 'org.junit.runner.Description', 'methodAndClassNamePatternGroupOrDefault', '([\\s\\S]*)\\((.*)\\)', 'testTwoLevelSubtree_FilterPath(org.spearce.jgit.dircache.DirCacheIteratorTest)')","[10722, 28427]"
"('Description.java', 'org.junit.runner.Description', 'methodAndClassNamePatternGroupOrDefault', '([\\s\\S]*)\\((.*)\\)', 'testFilter_NONE(org.spearce.jgit.revwalk.RevWalkFilterTest)')","[13602, 31177]"
"('Description.java', 'org.junit.runner.Description', 'methodAndClassNamePatternGroupOrDefault', '([\\s\\S]*)\\((.*)\\)', 'testUpperGroupCase4(org.spearce.jgit.fnmatch.FileNameMatcherTest)')","[5300, 22839]"
"('Description.java', 'org.junit.runner.Description', 'methodAndClassNamePatternGroupOrDefault', '([\\s\\S]*)\\((.*)\\)', 'testBackwards_ConfusingPathName(org.spearce.jgit.treewalk.CanonicalTreeParserTest)')","[16610, 34235]"
"('Description.java', 'org.junit.runner.Description', 'methodAndClassNamePatternGroupOrDefault', '([\\s\\S]*)\\((.*)\\)', 'testDequote_UnknownEscapeQ(org.spearce.jgit.util.QuotedStringGitPathStyleTest)')","[2921, 20243]"
"('Description.java', 'org.junit.runner.Description', 'methodAndClassNamePatternGroupOrDefault', '([\\s\\S]*)\\((.*)\\)', 'testOneByte(org.spearce.jgit.util.TemporaryBufferTest)')","[1427, 18725]"
"('Description.java', 'org.junit.runner.Description', 'methodAndClassNamePatternGroupOrDefault', '([\\s\\S]*)\\((.*)\\)', 'testRemove(org.spearce.jgit.revwalk.RevFlagSetTest)')","[12946, 30539]"
"('Description.java', 'org.junit.runner.Description', 'methodAndClassNamePatternGroupOrDefault', '([\\s\\S]*)\\((.*)\\)', 'testInvalidType(org.spearce.jgit.lib.ObjectCheckerTest)')","[6079, 23675]"
"('Description.java', 'org.junit.runner.Description', 'methodAndClassNamePatternGroupOrDefault', '([\\s\\S]*)\\((.*)\\)', 'testDeleteHead(org.spearce.jgit.lib.RefUpdateTest)')","[10484, 28207]"
"('Description.java', 'org.junit.runner.Description', 'methodAndClassNamePatternGroupOrDefault', '([\\s\\S]*)\\((.*)\\)', 'testParseUnicodeName_NewFile(org.spearce.jgit.patch.FileHeaderTest)')","[395, 17757]"
"('Description.java', 'org.junit.runner.Description', 'methodAndClassNamePatternGroupOrDefault', '([\\s\\S]*)\\((.*)\\)', 'testFindRemoteRefUpdatesNoWildcardNoDestination(org.spearce.jgit.transport.TransportTest)')","[16212, 33839]"
"('Description.java', 'org.junit.runner.Description', 'methodAndClassNamePatternGroupOrDefault', '([\\s\\S]*)\\((.*)\\)', 'testUntrackedConflicts(org.spearce.jgit.lib.ReadTreeTest)')","[9288, 26975]"
"('Description.java', 'org.junit.runner.Description', 'methodAndClassNamePatternGroupOrDefault', '([\\s\\S]*)\\((.*)\\)', 'testCloseNameConflictsX0(org.spearce.jgit.lib.ReadTreeTest)')","[9308, 26997]"
"('Description.java', 'org.junit.runner.Description', 'methodAndClassNamePatternGroupOrDefault', '([\\s\\S]*)\\((.*)\\)', 'testAddRevFlag(org.spearce.jgit.revwalk.RevObjectTest)')","[12607, 30187]"
"('Description.java', 'org.junit.runner.Description', 'methodAndClassNamePatternGroupOrDefault', '([\\s\\S]*)\\((.*)\\)', 'testMasterMaster(org.spearce.jgit.transport.RefSpecTestCase)')","[14936, 32519]"
"('Description.java', 'org.junit.runner.Description', 'methodAndClassNamePatternGroupOrDefault', '([\\s\\S]*)\\((.*)\\)', 'test1_FromString(org.spearce.jgit.lib.AbbreviatedObjectIdTest)')","[8493, 26205]"
"('Description.java', 'org.junit.runner.Description', 'methodAndClassNamePatternGroupOrDefault', '([\\s\\S]*)\\((.*)\\)', 'testGraphGroupCase4(org.spearce.jgit.fnmatch.FileNameMatcherTest)')","[3720, 21101]"
"('Description.java', 'org.junit.runner.Description', 'methodAndClassNamePatternGroupOrDefault', '([\\s\\S]*)\\((.*)\\)', 'testEncodeInt64(org.spearce.jgit.util.NBTest)')","[2642, 19957]"
"('Description.java', 'org.junit.runner.Description', 'methodAndClassNamePatternGroupOrDefault', '([\\s\\S]*)\\((.*)\\)', 'testSetForceUpdate(org.spearce.jgit.transport.RefSpecTestCase)')","[14976, 32563]"
"('Description.java', 'org.junit.runner.Description', 'methodAndClassNamePatternGroupOrDefault', '([\\s\\S]*)\\((.*)\\)', 'testSort_COMMIT_TIME_DESC_OutOfOrder1(org.spearce.jgit.revwalk.RevWalkSortTest)')","[13921, 31507]"
"('Description.java', 'org.junit.runner.Description', 'methodAndClassNamePatternGroupOrDefault', '([\\s\\S]*)\\((.*)\\)', 'testBuildEmpty(org.spearce.jgit.dircache.DirCacheBuilderTest)')","[10881, 28581]"
"('Description.java', 'org.junit.runner.Description', 'methodAndClassNamePatternGroupOrDefault', '([\\s\\S]*)\\((.*)\\)', 'testParse_CcNewFile(org.spearce.jgit.patch.PatchCcTest)')","[792, 18131]"
"('Description.java', 'org.junit.runner.Description', 'methodAndClassNamePatternGroupOrDefault', '([\\s\\S]*)\\((.*)\\)', 'testDequote_BareABCZ_OnlyBC(org.spearce.jgit.util.QuotedStringBourneUserPathStyleTest)')","[1905, 19209]"
"('Description.java', 'org.junit.runner.Description', 'methodAndClassNamePatternGroupOrDefault', '([\\s\\S]*)\\((.*)\\)', 'testVerySimplePatternCase2(org.spearce.jgit.fnmatch.FileNameMatcherTest)')","[4020, 21431]"
"('Description.java', 'org.junit.runner.Description', 'methodAndClassNamePatternGroupOrDefault', '([\\s\\S]*)\\((.*)\\)', 'testAdd_ZeroCapacity(org.spearce.jgit.util.IntListTest)')","[1686, 18989]"
"('Description.java', 'org.junit.runner.Description', 'methodAndClassNamePatternGroupOrDefault', '([\\s\\S]*)\\((.*)\\)', 'org.spearce.jgit.util.QuotedStringGitPathStyleTest')","[2661, 37770]"
"('Description.java', 'org.junit.runner.Description', 'methodAndClassNamePatternGroupOrDefault', '([\\s\\S]*)\\((.*)\\)', 'testWritePack4SizeThinVsNoThin(org.spearce.jgit.lib.PackWriterTest)')","[10046, 27767]"
"('Description.java', 'org.junit.runner.Description', 'methodAndClassNamePatternGroupOrDefault', '([\\s\\S]*)\\((.*)\\)', 'org.spearce.jgit.dircache.DirCacheBuilderIteratorTest')","[11357, 38994]"
"('Description.java', 'org.junit.runner.Description', 'methodAndClassNamePatternGroupOrDefault', '([\\s\\S]*)\\((.*)\\)', 'org.spearce.jgit.util.TemporaryBufferTest')","[1407, 35449]"
"('Description.java', 'org.junit.runner.Description', 'methodAndClassNamePatternGroupOrDefault', '([\\s\\S]*)\\((.*)\\)', 'testValidTree1(org.spearce.jgit.lib.ObjectCheckerTest)')","[6299, 23917]"
"('Description.java', 'org.junit.runner.Description', 'methodAndClassNamePatternGroupOrDefault', '([\\s\\S]*)\\((.*)\\)', 'testWriteEmptyReadEmpty_RealIndex(org.spearce.jgit.dircache.DirCacheBasicTest)')","[11160, 28867]"
"('Description.java', 'org.junit.runner.Description', 'methodAndClassNamePatternGroupOrDefault', '([\\s\\S]*)\\((.*)\\)', 'testLowerGroupCase0(org.spearce.jgit.fnmatch.FileNameMatcherTest)')","[3820, 21211]"
"('Description.java', 'org.junit.runner.Description', 'methodAndClassNamePatternGroupOrDefault', '([\\s\\S]*)\\((.*)\\)', 'testLockMissing_TempIndex(org.spearce.jgit.dircache.DirCacheBasicTest)')","[11000, 28691]"
"('Description.java', 'org.junit.runner.Description', 'methodAndClassNamePatternGroupOrDefault', '([\\s\\S]*)\\((.*)\\)', 'testEmpty(org.spearce.jgit.revwalk.LIFORevQueueTest)')","[12190, 29791]"
"('Description.java', 'org.junit.runner.Description', 'methodAndClassNamePatternGroupOrDefault', '([\\s\\S]*)\\((.*)\\)', 'testFileProtoUnix(org.spearce.jgit.transport.URIishTest)')","[14498, 32079]"
"('Description.java', 'org.junit.runner.Description', 'methodAndClassNamePatternGroupOrDefault', '([\\s\\S]*)\\((.*)\\)', 'testPrintGroupCase1(org.spearce.jgit.fnmatch.FileNameMatcherTest)')","[5020, 22531]"
"('QuotedString.java', 'org.spearce.jgit.util.QuotedString$BourneUserPathStyle', 'quote', '^~[A-Za-z0-9_-]+$', ""'"")","[36788, 36836]"
"('Description.java', 'org.junit.runner.Description', 'methodAndClassNamePatternGroupOrDefault', '([\\s\\S]*)\\((.*)\\)', 'testFreakingHugePathName(org.spearce.jgit.treewalk.CanonicalTreeParserTest)')","[16590, 34213]"
"('Description.java', 'org.junit.runner.Description', 'methodAndClassNamePatternGroupOrDefault', '([\\s\\S]*)\\((.*)\\)', 'testTrivialTwoWay_conflictSubtreeChange(org.spearce.jgit.merge.SimpleMergeTest)')","[1209, 18527]"
"('Description.java', 'org.junit.runner.Description', 'methodAndClassNamePatternGroupOrDefault', '([\\s\\S]*)\\((.*)\\)', 'testTwoGroupsCase3(org.spearce.jgit.fnmatch.FileNameMatcherTest)')","[4400, 21849]"
"('Description.java', 'org.junit.runner.Description', 'methodAndClassNamePatternGroupOrDefault', '([\\s\\S]*)\\((.*)\\)', 'testEmpty_SpecificCapacity(org.spearce.jgit.util.IntListTest)')","[1706, 19011]"
"('Description.java', 'org.junit.runner.Description', 'methodAndClassNamePatternGroupOrDefault', '([\\s\\S]*)\\((.*)\\)', 'org.spearce.jgit.lib.ObjectIdMapTest')","[8036, 38025]"
"('Description.java', 'org.junit.runner.Description', 'methodAndClassNamePatternGroupOrDefault', '([\\s\\S]*)\\((.*)\\)', 'testParse_GitStyleMessage(org.spearce.jgit.revwalk.RevCommitParseTest)')","[14140, 31727]"
"('Description.java', 'org.junit.runner.Description', 'methodAndClassNamePatternGroupOrDefault', '([\\s\\S]*)\\((.*)\\)', 'testRefKeySameAsOrigName(org.spearce.jgit.lib.RefUpdateTest)')","[10464, 28185]"
"('Description.java', 'org.junit.runner.Description', 'methodAndClassNamePatternGroupOrDefault', '([\\s\\S]*)\\((.*)\\)', 'testWriteIndex(org.spearce.jgit.lib.PackWriterTest)')","[9906, 27613]"
"('Description.java', 'org.junit.runner.Description', 'methodAndClassNamePatternGroupOrDefault', '([\\s\\S]*)\\((.*)\\)', 'org.spearce.jgit.treewalk.TreeWalkBasicDiffTest')","[17363, 44515]"
"('QuotedString.java', 'org.spearce.jgit.util.QuotedString$BourneUserPathStyle', 'quote', '^~[A-Za-z0-9_-]*/.*$', 'a!b')","[37467, 37515]"
"('Description.java', 'org.junit.runner.Description', 'methodAndClassNamePatternGroupOrDefault', '([\\s\\S]*)\\((.*)\\)', 'testRandomWrites(org.spearce.jgit.util.TemporaryBufferTest)')","[1567, 18879]"
"('Description.java', 'org.junit.runner.Description', 'methodAndClassNamePatternGroupOrDefault', '([\\s\\S]*)\\((.*)\\)', 'testFindRemoteRefUpdatesTrackingRef(org.spearce.jgit.transport.TransportTest)')","[16172, 33795]"
"('Description.java', 'org.junit.runner.Description', 'methodAndClassNamePatternGroupOrDefault', '([\\s\\S]*)\\((.*)\\)', 'org.spearce.jgit.dircache.DirCacheFindTest')","[11318, 38943]"
"('Description.java', 'org.junit.runner.Description', 'methodAndClassNamePatternGroupOrDefault', '([\\s\\S]*)\\((.*)\\)', 'testMirror(org.spearce.jgit.transport.RemoteConfigTest)')","[16073, 33707]"
"('Description.java', 'org.junit.runner.Description', 'methodAndClassNamePatternGroupOrDefault', '([\\s\\S]*)\\((.*)\\)', 'testFindNextOffset(org.spearce.jgit.lib.PackReverseIndexTest)')","[9787, 27503]"
"('Description.java', 'org.junit.runner.Description', 'methodAndClassNamePatternGroupOrDefault', '([\\s\\S]*)\\((.*)\\)', 'testSpecialGroupCase2(org.spearce.jgit.fnmatch.FileNameMatcherTest)')","[3120, 20441]"
"('Description.java', 'org.junit.runner.Description', 'methodAndClassNamePatternGroupOrDefault', '([\\s\\S]*)\\((.*)\\)', 'testGraphGroupCase0(org.spearce.jgit.fnmatch.FileNameMatcherTest)')","[3640, 21013]"
"('Description.java', 'org.junit.runner.Description', 'methodAndClassNamePatternGroupOrDefault', '([\\s\\S]*)\\((.*)\\)', 'testFindRemoteRefUpdatesWildcardNoTracking(org.spearce.jgit.transport.TransportTest)')","[16232, 33861]"
"('Description.java', 'org.junit.runner.Description', 'methodAndClassNamePatternGroupOrDefault', '([\\s\\S]*)\\((.*)\\)', 'testValidTreeSorting2(org.spearce.jgit.lib.ObjectCheckerTest)')","[6519, 24159]"
"('Description.java', 'org.junit.runner.Description', 'methodAndClassNamePatternGroupOrDefault', '([\\s\\S]*)\\((.*)\\)', 'testInvalidCommitInvalidAuthor1(org.spearce.jgit.lib.ObjectCheckerTest)')","[6799, 24467]"
"('Description.java', 'org.junit.runner.Description', 'methodAndClassNamePatternGroupOrDefault', '([\\s\\S]*)\\((.*)\\)', 'testOneBlockAndHalf_Copy(org.spearce.jgit.util.TemporaryBufferTest)')","[1647, 18967]"
"('Description.java', 'org.junit.runner.Description', 'methodAndClassNamePatternGroupOrDefault', '([\\s\\S]*)\\((.*)\\)', 'testDequote_UTF8(org.spearce.jgit.util.QuotedStringGitPathStyleTest)')","[3041, 20375]"
"('Description.java', 'org.junit.runner.Description', 'methodAndClassNamePatternGroupOrDefault', '([\\s\\S]*)\\((.*)\\)', 'testInvalidCommitInvalidTree1(org.spearce.jgit.lib.ObjectCheckerTest)')","[6159, 23763]"
"('Description.java', 'org.junit.runner.Description', 'methodAndClassNamePatternGroupOrDefault', '([\\s\\S]*)\\((.*)\\)', 'testManySolutionsCase2(org.spearce.jgit.fnmatch.FileNameMatcherTest)')","[5160, 22685]"
"('Description.java', 'org.junit.runner.Description', 'methodAndClassNamePatternGroupOrDefault', '([\\s\\S]*)\\((.*)\\)', 'testInvalidTagNoObject6(org.spearce.jgit.lib.ObjectCheckerTest)')","[7299, 25017]"
"('Description.java', 'org.junit.runner.Description', 'methodAndClassNamePatternGroupOrDefault', '([\\s\\S]*)\\((.*)\\)', 'testTwoRangesInOneGroupCase5(org.spearce.jgit.fnmatch.FileNameMatcherTest)')","[5940, 23543]"
"('Description.java', 'org.junit.runner.Description', 'methodAndClassNamePatternGroupOrDefault', '([\\s\\S]*)\\((.*)\\)', 'org.spearce.jgit.revwalk.RevCommitParseTest')","[14020, 39861]"
"('URIish.java', 'org.spearce.jgit.transport.URIish', '<init>', '^(?:([a-z][a-z0-9+-]+)://(?:([^/]+?)(?::([^/]+?))?@)?(?:([^/]+?))?(?::(\\d+))?)?((?:[A-Za-z]:)?/.+)$', 'git+ssh://example.com/some/p ath')","[41346, 41392]"
"('Description.java', 'org.junit.runner.Description', 'methodAndClassNamePatternGroupOrDefault', '([\\s\\S]*)\\((.*)\\)', 'org.spearce.jgit.lib.TreeIteratorPreOrderTest')","[10523, 38688]"
"('Description.java', 'org.junit.runner.Description', 'methodAndClassNamePatternGroupOrDefault', '([\\s\\S]*)\\((.*)\\)', 'testParseGitFileName_NoSecondLine(org.spearce.jgit.patch.FileHeaderTest)')","[115, 17449]"
"('Description.java', 'org.junit.runner.Description', 'methodAndClassNamePatternGroupOrDefault', '([\\s\\S]*)\\((.*)\\)', 'testSpaceGroupCase0(org.spearce.jgit.fnmatch.FileNameMatcherTest)')","[4240, 21673]"
"('Description.java', 'org.junit.runner.Description', 'methodAndClassNamePatternGroupOrDefault', '([\\s\\S]*)\\((.*)\\)', 'testTwoGroupsCase1(org.spearce.jgit.fnmatch.FileNameMatcherTest)')","[4360, 21805]"
"('Description.java', 'org.junit.runner.Description', 'methodAndClassNamePatternGroupOrDefault', '([\\s\\S]*)\\((.*)\\)', 'testWritePack2DeltasReuseRefs(org.spearce.jgit.lib.PackWriterTest)')","[9886, 27591]"
"('Description.java', 'org.junit.runner.Description', 'methodAndClassNamePatternGroupOrDefault', '([\\s\\S]*)\\((.*)\\)', 'testWriteReadTree(org.spearce.jgit.dircache.DirCacheTreeTest)')","[11239, 28933]"
"('Description.java', 'org.junit.runner.Description', 'methodAndClassNamePatternGroupOrDefault', '([\\s\\S]*)\\((.*)\\)', 'testEmpty_EmptyTree(org.spearce.jgit.revwalk.RevWalkPathFilter1Test)')","[11773, 29395]"
"('Description.java', 'org.junit.runner.Description', 'methodAndClassNamePatternGroupOrDefault', '([\\s\\S]*)\\((.*)\\)', 'test006_readCaseInsensitive(org.spearce.jgit.lib.RepositoryConfigTest)')","[7778, 25523]"
"('Description.java', 'org.junit.runner.Description', 'methodAndClassNamePatternGroupOrDefault', '([\\s\\S]*)\\((.*)\\)', 'testVerySimpleGroupRangeCase0(org.spearce.jgit.fnmatch.FileNameMatcherTest)')","[4620, 22091]"
"('Description.java', 'org.junit.runner.Description', 'methodAndClassNamePatternGroupOrDefault', '([\\s\\S]*)\\((.*)\\)', 'test4(org.spearce.jgit.revwalk.RevWalkPathFilter6012Test)')","[13045, 30627]"
"('Description.java', 'org.junit.runner.Description', 'methodAndClassNamePatternGroupOrDefault', '([\\s\\S]*)\\((.*)\\)', 'org.spearce.jgit.lib.ObjectCheckerTest')","[6019, 37872]"
"('Description.java', 'org.junit.runner.Description', 'methodAndClassNamePatternGroupOrDefault', '([\\s\\S]*)\\((.*)\\)', 'testALL_IncludesAnything(org.spearce.jgit.treewalk.filter.TreeFilterTest)')","[17285, 34873]"
"('QuotedString.java', 'org.spearce.jgit.util.QuotedString$BourneUserPathStyle', 'quote', '^~[A-Za-z0-9_-]+$', '')","[35742, 35789]"
"('Description.java', 'org.junit.runner.Description', 'methodAndClassNamePatternGroupOrDefault', '([\\s\\S]*)\\((.*)\\)', 'testUpdateMixedCases(org.spearce.jgit.transport.PushProcessTest)')","[15414, 33003]"
"('Description.java', 'org.junit.runner.Description', 'methodAndClassNamePatternGroupOrDefault', '([\\s\\S]*)\\((.*)\\)', 'testInvalidCommitInvalidParent3(org.spearce.jgit.lib.ObjectCheckerTest)')","[6719, 24379]"
"('Description.java', 'org.junit.runner.Description', 'methodAndClassNamePatternGroupOrDefault', '([\\s\\S]*)\\((.*)\\)', 'testBackup(org.spearce.jgit.transport.RemoteConfigTest)')","[16053, 33685]"
"('URIish.java', 'org.spearce.jgit.transport.URIish', '<init>', '^(?:([a-z][a-z0-9+-]+)://(?:([^/]+?)(?::([^/]+?))?@)?(?:([^/]+?))?(?::(\\d+))?)?((?:[A-Za-z]:)?/.+)$', 'example.com:some/p ath')","[41898, 41990]"
"('Description.java', 'org.junit.runner.Description', 'methodAndClassNamePatternGroupOrDefault', '([\\s\\S]*)\\((.*)\\)', 'test8_FromString(org.spearce.jgit.lib.AbbreviatedObjectIdTest)')","[8673, 26403]"
"('Description.java', 'org.junit.runner.Description', 'methodAndClassNamePatternGroupOrDefault', '([\\s\\S]*)\\((.*)\\)', 'testHasAllFlag(org.spearce.jgit.revwalk.RevObjectTest)')","[12727, 30319]"
"('Description.java', 'org.junit.runner.Description', 'methodAndClassNamePatternGroupOrDefault', '([\\s\\S]*)\\((.*)\\)', 'testQuote_OctalAll(org.spearce.jgit.util.QuotedStringGitPathStyleTest)')","[2881, 20199]"
"('Description.java', 'org.junit.runner.Description', 'methodAndClassNamePatternGroupOrDefault', '([\\s\\S]*)\\((.*)\\)', 'testParse_explicit_bad_encoded(org.spearce.jgit.revwalk.RevCommitParseTest)')","[14200, 31793]"
"('Description.java', 'org.junit.runner.Description', 'methodAndClassNamePatternGroupOrDefault', '([\\s\\S]*)\\((.*)\\)', 'testLockMissing_RealIndex(org.spearce.jgit.dircache.DirCacheBasicTest)')","[11080, 28779]"
"('Description.java', 'org.junit.runner.Description', 'methodAndClassNamePatternGroupOrDefault', '([\\s\\S]*)\\((.*)\\)', 'testFilter_ALL(org.spearce.jgit.revwalk.RevWalkFilterTest)')","[13842, 31441]"
"('Description.java', 'org.junit.runner.Description', 'methodAndClassNamePatternGroupOrDefault', '([\\s\\S]*)\\((.*)\\)', 'testSshProtoWithUserAndPort(org.spearce.jgit.transport.URIishTest)')","[14438, 32013]"
"('Description.java', 'org.junit.runner.Description', 'methodAndClassNamePatternGroupOrDefault', '([\\s\\S]*)\\((.*)\\)', 'testVerySimpleGroupCase1(org.spearce.jgit.fnmatch.FileNameMatcherTest)')","[5980, 23587]"
"('Description.java', 'org.junit.runner.Description', 'methodAndClassNamePatternGroupOrDefault', '([\\s\\S]*)\\((.*)\\)', 'testThreeEntries_Seek2(org.spearce.jgit.treewalk.CanonicalTreeParserTest)')","[16410, 34015]"
"('Description.java', 'org.junit.runner.Description', 'methodAndClassNamePatternGroupOrDefault', '([\\s\\S]*)\\((.*)\\)', 'testDirectoryFileConflicts_4(org.spearce.jgit.lib.ReadTreeTest)')","[9388, 27085]"
"('Description.java', 'org.junit.runner.Description', 'methodAndClassNamePatternGroupOrDefault', '([\\s\\S]*)\\((.*)\\)', 'testNoDF_NoGap(org.spearce.jgit.treewalk.NameConflictTreeWalkTest)')","[16808, 34411]"
"('Description.java', 'org.junit.runner.Description', 'methodAndClassNamePatternGroupOrDefault', '([\\s\\S]*)\\((.*)\\)', 'testWithPostOrder_NoEnterSubtree(org.spearce.jgit.treewalk.PostOrderTreeWalkTest)')","[16987, 34587]"
"('Description.java', 'org.junit.runner.Description', 'methodAndClassNamePatternGroupOrDefault', '([\\s\\S]*)\\((.*)\\)', 'testVerySimplePatternCase4(org.spearce.jgit.fnmatch.FileNameMatcherTest)')","[4060, 21475]"
"('Description.java', 'org.junit.runner.Description', 'methodAndClassNamePatternGroupOrDefault', '([\\s\\S]*)\\((.*)\\)', 'testParse_AddNoNewline(org.spearce.jgit.patch.PatchTest)')","[931, 18263]"
"('Description.java', 'org.junit.runner.Description', 'methodAndClassNamePatternGroupOrDefault', '([\\s\\S]*)\\((.*)\\)', 'testValidTreeSorting4(org.spearce.jgit.lib.ObjectCheckerTest)')","[6559, 24203]"
"('Description.java', 'org.junit.runner.Description', 'methodAndClassNamePatternGroupOrDefault', '([\\s\\S]*)\\((.*)\\)', 'testXDigitGroupCase1(org.spearce.jgit.fnmatch.FileNameMatcherTest)')","[5520, 23081]"
"('Description.java', 'org.junit.runner.Description', 'methodAndClassNamePatternGroupOrDefault', '([\\s\\S]*)\\((.*)\\)', 'testValidTreeSorting6(org.spearce.jgit.lib.ObjectCheckerTest)')","[6599, 24247]"
"('Description.java', 'org.junit.runner.Description', 'methodAndClassNamePatternGroupOrDefault', '([\\s\\S]*)\\((.*)\\)', 'testParse_ShortLineOnlyEmbeddedLF(org.spearce.jgit.revwalk.RevTagParseTest)')","[13443, 31023]"
"('Description.java', 'org.junit.runner.Description', 'methodAndClassNamePatternGroupOrDefault', '([\\s\\S]*)\\((.*)\\)', 'testInvalidCommitInvalidAuthor6(org.spearce.jgit.lib.ObjectCheckerTest)')","[6899, 24577]"
"('Description.java', 'org.junit.runner.Description', 'methodAndClassNamePatternGroupOrDefault', '([\\s\\S]*)\\((.*)\\)', 'testEmptyIfRootDoesNotExist(org.spearce.jgit.treewalk.FileTreeIteratorTest)')","[16709, 34323]"
"('Description.java', 'org.junit.runner.Description', 'methodAndClassNamePatternGroupOrDefault', '([\\s\\S]*)\\((.*)\\)', 'testUpdateNonFastForwardForced(org.spearce.jgit.transport.PushProcessTest)')","[15574, 33179]"
"('Description.java', 'org.junit.runner.Description', 'methodAndClassNamePatternGroupOrDefault', '([\\s\\S]*)\\((.*)\\)', 'testSimpleT(org.spearce.jgit.lib.TreeIteratorPreOrderTest)')","[10603, 28317]"
"('Description.java', 'org.junit.runner.Description', 'methodAndClassNamePatternGroupOrDefault', '([\\s\\S]*)\\((.*)\\)', 'testDequote_BareABCZ_OnlyBC(org.spearce.jgit.util.QuotedStringGitPathStyleTest)')","[2701, 20001]"
"('Description.java', 'org.junit.runner.Description', 'methodAndClassNamePatternGroupOrDefault', '([\\s\\S]*)\\((.*)\\)', 'testBlankGroupCase1(org.spearce.jgit.fnmatch.FileNameMatcherTest)')","[5360, 22905]"
"('Description.java', 'org.junit.runner.Description', 'methodAndClassNamePatternGroupOrDefault', '([\\s\\S]*)\\((.*)\\)', 'testAlphaGroupCase1(org.spearce.jgit.fnmatch.FileNameMatcherTest)')","[4120, 21541]"
"('Description.java', 'org.junit.runner.Description', 'methodAndClassNamePatternGroupOrDefault', '([\\s\\S]*)\\((.*)\\)', 'testTreeOnlyOneLevel(org.spearce.jgit.lib.IndexTreeWalkerTest)')","[8135, 25853]"
"('Description.java', 'org.junit.runner.Description', 'methodAndClassNamePatternGroupOrDefault', '([\\s\\S]*)\\((.*)\\)', 'testDirectoryFileConflicts_3(org.spearce.jgit.lib.ReadTreeTest)')","[9368, 27063]"
"('Description.java', 'org.junit.runner.Description', 'methodAndClassNamePatternGroupOrDefault', '([\\s\\S]*)\\((.*)\\)', 'testQuote_BareA(org.spearce.jgit.util.QuotedStringBourneUserPathStyleTest)')","[2045, 19363]"
"('Description.java', 'org.junit.runner.Description', 'methodAndClassNamePatternGroupOrDefault', '([\\s\\S]*)\\((.*)\\)', 'testEmpty_DefaultCapacity(org.spearce.jgit.util.IntListTest)')","[1806, 19121]"
"('URIish.java', 'org.spearce.jgit.transport.URIish', '<init>', '^(?:([a-z][a-z0-9+-]+)://(?:([^/]+?)(?::([^/]+?))?@)?(?:([^/]+?))?(?::(\\d+))?)?((?:[A-Za-z]:)?/.+)$', 'file:///home/m y')","[40794, 40840]"
"('Description.java', 'org.junit.runner.Description', 'methodAndClassNamePatternGroupOrDefault', '([\\s\\S]*)\\((.*)\\)', 'testInvalidTagNoType4(org.spearce.jgit.lib.ObjectCheckerTest)')","[7559, 25303]"
"('Description.java', 'org.junit.runner.Description', 'methodAndClassNamePatternGroupOrDefault', '([\\s\\S]*)\\((.*)\\)', 'testDF_SkipsSeenSubtree(org.spearce.jgit.treewalk.NameConflictTreeWalkTest)')","[16868, 34477]"
"('URIish.java', 'org.spearce.jgit.transport.URIish', '<init>', '^(?:([a-z][a-z0-9+-]+)://(?:([^/]+?)(?::([^/]+?))?@)?(?:([^/]+?))?(?::(\\d+))?)?((?:[A-Za-z]:)?/.+)$', 'user@example.com:egit.git')",[42660]
"('Description.java', 'org.junit.runner.Description', 'methodAndClassNamePatternGroupOrDefault', '([\\s\\S]*)\\((.*)\\)', 'testInvalidCommitInvalidAuthor2(org.spearce.jgit.lib.ObjectCheckerTest)')","[6819, 24489]"
"('Description.java', 'org.junit.runner.Description', 'methodAndClassNamePatternGroupOrDefault', '([\\s\\S]*)\\((.*)\\)', 'testWritePack2DeltasReuseOffsets(org.spearce.jgit.lib.PackWriterTest)')","[9826, 27525]"
"('Description.java', 'org.junit.runner.Description', 'methodAndClassNamePatternGroupOrDefault', '([\\s\\S]*)\\((.*)\\)', 'org.spearce.jgit.lib.PackWriterTest')","[9806, 38535]"
"('Description.java', 'org.junit.runner.Description', 'methodAndClassNamePatternGroupOrDefault', '([\\s\\S]*)\\((.*)\\)', 'testMatch_NotEqual(org.spearce.jgit.util.RawParseUtils_MatchTest)')","[1328, 18637]"
"('Description.java', 'org.junit.runner.Description', 'methodAndClassNamePatternGroupOrDefault', '([\\s\\S]*)\\((.*)\\)', 'testSort_COMMIT_TIME_DESC(org.spearce.jgit.revwalk.RevWalkSortTest)')","[13901, 31485]"
"('Description.java', 'org.junit.runner.Description', 'methodAndClassNamePatternGroupOrDefault', '([\\s\\S]*)\\((.*)\\)', 'testInvalidTreeDuplicateNames3(org.spearce.jgit.lib.ObjectCheckerTest)')","[7719, 25479]"
"('Description.java', 'org.junit.runner.Description', 'methodAndClassNamePatternGroupOrDefault', '([\\s\\S]*)\\((.*)\\)', 'testReadMissing_RealIndex(org.spearce.jgit.dircache.DirCacheBasicTest)')","[11140, 28845]"
"('Description.java', 'org.junit.runner.Description', 'methodAndClassNamePatternGroupOrDefault', '([\\s\\S]*)\\((.*)\\)', 'testInvalidCommitNoTree3(org.spearce.jgit.lib.ObjectCheckerTest)')","[7459, 25193]"
"('Description.java', 'org.junit.runner.Description', 'methodAndClassNamePatternGroupOrDefault', '([\\s\\S]*)\\((.*)\\)', 'testInvalidTreeDuplicateNames4(org.spearce.jgit.lib.ObjectCheckerTest)')","[7739, 25501]"
"('QuotedString.java', 'org.spearce.jgit.util.QuotedString$BourneUserPathStyle', 'quote', '^~[A-Za-z0-9_-]*/.*$', '~foo/a')","[36502, 36549]"
"('Description.java', 'org.junit.runner.Description', 'methodAndClassNamePatternGroupOrDefault', '([\\s\\S]*)\\((.*)\\)', 'testNoSubtree_WithTreeWalk(org.spearce.jgit.dircache.DirCacheIteratorTest)')","[10662, 28361]"
"('Description.java', 'org.junit.runner.Description', 'methodAndClassNamePatternGroupOrDefault', '([\\s\\S]*)\\((.*)\\)', 'testParse_implicit_mixed_encoded(org.spearce.jgit.revwalk.RevTagParseTest)')","[13263, 30825]"
"('Description.java', 'org.junit.runner.Description', 'methodAndClassNamePatternGroupOrDefault', '([\\s\\S]*)\\((.*)\\)', 'testReset(org.spearce.jgit.fnmatch.FileNameMatcherTest)')","[3800, 21189]"
"('Description.java', 'org.junit.runner.Description', 'methodAndClassNamePatternGroupOrDefault', '([\\s\\S]*)\\((.*)\\)', 'testGraphGroupCase5(org.spearce.jgit.fnmatch.FileNameMatcherTest)')","[3740, 21123]"
"('Description.java', 'org.junit.runner.Description', 'methodAndClassNamePatternGroupOrDefault', '([\\s\\S]*)\\((.*)\\)', 'testWriteEmptyPack1(org.spearce.jgit.lib.PackWriterTest)')","[9846, 27547]"
"('Description.java', 'org.junit.runner.Description', 'methodAndClassNamePatternGroupOrDefault', '([\\s\\S]*)\\((.*)\\)', 'testInvalidCommitNoCommitter2(org.spearce.jgit.lib.ObjectCheckerTest)')","[7179, 24885]"
"('Description.java', 'org.junit.runner.Description', 'methodAndClassNamePatternGroupOrDefault', '([\\s\\S]*)\\((.*)\\)', 'testInvalidTreeNameIsDot(org.spearce.jgit.lib.ObjectCheckerTest)')","[6939, 24621]"
"('Description.java', 'org.junit.runner.Description', 'methodAndClassNamePatternGroupOrDefault', '([\\s\\S]*)\\((.*)\\)', 'testParse_explicit_bad_encoded2(org.spearce.jgit.revwalk.RevCommitParseTest)')","[14180, 31771]"
"('Description.java', 'org.junit.runner.Description', 'methodAndClassNamePatternGroupOrDefault', '([\\s\\S]*)\\((.*)\\)', 'testModifySettings(org.spearce.jgit.lib.PackWriterTest)')","[10106, 27833]"
"('Description.java', 'org.junit.runner.Description', 'methodAndClassNamePatternGroupOrDefault', '([\\s\\S]*)\\((.*)\\)', 'testDequote_Empty1(org.spearce.jgit.util.QuotedStringBourneUserPathStyleTest)')","[1925, 19231]"
"('Description.java', 'org.junit.runner.Description', 'methodAndClassNamePatternGroupOrDefault', '([\\s\\S]*)\\((.*)\\)', 'org.spearce.jgit.patch.FileHeaderTest')","[75, 35041]"
"('Description.java', 'org.junit.runner.Description', 'methodAndClassNamePatternGroupOrDefault', '([\\s\\S]*)\\((.*)\\)', 'test002_ReadWithSubsection(org.spearce.jgit.lib.RepositoryConfigTest)')","[7858, 25611]"
"('Description.java', 'org.junit.runner.Description', 'methodAndClassNamePatternGroupOrDefault', '([\\s\\S]*)\\((.*)\\)', 'org.spearce.jgit.util.NBTest')","[2482, 37719]"
"('Description.java', 'org.junit.runner.Description', 'methodAndClassNamePatternGroupOrDefault', '([\\s\\S]*)\\((.*)\\)', 'testCreateMatcherForSuffix(org.spearce.jgit.fnmatch.FileNameMatcherTest)')","[3780, 21167]"
"('Description.java', 'org.junit.runner.Description', 'methodAndClassNamePatternGroupOrDefault', '([\\s\\S]*)\\((.*)\\)', 'testWritePack3(org.spearce.jgit.lib.PackWriterTest)')","[9966, 27679]"
"('Description.java', 'org.junit.runner.Description', 'methodAndClassNamePatternGroupOrDefault', '([\\s\\S]*)\\((.*)\\)', 'testDirectoryFileConflicts_15(org.spearce.jgit.lib.ReadTreeTest)')","[9608, 27327]"
"('Description.java', 'org.junit.runner.Description', 'methodAndClassNamePatternGroupOrDefault', '([\\s\\S]*)\\((.*)\\)', 'testHasAnyFlag(org.spearce.jgit.revwalk.RevObjectTest)')","[12747, 30341]"
"('Description.java', 'org.junit.runner.Description', 'methodAndClassNamePatternGroupOrDefault', '([\\s\\S]*)\\((.*)\\)', 'testPrintGroupCase3(org.spearce.jgit.fnmatch.FileNameMatcherTest)')","[5060, 22575]"
"('Description.java', 'org.junit.runner.Description', 'methodAndClassNamePatternGroupOrDefault', '([\\s\\S]*)\\((.*)\\)', 'testTagTag(org.spearce.jgit.revwalk.RevTagParseTest)')","[13503, 31089]"
"('Description.java', 'org.junit.runner.Description', 'methodAndClassNamePatternGroupOrDefault', '([\\s\\S]*)\\((.*)\\)', 'testTagBlob(org.spearce.jgit.revwalk.RevTagParseTest)')","[13223, 30781]"
"('Description.java', 'org.junit.runner.Description', 'methodAndClassNamePatternGroupOrDefault', '([\\s\\S]*)\\((.*)\\)', 'testParse_implicit_UTF8_encoded(org.spearce.jgit.revwalk.RevCommitParseTest)')","[14120, 31705]"
"('Description.java', 'org.junit.runner.Description', 'methodAndClassNamePatternGroupOrDefault', '([\\s\\S]*)\\((.*)\\)', 'testRules1thru3_NoIndexEntry(org.spearce.jgit.lib.ReadTreeTest)')","[9188, 26865]"
"('Description.java', 'org.junit.runner.Description', 'methodAndClassNamePatternGroupOrDefault', '([\\s\\S]*)\\((.*)\\)', 'testFilePathCase0(org.spearce.jgit.fnmatch.FileNameMatcherTest)')","[4860, 22355]"
"('Description.java', 'org.junit.runner.Description', 'methodAndClassNamePatternGroupOrDefault', '([\\s\\S]*)\\((.*)\\)', 'testWritePack4(org.spearce.jgit.lib.PackWriterTest)')","[9986, 27701]"
"('Description.java', 'org.junit.runner.Description', 'methodAndClassNamePatternGroupOrDefault', '([\\s\\S]*)\\((.*)\\)', 'test7_FromString(org.spearce.jgit.lib.AbbreviatedObjectIdTest)')","[8633, 26359]"
"('Description.java', 'org.junit.runner.Description', 'methodAndClassNamePatternGroupOrDefault', '([\\s\\S]*)\\((.*)\\)', 'testIteratorReturnedValues1(org.spearce.jgit.lib.PackIndexV2Test)')","[8931, 26645]"
"('URIish.java', 'org.spearce.jgit.transport.URIish', '<init>', '^(?:([a-z][a-z0-9+-]+)://(?:([^/]+?)(?::([^/]+?))?@)?(?:([^/]+?))?(?::(\\d+))?)?((?:[A-Za-z]:)?/.+)$', '/another/dir')","[42383, 42567, 43358]"
"('Description.java', 'org.junit.runner.Description', 'methodAndClassNamePatternGroupOrDefault', '([\\s\\S]*)\\((.*)\\)', 'testInCoreLimit_SwitchOnCopy(org.spearce.jgit.util.TemporaryBufferTest)')","[1447, 18747]"
"('Description.java', 'org.junit.runner.Description', 'methodAndClassNamePatternGroupOrDefault', '([\\s\\S]*)\\((.*)\\)', 'testExpandFromDestination_NonWildcard(org.spearce.jgit.transport.RefSpecTestCase)')","[14836, 32409]"
"('Description.java', 'org.junit.runner.Description', 'methodAndClassNamePatternGroupOrDefault', '([\\s\\S]*)\\((.*)\\)', 'testDigitGroupCase5(org.spearce.jgit.fnmatch.FileNameMatcherTest)')","[4600, 22069]"
"('QuotedString.java', 'org.spearce.jgit.util.QuotedString$BourneUserPathStyle', 'quote', '^~[A-Za-z0-9_-]*/.*$', '!')","[37079, 37127]"
"('Description.java', 'org.junit.runner.Description', 'methodAndClassNamePatternGroupOrDefault', '([\\s\\S]*)\\((.*)\\)', 'testAlnumGroupCase0(org.spearce.jgit.fnmatch.FileNameMatcherTest)')","[5780, 23367]"
"('Description.java', 'org.junit.runner.Description', 'methodAndClassNamePatternGroupOrDefault', '([\\s\\S]*)\\((.*)\\)', 'testEntryObjectId(org.spearce.jgit.treewalk.EmptyTreeIteratorTest)')","[16351, 33971]"
"('Description.java', 'org.junit.runner.Description', 'methodAndClassNamePatternGroupOrDefault', '([\\s\\S]*)\\((.*)\\)', 'testQuote_BareA(org.spearce.jgit.util.QuotedStringBourneStyleTest)')","[2423, 19737]"
"('Description.java', 'org.junit.runner.Description', 'methodAndClassNamePatternGroupOrDefault', '([\\s\\S]*)\\((.*)\\)', 'testEmptyTree_NoTreeWalk(org.spearce.jgit.dircache.DirCacheIteratorTest)')","[10802, 28515]"
"('Description.java', 'org.junit.runner.Description', 'methodAndClassNamePatternGroupOrDefault', '([\\s\\S]*)\\((.*)\\)', 'testSshProtoWithUserPassAndPort(org.spearce.jgit.transport.URIishTest)')","[14418, 31991]"
"('Description.java', 'org.junit.runner.Description', 'methodAndClassNamePatternGroupOrDefault', '([\\s\\S]*)\\((.*)\\)', 'testFindingConflicts(org.spearce.jgit.lib.WorkDirCheckoutTest)')","[9030, 26733]"
"('Description.java', 'org.junit.runner.Description', 'methodAndClassNamePatternGroupOrDefault', '([\\s\\S]*)\\((.*)\\)', 'testParse_ShortLineOnlyEmbeddedAndEndingLF(org.spearce.jgit.revwalk.RevTagParseTest)')","[13483, 31067]"
"('Description.java', 'org.junit.runner.Description', 'methodAndClassNamePatternGroupOrDefault', '([\\s\\S]*)\\((.*)\\)', 'testCreateSubtreeIterator(org.spearce.jgit.treewalk.EmptyTreeIteratorTest)')","[16291, 33905]"
"('Description.java', 'org.junit.runner.Description', 'methodAndClassNamePatternGroupOrDefault', '([\\s\\S]*)\\((.*)\\)', 'testManySolutionsCase3(org.spearce.jgit.fnmatch.FileNameMatcherTest)')","[5180, 22707]"
"('Description.java', 'org.junit.runner.Description', 'methodAndClassNamePatternGroupOrDefault', '([\\s\\S]*)\\((.*)\\)', 'testParse_implicit_UTF8_encoded(org.spearce.jgit.revwalk.RevTagParseTest)')","[13323, 30891]"
"('Description.java', 'org.junit.runner.Description', 'methodAndClassNamePatternGroupOrDefault', '([\\s\\S]*)\\((.*)\\)', 'testSort_Default(org.spearce.jgit.revwalk.RevWalkSortTest)')","[13881, 31463]"
"('Description.java', 'org.junit.runner.Description', 'methodAndClassNamePatternGroupOrDefault', '([\\s\\S]*)\\((.*)\\)', 'testFilter_NO_MERGES(org.spearce.jgit.revwalk.RevWalkFilterTest)')","[13722, 31309]"
"('Description.java', 'org.junit.runner.Description', 'methodAndClassNamePatternGroupOrDefault', '([\\s\\S]*)\\((.*)\\)', 'testDecodeUInt32(org.spearce.jgit.util.NBTest)')","[2522, 19825]"
"('Description.java', 'org.junit.runner.Description', 'methodAndClassNamePatternGroupOrDefault', '([\\s\\S]*)\\((.*)\\)', 'testDequote_Empty2(org.spearce.jgit.util.QuotedStringBourneUserPathStyleTest)')","[1945, 19253]"
"('Description.java', 'org.junit.runner.Description', 'methodAndClassNamePatternGroupOrDefault', '([\\s\\S]*)\\((.*)\\)', 'test2(org.spearce.jgit.revwalk.RevWalkPathFilter6012Test)')","[13005, 30583]"
"('Description.java', 'org.junit.runner.Description', 'methodAndClassNamePatternGroupOrDefault', '([\\s\\S]*)\\((.*)\\)', 'testEmpty(org.spearce.jgit.revwalk.AlwaysEmptyRevQueueTest)')","[11992, 29615]"
"('Description.java', 'org.junit.runner.Description', 'methodAndClassNamePatternGroupOrDefault', '([\\s\\S]*)\\((.*)\\)', 'testShouldBeRecursive_ALL(org.spearce.jgit.treewalk.filter.NotTreeFilterTest)')","[17146, 34741]"
"('Description.java', 'org.junit.runner.Description', 'methodAndClassNamePatternGroupOrDefault', '([\\s\\S]*)\\((.*)\\)', 'testBlankGroupCase4(org.spearce.jgit.fnmatch.FileNameMatcherTest)')","[5420, 22971]"
"('Description.java', 'org.junit.runner.Description', 'methodAndClassNamePatternGroupOrDefault', '([\\s\\S]*)\\((.*)\\)', 'testClear(org.spearce.jgit.revwalk.FIFORevQueueTest)')","[12131, 29747]"
"('URIish.java', 'org.spearce.jgit.transport.URIish', '<init>', '^(?:([a-z][a-z0-9+-]+)://(?:([^/]+?)(?::([^/]+?))?@)?(?:([^/]+?))?(?::(\\d+))?)?((?:[A-Za-z]:)?/.+)$', 'ssh+git://example.com/some/p ath')","[40610, 40656]"
"('Description.java', 'org.junit.runner.Description', 'methodAndClassNamePatternGroupOrDefault', '([\\s\\S]*)\\((.*)\\)', 'testMixedGroupCase7(org.spearce.jgit.fnmatch.FileNameMatcherTest)')","[3560, 20925]"
"('Description.java', 'org.junit.runner.Description', 'methodAndClassNamePatternGroupOrDefault', '([\\s\\S]*)\\((.*)\\)', 'testMaster(org.spearce.jgit.transport.RefSpecTestCase)')","[15016, 32607]"
"('Description.java', 'org.junit.runner.Description', 'methodAndClassNamePatternGroupOrDefault', '([\\s\\S]*)\\((.*)\\)', 'testSaveAllTags(org.spearce.jgit.transport.RemoteConfigTest)')","[15853, 33465]"
"('Description.java', 'org.junit.runner.Description', 'methodAndClassNamePatternGroupOrDefault', '([\\s\\S]*)\\((.*)\\)', 'testTrivialTwoWay_validSubtreeSort(org.spearce.jgit.merge.SimpleMergeTest)')","[1149, 18461]"
"('Description.java', 'org.junit.runner.Description', 'methodAndClassNamePatternGroupOrDefault', '([\\s\\S]*)\\((.*)\\)', 'testRevObjectTypes(org.spearce.jgit.revwalk.RevObjectTest)')","[12707, 30297]"
"('Description.java', 'org.junit.runner.Description', 'methodAndClassNamePatternGroupOrDefault', '([\\s\\S]*)\\((.*)\\)', 'testParse_explicit_bad_encoded(org.spearce.jgit.revwalk.RevTagParseTest)')","[13423, 31001]"
"('Description.java', 'org.junit.runner.Description', 'methodAndClassNamePatternGroupOrDefault', '([\\s\\S]*)\\((.*)\\)', 'testDirectoryFileConflicts_7(org.spearce.jgit.lib.ReadTreeTest)')","[9448, 27151]"
"('Description.java', 'org.junit.runner.Description', 'methodAndClassNamePatternGroupOrDefault', '([\\s\\S]*)\\((.*)\\)', 'testInvalidTreeBadSorting3(org.spearce.jgit.lib.ObjectCheckerTest)')","[6479, 24115]"
"('Description.java', 'org.junit.runner.Description', 'methodAndClassNamePatternGroupOrDefault', '([\\s\\S]*)\\((.*)\\)', 'testAlias_PreferredAuthentications(org.spearce.jgit.transport.OpenSshConfigTest)')","[15335, 32937]"
"('Description.java', 'org.junit.runner.Description', 'methodAndClassNamePatternGroupOrDefault', '([\\s\\S]*)\\((.*)\\)', 'testWritePack1NoObjectReuse(org.spearce.jgit.lib.PackWriterTest)')","[10006, 27723]"
"('Description.java', 'org.junit.runner.Description', 'methodAndClassNamePatternGroupOrDefault', '([\\s\\S]*)\\((.*)\\)', 'testInvalidTreeModeNotSupportedMode2(org.spearce.jgit.lib.ObjectCheckerTest)')","[6279, 23895]"
"('Description.java', 'org.junit.runner.Description', 'methodAndClassNamePatternGroupOrDefault', '([\\s\\S]*)\\((.*)\\)', 'testDirectoryFileConflicts_15b(org.spearce.jgit.lib.ReadTreeTest)')","[9228, 26909]"
"('Description.java', 'org.junit.runner.Description', 'methodAndClassNamePatternGroupOrDefault', '([\\s\\S]*)\\((.*)\\)', 'testDF_NoGap(org.spearce.jgit.treewalk.NameConflictTreeWalkTest)')","[16828, 34433]"
"('Description.java', 'org.junit.runner.Description', 'methodAndClassNamePatternGroupOrDefault', '([\\s\\S]*)\\((.*)\\)', 'testValidTree2(org.spearce.jgit.lib.ObjectCheckerTest)')","[6319, 23939]"
"('Description.java', 'org.junit.runner.Description', 'methodAndClassNamePatternGroupOrDefault', '([\\s\\S]*)\\((.*)\\)', 'testUpdateDeleteNonExisting(org.spearce.jgit.transport.PushProcessTest)')","[15674, 33289]"
"('Description.java', 'org.junit.runner.Description', 'methodAndClassNamePatternGroupOrDefault', '([\\s\\S]*)\\((.*)\\)', 'testPrintGroupCase2(org.spearce.jgit.fnmatch.FileNameMatcherTest)')","[5040, 22553]"
"('Description.java', 'org.junit.runner.Description', 'methodAndClassNamePatternGroupOrDefault', '([\\s\\S]*)\\((.*)\\)', 'testParseGitFileName_Empty(org.spearce.jgit.patch.FileHeaderTest)')","[375, 17735]"
"('Description.java', 'org.junit.runner.Description', 'methodAndClassNamePatternGroupOrDefault', '([\\s\\S]*)\\((.*)\\)', 'org.spearce.jgit.treewalk.NameConflictTreeWalkTest')","[16788, 44288]"
"('Description.java', 'org.junit.runner.Description', 'methodAndClassNamePatternGroupOrDefault', '([\\s\\S]*)\\((.*)\\)', 'testDecodeInt32(org.spearce.jgit.util.NBTest)')","[2562, 19869]"
"('Description.java', 'org.junit.runner.Description', 'methodAndClassNamePatternGroupOrDefault', '([\\s\\S]*)\\((.*)\\)', 'testFilter_NONE_And_MY_ALL(org.spearce.jgit.revwalk.RevWalkFilterTest)')","[13782, 31375]"
"('Description.java', 'org.junit.runner.Description', 'methodAndClassNamePatternGroupOrDefault', '([\\s\\S]*)\\((.*)\\)', 'testSetSourceDestination(org.spearce.jgit.transport.RefSpecTestCase)')","[14916, 32497]"
"('Description.java', 'org.junit.runner.Description', 'methodAndClassNamePatternGroupOrDefault', '([\\s\\S]*)\\((.*)\\)', 'testBlankGroupCase3(org.spearce.jgit.fnmatch.FileNameMatcherTest)')","[5400, 22949]"
"('Description.java', 'org.junit.runner.Description', 'methodAndClassNamePatternGroupOrDefault', '([\\s\\S]*)\\((.*)\\)', 'testInvalidTagNoTagHeader4(org.spearce.jgit.lib.ObjectCheckerTest)')","[7079, 24775]"
"('Description.java', 'org.junit.runner.Description', 'methodAndClassNamePatternGroupOrDefault', '([\\s\\S]*)\\((.*)\\)', 'testWritePack1(org.spearce.jgit.lib.PackWriterTest)')","[9926, 27635]"
"('Description.java', 'org.junit.runner.Description', 'methodAndClassNamePatternGroupOrDefault', '([\\s\\S]*)\\((.*)\\)', 'test007_readUserInfos(org.spearce.jgit.lib.RepositoryConfigTest)')","[7798, 25545]"
"('Description.java', 'org.junit.runner.Description', 'methodAndClassNamePatternGroupOrDefault', '([\\s\\S]*)\\((.*)\\)', 'testAlias_PreferredAuthenticationsDefault(org.spearce.jgit.transport.OpenSshConfigTest)')","[15215, 32805]"
"('Description.java', 'org.junit.runner.Description', 'methodAndClassNamePatternGroupOrDefault', '([\\s\\S]*)\\((.*)\\)', 'testOurs(org.spearce.jgit.merge.SimpleMergeTest)')","[1129, 18439]"
"('Description.java', 'org.junit.runner.Description', 'methodAndClassNamePatternGroupOrDefault', '([\\s\\S]*)\\((.*)\\)', 'test1(org.spearce.jgit.revwalk.RevWalkPathFilter6012Test)')","[12985, 30561]"
"('QuotedString.java', 'org.spearce.jgit.util.QuotedString$BourneUserPathStyle', 'quote', '^~[A-Za-z0-9_-]+$', ""a'b"")","[37176, 37224]"
"('Description.java', 'org.junit.runner.Description', 'methodAndClassNamePatternGroupOrDefault', '([\\s\\S]*)\\((.*)\\)', 'testUpdateNonFastForward(org.spearce.jgit.transport.PushProcessTest)')","[15654, 33267]"
"('Description.java', 'org.junit.runner.Description', 'methodAndClassNamePatternGroupOrDefault', '([\\s\\S]*)\\((.*)\\)', 'testClear(org.spearce.jgit.revwalk.LIFORevQueueTest)')","[12250, 29857]"
"('Description.java', 'org.junit.runner.Description', 'methodAndClassNamePatternGroupOrDefault', '([\\s\\S]*)\\((.*)\\)', 'testSimple1(org.spearce.jgit.revwalk.RevWalkPathFilter1Test)')","[11913, 29549]"
"('Description.java', 'org.junit.runner.Description', 'methodAndClassNamePatternGroupOrDefault', '([\\s\\S]*)\\((.*)\\)', 'testTwoCommitDeepTree2(org.spearce.jgit.revwalk.ObjectWalkTest)')","[12389, 29989]"
"('Description.java', 'org.junit.runner.Description', 'methodAndClassNamePatternGroupOrDefault', '([\\s\\S]*)\\((.*)\\)', 'testTwoCommitDeepTree1(org.spearce.jgit.revwalk.ObjectWalkTest)')","[12369, 29967]"
"('Description.java', 'org.junit.runner.Description', 'methodAndClassNamePatternGroupOrDefault', '([\\s\\S]*)\\((.*)\\)', 'testGitProtoUnix(org.spearce.jgit.transport.URIishTest)')","[14678, 32277]"
"('Description.java', 'org.junit.runner.Description', 'methodAndClassNamePatternGroupOrDefault', '([\\s\\S]*)\\((.*)\\)', 'testSort_COMMIT_TIME_DESC_OutOfOrder2(org.spearce.jgit.revwalk.RevWalkSortTest)')","[13941, 31529]"
"('URIish.java', 'org.spearce.jgit.transport.URIish', '<init>', '^(?:([a-z][a-z0-9+-]+)://(?:([^/]+?)(?::([^/]+?))?@)?(?:([^/]+?))?(?::(\\d+))?)?((?:[A-Za-z]:)?/.+)$', '/home/m y')","[40702, 40748]"
"('Description.java', 'org.junit.runner.Description', 'methodAndClassNamePatternGroupOrDefault', '([\\s\\S]*)\\((.*)\\)', 'org.spearce.jgit.lib.AbbreviatedObjectIdTest')","[8313, 38178]"
"('Description.java', 'org.junit.runner.Description', 'methodAndClassNamePatternGroupOrDefault', '([\\s\\S]*)\\((.*)\\)', 'testProperlyCullAllAncestors1(org.spearce.jgit.revwalk.RevWalkCullTest)')","[13164, 30737]"
"('Description.java', 'org.junit.runner.Description', 'methodAndClassNamePatternGroupOrDefault', '([\\s\\S]*)\\((.*)\\)', 'testUpdateDelete(org.spearce.jgit.transport.PushProcessTest)')","[15474, 33069]"
"('Description.java', 'org.junit.runner.Description', 'methodAndClassNamePatternGroupOrDefault', '([\\s\\S]*)\\((.*)\\)', 'testLooseDelete(org.spearce.jgit.lib.RefUpdateTest)')","[10444, 28163]"
"('Description.java', 'org.junit.runner.Description', 'methodAndClassNamePatternGroupOrDefault', '([\\s\\S]*)\\((.*)\\)', 'testTwoLineNoLF(org.spearce.jgit.util.RawParseUtils_LineMapTest)')","[2244, 19561]"
"('Description.java', 'org.junit.runner.Description', 'methodAndClassNamePatternGroupOrDefault', '([\\s\\S]*)\\((.*)\\)', 'testEmptyCache_Clear_NoCacheTree(org.spearce.jgit.dircache.DirCacheTreeTest)')","[11219, 28911]"
"('Description.java', 'org.junit.runner.Description', 'methodAndClassNamePatternGroupOrDefault', '([\\s\\S]*)\\((.*)\\)', 'testEmpty(org.spearce.jgit.lib.TreeIteratorPostOrderTest)')","[9069, 26755]"
"('Description.java', 'org.junit.runner.Description', 'methodAndClassNamePatternGroupOrDefault', '([\\s\\S]*)\\((.*)\\)', 'testNone(org.spearce.jgit.revwalk.RevWalkMergeBaseTest)')","[12508, 30099]"
"('Description.java', 'org.junit.runner.Description', 'methodAndClassNamePatternGroupOrDefault', '([\\s\\S]*)\\((.*)\\)', 'testPrefixCompare_17(org.spearce.jgit.lib.AbbreviatedObjectIdTest)')","[8433, 26139]"
"('Description.java', 'org.junit.runner.Description', 'methodAndClassNamePatternGroupOrDefault', '([\\s\\S]*)\\((.*)\\)', 'testInversedGroupCase1(org.spearce.jgit.fnmatch.FileNameMatcherTest)')","[4180, 21607]"
"('Description.java', 'org.junit.runner.Description', 'methodAndClassNamePatternGroupOrDefault', '([\\s\\S]*)\\((.*)\\)', 'testReadIndex_LsFiles(org.spearce.jgit.dircache.DirCacheCGitCompatabilityTest)')","[11555, 29197]"
"('Description.java', 'org.junit.runner.Description', 'methodAndClassNamePatternGroupOrDefault', '([\\s\\S]*)\\((.*)\\)', 'testInvalidTagInvalidTaggerHeader1(org.spearce.jgit.lib.ObjectCheckerTest)')","[6979, 24665]"
"('Description.java', 'org.junit.runner.Description', 'methodAndClassNamePatternGroupOrDefault', '([\\s\\S]*)\\((.*)\\)', 'testParse_NoParents(org.spearce.jgit.revwalk.RevCommitParseTest)')","[14280, 31881]"
"('Description.java', 'org.junit.runner.Description', 'methodAndClassNamePatternGroupOrDefault', '([\\s\\S]*)\\((.*)\\)', 'testUploadPack(org.spearce.jgit.transport.RemoteConfigTest)')","[15833, 33443]"
"('Description.java', 'org.junit.runner.Description', 'methodAndClassNamePatternGroupOrDefault', '([\\s\\S]*)\\((.*)\\)', 'testCloneFIFO(org.spearce.jgit.revwalk.DateRevQueueTest)')","[11654, 29285]"
"('Description.java', 'org.junit.runner.Description', 'methodAndClassNamePatternGroupOrDefault', '([\\s\\S]*)\\((.*)\\)', 'testOneBlockAndHalf_BulkWrite(org.spearce.jgit.util.TemporaryBufferTest)')","[1587, 18901]"
"('Description.java', 'org.junit.runner.Description', 'methodAndClassNamePatternGroupOrDefault', '([\\s\\S]*)\\((.*)\\)', 'testIndexOnlyOneLevel(org.spearce.jgit.lib.IndexTreeWalkerTest)')","[8175, 25897]"
"('Description.java', 'org.junit.runner.Description', 'methodAndClassNamePatternGroupOrDefault', '([\\s\\S]*)\\((.*)\\)', 'testValidCommit1Parent(org.spearce.jgit.lib.ObjectCheckerTest)')","[6239, 23851]"
"('Description.java', 'org.junit.runner.Description', 'methodAndClassNamePatternGroupOrDefault', '([\\s\\S]*)\\((.*)\\)', 'testSimpleT(org.spearce.jgit.lib.TreeIteratorLeafOnlyTest)')","[7997, 25743]"
"('Description.java', 'org.junit.runner.Description', 'methodAndClassNamePatternGroupOrDefault', '([\\s\\S]*)\\((.*)\\)', 'testWriteEmptyLockEmpty_RealIndex(org.spearce.jgit.dircache.DirCacheBasicTest)')","[11120, 28823]"
"('Description.java', 'org.junit.runner.Description', 'methodAndClassNamePatternGroupOrDefault', '([\\s\\S]*)\\((.*)\\)', 'org.spearce.jgit.treewalk.FileTreeIteratorTest')","[16669, 44237]"
"('Description.java', 'org.junit.runner.Description', 'methodAndClassNamePatternGroupOrDefault', '([\\s\\S]*)\\((.*)\\)', 'testMixedGroupCase9(org.spearce.jgit.fnmatch.FileNameMatcherTest)')","[3600, 20969]"
"('Description.java', 'org.junit.runner.Description', 'methodAndClassNamePatternGroupOrDefault', '([\\s\\S]*)\\((.*)\\)', 'testMatch_Equal(org.spearce.jgit.util.RawParseUtils_MatchTest)')","[1348, 18659]"
"('Description.java', 'org.junit.runner.Description', 'methodAndClassNamePatternGroupOrDefault', '([\\s\\S]*)\\((.*)\\)', 'testFilter_MY_ALL_Or_NONE(org.spearce.jgit.revwalk.RevWalkFilterTest)')","[13702, 31287]"
"('Description.java', 'org.junit.runner.Description', 'methodAndClassNamePatternGroupOrDefault', '([\\s\\S]*)\\((.*)\\)', 'testParse_NoMessage(org.spearce.jgit.revwalk.RevTagParseTest)')","[13283, 30847]"
"('Description.java', 'org.junit.runner.Description', 'methodAndClassNamePatternGroupOrDefault', '([\\s\\S]*)\\((.*)\\)', 'testSshGitProto(org.spearce.jgit.transport.URIishTest)')","[14458, 32035]"
"('Description.java', 'org.junit.runner.Description', 'methodAndClassNamePatternGroupOrDefault', '([\\s\\S]*)\\((.*)\\)', 'testFindNextOffsetWrongOffset(org.spearce.jgit.lib.PackReverseIndexTest)')","[9747, 27459]"
"('Description.java', 'org.junit.runner.Description', 'methodAndClassNamePatternGroupOrDefault', '([\\s\\S]*)\\((.*)\\)', 'testEncodeInt32(org.spearce.jgit.util.NBTest)')","[2622, 19935]"
"('Description.java', 'org.junit.runner.Description', 'methodAndClassNamePatternGroupOrDefault', '([\\s\\S]*)\\((.*)\\)', 'org.spearce.jgit.util.QuotedStringBourneUserPathStyleTest')","[1885, 37566]"
"('Description.java', 'org.junit.runner.Description', 'methodAndClassNamePatternGroupOrDefault', '([\\s\\S]*)\\((.*)\\)', 'testIndexOnlySubDirs(org.spearce.jgit.lib.IndexTreeWalkerTest)')","[8155, 25875]"
"('Description.java', 'org.junit.runner.Description', 'methodAndClassNamePatternGroupOrDefault', '([\\s\\S]*)\\((.*)\\)', 'testEncodeASCII_Number13(org.spearce.jgit.lib.ConstantsEncodingTest)')","[8852, 26579]"
"('Description.java', 'org.junit.runner.Description', 'methodAndClassNamePatternGroupOrDefault', '([\\s\\S]*)\\((.*)\\)', 'testUpperGroupCase1(org.spearce.jgit.fnmatch.FileNameMatcherTest)')","[5240, 22773]"
"('Description.java', 'org.junit.runner.Description', 'methodAndClassNamePatternGroupOrDefault', '([\\s\\S]*)\\((.*)\\)', 'testParse_GitBinaryDelta(org.spearce.jgit.patch.PatchTest)')","[891, 18219]"
"('Description.java', 'org.junit.runner.Description', 'methodAndClassNamePatternGroupOrDefault', '([\\s\\S]*)\\((.*)\\)', 'testParseAbbrIndexLine_NoMode(org.spearce.jgit.patch.FileHeaderTest)')","[455, 17823]"
"('Description.java', 'org.junit.runner.Description', 'methodAndClassNamePatternGroupOrDefault', '([\\s\\S]*)\\((.*)\\)', 'testInvalidCommitInvalidParent2(org.spearce.jgit.lib.ObjectCheckerTest)')","[6699, 24357]"
"('Description.java', 'org.junit.runner.Description', 'methodAndClassNamePatternGroupOrDefault', '([\\s\\S]*)\\((.*)\\)', 'org.spearce.jgit.util.IntListTest')","[1666, 35500]"
"('Description.java', 'org.junit.runner.Description', 'methodAndClassNamePatternGroupOrDefault', '([\\s\\S]*)\\((.*)\\)', 'testMixedGroupCase8(org.spearce.jgit.fnmatch.FileNameMatcherTest)')","[3580, 20947]"
"('Description.java', 'org.junit.runner.Description', 'methodAndClassNamePatternGroupOrDefault', '([\\s\\S]*)\\((.*)\\)', 'testOneBlankLine(org.spearce.jgit.util.RawParseUtils_LineMapTest)')","[2184, 19495]"
"('Description.java', 'org.junit.runner.Description', 'methodAndClassNamePatternGroupOrDefault', '([\\s\\S]*)\\((.*)\\)', 'testBackDoesNothing(org.spearce.jgit.treewalk.EmptyTreeIteratorTest)')","[16331, 33949]"
"('Description.java', 'org.junit.runner.Description', 'methodAndClassNamePatternGroupOrDefault', '([\\s\\S]*)\\((.*)\\)', 'testAddRevFlagSet(org.spearce.jgit.revwalk.RevObjectTest)')","[12667, 30253]"
"('Description.java', 'org.junit.runner.Description', 'methodAndClassNamePatternGroupOrDefault', '([\\s\\S]*)\\((.*)\\)', 'testSort_TOPO_REVERSE(org.spearce.jgit.revwalk.RevWalkSortTest)')","[13961, 31551]"
"('Description.java', 'org.junit.runner.Description', 'methodAndClassNamePatternGroupOrDefault', '([\\s\\S]*)\\((.*)\\)', 'testAddOne(org.spearce.jgit.revwalk.RevFlagSetTest)')","[12886, 30473]"
"('URIish.java', 'org.spearce.jgit.transport.URIish', '<init>', '^(?:([a-z][a-z0-9+-]+)://(?:([^/]+?)(?::([^/]+?))?@)?(?:([^/]+?))?(?::(\\d+))?)?((?:[A-Za-z]:)?/.+)$', 'ssh://example.com/some/p ath')","[41530, 41576]"
"('Description.java', 'org.junit.runner.Description', 'methodAndClassNamePatternGroupOrDefault', '([\\s\\S]*)\\((.*)\\)', 'testEmpty_FromString(org.spearce.jgit.lib.AbbreviatedObjectIdTest)')","[8393, 26095]"
"('Description.java', 'org.junit.runner.Description', 'methodAndClassNamePatternGroupOrDefault', '([\\s\\S]*)\\((.*)\\)', 'testSimple(org.spearce.jgit.transport.RemoteConfigTest)')","[16093, 33729]"
"('URIish.java', 'org.spearce.jgit.transport.URIish', '<init>', '^(?:([^@]+?)@)?([^:]+?):(.+)$', 'user@repo.or.cz:/srv/git/egit.git')",[43637]
"('URIish.java', 'org.spearce.jgit.transport.URIish', '<init>', '^(?:([a-z][a-z0-9+-]+)://(?:([^/]+?)(?::([^/]+?))?@)?(?:([^/]+?))?(?::(\\d+))?)?((?:[A-Za-z]:)?/.+)$', 'ssh://user@example.com:33/some/p ath')","[40518, 40564]"
"('Description.java', 'org.junit.runner.Description', 'methodAndClassNamePatternGroupOrDefault', '([\\s\\S]*)\\((.*)\\)', 'testParse_OnlyLFMessage(org.spearce.jgit.revwalk.RevTagParseTest)')","[13303, 30869]"
"('Description.java', 'org.junit.runner.Description', 'methodAndClassNamePatternGroupOrDefault', '([\\s\\S]*)\\((.*)\\)', 'testTricky(org.spearce.jgit.lib.TreeIteratorPostOrderTest)')","[9149, 26843]"
"('Description.java', 'org.junit.runner.Description', 'methodAndClassNamePatternGroupOrDefault', '([\\s\\S]*)\\((.*)\\)', 'testEmpty(org.spearce.jgit.revwalk.DateRevQueueTest)')","[11634, 29263]"
"('Description.java', 'org.junit.runner.Description', 'methodAndClassNamePatternGroupOrDefault', '([\\s\\S]*)\\((.*)\\)', 'testBuildOneFile_FinishWriteCommit(org.spearce.jgit.dircache.DirCacheBuilderTest)')","[10841, 28537]"
"('Description.java', 'org.junit.runner.Description', 'methodAndClassNamePatternGroupOrDefault', '([\\s\\S]*)\\((.*)\\)', 'testEmptyCache_NoCacheTree(org.spearce.jgit.dircache.DirCacheTreeTest)')","[11199, 28889]"
"('Description.java', 'org.junit.runner.Description', 'methodAndClassNamePatternGroupOrDefault', '([\\s\\S]*)\\((.*)\\)', 'testDirectoryFileConflicts_6(org.spearce.jgit.lib.ReadTreeTest)')","[9428, 27129]"
"('QuotedString.java', 'org.spearce.jgit.util.QuotedString$BourneUserPathStyle', 'quote', '^~[A-Za-z0-9_-]+$', '~/')","[36217, 36264]"
"('Description.java', 'org.junit.runner.Description', 'methodAndClassNamePatternGroupOrDefault', '([\\s\\S]*)\\((.*)\\)', 'testNextDoesNothing(org.spearce.jgit.treewalk.EmptyTreeIteratorTest)')","[16371, 33993]"
"('Description.java', 'org.junit.runner.Description', 'methodAndClassNamePatternGroupOrDefault', '([\\s\\S]*)\\((.*)\\)', 'testAdd_ReverseGitSortOrder(org.spearce.jgit.dircache.DirCacheBuilderTest)')","[10901, 28603]"
"('Description.java', 'org.junit.runner.Description', 'methodAndClassNamePatternGroupOrDefault', '([\\s\\S]*)\\((.*)\\)', 'testAddURI(org.spearce.jgit.transport.RemoteConfigTest)')","[16033, 33663]"
"('Description.java', 'org.junit.runner.Description', 'methodAndClassNamePatternGroupOrDefault', '([\\s\\S]*)\\((.*)\\)', 'testSpaceGroupCase4(org.spearce.jgit.fnmatch.FileNameMatcherTest)')","[4320, 21761]"
"('Description.java', 'org.junit.runner.Description', 'methodAndClassNamePatternGroupOrDefault', '([\\s\\S]*)\\((.*)\\)', 'testFilePathCase1(org.spearce.jgit.fnmatch.FileNameMatcherTest)')","[4880, 22377]"
"('Description.java', 'org.junit.runner.Description', 'methodAndClassNamePatternGroupOrDefault', '([\\s\\S]*)\\((.*)\\)', 'testInvalidTreeTruncatedInObjectId(org.spearce.jgit.lib.ObjectCheckerTest)')","[6059, 23653]"
"('URIish.java', 'org.spearce.jgit.transport.URIish', '<init>', '^(?:([a-z][a-z0-9+-]+)://(?:([^/]+?)(?::([^/]+?))?@)?(?:([^/]+?))?(?::(\\d+))?)?((?:[A-Za-z]:)?/.+)$', 'in-memory://')","[39908, 40002, 40096, 40190]"
"('Description.java', 'org.junit.runner.Description', 'methodAndClassNamePatternGroupOrDefault', '([\\s\\S]*)\\((.*)\\)', 'testValidEmptyTree(org.spearce.jgit.lib.ObjectCheckerTest)')","[7099, 24797]"
"('Description.java', 'org.junit.runner.Description', 'methodAndClassNamePatternGroupOrDefault', '([\\s\\S]*)\\((.*)\\)', 'testVerySimpleWildCardCase2(org.spearce.jgit.fnmatch.FileNameMatcherTest)')","[3300, 20639]"
"('Description.java', 'org.junit.runner.Description', 'methodAndClassNamePatternGroupOrDefault', '([\\s\\S]*)\\((.*)\\)', 'testDequote_Empty2(org.spearce.jgit.util.QuotedStringGitPathStyleTest)')","[2741, 20045]"
"('Description.java', 'org.junit.runner.Description', 'methodAndClassNamePatternGroupOrDefault', '([\\s\\S]*)\\((.*)\\)', 'testWriteEmptyUnlock_RealIndex(org.spearce.jgit.dircache.DirCacheBasicTest)')","[11040, 28735]"
"('Description.java', 'org.junit.runner.Description', 'methodAndClassNamePatternGroupOrDefault', '([\\s\\S]*)\\((.*)\\)', 'testTwoCommitTwoTreeTwoBlob(org.spearce.jgit.revwalk.ObjectWalkTest)')","[12409, 30011]"
"('Description.java', 'org.junit.runner.Description', 'methodAndClassNamePatternGroupOrDefault', '([\\s\\S]*)\\((.*)\\)', 'testHasRevFlag(org.spearce.jgit.revwalk.RevObjectTest)')","[12627, 30209]"
"('Description.java', 'org.junit.runner.Description', 'methodAndClassNamePatternGroupOrDefault', '([\\s\\S]*)\\((.*)\\)', 'testPrintGroupCase4(org.spearce.jgit.fnmatch.FileNameMatcherTest)')","[5080, 22597]"
"('Description.java', 'org.junit.runner.Description', 'methodAndClassNamePatternGroupOrDefault', '([\\s\\S]*)\\((.*)\\)', 'testIgnoreNonExistingObjects(org.spearce.jgit.lib.PackWriterTest)')","[10086, 27811]"
"('Description.java', 'org.junit.runner.Description', 'methodAndClassNamePatternGroupOrDefault', '([\\s\\S]*)\\((.*)\\)', 'testShouldBeRecursive_PathFilter(org.spearce.jgit.treewalk.filter.NotTreeFilterTest)')","[17106, 34697]"
"('Description.java', 'org.junit.runner.Description', 'methodAndClassNamePatternGroupOrDefault', '([\\s\\S]*)\\((.*)\\)', 'testEdits_MatchAll(org.spearce.jgit.revwalk.RevWalkPathFilter1Test)')","[11933, 29571]"
"('Description.java', 'org.junit.runner.Description', 'methodAndClassNamePatternGroupOrDefault', '([\\s\\S]*)\\((.*)\\)', 'testEquals(org.spearce.jgit.revwalk.RevFlagSetTest)')","[12926, 30517]"
"('Description.java', 'org.junit.runner.Description', 'methodAndClassNamePatternGroupOrDefault', '([\\s\\S]*)\\((.*)\\)', 'testTwoGroupsCase0(org.spearce.jgit.fnmatch.FileNameMatcherTest)')","[4340, 21783]"
"('Description.java', 'org.junit.runner.Description', 'methodAndClassNamePatternGroupOrDefault', '([\\s\\S]*)\\((.*)\\)', 'testSpecialGroupCase7(org.spearce.jgit.fnmatch.FileNameMatcherTest)')","[3220, 20551]"
"('Description.java', 'org.junit.runner.Description', 'methodAndClassNamePatternGroupOrDefault', '([\\s\\S]*)\\((.*)\\)', 'testInvalidCommitInvalidTree4(org.spearce.jgit.lib.ObjectCheckerTest)')","[6219, 23829]"
"('Description.java', 'org.junit.runner.Description', 'methodAndClassNamePatternGroupOrDefault', '([\\s\\S]*)\\((.*)\\)', 'testAlias_DoesNotMatch(org.spearce.jgit.transport.OpenSshConfigTest)')","[15135, 32717]"
"('Description.java', 'org.junit.runner.Description', 'methodAndClassNamePatternGroupOrDefault', '([\\s\\S]*)\\((.*)\\)', 'testAlias_OptionsSet(org.spearce.jgit.transport.OpenSshConfigTest)')","[15155, 32739]"
"('Description.java', 'org.junit.runner.Description', 'methodAndClassNamePatternGroupOrDefault', '([\\s\\S]*)\\((.*)\\)', 'org.spearce.jgit.dircache.DirCacheBuilderTest')","[10821, 38790]"
"('Description.java', 'org.junit.runner.Description', 'methodAndClassNamePatternGroupOrDefault', '([\\s\\S]*)\\((.*)\\)', 'testQuote_BareA(org.spearce.jgit.util.QuotedStringGitPathStyleTest)')","[2941, 20265]"
"('Description.java', 'org.junit.runner.Description', 'methodAndClassNamePatternGroupOrDefault', '([\\s\\S]*)\\((.*)\\)', 'testDequote_LoneBackslash(org.spearce.jgit.util.QuotedStringBourneUserPathStyleTest)')","[1965, 19275]"
"('Description.java', 'org.junit.runner.Description', 'methodAndClassNamePatternGroupOrDefault', '([\\s\\S]*)\\((.*)\\)', 'testAlphaGroupCase2(org.spearce.jgit.fnmatch.FileNameMatcherTest)')","[4140, 21563]"
"('Description.java', 'org.junit.runner.Description', 'methodAndClassNamePatternGroupOrDefault', '([\\s\\S]*)\\((.*)\\)', 'test3(org.spearce.jgit.revwalk.RevWalkPathFilter6012Test)')","[13025, 30605]"
"('Description.java', 'org.junit.runner.Description', 'methodAndClassNamePatternGroupOrDefault', '([\\s\\S]*)\\((.*)\\)', 'testInvalidTagInvalidTaggerHeader3(org.spearce.jgit.lib.ObjectCheckerTest)')","[6999, 24687]"
"('Description.java', 'org.junit.runner.Description', 'methodAndClassNamePatternGroupOrDefault', '([\\s\\S]*)\\((.*)\\)', 'testInvalidCommitInvalidParent5(org.spearce.jgit.lib.ObjectCheckerTest)')","[6759, 24423]"
"('Description.java', 'org.junit.runner.Description', 'methodAndClassNamePatternGroupOrDefault', '([\\s\\S]*)\\((.*)\\)', 'testParse_WeirdHeaderOnlyCommit(org.spearce.jgit.revwalk.RevCommitParseTest)')","[14060, 31639]"
"('Description.java', 'org.junit.runner.Description', 'methodAndClassNamePatternGroupOrDefault', '([\\s\\S]*)\\((.*)\\)', 'testPunctGroupCase1(org.spearce.jgit.fnmatch.FileNameMatcherTest)')","[4800, 22289]"
"('Description.java', 'org.junit.runner.Description', 'methodAndClassNamePatternGroupOrDefault', '([\\s\\S]*)\\((.*)\\)', 'org.spearce.jgit.dircache.DirCacheIteratorTest')","[10642, 38739]"
"('Description.java', 'org.junit.runner.Description', 'methodAndClassNamePatternGroupOrDefault', '([\\s\\S]*)\\((.*)\\)', 'testWithPostOrder_EnterSubtree(org.spearce.jgit.treewalk.PostOrderTreeWalkTest)')","[17007, 34609]"
"('Description.java', 'org.junit.runner.Description', 'methodAndClassNamePatternGroupOrDefault', '([\\s\\S]*)\\((.*)\\)', 'testInvalidTagNoObject5(org.spearce.jgit.lib.ObjectCheckerTest)')","[7279, 24995]"
"('Description.java', 'org.junit.runner.Description', 'methodAndClassNamePatternGroupOrDefault', '([\\s\\S]*)\\((.*)\\)', 'testSetDestination_SourceNull(org.spearce.jgit.transport.RefSpecTestCase)')","[15076, 32673]"
"('Description.java', 'org.junit.runner.Description', 'methodAndClassNamePatternGroupOrDefault', '([\\s\\S]*)\\((.*)\\)', 'testWordroupCase5(org.spearce.jgit.fnmatch.FileNameMatcherTest)')","[5760, 23345]"
"('Description.java', 'org.junit.runner.Description', 'methodAndClassNamePatternGroupOrDefault', '([\\s\\S]*)\\((.*)\\)', 'testValidTree5(org.spearce.jgit.lib.ObjectCheckerTest)')","[6379, 24005]"
"('Description.java', 'org.junit.runner.Description', 'methodAndClassNamePatternGroupOrDefault', '([\\s\\S]*)\\((.*)\\)', 'testVerySimpleGroupRangeCase4(org.spearce.jgit.fnmatch.FileNameMatcherTest)')","[4700, 22179]"
"('Description.java', 'org.junit.runner.Description', 'methodAndClassNamePatternGroupOrDefault', '([\\s\\S]*)\\((.*)\\)', 'null')",[17]
"('Description.java', 'org.junit.runner.Description', 'methodAndClassNamePatternGroupOrDefault', '([\\s\\S]*)\\((.*)\\)', 'testXDigitGroupCase3(org.spearce.jgit.fnmatch.FileNameMatcherTest)')","[5560, 23125]"
"('Description.java', 'org.junit.runner.Description', 'methodAndClassNamePatternGroupOrDefault', '([\\s\\S]*)\\((.*)\\)', 'testSimpleIterate(org.spearce.jgit.treewalk.FileTreeIteratorTest)')","[16769, 34389]"
"('Description.java', 'org.junit.runner.Description', 'methodAndClassNamePatternGroupOrDefault', '([\\s\\S]*)\\((.*)\\)', 'testManySolutionsCase1(org.spearce.jgit.fnmatch.FileNameMatcherTest)')","[5140, 22663]"
"('Description.java', 'org.junit.runner.Description', 'methodAndClassNamePatternGroupOrDefault', '([\\s\\S]*)\\((.*)\\)', 'testForceMaster(org.spearce.jgit.transport.RefSpecTestCase)')","[14856, 32431]"
"('Description.java', 'org.junit.runner.Description', 'methodAndClassNamePatternGroupOrDefault', '([\\s\\S]*)\\((.*)\\)', 'testValidTreeSorting7(org.spearce.jgit.lib.ObjectCheckerTest)')","[6619, 24269]"
"('Description.java', 'org.junit.runner.Description', 'methodAndClassNamePatternGroupOrDefault', '([\\s\\S]*)\\((.*)\\)', 'test3_FromString(org.spearce.jgit.lib.AbbreviatedObjectIdTest)')","[8533, 26249]"
"('Description.java', 'org.junit.runner.Description', 'methodAndClassNamePatternGroupOrDefault', '([\\s\\S]*)\\((.*)\\)', 'testPath_4096(org.spearce.jgit.dircache.DirCacheLargePathTest)')","[11476, 29131]"
"('Description.java', 'org.junit.runner.Description', 'methodAndClassNamePatternGroupOrDefault', '([\\s\\S]*)\\((.*)\\)', 'testSimpleStarCase3(org.spearce.jgit.fnmatch.FileNameMatcherTest)')","[4480, 21937]"
"('Description.java', 'org.junit.runner.Description', 'methodAndClassNamePatternGroupOrDefault', '([\\s\\S]*)\\((.*)\\)', 'org.spearce.jgit.lib.IndexDiffTest')","[10205, 38586]"
"('Description.java', 'org.junit.runner.Description', 'methodAndClassNamePatternGroupOrDefault', '([\\s\\S]*)\\((.*)\\)', 'testUpperGroupCase5(org.spearce.jgit.fnmatch.FileNameMatcherTest)')","[5320, 22861]"
"('Description.java', 'org.junit.runner.Description', 'methodAndClassNamePatternGroupOrDefault', '([\\s\\S]*)\\((.*)\\)', 'org.spearce.jgit.transport.RefSpecTestCase')","[14796, 42189]"
"('Description.java', 'org.junit.runner.Description', 'methodAndClassNamePatternGroupOrDefault', '([\\s\\S]*)\\((.*)\\)', 'testVerySimpleGroupRangeCase2(org.spearce.jgit.fnmatch.FileNameMatcherTest)')","[4660, 22135]"
"('Description.java', 'org.junit.runner.Description', 'methodAndClassNamePatternGroupOrDefault', '([\\s\\S]*)\\((.*)\\)', 'testProperlyCullAllAncestors_LongHistory(org.spearce.jgit.revwalk.RevWalkCullTest)')","[13144, 30715]"
"('Description.java', 'org.junit.runner.Description', 'methodAndClassNamePatternGroupOrDefault', '([\\s\\S]*)\\((.*)\\)', 'test5(org.spearce.jgit.revwalk.RevWalkPathFilter6012Test)')","[13065, 30649]"
"('Description.java', 'org.junit.runner.Description', 'methodAndClassNamePatternGroupOrDefault', '([\\s\\S]*)\\((.*)\\)', 'testMissingSubtree_DetectFileAdded_FileModified(org.spearce.jgit.treewalk.TreeWalkBasicDiffTest)')","[17383, 34939]"
"('QuotedString.java', 'org.spearce.jgit.util.QuotedString$BourneUserPathStyle', 'quote', '^~[A-Za-z0-9_-]+$', 'a!b')","[37370, 37418]"
"('Description.java', 'org.junit.runner.Description', 'methodAndClassNamePatternGroupOrDefault', '([\\s\\S]*)\\((.*)\\)', 'testSetDestination(org.spearce.jgit.transport.RefSpecTestCase)')","[14896, 32475]"
"('Description.java', 'org.junit.runner.Description', 'methodAndClassNamePatternGroupOrDefault', '([\\s\\S]*)\\((.*)\\)', 'testVerySimpleGroupRangeCase5(org.spearce.jgit.fnmatch.FileNameMatcherTest)')","[4720, 22201]"
"('Description.java', 'org.junit.runner.Description', 'methodAndClassNamePatternGroupOrDefault', '([\\s\\S]*)\\((.*)\\)', 'testValidCommitNormalTime(org.spearce.jgit.lib.ObjectCheckerTest)')","[6959, 24643]"
"('Description.java', 'org.junit.runner.Description', 'methodAndClassNamePatternGroupOrDefault', '([\\s\\S]*)\\((.*)\\)', 'testFindRemoteRefUpdatesNoWildcardNoTracking(org.spearce.jgit.transport.TransportTest)')","[16192, 33817]"
"('Description.java', 'org.junit.runner.Description', 'methodAndClassNamePatternGroupOrDefault', '([\\s\\S]*)\\((.*)\\)', 'testXDigitGroupCase7(org.spearce.jgit.fnmatch.FileNameMatcherTest)')","[5640, 23213]"
"('Description.java', 'org.junit.runner.Description', 'methodAndClassNamePatternGroupOrDefault', '([\\s\\S]*)\\((.*)\\)', 'test4_FromString(org.spearce.jgit.lib.AbbreviatedObjectIdTest)')","[8553, 26271]"
"('Description.java', 'org.junit.runner.Description', 'methodAndClassNamePatternGroupOrDefault', '([\\s\\S]*)\\((.*)\\)', 'testMultipleHeads_SameBase1(org.spearce.jgit.revwalk.RevWalkMergeBaseTest)')","[12468, 30055]"
"('Description.java', 'org.junit.runner.Description', 'methodAndClassNamePatternGroupOrDefault', '([\\s\\S]*)\\((.*)\\)', 'testModified(org.spearce.jgit.lib.IndexDiffTest)')","[10285, 28009]"
