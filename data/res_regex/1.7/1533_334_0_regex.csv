"('Description.java', 'org.junit.runner.Description', 'getClassName', '(.*)\\((.*)\\)', 'testJustifyDoubleRoundigValueIncreasingDecimalsAndBlanckSpaces(com.disclinc.netmanager.function.test.JustifyFunctionTest)')","[4449, 4470, 4491]"
"('Description.java', 'org.junit.runner.Description', 'getClassName', '(.*)\\((.*)\\)', 'testUnstackingVariableThroughOldOperator(com.disclinc.netmanager.variable.test.StackingVariableAndNewOperatorTest)')","[1918, 1939, 1960]"
"('Description.java', 'org.junit.runner.Description', 'getClassName', '(.*)\\((.*)\\)', 'testReplaceSubstring(com.disclinc.netmanager.function.test.ReplaceFunctionTest)')","[3002, 3023, 3044, 13772]"
"('Description.java', 'org.junit.runner.Description', 'getClassName', '(.*)\\((.*)\\)', 'testMergingWithUndefinedVariableWithSubscript(com.disclinc.netmanager.function.test.MergeFunctionTest)')","[9660, 9681, 9702]"
"('Description.java', 'org.junit.runner.Description', 'getClassName', '(.*)\\((.*)\\)', 'com.disclinc.netmanager.function.test.Select2FunctionTest')","[20005, 20025, 20046, 20066]"
"('Description.java', 'org.junit.runner.Description', 'getClassName', '(.*)\\((.*)\\)', 'com.disclinc.netmanager.function.test.FNumberFunctionTest')","[17706, 17730, 17755, 17779]"
"('Description.java', 'org.junit.runner.Description', 'getClassName', '(.*)\\((.*)\\)', 'testValidateNullPointer(com.disclinc.netmanager.function.test.IsValidmumFunctionTest)')","[6579, 6600, 6621, 14773]"
"('Description.java', 'org.junit.runner.Description', 'parseMethod', '(.*)\\((.*)\\)', 'testValidateInteger(com.disclinc.netmanager.function.test.IsValidmumFunctionTest)')","[6642, 14794]"
"('Description.java', 'org.junit.runner.Description', 'parseMethod', '(.*)\\((.*)\\)', 'testValidateExponential(com.disclinc.netmanager.function.test.IsValidmumFunctionTest)')","[7146, 14920]"
"('Description.java', 'org.junit.runner.Description', 'getClassName', '(.*)\\((.*)\\)', 'testCovertToUppercase(com.disclinc.netmanager.function.test.ReplaceFunctionTest)')","[3506, 3527, 3548]"
"('Description.java', 'org.junit.runner.Description', 'parseMethod', '(.*)\\((.*)\\)', 'testValidateIntegerWithPlusSign(com.disclinc.netmanager.function.test.IsValidmumFunctionTest)')","[6810, 14836]"
"('mFnc.java', 'mLibrary.mFnc', '$isvalidnum', '[\\+{0,1}\\-{0,1}]{0,1}\\d+(\\.{0,1}\\d+E{0,1}\\d+){0,1}', '4.9E5')","[18441, 18465]"
"('Description.java', 'org.junit.runner.Description', 'parseMethod', '(.*)\\((.*)\\)', 'testCheckingUndefinedVariableAndWhichWithoutChildren(com.disclinc.netmanager.function.test.DataFunctionTest)')","[10872, 15923]"
"('Description.java', 'org.junit.runner.Description', 'parseMethod', '(.*)\\((.*)\\)', 'testTranslateNullSubstring(com.disclinc.netmanager.function.test.ReplaceFunctionTest)')","[3233, 13835]"
"('Description.java', 'org.junit.runner.Description', 'getClassName', '(.*)\\((.*)\\)', 'com.disclinc.netmanager.variable.test.StackingVariableAndNewOperatorTest')","[16922, 16946, 16971, 16995]"
"('Description.java', 'org.junit.runner.Description', 'getClassName', '(.*)\\((.*)\\)', 'testCheckingVariableAndWithChildren(com.disclinc.netmanager.function.test.DataFunctionTest)')","[11145, 11166, 11187]"
"('Description.java', 'org.junit.runner.Description', 'getClassName', '(.*)\\((.*)\\)', 'testStakingVariableAndSettingNewValue(com.disclinc.netmanager.variable.test.StackingVariableAndNewOperatorTest)')","[1750, 1771, 1792]"
"('Description.java', 'org.junit.runner.Description', 'parseMethod', '(.*)\\((.*)\\)', 'testSelectSomeValidConditional(com.disclinc.netmanager.function.test.SelectFunctionTest)')","[10162, 15715]"
"('Description.java', 'org.junit.runner.Description', 'getClassName', '(.*)\\((.*)\\)', 'testOrOperatorOverStrings(com.disclinc.netmanager.function.test.BooleanOperatorTest)')","[10790, 10811, 10832]"
"('Description.java', 'org.junit.runner.Description', 'parseMethod', '(.*)\\((.*)\\)', 'com.disclinc.netmanager.mPage.test.EscapeURLTest')",[2857]
"('Description.java', 'org.junit.runner.Description', 'getClassName', '(.*)\\((.*)\\)', 'testValidateDecimal(com.disclinc.netmanager.function.test.IsValidmumFunctionTest)')","[6747, 6768, 6789]"
"('Description.java', 'org.junit.runner.Description', 'getClassName', '(.*)\\((.*)\\)', 'testFormatAlphaNum(com.disclinc.netmanager.function.test.NumberConverterFunctionTest)')","[8782, 8803, 8824]"
"('Description.java', 'org.junit.runner.Description', 'parseMethod', '(.*)\\((.*)\\)', 'testJustifyDoubleRoundigValueAndBlanckSpaces(com.disclinc.netmanager.function.test.JustifyFunctionTest)')","[4344, 14128]"
"('Description.java', 'org.junit.runner.Description', 'parseMethod', '(.*)\\((.*)\\)', 'com.disclinc.netmanager.function.test.CaseFunctionTest')",[8927]
"('Description.java', 'org.junit.runner.Description', 'getClassName', '(.*)\\((.*)\\)', 'testTranslateSubstringUsingNewSubstringDifferentLength(com.disclinc.netmanager.function.test.ReplaceFunctionTest)')","[3170, 3191, 3212]"
"('mFnc.java', 'mLibrary.mFnc', '$isvalidnum', '[\\+{0,1}\\-{0,1}]{0,1}\\d+(\\.{0,1}\\d+E{0,1}\\d+){0,1}', '34.3ABCD')","[18735, 18759]"
"('Description.java', 'org.junit.runner.Description', 'getClassName', '(.*)\\((.*)\\)', 'testSearchingVariableValue(com.disclinc.netmanager.function.test.OrderFunctionTest)')","[12481, 12502, 12523, 16401]"
"('Description.java', 'org.junit.runner.Description', 'getClassName', '(.*)\\((.*)\\)', 'testAndOperatorOverStrings(com.disclinc.netmanager.function.test.BooleanOperatorTest)')","[10622, 10643, 10664]"
"('Description.java', 'org.junit.runner.Description', 'getClassName', '(.*)\\((.*)\\)', 'testCovertUsingModeNotDefined(com.disclinc.netmanager.function.test.ReplaceFunctionTest)')","[3674, 3695, 3716]"
"('Description.java', 'org.junit.runner.Description', 'parseMethod', '(.*)\\((.*)\\)', 'testSelectNoValidConditional(com.disclinc.netmanager.function.test.SelectFunctionTest)')","[10246, 15756]"
"('Description.java', 'org.junit.runner.Description', 'parseMethod', '(.*)\\((.*)\\)', 'testCheckingVariableAndWithChildren(com.disclinc.netmanager.function.test.DataFunctionTest)')","[11124, 16006]"
"('Description.java', 'org.junit.runner.Description', 'getClassName', '(.*)\\((.*)\\)', 'testIsSomeChildInCache(com.disclinc.netmanager.variable.test.OrderCacheTest)')","[2441, 2462, 2483]"
"('Description.java', 'org.junit.runner.Description', 'parseMethod', '(.*)\\((.*)\\)', 'testStakingVariableAndSettingNewValue(com.disclinc.netmanager.variable.test.StackingVariableAndNewOperatorTest)')","[1729, 13398]"
"('Description.java', 'org.junit.runner.Description', 'parseMethod', '(.*)\\((.*)\\)', 'testOrOperatorOverStrings(com.disclinc.netmanager.function.test.BooleanOperatorTest)')","[10769, 15902]"
"('Description.java', 'org.junit.runner.Description', 'getClassName', '(.*)\\((.*)\\)', 'testConcat(com.disclinc.netmanager.variable.test.DataStructureUtilTest)')","[1395, 1416, 1437]"
"('Description.java', 'org.junit.runner.Description', 'parseMethod', '(.*)\\((.*)\\)', 'com.disclinc.netmanager.function.test.OrderFunctionTest')",[12439]
"('Description.java', 'org.junit.runner.Description', 'parseMethod', '(.*)\\((.*)\\)', 'testJustifyStringAsNumericValue(com.disclinc.netmanager.function.test.JustifyFunctionTest)')","[4512, 14170]"
"('Description.java', 'org.junit.runner.Description', 'getClassName', '(.*)\\((.*)\\)', 'testFormatNumAlpha(com.disclinc.netmanager.function.test.NumberConverterFunctionTest)')","[8278, 8299, 8320, 15213]"
"('Description.java', 'org.junit.runner.Description', 'getClassName', '(.*)\\((.*)\\)', 'testCaseSecondValidConditional(com.disclinc.netmanager.function.test.CaseFunctionTest)')","[9053, 9074, 9095]"
"('Description.java', 'org.junit.runner.Description', 'parseMethod', '(.*)\\((.*)\\)', 'testValidateNumAlpha(com.disclinc.netmanager.function.test.IsValidmumFunctionTest)')","[7902, 15109]"
"('Description.java', 'org.junit.runner.Description', 'getClassName', '(.*)\\((.*)\\)', 'testEndIndexEqualValueLength(com.disclinc.netmanager.function.test.ExtractFunctionTest)')","[6476, 6497, 6518]"
"('Description.java', 'org.junit.runner.Description', 'getClassName', '(.*)\\((.*)\\)', 'testMergingTwoVariableWithSubscripts(com.disclinc.netmanager.function.test.MergeFunctionTest)')","[9576, 9597, 9618]"
"('Description.java', 'org.junit.runner.Description', 'getClassName', '(.*)\\((.*)\\)', 'testRemoveNodes(com.disclinc.netmanager.variable.test.TreeTest)')","[517, 538, 559]"
"('Description.java', 'org.junit.runner.Description', 'parseMethod', '(.*)\\((.*)\\)', 'testSettingNullValueToPiecePosition(com.disclinc.netmanager.function.test.PieceFunctionTest)')","[5428, 14460]"
"('Description.java', 'org.junit.runner.Description', 'parseMethod', '(.*)\\((.*)\\)', 'testReplaceSubstring(com.disclinc.netmanager.function.test.ReplaceFunctionTest)')","[2981, 13752]"
"('Description.java', 'org.junit.runner.Description', 'getClassName', '(.*)\\((.*)\\)', 'testStackingVariableThroughNewOperator(com.disclinc.netmanager.variable.test.StackingVariableAndNewOperatorTest)')","[1582, 1603, 1624]"
"('Description.java', 'org.junit.runner.Description', 'parseMethod', '(.*)\\((.*)\\)', 'testValidateDoublePoints(com.disclinc.netmanager.function.test.IsValidmumFunctionTest)')","[7986, 15130]"
"('Description.java', 'org.junit.runner.Description', 'getClassName', '(.*)\\((.*)\\)', 'testExtractIntervalElement(com.disclinc.netmanager.function.test.ExtractFunctionTest)')","[5888, 5909, 5930]"
"('mFnc.java', 'mLibrary.mFnc', '$isvalidnum', '[\\+{0,1}\\-{0,1}]{0,1}\\d+(\\.{0,1}\\d+E{0,1}\\d+){0,1}', '4.9E+5')","[18539, 18563]"
"('Description.java', 'org.junit.runner.Description', 'parseMethod', '(.*)\\((.*)\\)', 'com.disclinc.netmanager.function.test.FNumberFunctionTest')",[4968]
"('Description.java', 'org.junit.runner.Description', 'parseMethod', '(.*)\\((.*)\\)', 'testValidateAlphaNum(com.disclinc.netmanager.function.test.IsValidmumFunctionTest)')","[7818, 15088]"
"('Description.java', 'org.junit.runner.Description', 'getClassName', '(.*)\\((.*)\\)', 'testOrderFirstLevel(com.disclinc.netmanager.function.test.OrderFunctionTest)')","[12565, 12586, 12607]"
"('Description.java', 'org.junit.runner.Description', 'getClassName', '(.*)\\((.*)\\)', 'testTranslateSubstringEmptyOldSubstring(com.disclinc.netmanager.function.test.ReplaceFunctionTest)')","[3338, 3359, 3380]"
"('Description.java', 'org.junit.runner.Description', 'parseMethod', '(.*)\\((.*)\\)', 'com.disclinc.netmanager.variable.test.VariableThroughReferenceOrValueTest')",[2586]
"('Description.java', 'org.junit.runner.Description', 'getClassName', '(.*)\\((.*)\\)', 'UrlStringThreeParam(com.disclinc.netmanager.mPage.test.EscapeURLTest)')","[2899, 2920, 2941, 13731]"
"('Description.java', 'org.junit.runner.Description', 'getClassName', '(.*)\\((.*)\\)', 'testFNumber(com.disclinc.netmanager.function.test.FNumberFunctionTest)')","[5010, 5031, 5052, 14335]"
"('Description.java', 'org.junit.runner.Description', 'parseMethod', '(.*)\\((.*)\\)', 'testEndIndexEqualValueLength(com.disclinc.netmanager.function.test.ExtractFunctionTest)')","[6455, 14732]"
"('Description.java', 'org.junit.runner.Description', 'getClassName', '(.*)\\((.*)\\)', 'testSettingNullValueToPiecePosition(com.disclinc.netmanager.function.test.PieceFunctionTest)')","[5449, 5470, 5491]"
"('Description.java', 'org.junit.runner.Description', 'parseMethod', '(.*)\\((.*)\\)', 'testFormatAlpha(com.disclinc.netmanager.function.test.NumberConverterFunctionTest)')","[8677, 15318]"
"('Description.java', 'org.junit.runner.Description', 'getClassName', '(.*)\\((.*)\\)', 'testConcatSinceLastElement(com.disclinc.netmanager.variable.test.DataStructureUtilTest)')","[1059, 1080, 1101]"
"('Description.java', 'org.junit.runner.Description', 'getClassName', '(.*)\\((.*)\\)', 'testAndOperatorOverIntegers(com.disclinc.netmanager.function.test.BooleanOperatorTest)')","[10538, 10559, 10580, 15839]"
"('Description.java', 'org.junit.runner.Description', 'getClassName', '(.*)\\((.*)\\)', 'testIsAllInCache(com.disclinc.netmanager.variable.test.OrderCacheTest)')","[2525, 2546, 2567]"
"('Description.java', 'org.junit.runner.Description', 'parseMethod', '(.*)\\((.*)\\)', 'testMergingTwoVariableWithSubscripts(com.disclinc.netmanager.function.test.MergeFunctionTest)')","[9555, 15568]"
"('Description.java', 'org.junit.runner.Description', 'parseMethod', '(.*)\\((.*)\\)', 'testStackingMultipleVariableThroughNewOperatorMultipleCalling(com.disclinc.netmanager.variable.test.StackingVariableAndNewOperatorTest)')","[2065, 13482]"
"('Description.java', 'org.junit.runner.Description', 'parseMethod', '(.*)\\((.*)\\)', 'com.disclinc.netmanager.function.test.IsValidmumFunctionTest')",[6537]
"('Description.java', 'org.junit.runner.Description', 'parseMethod', '(.*)\\((.*)\\)', 'testOrderFirstLevel(com.disclinc.netmanager.function.test.OrderFunctionTest)')","[12544, 16422]"
"('Description.java', 'org.junit.runner.Description', 'parseMethod', '(.*)\\((.*)\\)', 'testValidateExponentialWithLongIndex(com.disclinc.netmanager.function.test.IsValidmumFunctionTest)')","[7650, 15046]"
"('Description.java', 'org.junit.runner.Description', 'getClassName', '(.*)\\((.*)\\)', 'com.disclinc.netmanager.variable.test.VariableThroughReferenceOrValueTest')","[17118, 17142, 17167, 17191]"
"('Description.java', 'org.junit.runner.Description', 'getClassName', '(.*)\\((.*)\\)', 'testPieceOneElement(com.disclinc.netmanager.function.test.PieceFunctionTest)')","[5533, 5554, 5575]"
"('Description.java', 'org.junit.runner.Description', 'getClassName', '(.*)\\((.*)\\)', 'testFormatStartWithZero(com.disclinc.netmanager.function.test.NumberConverterFunctionTest)')","[8530, 8551, 8572]"
"('Description.java', 'org.junit.runner.Description', 'getClassName', '(.*)\\((.*)\\)', 'testJustifyThreeArgs(com.disclinc.netmanager.function.test.TranslateFunctionTest)')","[12378, 12399, 12420]"
"('Description.java', 'org.junit.runner.Description', 'parseMethod', '(.*)\\((.*)\\)', 'testConcat(com.disclinc.netmanager.variable.test.DataStructureUtilTest)')","[1374, 13294]"
"('Description.java', 'org.junit.runner.Description', 'parseMethod', '(.*)\\((.*)\\)', 'testFindStartingIndexGreaterThanStringLength(com.disclinc.netmanager.function.test.FindFunctionTest)')","[11479, 16110]"
"('Description.java', 'org.junit.runner.Description', 'getClassName', '(.*)\\((.*)\\)', 'testFormatSign(com.disclinc.netmanager.function.test.NumberConverterFunctionTest)')","[8446, 8467, 8488]"
"('Description.java', 'org.junit.runner.Description', 'getClassName', '(.*)\\((.*)\\)', 'testTranslateSubstringBlankOldSubstring(com.disclinc.netmanager.function.test.ReplaceFunctionTest)')","[3422, 3443, 3464]"
"('Description.java', 'org.junit.runner.Description', 'parseMethod', '(.*)\\((.*)\\)', 'com.disclinc.netmanager.function.test.NumberConverterFunctionTest')",[8236]
"('Description.java', 'org.junit.runner.Description', 'getClassName', '(.*)\\((.*)\\)', 'testPieceIntervalElements(com.disclinc.netmanager.function.test.PieceFunctionTest)')","[5113, 5134, 5155, 14376]"
"('Description.java', 'org.junit.runner.Description', 'parseMethod', '(.*)\\((.*)\\)', 'testMethodCallingNewOperatorAndGetVariableUnchanged(com.disclinc.netmanager.variable.test.DispatchMethodsTest)')","[309, 12982]"
"('Description.java', 'org.junit.runner.Description', 'parseMethod', '(.*)\\((.*)\\)', 'testCaseSecondValidConditional(com.disclinc.netmanager.function.test.CaseFunctionTest)')","[9032, 15422]"
"('Description.java', 'org.junit.runner.Description', 'getClassName', '(.*)\\((.*)\\)', 'testFindStartingIndexGreaterThanStringLength(com.disclinc.netmanager.function.test.FindFunctionTest)')","[11500, 11521, 11542]"
"('Description.java', 'org.junit.runner.Description', 'parseMethod', '(.*)\\((.*)\\)', 'com.disclinc.netmanager.function.test.AsciiFunctionTest')",[4678]
"('Description.java', 'org.junit.runner.Description', 'getClassName', '(.*)\\((.*)\\)', 'testFindNotPresentSubstring(com.disclinc.netmanager.function.test.FindFunctionTest)')","[11416, 11437, 11458]"
"('Description.java', 'org.junit.runner.Description', 'getClassName', '(.*)\\((.*)\\)', 'testFindStartingAtSomeIndex(com.disclinc.netmanager.function.test.FindFunctionTest)')","[11332, 11353, 11374]"
"('Description.java', 'org.junit.runner.Description', 'getClassName', '(.*)\\((.*)\\)', 'com.disclinc.netmanager.variable.test.DataStructureUtilTest')","[16824, 16848, 16873, 16897]"
"('mFnc.java', 'mLibrary.mFnc', '$isvalidnum', '[\\+{0,1}\\-{0,1}]{0,1}\\d+(\\.{0,1}\\d+E{0,1}\\d+){0,1}', '0000034.34xxx')","[18882, 18906]"
"('Description.java', 'org.junit.runner.Description', 'parseMethod', '(.*)\\((.*)\\)', 'testValidateDecimal(com.disclinc.netmanager.function.test.IsValidmumFunctionTest)')","[6726, 14815]"
"('Description.java', 'org.junit.runner.Description', 'parseMethod', '(.*)\\((.*)\\)', 'testTranslateSubstringBlankOldSubstring(com.disclinc.netmanager.function.test.ReplaceFunctionTest)')","[3401, 13877]"
"('Description.java', 'org.junit.runner.Description', 'getClassName', '(.*)\\((.*)\\)', 'testMethodCallingNewOperatorAndGetVariableUnchanged(com.disclinc.netmanager.variable.test.DispatchMethodsTest)')","[330, 351, 372]"
"('Description.java', 'org.junit.runner.Description', 'parseMethod', '(.*)\\((.*)\\)', 'testJustifyDoubleValueAndBlanckSpaces(com.disclinc.netmanager.function.test.JustifyFunctionTest)')","[4260, 14107]"
"('Description.java', 'org.junit.runner.Description', 'getClassName', '(.*)\\((.*)\\)', 'testExtractDefault(com.disclinc.netmanager.function.test.ExtractFunctionTest)')","[5720, 5741, 5762, 14543]"
"('Description.java', 'org.junit.runner.Description', 'getClassName', '(.*)\\((.*)\\)', 'testUsageVariableThroughValue(com.disclinc.netmanager.variable.test.VariableThroughReferenceOrValueTest)')","[2796, 2817, 2838]"
"('Description.java', 'org.junit.runner.Description', 'parseMethod', '(.*)\\((.*)\\)', 'testCaseFirstValidConditional(com.disclinc.netmanager.function.test.CaseFunctionTest)')","[8948, 15381]"
"('Description.java', 'org.junit.runner.Description', 'getClassName', '(.*)\\((.*)\\)', 'testConcatingEmptyChar(com.disclinc.netmanager.function.test.CharacterFunctionTest)')","[11855, 11876, 11897]"
"('Description.java', 'org.junit.runner.Description', 'getClassName', '(.*)\\((.*)\\)', 'testAsciiTwoArgs(com.disclinc.netmanager.function.test.AsciiFunctionTest)')","[4720, 4741, 4762, 14232]"
"('Description.java', 'org.junit.runner.Description', 'parseMethod', '(.*)\\((.*)\\)', 'com.disclinc.netmanager.function.test.BooleanOperatorTest')",[10496]
"('Description.java', 'org.junit.runner.Description', 'parseMethod', '(.*)\\((.*)\\)', 'testSelectNullConditionalSequence(com.disclinc.netmanager.function.test.SelectFunctionTest)')","[10330, 15777]"
"('Description.java', 'org.junit.runner.Description', 'getClassName', '(.*)\\((.*)\\)', 'testFindLowestStartingIndex(com.disclinc.netmanager.function.test.FindFunctionTest)')","[11584, 11605, 11626]"
"('Description.java', 'org.junit.runner.Description', 'parseMethod', '(.*)\\((.*)\\)', 'testAndOperatorOverIntegers(com.disclinc.netmanager.function.test.BooleanOperatorTest)')","[10517, 15819]"
"('Description.java', 'org.junit.runner.Description', 'getClassName', '(.*)\\((.*)\\)', 'testCaseLastValidConditional(com.disclinc.netmanager.function.test.CaseFunctionTest)')","[9137, 9158, 9179]"
"('Description.java', 'org.junit.runner.Description', 'parseMethod', '(.*)\\((.*)\\)', 'testExtractNegativeStartAndEnd(com.disclinc.netmanager.function.test.ExtractFunctionTest)')","[6035, 14627]"
"('Description.java', 'org.junit.runner.Description', 'getClassName', '(.*)\\((.*)\\)', 'com.disclinc.netmanager.function.test.IsValidmumFunctionTest')","[18931, 18955, 18980, 19004]"
"('Description.java', 'org.junit.runner.Description', 'parseMethod', '(.*)\\((.*)\\)', 'testFindDefault(com.disclinc.netmanager.function.test.FindFunctionTest)')","[11227, 16027]"
"('mFnc.java', 'mLibrary.mFnc', '$isvalidnum', '[\\+{0,1}\\-{0,1}]{0,1}\\d+(\\.{0,1}\\d+E{0,1}\\d+){0,1}', '-49.99')","[18196, 18220]"
"('Description.java', 'org.junit.runner.Description', 'getClassName', '(.*)\\((.*)\\)', 'testJustifyEmptyString(com.disclinc.netmanager.function.test.JustifyFunctionTest)')","[4113, 4134, 4155]"
"('Description.java', 'org.junit.runner.Description', 'getClassName', '(.*)\\((.*)\\)', 'testValidateExponentialWithLongIndex(com.disclinc.netmanager.function.test.IsValidmumFunctionTest)')","[7671, 7692, 7713]"
"('Description.java', 'org.junit.runner.Description', 'parseMethod', '(.*)\\((.*)\\)', 'testExtractNegativeStart(com.disclinc.netmanager.function.test.ExtractFunctionTest)')","[5951, 14606]"
"('Description.java', 'org.junit.runner.Description', 'getClassName', '(.*)\\((.*)\\)', 'testTranslateNullSubstring(com.disclinc.netmanager.function.test.ReplaceFunctionTest)')","[3254, 3275, 3296]"
"('Description.java', 'org.junit.runner.Description', 'parseMethod', '(.*)\\((.*)\\)', 'com.disclinc.netmanager.function.test.MergeFunctionTest')",[9450]
"('Description.java', 'org.junit.runner.Description', 'parseMethod', '(.*)\\((.*)\\)', 'testAsciiOneArgs(com.disclinc.netmanager.function.test.AsciiFunctionTest)')","[4783, 14253]"
"('Description.java', 'org.junit.runner.Description', 'getClassName', '(.*)\\((.*)\\)', 'testValidateNumAlpha(com.disclinc.netmanager.function.test.IsValidmumFunctionTest)')","[7923, 7944, 7965]"
"('Description.java', 'org.junit.runner.Description', 'parseMethod', '(.*)\\((.*)\\)', 'com.disclinc.netmanager.function.test.SelectFunctionTest')",[10141]
"('Description.java', 'org.junit.runner.Description', 'getClassName', '(.*)\\((.*)\\)', 'testValidateIntegerWithMinusSign(com.disclinc.netmanager.function.test.IsValidmumFunctionTest)')","[6915, 6936, 6957]"
"('Description.java', 'org.junit.runner.Description', 'getClassName', '(.*)\\((.*)\\)', 'testIsSomeInCache(com.disclinc.netmanager.variable.test.OrderCacheTest)')","[2189, 2210, 2231, 13523]"
"('Description.java', 'org.junit.runner.Description', 'parseMethod', '(.*)\\((.*)\\)', 'com.disclinc.netmanager.function.test.DataFunctionTest')",[10851]
"('Description.java', 'org.junit.runner.Description', 'parseMethod', '(.*)\\((.*)\\)', 'testFindLowestStartingIndex(com.disclinc.netmanager.function.test.FindFunctionTest)')","[11563, 16131]"
"('Description.java', 'org.junit.runner.Description', 'getClassName', '(.*)\\((.*)\\)', 'testSettingVariableValueInSingleStep(com.disclinc.netmanager.variable.test.MContextUsingInMemoryAccessTest)')","[704, 725, 746]"
"('Description.java', 'org.junit.runner.Description', 'getClassName', '(.*)\\((.*)\\)', 'com.disclinc.netmanager.function.test.TranslateFunctionTest')","[19813, 19837, 19862, 19886]"
"('mFnc.java', 'mLibrary.mFnc', '$isvalidnum', '[\\+{0,1}\\-{0,1}]{0,1}\\d+(\\.{0,1}\\d+E{0,1}\\d+){0,1}', '+-+-++---+34.34xxx')","[18833, 18857]"
"('Description.java', 'org.junit.runner.Description', 'parseMethod', '(.*)\\((.*)\\)', 'testUsageVariableThroughRefereceAndCheckingStackedValue(com.disclinc.netmanager.variable.test.VariableThroughReferenceOrValueTest)')","[2691, 13669]"
"('mFnc.java', 'mLibrary.mFnc', '$isvalidnum', '[\\+{0,1}\\-{0,1}]{0,1}\\d+(\\.{0,1}\\d+E{0,1}\\d+){0,1}', 'TESTE123.5')","[18686, 18710]"
"('Description.java', 'org.junit.runner.Description', 'parseMethod', '(.*)\\((.*)\\)', 'UrlStringThreeParam(com.disclinc.netmanager.mPage.test.EscapeURLTest)')","[2878, 13711]"
"('Description.java', 'org.junit.runner.Description', 'parseMethod', '(.*)\\((.*)\\)', 'testLocalVariableAccess(com.disclinc.netmanager.variable.test.MContextUsingInMemoryAccessTest)')","[767, 13127]"
"('Description.java', 'org.junit.runner.Description', 'getClassName', '(.*)\\((.*)\\)', 'testNonPresenteElementWithNegativeIndex(com.disclinc.netmanager.function.test.ExtractFunctionTest)')","[6308, 6329, 6350]"
"('Description.java', 'org.junit.runner.Description', 'parseMethod', '(.*)\\((.*)\\)', 'testNonPresenteElement(com.disclinc.netmanager.function.test.ExtractFunctionTest)')","[6203, 14669]"
"('Description.java', 'org.junit.runner.Description', 'parseMethod', '(.*)\\((.*)\\)', 'testValidateStartWithZero(com.disclinc.netmanager.function.test.IsValidmumFunctionTest)')","[8154, 15172]"
"('Description.java', 'org.junit.runner.Description', 'parseMethod', '(.*)\\((.*)\\)', 'testJustifySomeStringWithZeroWidth(com.disclinc.netmanager.function.test.JustifyFunctionTest)')","[3924, 14023]"
"('Description.java', 'org.junit.runner.Description', 'getClassName', '(.*)\\((.*)\\)', 'com.disclinc.netmanager.function.test.AsciiFunctionTest')","[17510, 17534, 17559, 17583]"
"('Description.java', 'org.junit.runner.Description', 'parseMethod', '(.*)\\((.*)\\)', 'com.disclinc.netmanager.variable.test.DataStructureUtilTest')",[933]
"('Description.java', 'org.junit.runner.Description', 'parseMethod', '(.*)\\((.*)\\)', 'testSingleChar(com.disclinc.netmanager.function.test.CharacterFunctionTest)')","[12002, 16256]"
"('Description.java', 'org.junit.runner.Description', 'getClassName', '(.*)\\((.*)\\)', 'testStackingVariableThroughNewOperatorMultipleCalling(com.disclinc.netmanager.variable.test.StackingVariableAndNewOperatorTest)')","[1666, 1687, 1708]"
"('Description.java', 'org.junit.runner.Description', 'getClassName', '(.*)\\((.*)\\)', 'testValidateExponentialPlusSign(com.disclinc.netmanager.function.test.IsValidmumFunctionTest)')","[7335, 7356, 7377]"
"('Description.java', 'org.junit.runner.Description', 'getClassName', '(.*)\\((.*)\\)', 'testRecoveringVariable(com.disclinc.netmanager.variable.test.TreeTest)')","[433, 454, 475, 13023]"
"('Description.java', 'org.junit.runner.Description', 'parseMethod', '(.*)\\((.*)\\)', 'testStackingMultipleVariableThroughNewOperatorCalling(com.disclinc.netmanager.variable.test.StackingVariableAndNewOperatorTest)')","[1981, 13461]"
"('Description.java', 'org.junit.runner.Description', 'parseMethod', '(.*)\\((.*)\\)', 'testJustifyIntegerValueWithOneDecimals(com.disclinc.netmanager.function.test.JustifyFunctionTest)')","[4176, 14086]"
"('Description.java', 'org.junit.runner.Description', 'getClassName', '(.*)\\((.*)\\)', 'testCheckingUndefinedVariableAndWhichWithoutChildren(com.disclinc.netmanager.function.test.DataFunctionTest)')","[10893, 10914, 10935, 15943]"
"('Description.java', 'org.junit.runner.Description', 'parseMethod', '(.*)\\((.*)\\)', 'testGenerateKeyOfParentSubscripts(com.disclinc.netmanager.variable.test.DataStructureUtilTest)')","[1206, 13252]"
"('Description.java', 'org.junit.runner.Description', 'parseMethod', '(.*)\\((.*)\\)', 'testEndIndexLargerThantValueLength(com.disclinc.netmanager.function.test.ExtractFunctionTest)')","[6371, 14711]"
"('Description.java', 'org.junit.runner.Description', 'getClassName', '(.*)\\((.*)\\)', 'testValidateDoubleWithPlusSign(com.disclinc.netmanager.function.test.IsValidmumFunctionTest)')","[7083, 7104, 7125]"
"('Description.java', 'org.junit.runner.Description', 'parseMethod', '(.*)\\((.*)\\)', 'testValidateWithSigns(com.disclinc.netmanager.function.test.IsValidmumFunctionTest)')","[8070, 15151]"
"('Description.java', 'org.junit.runner.Description', 'getClassName', '(.*)\\((.*)\\)', 'testStackingMultipleVariableThroughNewOperatorMultipleCalling(com.disclinc.netmanager.variable.test.StackingVariableAndNewOperatorTest)')","[2086, 2107, 2128]"
"('Description.java', 'org.junit.runner.Description', 'parseMethod', '(.*)\\((.*)\\)', 'testNonPresenteElementWithNegativeIndex(com.disclinc.netmanager.function.test.ExtractFunctionTest)')","[6287, 14690]"
"('Description.java', 'org.junit.runner.Description', 'getClassName', '(.*)\\((.*)\\)', 'com.disclinc.netmanager.mPage.test.EscapeURLTest')","[17216, 17240, 17265, 17289]"
"('Description.java', 'org.junit.runner.Description', 'parseMethod', '(.*)\\((.*)\\)', 'testTranslateSubstringUsingNewSubstringDifferentLength(com.disclinc.netmanager.function.test.ReplaceFunctionTest)')","[3149, 13814]"
"('Description.java', 'org.junit.runner.Description', 'getClassName', '(.*)\\((.*)\\)', 'com.disclinc.netmanager.function.test.CaseFunctionTest')","[19127, 19151, 19176, 19200]"
"('Description.java', 'org.junit.runner.Description', 'getClassName', '(.*)\\((.*)\\)', 'com.disclinc.netmanager.function.test.SelectFunctionTest')","[19323, 19347, 19372, 19396]"
"('Description.java', 'org.junit.runner.Description', 'getClassName', '(.*)\\((.*)\\)', 'testSettingValueToNullPiecePosition(com.disclinc.netmanager.function.test.PieceFunctionTest)')","[5365, 5386, 5407]"
"('Description.java', 'org.junit.runner.Description', 'parseMethod', '(.*)\\((.*)\\)', 'testCaseAvoidDefaultValue(com.disclinc.netmanager.function.test.CaseFunctionTest)')","[9368, 15506]"
"('Description.java', 'org.junit.runner.Description', 'parseMethod', '(.*)\\((.*)\\)', 'testIsSomeInCache(com.disclinc.netmanager.variable.test.OrderCacheTest)')","[2168, 13503]"
"('Description.java', 'org.junit.runner.Description', 'parseMethod', '(.*)\\((.*)\\)', 'com.disclinc.netmanager.function.test.TranslateFunctionTest')",[12252]
"('Description.java', 'org.junit.runner.Description', 'parseMethod', '(.*)\\((.*)\\)', 'testValidateExponentialMinusSign(com.disclinc.netmanager.function.test.IsValidmumFunctionTest)')","[7230, 14941]"
"('Description.java', 'org.junit.runner.Description', 'getClassName', '(.*)\\((.*)\\)', 'com.disclinc.netmanager.function.test.DataFunctionTest')","[19519, 19543, 19568, 19592]"
"('Description.java', 'org.junit.runner.Description', 'getClassName', '(.*)\\((.*)\\)', 'testAlphaAChar(com.disclinc.netmanager.function.test.CharacterFunctionTest)')","[11939, 11960, 11981]"
"('Description.java', 'org.junit.runner.Description', 'parseMethod', '(.*)\\((.*)\\)', 'testConcatLastElement(com.disclinc.netmanager.variable.test.DataStructureUtilTest)')","[954, 13169]"
"('Description.java', 'org.junit.runner.Description', 'getClassName', '(.*)\\((.*)\\)', 'testCheckingUndefinedVariableAndWithChildren(com.disclinc.netmanager.function.test.DataFunctionTest)')","[11061, 11082, 11103]"
"('Description.java', 'org.junit.runner.Description', 'getClassName', '(.*)\\((.*)\\)', 'testMergingTwoVariableWithSubscriptsConflicting(com.disclinc.netmanager.function.test.MergeFunctionTest)')","[9744, 9765, 9786]"
"('Description.java', 'org.junit.runner.Description', 'getClassName', '(.*)\\((.*)\\)', 'testFlowOfCasheIncrease(com.disclinc.netmanager.variable.test.OrderCacheTest)')","[2273, 2294, 2315]"
"('Description.java', 'org.junit.runner.Description', 'parseMethod', '(.*)\\((.*)\\)', 'testFormatInteger(com.disclinc.netmanager.function.test.NumberConverterFunctionTest)')","[8341, 15234]"
"('Description.java', 'org.junit.runner.Description', 'getClassName', '(.*)\\((.*)\\)', 'testRecuperarValorNovoDepois3ChamadasDoOperadorNew(com.disclinc.netmanager.variable.test.DispatchMethodsTest)')","[162, 183, 204]"
"('Description.java', 'org.junit.runner.Description', 'getClassName', '(.*)\\((.*)\\)', 'testCaseFirstValidConditional(com.disclinc.netmanager.function.test.CaseFunctionTest)')","[8969, 8990, 9011, 15401]"
"('Description.java', 'org.junit.runner.Description', 'getClassName', '(.*)\\((.*)\\)', 'testInsertInCache(com.disclinc.netmanager.variable.test.OrderCacheTest)')","[2357, 2378, 2399]"
"('Description.java', 'org.junit.runner.Description', 'parseMethod', '(.*)\\((.*)\\)', 'testUsageVariableThroughValue(com.disclinc.netmanager.variable.test.VariableThroughReferenceOrValueTest)')","[2775, 13690]"
"('Description.java', 'org.junit.runner.Description', 'parseMethod', '(.*)\\((.*)\\)', 'testAsciiTwoArgs(com.disclinc.netmanager.function.test.AsciiFunctionTest)')","[4699, 14212]"
"('Description.java', 'org.junit.runner.Description', 'parseMethod', '(.*)\\((.*)\\)', 'testConcatingEmptyChar(com.disclinc.netmanager.function.test.CharacterFunctionTest)')","[11834, 16214]"
"('Description.java', 'org.junit.runner.Description', 'getClassName', '(.*)\\((.*)\\)', 'com.disclinc.netmanager.function.test.FindFunctionTest')","[19617, 19641, 19666, 19690]"
"('Description.java', 'org.junit.runner.Description', 'getClassName', '(.*)\\((.*)\\)', 'com.disclinc.netmanager.function.test.JustifyFunctionTest')","[17412, 17436, 17461, 17485]"
"('Description.java', 'org.junit.runner.Description', 'parseMethod', '(.*)\\((.*)\\)', 'testOrOperatorOverIntegers(com.disclinc.netmanager.function.test.BooleanOperatorTest)')","[10685, 15881]"
"('Description.java', 'org.junit.runner.Description', 'parseMethod', '(.*)\\((.*)\\)', 'com.disclinc.netmanager.function.test.PieceFunctionTest')",[5071]
"('Description.java', 'org.junit.runner.Description', 'getClassName', '(.*)\\((.*)\\)', 'testValidateAlphaNum(com.disclinc.netmanager.function.test.IsValidmumFunctionTest)')","[7839, 7860, 7881]"
"('Description.java', 'org.junit.runner.Description', 'parseMethod', '(.*)\\((.*)\\)', 'testMergingTwoVariableWithSubscriptsConflicting(com.disclinc.netmanager.function.test.MergeFunctionTest)')","[9723, 15610]"
"('Description.java', 'org.junit.runner.Description', 'parseMethod', '(.*)\\((.*)\\)', 'com.disclinc.netmanager.variable.test.MContextUsingInMemoryAccessTest')",[578]
"('Description.java', 'org.junit.runner.Description', 'parseMethod', '(.*)\\((.*)\\)', 'testFindNotPresentSubstring(com.disclinc.netmanager.function.test.FindFunctionTest)')","[11395, 16089]"
"('Description.java', 'org.junit.runner.Description', 'parseMethod', '(.*)\\((.*)\\)', 'test(com.disclinc.netmanager.variable.test.DispatchMethodsTest)')","[57, 12899]"
"('Description.java', 'org.junit.runner.Description', 'getClassName', '(.*)\\((.*)\\)', 'com.disclinc.netmanager.function.test.MergeFunctionTest')","[19225, 19249, 19274, 19298]"
"('Description.java', 'org.junit.runner.Description', 'getClassName', '(.*)\\((.*)\\)', 'testSettingVariableValueInTwoSteps(com.disclinc.netmanager.variable.test.MContextUsingInMemoryAccessTest)')","[620, 641, 662, 13085]"
"('Description.java', 'org.junit.runner.Description', 'parseMethod', '(.*)\\((.*)\\)', 'testPieceConcatenation(com.disclinc.netmanager.function.test.PieceFunctionTest)')","[5176, 14397]"
"('Description.java', 'org.junit.runner.Description', 'getClassName', '(.*)\\((.*)\\)', 'testOrderFirstLevelInverse(com.disclinc.netmanager.function.test.OrderFunctionTest)')","[12649, 12670, 12691]"
"('Description.java', 'org.junit.runner.Description', 'parseMethod', '(.*)\\((.*)\\)', 'com.disclinc.netmanager.variable.test.OrderCacheTest')",[2147]
"('Description.java', 'org.junit.runner.Description', 'parseMethod', '(.*)\\((.*)\\)', 'testJustifyEmptyString(com.disclinc.netmanager.function.test.JustifyFunctionTest)')","[4092, 14065]"
"('Description.java', 'org.junit.runner.Description', 'getClassName', '(.*)\\((.*)\\)', 'testSelectSomeValidConditional(com.disclinc.netmanager.function.test.Select2FunctionTest)')","[12836, 12857, 12878, 16505]"
"('Description.java', 'org.junit.runner.Description', 'getClassName', '(.*)\\((.*)\\)', 'testGenerateKeyOfTheSubscripts(com.disclinc.netmanager.variable.test.DataStructureUtilTest)')","[1143, 1164, 1185]"
"('Description.java', 'org.junit.runner.Description', 'getClassName', '(.*)\\((.*)\\)', 'testOrderOfAllPublicVariablesOnMemory(com.disclinc.netmanager.function.test.OrderFunctionTest)')","[12733, 12754, 12775]"
"('Description.java', 'org.junit.runner.Description', 'getClassName', '(.*)\\((.*)\\)', 'testMergingTwoVariableWithoutSubscripts(com.disclinc.netmanager.function.test.MergeFunctionTest)')","[9492, 9513, 9534, 15547]"
"('mFnc.java', 'mLibrary.mFnc', '$isvalidnum', '[\\+{0,1}\\-{0,1}]{0,1}\\d+(\\.{0,1}\\d+E{0,1}\\d+){0,1}', '+49E5')","[18392, 18416]"
"('mFnc.java', 'mLibrary.mFnc', '$isvalidnum', '[\\+{0,1}\\-{0,1}]{0,1}\\d+(\\.{0,1}\\d+E{0,1}\\d+){0,1}', '-TEST')","[18637, 18661]"
"('mFnc.java', 'mLibrary.mFnc', '$isvalidnum', '[\\+{0,1}\\-{0,1}]{0,1}\\d+(\\.{0,1}\\d+E{0,1}\\d+){0,1}', '+49')","[18098, 18122]"
"('Description.java', 'org.junit.runner.Description', 'parseMethod', '(.*)\\((.*)\\)', 'testExtractInvalidInterval(com.disclinc.netmanager.function.test.ExtractFunctionTest)')","[6119, 14648]"
"('Description.java', 'org.junit.runner.Description', 'parseMethod', '(.*)\\((.*)\\)', 'testJustifySomeStringWithTwoParameters(com.disclinc.netmanager.function.test.JustifyFunctionTest)')","[3756, 13961]"
"('Description.java', 'org.junit.runner.Description', 'getClassName', '(.*)\\((.*)\\)', 'com.disclinc.netmanager.function.test.OrderFunctionTest')","[19911, 19935, 19960, 19984]"
"('Description.java', 'org.junit.runner.Description', 'parseMethod', '(.*)\\((.*)\\)', 'testSettingValueToPiecePosition(com.disclinc.netmanager.function.test.PieceFunctionTest)')","[5260, 14418]"
"('Description.java', 'org.junit.runner.Description', 'getClassName', '(.*)\\((.*)\\)', 'testLocalVariableAccess(com.disclinc.netmanager.variable.test.MContextUsingInMemoryAccessTest)')","[788, 809, 830]"
"('Description.java', 'org.junit.runner.Description', 'getClassName', '(.*)\\((.*)\\)', 'com.disclinc.netmanager.variable.test.DispatchMethodsTest')","[16530, 16554, 16579, 16603]"
"('Description.java', 'org.junit.runner.Description', 'parseMethod', '(.*)\\((.*)\\)', 'testFormatStartWithZero(com.disclinc.netmanager.function.test.NumberConverterFunctionTest)')","[8509, 15276]"
"('Description.java', 'org.junit.runner.Description', 'parseMethod', '(.*)\\((.*)\\)', 'testJustifyThreeArgs(com.disclinc.netmanager.function.test.TranslateFunctionTest)')","[12357, 16360]"
"('Description.java', 'org.junit.runner.Description', 'parseMethod', '(.*)\\((.*)\\)', 'testJustifyNullPointer(com.disclinc.netmanager.function.test.JustifyFunctionTest)')","[4008, 14044]"
"('Description.java', 'org.junit.runner.Description', 'getClassName', '(.*)\\((.*)\\)', 'testSimlpeMergeBetweenTwoDifferentTypesOfVariablesWithoutHead(com.disclinc.netmanager.function.test.MergeFunctionTest)')","[9996, 10017, 10038]"
"('Description.java', 'org.junit.runner.Description', 'getClassName', '(.*)\\((.*)\\)', 'testUsageVariableThroughReferece(com.disclinc.netmanager.variable.test.VariableThroughReferenceOrValueTest)')","[2628, 2649, 2670, 13648]"
"('mFnc.java', 'mLibrary.mFnc', '$isvalidnum', '[\\+{0,1}\\-{0,1}]{0,1}\\d+(\\.{0,1}\\d+E{0,1}\\d+){0,1}', '34.34.666')","[18784, 18808]"
"('Description.java', 'org.junit.runner.Description', 'getClassName', '(.*)\\((.*)\\)', 'testCaseDefaultConditional(com.disclinc.netmanager.function.test.CaseFunctionTest)')","[9221, 9242, 9263]"
"('Description.java', 'org.junit.runner.Description', 'parseMethod', '(.*)\\((.*)\\)', 'testOrderOfAllPublicVariablesOnMemory(com.disclinc.netmanager.function.test.OrderFunctionTest)')","[12712, 16464]"
"('Description.java', 'org.junit.runner.Description', 'parseMethod', '(.*)\\((.*)\\)', 'testValidateExponentialPlusSign(com.disclinc.netmanager.function.test.IsValidmumFunctionTest)')","[7314, 14962]"
"('Description.java', 'org.junit.runner.Description', 'parseMethod', '(.*)\\((.*)\\)', 'testSimlpeMergeBetweenTwoDifferentTypesOfVariablesWithoutHead(com.disclinc.netmanager.function.test.MergeFunctionTest)')","[9975, 15673]"
"('Description.java', 'org.junit.runner.Description', 'parseMethod', '(.*)\\((.*)\\)', 'testValidateDoubleWithMinusSign(com.disclinc.netmanager.function.test.IsValidmumFunctionTest)')","[6978, 14878]"
"('Description.java', 'org.junit.runner.Description', 'getClassName', '(.*)\\((.*)\\)', 'testStackingMultipleVariableThroughNewOperatorCalling(com.disclinc.netmanager.variable.test.StackingVariableAndNewOperatorTest)')","[2002, 2023, 2044]"
"('Description.java', 'org.junit.runner.Description', 'parseMethod', '(.*)\\((.*)\\)', 'testCharSequenceAvoidingNegativeInteger(com.disclinc.netmanager.function.test.CharacterFunctionTest)')","[12170, 16298]"
"('Description.java', 'org.junit.runner.Description', 'parseMethod', '(.*)\\((.*)\\)', 'null')",[17]
"('Description.java', 'org.junit.runner.Description', 'parseMethod', '(.*)\\((.*)\\)', 'testPublicVariableAccess(com.disclinc.netmanager.variable.test.MContextUsingInMemoryAccessTest)')","[851, 13148]"
"('Description.java', 'org.junit.runner.Description', 'parseMethod', '(.*)\\((.*)\\)', 'testJustifyAlphaNumeric(com.disclinc.netmanager.function.test.JustifyFunctionTest)')","[4596, 14191]"
"('Description.java', 'org.junit.runner.Description', 'parseMethod', '(.*)\\((.*)\\)', 'com.disclinc.netmanager.function.test.JustifyFunctionTest')",[3735]
"('Description.java', 'org.junit.runner.Description', 'getClassName', '(.*)\\((.*)\\)', 'testMergingTwiceBetweenTheSameTarget(com.disclinc.netmanager.function.test.MergeFunctionTest)')","[9828, 9849, 9870]"
"('Description.java', 'org.junit.runner.Description', 'getClassName', '(.*)\\((.*)\\)', 'com.disclinc.netmanager.function.test.PieceFunctionTest')","[17804, 17828, 17853, 17877]"
"('Description.java', 'org.junit.runner.Description', 'getClassName', '(.*)\\((.*)\\)', 'testFormatAlpha(com.disclinc.netmanager.function.test.NumberConverterFunctionTest)')","[8698, 8719, 8740]"
"('Description.java', 'org.junit.runner.Description', 'parseMethod', '(.*)\\((.*)\\)', 'testGenerateKeyToLikeQuery(com.disclinc.netmanager.variable.test.DataStructureUtilTest)')","[1290, 13273]"
"('Description.java', 'org.junit.runner.Description', 'getClassName', '(.*)\\((.*)\\)', 'testJustifyDoubleValueAndBlanckSpaces(com.disclinc.netmanager.function.test.JustifyFunctionTest)')","[4281, 4302, 4323]"
"('Description.java', 'org.junit.runner.Description', 'parseMethod', '(.*)\\((.*)\\)', 'com.disclinc.netmanager.function.test.Select2FunctionTest')",[12794]
"('Description.java', 'org.junit.runner.Description', 'getClassName', '(.*)\\((.*)\\)', 'testUnstackingMultipleVariableThroughNewExceptionsOperatorCalling(com.disclinc.netmanager.variable.test.StackingVariableAndNewOperatorTest)')","[1834, 1855, 1876]"
"('Description.java', 'org.junit.runner.Description', 'parseMethod', '(.*)\\((.*)\\)', 'testPieceDefault(com.disclinc.netmanager.function.test.PieceFunctionTest)')","[5596, 14502]"
"('Description.java', 'org.junit.runner.Description', 'getClassName', '(.*)\\((.*)\\)', 'testStackingVariableThroughNewExceptionsOperatorCalling(com.disclinc.netmanager.variable.test.StackingVariableAndNewOperatorTest)')","[1498, 1519, 1540, 13335]"
"('Description.java', 'org.junit.runner.Description', 'getClassName', '(.*)\\((.*)\\)', 'testValidatePositiveExponential(com.disclinc.netmanager.function.test.IsValidmumFunctionTest)')","[7587, 7608, 7629]"
"('Description.java', 'org.junit.runner.Description', 'parseMethod', '(.*)\\((.*)\\)', 'com.disclinc.netmanager.function.test.CharacterFunctionTest')",[11645]
"('Description.java', 'org.junit.runner.Description', 'parseMethod', '(.*)\\((.*)\\)', 'testRemoveNodes(com.disclinc.netmanager.variable.test.TreeTest)')","[496, 13044]"
"('Description.java', 'org.junit.runner.Description', 'parseMethod', '(.*)\\((.*)\\)', 'com.disclinc.netmanager.variable.test.TreeTest')",[391]
"('Description.java', 'org.junit.runner.Description', 'parseMethod', '(.*)\\((.*)\\)', 'testSelectEmptyConditionalSequence(com.disclinc.netmanager.function.test.SelectFunctionTest)')","[10414, 15798]"
"('Description.java', 'org.junit.runner.Description', 'getClassName', '(.*)\\((.*)\\)', 'testPublicVariableAccess(com.disclinc.netmanager.variable.test.MContextUsingInMemoryAccessTest)')","[872, 893, 914]"
"('Description.java', 'org.junit.runner.Description', 'parseMethod', '(.*)\\((.*)\\)', 'testStackingVariableThroughNewOperator(com.disclinc.netmanager.variable.test.StackingVariableAndNewOperatorTest)')","[1561, 13356]"
"('Description.java', 'org.junit.runner.Description', 'parseMethod', '(.*)\\((.*)\\)', 'testExtractIntervalElement(com.disclinc.netmanager.function.test.ExtractFunctionTest)')","[5867, 14585]"
"('Description.java', 'org.junit.runner.Description', 'getClassName', '(.*)\\((.*)\\)', 'testFindDefault(com.disclinc.netmanager.function.test.FindFunctionTest)')","[11248, 11269, 11290, 16047]"
"('Description.java', 'org.junit.runner.Description', 'getClassName', '(.*)\\((.*)\\)', 'testExtractNegativeStartAndEnd(com.disclinc.netmanager.function.test.ExtractFunctionTest)')","[6056, 6077, 6098]"
"('Description.java', 'org.junit.runner.Description', 'getClassName', '(.*)\\((.*)\\)', 'testGenerateKeyToLikeQuery(com.disclinc.netmanager.variable.test.DataStructureUtilTest)')","[1311, 1332, 1353]"
"('Description.java', 'org.junit.runner.Description', 'parseMethod', '(.*)\\((.*)\\)', 'testMergeTwoHeadsOfDifferentTypesOfVariables(com.disclinc.netmanager.function.test.MergeFunctionTest)')","[9891, 15652]"
"('Description.java', 'org.junit.runner.Description', 'parseMethod', '(.*)\\((.*)\\)', 'testFlowOfCasheIncrease(com.disclinc.netmanager.variable.test.OrderCacheTest)')","[2252, 13544]"
"('Description.java', 'org.junit.runner.Description', 'getClassName', '(.*)\\((.*)\\)', 'testFormatDecimal(com.disclinc.netmanager.function.test.NumberConverterFunctionTest)')","[8614, 8635, 8656]"
"('Description.java', 'org.junit.runner.Description', 'parseMethod', '(.*)\\((.*)\\)', 'com.disclinc.netmanager.function.test.ExtractFunctionTest')",[5678]
"('Description.java', 'org.junit.runner.Description', 'parseMethod', '(.*)\\((.*)\\)', 'testFNumber(com.disclinc.netmanager.function.test.FNumberFunctionTest)')","[4989, 14315]"
"('Description.java', 'org.junit.runner.Description', 'getClassName', '(.*)\\((.*)\\)', 'testExtractNegativeStart(com.disclinc.netmanager.function.test.ExtractFunctionTest)')","[5972, 5993, 6014]"
"('Description.java', 'org.junit.runner.Description', 'getClassName', '(.*)\\((.*)\\)', 'com.disclinc.netmanager.function.test.BooleanOperatorTest')","[19421, 19445, 19470, 19494]"
"('Description.java', 'org.junit.runner.Description', 'getClassName', '(.*)\\((.*)\\)', 'testDoubleMergeBetweenTwoDifferentKindsOfVariables(com.disclinc.netmanager.function.test.MergeFunctionTest)')","[10080, 10101, 10122]"
"('Description.java', 'org.junit.runner.Description', 'getClassName', '(.*)\\((.*)\\)', 'testFormat1(com.disclinc.netmanager.function.test.BooleanConverterFunctionTest)')","[4907, 4928, 4949, 14294]"
"('Description.java', 'org.junit.runner.Description', 'getClassName', '(.*)\\((.*)\\)', 'testJustifyNullPointer(com.disclinc.netmanager.function.test.JustifyFunctionTest)')","[4029, 4050, 4071]"
"('Description.java', 'org.junit.runner.Description', 'parseMethod', '(.*)\\((.*)\\)', 'testIsSomeChildInCache(com.disclinc.netmanager.variable.test.OrderCacheTest)')","[2420, 13586]"
"('Description.java', 'org.junit.runner.Description', 'parseMethod', '(.*)\\((.*)\\)', 'testUsageVariableThroughReferece(com.disclinc.netmanager.variable.test.VariableThroughReferenceOrValueTest)')","[2607, 13628]"
"('Description.java', 'org.junit.runner.Description', 'parseMethod', '(.*)\\((.*)\\)', 'testCaseDefaultConditional(com.disclinc.netmanager.function.test.CaseFunctionTest)')","[9200, 15464]"
"('Description.java', 'org.junit.runner.Description', 'getClassName', '(.*)\\((.*)\\)', 'testCheckingVariableAndWithoutChildren(com.disclinc.netmanager.function.test.DataFunctionTest)')","[10977, 10998, 11019]"
"('Description.java', 'org.junit.runner.Description', 'parseMethod', '(.*)\\((.*)\\)', 'testEmptyCharSequence(com.disclinc.netmanager.function.test.CharacterFunctionTest)')","[11750, 16193]"
"('Description.java', 'org.junit.runner.Description', 'parseMethod', '(.*)\\((.*)\\)', 'com.disclinc.netmanager.variable.test.StackingVariableAndNewOperatorTest')",[1456]
"('Description.java', 'org.junit.runner.Description', 'getClassName', '(.*)\\((.*)\\)', 'testValidadeAlpha(com.disclinc.netmanager.function.test.IsValidmumFunctionTest)')","[7755, 7776, 7797]"
"('Description.java', 'org.junit.runner.Description', 'parseMethod', '(.*)\\((.*)\\)', 'testFormatDecimal(com.disclinc.netmanager.function.test.NumberConverterFunctionTest)')","[8593, 15297]"
"('Description.java', 'org.junit.runner.Description', 'getClassName', '(.*)\\((.*)\\)', 'testValidateDoublePoints(com.disclinc.netmanager.function.test.IsValidmumFunctionTest)')","[8007, 8028, 8049]"
"('Description.java', 'org.junit.runner.Description', 'parseMethod', '(.*)\\((.*)\\)', 'testOrderFirstLevelInverse(com.disclinc.netmanager.function.test.OrderFunctionTest)')","[12628, 16443]"
"('Description.java', 'org.junit.runner.Description', 'parseMethod', '(.*)\\((.*)\\)', 'testDoubleMergeBetweenTwoDifferentKindsOfVariables(com.disclinc.netmanager.function.test.MergeFunctionTest)')","[10059, 15694]"
"('Description.java', 'org.junit.runner.Description', 'getClassName', '(.*)\\((.*)\\)', 'testPieceConcatenation(com.disclinc.netmanager.function.test.PieceFunctionTest)')","[5197, 5218, 5239]"
"('Description.java', 'org.junit.runner.Description', 'parseMethod', '(.*)\\((.*)\\)', 'testFormat1(com.disclinc.netmanager.function.test.BooleanConverterFunctionTest)')","[4886, 14274]"
"('Description.java', 'org.junit.runner.Description', 'parseMethod', '(.*)\\((.*)\\)', 'testMergingTwoVariableWithoutSubscripts(com.disclinc.netmanager.function.test.MergeFunctionTest)')","[9471, 15527]"
"('Description.java', 'org.junit.runner.Description', 'getClassName', '(.*)\\((.*)\\)', 'com.disclinc.netmanager.function.test.BooleanConverterFunctionTest')","[17608, 17632, 17657, 17681]"
"('Description.java', 'org.junit.runner.Description', 'parseMethod', '(.*)\\((.*)\\)', 'testStackingVariableThroughNewOperatorMultipleCalling(com.disclinc.netmanager.variable.test.StackingVariableAndNewOperatorTest)')","[1645, 13377]"
"('Description.java', 'org.junit.runner.Description', 'getClassName', '(.*)\\((.*)\\)', 'com.disclinc.netmanager.function.test.NumberConverterFunctionTest')","[19029, 19053, 19078, 19102]"
"('Description.java', 'org.junit.runner.Description', 'parseMethod', '(.*)\\((.*)\\)', 'testFormatAlphaNum(com.disclinc.netmanager.function.test.NumberConverterFunctionTest)')","[8761, 15339]"
"('Description.java', 'org.junit.runner.Description', 'parseMethod', '(.*)\\((.*)\\)', 'testSearchingVariableValue(com.disclinc.netmanager.function.test.OrderFunctionTest)')","[12460, 16381]"
"('Description.java', 'org.junit.runner.Description', 'getClassName', '(.*)\\((.*)\\)', 'com.disclinc.netmanager.variable.test.TreeTest')","[16628, 16652, 16677, 16701]"
"('Description.java', 'org.junit.runner.Description', 'getClassName', '(.*)\\((.*)\\)', 'testValidateNegativeExponential(com.disclinc.netmanager.function.test.IsValidmumFunctionTest)')","[7503, 7524, 7545]"
"('Description.java', 'org.junit.runner.Description', 'parseMethod', '(.*)\\((.*)\\)', 'testJustifyDoubleRoundigValueIncreasingDecimalsAndBlanckSpaces(com.disclinc.netmanager.function.test.JustifyFunctionTest)')","[4428, 14149]"
"('Description.java', 'org.junit.runner.Description', 'parseMethod', '(.*)\\((.*)\\)', 'testUnstackingVariableThroughOldOperator(com.disclinc.netmanager.variable.test.StackingVariableAndNewOperatorTest)')","[1897, 13440]"
"('Description.java', 'org.junit.runner.Description', 'parseMethod', '(.*)\\((.*)\\)', 'testCharSequence(com.disclinc.netmanager.function.test.CharacterFunctionTest)')","[12086, 16277]"
"('Description.java', 'org.junit.runner.Description', 'getClassName', '(.*)\\((.*)\\)', 'testTranslateSubstring(com.disclinc.netmanager.function.test.ReplaceFunctionTest)')","[3086, 3107, 3128]"
"('Description.java', 'org.junit.runner.Description', 'parseMethod', '(.*)\\((.*)\\)', 'testExtractSomeElement(com.disclinc.netmanager.function.test.ExtractFunctionTest)')","[5783, 14564]"
"('Description.java', 'org.junit.runner.Description', 'parseMethod', '(.*)\\((.*)\\)', 'testIsAllInCache(com.disclinc.netmanager.variable.test.OrderCacheTest)')","[2504, 13607]"
"('Description.java', 'org.junit.runner.Description', 'parseMethod', '(.*)\\((.*)\\)', 'com.disclinc.netmanager.function.test.ReplaceFunctionTest')",[2960]
"('Description.java', 'org.junit.runner.Description', 'parseMethod', '(.*)\\((.*)\\)', 'testCovertToLowercase(com.disclinc.netmanager.function.test.ReplaceFunctionTest)')","[3569, 13919]"
"('Description.java', 'org.junit.runner.Description', 'getClassName', '(.*)\\((.*)\\)', 'com.disclinc.netmanager.function.test.ExtractFunctionTest')","[17902, 17926, 17951, 17975]"
"('Description.java', 'org.junit.runner.Description', 'getClassName', '(.*)\\((.*)\\)', 'testOrOperatorOverIntegers(com.disclinc.netmanager.function.test.BooleanOperatorTest)')","[10706, 10727, 10748]"
"('mFnc.java', 'mLibrary.mFnc', '$isvalidnum', '[\\+{0,1}\\-{0,1}]{0,1}\\d+(\\.{0,1}\\d+E{0,1}\\d+){0,1}', '49E589876')","[18588, 18612]"
"('Description.java', 'org.junit.runner.Description', 'getClassName', '(.*)\\((.*)\\)', 'com.disclinc.netmanager.function.test.ReplaceFunctionTest')","[17314, 17338, 17363, 17387]"
"('Description.java', 'org.junit.runner.Description', 'getClassName', '(.*)\\((.*)\\)', 'testMethodWithReturnAndNoCallingNewOperator(com.disclinc.netmanager.variable.test.DispatchMethodsTest)')","[246, 267, 288]"
"('Description.java', 'org.junit.runner.Description', 'getClassName', '(.*)\\((.*)\\)', 'testValidateExponentialMinusSign(com.disclinc.netmanager.function.test.IsValidmumFunctionTest)')","[7251, 7272, 7293]"
"('Description.java', 'org.junit.runner.Description', 'parseMethod', '(.*)\\((.*)\\)', 'testValidateDoubleWithPlusSign(com.disclinc.netmanager.function.test.IsValidmumFunctionTest)')","[7062, 14899]"
"('mFnc.java', 'mLibrary.mFnc', '$isvalidnum', '[\\+{0,1}\\-{0,1}]{0,1}\\d+(\\.{0,1}\\d+E{0,1}\\d+){0,1}', '49.95')","[18049, 18073]"
"('Description.java', 'org.junit.runner.Description', 'parseMethod', '(.*)\\((.*)\\)', 'testAlphaAChar(com.disclinc.netmanager.function.test.CharacterFunctionTest)')","[11918, 16235]"
"('Description.java', 'org.junit.runner.Description', 'getClassName', '(.*)\\((.*)\\)', 'testSelectNullConditionalSequence(com.disclinc.netmanager.function.test.SelectFunctionTest)')","[10351, 10372, 10393]"
"('Description.java', 'org.junit.runner.Description', 'parseMethod', '(.*)\\((.*)\\)', 'testCheckingUndefinedVariableAndWithChildren(com.disclinc.netmanager.function.test.DataFunctionTest)')","[11040, 15985]"
"('Description.java', 'org.junit.runner.Description', 'getClassName', '(.*)\\((.*)\\)', 'testConcatLastElement(com.disclinc.netmanager.variable.test.DataStructureUtilTest)')","[975, 996, 1017, 13189]"
"('Description.java', 'org.junit.runner.Description', 'getClassName', '(.*)\\((.*)\\)', 'testExtractSomeElement(com.disclinc.netmanager.function.test.ExtractFunctionTest)')","[5804, 5825, 5846]"
"('mFnc.java', 'mLibrary.mFnc', '$isvalidnum', '[\\+{0,1}\\-{0,1}]{0,1}\\d+(\\.{0,1}\\d+E{0,1}\\d+){0,1}', '-49E5')","[18343, 18367]"
"('mFnc.java', 'mLibrary.mFnc', '$isvalidnum', '[\\+{0,1}\\-{0,1}]{0,1}\\d+(\\.{0,1}\\d+E{0,1}\\d+){0,1}', '+49.99')","[18245, 18269]"
"('Description.java', 'org.junit.runner.Description', 'getClassName', '(.*)\\((.*)\\)', 'testGenerateKeyOfParentSubscripts(com.disclinc.netmanager.variable.test.DataStructureUtilTest)')","[1227, 1248, 1269]"
"('Description.java', 'org.junit.runner.Description', 'parseMethod', '(.*)\\((.*)\\)', 'testTranslateSubstringEmptyOldSubstring(com.disclinc.netmanager.function.test.ReplaceFunctionTest)')","[3317, 13856]"
"('Description.java', 'org.junit.runner.Description', 'getClassName', '(.*)\\((.*)\\)', 'testCovertToLowercase(com.disclinc.netmanager.function.test.ReplaceFunctionTest)')","[3590, 3611, 3632]"
"('Description.java', 'org.junit.runner.Description', 'getClassName', '(.*)\\((.*)\\)', 'com.disclinc.netmanager.function.test.CharacterFunctionTest')","[19715, 19739, 19764, 19788]"
"('Description.java', 'org.junit.runner.Description', 'parseMethod', '(.*)\\((.*)\\)', 'testValidadeAlpha(com.disclinc.netmanager.function.test.IsValidmumFunctionTest)')","[7734, 15067]"
"('Description.java', 'org.junit.runner.Description', 'parseMethod', '(.*)\\((.*)\\)', 'testAndOperatorOverStrings(com.disclinc.netmanager.function.test.BooleanOperatorTest)')","[10601, 15860]"
"('Description.java', 'org.junit.runner.Description', 'parseMethod', '(.*)\\((.*)\\)', 'testStackingVariableThroughNewExceptionsOperatorCalling(com.disclinc.netmanager.variable.test.StackingVariableAndNewOperatorTest)')","[1477, 13315]"
"('Description.java', 'org.junit.runner.Description', 'getClassName', '(.*)\\((.*)\\)', 'testSelectNoValidConditional(com.disclinc.netmanager.function.test.SelectFunctionTest)')","[10267, 10288, 10309]"
"('Description.java', 'org.junit.runner.Description', 'parseMethod', '(.*)\\((.*)\\)', 'testCovertUsingModeNotDefined(com.disclinc.netmanager.function.test.ReplaceFunctionTest)')","[3653, 13940]"
"('Description.java', 'org.junit.runner.Description', 'parseMethod', '(.*)\\((.*)\\)', 'testFindStartingAtSomeIndex(com.disclinc.netmanager.function.test.FindFunctionTest)')","[11311, 16068]"
"('Description.java', 'org.junit.runner.Description', 'getClassName', '(.*)\\((.*)\\)', 'testJustifyAlphaNumeric(com.disclinc.netmanager.function.test.JustifyFunctionTest)')","[4617, 4638, 4659]"
"('Description.java', 'org.junit.runner.Description', 'getClassName', '(.*)\\((.*)\\)', 'testValidateWithSigns(com.disclinc.netmanager.function.test.IsValidmumFunctionTest)')","[8091, 8112, 8133]"
"('Description.java', 'org.junit.runner.Description', 'parseMethod', '(.*)\\((.*)\\)', 'testNullCharSequence(com.disclinc.netmanager.function.test.CharacterFunctionTest)')","[11666, 16152]"
"('Description.java', 'org.junit.runner.Description', 'parseMethod', '(.*)\\((.*)\\)', 'testPieceOneElement(com.disclinc.netmanager.function.test.PieceFunctionTest)')","[5512, 14481]"
"('Description.java', 'org.junit.runner.Description', 'getClassName', '(.*)\\((.*)\\)', 'testJustifyStringAsNumericValue(com.disclinc.netmanager.function.test.JustifyFunctionTest)')","[4533, 4554, 4575]"
"('Description.java', 'org.junit.runner.Description', 'parseMethod', '(.*)\\((.*)\\)', 'testFormatNumAlpha(com.disclinc.netmanager.function.test.NumberConverterFunctionTest)')","[8257, 15193]"
"('Description.java', 'org.junit.runner.Description', 'getClassName', '(.*)\\((.*)\\)', 'testJustifyTwoArgs(com.disclinc.netmanager.function.test.TranslateFunctionTest)')","[12294, 12315, 12336, 16339]"
"('Description.java', 'org.junit.runner.Description', 'getClassName', '(.*)\\((.*)\\)', 'testJustifySomeStringWithZeroWidth(com.disclinc.netmanager.function.test.JustifyFunctionTest)')","[3945, 3966, 3987]"
"('Description.java', 'org.junit.runner.Description', 'parseMethod', '(.*)\\((.*)\\)', 'testSettingVariableValueInTwoSteps(com.disclinc.netmanager.variable.test.MContextUsingInMemoryAccessTest)')","[599, 13065]"
"('Description.java', 'org.junit.runner.Description', 'getClassName', '(.*)\\((.*)\\)', 'com.disclinc.netmanager.variable.test.OrderCacheTest')","[17020, 17044, 17069, 17093]"
"('Description.java', 'org.junit.runner.Description', 'getClassName', '(.*)\\((.*)\\)', 'testSingleChar(com.disclinc.netmanager.function.test.CharacterFunctionTest)')","[12023, 12044, 12065]"
"('Description.java', 'org.junit.runner.Description', 'getClassName', '(.*)\\((.*)\\)', 'testCaseWithNullPointer(com.disclinc.netmanager.function.test.CaseFunctionTest)')","[9305, 9326, 9347]"
"('Description.java', 'org.junit.runner.Description', 'parseMethod', '(.*)\\((.*)\\)', 'testExtractDefault(com.disclinc.netmanager.function.test.ExtractFunctionTest)')","[5699, 14523]"
"('Description.java', 'org.junit.runner.Description', 'parseMethod', '(.*)\\((.*)\\)', 'testFormatSign(com.disclinc.netmanager.function.test.NumberConverterFunctionTest)')","[8425, 15255]"
"('Description.java', 'org.junit.runner.Description', 'getClassName', '(.*)\\((.*)\\)', 'testEmptyCharSequence(com.disclinc.netmanager.function.test.CharacterFunctionTest)')","[11771, 11792, 11813]"
"('Description.java', 'org.junit.runner.Description', 'parseMethod', '(.*)\\((.*)\\)', 'testPieceIntervalElements(com.disclinc.netmanager.function.test.PieceFunctionTest)')","[5092, 14356]"
"('Description.java', 'org.junit.runner.Description', 'getClassName', '(.*)\\((.*)\\)', 'testExtractInvalidInterval(com.disclinc.netmanager.function.test.ExtractFunctionTest)')","[6140, 6161, 6182]"
"('Description.java', 'org.junit.runner.Description', 'parseMethod', '(.*)\\((.*)\\)', 'testRecuperarValorNovoDepois3ChamadasDoOperadorNew(com.disclinc.netmanager.variable.test.DispatchMethodsTest)')","[141, 12940]"
"('Description.java', 'org.junit.runner.Description', 'parseMethod', '(.*)\\((.*)\\)', 'testMergingTwiceBetweenTheSameTarget(com.disclinc.netmanager.function.test.MergeFunctionTest)')","[9807, 15631]"
"('Description.java', 'org.junit.runner.Description', 'parseMethod', '(.*)\\((.*)\\)', 'com.disclinc.netmanager.function.test.FindFunctionTest')",[11206]
"('mFnc.java', 'mLibrary.mFnc', '$isvalidnum', '[\\+{0,1}\\-{0,1}]{0,1}\\d+(\\.{0,1}\\d+E{0,1}\\d+){0,1}', '12345')","[18000, 18024]"
"('mFnc.java', 'mLibrary.mFnc', '$isvalidnum', '[\\+{0,1}\\-{0,1}]{0,1}\\d+(\\.{0,1}\\d+E{0,1}\\d+){0,1}', '4.9E-5')","[18490, 18514]"
"('Description.java', 'org.junit.runner.Description', 'getClassName', '(.*)\\((.*)\\)', 'testValidateExponential(com.disclinc.netmanager.function.test.IsValidmumFunctionTest)')","[7167, 7188, 7209]"
"('Description.java', 'org.junit.runner.Description', 'parseMethod', '(.*)\\((.*)\\)', 'testValidateNullPointer(com.disclinc.netmanager.function.test.IsValidmumFunctionTest)')","[6558, 14753]"
"('Description.java', 'org.junit.runner.Description', 'parseMethod', '(.*)\\((.*)\\)', 'testCovertToUppercase(com.disclinc.netmanager.function.test.ReplaceFunctionTest)')","[3485, 13898]"
"('Description.java', 'org.junit.runner.Description', 'getClassName', '(.*)\\((.*)\\)', 'testValidateIntegerWithPlusSign(com.disclinc.netmanager.function.test.IsValidmumFunctionTest)')","[6831, 6852, 6873]"
"('Description.java', 'org.junit.runner.Description', 'getClassName', '(.*)\\((.*)\\)', 'testCaseAvoidDefaultValue(com.disclinc.netmanager.function.test.CaseFunctionTest)')","[9389, 9410, 9431]"
"('Description.java', 'org.junit.runner.Description', 'parseMethod', '(.*)\\((.*)\\)', 'testValidateExponentialWithDotSign(com.disclinc.netmanager.function.test.IsValidmumFunctionTest)')","[7398, 14983]"
"('Description.java', 'org.junit.runner.Description', 'parseMethod', '(.*)\\((.*)\\)', 'com.disclinc.netmanager.function.test.BooleanConverterFunctionTest')",[4865]
"('Description.java', 'org.junit.runner.Description', 'getClassName', '(.*)\\((.*)\\)', 'testCharSequence(com.disclinc.netmanager.function.test.CharacterFunctionTest)')","[12107, 12128, 12149]"
"('Description.java', 'org.junit.runner.Description', 'parseMethod', '(.*)\\((.*)\\)', 'testUnstackingMultipleVariableThroughNewExceptionsOperatorCalling(com.disclinc.netmanager.variable.test.StackingVariableAndNewOperatorTest)')","[1813, 13419]"
"('Description.java', 'org.junit.runner.Description', 'parseMethod', '(.*)\\((.*)\\)', 'testTranslateSubstring(com.disclinc.netmanager.function.test.ReplaceFunctionTest)')","[3065, 13793]"
"('Description.java', 'org.junit.runner.Description', 'parseMethod', '(.*)\\((.*)\\)', 'testSettingVariableValueInSingleStep(com.disclinc.netmanager.variable.test.MContextUsingInMemoryAccessTest)')","[683, 13106]"
"('mFnc.java', 'mLibrary.mFnc', '$isvalidnum', '[\\+{0,1}\\-{0,1}]{0,1}\\d+(\\.{0,1}\\d+E{0,1}\\d+){0,1}', '-49')","[18147, 18171]"
"('Description.java', 'org.junit.runner.Description', 'getClassName', '(.*)\\((.*)\\)', 'testPieceDefault(com.disclinc.netmanager.function.test.PieceFunctionTest)')","[5617, 5638, 5659]"
"('Description.java', 'org.junit.runner.Description', 'getClassName', '(.*)\\((.*)\\)', 'testFormatInteger(com.disclinc.netmanager.function.test.NumberConverterFunctionTest)')","[8362, 8383, 8404]"
"('Description.java', 'org.junit.runner.Description', 'parseMethod', '(.*)\\((.*)\\)', 'testValidatePositiveExponential(com.disclinc.netmanager.function.test.IsValidmumFunctionTest)')","[7566, 15025]"
"('Description.java', 'org.junit.runner.Description', 'getClassName', '(.*)\\((.*)\\)', 'testSelectEmptyConditionalSequence(com.disclinc.netmanager.function.test.SelectFunctionTest)')","[10435, 10456, 10477]"
"('Description.java', 'org.junit.runner.Description', 'getClassName', '(.*)\\((.*)\\)', 'testJustifyIntegerValueWithOneDecimals(com.disclinc.netmanager.function.test.JustifyFunctionTest)')","[4197, 4218, 4239]"
"('Description.java', 'org.junit.runner.Description', 'parseMethod', '(.*)\\((.*)\\)', 'testFormatDoublePoints(com.disclinc.netmanager.function.test.NumberConverterFunctionTest)')","[8845, 15360]"
"('Description.java', 'org.junit.runner.Description', 'parseMethod', '(.*)\\((.*)\\)', 'testCaseWithNullPointer(com.disclinc.netmanager.function.test.CaseFunctionTest)')","[9284, 15485]"
"('Description.java', 'org.junit.runner.Description', 'parseMethod', '(.*)\\((.*)\\)', 'testRecoveringVariable(com.disclinc.netmanager.variable.test.TreeTest)')","[412, 13003]"
"('Description.java', 'org.junit.runner.Description', 'getClassName', '(.*)\\((.*)\\)', 'testMergeTwoHeadsOfDifferentTypesOfVariables(com.disclinc.netmanager.function.test.MergeFunctionTest)')","[9912, 9933, 9954]"
"('Description.java', 'org.junit.runner.Description', 'getClassName', '(.*)\\((.*)\\)', 'testFormatDoublePoints(com.disclinc.netmanager.function.test.NumberConverterFunctionTest)')","[8866, 8887, 8908]"
"('Description.java', 'org.junit.runner.Description', 'parseMethod', '(.*)\\((.*)\\)', 'testValidateIntegerWithMinusSign(com.disclinc.netmanager.function.test.IsValidmumFunctionTest)')","[6894, 14857]"
"('Description.java', 'org.junit.runner.Description', 'parseMethod', '(.*)\\((.*)\\)', 'testSelectSomeValidConditional(com.disclinc.netmanager.function.test.Select2FunctionTest)')","[12815, 16485]"
"('Description.java', 'org.junit.runner.Description', 'getClassName', '(.*)\\((.*)\\)', 'testValidateDoubleWithMinusSign(com.disclinc.netmanager.function.test.IsValidmumFunctionTest)')","[6999, 7020, 7041]"
"('Description.java', 'org.junit.runner.Description', 'parseMethod', '(.*)\\((.*)\\)', 'testJustifySomeStringWithNegativeWidth(com.disclinc.netmanager.function.test.JustifyFunctionTest)')","[3840, 14002]"
"('Description.java', 'org.junit.runner.Description', 'getClassName', '(.*)\\((.*)\\)', 'testJustifySomeStringWithNegativeWidth(com.disclinc.netmanager.function.test.JustifyFunctionTest)')","[3861, 3882, 3903]"
"('Description.java', 'org.junit.runner.Description', 'getClassName', '(.*)\\((.*)\\)', 'testNonPresenteElement(com.disclinc.netmanager.function.test.ExtractFunctionTest)')","[6224, 6245, 6266]"
"('Description.java', 'org.junit.runner.Description', 'getClassName', '(.*)\\((.*)\\)', 'testValidateStartWithZero(com.disclinc.netmanager.function.test.IsValidmumFunctionTest)')","[8175, 8196, 8217]"
"('Description.java', 'org.junit.runner.Description', 'parseMethod', '(.*)\\((.*)\\)', 'com.disclinc.netmanager.variable.test.DispatchMethodsTest')",[36]
"('Description.java', 'org.junit.runner.Description', 'getClassName', '(.*)\\((.*)\\)', 'testSelectSomeValidConditional(com.disclinc.netmanager.function.test.SelectFunctionTest)')","[10183, 10204, 10225, 15735]"
"('Description.java', 'org.junit.runner.Description', 'getClassName', '(.*)\\((.*)\\)', 'testUsageVariableThroughRefereceAndCheckingStackedValue(com.disclinc.netmanager.variable.test.VariableThroughReferenceOrValueTest)')","[2712, 2733, 2754]"
"('Description.java', 'org.junit.runner.Description', 'parseMethod', '(.*)\\((.*)\\)', 'testCheckingVariableAndWithoutChildren(com.disclinc.netmanager.function.test.DataFunctionTest)')","[10956, 15964]"
"('Description.java', 'org.junit.runner.Description', 'parseMethod', '(.*)\\((.*)\\)', 'testGenerateKeyOfTheSubscripts(com.disclinc.netmanager.variable.test.DataStructureUtilTest)')","[1122, 13231]"
"('Description.java', 'org.junit.runner.Description', 'getClassName', '(.*)\\((.*)\\)', 'testJustifySomeStringWithTwoParameters(com.disclinc.netmanager.function.test.JustifyFunctionTest)')","[3777, 3798, 3819, 13981]"
"('Description.java', 'org.junit.runner.Description', 'getClassName', '(.*)\\((.*)\\)', 'testJustifyDoubleRoundigValueAndBlanckSpaces(com.disclinc.netmanager.function.test.JustifyFunctionTest)')","[4365, 4386, 4407]"
"('mFnc.java', 'mLibrary.mFnc', '$isvalidnum', '[\\+{0,1}\\-{0,1}]{0,1}\\d+(\\.{0,1}\\d+E{0,1}\\d+){0,1}', '49E5')","[18294, 18318]"
"('Description.java', 'org.junit.runner.Description', 'getClassName', '(.*)\\((.*)\\)', 'testSettingValueToPiecePosition(com.disclinc.netmanager.function.test.PieceFunctionTest)')","[5281, 5302, 5323]"
"('Description.java', 'org.junit.runner.Description', 'parseMethod', '(.*)\\((.*)\\)', 'testInsertInCache(com.disclinc.netmanager.variable.test.OrderCacheTest)')","[2336, 13565]"
"('Description.java', 'org.junit.runner.Description', 'parseMethod', '(.*)\\((.*)\\)', 'testJustifyTwoArgs(com.disclinc.netmanager.function.test.TranslateFunctionTest)')","[12273, 16319]"
"('Description.java', 'org.junit.runner.Description', 'getClassName', '(.*)\\((.*)\\)', 'testAsciiOneArgs(com.disclinc.netmanager.function.test.AsciiFunctionTest)')","[4804, 4825, 4846]"
"('Description.java', 'org.junit.runner.Description', 'parseMethod', '(.*)\\((.*)\\)', 'testMethodWithReturnAndNoCallingNewOperator(com.disclinc.netmanager.variable.test.DispatchMethodsTest)')","[225, 12961]"
"('Description.java', 'org.junit.runner.Description', 'parseMethod', '(.*)\\((.*)\\)', 'testMergingWithUndefinedVariableWithSubscript(com.disclinc.netmanager.function.test.MergeFunctionTest)')","[9639, 15589]"
"('Description.java', 'org.junit.runner.Description', 'parseMethod', '(.*)\\((.*)\\)', 'testConcatSinceLastElement(com.disclinc.netmanager.variable.test.DataStructureUtilTest)')","[1038, 13210]"
"('Description.java', 'org.junit.runner.Description', 'getClassName', '(.*)\\((.*)\\)', 'testValidateInteger(com.disclinc.netmanager.function.test.IsValidmumFunctionTest)')","[6663, 6684, 6705]"
"('Description.java', 'org.junit.runner.Description', 'getClassName', '(.*)\\((.*)\\)', 'testEndIndexLargerThantValueLength(com.disclinc.netmanager.function.test.ExtractFunctionTest)')","[6392, 6413, 6434]"
"('Description.java', 'org.junit.runner.Description', 'getClassName', '(.*)\\((.*)\\)', 'testCharSequenceAvoidingNegativeInteger(com.disclinc.netmanager.function.test.CharacterFunctionTest)')","[12191, 12212, 12233]"
"('Description.java', 'org.junit.runner.Description', 'parseMethod', '(.*)\\((.*)\\)', 'testCaseLastValidConditional(com.disclinc.netmanager.function.test.CaseFunctionTest)')","[9116, 15443]"
"('Description.java', 'org.junit.runner.Description', 'getClassName', '(.*)\\((.*)\\)', 'com.disclinc.netmanager.variable.test.MContextUsingInMemoryAccessTest')","[16726, 16750, 16775, 16799]"
"('Description.java', 'org.junit.runner.Description', 'getClassName', '(.*)\\((.*)\\)', 'testValidateExponentialWithDotSign(com.disclinc.netmanager.function.test.IsValidmumFunctionTest)')","[7419, 7440, 7461]"
"('Description.java', 'org.junit.runner.Description', 'getClassName', '(.*)\\((.*)\\)', 'test(com.disclinc.netmanager.variable.test.DispatchMethodsTest)')","[78, 99, 120, 12919]"
"('Description.java', 'org.junit.runner.Description', 'parseMethod', '(.*)\\((.*)\\)', 'testSettingValueToNullPiecePosition(com.disclinc.netmanager.function.test.PieceFunctionTest)')","[5344, 14439]"
"('Description.java', 'org.junit.runner.Description', 'parseMethod', '(.*)\\((.*)\\)', 'testValidateNegativeExponential(com.disclinc.netmanager.function.test.IsValidmumFunctionTest)')","[7482, 15004]"
"('Description.java', 'org.junit.runner.Description', 'getClassName', '(.*)\\((.*)\\)', 'testNullCharSequence(com.disclinc.netmanager.function.test.CharacterFunctionTest)')","[11687, 11708, 11729, 16172]"
