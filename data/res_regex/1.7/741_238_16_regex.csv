"('Description.java', 'org.junit.runner.Description', 'methodAndClassNamePatternGroupOrDefault', '([\\s\\S]*)\\((.*)\\)', 'testObjectId_objectid_self(org.eclipse.jgit.lib.RepositoryResolveTest)')","[71582, 72201]"
"('Description.java', 'org.junit.runner.Description', 'methodAndClassNamePatternGroupOrDefault', '([\\s\\S]*)\\((.*)\\)', 'testDigitGroupCase3[OldRule? true](org.eclipse.jgit.ignore.IgnoreRuleSpecialCasesTest)')","[89997, 97081]"
"('Description.java', 'org.junit.runner.Description', 'methodAndClassNamePatternGroupOrDefault', '([\\s\\S]*)\\((.*)\\)', 'org.eclipse.jgit.patch.PatchTest')","[2001, 2348]"
"('URIish.java', 'org.eclipse.jgit.transport.URIish', '<init>', '^([\\\\/]?((?:[A-Za-z]:)?[\\\\/]?(?:(?:[^\\\\/]+[\\\\/]+)*[^\\\\/]+[\\\\/]*)))$', '/tmp/jgit_test_5968972444401405261_tmp/tmp_9143152110680163369')","[153365, 153510, 153675]"
"('ChangeIdUtil.java', 'org.eclipse.jgit.util.ChangeIdUtil', 'indexOfFirstFooterLine', '(^[a-zA-Z0-9-]+:(?!//).*$)', 'git://example.com/ fixes this')",[36460]
"('URIish.java', 'org.eclipse.jgit.transport.URIish', '<init>', '^([a-z][a-z0-9+-]+)://(?:(?:([^/:@]+)(?::([^\\\\/]+))?@)?((?:[^\\\\/:]+)|(?:\\[[0-9a-f:]+\\]))(?::(\\d+))?((?:/~(?:[^\\\\/]+))?[\\\\/]))?(.+)?$', 'ssh+git://1.2.3.4//')","[237746, 237930, 238850, 239034, 239954, 240138]"
"('URIish.java', 'org.eclipse.jgit.transport.URIish', '<init>', '^(file):([\\\\/](?![\\\\/])((?:[A-Za-z]:)?[\\\\/]?(?:(?:[^\\\\/]+[\\\\/]+)*[^\\\\/]+[\\\\/]*)))$', 'http://me:wtf@1.2.3.4:80/D:\\x')",[200248]
"('Description.java', 'org.junit.runner.Description', 'methodAndClassNamePatternGroupOrDefault', '([\\s\\S]*)\\((.*)\\)', 'testCreateSubtreeIterator(org.eclipse.jgit.treewalk.EmptyTreeIteratorTest)')","[260977, 261105]"
"('Description.java', 'org.junit.runner.Description', 'methodAndClassNamePatternGroupOrDefault', '([\\s\\S]*)\\((.*)\\)', 'org.eclipse.jgit.dircache.DirCacheBuilderTest')","[170785, 171218]"
"('Description.java', 'org.junit.runner.Description', 'methodAndClassNamePatternGroupOrDefault', '([\\s\\S]*)\\((.*)\\)', 'testEmptyIgnoreNode(org.eclipse.jgit.ignore.IgnoreNodeTest)')","[108313, 108620]"
"('URIish.java', 'org.eclipse.jgit.transport.URIish', '<init>', '^([a-z][a-z0-9+-]+)://(?:(?:([^/:@]+)(?::([^\\\\/]+))?@)?((?:[^\\\\/:]+)|(?:\\[[0-9a-f:]+\\]))(?::(\\d+))?((?:/~(?:[^\\\\/]+))?[\\\\/]))?(.+)?$', 'ssh+git://lusr\\example:wtf@[::1]:80//abc')",[199443]
"('URIish.java', 'org.eclipse.jgit.transport.URIish', '<init>', '^([a-z][a-z0-9+-]+)://(?:(?:([^/:@]+)(?::([^\\\\/]+))?@)?((?:[^\\\\/:]+)|(?:\\[[0-9a-f:]+\\]))(?::(\\d+))?((?:/~(?:[^\\\\/]+))?[\\\\/]))?(.+)?$', 'https://lusr\\example@example.com:80/D:\\x')",[220036]
"('Description.java', 'org.junit.runner.Description', 'methodAndClassNamePatternGroupOrDefault', '([\\s\\S]*)\\((.*)\\)', 'testEncode(org.eclipse.jgit.util.Base64Test)')","[22891, 22978]"
"('URIish.java', 'org.eclipse.jgit.transport.URIish', '<init>', '^([a-z][a-z0-9+-]+)://(?:(?:([^/:@]+)(?::([^\\\\/]+))?@)?((?:[^\\\\/:]+)|(?:\\[[0-9a-f:]+\\]))(?::(\\d+))?((?:/~(?:[^\\\\/]+))?[\\\\/]))?(.+)?$', 'ssh://me:wtf@example.com:80/D:/x')",[192341]
"('Description.java', 'org.junit.runner.Description', 'methodAndClassNamePatternGroupOrDefault', '([\\s\\S]*)\\((.*)\\)', 'noPushInsteadOf(org.eclipse.jgit.transport.RemoteConfigTest)')","[253527, 254091]"
"('Description.java', 'org.junit.runner.Description', 'methodAndClassNamePatternGroupOrDefault', '([\\s\\S]*)\\((.*)\\)', 'test9_FromString(org.eclipse.jgit.lib.AbbreviatedObjectIdTest)')","[55609, 56157]"
"('URIish.java', 'org.eclipse.jgit.transport.URIish', '<init>', '^([a-z][a-z0-9+-]+)://(?:(?:([^/:@]+)(?::([^\\\\/]+))?@)?((?:[^\\\\/:]+)|(?:\\[[0-9a-f:]+\\]))(?::(\\d+))?((?:/~(?:[^\\\\/]+))?[\\\\/]))?(.+)?$', '/abc/')",[252998]
"('URIish.java', 'org.eclipse.jgit.transport.URIish', '<init>', '^(file):([\\\\/](?![\\\\/])((?:[A-Za-z]:)?[\\\\/]?(?:(?:[^\\\\/]+[\\\\/]+)*[^\\\\/]+[\\\\/]*)))$', 'ssh://me@1.2.3.4//abc')","[221209, 221393]"
"('Description.java', 'org.junit.runner.Description', 'methodAndClassNamePatternGroupOrDefault', '([\\s\\S]*)\\((.*)\\)', 'testReadTwoLine(org.eclipse.jgit.internal.storage.file.ReflogReaderTest)')","[119062, 119238]"
"('Description.java', 'org.junit.runner.Description', 'methodAndClassNamePatternGroupOrDefault', '([\\s\\S]*)\\((.*)\\)', 'testOnlyOption_f1_14_a(org.eclipse.jgit.api.CommitOnlyTest)')","[136117, 138219]"
"('ChangeIdUtil.java', 'org.eclipse.jgit.util.ChangeIdUtil', 'indexOfFirstFooterLine', '^[ \\[].*$', 'more text')",[37218]
"('URIish.java', 'org.eclipse.jgit.transport.URIish', '<init>', '^([\\\\/]?((?:[A-Za-z]:)?[\\\\/]?(?:(?:[^\\\\/]+[\\\\/]+)*[^\\\\/]+[\\\\/]*)))$', '/tmp/jgit_test_2155224643509466025_tmp/tmp_5834574717535685926.git')",[188090]
"('URIish.java', 'org.eclipse.jgit.transport.URIish', '<init>', '^(file):([\\\\/](?![\\\\/])((?:[A-Za-z]:)?[\\\\/]?(?:(?:[^\\\\/]+[\\\\/]+)*[^\\\\/]+[\\\\/]*)))$', 'file:///tmp/jgit_test_9003108192405825140_tmp/tmp_6355030264635806042/.git/')",[63062]
"('Description.java', 'org.junit.runner.Description', 'methodAndClassNamePatternGroupOrDefault', '([\\s\\S]*)\\((.*)\\)', 'testDeleteNotEmptyTreeNotOkButIgnoreFail(org.eclipse.jgit.util.FileUtilTest)')","[23583, 23935]"
"('ChangeIdUtil.java', 'org.eclipse.jgit.util.ChangeIdUtil', 'indexOfChangeId', '(^Change-Id: *I[a-f0-9]{40}$)', 'https://example.com/ fixes this')",[36252]
"('Description.java', 'org.junit.runner.Description', 'methodAndClassNamePatternGroupOrDefault', '([\\s\\S]*)\\((.*)\\)', 'testFileIgnored(org.eclipse.jgit.treewalk.filter.IndexDiffFilterTest)')","[264359, 265167]"
"('URIish.java', 'org.eclipse.jgit.transport.URIish', '<init>', '^([a-z][a-z0-9+-]+)://(?:(?:([^/:@]+)(?::([^\\\\/]+))?@)?((?:[^\\\\/:]+)|(?:\\[[0-9a-f:]+\\]))(?::(\\d+))?((?:/~(?:[^\\\\/]+))?[\\\\/]))?(.+)?$', 'ssh://lusr\\example:wtf@[::1]:1234/D:\\x')",[195249]
"('URIish.java', 'org.eclipse.jgit.transport.URIish', '<init>', '^(file):([\\\\/](?![\\\\/])((?:[A-Za-z]:)?[\\\\/]?(?:(?:[^\\\\/]+[\\\\/]+)*[^\\\\/]+[\\\\/]*)))$', 'file:/tmp/jgit_test_4730936440061608129_tmp/tmp_7076638002040378464/.git/')",[63438]
"('Description.java', 'org.junit.runner.Description', 'methodAndClassNamePatternGroupOrDefault', '([\\s\\S]*)\\((.*)\\)', 'testDirectoryFileConflicts_5b(org.eclipse.jgit.lib.DirCacheCheckoutTest)')","[61797, 62885]"
"('Description.java', 'org.junit.runner.Description', 'methodAndClassNamePatternGroupOrDefault', '([\\s\\S]*)\\((.*)\\)', 'testRemoveOne(org.eclipse.jgit.transport.LongMapTest)')","[183721, 183897]"
"('Description.java', 'org.junit.runner.Description', 'methodAndClassNamePatternGroupOrDefault', '([\\s\\S]*)\\((.*)\\)', 'testEmptyFolderCommittedDeletedCommittedComparedWithInitialCommit(org.eclipse.jgit.treewalk.filter.IndexDiffFilterTest)')","[264506, 265321]"
"('URIish.java', 'org.eclipse.jgit.transport.URIish', '<init>', '^([a-z][a-z0-9+-]+)://(?:(?:([^/:@]+)(?::([^\\\\/]+))?@)?((?:[^\\\\/:]+)|(?:\\[[0-9a-f:]+\\]))(?::(\\d+))?((?:/~(?:[^\\\\/]+))?[\\\\/]))?(.+)?$', 'ssh://me:wtf@[::1]:80//')",[192985]
"('Description.java', 'org.junit.runner.Description', 'methodAndClassNamePatternGroupOrDefault', '([\\s\\S]*)\\((.*)\\)', 'testParseNonGitDescribe(org.eclipse.jgit.lib.RepositoryResolveTest)')","[71603, 72223]"
"('Description.java', 'org.junit.runner.Description', 'methodAndClassNamePatternGroupOrDefault', '([\\s\\S]*)\\((.*)\\)', 'getTrackingBranchShouldHandleNormalCaseForRemoteTrackingBranch(org.eclipse.jgit.lib.BranchConfigTest)')","[54891, 55067]"
"('URIish.java', 'org.eclipse.jgit.transport.URIish', '<init>', '^(file):([\\\\/](?![\\\\/])((?:[A-Za-z]:)?[\\\\/]?(?:(?:[^\\\\/]+[\\\\/]+)*[^\\\\/]+[\\\\/]*)))$', 'ssh+git://lusr\\example@1.2.3.4//abc')","[226729, 226913]"
"('URIish.java', 'org.eclipse.jgit.transport.URIish', '<init>', '^(?:([^/:@]+)(?::([^\\\\/]+))?@)?([^\\\\/:]{2,}):([\\\\/](?:(?:[^\\\\/]+[\\\\/]+)*[^\\\\/]+[\\\\/]*))$', 'D:/m y')","[250718, 250833]"
"('Description.java', 'org.junit.runner.Description', 'methodAndClassNamePatternGroupOrDefault', '([\\s\\S]*)\\((.*)\\)', 'testCreateFile(org.eclipse.jgit.diff.MyersDiffTest)')","[8812, 9246]"
"('URIish.java', 'org.eclipse.jgit.transport.URIish', '<init>', '^([\\\\/]?((?:[A-Za-z]:)?[\\\\/]?(?:(?:[^\\\\/]+[\\\\/]+)*[^\\\\/]+[\\\\/]*)))$', '/tmp/jgit_test_5935307310089394202_tmp/tmp_8096884284597820746')","[146217, 146362, 146512, 146721]"
"('Description.java', 'org.junit.runner.Description', 'methodAndClassNamePatternGroupOrDefault', '([\\s\\S]*)\\((.*)\\)', 'testRandomWrites(org.eclipse.jgit.util.TemporaryBufferTest)')","[26617, 26920]"
"('URIish.java', 'org.eclipse.jgit.transport.URIish', '<init>', '^([a-z][a-z0-9+-]+)://(?:(?:([^/:@]+)(?::([^\\\\/]+))?@)?((?:[^\\\\/:]+)|(?:\\[[0-9a-f:]+\\]))(?::(\\d+))?((?:/~(?:[^\\\\/]+))?[\\\\/]))?(.+)?$', 'https://me@1.2.3.4:1234//abc')",[217345]
"('Description.java', 'org.junit.runner.Description', 'methodAndClassNamePatternGroupOrDefault', '([\\s\\S]*)\\((.*)\\)', 'testForbiddenNamesOnWindowsEgLpt1DotSuffix(org.eclipse.jgit.lib.DirCacheCheckoutMaliciousPathTest)')","[66571, 67459]"
"('URIish.java', 'org.eclipse.jgit.transport.URIish', '<init>', '^(file):([\\\\/](?![\\\\/])((?:[A-Za-z]:)?[\\\\/]?(?:(?:[^\\\\/]+[\\\\/]+)*[^\\\\/]+[\\\\/]*)))$', 'https://l usr\\example.com:wtf@[::1]:80//abc')",[205730]
"('Description.java', 'org.junit.runner.Description', 'methodAndClassNamePatternGroupOrDefault', '([\\s\\S]*)\\((.*)\\)', 'test001_createEmpty(org.eclipse.jgit.lib.T0002_TreeTest)')","[58507, 58804]"
"('Description.java', 'org.junit.runner.Description', 'methodAndClassNamePatternGroupOrDefault', '([\\s\\S]*)\\((.*)\\)', 'testInvalidTreeNameIsDotGitDot(org.eclipse.jgit.lib.ObjectCheckerTest)')","[49865, 52418]"
"('Description.java', 'org.junit.runner.Description', 'methodAndClassNamePatternGroupOrDefault', '([\\s\\S]*)\\((.*)\\)', 'testMatch_Equal(org.eclipse.jgit.util.RawParseUtils_MatchTest)')","[22639, 22725]"
"('Description.java', 'org.junit.runner.Description', 'methodAndClassNamePatternGroupOrDefault', '([\\s\\S]*)\\((.*)\\)', 'testALL_IncludesAnything(org.eclipse.jgit.treewalk.filter.TreeFilterTest)')","[265968, 266121]"
"('URIish.java', 'org.eclipse.jgit.transport.URIish', '<init>', '^([a-z][a-z0-9+-]+)://(?:(?:([^/:@]+)(?::([^\\\\/]+))?@)?((?:[^\\\\/:]+)|(?:\\[[0-9a-f:]+\\]))(?::(\\d+))?((?:/~(?:[^\\\\/]+))?[\\\\/]))?(.+)?$', 'ssh://example.com/D:/x')","[234158, 234342, 235262, 235446, 236366, 236550]"
"('Description.java', 'org.junit.runner.Description', 'methodAndClassNamePatternGroupOrDefault', '([\\s\\S]*)\\((.*)\\)', 'testSetFive_ReverseOrder(org.eclipse.jgit.notes.LeafBucketTest)')","[260107, 260339]"
"('Description.java', 'org.junit.runner.Description', 'methodAndClassNamePatternGroupOrDefault', '([\\s\\S]*)\\((.*)\\)', 'testEqualsWithoutWhitespace(org.eclipse.jgit.diff.RawTextIgnoreWhitespaceChangeTest)')","[5697, 5740]"
"('Description.java', 'org.junit.runner.Description', 'methodAndClassNamePatternGroupOrDefault', '([\\s\\S]*)\\((.*)\\)', 'org.eclipse.jgit.notes.LeafBucketTest')","[260086, 260582]"
"('Description.java', 'org.junit.runner.Description', 'methodAndClassNamePatternGroupOrDefault', '([\\s\\S]*)\\((.*)\\)', 'noInsteadOf(org.eclipse.jgit.transport.RemoteConfigTest)')","[253653, 254223]"
"('Description.java', 'org.junit.runner.Description', 'methodAndClassNamePatternGroupOrDefault', '([\\s\\S]*)\\((.*)\\)', 'testClose(org.eclipse.jgit.api.GitConstructionTest)')","[162735, 162799]"
"('URIish.java', 'org.eclipse.jgit.transport.URIish', '<init>', '^([a-z][a-z0-9+-]+)://(?:(?:([^/:@]+)(?::([^\\\\/]+))?@)?((?:[^\\\\/:]+)|(?:\\[[0-9a-f:]+\\]))(?::(\\d+))?((?:/~(?:[^\\\\/]+))?[\\\\/]))?(.+)?$', 'http://lusr\\example@example.com:80//')",[216011]
"('Description.java', 'org.junit.runner.Description', 'methodAndClassNamePatternGroupOrDefault', '([\\s\\S]*)\\((.*)\\)', 'testEquals_Full(org.eclipse.jgit.lib.AbbreviatedObjectIdTest)')","[55147, 55673]"
"('Description.java', 'org.junit.runner.Description', 'methodAndClassNamePatternGroupOrDefault', '([\\s\\S]*)\\((.*)\\)', 'test2AlphaGroupsCase0[OldRule? true](org.eclipse.jgit.ignore.IgnoreRuleSpecialCasesTest)')","[89399, 96483]"
"('Description.java', 'org.junit.runner.Description', 'methodAndClassNamePatternGroupOrDefault', '([\\s\\S]*)\\((.*)\\)', 'testRenameLimit(org.eclipse.jgit.diff.RenameDetectorTest)')","[4540, 5098]"
"('Description.java', 'org.junit.runner.Description', 'methodAndClassNamePatternGroupOrDefault', '([\\s\\S]*)\\((.*)\\)', 'testReadLines_endLF(org.eclipse.jgit.util.ReadLinesTest)')","[30474, 30603]"
"('URIish.java', 'org.eclipse.jgit.transport.URIish', '<init>', '^(file):([\\\\/](?![\\\\/])((?:[A-Za-z]:)?[\\\\/]?(?:(?:[^\\\\/]+[\\\\/]+)*[^\\\\/]+[\\\\/]*)))$', 'https://1.2.3.4//abc')","[244393, 244577, 245497, 245681, 246601, 246785]"
"('URIish.java', 'org.eclipse.jgit.transport.URIish', '<init>', '^([a-z][a-z0-9+-]+)://(?:(?:([^/:@]+)(?::([^\\\\/]+))?@)?((?:[^\\\\/:]+)|(?:\\[[0-9a-f:]+\\]))(?::(\\d+))?((?:/~(?:[^\\\\/]+))?[\\\\/]))?(.+)?$', 'file:///tmp/jgit_test_3313886005029198754_tmp/tmp_3894563903676098303/.git/')",[8707]
"('URIish.java', 'org.eclipse.jgit.transport.URIish', '<init>', '^(file):([\\\\/](?![\\\\/])((?:[A-Za-z]:)?[\\\\/]?(?:(?:[^\\\\/]+[\\\\/]+)*[^\\\\/]+[\\\\/]*)))$', 'ssh+git://l usr\\example.com@1.2.3.4:1234//')",[211756]
"('Description.java', 'org.junit.runner.Description', 'methodAndClassNamePatternGroupOrDefault', '([\\s\\S]*)\\((.*)\\)', 'nonReferencedObjects_onlyExpiredPruned(org.eclipse.jgit.internal.storage.file.GcPruneNonReferencedTest)')","[119402, 119512]"
"('Description.java', 'org.junit.runner.Description', 'methodAndClassNamePatternGroupOrDefault', '([\\s\\S]*)\\((.*)\\)', 'testParseEncoding_Accept_Latin_One_AsISO8859_1(org.eclipse.jgit.util.RawParseUtilsTest)')","[39598, 39664]"
"('Description.java', 'org.junit.runner.Description', 'methodAndClassNamePatternGroupOrDefault', '([\\s\\S]*)\\((.*)\\)', 'testInvalidTreeNameIsGITTilde1(org.eclipse.jgit.lib.ObjectCheckerTest)')","[49550, 52088]"
"('Description.java', 'org.junit.runner.Description', 'methodAndClassNamePatternGroupOrDefault', '([\\s\\S]*)\\((.*)\\)', 'testQuotingForSubSectionNames(org.eclipse.jgit.lib.ConfigTest)')","[69663, 70390]"
"('Description.java', 'org.junit.runner.Description', 'methodAndClassNamePatternGroupOrDefault', '([\\s\\S]*)\\((.*)\\)', 'testTwoRangesInOneGroupCase3[OldRule? true](org.eclipse.jgit.ignore.IgnoreRuleSpecialCasesTest)')","[91584, 98668]"
"('Description.java', 'org.junit.runner.Description', 'methodAndClassNamePatternGroupOrDefault', '([\\s\\S]*)\\((.*)\\)', 'testGetRefs_HeadsOnly_SymrefToPacked(org.eclipse.jgit.internal.storage.file.RefDirectoryTest)')","[110467, 111625]"
"('Description.java', 'org.junit.runner.Description', 'methodAndClassNamePatternGroupOrDefault', '([\\s\\S]*)\\((.*)\\)', 'testDeletionAndConflict(org.eclipse.jgit.api.MergeCommandTest)')","[126685, 127615]"
"('Description.java', 'org.junit.runner.Description', 'methodAndClassNamePatternGroupOrDefault', '([\\s\\S]*)\\((.*)\\)', 'test011_toString(org.eclipse.jgit.lib.ObjectIdTest)')","[53444, 53718]"
"('FastIgnoreRule.java', 'org.eclipse.jgit.ignore.FastIgnoreRule', 'isMatch', '[tv]est\\.sta[a-d]', 'test.sta9')","[105044, 106274]"
"('Description.java', 'org.junit.runner.Description', 'methodAndClassNamePatternGroupOrDefault', '([\\s\\S]*)\\((.*)\\)', 'testVerySimpleWildCardCase2(org.eclipse.jgit.fnmatch.FileNameMatcherTest)')","[41587, 44854]"
"('URIish.java', 'org.eclipse.jgit.transport.URIish', '<init>', '^(file):([\\\\/](?![\\\\/])((?:[A-Za-z]:)?[\\\\/]?(?:(?:[^\\\\/]+[\\\\/]+)*[^\\\\/]+[\\\\/]*)))$', 'ssh://l usr\\example.com@[::1]//abc')","[222681, 222865]"
"('Description.java', 'org.junit.runner.Description', 'methodAndClassNamePatternGroupOrDefault', '([\\s\\S]*)\\((.*)\\)', 'testVerySimpleStarCase1[OldRule? true](org.eclipse.jgit.ignore.IgnoreRuleSpecialCasesTest)')","[91078, 98162]"
"('Description.java', 'org.junit.runner.Description', 'methodAndClassNamePatternGroupOrDefault', '([\\s\\S]*)\\((.*)\\)', 'testParseGitFileName_Foo(org.eclipse.jgit.patch.FileHeaderTest)')","[744, 1523]"
"('Description.java', 'org.junit.runner.Description', 'methodAndClassNamePatternGroupOrDefault', '([\\s\\S]*)\\((.*)\\)', 'testDequote_User(org.eclipse.jgit.util.QuotedStringBourneUserPathStyleTest)')","[29039, 29303]"
"('Description.java', 'org.junit.runner.Description', 'methodAndClassNamePatternGroupOrDefault', '([\\s\\S]*)\\((.*)\\)', 'testConflictAtStart(org.eclipse.jgit.merge.MergeAlgorithmTest)')","[11976, 12274]"
"('URIish.java', 'org.eclipse.jgit.transport.URIish', '<init>', '^(file):([\\\\/](?![\\\\/])((?:[A-Za-z]:)?[\\\\/]?(?:(?:[^\\\\/]+[\\\\/]+)*[^\\\\/]+[\\\\/]*)))$', '\\\\some\\place')","[191248, 191363]"
"('Description.java', 'org.junit.runner.Description', 'methodAndClassNamePatternGroupOrDefault', '([\\s\\S]*)\\((.*)\\)', 'org.eclipse.jgit.treewalk.filter.NotTreeFilterTest')","[263558, 263839]"
"('Description.java', 'org.junit.runner.Description', 'methodAndClassNamePatternGroupOrDefault', '([\\s\\S]*)\\((.*)\\)', 'testStringOfPearls_FilePath3(org.eclipse.jgit.revwalk.TreeRevFilterTest)')","[181288, 181396]"
"('URIish.java', 'org.eclipse.jgit.transport.URIish', '<init>', '^([a-z][a-z0-9+-]+)://(?:(?:([^/:@]+)(?::([^\\\\/]+))?@)?((?:[^\\\\/:]+)|(?:\\[[0-9a-f:]+\\]))(?::(\\d+))?((?:/~(?:[^\\\\/]+))?[\\\\/]))?(.+)?$', 'ssh+git://me:wtf@example.com:80//abc')",[196499]
"('URIish.java', 'org.eclipse.jgit.transport.URIish', '<init>', '^(file):([\\\\/](?![\\\\/])((?:[A-Za-z]:)?[\\\\/]?(?:(?:[^\\\\/]+[\\\\/]+)*[^\\\\/]+[\\\\/]*)))$', 'ssh://example.com//abc')","[234089, 234273, 235193, 235377, 236297, 236481]"
"('Description.java', 'org.junit.runner.Description', 'methodAndClassNamePatternGroupOrDefault', '([\\s\\S]*)\\((.*)\\)', 'testRebaseTodoLineSetComment(org.eclipse.jgit.api.RebaseCommandTest)')","[131369, 132854]"
"('Description.java', 'org.junit.runner.Description', 'methodAndClassNamePatternGroupOrDefault', '([\\s\\S]*)\\((.*)\\)', 'testCommit(org.eclipse.jgit.merge.SquashMessageFormatterTest)')","[14976, 14998]"
"('Description.java', 'org.junit.runner.Description', 'methodAndClassNamePatternGroupOrDefault', '([\\s\\S]*)\\((.*)\\)', 'testIncompleteRangesInOneGroupCase1[OldRule? true](org.eclipse.jgit.ignore.IgnoreRuleSpecialCasesTest)')","[90503, 97587]"
"('Description.java', 'org.junit.runner.Description', 'methodAndClassNamePatternGroupOrDefault', '([\\s\\S]*)\\((.*)\\)', 'testThreeEntries_Seek2(org.eclipse.jgit.treewalk.CanonicalTreeParserTest)')","[261273, 261589]"
"('FastIgnoreRule.java', 'org.eclipse.jgit.ignore.FastIgnoreRule', 'isMatch', '[\\p{Lu}]', 'h')",[101757]
"('Description.java', 'org.junit.runner.Description', 'methodAndClassNamePatternGroupOrDefault', '([\\s\\S]*)\\((.*)\\)', 'testDeleteTrailingLines(org.eclipse.jgit.api.BlameCommandTest)')","[139883, 140274]"
"('Description.java', 'org.junit.runner.Description', 'methodAndClassNamePatternGroupOrDefault', '([\\s\\S]*)\\((.*)\\)', 'testOnlyOption_f1_12_f2_14_a(org.eclipse.jgit.api.CommitOnlyTest)')","[135487, 137559]"
"('Description.java', 'org.junit.runner.Description', 'methodAndClassNamePatternGroupOrDefault', '([\\s\\S]*)\\((.*)\\)', 'org.eclipse.jgit.api.DiffCommandTest')","[166338, 166733]"
"('Description.java', 'org.junit.runner.Description', 'methodAndClassNamePatternGroupOrDefault', '([\\s\\S]*)\\((.*)\\)', 'testGitProtoWindows(org.eclipse.jgit.transport.URIishTest)')","[189178, 190590]"
"('Description.java', 'org.junit.runner.Description', 'methodAndClassNamePatternGroupOrDefault', '([\\s\\S]*)\\((.*)\\)', 'org.eclipse.jgit.util.io.TimeoutOutputStreamTest')","[24397, 24807]"
"('Description.java', 'org.junit.runner.Description', 'methodAndClassNamePatternGroupOrDefault', '([\\s\\S]*)\\((.*)\\)', 'testVerySimpleWildCardCase1(org.eclipse.jgit.fnmatch.FileNameMatcherTest)')","[41566, 44832]"
"('Description.java', 'org.junit.runner.Description', 'methodAndClassNamePatternGroupOrDefault', '([\\s\\S]*)\\((.*)\\)', 'testNoFastForward(org.eclipse.jgit.api.MergeCommandTest)')","[126937, 127879]"
"('Description.java', 'org.junit.runner.Description', 'methodAndClassNamePatternGroupOrDefault', '([\\s\\S]*)\\((.*)\\)', 'testCompareUInt32(org.eclipse.jgit.util.NBTest)')","[39135, 39308]"
"('URIish.java', 'org.eclipse.jgit.transport.URIish', '<init>', '^([a-z][a-z0-9+-]+)://(?:(?:([^/:@]+)(?::([^\\\\/]+))?@)?((?:[^\\\\/:]+)|(?:\\[[0-9a-f:]+\\]))(?::(\\d+))?((?:/~(?:[^\\\\/]+))?[\\\\/]))?(.+)?$', 'ssh://me@1.2.3.4:80//abc')",[207593]
"('Description.java', 'org.junit.runner.Description', 'methodAndClassNamePatternGroupOrDefault', '([\\s\\S]*)\\((.*)\\)', 'testVerySimplePatternCase1[OldRule? true](org.eclipse.jgit.ignore.IgnoreRuleSpecialCasesTest)')","[89307, 96391]"
"('Description.java', 'org.junit.runner.Description', 'methodAndClassNamePatternGroupOrDefault', '([\\s\\S]*)\\((.*)\\)', 'singlePushInsteadOf(org.eclipse.jgit.transport.RemoteConfigTest)')","[253443, 254003]"
"('Description.java', 'org.junit.runner.Description', 'methodAndClassNamePatternGroupOrDefault', '([\\s\\S]*)\\((.*)\\)', 'testSegmentsDoNotMatch[OldRule? false](org.eclipse.jgit.ignore.FastIgnoreRuleTest)')","[77265, 78022]"
"('Description.java', 'org.junit.runner.Description', 'methodAndClassNamePatternGroupOrDefault', '([\\s\\S]*)\\((.*)\\)', 'testNoAgainstOneModification(org.eclipse.jgit.merge.MergeAlgorithmTest)')","[12186, 12494]"
"('URIish.java', 'org.eclipse.jgit.transport.URIish', '<init>', '^(file):([\\\\/](?![\\\\/])((?:[A-Za-z]:)?[\\\\/]?(?:(?:[^\\\\/]+[\\\\/]+)*[^\\\\/]+[\\\\/]*)))$', '/tmp/jgit_test_3534781626954288034_tmp/tmp_6146485395206315100')","[150319, 150444, 150593]"
"('URIish.java', 'org.eclipse.jgit.transport.URIish', '<init>', '^(file):([\\\\/](?![\\\\/])((?:[A-Za-z]:)?[\\\\/]?(?:(?:[^\\\\/]+[\\\\/]+)*[^\\\\/]+[\\\\/]*)))$', 'ssh+git://me@1.2.3.4:1234//abc')",[210698]
"('Description.java', 'org.junit.runner.Description', 'methodAndClassNamePatternGroupOrDefault', '([\\s\\S]*)\\((.*)\\)', 'org.eclipse.jgit.lib.IndexModificationTimesTest')","[71873, 109890]"
"('AttributesRule.java', 'org.eclipse.jgit.attributes.AttributesRule', 'isMatch', '.*\\.st.', 'anothertest.stg')","[73815, 73977, 74986, 75121]"
"('Description.java', 'org.junit.runner.Description', 'methodAndClassNamePatternGroupOrDefault', '([\\s\\S]*)\\((.*)\\)', 'testUnchangedSimple(org.eclipse.jgit.lib.IndexDiffTest)')","[68706, 69045]"
"('URIish.java', 'org.eclipse.jgit.transport.URIish', '<init>', '^([a-z][a-z0-9+-]+)://(?:(?:([^/:@]+)(?::([^\\\\/]+))?@)?((?:[^\\\\/:]+)|(?:\\[[0-9a-f:]+\\]))(?::(\\d+))?((?:/~(?:[^\\\\/]+))?[\\\\/]))?(.+)?$', 'git:///.git')",[191064]
"('FastIgnoreRule.java', 'org.eclipse.jgit.ignore.FastIgnoreRule', 'isMatch', '[A\\p{Ll}C3-5]', '2')",[99519]
"('URIish.java', 'org.eclipse.jgit.transport.URIish', '<init>', '^(file):([\\\\/](?![\\\\/])((?:[A-Za-z]:)?[\\\\/]?(?:(?:[^\\\\/]+[\\\\/]+)*[^\\\\/]+[\\\\/]*)))$', 'ssh+git://l usr\\example.com:wtf@example.com:1234/D:/x')",[197442]
"('URIish.java', 'org.eclipse.jgit.transport.URIish', '<init>', '^(file):([\\\\/](?![\\\\/])((?:[A-Za-z]:)?[\\\\/]?(?:(?:[^\\\\/]+[\\\\/]+)*[^\\\\/]+[\\\\/]*)))$', 'ssh://lusr\\example@[::1]//abc')","[223785, 223969]"
"('Description.java', 'org.junit.runner.Description', 'methodAndClassNamePatternGroupOrDefault', '([\\s\\S]*)\\((.*)\\)', 'testDirModeAndRegex2[OldRule? true](org.eclipse.jgit.ignore.IgnoreMatcherParametrizedTest)')","[103832, 104292]"
"('Description.java', 'org.junit.runner.Description', 'methodAndClassNamePatternGroupOrDefault', '([\\s\\S]*)\\((.*)\\)', 'testPrintGroupCase3(org.eclipse.jgit.fnmatch.FileNameMatcherTest)')","[43477, 46834]"
"('Description.java', 'org.junit.runner.Description', 'methodAndClassNamePatternGroupOrDefault', '([\\s\\S]*)\\((.*)\\)', 'org.eclipse.jgit.util.ChangeIdUtilTest')","[31636, 38274]"
"('URIish.java', 'org.eclipse.jgit.transport.URIish', '<init>', '^([a-z][a-z0-9+-]+)://(?:(?:([^/:@]+)(?::([^\\\\/]+))?@)?((?:[^\\\\/:]+)|(?:\\[[0-9a-f:]+\\]))(?::(\\d+))?((?:/~(?:[^\\\\/]+))?[\\\\/]))?(.+)?$', 'ssh://l usr\\example.com:wtf@example.com:1234//')",[193169]
"('Description.java', 'org.junit.runner.Description', 'methodAndClassNamePatternGroupOrDefault', '([\\s\\S]*)\\((.*)\\)', 'testRepeatedNegationInDifferentFiles4(org.eclipse.jgit.ignore.IgnoreNodeTest)')","[108166, 108466]"
"('URIish.java', 'org.eclipse.jgit.transport.URIish', '<init>', '^(file):([\\\\/](?![\\\\/])((?:[A-Za-z]:)?[\\\\/]?(?:(?:[^\\\\/]+[\\\\/]+)*[^\\\\/]+[\\\\/]*)))$', '/a/b/c.git/')",[248280]
"('AttributesRule.java', 'org.eclipse.jgit.attributes.AttributesRule', 'isMatch', '.r[a-c]', 'new')","[76346, 76535, 76724]"
"('Description.java', 'org.junit.runner.Description', 'methodAndClassNamePatternGroupOrDefault', '([\\s\\S]*)\\((.*)\\)', 'testXDigitGroupCase3[OldRule? true](org.eclipse.jgit.ignore.IgnoreRuleSpecialCasesTest)')","[91193, 98277]"
"('Description.java', 'org.junit.runner.Description', 'methodAndClassNamePatternGroupOrDefault', '([\\s\\S]*)\\((.*)\\)', 'whileRefUpdatedRefUpdateSucceeds(org.eclipse.jgit.internal.storage.file.GcPackRefsTest)')","[122725, 122852]"
"('URIish.java', 'org.eclipse.jgit.transport.URIish', '<init>', '^(?:([^/:@]+)(?::([^\\\\/]+))?@)?([^\\\\/:]{2,}):([\\\\/](?:(?:[^\\\\/]+[\\\\/]+)*[^\\\\/]+[\\\\/]*))$', '/.git')",[247475]
"('Description.java', 'org.junit.runner.Description', 'methodAndClassNamePatternGroupOrDefault', '([\\s\\S]*)\\((.*)\\)', 'testIterator(org.eclipse.jgit.lib.ObjectIdOwnerMapTest)')","[59549, 59702]"
"('Description.java', 'org.junit.runner.Description', 'methodAndClassNamePatternGroupOrDefault', '([\\s\\S]*)\\((.*)\\)', 'org.eclipse.jgit.ignore.FastIgnoreRuleTest')",[76945]
"('Description.java', 'org.junit.runner.Description', 'methodAndClassNamePatternGroupOrDefault', '([\\s\\S]*)\\((.*)\\)', 'testOnlyOption_f1_9_c(org.eclipse.jgit.api.CommitOnlyTest)')","[135319, 137383]"
"('Description.java', 'org.junit.runner.Description', 'methodAndClassNamePatternGroupOrDefault', '([\\s\\S]*)\\((.*)\\)', 'testAddRemoveAdd(org.eclipse.jgit.util.BlockListTest)')","[27470, 27723]"
"('URIish.java', 'org.eclipse.jgit.transport.URIish', '<init>', '^([a-z][a-z0-9+-]+)://(?:(?:([^/:@]+)(?::([^\\\\/]+))?@)?((?:[^\\\\/:]+)|(?:\\[[0-9a-f:]+\\]))(?::(\\d+))?((?:/~(?:[^\\\\/]+))?[\\\\/]))?(.+)?$', 'https://me@[::1]/D:/x')","[231582, 231766]"
"('URIish.java', 'org.eclipse.jgit.transport.URIish', '<init>', '^(file):([\\\\/](?![\\\\/])((?:[A-Za-z]:)?[\\\\/]?(?:(?:[^\\\\/]+[\\\\/]+)*[^\\\\/]+[\\\\/]*)))$', 'file:///tmp/jgit_test_5029312574137886746_tmp/tmp_3793577667892320160/.git/')",[123510]
"('Description.java', 'org.junit.runner.Description', 'methodAndClassNamePatternGroupOrDefault', '([\\s\\S]*)\\((.*)\\)', 'testNotBare_CreateRepositoryFromGitDirOnlyWithWorktreeConfig(org.eclipse.jgit.internal.storage.file.RepositorySetupWorkDirTest)')","[113985, 114244]"
"('Description.java', 'org.junit.runner.Description', 'methodAndClassNamePatternGroupOrDefault', '([\\s\\S]*)\\((.*)\\)', 'testBuildEmpty(org.eclipse.jgit.dircache.DirCacheBuilderTest)')","[170848, 171040]"
"('URIish.java', 'org.eclipse.jgit.transport.URIish', '<init>', '^(file):([\\\\/](?![\\\\/])((?:[A-Za-z]:)?[\\\\/]?(?:(?:[^\\\\/]+[\\\\/]+)*[^\\\\/]+[\\\\/]*)))$', 'ssh://me@example.com:80/D:\\x')",[207294]
"('AttributesRule.java', 'org.eclipse.jgit.attributes.AttributesRule', 'isMatch', '.rc', 'new')",[76157]
"('Description.java', 'org.junit.runner.Description', 'methodAndClassNamePatternGroupOrDefault', '([\\s\\S]*)\\((.*)\\)', 'org.eclipse.jgit.events.ConfigChangeEventTest')","[16947, 17013]"
"('URIish.java', 'org.eclipse.jgit.transport.URIish', '<init>', '^([\\\\/]?((?:[A-Za-z]:)?[\\\\/]?(?:(?:[^\\\\/]+[\\\\/]+)*[^\\\\/]+[\\\\/]*)))$', '/tmp/jgit_test_2667399414619613576_tmp/tmp_2988195032823876487')","[153795, 153940, 154105]"
"('Description.java', 'org.junit.runner.Description', 'methodAndClassNamePatternGroupOrDefault', '([\\s\\S]*)\\((.*)\\)', 'testOnlyOption_f1_5_c(org.eclipse.jgit.api.CommitOnlyTest)')","[134899, 136943]"
"('Description.java', 'org.junit.runner.Description', 'methodAndClassNamePatternGroupOrDefault', '([\\s\\S]*)\\((.*)\\)', 'testUTF8withBOM(org.eclipse.jgit.storage.file.FileBasedConfigTest)')","[48122, 48209]"
"('URIish.java', 'org.eclipse.jgit.transport.URIish', '<init>', '^([a-z][a-z0-9+-]+)://(?:(?:([^/:@]+)(?::([^\\\\/]+))?@)?((?:[^\\\\/:]+)|(?:\\[[0-9a-f:]+\\]))(?::(\\d+))?((?:/~(?:[^\\\\/]+))?[\\\\/]))?(.+)?$', 'http://me:wtf@1.2.3.4:80/D:/x')",[200225]
"('Description.java', 'org.junit.runner.Description', 'methodAndClassNamePatternGroupOrDefault', '([\\s\\S]*)\\((.*)\\)', 'test006_readCaseInsensitive(org.eclipse.jgit.lib.ConfigTest)')","[69411, 70126]"
"('Description.java', 'org.junit.runner.Description', 'methodAndClassNamePatternGroupOrDefault', '([\\s\\S]*)\\((.*)\\)', 'testAddDifferentNotes(org.eclipse.jgit.notes.NoteMapMergerTest)')","[259653, 260027]"
"('Description.java', 'org.junit.runner.Description', 'methodAndClassNamePatternGroupOrDefault', '([\\s\\S]*)\\((.*)\\)', 'testEscapedBracket4[OldRule? true](org.eclipse.jgit.ignore.IgnoreRuleSpecialCasesTest)')","[91791, 98875]"
"('URIish.java', 'org.eclipse.jgit.transport.URIish', '<init>', '^(file):([\\\\/](?![\\\\/])((?:[A-Za-z]:)?[\\\\/]?(?:(?:[^\\\\/]+[\\\\/]+)*[^\\\\/]+[\\\\/]*)))$', '/tmp/jgit_test_4266839774263809352_tmp/tmp_2253646626749303486/.git')","[129541, 129675]"
"('Description.java', 'org.junit.runner.Description', 'methodAndClassNamePatternGroupOrDefault', '([\\s\\S]*)\\((.*)\\)', 'testFilePathCase1[OldRule? true](org.eclipse.jgit.ignore.IgnoreRuleSpecialCasesTest)')","[90411, 97495]"
"('Description.java', 'org.junit.runner.Description', 'methodAndClassNamePatternGroupOrDefault', '([\\s\\S]*)\\((.*)\\)', 'testFreakingHugePathName(org.eclipse.jgit.treewalk.CanonicalTreeParserTest)')","[261504, 261831]"
"('Description.java', 'org.junit.runner.Description', 'methodAndClassNamePatternGroupOrDefault', '([\\s\\S]*)\\((.*)\\)', 'testCombinedRangesInOneGroupCase1[OldRule? true](org.eclipse.jgit.ignore.IgnoreRuleSpecialCasesTest)')","[88640, 95724]"
"('Description.java', 'org.junit.runner.Description', 'methodAndClassNamePatternGroupOrDefault', '([\\s\\S]*)\\((.*)\\)', 'testGraphGroupCase2(org.eclipse.jgit.fnmatch.FileNameMatcherTest)')","[41986, 45272]"
"('Description.java', 'org.junit.runner.Description', 'methodAndClassNamePatternGroupOrDefault', '([\\s\\S]*)\\((.*)\\)', 'testSort_Default(org.eclipse.jgit.revwalk.RevWalkSortTest)')","[181837, 181985]"
"('URIish.java', 'org.eclipse.jgit.transport.URIish', '<init>', '^(file):([\\\\/](?![\\\\/])((?:[A-Za-z]:)?[\\\\/]?(?:(?:[^\\\\/]+[\\\\/]+)*[^\\\\/]+[\\\\/]*)))$', 'http://me:wtf@1.2.3.4:1234//abc')",[199972]
"('Description.java', 'org.junit.runner.Description', 'methodAndClassNamePatternGroupOrDefault', '([\\s\\S]*)\\((.*)\\)', 'testInteractiveRebaseWithModificationShouldNotDeleteDataOnAbort(org.eclipse.jgit.api.RebaseCommandTest)')","[131747, 133250]"
"('Description.java', 'org.junit.runner.Description', 'methodAndClassNamePatternGroupOrDefault', '([\\s\\S]*)\\((.*)\\)', 'testWorkdirIsParent_CreateRepositoryFromGitDirOnlyWithBareConfigFalse(org.eclipse.jgit.internal.storage.file.RepositorySetupWorkDirTest)')","[113922, 114178]"
"('Description.java', 'org.junit.runner.Description', 'methodAndClassNamePatternGroupOrDefault', '([\\s\\S]*)\\((.*)\\)', 'testFilesAddedFromTwoBranches(org.eclipse.jgit.api.RebaseCommandTest)')","[132146, 133668]"
"('Description.java', 'org.junit.runner.Description', 'methodAndClassNamePatternGroupOrDefault', '([\\s\\S]*)\\((.*)\\)', 'testNotEmpty_WithPrefix(org.eclipse.jgit.util.RefMapTest)')","[20871, 21335]"
"('URIish.java', 'org.eclipse.jgit.transport.URIish', '<init>', '^(file):([\\\\/](?![\\\\/])((?:[A-Za-z]:)?[\\\\/]?(?:(?:[^\\\\/]+[\\\\/]+)*[^\\\\/]+[\\\\/]*)))$', 'ssh://lusr\\example:wtf@1.2.3.4:80//')",[194904]
"('URIish.java', 'org.eclipse.jgit.transport.URIish', '<init>', '^([a-z][a-z0-9+-]+)://(?:(?:([^/:@]+)(?::([^\\\\/]+))?@)?((?:[^\\\\/:]+)|(?:\\[[0-9a-f:]+\\]))(?::(\\d+))?((?:/~(?:[^\\\\/]+))?[\\\\/]))?(.+)?$', 'https://lusr\\example:wtf@example.com:80/D:/x')",[206167]
"('Description.java', 'org.junit.runner.Description', 'methodAndClassNamePatternGroupOrDefault', '([\\s\\S]*)\\((.*)\\)', 'testGetRefs_TagsOnly_AllLoose(org.eclipse.jgit.internal.storage.file.RefDirectoryTest)')","[110698, 111867]"
"('URIish.java', 'org.eclipse.jgit.transport.URIish', '<init>', '^([a-z][a-z0-9+-]+)://(?:(?:([^/:@]+)(?::([^\\\\/]+))?@)?((?:[^\\\\/:]+)|(?:\\[[0-9a-f:]+\\]))(?::(\\d+))?((?:/~(?:[^\\\\/]+))?[\\\\/]))?(.+)?$', 'ssh://l usr\\example.com@[::1]:80//abc')",[209065]
"('Description.java', 'org.junit.runner.Description', 'methodAndClassNamePatternGroupOrDefault', '([\\s\\S]*)\\((.*)\\)', 'testDeleteEmptyTreeOk(org.eclipse.jgit.util.FileUtilTest)')","[23310, 23649]"
"('Description.java', 'org.junit.runner.Description', 'methodAndClassNamePatternGroupOrDefault', '([\\s\\S]*)\\((.*)\\)', 'org.eclipse.jgit.internal.storage.file.T0003_BasicTest')","[116336, 117434]"
"('Description.java', 'org.junit.runner.Description', 'methodAndClassNamePatternGroupOrDefault', '([\\s\\S]*)\\((.*)\\)', 'testEmptyMap(org.eclipse.jgit.lib.ObjectIdOwnerMapTest)')","[59570, 59724]"
"('Description.java', 'org.junit.runner.Description', 'methodAndClassNamePatternGroupOrDefault', '([\\s\\S]*)\\((.*)\\)', 'testInvalidCommitInvalidCommitter(org.eclipse.jgit.lib.ObjectCheckerTest)')","[50075, 52638]"
"('Description.java', 'org.junit.runner.Description', 'methodAndClassNamePatternGroupOrDefault', '([\\s\\S]*)\\((.*)\\)', 'testStringOfPearls_FilePath1_NoParentRewriting(org.eclipse.jgit.revwalk.RevWalkPathFilter1Test)')","[175434, 175715]"
"('URIish.java', 'org.eclipse.jgit.transport.URIish', '<init>', '^(file):([\\\\/](?![\\\\/])((?:[A-Za-z]:)?[\\\\/]?(?:(?:[^\\\\/]+[\\\\/]+)*[^\\\\/]+[\\\\/]*)))$', 'ssh://DOMAIN\\user:pass@example.com:33/some/p ath')","[248418, 248464]"
"('URIish.java', 'org.eclipse.jgit.transport.URIish', '<init>', '^(file):([\\\\/](?![\\\\/])((?:[A-Za-z]:)?[\\\\/]?(?:(?:[^\\\\/]+[\\\\/]+)*[^\\\\/]+[\\\\/]*)))$', 'http://l usr\\example.com@example.com//abc')","[228569, 228753]"
"('URIish.java', 'org.eclipse.jgit.transport.URIish', 'getHumanishName', '^([\\\\/]?((?:[A-Za-z]:)?[\\\\/]?(?:(?:[^\\\\/]+[\\\\/]+)*[^\\\\/]+[\\\\/]*)))$', '/abc.git/')","[248165, 252814]"
"('Description.java', 'org.junit.runner.Description', 'methodAndClassNamePatternGroupOrDefault', '([\\s\\S]*)\\((.*)\\)', 'testParseGitFileName_FooSpBar(org.eclipse.jgit.patch.FileHeaderTest)')","[681, 1457]"
"('Description.java', 'org.junit.runner.Description', 'methodAndClassNamePatternGroupOrDefault', '([\\s\\S]*)\\((.*)\\)', 'org.eclipse.jgit.internal.storage.file.ObjectDirectoryTest')","[117470, 118498]"
"('Description.java', 'org.junit.runner.Description', 'methodAndClassNamePatternGroupOrDefault', '([\\s\\S]*)\\((.*)\\)', 'testNegation(org.eclipse.jgit.ignore.IgnoreNodeTest)')","[108250, 108554]"
"('URIish.java', 'org.eclipse.jgit.transport.URIish', '<init>', '^(file):([\\\\/](?![\\\\/])((?:[A-Za-z]:)?[\\\\/]?(?:(?:[^\\\\/]+[\\\\/]+)*[^\\\\/]+[\\\\/]*)))$', 'ssh+git://example.com/D:\\x')","[237493, 237677, 238597, 238781, 239701, 239885]"
"('URIish.java', 'org.eclipse.jgit.transport.URIish', '<init>', '^(file):([\\\\/](?![\\\\/])((?:[A-Za-z]:)?[\\\\/]?(?:(?:[^\\\\/]+[\\\\/]+)*[^\\\\/]+[\\\\/]*)))$', 'ssh://l usr\\example.com:wtf@1.2.3.4:1234/D:\\x')",[193754]
"('URIish.java', 'org.eclipse.jgit.transport.URIish', '<init>', '^([a-z][a-z0-9+-]+)://(?:(?:([^/:@]+)(?::([^\\\\/]+))?@)?((?:[^\\\\/:]+)|(?:\\[[0-9a-f:]+\\]))(?::(\\d+))?((?:/~(?:[^\\\\/]+))?[\\\\/]))?(.+)?$', 'http://lusr\\example:wtf@[::1]:80//')",[202709]
"('Description.java', 'org.junit.runner.Description', 'methodAndClassNamePatternGroupOrDefault', '([\\s\\S]*)\\((.*)\\)', 'org.eclipse.jgit.nls.TranslationBundleTest')","[40642, 40837]"
"('Description.java', 'org.junit.runner.Description', 'methodAndClassNamePatternGroupOrDefault', '([\\s\\S]*)\\((.*)\\)', 'testNoMagicRefCharacters(org.eclipse.jgit.lib.ValidRefNameTest)')","[65676, 66034]"
"('Description.java', 'org.junit.runner.Description', 'methodAndClassNamePatternGroupOrDefault', '([\\s\\S]*)\\((.*)\\)', 'testDegenerate_InsertsIntoMidPosition(org.eclipse.jgit.diff.HistogramDiffTest)')","[6849, 7454]"
"('URIish.java', 'org.eclipse.jgit.transport.URIish', '<init>', '^([a-z][a-z0-9+-]+)://(?:(?:([^/:@]+)(?::([^\\\\/]+))?@)?((?:[^\\\\/:]+)|(?:\\[[0-9a-f:]+\\]))(?::(\\d+))?((?:/~(?:[^\\\\/]+))?[\\\\/]))?(.+)?$', '/tmp/jgit_test_3534781626954288034_tmp/tmp_6146485395206315100')","[150343, 150473, 150626]"
"('Description.java', 'org.junit.runner.Description', 'methodAndClassNamePatternGroupOrDefault', '([\\s\\S]*)\\((.*)\\)', 'dontPackHEAD_bare(org.eclipse.jgit.internal.storage.file.GcPackRefsTest)')","[122767, 122896]"
"('Description.java', 'org.junit.runner.Description', 'methodAndClassNamePatternGroupOrDefault', '([\\s\\S]*)\\((.*)\\)', 'testFindRemoteRefUpdatesTrackingRef(org.eclipse.jgit.transport.TransportTest)')","[254439, 254610]"
"('Description.java', 'org.junit.runner.Description', 'methodAndClassNamePatternGroupOrDefault', '([\\s\\S]*)\\((.*)\\)', 'testRenameBranchHasPreviousLog(org.eclipse.jgit.internal.storage.file.RefUpdateTest)')","[119718, 120544]"
"('Description.java', 'org.junit.runner.Description', 'methodAndClassNamePatternGroupOrDefault', '([\\s\\S]*)\\((.*)\\)', 'testTwoLevelSubtree_FilterPath(org.eclipse.jgit.dircache.DirCacheIteratorTest)')","[170212, 170450]"
"('URIish.java', 'org.eclipse.jgit.transport.URIish', '<init>', '^(file):([\\\\/](?![\\\\/])((?:[A-Za-z]:)?[\\\\/]?(?:(?:[^\\\\/]+[\\\\/]+)*[^\\\\/]+[\\\\/]*)))$', 'file:///tmp/jgit_test_5842907808920077259_tmp/tmp_384645860907318494/.git/')",[13279]
"('Description.java', 'org.junit.runner.Description', 'methodAndClassNamePatternGroupOrDefault', '([\\s\\S]*)\\((.*)\\)', 'testTwoRangesInOneGroupCase5[OldRule? false](org.eclipse.jgit.ignore.IgnoreRuleSpecialCasesTest)')","[88067, 95172]"
"('Description.java', 'org.junit.runner.Description', 'methodAndClassNamePatternGroupOrDefault', '([\\s\\S]*)\\((.*)\\)', 'testMaliciousGitPath3Case(org.eclipse.jgit.lib.DirCacheCheckoutMaliciousPathTest)')","[66781, 67679]"
"('Description.java', 'org.junit.runner.Description', 'methodAndClassNamePatternGroupOrDefault', '([\\s\\S]*)\\((.*)\\)', 'testDecodeFail_NonBase64Character(org.eclipse.jgit.util.Base64Test)')","[22849, 22934]"
"('Description.java', 'org.junit.runner.Description', 'methodAndClassNamePatternGroupOrDefault', '([\\s\\S]*)\\((.*)\\)', 'test008_SubtreeInternalSorting(org.eclipse.jgit.lib.T0002_TreeTest)')","[58696, 59002]"
"('URIish.java', 'org.eclipse.jgit.transport.URIish', '<init>', '^(file):([\\\\/](?![\\\\/])((?:[A-Za-z]:)?[\\\\/]?(?:(?:[^\\\\/]+[\\\\/]+)*[^\\\\/]+[\\\\/]*)))$', 'https://[::1]/D:\\x')","[244853, 245037, 245957, 246141, 247061, 247245]"
"('Description.java', 'org.junit.runner.Description', 'methodAndClassNamePatternGroupOrDefault', '([\\s\\S]*)\\((.*)\\)', 'testFindRemoteRefUpdatesNoWildcardNoTracking(org.eclipse.jgit.transport.TransportTest)')","[254460, 254632]"
"('URIish.java', 'org.eclipse.jgit.transport.URIish', '<init>', '^(file):([\\\\/](?![\\\\/])((?:[A-Za-z]:)?[\\\\/]?(?:(?:[^\\\\/]+[\\\\/]+)*[^\\\\/]+[\\\\/]*)))$', 'file:/tmp/jgit_test_6569854883740192292_tmp/tmp_475652343048211867/.git/')",[10426]
"('URIish.java', 'org.eclipse.jgit.transport.URIish', '<init>', '^([a-z][a-z0-9+-]+)://(?:(?:([^/:@]+)(?::([^\\\\/]+))?@)?((?:[^\\\\/:]+)|(?:\\[[0-9a-f:]+\\]))(?::(\\d+))?((?:/~(?:[^\\\\/]+))?[\\\\/]))?(.+)?$', 'file:///tmp/jgit_test_4565836515503464262_tmp/tmp_731711786754578526/.git/')","[140788, 140924]"
"('Description.java', 'org.junit.runner.Description', 'methodAndClassNamePatternGroupOrDefault', '([\\s\\S]*)\\((.*)\\)', 'testComparatorReduceCommonStartEnd(org.eclipse.jgit.diff.RawTextTest)')","[10915, 11241]"
"('Description.java', 'org.junit.runner.Description', 'methodAndClassNamePatternGroupOrDefault', '([\\s\\S]*)\\((.*)\\)', 'workingDirectoryModifyInSubfolder(org.eclipse.jgit.api.StashApplyCommandTest)')","[142540, 143093]"
"('Description.java', 'org.junit.runner.Description', 'methodAndClassNamePatternGroupOrDefault', '([\\s\\S]*)\\((.*)\\)', 'test000_sort_01(org.eclipse.jgit.lib.T0002_TreeTest)')","[58591, 58892]"
"('Description.java', 'org.junit.runner.Description', 'methodAndClassNamePatternGroupOrDefault', '([\\s\\S]*)\\((.*)\\)', 'testDirectoryFileConflicts_8(org.eclipse.jgit.lib.DirCacheCheckoutTest)')","[61482, 62555]"
"('URIish.java', 'org.eclipse.jgit.transport.URIish', '<init>', '^(file):([\\\\/](?![\\\\/])((?:[A-Za-z]:)?[\\\\/]?(?:(?:[^\\\\/]+[\\\\/]+)*[^\\\\/]+[\\\\/]*)))$', 'user@example.com:egit.git')",[255805]
"('Description.java', 'org.junit.runner.Description', 'methodAndClassNamePatternGroupOrDefault', '([\\s\\S]*)\\((.*)\\)', 'testDirectoryFileConflicts_11(org.eclipse.jgit.lib.DirCacheCheckoutTest)')","[61608, 62687]"
"('URIish.java', 'org.eclipse.jgit.transport.URIish', '<init>', '^([a-z][a-z0-9+-]+)://(?:(?:([^/:@]+)(?::([^\\\\/]+))?@)?((?:[^\\\\/:]+)|(?:\\[[0-9a-f:]+\\]))(?::(\\d+))?((?:/~(?:[^\\\\/]+))?[\\\\/]))?(.+)?$', 'file:///tmp/jgit_test_9089196078256996576_tmp/tmp_5124154523333350298/.git/')",[63819]
"('URIish.java', 'org.eclipse.jgit.transport.URIish', '<init>', '^(file):([\\\\/](?![\\\\/])((?:[A-Za-z]:)?[\\\\/]?(?:(?:[^\\\\/]+[\\\\/]+)*[^\\\\/]+[\\\\/]*)))$', 'https://lusr\\example:wtf@example.com:1234/D:/x')",[205960]
"('URIish.java', 'org.eclipse.jgit.transport.URIish', '<init>', '^([a-z][a-z0-9+-]+)://(?:(?:([^/:@]+)(?::([^\\\\/]+))?@)?((?:[^\\\\/:]+)|(?:\\[[0-9a-f:]+\\]))(?::(\\d+))?((?:/~(?:[^\\\\/]+))?[\\\\/]))?(.+)?$', 'https://me:wtf@1.2.3.4:1234//abc')",[203767]
"('URIish.java', 'org.eclipse.jgit.transport.URIish', '<init>', '^(file):([\\\\/](?![\\\\/])((?:[A-Za-z]:)?[\\\\/]?(?:(?:[^\\\\/]+[\\\\/]+)*[^\\\\/]+[\\\\/]*)))$', 'file:///tmp/jgit_test_4236178983154660084_tmp/tmp_6596808175431128322/.git/')",[63268]
"('Description.java', 'org.junit.runner.Description', 'methodAndClassNamePatternGroupOrDefault', '([\\s\\S]*)\\((.*)\\)', 'testLockMissing_TempIndex(org.eclipse.jgit.dircache.DirCacheBasicTest)')","[171275, 171528]"
"('ChangeIdUtil.java', 'org.eclipse.jgit.util.ChangeIdUtil', 'indexOfChangeId', '(^Change-Id: *I[a-f0-9]{40}$)', 'Change-Id:')",[33683]
"('Description.java', 'org.junit.runner.Description', 'methodAndClassNamePatternGroupOrDefault', '([\\s\\S]*)\\((.*)\\)', 'testGraphGroupCase2[OldRule? true](org.eclipse.jgit.ignore.IgnoreRuleSpecialCasesTest)')","[88985, 96069]"
"('URIish.java', 'org.eclipse.jgit.transport.URIish', '<init>', '^([a-z][a-z0-9+-]+)://(?:(?:([^/:@]+)(?::([^\\\\/]+))?@)?((?:[^\\\\/:]+)|(?:\\[[0-9a-f:]+\\]))(?::(\\d+))?((?:/~(?:[^\\\\/]+))?[\\\\/]))?(.+)?$', 'ssh+git://lusr\\example@example.com/D:/x')","[226430, 226614]"
"('Description.java', 'org.junit.runner.Description', 'methodAndClassNamePatternGroupOrDefault', '([\\s\\S]*)\\((.*)\\)', 'testGetConflictingNames(org.eclipse.jgit.lib.RefDatabaseConflictingNamesTest)')","[54454, 54476]"
"('Description.java', 'org.junit.runner.Description', 'methodAndClassNamePatternGroupOrDefault', '([\\s\\S]*)\\((.*)\\)', 'testBuildRejectsUnsetFileMode(org.eclipse.jgit.dircache.DirCacheBuilderTest)')","[170974, 171172]"
"('Description.java', 'org.junit.runner.Description', 'methodAndClassNamePatternGroupOrDefault', '([\\s\\S]*)\\((.*)\\)', 'testFileCommittedChangedNotModified(org.eclipse.jgit.treewalk.filter.IndexDiffFilterTest)')","[264905, 265739]"
"('Description.java', 'org.junit.runner.Description', 'methodAndClassNamePatternGroupOrDefault', '([\\s\\S]*)\\((.*)\\)', 'testCache_TooFewFiles(org.eclipse.jgit.internal.storage.file.WindowCacheGetTest)')","[115078, 115143]"
"('Description.java', 'org.junit.runner.Description', 'methodAndClassNamePatternGroupOrDefault', '([\\s\\S]*)\\((.*)\\)', 'repositoryWithDifferentRevCheckedOutSubmodule(org.eclipse.jgit.submodule.SubmoduleStatusTest)')","[18823, 18976]"
"('URIish.java', 'org.eclipse.jgit.transport.URIish', '<init>', '^([a-z][a-z0-9+-]+)://(?:(?:([^/:@]+)(?::([^\\\\/]+))?@)?((?:[^\\\\/:]+)|(?:\\[[0-9a-f:]+\\]))(?::(\\d+))?((?:/~(?:[^\\\\/]+))?[\\\\/]))?(.+)?$', 'http://lusr\\example:wtf@example.com:1234//')",[201789]
"('Description.java', 'org.junit.runner.Description', 'methodAndClassNamePatternGroupOrDefault', '([\\s\\S]*)\\((.*)\\)', 'testEdit_LinuxBug(org.eclipse.jgit.diff.MyersDiffTest)')","[8436, 8982]"
"('Description.java', 'org.junit.runner.Description', 'methodAndClassNamePatternGroupOrDefault', '([\\s\\S]*)\\((.*)\\)', 'testEscapedBracket5(org.eclipse.jgit.fnmatch.FileNameMatcherTest)')","[44569, 47978]"
"('Description.java', 'org.junit.runner.Description', 'methodAndClassNamePatternGroupOrDefault', '([\\s\\S]*)\\((.*)\\)', 'repositoryWithInitializedSubmodule(org.eclipse.jgit.submodule.SubmoduleUpdateTest)')","[17558, 17645]"
"('URIish.java', 'org.eclipse.jgit.transport.URIish', '<init>', '^(file):([\\\\/](?![\\\\/])((?:[A-Za-z]:)?[\\\\/]?(?:(?:[^\\\\/]+[\\\\/]+)*[^\\\\/]+[\\\\/]*)))$', 'https://me@1.2.3.4//')","[231099, 231283]"
"('Description.java', 'org.junit.runner.Description', 'methodAndClassNamePatternGroupOrDefault', '([\\s\\S]*)\\((.*)\\)', 'testGetSlashValidSlashHumanishName(org.eclipse.jgit.transport.URIishTest)')","[189512, 190788]"
"('Description.java', 'org.junit.runner.Description', 'methodAndClassNamePatternGroupOrDefault', '([\\s\\S]*)\\((.*)\\)', 'testCreationNullStartPoint(org.eclipse.jgit.api.BranchCommandTest)')","[128905, 129235]"
"('URIish.java', 'org.eclipse.jgit.transport.URIish', '<init>', '^([a-z][a-z0-9+-]+)://(?:(?:([^/:@]+)(?::([^\\\\/]+))?@)?((?:[^\\\\/:]+)|(?:\\[[0-9a-f:]+\\]))(?::(\\d+))?((?:/~(?:[^\\\\/]+))?[\\\\/]))?(.+)?$', 'user@example.com:egit.git')",[255830]
"('Description.java', 'org.junit.runner.Description', 'methodAndClassNamePatternGroupOrDefault', '([\\s\\S]*)\\((.*)\\)', 'testObjectMovedToNewPack2(org.eclipse.jgit.internal.storage.file.ConcurrentRepackTest)')","[122284, 122370]"
"('Description.java', 'org.junit.runner.Description', 'methodAndClassNamePatternGroupOrDefault', '([\\s\\S]*)\\((.*)\\)', 'testNegativeContextFails(org.eclipse.jgit.diff.DiffFormatterReflowTest)')","[7926, 8137]"
"('URIish.java', 'org.eclipse.jgit.transport.URIish', 'getHumanishName', '^([\\\\/]?((?:[A-Za-z]:)?[\\\\/]?(?:(?:[^\\\\/]+[\\\\/]+)*[^\\\\/]+[\\\\/]*)))$', '/a/b/c//')","[251293, 252561]"
"('Description.java', 'org.junit.runner.Description', 'methodAndClassNamePatternGroupOrDefault', '([\\s\\S]*)\\((.*)\\)', 'testDirectoryFileConflicts_17(org.eclipse.jgit.lib.DirCacheCheckoutTest)')","[61734, 62819]"
"('Description.java', 'org.junit.runner.Description', 'methodAndClassNamePatternGroupOrDefault', '([\\s\\S]*)\\((.*)\\)', 'testAddRevFlagSet(org.eclipse.jgit.revwalk.RevObjectTest)')","[178144, 178358]"
"('URIish.java', 'org.eclipse.jgit.transport.URIish', '<init>', '^(file):([\\\\/](?![\\\\/])((?:[A-Za-z]:)?[\\\\/]?(?:(?:[^\\\\/]+[\\\\/]+)*[^\\\\/]+[\\\\/]*)))$', 'https://me@example.com:1234//abc')",[216954]
"('Description.java', 'org.junit.runner.Description', 'methodAndClassNamePatternGroupOrDefault', '([\\s\\S]*)\\((.*)\\)', 'testWordroupCase4(org.eclipse.jgit.fnmatch.FileNameMatcherTest)')","[44191, 47582]"
"('Description.java', 'org.junit.runner.Description', 'methodAndClassNamePatternGroupOrDefault', '([\\s\\S]*)\\((.*)\\)', 'annotatedTagsNoResult(org.eclipse.jgit.api.NameRevCommandTest)')","[168832, 169068]"
"('Description.java', 'org.junit.runner.Description', 'methodAndClassNamePatternGroupOrDefault', '([\\s\\S]*)\\((.*)\\)', 'testWritePack3(org.eclipse.jgit.internal.storage.file.PackWriterTest)')","[117782, 118233]"
"('FastIgnoreRule.java', 'org.eclipse.jgit.ignore.FastIgnoreRule', 'isMatch', 'a.*c', 'ac')",[100561]
"('URIish.java', 'org.eclipse.jgit.transport.URIish', '<init>', '^([a-z][a-z0-9+-]+)://(?:(?:([^/:@]+)(?::([^\\\\/]+))?@)?((?:[^\\\\/:]+)|(?:\\[[0-9a-f:]+\\]))(?::(\\d+))?((?:/~(?:[^\\\\/]+))?[\\\\/]))?(.+)?$', 'file:///tmp/jgit_test_3236687163374977183_tmp/tmp_1757677135814889258/.git/')",[161508]
"('Description.java', 'org.junit.runner.Description', 'methodAndClassNamePatternGroupOrDefault', '([\\s\\S]*)\\((.*)\\)', 'testWrite_CH_DATA(org.eclipse.jgit.transport.SideBandOutputStreamTest)')","[251829, 252063]"
"('Description.java', 'org.junit.runner.Description', 'methodAndClassNamePatternGroupOrDefault', '([\\s\\S]*)\\((.*)\\)', 'testNegativePattern(org.eclipse.jgit.attributes.AttributeNodeTest)')","[72975, 73104]"
"('Description.java', 'org.junit.runner.Description', 'methodAndClassNamePatternGroupOrDefault', '([\\s\\S]*)\\((.*)\\)', 'testEmptyFolderCommitted(org.eclipse.jgit.treewalk.filter.IndexDiffFilterTest)')","[264212, 265013]"
"('URIish.java', 'org.eclipse.jgit.transport.URIish', '<init>', '^([a-z][a-z0-9+-]+)://(?:(?:([^/:@]+)(?::([^\\\\/]+))?@)?((?:[^\\\\/:]+)|(?:\\[[0-9a-f:]+\\]))(?::(\\d+))?((?:/~(?:[^\\\\/]+))?[\\\\/]))?(.+)?$', 'file:///tmp/jgit_test_500639673404351849_tmp/tmp_418537364732325258/.git/')","[13817, 13940]"
"('URIish.java', 'org.eclipse.jgit.transport.URIish', '<init>', '^(file):([\\\\/](?![\\\\/])((?:[A-Za-z]:)?[\\\\/]?(?:(?:[^\\\\/]+[\\\\/]+)*[^\\\\/]+[\\\\/]*)))$', 'file:/tmp/jgit_test_7657625701278535970_tmp/tmp_1171187948670924664/.git/')",[63335]
"('Description.java', 'org.junit.runner.Description', 'methodAndClassNamePatternGroupOrDefault', '([\\s\\S]*)\\((.*)\\)', 'test000_openrepo_default_relative_workdirconfig(org.eclipse.jgit.internal.storage.file.T0003_BasicTest)')","[116819, 117367]"
"('Description.java', 'org.junit.runner.Description', 'methodAndClassNamePatternGroupOrDefault', '([\\s\\S]*)\\((.*)\\)', 'org.eclipse.jgit.transport.PushProcessTest')","[203136, 217483]"
"('URIish.java', 'org.eclipse.jgit.transport.URIish', '<init>', '^(file):([\\\\/](?![\\\\/])((?:[A-Za-z]:)?[\\\\/]?(?:(?:[^\\\\/]+[\\\\/]+)*[^\\\\/]+[\\\\/]*)))$', 'https://l usr\\example.com@example.com//')","[231835, 232019]"
"('URIish.java', 'org.eclipse.jgit.transport.URIish', '<init>', '^(file):([\\\\/](?![\\\\/])((?:[A-Za-z]:)?[\\\\/]?(?:(?:[^\\\\/]+[\\\\/]+)*[^\\\\/]+[\\\\/]*)))$', 'https://lusr\\example:wtf@1.2.3.4:1234//')",[206236]
"('URIish.java', 'org.eclipse.jgit.transport.URIish', '<init>', '^(file):([\\\\/](?![\\\\/])((?:[A-Za-z]:)?[\\\\/]?(?:(?:[^\\\\/]+[\\\\/]+)*[^\\\\/]+[\\\\/]*)))$', 'ssh://me:wtf@[::1]:1234//')",[192778]
"('Description.java', 'org.junit.runner.Description', 'methodAndClassNamePatternGroupOrDefault', '([\\s\\S]*)\\((.*)\\)', 'testReadString1(org.eclipse.jgit.transport.PacketLineInTest)')","[184647, 185193]"
"('URIish.java', 'org.eclipse.jgit.transport.URIish', '<init>', '^(file):([\\\\/](?![\\\\/])((?:[A-Za-z]:)?[\\\\/]?(?:(?:[^\\\\/]+[\\\\/]+)*[^\\\\/]+[\\\\/]*)))$', 'ssh+git://l usr\\example.com@1.2.3.4//')","[225579, 225763]"
"('Description.java', 'org.junit.runner.Description', 'methodAndClassNamePatternGroupOrDefault', '([\\s\\S]*)\\((.*)\\)', 'testParseGitFileName_SrcFooC(org.eclipse.jgit.patch.FileHeaderTest)')","[597, 1369]"
"('URIish.java', 'org.eclipse.jgit.transport.URIish', '<init>', '^(file):([\\\\/](?![\\\\/])((?:[A-Za-z]:)?[\\\\/]?(?:(?:[^\\\\/]+[\\\\/]+)*[^\\\\/]+[\\\\/]*)))$', 'file:/tmp/jgit_test_5842907808920077259_tmp/tmp_384645860907318494/.git/')",[12738]
"('Description.java', 'org.junit.runner.Description', 'methodAndClassNamePatternGroupOrDefault', '([\\s\\S]*)\\((.*)\\)', 'org.eclipse.jgit.revwalk.FIFORevQueueTest')","[176072, 176627]"
"('URIish.java', 'org.eclipse.jgit.transport.URIish', '<init>', '^([a-z][a-z0-9+-]+)://(?:(?:([^/:@]+)(?::([^\\\\/]+))?@)?((?:[^\\\\/:]+)|(?:\\[[0-9a-f:]+\\]))(?::(\\d+))?((?:/~(?:[^\\\\/]+))?[\\\\/]))?(.+)?$', 'file:///tmp/jgit_test_3236687163374977183_tmp/tmp_6012638459483677170/testCloneRepositoryWithNestedSubmodules2/.git/')","[160764, 162126]"
"('Description.java', 'org.junit.runner.Description', 'methodAndClassNamePatternGroupOrDefault', '([\\s\\S]*)\\((.*)\\)', 'testNoLockSuffix(org.eclipse.jgit.lib.ValidRefNameTest)')","[65823, 66188]"
"('Description.java', 'org.junit.runner.Description', 'methodAndClassNamePatternGroupOrDefault', '([\\s\\S]*)\\((.*)\\)', 'org.eclipse.jgit.internal.storage.file.WindowCacheReconfigureTest')","[115514, 115838]"
"('Description.java', 'org.junit.runner.Description', 'methodAndClassNamePatternGroupOrDefault', '([\\s\\S]*)\\((.*)\\)', 'testSpecificEntryNumber(org.eclipse.jgit.internal.storage.file.ReflogReaderTest)')","[119020, 119194]"
"('Description.java', 'org.junit.runner.Description', 'methodAndClassNamePatternGroupOrDefault', '([\\s\\S]*)\\((.*)\\)', 'testAsteriskDot[OldRule? true](org.eclipse.jgit.ignore.FastIgnoreRuleTest)')","[77723, 78459]"
"('Description.java', 'org.junit.runner.Description', 'methodAndClassNamePatternGroupOrDefault', '([\\s\\S]*)\\((.*)\\)', 'testOnlyOption_f1_10_e(org.eclipse.jgit.api.CommitOnlyTest)')","[135781, 137867]"
"('Description.java', 'org.junit.runner.Description', 'methodAndClassNamePatternGroupOrDefault', '([\\s\\S]*)\\((.*)\\)', 'testMaliciousAbsolutePathSecondCheckout(org.eclipse.jgit.lib.DirCacheCheckoutMaliciousPathTest)')","[66844, 67745]"
"('Description.java', 'org.junit.runner.Description', 'methodAndClassNamePatternGroupOrDefault', '([\\s\\S]*)\\((.*)\\)', 'testProperlyCullAllAncestors1(org.eclipse.jgit.revwalk.RevWalkCullTest)')","[179311, 179376]"
"('Description.java', 'org.junit.runner.Description', 'methodAndClassNamePatternGroupOrDefault', '([\\s\\S]*)\\((.*)\\)', 'testEnsurePathCapacityFastCase(org.eclipse.jgit.treewalk.AbstractTreeIteratorTest)')","[266771, 266919]"
"('URIish.java', 'org.eclipse.jgit.transport.URIish', '<init>', '^(file):([\\\\/](?![\\\\/])((?:[A-Za-z]:)?[\\\\/]?(?:(?:[^\\\\/]+[\\\\/]+)*[^\\\\/]+[\\\\/]*)))$', 'file:/tmp/jgit_test_1988309938804811301_tmp/tmp_8167031851852704344/.git/')",[162868]
"('URIish.java', 'org.eclipse.jgit.transport.URIish', '<init>', '^(file):([\\\\/](?![\\\\/])((?:[A-Za-z]:)?[\\\\/]?(?:(?:[^\\\\/]+[\\\\/]+)*[^\\\\/]+[\\\\/]*)))$', 'ssh+git://example.com//')","[237355, 237539, 238459, 238643, 239563, 239747]"
"('ChangeIdUtil.java', 'org.eclipse.jgit.util.ChangeIdUtil', 'indexOfFirstFooterLine', '(^[a-zA-Z0-9-]+:(?!//).*$)', '[bracket]')",[33297]
"('Description.java', 'org.junit.runner.Description', 'methodAndClassNamePatternGroupOrDefault', '([\\s\\S]*)\\((.*)\\)', 'testDecodeUInt32(org.eclipse.jgit.util.NBTest)')","[39072, 39242]"
"('URIish.java', 'org.eclipse.jgit.transport.URIish', '<init>', '^([a-z][a-z0-9+-]+)://(?:(?:([^/:@]+)(?::([^\\\\/]+))?@)?((?:[^\\\\/:]+)|(?:\\[[0-9a-f:]+\\]))(?::(\\d+))?((?:/~(?:[^\\\\/]+))?[\\\\/]))?(.+)?$', 'http://lusr\\example:wtf@1.2.3.4:80//')",[202341]
"('Description.java', 'org.junit.runner.Description', 'methodAndClassNamePatternGroupOrDefault', '([\\s\\S]*)\\((.*)\\)', 'testEditDeleteConflict(org.eclipse.jgit.notes.NoteMapMergerTest)')","[259506, 259873]"
"('Description.java', 'org.junit.runner.Description', 'methodAndClassNamePatternGroupOrDefault', '([\\s\\S]*)\\((.*)\\)', 'shouldThrowIAEWhenTreeWalkHasMoreThanTwoTrees(org.eclipse.jgit.diff.DiffEntryTest)')","[9914, 10168]"
"('URIish.java', 'org.eclipse.jgit.transport.URIish', '<init>', '^([a-z][a-z0-9+-]+)://(?:(?:([^/:@]+)(?::([^\\\\/]+))?@)?((?:[^\\\\/:]+)|(?:\\[[0-9a-f:]+\\]))(?::(\\d+))?((?:/~(?:[^\\\\/]+))?[\\\\/]))?(.+)?$', 'http://l usr\\example.com@1.2.3.4:1234/D:\\x')",[215229]
"('Description.java', 'org.junit.runner.Description', 'methodAndClassNamePatternGroupOrDefault', '([\\s\\S]*)\\((.*)\\)', 'testFastForwardWithMultipleCommitsOnDifferentBranches(org.eclipse.jgit.api.RebaseCommandTest)')","[131852, 133360]"
"('URIish.java', 'org.eclipse.jgit.transport.URIish', '<init>', '^(file):([\\\\/](?![\\\\/])((?:[A-Za-z]:)?[\\\\/]?(?:(?:[^\\\\/]+[\\\\/]+)*[^\\\\/]+[\\\\/]*)))$', 'example.com:/some/p ath')","[250971, 251063]"
"('Description.java', 'org.junit.runner.Description', 'methodAndClassNamePatternGroupOrDefault', '([\\s\\S]*)\\((.*)\\)', 'testSpaceGroupCase4[OldRule? true](org.eclipse.jgit.ignore.IgnoreRuleSpecialCasesTest)')","[89698, 96782]"
"('Description.java', 'org.junit.runner.Description', 'methodAndClassNamePatternGroupOrDefault', '([\\s\\S]*)\\((.*)\\)', 'testShouldBeRecursive_ALL(org.eclipse.jgit.treewalk.filter.NotTreeFilterTest)')","[263684, 263816]"
"('URIish.java', 'org.eclipse.jgit.transport.URIish', '<init>', '^([a-z][a-z0-9+-]+)://(?:(?:([^/:@]+)(?::([^\\\\/]+))?@)?((?:[^\\\\/:]+)|(?:\\[[0-9a-f:]+\\]))(?::(\\d+))?((?:/~(?:[^\\\\/]+))?[\\\\/]))?(.+)?$', 'https://l usr\\example.com@1.2.3.4/D:\\x')","[232364, 232548]"
"('URIish.java', 'org.eclipse.jgit.transport.URIish', '<init>', '^([a-z][a-z0-9+-]+)://(?:(?:([^/:@]+)(?::([^\\\\/]+))?@)?((?:[^\\\\/:]+)|(?:\\[[0-9a-f:]+\\]))(?::(\\d+))?((?:/~(?:[^\\\\/]+))?[\\\\/]))?(.+)?$', 'https://1.2.3.4/D:\\x')","[244508, 244692, 245612, 245796, 246716, 246900]"
"('Description.java', 'org.junit.runner.Description', 'methodAndClassNamePatternGroupOrDefault', '([\\s\\S]*)\\((.*)\\)', 'testExactRename_MultipleIdenticalDeletes(org.eclipse.jgit.diff.RenameDetectorTest)')","[4750, 5318]"
"('URIish.java', 'org.eclipse.jgit.transport.URIish', '<init>', '^([a-z][a-z0-9+-]+)://(?:(?:([^/:@]+)(?::([^\\\\/]+))?@)?((?:[^\\\\/:]+)|(?:\\[[0-9a-f:]+\\]))(?::(\\d+))?((?:/~(?:[^\\\\/]+))?[\\\\/]))?(.+)?$', 'ssh+git://l usr\\example.com:wtf@1.2.3.4:1234//abc')",[197787]
"('URIish.java', 'org.eclipse.jgit.transport.URIish', '<init>', '^([a-z][a-z0-9+-]+)://(?:(?:([^/:@]+)(?::([^\\\\/]+))?@)?((?:[^\\\\/:]+)|(?:\\[[0-9a-f:]+\\]))(?::(\\d+))?((?:/~(?:[^\\\\/]+))?[\\\\/]))?(.+)?$', 'ssh+git://me@1.2.3.4/D:\\x')","[224636, 224820]"
"('URIish.java', 'org.eclipse.jgit.transport.URIish', '<init>', '^([a-z][a-z0-9+-]+)://(?:(?:([^/:@]+)(?::([^\\\\/]+))?@)?((?:[^\\\\/:]+)|(?:\\[[0-9a-f:]+\\]))(?::(\\d+))?((?:/~(?:[^\\\\/]+))?[\\\\/]))?(.+)?$', 'https://l usr\\example.com@example.com:80/D:\\x')",[218932]
"('URIish.java', 'org.eclipse.jgit.transport.URIish', '<init>', '^(file):([\\\\/](?![\\\\/])((?:[A-Za-z]:)?[\\\\/]?(?:(?:[^\\\\/]+[\\\\/]+)*[^\\\\/]+[\\\\/]*)))$', 'ssh+git://me:wtf@[::1]:1234//')",[196982]
"('Description.java', 'org.junit.runner.Description', 'methodAndClassNamePatternGroupOrDefault', '([\\s\\S]*)\\((.*)\\)', 'shouldMarkEntriesWhenGivenMarkTreeFilter(org.eclipse.jgit.diff.DiffEntryTest)')","[9893, 10146]"
"('Description.java', 'org.junit.runner.Description', 'methodAndClassNamePatternGroupOrDefault', '([\\s\\S]*)\\((.*)\\)', 'org.eclipse.jgit.diff.RenameDetectorTest')","[4288, 5640]"
"('URIish.java', 'org.eclipse.jgit.transport.URIish', '<init>', '^([a-z][a-z0-9+-]+)://(?:(?:([^/:@]+)(?::([^\\\\/]+))?@)?((?:[^\\\\/:]+)|(?:\\[[0-9a-f:]+\\]))(?::(\\d+))?((?:/~(?:[^\\\\/]+))?[\\\\/]))?(.+)?$', 'http://lusr\\example:wtf@1.2.3.4:80/D:\\x')",[202479]
"('Description.java', 'org.junit.runner.Description', 'methodAndClassNamePatternGroupOrDefault', '([\\s\\S]*)\\((.*)\\)', 'testXDigitGroupCase6[OldRule? false](org.eclipse.jgit.ignore.IgnoreRuleSpecialCasesTest)')","[87699, 94804]"
"('Description.java', 'org.junit.runner.Description', 'methodAndClassNamePatternGroupOrDefault', '([\\s\\S]*)\\((.*)\\)', 'testSimpleStarCase2[OldRule? true](org.eclipse.jgit.ignore.IgnoreRuleSpecialCasesTest)')","[89882, 96966]"
"('Repository.java', 'org.eclipse.jgit.lib.Repository', 'resolve', '^-\\d+$', '0')","[64524, 64551, 64634, 64661, 64744, 64771, 65184, 65211, 65294, 65321, 65349, 65376, 65514, 65541, 138499, 138527, 143677, 143706, 143926, 143955, 144175, 144204, 145117, 145146, 145176, 145205, 145500, 145529, 145709, 145738, 146068, 146097, 146542, 146571, 146751, 146780, 147075, 147104, 147299, 147328, 147358, 147387, 147417, 147446, 147741, 147770, 147965, 147994, 148024, 148053, 148348, 148377, 148407, 148436, 148631, 148660, 148690, 148719, 148749, 148778, 149073, 149102, 149132, 149161]"
"('Description.java', 'org.junit.runner.Description', 'methodAndClassNamePatternGroupOrDefault', '([\\s\\S]*)\\((.*)\\)', 'testDepth1(org.eclipse.jgit.revwalk.RevWalkShallowTest)')","[181583, 181713]"
"('Description.java', 'org.junit.runner.Description', 'methodAndClassNamePatternGroupOrDefault', '([\\s\\S]*)\\((.*)\\)', 'testTwoCommitsEmptyTree(org.eclipse.jgit.revwalk.ObjectWalkTest)')","[177486, 177684]"
"('Description.java', 'org.junit.runner.Description', 'methodAndClassNamePatternGroupOrDefault', '([\\s\\S]*)\\((.*)\\)', 'org.eclipse.jgit.diff.RawTextIgnoreLeadingWhitespaceTest')","[3869, 3978]"
"('URIish.java', 'org.eclipse.jgit.transport.URIish', '<init>', '^([a-z][a-z0-9+-]+)://(?:(?:([^/:@]+)(?::([^\\\\/]+))?@)?((?:[^\\\\/:]+)|(?:\\[[0-9a-f:]+\\]))(?::(\\d+))?((?:/~(?:[^\\\\/]+))?[\\\\/]))?(.+)?$', 'ssh://l usr\\example.com:wtf@[::1]:80/D:/x')",[194283]
"('FastIgnoreRule.java', 'org.eclipse.jgit.ignore.FastIgnoreRule', 'isMatch', '[=a=]', 'a')",[100951]
"('URIish.java', 'org.eclipse.jgit.transport.URIish', '<init>', '^(file):([\\\\/](?![\\\\/])((?:[A-Za-z]:)?[\\\\/]?(?:(?:[^\\\\/]+[\\\\/]+)*[^\\\\/]+[\\\\/]*)))$', 'ssh://me@example.com:1234/D:/x')",[207064]
"('Description.java', 'org.junit.runner.Description', 'methodAndClassNamePatternGroupOrDefault', '([\\s\\S]*)\\((.*)\\)', 'testCherryPickOurCommitName(org.eclipse.jgit.api.CherryPickCommandTest)')","[168320, 168580]"
"('Description.java', 'org.junit.runner.Description', 'methodAndClassNamePatternGroupOrDefault', '([\\s\\S]*)\\((.*)\\)', 'testCleanDirs(org.eclipse.jgit.api.CleanCommandTest)')","[154657, 154807]"
"('Description.java', 'org.junit.runner.Description', 'methodAndClassNamePatternGroupOrDefault', '([\\s\\S]*)\\((.*)\\)', 'testANY_DIFF_IncludesSingleTreeCase(org.eclipse.jgit.treewalk.filter.TreeFilterTest)')","[265863, 266011]"
"('Description.java', 'org.junit.runner.Description', 'methodAndClassNamePatternGroupOrDefault', '([\\s\\S]*)\\((.*)\\)', 'testDirModeAndRegex2[OldRule? false](org.eclipse.jgit.ignore.IgnoreMatcherParametrizedTest)')","[103581, 104062]"
"('Description.java', 'org.junit.runner.Description', 'methodAndClassNamePatternGroupOrDefault', '([\\s\\S]*)\\((.*)\\)', 'testBuilder_AddThenSort(org.eclipse.jgit.util.RefListTest)')","[20054, 20550]"
"('Description.java', 'org.junit.runner.Description', 'methodAndClassNamePatternGroupOrDefault', '([\\s\\S]*)\\((.*)\\)', 'indexWithGitmodules(org.eclipse.jgit.submodule.SubmoduleWalkTest)')","[17133, 17326]"
"('FastIgnoreRule.java', 'org.eclipse.jgit.ignore.FastIgnoreRule', 'isMatch', '[[\\p{Graph}\\p{javaDigit}\\p{javaLetter}]]', 'ö')",[99779]
"('Description.java', 'org.junit.runner.Description', 'methodAndClassNamePatternGroupOrDefault', '([\\s\\S]*)\\((.*)\\)', 'testDequote_NamedEscapes(org.eclipse.jgit.util.QuotedStringGitPathStyleTest)')","[39975, 40407]"
"('Description.java', 'org.junit.runner.Description', 'methodAndClassNamePatternGroupOrDefault', '([\\s\\S]*)\\((.*)\\)', 'testFilePathCase0[OldRule? true](org.eclipse.jgit.ignore.IgnoreRuleSpecialCasesTest)')","[90388, 97472]"
"('URIish.java', 'org.eclipse.jgit.transport.URIish', '<init>', '^([a-z][a-z0-9+-]+)://(?:(?:([^/:@]+)(?::([^\\\\/]+))?@)?((?:[^\\\\/:]+)|(?:\\[[0-9a-f:]+\\]))(?::(\\d+))?((?:/~(?:[^\\\\/]+))?[\\\\/]))?(.+)?$', 'http://lusr\\example:wtf@example.com:80//abc')",[202019]
"('Description.java', 'org.junit.runner.Description', 'methodAndClassNamePatternGroupOrDefault', '([\\s\\S]*)\\((.*)\\)', 'testIsBare_CreateRepositoryFromArbitraryGitDir(org.eclipse.jgit.internal.storage.file.RepositorySetupWorkDirTest)')","[114090, 114354]"
"('URIish.java', 'org.eclipse.jgit.transport.URIish', '<init>', '^([a-z][a-z0-9+-]+)://(?:(?:([^/:@]+)(?::([^\\\\/]+))?@)?((?:[^\\\\/:]+)|(?:\\[[0-9a-f:]+\\]))(?::(\\d+))?((?:/~(?:[^\\\\/]+))?[\\\\/]))?(.+)?$', 'file:///tmp/jgit_test_500639673404351849_tmp/tmp_8516621355928323871.git/')",[14028]
"('URIish.java', 'org.eclipse.jgit.transport.URIish', '<init>', '^([a-z][a-z0-9+-]+)://(?:(?:([^/:@]+)(?::([^\\\\/]+))?@)?((?:[^\\\\/:]+)|(?:\\[[0-9a-f:]+\\]))(?::(\\d+))?((?:/~(?:[^\\\\/]+))?[\\\\/]))?(.+)?$', 'ssh+git://l usr\\example.com@1.2.3.4:80/D:/x')",[212055]
"('Description.java', 'org.junit.runner.Description', 'methodAndClassNamePatternGroupOrDefault', '([\\s\\S]*)\\((.*)\\)', 'org.eclipse.jgit.lib.RefTest')","[57680, 58408]"
"('URIish.java', 'org.eclipse.jgit.transport.URIish', '<init>', '^(file):([\\\\/](?![\\\\/])((?:[A-Za-z]:)?[\\\\/]?(?:(?:[^\\\\/]+[\\\\/]+)*[^\\\\/]+[\\\\/]*)))$', 'ssh+git://l usr\\example.com:wtf@example.com:80/D:\\x')",[197672]
"('URIish.java', 'org.eclipse.jgit.transport.URIish', '<init>', '^(?:([^/:@]+)(?::([^\\\\/]+))?@)?([^\\\\/:]{2,}):([\\\\/](?:(?:[^\\\\/]+[\\\\/]+)*[^\\\\/]+[\\\\/]*))$', '/tmp/jgit_test_8267236767099531789_tmp/tmp_530234452973594559/.git')","[130459, 130605]"
"('Description.java', 'org.junit.runner.Description', 'methodAndClassNamePatternGroupOrDefault', '([\\s\\S]*)\\((.*)\\)', 'checkMergeEqualTreesInCore(org.eclipse.jgit.merge.ResolveMergerTest)')","[12780, 13104]"
"('URIish.java', 'org.eclipse.jgit.transport.URIish', '<init>', '^(file):([\\\\/](?![\\\\/])((?:[A-Za-z]:)?[\\\\/]?(?:(?:[^\\\\/]+[\\\\/]+)*[^\\\\/]+[\\\\/]*)))$', 'ssh+git://lusr\\example@1.2.3.4:1234//')",[212860]
"('URIish.java', 'org.eclipse.jgit.transport.URIish', '<init>', '^(file):([\\\\/](?![\\\\/])((?:[A-Za-z]:)?[\\\\/]?(?:(?:[^\\\\/]+[\\\\/]+)*[^\\\\/]+[\\\\/]*)))$', 'https://lusr\\example@example.com:80//abc')",[219921]
"('URIish.java', 'org.eclipse.jgit.transport.URIish', '<init>', '^(file):([\\\\/](?![\\\\/])((?:[A-Za-z]:)?[\\\\/]?(?:(?:[^\\\\/]+[\\\\/]+)*[^\\\\/]+[\\\\/]*)))$', 'ssh+git://me:wtf@example.com:1234//')",[195456]
"('Description.java', 'org.junit.runner.Description', 'methodAndClassNamePatternGroupOrDefault', '([\\s\\S]*)\\((.*)\\)', 'testOnlyOption_f1_2_a(org.eclipse.jgit.api.CommitOnlyTest)')","[134542, 136569]"
"('URIish.java', 'org.eclipse.jgit.transport.URIish', '<init>', '^([a-z][a-z0-9+-]+)://(?:(?:([^/:@]+)(?::([^\\\\/]+))?@)?((?:[^\\\\/:]+)|(?:\\[[0-9a-f:]+\\]))(?::(\\d+))?((?:/~(?:[^\\\\/]+))?[\\\\/]))?(.+)?$', 'ssh+git://l usr\\example.com:wtf@1.2.3.4:80/D:\\x')",[198063]
"('Description.java', 'org.junit.runner.Description', 'methodAndClassNamePatternGroupOrDefault', '([\\s\\S]*)\\((.*)\\)', 'testDF_SkipsSeenSubtree(org.eclipse.jgit.treewalk.NameConflictTreeWalkTest)')","[263072, 263182]"
"('URIish.java', 'org.eclipse.jgit.transport.URIish', '<init>', '^([a-z][a-z0-9+-]+)://(?:(?:([^/:@]+)(?::([^\\\\/]+))?@)?((?:[^\\\\/:]+)|(?:\\[[0-9a-f:]+\\]))(?::(\\d+))?((?:/~(?:[^\\\\/]+))?[\\\\/]))?(.+)?$', 'https://lusr\\example@1.2.3.4:1234//abc')",[220128]
"('Description.java', 'org.junit.runner.Description', 'methodAndClassNamePatternGroupOrDefault', '([\\s\\S]*)\\((.*)\\)', 'logAllCommitsWithTag(org.eclipse.jgit.api.LogCommandTest)')","[130841, 130995]"
"('URIish.java', 'org.eclipse.jgit.transport.URIish', '<init>', '^([a-z][a-z0-9+-]+)://(?:(?:([^/:@]+)(?::([^\\\\/]+))?@)?((?:[^\\\\/:]+)|(?:\\[[0-9a-f:]+\\]))(?::(\\d+))?((?:/~(?:[^\\\\/]+))?[\\\\/]))?(.+)?$', 'ssh+git://me@1.2.3.4//abc')","[224544, 224728]"
"('FastIgnoreRule.java', 'org.eclipse.jgit.ignore.FastIgnoreRule', 'isMatch', '[^b-c]', 'a')",[100169]
"('Description.java', 'org.junit.runner.Description', 'methodAndClassNamePatternGroupOrDefault', '([\\s\\S]*)\\((.*)\\)', 'testParse_FixNoNewline(org.eclipse.jgit.patch.PatchTest)')","[2127, 2280]"
"('Description.java', 'org.junit.runner.Description', 'methodAndClassNamePatternGroupOrDefault', '([\\s\\S]*)\\((.*)\\)', 'testValidCommit1Parent(org.eclipse.jgit.lib.ObjectCheckerTest)')","[48668, 51164]"
"('Description.java', 'org.junit.runner.Description', 'methodAndClassNamePatternGroupOrDefault', '([\\s\\S]*)\\((.*)\\)', 'testRebaseShouldBeAbleToHandleLinesWithoutCommitMessageInRebaseTodoFile(org.eclipse.jgit.api.RebaseCommandTest)')","[131684, 133184]"
"('ChangeIdUtil.java', 'org.eclipse.jgit.util.ChangeIdUtil', 'insertId', '^(Bug|Issue)[a-zA-Z0-9-]*:.*$', 'Signed-off-by: J Author <ja@example.com>')","[34529, 34787, 34967, 35427, 35582, 35711, 35892, 36073]"
"('Description.java', 'org.junit.runner.Description', 'methodAndClassNamePatternGroupOrDefault', '([\\s\\S]*)\\((.*)\\)', 'testEqualsIgnoreCase4(org.eclipse.jgit.util.StringUtilsTest)')","[27194, 27346]"
"('Description.java', 'org.junit.runner.Description', 'methodAndClassNamePatternGroupOrDefault', '([\\s\\S]*)\\((.*)\\)', 'testPrintGroupCase4[OldRule? false](org.eclipse.jgit.ignore.IgnoreRuleSpecialCasesTest)')","[87078, 94183]"
"('Description.java', 'org.junit.runner.Description', 'methodAndClassNamePatternGroupOrDefault', '([\\s\\S]*)\\((.*)\\)', 'testDegenerate_InsertStart(org.eclipse.jgit.diff.HistogramDiffTest)')","[7080, 7758]"
"('Description.java', 'org.junit.runner.Description', 'methodAndClassNamePatternGroupOrDefault', '([\\s\\S]*)\\((.*)\\)', 'testEgitHistory(org.eclipse.jgit.revplot.PlotCommitListTest)')","[169553, 169882]"
"('URIish.java', 'org.eclipse.jgit.transport.URIish', '<init>', '^([a-z][a-z0-9+-]+)://(?:(?:([^/:@]+)(?::([^\\\\/]+))?@)?((?:[^\\\\/:]+)|(?:\\[[0-9a-f:]+\\]))(?::(\\d+))?((?:/~(?:[^\\\\/]+))?[\\\\/]))?(.+)?$', 'https://lusr\\example:wtf@[::1]:80//abc')",[206857]
"('URIish.java', 'org.eclipse.jgit.transport.URIish', '<init>', '^(file):([\\\\/](?![\\\\/])((?:[A-Za-z]:)?[\\\\/]?(?:(?:[^\\\\/]+[\\\\/]+)*[^\\\\/]+[\\\\/]*)))$', 'http://me@1.2.3.4:80/D:\\x')",[214286]
"('URIish.java', 'org.eclipse.jgit.transport.URIish', '<init>', '^(file):([\\\\/](?![\\\\/])((?:[A-Za-z]:)?[\\\\/]?(?:(?:[^\\\\/]+[\\\\/]+)*[^\\\\/]+[\\\\/]*)))$', 'file:///tmp/jgit_test_3236687163374977183_tmp/tmp_1757677135814889258/.git/')",[161477]
"('Description.java', 'org.junit.runner.Description', 'methodAndClassNamePatternGroupOrDefault', '([\\s\\S]*)\\((.*)\\)', 'testGetRef_DiscoversDeletedLoose(org.eclipse.jgit.internal.storage.file.RefDirectoryTest)')","[111265, 112461]"
"('URIish.java', 'org.eclipse.jgit.transport.URIish', '<init>', '^([a-z][a-z0-9+-]+)://(?:(?:([^/:@]+)(?::([^\\\\/]+))?@)?((?:[^\\\\/:]+)|(?:\\[[0-9a-f:]+\\]))(?::(\\d+))?((?:/~(?:[^\\\\/]+))?[\\\\/]))?(.+)?$', 'https://me:wtf@1.2.3.4:1234//')",[203635]
"('URIish.java', 'org.eclipse.jgit.transport.URIish', '<init>', '^([a-z][a-z0-9+-]+)://(?:(?:([^/:@]+)(?::([^\\\\/]+))?@)?((?:[^\\\\/:]+)|(?:\\[[0-9a-f:]+\\]))(?::(\\d+))?((?:/~(?:[^\\\\/]+))?[\\\\/]))?(.+)?$', 'ssh+git://lusr\\example@1.2.3.4:80/D:/x')",[213159]
"('URIish.java', 'org.eclipse.jgit.transport.URIish', '<init>', '^([a-z][a-z0-9+-]+)://(?:(?:([^/:@]+)(?::([^\\\\/]+))?@)?((?:[^\\\\/:]+)|(?:\\[[0-9a-f:]+\\]))(?::(\\d+))?((?:/~(?:[^\\\\/]+))?[\\\\/]))?(.+)?$', 'ssh://lusr\\example:wtf@example.com:80/D:\\x')",[194697]
"('Description.java', 'org.junit.runner.Description', 'methodAndClassNamePatternGroupOrDefault', '([\\s\\S]*)\\((.*)\\)', 'RELATIVE(org.eclipse.jgit.util.GitDateFormatterTest)')","[26171, 26369]"
"('Description.java', 'org.junit.runner.Description', 'methodAndClassNamePatternGroupOrDefault', '([\\s\\S]*)\\((.*)\\)', 'checkMergeMergeableFilesWithTreeInIndex(org.eclipse.jgit.merge.ResolveMergerTest)')","[12700, 13060]"
"('URIish.java', 'org.eclipse.jgit.transport.URIish', '<init>', '^([a-z][a-z0-9+-]+)://(?:(?:([^/:@]+)(?::([^\\\\/]+))?@)?((?:[^\\\\/:]+)|(?:\\[[0-9a-f:]+\\]))(?::(\\d+))?((?:/~(?:[^\\\\/]+))?[\\\\/]))?(.+)?$', 'user@example.com:some/p ath')","[249660, 249729]"
"('URIish.java', 'org.eclipse.jgit.transport.URIish', '<init>', '^([a-z][a-z0-9+-]+)://(?:(?:([^/:@]+)(?::([^\\\\/]+))?@)?((?:[^\\\\/:]+)|(?:\\[[0-9a-f:]+\\]))(?::(\\d+))?((?:/~(?:[^\\\\/]+))?[\\\\/]))?(.+)?$', '/~some/p ath')","[249798, 249913]"
"('Description.java', 'org.junit.runner.Description', 'methodAndClassNamePatternGroupOrDefault', '([\\s\\S]*)\\((.*)\\)', 'testParseCopy100(org.eclipse.jgit.patch.FileHeaderTest)')","[555, 1172]"
"('Description.java', 'org.junit.runner.Description', 'methodAndClassNamePatternGroupOrDefault', '([\\s\\S]*)\\((.*)\\)', 'testVerySimplePatternCase2[OldRule? true](org.eclipse.jgit.ignore.IgnoreRuleSpecialCasesTest)')","[89330, 96414]"
"('URIish.java', 'org.eclipse.jgit.transport.URIish', '<init>', '^([a-z][a-z0-9+-]+)://(?:(?:([^/:@]+)(?::([^\\\\/]+))?@)?((?:[^\\\\/:]+)|(?:\\[[0-9a-f:]+\\]))(?::(\\d+))?((?:/~(?:[^\\\\/]+))?[\\\\/]))?(.+)?$', 'https://1.2.3.4/D:/x')","[244462, 244646, 245566, 245750, 246670, 246854]"
"('Description.java', 'org.junit.runner.Description', 'methodAndClassNamePatternGroupOrDefault', '([\\s\\S]*)\\((.*)\\)', 'testEmptyTexts(org.eclipse.jgit.merge.MergeAlgorithmTest)')","[11913, 12208]"
"('Description.java', 'org.junit.runner.Description', 'methodAndClassNamePatternGroupOrDefault', '([\\s\\S]*)\\((.*)\\)', 'org.eclipse.jgit.ignore.IgnoreMatcherTest')","[102907, 103317]"
"('URIish.java', 'org.eclipse.jgit.transport.URIish', '<init>', '^(?:([^/:@]+)(?::([^\\\\/]+))?@)?([^\\\\/:]{2,}):([\\\\/](?:(?:[^\\\\/]+[\\\\/]+)*[^\\\\/]+[\\\\/]*))$', '/tmp/jgit_test_9017651431273807895_tmp/tmp_2045899248531600700')","[145301, 145441, 145649, 145858, 146008]"
"('Description.java', 'org.junit.runner.Description', 'methodAndClassNamePatternGroupOrDefault', '([\\s\\S]*)\\((.*)\\)', 'testReadStringRaw3(org.eclipse.jgit.transport.PacketLineInTest)')","[184269, 184797]"
"('Description.java', 'org.junit.runner.Description', 'methodAndClassNamePatternGroupOrDefault', '([\\s\\S]*)\\((.*)\\)', 'testTimeout_readBuffer_Success2(org.eclipse.jgit.util.io.TimeoutInputStreamTest)')","[24141, 24316]"
"('Description.java', 'org.junit.runner.Description', 'methodAndClassNamePatternGroupOrDefault', '([\\s\\S]*)\\((.*)\\)', 'testDataAfterPackFooterSplitHeaderRead(org.eclipse.jgit.transport.PackParserTest)')","[218276, 218529]"
"('URIish.java', 'org.eclipse.jgit.transport.URIish', '<init>', '^([a-z][a-z0-9+-]+)://(?:(?:([^/:@]+)(?::([^\\\\/]+))?@)?((?:[^\\\\/:]+)|(?:\\[[0-9a-f:]+\\]))(?::(\\d+))?((?:/~(?:[^\\\\/]+))?[\\\\/]))?(.+)?$', 'ssh+git://me:wtf@example.com:1234/D:\\x')",[195617]
"('URIish.java', 'org.eclipse.jgit.transport.URIish', '<init>', '^([a-z][a-z0-9+-]+)://(?:(?:([^/:@]+)(?::([^\\\\/]+))?@)?((?:[^\\\\/:]+)|(?:\\[[0-9a-f:]+\\]))(?::(\\d+))?((?:/~(?:[^\\\\/]+))?[\\\\/]))?(.+)?$', 'https://l usr\\example.com:wtf@1.2.3.4:80/D:\\x')",[205477]
"('URIish.java', 'org.eclipse.jgit.transport.URIish', '<init>', '^([a-z][a-z0-9+-]+)://(?:(?:([^/:@]+)(?::([^\\\\/]+))?@)?((?:[^\\\\/:]+)|(?:\\[[0-9a-f:]+\\]))(?::(\\d+))?((?:/~(?:[^\\\\/]+))?[\\\\/]))?(.+)?$', 'http://l usr\\example.com:wtf@1.2.3.4:1234/D:\\x')",[201191]
"('Description.java', 'org.junit.runner.Description', 'methodAndClassNamePatternGroupOrDefault', '([\\s\\S]*)\\((.*)\\)', 'testEncode_Unicode(org.eclipse.jgit.lib.ConstantsEncodingTest)')","[59907, 60013]"
"('URIish.java', 'org.eclipse.jgit.transport.URIish', '<init>', '^(file):([\\\\/](?![\\\\/])((?:[A-Za-z]:)?[\\\\/]?(?:(?:[^\\\\/]+[\\\\/]+)*[^\\\\/]+[\\\\/]*)))$', 'https://lusr\\example@[::1]:80/D:/x')",[220703]
"('URIish.java', 'org.eclipse.jgit.transport.URIish', '<init>', '^(file):([\\\\/](?![\\\\/])((?:[A-Za-z]:)?[\\\\/]?(?:(?:[^\\\\/]+[\\\\/]+)*[^\\\\/]+[\\\\/]*)))$', 'http://lusr\\example@[::1]/D:/x')","[230455, 230639]"
"('AttributesRule.java', 'org.eclipse.jgit.attributes.AttributesRule', 'isMatch', '.r[a-c]', 'file')","[76400, 76589, 76778]"
"('Description.java', 'org.junit.runner.Description', 'methodAndClassNamePatternGroupOrDefault', '([\\s\\S]*)\\((.*)\\)', 'testGetRefs_TagsOnly_AllPacked(org.eclipse.jgit.internal.storage.file.RefDirectoryTest)')","[110677, 111845]"
"('URIish.java', 'org.eclipse.jgit.transport.URIish', '<init>', '^([a-z][a-z0-9+-]+)://(?:(?:([^/:@]+)(?::([^\\\\/]+))?@)?((?:[^\\\\/:]+)|(?:\\[[0-9a-f:]+\\]))(?::(\\d+))?((?:/~(?:[^\\\\/]+))?[\\\\/]))?(.+)?$', 'ssh://lusr\\example:wtf@1.2.3.4:1234//abc')",[194789]
"('Description.java', 'org.junit.runner.Description', 'methodAndClassNamePatternGroupOrDefault', '([\\s\\S]*)\\((.*)\\)', 'testEmptyCache_Clear_NoCacheTree(org.eclipse.jgit.dircache.DirCacheTreeTest)')","[171650, 171778]"
"('Description.java', 'org.junit.runner.Description', 'methodAndClassNamePatternGroupOrDefault', '([\\s\\S]*)\\((.*)\\)', 'testRebaseShouldStopForRewordInCaseOfConflict(org.eclipse.jgit.api.RebaseCommandTest)')","[131432, 132920]"
"('URIish.java', 'org.eclipse.jgit.transport.URIish', '<init>', '^(file):([\\\\/](?![\\\\/])((?:[A-Za-z]:)?[\\\\/]?(?:(?:[^\\\\/]+[\\\\/]+)*[^\\\\/]+[\\\\/]*)))$', '/tmp/jgit_test_279927277504112735_tmp/tmp_3984817157549652538/.git')","[18370, 18510]"
"('URIish.java', 'org.eclipse.jgit.transport.URIish', '<init>', '^([a-z][a-z0-9+-]+)://(?:(?:([^/:@]+)(?::([^\\\\/]+))?@)?((?:[^\\\\/:]+)|(?:\\[[0-9a-f:]+\\]))(?::(\\d+))?((?:/~(?:[^\\\\/]+))?[\\\\/]))?(.+)?$', 'ssh://me@example.com:80/D:/x')",[207271]
"('Description.java', 'org.junit.runner.Description', 'methodAndClassNamePatternGroupOrDefault', '([\\s\\S]*)\\((.*)\\)', 'testOnlyOption_f1_13_e(org.eclipse.jgit.api.CommitOnlyTest)')","[136096, 138197]"
"('Description.java', 'org.junit.runner.Description', 'methodAndClassNamePatternGroupOrDefault', '([\\s\\S]*)\\((.*)\\)', 'testSaveTimeout(org.eclipse.jgit.transport.RemoteConfigTest)')","[253275, 253827]"
"('URIish.java', 'org.eclipse.jgit.transport.URIish', '<init>', '^(file):([\\\\/](?![\\\\/])((?:[A-Za-z]:)?[\\\\/]?(?:(?:[^\\\\/]+[\\\\/]+)*[^\\\\/]+[\\\\/]*)))$', 'ssh+git://lusr\\example:wtf@example.com:80/D:\\x')",[198776]
"('Description.java', 'org.junit.runner.Description', 'methodAndClassNamePatternGroupOrDefault', '([\\s\\S]*)\\((.*)\\)', 'testPackCommitsAndLooseOne(org.eclipse.jgit.internal.storage.file.GcBasicPackingTest)')","[113309, 113440]"
"('URIish.java', 'org.eclipse.jgit.transport.URIish', '<init>', '^([a-z][a-z0-9+-]+)://(?:(?:([^/:@]+)(?::([^\\\\/]+))?@)?((?:[^\\\\/:]+)|(?:\\[[0-9a-f:]+\\]))(?::(\\d+))?((?:/~(?:[^\\\\/]+))?[\\\\/]))?(.+)?$', 'http://lusr\\example@[::1]//abc')","[230432, 230616]"
"('Description.java', 'org.junit.runner.Description', 'methodAndClassNamePatternGroupOrDefault', '([\\s\\S]*)\\((.*)\\)', 'testEqualsWithWhitespace(org.eclipse.jgit.diff.RawTextIgnoreLeadingWhitespaceTest)')","[3911, 3955]"
"('Description.java', 'org.junit.runner.Description', 'methodAndClassNamePatternGroupOrDefault', '([\\s\\S]*)\\((.*)\\)', 'submoduleNestedWithHeadMatchingIndex(org.eclipse.jgit.treewalk.FileTreeIteratorTest)')","[262103, 262446]"
"('Description.java', 'org.junit.runner.Description', 'methodAndClassNamePatternGroupOrDefault', '([\\s\\S]*)\\((.*)\\)', 'testNoSubtree_WithTreeWalk(org.eclipse.jgit.dircache.DirCacheIteratorTest)')","[170086, 170318]"
"('Description.java', 'org.junit.runner.Description', 'methodAndClassNamePatternGroupOrDefault', '([\\s\\S]*)\\((.*)\\)', 'testUnpopAtFront(org.eclipse.jgit.revwalk.FIFORevQueueTest)')","[176093, 176220]"
"('URIish.java', 'org.eclipse.jgit.transport.URIish', '<init>', '^([a-z][a-z0-9+-]+)://(?:(?:([^/:@]+)(?::([^\\\\/]+))?@)?((?:[^\\\\/:]+)|(?:\\[[0-9a-f:]+\\]))(?::(\\d+))?((?:/~(?:[^\\\\/]+))?[\\\\/]))?(.+)?$', 'http://lusr\\example@[::1]:80/D:/x')",[216839]
"('Description.java', 'org.junit.runner.Description', 'methodAndClassNamePatternGroupOrDefault', '([\\s\\S]*)\\((.*)\\)', 'testReadStringRaw_End(org.eclipse.jgit.transport.PacketLineInTest)')","[184584, 185127]"
"('Description.java', 'org.junit.runner.Description', 'methodAndClassNamePatternGroupOrDefault', '([\\s\\S]*)\\((.*)\\)', 'testSpecialGroupCase7[OldRule? true](org.eclipse.jgit.ignore.IgnoreRuleSpecialCasesTest)')","[88479, 95563]"
"('Description.java', 'org.junit.runner.Description', 'methodAndClassNamePatternGroupOrDefault', '([\\s\\S]*)\\((.*)\\)', 'newFileInIndexThenModifiedInWorkTree(org.eclipse.jgit.api.StashCreateCommandTest)')","[155925, 156266]"
"('Description.java', 'org.junit.runner.Description', 'methodAndClassNamePatternGroupOrDefault', '([\\s\\S]*)\\((.*)\\)', 'testManySolutionsCase1(org.eclipse.jgit.fnmatch.FileNameMatcherTest)')","[43561, 46922]"
"('URIish.java', 'org.eclipse.jgit.transport.URIish', '<init>', '^(file):([\\\\/](?![\\\\/])((?:[A-Za-z]:)?[\\\\/]?(?:(?:[^\\\\/]+[\\\\/]+)*[^\\\\/]+[\\\\/]*)))$', 'ssh+git://l usr\\example.com@1.2.3.4:80/D:/x')",[212032]
"('Description.java', 'org.junit.runner.Description', 'methodAndClassNamePatternGroupOrDefault', '([\\s\\S]*)\\((.*)\\)', 'resolvePreviousBranch(org.eclipse.jgit.lib.ReflogResolveTest)')","[64280, 64408]"
"('Description.java', 'org.junit.runner.Description', 'methodAndClassNamePatternGroupOrDefault', '([\\s\\S]*)\\((.*)\\)', 'testRebaseWithUnstagedMasterChangeBaseCommit(org.eclipse.jgit.api.RebaseCommandTest)')","[131810, 133316]"
"('Description.java', 'org.junit.runner.Description', 'methodAndClassNamePatternGroupOrDefault', '([\\s\\S]*)\\((.*)\\)', 'testIdenticalEdit(org.eclipse.jgit.notes.DefaultNoteMergerTest)')","[260660, 260788]"
"('URIish.java', 'org.eclipse.jgit.transport.URIish', '<init>', '^([a-z][a-z0-9+-]+)://(?:(?:([^/:@]+)(?::([^\\\\/]+))?@)?((?:[^\\\\/:]+)|(?:\\[[0-9a-f:]+\\]))(?::(\\d+))?((?:/~(?:[^\\\\/]+))?[\\\\/]))?(.+)?$', 'ssh+git://l usr\\example.com:wtf@example.com:1234/D:\\x')",[197511]
"('Description.java', 'org.junit.runner.Description', 'methodAndClassNamePatternGroupOrDefault', '([\\s\\S]*)\\((.*)\\)', 'shouldWorkInNormalCase(org.eclipse.jgit.lib.BranchTrackingStatusTest)')","[54062, 54126]"
"('URIish.java', 'org.eclipse.jgit.transport.URIish', '<init>', '^(file):([\\\\/](?![\\\\/])((?:[A-Za-z]:)?[\\\\/]?(?:(?:[^\\\\/]+[\\\\/]+)*[^\\\\/]+[\\\\/]*)))$', 'ssh+git://me@[::1]:1234/D:\\x')",[211158]
"('URIish.java', 'org.eclipse.jgit.transport.URIish', '<init>', '^([a-z][a-z0-9+-]+)://(?:(?:([^/:@]+)(?::([^\\\\/]+))?@)?((?:[^\\\\/:]+)|(?:\\[[0-9a-f:]+\\]))(?::(\\d+))?((?:/~(?:[^\\\\/]+))?[\\\\/]))?(.+)?$', 'ssh+git://me:wtf@example.com:1234//')",[195479]
"('FastIgnoreRule.java', 'org.eclipse.jgit.ignore.FastIgnoreRule', 'isMatch', '[a\\]]', 'a')",[102825]
"('Description.java', 'org.junit.runner.Description', 'methodAndClassNamePatternGroupOrDefault', '([\\s\\S]*)\\((.*)\\)', 'testGraphGroupCase0(org.eclipse.jgit.fnmatch.FileNameMatcherTest)')","[41944, 45228]"
"('Description.java', 'org.junit.runner.Description', 'methodAndClassNamePatternGroupOrDefault', '([\\s\\S]*)\\((.*)\\)', 'testFailureF2(org.eclipse.jgit.api.ApplyCommandTest)')","[163756, 163993]"
"('URIish.java', 'org.eclipse.jgit.transport.URIish', '<init>', '^(?:([^/:@]+)(?::([^\\\\/]+))?@)?([^\\\\/:]{2,}):([\\\\/](?:(?:[^\\\\/]+[\\\\/]+)*[^\\\\/]+[\\\\/]*))$', '//.git')",[251661]
"('Description.java', 'org.junit.runner.Description', 'methodAndClassNamePatternGroupOrDefault', '([\\s\\S]*)\\((.*)\\)', 'testSimpleRules[OldRule? false](org.eclipse.jgit.ignore.FastIgnoreRuleTest)')","[76989, 77746]"
"('Description.java', 'org.junit.runner.Description', 'methodAndClassNamePatternGroupOrDefault', '([\\s\\S]*)\\((.*)\\)', 'testError_DisconnectedHunk(org.eclipse.jgit.patch.PatchErrorTest)')","[1000, 1237]"
"('Description.java', 'org.junit.runner.Description', 'methodAndClassNamePatternGroupOrDefault', '([\\s\\S]*)\\((.*)\\)', 'testManySolutionsCase0(org.eclipse.jgit.fnmatch.FileNameMatcherTest)')","[43540, 46900]"
"('Description.java', 'org.junit.runner.Description', 'methodAndClassNamePatternGroupOrDefault', '([\\s\\S]*)\\((.*)\\)', 'testFailsMethodsOnBackgroundThread(org.eclipse.jgit.lib.ThreadSafeProgressMonitorTest)')","[68373, 68439]"
"('FastIgnoreRule.java', 'org.eclipse.jgit.ignore.FastIgnoreRule', 'isMatch', '.*\\.st.', 'anothertest.stg')","[104369, 104531, 105626, 105761]"
"('Description.java', 'org.junit.runner.Description', 'methodAndClassNamePatternGroupOrDefault', '([\\s\\S]*)\\((.*)\\)', 'testNoMatches(org.eclipse.jgit.util.RawSubStringPatternTest)')","[28640, 28728]"
"('Description.java', 'org.junit.runner.Description', 'methodAndClassNamePatternGroupOrDefault', '([\\s\\S]*)\\((.*)\\)', 'testFormatWithConflictsWithFooterlikeLineInBody(org.eclipse.jgit.merge.MergeMessageFormatterTest)')","[16056, 16372]"
"('URIish.java', 'org.eclipse.jgit.transport.URIish', '<init>', '^(?:([^/:@]+)(?::([^\\\\/]+))?@)?((?:[^\\\\/:]+)|(?:\\[[0-9a-f:]+\\])):((?:(?:/~(?:[^\\\\/]+))[\\\\/])?(?:(?:[^\\\\/]+[\\\\/]+)*[^\\\\/]+[\\\\/]*))$', '/tmp/jgit_test_5912311065364399188_tmp/tmp_6780050081060399522')","[151477, 151612, 151760, 151910]"
"('Description.java', 'org.junit.runner.Description', 'methodAndClassNamePatternGroupOrDefault', '([\\s\\S]*)\\((.*)\\)', 'testOnlyOption_f1_11_e(org.eclipse.jgit.api.CommitOnlyTest)')","[135886, 137977]"
"('Description.java', 'org.junit.runner.Description', 'methodAndClassNamePatternGroupOrDefault', '([\\s\\S]*)\\((.*)\\)', 'testWorkdirIsParentDir_CreateRepositoryFromDotGitGitDir(org.eclipse.jgit.internal.storage.file.RepositorySetupWorkDirTest)')","[113859, 114112]"
"('Description.java', 'org.junit.runner.Description', 'methodAndClassNamePatternGroupOrDefault', '([\\s\\S]*)\\((.*)\\)', 'testExactRename_ManyRenames(org.eclipse.jgit.diff.RenameDetectorTest)')","[4309, 4856]"
"('URIish.java', 'org.eclipse.jgit.transport.URIish', '<init>', '^(file):([\\\\/](?![\\\\/])((?:[A-Za-z]:)?[\\\\/]?(?:(?:[^\\\\/]+[\\\\/]+)*[^\\\\/]+[\\\\/]*)))$', 'ssh+git://l usr\\example.com@[::1]:80/D:\\x')",[212446]
"('Description.java', 'org.junit.runner.Description', 'methodAndClassNamePatternGroupOrDefault', '([\\s\\S]*)\\((.*)\\)', 'testOnlyOption_f1_12_f2_14_e(org.eclipse.jgit.api.CommitOnlyTest)')","[135571, 137647]"
"('URIish.java', 'org.eclipse.jgit.transport.URIish', '<init>', '^([a-z][a-z0-9+-]+)://(?:(?:([^/:@]+)(?::([^\\\\/]+))?@)?((?:[^\\\\/:]+)|(?:\\[[0-9a-f:]+\\]))(?::(\\d+))?((?:/~(?:[^\\\\/]+))?[\\\\/]))?(.+)?$', 'http://me:wtf@example.com:1234/D:\\x')",[199719]
"('Description.java', 'org.junit.runner.Description', 'methodAndClassNamePatternGroupOrDefault', '([\\s\\S]*)\\((.*)\\)', 'testReadBoolean_YesNo2(org.eclipse.jgit.lib.ConfigTest)')","[69537, 70258]"
"('URIish.java', 'org.eclipse.jgit.transport.URIish', '<init>', '^([a-z][a-z0-9+-]+)://(?:(?:([^/:@]+)(?::([^\\\\/]+))?@)?((?:[^\\\\/:]+)|(?:\\[[0-9a-f:]+\\]))(?::(\\d+))?((?:/~(?:[^\\\\/]+))?[\\\\/]))?(.+)?$', 'ssh://l usr\\example.com:wtf@1.2.3.4:80/D:\\x')",[193961]
"('Description.java', 'org.junit.runner.Description', 'methodAndClassNamePatternGroupOrDefault', '([\\s\\S]*)\\((.*)\\)', 'testWrongParams(org.eclipse.jgit.api.CommitAndLogCommandTest)')","[155017, 155230]"
"('URIish.java', 'org.eclipse.jgit.transport.URIish', '<init>', '^(file):([\\\\/](?![\\\\/])((?:[A-Za-z]:)?[\\\\/]?(?:(?:[^\\\\/]+[\\\\/]+)*[^\\\\/]+[\\\\/]*)))$', 'ssh://me@[::1]:80//')",[207892]
"('Description.java', 'org.junit.runner.Description', 'methodAndClassNamePatternGroupOrDefault', '([\\s\\S]*)\\((.*)\\)', 'org.eclipse.jgit.merge.SquashMessageFormatterTest')","[14955, 15021]"
"('Description.java', 'org.junit.runner.Description', 'methodAndClassNamePatternGroupOrDefault', '([\\s\\S]*)\\((.*)\\)', 'testAlphaGroupCase1[OldRule? false](org.eclipse.jgit.ignore.IgnoreRuleSpecialCasesTest)')","[85882, 92987]"
"('Description.java', 'org.junit.runner.Description', 'methodAndClassNamePatternGroupOrDefault', '([\\s\\S]*)\\((.*)\\)', 'testPunctGroupCase0[OldRule? false](org.eclipse.jgit.ignore.IgnoreRuleSpecialCasesTest)')","[86733, 93838]"
"('Description.java', 'org.junit.runner.Description', 'methodAndClassNamePatternGroupOrDefault', '([\\s\\S]*)\\((.*)\\)', 'testVerySimpleStarCase2[OldRule? true](org.eclipse.jgit.ignore.IgnoreRuleSpecialCasesTest)')","[91101, 98185]"
"('FastIgnoreRule.java', 'org.eclipse.jgit.ignore.FastIgnoreRule', 'isMatch', 'a[b\\-]', 'a-')",[101419]
"('Description.java', 'org.junit.runner.Description', 'methodAndClassNamePatternGroupOrDefault', '([\\s\\S]*)\\((.*)\\)', 'testAddAdd(org.eclipse.jgit.notes.DefaultNoteMergerTest)')","[260744, 260876]"
"('Description.java', 'org.junit.runner.Description', 'methodAndClassNamePatternGroupOrDefault', '([\\s\\S]*)\\((.*)\\)', 'testStopOnConflictAndAbortWithDetachedHEAD(org.eclipse.jgit.api.RebaseCommandTest)')","[132230, 133756]"
"('Description.java', 'org.junit.runner.Description', 'methodAndClassNamePatternGroupOrDefault', '([\\s\\S]*)\\((.*)\\)', 'testGetWithSlashDotGitHumanishName(org.eclipse.jgit.transport.URIishTest)')","[188422, 189798]"
"('URIish.java', 'org.eclipse.jgit.transport.URIish', '<init>', '^([a-z][a-z0-9+-]+)://(?:(?:([^/:@]+)(?::([^\\\\/]+))?@)?((?:[^\\\\/:]+)|(?:\\[[0-9a-f:]+\\]))(?::(\\d+))?((?:/~(?:[^\\\\/]+))?[\\\\/]))?(.+)?$', 'http://l usr\\example.com@example.com:1234/D:\\x')",[214861]
"('Description.java', 'org.junit.runner.Description', 'methodAndClassNamePatternGroupOrDefault', '([\\s\\S]*)\\((.*)\\)', 'test30_stripWorkDir(org.eclipse.jgit.internal.storage.file.T0003_BasicTest)')","[116399, 116927]"
"('ChangeIdUtil.java', 'org.eclipse.jgit.util.ChangeIdUtil', 'indexOfChangeId', '(^Change-Id: *I[a-f0-9]{40}$)', 'fix-a-widget: this thing')",[36673]
"('URIish.java', 'org.eclipse.jgit.transport.URIish', '<init>', '^([a-z][a-z0-9+-]+)://(?:(?:([^/:@]+)(?::([^\\\\/]+))?@)?((?:[^\\\\/:]+)|(?:\\[[0-9a-f:]+\\]))(?::(\\d+))?((?:/~(?:[^\\\\/]+))?[\\\\/]))?(.+)?$', 'https://l usr\\example.com:wtf@[::1]:1234/D:\\x')",[205661]
"('URIish.java', 'org.eclipse.jgit.transport.URIish', '<init>', '^(?:([^/:@]+)(?::([^\\\\/]+))?@)?((?:[^\\\\/:]+)|(?:\\[[0-9a-f:]+\\])):((?:(?:/~(?:[^\\\\/]+))[\\\\/])?(?:(?:[^\\\\/]+[\\\\/]+)*[^\\\\/]+[\\\\/]*))$', '../../foo/bar')","[250143, 250258]"
"('Description.java', 'org.junit.runner.Description', 'methodAndClassNamePatternGroupOrDefault', '([\\s\\S]*)\\((.*)\\)', 'testInvalidTreeNameIsNotMacHFSGitOtherPlatform(org.eclipse.jgit.lib.ObjectCheckerTest)')","[48353, 50834]"
"('Description.java', 'org.junit.runner.Description', 'methodAndClassNamePatternGroupOrDefault', '([\\s\\S]*)\\((.*)\\)', 'testSet(org.eclipse.jgit.util.RefListTest)')","[19886, 20374]"
"('URIish.java', 'org.eclipse.jgit.transport.URIish', '<init>', '^([a-z][a-z0-9+-]+)://(?:(?:([^/:@]+)(?::([^\\\\/]+))?@)?((?:[^\\\\/:]+)|(?:\\[[0-9a-f:]+\\]))(?::(\\d+))?((?:/~(?:[^\\\\/]+))?[\\\\/]))?(.+)?$', 'http://l usr\\example.com@[::1]:80/D:/x')",[215735]
"('URIish.java', 'org.eclipse.jgit.transport.URIish', '<init>', '^([a-z][a-z0-9+-]+)://(?:(?:([^/:@]+)(?::([^\\\\/]+))?@)?((?:[^\\\\/:]+)|(?:\\[[0-9a-f:]+\\]))(?::(\\d+))?((?:/~(?:[^\\\\/]+))?[\\\\/]))?(.+)?$', 'ssh+git://l usr\\example.com@1.2.3.4:80/D:\\x')",[212101]
"('Description.java', 'org.junit.runner.Description', 'methodAndClassNamePatternGroupOrDefault', '([\\s\\S]*)\\((.*)\\)', 'checkUntrackedFolderIsNotAConflict(org.eclipse.jgit.merge.ResolveMergerTest)')","[12759, 13082]"
"('Description.java', 'org.junit.runner.Description', 'methodAndClassNamePatternGroupOrDefault', '([\\s\\S]*)\\((.*)\\)', 'testAddExistingSingleFileInSubDir(org.eclipse.jgit.api.AddCommandTest)')","[164537, 164964]"
"('AttributesRule.java', 'org.eclipse.jgit.attributes.AttributesRule', 'isMatch', '.r[a-c]', 'era')",[76832]
"('URIish.java', 'org.eclipse.jgit.transport.URIish', '<init>', '^(file):([\\\\/](?![\\\\/])((?:[A-Za-z]:)?[\\\\/]?(?:(?:[^\\\\/]+[\\\\/]+)*[^\\\\/]+[\\\\/]*)))$', 'ssh://lusr\\example:wtf@1.2.3.4:80/D:/x')",[194996]
"('Description.java', 'org.junit.runner.Description', 'methodAndClassNamePatternGroupOrDefault', '([\\s\\S]*)\\((.*)\\)', 'testMaxObjectSizeDeltaResultSize(org.eclipse.jgit.transport.PackParserTest)')","[218486, 218749]"
"('URIish.java', 'org.eclipse.jgit.transport.URIish', '<init>', '^(file):([\\\\/](?![\\\\/])((?:[A-Za-z]:)?[\\\\/]?(?:(?:[^\\\\/]+[\\\\/]+)*[^\\\\/]+[\\\\/]*)))$', 'ssh+git://[::1]/D:\\x')","[238229, 238413, 239333, 239517, 240437, 240621]"
"('Description.java', 'org.junit.runner.Description', 'methodAndClassNamePatternGroupOrDefault', '([\\s\\S]*)\\((.*)\\)', 'testReadUserConfigWithInvalidCharactersStripped(org.eclipse.jgit.lib.ConfigTest)')","[69957, 70698]"
"('Description.java', 'org.junit.runner.Description', 'methodAndClassNamePatternGroupOrDefault', '([\\s\\S]*)\\((.*)\\)', 'testInitWithExplicitGitDir(org.eclipse.jgit.api.InitCommandTest)')","[156693, 156888]"
"('Description.java', 'org.junit.runner.Description', 'methodAndClassNamePatternGroupOrDefault', '([\\s\\S]*)\\((.*)\\)', 'testReadStringRaw1(org.eclipse.jgit.transport.PacketLineInTest)')","[184227, 184753]"
"('URIish.java', 'org.eclipse.jgit.transport.URIish', '<init>', '^(file):([\\\\/](?![\\\\/])((?:[A-Za-z]:)?[\\\\/]?(?:(?:[^\\\\/]+[\\\\/]+)*[^\\\\/]+[\\\\/]*)))$', '/tmp/jgit_test_4286677760507975988_tmp/tmp_6334190847139878105')","[147470, 147595, 147803]"
"('Description.java', 'org.junit.runner.Description', 'methodAndClassNamePatternGroupOrDefault', '([\\s\\S]*)\\((.*)\\)', 'testVerySimpleGroupCase1[OldRule? true](org.eclipse.jgit.ignore.IgnoreRuleSpecialCasesTest)')","[91676, 98760]"
"('Description.java', 'org.junit.runner.Description', 'methodAndClassNamePatternGroupOrDefault', '([\\s\\S]*)\\((.*)\\)', 'testModifyNL1(org.eclipse.jgit.api.ApplyCommandTest)')","[163651, 163883]"
"('URIish.java', 'org.eclipse.jgit.transport.URIish', '<init>', '^(file):([\\\\/](?![\\\\/])((?:[A-Za-z]:)?[\\\\/]?(?:(?:[^\\\\/]+[\\\\/]+)*[^\\\\/]+[\\\\/]*)))$', 'https://l usr\\example.com@example.com:1234//')",[218035]
"('Description.java', 'org.junit.runner.Description', 'methodAndClassNamePatternGroupOrDefault', '([\\s\\S]*)\\((.*)\\)', 'testOneAgainstTwoConflictingModifications(org.eclipse.jgit.merge.MergeAlgorithmTest)')","[12060, 12362]"
"('Description.java', 'org.junit.runner.Description', 'methodAndClassNamePatternGroupOrDefault', '([\\s\\S]*)\\((.*)\\)', 'failingDeleteOfDirectoryWithUntrackedContent(org.eclipse.jgit.merge.ResolveMergerTest)')","[12679, 13038]"
"('URIish.java', 'org.eclipse.jgit.transport.URIish', '<init>', '^([a-z][a-z0-9+-]+)://(?:(?:([^/:@]+)(?::([^\\\\/]+))?@)?((?:[^\\\\/:]+)|(?:\\[[0-9a-f:]+\\]))(?::(\\d+))?((?:/~(?:[^\\\\/]+))?[\\\\/]))?(.+)?$', 'https://lusr\\example@1.2.3.4:80/D:\\x')",[220404]
"('Description.java', 'org.junit.runner.Description', 'methodAndClassNamePatternGroupOrDefault', '([\\s\\S]*)\\((.*)\\)', 'testInCoreLimit_SwitchOnCopy(org.eclipse.jgit.util.TemporaryBufferTest)')","[26470, 26766]"
"('Description.java', 'org.junit.runner.Description', 'methodAndClassNamePatternGroupOrDefault', '([\\s\\S]*)\\((.*)\\)', 'testNotEmpty_NoPrefix(org.eclipse.jgit.util.RefMapTest)')","[20892, 21357]"
"('Description.java', 'org.junit.runner.Description', 'methodAndClassNamePatternGroupOrDefault', '([\\s\\S]*)\\((.*)\\)', 'org.eclipse.jgit.api.RmCommandTest')","[157073, 157182]"
"('Description.java', 'org.junit.runner.Description', 'methodAndClassNamePatternGroupOrDefault', '([\\s\\S]*)\\((.*)\\)', 'testTimeout_skip_Success(org.eclipse.jgit.util.io.TimeoutInputStreamTest)')","[24162, 24338]"
"('Description.java', 'org.junit.runner.Description', 'methodAndClassNamePatternGroupOrDefault', '([\\s\\S]*)\\((.*)\\)', 'testGetRefs_SkipsLockFiles(org.eclipse.jgit.internal.storage.file.RefDirectoryTest)')","[111559, 112769]"
"('URIish.java', 'org.eclipse.jgit.transport.URIish', '<init>', '^(file):([\\\\/](?![\\\\/])((?:[A-Za-z]:)?[\\\\/]?(?:(?:[^\\\\/]+[\\\\/]+)*[^\\\\/]+[\\\\/]*)))$', 'in-memory://')","[185620, 185797, 185979, 186156, 186208]"
"('Description.java', 'org.junit.runner.Description', 'methodAndClassNamePatternGroupOrDefault', '([\\s\\S]*)\\((.*)\\)', 'testSpecialGroupCase7(org.eclipse.jgit.fnmatch.FileNameMatcherTest)')","[41503, 44766]"
"('Description.java', 'org.junit.runner.Description', 'methodAndClassNamePatternGroupOrDefault', '([\\s\\S]*)\\((.*)\\)', 'commitOnlyShouldCommitUnmergedPathAndNotAffectOthers(org.eclipse.jgit.api.CommitCommandTest)')","[123063, 123275]"
"('URIish.java', 'org.eclipse.jgit.transport.URIish', '<init>', '^(file):([\\\\/](?![\\\\/])((?:[A-Za-z]:)?[\\\\/]?(?:(?:[^\\\\/]+[\\\\/]+)*[^\\\\/]+[\\\\/]*)))$', 'ssh://lusr\\example@example.com:1234//abc')",[209226]
"('Description.java', 'org.junit.runner.Description', 'methodAndClassNamePatternGroupOrDefault', '([\\s\\S]*)\\((.*)\\)', 'testParse_ShortLineOnlyEmbeddedLF(org.eclipse.jgit.revwalk.RevTagParseTest)')","[179730, 180142]"
"('Description.java', 'org.junit.runner.Description', 'methodAndClassNamePatternGroupOrDefault', '([\\s\\S]*)\\((.*)\\)', 'unstashNoHead(org.eclipse.jgit.api.StashApplyCommandTest)')","[142498, 143049]"
"('Description.java', 'org.junit.runner.Description', 'methodAndClassNamePatternGroupOrDefault', '([\\s\\S]*)\\((.*)\\)', 'testWrite_SmallBlocks1(org.eclipse.jgit.transport.SideBandOutputStreamTest)')","[251871, 252107]"
"('Description.java', 'org.junit.runner.Description', 'methodAndClassNamePatternGroupOrDefault', '([\\s\\S]*)\\((.*)\\)', 'testXDigitGroupCase7[OldRule? true](org.eclipse.jgit.ignore.IgnoreRuleSpecialCasesTest)')","[91285, 98369]"
"('URIish.java', 'org.eclipse.jgit.transport.URIish', '<init>', '^(file):([\\\\/](?![\\\\/])((?:[A-Za-z]:)?[\\\\/]?(?:(?:[^\\\\/]+[\\\\/]+)*[^\\\\/]+[\\\\/]*)))$', 'ssh://lusr\\example@example.com:1234/D:/x')",[209272]
"('Description.java', 'org.junit.runner.Description', 'methodAndClassNamePatternGroupOrDefault', '([\\s\\S]*)\\((.*)\\)', 'addSubmoduleWithExistingSubmoduleDefined(org.eclipse.jgit.submodule.SubmoduleAddTest)')","[17859, 18029]"
"('Description.java', 'org.junit.runner.Description', 'methodAndClassNamePatternGroupOrDefault', '([\\s\\S]*)\\((.*)\\)', 'testTagging(org.eclipse.jgit.api.TagCommandTest)')","[157448, 157744]"
"('Description.java', 'org.junit.runner.Description', 'methodAndClassNamePatternGroupOrDefault', '([\\s\\S]*)\\((.*)\\)', 'testFetch(org.eclipse.jgit.api.FetchCommandTest)')","[124734, 124861]"
"('Description.java', 'org.junit.runner.Description', 'methodAndClassNamePatternGroupOrDefault', '([\\s\\S]*)\\((.*)\\)', 'testNotEmail(org.eclipse.jgit.revwalk.FooterLineTest)')","[173465, 173866]"
"('URIish.java', 'org.eclipse.jgit.transport.URIish', '<init>', '^([a-z][a-z0-9+-]+)://(?:(?:([^/:@]+)(?::([^\\\\/]+))?@)?((?:[^\\\\/:]+)|(?:\\[[0-9a-f:]+\\]))(?::(\\d+))?((?:/~(?:[^\\\\/]+))?[\\\\/]))?(.+)?$', 'ssh://me:wtf@[::1]:80/D:/x')",[193077]
"('Description.java', 'org.junit.runner.Description', 'methodAndClassNamePatternGroupOrDefault', '([\\s\\S]*)\\((.*)\\)', 'testRejectNulInPathSegment(org.eclipse.jgit.lib.ObjectCheckerTest)')","[49823, 52374]"
"('URIish.java', 'org.eclipse.jgit.transport.URIish', '<init>', '^(file):([\\\\/](?![\\\\/])((?:[A-Za-z]:)?[\\\\/]?(?:(?:[^\\\\/]+[\\\\/]+)*[^\\\\/]+[\\\\/]*)))$', 'file:/tmp/jgit_test_8359519696988264440_tmp/tmp_5084939587537640844/.git/')",[13608]
"('Description.java', 'org.junit.runner.Description', 'methodAndClassNamePatternGroupOrDefault', '([\\s\\S]*)\\((.*)\\)', 'testParse_explicit_encoded(org.eclipse.jgit.revwalk.RevTagParseTest)')","[179856, 180274]"
"('Description.java', 'org.junit.runner.Description', 'methodAndClassNamePatternGroupOrDefault', '([\\s\\S]*)\\((.*)\\)', 'invalidWhenWildcardAfterText(org.eclipse.jgit.transport.RefSpecTest)')","[186927, 187665]"
"('Description.java', 'org.junit.runner.Description', 'methodAndClassNamePatternGroupOrDefault', '([\\s\\S]*)\\((.*)\\)', 'workingDirectoryDeleteIndexEdit(org.eclipse.jgit.api.StashApplyCommandTest)')","[142687, 143247]"
"('URIish.java', 'org.eclipse.jgit.transport.URIish', 'getHumanishName', '^([\\\\/]?((?:[A-Za-z]:)?[\\\\/]?(?:(?:[^\\\\/]+[\\\\/]+)*[^\\\\/]+[\\\\/]*)))$', '/abc.git')",[247751]
"('Description.java', 'org.junit.runner.Description', 'methodAndClassNamePatternGroupOrDefault', '([\\s\\S]*)\\((.*)\\)', 'testStageState_mergeAndReset_bug(org.eclipse.jgit.lib.IndexDiffTest)')","[68748, 69089]"
"('Description.java', 'org.junit.runner.Description', 'methodAndClassNamePatternGroupOrDefault', '([\\s\\S]*)\\((.*)\\)', 'testBackup(org.eclipse.jgit.transport.RemoteConfigTest)')","[253611, 254179]"
"('Description.java', 'org.junit.runner.Description', 'methodAndClassNamePatternGroupOrDefault', '([\\s\\S]*)\\((.*)\\)', 'resolveWorkingDirectoryRelativeUrl(org.eclipse.jgit.submodule.SubmoduleInitTest)')","[19484, 19634]"
"('Description.java', 'org.junit.runner.Description', 'methodAndClassNamePatternGroupOrDefault', '([\\s\\S]*)\\((.*)\\)', 'testInvalidCommitInvalidTree1(org.eclipse.jgit.lib.ObjectCheckerTest)')","[48563, 51054]"
"('Description.java', 'org.junit.runner.Description', 'methodAndClassNamePatternGroupOrDefault', '([\\s\\S]*)\\((.*)\\)', 'testVerySimpleStarCase0[OldRule? false](org.eclipse.jgit.ignore.IgnoreRuleSpecialCasesTest)')","[87492, 94597]"
"('Description.java', 'org.junit.runner.Description', 'methodAndClassNamePatternGroupOrDefault', '([\\s\\S]*)\\((.*)\\)', 'testFormatYearsMonths(org.eclipse.jgit.util.RelativeDateFormatterTest)')","[31379, 31577]"
"('FastIgnoreRule.java', 'org.eclipse.jgit.ignore.FastIgnoreRule', 'isMatch', '[\\p{Punct}]', ' ')",[101159]
"('Description.java', 'org.junit.runner.Description', 'methodAndClassNamePatternGroupOrDefault', '([\\s\\S]*)\\((.*)\\)', 'testSplit[OldRule? false](org.eclipse.jgit.ignore.FastIgnoreRuleTest)')","[77081, 77838]"
"('Description.java', 'org.junit.runner.Description', 'methodAndClassNamePatternGroupOrDefault', '([\\s\\S]*)\\((.*)\\)', 'testStopOnConflictFileCreationAndDeletion(org.eclipse.jgit.api.RebaseCommandTest)')","[131264, 132744]"
"('Description.java', 'org.junit.runner.Description', 'methodAndClassNamePatternGroupOrDefault', '([\\s\\S]*)\\((.*)\\)', 'testResolvedNamesBranch(org.eclipse.jgit.lib.RefTest)')","[57785, 57979]"
"('Description.java', 'org.junit.runner.Description', 'methodAndClassNamePatternGroupOrDefault', '([\\s\\S]*)\\((.*)\\)', 'testCheckoutRemoteTrackingWithoutLocalBranch(org.eclipse.jgit.api.CheckoutCommandTest)')","[149556, 150097]"
"('Description.java', 'org.junit.runner.Description', 'methodAndClassNamePatternGroupOrDefault', '([\\s\\S]*)\\((.*)\\)', 'testInversedGroupCase0[OldRule? true](org.eclipse.jgit.ignore.IgnoreRuleSpecialCasesTest)')","[89514, 96598]"
"('Description.java', 'org.junit.runner.Description', 'methodAndClassNamePatternGroupOrDefault', '([\\s\\S]*)\\((.*)\\)', 'testDequote_LoneBackslash(org.eclipse.jgit.util.QuotedStringBourneStyleTest)')","[38394, 38608]"
"('Description.java', 'org.junit.runner.Description', 'methodAndClassNamePatternGroupOrDefault', '([\\s\\S]*)\\((.*)\\)', 'testParseAllFields(org.eclipse.jgit.revwalk.RevTagParseTest)')","[179625, 180032]"
"('Description.java', 'org.junit.runner.Description', 'methodAndClassNamePatternGroupOrDefault', '([\\s\\S]*)\\((.*)\\)', 'testGetBitmapWithThreeXor(org.eclipse.jgit.internal.storage.file.StoredBitmapTest)')","[109968, 110033]"
"('Description.java', 'org.junit.runner.Description', 'methodAndClassNamePatternGroupOrDefault', '([\\s\\S]*)\\((.*)\\)', 'testTwoRangesInOneGroupCase0(org.eclipse.jgit.fnmatch.FileNameMatcherTest)')","[44296, 47692]"
"('URIish.java', 'org.eclipse.jgit.transport.URIish', '<init>', '^([a-z][a-z0-9+-]+)://(?:(?:([^/:@]+)(?::([^\\\\/]+))?@)?((?:[^\\\\/:]+)|(?:\\[[0-9a-f:]+\\]))(?::(\\d+))?((?:/~(?:[^\\\\/]+))?[\\\\/]))?(.+)?$', 'file:///tmp/jgit_test_3236687163374977183_tmp/tmp_995430085484609221/testCloneRepositoryWithNestedSubmodules1/.git/')","[161270, 161873]"
"('URIish.java', 'org.eclipse.jgit.transport.URIish', '<init>', '^(file):([\\\\/](?![\\\\/])((?:[A-Za-z]:)?[\\\\/]?(?:(?:[^\\\\/]+[\\\\/]+)*[^\\\\/]+[\\\\/]*)))$', 'ssh+git://lusr\\example:wtf@example.com:80//abc')",[198684]
"('Description.java', 'org.junit.runner.Description', 'methodAndClassNamePatternGroupOrDefault', '([\\s\\S]*)\\((.*)\\)', 'testGetBitmapWithoutXor(org.eclipse.jgit.internal.storage.file.StoredBitmapTest)')","[109947, 110011]"
"('Description.java', 'org.junit.runner.Description', 'methodAndClassNamePatternGroupOrDefault', '([\\s\\S]*)\\((.*)\\)', 'testFormatDays(org.eclipse.jgit.util.RelativeDateFormatterTest)')","[31232, 31423]"
"('Description.java', 'org.junit.runner.Description', 'methodAndClassNamePatternGroupOrDefault', '([\\s\\S]*)\\((.*)\\)', 'repositoryWithSubmodule(org.eclipse.jgit.submodule.SubmoduleSyncTest)')","[19078, 19142]"
"('Description.java', 'org.junit.runner.Description', 'methodAndClassNamePatternGroupOrDefault', '([\\s\\S]*)\\((.*)\\)', 'testRenameRemoteTrackingBranch(org.eclipse.jgit.api.BranchCommandTest)')","[128821, 129147]"
"('Description.java', 'org.junit.runner.Description', 'methodAndClassNamePatternGroupOrDefault', '([\\s\\S]*)\\((.*)\\)', 'testFileModeChangeAndContentChangeConflict(org.eclipse.jgit.lib.DirCacheCheckoutTest)')","[61293, 62285]"
"('ChangeIdUtil.java', 'org.eclipse.jgit.util.ChangeIdUtil', 'indexOfChangeId', '(^Change-Id: *I[a-f0-9]{40}$)', 'with text withour break after subject line')",[33985]
"('Description.java', 'org.junit.runner.Description', 'methodAndClassNamePatternGroupOrDefault', '([\\s\\S]*)\\((.*)\\)', 'shortWithDots(org.eclipse.jgit.util.GitDateParserTest)')","[21855, 22129]"
"('Description.java', 'org.junit.runner.Description', 'methodAndClassNamePatternGroupOrDefault', '([\\s\\S]*)\\((.*)\\)', 'testEscapedBracket1[OldRule? false](org.eclipse.jgit.ignore.IgnoreRuleSpecialCasesTest)')","[88159, 95264]"
"('Description.java', 'org.junit.runner.Description', 'methodAndClassNamePatternGroupOrDefault', '([\\s\\S]*)\\((.*)\\)', 'testFileProtocol(org.eclipse.jgit.transport.URIishTest)')","[188317, 189688]"
"('URIish.java', 'org.eclipse.jgit.transport.URIish', '<init>', '^([a-z][a-z0-9+-]+)://(?:(?:([^/:@]+)(?::([^\\\\/]+))?@)?((?:[^\\\\/:]+)|(?:\\[[0-9a-f:]+\\]))(?::(\\d+))?((?:/~(?:[^\\\\/]+))?[\\\\/]))?(.+)?$', 'https://l usr\\example.com:wtf@example.com:80/D:/x')",[205063]
"('URIish.java', 'org.eclipse.jgit.transport.URIish', '<init>', '^(file):([\\\\/](?![\\\\/])((?:[A-Za-z]:)?[\\\\/]?(?:(?:[^\\\\/]+[\\\\/]+)*[^\\\\/]+[\\\\/]*)))$', 'ssh://me:wtf@1.2.3.4:80//')",[192594]
"('URIish.java', 'org.eclipse.jgit.transport.URIish', '<init>', '^(?:([^/:@]+)(?::([^\\\\/]+))?@)?([^\\\\/:]{2,}):([\\\\/](?:(?:[^\\\\/]+[\\\\/]+)*[^\\\\/]+[\\\\/]*))$', '/tmp/jgit_test_4869566695306036567_tmp/tmp_8360922162679768520')","[152066, 152206, 152367]"
"('Description.java', 'org.junit.runner.Description', 'methodAndClassNamePatternGroupOrDefault', '([\\s\\S]*)\\((.*)\\)', 'testRebaseInteractiveSingleFixup(org.eclipse.jgit.api.RebaseCommandTest)')","[131075, 132546]"
"('URIish.java', 'org.eclipse.jgit.transport.URIish', '<init>', '^([a-z][a-z0-9+-]+)://(?:(?:([^/:@]+)(?::([^\\\\/]+))?@)?((?:[^\\\\/:]+)|(?:\\[[0-9a-f:]+\\]))(?::(\\d+))?((?:/~(?:[^\\\\/]+))?[\\\\/]))?(.+)?$', 'file:///tmp/jgit_test_7543284266175518769_tmp/tmp_2576430147724684526/.git/')","[125145, 125203]"
"('Description.java', 'org.junit.runner.Description', 'methodAndClassNamePatternGroupOrDefault', '([\\s\\S]*)\\((.*)\\)', 'testTwoGroupsCase2(org.eclipse.jgit.fnmatch.FileNameMatcherTest)')","[42742, 46064]"
"('Description.java', 'org.junit.runner.Description', 'methodAndClassNamePatternGroupOrDefault', '([\\s\\S]*)\\((.*)\\)', 'testInvalidCommitNoTree4(org.eclipse.jgit.lib.ObjectCheckerTest)')","[50327, 52902]"
"('Description.java', 'org.junit.runner.Description', 'methodAndClassNamePatternGroupOrDefault', '([\\s\\S]*)\\((.*)\\)', 'testMaliciousGitPathEndDotUnixOk(org.eclipse.jgit.lib.DirCacheCheckoutMaliciousPathTest)')","[66613, 67503]"
"('URIish.java', 'org.eclipse.jgit.transport.URIish', '<init>', '^(file):([\\\\/](?![\\\\/])((?:[A-Za-z]:)?[\\\\/]?(?:(?:[^\\\\/]+[\\\\/]+)*[^\\\\/]+[\\\\/]*)))$', 'ssh+git://l usr\\example.com:wtf@[::1]:1234/D:/x')",[198178]
"('URIish.java', 'org.eclipse.jgit.transport.URIish', '<init>', '^([a-z][a-z0-9+-]+)://(?:(?:([^/:@]+)(?::([^\\\\/]+))?@)?((?:[^\\\\/:]+)|(?:\\[[0-9a-f:]+\\]))(?::(\\d+))?((?:/~(?:[^\\\\/]+))?[\\\\/]))?(.+)?$', 'http://l usr\\example.com:wtf@example.com:1234//')",[200685]
"('Description.java', 'org.junit.runner.Description', 'methodAndClassNamePatternGroupOrDefault', '([\\s\\S]*)\\((.*)\\)', 'testGetSet(org.eclipse.jgit.transport.URIishTest)')","[189073, 190480]"
"('Description.java', 'org.junit.runner.Description', 'methodAndClassNamePatternGroupOrDefault', '([\\s\\S]*)\\((.*)\\)', 'testFillToCommit(org.eclipse.jgit.revwalk.RevCommitListTest)')","[176810, 176964]"
"('Description.java', 'org.junit.runner.Description', 'methodAndClassNamePatternGroupOrDefault', '([\\s\\S]*)\\((.*)\\)', 'testOneEntry_Seek1IsEOF(org.eclipse.jgit.treewalk.CanonicalTreeParserTest)')","[261462, 261787]"
"('Description.java', 'org.junit.runner.Description', 'methodAndClassNamePatternGroupOrDefault', '([\\s\\S]*)\\((.*)\\)', 'resolveOneLevelHigherRelativeUrl(org.eclipse.jgit.submodule.SubmoduleInitTest)')","[19526, 19678]"
"('ChangeIdUtil.java', 'org.eclipse.jgit.util.ChangeIdUtil', 'indexOfFirstFooterLine', '(^[a-zA-Z0-9-]+:(?!//).*$)', 'ChangeId: I123456789123456789123456789123456789')","[16732, 16862]"
"('Description.java', 'org.junit.runner.Description', 'methodAndClassNamePatternGroupOrDefault', '([\\s\\S]*)\\((.*)\\)', 'testVerySimpleStarCase2(org.eclipse.jgit.fnmatch.FileNameMatcherTest)')","[43918, 47296]"
"('Description.java', 'org.junit.runner.Description', 'methodAndClassNamePatternGroupOrDefault', '([\\s\\S]*)\\((.*)\\)', 'invalidWhenWildcardBeforeTextAtEnd(org.eclipse.jgit.transport.RefSpecTest)')","[186444, 187159]"
"('URIish.java', 'org.eclipse.jgit.transport.URIish', '<init>', '^(file):([\\\\/](?![\\\\/])((?:[A-Za-z]:)?[\\\\/]?(?:(?:[^\\\\/]+[\\\\/]+)*[^\\\\/]+[\\\\/]*)))$', 'ssh://l usr\\example.com@example.com:1234/D:\\x')",[208214]
"('Description.java', 'org.junit.runner.Description', 'methodAndClassNamePatternGroupOrDefault', '([\\s\\S]*)\\((.*)\\)', 'testSpaceGroupCase4[OldRule? false](org.eclipse.jgit.ignore.IgnoreRuleSpecialCasesTest)')","[86135, 93240]"
"('Description.java', 'org.junit.runner.Description', 'methodAndClassNamePatternGroupOrDefault', '([\\s\\S]*)\\((.*)\\)', 'org.eclipse.jgit.treewalk.TreeWalkBasicDiffTest')","[267110, 267176]"
"('URIish.java', 'org.eclipse.jgit.transport.URIish', '<init>', '^(file):([\\\\/](?![\\\\/])((?:[A-Za-z]:)?[\\\\/]?(?:(?:[^\\\\/]+[\\\\/]+)*[^\\\\/]+[\\\\/]*)))$', 'example.com:some/p%20ath')","[250419, 250488]"
"('Description.java', 'org.junit.runner.Description', 'methodAndClassNamePatternGroupOrDefault', '([\\s\\S]*)\\((.*)\\)', 'testVerySimpleGroupRangeCase5[OldRule? true](org.eclipse.jgit.ignore.IgnoreRuleSpecialCasesTest)')","[90181, 97265]"
"('Description.java', 'org.junit.runner.Description', 'methodAndClassNamePatternGroupOrDefault', '([\\s\\S]*)\\((.*)\\)', 'testCreateFileHeaderWithoutIndexLine(org.eclipse.jgit.diff.DiffFormatterTest)')","[2992, 3252]"
"('URIish.java', 'org.eclipse.jgit.transport.URIish', '<init>', '^(file):([\\\\/](?![\\\\/])((?:[A-Za-z]:)?[\\\\/]?(?:(?:[^\\\\/]+[\\\\/]+)*[^\\\\/]+[\\\\/]*)))$', 'ssh://lusr\\example:wtf@1.2.3.4:1234/D:\\x')",[194858]
"('URIish.java', 'org.eclipse.jgit.transport.URIish', '<init>', '^(file):([\\\\/](?![\\\\/])((?:[A-Za-z]:)?[\\\\/]?(?:(?:[^\\\\/]+[\\\\/]+)*[^\\\\/]+[\\\\/]*)))$', 'http://lusr\\example@[::1]:80/D:\\x')",[216862]
"('Description.java', 'org.junit.runner.Description', 'methodAndClassNamePatternGroupOrDefault', '([\\s\\S]*)\\((.*)\\)', 'testCleanDirsWithDryRun(org.eclipse.jgit.api.CleanCommandTest)')","[154699, 154851]"
"('URIish.java', 'org.eclipse.jgit.transport.URIish', '<init>', '^(file):([\\\\/](?![\\\\/])((?:[A-Za-z]:)?[\\\\/]?(?:(?:[^\\\\/]+[\\\\/]+)*[^\\\\/]+[\\\\/]*)))$', 'https://lusr\\example@1.2.3.4/D:/x')","[233399, 233583]"
"('Description.java', 'org.junit.runner.Description', 'methodAndClassNamePatternGroupOrDefault', '([\\s\\S]*)\\((.*)\\)', 'testLowerGroupCase5(org.eclipse.jgit.fnmatch.FileNameMatcherTest)')","[42238, 45536]"
"('Description.java', 'org.junit.runner.Description', 'methodAndClassNamePatternGroupOrDefault', '([\\s\\S]*)\\((.*)\\)', 'testPackRepoWithCorruptReflog(org.eclipse.jgit.internal.storage.file.GcReflogTest)')","[112849, 112934]"
"('Description.java', 'org.junit.runner.Description', 'methodAndClassNamePatternGroupOrDefault', '([\\s\\S]*)\\((.*)\\)', 'testExecutableRetention(org.eclipse.jgit.api.AddCommandTest)')","[164642, 165074]"
"('Description.java', 'org.junit.runner.Description', 'methodAndClassNamePatternGroupOrDefault', '([\\s\\S]*)\\((.*)\\)', 'testFileKeyOpenExisting(org.eclipse.jgit.lib.RepositoryCacheTest)')","[60389, 60521]"
"('QuotedString.java', 'org.eclipse.jgit.util.QuotedString$BourneUserPathStyle', 'quote', '^~[A-Za-z0-9_-]+$', 'a')","[29329, 29354]"
"('URIish.java', 'org.eclipse.jgit.transport.URIish', '<init>', '^(file):([\\\\/](?![\\\\/])((?:[A-Za-z]:)?[\\\\/]?(?:(?:[^\\\\/]+[\\\\/]+)*[^\\\\/]+[\\\\/]*)))$', 'ssh+git://me@1.2.3.4:1234/D:/x')",[210744]
"('Description.java', 'org.junit.runner.Description', 'methodAndClassNamePatternGroupOrDefault', '([\\s\\S]*)\\((.*)\\)', 'testNegateAllExceptJavaInSrc(org.eclipse.jgit.ignore.IgnoreNodeTest)')","[108208, 108510]"
"('URIish.java', 'org.eclipse.jgit.transport.URIish', '<init>', '^([a-z][a-z0-9+-]+)://(?:(?:([^/:@]+)(?::([^\\\\/]+))?@)?((?:[^\\\\/:]+)|(?:\\[[0-9a-f:]+\\]))(?::(\\d+))?((?:/~(?:[^\\\\/]+))?[\\\\/]))?(.+)?$', 'ssh://example.com/some/p ath')","[250902, 250948]"
"('Description.java', 'org.junit.runner.Description', 'methodAndClassNamePatternGroupOrDefault', '([\\s\\S]*)\\((.*)\\)', 'org.eclipse.jgit.treewalk.NameConflictTreeWalkTest')","[262967, 263205]"
"('URIish.java', 'org.eclipse.jgit.transport.URIish', '<init>', '^(file):([\\\\/](?![\\\\/])((?:[A-Za-z]:)?[\\\\/]?(?:(?:[^\\\\/]+[\\\\/]+)*[^\\\\/]+[\\\\/]*)))$', 'file:///tmp/jgit_test_1453594300143160598_tmp/tmp_2358754623373159383/.git/')",[14109]
"('Description.java', 'org.junit.runner.Description', 'methodAndClassNamePatternGroupOrDefault', '([\\s\\S]*)\\((.*)\\)', 'testInvalidCommitInvalidAuthor5(org.eclipse.jgit.lib.ObjectCheckerTest)')","[49403, 51934]"
"('ChangeIdUtil.java', 'org.eclipse.jgit.util.ChangeIdUtil', 'indexOfFirstFooterLine', '(^[a-zA-Z0-9-]+:(?!//).*$)', 'ftp://example.com/ fixes this')",[36382]
"('Description.java', 'org.junit.runner.Description', 'methodAndClassNamePatternGroupOrDefault', '([\\s\\S]*)\\((.*)\\)', 'testAtEOF(org.eclipse.jgit.treewalk.EmptyTreeIteratorTest)')","[260956, 261083]"
"('URIish.java', 'org.eclipse.jgit.transport.URIish', '<init>', '^([\\\\/]?((?:[A-Za-z]:)?[\\\\/]?(?:(?:[^\\\\/]+[\\\\/]+)*[^\\\\/]+[\\\\/]*)))$', '/abc.git/')",[248142]
"('Description.java', 'org.junit.runner.Description', 'methodAndClassNamePatternGroupOrDefault', '([\\s\\S]*)\\((.*)\\)', 'testReset(org.eclipse.jgit.fnmatch.FileNameMatcherTest)')","[42112, 45404]"
"('URIish.java', 'org.eclipse.jgit.transport.URIish', '<init>', '^([a-z][a-z0-9+-]+)://(?:(?:([^/:@]+)(?::([^\\\\/]+))?@)?((?:[^\\\\/:]+)|(?:\\[[0-9a-f:]+\\]))(?::(\\d+))?((?:/~(?:[^\\\\/]+))?[\\\\/]))?(.+)?$', 'ssh://l usr\\example.com:wtf@1.2.3.4:80/D:/x')",[193915]
"('Description.java', 'org.junit.runner.Description', 'methodAndClassNamePatternGroupOrDefault', '([\\s\\S]*)\\((.*)\\)', 'testPruneNone(org.eclipse.jgit.internal.storage.file.GcReflogTest)')","[112870, 112956]"
"('URIish.java', 'org.eclipse.jgit.transport.URIish', '<init>', '^(file):([\\\\/](?![\\\\/])((?:[A-Za-z]:)?[\\\\/]?(?:(?:[^\\\\/]+[\\\\/]+)*[^\\\\/]+[\\\\/]*)))$', 'file:///tmp/jgit_test_6721186325767818022_tmp/tmp_8758045609552187131/.git/')",[58242]
"('URIish.java', 'org.eclipse.jgit.transport.URIish', '<init>', '^([a-z][a-z0-9+-]+)://(?:(?:([^/:@]+)(?::([^\\\\/]+))?@)?((?:[^\\\\/:]+)|(?:\\[[0-9a-f:]+\\]))(?::(\\d+))?((?:/~(?:[^\\\\/]+))?[\\\\/]))?(.+)?$', 'https://example.com//abc')","[244048, 244232, 245152, 245336, 246256, 246440]"
"('URIish.java', 'org.eclipse.jgit.transport.URIish', '<init>', '^(file):([\\\\/](?![\\\\/])((?:[A-Za-z]:)?[\\\\/]?(?:(?:[^\\\\/]+[\\\\/]+)*[^\\\\/]+[\\\\/]*)))$', 'file:///tmp/jgit_test_7373006530583846880_tmp/tmp_668844217307704980')","[166622, 166679]"
"('URIish.java', 'org.eclipse.jgit.transport.URIish', '<init>', '^(file):([\\\\/](?![\\\\/])((?:[A-Za-z]:)?[\\\\/]?(?:(?:[^\\\\/]+[\\\\/]+)*[^\\\\/]+[\\\\/]*)))$', 'file:/tmp/jgit_test_1689849022431982095_tmp/tmp_2688667455844412783/.git/')","[163123, 163501]"
"('Description.java', 'org.junit.runner.Description', 'methodAndClassNamePatternGroupOrDefault', '([\\s\\S]*)\\((.*)\\)', 'testInvalidCommitInvalidAuthor4(org.eclipse.jgit.lib.ObjectCheckerTest)')","[49382, 51912]"
"('Description.java', 'org.junit.runner.Description', 'methodAndClassNamePatternGroupOrDefault', '([\\s\\S]*)\\((.*)\\)', 'testInvalidTreeDuplicateNames7(org.eclipse.jgit.lib.ObjectCheckerTest)')","[50747, 53342]"
"('URIish.java', 'org.eclipse.jgit.transport.URIish', '<init>', '^(file):([\\\\/](?![\\\\/])((?:[A-Za-z]:)?[\\\\/]?(?:(?:[^\\\\/]+[\\\\/]+)*[^\\\\/]+[\\\\/]*)))$', 'https://me@1.2.3.4:1234/D:\\x')",[217414]
"('URIish.java', 'org.eclipse.jgit.transport.URIish', '<init>', '^(file):([\\\\/](?![\\\\/])((?:[A-Za-z]:)?[\\\\/]?(?:(?:[^\\\\/]+[\\\\/]+)*[^\\\\/]+[\\\\/]*)))$', 'file:///tmp/jgit_test_5458912818544640927_tmp/tmp_828064902123961797/.git/')",[262789]
"('Description.java', 'org.junit.runner.Description', 'methodAndClassNamePatternGroupOrDefault', '([\\s\\S]*)\\((.*)\\)', 'testEscapedBracket2[OldRule? true](org.eclipse.jgit.ignore.IgnoreRuleSpecialCasesTest)')","[91745, 98829]"
"('Description.java', 'org.junit.runner.Description', 'methodAndClassNamePatternGroupOrDefault', '([\\s\\S]*)\\((.*)\\)', 'testEmptyFolderIgnored(org.eclipse.jgit.treewalk.filter.IndexDiffFilterTest)')","[264800, 265629]"
"('Description.java', 'org.junit.runner.Description', 'methodAndClassNamePatternGroupOrDefault', '([\\s\\S]*)\\((.*)\\)', 'testEmptyNegativeAttributeKey(org.eclipse.jgit.attributes.AttributeNodeTest)')","[73017, 73148]"
"('URIish.java', 'org.eclipse.jgit.transport.URIish', '<init>', '^([a-z][a-z0-9+-]+)://(?:(?:([^/:@]+)(?::([^\\\\/]+))?@)?((?:[^\\\\/:]+)|(?:\\[[0-9a-f:]+\\]))(?::(\\d+))?((?:/~(?:[^\\\\/]+))?[\\\\/]))?(.+)?$', 'ssh://me@[::1]:80/D:\\x')",[208053]
"('Description.java', 'org.junit.runner.Description', 'methodAndClassNamePatternGroupOrDefault', '([\\s\\S]*)\\((.*)\\)', 'testDelete(org.eclipse.jgit.api.TagCommandTest)')","[157658, 157964]"
"('Description.java', 'org.junit.runner.Description', 'methodAndClassNamePatternGroupOrDefault', '([\\s\\S]*)\\((.*)\\)', 'testDirectoryFileConflicts_12(org.eclipse.jgit.lib.DirCacheCheckoutTest)')","[61629, 62709]"
"('Description.java', 'org.junit.runner.Description', 'methodAndClassNamePatternGroupOrDefault', '([\\s\\S]*)\\((.*)\\)', 'org.eclipse.jgit.revwalk.LIFORevQueueTest')","[176389, 176987]"
"('URIish.java', 'org.eclipse.jgit.transport.URIish', '<init>', '^(file):([\\\\/](?![\\\\/])((?:[A-Za-z]:)?[\\\\/]?(?:(?:[^\\\\/]+[\\\\/]+)*[^\\\\/]+[\\\\/]*)))$', 'ssh://me:wtf@example.com:1234//abc')",[192088]
"('URIish.java', 'org.eclipse.jgit.transport.URIish', '<init>', '^(file):([\\\\/](?![\\\\/])((?:[A-Za-z]:)?[\\\\/]?(?:(?:[^\\\\/]+[\\\\/]+)*[^\\\\/]+[\\\\/]*)))$', 'http://[::1]//abc')","[241449, 241633, 242553, 242737, 243657, 243841]"
"('ChangeIdUtil.java', 'org.eclipse.jgit.util.ChangeIdUtil', 'indexOfFirstFooterLine', '(^[a-zA-Z0-9-]+:(?!//).*$)', ' ')","[35196, 37841]"
"('URIish.java', 'org.eclipse.jgit.transport.URIish', '<init>', '^([a-z][a-z0-9+-]+)://(?:(?:([^/:@]+)(?::([^\\\\/]+))?@)?((?:[^\\\\/:]+)|(?:\\[[0-9a-f:]+\\]))(?::(\\d+))?((?:/~(?:[^\\\\/]+))?[\\\\/]))?(.+)?$', 'D:/m y')","[250672, 250787]"
"('Description.java', 'org.junit.runner.Description', 'methodAndClassNamePatternGroupOrDefault', '([\\s\\S]*)\\((.*)\\)', 'unknownRepositoryFormatVersion(org.eclipse.jgit.internal.storage.file.FileRepositoryBuilderTest)')","[118660, 118813]"
"('URIish.java', 'org.eclipse.jgit.transport.URIish', '<init>', '^(file):([\\\\/](?![\\\\/])((?:[A-Za-z]:)?[\\\\/]?(?:(?:[^\\\\/]+[\\\\/]+)*[^\\\\/]+[\\\\/]*)))$', 'ssh+git://l usr\\example.com:wtf@[::1]:1234//abc')",[198132]
"('Description.java', 'org.junit.runner.Description', 'methodAndClassNamePatternGroupOrDefault', '([\\s\\S]*)\\((.*)\\)', 'testRemove(org.eclipse.jgit.api.RmCommandTest)')","[157115, 157159]"
"('Description.java', 'org.junit.runner.Description', 'methodAndClassNamePatternGroupOrDefault', '([\\s\\S]*)\\((.*)\\)', 'org.eclipse.jgit.revwalk.RevWalkResetTest')","[182176, 182242]"
"('Description.java', 'org.junit.runner.Description', 'methodAndClassNamePatternGroupOrDefault', '([\\s\\S]*)\\((.*)\\)', 'testInvalidTagInvalidTaggerHeader1(org.eclipse.jgit.lib.ObjectCheckerTest)')","[49571, 52110]"
"('Description.java', 'org.junit.runner.Description', 'methodAndClassNamePatternGroupOrDefault', '([\\s\\S]*)\\((.*)\\)', 'testDirCacheSavesObjects(org.eclipse.jgit.internal.storage.file.GcDirCacheSavesObjectsTest)')","[113101, 113145]"
"('Description.java', 'org.junit.runner.Description', 'methodAndClassNamePatternGroupOrDefault', '([\\s\\S]*)\\((.*)\\)', 'testBreakModify_RejoinIfUnpaired(org.eclipse.jgit.diff.RenameDetectorTest)')","[4330, 4878]"
"('URIish.java', 'org.eclipse.jgit.transport.URIish', '<init>', '^(file):([\\\\/](?![\\\\/])((?:[A-Za-z]:)?[\\\\/]?(?:(?:[^\\\\/]+[\\\\/]+)*[^\\\\/]+[\\\\/]*)))$', 'ssh://me:wtf@1.2.3.4:1234//')",[192410]
"('FastIgnoreRule.java', 'org.eclipse.jgit.ignore.FastIgnoreRule', 'isMatch', 'ne.', 'neb')","[105518, 106748]"
"('Description.java', 'org.junit.runner.Description', 'methodAndClassNamePatternGroupOrDefault', '([\\s\\S]*)\\((.*)\\)', 'testMergeTag(org.eclipse.jgit.api.MergeCommandTest)')","[126580, 127505]"
"('URIish.java', 'org.eclipse.jgit.transport.URIish', '<init>', '^([a-z][a-z0-9+-]+)://(?:(?:([^/:@]+)(?::([^\\\\/]+))?@)?((?:[^\\\\/:]+)|(?:\\[[0-9a-f:]+\\]))(?::(\\d+))?((?:/~(?:[^\\\\/]+))?[\\\\/]))?(.+)?$', 'file:///tmp/jgit_test_4587677862206615588_tmp/tmp_510146673856571520/.git/')",[125435]
"('Description.java', 'org.junit.runner.Description', 'methodAndClassNamePatternGroupOrDefault', '([\\s\\S]*)\\((.*)\\)', 'dropBoundaryStashedCommits(org.eclipse.jgit.api.StashDropCommandTest)')","[124436, 124610]"
"('Description.java', 'org.junit.runner.Description', 'methodAndClassNamePatternGroupOrDefault', '([\\s\\S]*)\\((.*)\\)', 'workingDirectoryDeleteIndexEdit(org.eclipse.jgit.api.StashCreateCommandTest)')","[155988, 156332]"
"('Description.java', 'org.junit.runner.Description', 'methodAndClassNamePatternGroupOrDefault', '([\\s\\S]*)\\((.*)\\)', 'org.eclipse.jgit.util.BlockListTest')","[27449, 27988]"
"('Description.java', 'org.junit.runner.Description', 'methodAndClassNamePatternGroupOrDefault', '([\\s\\S]*)\\((.*)\\)', 'testSpaceGroupCase4(org.eclipse.jgit.fnmatch.FileNameMatcherTest)')","[42658, 45976]"
"('Description.java', 'org.junit.runner.Description', 'methodAndClassNamePatternGroupOrDefault', '([\\s\\S]*)\\((.*)\\)', 'resolveSameLevelRelativeUrl(org.eclipse.jgit.submodule.SubmoduleInitTest)')","[19547, 19700]"
"('URIish.java', 'org.eclipse.jgit.transport.URIish', '<init>', '^([a-z][a-z0-9+-]+)://(?:(?:([^/:@]+)(?::([^\\\\/]+))?@)?((?:[^\\\\/:]+)|(?:\\[[0-9a-f:]+\\]))(?::(\\d+))?((?:/~(?:[^\\\\/]+))?[\\\\/]))?(.+)?$', 'ssh://me@example.com//abc')","[220864, 221048]"
"('Description.java', 'org.junit.runner.Description', 'methodAndClassNamePatternGroupOrDefault', '([\\s\\S]*)\\((.*)\\)', 'test2AlphaGroupsCase0(org.eclipse.jgit.fnmatch.FileNameMatcherTest)')","[42406, 45712]"
"('Description.java', 'org.junit.runner.Description', 'methodAndClassNamePatternGroupOrDefault', '([\\s\\S]*)\\((.*)\\)', 'testPut_CollapseResolved(org.eclipse.jgit.util.RefMapTest)')","[21207, 21687]"
"('Description.java', 'org.junit.runner.Description', 'methodAndClassNamePatternGroupOrDefault', '([\\s\\S]*)\\((.*)\\)', 'testInvalidTreeBadSorting3(org.eclipse.jgit.lib.ObjectCheckerTest)')","[48962, 51472]"
"('URIish.java', 'org.eclipse.jgit.transport.URIish', '<init>', '^(file):([\\\\/](?![\\\\/])((?:[A-Za-z]:)?[\\\\/]?(?:(?:[^\\\\/]+[\\\\/]+)*[^\\\\/]+[\\\\/]*)))$', 'http://l usr\\example.com:wtf@example.com:1234//')",[200662]
"('Description.java', 'org.junit.runner.Description', 'methodAndClassNamePatternGroupOrDefault', '([\\s\\S]*)\\((.*)\\)', 'testValidTreeNameIsDotGitDotDot(org.eclipse.jgit.lib.ObjectCheckerTest)')","[48647, 51142]"
"('URIish.java', 'org.eclipse.jgit.transport.URIish', '<init>', '^([a-z][a-z0-9+-]+)://(?:(?:([^/:@]+)(?::([^\\\\/]+))?@)?((?:[^\\\\/:]+)|(?:\\[[0-9a-f:]+\\]))(?::(\\d+))?((?:/~(?:[^\\\\/]+))?[\\\\/]))?(.+)?$', 'ssh://l usr\\example.com@[::1]:1234//abc')",[208881]
"('URIish.java', 'org.eclipse.jgit.transport.URIish', '<init>', '^(file):([\\\\/](?![\\\\/])((?:[A-Za-z]:)?[\\\\/]?(?:(?:[^\\\\/]+[\\\\/]+)*[^\\\\/]+[\\\\/]*)))$', 'ssh://me@1.2.3.4//')","[221163, 221347]"
"('Description.java', 'org.junit.runner.Description', 'methodAndClassNamePatternGroupOrDefault', '([\\s\\S]*)\\((.*)\\)', 'testNotEquals_DiffLength(org.eclipse.jgit.lib.AbbreviatedObjectIdTest)')","[55630, 56179]"
"('Description.java', 'org.junit.runner.Description', 'methodAndClassNamePatternGroupOrDefault', '([\\s\\S]*)\\((.*)\\)', 'testNoCommits(org.eclipse.jgit.revwalk.ObjectWalkTest)')","[177318, 177508]"
"('URIish.java', 'org.eclipse.jgit.transport.URIish', '<init>', '^([a-z][a-z0-9+-]+)://(?:(?:([^/:@]+)(?::([^\\\\/]+))?@)?((?:[^\\\\/:]+)|(?:\\[[0-9a-f:]+\\]))(?::(\\d+))?((?:/~(?:[^\\\\/]+))?[\\\\/]))?(.+)?$', 'ssh+git://l usr\\example.com@example.com//abc')","[225280, 225464]"
"('URIish.java', 'org.eclipse.jgit.transport.URIish', '<init>', '^(?:([^/:@]+)(?::([^\\\\/]+))?@)?((?:[^\\\\/:]+)|(?:\\[[0-9a-f:]+\\])):((?:(?:/~(?:[^\\\\/]+))[\\\\/])?(?:(?:[^\\\\/]+[\\\\/]+)*[^\\\\/]+[\\\\/]*))$', '/tmp/jgit_test_5968972444401405261_tmp/tmp_9143152110680163369')","[153317, 153452, 153609]"
"('Description.java', 'org.junit.runner.Description', 'methodAndClassNamePatternGroupOrDefault', '([\\s\\S]*)\\((.*)\\)', 'testFindObjectWrongOffset(org.eclipse.jgit.internal.storage.file.PackReverseIndexTest)')","[116126, 116211]"
"('Description.java', 'org.junit.runner.Description', 'methodAndClassNamePatternGroupOrDefault', '([\\s\\S]*)\\((.*)\\)', 'testPullFastForward(org.eclipse.jgit.api.PullCommandWithRebaseTest)')","[158610, 158716]"
"('Description.java', 'org.junit.runner.Description', 'methodAndClassNamePatternGroupOrDefault', '([\\s\\S]*)\\((.*)\\)', 'testTrivialTwoWay_rightDFconflict2(org.eclipse.jgit.merge.SimpleMergeTest)')","[15459, 15734]"
"('Description.java', 'org.junit.runner.Description', 'methodAndClassNamePatternGroupOrDefault', '([\\s\\S]*)\\((.*)\\)', 'testFileWithNoneUserHomeWithTilde(org.eclipse.jgit.transport.URIishTest)')","[188884, 190282]"
"('URIish.java', 'org.eclipse.jgit.transport.URIish', '<init>', '^(file):([\\\\/](?![\\\\/])((?:[A-Za-z]:)?[\\\\/]?(?:(?:[^\\\\/]+[\\\\/]+)*[^\\\\/]+[\\\\/]*)))$', 'http://l usr\\example.com:wtf@1.2.3.4:1234//abc')",[201076]
"('Description.java', 'org.junit.runner.Description', 'methodAndClassNamePatternGroupOrDefault', '([\\s\\S]*)\\((.*)\\)', 'RAW(org.eclipse.jgit.util.GitDateFormatterTest)')","[26087, 26281]"
"('URIish.java', 'org.eclipse.jgit.transport.URIish', '<init>', '^(file):([\\\\/](?![\\\\/])((?:[A-Za-z]:)?[\\\\/]?(?:(?:[^\\\\/]+[\\\\/]+)*[^\\\\/]+[\\\\/]*)))$', 'ssh://lusr\\example@example.com:80//')",[209364]
"('Description.java', 'org.junit.runner.Description', 'methodAndClassNamePatternGroupOrDefault', '([\\s\\S]*)\\((.*)\\)', 'testEntryTypeSet(org.eclipse.jgit.util.RefMapTest)')","[21249, 21731]"
"('URIish.java', 'org.eclipse.jgit.transport.URIish', '<init>', '^(file):([\\\\/](?![\\\\/])((?:[A-Za-z]:)?[\\\\/]?(?:(?:[^\\\\/]+[\\\\/]+)*[^\\\\/]+[\\\\/]*)))$', 'file:/tmp/jgit_test_1848736545095559723_tmp/tmp_623829252570834949/.git/')",[17694]
"('URIish.java', 'org.eclipse.jgit.transport.URIish', '<init>', '^([a-z][a-z0-9+-]+)://(?:(?:([^/:@]+)(?::([^\\\\/]+))?@)?((?:[^\\\\/:]+)|(?:\\[[0-9a-f:]+\\]))(?::(\\d+))?((?:/~(?:[^\\\\/]+))?[\\\\/]))?(.+)?$', 'ssh://me:wtf@[::1]:1234/D:/x')",[192893]
"('Description.java', 'org.junit.runner.Description', 'methodAndClassNamePatternGroupOrDefault', '([\\s\\S]*)\\((.*)\\)', 'testLowerGroupCase3[OldRule? true](org.eclipse.jgit.ignore.IgnoreRuleSpecialCasesTest)')","[89169, 96253]"
"('URIish.java', 'org.eclipse.jgit.transport.URIish', '<init>', '^(file):([\\\\/](?![\\\\/])((?:[A-Za-z]:)?[\\\\/]?(?:(?:[^\\\\/]+[\\\\/]+)*[^\\\\/]+[\\\\/]*)))$', 'ssh://me:wtf@1.2.3.4:1234/D:/x')",[192502]
"('Description.java', 'org.junit.runner.Description', 'methodAndClassNamePatternGroupOrDefault', '([\\s\\S]*)\\((.*)\\)', 'testOnlyOption_f1_1_c(org.eclipse.jgit.api.CommitOnlyTest)')","[134479, 136503]"
"('Description.java', 'org.junit.runner.Description', 'methodAndClassNamePatternGroupOrDefault', '([\\s\\S]*)\\((.*)\\)', 'testHardResetAfterSquashMerge(org.eclipse.jgit.api.ResetCommandTest)')","[167356, 167703]"
"('URIish.java', 'org.eclipse.jgit.transport.URIish', '<init>', '^([a-z][a-z0-9+-]+)://(?:(?:([^/:@]+)(?::([^\\\\/]+))?@)?((?:[^\\\\/:]+)|(?:\\[[0-9a-f:]+\\]))(?::(\\d+))?((?:/~(?:[^\\\\/]+))?[\\\\/]))?(.+)?$', 'https://lusr\\example:wtf@example.com:1234/D:/x')",[205983]
"('Description.java', 'org.junit.runner.Description', 'methodAndClassNamePatternGroupOrDefault', '([\\s\\S]*)\\((.*)\\)', 'testDigitGroupCase0[OldRule? true](org.eclipse.jgit.ignore.IgnoreRuleSpecialCasesTest)')","[89928, 97012]"
"('Description.java', 'org.junit.runner.Description', 'methodAndClassNamePatternGroupOrDefault', '([\\s\\S]*)\\((.*)\\)', 'testACommitWithSubjectBodyBugBrackersAndSob(org.eclipse.jgit.util.ChangeIdUtilTest)')","[31657, 32393]"
"('Description.java', 'org.junit.runner.Description', 'methodAndClassNamePatternGroupOrDefault', '([\\s\\S]*)\\((.*)\\)', 'testMatch_NotEqual(org.eclipse.jgit.util.RawParseUtils_MatchTest)')","[22618, 22703]"
"('Description.java', 'org.junit.runner.Description', 'methodAndClassNamePatternGroupOrDefault', '([\\s\\S]*)\\((.*)\\)', 'testStageNotPossibleWithBranch(org.eclipse.jgit.api.PathCheckoutCommandTest)')","[123902, 124185]"
"('URIish.java', 'org.eclipse.jgit.transport.URIish', '<init>', '^(file):([\\\\/](?![\\\\/])((?:[A-Za-z]:)?[\\\\/]?(?:(?:[^\\\\/]+[\\\\/]+)*[^\\\\/]+[\\\\/]*)))$', 'file:/tmp/jgitUnitTest2685234850891463909.tmp')",[191927]
"('Description.java', 'org.junit.runner.Description', 'methodAndClassNamePatternGroupOrDefault', '([\\s\\S]*)\\((.*)\\)', 'testCopyWholeObject_Length123(org.eclipse.jgit.internal.storage.pack.DeltaIndexTest)')","[108929, 109208]"
"('URIish.java', 'org.eclipse.jgit.transport.URIish', '<init>', '^(file):([\\\\/](?![\\\\/])((?:[A-Za-z]:)?[\\\\/]?(?:(?:[^\\\\/]+[\\\\/]+)*[^\\\\/]+[\\\\/]*)))$', 'https://me@example.com//abc')","[230777, 230961]"
"('FastIgnoreRule.java', 'org.eclipse.jgit.ignore.FastIgnoreRule', 'isMatch', '[\\[:]', '[')",[99623]
"('Description.java', 'org.junit.runner.Description', 'methodAndClassNamePatternGroupOrDefault', '([\\s\\S]*)\\((.*)\\)', 'testIndexingSmallObject(org.eclipse.jgit.diff.SimilarityIndexTest)')","[11491, 11666]"
"('Description.java', 'org.junit.runner.Description', 'methodAndClassNamePatternGroupOrDefault', '([\\s\\S]*)\\((.*)\\)', 'testIncompleteRangesInOneGroupCase2(org.eclipse.jgit.fnmatch.FileNameMatcherTest)')","[43393, 46746]"
"('Description.java', 'org.junit.runner.Description', 'methodAndClassNamePatternGroupOrDefault', '([\\s\\S]*)\\((.*)\\)', 'testAsteriskDotDoNotMatch[OldRule? false](org.eclipse.jgit.ignore.FastIgnoreRuleTest)')","[77035, 77792]"
"('Description.java', 'org.junit.runner.Description', 'methodAndClassNamePatternGroupOrDefault', '([\\s\\S]*)\\((.*)\\)', 'testInversedGroupCase2(org.eclipse.jgit.fnmatch.FileNameMatcherTest)')","[42532, 45844]"
"('Description.java', 'org.junit.runner.Description', 'methodAndClassNamePatternGroupOrDefault', '([\\s\\S]*)\\((.*)\\)', 'testTrivialTwoWay_leftDFconflict2(org.eclipse.jgit.merge.SimpleMergeTest)')","[15585, 15866]"
"('URIish.java', 'org.eclipse.jgit.transport.URIish', '<init>', '^([a-z][a-z0-9+-]+)://(?:(?:([^/:@]+)(?::([^\\\\/]+))?@)?((?:[^\\\\/:]+)|(?:\\[[0-9a-f:]+\\]))(?::(\\d+))?((?:/~(?:[^\\\\/]+))?[\\\\/]))?(.+)?$', 'ssh://lusr\\example@1.2.3.4//')","[223394, 223578]"
"('URIish.java', 'org.eclipse.jgit.transport.URIish', '<init>', '^(file):([\\\\/](?![\\\\/])((?:[A-Za-z]:)?[\\\\/]?(?:(?:[^\\\\/]+[\\\\/]+)*[^\\\\/]+[\\\\/]*)))$', 'http://l usr\\example.com@[::1]:80/D:/x')",[215712]
"('URIish.java', 'org.eclipse.jgit.transport.URIish', '<init>', '^([a-z][a-z0-9+-]+)://(?:(?:([^/:@]+)(?::([^\\\\/]+))?@)?((?:[^\\\\/:]+)|(?:\\[[0-9a-f:]+\\]))(?::(\\d+))?((?:/~(?:[^\\\\/]+))?[\\\\/]))?(.+)?$', 'ssh+git://l usr\\example.com@example.com/D:/x')","[225326, 225510]"
"('Description.java', 'org.junit.runner.Description', 'methodAndClassNamePatternGroupOrDefault', '([\\s\\S]*)\\((.*)\\)', 'org.eclipse.jgit.util.RefMapTest')","[20829, 21798]"
"('URIish.java', 'org.eclipse.jgit.transport.URIish', '<init>', '^(file):([\\\\/](?![\\\\/])((?:[A-Za-z]:)?[\\\\/]?(?:(?:[^\\\\/]+[\\\\/]+)*[^\\\\/]+[\\\\/]*)))$', 'ssh://l usr\\example.com@example.com/D:\\x')","[222037, 222221]"
"('Description.java', 'org.junit.runner.Description', 'methodAndClassNamePatternGroupOrDefault', '([\\s\\S]*)\\((.*)\\)', 'testOnlyOption_f1_7_b(org.eclipse.jgit.api.CommitOnlyTest)')","[135088, 137141]"
"('Description.java', 'org.junit.runner.Description', 'methodAndClassNamePatternGroupOrDefault', '([\\s\\S]*)\\((.*)\\)', 'testWhole_LargeObject(org.eclipse.jgit.internal.storage.file.PackFileTest)')","[122536, 122623]"
"('FastIgnoreRule.java', 'org.eclipse.jgit.ignore.FastIgnoreRule', 'isMatch', 'a.*a.*a', 'aaaa')",[101627]
"('Description.java', 'org.junit.runner.Description', 'methodAndClassNamePatternGroupOrDefault', '([\\s\\S]*)\\((.*)\\)', 'testHasChangeid(org.eclipse.jgit.util.ChangeIdUtilTest)')","[31909, 32657]"
"('Description.java', 'org.junit.runner.Description', 'methodAndClassNamePatternGroupOrDefault', '([\\s\\S]*)\\((.*)\\)', 'testInvalidTagNoObject6(org.eclipse.jgit.lib.ObjectCheckerTest)')","[49991, 52550]"
"('Description.java', 'org.junit.runner.Description', 'methodAndClassNamePatternGroupOrDefault', '([\\s\\S]*)\\((.*)\\)', 'testGitProtoWindowsPort(org.eclipse.jgit.transport.URIishTest)')","[188905, 190304]"
"('ChangeIdUtil.java', 'org.eclipse.jgit.util.ChangeIdUtil', 'indexOfChangeId', '(^Change-Id: *I[a-f0-9]{40}$)', 'Change-Id: I0000000000000000000000000000000000000000')",[155616]
"('Description.java', 'org.junit.runner.Description', 'methodAndClassNamePatternGroupOrDefault', '([\\s\\S]*)\\((.*)\\)', 'test004_lookupDeltifiedObject(org.eclipse.jgit.internal.storage.file.T0004_PackReaderTest)')","[110156, 110200]"
"('URIish.java', 'org.eclipse.jgit.transport.URIish', '<init>', '^(file):([\\\\/](?![\\\\/])((?:[A-Za-z]:)?[\\\\/]?(?:(?:[^\\\\/]+[\\\\/]+)*[^\\\\/]+[\\\\/]*)))$', 'https://l usr\\example.com@[::1]:1234/D:\\x')",[219461]
"('Description.java', 'org.junit.runner.Description', 'methodAndClassNamePatternGroupOrDefault', '([\\s\\S]*)\\((.*)\\)', 'testMarkSupported(org.eclipse.jgit.util.io.UnionInputStreamTest)')","[25266, 25479]"
"('URIish.java', 'org.eclipse.jgit.transport.URIish', '<init>', '^(file):([\\\\/](?![\\\\/])((?:[A-Za-z]:)?[\\\\/]?(?:(?:[^\\\\/]+[\\\\/]+)*[^\\\\/]+[\\\\/]*)))$', 'file:///tmp/jgit_test_1689849022431982095_tmp/tmp_2688667455844412783/.git/')","[163180, 163536]"
"('Description.java', 'org.junit.runner.Description', 'methodAndClassNamePatternGroupOrDefault', '([\\s\\S]*)\\((.*)\\)', 'testValidTreeSorting7(org.eclipse.jgit.lib.ObjectCheckerTest)')","[49151, 51670]"
"('ChangeIdUtil.java', 'org.eclipse.jgit.util.ChangeIdUtil', 'indexOfFirstFooterLine', '(^[a-zA-Z0-9-]+:(?!//).*$)', 'This reverts commit ca96c31f7d0a232920d6dfadc47945df09707490.')","[125951, 125978, 126032, 126059]"
"('Description.java', 'org.junit.runner.Description', 'methodAndClassNamePatternGroupOrDefault', '([\\s\\S]*)\\((.*)\\)', 'testParse_ShortLineOnlyEmbeddedLF(org.eclipse.jgit.revwalk.RevCommitParseTest)')","[182509, 182877]"
"('Description.java', 'org.junit.runner.Description', 'methodAndClassNamePatternGroupOrDefault', '([\\s\\S]*)\\((.*)\\)', 'testTwoRangesInOneGroupCase4(org.eclipse.jgit.fnmatch.FileNameMatcherTest)')","[44380, 47780]"
"('Description.java', 'org.junit.runner.Description', 'methodAndClassNamePatternGroupOrDefault', '([\\s\\S]*)\\((.*)\\)', 'commandWithNullPath(org.eclipse.jgit.submodule.SubmoduleAddTest)')","[17838, 18007]"
"('Description.java', 'org.junit.runner.Description', 'methodAndClassNamePatternGroupOrDefault', '([\\s\\S]*)\\((.*)\\)', 'testTwoRangesInOneGroupCase2[OldRule? true](org.eclipse.jgit.ignore.IgnoreRuleSpecialCasesTest)')","[91561, 98645]"
"('Description.java', 'org.junit.runner.Description', 'methodAndClassNamePatternGroupOrDefault', '([\\s\\S]*)\\((.*)\\)', 'testCleanDirsWithDryRunAndNoIgnore(org.eclipse.jgit.api.CleanCommandTest)')","[154720, 154873]"
"('URIish.java', 'org.eclipse.jgit.transport.URIish', '<init>', '^([a-z][a-z0-9+-]+)://(?:(?:([^/:@]+)(?::([^\\\\/]+))?@)?((?:[^\\\\/:]+)|(?:\\[[0-9a-f:]+\\]))(?::(\\d+))?((?:/~(?:[^\\\\/]+))?[\\\\/]))?(.+)?$', 'ssh+git://lusr\\example:wtf@1.2.3.4:80//')",[199029]
"('URIish.java', 'org.eclipse.jgit.transport.URIish', '<init>', '^([a-z][a-z0-9+-]+)://(?:(?:([^/:@]+)(?::([^\\\\/]+))?@)?((?:[^\\\\/:]+)|(?:\\[[0-9a-f:]+\\]))(?::(\\d+))?((?:/~(?:[^\\\\/]+))?[\\\\/]))?(.+)?$', 'ssh+git://lusr\\example@[::1]//abc')","[227120, 227304]"
"('Description.java', 'org.junit.runner.Description', 'methodAndClassNamePatternGroupOrDefault', '([\\s\\S]*)\\((.*)\\)', 'testInversedGroupCase3[OldRule? true](org.eclipse.jgit.ignore.IgnoreRuleSpecialCasesTest)')","[89583, 96667]"
"('URIish.java', 'org.eclipse.jgit.transport.URIish', '<init>', '^(file):([\\\\/](?![\\\\/])((?:[A-Za-z]:)?[\\\\/]?(?:(?:[^\\\\/]+[\\\\/]+)*[^\\\\/]+[\\\\/]*)))$', 'ssh+git://me:wtf@1.2.3.4:80/D:/x')",[196890]
"('Description.java', 'org.junit.runner.Description', 'methodAndClassNamePatternGroupOrDefault', '([\\s\\S]*)\\((.*)\\)', 'testSpaceGroupCase2(org.eclipse.jgit.fnmatch.FileNameMatcherTest)')","[42616, 45932]"
"('Description.java', 'org.junit.runner.Description', 'methodAndClassNamePatternGroupOrDefault', '([\\s\\S]*)\\((.*)\\)', 'testFanoutAndLeafWitConflict(org.eclipse.jgit.notes.NoteMapMergerTest)')","[259380, 259741]"
"('FastIgnoreRule.java', 'org.eclipse.jgit.ignore.FastIgnoreRule', 'isMatch', 'a.*c', 'abc')",[100613]
"('URIish.java', 'org.eclipse.jgit.transport.URIish', '<init>', '^(file):([\\\\/](?![\\\\/])((?:[A-Za-z]:)?[\\\\/]?(?:(?:[^\\\\/]+[\\\\/]+)*[^\\\\/]+[\\\\/]*)))$', 'ssh://me@[::1]:80//abc')",[207938]
"('Description.java', 'org.junit.runner.Description', 'methodAndClassNamePatternGroupOrDefault', '([\\s\\S]*)\\((.*)\\)', 'testInsertMinValue(org.eclipse.jgit.transport.LongMapTest)')","[183616, 183787]"
"('Description.java', 'org.junit.runner.Description', 'methodAndClassNamePatternGroupOrDefault', '([\\s\\S]*)\\((.*)\\)', 'org.eclipse.jgit.util.IntListTest')","[28024, 28520]"
"('Description.java', 'org.junit.runner.Description', 'methodAndClassNamePatternGroupOrDefault', '([\\s\\S]*)\\((.*)\\)', 'testOnlyOption_f1_6_f2_14_e(org.eclipse.jgit.api.CommitOnlyTest)')","[135676, 137757]"
"('Description.java', 'org.junit.runner.Description', 'methodAndClassNamePatternGroupOrDefault', '([\\s\\S]*)\\((.*)\\)', 'org.eclipse.jgit.api.PushCommandTest')","[140474, 144363]"
"('AttributesRule.java', 'org.eclipse.jgit.attributes.AttributesRule', 'isMatch', 'ne.', 'new.c')","[74932, 76076]"
"('Description.java', 'org.junit.runner.Description', 'methodAndClassNamePatternGroupOrDefault', '([\\s\\S]*)\\((.*)\\)', 'testUpdateRefNoChange(org.eclipse.jgit.internal.storage.file.RefUpdateTest)')","[119907, 120742]"
"('URIish.java', 'org.eclipse.jgit.transport.URIish', '<init>', '^(file):([\\\\/](?![\\\\/])((?:[A-Za-z]:)?[\\\\/]?(?:(?:[^\\\\/]+[\\\\/]+)*[^\\\\/]+[\\\\/]*)))$', 'ssh+git://lusr\\example:wtf@example.com:1234//abc')",[198500]
"('FastIgnoreRule.java', 'org.eclipse.jgit.ignore.FastIgnoreRule', 'isMatch', '.r[a-c]', 'grb')",[107290]
"('URIish.java', 'org.eclipse.jgit.transport.URIish', '<init>', '^([a-z][a-z0-9+-]+)://(?:(?:([^/:@]+)(?::([^\\\\/]+))?@)?((?:[^\\\\/:]+)|(?:\\[[0-9a-f:]+\\]))(?::(\\d+))?((?:/~(?:[^\\\\/]+))?[\\\\/]))?(.+)?$', 'ssh+git://example.com/some/p ath')","[248211, 248257]"
"('Description.java', 'org.junit.runner.Description', 'methodAndClassNamePatternGroupOrDefault', '([\\s\\S]*)\\((.*)\\)', 'testMergeWithMessageOption(org.eclipse.jgit.api.MergeCommandTest)')","[126433, 127351]"
"('Description.java', 'org.junit.runner.Description', 'methodAndClassNamePatternGroupOrDefault', '([\\s\\S]*)\\((.*)\\)', 'testVerySimpleGroupRangeCase3[OldRule? false](org.eclipse.jgit.ignore.IgnoreRuleSpecialCasesTest)')","[86572, 93677]"
"('URIish.java', 'org.eclipse.jgit.transport.URIish', '<init>', '^(file):([\\\\/](?![\\\\/])((?:[A-Za-z]:)?[\\\\/]?(?:(?:[^\\\\/]+[\\\\/]+)*[^\\\\/]+[\\\\/]*)))$', 'https://lusr\\example:wtf@example.com:1234//')",[205868]
"('URIish.java', 'org.eclipse.jgit.transport.URIish', '<init>', '^(file):([\\\\/](?![\\\\/])((?:[A-Za-z]:)?[\\\\/]?(?:(?:[^\\\\/]+[\\\\/]+)*[^\\\\/]+[\\\\/]*)))$', 'http://l usr\\example.com@example.com:1234//abc')",[214746]
"('Description.java', 'org.junit.runner.Description', 'methodAndClassNamePatternGroupOrDefault', '([\\s\\S]*)\\((.*)\\)', 'testScpStyleWithoutUserRelativePath(org.eclipse.jgit.transport.URIishTest)')","[188191, 189556]"
"('Description.java', 'org.junit.runner.Description', 'methodAndClassNamePatternGroupOrDefault', '([\\s\\S]*)\\((.*)\\)', 'testLimitedGetCachedBytesExceedsJavaLimits(org.eclipse.jgit.lib.ObjectLoaderTest)')","[71431, 71518]"
"('Description.java', 'org.junit.runner.Description', 'methodAndClassNamePatternGroupOrDefault', '([\\s\\S]*)\\((.*)\\)', 'getTrackingBranchShouldReturnNullWithoutMergeBranchForLocalBranch(org.eclipse.jgit.lib.BranchConfigTest)')","[54849, 55023]"
"('Description.java', 'org.junit.runner.Description', 'methodAndClassNamePatternGroupOrDefault', '([\\s\\S]*)\\((.*)\\)', 'testExceedsChainLength_DuringScanOfB(org.eclipse.jgit.diff.HistogramDiffTest)')","[6610, 7208]"
"('Description.java', 'org.junit.runner.Description', 'methodAndClassNamePatternGroupOrDefault', '([\\s\\S]*)\\((.*)\\)', 'testRebaseInteractiveEdit(org.eclipse.jgit.api.RebaseCommandTest)')","[131726, 133228]"
"('FastIgnoreRule.java', 'org.eclipse.jgit.ignore.FastIgnoreRule', 'isMatch', '.*\\.sta[0-5]', 'test.sta4')","[104666, 105896]"
"('URIish.java', 'org.eclipse.jgit.transport.URIish', '<init>', '^(file):([\\\\/](?![\\\\/])((?:[A-Za-z]:)?[\\\\/]?(?:(?:[^\\\\/]+[\\\\/]+)*[^\\\\/]+[\\\\/]*)))$', 'ssh://l usr\\example.com:wtf@1.2.3.4:80//abc')",[193846]
"('Description.java', 'org.junit.runner.Description', 'methodAndClassNamePatternGroupOrDefault', '([\\s\\S]*)\\((.*)\\)', 'testMissingPort(org.eclipse.jgit.transport.URIishTest)')","[188758, 190150]"
"('URIish.java', 'org.eclipse.jgit.transport.URIish', '<init>', '^([a-z][a-z0-9+-]+)://(?:(?:([^/:@]+)(?::([^\\\\/]+))?@)?((?:[^\\\\/:]+)|(?:\\[[0-9a-f:]+\\]))(?::(\\d+))?((?:/~(?:[^\\\\/]+))?[\\\\/]))?(.+)?$', 'ssh://l usr\\example.com@[::1]:1234/D:\\x')",[208973]
"('Description.java', 'org.junit.runner.Description', 'methodAndClassNamePatternGroupOrDefault', '([\\s\\S]*)\\((.*)\\)', 'testFileNameWildcards(org.eclipse.jgit.ignore.IgnoreMatcherTest)')","[102949, 103140]"
"('URIish.java', 'org.eclipse.jgit.transport.URIish', '<init>', '^(?:([^/:@]+)(?::([^\\\\/]+))?@)?((?:[^\\\\/:]+)|(?:\\[[0-9a-f:]+\\])):((?:(?:/~(?:[^\\\\/]+))[\\\\/])?(?:(?:[^\\\\/]+[\\\\/]+)*[^\\\\/]+[\\\\/]*))$', '/tmp/jgit_test_8267236767099531789_tmp/tmp_530234452973594559/.git')","[130433, 130575]"
"('Description.java', 'org.junit.runner.Description', 'methodAndClassNamePatternGroupOrDefault', '([\\s\\S]*)\\((.*)\\)', 'org.eclipse.jgit.merge.MergeAlgorithmTest')","[11892, 12517]"
"('URIish.java', 'org.eclipse.jgit.transport.URIish', '<init>', '^(file):([\\\\/](?![\\\\/])((?:[A-Za-z]:)?[\\\\/]?(?:(?:[^\\\\/]+[\\\\/]+)*[^\\\\/]+[\\\\/]*)))$', 'ssh://me@1.2.3.4:80/D:\\x')",[207662]
"('Description.java', 'org.junit.runner.Description', 'methodAndClassNamePatternGroupOrDefault', '([\\s\\S]*)\\((.*)\\)', 'testOnlyOption_f1_9_a(org.eclipse.jgit.api.CommitOnlyTest)')","[135277, 137339]"
"('URIish.java', 'org.eclipse.jgit.transport.URIish', '<init>', '^([a-z][a-z0-9+-]+)://(?:(?:([^/:@]+)(?::([^\\\\/]+))?@)?((?:[^\\\\/:]+)|(?:\\[[0-9a-f:]+\\]))(?::(\\d+))?((?:/~(?:[^\\\\/]+))?[\\\\/]))?(.+)?$', 'file:///tmp/jgit_test_8422413440265261651_tmp/tmp_7920018543723792281')","[139398, 139460, 139551]"
"('Description.java', 'org.junit.runner.Description', 'methodAndClassNamePatternGroupOrDefault', '([\\s\\S]*)\\((.*)\\)', 'testUnsupportedGroupCase01[OldRule? true](org.eclipse.jgit.ignore.IgnoreRuleSpecialCasesTest)')","[89491, 96575]"
"('URIish.java', 'org.eclipse.jgit.transport.URIish', '<init>', '^(file):([\\\\/](?![\\\\/])((?:[A-Za-z]:)?[\\\\/]?(?:(?:[^\\\\/]+[\\\\/]+)*[^\\\\/]+[\\\\/]*)))$', 'http://user:secret@pass@host.xy:80/some/path')","[251500, 251546]"
"('Description.java', 'org.junit.runner.Description', 'methodAndClassNamePatternGroupOrDefault', '([\\s\\S]*)\\((.*)\\)', 'testMultipleInvocations(org.eclipse.jgit.api.CommitAndLogCommandTest)')","[154975, 155186]"
"('URIish.java', 'org.eclipse.jgit.transport.URIish', '<init>', '^([a-z][a-z0-9+-]+)://(?:(?:([^/:@]+)(?::([^\\\\/]+))?@)?((?:[^\\\\/:]+)|(?:\\[[0-9a-f:]+\\]))(?::(\\d+))?((?:/~(?:[^\\\\/]+))?[\\\\/]))?(.+)?$', 'https://me@[::1]//')","[231490, 231674]"
"('Description.java', 'org.junit.runner.Description', 'methodAndClassNamePatternGroupOrDefault', '([\\s\\S]*)\\((.*)\\)', 'testLimitObjectSize_Length130InsertFails(org.eclipse.jgit.internal.storage.pack.DeltaIndexTest)')","[108908, 109186]"
"('Description.java', 'org.junit.runner.Description', 'methodAndClassNamePatternGroupOrDefault', '([\\s\\S]*)\\((.*)\\)', 'testSpecialGroupCase5[OldRule? false](org.eclipse.jgit.ignore.IgnoreRuleSpecialCasesTest)')","[84870, 91975]"
"('AttributesRule.java', 'org.eclipse.jgit.attributes.AttributesRule', 'isMatch', '.*\\.sta[0-5]', 'test.sta1')","[74193, 75337]"
"('URIish.java', 'org.eclipse.jgit.transport.URIish', '<init>', '^(file):([\\\\/](?![\\\\/])((?:[A-Za-z]:)?[\\\\/]?(?:(?:[^\\\\/]+[\\\\/]+)*[^\\\\/]+[\\\\/]*)))$', 'https://l usr\\example.com@example.com/D:/x')","[231927, 232111]"
"('URIish.java', 'org.eclipse.jgit.transport.URIish', '<init>', '^(file):([\\\\/](?![\\\\/])((?:[A-Za-z]:)?[\\\\/]?(?:(?:[^\\\\/]+[\\\\/]+)*[^\\\\/]+[\\\\/]*)))$', 'https://1.2.3.4/D:/x')","[244439, 244623, 245543, 245727, 246647, 246831]"
"('Description.java', 'org.junit.runner.Description', 'methodAndClassNamePatternGroupOrDefault', '([\\s\\S]*)\\((.*)\\)', 'testPullFastForwardWithBranchInSource(org.eclipse.jgit.api.PullCommandWithRebaseTest)')","[158673, 158782]"
"('Description.java', 'org.junit.runner.Description', 'methodAndClassNamePatternGroupOrDefault', '([\\s\\S]*)\\((.*)\\)', 'testPackCommitsAndLooseOneNoReflog(org.eclipse.jgit.internal.storage.file.GcReflogTest)')","[112912, 113000]"
"('Description.java', 'org.junit.runner.Description', 'methodAndClassNamePatternGroupOrDefault', '([\\s\\S]*)\\((.*)\\)', 'testExceedsChainLength_DuringScanOfA(org.eclipse.jgit.diff.HistogramDiffTest)')","[6589, 7186]"
"('Description.java', 'org.junit.runner.Description', 'methodAndClassNamePatternGroupOrDefault', '([\\s\\S]*)\\((.*)\\)', 'testDistance(org.eclipse.jgit.lib.RepositoryResolveTest)')","[71624, 72245]"
"('URIish.java', 'org.eclipse.jgit.transport.URIish', '<init>', '^(?:([^/:@]+)(?::([^\\\\/]+))?@)?((?:[^\\\\/:]+)|(?:\\[[0-9a-f:]+\\])):((?:(?:/~(?:[^\\\\/]+))[\\\\/])?(?:(?:[^\\\\/]+[\\\\/]+)*[^\\\\/]+[\\\\/]*))$', '/tmp/jgit_test_982072369712344218_tmp/tmp_4000253905304581205')","[152472, 152607, 152755]"
"('Description.java', 'org.junit.runner.Description', 'methodAndClassNamePatternGroupOrDefault', '([\\s\\S]*)\\((.*)\\)', 'testGitWithUserHome(org.eclipse.jgit.transport.URIishTest)')","[189344, 190612]"
"('Description.java', 'org.junit.runner.Description', 'methodAndClassNamePatternGroupOrDefault', '([\\s\\S]*)\\((.*)\\)', 'testQuestionmarkDoNotMatch[OldRule? true](org.eclipse.jgit.ignore.FastIgnoreRuleTest)')","[77631, 78367]"
"('Description.java', 'org.junit.runner.Description', 'methodAndClassNamePatternGroupOrDefault', '([\\s\\S]*)\\((.*)\\)', 'testLowerGroupCase1(org.eclipse.jgit.fnmatch.FileNameMatcherTest)')","[42154, 45448]"
"('URIish.java', 'org.eclipse.jgit.transport.URIish', '<init>', '^([a-z][a-z0-9+-]+)://(?:(?:([^/:@]+)(?::([^\\\\/]+))?@)?((?:[^\\\\/:]+)|(?:\\[[0-9a-f:]+\\]))(?::(\\d+))?((?:/~(?:[^\\\\/]+))?[\\\\/]))?(.+)?$', 'ssh+git://me:wtf@1.2.3.4:80//')",[196821]
"('Description.java', 'org.junit.runner.Description', 'methodAndClassNamePatternGroupOrDefault', '([\\s\\S]*)\\((.*)\\)', 'testMixedGroupCase9(org.eclipse.jgit.fnmatch.FileNameMatcherTest)')","[41902, 45184]"
"('Description.java', 'org.junit.runner.Description', 'methodAndClassNamePatternGroupOrDefault', '([\\s\\S]*)\\((.*)\\)', 'testEqualsIgnoreCase2(org.eclipse.jgit.util.StringUtilsTest)')","[27152, 27302]"
"('URIish.java', 'org.eclipse.jgit.transport.URIish', '<init>', '^(file):([\\\\/](?![\\\\/])((?:[A-Za-z]:)?[\\\\/]?(?:(?:[^\\\\/]+[\\\\/]+)*[^\\\\/]+[\\\\/]*)))$', 'http://l usr\\example.com:wtf@[::1]:1234/D:/x')",[201490]
"('Description.java', 'org.junit.runner.Description', 'methodAndClassNamePatternGroupOrDefault', '([\\s\\S]*)\\((.*)\\)', 'org.eclipse.jgit.internal.storage.file.LockFileTest')","[114413, 114479]"
"('URIish.java', 'org.eclipse.jgit.transport.URIish', '<init>', '^(file):([\\\\/](?![\\\\/])((?:[A-Za-z]:)?[\\\\/]?(?:(?:[^\\\\/]+[\\\\/]+)*[^\\\\/]+[\\\\/]*)))$', 'http://l usr\\example.com@example.com:1234//')",[214700]
"('Description.java', 'org.junit.runner.Description', 'methodAndClassNamePatternGroupOrDefault', '([\\s\\S]*)\\((.*)\\)', 'testVerySimpleGroupCase2(org.eclipse.jgit.fnmatch.FileNameMatcherTest)')","[44464, 47868]"
"('Description.java', 'org.junit.runner.Description', 'methodAndClassNamePatternGroupOrDefault', '([\\s\\S]*)\\((.*)\\)', 'testType_Replace(org.eclipse.jgit.diff.EditTest)')","[5926, 6267]"
"('URIish.java', 'org.eclipse.jgit.transport.URIish', '<init>', '^([a-z][a-z0-9+-]+)://(?:(?:([^/:@]+)(?::([^\\\\/]+))?@)?((?:[^\\\\/:]+)|(?:\\[[0-9a-f:]+\\]))(?::(\\d+))?((?:/~(?:[^\\\\/]+))?[\\\\/]))?(.+)?$', 'ssh://lusr\\example:wtf@1.2.3.4:1234/D:\\x')",[194881]
"('Description.java', 'org.junit.runner.Description', 'methodAndClassNamePatternGroupOrDefault', '([\\s\\S]*)\\((.*)\\)', 'testOnlyOption_f1_12_f2_14_d(org.eclipse.jgit.api.CommitOnlyTest)')","[135550, 137625]"
"('URIish.java', 'org.eclipse.jgit.transport.URIish', '<init>', '^(file):([\\\\/](?![\\\\/])((?:[A-Za-z]:)?[\\\\/]?(?:(?:[^\\\\/]+[\\\\/]+)*[^\\\\/]+[\\\\/]*)))$', 'ssh://lusr\\example:wtf@[::1]:1234/D:\\x')",[195226]
"('FastIgnoreRule.java', 'org.eclipse.jgit.ignore.FastIgnoreRule', 'isMatch', '[a]', 'b')","[80268, 80322, 80376, 80430, 80484, 80538, 80835, 80916]"
"('Description.java', 'org.junit.runner.Description', 'methodAndClassNamePatternGroupOrDefault', '([\\s\\S]*)\\((.*)\\)', 'org.eclipse.jgit.api.CherryPickCommandTest')","[168152, 169950]"
"('URIish.java', 'org.eclipse.jgit.transport.URIish', '<init>', '^(file):([\\\\/](?![\\\\/])((?:[A-Za-z]:)?[\\\\/]?(?:(?:[^\\\\/]+[\\\\/]+)*[^\\\\/]+[\\\\/]*)))$', 'ssh+git://l usr\\example.com:wtf@example.com:1234//')",[197350]
"('Description.java', 'org.junit.runner.Description', 'methodAndClassNamePatternGroupOrDefault', '([\\s\\S]*)\\((.*)\\)', 'testNewNamespaceConflictWithPackedPrefixNameExists(org.eclipse.jgit.internal.storage.file.RefUpdateTest)')","[119592, 120412]"
"('FastIgnoreRule.java', 'org.eclipse.jgit.ignore.FastIgnoreRule', 'isMatch', '[b-d]', 'b')",[100821]
"('URIish.java', 'org.eclipse.jgit.transport.URIish', '<init>', '^(file):([\\\\/](?![\\\\/])((?:[A-Za-z]:)?[\\\\/]?(?:(?:[^\\\\/]+[\\\\/]+)*[^\\\\/]+[\\\\/]*)))$', 'http://me@1.2.3.4:1234/D:/x')",[214056]
"('URIish.java', 'org.eclipse.jgit.transport.URIish', '<init>', '^(file):([\\\\/](?![\\\\/])((?:[A-Za-z]:)?[\\\\/]?(?:(?:[^\\\\/]+[\\\\/]+)*[^\\\\/]+[\\\\/]*)))$', 'file:///D:/m y')","[252676, 252722]"
"('URIish.java', 'org.eclipse.jgit.transport.URIish', '<init>', '^([a-z][a-z0-9+-]+)://(?:(?:([^/:@]+)(?::([^\\\\/]+))?@)?((?:[^\\\\/:]+)|(?:\\[[0-9a-f:]+\\]))(?::(\\d+))?((?:/~(?:[^\\\\/]+))?[\\\\/]))?(.+)?$', 'ssh+git://lusr\\example@1.2.3.4//abc')","[226752, 226936]"
"('URIish.java', 'org.eclipse.jgit.transport.URIish', '<init>', '^([a-z][a-z0-9+-]+)://(?:(?:([^/:@]+)(?::([^\\\\/]+))?@)?((?:[^\\\\/:]+)|(?:\\[[0-9a-f:]+\\]))(?::(\\d+))?((?:/~(?:[^\\\\/]+))?[\\\\/]))?(.+)?$', 'http://l usr\\example.com@[::1]:1234//')",[215459]
"('URIish.java', 'org.eclipse.jgit.transport.URIish', '<init>', '^(file):([\\\\/](?![\\\\/])((?:[A-Za-z]:)?[\\\\/]?(?:(?:[^\\\\/]+[\\\\/]+)*[^\\\\/]+[\\\\/]*)))$', 'http://l usr\\example.com:wtf@1.2.3.4:80//')",[201214]
"('Description.java', 'org.junit.runner.Description', 'methodAndClassNamePatternGroupOrDefault', '([\\s\\S]*)\\((.*)\\)', 'testPeelLooseTag(org.eclipse.jgit.internal.storage.file.RefDirectoryTest)')","[110656, 111823]"
"('Description.java', 'org.junit.runner.Description', 'methodAndClassNamePatternGroupOrDefault', '([\\s\\S]*)\\((.*)\\)', 'testValidEmptyTree(org.eclipse.jgit.lib.ObjectCheckerTest)')","[49676, 52220]"
"('Description.java', 'org.junit.runner.Description', 'methodAndClassNamePatternGroupOrDefault', '([\\s\\S]*)\\((.*)\\)', 'testQuote_Empty(org.eclipse.jgit.util.QuotedStringBourneStyleTest)')","[38499, 38718]"
"('Description.java', 'org.junit.runner.Description', 'methodAndClassNamePatternGroupOrDefault', '([\\s\\S]*)\\((.*)\\)', 'testParseGitDescribeOutput(org.eclipse.jgit.lib.RepositoryResolveTest)')","[71645, 72267]"
"('URIish.java', 'org.eclipse.jgit.transport.URIish', '<init>', '^(?:([^/:@]+)(?::([^\\\\/]+))?@)?([^\\\\/:]{2,}):([\\\\/](?:(?:[^\\\\/]+[\\\\/]+)*[^\\\\/]+[\\\\/]*))$', '/tmp/jgit_test_8538603759973152363_tmp/tmp_8885440780712787474')","[146876, 147016, 147236]"
"('Description.java', 'org.junit.runner.Description', 'methodAndClassNamePatternGroupOrDefault', '([\\s\\S]*)\\((.*)\\)', 'org.eclipse.jgit.revwalk.RevWalkCullTest')","[179269, 179421]"
"('URIish.java', 'org.eclipse.jgit.transport.URIish', '<init>', '^([a-z][a-z0-9+-]+)://(?:(?:([^/:@]+)(?::([^\\\\/]+))?@)?((?:[^\\\\/:]+)|(?:\\[[0-9a-f:]+\\]))(?::(\\d+))?((?:/~(?:[^\\\\/]+))?[\\\\/]))?(.+)?$', 'ssh://lusr\\example@1.2.3.4//abc')","[223440, 223624]"
"('Description.java', 'org.junit.runner.Description', 'methodAndClassNamePatternGroupOrDefault', '([\\s\\S]*)\\((.*)\\)', 'testClear(org.eclipse.jgit.lib.ObjectIdSubclassMapTest)')","[63899, 64047]"
"('Description.java', 'org.junit.runner.Description', 'methodAndClassNamePatternGroupOrDefault', '([\\s\\S]*)\\((.*)\\)', 'testCreateFileHeader_GitLink(org.eclipse.jgit.diff.DiffFormatterTest)')","[2929, 3186]"
"('URIish.java', 'org.eclipse.jgit.transport.URIish', '<init>', '^([a-z][a-z0-9+-]+)://(?:(?:([^/:@]+)(?::([^\\\\/]+))?@)?((?:[^\\\\/:]+)|(?:\\[[0-9a-f:]+\\]))(?::(\\d+))?((?:/~(?:[^\\\\/]+))?[\\\\/]))?(.+)?$', 'http://lusr\\example:wtf@1.2.3.4:1234//')",[202157]
"('Description.java', 'org.junit.runner.Description', 'methodAndClassNamePatternGroupOrDefault', '([\\s\\S]*)\\((.*)\\)', 'testXDigitGroupCase4[OldRule? true](org.eclipse.jgit.ignore.IgnoreRuleSpecialCasesTest)')","[91216, 98300]"
"('Description.java', 'org.junit.runner.Description', 'methodAndClassNamePatternGroupOrDefault', '([\\s\\S]*)\\((.*)\\)', 'testWriteEmptyLockEmpty_RealIndex(org.eclipse.jgit.dircache.DirCacheBasicTest)')","[171443, 171998]"
"('FastIgnoreRule.java', 'org.eclipse.jgit.ignore.FastIgnoreRule', 'isMatch', '.*\\.sta[0-5]', 'test.sta6')","[104855, 106085]"
"('Description.java', 'org.junit.runner.Description', 'methodAndClassNamePatternGroupOrDefault', '([\\s\\S]*)\\((.*)\\)', 'testEdit_NoUniqueMiddleSide_Insert2(org.eclipse.jgit.diff.HistogramDiffTest)')","[6694, 7322]"
"('FastIgnoreRule.java', 'org.eclipse.jgit.ignore.FastIgnoreRule', 'isMatch', '[[\\p{Print}\\p{javaDigit}\\p{javaLetter}]]', 'ö')",[101575]
"('URIish.java', 'org.eclipse.jgit.transport.URIish', '<init>', '^([a-z][a-z0-9+-]+)://(?:(?:([^/:@]+)(?::([^\\\\/]+))?@)?((?:[^\\\\/:]+)|(?:\\[[0-9a-f:]+\\]))(?::(\\d+))?((?:/~(?:[^\\\\/]+))?[\\\\/]))?(.+)?$', 'ssh://l usr\\example.com@1.2.3.4:1234/D:/x')",[208559]
"('URIish.java', 'org.eclipse.jgit.transport.URIish', '<init>', '^([a-z][a-z0-9+-]+)://(?:(?:([^/:@]+)(?::([^\\\\/]+))?@)?((?:[^\\\\/:]+)|(?:\\[[0-9a-f:]+\\]))(?::(\\d+))?((?:/~(?:[^\\\\/]+))?[\\\\/]))?(.+)?$', 'http://lusr\\example@example.com:80/D:\\x')",[216149]
"('URIish.java', 'org.eclipse.jgit.transport.URIish', '<init>', '^(file):([\\\\/](?![\\\\/])((?:[A-Za-z]:)?[\\\\/]?(?:(?:[^\\\\/]+[\\\\/]+)*[^\\\\/]+[\\\\/]*)))$', 'http://lusr\\example@example.com:1234/D:/x')",[215896]
"('Description.java', 'org.junit.runner.Description', 'methodAndClassNamePatternGroupOrDefault', '([\\s\\S]*)\\((.*)\\)', 'testDelta_SmallObjectChain(org.eclipse.jgit.internal.storage.file.PackFileTest)')","[122515, 122601]"
"('Description.java', 'org.junit.runner.Description', 'methodAndClassNamePatternGroupOrDefault', '([\\s\\S]*)\\((.*)\\)', 'testOnlyOption_f1_7_a(org.eclipse.jgit.api.CommitOnlyTest)')","[135067, 137119]"
"('URIish.java', 'org.eclipse.jgit.transport.URIish', '<init>', '^(file):([\\\\/](?![\\\\/])((?:[A-Za-z]:)?[\\\\/]?(?:(?:[^\\\\/]+[\\\\/]+)*[^\\\\/]+[\\\\/]*)))$', 'http://l usr\\example.com:wtf@1.2.3.4:80//abc')",[201260]
"('Description.java', 'org.junit.runner.Description', 'methodAndClassNamePatternGroupOrDefault', '([\\s\\S]*)\\((.*)\\)', 'testId(org.eclipse.jgit.revwalk.RevObjectTest)')","[178123, 178336]"
"('URIish.java', 'org.eclipse.jgit.transport.URIish', '<init>', '^([a-z][a-z0-9+-]+)://(?:(?:([^/:@]+)(?::([^\\\\/]+))?@)?((?:[^\\\\/:]+)|(?:\\[[0-9a-f:]+\\]))(?::(\\d+))?((?:/~(?:[^\\\\/]+))?[\\\\/]))?(.+)?$', '/abc/.git')",[249292]
"('Description.java', 'org.junit.runner.Description', 'methodAndClassNamePatternGroupOrDefault', '([\\s\\S]*)\\((.*)\\)', 'testOnlyOption_f1_7_d(org.eclipse.jgit.api.CommitOnlyTest)')","[135130, 137185]"
"('Description.java', 'org.junit.runner.Description', 'methodAndClassNamePatternGroupOrDefault', '([\\s\\S]*)\\((.*)\\)', 'testBasic(org.eclipse.jgit.attributes.AttributeNodeTest)')","[72954, 73082]"
"('Description.java', 'org.junit.runner.Description', 'methodAndClassNamePatternGroupOrDefault', '([\\s\\S]*)\\((.*)\\)', 'testHttpAuthScanResponse(org.eclipse.jgit.transport.HttpAuthTest)')","[193571, 193593]"
"('Description.java', 'org.junit.runner.Description', 'methodAndClassNamePatternGroupOrDefault', '([\\s\\S]*)\\((.*)\\)', 'testCreateFileHeader_Binary(org.eclipse.jgit.diff.DiffFormatterTest)')","[3055, 3516]"
"('URIish.java', 'org.eclipse.jgit.transport.URIish', '<init>', '^(file):([\\\\/](?![\\\\/])((?:[A-Za-z]:)?[\\\\/]?(?:(?:[^\\\\/]+[\\\\/]+)*[^\\\\/]+[\\\\/]*)))$', 'ssh+git://lusr\\example:wtf@[::1]:1234//')",[199190]
"('Description.java', 'org.junit.runner.Description', 'methodAndClassNamePatternGroupOrDefault', '([\\s\\S]*)\\((.*)\\)', 'testTwoLevelSubtree(org.eclipse.jgit.dircache.DirCacheTreeTest)')","[171692, 171822]"
"('Description.java', 'org.junit.runner.Description', 'methodAndClassNamePatternGroupOrDefault', '([\\s\\S]*)\\((.*)\\)', 'test007_manyFileLookup(org.eclipse.jgit.lib.T0002_TreeTest)')","[58570, 58870]"
"('Description.java', 'org.junit.runner.Description', 'methodAndClassNamePatternGroupOrDefault', '([\\s\\S]*)\\((.*)\\)', 'dropAll(org.eclipse.jgit.api.StashDropCommandTest)')","[124478, 124654]"
"('Description.java', 'org.junit.runner.Description', 'methodAndClassNamePatternGroupOrDefault', '([\\s\\S]*)\\((.*)\\)', 'shortFmt(org.eclipse.jgit.util.GitDateParserTest)')","[21918, 22195]"
"('URIish.java', 'org.eclipse.jgit.transport.URIish', '<init>', '^(file):([\\\\/](?![\\\\/])((?:[A-Za-z]:)?[\\\\/]?(?:(?:[^\\\\/]+[\\\\/]+)*[^\\\\/]+[\\\\/]*)))$', 'http://me:wtf@1.2.3.4:1234/D:/x')",[200018]
"('Description.java', 'org.junit.runner.Description', 'methodAndClassNamePatternGroupOrDefault', '([\\s\\S]*)\\((.*)\\)', 'testInitNonEmptyRepository(org.eclipse.jgit.api.InitCommandTest)')","[156735, 156932]"
"('URIish.java', 'org.eclipse.jgit.transport.URIish', '<init>', '^([a-z][a-z0-9+-]+)://(?:(?:([^/:@]+)(?::([^\\\\/]+))?@)?((?:[^\\\\/:]+)|(?:\\[[0-9a-f:]+\\]))(?::(\\d+))?((?:/~(?:[^\\\\/]+))?[\\\\/]))?(.+)?$', 'file:///tmp/jgit_test_8359519696988264440_tmp/tmp_5084939587537640844/.git/')",[13694]
"('Description.java', 'org.junit.runner.Description', 'methodAndClassNamePatternGroupOrDefault', '([\\s\\S]*)\\((.*)\\)', 'testWithEndingURL(org.eclipse.jgit.util.ChangeIdUtilTest)')","[32119, 32877]"
"('URIish.java', 'org.eclipse.jgit.transport.URIish', '<init>', '^([a-z][a-z0-9+-]+)://(?:(?:([^/:@]+)(?::([^\\\\/]+))?@)?((?:[^\\\\/:]+)|(?:\\[[0-9a-f:]+\\]))(?::(\\d+))?((?:/~(?:[^\\\\/]+))?[\\\\/]))?(.+)?$', 'https://me@[::1]:80/D:/x')",[217966]
"('URIish.java', 'org.eclipse.jgit.transport.URIish', '<init>', '^(file):([\\\\/](?![\\\\/])((?:[A-Za-z]:)?[\\\\/]?(?:(?:[^\\\\/]+[\\\\/]+)*[^\\\\/]+[\\\\/]*)))$', 'https://lusr\\example:wtf@example.com:1234//abc')",[205914]
"('Description.java', 'org.junit.runner.Description', 'methodAndClassNamePatternGroupOrDefault', '([\\s\\S]*)\\((.*)\\)', 'testACommitWithSubject_NoBodySobAndBug(org.eclipse.jgit.util.ChangeIdUtilTest)')","[32287, 33053]"
"('Description.java', 'org.junit.runner.Description', 'methodAndClassNamePatternGroupOrDefault', '([\\s\\S]*)\\((.*)\\)', 'test7_FromString(org.eclipse.jgit.lib.AbbreviatedObjectIdTest)')","[55546, 56091]"
"('Description.java', 'org.junit.runner.Description', 'methodAndClassNamePatternGroupOrDefault', '([\\s\\S]*)\\((.*)\\)', 'testBug300282_1(org.eclipse.jgit.revplot.PlotCommitListTest)')","[169385, 169706]"
"('Description.java', 'org.junit.runner.Description', 'methodAndClassNamePatternGroupOrDefault', '([\\s\\S]*)\\((.*)\\)', 'org.eclipse.jgit.revwalk.MaxCountRevFilterTest')","[173278, 173387]"
"('URIish.java', 'org.eclipse.jgit.transport.URIish', '<init>', '^([a-z][a-z0-9+-]+)://(?:(?:([^/:@]+)(?::([^\\\\/]+))?@)?((?:[^\\\\/:]+)|(?:\\[[0-9a-f:]+\\]))(?::(\\d+))?((?:/~(?:[^\\\\/]+))?[\\\\/]))?(.+)?$', 'https://me@1.2.3.4:1234/D:/x')",[217391]
"('Description.java', 'org.junit.runner.Description', 'methodAndClassNamePatternGroupOrDefault', '([\\s\\S]*)\\((.*)\\)', 'testDirectoryFileSimple(org.eclipse.jgit.lib.DirCacheCheckoutTest)')","[61083, 62065]"
"('Description.java', 'org.junit.runner.Description', 'methodAndClassNamePatternGroupOrDefault', '([\\s\\S]*)\\((.*)\\)', 'testApplyStashWithDeletedFile(org.eclipse.jgit.api.StashApplyCommandTest)')","[142897, 143467]"
"('URIish.java', 'org.eclipse.jgit.transport.URIish', '<init>', '^([a-z][a-z0-9+-]+)://(?:(?:([^/:@]+)(?::([^\\\\/]+))?@)?((?:[^\\\\/:]+)|(?:\\[[0-9a-f:]+\\]))(?::(\\d+))?((?:/~(?:[^\\\\/]+))?[\\\\/]))?(.+)?$', 'https://[::1]//abc')","[244784, 244968, 245888, 246072, 246992, 247176]"
"('URIish.java', 'org.eclipse.jgit.transport.URIish', '<init>', '^(file):([\\\\/](?![\\\\/])((?:[A-Za-z]:)?[\\\\/]?(?:(?:[^\\\\/]+[\\\\/]+)*[^\\\\/]+[\\\\/]*)))$', 'ssh://l usr\\example.com:wtf@example.com:1234/D:\\x')",[193284]
"('URIish.java', 'org.eclipse.jgit.transport.URIish', '<init>', '^(file):([\\\\/](?![\\\\/])((?:[A-Za-z]:)?[\\\\/]?(?:(?:[^\\\\/]+[\\\\/]+)*[^\\\\/]+[\\\\/]*)))$', 'ssh://lusr\\example@1.2.3.4:80/D:/x')",[209824]
"('Description.java', 'org.junit.runner.Description', 'methodAndClassNamePatternGroupOrDefault', '([\\s\\S]*)\\((.*)\\)', 'testWriteUnchangedFanout2_38(org.eclipse.jgit.notes.NoteMapTest)')","[258273, 258528]"
"('QuotedString.java', 'org.eclipse.jgit.util.QuotedString$BourneUserPathStyle', 'quote', '^~[A-Za-z0-9_-]*/.*$', 'a!b')","[30327, 30352]"
"('URIish.java', 'org.eclipse.jgit.transport.URIish', '<init>', '^([a-z][a-z0-9+-]+)://(?:(?:([^/:@]+)(?::([^\\\\/]+))?@)?((?:[^\\\\/:]+)|(?:\\[[0-9a-f:]+\\]))(?::(\\d+))?((?:/~(?:[^\\\\/]+))?[\\\\/]))?(.+)?$', 'file:///tmp/jgit_test_203586385014137691_tmp/tmp_1399021271848822854/.git/')",[63716]
"('QuotedString.java', 'org.eclipse.jgit.util.QuotedString$BourneUserPathStyle', 'quote', '^~[A-Za-z0-9_-]*/.*$', '~/')","[29724, 29748]"
"('URIish.java', 'org.eclipse.jgit.transport.URIish', '<init>', '^(file):([\\\\/](?![\\\\/])((?:[A-Za-z]:)?[\\\\/]?(?:(?:[^\\\\/]+[\\\\/]+)*[^\\\\/]+[\\\\/]*)))$', 'ssh+git://lusr\\example@example.com/D:/x')","[226407, 226591]"
"('Description.java', 'org.junit.runner.Description', 'methodAndClassNamePatternGroupOrDefault', '([\\s\\S]*)\\((.*)\\)', 'testDequote_Empty2(org.eclipse.jgit.util.QuotedStringBourneUserPathStyleTest)')","[28850, 29105]"
"('Description.java', 'org.junit.runner.Description', 'methodAndClassNamePatternGroupOrDefault', '([\\s\\S]*)\\((.*)\\)', 'testAddFolder(org.eclipse.jgit.api.AddCommandTest)')","[164684, 165118]"
"('Description.java', 'org.junit.runner.Description', 'methodAndClassNamePatternGroupOrDefault', '([\\s\\S]*)\\((.*)\\)', 'test028_LockPackedRef(org.eclipse.jgit.internal.storage.file.T0003_BasicTest)')","[116588, 117125]"
"('URIish.java', 'org.eclipse.jgit.transport.URIish', '<init>', '^([a-z][a-z0-9+-]+)://(?:(?:([^/:@]+)(?::([^\\\\/]+))?@)?((?:[^\\\\/:]+)|(?:\\[[0-9a-f:]+\\]))(?::(\\d+))?((?:/~(?:[^\\\\/]+))?[\\\\/]))?(.+)?$', 'git://example.com/home/m y')","[252607, 252653]"
"('Description.java', 'org.junit.runner.Description', 'methodAndClassNamePatternGroupOrDefault', '([\\s\\S]*)\\((.*)\\)', 'testSomeCommits(org.eclipse.jgit.api.CommitAndLogCommandTest)')","[155164, 155384]"
"('URIish.java', 'org.eclipse.jgit.transport.URIish', '<init>', '^([a-z][a-z0-9+-]+)://(?:(?:([^/:@]+)(?::([^\\\\/]+))?@)?((?:[^\\\\/:]+)|(?:\\[[0-9a-f:]+\\]))(?::(\\d+))?((?:/~(?:[^\\\\/]+))?[\\\\/]))?(.+)?$', 'file:///tmp/jgit_test_7373006530583846880_tmp/tmp_668844217307704980')","[166648, 166710]"
"('Description.java', 'org.junit.runner.Description', 'methodAndClassNamePatternGroupOrDefault', '([\\s\\S]*)\\((.*)\\)', 'testId(org.eclipse.jgit.util.ChangeIdUtilTest)')","[31867, 32613]"
"('URIish.java', 'org.eclipse.jgit.transport.URIish', '<init>', '^([a-z][a-z0-9+-]+)://(?:(?:([^/:@]+)(?::([^\\\\/]+))?@)?((?:[^\\\\/:]+)|(?:\\[[0-9a-f:]+\\]))(?::(\\d+))?((?:/~(?:[^\\\\/]+))?[\\\\/]))?(.+)?$', 'file:///D:/m y')","[252699, 252745]"
"('URIish.java', 'org.eclipse.jgit.transport.URIish', '<init>', '^([a-z][a-z0-9+-]+)://(?:(?:([^/:@]+)(?::([^\\\\/]+))?@)?((?:[^\\\\/:]+)|(?:\\[[0-9a-f:]+\\]))(?::(\\d+))?((?:/~(?:[^\\\\/]+))?[\\\\/]))?(.+)?$', '/tmp/jgit_test_4895667423267485854_tmp/tmp_229822824317133648')","[152863, 152993, 153146]"
"('URIish.java', 'org.eclipse.jgit.transport.URIish', '<init>', '^([a-z][a-z0-9+-]+)://(?:(?:([^/:@]+)(?::([^\\\\/]+))?@)?((?:[^\\\\/:]+)|(?:\\[[0-9a-f:]+\\]))(?::(\\d+))?((?:/~(?:[^\\\\/]+))?[\\\\/]))?(.+)?$', 'ssh://l usr\\example.com@[::1]:1234/D:/x')",[208927]
"('FastIgnoreRule.java', 'org.eclipse.jgit.ignore.FastIgnoreRule', 'isMatch', '[\\p{javaDigit}]', 'a')",[100743]
"('Description.java', 'org.junit.runner.Description', 'methodAndClassNamePatternGroupOrDefault', '([\\s\\S]*)\\((.*)\\)', 'testDegenerate_InsertMiddle(org.eclipse.jgit.diff.HistogramDiffTest)')","[7101, 7780]"
"('URIish.java', 'org.eclipse.jgit.transport.URIish', '<init>', '^(file):([\\\\/](?![\\\\/])((?:[A-Za-z]:)?[\\\\/]?(?:(?:[^\\\\/]+[\\\\/]+)*[^\\\\/]+[\\\\/]*)))$', 'ssh://me:wtf@1.2.3.4:80/D:\\x')",[192732]
"('URIish.java', 'org.eclipse.jgit.transport.URIish', '<init>', '^([a-z][a-z0-9+-]+)://(?:(?:([^/:@]+)(?::([^\\\\/]+))?@)?((?:[^\\\\/:]+)|(?:\\[[0-9a-f:]+\\]))(?::(\\d+))?((?:/~(?:[^\\\\/]+))?[\\\\/]))?(.+)?$', 'ssh+git://me@1.2.3.4:1234//')",[210675]
"('URIish.java', 'org.eclipse.jgit.transport.URIish', '<init>', '^(file):([\\\\/](?![\\\\/])((?:[A-Za-z]:)?[\\\\/]?(?:(?:[^\\\\/]+[\\\\/]+)*[^\\\\/]+[\\\\/]*)))$', 'ssh+git://l usr\\example.com@example.com:1234/D:\\x')",[211526]
"('Description.java', 'org.junit.runner.Description', 'methodAndClassNamePatternGroupOrDefault', '([\\s\\S]*)\\((.*)\\)', 'testThreeBranches(org.eclipse.jgit.merge.MergeMessageFormatterTest)')","[16203, 16526]"
"('URIish.java', 'org.eclipse.jgit.transport.URIish', '<init>', '^([a-z][a-z0-9+-]+)://(?:(?:([^/:@]+)(?::([^\\\\/]+))?@)?((?:[^\\\\/:]+)|(?:\\[[0-9a-f:]+\\]))(?::(\\d+))?((?:/~(?:[^\\\\/]+))?[\\\\/]))?(.+)?$', 'file:///tmp/jgit_test_1988309938804811301_tmp/tmp_8167031851852704344/.git/')",[162928]
"('URIish.java', 'org.eclipse.jgit.transport.URIish', '<init>', '^([a-z][a-z0-9+-]+)://(?:(?:([^/:@]+)(?::([^\\\\/]+))?@)?((?:[^\\\\/:]+)|(?:\\[[0-9a-f:]+\\]))(?::(\\d+))?((?:/~(?:[^\\\\/]+))?[\\\\/]))?(.+)?$', 'ssh://1.2.3.4//abc')","[234480, 234664, 235584, 235768, 236688, 236872]"
"('URIish.java', 'org.eclipse.jgit.transport.URIish', '<init>', '^([a-z][a-z0-9+-]+)://(?:(?:([^/:@]+)(?::([^\\\\/]+))?@)?((?:[^\\\\/:]+)|(?:\\[[0-9a-f:]+\\]))(?::(\\d+))?((?:/~(?:[^\\\\/]+))?[\\\\/]))?(.+)?$', '/tmp/jgit_test_279927277504112735_tmp/tmp_3984817157549652538/.git')","[18397, 18542]"
"('Description.java', 'org.junit.runner.Description', 'methodAndClassNamePatternGroupOrDefault', '([\\s\\S]*)\\((.*)\\)', 'annotatedTag_objectNotPruned(org.eclipse.jgit.internal.storage.file.GcTagTest)')","[110280, 110323]"
"('Description.java', 'org.junit.runner.Description', 'methodAndClassNamePatternGroupOrDefault', '([\\s\\S]*)\\((.*)\\)', 'testEmptyPattern(org.eclipse.jgit.util.RawSubStringPatternTest)')","[28619, 28706]"
"('Description.java', 'org.junit.runner.Description', 'methodAndClassNamePatternGroupOrDefault', '([\\s\\S]*)\\((.*)\\)', 'nonReferencedNonExpiredObject_notPruned(org.eclipse.jgit.internal.storage.file.GcPruneNonReferencedTest)')","[119339, 119446]"
"('URIish.java', 'org.eclipse.jgit.transport.URIish', '<init>', '^(file):([\\\\/](?![\\\\/])((?:[A-Za-z]:)?[\\\\/]?(?:(?:[^\\\\/]+[\\\\/]+)*[^\\\\/]+[\\\\/]*)))$', 'ssh://lusr\\example@1.2.3.4//abc')","[223417, 223601]"
"('Description.java', 'org.junit.runner.Description', 'methodAndClassNamePatternGroupOrDefault', '([\\s\\S]*)\\((.*)\\)', 'testANY_DIFF_IdentityClone(org.eclipse.jgit.treewalk.filter.TreeFilterTest)')","[265947, 266099]"
"('AttributesRule.java', 'org.eclipse.jgit.attributes.AttributesRule', 'isMatch', '.r[a-c]', 'dra')",[76805]
"('URIish.java', 'org.eclipse.jgit.transport.URIish', '<init>', '^([a-z][a-z0-9+-]+)://(?:(?:([^/:@]+)(?::([^\\\\/]+))?@)?((?:[^\\\\/:]+)|(?:\\[[0-9a-f:]+\\]))(?::(\\d+))?((?:/~(?:[^\\\\/]+))?[\\\\/]))?(.+)?$', 'https://l usr\\example.com@1.2.3.4:80/D:/x')",[219254]
"('Description.java', 'org.junit.runner.Description', 'methodAndClassNamePatternGroupOrDefault', '([\\s\\S]*)\\((.*)\\)', 'testDirtySubmoduleHEAD(org.eclipse.jgit.lib.IndexDiffSubmoduleTest)')","[56365, 56517]"
"('Description.java', 'org.junit.runner.Description', 'methodAndClassNamePatternGroupOrDefault', '([\\s\\S]*)\\((.*)\\)', 'testVerySimpleGroupCase1[OldRule? false](org.eclipse.jgit.ignore.IgnoreRuleSpecialCasesTest)')","[88113, 95218]"
"('Description.java', 'org.junit.runner.Description', 'methodAndClassNamePatternGroupOrDefault', '([\\s\\S]*)\\((.*)\\)', 'fetchShouldAutoFollowTag(org.eclipse.jgit.api.FetchCommandTest)')","[124839, 124971]"
"('URIish.java', 'org.eclipse.jgit.transport.URIish', '<init>', '^([a-z][a-z0-9+-]+)://(?:(?:([^/:@]+)(?::([^\\\\/]+))?@)?((?:[^\\\\/:]+)|(?:\\[[0-9a-f:]+\\]))(?::(\\d+))?((?:/~(?:[^\\\\/]+))?[\\\\/]))?(.+)?$', 'ssh://l usr\\example.com:wtf@example.com:80/D:\\x')",[193491]
"('URIish.java', 'org.eclipse.jgit.transport.URIish', '<init>', '^(file):([\\\\/](?![\\\\/])((?:[A-Za-z]:)?[\\\\/]?(?:(?:[^\\\\/]+[\\\\/]+)*[^\\\\/]+[\\\\/]*)))$', 'file:/tmp/jgit_test_1437815989145954065_tmp/tmp_9002806209384523115/.git/')",[262846]
"('Description.java', 'org.junit.runner.Description', 'methodAndClassNamePatternGroupOrDefault', '([\\s\\S]*)\\((.*)\\)', 'testReadSingleBytes(org.eclipse.jgit.util.io.UnionInputStreamTest)')","[25413, 25633]"
"('Description.java', 'org.junit.runner.Description', 'methodAndClassNamePatternGroupOrDefault', '([\\s\\S]*)\\((.*)\\)', 'testTagTree(org.eclipse.jgit.revwalk.RevTagParseTest)')","[179499, 179900]"
"('Description.java', 'org.junit.runner.Description', 'methodAndClassNamePatternGroupOrDefault', '([\\s\\S]*)\\((.*)\\)', 'testDirModeAndRegex1[OldRule? true](org.eclipse.jgit.ignore.IgnoreMatcherParametrizedTest)')","[103809, 104269]"
"('Description.java', 'org.junit.runner.Description', 'methodAndClassNamePatternGroupOrDefault', '([\\s\\S]*)\\((.*)\\)', 'org.eclipse.jgit.internal.storage.file.ConcurrentRepackTest')","[122242, 122985]"
"('Description.java', 'org.junit.runner.Description', 'methodAndClassNamePatternGroupOrDefault', '([\\s\\S]*)\\((.*)\\)', 'mergeWithCrlfInWT(org.eclipse.jgit.merge.ResolveMergerTest)')","[12864, 13192]"
"('URIish.java', 'org.eclipse.jgit.transport.URIish', '<init>', '^(file):([\\\\/](?![\\\\/])((?:[A-Za-z]:)?[\\\\/]?(?:(?:[^\\\\/]+[\\\\/]+)*[^\\\\/]+[\\\\/]*)))$', 'ssh://l usr\\example.com@1.2.3.4:1234/D:/x')",[208536]
"('Description.java', 'org.junit.runner.Description', 'methodAndClassNamePatternGroupOrDefault', '([\\s\\S]*)\\((.*)\\)', 'testBreakModify_BreakBelowScore(org.eclipse.jgit.diff.RenameDetectorTest)')","[4351, 4900]"
"('URIish.java', 'org.eclipse.jgit.transport.URIish', '<init>', '^([a-z][a-z0-9+-]+)://(?:(?:([^/:@]+)(?::([^\\\\/]+))?@)?((?:[^\\\\/:]+)|(?:\\[[0-9a-f:]+\\]))(?::(\\d+))?((?:/~(?:[^\\\\/]+))?[\\\\/]))?(.+)?$', '/tmp/jgit_test_1202794844773508614_tmp/tmp_7885106280618449498.git')",[183419]
"('URIish.java', 'org.eclipse.jgit.transport.URIish', '<init>', '^(file):([\\\\/](?![\\\\/])((?:[A-Za-z]:)?[\\\\/]?(?:(?:[^\\\\/]+[\\\\/]+)*[^\\\\/]+[\\\\/]*)))$', 'https://me@example.com:80//')",[217092]
"('FastIgnoreRule.java', 'org.eclipse.jgit.ignore.FastIgnoreRule', 'isMatch', 'a.*a.*a', 'aaaaaaab')",[101705]
"('Description.java', 'org.junit.runner.Description', 'methodAndClassNamePatternGroupOrDefault', '([\\s\\S]*)\\((.*)\\)', 'testParse_ShortLineOnlyEndLF(org.eclipse.jgit.revwalk.RevTagParseTest)')","[179751, 180164]"
"('URIish.java', 'org.eclipse.jgit.transport.URIish', '<init>', '^(file):([\\\\/](?![\\\\/])((?:[A-Za-z]:)?[\\\\/]?(?:(?:[^\\\\/]+[\\\\/]+)*[^\\\\/]+[\\\\/]*)))$', 'https://lusr\\example:wtf@1.2.3.4:80/D:\\x')",[206558]
"('URIish.java', 'org.eclipse.jgit.transport.URIish', '<init>', '^([a-z][a-z0-9+-]+)://(?:(?:([^/:@]+)(?::([^\\\\/]+))?@)?((?:[^\\\\/:]+)|(?:\\[[0-9a-f:]+\\]))(?::(\\d+))?((?:/~(?:[^\\\\/]+))?[\\\\/]))?(.+)?$', 'file:///tmp/jgit_test_6855180754937398385_tmp/tmp_8894118542179860150/.git/')",[57303]
"('Description.java', 'org.junit.runner.Description', 'methodAndClassNamePatternGroupOrDefault', '([\\s\\S]*)\\((.*)\\)', 'testNoFastForwardNoCommit(org.eclipse.jgit.api.MergeCommandTest)')","[126160, 127065]"
"('Description.java', 'org.junit.runner.Description', 'methodAndClassNamePatternGroupOrDefault', '([\\s\\S]*)\\((.*)\\)', 'indexDelete(org.eclipse.jgit.api.StashApplyCommandTest)')","[142771, 143335]"
"('Description.java', 'org.junit.runner.Description', 'methodAndClassNamePatternGroupOrDefault', '([\\s\\S]*)\\((.*)\\)', 'testMergeCommitOneParentShallow(org.eclipse.jgit.revwalk.RevWalkShallowTest)')","[181541, 181669]"
"('Description.java', 'org.junit.runner.Description', 'methodAndClassNamePatternGroupOrDefault', '([\\s\\S]*)\\((.*)\\)', 'testDelta_FailsOver2GiB(org.eclipse.jgit.internal.storage.file.PackFileTest)')","[122494, 122579]"
"('URIish.java', 'org.eclipse.jgit.transport.URIish', '<init>', '^(file):([\\\\/](?![\\\\/])((?:[A-Za-z]:)?[\\\\/]?(?:(?:[^\\\\/]+[\\\\/]+)*[^\\\\/]+[\\\\/]*)))$', 'ssh+git://example.com//abc')","[237401, 237585, 238505, 238689, 239609, 239793]"
"('Description.java', 'org.junit.runner.Description', 'methodAndClassNamePatternGroupOrDefault', '([\\s\\S]*)\\((.*)\\)', 'testToString_WithPrefix(org.eclipse.jgit.util.RefMapTest)')","[21018, 21489]"
"('FastIgnoreRule.java', 'org.eclipse.jgit.ignore.FastIgnoreRule', 'isMatch', '[\\p{Blank}]', '\t')",[101913]
"('Description.java', 'org.junit.runner.Description', 'methodAndClassNamePatternGroupOrDefault', '([\\s\\S]*)\\((.*)\\)', 'testRevertOverExecutableChangeOnNonExectuableFileSystem(org.eclipse.jgit.api.RevertCommandTest)')","[125578, 125792]"
"('URIish.java', 'org.eclipse.jgit.transport.URIish', '<init>', '^([a-z][a-z0-9+-]+)://(?:(?:([^/:@]+)(?::([^\\\\/]+))?@)?((?:[^\\\\/:]+)|(?:\\[[0-9a-f:]+\\]))(?::(\\d+))?((?:/~(?:[^\\\\/]+))?[\\\\/]))?(.+)?$', 'https://me:wtf@example.com:1234//abc')",[202939]
"('Description.java', 'org.junit.runner.Description', 'methodAndClassNamePatternGroupOrDefault', '([\\s\\S]*)\\((.*)\\)', 'testConfigureCache_PackedGitOpenFiles_0(org.eclipse.jgit.internal.storage.file.WindowCacheReconfigureTest)')","[115661, 115815]"
"('Description.java', 'org.junit.runner.Description', 'methodAndClassNamePatternGroupOrDefault', '([\\s\\S]*)\\((.*)\\)', 'testFilePathCase3[OldRule? false](org.eclipse.jgit.ignore.IgnoreRuleSpecialCasesTest)')","[86894, 93999]"
"('URIish.java', 'org.eclipse.jgit.transport.URIish', '<init>', '^([a-z][a-z0-9+-]+)://(?:(?:([^/:@]+)(?::([^\\\\/]+))?@)?((?:[^\\\\/:]+)|(?:\\[[0-9a-f:]+\\]))(?::(\\d+))?((?:/~(?:[^\\\\/]+))?[\\\\/]))?(.+)?$', 'file:///tmp/jgit_test_4045324050557360246_tmp/tmp_5930971390776294452/.git/')",[19362]
"('Description.java', 'org.junit.runner.Description', 'methodAndClassNamePatternGroupOrDefault', '([\\s\\S]*)\\((.*)\\)', 'testSingleSubtree(org.eclipse.jgit.dircache.DirCacheTreeTest)')","[171734, 171866]"
"('Description.java', 'org.junit.runner.Description', 'methodAndClassNamePatternGroupOrDefault', '([\\s\\S]*)\\((.*)\\)', 'testDotAsteriskMatch[OldRule? false](org.eclipse.jgit.ignore.FastIgnoreRuleTest)')","[77173, 77930]"
"('Description.java', 'org.junit.runner.Description', 'methodAndClassNamePatternGroupOrDefault', '([\\s\\S]*)\\((.*)\\)', 'testLowerGroupCase0(org.eclipse.jgit.fnmatch.FileNameMatcherTest)')","[42133, 45426]"
"('Description.java', 'org.junit.runner.Description', 'methodAndClassNamePatternGroupOrDefault', '([\\s\\S]*)\\((.*)\\)', 'testGetValidSlashHumanishName(org.eclipse.jgit.transport.URIishTest)')","[188653, 190040]"
"('URIish.java', 'org.eclipse.jgit.transport.URIish', '<init>', '^([a-z][a-z0-9+-]+)://(?:(?:([^/:@]+)(?::([^\\\\/]+))?@)?((?:[^\\\\/:]+)|(?:\\[[0-9a-f:]+\\]))(?::(\\d+))?((?:/~(?:[^\\\\/]+))?[\\\\/]))?(.+)?$', 'https://lusr\\example@example.com:80/D:/x')",[219990]
"('AttributesRule.java', 'org.eclipse.jgit.attributes.AttributesRule', 'isMatch', '.r[a-c]', 'src')","[76292, 76319, 76373, 76427, 76454]"
"('URIish.java', 'org.eclipse.jgit.transport.URIish', '<init>', '^(file):([\\\\/](?![\\\\/])((?:[A-Za-z]:)?[\\\\/]?(?:(?:[^\\\\/]+[\\\\/]+)*[^\\\\/]+[\\\\/]*)))$', 'file:///tmp/jgit_test_7543284266175518769_tmp/tmp_2576430147724684526/.git/')","[125116, 125174]"
"('URIish.java', 'org.eclipse.jgit.transport.URIish', '<init>', '^(file):([\\\\/](?![\\\\/])((?:[A-Za-z]:)?[\\\\/]?(?:(?:[^\\\\/]+[\\\\/]+)*[^\\\\/]+[\\\\/]*)))$', 'ssh+git://l usr\\example.com@1.2.3.4:80//abc')",[211986]
"('Description.java', 'org.junit.runner.Description', 'methodAndClassNamePatternGroupOrDefault', '([\\s\\S]*)\\((.*)\\)', 'testOnlyOption_f1_6_e(org.eclipse.jgit.api.CommitOnlyTest)')","[135046, 137097]"
"('URIish.java', 'org.eclipse.jgit.transport.URIish', '<init>', '^(file):([\\\\/](?![\\\\/])((?:[A-Za-z]:)?[\\\\/]?(?:(?:[^\\\\/]+[\\\\/]+)*[^\\\\/]+[\\\\/]*)))$', 'ssh://l usr\\example.com@1.2.3.4:80/D:\\x')",[208766]
"('Description.java', 'org.junit.runner.Description', 'methodAndClassNamePatternGroupOrDefault', '([\\s\\S]*)\\((.*)\\)', 'org.eclipse.jgit.dircache.DirCacheCGitCompatabilityTest')","[172918, 174263]"
"('Description.java', 'org.junit.runner.Description', 'methodAndClassNamePatternGroupOrDefault', '([\\s\\S]*)\\((.*)\\)', 'LOCALE(org.eclipse.jgit.util.GitDateFormatterTest)')","[26003, 26193]"
"('Description.java', 'org.junit.runner.Description', 'methodAndClassNamePatternGroupOrDefault', '([\\s\\S]*)\\((.*)\\)', 'shouldListModificationInDirWithoutModifiedTrees(org.eclipse.jgit.diff.DiffEntryTest)')","[9977, 10234]"
"('URIish.java', 'org.eclipse.jgit.transport.URIish', '<init>', '^(file):([\\\\/](?![\\\\/])((?:[A-Za-z]:)?[\\\\/]?(?:(?:[^\\\\/]+[\\\\/]+)*[^\\\\/]+[\\\\/]*)))$', 'ssh://l usr\\example.com:wtf@[::1]:1234/D:\\x')",[194122]
"('FastIgnoreRule.java', 'org.eclipse.jgit.ignore.FastIgnoreRule', 'isMatch', '[\\.a\\.].*[\\.a\\.]', 'aha')",[100143]
"('Description.java', 'org.junit.runner.Description', 'methodAndClassNamePatternGroupOrDefault', '([\\s\\S]*)\\((.*)\\)', 'testWildcardAtStart(org.eclipse.jgit.transport.RefSpecTest)')","[186717, 187445]"
"('URIish.java', 'org.eclipse.jgit.transport.URIish', '<init>', '^(file):([\\\\/](?![\\\\/])((?:[A-Za-z]:)?[\\\\/]?(?:(?:[^\\\\/]+[\\\\/]+)*[^\\\\/]+[\\\\/]*)))$', 'file:///tmp/jgit_test_1523009632444671625_tmp/tmp_1392089401907229157/.git/')",[58348]
"('Description.java', 'org.junit.runner.Description', 'methodAndClassNamePatternGroupOrDefault', '([\\s\\S]*)\\((.*)\\)', 'test(org.eclipse.jgit.ignore.BasicRuleTest)')","[84630, 84652]"
"('Description.java', 'org.junit.runner.Description', 'methodAndClassNamePatternGroupOrDefault', '([\\s\\S]*)\\((.*)\\)', 'testInvalidTagNoTagHeader1(org.eclipse.jgit.lib.ObjectCheckerTest)')","[49613, 52154]"
"('Description.java', 'org.junit.runner.Description', 'methodAndClassNamePatternGroupOrDefault', '([\\s\\S]*)\\((.*)\\)', 'testSpecialGroupCase3[OldRule? false](org.eclipse.jgit.ignore.IgnoreRuleSpecialCasesTest)')","[84824, 91929]"
"('Description.java', 'org.junit.runner.Description', 'methodAndClassNamePatternGroupOrDefault', '([\\s\\S]*)\\((.*)\\)', 'testInvalidTreeBadSorting1(org.eclipse.jgit.lib.ObjectCheckerTest)')","[48920, 51428]"
"('URIish.java', 'org.eclipse.jgit.transport.URIish', '<init>', '^([a-z][a-z0-9+-]+)://(?:(?:([^/:@]+)(?::([^\\\\/]+))?@)?((?:[^\\\\/:]+)|(?:\\[[0-9a-f:]+\\]))(?::(\\d+))?((?:/~(?:[^\\\\/]+))?[\\\\/]))?(.+)?$', 'ssh://lusr\\example@1.2.3.4:80/D:/x')",[209847]
"('Description.java', 'org.junit.runner.Description', 'methodAndClassNamePatternGroupOrDefault', '([\\s\\S]*)\\((.*)\\)', 'testNoConfig(org.eclipse.jgit.transport.OpenSshConfigTest)')","[196037, 196409]"
"('URIish.java', 'org.eclipse.jgit.transport.URIish', '<init>', '^([a-z][a-z0-9+-]+)://(?:(?:([^/:@]+)(?::([^\\\\/]+))?@)?((?:[^\\\\/:]+)|(?:\\[[0-9a-f:]+\\]))(?::(\\d+))?((?:/~(?:[^\\\\/]+))?[\\\\/]))?(.+)?$', 'http://lusr\\example@example.com/D:\\x')","[229788, 229972]"
"('URIish.java', 'org.eclipse.jgit.transport.URIish', '<init>', '^(file):([\\\\/](?![\\\\/])((?:[A-Za-z]:)?[\\\\/]?(?:(?:[^\\\\/]+[\\\\/]+)*[^\\\\/]+[\\\\/]*)))$', 'ssh+git://me@[::1]:1234//abc')",[211066]
"('URIish.java', 'org.eclipse.jgit.transport.URIish', '<init>', '^([a-z][a-z0-9+-]+)://(?:(?:([^/:@]+)(?::([^\\\\/]+))?@)?((?:[^\\\\/:]+)|(?:\\[[0-9a-f:]+\\]))(?::(\\d+))?((?:/~(?:[^\\\\/]+))?[\\\\/]))?(.+)?$', 'https://me@example.com:80/D:/x')",[217207]
"('URIish.java', 'org.eclipse.jgit.transport.URIish', '<init>', '^(file):([\\\\/](?![\\\\/])((?:[A-Za-z]:)?[\\\\/]?(?:(?:[^\\\\/]+[\\\\/]+)*[^\\\\/]+[\\\\/]*)))$', 'http://l usr\\example.com@1.2.3.4/D:/x')","[228983, 229167]"
"('Description.java', 'org.junit.runner.Description', 'methodAndClassNamePatternGroupOrDefault', '([\\s\\S]*)\\((.*)\\)', 'test025_computeSha1NoStore(org.eclipse.jgit.internal.storage.file.T0003_BasicTest)')","[116546, 117081]"
"('Description.java', 'org.junit.runner.Description', 'methodAndClassNamePatternGroupOrDefault', '([\\s\\S]*)\\((.*)\\)', 'testOnlyOption_f1_3_d(org.eclipse.jgit.api.CommitOnlyTest)')","[134710, 136745]"
"('URIish.java', 'org.eclipse.jgit.transport.URIish', '<init>', '^([\\\\/]?((?:[A-Za-z]:)?[\\\\/]?(?:(?:[^\\\\/]+[\\\\/]+)*[^\\\\/]+[\\\\/]*)))$', '/a/b/c.git/')",[248372]
"('Description.java', 'org.junit.runner.Description', 'methodAndClassNamePatternGroupOrDefault', '([\\s\\S]*)\\((.*)\\)', 'testEntryObjectId(org.eclipse.jgit.treewalk.EmptyTreeIteratorTest)')","[261040, 261171]"
"('URIish.java', 'org.eclipse.jgit.transport.URIish', '<init>', '^([a-z][a-z0-9+-]+)://(?:(?:([^/:@]+)(?::([^\\\\/]+))?@)?((?:[^\\\\/:]+)|(?:\\[[0-9a-f:]+\\]))(?::(\\d+))?((?:/~(?:[^\\\\/]+))?[\\\\/]))?(.+)?$', 'https://example.com//')","[244002, 244186, 245106, 245290, 246210, 246394]"
"('Description.java', 'org.junit.runner.Description', 'methodAndClassNamePatternGroupOrDefault', '([\\s\\S]*)\\((.*)\\)', 'emptyStashReflog(org.eclipse.jgit.api.StashListCommandTest)')","[165942, 166029]"
"('Description.java', 'org.junit.runner.Description', 'methodAndClassNamePatternGroupOrDefault', '([\\s\\S]*)\\((.*)\\)', 'checkUntrackedEmpytFolderIsNotAConflictWithFile(org.eclipse.jgit.merge.ResolveMergerTest)')","[12822, 13148]"
"('URIish.java', 'org.eclipse.jgit.transport.URIish', '<init>', '^([a-z][a-z0-9+-]+)://(?:(?:([^/:@]+)(?::([^\\\\/]+))?@)?((?:[^\\\\/:]+)|(?:\\[[0-9a-f:]+\\]))(?::(\\d+))?((?:/~(?:[^\\\\/]+))?[\\\\/]))?(.+)?$', 'http://me:wtf@example.com:1234//abc')",[199627]
"('Description.java', 'org.junit.runner.Description', 'methodAndClassNamePatternGroupOrDefault', '([\\s\\S]*)\\((.*)\\)', 'testXDigitGroupCase1[OldRule? false](org.eclipse.jgit.ignore.IgnoreRuleSpecialCasesTest)')","[87584, 94689]"
"('Description.java', 'org.junit.runner.Description', 'methodAndClassNamePatternGroupOrDefault', '([\\s\\S]*)\\((.*)\\)', 'test000_openrepo_default_gitDirSet(org.eclipse.jgit.internal.storage.file.T0003_BasicTest)')","[116357, 116883]"
"('Description.java', 'org.junit.runner.Description', 'methodAndClassNamePatternGroupOrDefault', '([\\s\\S]*)\\((.*)\\)', 'testLeadingSpacesRebaseTodo(org.eclipse.jgit.api.RebaseCommandTest)')","[132419, 133954]"
"('URIish.java', 'org.eclipse.jgit.transport.URIish', '<init>', '^([a-z][a-z0-9+-]+)://(?:(?:([^/:@]+)(?::([^\\\\/]+))?@)?((?:[^\\\\/:]+)|(?:\\[[0-9a-f:]+\\]))(?::(\\d+))?((?:/~(?:[^\\\\/]+))?[\\\\/]))?(.+)?$', 'file:///tmp/jgit_test_5842907808920077259_tmp/tmp_384645860907318494/.git/')",[13322]
"('Description.java', 'org.junit.runner.Description', 'methodAndClassNamePatternGroupOrDefault', '([\\s\\S]*)\\((.*)\\)', 'testLowerGroupCase2[OldRule? true](org.eclipse.jgit.ignore.IgnoreRuleSpecialCasesTest)')","[89146, 96230]"
"('URIish.java', 'org.eclipse.jgit.transport.URIish', '<init>', '^(file):([\\\\/](?![\\\\/])((?:[A-Za-z]:)?[\\\\/]?(?:(?:[^\\\\/]+[\\\\/]+)*[^\\\\/]+[\\\\/]*)))$', 'ssh+git://me:wtf@1.2.3.4:1234/D:\\x')",[196752]
"('Description.java', 'org.junit.runner.Description', 'methodAndClassNamePatternGroupOrDefault', '([\\s\\S]*)\\((.*)\\)', 'testFormatHours(org.eclipse.jgit.util.RelativeDateFormatterTest)')","[31274, 31467]"
"('Description.java', 'org.junit.runner.Description', 'methodAndClassNamePatternGroupOrDefault', '([\\s\\S]*)\\((.*)\\)', 'org.eclipse.jgit.lib.ObjectIdTest')","[53423, 54005]"
"('Description.java', 'org.junit.runner.Description', 'methodAndClassNamePatternGroupOrDefault', '([\\s\\S]*)\\((.*)\\)', 'testOnlyOption_f1_14_e(org.eclipse.jgit.api.CommitOnlyTest)')","[136201, 138307]"
"('Description.java', 'org.junit.runner.Description', 'methodAndClassNamePatternGroupOrDefault', '([\\s\\S]*)\\((.*)\\)', 'testSpecialGroupCase8[OldRule? false](org.eclipse.jgit.ignore.IgnoreRuleSpecialCasesTest)')","[84939, 92044]"
"('URIish.java', 'org.eclipse.jgit.transport.URIish', '<init>', '^(file):([\\\\/](?![\\\\/])((?:[A-Za-z]:)?[\\\\/]?(?:(?:[^\\\\/]+[\\\\/]+)*[^\\\\/]+[\\\\/]*)))$', 'ssh+git://me@example.com:1234/D:\\x')",[210422]
"('Description.java', 'org.junit.runner.Description', 'methodAndClassNamePatternGroupOrDefault', '([\\s\\S]*)\\((.*)\\)', 'testParse_GitBinaryDelta(org.eclipse.jgit.patch.PatchTest)')","[2064, 2214]"
"('URIish.java', 'org.eclipse.jgit.transport.URIish', '<init>', '^(file):([\\\\/](?![\\\\/])((?:[A-Za-z]:)?[\\\\/]?(?:(?:[^\\\\/]+[\\\\/]+)*[^\\\\/]+[\\\\/]*)))$', 'ssh://me@[::1]:1234/D:\\x')",[207846]
"('Description.java', 'org.junit.runner.Description', 'methodAndClassNamePatternGroupOrDefault', '([\\s\\S]*)\\((.*)\\)', 'testExact(org.eclipse.jgit.treewalk.filter.PathFilterGroupTest)')","[266286, 266437]"
"('Description.java', 'org.junit.runner.Description', 'methodAndClassNamePatternGroupOrDefault', '([\\s\\S]*)\\((.*)\\)', 'testActuallyIsModifiedTrivial(org.eclipse.jgit.internal.storage.file.FileSnapshotTest)')","[109737, 109823]"
"('URIish.java', 'org.eclipse.jgit.transport.URIish', '<init>', '^([a-z][a-z0-9+-]+)://(?:(?:([^/:@]+)(?::([^\\\\/]+))?@)?((?:[^\\\\/:]+)|(?:\\[[0-9a-f:]+\\]))(?::(\\d+))?((?:/~(?:[^\\\\/]+))?[\\\\/]))?(.+)?$', 'http://l usr\\example.com:wtf@example.com:1234/D:/x')",[200777]
"('Description.java', 'org.junit.runner.Description', 'methodAndClassNamePatternGroupOrDefault', '([\\s\\S]*)\\((.*)\\)', 'testRemoved(org.eclipse.jgit.lib.IndexDiffTest)')","[68916, 69265]"
"('URIish.java', 'org.eclipse.jgit.transport.URIish', '<init>', '^([a-z][a-z0-9+-]+)://(?:(?:([^/:@]+)(?::([^\\\\/]+))?@)?((?:[^\\\\/:]+)|(?:\\[[0-9a-f:]+\\]))(?::(\\d+))?((?:/~(?:[^\\\\/]+))?[\\\\/]))?(.+)?$', 'ssh://l usr\\example.com@example.com//abc')","[221968, 222152]"
"('URIish.java', 'org.eclipse.jgit.transport.URIish', '<init>', '^([a-z][a-z0-9+-]+)://(?:(?:([^/:@]+)(?::([^\\\\/]+))?@)?((?:[^\\\\/:]+)|(?:\\[[0-9a-f:]+\\]))(?::(\\d+))?((?:/~(?:[^\\\\/]+))?[\\\\/]))?(.+)?$', 'http://lusr\\example:wtf@[::1]:1234//abc')",[202571]
"('Description.java', 'org.junit.runner.Description', 'methodAndClassNamePatternGroupOrDefault', '([\\s\\S]*)\\((.*)\\)', 'testPunctGroupCase3[OldRule? false](org.eclipse.jgit.ignore.IgnoreRuleSpecialCasesTest)')","[86802, 93907]"
"('URIish.java', 'org.eclipse.jgit.transport.URIish', '<init>', '^(file):([\\\\/](?![\\\\/])((?:[A-Za-z]:)?[\\\\/]?(?:(?:[^\\\\/]+[\\\\/]+)*[^\\\\/]+[\\\\/]*)))$', 'git://abc.git')",[191973]
"('URIish.java', 'org.eclipse.jgit.transport.URIish', '<init>', '^(file):([\\\\/](?![\\\\/])((?:[A-Za-z]:)?[\\\\/]?(?:(?:[^\\\\/]+[\\\\/]+)*[^\\\\/]+[\\\\/]*)))$', 'ssh://l usr\\example.com@1.2.3.4:1234//')",[208444]
"('URIish.java', 'org.eclipse.jgit.transport.URIish', '<init>', '^(file):([\\\\/](?![\\\\/])((?:[A-Za-z]:)?[\\\\/]?(?:(?:[^\\\\/]+[\\\\/]+)*[^\\\\/]+[\\\\/]*)))$', 'http://1.2.3.4//')","[241035, 241219, 242139, 242323, 243243, 243427]"
"('Description.java', 'org.junit.runner.Description', 'methodAndClassNamePatternGroupOrDefault', '([\\s\\S]*)\\((.*)\\)', 'testOnlyOption_f1_5_a(org.eclipse.jgit.api.CommitOnlyTest)')","[134857, 136899]"
"('Description.java', 'org.junit.runner.Description', 'methodAndClassNamePatternGroupOrDefault', '([\\s\\S]*)\\((.*)\\)', 'testBooleanWithNoValue(org.eclipse.jgit.lib.ConfigTest)')","[70041, 70786]"
"('FastIgnoreRule.java', 'org.eclipse.jgit.ignore.FastIgnoreRule', 'isMatch', '[\\p{javaDigit}]', '۹')",[100717]
"('URIish.java', 'org.eclipse.jgit.transport.URIish', '<init>', '^(file):([\\\\/](?![\\\\/])((?:[A-Za-z]:)?[\\\\/]?(?:(?:[^\\\\/]+[\\\\/]+)*[^\\\\/]+[\\\\/]*)))$', 'ssh://l usr\\example.com@1.2.3.4//')","[222267, 222451]"
"('URIish.java', 'org.eclipse.jgit.transport.URIish', '<init>', '^([a-z][a-z0-9+-]+)://(?:(?:([^/:@]+)(?::([^\\\\/]+))?@)?((?:[^\\\\/:]+)|(?:\\[[0-9a-f:]+\\]))(?::(\\d+))?((?:/~(?:[^\\\\/]+))?[\\\\/]))?(.+)?$', 'ssh+git://[::1]//')","[238114, 238298, 239218, 239402, 240322, 240506]"
"('Description.java', 'org.junit.runner.Description', 'methodAndClassNamePatternGroupOrDefault', '([\\s\\S]*)\\((.*)\\)', 'org.eclipse.jgit.transport.URIishTest')","[188149, 253113]"
"('Description.java', 'org.junit.runner.Description', 'methodAndClassNamePatternGroupOrDefault', '([\\s\\S]*)\\((.*)\\)', 'org.eclipse.jgit.revwalk.RevObjectTest')","[178060, 178513]"
"('ChangeIdUtil.java', 'org.eclipse.jgit.util.ChangeIdUtil', 'indexOfChangeId', '(^Change-Id: *I[a-f0-9]{40}$)', 'ftp://example.com/ fixes this')",[36330]
"('Description.java', 'org.junit.runner.Description', 'methodAndClassNamePatternGroupOrDefault', '([\\s\\S]*)\\((.*)\\)', 'testGraphGroupCase3[OldRule? true](org.eclipse.jgit.ignore.IgnoreRuleSpecialCasesTest)')","[89008, 96092]"
"('Description.java', 'org.junit.runner.Description', 'methodAndClassNamePatternGroupOrDefault', '([\\s\\S]*)\\((.*)\\)', 'testUnsupportedGroupCase1[OldRule? true](org.eclipse.jgit.ignore.IgnoreRuleSpecialCasesTest)')","[90227, 97311]"
"('URIish.java', 'org.eclipse.jgit.transport.URIish', '<init>', '^(file):([\\\\/](?![\\\\/])((?:[A-Za-z]:)?[\\\\/]?(?:(?:[^\\\\/]+[\\\\/]+)*[^\\\\/]+[\\\\/]*)))$', 'https://l usr\\example.com@1.2.3.4/D:/x')","[232295, 232479]"
"('URIish.java', 'org.eclipse.jgit.transport.URIish', '<init>', '^([a-z][a-z0-9+-]+)://(?:(?:([^/:@]+)(?::([^\\\\/]+))?@)?((?:[^\\\\/:]+)|(?:\\[[0-9a-f:]+\\]))(?::(\\d+))?((?:/~(?:[^\\\\/]+))?[\\\\/]))?(.+)?$', 'http://l usr\\example.com@1.2.3.4//')","[228914, 229098]"
"('Description.java', 'org.junit.runner.Description', 'methodAndClassNamePatternGroupOrDefault', '([\\s\\S]*)\\((.*)\\)', 'testRemoveEndOfList(org.eclipse.jgit.util.RefListTest)')","[19970, 20462]"
"('Description.java', 'org.junit.runner.Description', 'methodAndClassNamePatternGroupOrDefault', '([\\s\\S]*)\\((.*)\\)', 'org.eclipse.jgit.internal.storage.file.PackReverseIndexTest')","[116105, 116300]"
"('Description.java', 'org.junit.runner.Description', 'methodAndClassNamePatternGroupOrDefault', '([\\s\\S]*)\\((.*)\\)', 'testGetValidWithSlashDotGitHumanishName(org.eclipse.jgit.transport.URIishTest)')","[188464, 189842]"
"('Description.java', 'org.junit.runner.Description', 'methodAndClassNamePatternGroupOrDefault', '([\\s\\S]*)\\((.*)\\)', 'testEncodeASCII_Number13(org.eclipse.jgit.lib.ConstantsEncodingTest)')","[59991, 60101]"
"('Description.java', 'org.junit.runner.Description', 'methodAndClassNamePatternGroupOrDefault', '([\\s\\S]*)\\((.*)\\)', 'testHasFlags(org.eclipse.jgit.revwalk.DateRevQueueTest)')","[175053, 175207]"
"('URIish.java', 'org.eclipse.jgit.transport.URIish', '<init>', '^(file):([\\\\/](?![\\\\/])((?:[A-Za-z]:)?[\\\\/]?(?:(?:[^\\\\/]+[\\\\/]+)*[^\\\\/]+[\\\\/]*)))$', 'ssh://lusr\\example@[::1]:80/D:\\x')",[210238]
"('URIish.java', 'org.eclipse.jgit.transport.URIish', '<init>', '^(file):([\\\\/](?![\\\\/])((?:[A-Za-z]:)?[\\\\/]?(?:(?:[^\\\\/]+[\\\\/]+)*[^\\\\/]+[\\\\/]*)))$', 'ssh+git://lusr\\example:wtf@[::1]:80//')",[199374]
"('URIish.java', 'org.eclipse.jgit.transport.URIish', '<init>', '^(?:([^/:@]+)(?::([^\\\\/]+))?@)?([^\\\\/:]{2,}):([\\\\/](?:(?:[^\\\\/]+[\\\\/]+)*[^\\\\/]+[\\\\/]*))$', '/tmp/jgit_test_72803735483777762_tmp/tmp_5952370543069622143/.git')","[129339, 129485]"
"('URIish.java', 'org.eclipse.jgit.transport.URIish', '<init>', '^(file):([\\\\/](?![\\\\/])((?:[A-Za-z]:)?[\\\\/]?(?:(?:[^\\\\/]+[\\\\/]+)*[^\\\\/]+[\\\\/]*)))$', 'http://lusr\\example@1.2.3.4//')","[229995, 230179]"
"('Description.java', 'org.junit.runner.Description', 'methodAndClassNamePatternGroupOrDefault', '([\\s\\S]*)\\((.*)\\)', 'test001_ReadBareKey(org.eclipse.jgit.lib.ConfigTest)')","[69768, 70500]"
"('URIish.java', 'org.eclipse.jgit.transport.URIish', '<init>', '^(file):([\\\\/](?![\\\\/])((?:[A-Za-z]:)?[\\\\/]?(?:(?:[^\\\\/]+[\\\\/]+)*[^\\\\/]+[\\\\/]*)))$', 'ssh+git://lusr\\example@example.com:1234/D:/x')",[212584]
"('Description.java', 'org.junit.runner.Description', 'methodAndClassNamePatternGroupOrDefault', '([\\s\\S]*)\\((.*)\\)', 'testDF_NoGap(org.eclipse.jgit.treewalk.NameConflictTreeWalkTest)')","[263009, 263116]"
"('Description.java', 'org.junit.runner.Description', 'methodAndClassNamePatternGroupOrDefault', '([\\s\\S]*)\\((.*)\\)', 'testTimeout_writeBuffer_Timeout(org.eclipse.jgit.util.io.TimeoutOutputStreamTest)')","[24418, 24608]"
"('Description.java', 'org.junit.runner.Description', 'methodAndClassNamePatternGroupOrDefault', '([\\s\\S]*)\\((.*)\\)', 'testOnelinerFollowedByBlank(org.eclipse.jgit.util.ChangeIdUtilTest)')","[31804, 32547]"
"('Description.java', 'org.junit.runner.Description', 'methodAndClassNamePatternGroupOrDefault', '([\\s\\S]*)\\((.*)\\)', 'testMaliciousAbsoluteUNCPathWindows2OnUnix(org.eclipse.jgit.lib.DirCacheCheckoutMaliciousPathTest)')","[66697, 67591]"
"('Description.java', 'org.junit.runner.Description', 'methodAndClassNamePatternGroupOrDefault', '([\\s\\S]*)\\((.*)\\)', 'testInvalidTagNoObject3(org.eclipse.jgit.lib.ObjectCheckerTest)')","[49928, 52484]"
"('Description.java', 'org.junit.runner.Description', 'methodAndClassNamePatternGroupOrDefault', '([\\s\\S]*)\\((.*)\\)', 'org.eclipse.jgit.util.QuotedStringGitPathStyleTest')","[39723, 40606]"
"('URIish.java', 'org.eclipse.jgit.transport.URIish', '<init>', '^(file):([\\\\/](?![\\\\/])((?:[A-Za-z]:)?[\\\\/]?(?:(?:[^\\\\/]+[\\\\/]+)*[^\\\\/]+[\\\\/]*)))$', 'http://me@1.2.3.4:1234/D:\\x')",[214102]
"('Description.java', 'org.junit.runner.Description', 'methodAndClassNamePatternGroupOrDefault', '([\\s\\S]*)\\((.*)\\)', 'testPunctGroupCase3[OldRule? true](org.eclipse.jgit.ignore.IgnoreRuleSpecialCasesTest)')","[90365, 97449]"
"('Description.java', 'org.junit.runner.Description', 'methodAndClassNamePatternGroupOrDefault', '([\\s\\S]*)\\((.*)\\)', 'testWritePack2SizeDeltasVsNoDeltas(org.eclipse.jgit.internal.storage.file.PackWriterTest)')","[118013, 118475]"
"('URIish.java', 'org.eclipse.jgit.transport.URIish', '<init>', '^([a-z][a-z0-9+-]+)://(?:(?:([^/:@]+)(?::([^\\\\/]+))?@)?((?:[^\\\\/:]+)|(?:\\[[0-9a-f:]+\\]))(?::(\\d+))?((?:/~(?:[^\\\\/]+))?[\\\\/]))?(.+)?$', 'ssh://l usr\\example.com:wtf@[::1]:1234//abc')",[194053]
"('Description.java', 'org.junit.runner.Description', 'methodAndClassNamePatternGroupOrDefault', '([\\s\\S]*)\\((.*)\\)', 'testSimpleNoTags(org.eclipse.jgit.transport.RemoteConfigTest)')","[253380, 253937]"
"('Description.java', 'org.junit.runner.Description', 'methodAndClassNamePatternGroupOrDefault', '([\\s\\S]*)\\((.*)\\)', 'testDequote_SoleSq(org.eclipse.jgit.util.QuotedStringBourneStyleTest)')","[38415, 38630]"
"('Description.java', 'org.junit.runner.Description', 'methodAndClassNamePatternGroupOrDefault', '([\\s\\S]*)\\((.*)\\)', 'testSpecialGroupCase1[OldRule? true](org.eclipse.jgit.ignore.IgnoreRuleSpecialCasesTest)')","[88341, 95425]"
"('URIish.java', 'org.eclipse.jgit.transport.URIish', '<init>', '^(?:([^/:@]+)(?::([^\\\\/]+))?@)?([^\\\\/:]{2,}):([\\\\/](?:(?:[^\\\\/]+[\\\\/]+)*[^\\\\/]+[\\\\/]*))$', '/tmp/jgit_test_4807633653944290416_tmp/tmp_5972304591781699420/.git')","[130179, 130325]"
"('URIish.java', 'org.eclipse.jgit.transport.URIish', '<init>', '^(?:([^/:@]+)(?::([^\\\\/]+))?@)?((?:[^\\\\/:]+)|(?:\\[[0-9a-f:]+\\])):((?:(?:/~(?:[^\\\\/]+))[\\\\/])?(?:(?:[^\\\\/]+[\\\\/]+)*[^\\\\/]+[\\\\/]*))$', '/tmp/jgit_test_4639109472720102754_tmp/tmp_8101730606670789681')","[151212, 151347]"
"('Description.java', 'org.junit.runner.Description', 'methodAndClassNamePatternGroupOrDefault', '([\\s\\S]*)\\((.*)\\)', 'testStopOnConflictAndSkipNoConflict(org.eclipse.jgit.api.RebaseCommandTest)')","[132356, 133888]"
"('FastIgnoreRule.java', 'org.eclipse.jgit.ignore.FastIgnoreRule', 'isMatch', '[\\p{Alnum}]', 'a')",[102227]
"('Description.java', 'org.junit.runner.Description', 'methodAndClassNamePatternGroupOrDefault', '([\\s\\S]*)\\((.*)\\)', 'testBatchRefUpdateConflictThanksToDelete(org.eclipse.jgit.internal.storage.file.RefDirectoryTest)')","[110782, 111955]"
"('Description.java', 'org.junit.runner.Description', 'methodAndClassNamePatternGroupOrDefault', '([\\s\\S]*)\\((.*)\\)', 'testKeyIsPrefixOfFilter(org.eclipse.jgit.treewalk.filter.PathFilterGroupTest)')","[266349, 266503]"
"('Description.java', 'org.junit.runner.Description', 'methodAndClassNamePatternGroupOrDefault', '([\\s\\S]*)\\((.*)\\)', 'testBlankGroupCase2[OldRule? false](org.eclipse.jgit.ignore.IgnoreRuleSpecialCasesTest)')","[87423, 94528]"
"('Description.java', 'org.junit.runner.Description', 'methodAndClassNamePatternGroupOrDefault', '([\\s\\S]*)\\((.*)\\)', 'testComparatorReduceCommonStartButLastLineNoEol(org.eclipse.jgit.diff.RawTextTest)')","[10768, 11044]"
"('URIish.java', 'org.eclipse.jgit.transport.URIish', '<init>', '^(file):([\\\\/](?![\\\\/])((?:[A-Za-z]:)?[\\\\/]?(?:(?:[^\\\\/]+[\\\\/]+)*[^\\\\/]+[\\\\/]*)))$', 'file:/tmp/jgit_test_6721186325767818022_tmp/tmp_8758045609552187131/.git/')",[58205]
"('URIish.java', 'org.eclipse.jgit.transport.URIish', '<init>', '^(file):([\\\\/](?![\\\\/])((?:[A-Za-z]:)?[\\\\/]?(?:(?:[^\\\\/]+[\\\\/]+)*[^\\\\/]+[\\\\/]*)))$', 'ssh://l usr\\example.com:wtf@[::1]:80//')",[194168]
"('URIish.java', 'org.eclipse.jgit.transport.URIish', '<init>', '^([a-z][a-z0-9+-]+)://(?:(?:([^/:@]+)(?::([^\\\\/]+))?@)?((?:[^\\\\/:]+)|(?:\\[[0-9a-f:]+\\]))(?::(\\d+))?((?:/~(?:[^\\\\/]+))?[\\\\/]))?(.+)?$', 'ssh+git://lusr\\example:wtf@[::1]:1234//')",[199213]
"('URIish.java', 'org.eclipse.jgit.transport.URIish', '<init>', '^(?:([^/:@]+)(?::([^\\\\/]+))?@)?([^\\\\/:]{2,}):([\\\\/](?:(?:[^\\\\/]+[\\\\/]+)*[^\\\\/]+[\\\\/]*))$', 'example.com:/some/p ath')","[251040, 251132]"
"('Description.java', 'org.junit.runner.Description', 'methodAndClassNamePatternGroupOrDefault', '([\\s\\S]*)\\((.*)\\)', 'crissCrossMerge_nonmergeable(org.eclipse.jgit.merge.RecursiveMergerTest)')","[15078, 15226]"
"('Description.java', 'org.junit.runner.Description', 'methodAndClassNamePatternGroupOrDefault', '([\\s\\S]*)\\((.*)\\)', 'testOnlyOption_f1_3_c(org.eclipse.jgit.api.CommitOnlyTest)')","[134689, 136723]"
"('Description.java', 'org.junit.runner.Description', 'methodAndClassNamePatternGroupOrDefault', '([\\s\\S]*)\\((.*)\\)', 'org.eclipse.jgit.submodule.SubmoduleStatusTest')","[18697, 19021]"
"('Description.java', 'org.junit.runner.Description', 'methodAndClassNamePatternGroupOrDefault', '([\\s\\S]*)\\((.*)\\)', 'testOnlyOption_f1_2_b(org.eclipse.jgit.api.CommitOnlyTest)')","[134563, 136591]"
"('URIish.java', 'org.eclipse.jgit.transport.URIish', '<init>', '^(file):([\\\\/](?![\\\\/])((?:[A-Za-z]:)?[\\\\/]?(?:(?:[^\\\\/]+[\\\\/]+)*[^\\\\/]+[\\\\/]*)))$', 'http://lusr\\example:wtf@1.2.3.4:80//')",[202318]
"('Description.java', 'org.junit.runner.Description', 'methodAndClassNamePatternGroupOrDefault', '([\\s\\S]*)\\((.*)\\)', 'testBuilder_Remove(org.eclipse.jgit.util.RefListTest)')","[19823, 20308]"
"('Description.java', 'org.junit.runner.Description', 'methodAndClassNamePatternGroupOrDefault', '([\\s\\S]*)\\((.*)\\)', 'testDequote_LoneBackslash(org.eclipse.jgit.util.QuotedStringBourneUserPathStyleTest)')","[28871, 29127]"
"('URIish.java', 'org.eclipse.jgit.transport.URIish', '<init>', '^([a-z][a-z0-9+-]+)://(?:(?:([^/:@]+)(?::([^\\\\/]+))?@)?((?:[^\\\\/:]+)|(?:\\[[0-9a-f:]+\\]))(?::(\\d+))?((?:/~(?:[^\\\\/]+))?[\\\\/]))?(.+)?$', 'http://lusr\\example@example.com:80/D:/x')",[216103]
"('Description.java', 'org.junit.runner.Description', 'methodAndClassNamePatternGroupOrDefault', '([\\s\\S]*)\\((.*)\\)', 'testSeparatorParsing(org.eclipse.jgit.transport.OpenSshConfigTest)')","[195932, 196299]"
"('URIish.java', 'org.eclipse.jgit.transport.URIish', '<init>', '^(file):([\\\\/](?![\\\\/])((?:[A-Za-z]:)?[\\\\/]?(?:(?:[^\\\\/]+[\\\\/]+)*[^\\\\/]+[\\\\/]*)))$', 'ssh://l usr\\example.com:wtf@1.2.3.4:1234//')",[193616]
"('Description.java', 'org.junit.runner.Description', 'methodAndClassNamePatternGroupOrDefault', '([\\s\\S]*)\\((.*)\\)', 'checkMergeEqualTreesWithoutIndex(org.eclipse.jgit.merge.ResolveMergerTest)')","[12843, 13170]"
"('Description.java', 'org.junit.runner.Description', 'methodAndClassNamePatternGroupOrDefault', '([\\s\\S]*)\\((.*)\\)', 'testWhole_SmallObject(org.eclipse.jgit.internal.storage.file.PackFileTest)')","[122557, 122645]"
"('Description.java', 'org.junit.runner.Description', 'methodAndClassNamePatternGroupOrDefault', '([\\s\\S]*)\\((.*)\\)', 'testDelete(org.eclipse.jgit.api.BranchCommandTest)')","[128863, 129191]"
"('Description.java', 'org.junit.runner.Description', 'methodAndClassNamePatternGroupOrDefault', '([\\s\\S]*)\\((.*)\\)', 'LOCAL(org.eclipse.jgit.util.GitDateFormatterTest)')","[26129, 26325]"
"('Description.java', 'org.junit.runner.Description', 'methodAndClassNamePatternGroupOrDefault', '([\\s\\S]*)\\((.*)\\)', 'testSimplePatternsDoNotMatch[OldRule? true](org.eclipse.jgit.ignore.FastIgnoreRuleTest)')","[77608, 78344]"
"('Description.java', 'org.junit.runner.Description', 'methodAndClassNamePatternGroupOrDefault', '([\\s\\S]*)\\((.*)\\)', 'org.eclipse.jgit.internal.storage.file.GcDirCacheSavesObjectsTest')","[113059, 113485]"
"('Description.java', 'org.junit.runner.Description', 'methodAndClassNamePatternGroupOrDefault', '([\\s\\S]*)\\((.*)\\)', 'org.eclipse.jgit.nls.NLSTest')","[40873, 41068]"
"('Description.java', 'org.junit.runner.Description', 'methodAndClassNamePatternGroupOrDefault', '([\\s\\S]*)\\((.*)\\)', 'testReadString5(org.eclipse.jgit.transport.PacketLineInTest)')","[184710, 185259]"
"('FastIgnoreRule.java', 'org.eclipse.jgit.ignore.FastIgnoreRule', 'isMatch', '[a]', 'c')","[80700, 80754, 80808, 80889]"
"('Description.java', 'org.junit.runner.Description', 'methodAndClassNamePatternGroupOrDefault', '([\\s\\S]*)\\((.*)\\)', 'testCreateFileHeader_Delete(org.eclipse.jgit.diff.DiffFormatterTest)')","[3076, 3538]"
"('Description.java', 'org.junit.runner.Description', 'methodAndClassNamePatternGroupOrDefault', '([\\s\\S]*)\\((.*)\\)', 'test006_addDeepTree(org.eclipse.jgit.lib.T0002_TreeTest)')","[58738, 59046]"
"('Description.java', 'org.junit.runner.Description', 'methodAndClassNamePatternGroupOrDefault', '([\\s\\S]*)\\((.*)\\)', 'testFilePathSimpleCase[OldRule? true](org.eclipse.jgit.ignore.IgnoreRuleSpecialCasesTest)')","[89077, 96161]"
"('FastIgnoreRule.java', 'org.eclipse.jgit.ignore.FastIgnoreRule', 'isMatch', '[a\\]]', ']')",[102799]
"('Description.java', 'org.junit.runner.Description', 'methodAndClassNamePatternGroupOrDefault', '([\\s\\S]*)\\((.*)\\)', 'testDeleteFile(org.eclipse.jgit.diff.HistogramDiffTest)')","[7059, 7736]"
"('FastIgnoreRule.java', 'org.eclipse.jgit.ignore.FastIgnoreRule', 'isMatch', '.*\\.st.', 'test.sta1')",[104477]
"('URIish.java', 'org.eclipse.jgit.transport.URIish', '<init>', '^(file):([\\\\/](?![\\\\/])((?:[A-Za-z]:)?[\\\\/]?(?:(?:[^\\\\/]+[\\\\/]+)*[^\\\\/]+[\\\\/]*)))$', 'ssh+git://lusr\\example@[::1]:1234/D:\\x')",[213366]
"('URIish.java', 'org.eclipse.jgit.transport.URIish', '<init>', '^([a-z][a-z0-9+-]+)://(?:(?:([^/:@]+)(?::([^\\\\/]+))?@)?((?:[^\\\\/:]+)|(?:\\[[0-9a-f:]+\\]))(?::(\\d+))?((?:/~(?:[^\\\\/]+))?[\\\\/]))?(.+)?$', '/a/b/c//')",[252469]
"('Description.java', 'org.junit.runner.Description', 'methodAndClassNamePatternGroupOrDefault', '([\\s\\S]*)\\((.*)\\)', 'testEncodeInt16(org.eclipse.jgit.util.NBTest)')","[39156, 39330]"
"('Description.java', 'org.junit.runner.Description', 'methodAndClassNamePatternGroupOrDefault', '([\\s\\S]*)\\((.*)\\)', 'testFileInFolderCommittedChangedNotModified(org.eclipse.jgit.treewalk.filter.IndexDiffFilterTest)')","[264758, 265585]"
"('URIish.java', 'org.eclipse.jgit.transport.URIish', '<init>', '^(?:([^/:@]+)(?::([^\\\\/]+))?@)?([^\\\\/:]{2,}):([\\\\/](?:(?:[^\\\\/]+[\\\\/]+)*[^\\\\/]+[\\\\/]*))$', '/tmp/jgit_test_8115236347897594923_tmp/tmp_2639625294261366337.git')",[183997]
"('URIish.java', 'org.eclipse.jgit.transport.URIish', '<init>', '^(file):([\\\\/](?![\\\\/])((?:[A-Za-z]:)?[\\\\/]?(?:(?:[^\\\\/]+[\\\\/]+)*[^\\\\/]+[\\\\/]*)))$', 'https://me@[::1]:80//')",[217851]
"('Description.java', 'org.junit.runner.Description', 'methodAndClassNamePatternGroupOrDefault', '([\\s\\S]*)\\((.*)\\)', 'testWriteHEAD(org.eclipse.jgit.transport.BundleWriterTest)')","[185486, 185550]"
"('Description.java', 'org.junit.runner.Description', 'methodAndClassNamePatternGroupOrDefault', '([\\s\\S]*)\\((.*)\\)', 'testGetText_BothISO88591(org.eclipse.jgit.patch.GetTextTest)')","[1645, 1732]"
"('URIish.java', 'org.eclipse.jgit.transport.URIish', '<init>', '^(file):([\\\\/](?![\\\\/])((?:[A-Za-z]:)?[\\\\/]?(?:(?:[^\\\\/]+[\\\\/]+)*[^\\\\/]+[\\\\/]*)))$', 'file:///tmp/jgit_test_3353191491242534664_tmp/tmp_6009797392716155554/.git/')",[123601]
"('Description.java', 'org.junit.runner.Description', 'methodAndClassNamePatternGroupOrDefault', '([\\s\\S]*)\\((.*)\\)', 'testWriteString3(org.eclipse.jgit.transport.PacketLineOutTest)')","[191728, 191904]"
"('URIish.java', 'org.eclipse.jgit.transport.URIish', '<init>', '^(file):([\\\\/](?![\\\\/])((?:[A-Za-z]:)?[\\\\/]?(?:(?:[^\\\\/]+[\\\\/]+)*[^\\\\/]+[\\\\/]*)))$', 'file:///tmp/jgit_test_9089196078256996576_tmp/tmp_5124154523333350298/.git/')",[63783]
"('URIish.java', 'org.eclipse.jgit.transport.URIish', '<init>', '^([a-z][a-z0-9+-]+)://(?:(?:([^/:@]+)(?::([^\\\\/]+))?@)?((?:[^\\\\/:]+)|(?:\\[[0-9a-f:]+\\]))(?::(\\d+))?((?:/~(?:[^\\\\/]+))?[\\\\/]))?(.+)?$', 'http://example.com/D:\\x')","[240828, 241012, 241932, 242116, 243036, 243220]"
"('URIish.java', 'org.eclipse.jgit.transport.URIish', '<init>', '^(file):([\\\\/](?![\\\\/])((?:[A-Za-z]:)?[\\\\/]?(?:(?:[^\\\\/]+[\\\\/]+)*[^\\\\/]+[\\\\/]*)))$', 'file:///tmp/jgit_test_8180456019660967267_tmp/tmp_7389162459572827462')",[258991]
"('URIish.java', 'org.eclipse.jgit.transport.URIish', '<init>', '^([a-z][a-z0-9+-]+)://(?:(?:([^/:@]+)(?::([^\\\\/]+))?@)?((?:[^\\\\/:]+)|(?:\\[[0-9a-f:]+\\]))(?::(\\d+))?((?:/~(?:[^\\\\/]+))?[\\\\/]))?(.+)?$', 'file:///tmp/jgit_test_4236178983154660084_tmp/tmp_6596808175431128322/.git/')",[63304]
"('URIish.java', 'org.eclipse.jgit.transport.URIish', '<init>', '^([a-z][a-z0-9+-]+)://(?:(?:([^/:@]+)(?::([^\\\\/]+))?@)?((?:[^\\\\/:]+)|(?:\\[[0-9a-f:]+\\]))(?::(\\d+))?((?:/~(?:[^\\\\/]+))?[\\\\/]))?(.+)?$', 'http://l usr\\example.com@1.2.3.4:80/D:/x')",[215367]
"('Description.java', 'org.junit.runner.Description', 'methodAndClassNamePatternGroupOrDefault', '([\\s\\S]*)\\((.*)\\)', 'testClear(org.eclipse.jgit.revwalk.AlwaysEmptyRevQueueTest)')","[175905, 175969]"
"('Description.java', 'org.junit.runner.Description', 'methodAndClassNamePatternGroupOrDefault', '([\\s\\S]*)\\((.*)\\)', 'testMixedGroupCase6(org.eclipse.jgit.fnmatch.FileNameMatcherTest)')","[41839, 45118]"
"('Description.java', 'org.junit.runner.Description', 'methodAndClassNamePatternGroupOrDefault', '([\\s\\S]*)\\((.*)\\)', 'workingDirectoryDelete(org.eclipse.jgit.api.StashApplyCommandTest)')","[142750, 143313]"
"('Description.java', 'org.junit.runner.Description', 'methodAndClassNamePatternGroupOrDefault', '([\\s\\S]*)\\((.*)\\)', 'testRecursiveTreeWalk(org.eclipse.jgit.treewalk.filter.IndexDiffFilterTest)')","[264191, 264991]"
"('Description.java', 'org.junit.runner.Description', 'methodAndClassNamePatternGroupOrDefault', '([\\s\\S]*)\\((.*)\\)', 'org.eclipse.jgit.api.TagCommandTest')","[157406, 158114]"
"('Description.java', 'org.junit.runner.Description', 'methodAndClassNamePatternGroupOrDefault', '([\\s\\S]*)\\((.*)\\)', 'testOnlyOption_f1_1_f2_14_b(org.eclipse.jgit.api.CommitOnlyTest)')","[136243, 138351]"
"('URIish.java', 'org.eclipse.jgit.transport.URIish', '<init>', '^(?:([^/:@]+)(?::([^\\\\/]+))?@)?((?:[^\\\\/:]+)|(?:\\[[0-9a-f:]+\\])):((?:(?:/~(?:[^\\\\/]+))[\\\\/])?(?:(?:[^\\\\/]+[\\\\/]+)*[^\\\\/]+[\\\\/]*))$', '/tmp/jgit_test_4807633653944290416_tmp/tmp_5972304591781699420/.git')","[130153, 130295]"
"('Description.java', 'org.junit.runner.Description', 'methodAndClassNamePatternGroupOrDefault', '([\\s\\S]*)\\((.*)\\)', 'testSingleDeletion(org.eclipse.jgit.api.MergeCommandTest)')","[126517, 127439]"
"('Description.java', 'org.junit.runner.Description', 'methodAndClassNamePatternGroupOrDefault', '([\\s\\S]*)\\((.*)\\)', 'testFastForwardOnlyNotPossible(org.eclipse.jgit.api.MergeCommandTest)')","[126895, 127835]"
"('Description.java', 'org.junit.runner.Description', 'methodAndClassNamePatternGroupOrDefault', '([\\s\\S]*)\\((.*)\\)', 'DEFAULT(org.eclipse.jgit.util.GitDateFormatterTest)')","[26024, 26215]"
"('Description.java', 'org.junit.runner.Description', 'methodAndClassNamePatternGroupOrDefault', '([\\s\\S]*)\\((.*)\\)', 'testArrayConstructor(org.eclipse.jgit.util.io.UnionInputStreamTest)')","[25287, 25501]"
"('Description.java', 'org.junit.runner.Description', 'methodAndClassNamePatternGroupOrDefault', '([\\s\\S]*)\\((.*)\\)', 'testAsteriskDot[OldRule? false](org.eclipse.jgit.ignore.FastIgnoreRuleTest)')","[77334, 78091]"
"('FastIgnoreRule.java', 'org.eclipse.jgit.ignore.FastIgnoreRule', 'isMatch', '.r[a-c]', '3ra')",[107480]
"('Description.java', 'org.junit.runner.Description', 'methodAndClassNamePatternGroupOrDefault', '([\\s\\S]*)\\((.*)\\)', 'testDeleteHEADreferencedRef(org.eclipse.jgit.internal.storage.file.RefUpdateTest)')","[120054, 120896]"
"('Description.java', 'org.junit.runner.Description', 'methodAndClassNamePatternGroupOrDefault', '([\\s\\S]*)\\((.*)\\)', 'testCharClass[OldRule? false](org.eclipse.jgit.ignore.FastIgnoreRuleTest)')","[77012, 77769]"
"('Description.java', 'org.junit.runner.Description', 'methodAndClassNamePatternGroupOrDefault', '([\\s\\S]*)\\((.*)\\)', 'testInitBare_DirAndGitDirMustBeEqual(org.eclipse.jgit.api.InitCommandTest)')","[156588, 156778]"
"('Description.java', 'org.junit.runner.Description', 'methodAndClassNamePatternGroupOrDefault', '([\\s\\S]*)\\((.*)\\)', 'testSimplePatternsDoNotMatch[OldRule? false](org.eclipse.jgit.ignore.FastIgnoreRuleTest)')","[77219, 77976]"
"('URIish.java', 'org.eclipse.jgit.transport.URIish', '<init>', '^(file):([\\\\/](?![\\\\/])((?:[A-Za-z]:)?[\\\\/]?(?:(?:[^\\\\/]+[\\\\/]+)*[^\\\\/]+[\\\\/]*)))$', 'file:///tmp/jgit_test_1212230039583698495_tmp/tmp_6808533813290140997.git/')",[5586]
"('URIish.java', 'org.eclipse.jgit.transport.URIish', '<init>', '^([a-z][a-z0-9+-]+)://(?:(?:([^/:@]+)(?::([^\\\\/]+))?@)?((?:[^\\\\/:]+)|(?:\\[[0-9a-f:]+\\]))(?::(\\d+))?((?:/~(?:[^\\\\/]+))?[\\\\/]))?(.+)?$', 'ssh+git://me@example.com/D:/x')","[224222, 224406]"
"('Description.java', 'org.junit.runner.Description', 'methodAndClassNamePatternGroupOrDefault', '([\\s\\S]*)\\((.*)\\)', 'testCheckoutRemoteTrackingWithUpstream(org.eclipse.jgit.api.CheckoutCommandTest)')","[149682, 150229]"
"('Description.java', 'org.junit.runner.Description', 'methodAndClassNamePatternGroupOrDefault', '([\\s\\S]*)\\((.*)\\)', 'testConflicting(org.eclipse.jgit.lib.IndexDiffTest)')","[68979, 69331]"
"('Description.java', 'org.junit.runner.Description', 'methodAndClassNamePatternGroupOrDefault', '([\\s\\S]*)\\((.*)\\)', 'testEmpty_WithPrefix(org.eclipse.jgit.util.RefMapTest)')","[20997, 21467]"
"('Description.java', 'org.junit.runner.Description', 'methodAndClassNamePatternGroupOrDefault', '([\\s\\S]*)\\((.*)\\)', 'testEmptyTagName(org.eclipse.jgit.api.TagCommandTest)')","[157553, 157854]"
"('Description.java', 'org.junit.runner.Description', 'methodAndClassNamePatternGroupOrDefault', '([\\s\\S]*)\\((.*)\\)', 'testBaseEqualsTheirs(org.eclipse.jgit.notes.NoteMapMergerTest)')","[259317, 259675]"
"('Description.java', 'org.junit.runner.Description', 'methodAndClassNamePatternGroupOrDefault', '([\\s\\S]*)\\((.*)\\)', 'testIncompleteRangesInOneGroupCase0[OldRule? true](org.eclipse.jgit.ignore.IgnoreRuleSpecialCasesTest)')","[90480, 97564]"
"('Description.java', 'org.junit.runner.Description', 'methodAndClassNamePatternGroupOrDefault', '([\\s\\S]*)\\((.*)\\)', 'testGetValidWithEmptySlashDotGitHumanishName(org.eclipse.jgit.transport.URIishTest)')","[189491, 190766]"
"('Description.java', 'org.junit.runner.Description', 'methodAndClassNamePatternGroupOrDefault', '([\\s\\S]*)\\((.*)\\)', 'testMatchesBugId(org.eclipse.jgit.revwalk.FooterLineTest)')","[173612, 174020]"
"('Description.java', 'org.junit.runner.Description', 'methodAndClassNamePatternGroupOrDefault', '([\\s\\S]*)\\((.*)\\)', 'testNotBare_CreateRepositoryFromGitDirOnlyWithBareConfigFalse(org.eclipse.jgit.internal.storage.file.RepositorySetupWorkDirTest)')","[114006, 114266]"
"('Description.java', 'org.junit.runner.Description', 'methodAndClassNamePatternGroupOrDefault', '([\\s\\S]*)\\((.*)\\)', 'testSingleLineMessagesWithSignedOffBy(org.eclipse.jgit.util.ChangeIdUtilTest)')","[32014, 32767]"
"('URIish.java', 'org.eclipse.jgit.transport.URIish', '<init>', '^([a-z][a-z0-9+-]+)://(?:(?:([^/:@]+)(?::([^\\\\/]+))?@)?((?:[^\\\\/:]+)|(?:\\[[0-9a-f:]+\\]))(?::(\\d+))?((?:/~(?:[^\\\\/]+))?[\\\\/]))?(.+)?$', 'http://lusr\\example@example.com//')","[229650, 229834]"
"('URIish.java', 'org.eclipse.jgit.transport.URIish', '<init>', '^([a-z][a-z0-9+-]+)://(?:(?:([^/:@]+)(?::([^\\\\/]+))?@)?((?:[^\\\\/:]+)|(?:\\[[0-9a-f:]+\\]))(?::(\\d+))?((?:/~(?:[^\\\\/]+))?[\\\\/]))?(.+)?$', 'ssh+git://me@[::1]:80/D:\\x')",[211365]
"('FastIgnoreRule.java', 'org.eclipse.jgit.ignore.FastIgnoreRule', 'isMatch', '[tv]est\\.sta[a-d]', 'test.stae')","[105017, 106247]"
"('URIish.java', 'org.eclipse.jgit.transport.URIish', '<init>', '^([a-z][a-z0-9+-]+)://(?:(?:([^/:@]+)(?::([^\\\\/]+))?@)?((?:[^\\\\/:]+)|(?:\\[[0-9a-f:]+\\]))(?::(\\d+))?((?:/~(?:[^\\\\/]+))?[\\\\/]))?(.+)?$', 'file:///tmp/jgit_test_7381207999529287529_tmp/tmp_7255833410172097346/.git/')",[60284]
"('URIish.java', 'org.eclipse.jgit.transport.URIish', '<init>', '^(file):([\\\\/](?![\\\\/])((?:[A-Za-z]:)?[\\\\/]?(?:(?:[^\\\\/]+[\\\\/]+)*[^\\\\/]+[\\\\/]*)))$', 'file:/tmp/jgit_test_9003108192405825140_tmp/tmp_6355030264635806042/.git/')",[63026]
"('Description.java', 'org.junit.runner.Description', 'methodAndClassNamePatternGroupOrDefault', '([\\s\\S]*)\\((.*)\\)', 'testValidTagHasNoTaggerHeader(org.eclipse.jgit.lib.ObjectCheckerTest)')","[50201, 52770]"
"('URIish.java', 'org.eclipse.jgit.transport.URIish', '<init>', '^(file):([\\\\/](?![\\\\/])((?:[A-Za-z]:)?[\\\\/]?(?:(?:[^\\\\/]+[\\\\/]+)*[^\\\\/]+[\\\\/]*)))$', 'ssh://l usr\\example.com:wtf@[::1]:80/D:\\x')",[194306]
"('Description.java', 'org.junit.runner.Description', 'methodAndClassNamePatternGroupOrDefault', '([\\s\\S]*)\\((.*)\\)', 'testValidTree2(org.eclipse.jgit.lib.ObjectCheckerTest)')","[48794, 51296]"
"('Description.java', 'org.junit.runner.Description', 'methodAndClassNamePatternGroupOrDefault', '([\\s\\S]*)\\((.*)\\)', 'fetchShouldAutoFollowTagForFetchedObjects(org.eclipse.jgit.api.FetchCommandTest)')","[124797, 124927]"
"('URIish.java', 'org.eclipse.jgit.transport.URIish', '<init>', '^([\\\\/]?((?:[A-Za-z]:)?[\\\\/]?(?:(?:[^\\\\/]+[\\\\/]+)*[^\\\\/]+[\\\\/]*)))$', '/tmp/jgit_test_4436388230543018363_tmp/tmp_2933209461077420112.git')","[186130, 186387]"
"('URIish.java', 'org.eclipse.jgit.transport.URIish', '<init>', '^([a-z][a-z0-9+-]+)://(?:(?:([^/:@]+)(?::([^\\\\/]+))?@)?((?:[^\\\\/:]+)|(?:\\[[0-9a-f:]+\\]))(?::(\\d+))?((?:/~(?:[^\\\\/]+))?[\\\\/]))?(.+)?$', 'ssh://l usr\\example.com:wtf@1.2.3.4:1234/D:/x')",[193731]
"('Description.java', 'org.junit.runner.Description', 'methodAndClassNamePatternGroupOrDefault', '([\\s\\S]*)\\((.*)\\)', 'testBug368927(org.eclipse.jgit.revplot.PlotCommitListTest)')","[169322, 169640]"
"('Description.java', 'org.junit.runner.Description', 'methodAndClassNamePatternGroupOrDefault', '([\\s\\S]*)\\((.*)\\)', 'org.eclipse.jgit.lib.SquashCommitMsgTest')","[54331, 54397]"
"('FastIgnoreRule.java', 'org.eclipse.jgit.ignore.FastIgnoreRule', 'isMatch', '[^\\]]', ']')",[99077]
"('Description.java', 'org.junit.runner.Description', 'methodAndClassNamePatternGroupOrDefault', '([\\s\\S]*)\\((.*)\\)', 'testXDigitGroupCase4(org.eclipse.jgit.fnmatch.FileNameMatcherTest)')","[44023, 47406]"
"('FastIgnoreRule.java', 'org.eclipse.jgit.ignore.FastIgnoreRule', 'isMatch', '[b-ce-e]', 'd')",[102539]
"('URIish.java', 'org.eclipse.jgit.transport.URIish', 'getHumanishName', '^([\\\\/]?((?:[A-Za-z]:)?[\\\\/]?(?:(?:[^\\\\/]+[\\\\/]+)*[^\\\\/]+[\\\\/]*)))$', '/a/b/c/')",[248924]
"('Description.java', 'org.junit.runner.Description', 'methodAndClassNamePatternGroupOrDefault', '([\\s\\S]*)\\((.*)\\)', 'testCombinedRangesInOneGroupCase2[OldRule? false](org.eclipse.jgit.ignore.IgnoreRuleSpecialCasesTest)')","[85100, 92205]"
"('Description.java', 'org.junit.runner.Description', 'methodAndClassNamePatternGroupOrDefault', '([\\s\\S]*)\\((.*)\\)', 'testCherryPickConflictMarkers(org.eclipse.jgit.api.CherryPickCommandTest)')","[168299, 168558]"
"('URIish.java', 'org.eclipse.jgit.transport.URIish', '<init>', '^(file):([\\\\/](?![\\\\/])((?:[A-Za-z]:)?[\\\\/]?(?:(?:[^\\\\/]+[\\\\/]+)*[^\\\\/]+[\\\\/]*)))$', 'http://lusr\\example@[::1]/D:\\x')","[230501, 230685]"
"('Description.java', 'org.junit.runner.Description', 'methodAndClassNamePatternGroupOrDefault', '([\\s\\S]*)\\((.*)\\)', 'testLooseDelete(org.eclipse.jgit.internal.storage.file.RefUpdateTest)')","[119844, 120676]"
"('Description.java', 'org.junit.runner.Description', 'methodAndClassNamePatternGroupOrDefault', '([\\s\\S]*)\\((.*)\\)', 'testTag(org.eclipse.jgit.merge.MergeMessageFormatterTest)')","[16098, 16416]"
"('Description.java', 'org.junit.runner.Description', 'methodAndClassNamePatternGroupOrDefault', '([\\s\\S]*)\\((.*)\\)', 'testOneEntry_Forward(org.eclipse.jgit.treewalk.CanonicalTreeParserTest)')","[261399, 261721]"
"('Description.java', 'org.junit.runner.Description', 'methodAndClassNamePatternGroupOrDefault', '([\\s\\S]*)\\((.*)\\)', 'testChangeIdAfterBugOrIssue(org.eclipse.jgit.util.ChangeIdUtilTest)')","[31951, 32701]"
"('URIish.java', 'org.eclipse.jgit.transport.URIish', '<init>', '^([a-z][a-z0-9+-]+)://(?:(?:([^/:@]+)(?::([^\\\\/]+))?@)?((?:[^\\\\/:]+)|(?:\\[[0-9a-f:]+\\]))(?::(\\d+))?((?:/~(?:[^\\\\/]+))?[\\\\/]))?(.+)?$', 'ssh://lusr\\example:wtf@1.2.3.4:1234/D:/x')",[194835]
"('URIish.java', 'org.eclipse.jgit.transport.URIish', '<init>', '^([a-z][a-z0-9+-]+)://(?:(?:([^/:@]+)(?::([^\\\\/]+))?@)?((?:[^\\\\/:]+)|(?:\\[[0-9a-f:]+\\]))(?::(\\d+))?((?:/~(?:[^\\\\/]+))?[\\\\/]))?(.+)?$', 'https://me:wtf@[::1]:80//abc')",[204649]
"('Description.java', 'org.junit.runner.Description', 'methodAndClassNamePatternGroupOrDefault', '([\\s\\S]*)\\((.*)\\)', 'testTwoSameSameAssumeValidDifferentContent(org.eclipse.jgit.treewalk.filter.InterIndexDiffFilterTest)')","[263980, 264090]"
"('Description.java', 'org.junit.runner.Description', 'methodAndClassNamePatternGroupOrDefault', '([\\s\\S]*)\\((.*)\\)', 'testDegenerate_ReplaceMiddle(org.eclipse.jgit.diff.MyersDiffTest)')","[8896, 9334]"
"('Description.java', 'org.junit.runner.Description', 'methodAndClassNamePatternGroupOrDefault', '([\\s\\S]*)\\((.*)\\)', 'testInvalidCommitInvalidTree2(org.eclipse.jgit.lib.ObjectCheckerTest)')","[48584, 51076]"
"('URIish.java', 'org.eclipse.jgit.transport.URIish', '<init>', '^(?:([^/:@]+)(?::([^\\\\/]+))?@)?((?:[^\\\\/:]+)|(?:\\[[0-9a-f:]+\\])):((?:(?:/~(?:[^\\\\/]+))[\\\\/])?(?:(?:[^\\\\/]+[\\\\/]+)*[^\\\\/]+[\\\\/]*))$', '/tmp/jgit_test_5935307310089394202_tmp/tmp_8096884284597820746')","[146169, 146304, 146452, 146661]"
"('Description.java', 'org.junit.runner.Description', 'methodAndClassNamePatternGroupOrDefault', '([\\s\\S]*)\\((.*)\\)', 'testRejectDotAtEndOnWindows(org.eclipse.jgit.lib.ObjectCheckerTest)')","[50117, 52682]"
"('URIish.java', 'org.eclipse.jgit.transport.URIish', '<init>', '^([a-z][a-z0-9+-]+)://(?:(?:([^/:@]+)(?::([^\\\\/]+))?@)?((?:[^\\\\/:]+)|(?:\\[[0-9a-f:]+\\]))(?::(\\d+))?((?:/~(?:[^\\\\/]+))?[\\\\/]))?(.+)?$', 'http://lusr\\example:wtf@[::1]:1234//')",[202525]
"('Description.java', 'org.junit.runner.Description', 'methodAndClassNamePatternGroupOrDefault', '([\\s\\S]*)\\((.*)\\)', 'testCacheRegisterOpen(org.eclipse.jgit.lib.RepositoryCacheTest)')","[60368, 60499]"
"('Description.java', 'org.junit.runner.Description', 'methodAndClassNamePatternGroupOrDefault', '([\\s\\S]*)\\((.*)\\)', 'testAlias_InheritPreferredAuthentications(org.eclipse.jgit.transport.OpenSshConfigTest)')","[196079, 196453]"
"('URIish.java', 'org.eclipse.jgit.transport.URIish', '<init>', '^([a-z][a-z0-9+-]+)://(?:(?:([^/:@]+)(?::([^\\\\/]+))?@)?((?:[^\\\\/:]+)|(?:\\[[0-9a-f:]+\\]))(?::(\\d+))?((?:/~(?:[^\\\\/]+))?[\\\\/]))?(.+)?$', 'git://abc.git')",[191996]
"('Description.java', 'org.junit.runner.Description', 'methodAndClassNamePatternGroupOrDefault', '([\\s\\S]*)\\((.*)\\)', 'org.eclipse.jgit.ignore.IgnoreNodeTest')","[108040, 108665]"
"('Description.java', 'org.junit.runner.Description', 'methodAndClassNamePatternGroupOrDefault', '([\\s\\S]*)\\((.*)\\)', 'testParse_ConfigCaseInsensitive(org.eclipse.jgit.patch.PatchTest)')","[2148, 2302]"
"('Description.java', 'org.junit.runner.Description', 'methodAndClassNamePatternGroupOrDefault', '([\\s\\S]*)\\((.*)\\)', 'testOnlyOption_f1_8_d(org.eclipse.jgit.api.CommitOnlyTest)')","[135235, 137295]"
"('URIish.java', 'org.eclipse.jgit.transport.URIish', '<init>', '^(file):([\\\\/](?![\\\\/])((?:[A-Za-z]:)?[\\\\/]?(?:(?:[^\\\\/]+[\\\\/]+)*[^\\\\/]+[\\\\/]*)))$', 'http://www.spearce.org/egit.git')","[255275, 256048, 256098, 256438, 256612, 256661, 256956, 257731, 257881, 258006]"
"('URIish.java', 'org.eclipse.jgit.transport.URIish', '<init>', '^(file):([\\\\/](?![\\\\/])((?:[A-Za-z]:)?[\\\\/]?(?:(?:[^\\\\/]+[\\\\/]+)*[^\\\\/]+[\\\\/]*)))$', 'file:/tmp/jgit_test_7469688953466028795_tmp/tmp_5564136039387254100/.git/')",[14810]
"('Description.java', 'org.junit.runner.Description', 'methodAndClassNamePatternGroupOrDefault', '([\\s\\S]*)\\((.*)\\)', 'testPunctGroupCase0[OldRule? true](org.eclipse.jgit.ignore.IgnoreRuleSpecialCasesTest)')","[90296, 97380]"
"('Description.java', 'org.junit.runner.Description', 'methodAndClassNamePatternGroupOrDefault', '([\\s\\S]*)\\((.*)\\)', 'testReaderResolve(org.eclipse.jgit.internal.storage.dfs.DfsInserterTest)')","[109463, 109570]"
"('Description.java', 'org.junit.runner.Description', 'methodAndClassNamePatternGroupOrDefault', '([\\s\\S]*)\\((.*)\\)', 'archiveHeadSpecificPath(org.eclipse.jgit.api.ArchiveCommandTest)')","[158234, 158322]"
"('URIish.java', 'org.eclipse.jgit.transport.URIish', '<init>', '^(file):([\\\\/](?![\\\\/])((?:[A-Za-z]:)?[\\\\/]?(?:(?:[^\\\\/]+[\\\\/]+)*[^\\\\/]+[\\\\/]*)))$', 'http://me@example.com:1234/D:/x')",[213688]
"('URIish.java', 'org.eclipse.jgit.transport.URIish', '<init>', '^(file):([\\\\/](?![\\\\/])((?:[A-Za-z]:)?[\\\\/]?(?:(?:[^\\\\/]+[\\\\/]+)*[^\\\\/]+[\\\\/]*)))$', 'ssh://me:wtf@example.com:80/D:/x')",[192318]
"('URIish.java', 'org.eclipse.jgit.transport.URIish', '<init>', '^([a-z][a-z0-9+-]+)://(?:(?:([^/:@]+)(?::([^\\\\/]+))?@)?((?:[^\\\\/:]+)|(?:\\[[0-9a-f:]+\\]))(?::(\\d+))?((?:/~(?:[^\\\\/]+))?[\\\\/]))?(.+)?$', 'https://me@[::1]:80//abc')",[217920]
"('Description.java', 'org.junit.runner.Description', 'methodAndClassNamePatternGroupOrDefault', '([\\s\\S]*)\\((.*)\\)', 'testGitProtoUnix(org.eclipse.jgit.transport.URIishTest)')","[189407, 190678]"
"('URIish.java', 'org.eclipse.jgit.transport.URIish', '<init>', '^(file):([\\\\/](?![\\\\/])((?:[A-Za-z]:)?[\\\\/]?(?:(?:[^\\\\/]+[\\\\/]+)*[^\\\\/]+[\\\\/]*)))$', 'file:///tmp/jgit_test_1039595048602069369_tmp/tmp_1779983767005718860/.git/')",[56630]
"('Description.java', 'org.junit.runner.Description', 'methodAndClassNamePatternGroupOrDefault', '([\\s\\S]*)\\((.*)\\)', 'testDequote_RawUTF8(org.eclipse.jgit.util.QuotedStringGitPathStyleTest)')","[39912, 40341]"
"('Description.java', 'org.junit.runner.Description', 'methodAndClassNamePatternGroupOrDefault', '([\\s\\S]*)\\((.*)\\)', 'testAddGrowsWithObjects(org.eclipse.jgit.lib.ObjectIdSubclassMapTest)')","[63941, 64091]"
"('Description.java', 'org.junit.runner.Description', 'methodAndClassNamePatternGroupOrDefault', '([\\s\\S]*)\\((.*)\\)', 'testRemoveCollision2(org.eclipse.jgit.transport.LongMapTest)')","[183595, 183765]"
"('Description.java', 'org.junit.runner.Description', 'methodAndClassNamePatternGroupOrDefault', '([\\s\\S]*)\\((.*)\\)', 'testDirtyFileModeEqualIndexMerge(org.eclipse.jgit.lib.DirCacheCheckoutTest)')","[61839, 62929]"
"('URIish.java', 'org.eclipse.jgit.transport.URIish', '<init>', '^(file):([\\\\/](?![\\\\/])((?:[A-Za-z]:)?[\\\\/]?(?:(?:[^\\\\/]+[\\\\/]+)*[^\\\\/]+[\\\\/]*)))$', 'http://lusr\\example@example.com/D:/x')","[229719, 229903]"
"('URIish.java', 'org.eclipse.jgit.transport.URIish', '<init>', '^([a-z][a-z0-9+-]+)://(?:(?:([^/:@]+)(?::([^\\\\/]+))?@)?((?:[^\\\\/:]+)|(?:\\[[0-9a-f:]+\\]))(?::(\\d+))?((?:/~(?:[^\\\\/]+))?[\\\\/]))?(.+)?$', 'ssh+git://[::1]/D:/x')","[238206, 238390, 239310, 239494, 240414, 240598]"
"('URIish.java', 'org.eclipse.jgit.transport.URIish', '<init>', '^([a-z][a-z0-9+-]+)://(?:(?:([^/:@]+)(?::([^\\\\/]+))?@)?((?:[^\\\\/:]+)|(?:\\[[0-9a-f:]+\\]))(?::(\\d+))?((?:/~(?:[^\\\\/]+))?[\\\\/]))?(.+)?$', 'http://user:secret@pass@host.xy:80/some/path')","[251523, 251569]"
"('Description.java', 'org.junit.runner.Description', 'methodAndClassNamePatternGroupOrDefault', '([\\s\\S]*)\\((.*)\\)', 'testUpdateSmudgedEntries(org.eclipse.jgit.api.CheckoutCommandTest)')","[149598, 150141]"
"('Description.java', 'org.junit.runner.Description', 'methodAndClassNamePatternGroupOrDefault', '([\\s\\S]*)\\((.*)\\)', 'testQuote_NamedEscapes(org.eclipse.jgit.util.QuotedStringBourneStyleTest)')","[38520, 38740]"
"('URIish.java', 'org.eclipse.jgit.transport.URIish', '<init>', '^(file):([\\\\/](?![\\\\/])((?:[A-Za-z]:)?[\\\\/]?(?:(?:[^\\\\/]+[\\\\/]+)*[^\\\\/]+[\\\\/]*)))$', 'http://me:wtf@example.com:1234/D:\\x')",[199696]
"('Description.java', 'org.junit.runner.Description', 'methodAndClassNamePatternGroupOrDefault', '([\\s\\S]*)\\((.*)\\)', 'testNoMatchingAttributes(org.eclipse.jgit.attributes.AttributesNodeWorkingTreeIteratorTest)')","[73292, 73379]"
"('Description.java', 'org.junit.runner.Description', 'methodAndClassNamePatternGroupOrDefault', '([\\s\\S]*)\\((.*)\\)', 'testCloneIsSparseWhenPossible(org.eclipse.jgit.treewalk.filter.NotTreeFilterTest)')","[263663, 263794]"
"('Description.java', 'org.junit.runner.Description', 'methodAndClassNamePatternGroupOrDefault', '([\\s\\S]*)\\((.*)\\)', 'testSpecialGroupCase8(org.eclipse.jgit.fnmatch.FileNameMatcherTest)')","[41524, 44788]"
"('URIish.java', 'org.eclipse.jgit.transport.URIish', '<init>', '^([a-z][a-z0-9+-]+)://(?:(?:([^/:@]+)(?::([^\\\\/]+))?@)?((?:[^\\\\/:]+)|(?:\\[[0-9a-f:]+\\]))(?::(\\d+))?((?:/~(?:[^\\\\/]+))?[\\\\/]))?(.+)?$', 'https://lusr\\example@example.com:80//')",[219898]
"('Description.java', 'org.junit.runner.Description', 'methodAndClassNamePatternGroupOrDefault', '([\\s\\S]*)\\((.*)\\)', 'testSimpleStarCase3[OldRule? false](org.eclipse.jgit.ignore.IgnoreRuleSpecialCasesTest)')","[86342, 93447]"
"('Description.java', 'org.junit.runner.Description', 'methodAndClassNamePatternGroupOrDefault', '([\\s\\S]*)\\((.*)\\)', 'testWordroupCase3(org.eclipse.jgit.fnmatch.FileNameMatcherTest)')","[44170, 47560]"
"('URIish.java', 'org.eclipse.jgit.transport.URIish', '<init>', '^(?:([^/:@]+)(?::([^\\\\/]+))?@)?((?:[^\\\\/:]+)|(?:\\[[0-9a-f:]+\\])):((?:(?:/~(?:[^\\\\/]+))[\\\\/])?(?:(?:[^\\\\/]+[\\\\/]+)*[^\\\\/]+[\\\\/]*))$', '/tmp/jgit_test_8115236347897594923_tmp/tmp_2639625294261366337.git')",[183972]
"('URIish.java', 'org.eclipse.jgit.transport.URIish', '<init>', '^(file):([\\\\/](?![\\\\/])((?:[A-Za-z]:)?[\\\\/]?(?:(?:[^\\\\/]+[\\\\/]+)*[^\\\\/]+[\\\\/]*)))$', '/abc/.git')",[249269]
"('URIish.java', 'org.eclipse.jgit.transport.URIish', '<init>', '^(file):([\\\\/](?![\\\\/])((?:[A-Za-z]:)?[\\\\/]?(?:(?:[^\\\\/]+[\\\\/]+)*[^\\\\/]+[\\\\/]*)))$', '/tmp/jgit_test_9017651431273807895_tmp/tmp_2045899248531600700')","[145229, 145354, 145559, 145768, 145918]"
"('URIish.java', 'org.eclipse.jgit.transport.URIish', '<init>', '^(file):([\\\\/](?![\\\\/])((?:[A-Za-z]:)?[\\\\/]?(?:(?:[^\\\\/]+[\\\\/]+)*[^\\\\/]+[\\\\/]*)))$', 'ssh://l usr\\example.com@1.2.3.4/D:\\x')","[222405, 222589]"
"('URIish.java', 'org.eclipse.jgit.transport.URIish', 'getHumanishName', '^([\\\\/]?((?:[A-Za-z]:)?[\\\\/]?(?:(?:[^\\\\/]+[\\\\/]+)*[^\\\\/]+[\\\\/]*)))$', '/a/b/c.git/')",[248395]
"('URIish.java', 'org.eclipse.jgit.transport.URIish', '<init>', '^([a-z][a-z0-9+-]+)://(?:(?:([^/:@]+)(?::([^\\\\/]+))?@)?((?:[^\\\\/:]+)|(?:\\[[0-9a-f:]+\\]))(?::(\\d+))?((?:/~(?:[^\\\\/]+))?[\\\\/]))?(.+)?$', 'http://me@example.com:1234/D:/x')",[213711]
"('Description.java', 'org.junit.runner.Description', 'methodAndClassNamePatternGroupOrDefault', '([\\s\\S]*)\\((.*)\\)', 'testDontOverwriteDirtyFile(org.eclipse.jgit.lib.DirCacheCheckoutTest)')","[61314, 62307]"
"('URIish.java', 'org.eclipse.jgit.transport.URIish', '<init>', '^([a-z][a-z0-9+-]+)://(?:(?:([^/:@]+)(?::([^\\\\/]+))?@)?((?:[^\\\\/:]+)|(?:\\[[0-9a-f:]+\\]))(?::(\\d+))?((?:/~(?:[^\\\\/]+))?[\\\\/]))?(.+)?$', '../../foo/bar')","[250120, 250235]"
"('URIish.java', 'org.eclipse.jgit.transport.URIish', '<init>', '^(file):([\\\\/](?![\\\\/])((?:[A-Za-z]:)?[\\\\/]?(?:(?:[^\\\\/]+[\\\\/]+)*[^\\\\/]+[\\\\/]*)))$', 'file:/tmp/jgit_test_3922997925567642347_tmp/tmp_5044209954024475555/.git/')",[57547]
"('URIish.java', 'org.eclipse.jgit.transport.URIish', '<init>', '^(?:([^/:@]+)(?::([^\\\\/]+))?@)?([^\\\\/:]{2,}):([\\\\/](?:(?:[^\\\\/]+[\\\\/]+)*[^\\\\/]+[\\\\/]*))$', '/home/m y')","[248648, 248763]"
"('Description.java', 'org.junit.runner.Description', 'methodAndClassNamePatternGroupOrDefault', '([\\s\\S]*)\\((.*)\\)', 'testRevision(org.eclipse.jgit.gitrepo.RepoCommandTest)')","[2594, 3362]"
"('Description.java', 'org.junit.runner.Description', 'methodAndClassNamePatternGroupOrDefault', '([\\s\\S]*)\\((.*)\\)', 'org.eclipse.jgit.internal.storage.file.GcReflogTest')","[112828, 113023]"
"('URIish.java', 'org.eclipse.jgit.transport.URIish', '<init>', '^(file):([\\\\/](?![\\\\/])((?:[A-Za-z]:)?[\\\\/]?(?:(?:[^\\\\/]+[\\\\/]+)*[^\\\\/]+[\\\\/]*)))$', 'ssh+git://me@[::1]:80//')",[211204]
"('URIish.java', 'org.eclipse.jgit.transport.URIish', '<init>', '^(file):([\\\\/](?![\\\\/])((?:[A-Za-z]:)?[\\\\/]?(?:(?:[^\\\\/]+[\\\\/]+)*[^\\\\/]+[\\\\/]*)))$', 'http://lusr\\example:wtf@[::1]:80//')",[202686]
"('Description.java', 'org.junit.runner.Description', 'methodAndClassNamePatternGroupOrDefault', '([\\s\\S]*)\\((.*)\\)', 'testTrimLeadingWhitespace(org.eclipse.jgit.util.RawCharUtilTest)')","[23080, 23144]"
"('URIish.java', 'org.eclipse.jgit.transport.URIish', '<init>', '^(file):([\\\\/](?![\\\\/])((?:[A-Za-z]:)?[\\\\/]?(?:(?:[^\\\\/]+[\\\\/]+)*[^\\\\/]+[\\\\/]*)))$', 'ssh://lusr\\example@1.2.3.4:1234/D:\\x')",[209686]
"('URIish.java', 'org.eclipse.jgit.transport.URIish', '<init>', '^(file):([\\\\/](?![\\\\/])((?:[A-Za-z]:)?[\\\\/]?(?:(?:[^\\\\/]+[\\\\/]+)*[^\\\\/]+[\\\\/]*)))$', 'file:/tmp/jgit_test_2505266252843607322_tmp/tmp_4768295878180271289/.git/')",[57123]
"('Description.java', 'org.junit.runner.Description', 'methodAndClassNamePatternGroupOrDefault', '([\\s\\S]*)\\((.*)\\)', 'testSignedOffBy_OneUserNoLF(org.eclipse.jgit.revwalk.FooterLineTest)')","[173549, 173954]"
"('Description.java', 'org.junit.runner.Description', 'methodAndClassNamePatternGroupOrDefault', '([\\s\\S]*)\\((.*)\\)', 'testInvalidTreeNameIsMacHFSGitCorruptUTF8AtEnd2(org.eclipse.jgit.lib.ObjectCheckerTest)')","[49739, 52286]"
"('Description.java', 'org.junit.runner.Description', 'methodAndClassNamePatternGroupOrDefault', '([\\s\\S]*)\\((.*)\\)', 'testSpecialGroupCase2(org.eclipse.jgit.fnmatch.FileNameMatcherTest)')","[41398, 44656]"
"('Description.java', 'org.junit.runner.Description', 'methodAndClassNamePatternGroupOrDefault', '([\\s\\S]*)\\((.*)\\)', 'testMixedGroupCase7[OldRule? false](org.eclipse.jgit.ignore.IgnoreRuleSpecialCasesTest)')","[85284, 92389]"
"('Description.java', 'org.junit.runner.Description', 'methodAndClassNamePatternGroupOrDefault', '([\\s\\S]*)\\((.*)\\)', 'shouldListModificationInDirWithModifiedTrees(org.eclipse.jgit.diff.DiffEntryTest)')","[10124, 10388]"
"('Description.java', 'org.junit.runner.Description', 'methodAndClassNamePatternGroupOrDefault', '([\\s\\S]*)\\((.*)\\)', 'testRenameRefNameColission2avoided(org.eclipse.jgit.internal.storage.file.RefUpdateTest)')","[119802, 120632]"
"('FastIgnoreRule.java', 'org.eclipse.jgit.ignore.FastIgnoreRule', 'isMatch', '[b-ce-e]', 'b')",[102487]
"('URIish.java', 'org.eclipse.jgit.transport.URIish', '<init>', '^([\\\\/]?((?:[A-Za-z]:)?[\\\\/]?(?:(?:[^\\\\/]+[\\\\/]+)*[^\\\\/]+[\\\\/]*)))$', 'D:\\m y')","[249499, 249614]"
"('Description.java', 'org.junit.runner.Description', 'methodAndClassNamePatternGroupOrDefault', '([\\s\\S]*)\\((.*)\\)', 'testDegenerate_DeleteMiddle(org.eclipse.jgit.diff.MyersDiffTest)')","[8562, 9114]"
"('URIish.java', 'org.eclipse.jgit.transport.URIish', '<init>', '^(file):([\\\\/](?![\\\\/])((?:[A-Za-z]:)?[\\\\/]?(?:(?:[^\\\\/]+[\\\\/]+)*[^\\\\/]+[\\\\/]*)))$', 'https://lusr\\example@[::1]:1234//abc')",[220473]
"('Description.java', 'org.junit.runner.Description', 'methodAndClassNamePatternGroupOrDefault', '([\\s\\S]*)\\((.*)\\)', 'testOnlyOption_f1_1_d(org.eclipse.jgit.api.CommitOnlyTest)')","[134500, 136525]"
"('Description.java', 'org.junit.runner.Description', 'methodAndClassNamePatternGroupOrDefault', '([\\s\\S]*)\\((.*)\\)', 'invalidWhenSourceOnlyAndWildcard(org.eclipse.jgit.transport.RefSpecTest)')","[186570, 187291]"
"('Description.java', 'org.junit.runner.Description', 'methodAndClassNamePatternGroupOrDefault', '([\\s\\S]*)\\((.*)\\)', 'unstashNonStashCommit(org.eclipse.jgit.api.StashApplyCommandTest)')","[142918, 143489]"
"('Description.java', 'org.junit.runner.Description', 'methodAndClassNamePatternGroupOrDefault', '([\\s\\S]*)\\((.*)\\)', 'testEqualsIgnoreCase1(org.eclipse.jgit.util.StringUtilsTest)')","[27131, 27280]"
"('Description.java', 'org.junit.runner.Description', 'methodAndClassNamePatternGroupOrDefault', '([\\s\\S]*)\\((.*)\\)', 'testCloseDuringClose(org.eclipse.jgit.util.io.UnionInputStreamTest)')","[25350, 25567]"
"('Description.java', 'org.junit.runner.Description', 'methodAndClassNamePatternGroupOrDefault', '([\\s\\S]*)\\((.*)\\)', 'testAutoCloseDuringRead(org.eclipse.jgit.util.io.UnionInputStreamTest)')","[25224, 25435]"
"('URIish.java', 'org.eclipse.jgit.transport.URIish', '<init>', '^([a-z][a-z0-9+-]+)://(?:(?:([^/:@]+)(?::([^\\\\/]+))?@)?((?:[^\\\\/:]+)|(?:\\[[0-9a-f:]+\\]))(?::(\\d+))?((?:/~(?:[^\\\\/]+))?[\\\\/]))?(.+)?$', 'http://l usr\\example.com:wtf@[::1]:1234//abc')",[201467]
"('Description.java', 'org.junit.runner.Description', 'methodAndClassNamePatternGroupOrDefault', '([\\s\\S]*)\\((.*)\\)', 'testOnlyOption_f1_3_e(org.eclipse.jgit.api.CommitOnlyTest)')","[134731, 136767]"
"('Description.java', 'org.junit.runner.Description', 'methodAndClassNamePatternGroupOrDefault', '([\\s\\S]*)\\((.*)\\)', 'testSetEnum(org.eclipse.jgit.lib.ConfigTest)')","[70020, 70764]"
"('URIish.java', 'org.eclipse.jgit.transport.URIish', '<init>', '^([a-z][a-z0-9+-]+)://(?:(?:([^/:@]+)(?::([^\\\\/]+))?@)?((?:[^\\\\/:]+)|(?:\\[[0-9a-f:]+\\]))(?::(\\d+))?((?:/~(?:[^\\\\/]+))?[\\\\/]))?(.+)?$', 'ssh+git://l usr\\example.com@1.2.3.4/D:\\x')","[225740, 225924]"
"('Description.java', 'org.junit.runner.Description', 'methodAndClassNamePatternGroupOrDefault', '([\\s\\S]*)\\((.*)\\)', 'testSetByte(org.eclipse.jgit.lib.ObjectIdTest)')","[53675, 53960]"
"('Description.java', 'org.junit.runner.Description', 'methodAndClassNamePatternGroupOrDefault', '([\\s\\S]*)\\((.*)\\)', 'renameBranchSingleConfigValue(org.eclipse.jgit.api.RenameBranchCommandTest)')","[158442, 158530]"
"('Description.java', 'org.junit.runner.Description', 'methodAndClassNamePatternGroupOrDefault', '([\\s\\S]*)\\((.*)\\)', 'testDeleteNotEmptyTreeNotOk(org.eclipse.jgit.util.FileUtilTest)')","[23331, 23671]"
"('URIish.java', 'org.eclipse.jgit.transport.URIish', '<init>', '^([a-z][a-z0-9+-]+)://(?:(?:([^/:@]+)(?::([^\\\\/]+))?@)?((?:[^\\\\/:]+)|(?:\\[[0-9a-f:]+\\]))(?::(\\d+))?((?:/~(?:[^\\\\/]+))?[\\\\/]))?(.+)?$', 'https://lusr\\example@[::1]:1234/D:\\x')",[220588]
"('Description.java', 'org.junit.runner.Description', 'methodAndClassNamePatternGroupOrDefault', '([\\s\\S]*)\\((.*)\\)', 'testBatchRefUpdateSimpleNoForce(org.eclipse.jgit.internal.storage.file.RefDirectoryTest)')","[110845, 112021]"
"('Description.java', 'org.junit.runner.Description', 'methodAndClassNamePatternGroupOrDefault', '([\\s\\S]*)\\((.*)\\)', 'org.eclipse.jgit.lib.IndexDiffTest')","[68643, 70875]"
"('URIish.java', 'org.eclipse.jgit.transport.URIish', '<init>', '^([\\\\/]?((?:[A-Za-z]:)?[\\\\/]?(?:(?:[^\\\\/]+[\\\\/]+)*[^\\\\/]+[\\\\/]*)))$', '/a/b/c/')",[248901]
"('URIish.java', 'org.eclipse.jgit.transport.URIish', '<init>', '^(file):([\\\\/](?![\\\\/])((?:[A-Za-z]:)?[\\\\/]?(?:(?:[^\\\\/]+[\\\\/]+)*[^\\\\/]+[\\\\/]*)))$', '/tmp/jgit_test_6525282766431782376_tmp/tmp_51199864732082123')","[154129, 154254, 154403]"
"('URIish.java', 'org.eclipse.jgit.transport.URIish', '<init>', '^(file):([\\\\/](?![\\\\/])((?:[A-Za-z]:)?[\\\\/]?(?:(?:[^\\\\/]+[\\\\/]+)*[^\\\\/]+[\\\\/]*)))$', 'http://me@1.2.3.4:1234//abc')",[214010]
"('Description.java', 'org.junit.runner.Description', 'methodAndClassNamePatternGroupOrDefault', '([\\s\\S]*)\\((.*)\\)', 'testDirtySubmoduleWorktree(org.eclipse.jgit.lib.IndexDiffSubmoduleTest)')","[56344, 56495]"
"('URIish.java', 'org.eclipse.jgit.transport.URIish', '<init>', '^([a-z][a-z0-9+-]+)://(?:(?:([^/:@]+)(?::([^\\\\/]+))?@)?((?:[^\\\\/:]+)|(?:\\[[0-9a-f:]+\\]))(?::(\\d+))?((?:/~(?:[^\\\\/]+))?[\\\\/]))?(.+)?$', 'ssh://lusr\\example:wtf@example.com:1234//abc')",[194421]
"('URIish.java', 'org.eclipse.jgit.transport.URIish', '<init>', '^([a-z][a-z0-9+-]+)://(?:(?:([^/:@]+)(?::([^\\\\/]+))?@)?((?:[^\\\\/:]+)|(?:\\[[0-9a-f:]+\\]))(?::(\\d+))?((?:/~(?:[^\\\\/]+))?[\\\\/]))?(.+)?$', 'file:///home/m%00y')","[247797, 247843]"
"('Description.java', 'org.junit.runner.Description', 'methodAndClassNamePatternGroupOrDefault', '([\\s\\S]*)\\((.*)\\)', 'org.eclipse.jgit.api.StashDropCommandTest')","[124310, 124677]"
"('ChangeIdUtil.java', 'org.eclipse.jgit.util.ChangeIdUtil', 'indexOfChangeId', '(^Change-Id: *I[a-f0-9]{40}$)', 'g')",[37504]
"('URIish.java', 'org.eclipse.jgit.transport.URIish', '<init>', '^(file):([\\\\/](?![\\\\/])((?:[A-Za-z]:)?[\\\\/]?(?:(?:[^\\\\/]+[\\\\/]+)*[^\\\\/]+[\\\\/]*)))$', 'ssh+git://lusr\\example@example.com/D:\\x')","[226453, 226637]"
"('Description.java', 'org.junit.runner.Description', 'methodAndClassNamePatternGroupOrDefault', '([\\s\\S]*)\\((.*)\\)', 'testTreeIteratorWithGitmodules(org.eclipse.jgit.submodule.SubmoduleWalkTest)')","[17217, 17414]"
"('Description.java', 'org.junit.runner.Description', 'methodAndClassNamePatternGroupOrDefault', '([\\s\\S]*)\\((.*)\\)', 'testTwoRangesInOneGroupCase1[OldRule? true](org.eclipse.jgit.ignore.IgnoreRuleSpecialCasesTest)')","[91538, 98622]"
"('Description.java', 'org.junit.runner.Description', 'methodAndClassNamePatternGroupOrDefault', '([\\s\\S]*)\\((.*)\\)', 'testCherryPickConflictReset(org.eclipse.jgit.api.CherryPickCommandTest)')","[168341, 168602]"
"('URIish.java', 'org.eclipse.jgit.transport.URIish', '<init>', '^([\\\\/]?((?:[A-Za-z]:)?[\\\\/]?(?:(?:[^\\\\/]+[\\\\/]+)*[^\\\\/]+[\\\\/]*)))$', '/tmp/jgit_test_2166166318525399122_tmp/tmp_3429394497116144220')","[150845, 150990, 151140]"
"('Description.java', 'org.junit.runner.Description', 'methodAndClassNamePatternGroupOrDefault', '([\\s\\S]*)\\((.*)\\)', 'testSetSourceDestination(org.eclipse.jgit.transport.RefSpecTest)')","[186633, 187357]"
"('URIish.java', 'org.eclipse.jgit.transport.URIish', '<init>', '^([a-z][a-z0-9+-]+)://(?:(?:([^/:@]+)(?::([^\\\\/]+))?@)?((?:[^\\\\/:]+)|(?:\\[[0-9a-f:]+\\]))(?::(\\d+))?((?:/~(?:[^\\\\/]+))?[\\\\/]))?(.+)?$', 'git://example.com:338/D:/m y')","[250028, 250074]"
"('Description.java', 'org.junit.runner.Description', 'methodAndClassNamePatternGroupOrDefault', '([\\s\\S]*)\\((.*)\\)', 'org.eclipse.jgit.util.StringUtilsTest')","[27089, 27413]"
"('Description.java', 'org.junit.runner.Description', 'methodAndClassNamePatternGroupOrDefault', '([\\s\\S]*)\\((.*)\\)', 'testQuote_Ang(org.eclipse.jgit.util.QuotedStringGitPathStyleTest)')","[39891, 40319]"
"('Description.java', 'org.junit.runner.Description', 'methodAndClassNamePatternGroupOrDefault', '([\\s\\S]*)\\((.*)\\)', 'testNoRenames_EmptyFile2(org.eclipse.jgit.diff.RenameDetectorTest)')","[4708, 5274]"
"('Description.java', 'org.junit.runner.Description', 'methodAndClassNamePatternGroupOrDefault', '([\\s\\S]*)\\((.*)\\)', 'org.eclipse.jgit.api.blame.BlameGeneratorTest')","[134123, 134275]"
"('URIish.java', 'org.eclipse.jgit.transport.URIish', '<init>', '^(file):([\\\\/](?![\\\\/])((?:[A-Za-z]:)?[\\\\/]?(?:(?:[^\\\\/]+[\\\\/]+)*[^\\\\/]+[\\\\/]*)))$', 'ssh://l usr\\example.com@example.com:1234//')",[208076]
"('Description.java', 'org.junit.runner.Description', 'methodAndClassNamePatternGroupOrDefault', '([\\s\\S]*)\\((.*)\\)', 'testClean(org.eclipse.jgit.util.ChangeIdUtilTest)')","[31762, 32503]"
"('URIish.java', 'org.eclipse.jgit.transport.URIish', '<init>', '^([a-z][a-z0-9+-]+)://(?:(?:([^/:@]+)(?::([^\\\\/]+))?@)?((?:[^\\\\/:]+)|(?:\\[[0-9a-f:]+\\]))(?::(\\d+))?((?:/~(?:[^\\\\/]+))?[\\\\/]))?(.+)?$', 'ssh://me:wtf@example.com:80/D:\\x')",[192387]
"('Description.java', 'org.junit.runner.Description', 'methodAndClassNamePatternGroupOrDefault', '([\\s\\S]*)\\((.*)\\)', 'org.eclipse.jgit.transport.HttpAuthTest')","[193550, 195686]"
"('URIish.java', 'org.eclipse.jgit.transport.URIish', '<init>', '^(?:([^/:@]+)(?::([^\\\\/]+))?@)?((?:[^\\\\/:]+)|(?:\\[[0-9a-f:]+\\])):((?:(?:/~(?:[^\\\\/]+))[\\\\/])?(?:(?:[^\\\\/]+[\\\\/]+)*[^\\\\/]+[\\\\/]*))$', '/tmp/jgit_test_9017651431273807895_tmp/tmp_2045899248531600700')","[145277, 145412, 145619, 145828, 145978]"
"('Description.java', 'org.junit.runner.Description', 'methodAndClassNamePatternGroupOrDefault', '([\\s\\S]*)\\((.*)\\)', 'testDirCacheMatchingId(org.eclipse.jgit.treewalk.FileTreeIteratorTest)')","[262145, 262490]"
"('Description.java', 'org.junit.runner.Description', 'methodAndClassNamePatternGroupOrDefault', '([\\s\\S]*)\\((.*)\\)', 'testMaliciousAbsoluteUNCPathWindows1(org.eclipse.jgit.lib.DirCacheCheckoutMaliciousPathTest)')","[66886, 67789]"
"('URIish.java', 'org.eclipse.jgit.transport.URIish', '<init>', '^(file):([\\\\/](?![\\\\/])((?:[A-Za-z]:)?[\\\\/]?(?:(?:[^\\\\/]+[\\\\/]+)*[^\\\\/]+[\\\\/]*)))$', 'file:///tmp/jgit_test_7286773243984836704_tmp/tmp_8328110772619142051/.git/')",[56842]
"('Description.java', 'org.junit.runner.Description', 'methodAndClassNamePatternGroupOrDefault', '([\\s\\S]*)\\((.*)\\)', 'testOnlyOption_f1_7_f2_14_b(org.eclipse.jgit.api.CommitOnlyTest)')","[134353, 136371]"
"('Description.java', 'org.junit.runner.Description', 'methodAndClassNamePatternGroupOrDefault', '([\\s\\S]*)\\((.*)\\)', 'testWritePack4ThinPack(org.eclipse.jgit.internal.storage.file.PackWriterTest)')","[117845, 118299]"
"('Description.java', 'org.junit.runner.Description', 'methodAndClassNamePatternGroupOrDefault', '([\\s\\S]*)\\((.*)\\)', 'testSpecialGroupCase6[OldRule? false](org.eclipse.jgit.ignore.IgnoreRuleSpecialCasesTest)')","[84893, 91998]"
"('URIish.java', 'org.eclipse.jgit.transport.URIish', '<init>', '^(file):([\\\\/](?![\\\\/])((?:[A-Za-z]:)?[\\\\/]?(?:(?:[^\\\\/]+[\\\\/]+)*[^\\\\/]+[\\\\/]*)))$', 'https://server/repos/project.git')","[254315, 255105, 256388, 257441]"
"('URIish.java', 'org.eclipse.jgit.transport.URIish', '<init>', '^(file):([\\\\/](?![\\\\/])((?:[A-Za-z]:)?[\\\\/]?(?:(?:[^\\\\/]+[\\\\/]+)*[^\\\\/]+[\\\\/]*)))$', 'ssh+git://l usr\\example.com:wtf@[::1]:80/D:\\x')",[198408]
"('Description.java', 'org.junit.runner.Description', 'methodAndClassNamePatternGroupOrDefault', '([\\s\\S]*)\\((.*)\\)', 'testUpdateUnexpectedRemote(org.eclipse.jgit.transport.PushProcessTest)')","[203201, 203744]"
"('Description.java', 'org.junit.runner.Description', 'methodAndClassNamePatternGroupOrDefault', '([\\s\\S]*)\\((.*)\\)', 'org.eclipse.jgit.revwalk.RevFlagSetTest')","[178549, 178873]"
"('Description.java', 'org.junit.runner.Description', 'methodAndClassNamePatternGroupOrDefault', '([\\s\\S]*)\\((.*)\\)', 'testRebaseShouldNotFailIfUserAddCommentLinesInPrepareSteps(org.eclipse.jgit.api.RebaseCommandTest)')","[131663, 133162]"
"('URIish.java', 'org.eclipse.jgit.transport.URIish', '<init>', '^(file):([\\\\/](?![\\\\/])((?:[A-Za-z]:)?[\\\\/]?(?:(?:[^\\\\/]+[\\\\/]+)*[^\\\\/]+[\\\\/]*)))$', 'file:///tmp/jgit_test_7918567340210203710_tmp/tmp_1615893433875976443/.git/')",[125232]
"('Description.java', 'org.junit.runner.Description', 'methodAndClassNamePatternGroupOrDefault', '([\\s\\S]*)\\((.*)\\)', 'testRemoveLastURI(org.eclipse.jgit.transport.RemoteConfigTest)')","[253296, 253849]"
"('Description.java', 'org.junit.runner.Description', 'methodAndClassNamePatternGroupOrDefault', '([\\s\\S]*)\\((.*)\\)', 'testFastForwardWithMultipleCommits(org.eclipse.jgit.api.RebaseCommandTest)')","[131285, 132766]"
"('Description.java', 'org.junit.runner.Description', 'methodAndClassNamePatternGroupOrDefault', '([\\s\\S]*)\\((.*)\\)', 'testLowerGroupCase4[OldRule? true](org.eclipse.jgit.ignore.IgnoreRuleSpecialCasesTest)')","[89192, 96276]"
"('URIish.java', 'org.eclipse.jgit.transport.URIish', '<init>', '^(file):([\\\\/](?![\\\\/])((?:[A-Za-z]:)?[\\\\/]?(?:(?:[^\\\\/]+[\\\\/]+)*[^\\\\/]+[\\\\/]*)))$', 'file:///tmp/jgit_test_1207894147158696196_tmp/tmp_1287066233860856939')","[162954, 163011, 163069]"
"('Description.java', 'org.junit.runner.Description', 'methodAndClassNamePatternGroupOrDefault', '([\\s\\S]*)\\((.*)\\)', 'testDequote_SoleSq(org.eclipse.jgit.util.QuotedStringBourneUserPathStyleTest)')","[28892, 29149]"
"('Description.java', 'org.junit.runner.Description', 'methodAndClassNamePatternGroupOrDefault', '([\\s\\S]*)\\((.*)\\)', 'testSwap(org.eclipse.jgit.diff.EditTest)')","[5968, 6311]"
"('Repository.java', 'org.eclipse.jgit.lib.Repository', 'resolve', '^-\\d+$', '2')","[64854, 64881]"
"('URIish.java', 'org.eclipse.jgit.transport.URIish', '<init>', '^(file):([\\\\/](?![\\\\/])((?:[A-Za-z]:)?[\\\\/]?(?:(?:[^\\\\/]+[\\\\/]+)*[^\\\\/]+[\\\\/]*)))$', 'http://1.2.3.4//abc')","[241081, 241265, 242185, 242369, 243289, 243473]"
"('URIish.java', 'org.eclipse.jgit.transport.URIish', '<init>', '^(file):([\\\\/](?![\\\\/])((?:[A-Za-z]:)?[\\\\/]?(?:(?:[^\\\\/]+[\\\\/]+)*[^\\\\/]+[\\\\/]*)))$', 'ssh://l usr\\example.com:wtf@example.com:80//')",[193330]
"('URIish.java', 'org.eclipse.jgit.transport.URIish', '<init>', '^(file):([\\\\/](?![\\\\/])((?:[A-Za-z]:)?[\\\\/]?(?:(?:[^\\\\/]+[\\\\/]+)*[^\\\\/]+[\\\\/]*)))$', 'ssh+git://me:wtf@[::1]:80/D:\\x')",[197304]
"('URIish.java', 'org.eclipse.jgit.transport.URIish', '<init>', '^([a-z][a-z0-9+-]+)://(?:(?:([^/:@]+)(?::([^\\\\/]+))?@)?((?:[^\\\\/:]+)|(?:\\[[0-9a-f:]+\\]))(?::(\\d+))?((?:/~(?:[^\\\\/]+))?[\\\\/]))?(.+)?$', 'ssh://lusr\\example:wtf@[::1]:80//abc')",[195341]
"('URIish.java', 'org.eclipse.jgit.transport.URIish', '<init>', '^(file):([\\\\/](?![\\\\/])((?:[A-Za-z]:)?[\\\\/]?(?:(?:[^\\\\/]+[\\\\/]+)*[^\\\\/]+[\\\\/]*)))$', 'http://lusr\\example@example.com:80//')",[215988]
"('Description.java', 'org.junit.runner.Description', 'methodAndClassNamePatternGroupOrDefault', '([\\s\\S]*)\\((.*)\\)', 'testToString(org.eclipse.jgit.util.RefListTest)')","[19949, 20440]"
"('URIish.java', 'org.eclipse.jgit.transport.URIish', '<init>', '^([a-z][a-z0-9+-]+)://(?:(?:([^/:@]+)(?::([^\\\\/]+))?@)?((?:[^\\\\/:]+)|(?:\\[[0-9a-f:]+\\]))(?::(\\d+))?((?:/~(?:[^\\\\/]+))?[\\\\/]))?(.+)?$', 'ssh+git://me:wtf@1.2.3.4:80//abc')",[196867]
"('URIish.java', 'org.eclipse.jgit.transport.URIish', '<init>', '^(file):([\\\\/](?![\\\\/])((?:[A-Za-z]:)?[\\\\/]?(?:(?:[^\\\\/]+[\\\\/]+)*[^\\\\/]+[\\\\/]*)))$', 'ssh://l usr\\example.com@[::1]:80/D:\\x')",[209134]
"('Description.java', 'org.junit.runner.Description', 'methodAndClassNamePatternGroupOrDefault', '([\\s\\S]*)\\((.*)\\)', 'testAddNonExistingSingleFile(org.eclipse.jgit.api.AddCommandTest)')","[164768, 165206]"
"('Description.java', 'org.junit.runner.Description', 'methodAndClassNamePatternGroupOrDefault', '([\\s\\S]*)\\((.*)\\)', 'testPullWithoutConfig(org.eclipse.jgit.api.PullCommandTest)')","[144630, 144977]"
"('Description.java', 'org.junit.runner.Description', 'methodAndClassNamePatternGroupOrDefault', '([\\s\\S]*)\\((.*)\\)', 'testReadBoolean_TrueFalse2(org.eclipse.jgit.lib.ConfigTest)')","[70083, 70830]"
"('Description.java', 'org.junit.runner.Description', 'methodAndClassNamePatternGroupOrDefault', '([\\s\\S]*)\\((.*)\\)', 'testGraphGroupCase0[OldRule? true](org.eclipse.jgit.ignore.IgnoreRuleSpecialCasesTest)')","[88939, 96023]"
"('URIish.java', 'org.eclipse.jgit.transport.URIish', '<init>', '^(file):([\\\\/](?![\\\\/])((?:[A-Za-z]:)?[\\\\/]?(?:(?:[^\\\\/]+[\\\\/]+)*[^\\\\/]+[\\\\/]*)))$', 'file:/tmp/jgit_test_3986526152599191930_tmp/tmp_827137502116348097/.git/')",[61955]
"('Description.java', 'org.junit.runner.Description', 'methodAndClassNamePatternGroupOrDefault', '([\\s\\S]*)\\((.*)\\)', 'testNewFileWithWait(org.eclipse.jgit.internal.storage.file.FileSnapshotTest)')","[109779, 109867]"
"('URIish.java', 'org.eclipse.jgit.transport.URIish', '<init>', '^([a-z][a-z0-9+-]+)://(?:(?:([^/:@]+)(?::([^\\\\/]+))?@)?((?:[^\\\\/:]+)|(?:\\[[0-9a-f:]+\\]))(?::(\\d+))?((?:/~(?:[^\\\\/]+))?[\\\\/]))?(.+)?$', 'ssh+git://lusr\\example@1.2.3.4:80//')",[213067]
"('URIish.java', 'org.eclipse.jgit.transport.URIish', '<init>', '^([a-z][a-z0-9+-]+)://(?:(?:([^/:@]+)(?::([^\\\\/]+))?@)?((?:[^\\\\/:]+)|(?:\\[[0-9a-f:]+\\]))(?::(\\d+))?((?:/~(?:[^\\\\/]+))?[\\\\/]))?(.+)?$', 'user@repo.or.cz:/srv/git/egit.git')",[257806]
"('URIish.java', 'org.eclipse.jgit.transport.URIish', '<init>', '^([a-z][a-z0-9+-]+)://(?:(?:([^/:@]+)(?::([^\\\\/]+))?@)?((?:[^\\\\/:]+)|(?:\\[[0-9a-f:]+\\]))(?::(\\d+))?((?:/~(?:[^\\\\/]+))?[\\\\/]))?(.+)?$', 'http://me@1.2.3.4//abc')","[227856, 228040]"
"('Description.java', 'org.junit.runner.Description', 'methodAndClassNamePatternGroupOrDefault', '([\\s\\S]*)\\((.*)\\)', 'org.eclipse.jgit.transport.PacketLineInTest')","[184206, 185304]"
"('URIish.java', 'org.eclipse.jgit.transport.URIish', '<init>', '^(file):([\\\\/](?![\\\\/])((?:[A-Za-z]:)?[\\\\/]?(?:(?:[^\\\\/]+[\\\\/]+)*[^\\\\/]+[\\\\/]*)))$', 'ssh://me@1.2.3.4:80//')",[207524]
"('Description.java', 'org.junit.runner.Description', 'methodAndClassNamePatternGroupOrDefault', '([\\s\\S]*)\\((.*)\\)', 'testWordroupCase0(org.eclipse.jgit.fnmatch.FileNameMatcherTest)')","[44107, 47494]"
"('URIish.java', 'org.eclipse.jgit.transport.URIish', '<init>', '^([a-z][a-z0-9+-]+)://(?:(?:([^/:@]+)(?::([^\\\\/]+))?@)?((?:[^\\\\/:]+)|(?:\\[[0-9a-f:]+\\]))(?::(\\d+))?((?:/~(?:[^\\\\/]+))?[\\\\/]))?(.+)?$', 'file:///tmp/jgit_test_8357538809303882728_tmp/tmp_8868203724769448409/.git/')",[143567]
"('Description.java', 'org.junit.runner.Description', 'methodAndClassNamePatternGroupOrDefault', '([\\s\\S]*)\\((.*)\\)', 'testParse_GitBinaryLiteral(org.eclipse.jgit.patch.PatchTest)')","[2085, 2236]"
"('URIish.java', 'org.eclipse.jgit.transport.URIish', '<init>', '^(file):([\\\\/](?![\\\\/])((?:[A-Za-z]:)?[\\\\/]?(?:(?:[^\\\\/]+[\\\\/]+)*[^\\\\/]+[\\\\/]*)))$', 'https://l usr\\example.com:wtf@example.com:1234//abc')",[204810]
"('Description.java', 'org.junit.runner.Description', 'methodAndClassNamePatternGroupOrDefault', '([\\s\\S]*)\\((.*)\\)', 'testOneBlankLine(org.eclipse.jgit.util.RawParseUtils_LineMapTest)')","[30770, 30877]"
"('Description.java', 'org.junit.runner.Description', 'methodAndClassNamePatternGroupOrDefault', '([\\s\\S]*)\\((.*)\\)', 'testCloneRepositoryWithBranch(org.eclipse.jgit.api.CloneCommandTest)')","[159052, 159355]"
"('Description.java', 'org.junit.runner.Description', 'methodAndClassNamePatternGroupOrDefault', '([\\s\\S]*)\\((.*)\\)', 'testBatchRefUpdateNonFastForwardDoesNotDoExpensiveMergeCheck(org.eclipse.jgit.internal.storage.file.RefDirectoryTest)')","[110908, 112087]"
"('Description.java', 'org.junit.runner.Description', 'methodAndClassNamePatternGroupOrDefault', '([\\s\\S]*)\\((.*)\\)', 'noTargetSet(org.eclipse.jgit.api.DescribeCommandTest)')","[128255, 128385]"
"('Description.java', 'org.junit.runner.Description', 'methodAndClassNamePatternGroupOrDefault', '([\\s\\S]*)\\((.*)\\)', 'commitIgnoresSmudgedEntryWithDifferentId(org.eclipse.jgit.api.CommitCommandTest)')","[123168, 123385]"
"('URIish.java', 'org.eclipse.jgit.transport.URIish', '<init>', '^(file):([\\\\/](?![\\\\/])((?:[A-Za-z]:)?[\\\\/]?(?:(?:[^\\\\/]+[\\\\/]+)*[^\\\\/]+[\\\\/]*)))$', 'file:///tmp/jgit_test_4730936440061608129_tmp/tmp_7076638002040378464/.git/')",[63474]
"('URIish.java', 'org.eclipse.jgit.transport.URIish', '<init>', '^([a-z][a-z0-9+-]+)://(?:(?:([^/:@]+)(?::([^\\\\/]+))?@)?((?:[^\\\\/:]+)|(?:\\[[0-9a-f:]+\\]))(?::(\\d+))?((?:/~(?:[^\\\\/]+))?[\\\\/]))?(.+)?$', 'ssh+git://me@example.com:80/D:/x')",[210583]
"('Description.java', 'org.junit.runner.Description', 'methodAndClassNamePatternGroupOrDefault', '([\\s\\S]*)\\((.*)\\)', 'testExceptionThrown_BareRepoGetIndexFile(org.eclipse.jgit.internal.storage.file.RepositorySetupWorkDirTest)')","[114069, 114332]"
"('URIish.java', 'org.eclipse.jgit.transport.URIish', '<init>', '^(file):([\\\\/](?![\\\\/])((?:[A-Za-z]:)?[\\\\/]?(?:(?:[^\\\\/]+[\\\\/]+)*[^\\\\/]+[\\\\/]*)))$', 'file:///tmp/jgit_test_3986526152599191930_tmp/tmp_827137502116348097/.git/')",[62431]
"('URIish.java', 'org.eclipse.jgit.transport.URIish', '<init>', '^(file):([\\\\/](?![\\\\/])((?:[A-Za-z]:)?[\\\\/]?(?:(?:[^\\\\/]+[\\\\/]+)*[^\\\\/]+[\\\\/]*)))$', 'ssh://lusr\\example:wtf@[::1]:1234//abc')",[195134]
"('Description.java', 'org.junit.runner.Description', 'methodAndClassNamePatternGroupOrDefault', '([\\s\\S]*)\\((.*)\\)', 'testCloneRepositoryWithMultipleHeadBranches(org.eclipse.jgit.api.CloneCommandTest)')","[159136, 159443]"
"('FastIgnoreRule.java', 'org.eclipse.jgit.ignore.FastIgnoreRule', 'isMatch', '[\\p{Space}]', '\n')",[100353]
"('FastIgnoreRule.java', 'org.eclipse.jgit.ignore.FastIgnoreRule', 'isMatch', '[\\[]', '[')",[98947]
"('URIish.java', 'org.eclipse.jgit.transport.URIish', '<init>', '^([a-z][a-z0-9+-]+)://(?:(?:([^/:@]+)(?::([^\\\\/]+))?@)?((?:[^\\\\/:]+)|(?:\\[[0-9a-f:]+\\]))(?::(\\d+))?((?:/~(?:[^\\\\/]+))?[\\\\/]))?(.+)?$', 'ssh://me@example.com/D:/x')","[220910, 221094]"
"('Description.java', 'org.junit.runner.Description', 'methodAndClassNamePatternGroupOrDefault', '([\\s\\S]*)\\((.*)\\)', 'testReadACK_Invalid2(org.eclipse.jgit.transport.PacketLineInTest)')","[184521, 185061]"
"('Description.java', 'org.junit.runner.Description', 'methodAndClassNamePatternGroupOrDefault', '([\\s\\S]*)\\((.*)\\)', 'testCreateEmpty(org.eclipse.jgit.transport.RefSpecTest)')","[186591, 187313]"
"('URIish.java', 'org.eclipse.jgit.transport.URIish', '<init>', '^([a-z][a-z0-9+-]+)://(?:(?:([^/:@]+)(?::([^\\\\/]+))?@)?((?:[^\\\\/:]+)|(?:\\[[0-9a-f:]+\\]))(?::(\\d+))?((?:/~(?:[^\\\\/]+))?[\\\\/]))?(.+)?$', 'ssh://me@[::1]//abc')","[221600, 221784]"
"('URIish.java', 'org.eclipse.jgit.transport.URIish', '<init>', '^([a-z][a-z0-9+-]+)://(?:(?:([^/:@]+)(?::([^\\\\/]+))?@)?((?:[^\\\\/:]+)|(?:\\[[0-9a-f:]+\\]))(?::(\\d+))?((?:/~(?:[^\\\\/]+))?[\\\\/]))?(.+)?$', 'ssh://l usr\\example.com:wtf@[::1]:1234//')",[194007]
"('FastIgnoreRule.java', 'org.eclipse.jgit.ignore.FastIgnoreRule', 'isMatch', '[\\p{Blank}]', '\r')",[101940]
"('Description.java', 'org.junit.runner.Description', 'methodAndClassNamePatternGroupOrDefault', '([\\s\\S]*)\\((.*)\\)', 'testWindowsFile2(org.eclipse.jgit.transport.URIishTest)')","[188842, 190238]"
"('Description.java', 'org.junit.runner.Description', 'methodAndClassNamePatternGroupOrDefault', '([\\s\\S]*)\\((.*)\\)', 'testRebaseShouldFixupInCaseOfConflict(org.eclipse.jgit.api.RebaseCommandTest)')","[131894, 133404]"
"('Description.java', 'org.junit.runner.Description', 'methodAndClassNamePatternGroupOrDefault', '([\\s\\S]*)\\((.*)\\)', 'org.eclipse.jgit.merge.MergeMessageFormatterTest')","[16035, 16911]"
"('URIish.java', 'org.eclipse.jgit.transport.URIish', '<init>', '^([a-z][a-z0-9+-]+)://(?:(?:([^/:@]+)(?::([^\\\\/]+))?@)?((?:[^\\\\/:]+)|(?:\\[[0-9a-f:]+\\]))(?::(\\d+))?((?:/~(?:[^\\\\/]+))?[\\\\/]))?(.+)?$', '/tmp/jgit_test_4807633653944290416_tmp/tmp_5972304591781699420/.git')","[130127, 130265]"
"('Description.java', 'org.junit.runner.Description', 'methodAndClassNamePatternGroupOrDefault', '([\\s\\S]*)\\((.*)\\)', 'indexContentConflict(org.eclipse.jgit.api.StashApplyCommandTest)')","[142582, 143137]"
"('Description.java', 'org.junit.runner.Description', 'methodAndClassNamePatternGroupOrDefault', '([\\s\\S]*)\\((.*)\\)', 'testMerge_HeadMaster(org.eclipse.jgit.util.RefMapTest)')","[21039, 21511]"
"('URIish.java', 'org.eclipse.jgit.transport.URIish', '<init>', '^(file):([\\\\/](?![\\\\/])((?:[A-Za-z]:)?[\\\\/]?(?:(?:[^\\\\/]+[\\\\/]+)*[^\\\\/]+[\\\\/]*)))$', 'ssh+git://lusr\\example:wtf@1.2.3.4:80//abc')",[199052]
"('URIish.java', 'org.eclipse.jgit.transport.URIish', '<init>', '^(file):([\\\\/](?![\\\\/])((?:[A-Za-z]:)?[\\\\/]?(?:(?:[^\\\\/]+[\\\\/]+)*[^\\\\/]+[\\\\/]*)))$', 'ssh+git://l usr\\example.com@example.com:1234//abc')",[211434]
"('URIish.java', 'org.eclipse.jgit.transport.URIish', '<init>', '^(file):([\\\\/](?![\\\\/])((?:[A-Za-z]:)?[\\\\/]?(?:(?:[^\\\\/]+[\\\\/]+)*[^\\\\/]+[\\\\/]*)))$', 'ssh+git://lusr\\example@[::1]:80//abc')",[213458]
"('Description.java', 'org.junit.runner.Description', 'methodAndClassNamePatternGroupOrDefault', '([\\s\\S]*)\\((.*)\\)', 'org.eclipse.jgit.api.CloneCommandTest')","[158863, 168116]"
"('FastIgnoreRule.java', 'org.eclipse.jgit.ignore.FastIgnoreRule', 'isMatch', '[[\\p{javaDigit}\\p{javaLetter}_]]', '_')",[102383]
"('Description.java', 'org.junit.runner.Description', 'methodAndClassNamePatternGroupOrDefault', '([\\s\\S]*)\\((.*)\\)', 'testSpaceGroupCase3[OldRule? true](org.eclipse.jgit.ignore.IgnoreRuleSpecialCasesTest)')","[89675, 96759]"
"('Description.java', 'org.junit.runner.Description', 'methodAndClassNamePatternGroupOrDefault', '([\\s\\S]*)\\((.*)\\)', 'testForbiddenNamesOnWindowsEgDotCon(org.eclipse.jgit.lib.DirCacheCheckoutMaliciousPathTest)')","[66529, 67415]"
"('Description.java', 'org.junit.runner.Description', 'methodAndClassNamePatternGroupOrDefault', '([\\s\\S]*)\\((.*)\\)', 'testCaseInsensitive(org.eclipse.jgit.util.RawSubStringPatternTest)')","[28598, 28684]"
"('ChangeIdUtil.java', 'org.eclipse.jgit.util.ChangeIdUtil', 'indexOfFirstFooterLine', '(^[a-zA-Z0-9-]+:(?!//).*$)', 'Bug: 33')","[33349, 35248, 37686, 37893, 38149]"
"('Description.java', 'org.junit.runner.Description', 'methodAndClassNamePatternGroupOrDefault', '([\\s\\S]*)\\((.*)\\)', 'testMasterMaster(org.eclipse.jgit.transport.RefSpecTest)')","[186675, 187401]"
"('URIish.java', 'org.eclipse.jgit.transport.URIish', '<init>', '^(file):([\\\\/](?![\\\\/])((?:[A-Za-z]:)?[\\\\/]?(?:(?:[^\\\\/]+[\\\\/]+)*[^\\\\/]+[\\\\/]*)))$', 'ssh+git://l usr\\example.com:wtf@example.com:80/D:/x')",[197626]
"('URIish.java', 'org.eclipse.jgit.transport.URIish', '<init>', '^([a-z][a-z0-9+-]+)://(?:(?:([^/:@]+)(?::([^\\\\/]+))?@)?((?:[^\\\\/:]+)|(?:\\[[0-9a-f:]+\\]))(?::(\\d+))?((?:/~(?:[^\\\\/]+))?[\\\\/]))?(.+)?$', 'ssh://me@1.2.3.4:80/D:/x')",[207639]
"('URIish.java', 'org.eclipse.jgit.transport.URIish', '<init>', '^([a-z][a-z0-9+-]+)://(?:(?:([^/:@]+)(?::([^\\\\/]+))?@)?((?:[^\\\\/:]+)|(?:\\[[0-9a-f:]+\\]))(?::(\\d+))?((?:/~(?:[^\\\\/]+))?[\\\\/]))?(.+)?$', 'http://lusr\\example:wtf@example.com:1234/D:\\x')",[201927]
"('URIish.java', 'org.eclipse.jgit.transport.URIish', '<init>', '^(file):([\\\\/](?![\\\\/])((?:[A-Za-z]:)?[\\\\/]?(?:(?:[^\\\\/]+[\\\\/]+)*[^\\\\/]+[\\\\/]*)))$', 'https://lusr\\example@1.2.3.4:80/D:\\x')",[220381]
"('URIish.java', 'org.eclipse.jgit.transport.URIish', '<init>', '^([\\\\/]?((?:[A-Za-z]:)?[\\\\/]?(?:(?:[^\\\\/]+[\\\\/]+)*[^\\\\/]+[\\\\/]*)))$', 'D:/m y')","[250741, 250856]"
"('URIish.java', 'org.eclipse.jgit.transport.URIish', '<init>', '^([a-z][a-z0-9+-]+)://(?:(?:([^/:@]+)(?::([^\\\\/]+))?@)?((?:[^\\\\/:]+)|(?:\\[[0-9a-f:]+\\]))(?::(\\d+))?((?:/~(?:[^\\\\/]+))?[\\\\/]))?(.+)?$', 'ssh+git://me:wtf@1.2.3.4:80/D:\\x')",[196959]
"('FastIgnoreRule.java', 'org.eclipse.jgit.ignore.FastIgnoreRule', 'isMatch', 'a[b\\-]', 'ab')",[101367]
"('URIish.java', 'org.eclipse.jgit.transport.URIish', '<init>', '^([a-z][a-z0-9+-]+)://(?:(?:([^/:@]+)(?::([^\\\\/]+))?@)?((?:[^\\\\/:]+)|(?:\\[[0-9a-f:]+\\]))(?::(\\d+))?((?:/~(?:[^\\\\/]+))?[\\\\/]))?(.+)?$', 'http://l usr\\example.com:wtf@1.2.3.4:1234//abc')",[201099]
"('Description.java', 'org.junit.runner.Description', 'methodAndClassNamePatternGroupOrDefault', '([\\s\\S]*)\\((.*)\\)', 'testFilePathSimpleCase[OldRule? false](org.eclipse.jgit.ignore.IgnoreRuleSpecialCasesTest)')","[85514, 92619]"
"('URIish.java', 'org.eclipse.jgit.transport.URIish', '<init>', '^(file):([\\\\/](?![\\\\/])((?:[A-Za-z]:)?[\\\\/]?(?:(?:[^\\\\/]+[\\\\/]+)*[^\\\\/]+[\\\\/]*)))$', 'https://l usr\\example.com:wtf@1.2.3.4:80//abc')",[205362]
"('Description.java', 'org.junit.runner.Description', 'methodAndClassNamePatternGroupOrDefault', '([\\s\\S]*)\\((.*)\\)', 'testQuote_BareA(org.eclipse.jgit.util.QuotedStringBourneStyleTest)')","[38478, 38696]"
"('Description.java', 'org.junit.runner.Description', 'methodAndClassNamePatternGroupOrDefault', '([\\s\\S]*)\\((.*)\\)', 'org.eclipse.jgit.revwalk.RevWalkUtilsCountTest')","[174487, 174768]"
"('URIish.java', 'org.eclipse.jgit.transport.URIish', '<init>', '^(file):([\\\\/](?![\\\\/])((?:[A-Za-z]:)?[\\\\/]?(?:(?:[^\\\\/]+[\\\\/]+)*[^\\\\/]+[\\\\/]*)))$', 'ssh+git://l usr\\example.com:wtf@example.com:1234/D:\\x')",[197488]
"('Description.java', 'org.junit.runner.Description', 'methodAndClassNamePatternGroupOrDefault', '([\\s\\S]*)\\((.*)\\)', 'testFindRemoteRefUpdatesNoWildcardNoDestination(org.eclipse.jgit.transport.TransportTest)')","[254481, 254654]"
"('URIish.java', 'org.eclipse.jgit.transport.URIish', '<init>', '^(file):([\\\\/](?![\\\\/])((?:[A-Za-z]:)?[\\\\/]?(?:(?:[^\\\\/]+[\\\\/]+)*[^\\\\/]+[\\\\/]*)))$', 'https://l usr\\example.com@[::1]/D:\\x')","[232709, 232893]"
"('Description.java', 'org.junit.runner.Description', 'methodAndClassNamePatternGroupOrDefault', '([\\s\\S]*)\\((.*)\\)', 'testDerefTag(org.eclipse.jgit.lib.RepositoryResolveTest)')","[71773, 72377]"
"('Description.java', 'org.junit.runner.Description', 'methodAndClassNamePatternGroupOrDefault', '([\\s\\S]*)\\((.*)\\)', 'testPrintGroupCase2[OldRule? false](org.eclipse.jgit.ignore.IgnoreRuleSpecialCasesTest)')","[87032, 94137]"
"('Description.java', 'org.junit.runner.Description', 'methodAndClassNamePatternGroupOrDefault', '([\\s\\S]*)\\((.*)\\)', 'testOnlyOption_f1_6_a(org.eclipse.jgit.api.CommitOnlyTest)')","[134962, 137009]"
"('URIish.java', 'org.eclipse.jgit.transport.URIish', '<init>', '^([a-z][a-z0-9+-]+)://(?:(?:([^/:@]+)(?::([^\\\\/]+))?@)?((?:[^\\\\/:]+)|(?:\\[[0-9a-f:]+\\]))(?::(\\d+))?((?:/~(?:[^\\\\/]+))?[\\\\/]))?(.+)?$', 'file:///tmp/jgit_test_1207894147158696196_tmp/tmp_1287066233860856939')","[162980, 163042, 163096]"
"('Description.java', 'org.junit.runner.Description', 'methodAndClassNamePatternGroupOrDefault', '([\\s\\S]*)\\((.*)\\)', 'testMultipleEscapedCharacters1(org.eclipse.jgit.fnmatch.FileNameMatcherTest)')","[42679, 45998]"
"('Description.java', 'org.junit.runner.Description', 'methodAndClassNamePatternGroupOrDefault', '([\\s\\S]*)\\((.*)\\)', 'refLogIncludesCommitMessage(org.eclipse.jgit.api.StashCreateCommandTest)')","[156030, 156376]"
"('Description.java', 'org.junit.runner.Description', 'methodAndClassNamePatternGroupOrDefault', '([\\s\\S]*)\\((.*)\\)', 'testParseGitFileName_DqFooSpLfNulBar(org.eclipse.jgit.patch.FileHeaderTest)')","[366, 833]"
"('URIish.java', 'org.eclipse.jgit.transport.URIish', '<init>', '^(file):([\\\\/](?![\\\\/])((?:[A-Za-z]:)?[\\\\/]?(?:(?:[^\\\\/]+[\\\\/]+)*[^\\\\/]+[\\\\/]*)))$', 'http://me:wtf@[::1]:1234//abc')",[200340]
"('Description.java', 'org.junit.runner.Description', 'methodAndClassNamePatternGroupOrDefault', '([\\s\\S]*)\\((.*)\\)', 'testEmptyBuilder(org.eclipse.jgit.util.RefListTest)')","[20138, 20638]"
"('URIish.java', 'org.eclipse.jgit.transport.URIish', '<init>', '^([a-z][a-z0-9+-]+)://(?:(?:([^/:@]+)(?::([^\\\\/]+))?@)?((?:[^\\\\/:]+)|(?:\\[[0-9a-f:]+\\]))(?::(\\d+))?((?:/~(?:[^\\\\/]+))?[\\\\/]))?(.+)?$', 'https://l usr\\example.com@[::1]/D:/x')","[232686, 232870]"
"('Description.java', 'org.junit.runner.Description', 'methodAndClassNamePatternGroupOrDefault', '([\\s\\S]*)\\((.*)\\)', 'testOnlyOption_f1_12_f2_14_b(org.eclipse.jgit.api.CommitOnlyTest)')","[135508, 137581]"
"('URIish.java', 'org.eclipse.jgit.transport.URIish', '<init>', '^([a-z][a-z0-9+-]+)://(?:(?:([^/:@]+)(?::([^\\\\/]+))?@)?((?:[^\\\\/:]+)|(?:\\[[0-9a-f:]+\\]))(?::(\\d+))?((?:/~(?:[^\\\\/]+))?[\\\\/]))?(.+)?$', 'http://me@[::1]//abc')","[228224, 228408]"
"('Description.java', 'org.junit.runner.Description', 'methodAndClassNamePatternGroupOrDefault', '([\\s\\S]*)\\((.*)\\)', 'testSequentialCherryPick(org.eclipse.jgit.api.CherryPickCommandTest)')","[168383, 168646]"
"('URIish.java', 'org.eclipse.jgit.transport.URIish', '<init>', '^(file):([\\\\/](?![\\\\/])((?:[A-Za-z]:)?[\\\\/]?(?:(?:[^\\\\/]+[\\\\/]+)*[^\\\\/]+[\\\\/]*)))$', 'http://user:secret@host.xy:80/some%2Fpath')","[250327, 250373]"
"('Description.java', 'org.junit.runner.Description', 'methodAndClassNamePatternGroupOrDefault', '([\\s\\S]*)\\((.*)\\)', 'testStandardFormat_LargeObject_CorruptZLibStream(org.eclipse.jgit.internal.storage.file.UnpackedObjectTest)')","[121769, 122095]"
"('FastIgnoreRule.java', 'org.eclipse.jgit.ignore.FastIgnoreRule', 'isMatch', '[b-ce-e]', 'c')",[102513]
"('URIish.java', 'org.eclipse.jgit.transport.URIish', '<init>', '^([a-z][a-z0-9+-]+)://(?:(?:([^/:@]+)(?::([^\\\\/]+))?@)?((?:[^\\\\/:]+)|(?:\\[[0-9a-f:]+\\]))(?::(\\d+))?((?:/~(?:[^\\\\/]+))?[\\\\/]))?(.+)?$', '../tmp_5292851732867779189')",[259162]
"('Description.java', 'org.junit.runner.Description', 'methodAndClassNamePatternGroupOrDefault', '([\\s\\S]*)\\((.*)\\)', 'shouldRaiseErrorOnNullURI(org.eclipse.jgit.transport.URIishTest)')","[188233, 189600]"
"('FastIgnoreRule.java', 'org.eclipse.jgit.ignore.FastIgnoreRule', 'isMatch', '[=a=]', '=')",[100977]
"('URIish.java', 'org.eclipse.jgit.transport.URIish', '<init>', '^(file):([\\\\/](?![\\\\/])((?:[A-Za-z]:)?[\\\\/]?(?:(?:[^\\\\/]+[\\\\/]+)*[^\\\\/]+[\\\\/]*)))$', '/tmp/jgit_test_1202794844773508614_tmp/tmp_7885106280618449498.git')",[183394]
"('URIish.java', 'org.eclipse.jgit.transport.URIish', '<init>', '^(file):([\\\\/](?![\\\\/])((?:[A-Za-z]:)?[\\\\/]?(?:(?:[^\\\\/]+[\\\\/]+)*[^\\\\/]+[\\\\/]*)))$', 'https://l usr\\example.com@[::1]//abc')","[232617, 232801]"
"('Description.java', 'org.junit.runner.Description', 'methodAndClassNamePatternGroupOrDefault', '([\\s\\S]*)\\((.*)\\)', 'testInitWithDefaultsNonBare(org.eclipse.jgit.api.InitCommandTest)')","[156651, 156844]"
"('Description.java', 'org.junit.runner.Description', 'methodAndClassNamePatternGroupOrDefault', '([\\s\\S]*)\\((.*)\\)', 'testWrap(org.eclipse.jgit.treewalk.filter.NotTreeFilterTest)')","[263621, 263750]"
"('Description.java', 'org.junit.runner.Description', 'methodAndClassNamePatternGroupOrDefault', '([\\s\\S]*)\\((.*)\\)', 'testAddFails(org.eclipse.jgit.revwalk.AlwaysEmptyRevQueueTest)')","[175947, 176013]"
"('FastIgnoreRule.java', 'org.eclipse.jgit.ignore.FastIgnoreRule', 'isMatch', 'a.*a.*a', 'aaaaaaaa')",[101679]
"('Description.java', 'org.junit.runner.Description', 'methodAndClassNamePatternGroupOrDefault', '([\\s\\S]*)\\((.*)\\)', 'testCompareEntriesOffsetsWithFindOffsets(org.eclipse.jgit.internal.storage.file.PackIndexV1Test)')","[113647, 113779]"
"('Description.java', 'org.junit.runner.Description', 'methodAndClassNamePatternGroupOrDefault', '([\\s\\S]*)\\((.*)\\)', 'testDirtySubmoduleIndexAndWorktree(org.eclipse.jgit.lib.IndexDiffSubmoduleTest)')","[56407, 56561]"
"('FastIgnoreRule.java', 'org.eclipse.jgit.ignore.FastIgnoreRule', 'isMatch', '[tv]est\\.sta[a-d]', 'vest.stac')","[104990, 106220]"
"('URIish.java', 'org.eclipse.jgit.transport.URIish', '<init>', '^([a-z][a-z0-9+-]+)://(?:(?:([^/:@]+)(?::([^\\\\/]+))?@)?((?:[^\\\\/:]+)|(?:\\[[0-9a-f:]+\\]))(?::(\\d+))?((?:/~(?:[^\\\\/]+))?[\\\\/]))?(.+)?$', 'ssh+git://lusr\\example:wtf@[::1]:1234/D:\\x')",[199351]
"('Description.java', 'org.junit.runner.Description', 'methodAndClassNamePatternGroupOrDefault', '([\\s\\S]*)\\((.*)\\)', 'testCheckoutOfFileWithInexistentParentDir(org.eclipse.jgit.api.CheckoutCommandTest)')","[149346, 149877]"
"('Description.java', 'org.junit.runner.Description', 'methodAndClassNamePatternGroupOrDefault', '([\\s\\S]*)\\((.*)\\)', 'testFilter_NONE_Or_ALL(org.eclipse.jgit.revwalk.RevWalkFilterTest)')","[180647, 180968]"
"('URIish.java', 'org.eclipse.jgit.transport.URIish', '<init>', '^([a-z][a-z0-9+-]+)://(?:(?:([^/:@]+)(?::([^\\\\/]+))?@)?((?:[^\\\\/:]+)|(?:\\[[0-9a-f:]+\\]))(?::(\\d+))?((?:/~(?:[^\\\\/]+))?[\\\\/]))?(.+)?$', 'file:///tmp/jgit_test_4582028382631114631_tmp/tmp_6846814007920204467/.git/')",[57409]
"('Description.java', 'org.junit.runner.Description', 'methodAndClassNamePatternGroupOrDefault', '([\\s\\S]*)\\((.*)\\)', 'testStopOnConflictAndFailContinueIfFileIsDirty(org.eclipse.jgit.api.RebaseCommandTest)')","[132167, 133690]"
"('URIish.java', 'org.eclipse.jgit.transport.URIish', '<init>', '^([a-z][a-z0-9+-]+)://(?:(?:([^/:@]+)(?::([^\\\\/]+))?@)?((?:[^\\\\/:]+)|(?:\\[[0-9a-f:]+\\]))(?::(\\d+))?((?:/~(?:[^\\\\/]+))?[\\\\/]))?(.+)?$', 'https://l usr\\example.com@example.com:80//abc')",[218840]
"('URIish.java', 'org.eclipse.jgit.transport.URIish', '<init>', '^(file):([\\\\/](?![\\\\/])((?:[A-Za-z]:)?[\\\\/]?(?:(?:[^\\\\/]+[\\\\/]+)*[^\\\\/]+[\\\\/]*)))$', 'http://lusr\\example@example.com:80/D:\\x')",[216126]
"('URIish.java', 'org.eclipse.jgit.transport.URIish', '<init>', '^(file):([\\\\/](?![\\\\/])((?:[A-Za-z]:)?[\\\\/]?(?:(?:[^\\\\/]+[\\\\/]+)*[^\\\\/]+[\\\\/]*)))$', 'ssh+git://1.2.3.4/D:/x')","[237815, 237999, 238919, 239103, 240023, 240207]"
"('Description.java', 'org.junit.runner.Description', 'methodAndClassNamePatternGroupOrDefault', '([\\s\\S]*)\\((.*)\\)', 'testEmptyTree_WithTreeWalk(org.eclipse.jgit.dircache.DirCacheIteratorTest)')","[170170, 170406]"
"('URIish.java', 'org.eclipse.jgit.transport.URIish', '<init>', '^(file):([\\\\/](?![\\\\/])((?:[A-Za-z]:)?[\\\\/]?(?:(?:[^\\\\/]+[\\\\/]+)*[^\\\\/]+[\\\\/]*)))$', 'ssh://l usr\\example.com@1.2.3.4:1234/D:\\x')",[208582]
"('Description.java', 'org.junit.runner.Description', 'methodAndClassNamePatternGroupOrDefault', '([\\s\\S]*)\\((.*)\\)', 'testEmptyValueWithLF(org.eclipse.jgit.revwalk.FooterLineTest)')","[173507, 173910]"
"('URIish.java', 'org.eclipse.jgit.transport.URIish', '<init>', '^(file):([\\\\/](?![\\\\/])((?:[A-Za-z]:)?[\\\\/]?(?:(?:[^\\\\/]+[\\\\/]+)*[^\\\\/]+[\\\\/]*)))$', 'ssh+git://l usr\\example.com:wtf@example.com:1234//abc')",[197396]
"('URIish.java', 'org.eclipse.jgit.transport.URIish', '<init>', '^(file):([\\\\/](?![\\\\/])((?:[A-Za-z]:)?[\\\\/]?(?:(?:[^\\\\/]+[\\\\/]+)*[^\\\\/]+[\\\\/]*)))$', 'https://me@example.com:1234/D:\\x')",[217046]
"('URIish.java', 'org.eclipse.jgit.transport.URIish', '<init>', '^([a-z][a-z0-9+-]+)://(?:(?:([^/:@]+)(?::([^\\\\/]+))?@)?((?:[^\\\\/:]+)|(?:\\[[0-9a-f:]+\\]))(?::(\\d+))?((?:/~(?:[^\\\\/]+))?[\\\\/]))?(.+)?$', 'ssh://l usr\\example.com:wtf@example.com:80//')",[193353]
"('Description.java', 'org.junit.runner.Description', 'methodAndClassNamePatternGroupOrDefault', '([\\s\\S]*)\\((.*)\\)', 'testSpecialGroupCase8[OldRule? true](org.eclipse.jgit.ignore.IgnoreRuleSpecialCasesTest)')","[88502, 95586]"
"('URIish.java', 'org.eclipse.jgit.transport.URIish', '<init>', '^(file):([\\\\/](?![\\\\/])((?:[A-Za-z]:)?[\\\\/]?(?:(?:[^\\\\/]+[\\\\/]+)*[^\\\\/]+[\\\\/]*)))$', 'ssh+git://me:wtf@1.2.3.4:1234/D:/x')",[196706]
"('Description.java', 'org.junit.runner.Description', 'methodAndClassNamePatternGroupOrDefault', '([\\s\\S]*)\\((.*)\\)', 'testNoFooters_NewlineOnlyBody5(org.eclipse.jgit.revwalk.FooterLineTest)')","[173591, 173998]"
"('URIish.java', 'org.eclipse.jgit.transport.URIish', '<init>', '^(file):([\\\\/](?![\\\\/])((?:[A-Za-z]:)?[\\\\/]?(?:(?:[^\\\\/]+[\\\\/]+)*[^\\\\/]+[\\\\/]*)))$', 'ssh://me@[::1]:1234//')",[207708]
"('Description.java', 'org.junit.runner.Description', 'methodAndClassNamePatternGroupOrDefault', '([\\s\\S]*)\\((.*)\\)', 'testConflictFreeWithSingleFile(org.eclipse.jgit.api.RebaseCommandTest)')","[132482, 134020]"
"('URIish.java', 'org.eclipse.jgit.transport.URIish', '<init>', '^(file):([\\\\/](?![\\\\/])((?:[A-Za-z]:)?[\\\\/]?(?:(?:[^\\\\/]+[\\\\/]+)*[^\\\\/]+[\\\\/]*)))$', 'http://l usr\\example.com:wtf@example.com:80//')",[200846]
"('Description.java', 'org.junit.runner.Description', 'methodAndClassNamePatternGroupOrDefault', '([\\s\\S]*)\\((.*)\\)', 'testCopyFileBare(org.eclipse.jgit.gitrepo.RepoCommandTest)')","[2426, 2758]"
"('Description.java', 'org.junit.runner.Description', 'methodAndClassNamePatternGroupOrDefault', '([\\s\\S]*)\\((.*)\\)', 'testPrefixCompare_Full(org.eclipse.jgit.lib.AbbreviatedObjectIdTest)')","[55357, 55893]"
"('Description.java', 'org.junit.runner.Description', 'methodAndClassNamePatternGroupOrDefault', '([\\s\\S]*)\\((.*)\\)', 'testFormatWithConflictsNoFooter(org.eclipse.jgit.merge.MergeMessageFormatterTest)')","[16140, 16460]"
"('Description.java', 'org.junit.runner.Description', 'methodAndClassNamePatternGroupOrDefault', '([\\s\\S]*)\\((.*)\\)', 'testAddExistingSingleFile(org.eclipse.jgit.api.AddCommandTest)')","[164789, 165228]"
"('URIish.java', 'org.eclipse.jgit.transport.URIish', '<init>', '^(file):([\\\\/](?![\\\\/])((?:[A-Za-z]:)?[\\\\/]?(?:(?:[^\\\\/]+[\\\\/]+)*[^\\\\/]+[\\\\/]*)))$', 'https://lusr\\example@1.2.3.4:1234//')",[220059]
"('URIish.java', 'org.eclipse.jgit.transport.URIish', '<init>', '^([a-z][a-z0-9+-]+)://(?:(?:([^/:@]+)(?::([^\\\\/]+))?@)?((?:[^\\\\/:]+)|(?:\\[[0-9a-f:]+\\]))(?::(\\d+))?((?:/~(?:[^\\\\/]+))?[\\\\/]))?(.+)?$', 'https://lusr\\example@[::1]:1234//abc')",[220496]
"('URIish.java', 'org.eclipse.jgit.transport.URIish', '<init>', '^(?:([^/:@]+)(?::([^\\\\/]+))?@)?((?:[^\\\\/:]+)|(?:\\[[0-9a-f:]+\\])):((?:(?:/~(?:[^\\\\/]+))[\\\\/])?(?:(?:[^\\\\/]+[\\\\/]+)*[^\\\\/]+[\\\\/]*))$', 'example.com:/some/p ath')","[251017, 251109]"
"('Description.java', 'org.junit.runner.Description', 'methodAndClassNamePatternGroupOrDefault', '([\\s\\S]*)\\((.*)\\)', 'org.eclipse.jgit.dircache.DirCacheTreeTest')","[171608, 172087]"
"('URIish.java', 'org.eclipse.jgit.transport.URIish', '<init>', '^([a-z][a-z0-9+-]+)://(?:(?:([^/:@]+)(?::([^\\\\/]+))?@)?((?:[^\\\\/:]+)|(?:\\[[0-9a-f:]+\\]))(?::(\\d+))?((?:/~(?:[^\\\\/]+))?[\\\\/]))?(.+)?$', 'ssh+git://lusr\\example@[::1]:80//abc')",[213481]
"('Description.java', 'org.junit.runner.Description', 'methodAndClassNamePatternGroupOrDefault', '([\\s\\S]*)\\((.*)\\)', 'testValidTreeSorting4(org.eclipse.jgit.lib.ObjectCheckerTest)')","[49088, 51604]"
"('URIish.java', 'org.eclipse.jgit.transport.URIish', '<init>', '^(file):([\\\\/](?![\\\\/])((?:[A-Za-z]:)?[\\\\/]?(?:(?:[^\\\\/]+[\\\\/]+)*[^\\\\/]+[\\\\/]*)))$', 'http://me@1.2.3.4/D:\\x')","[227925, 228109]"
"('ChangeIdUtil.java', 'org.eclipse.jgit.util.ChangeIdUtil', 'indexOfChangeId', '(^Change-Id: *I[a-f0-9]{40}$)', 'h')",[37478]
"('URIish.java', 'org.eclipse.jgit.transport.URIish', '<init>', '^([a-z][a-z0-9+-]+)://(?:(?:([^/:@]+)(?::([^\\\\/]+))?@)?((?:[^\\\\/:]+)|(?:\\[[0-9a-f:]+\\]))(?::(\\d+))?((?:/~(?:[^\\\\/]+))?[\\\\/]))?(.+)?$', 'ssh://lusr\\example@example.com//abc')","[223072, 223256]"
"('URIish.java', 'org.eclipse.jgit.transport.URIish', '<init>', '^(file):([\\\\/](?![\\\\/])((?:[A-Za-z]:)?[\\\\/]?(?:(?:[^\\\\/]+[\\\\/]+)*[^\\\\/]+[\\\\/]*)))$', '../../foo/bar')","[250097, 250212]"
"('URIish.java', 'org.eclipse.jgit.transport.URIish', '<init>', '^(file):([\\\\/](?![\\\\/])((?:[A-Za-z]:)?[\\\\/]?(?:(?:[^\\\\/]+[\\\\/]+)*[^\\\\/]+[\\\\/]*)))$', 'file:///tmp/jgit_test_4698797764319809264_tmp/tmp_3689618803005173298/.git/')",[163441]
"('URIish.java', 'org.eclipse.jgit.transport.URIish', '<init>', '^([a-z][a-z0-9+-]+)://(?:(?:([^/:@]+)(?::([^\\\\/]+))?@)?((?:[^\\\\/:]+)|(?:\\[[0-9a-f:]+\\]))(?::(\\d+))?((?:/~(?:[^\\\\/]+))?[\\\\/]))?(.+)?$', 'http://lusr\\example@example.com//abc')","[229696, 229880]"
"('URIish.java', 'org.eclipse.jgit.transport.URIish', '<init>', '^([a-z][a-z0-9+-]+)://(?:(?:([^/:@]+)(?::([^\\\\/]+))?@)?((?:[^\\\\/:]+)|(?:\\[[0-9a-f:]+\\]))(?::(\\d+))?((?:/~(?:[^\\\\/]+))?[\\\\/]))?(.+)?$', 'file:///tmp/jgit_test_7290935297598507122_tmp/tmp_6439669014203965208/.git/')",[262732]
"('Description.java', 'org.junit.runner.Description', 'methodAndClassNamePatternGroupOrDefault', '([\\s\\S]*)\\((.*)\\)', 'testInversedGroupCase2[OldRule? false](org.eclipse.jgit.ignore.IgnoreRuleSpecialCasesTest)')","[85997, 93102]"
"('Description.java', 'org.junit.runner.Description', 'methodAndClassNamePatternGroupOrDefault', '([\\s\\S]*)\\((.*)\\)', 'testBuilder_ToString(org.eclipse.jgit.util.RefListTest)')","[19844, 20330]"
"('Description.java', 'org.junit.runner.Description', 'methodAndClassNamePatternGroupOrDefault', '([\\s\\S]*)\\((.*)\\)', 'testReadBoolean_YesNo1(org.eclipse.jgit.lib.ConfigTest)')","[69516, 70236]"
"('Description.java', 'org.junit.runner.Description', 'methodAndClassNamePatternGroupOrDefault', '([\\s\\S]*)\\((.*)\\)', 'testUpperGroupCase4[OldRule? false](org.eclipse.jgit.ignore.IgnoreRuleSpecialCasesTest)')","[87331, 94436]"
"('Description.java', 'org.junit.runner.Description', 'methodAndClassNamePatternGroupOrDefault', '([\\s\\S]*)\\((.*)\\)', 'fetchWithExplicitTagsShouldUpdateLocal(org.eclipse.jgit.api.FetchCommandTest)')","[124776, 124905]"
"('URIish.java', 'org.eclipse.jgit.transport.URIish', '<init>', '^(file):([\\\\/](?![\\\\/])((?:[A-Za-z]:)?[\\\\/]?(?:(?:[^\\\\/]+[\\\\/]+)*[^\\\\/]+[\\\\/]*)))$', 'ssh+git://me:wtf@1.2.3.4:80/D:\\x')",[196936]
"('URIish.java', 'org.eclipse.jgit.transport.URIish', '<init>', '^([a-z][a-z0-9+-]+)://(?:(?:([^/:@]+)(?::([^\\\\/]+))?@)?((?:[^\\\\/:]+)|(?:\\[[0-9a-f:]+\\]))(?::(\\d+))?((?:/~(?:[^\\\\/]+))?[\\\\/]))?(.+)?$', 'https://me@1.2.3.4:80//')",[217506]
"('Description.java', 'org.junit.runner.Description', 'methodAndClassNamePatternGroupOrDefault', '([\\s\\S]*)\\((.*)\\)', 'test8_FromString(org.eclipse.jgit.lib.AbbreviatedObjectIdTest)')","[55588, 56135]"
"('Description.java', 'org.junit.runner.Description', 'methodAndClassNamePatternGroupOrDefault', '([\\s\\S]*)\\((.*)\\)', 'testRemoveRevFlagSet(org.eclipse.jgit.revwalk.RevObjectTest)')","[178270, 178490]"
"('Description.java', 'org.junit.runner.Description', 'methodAndClassNamePatternGroupOrDefault', '([\\s\\S]*)\\((.*)\\)', 'testReadACK_ACK1(org.eclipse.jgit.transport.PacketLineInTest)')","[184353, 184885]"
"('Description.java', 'org.junit.runner.Description', 'methodAndClassNamePatternGroupOrDefault', '([\\s\\S]*)\\((.*)\\)', 'testGConeCommit(org.eclipse.jgit.api.GarbageCollectCommandTest)')","[155696, 155739]"
"('Description.java', 'org.junit.runner.Description', 'methodAndClassNamePatternGroupOrDefault', '([\\s\\S]*)\\((.*)\\)', 'testOnlyOption_f1_1_f2_14_e(org.eclipse.jgit.api.CommitOnlyTest)')","[136306, 138417]"
"('FastIgnoreRule.java', 'org.eclipse.jgit.ignore.FastIgnoreRule', 'isMatch', '[\\p{XDigit}]', 'd')",[102045]
"('Description.java', 'org.junit.runner.Description', 'methodAndClassNamePatternGroupOrDefault', '([\\s\\S]*)\\((.*)\\)', 'multipleEdits(org.eclipse.jgit.api.StashApplyCommandTest)')","[142519, 143071]"
"('Description.java', 'org.junit.runner.Description', 'methodAndClassNamePatternGroupOrDefault', '([\\s\\S]*)\\((.*)\\)', 'testStandardFormat_SmallObject(org.eclipse.jgit.internal.storage.file.UnpackedObjectTest)')","[121559, 121875]"
"('URIish.java', 'org.eclipse.jgit.transport.URIish', '<init>', '^([a-z][a-z0-9+-]+)://(?:(?:([^/:@]+)(?::([^\\\\/]+))?@)?((?:[^\\\\/:]+)|(?:\\[[0-9a-f:]+\\]))(?::(\\d+))?((?:/~(?:[^\\\\/]+))?[\\\\/]))?(.+)?$', 'ssh://lusr\\example@1.2.3.4/D:\\x')","[223532, 223716]"
"('URIish.java', 'org.eclipse.jgit.transport.URIish', '<init>', '^(file):([\\\\/](?![\\\\/])((?:[A-Za-z]:)?[\\\\/]?(?:(?:[^\\\\/]+[\\\\/]+)*[^\\\\/]+[\\\\/]*)))$', 'http://l usr\\example.com:wtf@1.2.3.4:1234/D:\\x')",[201168]
"('Description.java', 'org.junit.runner.Description', 'methodAndClassNamePatternGroupOrDefault', '([\\s\\S]*)\\((.*)\\)', 'testFindRemoteRefUpdatesWildcardNoTracking(org.eclipse.jgit.transport.TransportTest)')","[254523, 254698]"
"('Description.java', 'org.junit.runner.Description', 'methodAndClassNamePatternGroupOrDefault', '([\\s\\S]*)\\((.*)\\)', 'testGetValidWithSlashesDotGitHumanishName(org.eclipse.jgit.transport.URIishTest)')","[188254, 189622]"
"('URIish.java', 'org.eclipse.jgit.transport.URIish', '<init>', '^(file):([\\\\/](?![\\\\/])((?:[A-Za-z]:)?[\\\\/]?(?:(?:[^\\\\/]+[\\\\/]+)*[^\\\\/]+[\\\\/]*)))$', 'https://lusr\\example:wtf@1.2.3.4:1234/D:/x')",[206328]
"('Description.java', 'org.junit.runner.Description', 'methodAndClassNamePatternGroupOrDefault', '([\\s\\S]*)\\((.*)\\)', 'testRenameOverExistingNonEmptyDirectory(org.eclipse.jgit.util.FileUtilTest)')","[23352, 23693]"
"('Description.java', 'org.junit.runner.Description', 'methodAndClassNamePatternGroupOrDefault', '([\\s\\S]*)\\((.*)\\)', 'testReadLines_mixed(org.eclipse.jgit.util.ReadLinesTest)')","[30495, 30625]"
"('Description.java', 'org.junit.runner.Description', 'methodAndClassNamePatternGroupOrDefault', '([\\s\\S]*)\\((.*)\\)', 'org.eclipse.jgit.revwalk.RevCommitListTest')","[176663, 183517]"
"('URIish.java', 'org.eclipse.jgit.transport.URIish', '<init>', '^([a-z][a-z0-9+-]+)://(?:(?:([^/:@]+)(?::([^\\\\/]+))?@)?((?:[^\\\\/:]+)|(?:\\[[0-9a-f:]+\\]))(?::(\\d+))?((?:/~(?:[^\\\\/]+))?[\\\\/]))?(.+)?$', 'http://l usr\\example.com@example.com:1234//abc')",[214769]
"('URIish.java', 'org.eclipse.jgit.transport.URIish', '<init>', '^(file):([\\\\/](?![\\\\/])((?:[A-Za-z]:)?[\\\\/]?(?:(?:[^\\\\/]+[\\\\/]+)*[^\\\\/]+[\\\\/]*)))$', 'file:/tmp/jgit_test_7992031711278970977_tmp/tmp_2047810706527378292/.git/')",[163148]
"('URIish.java', 'org.eclipse.jgit.transport.URIish', '<init>', '^(file):([\\\\/](?![\\\\/])((?:[A-Za-z]:)?[\\\\/]?(?:(?:[^\\\\/]+[\\\\/]+)*[^\\\\/]+[\\\\/]*)))$', 'file:///tmp/jgit_test_1357611572328791281_tmp/tmp_8891242238099152345/.git/')",[59221]
"('URIish.java', 'org.eclipse.jgit.transport.URIish', '<init>', '^([a-z][a-z0-9+-]+)://(?:(?:([^/:@]+)(?::([^\\\\/]+))?@)?((?:[^\\\\/:]+)|(?:\\[[0-9a-f:]+\\]))(?::(\\d+))?((?:/~(?:[^\\\\/]+))?[\\\\/]))?(.+)?$', 'https://lusr\\example@example.com//abc')","[233008, 233192]"
"('Description.java', 'org.junit.runner.Description', 'methodAndClassNamePatternGroupOrDefault', '([\\s\\S]*)\\((.*)\\)', 'testConcurrentInsertionOfBlobsToTheSameNewFanOutDirectory(org.eclipse.jgit.internal.storage.file.ObjectDirectoryTest)')","[117491, 117513]"
"('Description.java', 'org.junit.runner.Description', 'methodAndClassNamePatternGroupOrDefault', '([\\s\\S]*)\\((.*)\\)', 'test6(org.eclipse.jgit.revwalk.RevWalkPathFilter6012Test)')","[179035, 179188]"
"('Description.java', 'org.junit.runner.Description', 'methodAndClassNamePatternGroupOrDefault', '([\\s\\S]*)\\((.*)\\)', 'org.eclipse.jgit.attributes.AttributeTest')","[72536, 72602]"
"('ChangeIdUtil.java', 'org.eclipse.jgit.util.ChangeIdUtil', 'indexOfChangeId', '(^Change-Id: *I[a-f0-9]{40}$)', '')","[33245, 33614, 33660, 33706, 33821, 33867, 34089, 34348, 34685, 34865, 35144, 35376, 35505, 35634, 35789, 35970, 36200, 36278, 36356, 36434, 36777, 36855, 37010, 37140, 37270, 37426, 37556, 37660, 37789, 38097, 155500]"
"('Description.java', 'org.junit.runner.Description', 'methodAndClassNamePatternGroupOrDefault', '([\\s\\S]*)\\((.*)\\)', 'testGetRefs_DeeplyNestedBranch(org.eclipse.jgit.internal.storage.file.RefDirectoryTest)')","[111286, 112483]"
"('Description.java', 'org.junit.runner.Description', 'methodAndClassNamePatternGroupOrDefault', '([\\s\\S]*)\\((.*)\\)', 'testLockMissing_RealIndex(org.eclipse.jgit.dircache.DirCacheBasicTest)')","[171401, 171954]"
"('Description.java', 'org.junit.runner.Description', 'methodAndClassNamePatternGroupOrDefault', '([\\s\\S]*)\\((.*)\\)', 'testMixedGroupCase3(org.eclipse.jgit.fnmatch.FileNameMatcherTest)')","[41776, 45052]"
"('FastIgnoreRule.java', 'org.eclipse.jgit.ignore.FastIgnoreRule', 'isMatch', '[\\p{Alnum}]', ':')",[102279]
"('URIish.java', 'org.eclipse.jgit.transport.URIish', '<init>', '^([a-z][a-z0-9+-]+)://(?:(?:([^/:@]+)(?::([^\\\\/]+))?@)?((?:[^\\\\/:]+)|(?:\\[[0-9a-f:]+\\]))(?::(\\d+))?((?:/~(?:[^\\\\/]+))?[\\\\/]))?(.+)?$', 'https://l usr\\example.com:wtf@example.com:1234/D:/x')",[204879]
"('Description.java', 'org.junit.runner.Description', 'methodAndClassNamePatternGroupOrDefault', '([\\s\\S]*)\\((.*)\\)', 'testMaliciousGitPathEndDotWindows3(org.eclipse.jgit.lib.DirCacheCheckoutMaliciousPathTest)')","[66676, 67569]"
"('URIish.java', 'org.eclipse.jgit.transport.URIish', '<init>', '^(file):([\\\\/](?![\\\\/])((?:[A-Za-z]:)?[\\\\/]?(?:(?:[^\\\\/]+[\\\\/]+)*[^\\\\/]+[\\\\/]*)))$', 'https://example.com/D:/x')","[244071, 244255, 245175, 245359, 246279, 246463]"
"('FastIgnoreRule.java', 'org.eclipse.jgit.ignore.FastIgnoreRule', 'isMatch', '[\\p{javaLetter}]', ':')",[100091]
"('Description.java', 'org.junit.runner.Description', 'methodAndClassNamePatternGroupOrDefault', '([\\s\\S]*)\\((.*)\\)', 'testVerySimplePatternCase4[OldRule? true](org.eclipse.jgit.ignore.IgnoreRuleSpecialCasesTest)')","[89376, 96460]"
"('URIish.java', 'org.eclipse.jgit.transport.URIish', '<init>', '^(file):([\\\\/](?![\\\\/])((?:[A-Za-z]:)?[\\\\/]?(?:(?:[^\\\\/]+[\\\\/]+)*[^\\\\/]+[\\\\/]*)))$', 'ssh://lusr\\example@example.com:1234/D:\\x')",[209318]
"('Description.java', 'org.junit.runner.Description', 'methodAndClassNamePatternGroupOrDefault', '([\\s\\S]*)\\((.*)\\)', 'shouldWorkForNormalCase(org.eclipse.jgit.revwalk.RevWalkUtilsCountTest)')","[174508, 174635]"
"('Description.java', 'org.junit.runner.Description', 'methodAndClassNamePatternGroupOrDefault', '([\\s\\S]*)\\((.*)\\)', 'logAllCommitsWithSkip(org.eclipse.jgit.api.LogCommandTest)')","[130799, 130951]"
"('URIish.java', 'org.eclipse.jgit.transport.URIish', '<init>', '^([\\\\/]?((?:[A-Za-z]:)?[\\\\/]?(?:(?:[^\\\\/]+[\\\\/]+)*[^\\\\/]+[\\\\/]*)))$', '/tmp/jgit_test_8705262332183795899_tmp/tmp_6035244968182702733')","[148898, 149043]"
"('URIish.java', 'org.eclipse.jgit.transport.URIish', '<init>', '^([a-z][a-z0-9+-]+)://(?:(?:([^/:@]+)(?::([^\\\\/]+))?@)?((?:[^\\\\/:]+)|(?:\\[[0-9a-f:]+\\]))(?::(\\d+))?((?:/~(?:[^\\\\/]+))?[\\\\/]))?(.+)?$', 'http://l usr\\example.com:wtf@[::1]:1234/D:\\x')",[201559]
"('URIish.java', 'org.eclipse.jgit.transport.URIish', '<init>', '^(file):([\\\\/](?![\\\\/])((?:[A-Za-z]:)?[\\\\/]?(?:(?:[^\\\\/]+[\\\\/]+)*[^\\\\/]+[\\\\/]*)))$', 'file:/tmp/jgit_test_4874465296214480399_tmp/tmp_6126357013847573839/.git/')",[56699]
"('Description.java', 'org.junit.runner.Description', 'methodAndClassNamePatternGroupOrDefault', '([\\s\\S]*)\\((.*)\\)', 'untrackedFileNotIncluded(org.eclipse.jgit.api.StashCreateCommandTest)')","[156135, 156486]"
"('Description.java', 'org.junit.runner.Description', 'methodAndClassNamePatternGroupOrDefault', '([\\s\\S]*)\\((.*)\\)', 'testRemoveCached(org.eclipse.jgit.api.RmCommandTest)')","[157094, 157137]"
"('URIish.java', 'org.eclipse.jgit.transport.URIish', '<init>', '^(file):([\\\\/](?![\\\\/])((?:[A-Za-z]:)?[\\\\/]?(?:(?:[^\\\\/]+[\\\\/]+)*[^\\\\/]+[\\\\/]*)))$', 'https://lusr\\example@1.2.3.4:80//')",[220243]
"('Description.java', 'org.junit.runner.Description', 'methodAndClassNamePatternGroupOrDefault', '([\\s\\S]*)\\((.*)\\)', 'testRules(org.eclipse.jgit.attributes.AttributesNodeWorkingTreeIteratorTest)')","[73271, 73357]"
"('Description.java', 'org.junit.runner.Description', 'methodAndClassNamePatternGroupOrDefault', '([\\s\\S]*)\\((.*)\\)', 'testWriteLine2(org.eclipse.jgit.diff.RawTextTest)')","[10810, 11131]"
"('Description.java', 'org.junit.runner.Description', 'methodAndClassNamePatternGroupOrDefault', '([\\s\\S]*)\\((.*)\\)', 'testALot(org.eclipse.jgit.transport.URIishTest)')","[188359, 189732]"
"('Description.java', 'org.junit.runner.Description', 'methodAndClassNamePatternGroupOrDefault', '([\\s\\S]*)\\((.*)\\)', 'test023_createCommitNonAnullii(org.eclipse.jgit.internal.storage.file.T0003_BasicTest)')","[116840, 117389]"
"('Description.java', 'org.junit.runner.Description', 'methodAndClassNamePatternGroupOrDefault', '([\\s\\S]*)\\((.*)\\)', 'testWritePacket1(org.eclipse.jgit.transport.PacketLineOutTest)')","[191581, 191750]"
"('Description.java', 'org.junit.runner.Description', 'methodAndClassNamePatternGroupOrDefault', '([\\s\\S]*)\\((.*)\\)', 'testCreateBranchAtHiddenCommitFails(org.eclipse.jgit.transport.ReceivePackAdvertiseRefsHookTest)')","[183152, 183303]"
"('URIish.java', 'org.eclipse.jgit.transport.URIish', '<init>', '^([a-z][a-z0-9+-]+)://(?:(?:([^/:@]+)(?::([^\\\\/]+))?@)?((?:[^\\\\/:]+)|(?:\\[[0-9a-f:]+\\]))(?::(\\d+))?((?:/~(?:[^\\\\/]+))?[\\\\/]))?(.+)?$', 'http://lusr\\example@1.2.3.4//')","[230018, 230202]"
"('URIish.java', 'org.eclipse.jgit.transport.URIish', '<init>', '^(file):([\\\\/](?![\\\\/])((?:[A-Za-z]:)?[\\\\/]?(?:(?:[^\\\\/]+[\\\\/]+)*[^\\\\/]+[\\\\/]*)))$', 'file:/tmp/jgit_test_1357611572328791281_tmp/tmp_8891242238099152345/.git/')",[59184]
"('URIish.java', 'org.eclipse.jgit.transport.URIish', '<init>', '^(file):([\\\\/](?![\\\\/])((?:[A-Za-z]:)?[\\\\/]?(?:(?:[^\\\\/]+[\\\\/]+)*[^\\\\/]+[\\\\/]*)))$', 'file:///tmp/jgit_test_4506496780195827691_tmp/tmp_6091248007004860342/.git/')",[18311]
"('URIish.java', 'org.eclipse.jgit.transport.URIish', '<init>', '^(file):([\\\\/](?![\\\\/])((?:[A-Za-z]:)?[\\\\/]?(?:(?:[^\\\\/]+[\\\\/]+)*[^\\\\/]+[\\\\/]*)))$', 'file:///tmp/jgit_test_4316411690756966690_tmp/tmp_5182268387694359159')","[160170, 160377]"
"('Description.java', 'org.junit.runner.Description', 'methodAndClassNamePatternGroupOrDefault', '([\\s\\S]*)\\((.*)\\)', 'testVerySimpleGroupRangeCase2[OldRule? false](org.eclipse.jgit.ignore.IgnoreRuleSpecialCasesTest)')","[86549, 93654]"
"('Description.java', 'org.junit.runner.Description', 'methodAndClassNamePatternGroupOrDefault', '([\\s\\S]*)\\((.*)\\)', 'testVerySimpleGroupRangeCase4[OldRule? false](org.eclipse.jgit.ignore.IgnoreRuleSpecialCasesTest)')","[86595, 93700]"
"('Description.java', 'org.junit.runner.Description', 'methodAndClassNamePatternGroupOrDefault', '([\\s\\S]*)\\((.*)\\)', 'org.eclipse.jgit.internal.storage.file.FileSnapshotTest')","[109695, 113168]"
"('Description.java', 'org.junit.runner.Description', 'methodAndClassNamePatternGroupOrDefault', '([\\s\\S]*)\\((.*)\\)', 'testSpecialGroupCase4[OldRule? false](org.eclipse.jgit.ignore.IgnoreRuleSpecialCasesTest)')","[84847, 91952]"
"('Description.java', 'org.junit.runner.Description', 'methodAndClassNamePatternGroupOrDefault', '([\\s\\S]*)\\((.*)\\)', 'scanWithGitDirRef(org.eclipse.jgit.internal.storage.file.FileRepositoryBuilderTest)')","[118555, 118703]"
"('Description.java', 'org.junit.runner.Description', 'methodAndClassNamePatternGroupOrDefault', '([\\s\\S]*)\\((.*)\\)', 'testPrintGroupCase4(org.eclipse.jgit.fnmatch.FileNameMatcherTest)')","[43498, 46856]"
"('ChangeIdUtil.java', 'org.eclipse.jgit.util.ChangeIdUtil', 'indexOfChangeId', '(^Change-Id: *I[a-f0-9]{40}$)', 'with header and body')",[36751]
"('Description.java', 'org.junit.runner.Description', 'methodAndClassNamePatternGroupOrDefault', '([\\s\\S]*)\\((.*)\\)', 'org.eclipse.jgit.internal.storage.file.GcPackRefsTest')","[122704, 124274]"
"('Description.java', 'org.junit.runner.Description', 'methodAndClassNamePatternGroupOrDefault', '([\\s\\S]*)\\((.*)\\)', 'testVerySimplePatternCase1[OldRule? false](org.eclipse.jgit.ignore.IgnoreRuleSpecialCasesTest)')","[85744, 92849]"
"('Description.java', 'org.junit.runner.Description', 'methodAndClassNamePatternGroupOrDefault', '([\\s\\S]*)\\((.*)\\)', 'testDetachedHead(org.eclipse.jgit.api.RebaseCommandTest)')","[131999, 133514]"
"('URIish.java', 'org.eclipse.jgit.transport.URIish', '<init>', '^([a-z][a-z0-9+-]+)://(?:(?:([^/:@]+)(?::([^\\\\/]+))?@)?((?:[^\\\\/:]+)|(?:\\[[0-9a-f:]+\\]))(?::(\\d+))?((?:/~(?:[^\\\\/]+))?[\\\\/]))?(.+)?$', 'http://lusr\\example@1.2.3.4:80/D:\\x')",[216517]
"('Description.java', 'org.junit.runner.Description', 'methodAndClassNamePatternGroupOrDefault', '([\\s\\S]*)\\((.*)\\)', 'testUpdateRejectedByConnection(org.eclipse.jgit.transport.PushProcessTest)')","[203352, 203923]"
"('Description.java', 'org.junit.runner.Description', 'methodAndClassNamePatternGroupOrDefault', '([\\s\\S]*)\\((.*)\\)', 'testAddOne(org.eclipse.jgit.revwalk.RevFlagSetTest)')","[178633, 178784]"
"('URIish.java', 'org.eclipse.jgit.transport.URIish', '<init>', '^(?:([^/:@]+)(?::([^\\\\/]+))?@)?([^\\\\/:]{2,}):([\\\\/](?:(?:[^\\\\/]+[\\\\/]+)*[^\\\\/]+[\\\\/]*))$', '/tmp/jgit_test_4436388230543018363_tmp/tmp_2933209461077420112.git')","[186105, 186361]"
"('URIish.java', 'org.eclipse.jgit.transport.URIish', '<init>', '^(file):([\\\\/](?![\\\\/])((?:[A-Za-z]:)?[\\\\/]?(?:(?:[^\\\\/]+[\\\\/]+)*[^\\\\/]+[\\\\/]*)))$', 'file:///tmp/jgit_test_908729481602052817_tmp/tmp_5018835069090381471')","[159756, 159963]"
"('URIish.java', 'org.eclipse.jgit.transport.URIish', '<init>', '^(file):([\\\\/](?![\\\\/])((?:[A-Za-z]:)?[\\\\/]?(?:(?:[^\\\\/]+[\\\\/]+)*[^\\\\/]+[\\\\/]*)))$', 'ssh+git://l usr\\example.com:wtf@1.2.3.4:1234//abc')",[197764]
"('Description.java', 'org.junit.runner.Description', 'methodAndClassNamePatternGroupOrDefault', '([\\s\\S]*)\\((.*)\\)', 'testSimpleCharClass[OldRule? true](org.eclipse.jgit.ignore.FastIgnoreRuleTest)')","[77493, 78229]"
"('Description.java', 'org.junit.runner.Description', 'methodAndClassNamePatternGroupOrDefault', '([\\s\\S]*)\\((.*)\\)', 'testEscapedBracket5[OldRule? false](org.eclipse.jgit.ignore.IgnoreRuleSpecialCasesTest)')","[88251, 95356]"
"('Description.java', 'org.junit.runner.Description', 'methodAndClassNamePatternGroupOrDefault', '([\\s\\S]*)\\((.*)\\)', 'test009_toString(org.eclipse.jgit.lib.ObjectIdTest)')","[53486, 53762]"
"('Description.java', 'org.junit.runner.Description', 'methodAndClassNamePatternGroupOrDefault', '([\\s\\S]*)\\((.*)\\)', 'testMergeRemovingFoldersWithoutFastForward(org.eclipse.jgit.api.MergeCommandTest)')","[126307, 127219]"
"('Description.java', 'org.junit.runner.Description', 'methodAndClassNamePatternGroupOrDefault', '([\\s\\S]*)\\((.*)\\)', 'testDirectoryFileConflicts_9(org.eclipse.jgit.lib.DirCacheCheckoutTest)')","[61503, 62577]"
"('Description.java', 'org.junit.runner.Description', 'methodAndClassNamePatternGroupOrDefault', '([\\s\\S]*)\\((.*)\\)', 'testObjectDirectorySnapshot(org.eclipse.jgit.revwalk.RevWalkShallowTest)')","[181562, 181691]"
"('Description.java', 'org.junit.runner.Description', 'methodAndClassNamePatternGroupOrDefault', '([\\s\\S]*)\\((.*)\\)', 'testEmpty_FromString(org.eclipse.jgit.lib.AbbreviatedObjectIdTest)')","[55294, 55827]"
"('URIish.java', 'org.eclipse.jgit.transport.URIish', '<init>', '^(file):([\\\\/](?![\\\\/])((?:[A-Za-z]:)?[\\\\/]?(?:(?:[^\\\\/]+[\\\\/]+)*[^\\\\/]+[\\\\/]*)))$', '/tmp/jgit_test_3041254964624474396_tmp/tmp_2406781432731361300')","[160788, 160913, 161059, 161300]"
"('Description.java', 'org.junit.runner.Description', 'methodAndClassNamePatternGroupOrDefault', '([\\s\\S]*)\\((.*)\\)', 'testCombinedRangesInOneGroupCase2[OldRule? true](org.eclipse.jgit.ignore.IgnoreRuleSpecialCasesTest)')","[88663, 95747]"
"('URIish.java', 'org.eclipse.jgit.transport.URIish', '<init>', '^(file):([\\\\/](?![\\\\/])((?:[A-Za-z]:)?[\\\\/]?(?:(?:[^\\\\/]+[\\\\/]+)*[^\\\\/]+[\\\\/]*)))$', 'https://l usr\\example.com:wtf@[::1]:1234//abc')",[205546]
"('Description.java', 'org.junit.runner.Description', 'methodAndClassNamePatternGroupOrDefault', '([\\s\\S]*)\\((.*)\\)', 'commandWithEmptyPath(org.eclipse.jgit.submodule.SubmoduleAddTest)')","[17922, 18095]"
"('Description.java', 'org.junit.runner.Description', 'methodAndClassNamePatternGroupOrDefault', '([\\s\\S]*)\\((.*)\\)', 'testUpperGroupCase5[OldRule? false](org.eclipse.jgit.ignore.IgnoreRuleSpecialCasesTest)')","[87354, 94459]"
"('Description.java', 'org.junit.runner.Description', 'methodAndClassNamePatternGroupOrDefault', '([\\s\\S]*)\\((.*)\\)', 'org.eclipse.jgit.transport.SideBandOutputStreamTest')","[251766, 254290]"
"('URIish.java', 'org.eclipse.jgit.transport.URIish', '<init>', '^([a-z][a-z0-9+-]+)://(?:(?:([^/:@]+)(?::([^\\\\/]+))?@)?((?:[^\\\\/:]+)|(?:\\[[0-9a-f:]+\\]))(?::(\\d+))?((?:/~(?:[^\\\\/]+))?[\\\\/]))?(.+)?$', 'https://lusr\\example@1.2.3.4/D:\\x')","[233468, 233652]"
"('Description.java', 'org.junit.runner.Description', 'methodAndClassNamePatternGroupOrDefault', '([\\s\\S]*)\\((.*)\\)', 'org.eclipse.jgit.attributes.AttributesNodeDirCacheIteratorTest')","[72638, 72876]"
"('Description.java', 'org.junit.runner.Description', 'methodAndClassNamePatternGroupOrDefault', '([\\s\\S]*)\\((.*)\\)', 'crissCrossMerge(org.eclipse.jgit.merge.RecursiveMergerTest)')","[15120, 15270]"
"('Description.java', 'org.junit.runner.Description', 'methodAndClassNamePatternGroupOrDefault', '([\\s\\S]*)\\((.*)\\)', 'testRenameOverExistingFile(org.eclipse.jgit.util.FileUtilTest)')","[23478, 23825]"
"('Description.java', 'org.junit.runner.Description', 'methodAndClassNamePatternGroupOrDefault', '([\\s\\S]*)\\((.*)\\)', 'org.eclipse.jgit.util.io.TimeoutInputStreamTest')","[23994, 24361]"
"('Description.java', 'org.junit.runner.Description', 'methodAndClassNamePatternGroupOrDefault', '([\\s\\S]*)\\((.*)\\)', 'testGetFastForwardMerge(org.eclipse.jgit.lib.ConfigTest)')","[69432, 70148]"
"('Description.java', 'org.junit.runner.Description', 'methodAndClassNamePatternGroupOrDefault', '([\\s\\S]*)\\((.*)\\)', 'testSpecialGroupCase10[OldRule? false](org.eclipse.jgit.ignore.IgnoreRuleSpecialCasesTest)')","[85353, 92458]"
"('URIish.java', 'org.eclipse.jgit.transport.URIish', '<init>', '^(file):([\\\\/](?![\\\\/])((?:[A-Za-z]:)?[\\\\/]?(?:(?:[^\\\\/]+[\\\\/]+)*[^\\\\/]+[\\\\/]*)))$', 'http://l usr\\example.com@1.2.3.4:1234/D:\\x')",[215206]
"('Description.java', 'org.junit.runner.Description', 'methodAndClassNamePatternGroupOrDefault', '([\\s\\S]*)\\((.*)\\)', 'org.eclipse.jgit.internal.storage.file.GcBranchPrunedTest')","[115326, 115478]"
"('FastIgnoreRule.java', 'org.eclipse.jgit.ignore.FastIgnoreRule', 'isMatch', '\\[[a]', 'a')",[102747]
"('URIish.java', 'org.eclipse.jgit.transport.URIish', '<init>', '^(file):([\\\\/](?![\\\\/])((?:[A-Za-z]:)?[\\\\/]?(?:(?:[^\\\\/]+[\\\\/]+)*[^\\\\/]+[\\\\/]*)))$', '/a/b/c.git')",[191110]
"('URIish.java', 'org.eclipse.jgit.transport.URIish', '<init>', '^([a-z][a-z0-9+-]+)://(?:(?:([^/:@]+)(?::([^\\\\/]+))?@)?((?:[^\\\\/:]+)|(?:\\[[0-9a-f:]+\\]))(?::(\\d+))?((?:/~(?:[^\\\\/]+))?[\\\\/]))?(.+)?$', 'ssh+git://me@example.com/D:\\x')","[224268, 224452]"
"('URIish.java', 'org.eclipse.jgit.transport.URIish', '<init>', '^(file):([\\\\/](?![\\\\/])((?:[A-Za-z]:)?[\\\\/]?(?:(?:[^\\\\/]+[\\\\/]+)*[^\\\\/]+[\\\\/]*)))$', 'https://lusr\\example@example.com/D:\\x')","[233077, 233261]"
"('Description.java', 'org.junit.runner.Description', 'methodAndClassNamePatternGroupOrDefault', '([\\s\\S]*)\\((.*)\\)', 'testGet(org.eclipse.jgit.util.BlockListTest)')","[27554, 27811]"
"('Description.java', 'org.junit.runner.Description', 'methodAndClassNamePatternGroupOrDefault', '([\\s\\S]*)\\((.*)\\)', 'testInt4_1(org.eclipse.jgit.util.RawParseUtils_HexParseTest)')","[31065, 31131]"
"('Description.java', 'org.junit.runner.Description', 'methodAndClassNamePatternGroupOrDefault', '([\\s\\S]*)\\((.*)\\)', 'testGetRef_EmptyDatabase(org.eclipse.jgit.internal.storage.file.RefDirectoryTest)')","[111328, 112527]"
"('URIish.java', 'org.eclipse.jgit.transport.URIish', '<init>', '^([a-z][a-z0-9+-]+)://(?:(?:([^/:@]+)(?::([^\\\\/]+))?@)?((?:[^\\\\/:]+)|(?:\\[[0-9a-f:]+\\]))(?::(\\d+))?((?:/~(?:[^\\\\/]+))?[\\\\/]))?(.+)?$', 'http://l usr\\example.com:wtf@example.com:1234//abc')",[200731]
"('Description.java', 'org.junit.runner.Description', 'methodAndClassNamePatternGroupOrDefault', '([\\s\\S]*)\\((.*)\\)', 'testFindSingleFile(org.eclipse.jgit.dircache.DirCacheBuilderTest)')","[170827, 171018]"
"('Description.java', 'org.junit.runner.Description', 'methodAndClassNamePatternGroupOrDefault', '([\\s\\S]*)\\((.*)\\)', 'org.eclipse.jgit.merge.RecursiveMergerTest')","[15057, 15381]"
"('Description.java', 'org.junit.runner.Description', 'methodAndClassNamePatternGroupOrDefault', '([\\s\\S]*)\\((.*)\\)', 'testSaveAllTags(org.eclipse.jgit.transport.RemoteConfigTest)')","[253338, 253893]"
"('Description.java', 'org.junit.runner.Description', 'methodAndClassNamePatternGroupOrDefault', '([\\s\\S]*)\\((.*)\\)', 'org.eclipse.jgit.internal.storage.file.FileRepositoryBuilderTest')","[118534, 118858]"
"('Description.java', 'org.junit.runner.Description', 'methodAndClassNamePatternGroupOrDefault', '([\\s\\S]*)\\((.*)\\)', 'testDerefBlob(org.eclipse.jgit.lib.RepositoryResolveTest)')","[71710, 72311]"
"('URIish.java', 'org.eclipse.jgit.transport.URIish', '<init>', '^(file):([\\\\/](?![\\\\/])((?:[A-Za-z]:)?[\\\\/]?(?:(?:[^\\\\/]+[\\\\/]+)*[^\\\\/]+[\\\\/]*)))$', 'https://me:wtf@example.com:80/D:/x')",[203331]
"('Description.java', 'org.junit.runner.Description', 'methodAndClassNamePatternGroupOrDefault', '([\\s\\S]*)\\((.*)\\)', 'testOneBranch(org.eclipse.jgit.merge.MergeMessageFormatterTest)')","[16350, 16680]"
"('URIish.java', 'org.eclipse.jgit.transport.URIish', '<init>', '^([a-z][a-z0-9+-]+)://(?:(?:([^/:@]+)(?::([^\\\\/]+))?@)?((?:[^\\\\/:]+)|(?:\\[[0-9a-f:]+\\]))(?::(\\d+))?((?:/~(?:[^\\\\/]+))?[\\\\/]))?(.+)?$', 'ssh://me:wtf@1.2.3.4:1234//')",[192433]
"('Description.java', 'org.junit.runner.Description', 'methodAndClassNamePatternGroupOrDefault', '([\\s\\S]*)\\((.*)\\)', 'testSignedOffBy_IgnoreWhitespace(org.eclipse.jgit.revwalk.FooterLineTest)')","[173654, 174064]"
"('Description.java', 'org.junit.runner.Description', 'methodAndClassNamePatternGroupOrDefault', '([\\s\\S]*)\\((.*)\\)', 'testXDigitGroupCase2[OldRule? true](org.eclipse.jgit.ignore.IgnoreRuleSpecialCasesTest)')","[91170, 98254]"
"('Description.java', 'org.junit.runner.Description', 'methodAndClassNamePatternGroupOrDefault', '([\\s\\S]*)\\((.*)\\)', 'testDeleteForce(org.eclipse.jgit.internal.storage.file.RefUpdateTest)')","[119613, 120434]"
"('URIish.java', 'org.eclipse.jgit.transport.URIish', '<init>', '^(?:([^/:@]+)(?::([^\\\\/]+))?@)?((?:[^\\\\/:]+)|(?:\\[[0-9a-f:]+\\])):((?:(?:/~(?:[^\\\\/]+))[\\\\/])?(?:(?:[^\\\\/]+[\\\\/]+)*[^\\\\/]+[\\\\/]*))$', '/tmp/jgit_test_4869566695306036567_tmp/tmp_8360922162679768520')","[152042, 152177, 152334]"
"('URIish.java', 'org.eclipse.jgit.transport.URIish', '<init>', '^([a-z][a-z0-9+-]+)://(?:(?:([^/:@]+)(?::([^\\\\/]+))?@)?((?:[^\\\\/:]+)|(?:\\[[0-9a-f:]+\\]))(?::(\\d+))?((?:/~(?:[^\\\\/]+))?[\\\\/]))?(.+)?$', 'http://lusr\\example:wtf@1.2.3.4:1234/D:\\x')",[202295]
"('URIish.java', 'org.eclipse.jgit.transport.URIish', '<init>', '^(file):([\\\\/](?![\\\\/])((?:[A-Za-z]:)?[\\\\/]?(?:(?:[^\\\\/]+[\\\\/]+)*[^\\\\/]+[\\\\/]*)))$', 'ssh://lusr\\example:wtf@example.com:80/D:/x')",[194628]
"('Description.java', 'org.junit.runner.Description', 'methodAndClassNamePatternGroupOrDefault', '([\\s\\S]*)\\((.*)\\)', 'testBlankGroupCase2(org.eclipse.jgit.fnmatch.FileNameMatcherTest)')","[43813, 47186]"
"('Description.java', 'org.junit.runner.Description', 'methodAndClassNamePatternGroupOrDefault', '([\\s\\S]*)\\((.*)\\)', 'testParseRename100_NewStyle(org.eclipse.jgit.patch.FileHeaderTest)')","[408, 877]"
"('Description.java', 'org.junit.runner.Description', 'methodAndClassNamePatternGroupOrDefault', '([\\s\\S]*)\\((.*)\\)', 'testSkipRevFilter0(org.eclipse.jgit.revwalk.SkipRevFilterTest)')","[174320, 174384]"
"('Description.java', 'org.junit.runner.Description', 'methodAndClassNamePatternGroupOrDefault', '([\\s\\S]*)\\((.*)\\)', 'testDigitGroupCase0(org.eclipse.jgit.fnmatch.FileNameMatcherTest)')","[42868, 46196]"
"('Description.java', 'org.junit.runner.Description', 'methodAndClassNamePatternGroupOrDefault', '([\\s\\S]*)\\((.*)\\)', 'test(org.eclipse.jgit.util.io.AutoCRLFOutputStreamTest)')","[25734, 25778]"
"('Description.java', 'org.junit.runner.Description', 'methodAndClassNamePatternGroupOrDefault', '([\\s\\S]*)\\((.*)\\)', 'testReadNotExistingBranchConfig(org.eclipse.jgit.internal.storage.file.RefDirectoryTest)')","[111034, 112219]"
"('FastIgnoreRule.java', 'org.eclipse.jgit.ignore.FastIgnoreRule', 'isMatch', '[\\p{Ll}]', 'H')",[99883]
"('Description.java', 'org.junit.runner.Description', 'methodAndClassNamePatternGroupOrDefault', '([\\s\\S]*)\\((.*)\\)', 'testPathFilterGroup_DoesNotSkipTail(org.eclipse.jgit.dircache.DirCacheBuilderIteratorTest)')","[172246, 172268]"
"('URIish.java', 'org.eclipse.jgit.transport.URIish', '<init>', '^([a-z][a-z0-9+-]+)://(?:(?:([^/:@]+)(?::([^\\\\/]+))?@)?((?:[^\\\\/:]+)|(?:\\[[0-9a-f:]+\\]))(?::(\\d+))?((?:/~(?:[^\\\\/]+))?[\\\\/]))?(.+)?$', 'ssh://l usr\\example.com@example.com:1234//')",[208099]
"('Description.java', 'org.junit.runner.Description', 'methodAndClassNamePatternGroupOrDefault', '([\\s\\S]*)\\((.*)\\)', 'testAddSlowPath(org.eclipse.jgit.util.BlockListTest)')","[27701, 27965]"
"('URIish.java', 'org.eclipse.jgit.transport.URIish', '<init>', '^(?:([^/:@]+)(?::([^\\\\/]+))?@)?((?:[^\\\\/:]+)|(?:\\[[0-9a-f:]+\\])):((?:(?:/~(?:[^\\\\/]+))[\\\\/])?(?:(?:[^\\\\/]+[\\\\/]+)*[^\\\\/]+[\\\\/]*))$', '/tmp/jgit_test_4895667423267485854_tmp/tmp_229822824317133648')","[152887, 153022, 153179]"
"('URIish.java', 'org.eclipse.jgit.transport.URIish', '<init>', '^(file):([\\\\/](?![\\\\/])((?:[A-Za-z]:)?[\\\\/]?(?:(?:[^\\\\/]+[\\\\/]+)*[^\\\\/]+[\\\\/]*)))$', 'https://me:wtf@1.2.3.4:80/D:/x')",[204304]
"('URIish.java', 'org.eclipse.jgit.transport.URIish', '<init>', '^([a-z][a-z0-9+-]+)://(?:(?:([^/:@]+)(?::([^\\\\/]+))?@)?((?:[^\\\\/:]+)|(?:\\[[0-9a-f:]+\\]))(?::(\\d+))?((?:/~(?:[^\\\\/]+))?[\\\\/]))?(.+)?$', 'file:///tmp/jgit_test_1453594300143160598_tmp/tmp_4212344384831512108/.git/')",[14400]
"('URIish.java', 'org.eclipse.jgit.transport.URIish', '<init>', '^(file):([\\\\/](?![\\\\/])((?:[A-Za-z]:)?[\\\\/]?(?:(?:[^\\\\/]+[\\\\/]+)*[^\\\\/]+[\\\\/]*)))$', 'ssh+git://me@1.2.3.4:80/D:\\x')",[210974]
"('Description.java', 'org.junit.runner.Description', 'methodAndClassNamePatternGroupOrDefault', '([\\s\\S]*)\\((.*)\\)', 'testGetRefs_HeadBranchNotBorn(org.eclipse.jgit.internal.storage.file.RefDirectoryTest)')","[111307, 112505]"
"('Description.java', 'org.junit.runner.Description', 'methodAndClassNamePatternGroupOrDefault', '([\\s\\S]*)\\((.*)\\)', 'testEmpty(org.eclipse.jgit.diff.RawTextTest)')","[10852, 11175]"
"('Description.java', 'org.junit.runner.Description', 'methodAndClassNamePatternGroupOrDefault', '([\\s\\S]*)\\((.*)\\)', 'testTwoSame(org.eclipse.jgit.treewalk.filter.InterIndexDiffFilterTest)')","[263917, 264024]"
"('Description.java', 'org.junit.runner.Description', 'methodAndClassNamePatternGroupOrDefault', '([\\s\\S]*)\\((.*)\\)', 'testCopyLeadingPrefix(org.eclipse.jgit.util.RefListTest)')","[19802, 20286]"
"('URIish.java', 'org.eclipse.jgit.transport.URIish', '<init>', '^(file):([\\\\/](?![\\\\/])((?:[A-Za-z]:)?[\\\\/]?(?:(?:[^\\\\/]+[\\\\/]+)*[^\\\\/]+[\\\\/]*)))$', 'https://lusr\\example@1.2.3.4//abc')","[233353, 233537]"
"('Description.java', 'org.junit.runner.Description', 'methodAndClassNamePatternGroupOrDefault', '([\\s\\S]*)\\((.*)\\)', 'org.eclipse.jgit.transport.LongMapTest')","[183553, 184170]"
"('Description.java', 'org.junit.runner.Description', 'methodAndClassNamePatternGroupOrDefault', '([\\s\\S]*)\\((.*)\\)', 'testDequote_UTF8(org.eclipse.jgit.util.QuotedStringGitPathStyleTest)')","[40122, 40561]"
"('Description.java', 'org.junit.runner.Description', 'methodAndClassNamePatternGroupOrDefault', '([\\s\\S]*)\\((.*)\\)', 'testNoFooters_NewlineOnlyBody1(org.eclipse.jgit.revwalk.FooterLineTest)')","[173570, 173976]"
"('Description.java', 'org.junit.runner.Description', 'methodAndClassNamePatternGroupOrDefault', '([\\s\\S]*)\\((.*)\\)', 'testGraphGroupCase2[OldRule? false](org.eclipse.jgit.ignore.IgnoreRuleSpecialCasesTest)')","[85422, 92527]"
"('Description.java', 'org.junit.runner.Description', 'methodAndClassNamePatternGroupOrDefault', '([\\s\\S]*)\\((.*)\\)', 'testGetRefs_EmptyDatabase(org.eclipse.jgit.internal.storage.file.RefDirectoryTest)')","[111454, 112659]"
"('Description.java', 'org.junit.runner.Description', 'methodAndClassNamePatternGroupOrDefault', '([\\s\\S]*)\\((.*)\\)', 'testSpecialGroupCase0(org.eclipse.jgit.fnmatch.FileNameMatcherTest)')","[41356, 44612]"
"('Description.java', 'org.junit.runner.Description', 'methodAndClassNamePatternGroupOrDefault', '([\\s\\S]*)\\((.*)\\)', 'testSimpleTimeout(org.eclipse.jgit.transport.RemoteConfigTest)')","[253254, 253805]"
"('URIish.java', 'org.eclipse.jgit.transport.URIish', '<init>', '^([a-z][a-z0-9+-]+)://(?:(?:([^/:@]+)(?::([^\\\\/]+))?@)?((?:[^\\\\/:]+)|(?:\\[[0-9a-f:]+\\]))(?::(\\d+))?((?:/~(?:[^\\\\/]+))?[\\\\/]))?(.+)?$', 'http://me@[::1]/D:/x')","[228270, 228454]"
"('Description.java', 'org.junit.runner.Description', 'methodAndClassNamePatternGroupOrDefault', '([\\s\\S]*)\\((.*)\\)', 'testParsePersonIdent_legalCases(org.eclipse.jgit.util.RawParseUtils_ParsePersonIdentTest)')","[38841, 38927]"
"('Description.java', 'org.junit.runner.Description', 'methodAndClassNamePatternGroupOrDefault', '([\\s\\S]*)\\((.*)\\)', 'testAdd_ReverseGitSortOrder(org.eclipse.jgit.dircache.DirCacheBuilderTest)')","[170869, 171062]"
"('Description.java', 'org.junit.runner.Description', 'methodAndClassNamePatternGroupOrDefault', '([\\s\\S]*)\\((.*)\\)', 'testGetRefs_PackedWithPeeled(org.eclipse.jgit.internal.storage.file.RefDirectoryTest)')","[110740, 111911]"
"('Description.java', 'org.junit.runner.Description', 'methodAndClassNamePatternGroupOrDefault', '([\\s\\S]*)\\((.*)\\)', 'testFillToHighMarkAll(org.eclipse.jgit.revwalk.RevCommitListTest)')","[176789, 176942]"
"('Description.java', 'org.junit.runner.Description', 'methodAndClassNamePatternGroupOrDefault', '([\\s\\S]*)\\((.*)\\)', 'testTwoRevisions(org.eclipse.jgit.api.BlameCommandTest)')","[139988, 140384]"
"('Description.java', 'org.junit.runner.Description', 'methodAndClassNamePatternGroupOrDefault', '([\\s\\S]*)\\((.*)\\)', 'testFileInFolderCommittedModified(org.eclipse.jgit.treewalk.filter.IndexDiffFilterTest)')","[264422, 265233]"
"('Description.java', 'org.junit.runner.Description', 'methodAndClassNamePatternGroupOrDefault', '([\\s\\S]*)\\((.*)\\)', 'testPathsResetToNonexistingRef(org.eclipse.jgit.api.ResetCommandTest)')","[167314, 167659]"
"('Description.java', 'org.junit.runner.Description', 'methodAndClassNamePatternGroupOrDefault', '([\\s\\S]*)\\((.*)\\)', 'testGetSlashSlashDotGitSlashHumanishName(org.eclipse.jgit.transport.URIishTest)')","[188212, 189578]"
"('Description.java', 'org.junit.runner.Description', 'methodAndClassNamePatternGroupOrDefault', '([\\s\\S]*)\\((.*)\\)', 'testMissingPropertiesFile(org.eclipse.jgit.nls.TranslationBundleTest)')","[40726, 40814]"
"('URIish.java', 'org.eclipse.jgit.transport.URIish', '<init>', '^(file):([\\\\/](?![\\\\/])((?:[A-Za-z]:)?[\\\\/]?(?:(?:[^\\\\/]+[\\\\/]+)*[^\\\\/]+[\\\\/]*)))$', 'ssh://user@example.com:33/some/p ath')","[247958, 248004]"
"('Description.java', 'org.junit.runner.Description', 'methodAndClassNamePatternGroupOrDefault', '([\\s\\S]*)\\((.*)\\)', 'testSuccessfulContentMerge(org.eclipse.jgit.api.MergeCommandTest)')","[126811, 127747]"
"('Description.java', 'org.junit.runner.Description', 'methodAndClassNamePatternGroupOrDefault', '([\\s\\S]*)\\((.*)\\)', 'testEditSameNoteDifferentContent(org.eclipse.jgit.notes.NoteMapMergerTest)')","[259359, 259719]"
"('Description.java', 'org.junit.runner.Description', 'methodAndClassNamePatternGroupOrDefault', '([\\s\\S]*)\\((.*)\\)', 'testInvalidCommitInvalidAuthor6(org.eclipse.jgit.lib.ObjectCheckerTest)')","[49424, 51956]"
"('URIish.java', 'org.eclipse.jgit.transport.URIish', '<init>', '^([a-z][a-z0-9+-]+)://(?:(?:([^/:@]+)(?::([^\\\\/]+))?@)?((?:[^\\\\/:]+)|(?:\\[[0-9a-f:]+\\]))(?::(\\d+))?((?:/~(?:[^\\\\/]+))?[\\\\/]))?(.+)?$', '/tmp/jgit_test_982072369712344218_tmp/tmp_4000253905304581205')","[152448, 152578, 152725]"
"('URIish.java', 'org.eclipse.jgit.transport.URIish', '<init>', '^(file):([\\\\/](?![\\\\/])((?:[A-Za-z]:)?[\\\\/]?(?:(?:[^\\\\/]+[\\\\/]+)*[^\\\\/]+[\\\\/]*)))$', 'https://l usr\\example.com@[::1]:80//')",[219507]
"('Description.java', 'org.junit.runner.Description', 'methodAndClassNamePatternGroupOrDefault', '([\\s\\S]*)\\((.*)\\)', 'testRenameBranchAlsoInPack(org.eclipse.jgit.internal.storage.file.RefUpdateTest)')","[120180, 121028]"
"('URIish.java', 'org.eclipse.jgit.transport.URIish', '<init>', '^([a-z][a-z0-9+-]+)://(?:(?:([^/:@]+)(?::([^\\\\/]+))?@)?((?:[^\\\\/:]+)|(?:\\[[0-9a-f:]+\\]))(?::(\\d+))?((?:/~(?:[^\\\\/]+))?[\\\\/]))?(.+)?$', '/tmp/jgit_test_3041254964624474396_tmp/tmp_2406781432731361300')","[160812, 160942, 161089, 161330]"
"('Description.java', 'org.junit.runner.Description', 'methodAndClassNamePatternGroupOrDefault', '([\\s\\S]*)\\((.*)\\)', 'testBlankGroupCase0(org.eclipse.jgit.fnmatch.FileNameMatcherTest)')","[43771, 47142]"
"('Description.java', 'org.junit.runner.Description', 'methodAndClassNamePatternGroupOrDefault', '([\\s\\S]*)\\((.*)\\)', 'testAlnumGroupCase1[OldRule? true](org.eclipse.jgit.ignore.IgnoreRuleSpecialCasesTest)')","[91331, 98415]"
"('FastIgnoreRule.java', 'org.eclipse.jgit.ignore.FastIgnoreRule', 'isMatch', 'ne.', 'new.c')","[105572, 106802]"
"('Description.java', 'org.junit.runner.Description', 'methodAndClassNamePatternGroupOrDefault', '([\\s\\S]*)\\((.*)\\)', 'testTwoBranches(org.eclipse.jgit.merge.MergeMessageFormatterTest)')","[16266, 16592]"
"('Description.java', 'org.junit.runner.Description', 'methodAndClassNamePatternGroupOrDefault', '([\\s\\S]*)\\((.*)\\)', 'testContains(org.eclipse.jgit.revwalk.RevFlagSetTest)')","[178612, 178762]"
"('URIish.java', 'org.eclipse.jgit.transport.URIish', '<init>', '^(file):([\\\\/](?![\\\\/])((?:[A-Za-z]:)?[\\\\/]?(?:(?:[^\\\\/]+[\\\\/]+)*[^\\\\/]+[\\\\/]*)))$', 'http://lusr\\example@[::1]:1234/D:\\x')",[216678]
"('URIish.java', 'org.eclipse.jgit.transport.URIish', '<init>', '^([a-z][a-z0-9+-]+)://(?:(?:([^/:@]+)(?::([^\\\\/]+))?@)?((?:[^\\\\/:]+)|(?:\\[[0-9a-f:]+\\]))(?::(\\d+))?((?:/~(?:[^\\\\/]+))?[\\\\/]))?(.+)?$', 'ssh://DOMAIN%5cüser:pass@example.com:33/some/p ath')","[251339, 251385]"
"('URIish.java', 'org.eclipse.jgit.transport.URIish', '<init>', '^(file):([\\\\/](?![\\\\/])((?:[A-Za-z]:)?[\\\\/]?(?:(?:[^\\\\/]+[\\\\/]+)*[^\\\\/]+[\\\\/]*)))$', 'http://me:wtf@[::1]:1234//')",[200294]
"('Description.java', 'org.junit.runner.Description', 'methodAndClassNamePatternGroupOrDefault', '([\\s\\S]*)\\((.*)\\)', 'testPrintGroupCase1(org.eclipse.jgit.fnmatch.FileNameMatcherTest)')","[43435, 46790]"
"('URIish.java', 'org.eclipse.jgit.transport.URIish', '<init>', '^([a-z][a-z0-9+-]+)://(?:(?:([^/:@]+)(?::([^\\\\/]+))?@)?((?:[^\\\\/:]+)|(?:\\[[0-9a-f:]+\\]))(?::(\\d+))?((?:/~(?:[^\\\\/]+))?[\\\\/]))?(.+)?$', 'http://l usr\\example.com@1.2.3.4:1234//')",[215091]
"('Description.java', 'org.junit.runner.Description', 'methodAndClassNamePatternGroupOrDefault', '([\\s\\S]*)\\((.*)\\)', 'testCloneRepository(org.eclipse.jgit.api.CloneCommandTest)')","[159115, 159421]"
"('Description.java', 'org.junit.runner.Description', 'methodAndClassNamePatternGroupOrDefault', '([\\s\\S]*)\\((.*)\\)', 'testSetRenameScore_IllegalArgs(org.eclipse.jgit.diff.RenameDetectorTest)')","[4477, 5032]"
"('Description.java', 'org.junit.runner.Description', 'methodAndClassNamePatternGroupOrDefault', '([\\s\\S]*)\\((.*)\\)', 'testGetValidLocalWithTwoSlashesHumanishName(org.eclipse.jgit.transport.URIishTest)')","[189386, 190656]"
"('Description.java', 'org.junit.runner.Description', 'methodAndClassNamePatternGroupOrDefault', '([\\s\\S]*)\\((.*)\\)', 'testUnsupportedGroupCase0[OldRule? true](org.eclipse.jgit.ignore.IgnoreRuleSpecialCasesTest)')","[90204, 97288]"
"('URIish.java', 'org.eclipse.jgit.transport.URIish', '<init>', '^([a-z][a-z0-9+-]+)://(?:(?:([^/:@]+)(?::([^\\\\/]+))?@)?((?:[^\\\\/:]+)|(?:\\[[0-9a-f:]+\\]))(?::(\\d+))?((?:/~(?:[^\\\\/]+))?[\\\\/]))?(.+)?$', 'file:///tmp/jgit_test_4752033303303576963_tmp/tmp_1842207113690785849/.git/')",[18252]
"('Description.java', 'org.junit.runner.Description', 'methodAndClassNamePatternGroupOrDefault', '([\\s\\S]*)\\((.*)\\)', 'testInvalidTreeNameIsDot(org.eclipse.jgit.lib.ObjectCheckerTest)')","[49466, 52000]"
"('Description.java', 'org.junit.runner.Description', 'methodAndClassNamePatternGroupOrDefault', '([\\s\\S]*)\\((.*)\\)', 'testInitialize_TogglePostOrder(org.eclipse.jgit.treewalk.PostOrderTreeWalkTest)')","[263304, 263433]"
"('Description.java', 'org.junit.runner.Description', 'methodAndClassNamePatternGroupOrDefault', '([\\s\\S]*)\\((.*)\\)', 'testIgnoreNonExistingObjectsWithBitmaps(org.eclipse.jgit.internal.storage.file.PackWriterTest)')","[117656, 118101]"
"('URIish.java', 'org.eclipse.jgit.transport.URIish', '<init>', '^(file):([\\\\/](?![\\\\/])((?:[A-Za-z]:)?[\\\\/]?(?:(?:[^\\\\/]+[\\\\/]+)*[^\\\\/]+[\\\\/]*)))$', 'http://me:wtf@1.2.3.4:80//abc')",[200156]
"('Description.java', 'org.junit.runner.Description', 'methodAndClassNamePatternGroupOrDefault', '([\\s\\S]*)\\((.*)\\)', 'testSpecialGroupCase5[OldRule? true](org.eclipse.jgit.ignore.IgnoreRuleSpecialCasesTest)')","[88433, 95517]"
"('URIish.java', 'org.eclipse.jgit.transport.URIish', '<init>', '^([a-z][a-z0-9+-]+)://(?:(?:([^/:@]+)(?::([^\\\\/]+))?@)?((?:[^\\\\/:]+)|(?:\\[[0-9a-f:]+\\]))(?::(\\d+))?((?:/~(?:[^\\\\/]+))?[\\\\/]))?(.+)?$', 'file:///tmp/jgit_test_431139730155861545_tmp/tmp_9168887968344414191')","[166950, 167012, 167066]"
"('Description.java', 'org.junit.runner.Description', 'methodAndClassNamePatternGroupOrDefault', '([\\s\\S]*)\\((.*)\\)', 'testOnlyOption_f1_8_c(org.eclipse.jgit.api.CommitOnlyTest)')","[135214, 137273]"
"('Description.java', 'org.junit.runner.Description', 'methodAndClassNamePatternGroupOrDefault', '([\\s\\S]*)\\((.*)\\)', 'testTagTag(org.eclipse.jgit.revwalk.RevTagParseTest)')","[179814, 180230]"
"('URIish.java', 'org.eclipse.jgit.transport.URIish', '<init>', '^([a-z][a-z0-9+-]+)://(?:(?:([^/:@]+)(?::([^\\\\/]+))?@)?((?:[^\\\\/:]+)|(?:\\[[0-9a-f:]+\\]))(?::(\\d+))?((?:/~(?:[^\\\\/]+))?[\\\\/]))?(.+)?$', 'ssh+git://lusr\\example@[::1]/D:/x')","[227166, 227350]"
"('Description.java', 'org.junit.runner.Description', 'methodAndClassNamePatternGroupOrDefault', '([\\s\\S]*)\\((.*)\\)', 'testResetHard(org.eclipse.jgit.lib.DirCacheCheckoutTest)')","[60999, 61977]"
"('Description.java', 'org.junit.runner.Description', 'methodAndClassNamePatternGroupOrDefault', '([\\s\\S]*)\\((.*)\\)', 'org.eclipse.jgit.internal.storage.file.GcPruneNonReferencedTest')","[119297, 121271]"
"('URIish.java', 'org.eclipse.jgit.transport.URIish', '<init>', '^(file):([\\\\/](?![\\\\/])((?:[A-Za-z]:)?[\\\\/]?(?:(?:[^\\\\/]+[\\\\/]+)*[^\\\\/]+[\\\\/]*)))$', 'https://me@example.com/D:\\x')","[230869, 231053]"
"('Description.java', 'org.junit.runner.Description', 'methodAndClassNamePatternGroupOrDefault', '([\\s\\S]*)\\((.*)\\)', 'testOnlyOption_f1_2_d(org.eclipse.jgit.api.CommitOnlyTest)')","[134605, 136635]"
"('URIish.java', 'org.eclipse.jgit.transport.URIish', '<init>', '^([a-z][a-z0-9+-]+)://(?:(?:([^/:@]+)(?::([^\\\\/]+))?@)?((?:[^\\\\/:]+)|(?:\\[[0-9a-f:]+\\]))(?::(\\d+))?((?:/~(?:[^\\\\/]+))?[\\\\/]))?(.+)?$', 'file:///tmp/jgit_test_4698797764319809264_tmp/tmp_3689618803005173298/.git/')",[163471]
"('URIish.java', 'org.eclipse.jgit.transport.URIish', '<init>', '^([a-z][a-z0-9+-]+)://(?:(?:([^/:@]+)(?::([^\\\\/]+))?@)?((?:[^\\\\/:]+)|(?:\\[[0-9a-f:]+\\]))(?::(\\d+))?((?:/~(?:[^\\\\/]+))?[\\\\/]))?(.+)?$', 'ssh://l usr\\example.com@[::1]//')","[222658, 222842]"
"('Description.java', 'org.junit.runner.Description', 'methodAndClassNamePatternGroupOrDefault', '([\\s\\S]*)\\((.*)\\)', 'checkMergeCrissCross(org.eclipse.jgit.merge.ResolveMergerTest)')","[12885, 13214]"
"('Description.java', 'org.junit.runner.Description', 'methodAndClassNamePatternGroupOrDefault', '([\\s\\S]*)\\((.*)\\)', 'testMultipleEscapedCharacters1[OldRule? false](org.eclipse.jgit.ignore.IgnoreRuleSpecialCasesTest)')","[86158, 93263]"
"('Description.java', 'org.junit.runner.Description', 'methodAndClassNamePatternGroupOrDefault', '([\\s\\S]*)\\((.*)\\)', 'testPullMergeProgrammaticConfigurationImpliedTargetBranch(org.eclipse.jgit.api.PullCommandTest)')","[144567, 144911]"
"('URIish.java', 'org.eclipse.jgit.transport.URIish', '<init>', '^(file):([\\\\/](?![\\\\/])((?:[A-Za-z]:)?[\\\\/]?(?:(?:[^\\\\/]+[\\\\/]+)*[^\\\\/]+[\\\\/]*)))$', '/tmp/jgit_test_3398920852013764911_tmp/tmp_7767066208309385669')","[162150, 162275, 162421]"
"('Description.java', 'org.junit.runner.Description', 'methodAndClassNamePatternGroupOrDefault', '([\\s\\S]*)\\((.*)\\)', 'testAlreadyUpToDate(org.eclipse.jgit.api.MergeCommandTest)')","[126286, 127197]"
"('URIish.java', 'org.eclipse.jgit.transport.URIish', '<init>', '^(file):([\\\\/](?![\\\\/])((?:[A-Za-z]:)?[\\\\/]?(?:(?:[^\\\\/]+[\\\\/]+)*[^\\\\/]+[\\\\/]*)))$', 'http://l usr\\example.com@example.com:80//')",[214884]
"('URIish.java', 'org.eclipse.jgit.transport.URIish', '<init>', '^(?:([^/:@]+)(?::([^\\\\/]+))?@)?((?:[^\\\\/:]+)|(?:\\[[0-9a-f:]+\\])):((?:(?:/~(?:[^\\\\/]+))[\\\\/])?(?:(?:[^\\\\/]+[\\\\/]+)*[^\\\\/]+[\\\\/]*))$', '/a/b/c.git/')",[248326]
"('URIish.java', 'org.eclipse.jgit.transport.URIish', '<init>', '^([\\\\/]?((?:[A-Za-z]:)?[\\\\/]?(?:(?:[^\\\\/]+[\\\\/]+)*[^\\\\/]+[\\\\/]*)))$', '/a/b/c//')",[252538]
"('Description.java', 'org.junit.runner.Description', 'methodAndClassNamePatternGroupOrDefault', '([\\s\\S]*)\\((.*)\\)', 'testCoreAutoCrlf4(org.eclipse.jgit.api.BlameCommandTest)')","[139694, 140076]"
"('URIish.java', 'org.eclipse.jgit.transport.URIish', '<init>', '^([a-z][a-z0-9+-]+)://(?:(?:([^/:@]+)(?::([^\\\\/]+))?@)?((?:[^\\\\/:]+)|(?:\\[[0-9a-f:]+\\]))(?::(\\d+))?((?:/~(?:[^\\\\/]+))?[\\\\/]))?(.+)?$', 'ssh://me@example.com/D:\\x')","[220956, 221140]"
"('Description.java', 'org.junit.runner.Description', 'methodAndClassNamePatternGroupOrDefault', '([\\s\\S]*)\\((.*)\\)', 'testReadAllIncludingSymrefs(org.eclipse.jgit.lib.RefTest)')","[57701, 57891]"
"('URIish.java', 'org.eclipse.jgit.transport.URIish', '<init>', '^(file):([\\\\/](?![\\\\/])((?:[A-Za-z]:)?[\\\\/]?(?:(?:[^\\\\/]+[\\\\/]+)*[^\\\\/]+[\\\\/]*)))$', 'file:///tmp/jgit_test_4874465296214480399_tmp/tmp_6126357013847573839/.git/')",[56736]
"('URIish.java', 'org.eclipse.jgit.transport.URIish', '<init>', '^(file):([\\\\/](?![\\\\/])((?:[A-Za-z]:)?[\\\\/]?(?:(?:[^\\\\/]+[\\\\/]+)*[^\\\\/]+[\\\\/]*)))$', 'http://lusr\\example@example.com:1234//abc')",[215850]
"('URIish.java', 'org.eclipse.jgit.transport.URIish', '<init>', '^([a-z][a-z0-9+-]+)://(?:(?:([^/:@]+)(?::([^\\\\/]+))?@)?((?:[^\\\\/:]+)|(?:\\[[0-9a-f:]+\\]))(?::(\\d+))?((?:/~(?:[^\\\\/]+))?[\\\\/]))?(.+)?$', 'https://me@example.com//')","[230754, 230938]"
"('URIish.java', 'org.eclipse.jgit.transport.URIish', '<init>', '^([a-z][a-z0-9+-]+)://(?:(?:([^/:@]+)(?::([^\\\\/]+))?@)?((?:[^\\\\/:]+)|(?:\\[[0-9a-f:]+\\]))(?::(\\d+))?((?:/~(?:[^\\\\/]+))?[\\\\/]))?(.+)?$', 'https://l usr\\example.com@[::1]:80/D:/x')",[219622]
"('Description.java', 'org.junit.runner.Description', 'methodAndClassNamePatternGroupOrDefault', '([\\s\\S]*)\\((.*)\\)', 'resolveUnnamedCurrentBranchCommits(org.eclipse.jgit.lib.ReflogResolveTest)')","[64259, 64386]"
"('Description.java', 'org.junit.runner.Description', 'methodAndClassNamePatternGroupOrDefault', '([\\s\\S]*)\\((.*)\\)', 'testInversedGroupCase1[OldRule? true](org.eclipse.jgit.ignore.IgnoreRuleSpecialCasesTest)')","[89537, 96621]"
"('Description.java', 'org.junit.runner.Description', 'methodAndClassNamePatternGroupOrDefault', '([\\s\\S]*)\\((.*)\\)', 'testAlias_ConnectionAttempts(org.eclipse.jgit.transport.OpenSshConfigTest)')","[195806, 196167]"
"('Description.java', 'org.junit.runner.Description', 'methodAndClassNamePatternGroupOrDefault', '([\\s\\S]*)\\((.*)\\)', 'commitNewSubmodule(org.eclipse.jgit.api.CommitCommandTest)')","[123189, 123407]"
"('URIish.java', 'org.eclipse.jgit.transport.URIish', '<init>', '^(file):([\\\\/](?![\\\\/])((?:[A-Za-z]:)?[\\\\/]?(?:(?:[^\\\\/]+[\\\\/]+)*[^\\\\/]+[\\\\/]*)))$', 'ssh://l usr\\example.com@1.2.3.4:80//abc')",[208674]
"('Description.java', 'org.junit.runner.Description', 'methodAndClassNamePatternGroupOrDefault', '([\\s\\S]*)\\((.*)\\)', 'testInvalidTreeModeStartsWithZero3(org.eclipse.jgit.lib.ObjectCheckerTest)')","[50600, 53188]"
"('Description.java', 'org.junit.runner.Description', 'methodAndClassNamePatternGroupOrDefault', '([\\s\\S]*)\\((.*)\\)', 'testInvalidTreeDuplicateNames4(org.eclipse.jgit.lib.ObjectCheckerTest)')","[50684, 53276]"
"('Description.java', 'org.junit.runner.Description', 'methodAndClassNamePatternGroupOrDefault', '([\\s\\S]*)\\((.*)\\)', 'testInversedGroupCase0(org.eclipse.jgit.fnmatch.FileNameMatcherTest)')","[42490, 45800]"
"('Description.java', 'org.junit.runner.Description', 'methodAndClassNamePatternGroupOrDefault', '([\\s\\S]*)\\((.*)\\)', 'testMixedGroupCase3[OldRule? true](org.eclipse.jgit.ignore.IgnoreRuleSpecialCasesTest)')","[88755, 95839]"
"('Description.java', 'org.junit.runner.Description', 'methodAndClassNamePatternGroupOrDefault', '([\\s\\S]*)\\((.*)\\)', 'nullForEmailShouldThrowIllegalArgumentException(org.eclipse.jgit.lib.T0001_PersonIdentTest)')","[60664, 60773]"
"('Description.java', 'org.junit.runner.Description', 'methodAndClassNamePatternGroupOrDefault', '([\\s\\S]*)\\((.*)\\)', 'testDirectoryFileConflicts_13(org.eclipse.jgit.lib.DirCacheCheckoutTest)')","[61650, 62731]"
"('Description.java', 'org.junit.runner.Description', 'methodAndClassNamePatternGroupOrDefault', '([\\s\\S]*)\\((.*)\\)', 'testMixedGroupCase8[OldRule? false](org.eclipse.jgit.ignore.IgnoreRuleSpecialCasesTest)')","[85307, 92412]"
"('URIish.java', 'org.eclipse.jgit.transport.URIish', '<init>', '^([a-z][a-z0-9+-]+)://(?:(?:([^/:@]+)(?::([^\\\\/]+))?@)?((?:[^\\\\/:]+)|(?:\\[[0-9a-f:]+\\]))(?::(\\d+))?((?:/~(?:[^\\\\/]+))?[\\\\/]))?(.+)?$', 'http://me:wtf@1.2.3.4:1234/D:\\x')",[200087]
"('Description.java', 'org.junit.runner.Description', 'methodAndClassNamePatternGroupOrDefault', '([\\s\\S]*)\\((.*)\\)', 'testTrivialTwoWay_ok(org.eclipse.jgit.merge.SimpleMergeTest)')","[15480, 15756]"
"('Description.java', 'org.junit.runner.Description', 'methodAndClassNamePatternGroupOrDefault', '([\\s\\S]*)\\((.*)\\)', 'testFirstParentAltersId(org.eclipse.jgit.util.ChangeIdUtilTest)')","[31930, 32679]"
"('Description.java', 'org.junit.runner.Description', 'methodAndClassNamePatternGroupOrDefault', '([\\s\\S]*)\\((.*)\\)', 'testReadWriteMergeMsg(org.eclipse.jgit.lib.SquashCommitMsgTest)')","[54352, 54374]"
"('URIish.java', 'org.eclipse.jgit.transport.URIish', '<init>', '^(file):([\\\\/](?![\\\\/])((?:[A-Za-z]:)?[\\\\/]?(?:(?:[^\\\\/]+[\\\\/]+)*[^\\\\/]+[\\\\/]*)))$', 'git:///a/b/c//')",[251247]
"('URIish.java', 'org.eclipse.jgit.transport.URIish', '<init>', '^([a-z][a-z0-9+-]+)://(?:(?:([^/:@]+)(?::([^\\\\/]+))?@)?((?:[^\\\\/:]+)|(?:\\[[0-9a-f:]+\\]))(?::(\\d+))?((?:/~(?:[^\\\\/]+))?[\\\\/]))?(.+)?$', 'ssh://l usr\\example.com@[::1]:1234//')",[208835]
"('Description.java', 'org.junit.runner.Description', 'methodAndClassNamePatternGroupOrDefault', '([\\s\\S]*)\\((.*)\\)', 'testFileInFolderCommittedNonRecursive(org.eclipse.jgit.treewalk.filter.IndexDiffFilterTest)')","[264821, 265651]"
"('ChangeIdUtil.java', 'org.eclipse.jgit.util.ChangeIdUtil', 'indexOfFirstFooterLine', '(^[a-zA-Z0-9-]+:(?!//).*$)', 'Signed-off-by: me@you.too')","[33271, 34115, 35170, 36881, 37166, 37712, 37815, 38123]"
"('Description.java', 'org.junit.runner.Description', 'methodAndClassNamePatternGroupOrDefault', '([\\s\\S]*)\\((.*)\\)', 'testCheckoutOursWhenNoBase(org.eclipse.jgit.api.PathCheckoutCommandTest)')","[123713, 123987]"
"('URIish.java', 'org.eclipse.jgit.transport.URIish', '<init>', '^(file):([\\\\/](?![\\\\/])((?:[A-Za-z]:)?[\\\\/]?(?:(?:[^\\\\/]+[\\\\/]+)*[^\\\\/]+[\\\\/]*)))$', 'ssh://me@[::1]/D:/x')","[221623, 221807]"
"('URIish.java', 'org.eclipse.jgit.transport.URIish', '<init>', '^([a-z][a-z0-9+-]+)://(?:(?:([^/:@]+)(?::([^\\\\/]+))?@)?((?:[^\\\\/:]+)|(?:\\[[0-9a-f:]+\\]))(?::(\\d+))?((?:/~(?:[^\\\\/]+))?[\\\\/]))?(.+)?$', 'ssh+git://l usr\\example.com:wtf@1.2.3.4:1234/D:/x')",[197833]
"('Description.java', 'org.junit.runner.Description', 'methodAndClassNamePatternGroupOrDefault', '([\\s\\S]*)\\((.*)\\)', 'testRevisionBranch(org.eclipse.jgit.gitrepo.RepoCommandTest)')","[2468, 2802]"
"('URIish.java', 'org.eclipse.jgit.transport.URIish', '<init>', '^(?:([^/:@]+)(?::([^\\\\/]+))?@)?((?:[^\\\\/:]+)|(?:\\[[0-9a-f:]+\\])):((?:(?:/~(?:[^\\\\/]+))[\\\\/])?(?:(?:[^\\\\/]+[\\\\/]+)*[^\\\\/]+[\\\\/]*))$', '/tmp/jgit_test_6525282766431782376_tmp/tmp_51199864732082123')","[154177, 154312, 154469]"
"('Description.java', 'org.junit.runner.Description', 'methodAndClassNamePatternGroupOrDefault', '([\\s\\S]*)\\((.*)\\)', 'testLsRemote(org.eclipse.jgit.api.LsRemoteCommandTest)')","[138825, 138913]"
"('URIish.java', 'org.eclipse.jgit.transport.URIish', '<init>', '^(file):([\\\\/](?![\\\\/])((?:[A-Za-z]:)?[\\\\/]?(?:(?:[^\\\\/]+[\\\\/]+)*[^\\\\/]+[\\\\/]*)))$', 'http://me@[::1]//')","[228155, 228339]"
"('Description.java', 'org.junit.runner.Description', 'methodAndClassNamePatternGroupOrDefault', '([\\s\\S]*)\\((.*)\\)', 'testReadIndex_DirCacheTree(org.eclipse.jgit.dircache.DirCacheCGitCompatabilityTest)')","[172981, 173131]"
"('Description.java', 'org.junit.runner.Description', 'methodAndClassNamePatternGroupOrDefault', '([\\s\\S]*)\\((.*)\\)', 'workingDirectoryModifyIndexChanged(org.eclipse.jgit.api.StashCreateCommandTest)')","[156009, 156354]"
"('Description.java', 'org.junit.runner.Description', 'methodAndClassNamePatternGroupOrDefault', '([\\s\\S]*)\\((.*)\\)', 'testDiffWithNegativeLineCount(org.eclipse.jgit.api.DiffCommandTest)')","[166380, 166508]"
"('Description.java', 'org.junit.runner.Description', 'methodAndClassNamePatternGroupOrDefault', '([\\s\\S]*)\\((.*)\\)', 'testBareFileKey(org.eclipse.jgit.lib.RepositoryCacheTest)')","[60248, 60411]"
"('URIish.java', 'org.eclipse.jgit.transport.URIish', '<init>', '^(file):([\\\\/](?![\\\\/])((?:[A-Za-z]:)?[\\\\/]?(?:(?:[^\\\\/]+[\\\\/]+)*[^\\\\/]+[\\\\/]*)))$', 'ssh+git://me@1.2.3.4:80//abc')",[210882]
"('Description.java', 'org.junit.runner.Description', 'methodAndClassNamePatternGroupOrDefault', '([\\s\\S]*)\\((.*)\\)', 'testConfigureCache_PackedGitWindowSize_4097(org.eclipse.jgit.internal.storage.file.WindowCacheReconfigureTest)')","[115640, 115793]"
"('URIish.java', 'org.eclipse.jgit.transport.URIish', '<init>', '^(file):([\\\\/](?![\\\\/])((?:[A-Za-z]:)?[\\\\/]?(?:(?:[^\\\\/]+[\\\\/]+)*[^\\\\/]+[\\\\/]*)))$', 'file:///tmp/jgit_test_1437815989145954065_tmp/tmp_9002806209384523115/.git/')",[262877]
"('URIish.java', 'org.eclipse.jgit.transport.URIish', '<init>', '^(file):([\\\\/](?![\\\\/])((?:[A-Za-z]:)?[\\\\/]?(?:(?:[^\\\\/]+[\\\\/]+)*[^\\\\/]+[\\\\/]*)))$', 'file:/tmp/jgit_test_3034655928926536309_tmp/tmp_8831357079882312553/.git/')",[57441]
"('URIish.java', 'org.eclipse.jgit.transport.URIish', '<init>', '^([a-z][a-z0-9+-]+)://(?:(?:([^/:@]+)(?::([^\\\\/]+))?@)?((?:[^\\\\/:]+)|(?:\\[[0-9a-f:]+\\]))(?::(\\d+))?((?:/~(?:[^\\\\/]+))?[\\\\/]))?(.+)?$', 'http://example.com/D:/x')","[240782, 240966, 241886, 242070, 242990, 243174]"
"('URIish.java', 'org.eclipse.jgit.transport.URIish', '<init>', '^([a-z][a-z0-9+-]+)://(?:(?:([^/:@]+)(?::([^\\\\/]+))?@)?((?:[^\\\\/:]+)|(?:\\[[0-9a-f:]+\\]))(?::(\\d+))?((?:/~(?:[^\\\\/]+))?[\\\\/]))?(.+)?$', 'ssh+git://me:wtf@1.2.3.4:1234/D:\\x')",[196775]
"('Description.java', 'org.junit.runner.Description', 'methodAndClassNamePatternGroupOrDefault', '([\\s\\S]*)\\((.*)\\)', 'testTrivialTwoWay(org.eclipse.jgit.merge.SimpleMergeTest)')","[15501, 15778]"
"('URIish.java', 'org.eclipse.jgit.transport.URIish', '<init>', '^([a-z][a-z0-9+-]+)://(?:(?:([^/:@]+)(?::([^\\\\/]+))?@)?((?:[^\\\\/:]+)|(?:\\[[0-9a-f:]+\\]))(?::(\\d+))?((?:/~(?:[^\\\\/]+))?[\\\\/]))?(.+)?$', 'file:///tmp/jgit_test_4506496780195827691_tmp/tmp_6091248007004860342/.git/')",[18343]
"('Description.java', 'org.junit.runner.Description', 'methodAndClassNamePatternGroupOrDefault', '([\\s\\S]*)\\((.*)\\)', 'shouldWorkWithMerges(org.eclipse.jgit.revwalk.RevWalkUtilsCountTest)')","[174550, 174679]"
"('Description.java', 'org.junit.runner.Description', 'methodAndClassNamePatternGroupOrDefault', '([\\s\\S]*)\\((.*)\\)', 'testRemovedUntracked(org.eclipse.jgit.lib.IndexDiffTest)')","[68685, 69023]"
"('Description.java', 'org.junit.runner.Description', 'methodAndClassNamePatternGroupOrDefault', '([\\s\\S]*)\\((.*)\\)', 'testDegenerate_InsertEnd(org.eclipse.jgit.diff.HistogramDiffTest)')","[6807, 7410]"
"('URIish.java', 'org.eclipse.jgit.transport.URIish', '<init>', '^(file):([\\\\/](?![\\\\/])((?:[A-Za-z]:)?[\\\\/]?(?:(?:[^\\\\/]+[\\\\/]+)*[^\\\\/]+[\\\\/]*)))$', 'http://l usr\\example.com@example.com:1234/D:\\x')",[214838]
"('Description.java', 'org.junit.runner.Description', 'methodAndClassNamePatternGroupOrDefault', '([\\s\\S]*)\\((.*)\\)', 'testInvalidTreeModeStartsWithZero1(org.eclipse.jgit.lib.ObjectCheckerTest)')","[50558, 53144]"
"('URIish.java', 'org.eclipse.jgit.transport.URIish', '<init>', '^([a-z][a-z0-9+-]+)://(?:(?:([^/:@]+)(?::([^\\\\/]+))?@)?((?:[^\\\\/:]+)|(?:\\[[0-9a-f:]+\\]))(?::(\\d+))?((?:/~(?:[^\\\\/]+))?[\\\\/]))?(.+)?$', 'http://me@example.com/D:\\x')","[227580, 227764]"
"('Description.java', 'org.junit.runner.Description', 'methodAndClassNamePatternGroupOrDefault', '([\\s\\S]*)\\((.*)\\)', 'testOnlyOption_f1_8_a(org.eclipse.jgit.api.CommitOnlyTest)')","[135172, 137229]"
"('Description.java', 'org.junit.runner.Description', 'methodAndClassNamePatternGroupOrDefault', '([\\s\\S]*)\\((.*)\\)', 'testCloseNameConflicts1(org.eclipse.jgit.lib.DirCacheCheckoutTest)')","[61125, 62109]"
"('ChangeIdUtil.java', 'org.eclipse.jgit.util.ChangeIdUtil', 'indexOfChangeId', '(^Change-Id: *I[a-f0-9]{40}$)', 'f')",[37530]
"('URIish.java', 'org.eclipse.jgit.transport.URIish', '<init>', '^([a-z][a-z0-9+-]+)://(?:(?:([^/:@]+)(?::([^\\\\/]+))?@)?((?:[^\\\\/:]+)|(?:\\[[0-9a-f:]+\\]))(?::(\\d+))?((?:/~(?:[^\\\\/]+))?[\\\\/]))?(.+)?$', 'https://me:wtf@1.2.3.4:80/D:\\x')",[204373]
"('Description.java', 'org.junit.runner.Description', 'methodAndClassNamePatternGroupOrDefault', '([\\s\\S]*)\\((.*)\\)', 'testNone(org.eclipse.jgit.revwalk.RevWalkMergeBaseTest)')","[177806, 177935]"
"('URIish.java', 'org.eclipse.jgit.transport.URIish', '<init>', '^(file):([\\\\/](?![\\\\/])((?:[A-Za-z]:)?[\\\\/]?(?:(?:[^\\\\/]+[\\\\/]+)*[^\\\\/]+[\\\\/]*)))$', 'ssh+git://l usr\\example.com@[::1]:1234/D:\\x')",[212262]
"('Description.java', 'org.junit.runner.Description', 'methodAndClassNamePatternGroupOrDefault', '([\\s\\S]*)\\((.*)\\)', 'testCoreAutoCrlf1(org.eclipse.jgit.api.BlameCommandTest)')","[139631, 140010]"
"('Description.java', 'org.junit.runner.Description', 'methodAndClassNamePatternGroupOrDefault', '([\\s\\S]*)\\((.*)\\)', 'testWordGroupCase0[OldRule? true](org.eclipse.jgit.ignore.IgnoreRuleSpecialCasesTest)')","[91377, 98461]"
"('URIish.java', 'org.eclipse.jgit.transport.URIish', '<init>', '^([a-z][a-z0-9+-]+)://(?:(?:([^/:@]+)(?::([^\\\\/]+))?@)?((?:[^\\\\/:]+)|(?:\\[[0-9a-f:]+\\]))(?::(\\d+))?((?:/~(?:[^\\\\/]+))?[\\\\/]))?(.+)?$', 'http://me:wtf@1.2.3.4:80//')",[200133]
"('URIish.java', 'org.eclipse.jgit.transport.URIish', '<init>', '^(file):([\\\\/](?![\\\\/])((?:[A-Za-z]:)?[\\\\/]?(?:(?:[^\\\\/]+[\\\\/]+)*[^\\\\/]+[\\\\/]*)))$', 'ssh://lusr\\example:wtf@1.2.3.4:80//abc')",[194950]
"('Description.java', 'org.junit.runner.Description', 'methodAndClassNamePatternGroupOrDefault', '([\\s\\S]*)\\((.*)\\)', 'testManySolutionsCase2(org.eclipse.jgit.fnmatch.FileNameMatcherTest)')","[43582, 46944]"
"('Description.java', 'org.junit.runner.Description', 'methodAndClassNamePatternGroupOrDefault', '([\\s\\S]*)\\((.*)\\)', 'shouldListAddedFileInInitialCommit(org.eclipse.jgit.diff.DiffEntryTest)')","[9935, 10190]"
"('Description.java', 'org.junit.runner.Description', 'methodAndClassNamePatternGroupOrDefault', '([\\s\\S]*)\\((.*)\\)', 'testPathsResetOnDirs(org.eclipse.jgit.api.ResetCommandTest)')","[167419, 167769]"
"('URIish.java', 'org.eclipse.jgit.transport.URIish', '<init>', '^([a-z][a-z0-9+-]+)://(?:(?:([^/:@]+)(?::([^\\\\/]+))?@)?((?:[^\\\\/:]+)|(?:\\[[0-9a-f:]+\\]))(?::(\\d+))?((?:/~(?:[^\\\\/]+))?[\\\\/]))?(.+)?$', '/tmp/jgit_test_5968972444401405261_tmp/tmp_9143152110680163369')","[153293, 153423, 153576]"
"('Description.java', 'org.junit.runner.Description', 'methodAndClassNamePatternGroupOrDefault', '([\\s\\S]*)\\((.*)\\)', 'testCherryPick(org.eclipse.jgit.api.CherryPickCommandTest)')","[168257, 168514]"
"('Description.java', 'org.junit.runner.Description', 'methodAndClassNamePatternGroupOrDefault', '([\\s\\S]*)\\((.*)\\)', 'org.eclipse.jgit.attributes.AttributesMatcherTest')","[73460, 76909]"
"('URIish.java', 'org.eclipse.jgit.transport.URIish', '<init>', '^(file):([\\\\/](?![\\\\/])((?:[A-Za-z]:)?[\\\\/]?(?:(?:[^\\\\/]+[\\\\/]+)*[^\\\\/]+[\\\\/]*)))$', 'https://lusr\\example@[::1]:80/D:\\x')",[220749]
"('URIish.java', 'org.eclipse.jgit.transport.URIish', '<init>', '^([a-z][a-z0-9+-]+)://(?:(?:([^/:@]+)(?::([^\\\\/]+))?@)?((?:[^\\\\/:]+)|(?:\\[[0-9a-f:]+\\]))(?::(\\d+))?((?:/~(?:[^\\\\/]+))?[\\\\/]))?(.+)?$', 'http://example.com//')","[240690, 240874, 241794, 241978, 242898, 243082]"
"('Description.java', 'org.junit.runner.Description', 'methodAndClassNamePatternGroupOrDefault', '([\\s\\S]*)\\((.*)\\)', 'workingDirectoryContentMerge(org.eclipse.jgit.api.StashApplyCommandTest)')","[142456, 143005]"
"('Description.java', 'org.junit.runner.Description', 'methodAndClassNamePatternGroupOrDefault', '([\\s\\S]*)\\((.*)\\)', 'testValidTreeSorting1(org.eclipse.jgit.lib.ObjectCheckerTest)')","[49025, 51538]"
"('Description.java', 'org.junit.runner.Description', 'methodAndClassNamePatternGroupOrDefault', '([\\s\\S]*)\\((.*)\\)', 'testCherryPickMerge(org.eclipse.jgit.api.CherryPickCommandTest)')","[168278, 168536]"
"('URIish.java', 'org.eclipse.jgit.transport.URIish', '<init>', '^([a-z][a-z0-9+-]+)://(?:(?:([^/:@]+)(?::([^\\\\/]+))?@)?((?:[^\\\\/:]+)|(?:\\[[0-9a-f:]+\\]))(?::(\\d+))?((?:/~(?:[^\\\\/]+))?[\\\\/]))?(.+)?$', 'https://l usr\\example.com:wtf@[::1]:1234//abc')",[205569]
"('Description.java', 'org.junit.runner.Description', 'methodAndClassNamePatternGroupOrDefault', '([\\s\\S]*)\\((.*)\\)', 'testCompareEntriesOffsetsWithGetOffsets(org.eclipse.jgit.internal.storage.file.PackIndexV1Test)')","[113584, 113713]"
"('URIish.java', 'org.eclipse.jgit.transport.URIish', '<init>', '^([a-z][a-z0-9+-]+)://(?:(?:([^/:@]+)(?::([^\\\\/]+))?@)?((?:[^\\\\/:]+)|(?:\\[[0-9a-f:]+\\]))(?::(\\d+))?((?:/~(?:[^\\\\/]+))?[\\\\/]))?(.+)?$', 'in-memory://')","[185646, 185823, 186005, 186182, 186234]"
"('Description.java', 'org.junit.runner.Description', 'methodAndClassNamePatternGroupOrDefault', '([\\s\\S]*)\\((.*)\\)', 'testEmpty1(org.eclipse.jgit.diff.DiffFormatterReflowTest)')","[8073, 8291]"
"('Description.java', 'org.junit.runner.Description', 'methodAndClassNamePatternGroupOrDefault', '([\\s\\S]*)\\((.*)\\)', 'testDecodeUInt16(org.eclipse.jgit.util.NBTest)')","[39051, 39220]"
"('Description.java', 'org.junit.runner.Description', 'methodAndClassNamePatternGroupOrDefault', '([\\s\\S]*)\\((.*)\\)', 'repositoryWithNoSubmodules(org.eclipse.jgit.submodule.SubmoduleUpdateTest)')","[17579, 17667]"
"('URIish.java', 'org.eclipse.jgit.transport.URIish', '<init>', '^([a-z][a-z0-9+-]+)://(?:(?:([^/:@]+)(?::([^\\\\/]+))?@)?((?:[^\\\\/:]+)|(?:\\[[0-9a-f:]+\\]))(?::(\\d+))?((?:/~(?:[^\\\\/]+))?[\\\\/]))?(.+)?$', 'ssh://lusr\\example@example.com:1234//abc')",[209249]
"('Description.java', 'org.junit.runner.Description', 'methodAndClassNamePatternGroupOrDefault', '([\\s\\S]*)\\((.*)\\)', 'repositoryWithUninitializedModule(org.eclipse.jgit.submodule.SubmoduleInitTest)')","[19505, 19656]"
"('URIish.java', 'org.eclipse.jgit.transport.URIish', '<init>', '^(file):([\\\\/](?![\\\\/])((?:[A-Za-z]:)?[\\\\/]?(?:(?:[^\\\\/]+[\\\\/]+)*[^\\\\/]+[\\\\/]*)))$', 'ssh://l usr\\example.com:wtf@example.com:80/D:\\x')",[193468]
"('Description.java', 'org.junit.runner.Description', 'methodAndClassNamePatternGroupOrDefault', '([\\s\\S]*)\\((.*)\\)', 'testDequote_BareABCZ_OnlyBC(org.eclipse.jgit.util.QuotedStringBourneStyleTest)')","[38331, 38542]"
"('URIish.java', 'org.eclipse.jgit.transport.URIish', '<init>', '^([a-z][a-z0-9+-]+)://(?:(?:([^/:@]+)(?::([^\\\\/]+))?@)?((?:[^\\\\/:]+)|(?:\\[[0-9a-f:]+\\]))(?::(\\d+))?((?:/~(?:[^\\\\/]+))?[\\\\/]))?(.+)?$', '/a/b/c.git')",[191133]
"('Description.java', 'org.junit.runner.Description', 'methodAndClassNamePatternGroupOrDefault', '([\\s\\S]*)\\((.*)\\)', 'testError_TruncatedNew(org.eclipse.jgit.patch.PatchErrorTest)')","[1043, 1259]"
"('URIish.java', 'org.eclipse.jgit.transport.URIish', '<init>', '^([a-z][a-z0-9+-]+)://(?:(?:([^/:@]+)(?::([^\\\\/]+))?@)?((?:[^\\\\/:]+)|(?:\\[[0-9a-f:]+\\]))(?::(\\d+))?((?:/~(?:[^\\\\/]+))?[\\\\/]))?(.+)?$', 'https://lusr\\example@example.com/D:\\x')","[233100, 233284]"
"('Description.java', 'org.junit.runner.Description', 'methodAndClassNamePatternGroupOrDefault', '([\\s\\S]*)\\((.*)\\)', 'testGetInvalidEnum(org.eclipse.jgit.lib.ConfigTest)')","[69936, 70676]"
"('URIish.java', 'org.eclipse.jgit.transport.URIish', '<init>', '^([a-z][a-z0-9+-]+)://(?:(?:([^/:@]+)(?::([^\\\\/]+))?@)?((?:[^\\\\/:]+)|(?:\\[[0-9a-f:]+\\]))(?::(\\d+))?((?:/~(?:[^\\\\/]+))?[\\\\/]))?(.+)?$', 'ssh+git://1.2.3.4/D:\\x')","[237884, 238068, 238988, 239172, 240092, 240276]"
"('URIish.java', 'org.eclipse.jgit.transport.URIish', '<init>', '^(file):([\\\\/](?![\\\\/])((?:[A-Za-z]:)?[\\\\/]?(?:(?:[^\\\\/]+[\\\\/]+)*[^\\\\/]+[\\\\/]*)))$', 'ssh://lusr\\example:wtf@example.com:1234/D:\\x')",[194490]
"('Description.java', 'org.junit.runner.Description', 'methodAndClassNamePatternGroupOrDefault', '([\\s\\S]*)\\((.*)\\)', 'testWriteEmptyUnlock_RealIndex(org.eclipse.jgit.dircache.DirCacheBasicTest)')","[171359, 171910]"
"('Description.java', 'org.junit.runner.Description', 'methodAndClassNamePatternGroupOrDefault', '([\\s\\S]*)\\((.*)\\)', 'testCoreAutoCrlf5(org.eclipse.jgit.api.BlameCommandTest)')","[139715, 140098]"
"('Description.java', 'org.junit.runner.Description', 'methodAndClassNamePatternGroupOrDefault', '([\\s\\S]*)\\((.*)\\)', 'testOnlyOption_f1_7_f2_14_d(org.eclipse.jgit.api.CommitOnlyTest)')","[134395, 136415]"
"('Description.java', 'org.junit.runner.Description', 'methodAndClassNamePatternGroupOrDefault', '([\\s\\S]*)\\((.*)\\)', 'testEditEdit(org.eclipse.jgit.notes.DefaultNoteMergerTest)')","[260639, 260766]"
"('URIish.java', 'org.eclipse.jgit.transport.URIish', '<init>', '^([a-z][a-z0-9+-]+)://(?:(?:([^/:@]+)(?::([^\\\\/]+))?@)?((?:[^\\\\/:]+)|(?:\\[[0-9a-f:]+\\]))(?::(\\d+))?((?:/~(?:[^\\\\/]+))?[\\\\/]))?(.+)?$', 'ssh+git://l usr\\example.com@example.com:80//')",[211595]
"('Description.java', 'org.junit.runner.Description', 'methodAndClassNamePatternGroupOrDefault', '([\\s\\S]*)\\((.*)\\)', 'testConflicts(org.eclipse.jgit.treewalk.filter.IndexDiffFilterTest)')","[264716, 265541]"
"('Description.java', 'org.junit.runner.Description', 'methodAndClassNamePatternGroupOrDefault', '([\\s\\S]*)\\((.*)\\)', 'testWordGroupCase1[OldRule? true](org.eclipse.jgit.ignore.IgnoreRuleSpecialCasesTest)')","[91400, 98484]"
"('URIish.java', 'org.eclipse.jgit.transport.URIish', '<init>', '^(file):([\\\\/](?![\\\\/])((?:[A-Za-z]:)?[\\\\/]?(?:(?:[^\\\\/]+[\\\\/]+)*[^\\\\/]+[\\\\/]*)))$', 'http://l usr\\example.com@1.2.3.4//abc')","[228937, 229121]"
"('Description.java', 'org.junit.runner.Description', 'methodAndClassNamePatternGroupOrDefault', '([\\s\\S]*)\\((.*)\\)', 'testType_Delete(org.eclipse.jgit.diff.EditTest)')","[5989, 6333]"
"('Description.java', 'org.junit.runner.Description', 'methodAndClassNamePatternGroupOrDefault', '([\\s\\S]*)\\((.*)\\)', 'testNetRCDefault(org.eclipse.jgit.transport.NetRCTest)')","[189279, 189323]"
"('Description.java', 'org.junit.runner.Description', 'methodAndClassNamePatternGroupOrDefault', '([\\s\\S]*)\\((.*)\\)', 'testVerySimpleWildCardCase1[OldRule? false](org.eclipse.jgit.ignore.IgnoreRuleSpecialCasesTest)')","[84985, 92090]"
"('Description.java', 'org.junit.runner.Description', 'methodAndClassNamePatternGroupOrDefault', '([\\s\\S]*)\\((.*)\\)', 'testRules1thru3_NoIndexEntry(org.eclipse.jgit.lib.DirCacheCheckoutTest)')","[61020, 61999]"
"('URIish.java', 'org.eclipse.jgit.transport.URIish', '<init>', '^(file):([\\\\/](?![\\\\/])((?:[A-Za-z]:)?[\\\\/]?(?:(?:[^\\\\/]+[\\\\/]+)*[^\\\\/]+[\\\\/]*)))$', 'ssh+git://me@example.com//')","[224107, 224291]"
"('Description.java', 'org.junit.runner.Description', 'methodAndClassNamePatternGroupOrDefault', '([\\s\\S]*)\\((.*)\\)', 'testCreate(org.eclipse.jgit.diff.EditTest)')","[6157, 6509]"
"('Description.java', 'org.junit.runner.Description', 'methodAndClassNamePatternGroupOrDefault', '([\\s\\S]*)\\((.*)\\)', 'testMaliciousAbsoluteCurDrivePathWindowsOnUnix(org.eclipse.jgit.lib.DirCacheCheckoutMaliciousPathTest)')","[66802, 67701]"
"('URIish.java', 'org.eclipse.jgit.transport.URIish', '<init>', '^(file):([\\\\/](?![\\\\/])((?:[A-Za-z]:)?[\\\\/]?(?:(?:[^\\\\/]+[\\\\/]+)*[^\\\\/]+[\\\\/]*)))$', 'file:/a/b.txt')",[191950]
"('URIish.java', 'org.eclipse.jgit.transport.URIish', '<init>', '^([a-z][a-z0-9+-]+)://(?:(?:([^/:@]+)(?::([^\\\\/]+))?@)?((?:[^\\\\/:]+)|(?:\\[[0-9a-f:]+\\]))(?::(\\d+))?((?:/~(?:[^\\\\/]+))?[\\\\/]))?(.+)?$', 'ssh://me@example.com:1234//')",[206995]
"('Description.java', 'org.junit.runner.Description', 'methodAndClassNamePatternGroupOrDefault', '([\\s\\S]*)\\((.*)\\)', 'testCommonScore_SameFiles_CR_canonicalization(org.eclipse.jgit.diff.SimilarityIndexTest)')","[11428, 11600]"
"('Description.java', 'org.junit.runner.Description', 'methodAndClassNamePatternGroupOrDefault', '([\\s\\S]*)\\((.*)\\)', 'testATwoLines(org.eclipse.jgit.util.ChangeIdUtilTest)')","[31783, 32525]"
"('Description.java', 'org.junit.runner.Description', 'methodAndClassNamePatternGroupOrDefault', '([\\s\\S]*)\\((.*)\\)', 'shouldListDeletionBetweenTwoCommits(org.eclipse.jgit.diff.DiffEntryTest)')","[10040, 10300]"
"('Description.java', 'org.junit.runner.Description', 'methodAndClassNamePatternGroupOrDefault', '([\\s\\S]*)\\((.*)\\)', 'testMiddleClearAllLines(org.eclipse.jgit.api.BlameCommandTest)')","[139841, 140230]"
"('Description.java', 'org.junit.runner.Description', 'methodAndClassNamePatternGroupOrDefault', '([\\s\\S]*)\\((.*)\\)', 'testQuestionmark[OldRule? false](org.eclipse.jgit.ignore.FastIgnoreRuleTest)')","[77196, 77953]"
"('Description.java', 'org.junit.runner.Description', 'methodAndClassNamePatternGroupOrDefault', '([\\s\\S]*)\\((.*)\\)', 'testSquashMergeConflict(org.eclipse.jgit.api.MergeCommandTest)')","[126496, 127417]"
"('Description.java', 'org.junit.runner.Description', 'methodAndClassNamePatternGroupOrDefault', '([\\s\\S]*)\\((.*)\\)', 'testParse_implicit_mixed_encoded(org.eclipse.jgit.revwalk.RevCommitParseTest)')","[182299, 182657]"
"('URIish.java', 'org.eclipse.jgit.transport.URIish', '<init>', '^(file):([\\\\/](?![\\\\/])((?:[A-Za-z]:)?[\\\\/]?(?:(?:[^\\\\/]+[\\\\/]+)*[^\\\\/]+[\\\\/]*)))$', 'ssh://lusr\\example@example.com//abc')","[223049, 223233]"
"('Description.java', 'org.junit.runner.Description', 'methodAndClassNamePatternGroupOrDefault', '([\\s\\S]*)\\((.*)\\)', 'testPushResult(org.eclipse.jgit.transport.PushProcessTest)')","[203482, 204057]"
"('URIish.java', 'org.eclipse.jgit.transport.URIish', '<init>', '^(file):([\\\\/](?![\\\\/])((?:[A-Za-z]:)?[\\\\/]?(?:(?:[^\\\\/]+[\\\\/]+)*[^\\\\/]+[\\\\/]*)))$', 'ssh://lusr\\example:wtf@[::1]:1234/D:/x')",[195180]
"('Description.java', 'org.junit.runner.Description', 'methodAndClassNamePatternGroupOrDefault', '([\\s\\S]*)\\((.*)\\)', 'test004_addTree(org.eclipse.jgit.lib.T0002_TreeTest)')","[58486, 58782]"
"('Description.java', 'org.junit.runner.Description', 'methodAndClassNamePatternGroupOrDefault', '([\\s\\S]*)\\((.*)\\)', 'invalidSourceDoubleSlashes(org.eclipse.jgit.transport.RefSpecTest)')","[186738, 187467]"
"('Description.java', 'org.junit.runner.Description', 'methodAndClassNamePatternGroupOrDefault', '([\\s\\S]*)\\((.*)\\)', 'testReadFlatTwoNotes(org.eclipse.jgit.notes.NoteMapTest)')","[258231, 258484]"
"('URIish.java', 'org.eclipse.jgit.transport.URIish', '<init>', '^(file):([\\\\/](?![\\\\/])((?:[A-Za-z]:)?[\\\\/]?(?:(?:[^\\\\/]+[\\\\/]+)*[^\\\\/]+[\\\\/]*)))$', 'file:///tmp/jgit_test_1453594300143160598_tmp/tmp_5336065936066258285/.git/')","[14233, 14481]"
"('FastIgnoreRule.java', 'org.eclipse.jgit.ignore.FastIgnoreRule', 'isMatch', '.*\\.sta[0-5]', 'test.sta5')","[104639, 105869]"
"('Description.java', 'org.junit.runner.Description', 'methodAndClassNamePatternGroupOrDefault', '([\\s\\S]*)\\((.*)\\)', 'testDirectoryFileConflicts_7(org.eclipse.jgit.lib.DirCacheCheckoutTest)')","[61461, 62533]"
"('Description.java', 'org.junit.runner.Description', 'methodAndClassNamePatternGroupOrDefault', '([\\s\\S]*)\\((.*)\\)', 'testBlankGroupCase3[OldRule? true](org.eclipse.jgit.ignore.IgnoreRuleSpecialCasesTest)')","[91009, 98093]"
"('URIish.java', 'org.eclipse.jgit.transport.URIish', '<init>', '^([a-z][a-z0-9+-]+)://(?:(?:([^/:@]+)(?::([^\\\\/]+))?@)?((?:[^\\\\/:]+)|(?:\\[[0-9a-f:]+\\]))(?::(\\d+))?((?:/~(?:[^\\\\/]+))?[\\\\/]))?(.+)?$', 'ssh://lusr\\example@[::1]:1234//')",[209939]
"('URIish.java', 'org.eclipse.jgit.transport.URIish', '<init>', '^([a-z][a-z0-9+-]+)://(?:(?:([^/:@]+)(?::([^\\\\/]+))?@)?((?:[^\\\\/:]+)|(?:\\[[0-9a-f:]+\\]))(?::(\\d+))?((?:/~(?:[^\\\\/]+))?[\\\\/]))?(.+)?$', 'https://l usr\\example.com@[::1]/D:\\x')","[232732, 232916]"
"('Description.java', 'org.junit.runner.Description', 'methodAndClassNamePatternGroupOrDefault', '([\\s\\S]*)\\((.*)\\)', 'testDescribe(org.eclipse.jgit.api.DescribeCommandTest)')","[128297, 128429]"
"('URIish.java', 'org.eclipse.jgit.transport.URIish', '<init>', '^([a-z][a-z0-9+-]+)://(?:(?:([^/:@]+)(?::([^\\\\/]+))?@)?((?:[^\\\\/:]+)|(?:\\[[0-9a-f:]+\\]))(?::(\\d+))?((?:/~(?:[^\\\\/]+))?[\\\\/]))?(.+)?$', 'ssh+git://me@[::1]:1234/D:/x')",[211135]
"('URIish.java', 'org.eclipse.jgit.transport.URIish', '<init>', '^([a-z][a-z0-9+-]+)://(?:(?:([^/:@]+)(?::([^\\\\/]+))?@)?((?:[^\\\\/:]+)|(?:\\[[0-9a-f:]+\\]))(?::(\\d+))?((?:/~(?:[^\\\\/]+))?[\\\\/]))?(.+)?$', 'ssh://me@example.com:1234/D:\\x')",[207133]
"('URIish.java', 'org.eclipse.jgit.transport.URIish', '<init>', '^(file):([\\\\/](?![\\\\/])((?:[A-Za-z]:)?[\\\\/]?(?:(?:[^\\\\/]+[\\\\/]+)*[^\\\\/]+[\\\\/]*)))$', 'http://[::1]/D:\\x')","[241541, 241725, 242645, 242829, 243749, 243933]"
"('URIish.java', 'org.eclipse.jgit.transport.URIish', '<init>', '^([a-z][a-z0-9+-]+)://(?:(?:([^/:@]+)(?::([^\\\\/]+))?@)?((?:[^\\\\/:]+)|(?:\\[[0-9a-f:]+\\]))(?::(\\d+))?((?:/~(?:[^\\\\/]+))?[\\\\/]))?(.+)?$', 'https://l usr\\example.com@1.2.3.4:80//')",[219162]
"('Description.java', 'org.junit.runner.Description', 'methodAndClassNamePatternGroupOrDefault', '([\\s\\S]*)\\((.*)\\)', 'testObjectId_objectid_explicit_otherparents(org.eclipse.jgit.lib.RepositoryResolveTest)')","[71815, 72421]"
"('Description.java', 'org.junit.runner.Description', 'methodAndClassNamePatternGroupOrDefault', '([\\s\\S]*)\\((.*)\\)', 'testDirectoryFileConflicts_19(org.eclipse.jgit.lib.DirCacheCheckoutTest)')","[61776, 62863]"
"('URIish.java', 'org.eclipse.jgit.transport.URIish', '<init>', '^([a-z][a-z0-9+-]+)://(?:(?:([^/:@]+)(?::([^\\\\/]+))?@)?((?:[^\\\\/:]+)|(?:\\[[0-9a-f:]+\\]))(?::(\\d+))?((?:/~(?:[^\\\\/]+))?[\\\\/]))?(.+)?$', 'https://me:wtf@1.2.3.4:80//abc')",[204281]
"('URIish.java', 'org.eclipse.jgit.transport.URIish', '<init>', '^(file):([\\\\/](?![\\\\/])((?:[A-Za-z]:)?[\\\\/]?(?:(?:[^\\\\/]+[\\\\/]+)*[^\\\\/]+[\\\\/]*)))$', 'ssh://l usr\\example.com@[::1]:1234/D:/x')",[208904]
"('Description.java', 'org.junit.runner.Description', 'methodAndClassNamePatternGroupOrDefault', '([\\s\\S]*)\\((.*)\\)', 'testInvalidTreeModeNotSupportedMode2(org.eclipse.jgit.lib.ObjectCheckerTest)')","[48752, 51252]"
"('Description.java', 'org.junit.runner.Description', 'methodAndClassNamePatternGroupOrDefault', '([\\s\\S]*)\\((.*)\\)', 'testSaveAddURI(org.eclipse.jgit.transport.RemoteConfigTest)')","[253401, 253959]"
"('Description.java', 'org.junit.runner.Description', 'methodAndClassNamePatternGroupOrDefault', '([\\s\\S]*)\\((.*)\\)', 'addExistentSubmodule(org.eclipse.jgit.submodule.SubmoduleAddTest)')","[17880, 18051]"
"('Description.java', 'org.junit.runner.Description', 'methodAndClassNamePatternGroupOrDefault', '([\\s\\S]*)\\((.*)\\)', 'testInvalidCommitNoTree1(org.eclipse.jgit.lib.ObjectCheckerTest)')","[50264, 52836]"
"('Description.java', 'org.junit.runner.Description', 'methodAndClassNamePatternGroupOrDefault', '([\\s\\S]*)\\((.*)\\)', 'testParseGitFileName_NoLF(org.eclipse.jgit.patch.FileHeaderTest)')","[576, 1215]"
"('Description.java', 'org.junit.runner.Description', 'methodAndClassNamePatternGroupOrDefault', '([\\s\\S]*)\\((.*)\\)', 'testPushAfterGC(org.eclipse.jgit.api.PushCommandTest)')","[140495, 140622]"
"('FastIgnoreRule.java', 'org.eclipse.jgit.ignore.FastIgnoreRule', 'isMatch', '[\\p{javaLetter}]', 'd')",[100065]
"('Description.java', 'org.junit.runner.Description', 'methodAndClassNamePatternGroupOrDefault', '([\\s\\S]*)\\((.*)\\)', 'test001_NewIdent(org.eclipse.jgit.lib.T0001_PersonIdentTest)')","[60643, 60751]"
"('Description.java', 'org.junit.runner.Description', 'methodAndClassNamePatternGroupOrDefault', '([\\s\\S]*)\\((.*)\\)', 'testBlankGroupCase3(org.eclipse.jgit.fnmatch.FileNameMatcherTest)')","[43834, 47208]"
"('Description.java', 'org.junit.runner.Description', 'methodAndClassNamePatternGroupOrDefault', '([\\s\\S]*)\\((.*)\\)', 'repositoryWithNoSubmodules(org.eclipse.jgit.submodule.SubmoduleSyncTest)')","[19120, 19186]"
"('Description.java', 'org.junit.runner.Description', 'methodAndClassNamePatternGroupOrDefault', '([\\s\\S]*)\\((.*)\\)', 'testPrintGroupCase5[OldRule? false](org.eclipse.jgit.ignore.IgnoreRuleSpecialCasesTest)')","[87101, 94206]"
"('Description.java', 'org.junit.runner.Description', 'methodAndClassNamePatternGroupOrDefault', '([\\s\\S]*)\\((.*)\\)', 'org.eclipse.jgit.dircache.DirCacheEntryTest')","[172601, 172882]"
"('Description.java', 'org.junit.runner.Description', 'methodAndClassNamePatternGroupOrDefault', '([\\s\\S]*)\\((.*)\\)', 'testLF(org.eclipse.jgit.util.io.EolCanonicalizingInputStreamTest)')","[24948, 25100]"
"('URIish.java', 'org.eclipse.jgit.transport.URIish', '<init>', '^([a-z][a-z0-9+-]+)://(?:(?:([^/:@]+)(?::([^\\\\/]+))?@)?((?:[^\\\\/:]+)|(?:\\[[0-9a-f:]+\\]))(?::(\\d+))?((?:/~(?:[^\\\\/]+))?[\\\\/]))?(.+)?$', 'file:///tmp/jgit_test_3803194728110070212_tmp/tmp_784519170733952064/.git/')",[63613]
"('QuotedString.java', 'org.eclipse.jgit.util.QuotedString$BourneUserPathStyle', 'quote', '^~[A-Za-z0-9_-]+$', 'a!b')","[30276, 30301]"
"('Description.java', 'org.junit.runner.Description', 'methodAndClassNamePatternGroupOrDefault', '([\\s\\S]*)\\((.*)\\)', 'org.eclipse.jgit.api.HugeFileTest')","[128488, 128554]"
"('Description.java', 'org.junit.runner.Description', 'methodAndClassNamePatternGroupOrDefault', '([\\s\\S]*)\\((.*)\\)', 'testCloneRepositoryWithSubmodules(org.eclipse.jgit.api.CloneCommandTest)')","[158989, 159289]"
"('Description.java', 'org.junit.runner.Description', 'methodAndClassNamePatternGroupOrDefault', '([\\s\\S]*)\\((.*)\\)', 'testSort_TOPO(org.eclipse.jgit.revwalk.RevWalkSortTest)')","[181942, 182095]"
"('URIish.java', 'org.eclipse.jgit.transport.URIish', '<init>', '^(file):([\\\\/](?![\\\\/])((?:[A-Za-z]:)?[\\\\/]?(?:(?:[^\\\\/]+[\\\\/]+)*[^\\\\/]+[\\\\/]*)))$', 'http://me:wtf@1.2.3.4:1234//')",[199926]
"('Description.java', 'org.junit.runner.Description', 'methodAndClassNamePatternGroupOrDefault', '([\\s\\S]*)\\((.*)\\)', 'testRecursiveFiltering(org.eclipse.jgit.treewalk.filter.PathSuffixFilterTest)')","[266604, 266669]"
"('Description.java', 'org.junit.runner.Description', 'methodAndClassNamePatternGroupOrDefault', '([\\s\\S]*)\\((.*)\\)', 'checkMergeMergeableTreesWithoutIndex(org.eclipse.jgit.merge.ResolveMergerTest)')","[12637, 12994]"
"('URIish.java', 'org.eclipse.jgit.transport.URIish', '<init>', '^(file):([\\\\/](?![\\\\/])((?:[A-Za-z]:)?[\\\\/]?(?:(?:[^\\\\/]+[\\\\/]+)*[^\\\\/]+[\\\\/]*)))$', 'http://lusr\\example:wtf@1.2.3.4:1234/D:/x')",[202226]
"('URIish.java', 'org.eclipse.jgit.transport.URIish', '<init>', '^([a-z][a-z0-9+-]+)://(?:(?:([^/:@]+)(?::([^\\\\/]+))?@)?((?:[^\\\\/:]+)|(?:\\[[0-9a-f:]+\\]))(?::(\\d+))?((?:/~(?:[^\\\\/]+))?[\\\\/]))?(.+)?$', 'http://1.2.3.4//')","[241058, 241242, 242162, 242346, 243266, 243450]"
"('FastIgnoreRule.java', 'org.eclipse.jgit.ignore.FastIgnoreRule', 'isMatch', '.r[a-c]', 'new')","[107100, 107317, 107534]"
"('Description.java', 'org.junit.runner.Description', 'methodAndClassNamePatternGroupOrDefault', '([\\s\\S]*)\\((.*)\\)', 'testSpecialGroupCase9[OldRule? true](org.eclipse.jgit.ignore.IgnoreRuleSpecialCasesTest)')","[88525, 95609]"
"('Description.java', 'org.junit.runner.Description', 'methodAndClassNamePatternGroupOrDefault', '([\\s\\S]*)\\((.*)\\)', 'testGetRefs_CorruptSymbolicReference(org.eclipse.jgit.internal.storage.file.RefDirectoryTest)')","[110425, 111581]"
"('Description.java', 'org.junit.runner.Description', 'methodAndClassNamePatternGroupOrDefault', '([\\s\\S]*)\\((.*)\\)', 'testDeleteNotFound(org.eclipse.jgit.internal.storage.file.RefUpdateTest)')","[119634, 120456]"
"('Description.java', 'org.junit.runner.Description', 'methodAndClassNamePatternGroupOrDefault', '([\\s\\S]*)\\((.*)\\)', 'testDegenerate_InsertsIntoMidPosition(org.eclipse.jgit.diff.MyersDiffTest)')","[8499, 9048]"
"('Description.java', 'org.junit.runner.Description', 'methodAndClassNamePatternGroupOrDefault', '([\\s\\S]*)\\((.*)\\)', 'testVerySimpleGroupRangeCase0[OldRule? false](org.eclipse.jgit.ignore.IgnoreRuleSpecialCasesTest)')","[86503, 93608]"
"('URIish.java', 'org.eclipse.jgit.transport.URIish', '<init>', '^(file):([\\\\/](?![\\\\/])((?:[A-Za-z]:)?[\\\\/]?(?:(?:[^\\\\/]+[\\\\/]+)*[^\\\\/]+[\\\\/]*)))$', 'http://me:wtf@[::1]:1234/D:\\x')",[200432]
"('Description.java', 'org.junit.runner.Description', 'methodAndClassNamePatternGroupOrDefault', '([\\s\\S]*)\\((.*)\\)', 'testAddWholeRepo(org.eclipse.jgit.api.AddCommandTest)')","[164621, 165052]"
"('URIish.java', 'org.eclipse.jgit.transport.URIish', '<init>', '^([a-z][a-z0-9+-]+)://(?:(?:([^/:@]+)(?::([^\\\\/]+))?@)?((?:[^\\\\/:]+)|(?:\\[[0-9a-f:]+\\]))(?::(\\d+))?((?:/~(?:[^\\\\/]+))?[\\\\/]))?(.+)?$', 'ssh://l usr\\example.com@example.com:80//')",[208283]
"('URIish.java', 'org.eclipse.jgit.transport.URIish', '<init>', '^(file):([\\\\/](?![\\\\/])((?:[A-Za-z]:)?[\\\\/]?(?:(?:[^\\\\/]+[\\\\/]+)*[^\\\\/]+[\\\\/]*)))$', 'http://lusr\\example@1.2.3.4:1234//abc')",[216218]
"('URIish.java', 'org.eclipse.jgit.transport.URIish', '<init>', '^([a-z][a-z0-9+-]+)://(?:(?:([^/:@]+)(?::([^\\\\/]+))?@)?((?:[^\\\\/:]+)|(?:\\[[0-9a-f:]+\\]))(?::(\\d+))?((?:/~(?:[^\\\\/]+))?[\\\\/]))?(.+)?$', 'ssh+git://lusr\\example@example.com:1234//')",[212515]
"('Description.java', 'org.junit.runner.Description', 'methodAndClassNamePatternGroupOrDefault', '([\\s\\S]*)\\((.*)\\)', 'org.eclipse.jgit.treewalk.EmptyTreeIteratorTest')","[260935, 261216]"
"('Description.java', 'org.junit.runner.Description', 'methodAndClassNamePatternGroupOrDefault', '([\\s\\S]*)\\((.*)\\)', 'testPullLocalConflict(org.eclipse.jgit.api.PullCommandTest)')","[144525, 144867]"
"('URIish.java', 'org.eclipse.jgit.transport.URIish', '<init>', '^([a-z][a-z0-9+-]+)://(?:(?:([^/:@]+)(?::([^\\\\/]+))?@)?((?:[^\\\\/:]+)|(?:\\[[0-9a-f:]+\\]))(?::(\\d+))?((?:/~(?:[^\\\\/]+))?[\\\\/]))?(.+)?$', 'ssh://l usr\\example.com@[::1]//abc')","[222704, 222888]"
"('URIish.java', 'org.eclipse.jgit.transport.URIish', '<init>', '^(file):([\\\\/](?![\\\\/])((?:[A-Za-z]:)?[\\\\/]?(?:(?:[^\\\\/]+[\\\\/]+)*[^\\\\/]+[\\\\/]*)))$', 'file:///tmp/jgit_test_8626667126801225208_tmp/tmp_7113505270375999961')","[162567, 162624]"
"('Description.java', 'org.junit.runner.Description', 'methodAndClassNamePatternGroupOrDefault', '([\\s\\S]*)\\((.*)\\)', 'testGetRefs_InvalidName(org.eclipse.jgit.internal.storage.file.RefDirectoryTest)')","[111244, 112439]"
"('Description.java', 'org.junit.runner.Description', 'methodAndClassNamePatternGroupOrDefault', '([\\s\\S]*)\\((.*)\\)', 'testCherryPickDirtyIndex(org.eclipse.jgit.api.CherryPickCommandTest)')","[168194, 168448]"
"('Description.java', 'org.junit.runner.Description', 'methodAndClassNamePatternGroupOrDefault', '([\\s\\S]*)\\((.*)\\)', 'testCntrlGroupCase1(org.eclipse.jgit.fnmatch.FileNameMatcherTest)')","[42280, 45580]"
"('URIish.java', 'org.eclipse.jgit.transport.URIish', '<init>', '^(file):([\\\\/](?![\\\\/])((?:[A-Za-z]:)?[\\\\/]?(?:(?:[^\\\\/]+[\\\\/]+)*[^\\\\/]+[\\\\/]*)))$', 'ssh+git://lusr\\example:wtf@1.2.3.4:1234//')",[198822]
"('Description.java', 'org.junit.runner.Description', 'methodAndClassNamePatternGroupOrDefault', '([\\s\\S]*)\\((.*)\\)', 'testModifyX(org.eclipse.jgit.api.ApplyCommandTest)')","[163798, 164037]"
"('URIish.java', 'org.eclipse.jgit.transport.URIish', '<init>', '^([a-z][a-z0-9+-]+)://(?:(?:([^/:@]+)(?::([^\\\\/]+))?@)?((?:[^\\\\/:]+)|(?:\\[[0-9a-f:]+\\]))(?::(\\d+))?((?:/~(?:[^\\\\/]+))?[\\\\/]))?(.+)?$', 'ssh://lusr\\example@example.com:80//abc')",[209433]
"('Description.java', 'org.junit.runner.Description', 'methodAndClassNamePatternGroupOrDefault', '([\\s\\S]*)\\((.*)\\)', 'testToString(org.eclipse.jgit.util.IntListTest)')","[28213, 28453]"
"('URIish.java', 'org.eclipse.jgit.transport.URIish', '<init>', '^([a-z][a-z0-9+-]+)://(?:(?:([^/:@]+)(?::([^\\\\/]+))?@)?((?:[^\\\\/:]+)|(?:\\[[0-9a-f:]+\\]))(?::(\\d+))?((?:/~(?:[^\\\\/]+))?[\\\\/]))?(.+)?$', 'ssh+git://l usr\\example.com@1.2.3.4:80//abc')",[212009]
"('Description.java', 'org.junit.runner.Description', 'methodAndClassNamePatternGroupOrDefault', '([\\s\\S]*)\\((.*)\\)', 'testInvalidTagNoObject4(org.eclipse.jgit.lib.ObjectCheckerTest)')","[49949, 52506]"
"('URIish.java', 'org.eclipse.jgit.transport.URIish', '<init>', '^([a-z][a-z0-9+-]+)://(?:(?:([^/:@]+)(?::([^\\\\/]+))?@)?((?:[^\\\\/:]+)|(?:\\[[0-9a-f:]+\\]))(?::(\\d+))?((?:/~(?:[^\\\\/]+))?[\\\\/]))?(.+)?$', 'http://me@1.2.3.4/D:/x')","[227902, 228086]"
"('URIish.java', 'org.eclipse.jgit.transport.URIish', '<init>', '^([a-z][a-z0-9+-]+)://(?:(?:([^/:@]+)(?::([^\\\\/]+))?@)?((?:[^\\\\/:]+)|(?:\\[[0-9a-f:]+\\]))(?::(\\d+))?((?:/~(?:[^\\\\/]+))?[\\\\/]))?(.+)?$', '/tmp/jgit_test_72803735483777762_tmp/tmp_5952370543069622143/.git')","[129287, 129425]"
"('Description.java', 'org.junit.runner.Description', 'methodAndClassNamePatternGroupOrDefault', '([\\s\\S]*)\\((.*)\\)', 'ref(org.eclipse.jgit.api.NameRevCommandTest)')","[168853, 169090]"
"('Description.java', 'org.junit.runner.Description', 'methodAndClassNamePatternGroupOrDefault', '([\\s\\S]*)\\((.*)\\)', 'testRegularCommitWithSob_ButNoBody(org.eclipse.jgit.util.ChangeIdUtilTest)')","[31825, 32569]"
"('Description.java', 'org.junit.runner.Description', 'methodAndClassNamePatternGroupOrDefault', '([\\s\\S]*)\\((.*)\\)', 'singleInsteadOf(org.eclipse.jgit.transport.RemoteConfigTest)')","[253569, 254135]"
"('URIish.java', 'org.eclipse.jgit.transport.URIish', '<init>', '^([a-z][a-z0-9+-]+)://(?:(?:([^/:@]+)(?::([^\\\\/]+))?@)?((?:[^\\\\/:]+)|(?:\\[[0-9a-f:]+\\]))(?::(\\d+))?((?:/~(?:[^\\\\/]+))?[\\\\/]))?(.+)?$', 'http://lusr\\example@[::1]:1234//')",[216563]
"('Description.java', 'org.junit.runner.Description', 'methodAndClassNamePatternGroupOrDefault', '([\\s\\S]*)\\((.*)\\)', 'testNonRecursiveFiltering(org.eclipse.jgit.treewalk.filter.PathSuffixFilterTest)')","[266625, 266691]"
"('FastIgnoreRule.java', 'org.eclipse.jgit.ignore.FastIgnoreRule', 'isMatch', '[tv]est\\.sta[a-d]', 'test.stac')","[104936, 106166]"
"('URIish.java', 'org.eclipse.jgit.transport.URIish', '<init>', '^(file):([\\\\/](?![\\\\/])((?:[A-Za-z]:)?[\\\\/]?(?:(?:[^\\\\/]+[\\\\/]+)*[^\\\\/]+[\\\\/]*)))$', 'file:///home/m y')","[249039, 249085]"
"('Description.java', 'org.junit.runner.Description', 'methodAndClassNamePatternGroupOrDefault', '([\\s\\S]*)\\((.*)\\)', 'repositoryWithSubmodule(org.eclipse.jgit.submodule.SubmoduleUpdateTest)')","[17516, 17601]"
"('Description.java', 'org.junit.runner.Description', 'methodAndClassNamePatternGroupOrDefault', '([\\s\\S]*)\\((.*)\\)', 'testUpperGroupCase1[OldRule? false](org.eclipse.jgit.ignore.IgnoreRuleSpecialCasesTest)')","[87262, 94367]"
"('AttributesRule.java', 'org.eclipse.jgit.attributes.AttributesRule', 'isMatch', 'ne.', 'neb')","[74878, 76022]"
"('Description.java', 'org.junit.runner.Description', 'methodAndClassNamePatternGroupOrDefault', '([\\s\\S]*)\\((.*)\\)', 'org.eclipse.jgit.revwalk.DateRevQueueTest')","[174906, 175848]"
"('Description.java', 'org.junit.runner.Description', 'methodAndClassNamePatternGroupOrDefault', '([\\s\\S]*)\\((.*)\\)', 'testSimpleStarCase0[OldRule? true](org.eclipse.jgit.ignore.IgnoreRuleSpecialCasesTest)')","[89836, 96920]"
"('URIish.java', 'org.eclipse.jgit.transport.URIish', '<init>', '^([a-z][a-z0-9+-]+)://(?:(?:([^/:@]+)(?::([^\\\\/]+))?@)?((?:[^\\\\/:]+)|(?:\\[[0-9a-f:]+\\]))(?::(\\d+))?((?:/~(?:[^\\\\/]+))?[\\\\/]))?(.+)?$', 'https://me@1.2.3.4:1234//')",[217299]
"('Description.java', 'org.junit.runner.Description', 'methodAndClassNamePatternGroupOrDefault', '([\\s\\S]*)\\((.*)\\)', 'testShouldNotBlowUpIfThereAreNoCommitsInRepository(org.eclipse.jgit.api.TagCommandTest)')","[157469, 157766]"
"('Description.java', 'org.junit.runner.Description', 'methodAndClassNamePatternGroupOrDefault', '([\\s\\S]*)\\((.*)\\)', 'testDirtyFileModeEqualHeadMerge(org.eclipse.jgit.lib.DirCacheCheckoutTest)')","[60978, 61924]"
"('URIish.java', 'org.eclipse.jgit.transport.URIish', '<init>', '^([\\\\/]?((?:[A-Za-z]:)?[\\\\/]?(?:(?:[^\\\\/]+[\\\\/]+)*[^\\\\/]+[\\\\/]*)))$', '/~some/p ath')","[249867, 249982]"
"('URIish.java', 'org.eclipse.jgit.transport.URIish', '<init>', '^(file):([\\\\/](?![\\\\/])((?:[A-Za-z]:)?[\\\\/]?(?:(?:[^\\\\/]+[\\\\/]+)*[^\\\\/]+[\\\\/]*)))$', 'ssh+git://me@example.com:80//abc')",[210514]
"('Description.java', 'org.junit.runner.Description', 'methodAndClassNamePatternGroupOrDefault', '([\\s\\S]*)\\((.*)\\)', 'testEditDifferentNotes(org.eclipse.jgit.notes.NoteMapMergerTest)')","[259485, 259851]"
"('Description.java', 'org.junit.runner.Description', 'methodAndClassNamePatternGroupOrDefault', '([\\s\\S]*)\\((.*)\\)', 'testRenameBranchCannotLockAFileHEADisFromLockHEAD(org.eclipse.jgit.internal.storage.file.RefUpdateTest)')","[120096, 120940]"
"('QuotedString.java', 'org.eclipse.jgit.util.QuotedString$BourneUserPathStyle', 'quote', '^~[A-Za-z0-9_-]*/.*$', '~/a')","[29920, 29944]"
"('URIish.java', 'org.eclipse.jgit.transport.URIish', '<init>', '^([a-z][a-z0-9+-]+)://(?:(?:([^/:@]+)(?::([^\\\\/]+))?@)?((?:[^\\\\/:]+)|(?:\\[[0-9a-f:]+\\]))(?::(\\d+))?((?:/~(?:[^\\\\/]+))?[\\\\/]))?(.+)?$', 'ssh://me@1.2.3.4:1234//abc')",[207409]
"('Description.java', 'org.junit.runner.Description', 'methodAndClassNamePatternGroupOrDefault', '([\\s\\S]*)\\((.*)\\)', 'testSideBranch(org.eclipse.jgit.revplot.PlotCommitListTest)')","[169469, 169794]"
"('Description.java', 'org.junit.runner.Description', 'methodAndClassNamePatternGroupOrDefault', '([\\s\\S]*)\\((.*)\\)', 'test_ReadNamesInSectionRecursive(org.eclipse.jgit.lib.ConfigTest)')","[69579, 70302]"
"('ChangeIdUtil.java', 'org.eclipse.jgit.util.ChangeIdUtil', 'insertId', '^(Bug|Issue)[a-zA-Z0-9-]*:.*$', 'Bug: 42')",[34762]
"('Description.java', 'org.junit.runner.Description', 'methodAndClassNamePatternGroupOrDefault', '([\\s\\S]*)\\((.*)\\)', 'testThreeEntries_BackwardsTwo(org.eclipse.jgit.treewalk.CanonicalTreeParserTest)')","[261336, 261655]"
"('AttributesRule.java', 'org.eclipse.jgit.attributes.AttributesRule', 'isMatch', '[tv]est\\.sta[a-d]', 'test.sta9')","[74490, 75634]"
"('Description.java', 'org.junit.runner.Description', 'methodAndClassNamePatternGroupOrDefault', '([\\s\\S]*)\\((.*)\\)', 'testNetRCFile(org.eclipse.jgit.transport.NetRCTest)')","[189258, 189301]"
"('Description.java', 'org.junit.runner.Description', 'methodAndClassNamePatternGroupOrDefault', '([\\s\\S]*)\\((.*)\\)', 'testEncodeASCII_FailOnNonASCII(org.eclipse.jgit.lib.ConstantsEncodingTest)')","[59970, 60079]"
"('URIish.java', 'org.eclipse.jgit.transport.URIish', '<init>', '^(?:([^/:@]+)(?::([^\\\\/]+))?@)?((?:[^\\\\/:]+)|(?:\\[[0-9a-f:]+\\])):((?:(?:/~(?:[^\\\\/]+))[\\\\/])?(?:(?:[^\\\\/]+[\\\\/]+)*[^\\\\/]+[\\\\/]*))$', '/tmp/jgit_test_3041254964624474396_tmp/tmp_2406781432731361300')","[160836, 160971, 161119, 161360]"
"('Description.java', 'org.junit.runner.Description', 'methodAndClassNamePatternGroupOrDefault', '([\\s\\S]*)\\((.*)\\)', 't1nearerT2(org.eclipse.jgit.api.DescribeCommandTest)')","[128276, 128407]"
"('Description.java', 'org.junit.runner.Description', 'methodAndClassNamePatternGroupOrDefault', '([\\s\\S]*)\\((.*)\\)', 'multipleStashedCommits(org.eclipse.jgit.api.StashListCommandTest)')","[165900, 165985]"
"('URIish.java', 'org.eclipse.jgit.transport.URIish', '<init>', '^([a-z][a-z0-9+-]+)://(?:(?:([^/:@]+)(?::([^\\\\/]+))?@)?((?:[^\\\\/:]+)|(?:\\[[0-9a-f:]+\\]))(?::(\\d+))?((?:/~(?:[^\\\\/]+))?[\\\\/]))?(.+)?$', 'http://lusr\\example@example.com:1234//')",[215827]
"('ChangeIdUtil.java', 'org.eclipse.jgit.util.ChangeIdUtil', 'indexOfFirstFooterLine', '(^[a-zA-Z0-9-]+:(?!//).*$)', 'more text')",[37192]
"('URIish.java', 'org.eclipse.jgit.transport.URIish', '<init>', '^([a-z][a-z0-9+-]+)://(?:(?:([^/:@]+)(?::([^\\\\/]+))?@)?((?:[^\\\\/:]+)|(?:\\[[0-9a-f:]+\\]))(?::(\\d+))?((?:/~(?:[^\\\\/]+))?[\\\\/]))?(.+)?$', 'ssh://l usr\\example.com@[::1]/D:\\x')","[222796, 222980]"
"('URIish.java', 'org.eclipse.jgit.transport.URIish', '<init>', '^(file):([\\\\/](?![\\\\/])((?:[A-Za-z]:)?[\\\\/]?(?:(?:[^\\\\/]+[\\\\/]+)*[^\\\\/]+[\\\\/]*)))$', 'ssh+git://l usr\\example.com@example.com:1234/D:/x')",[211480]
"('Description.java', 'org.junit.runner.Description', 'methodAndClassNamePatternGroupOrDefault', '([\\s\\S]*)\\((.*)\\)', 'testTwoRangesInOneGroupCase0[OldRule? true](org.eclipse.jgit.ignore.IgnoreRuleSpecialCasesTest)')","[91515, 98599]"
"('Description.java', 'org.junit.runner.Description', 'methodAndClassNamePatternGroupOrDefault', '([\\s\\S]*)\\((.*)\\)', 'testSuccess(org.eclipse.jgit.transport.ReceivePackAdvertiseRefsHookTest)')","[183194, 183347]"
"('URIish.java', 'org.eclipse.jgit.transport.URIish', '<init>', '^([a-z][a-z0-9+-]+)://(?:(?:([^/:@]+)(?::([^\\\\/]+))?@)?((?:[^\\\\/:]+)|(?:\\[[0-9a-f:]+\\]))(?::(\\d+))?((?:/~(?:[^\\\\/]+))?[\\\\/]))?(.+)?$', 'http://me:wtf@1.2.3.4:1234//')",[199949]
"('URIish.java', 'org.eclipse.jgit.transport.URIish', '<init>', '^(file):([\\\\/](?![\\\\/])((?:[A-Za-z]:)?[\\\\/]?(?:(?:[^\\\\/]+[\\\\/]+)*[^\\\\/]+[\\\\/]*)))$', 'http://me@example.com/D:\\x')","[227557, 227741]"
"('URIish.java', 'org.eclipse.jgit.transport.URIish', '<init>', '^([a-z][a-z0-9+-]+)://(?:(?:([^/:@]+)(?::([^\\\\/]+))?@)?((?:[^\\\\/:]+)|(?:\\[[0-9a-f:]+\\]))(?::(\\d+))?((?:/~(?:[^\\\\/]+))?[\\\\/]))?(.+)?$', '/tmp/jgit_test_3398920852013764911_tmp/tmp_7767066208309385669')","[162174, 162304, 162451]"
"('Description.java', 'org.junit.runner.Description', 'methodAndClassNamePatternGroupOrDefault', '([\\s\\S]*)\\((.*)\\)', 'testReadStringRaw4(org.eclipse.jgit.transport.PacketLineInTest)')","[184290, 184819]"
"('URIish.java', 'org.eclipse.jgit.transport.URIish', '<init>', '^(file):([\\\\/](?![\\\\/])((?:[A-Za-z]:)?[\\\\/]?(?:(?:[^\\\\/]+[\\\\/]+)*[^\\\\/]+[\\\\/]*)))$', 'http://l usr\\example.com:wtf@[::1]:80/D:\\x')",[201720]
"('Description.java', 'org.junit.runner.Description', 'methodAndClassNamePatternGroupOrDefault', '([\\s\\S]*)\\((.*)\\)', 'testPunctGroupCase2[OldRule? false](org.eclipse.jgit.ignore.IgnoreRuleSpecialCasesTest)')","[86779, 93884]"
"('URIish.java', 'org.eclipse.jgit.transport.URIish', '<init>', '^(?:([^/:@]+)(?::([^\\\\/]+))?@)?((?:[^\\\\/:]+)|(?:\\[[0-9a-f:]+\\])):((?:(?:/~(?:[^\\\\/]+))[\\\\/])?(?:(?:[^\\\\/]+[\\\\/]+)*[^\\\\/]+[\\\\/]*))$', '/tmp/jgit_test_7458934864323210735_tmp/tmp_3824345633208984745.git')",[185379]
"('URIish.java', 'org.eclipse.jgit.transport.URIish', '<init>', '^(file):([\\\\/](?![\\\\/])((?:[A-Za-z]:)?[\\\\/]?(?:(?:[^\\\\/]+[\\\\/]+)*[^\\\\/]+[\\\\/]*)))$', 'https://l usr\\example.com@example.com:1234/D:\\x')",[218173]
"('Description.java', 'org.junit.runner.Description', 'methodAndClassNamePatternGroupOrDefault', '([\\s\\S]*)\\((.*)\\)', 'testCreateOrphanBranchWithStartCommit(org.eclipse.jgit.api.CheckoutCommandTest)')","[149430, 149965]"
"('Description.java', 'org.junit.runner.Description', 'methodAndClassNamePatternGroupOrDefault', '([\\s\\S]*)\\((.*)\\)', 'testDerefCommit(org.eclipse.jgit.lib.RepositoryResolveTest)')","[71225, 72069]"
"('Description.java', 'org.junit.runner.Description', 'methodAndClassNamePatternGroupOrDefault', '([\\s\\S]*)\\((.*)\\)', 'testCheckoutFirst(org.eclipse.jgit.api.PathCheckoutCommandTest)')","[123881, 124163]"
"('URIish.java', 'org.eclipse.jgit.transport.URIish', '<init>', '^(file):([\\\\/](?![\\\\/])((?:[A-Za-z]:)?[\\\\/]?(?:(?:[^\\\\/]+[\\\\/]+)*[^\\\\/]+[\\\\/]*)))$', 'http://lusr\\example@1.2.3.4/D:\\x')","[230133, 230317]"
"('URIish.java', 'org.eclipse.jgit.transport.URIish', '<init>', '^([a-z][a-z0-9+-]+)://(?:(?:([^/:@]+)(?::([^\\\\/]+))?@)?((?:[^\\\\/:]+)|(?:\\[[0-9a-f:]+\\]))(?::(\\d+))?((?:/~(?:[^\\\\/]+))?[\\\\/]))?(.+)?$', '/abc.git/')",[248073]
"('AttributesRule.java', 'org.eclipse.jgit.attributes.AttributesRule', 'isMatch', '.*\\.sta[0-5]', 'test.sta4')","[74112, 75256]"
"('URIish.java', 'org.eclipse.jgit.transport.URIish', '<init>', '^([a-z][a-z0-9+-]+)://(?:(?:([^/:@]+)(?::([^\\\\/]+))?@)?((?:[^\\\\/:]+)|(?:\\[[0-9a-f:]+\\]))(?::(\\d+))?((?:/~(?:[^\\\\/]+))?[\\\\/]))?(.+)?$', 'file:///tmp/jgit_test_8180456019660967267_tmp/tmp_7389162459572827462')",[259016]
"('Description.java', 'org.junit.runner.Description', 'methodAndClassNamePatternGroupOrDefault', '([\\s\\S]*)\\((.*)\\)', 'org.eclipse.jgit.api.PullCommandTest')","[144399, 154558]"
"('URIish.java', 'org.eclipse.jgit.transport.URIish', '<init>', '^(file):([\\\\/](?![\\\\/])((?:[A-Za-z]:)?[\\\\/]?(?:(?:[^\\\\/]+[\\\\/]+)*[^\\\\/]+[\\\\/]*)))$', 'file:/tmp/jgit_test_9089196078256996576_tmp/tmp_5124154523333350298/.git/')",[63747]
"('URIish.java', 'org.eclipse.jgit.transport.URIish', '<init>', '^(file):([\\\\/](?![\\\\/])((?:[A-Za-z]:)?[\\\\/]?(?:(?:[^\\\\/]+[\\\\/]+)*[^\\\\/]+[\\\\/]*)))$', 'http://me:wtf@1.2.3.4:80//')",[200110]
"('Description.java', 'org.junit.runner.Description', 'methodAndClassNamePatternGroupOrDefault', '([\\s\\S]*)\\((.*)\\)', 'testWritePacket3(org.eclipse.jgit.transport.PacketLineOutTest)')","[191623, 191794]"
"('Description.java', 'org.junit.runner.Description', 'methodAndClassNamePatternGroupOrDefault', '([\\s\\S]*)\\((.*)\\)', 'testAddTwoFiles(org.eclipse.jgit.api.AddCommandTest)')","[164663, 165096]"
"('ChangeIdUtil.java', 'org.eclipse.jgit.util.ChangeIdUtil', 'indexOfChangeId', '(^Change-Id: *I[a-f0-9]{40}$)', 'http://example.com/ fixes this')",[36174]
"('URIish.java', 'org.eclipse.jgit.transport.URIish', '<init>', '^([a-z][a-z0-9+-]+)://(?:(?:([^/:@]+)(?::([^\\\\/]+))?@)?((?:[^\\\\/:]+)|(?:\\[[0-9a-f:]+\\]))(?::(\\d+))?((?:/~(?:[^\\\\/]+))?[\\\\/]))?(.+)?$', 'ssh://l usr\\example.com@1.2.3.4:1234//abc')",[208513]
"('URIish.java', 'org.eclipse.jgit.transport.URIish', '<init>', '^([a-z][a-z0-9+-]+)://(?:(?:([^/:@]+)(?::([^\\\\/]+))?@)?((?:[^\\\\/:]+)|(?:\\[[0-9a-f:]+\\]))(?::(\\d+))?((?:/~(?:[^\\\\/]+))?[\\\\/]))?(.+)?$', 'file:///tmp/jgit_test_1039595048602069369_tmp/tmp_1779983767005718860/.git/')",[56667]
"('URIish.java', 'org.eclipse.jgit.transport.URIish', '<init>', '^(file):([\\\\/](?![\\\\/])((?:[A-Za-z]:)?[\\\\/]?(?:(?:[^\\\\/]+[\\\\/]+)*[^\\\\/]+[\\\\/]*)))$', 'ssh+git://me@[::1]/D:\\x')","[224981, 225165]"
"('Description.java', 'org.junit.runner.Description', 'methodAndClassNamePatternGroupOrDefault', '([\\s\\S]*)\\((.*)\\)', 'concurrentRepack(org.eclipse.jgit.internal.storage.file.GcConcurrentTest)')","[114955, 114977]"
"('FastIgnoreRule.java', 'org.eclipse.jgit.ignore.FastIgnoreRule', 'isMatch', '[\\p{javaDigit}]', '5')",[100665]
"('Description.java', 'org.junit.runner.Description', 'methodAndClassNamePatternGroupOrDefault', '([\\s\\S]*)\\((.*)\\)', 'testRejectSpaceAtEndOnWindows(org.eclipse.jgit.lib.ObjectCheckerTest)')","[48416, 50900]"
"('Description.java', 'org.junit.runner.Description', 'methodAndClassNamePatternGroupOrDefault', '([\\s\\S]*)\\((.*)\\)', 'testRebaseInteractiveSquashFirstCommitShouldFail(org.eclipse.jgit.api.RebaseCommandTest)')","[131789, 133294]"
"('Description.java', 'org.junit.runner.Description', 'methodAndClassNamePatternGroupOrDefault', '([\\s\\S]*)\\((.*)\\)', 'testInvalidTreeDuplicateNames5(org.eclipse.jgit.lib.ObjectCheckerTest)')","[50705, 53298]"
"('Description.java', 'org.junit.runner.Description', 'methodAndClassNamePatternGroupOrDefault', '([\\s\\S]*)\\((.*)\\)', 'testDirModeAndNoRegex[OldRule? false](org.eclipse.jgit.ignore.IgnoreMatcherParametrizedTest)')","[103489, 103970]"
"('URIish.java', 'org.eclipse.jgit.transport.URIish', '<init>', '^(file):([\\\\/](?![\\\\/])((?:[A-Za-z]:)?[\\\\/]?(?:(?:[^\\\\/]+[\\\\/]+)*[^\\\\/]+[\\\\/]*)))$', 'https://me@example.com:1234//')",[216908]
"('URIish.java', 'org.eclipse.jgit.transport.URIish', '<init>', '^(file):([\\\\/](?![\\\\/])((?:[A-Za-z]:)?[\\\\/]?(?:(?:[^\\\\/]+[\\\\/]+)*[^\\\\/]+[\\\\/]*)))$', 'https://lusr\\example@example.com:1234//')",[219691]
"('URIish.java', 'org.eclipse.jgit.transport.URIish', '<init>', '^(file):([\\\\/](?![\\\\/])((?:[A-Za-z]:)?[\\\\/]?(?:(?:[^\\\\/]+[\\\\/]+)*[^\\\\/]+[\\\\/]*)))$', 'ssh+git://lusr\\example:wtf@1.2.3.4:1234//abc')",[198868]
"('URIish.java', 'org.eclipse.jgit.transport.URIish', '<init>', '^([a-z][a-z0-9+-]+)://(?:(?:([^/:@]+)(?::([^\\\\/]+))?@)?((?:[^\\\\/:]+)|(?:\\[[0-9a-f:]+\\]))(?::(\\d+))?((?:/~(?:[^\\\\/]+))?[\\\\/]))?(.+)?$', 'git://example.com/~some/p ath')","[252377, 252423]"
"('URIish.java', 'org.eclipse.jgit.transport.URIish', '<init>', '^([a-z][a-z0-9+-]+)://(?:(?:([^/:@]+)(?::([^\\\\/]+))?@)?((?:[^\\\\/:]+)|(?:\\[[0-9a-f:]+\\]))(?::(\\d+))?((?:/~(?:[^\\\\/]+))?[\\\\/]))?(.+)?$', 'http://l usr\\example.com@example.com/D:\\x')","[228684, 228868]"
"('Description.java', 'org.junit.runner.Description', 'methodAndClassNamePatternGroupOrDefault', '([\\s\\S]*)\\((.*)\\)', 'nullForNameShouldThrowIllegalArgumentException(org.eclipse.jgit.lib.T0001_PersonIdentTest)')","[60685, 60795]"
"('Description.java', 'org.junit.runner.Description', 'methodAndClassNamePatternGroupOrDefault', '([\\s\\S]*)\\((.*)\\)', 't1DominatesT2(org.eclipse.jgit.api.DescribeCommandTest)')","[128234, 128363]"
"('Description.java', 'org.junit.runner.Description', 'methodAndClassNamePatternGroupOrDefault', '([\\s\\S]*)\\((.*)\\)', 'testEmpty(org.eclipse.jgit.diff.EditListTest)')","[4056, 4163]"
"('URIish.java', 'org.eclipse.jgit.transport.URIish', '<init>', '^(file):([\\\\/](?![\\\\/])((?:[A-Za-z]:)?[\\\\/]?(?:(?:[^\\\\/]+[\\\\/]+)*[^\\\\/]+[\\\\/]*)))$', 'https://lusr\\example@1.2.3.4:1234//abc')",[220105]
"('QuotedString.java', 'org.eclipse.jgit.util.QuotedString$BourneUserPathStyle', 'quote', '^~[A-Za-z0-9_-]+$', '')","[29430, 29454]"
"('Description.java', 'org.junit.runner.Description', 'methodAndClassNamePatternGroupOrDefault', '([\\s\\S]*)\\((.*)\\)', 'testRemoveMakesEmpty(org.eclipse.jgit.util.RefListTest)')","[20117, 20616]"
"('URIish.java', 'org.eclipse.jgit.transport.URIish', '<init>', '^([a-z][a-z0-9+-]+)://(?:(?:([^/:@]+)(?::([^\\\\/]+))?@)?((?:[^\\\\/:]+)|(?:\\[[0-9a-f:]+\\]))(?::(\\d+))?((?:/~(?:[^\\\\/]+))?[\\\\/]))?(.+)?$', 'ssh+git://me:wtf@example.com:1234/D:/x')",[195571]
"('Description.java', 'org.junit.runner.Description', 'methodAndClassNamePatternGroupOrDefault', '([\\s\\S]*)\\((.*)\\)', 'testInt32(org.eclipse.jgit.util.RawParseUtils_HexParseTest)')","[31044, 31109]"
"('Description.java', 'org.junit.runner.Description', 'methodAndClassNamePatternGroupOrDefault', '([\\s\\S]*)\\((.*)\\)', 'testGetRef_FetchHead(org.eclipse.jgit.internal.storage.file.RefDirectoryTest)')","[110719, 111889]"
"('Description.java', 'org.junit.runner.Description', 'methodAndClassNamePatternGroupOrDefault', '([\\s\\S]*)\\((.*)\\)', 'org.eclipse.jgit.util.RawCharUtilTest')","[23059, 23211]"
"('Description.java', 'org.junit.runner.Description', 'methodAndClassNamePatternGroupOrDefault', '([\\s\\S]*)\\((.*)\\)', 'testEscapedBracket6[OldRule? true](org.eclipse.jgit.ignore.IgnoreRuleSpecialCasesTest)')","[91837, 98921]"
"('URIish.java', 'org.eclipse.jgit.transport.URIish', '<init>', '^(file):([\\\\/](?![\\\\/])((?:[A-Za-z]:)?[\\\\/]?(?:(?:[^\\\\/]+[\\\\/]+)*[^\\\\/]+[\\\\/]*)))$', 'ssh+git://1.2.3.4/D:\\x')","[237861, 238045, 238965, 239149, 240069, 240253]"
"('URIish.java', 'org.eclipse.jgit.transport.URIish', '<init>', '^(file):([\\\\/](?![\\\\/])((?:[A-Za-z]:)?[\\\\/]?(?:(?:[^\\\\/]+[\\\\/]+)*[^\\\\/]+[\\\\/]*)))$', 'http://me@[::1]:1234//')",[214332]
"('Description.java', 'org.junit.runner.Description', 'methodAndClassNamePatternGroupOrDefault', '([\\s\\S]*)\\((.*)\\)', 'testCheckoutOfConflictingFileShouldThrow(org.eclipse.jgit.api.PathCheckoutCommandTest)')","[123923, 124207]"
"('URIish.java', 'org.eclipse.jgit.transport.URIish', '<init>', '^([a-z][a-z0-9+-]+)://(?:(?:([^/:@]+)(?::([^\\\\/]+))?@)?((?:[^\\\\/:]+)|(?:\\[[0-9a-f:]+\\]))(?::(\\d+))?((?:/~(?:[^\\\\/]+))?[\\\\/]))?(.+)?$', 'ssh://lusr\\example@1.2.3.4:1234/D:\\x')",[209709]
"('Description.java', 'org.junit.runner.Description', 'methodAndClassNamePatternGroupOrDefault', '([\\s\\S]*)\\((.*)\\)', 'testPath_4090(org.eclipse.jgit.dircache.DirCacheLargePathTest)')","[172348, 172454]"
"('Description.java', 'org.junit.runner.Description', 'methodAndClassNamePatternGroupOrDefault', '([\\s\\S]*)\\((.*)\\)', 'testConflictingMerge2(org.eclipse.jgit.api.BlameCommandTest)')","[139967, 140362]"
"('URIish.java', 'org.eclipse.jgit.transport.URIish', '<init>', '^(file):([\\\\/](?![\\\\/])((?:[A-Za-z]:)?[\\\\/]?(?:(?:[^\\\\/]+[\\\\/]+)*[^\\\\/]+[\\\\/]*)))$', 'http://me@example.com:80//abc')",[213826]
"('URIish.java', 'org.eclipse.jgit.transport.URIish', '<init>', '^(file):([\\\\/](?![\\\\/])((?:[A-Za-z]:)?[\\\\/]?(?:(?:[^\\\\/]+[\\\\/]+)*[^\\\\/]+[\\\\/]*)))$', 'file:///tmp/jgit_test_9215790154376357519_tmp/tmp_2615392917240434684/.git/.')",[13403]
"('Description.java', 'org.junit.runner.Description', 'methodAndClassNamePatternGroupOrDefault', '([\\s\\S]*)\\((.*)\\)', 'testWritePack2(org.eclipse.jgit.internal.storage.file.PackWriterTest)')","[117761, 118211]"
"('Description.java', 'org.junit.runner.Description', 'methodAndClassNamePatternGroupOrDefault', '([\\s\\S]*)\\((.*)\\)', 'test007_isId(org.eclipse.jgit.lib.ObjectIdTest)')","[53633, 53916]"
"('URIish.java', 'org.eclipse.jgit.transport.URIish', '<init>', '^([a-z][a-z0-9+-]+)://(?:(?:([^/:@]+)(?::([^\\\\/]+))?@)?((?:[^\\\\/:]+)|(?:\\[[0-9a-f:]+\\]))(?::(\\d+))?((?:/~(?:[^\\\\/]+))?[\\\\/]))?(.+)?$', 'ssh://l usr\\example.com:wtf@[::1]:1234/D:/x')",[194099]
"('URIish.java', 'org.eclipse.jgit.transport.URIish', '<init>', '^(file):([\\\\/](?![\\\\/])((?:[A-Za-z]:)?[\\\\/]?(?:(?:[^\\\\/]+[\\\\/]+)*[^\\\\/]+[\\\\/]*)))$', 'http://l usr\\example.com@example.com/D:/x')","[228615, 228799]"
"('URIish.java', 'org.eclipse.jgit.transport.URIish', '<init>', '^(file):([\\\\/](?![\\\\/])((?:[A-Za-z]:)?[\\\\/]?(?:(?:[^\\\\/]+[\\\\/]+)*[^\\\\/]+[\\\\/]*)))$', 'ssh+git://me@[::1]/D:/x')","[224935, 225119]"
"('URIish.java', 'org.eclipse.jgit.transport.URIish', '<init>', '^(file):([\\\\/](?![\\\\/])((?:[A-Za-z]:)?[\\\\/]?(?:(?:[^\\\\/]+[\\\\/]+)*[^\\\\/]+[\\\\/]*)))$', '/~some/p ath')","[249775, 249890]"
"('URIish.java', 'org.eclipse.jgit.transport.URIish', '<init>', '^(?:([^/:@]+)(?::([^\\\\/]+))?@)?((?:[^\\\\/:]+)|(?:\\[[0-9a-f:]+\\])):((?:(?:/~(?:[^\\\\/]+))[\\\\/])?(?:(?:[^\\\\/]+[\\\\/]+)*[^\\\\/]+[\\\\/]*))$', '/tmp/jgit_test_622044983367939275_tmp/tmp_3909595270568668392')","[148125, 148260, 148535]"
"('URIish.java', 'org.eclipse.jgit.transport.URIish', '<init>', '^(file):([\\\\/](?![\\\\/])((?:[A-Za-z]:)?[\\\\/]?(?:(?:[^\\\\/]+[\\\\/]+)*[^\\\\/]+[\\\\/]*)))$', 'https://l usr\\example.com@example.com:80/D:/x')",[218863]
"('Description.java', 'org.junit.runner.Description', 'methodAndClassNamePatternGroupOrDefault', '([\\s\\S]*)\\((.*)\\)', 'testFilter_MY_ALL_Or_NONE(org.eclipse.jgit.revwalk.RevWalkFilterTest)')","[180668, 180990]"
"('Description.java', 'org.junit.runner.Description', 'methodAndClassNamePatternGroupOrDefault', '([\\s\\S]*)\\((.*)\\)', 'testAddA1Sub(org.eclipse.jgit.api.ApplyCommandTest)')","[163714, 163949]"
"('Description.java', 'org.junit.runner.Description', 'methodAndClassNamePatternGroupOrDefault', '([\\s\\S]*)\\((.*)\\)', 'testGetWindowsPathHumanishName(org.eclipse.jgit.transport.URIishTest)')","[188569, 189952]"
"('Description.java', 'org.junit.runner.Description', 'methodAndClassNamePatternGroupOrDefault', '([\\s\\S]*)\\((.*)\\)', 'testTwoGroupsCase0(org.eclipse.jgit.fnmatch.FileNameMatcherTest)')","[42700, 46020]"
"('Description.java', 'org.junit.runner.Description', 'methodAndClassNamePatternGroupOrDefault', '([\\s\\S]*)\\((.*)\\)', 'testCloneRepositoryWhenDestinationDirectoryExistsAndIsNotEmpty(org.eclipse.jgit.api.CloneCommandTest)')","[159157, 159465]"
"('URIish.java', 'org.eclipse.jgit.transport.URIish', '<init>', '^([a-z][a-z0-9+-]+)://(?:(?:([^/:@]+)(?::([^\\\\/]+))?@)?((?:[^\\\\/:]+)|(?:\\[[0-9a-f:]+\\]))(?::(\\d+))?((?:/~(?:[^\\\\/]+))?[\\\\/]))?(.+)?$', 'ssh+git://l usr\\example.com@1.2.3.4:1234//')",[211779]
"('Description.java', 'org.junit.runner.Description', 'methodAndClassNamePatternGroupOrDefault', '([\\s\\S]*)\\((.*)\\)', 'testEscapedBackslash(org.eclipse.jgit.fnmatch.FileNameMatcherTest)')","[43162, 46504]"
"('Description.java', 'org.junit.runner.Description', 'methodAndClassNamePatternGroupOrDefault', '([\\s\\S]*)\\((.*)\\)', 'testMixedGroupCase4[OldRule? true](org.eclipse.jgit.ignore.IgnoreRuleSpecialCasesTest)')","[88778, 95862]"
"('URIish.java', 'org.eclipse.jgit.transport.URIish', '<init>', '^(file):([\\\\/](?![\\\\/])((?:[A-Za-z]:)?[\\\\/]?(?:(?:[^\\\\/]+[\\\\/]+)*[^\\\\/]+[\\\\/]*)))$', 'file:/tmp/jgit_test_4902706930144711069_tmp/tmp_335954329502971208/.git/')",[59290]
"('Description.java', 'org.junit.runner.Description', 'methodAndClassNamePatternGroupOrDefault', '([\\s\\S]*)\\((.*)\\)', 'testTaggingOnHead(org.eclipse.jgit.api.TagCommandTest)')","[157574, 157876]"
"('Description.java', 'org.junit.runner.Description', 'methodAndClassNamePatternGroupOrDefault', '([\\s\\S]*)\\((.*)\\)', 'testBare_CreateRepositoryFromGitDirOnlyWithBareConfigTrue(org.eclipse.jgit.internal.storage.file.RepositorySetupWorkDirTest)')","[113880, 114134]"
"('URIish.java', 'org.eclipse.jgit.transport.URIish', '<init>', '^([a-z][a-z0-9+-]+)://(?:(?:([^/:@]+)(?::([^\\\\/]+))?@)?((?:[^\\\\/:]+)|(?:\\[[0-9a-f:]+\\]))(?::(\\d+))?((?:/~(?:[^\\\\/]+))?[\\\\/]))?(.+)?$', 'https://lusr\\example@1.2.3.4:1234/D:/x')",[220174]
"('Description.java', 'org.junit.runner.Description', 'methodAndClassNamePatternGroupOrDefault', '([\\s\\S]*)\\((.*)\\)', 'testTwoComplicatedModifications(org.eclipse.jgit.merge.MergeAlgorithmTest)')","[12018, 12318]"
"('URIish.java', 'org.eclipse.jgit.transport.URIish', '<init>', '^(file):([\\\\/](?![\\\\/])((?:[A-Za-z]:)?[\\\\/]?(?:(?:[^\\\\/]+[\\\\/]+)*[^\\\\/]+[\\\\/]*)))$', 'http://me@[::1]/D:\\x')","[228293, 228477]"
"('Description.java', 'org.junit.runner.Description', 'methodAndClassNamePatternGroupOrDefault', '([\\s\\S]*)\\((.*)\\)', 'testAlnumGroupCase1(org.eclipse.jgit.fnmatch.FileNameMatcherTest)')","[44254, 47648]"
"('Description.java', 'org.junit.runner.Description', 'methodAndClassNamePatternGroupOrDefault', '([\\s\\S]*)\\((.*)\\)', 'testEmpty_NoPrefix2(org.eclipse.jgit.util.RefMapTest)')","[21102, 21577]"
"('Description.java', 'org.junit.runner.Description', 'methodAndClassNamePatternGroupOrDefault', '([\\s\\S]*)\\((.*)\\)', 'testSet(org.eclipse.jgit.util.BlockListTest)')","[27575, 27833]"
"('FastIgnoreRule.java', 'org.eclipse.jgit.ignore.FastIgnoreRule', 'isMatch', '.*\\.st.', 'test.stp')","[104342, 104504, 105599, 105734]"
"('Description.java', 'org.junit.runner.Description', 'methodAndClassNamePatternGroupOrDefault', '([\\s\\S]*)\\((.*)\\)', 'org.eclipse.jgit.revwalk.RevTagParseTest')","[179457, 180297]"
"('URIish.java', 'org.eclipse.jgit.transport.URIish', '<init>', '^([a-z][a-z0-9+-]+)://(?:(?:([^/:@]+)(?::([^\\\\/]+))?@)?((?:[^\\\\/:]+)|(?:\\[[0-9a-f:]+\\]))(?::(\\d+))?((?:/~(?:[^\\\\/]+))?[\\\\/]))?(.+)?$', 'https://me:wtf@example.com:80/D:\\x')",[203505]
"('URIish.java', 'org.eclipse.jgit.transport.URIish', '<init>', '^([a-z][a-z0-9+-]+)://(?:(?:([^/:@]+)(?::([^\\\\/]+))?@)?((?:[^\\\\/:]+)|(?:\\[[0-9a-f:]+\\]))(?::(\\d+))?((?:/~(?:[^\\\\/]+))?[\\\\/]))?(.+)?$', 'ssh://me:wtf@example.com:80//abc')",[192295]
"('Description.java', 'org.junit.runner.Description', 'methodAndClassNamePatternGroupOrDefault', '([\\s\\S]*)\\((.*)\\)', 'testUpdateUpToDate(org.eclipse.jgit.transport.PushProcessTest)')","[203396, 203945]"
"('URIish.java', 'org.eclipse.jgit.transport.URIish', '<init>', '^(file):([\\\\/](?![\\\\/])((?:[A-Za-z]:)?[\\\\/]?(?:(?:[^\\\\/]+[\\\\/]+)*[^\\\\/]+[\\\\/]*)))$', 'file:/tmp/jgit_test_5029312574137886746_tmp/tmp_3793577667892320160/.git/')",[123478]
"('Description.java', 'org.junit.runner.Description', 'methodAndClassNamePatternGroupOrDefault', '([\\s\\S]*)\\((.*)\\)', 'testPrintGroupCase5(org.eclipse.jgit.fnmatch.FileNameMatcherTest)')","[43519, 46878]"
"('URIish.java', 'org.eclipse.jgit.transport.URIish', '<init>', '^(file):([\\\\/](?![\\\\/])((?:[A-Za-z]:)?[\\\\/]?(?:(?:[^\\\\/]+[\\\\/]+)*[^\\\\/]+[\\\\/]*)))$', 'ssh+git://l usr\\example.com:wtf@1.2.3.4:80/D:/x')",[197994]
"('Description.java', 'org.junit.runner.Description', 'methodAndClassNamePatternGroupOrDefault', '([\\s\\S]*)\\((.*)\\)', 'testStandardFormat_SmallObject_TruncatedZLibStream(org.eclipse.jgit.internal.storage.file.UnpackedObjectTest)')","[121643, 121963]"
"('Description.java', 'org.junit.runner.Description', 'methodAndClassNamePatternGroupOrDefault', '([\\s\\S]*)\\((.*)\\)', 'testEmpty(org.eclipse.jgit.revwalk.FIFORevQueueTest)')","[176114, 176242]"
"('Description.java', 'org.junit.runner.Description', 'methodAndClassNamePatternGroupOrDefault', '([\\s\\S]*)\\((.*)\\)', 'testNegateIsUnwrap(org.eclipse.jgit.treewalk.filter.NotTreeFilterTest)')","[263579, 263706]"
"('Description.java', 'org.junit.runner.Description', 'methodAndClassNamePatternGroupOrDefault', '([\\s\\S]*)\\((.*)\\)', 'testWildmatchDoNotMatch[OldRule? true](org.eclipse.jgit.ignore.FastIgnoreRuleTest)')","[77516, 78252]"
"('Description.java', 'org.junit.runner.Description', 'methodAndClassNamePatternGroupOrDefault', '([\\s\\S]*)\\((.*)\\)', 'test7(org.eclipse.jgit.revwalk.RevWalkPathFilter6012Test)')","[179056, 179210]"
"('Description.java', 'org.junit.runner.Description', 'methodAndClassNamePatternGroupOrDefault', '([\\s\\S]*)\\((.*)\\)', 'testMaliciousAbsoluteCurDrivePathWindows(org.eclipse.jgit.lib.DirCacheCheckoutMaliciousPathTest)')","[67285, 68207]"
"('AttributesRule.java', 'org.eclipse.jgit.attributes.AttributesRule', 'isMatch', '.r[a-c]', '5ra')",[76697]
"('Description.java', 'org.junit.runner.Description', 'methodAndClassNamePatternGroupOrDefault', '([\\s\\S]*)\\((.*)\\)', 'testReadSymRefToLoosePacked(org.eclipse.jgit.lib.RefTest)')","[57764, 57957]"
"('Description.java', 'org.junit.runner.Description', 'methodAndClassNamePatternGroupOrDefault', '([\\s\\S]*)\\((.*)\\)', 'testCheckoutWithConflict(org.eclipse.jgit.api.CheckoutCommandTest)')","[149304, 149833]"
"('Description.java', 'org.junit.runner.Description', 'methodAndClassNamePatternGroupOrDefault', '([\\s\\S]*)\\((.*)\\)', 'testExtendB(org.eclipse.jgit.diff.EditTest)')","[5905, 6245]"
"('URIish.java', 'org.eclipse.jgit.transport.URIish', '<init>', '^([a-z][a-z0-9+-]+)://(?:(?:([^/:@]+)(?::([^\\\\/]+))?@)?((?:[^\\\\/:]+)|(?:\\[[0-9a-f:]+\\]))(?::(\\d+))?((?:/~(?:[^\\\\/]+))?[\\\\/]))?(.+)?$', 'ssh+git://l usr\\example.com@example.com//')","[225234, 225418]"
"('URIish.java', 'org.eclipse.jgit.transport.URIish', '<init>', '^(file):([\\\\/](?![\\\\/])((?:[A-Za-z]:)?[\\\\/]?(?:(?:[^\\\\/]+[\\\\/]+)*[^\\\\/]+[\\\\/]*)))$', 'file:/tmp/jgit_test_1453594300143160598_tmp/tmp_4212344384831512108/.git/')",[14314]
"('Description.java', 'org.junit.runner.Description', 'methodAndClassNamePatternGroupOrDefault', '([\\s\\S]*)\\((.*)\\)', 'repositoryWithRootLevelSubmoduleRelativeRef(org.eclipse.jgit.submodule.SubmoduleWalkTest)')","[17091, 17282]"
"('URIish.java', 'org.eclipse.jgit.transport.URIish', '<init>', '^([a-z][a-z0-9+-]+)://(?:(?:([^/:@]+)(?::([^\\\\/]+))?@)?((?:[^\\\\/:]+)|(?:\\[[0-9a-f:]+\\]))(?::(\\d+))?((?:/~(?:[^\\\\/]+))?[\\\\/]))?(.+)?$', 'ssh+git://lusr\\example@[::1]:80//')",[213435]
"('Description.java', 'org.junit.runner.Description', 'methodAndClassNamePatternGroupOrDefault', '([\\s\\S]*)\\((.*)\\)', 'testVerySimpleWildcardCase0[OldRule? false](org.eclipse.jgit.ignore.IgnoreRuleSpecialCasesTest)')","[86687, 93792]"
"('Description.java', 'org.junit.runner.Description', 'methodAndClassNamePatternGroupOrDefault', '([\\s\\S]*)\\((.*)\\)', 'testFillToHighMarkMulitpleBlocks(org.eclipse.jgit.revwalk.RevCommitListTest)')","[176684, 176832]"
"('Description.java', 'org.junit.runner.Description', 'methodAndClassNamePatternGroupOrDefault', '([\\s\\S]*)\\((.*)\\)', 'org.eclipse.jgit.notes.NoteMapTest')","[258210, 260050]"
"('URIish.java', 'org.eclipse.jgit.transport.URIish', '<init>', '^(?:([^/:@]+)(?::([^\\\\/]+))?@)?((?:[^\\\\/:]+)|(?:\\[[0-9a-f:]+\\])):((?:(?:/~(?:[^\\\\/]+))[\\\\/])?(?:(?:[^\\\\/]+[\\\\/]+)*[^\\\\/]+[\\\\/]*))$', '/tmp/jgit_test_8097070924435391496_tmp/tmp_383454845786079686/.git')","[129873, 130015]"
"('URIish.java', 'org.eclipse.jgit.transport.URIish', '<init>', '^(file):([\\\\/](?![\\\\/])((?:[A-Za-z]:)?[\\\\/]?(?:(?:[^\\\\/]+[\\\\/]+)*[^\\\\/]+[\\\\/]*)))$', 'http://l usr\\example.com@1.2.3.4:1234//abc')",[215114]
"('URIish.java', 'org.eclipse.jgit.transport.URIish', '<init>', '^([a-z][a-z0-9+-]+)://(?:(?:([^/:@]+)(?::([^\\\\/]+))?@)?((?:[^\\\\/:]+)|(?:\\[[0-9a-f:]+\\]))(?::(\\d+))?((?:/~(?:[^\\\\/]+))?[\\\\/]))?(.+)?$', 'git://')",[247314]
"('Description.java', 'org.junit.runner.Description', 'methodAndClassNamePatternGroupOrDefault', '([\\s\\S]*)\\((.*)\\)', 'testInversedGroupCase1(org.eclipse.jgit.fnmatch.FileNameMatcherTest)')","[42511, 45822]"
"('URIish.java', 'org.eclipse.jgit.transport.URIish', '<init>', '^([a-z][a-z0-9+-]+)://(?:(?:([^/:@]+)(?::([^\\\\/]+))?@)?((?:[^\\\\/:]+)|(?:\\[[0-9a-f:]+\\]))(?::(\\d+))?((?:/~(?:[^\\\\/]+))?[\\\\/]))?(.+)?$', 'ssh+git://l usr\\example.com:wtf@example.com:1234//')",[197373]
"('URIish.java', 'org.eclipse.jgit.transport.URIish', '<init>', '^([a-z][a-z0-9+-]+)://(?:(?:([^/:@]+)(?::([^\\\\/]+))?@)?((?:[^\\\\/:]+)|(?:\\[[0-9a-f:]+\\]))(?::(\\d+))?((?:/~(?:[^\\\\/]+))?[\\\\/]))?(.+)?$', 'https://lusr\\example:wtf@[::1]:80/D:/x')",[206903]
"('Description.java', 'org.junit.runner.Description', 'methodAndClassNamePatternGroupOrDefault', '([\\s\\S]*)\\((.*)\\)', 'testAcceptTreeModeWithZero(org.eclipse.jgit.lib.ObjectCheckerTest)')","[48983, 51494]"
"('URIish.java', 'org.eclipse.jgit.transport.URIish', '<init>', '^(?:([^/:@]+)(?::([^\\\\/]+))?@)?((?:[^\\\\/:]+)|(?:\\[[0-9a-f:]+\\])):((?:(?:/~(?:[^\\\\/]+))[\\\\/])?(?:(?:[^\\\\/]+[\\\\/]+)*[^\\\\/]+[\\\\/]*))$', '/tmp/jgit_test_3398920852013764911_tmp/tmp_7767066208309385669')","[162198, 162333, 162481]"
"('Description.java', 'org.junit.runner.Description', 'methodAndClassNamePatternGroupOrDefault', '([\\s\\S]*)\\((.*)\\)', 'testForceMaster(org.eclipse.jgit.transport.RefSpecTest)')","[186528, 187247]"
"('URIish.java', 'org.eclipse.jgit.transport.URIish', '<init>', '^(file):([\\\\/](?![\\\\/])((?:[A-Za-z]:)?[\\\\/]?(?:(?:[^\\\\/]+[\\\\/]+)*[^\\\\/]+[\\\\/]*)))$', 'http://l usr\\example.com@[::1]:1234//')",[215436]
"('Description.java', 'org.junit.runner.Description', 'methodAndClassNamePatternGroupOrDefault', '([\\s\\S]*)\\((.*)\\)', 'testFileWithUserHome(org.eclipse.jgit.transport.URIishTest)')","[189449, 190722]"
"('Description.java', 'org.junit.runner.Description', 'methodAndClassNamePatternGroupOrDefault', '([\\s\\S]*)\\((.*)\\)', 'testReadFanout2_38(org.eclipse.jgit.notes.NoteMapTest)')","[258357, 258616]"
"('Description.java', 'org.junit.runner.Description', 'methodAndClassNamePatternGroupOrDefault', '([\\s\\S]*)\\((.*)\\)', 'org.eclipse.jgit.internal.storage.file.UnpackedObjectTest')","[121538, 122206]"
"('Description.java', 'org.junit.runner.Description', 'methodAndClassNamePatternGroupOrDefault', '([\\s\\S]*)\\((.*)\\)', 'testDifferentStatesWithPaths(org.eclipse.jgit.api.StatusCommandTest)')","[157281, 157347]"
"('Description.java', 'org.junit.runner.Description', 'methodAndClassNamePatternGroupOrDefault', '([\\s\\S]*)\\((.*)\\)', 'testAlphaGroupCase2[OldRule? false](org.eclipse.jgit.ignore.IgnoreRuleSpecialCasesTest)')","[85905, 93010]"
"('Description.java', 'org.junit.runner.Description', 'methodAndClassNamePatternGroupOrDefault', '([\\s\\S]*)\\((.*)\\)', 'testEscapedBracket6(org.eclipse.jgit.fnmatch.FileNameMatcherTest)')","[44590, 48000]"
"('URIish.java', 'org.eclipse.jgit.transport.URIish', '<init>', '^([a-z][a-z0-9+-]+)://(?:(?:([^/:@]+)(?::([^\\\\/]+))?@)?((?:[^\\\\/:]+)|(?:\\[[0-9a-f:]+\\]))(?::(\\d+))?((?:/~(?:[^\\\\/]+))?[\\\\/]))?(.+)?$', 'ssh+git://[::1]/D:\\x')","[238252, 238436, 239356, 239540, 240460, 240644]"
"('Description.java', 'org.junit.runner.Description', 'methodAndClassNamePatternGroupOrDefault', '([\\s\\S]*)\\((.*)\\)', 'stashedApplyOnOtherBranch(org.eclipse.jgit.api.StashApplyCommandTest)')","[142813, 143379]"
"('FastIgnoreRule.java', 'org.eclipse.jgit.ignore.FastIgnoreRule', 'isMatch', '[\\p{XDigit}]', '0')",[102097]
"('URIish.java', 'org.eclipse.jgit.transport.URIish', '<init>', '^([a-z][a-z0-9+-]+)://(?:(?:([^/:@]+)(?::([^\\\\/]+))?@)?((?:[^\\\\/:]+)|(?:\\[[0-9a-f:]+\\]))(?::(\\d+))?((?:/~(?:[^\\\\/]+))?[\\\\/]))?(.+)?$', '/tmp/jgit_test_5912311065364399188_tmp/tmp_6780050081060399522')","[151453, 151583, 151730, 151880]"
"('Description.java', 'org.junit.runner.Description', 'methodAndClassNamePatternGroupOrDefault', '([\\s\\S]*)\\((.*)\\)', 'testReadBranchConfig(org.eclipse.jgit.internal.storage.file.RefDirectoryTest)')","[110929, 112109]"
"('Description.java', 'org.junit.runner.Description', 'methodAndClassNamePatternGroupOrDefault', '([\\s\\S]*)\\((.*)\\)', 'testWriteEmptyReadEmpty_RealIndex(org.eclipse.jgit.dircache.DirCacheBasicTest)')","[171506, 172064]"
"('ChangeIdUtil.java', 'org.eclipse.jgit.util.ChangeIdUtil', 'indexOfChangeId', '(^Change-Id: *I[a-f0-9]{40}$)', 'Change-Id:  I3b7e4e16b503ce00f07ba6ad01d97a356dad7701')",[33568]
"('FastIgnoreRule.java', 'org.eclipse.jgit.ignore.FastIgnoreRule', 'isMatch', '\\[[a]', '[a')",[102773]
"('Description.java', 'org.junit.runner.Description', 'methodAndClassNamePatternGroupOrDefault', '([\\s\\S]*)\\((.*)\\)', 'org.eclipse.jgit.treewalk.filter.TreeFilterTest')","[265842, 266166]"
"('Description.java', 'org.junit.runner.Description', 'methodAndClassNamePatternGroupOrDefault', '([\\s\\S]*)\\((.*)\\)', 'testQuestionmark[OldRule? true](org.eclipse.jgit.ignore.FastIgnoreRuleTest)')","[77585, 78321]"
"('Description.java', 'org.junit.runner.Description', 'methodAndClassNamePatternGroupOrDefault', '([\\s\\S]*)\\((.*)\\)', 'testInvalidTreeNameIsDotGitSpaceDot(org.eclipse.jgit.lib.ObjectCheckerTest)')","[48374, 50856]"
"('Description.java', 'org.junit.runner.Description', 'methodAndClassNamePatternGroupOrDefault', '([\\s\\S]*)\\((.*)\\)', 'testNoPostOrder(org.eclipse.jgit.treewalk.PostOrderTreeWalkTest)')","[263262, 263389]"
"('Description.java', 'org.junit.runner.Description', 'methodAndClassNamePatternGroupOrDefault', '([\\s\\S]*)\\((.*)\\)', 'testDeleteFile(org.eclipse.jgit.diff.MyersDiffTest)')","[8833, 9268]"
"('URIish.java', 'org.eclipse.jgit.transport.URIish', '<init>', '^([a-z][a-z0-9+-]+)://(?:(?:([^/:@]+)(?::([^\\\\/]+))?@)?((?:[^\\\\/:]+)|(?:\\[[0-9a-f:]+\\]))(?::(\\d+))?((?:/~(?:[^\\\\/]+))?[\\\\/]))?(.+)?$', 'ssh+git://lusr\\example:wtf@1.2.3.4:1234/D:\\x')",[198983]
"('Description.java', 'org.junit.runner.Description', 'methodAndClassNamePatternGroupOrDefault', '([\\s\\S]*)\\((.*)\\)', 'absoluteGitDirRef(org.eclipse.jgit.internal.storage.file.FileRepositoryBuilderTest)')","[118639, 118791]"
"('URIish.java', 'org.eclipse.jgit.transport.URIish', '<init>', '^([a-z][a-z0-9+-]+)://(?:(?:([^/:@]+)(?::([^\\\\/]+))?@)?((?:[^\\\\/:]+)|(?:\\[[0-9a-f:]+\\]))(?::(\\d+))?((?:/~(?:[^\\\\/]+))?[\\\\/]))?(.+)?$', 'https://lusr\\example:wtf@example.com:80/D:\\x')",[206213]
"('Description.java', 'org.junit.runner.Description', 'methodAndClassNamePatternGroupOrDefault', '([\\s\\S]*)\\((.*)\\)', 'testDegenerate_DeleteStart(org.eclipse.jgit.diff.HistogramDiffTest)')","[6975, 7648]"
"('Description.java', 'org.junit.runner.Description', 'methodAndClassNamePatternGroupOrDefault', '([\\s\\S]*)\\((.*)\\)', 'testDegenerate_DeleteMiddle(org.eclipse.jgit.diff.HistogramDiffTest)')","[6912, 7582]"
"('URIish.java', 'org.eclipse.jgit.transport.URIish', '<init>', '^(file):([\\\\/](?![\\\\/])((?:[A-Za-z]:)?[\\\\/]?(?:(?:[^\\\\/]+[\\\\/]+)*[^\\\\/]+[\\\\/]*)))$', 'file:/tmp/jgit_test_1212230039583698495_tmp/tmp_6607950726549284424/.git/')","[5435, 5463]"
"('Description.java', 'org.junit.runner.Description', 'methodAndClassNamePatternGroupOrDefault', '([\\s\\S]*)\\((.*)\\)', 'testAlnumGroupCase2[OldRule? false](org.eclipse.jgit.ignore.IgnoreRuleSpecialCasesTest)')","[87791, 94896]"
"('Description.java', 'org.junit.runner.Description', 'methodAndClassNamePatternGroupOrDefault', '([\\s\\S]*)\\((.*)\\)', 'test001_Initalize(org.eclipse.jgit.internal.storage.file.T0003_BasicTest)')","[116630, 117169]"
"('Description.java', 'org.junit.runner.Description', 'methodAndClassNamePatternGroupOrDefault', '([\\s\\S]*)\\((.*)\\)', 'testPrintGroupCase3[OldRule? false](org.eclipse.jgit.ignore.IgnoreRuleSpecialCasesTest)')","[87055, 94160]"
"('Description.java', 'org.junit.runner.Description', 'methodAndClassNamePatternGroupOrDefault', '([\\s\\S]*)\\((.*)\\)', 'testRemoveMissingNote(org.eclipse.jgit.notes.LeafBucketTest)')","[260275, 260515]"
"('Description.java', 'org.junit.runner.Description', 'methodAndClassNamePatternGroupOrDefault', '([\\s\\S]*)\\((.*)\\)', 'testXDigitGroupCase7[OldRule? false](org.eclipse.jgit.ignore.IgnoreRuleSpecialCasesTest)')","[87722, 94827]"
"('Description.java', 'org.junit.runner.Description', 'methodAndClassNamePatternGroupOrDefault', '([\\s\\S]*)\\((.*)\\)', 'testNonBlockingPartialRead(org.eclipse.jgit.util.io.UnionInputStreamTest)')","[25371, 25589]"
"('URIish.java', 'org.eclipse.jgit.transport.URIish', '<init>', '^(?:([^/:@]+)(?::([^\\\\/]+))?@)?([^\\\\/:]{2,}):([\\\\/](?:(?:[^\\\\/]+[\\\\/]+)*[^\\\\/]+[\\\\/]*))$', '/abc/.git')",[249338]
"('URIish.java', 'org.eclipse.jgit.transport.URIish', '<init>', '^(file):([\\\\/](?![\\\\/])((?:[A-Za-z]:)?[\\\\/]?(?:(?:[^\\\\/]+[\\\\/]+)*[^\\\\/]+[\\\\/]*)))$', 'https://me@1.2.3.4:80//abc')",[217529]
"('Description.java', 'org.junit.runner.Description', 'methodAndClassNamePatternGroupOrDefault', '([\\s\\S]*)\\((.*)\\)', 'testTwoRangesInOneGroupCase4[OldRule? true](org.eclipse.jgit.ignore.IgnoreRuleSpecialCasesTest)')","[91607, 98691]"
"('URIish.java', 'org.eclipse.jgit.transport.URIish', '<init>', '^([a-z][a-z0-9+-]+)://(?:(?:([^/:@]+)(?::([^\\\\/]+))?@)?((?:[^\\\\/:]+)|(?:\\[[0-9a-f:]+\\]))(?::(\\d+))?((?:/~(?:[^\\\\/]+))?[\\\\/]))?(.+)?$', 'http://l usr\\example.com@example.com//')","[228546, 228730]"
"('Description.java', 'org.junit.runner.Description', 'methodAndClassNamePatternGroupOrDefault', '([\\s\\S]*)\\((.*)\\)', 'testInitialCheckout(org.eclipse.jgit.lib.DirCacheCheckoutTest)')","[61167, 62153]"
"('URIish.java', 'org.eclipse.jgit.transport.URIish', '<init>', '^([a-z][a-z0-9+-]+)://(?:(?:([^/:@]+)(?::([^\\\\/]+))?@)?((?:[^\\\\/:]+)|(?:\\[[0-9a-f:]+\\]))(?::(\\d+))?((?:/~(?:[^\\\\/]+))?[\\\\/]))?(.+)?$', 'http://lusr\\example@1.2.3.4:1234/D:\\x')",[216333]
"('URIish.java', 'org.eclipse.jgit.transport.URIish', '<init>', '^([a-z][a-z0-9+-]+)://(?:(?:([^/:@]+)(?::([^\\\\/]+))?@)?((?:[^\\\\/:]+)|(?:\\[[0-9a-f:]+\\]))(?::(\\d+))?((?:/~(?:[^\\\\/]+))?[\\\\/]))?(.+)?$', 'ssh://DOMAIN\\user:pass@example.com:33/some/p ath%20')","[251178, 251224]"
"('URIish.java', 'org.eclipse.jgit.transport.URIish', '<init>', '^([a-z][a-z0-9+-]+)://(?:(?:([^/:@]+)(?::([^\\\\/]+))?@)?((?:[^\\\\/:]+)|(?:\\[[0-9a-f:]+\\]))(?::(\\d+))?((?:/~(?:[^\\\\/]+))?[\\\\/]))?(.+)?$', 'ssh+git://me:wtf@[::1]:1234//abc')",[197051]
"('URIish.java', 'org.eclipse.jgit.transport.URIish', '<init>', '^([a-z][a-z0-9+-]+)://(?:(?:([^/:@]+)(?::([^\\\\/]+))?@)?((?:[^\\\\/:]+)|(?:\\[[0-9a-f:]+\\]))(?::(\\d+))?((?:/~(?:[^\\\\/]+))?[\\\\/]))?(.+)?$', '/tmp/jgit_test_9017651431273807895_tmp/tmp_2045899248531600700')","[145253, 145383, 145589, 145798, 145948]"
"('Description.java', 'org.junit.runner.Description', 'methodAndClassNamePatternGroupOrDefault', '([\\s\\S]*)\\((.*)\\)', 'testOnlyCommentRebaseTodo(org.eclipse.jgit.api.RebaseCommandTest)')","[132125, 133646]"
"('URIish.java', 'org.eclipse.jgit.transport.URIish', '<init>', '^(file):([\\\\/](?![\\\\/])((?:[A-Za-z]:)?[\\\\/]?(?:(?:[^\\\\/]+[\\\\/]+)*[^\\\\/]+[\\\\/]*)))$', 'file:///tmp/jgit_test_423578117363873144_tmp/tmp_5965468416386616865/.git/')",[57054]
"('Description.java', 'org.junit.runner.Description', 'methodAndClassNamePatternGroupOrDefault', '([\\s\\S]*)\\((.*)\\)', 'testCheckoutSecond(org.eclipse.jgit.api.PathCheckoutCommandTest)')","[123839, 124119]"
"('Description.java', 'org.junit.runner.Description', 'methodAndClassNamePatternGroupOrDefault', '([\\s\\S]*)\\((.*)\\)', 'testCull(org.eclipse.jgit.revwalk.ObjectWalkTest)')","[177360, 177552]"
"('URIish.java', 'org.eclipse.jgit.transport.URIish', '<init>', '^([a-z][a-z0-9+-]+)://(?:(?:([^/:@]+)(?::([^\\\\/]+))?@)?((?:[^\\\\/:]+)|(?:\\[[0-9a-f:]+\\]))(?::(\\d+))?((?:/~(?:[^\\\\/]+))?[\\\\/]))?(.+)?$', 'https://example.com/D:\\x')","[244140, 244324, 245244, 245428, 246348, 246532]"
"('URIish.java', 'org.eclipse.jgit.transport.URIish', '<init>', '^(?:([^/:@]+)(?::([^\\\\/]+))?@)?([^\\\\/:]{2,}):([\\\\/](?:(?:[^\\\\/]+[\\\\/]+)*[^\\\\/]+[\\\\/]*))$', 'D:\\m y')","[249476, 249591]"
"('QuotedString.java', 'org.eclipse.jgit.util.QuotedString$BourneUserPathStyle', 'quote', '^~[A-Za-z0-9_-]*/.*$', ""a'b"")","[30225, 30250]"
"('FastIgnoreRule.java', 'org.eclipse.jgit.ignore.FastIgnoreRule', 'isMatch', '[\\p{Punct}]', '.')",[101107]
"('Description.java', 'org.junit.runner.Description', 'methodAndClassNamePatternGroupOrDefault', '([\\s\\S]*)\\((.*)\\)', 'testSetFive_InOrder(org.eclipse.jgit.notes.LeafBucketTest)')","[260254, 260493]"
"('URIish.java', 'org.eclipse.jgit.transport.URIish', '<init>', '^([a-z][a-z0-9+-]+)://(?:(?:([^/:@]+)(?::([^\\\\/]+))?@)?((?:[^\\\\/:]+)|(?:\\[[0-9a-f:]+\\]))(?::(\\d+))?((?:/~(?:[^\\\\/]+))?[\\\\/]))?(.+)?$', 'ssh+git://lusr\\example:wtf@example.com:80/D:/x')",[198753]
"('URIish.java', 'org.eclipse.jgit.transport.URIish', '<init>', '^(?:([^/:@]+)(?::([^\\\\/]+))?@)?([^\\\\/:]{2,}):([\\\\/](?:(?:[^\\\\/]+[\\\\/]+)*[^\\\\/]+[\\\\/]*))$', '/a/b/c.git')",[191179]
"('URIish.java', 'org.eclipse.jgit.transport.URIish', '<init>', '^(file):([\\\\/](?![\\\\/])((?:[A-Za-z]:)?[\\\\/]?(?:(?:[^\\\\/]+[\\\\/]+)*[^\\\\/]+[\\\\/]*)))$', 'ssh://me@1.2.3.4:1234//')",[207340]
"('FastIgnoreRule.java', 'org.eclipse.jgit.ignore.FastIgnoreRule', 'isMatch', '[a\\[]', '[')",[99025]
"('URIish.java', 'org.eclipse.jgit.transport.URIish', '<init>', '^(file):([\\\\/](?![\\\\/])((?:[A-Za-z]:)?[\\\\/]?(?:(?:[^\\\\/]+[\\\\/]+)*[^\\\\/]+[\\\\/]*)))$', 'ssh+git://me@[::1]:80/D:\\x')",[211342]
"('Description.java', 'org.junit.runner.Description', 'methodAndClassNamePatternGroupOrDefault', '([\\s\\S]*)\\((.*)\\)', 'testPrintGroupCase2[OldRule? true](org.eclipse.jgit.ignore.IgnoreRuleSpecialCasesTest)')","[90595, 97679]"
"('Description.java', 'org.junit.runner.Description', 'methodAndClassNamePatternGroupOrDefault', '([\\s\\S]*)\\((.*)\\)', 'testInvalidTreeNameIsDotGitSomethingDotDot(org.eclipse.jgit.lib.ObjectCheckerTest)')","[48542, 51032]"
"('URIish.java', 'org.eclipse.jgit.transport.URIish', '<init>', '^([a-z][a-z0-9+-]+)://(?:(?:([^/:@]+)(?::([^\\\\/]+))?@)?((?:[^\\\\/:]+)|(?:\\[[0-9a-f:]+\\]))(?::(\\d+))?((?:/~(?:[^\\\\/]+))?[\\\\/]))?(.+)?$', 'ssh://l usr\\example.com@1.2.3.4:80/D:/x')",[208743]
"('Description.java', 'org.junit.runner.Description', 'methodAndClassNamePatternGroupOrDefault', '([\\s\\S]*)\\((.*)\\)', 'nameExact(org.eclipse.jgit.api.NameRevCommandTest)')","[168958, 169200]"
"('Description.java', 'org.junit.runner.Description', 'methodAndClassNamePatternGroupOrDefault', '([\\s\\S]*)\\((.*)\\)', 'testReadACK_Invalid1(org.eclipse.jgit.transport.PacketLineInTest)')","[184500, 185039]"
"('URIish.java', 'org.eclipse.jgit.transport.URIish', '<init>', '^(file):([\\\\/](?![\\\\/])((?:[A-Za-z]:)?[\\\\/]?(?:(?:[^\\\\/]+[\\\\/]+)*[^\\\\/]+[\\\\/]*)))$', 'ssh+git://lusr\\example@[::1]//')","[227051, 227235]"
"('Description.java', 'org.junit.runner.Description', 'methodAndClassNamePatternGroupOrDefault', '([\\s\\S]*)\\((.*)\\)', 'getRemoteTrackingBranchShouldHandleOtherMapping(org.eclipse.jgit.lib.BranchConfigTest)')","[54870, 55045]"
"('Description.java', 'org.junit.runner.Description', 'methodAndClassNamePatternGroupOrDefault', '([\\s\\S]*)\\((.*)\\)', 'testInvalidTagNoObject5(org.eclipse.jgit.lib.ObjectCheckerTest)')","[49970, 52528]"
"('Description.java', 'org.junit.runner.Description', 'methodAndClassNamePatternGroupOrDefault', '([\\s\\S]*)\\((.*)\\)', 'testNewNamespaceConflictWithPackedPrefixOfExisting(org.eclipse.jgit.internal.storage.file.RefUpdateTest)')","[120264, 121116]"
"('Description.java', 'org.junit.runner.Description', 'methodAndClassNamePatternGroupOrDefault', '([\\s\\S]*)\\((.*)\\)', 'test010_toString(org.eclipse.jgit.lib.ObjectIdTest)')","[53465, 53740]"
"('Repository.java', 'org.eclipse.jgit.lib.Repository', 'resolve', '^-\\d+$', '1')","[64579, 64606, 64689, 64716, 64799, 64826, 65404, 65431]"
"('Description.java', 'org.junit.runner.Description', 'methodAndClassNamePatternGroupOrDefault', '([\\s\\S]*)\\((.*)\\)', 'generatorFilteredToOneOfTwoSubmodules(org.eclipse.jgit.submodule.SubmoduleWalkTest)')","[17154, 17348]"
"('Description.java', 'org.junit.runner.Description', 'methodAndClassNamePatternGroupOrDefault', '([\\s\\S]*)\\((.*)\\)', 'testWrite_CH_PROGRESS(org.eclipse.jgit.transport.SideBandOutputStreamTest)')","[251934, 252173]"
"('AttributesRule.java', 'org.eclipse.jgit.attributes.AttributesRule', 'isMatch', '[tv]est\\.sta[a-d]', 'test.stac')","[74382, 75526]"
"('URIish.java', 'org.eclipse.jgit.transport.URIish', '<init>', '^(file):([\\\\/](?![\\\\/])((?:[A-Za-z]:)?[\\\\/]?(?:(?:[^\\\\/]+[\\\\/]+)*[^\\\\/]+[\\\\/]*)))$', 'https://l usr\\example.com@[::1]:80/D:\\x')",[219645]
"('Description.java', 'org.junit.runner.Description', 'methodAndClassNamePatternGroupOrDefault', '([\\s\\S]*)\\((.*)\\)', 'testCheckoutAnnotatedTag(org.eclipse.jgit.api.CheckoutCommandTest)')","[149535, 150075]"
"('URIish.java', 'org.eclipse.jgit.transport.URIish', '<init>', '^([a-z][a-z0-9+-]+)://(?:(?:([^/:@]+)(?::([^\\\\/]+))?@)?((?:[^\\\\/:]+)|(?:\\[[0-9a-f:]+\\]))(?::(\\d+))?((?:/~(?:[^\\\\/]+))?[\\\\/]))?(.+)?$', 'http://l usr\\example.com@[::1]:1234/D:\\x')",[215597]
"('URIish.java', 'org.eclipse.jgit.transport.URIish', '<init>', '^([\\\\/]?((?:[A-Za-z]:)?[\\\\/]?(?:(?:[^\\\\/]+[\\\\/]+)*[^\\\\/]+[\\\\/]*)))$', '/tmp/jgit_test_2307217292654954211_tmp/tmp_6715492902754415962.git')",[184147]
"('Description.java', 'org.junit.runner.Description', 'methodAndClassNamePatternGroupOrDefault', '([\\s\\S]*)\\((.*)\\)', 'testAddOne(org.eclipse.jgit.diff.EditListTest)')","[4077, 4185]"
"('URIish.java', 'org.eclipse.jgit.transport.URIish', '<init>', '^(file):([\\\\/](?![\\\\/])((?:[A-Za-z]:)?[\\\\/]?(?:(?:[^\\\\/]+[\\\\/]+)*[^\\\\/]+[\\\\/]*)))$', 'https://me:wtf@[::1]:80//abc')",[204626]
"('Description.java', 'org.junit.runner.Description', 'methodAndClassNamePatternGroupOrDefault', '([\\s\\S]*)\\((.*)\\)', 'testRemoveCollision1(org.eclipse.jgit.transport.LongMapTest)')","[183574, 183743]"
"('Description.java', 'org.junit.runner.Description', 'methodAndClassNamePatternGroupOrDefault', '([\\s\\S]*)\\((.*)\\)', 'testSpaceGroupCase0(org.eclipse.jgit.fnmatch.FileNameMatcherTest)')","[42574, 45888]"
"('Description.java', 'org.junit.runner.Description', 'methodAndClassNamePatternGroupOrDefault', '([\\s\\S]*)\\((.*)\\)', 'testACommitWithBug_SubButNoBody(org.eclipse.jgit.util.ChangeIdUtilTest)')","[32350, 33119]"
"('Description.java', 'org.junit.runner.Description', 'methodAndClassNamePatternGroupOrDefault', '([\\s\\S]*)\\((.*)\\)', 'testRefsChangedStackOverflow(org.eclipse.jgit.internal.storage.file.RefDirectoryTest)')","[111160, 112351]"
"('Description.java', 'org.junit.runner.Description', 'methodAndClassNamePatternGroupOrDefault', '([\\s\\S]*)\\((.*)\\)', 'testMixedGroupCase9[OldRule? true](org.eclipse.jgit.ignore.IgnoreRuleSpecialCasesTest)')","[88893, 95977]"
"('Description.java', 'org.junit.runner.Description', 'methodAndClassNamePatternGroupOrDefault', '([\\s\\S]*)\\((.*)\\)', 'testPush(org.eclipse.jgit.api.PushCommandTest)')","[140537, 140666]"
"('Description.java', 'org.junit.runner.Description', 'methodAndClassNamePatternGroupOrDefault', '([\\s\\S]*)\\((.*)\\)', 'testMixedGroupCase9[OldRule? false](org.eclipse.jgit.ignore.IgnoreRuleSpecialCasesTest)')","[85330, 92435]"
"('URIish.java', 'org.eclipse.jgit.transport.URIish', '<init>', '^([a-z][a-z0-9+-]+)://(?:(?:([^/:@]+)(?::([^\\\\/]+))?@)?((?:[^\\\\/:]+)|(?:\\[[0-9a-f:]+\\]))(?::(\\d+))?((?:/~(?:[^\\\\/]+))?[\\\\/]))?(.+)?$', 'https://me@example.com:80/D:\\x')",[217253]
"('Description.java', 'org.junit.runner.Description', 'methodAndClassNamePatternGroupOrDefault', '([\\s\\S]*)\\((.*)\\)', 'testFallbackToMyersDiff(org.eclipse.jgit.diff.HistogramDiffTest)')","[6631, 7256]"
"('Description.java', 'org.junit.runner.Description', 'methodAndClassNamePatternGroupOrDefault', '([\\s\\S]*)\\((.*)\\)', 'org.eclipse.jgit.internal.storage.file.GcBasicPackingTest')","[113204, 117536]"
"('URIish.java', 'org.eclipse.jgit.transport.URIish', '<init>', '^(file):([\\\\/](?![\\\\/])((?:[A-Za-z]:)?[\\\\/]?(?:(?:[^\\\\/]+[\\\\/]+)*[^\\\\/]+[\\\\/]*)))$', 'ssh://me:wtf@[::1]:80/D:/x')",[193054]
"('Description.java', 'org.junit.runner.Description', 'methodAndClassNamePatternGroupOrDefault', '([\\s\\S]*)\\((.*)\\)', 'testIteratorReturnedValues1(org.eclipse.jgit.internal.storage.file.PackIndexV2Test)')","[114599, 114729]"
"('URIish.java', 'org.eclipse.jgit.transport.URIish', '<init>', '^([a-z][a-z0-9+-]+)://(?:(?:([^/:@]+)(?::([^\\\\/]+))?@)?((?:[^\\\\/:]+)|(?:\\[[0-9a-f:]+\\]))(?::(\\d+))?((?:/~(?:[^\\\\/]+))?[\\\\/]))?(.+)?$', 'https://me:wtf@[::1]:80/D:\\x')",[204741]
"('Description.java', 'org.junit.runner.Description', 'methodAndClassNamePatternGroupOrDefault', '([\\s\\S]*)\\((.*)\\)', 'testTwoCommitDeepTree2(org.eclipse.jgit.revwalk.ObjectWalkTest)')","[177423, 177618]"
"('URIish.java', 'org.eclipse.jgit.transport.URIish', '<init>', '^([a-z][a-z0-9+-]+)://(?:(?:([^/:@]+)(?::([^\\\\/]+))?@)?((?:[^\\\\/:]+)|(?:\\[[0-9a-f:]+\\]))(?::(\\d+))?((?:/~(?:[^\\\\/]+))?[\\\\/]))?(.+)?$', 'file:///tmp/jgit_test_6256491358168162883_tmp/tmp_6857378809242731644')","[164155, 164217, 164269, 164331, 165302, 165364]"
"('ChangeIdUtil.java', 'org.eclipse.jgit.util.ChangeIdUtil', 'indexOfChangeId', '(^Change-Id: *I[a-f0-9]{40}$)', 'e')",[37322]
"('URIish.java', 'org.eclipse.jgit.transport.URIish', '<init>', '^([a-z][a-z0-9+-]+)://(?:(?:([^/:@]+)(?::([^\\\\/]+))?@)?((?:[^\\\\/:]+)|(?:\\[[0-9a-f:]+\\]))(?::(\\d+))?((?:/~(?:[^\\\\/]+))?[\\\\/]))?(.+)?$', 'http://me@1.2.3.4//')","[227810, 227994]"
"('Description.java', 'org.junit.runner.Description', 'methodAndClassNamePatternGroupOrDefault', '([\\s\\S]*)\\((.*)\\)', 'testMaliciousPathDotDot(org.eclipse.jgit.lib.DirCacheCheckoutMaliciousPathTest)')","[66823, 67723]"
"('Description.java', 'org.junit.runner.Description', 'methodAndClassNamePatternGroupOrDefault', '([\\s\\S]*)\\((.*)\\)', 'testHardResetOnUnbornBranch(org.eclipse.jgit.api.ResetCommandTest)')","[167146, 167483]"
"('Description.java', 'org.junit.runner.Description', 'methodAndClassNamePatternGroupOrDefault', '([\\s\\S]*)\\((.*)\\)', 'testURIEncode_00(org.eclipse.jgit.transport.URIishTest)')","[188485, 189864]"
"('URIish.java', 'org.eclipse.jgit.transport.URIish', '<init>', '^([a-z][a-z0-9+-]+)://(?:(?:([^/:@]+)(?::([^\\\\/]+))?@)?((?:[^\\\\/:]+)|(?:\\[[0-9a-f:]+\\]))(?::(\\d+))?((?:/~(?:[^\\\\/]+))?[\\\\/]))?(.+)?$', 'ssh+git://me:wtf@1.2.3.4:1234//')",[196637]
"('Description.java', 'org.junit.runner.Description', 'methodAndClassNamePatternGroupOrDefault', '([\\s\\S]*)\\((.*)\\)', 'testMixedGroupCase7[OldRule? true](org.eclipse.jgit.ignore.IgnoreRuleSpecialCasesTest)')","[88847, 95931]"
"('URIish.java', 'org.eclipse.jgit.transport.URIish', '<init>', '^([a-z][a-z0-9+-]+)://(?:(?:([^/:@]+)(?::([^\\\\/]+))?@)?((?:[^\\\\/:]+)|(?:\\[[0-9a-f:]+\\]))(?::(\\d+))?((?:/~(?:[^\\\\/]+))?[\\\\/]))?(.+)?$', 'https://l usr\\example.com@1.2.3.4:80//abc')",[219208]
"('Description.java', 'org.junit.runner.Description', 'methodAndClassNamePatternGroupOrDefault', '([\\s\\S]*)\\((.*)\\)', 'testURIEncode_unicode(org.eclipse.jgit.transport.URIishTest)')","[188170, 189534]"
"('Description.java', 'org.junit.runner.Description', 'methodAndClassNamePatternGroupOrDefault', '([\\s\\S]*)\\((.*)\\)', 'testWildmatchDoNotMatch[OldRule? false](org.eclipse.jgit.ignore.FastIgnoreRuleTest)')","[77127, 77884]"
"('Description.java', 'org.junit.runner.Description', 'methodAndClassNamePatternGroupOrDefault', '([\\s\\S]*)\\((.*)\\)', 'testRebaseShouldStopForEditInCaseOfConflict(org.eclipse.jgit.api.RebaseCommandTest)')","[132041, 133558]"
"('URIish.java', 'org.eclipse.jgit.transport.URIish', '<init>', '^([a-z][a-z0-9+-]+)://(?:(?:([^/:@]+)(?::([^\\\\/]+))?@)?((?:[^\\\\/:]+)|(?:\\[[0-9a-f:]+\\]))(?::(\\d+))?((?:/~(?:[^\\\\/]+))?[\\\\/]))?(.+)?$', 'ssh+git://l usr\\example.com:wtf@1.2.3.4:80//abc')",[197971]
"('Description.java', 'org.junit.runner.Description', 'methodAndClassNamePatternGroupOrDefault', '([\\s\\S]*)\\((.*)\\)', 'testFileInFolderCommittedAllDeleted(org.eclipse.jgit.treewalk.filter.IndexDiffFilterTest)')","[264779, 265607]"
"('URIish.java', 'org.eclipse.jgit.transport.URIish', '<init>', '^(file):([\\\\/](?![\\\\/])((?:[A-Za-z]:)?[\\\\/]?(?:(?:[^\\\\/]+[\\\\/]+)*[^\\\\/]+[\\\\/]*)))$', 'file:///tmp/jgit_test_431139730155861545_tmp/tmp_9168887968344414191')","[166924, 166981, 167039]"
"('ChangeIdUtil.java', 'org.eclipse.jgit.util.ChangeIdUtil', 'indexOfChangeId', '(^Change-Id: *I[a-f0-9]{40}$)', 'Change-Id: I1b55098b5a2cce0b3f3da783dda50d5f79f873fa')","[35067, 36568]"
"('URIish.java', 'org.eclipse.jgit.transport.URIish', '<init>', '^([a-z][a-z0-9+-]+)://(?:(?:([^/:@]+)(?::([^\\\\/]+))?@)?((?:[^\\\\/:]+)|(?:\\[[0-9a-f:]+\\]))(?::(\\d+))?((?:/~(?:[^\\\\/]+))?[\\\\/]))?(.+)?$', 'ssh://lusr\\example@example.com:80/D:/x')",[209479]
"('ChangeIdUtil.java', 'org.eclipse.jgit.util.ChangeIdUtil', 'indexOfFirstFooterLine', '(^[a-zA-Z0-9-]+:(?!//).*$)', 'Signed-off-by: J Committer <jc@example.com>')","[34374, 35531, 35815, 35996]"
"('Description.java', 'org.junit.runner.Description', 'methodAndClassNamePatternGroupOrDefault', '([\\s\\S]*)\\((.*)\\)', 'testRebaseShouldLeaveWorkspaceUntouchedWithUnstagedChangesConflict(org.eclipse.jgit.api.RebaseCommandTest)')","[131180, 132656]"
"('URIish.java', 'org.eclipse.jgit.transport.URIish', '<init>', '^(file):([\\\\/](?![\\\\/])((?:[A-Za-z]:)?[\\\\/]?(?:(?:[^\\\\/]+[\\\\/]+)*[^\\\\/]+[\\\\/]*)))$', 'file:///tmp/jgit_test_597757690182063003_tmp/tmp_6960298199588244567.git/')","[141031, 141086, 141221, 141276, 141411, 141466, 141601, 141656, 141791, 141846, 141981, 142036, 142171, 142226]"
"('URIish.java', 'org.eclipse.jgit.transport.URIish', '<init>', '^(file):([\\\\/](?![\\\\/])((?:[A-Za-z]:)?[\\\\/]?(?:(?:[^\\\\/]+[\\\\/]+)*[^\\\\/]+[\\\\/]*)))$', 'http://lusr\\example@1.2.3.4:1234/D:\\x')",[216310]
"('Description.java', 'org.junit.runner.Description', 'methodAndClassNamePatternGroupOrDefault', '([\\s\\S]*)\\((.*)\\)', 'testResetHardFromIndexEntryWithoutFileToTreeWithoutFile(org.eclipse.jgit.lib.DirCacheCheckoutTest)')","[61251, 62241]"
"('Description.java', 'org.junit.runner.Description', 'methodAndClassNamePatternGroupOrDefault', '([\\s\\S]*)\\((.*)\\)', 'testMultipleHeads_SameBase2(org.eclipse.jgit.revwalk.RevWalkMergeBaseTest)')","[177785, 177913]"
"('Description.java', 'org.junit.runner.Description', 'methodAndClassNamePatternGroupOrDefault', '([\\s\\S]*)\\((.*)\\)', 'resolveReflogParent(org.eclipse.jgit.lib.ReflogResolveTest)')","[64343, 64474]"
"('Description.java', 'org.junit.runner.Description', 'methodAndClassNamePatternGroupOrDefault', '([\\s\\S]*)\\((.*)\\)', 'commitUpdatesSmudgedEntries(org.eclipse.jgit.api.CommitCommandTest)')","[123147, 123363]"
"('Description.java', 'org.junit.runner.Description', 'methodAndClassNamePatternGroupOrDefault', '([\\s\\S]*)\\((.*)\\)', 'org.eclipse.jgit.transport.NetRCTest')","[189237, 191524]"
"('Description.java', 'org.junit.runner.Description', 'methodAndClassNamePatternGroupOrDefault', '([\\s\\S]*)\\((.*)\\)', 'testReset(org.eclipse.jgit.dircache.DirCacheIteratorTest)')","[170128, 170362]"
"('FastIgnoreRule.java', 'org.eclipse.jgit.ignore.FastIgnoreRule', 'isMatch', '[[\\p{Graph}\\p{javaDigit}\\p{javaLetter}]]', ' ')",[99753]
"('Description.java', 'org.junit.runner.Description', 'methodAndClassNamePatternGroupOrDefault', '([\\s\\S]*)\\((.*)\\)', 'testAddToEmptyList(org.eclipse.jgit.util.RefListTest)')","[20180, 20682]"
"('URIish.java', 'org.eclipse.jgit.transport.URIish', '<init>', '^(file):([\\\\/](?![\\\\/])((?:[A-Za-z]:)?[\\\\/]?(?:(?:[^\\\\/]+[\\\\/]+)*[^\\\\/]+[\\\\/]*)))$', 'ssh://l usr\\example.com:wtf@example.com:1234//')",[193146]
"('Description.java', 'org.junit.runner.Description', 'methodAndClassNamePatternGroupOrDefault', '([\\s\\S]*)\\((.*)\\)', 'testParseEncoding_badEncoding(org.eclipse.jgit.util.RawParseUtilsTest)')","[39556, 39620]"
"('Description.java', 'org.junit.runner.Description', 'methodAndClassNamePatternGroupOrDefault', '([\\s\\S]*)\\((.*)\\)', 'testUpperGroupCase3(org.eclipse.jgit.fnmatch.FileNameMatcherTest)')","[43708, 47076]"
"('Description.java', 'org.junit.runner.Description', 'methodAndClassNamePatternGroupOrDefault', '([\\s\\S]*)\\((.*)\\)', 'testIncompleteRangesInOneGroupCase0(org.eclipse.jgit.fnmatch.FileNameMatcherTest)')","[43351, 46702]"
"('Description.java', 'org.junit.runner.Description', 'methodAndClassNamePatternGroupOrDefault', '([\\s\\S]*)\\((.*)\\)', 'testBackBug396127(org.eclipse.jgit.dircache.DirCacheIteratorTest)')","[170107, 170340]"
"('Description.java', 'org.junit.runner.Description', 'methodAndClassNamePatternGroupOrDefault', '([\\s\\S]*)\\((.*)\\)', 'testOneBlockAndHalf_SingleWrite(org.eclipse.jgit.util.TemporaryBufferTest)')","[26659, 26964]"
"('URIish.java', 'org.eclipse.jgit.transport.URIish', '<init>', '^(file):([\\\\/](?![\\\\/])((?:[A-Za-z]:)?[\\\\/]?(?:(?:[^\\\\/]+[\\\\/]+)*[^\\\\/]+[\\\\/]*)))$', 'http://lusr\\example:wtf@example.com:80//')",[201950]
"('Description.java', 'org.junit.runner.Description', 'methodAndClassNamePatternGroupOrDefault', '([\\s\\S]*)\\((.*)\\)', 'org.eclipse.jgit.patch.PatchErrorTest')","[957, 1546]"
"('FastIgnoreRule.java', 'org.eclipse.jgit.ignore.FastIgnoreRule', 'isMatch', '[A\\p{Ll}C3-5]', '3')",[99415]
"('Description.java', 'org.junit.runner.Description', 'methodAndClassNamePatternGroupOrDefault', '([\\s\\S]*)\\((.*)\\)', 'testPrintGroupCase0[OldRule? true](org.eclipse.jgit.ignore.IgnoreRuleSpecialCasesTest)')","[90549, 97633]"
"('URIish.java', 'org.eclipse.jgit.transport.URIish', '<init>', '^([a-z][a-z0-9+-]+)://(?:(?:([^/:@]+)(?::([^\\\\/]+))?@)?((?:[^\\\\/:]+)|(?:\\[[0-9a-f:]+\\]))(?::(\\d+))?((?:/~(?:[^\\\\/]+))?[\\\\/]))?(.+)?$', 'http://l usr\\example.com@[::1]:1234//abc')",[215505]
"('Description.java', 'org.junit.runner.Description', 'methodAndClassNamePatternGroupOrDefault', '([\\s\\S]*)\\((.*)\\)', 'testMixedResetWithUnmerged(org.eclipse.jgit.api.ResetCommandTest)')","[167251, 167593]"
"('FastIgnoreRule.java', 'org.eclipse.jgit.ignore.FastIgnoreRule', 'isMatch', '[b-ce-e]', 'f')",[102591]
"('URIish.java', 'org.eclipse.jgit.transport.URIish', '<init>', '^([a-z][a-z0-9+-]+)://(?:(?:([^/:@]+)(?::([^\\\\/]+))?@)?((?:[^\\\\/:]+)|(?:\\[[0-9a-f:]+\\]))(?::(\\d+))?((?:/~(?:[^\\\\/]+))?[\\\\/]))?(.+)?$', 'https://me@example.com:1234//abc')",[216977]
"('AttributesRule.java', 'org.eclipse.jgit.attributes.AttributesRule', 'isMatch', '[tv]est\\.sta[a-d]', 'test.staa')","[74328, 75472]"
"('URIish.java', 'org.eclipse.jgit.transport.URIish', '<init>', '^([a-z][a-z0-9+-]+)://(?:(?:([^/:@]+)(?::([^\\\\/]+))?@)?((?:[^\\\\/:]+)|(?:\\[[0-9a-f:]+\\]))(?::(\\d+))?((?:/~(?:[^\\\\/]+))?[\\\\/]))?(.+)?$', 'ssh+git://me@[::1]/D:/x')","[224958, 225142]"
"('URIish.java', 'org.eclipse.jgit.transport.URIish', '<init>', '^([a-z][a-z0-9+-]+)://(?:(?:([^/:@]+)(?::([^\\\\/]+))?@)?((?:[^\\\\/:]+)|(?:\\[[0-9a-f:]+\\]))(?::(\\d+))?((?:/~(?:[^\\\\/]+))?[\\\\/]))?(.+)?$', 'http://l usr\\example.com:wtf@[::1]:1234//')",[201421]
"('Description.java', 'org.junit.runner.Description', 'methodAndClassNamePatternGroupOrDefault', '([\\s\\S]*)\\((.*)\\)', 'testIteratorReturnedValues2(org.eclipse.jgit.internal.storage.file.PackIndexV2Test)')","[114620, 114751]"
"('Description.java', 'org.junit.runner.Description', 'methodAndClassNamePatternGroupOrDefault', '([\\s\\S]*)\\((.*)\\)', 'testRebasePreservingMergesWithUnrelatedSide2(org.eclipse.jgit.api.RebaseCommandTest)')","[131495, 132986]"
"('URIish.java', 'org.eclipse.jgit.transport.URIish', '<init>', '^([a-z][a-z0-9+-]+)://(?:(?:([^/:@]+)(?::([^\\\\/]+))?@)?((?:[^\\\\/:]+)|(?:\\[[0-9a-f:]+\\]))(?::(\\d+))?((?:/~(?:[^\\\\/]+))?[\\\\/]))?(.+)?$', 'ssh+git://me@[::1]:1234//abc')",[211089]
"('Description.java', 'org.junit.runner.Description', 'methodAndClassNamePatternGroupOrDefault', '([\\s\\S]*)\\((.*)\\)', 'testDequote_Empty2(org.eclipse.jgit.util.QuotedStringBourneStyleTest)')","[38373, 38586]"
"('URIish.java', 'org.eclipse.jgit.transport.URIish', '<init>', '^(file):([\\\\/](?![\\\\/])((?:[A-Za-z]:)?[\\\\/]?(?:(?:[^\\\\/]+[\\\\/]+)*[^\\\\/]+[\\\\/]*)))$', 'http://me:wtf@[::1]:80/D:\\x')",[200616]
"('URIish.java', 'org.eclipse.jgit.transport.URIish', '<init>', '^(?:([^/:@]+)(?::([^\\\\/]+))?@)?([^\\\\/:]{2,}):([\\\\/](?:(?:[^\\\\/]+[\\\\/]+)*[^\\\\/]+[\\\\/]*))$', '/tmp/jgit_test_2667399414619613576_tmp/tmp_2988195032823876487')","[153771, 153911, 154072]"
"('URIish.java', 'org.eclipse.jgit.transport.URIish', '<init>', '^(file):([\\\\/](?![\\\\/])((?:[A-Za-z]:)?[\\\\/]?(?:(?:[^\\\\/]+[\\\\/]+)*[^\\\\/]+[\\\\/]*)))$', 'file:/tmp/jgit_test_9215790154376357519_tmp/tmp_2615392917240434684/.git/.')",[13360]
"('URIish.java', 'org.eclipse.jgit.transport.URIish', '<init>', '^(?:([^/:@]+)(?::([^\\\\/]+))?@)?((?:[^\\\\/:]+)|(?:\\[[0-9a-f:]+\\])):((?:(?:/~(?:[^\\\\/]+))[\\\\/])?(?:(?:[^\\\\/]+[\\\\/]+)*[^\\\\/]+[\\\\/]*))$', '/a/b/.git')",[252883]
"('URIish.java', 'org.eclipse.jgit.transport.URIish', '<init>', '^(file):([\\\\/](?![\\\\/])((?:[A-Za-z]:)?[\\\\/]?(?:(?:[^\\\\/]+[\\\\/]+)*[^\\\\/]+[\\\\/]*)))$', 'http://lusr\\example:wtf@[::1]:80//abc')",[202732]
"('Description.java', 'org.junit.runner.Description', 'methodAndClassNamePatternGroupOrDefault', '([\\s\\S]*)\\((.*)\\)', 'testGetCachedBytes(org.eclipse.jgit.notes.NoteMapTest)')","[258336, 258594]"
"('Description.java', 'org.junit.runner.Description', 'methodAndClassNamePatternGroupOrDefault', '([\\s\\S]*)\\((.*)\\)', 'testNextDoesNothing(org.eclipse.jgit.treewalk.EmptyTreeIteratorTest)')","[261061, 261193]"
"('Description.java', 'org.junit.runner.Description', 'methodAndClassNamePatternGroupOrDefault', '([\\s\\S]*)\\((.*)\\)', 'testParseModeChange(org.eclipse.jgit.patch.FileHeaderTest)')","[492, 1022]"
"('URIish.java', 'org.eclipse.jgit.transport.URIish', '<init>', '^(file):([\\\\/](?![\\\\/])((?:[A-Za-z]:)?[\\\\/]?(?:(?:[^\\\\/]+[\\\\/]+)*[^\\\\/]+[\\\\/]*)))$', 'file:///tmp/jgit_test_1219138336105598436_tmp/tmp_4943700805231016094.git/')",[10598]
"('Description.java', 'org.junit.runner.Description', 'methodAndClassNamePatternGroupOrDefault', '([\\s\\S]*)\\((.*)\\)', 'testTrivialTwoWay_disjointhistories(org.eclipse.jgit.merge.SimpleMergeTest)')","[15648, 15932]"
"('Description.java', 'org.junit.runner.Description', 'methodAndClassNamePatternGroupOrDefault', '([\\s\\S]*)\\((.*)\\)', 'org.eclipse.jgit.merge.SimpleMergeTest')","[15417, 15999]"
"('URIish.java', 'org.eclipse.jgit.transport.URIish', '<init>', '^(file):([\\\\/](?![\\\\/])((?:[A-Za-z]:)?[\\\\/]?(?:(?:[^\\\\/]+[\\\\/]+)*[^\\\\/]+[\\\\/]*)))$', 'file:///tmp/jgit_test_6269317750974915610_tmp/tmp_1064218016998638921')",[139319]
"('Description.java', 'org.junit.runner.Description', 'methodAndClassNamePatternGroupOrDefault', '([\\s\\S]*)\\((.*)\\)', 'shouldReturnNullWhenBranchDoesntExist(org.eclipse.jgit.lib.BranchTrackingStatusTest)')","[54104, 54170]"
"('URIish.java', 'org.eclipse.jgit.transport.URIish', '<init>', '^(file):([\\\\/](?![\\\\/])((?:[A-Za-z]:)?[\\\\/]?(?:(?:[^\\\\/]+[\\\\/]+)*[^\\\\/]+[\\\\/]*)))$', 'ssh://me:wtf@example.com:80//abc')",[192272]
"('Description.java', 'org.junit.runner.Description', 'methodAndClassNamePatternGroupOrDefault', '([\\s\\S]*)\\((.*)\\)', 'org.eclipse.jgit.transport.TransportTest')","[254376, 259260]"
"('URIish.java', 'org.eclipse.jgit.transport.URIish', '<init>', '^([a-z][a-z0-9+-]+)://(?:(?:([^/:@]+)(?::([^\\\\/]+))?@)?((?:[^\\\\/:]+)|(?:\\[[0-9a-f:]+\\]))(?::(\\d+))?((?:/~(?:[^\\\\/]+))?[\\\\/]))?(.+)?$', 'ssh+git://l usr\\example.com@[::1]/D:/x')","[226062, 226246]"
"('Description.java', 'org.junit.runner.Description', 'methodAndClassNamePatternGroupOrDefault', '([\\s\\S]*)\\((.*)\\)', 'testRegularCommit(org.eclipse.jgit.util.ChangeIdUtilTest)')","[32182, 32943]"
"('URIish.java', 'org.eclipse.jgit.transport.URIish', '<init>', '^([a-z][a-z0-9+-]+)://(?:(?:([^/:@]+)(?::([^\\\\/]+))?@)?((?:[^\\\\/:]+)|(?:\\[[0-9a-f:]+\\]))(?::(\\d+))?((?:/~(?:[^\\\\/]+))?[\\\\/]))?(.+)?$', 'http://[::1]//')","[241426, 241610, 242530, 242714, 243634, 243818]"
"('URIish.java', 'org.eclipse.jgit.transport.URIish', '<init>', '^(file):([\\\\/](?![\\\\/])((?:[A-Za-z]:)?[\\\\/]?(?:(?:[^\\\\/]+[\\\\/]+)*[^\\\\/]+[\\\\/]*)))$', 'https://me@1.2.3.4/D:/x')","[231191, 231375]"
"('FastIgnoreRule.java', 'org.eclipse.jgit.ignore.FastIgnoreRule', 'isMatch', '\\[', '[')",[102695]
"('URIish.java', 'org.eclipse.jgit.transport.URIish', '<init>', '^([a-z][a-z0-9+-]+)://(?:(?:([^/:@]+)(?::([^\\\\/]+))?@)?((?:[^\\\\/:]+)|(?:\\[[0-9a-f:]+\\]))(?::(\\d+))?((?:/~(?:[^\\\\/]+))?[\\\\/]))?(.+)?$', 'http://lusr\\example:wtf@[::1]:80/D:/x')",[202801]
"('URIish.java', 'org.eclipse.jgit.transport.URIish', '<init>', '^(?:([^/:@]+)(?::([^\\\\/]+))?@)?((?:[^\\\\/:]+)|(?:\\[[0-9a-f:]+\\])):((?:(?:/~(?:[^\\\\/]+))[\\\\/])?(?:(?:[^\\\\/]+[\\\\/]+)*[^\\\\/]+[\\\\/]*))$', 'user@repo.or.cz:/srv/git/egit.git')",[257831]
"('Description.java', 'org.junit.runner.Description', 'methodAndClassNamePatternGroupOrDefault', '([\\s\\S]*)\\((.*)\\)', 'testAdd_SmallGroup(org.eclipse.jgit.util.IntListTest)')","[28255, 28497]"
"('Description.java', 'org.junit.runner.Description', 'methodAndClassNamePatternGroupOrDefault', '([\\s\\S]*)\\((.*)\\)', 'testEmptyValueKey(org.eclipse.jgit.attributes.AttributeNodeTest)')","[73038, 73170]"
"('Description.java', 'org.junit.runner.Description', 'methodAndClassNamePatternGroupOrDefault', '([\\s\\S]*)\\((.*)\\)', 'testStageState_simulated_bug(org.eclipse.jgit.lib.IndexDiffTest)')","[68790, 69133]"
"('Description.java', 'org.junit.runner.Description', 'methodAndClassNamePatternGroupOrDefault', '([\\s\\S]*)\\((.*)\\)', 'testParse_CcDeleteFile(org.eclipse.jgit.patch.PatchCcTest)')","[1876, 1942]"
"('Description.java', 'org.junit.runner.Description', 'methodAndClassNamePatternGroupOrDefault', '([\\s\\S]*)\\((.*)\\)', 'testCopyZeros_Length128(org.eclipse.jgit.internal.storage.pack.DeltaIndexTest)')","[108845, 109120]"
"('Description.java', 'org.junit.runner.Description', 'methodAndClassNamePatternGroupOrDefault', '([\\s\\S]*)\\((.*)\\)', 'testFileCommittedDeletedCommittedIgnoredComparedWithInitialCommit(org.eclipse.jgit.treewalk.filter.IndexDiffFilterTest)')","[264380, 265189]"
"('Description.java', 'org.junit.runner.Description', 'methodAndClassNamePatternGroupOrDefault', '([\\s\\S]*)\\((.*)\\)', 'testReadSymRefToPacked(org.eclipse.jgit.lib.RefTest)')","[57869, 58067]"
"('Description.java', 'org.junit.runner.Description', 'methodAndClassNamePatternGroupOrDefault', '([\\s\\S]*)\\((.*)\\)', 'testCreationImplicitStart(org.eclipse.jgit.api.BranchCommandTest)')","[128674, 128993]"
"('Description.java', 'org.junit.runner.Description', 'methodAndClassNamePatternGroupOrDefault', '([\\s\\S]*)\\((.*)\\)', 'test012_SubtreeExternalSorting(org.eclipse.jgit.internal.storage.file.T0003_BasicTest)')","[116756, 117301]"
"('Description.java', 'org.junit.runner.Description', 'methodAndClassNamePatternGroupOrDefault', '([\\s\\S]*)\\((.*)\\)', 'testRenameBranchNoPreviousLog(org.eclipse.jgit.internal.storage.file.RefUpdateTest)')","[120327, 121182]"
"('URIish.java', 'org.eclipse.jgit.transport.URIish', '<init>', '^(file):([\\\\/](?![\\\\/])((?:[A-Za-z]:)?[\\\\/]?(?:(?:[^\\\\/]+[\\\\/]+)*[^\\\\/]+[\\\\/]*)))$', '/tmp/jgit_test_1358523526465653191_tmp/tmp_2395600565988697857')","[161532, 161657, 161903]"
"('Description.java', 'org.junit.runner.Description', 'methodAndClassNamePatternGroupOrDefault', '([\\s\\S]*)\\((.*)\\)', 'indexAdd(org.eclipse.jgit.api.StashCreateCommandTest)')","[155946, 156288]"
"('URIish.java', 'org.eclipse.jgit.transport.URIish', '<init>', '^(file):([\\\\/](?![\\\\/])((?:[A-Za-z]:)?[\\\\/]?(?:(?:[^\\\\/]+[\\\\/]+)*[^\\\\/]+[\\\\/]*)))$', 'ssh://l usr\\example.com@example.com:80/D:\\x')",[208398]
"('Description.java', 'org.junit.runner.Description', 'methodAndClassNamePatternGroupOrDefault', '([\\s\\S]*)\\((.*)\\)', 'testFlush(org.eclipse.jgit.transport.PacketLineOutTest)')","[191644, 191816]"
"('URIish.java', 'org.eclipse.jgit.transport.URIish', '<init>', '^([a-z][a-z0-9+-]+)://(?:(?:([^/:@]+)(?::([^\\\\/]+))?@)?((?:[^\\\\/:]+)|(?:\\[[0-9a-f:]+\\]))(?::(\\d+))?((?:/~(?:[^\\\\/]+))?[\\\\/]))?(.+)?$', 'http://me@example.com:80/D:\\x')",[213941]
"('Description.java', 'org.junit.runner.Description', 'methodAndClassNamePatternGroupOrDefault', '([\\s\\S]*)\\((.*)\\)', 'testNoPatterns(org.eclipse.jgit.ignore.IgnoreNodeTest)')","[108292, 108598]"
"('FastIgnoreRule.java', 'org.eclipse.jgit.ignore.FastIgnoreRule', 'isMatch', 'a.', 'abc')","[83084, 83111, 83138, 83192, 83273, 83327, 83381, 83462, 83516, 83570, 83624, 83678, 83759, 83840, 83948, 84029, 84056, 84083, 84110, 84137, 84164, 84191, 84218, 84245, 84272, 84299, 84326, 84353]"
"('Description.java', 'org.junit.runner.Description', 'methodAndClassNamePatternGroupOrDefault', '([\\s\\S]*)\\((.*)\\)', 'testDirCacheAltersId(org.eclipse.jgit.util.ChangeIdUtilTest)')","[32371, 33141]"
"('Description.java', 'org.junit.runner.Description', 'methodAndClassNamePatternGroupOrDefault', '([\\s\\S]*)\\((.*)\\)', 'testFastIterator(org.eclipse.jgit.util.BlockListTest)')","[27659, 27921]"
"('URIish.java', 'org.eclipse.jgit.transport.URIish', '<init>', '^([a-z][a-z0-9+-]+)://(?:(?:([^/:@]+)(?::([^\\\\/]+))?@)?((?:[^\\\\/:]+)|(?:\\[[0-9a-f:]+\\]))(?::(\\d+))?((?:/~(?:[^\\\\/]+))?[\\\\/]))?(.+)?$', 'https://l usr\\example.com:wtf@example.com:80//abc')",[205017]
"('Description.java', 'org.junit.runner.Description', 'methodAndClassNamePatternGroupOrDefault', '([\\s\\S]*)\\((.*)\\)', 'testSameDiff(org.eclipse.jgit.diff.PatchIdDiffFormatterTest)')","[9458, 9501]"
"('URIish.java', 'org.eclipse.jgit.transport.URIish', '<init>', '^([a-z][a-z0-9+-]+)://(?:(?:([^/:@]+)(?::([^\\\\/]+))?@)?((?:[^\\\\/:]+)|(?:\\[[0-9a-f:]+\\]))(?::(\\d+))?((?:/~(?:[^\\\\/]+))?[\\\\/]))?(.+)?$', '/tmp/jgit_test_8705262332183795899_tmp/tmp_6035244968182702733')","[148826, 148956]"
"('FastIgnoreRule.java', 'org.eclipse.jgit.ignore.FastIgnoreRule', 'isMatch', '[\\.a\\.]', '.')",[101029]
"('URIish.java', 'org.eclipse.jgit.transport.URIish', '<init>', '^(file):([\\\\/](?![\\\\/])((?:[A-Za-z]:)?[\\\\/]?(?:(?:[^\\\\/]+[\\\\/]+)*[^\\\\/]+[\\\\/]*)))$', '/tmp/jgit_test_4436388230543018363_tmp/tmp_2933209461077420112.git')","[186030, 186283]"
"('URIish.java', 'org.eclipse.jgit.transport.URIish', '<init>', '^(file):([\\\\/](?![\\\\/])((?:[A-Za-z]:)?[\\\\/]?(?:(?:[^\\\\/]+[\\\\/]+)*[^\\\\/]+[\\\\/]*)))$', 'http://everyones.loves.git/u/2')","[255999, 258750, 258798, 258846, 258894, 258942, 259040, 259088]"
"('Description.java', 'org.junit.runner.Description', 'methodAndClassNamePatternGroupOrDefault', '([\\s\\S]*)\\((.*)\\)', 'addSubmodule(org.eclipse.jgit.submodule.SubmoduleAddTest)')","[17901, 18073]"
"('URIish.java', 'org.eclipse.jgit.transport.URIish', '<init>', '^(file):([\\\\/](?![\\\\/])((?:[A-Za-z]:)?[\\\\/]?(?:(?:[^\\\\/]+[\\\\/]+)*[^\\\\/]+[\\\\/]*)))$', 'ssh://l usr\\example.com:wtf@example.com:80//abc')",[193376]
"('Description.java', 'org.junit.runner.Description', 'methodAndClassNamePatternGroupOrDefault', '([\\s\\S]*)\\((.*)\\)', 'testDirectoryFileConflicts_15b(org.eclipse.jgit.lib.DirCacheCheckoutTest)')","[61104, 62087]"
"('Description.java', 'org.junit.runner.Description', 'methodAndClassNamePatternGroupOrDefault', '([\\s\\S]*)\\((.*)\\)', 'testInvalidTreeNameIsDotGitSpace(org.eclipse.jgit.lib.ObjectCheckerTest)')","[50222, 52792]"
"('Description.java', 'org.junit.runner.Description', 'methodAndClassNamePatternGroupOrDefault', '([\\s\\S]*)\\((.*)\\)', 'testNonDefaultRemotes(org.eclipse.jgit.gitrepo.RepoCommandTest)')","[2573, 3340]"
"('URIish.java', 'org.eclipse.jgit.transport.URIish', '<init>', '^([a-z][a-z0-9+-]+)://(?:(?:([^/:@]+)(?::([^\\\\/]+))?@)?((?:[^\\\\/:]+)|(?:\\[[0-9a-f:]+\\]))(?::(\\d+))?((?:/~(?:[^\\\\/]+))?[\\\\/]))?(.+)?$', 'ssh://l usr\\example.com:wtf@1.2.3.4:80//')",[193823]
"('Description.java', 'org.junit.runner.Description', 'methodAndClassNamePatternGroupOrDefault', '([\\s\\S]*)\\((.*)\\)', 'testMaliciousWindowsADS(org.eclipse.jgit.lib.DirCacheCheckoutMaliciousPathTest)')","[67075, 67987]"
"('URIish.java', 'org.eclipse.jgit.transport.URIish', '<init>', '^(?:([^/:@]+)(?::([^\\\\/]+))?@)?([^\\\\/:]{2,}):([\\\\/](?:(?:[^\\\\/]+[\\\\/]+)*[^\\\\/]+[\\\\/]*))$', '/a/b/c/')",[248878]
"('URIish.java', 'org.eclipse.jgit.transport.URIish', '<init>', '^(file):([\\\\/](?![\\\\/])((?:[A-Za-z]:)?[\\\\/]?(?:(?:[^\\\\/]+[\\\\/]+)*[^\\\\/]+[\\\\/]*)))$', 'ssh://example.com/D:/x')","[234135, 234319, 235239, 235423, 236343, 236527]"
"('Description.java', 'org.junit.runner.Description', 'methodAndClassNamePatternGroupOrDefault', '([\\s\\S]*)\\((.*)\\)', 'testStopOnLastConflictAndContinue(org.eclipse.jgit.api.RebaseCommandTest)')","[131348, 132832]"
"('Description.java', 'org.junit.runner.Description', 'methodAndClassNamePatternGroupOrDefault', '([\\s\\S]*)\\((.*)\\)', 'testStandardFormat_LargeObject_TrailingGarbage(org.eclipse.jgit.internal.storage.file.UnpackedObjectTest)')","[121727, 122051]"
"('URIish.java', 'org.eclipse.jgit.transport.URIish', '<init>', '^(file):([\\\\/](?![\\\\/])((?:[A-Za-z]:)?[\\\\/]?(?:(?:[^\\\\/]+[\\\\/]+)*[^\\\\/]+[\\\\/]*)))$', 'http://me@example.com//')","[227419, 227603]"
"('URIish.java', 'org.eclipse.jgit.transport.URIish', '<init>', '^(file):([\\\\/](?![\\\\/])((?:[A-Za-z]:)?[\\\\/]?(?:(?:[^\\\\/]+[\\\\/]+)*[^\\\\/]+[\\\\/]*)))$', 'file:///tmp/jgit_test_7662726567108576804_tmp/tmp_1579710296504973156.git/')",[7507]
"('Description.java', 'org.junit.runner.Description', 'methodAndClassNamePatternGroupOrDefault', '([\\s\\S]*)\\((.*)\\)', 'testMultipleMerges(org.eclipse.jgit.revplot.PlotCommitListTest)')","[169301, 169618]"
"('URIish.java', 'org.eclipse.jgit.transport.URIish', '<init>', '^(file):([\\\\/](?![\\\\/])((?:[A-Za-z]:)?[\\\\/]?(?:(?:[^\\\\/]+[\\\\/]+)*[^\\\\/]+[\\\\/]*)))$', 'http://l usr\\example.com:wtf@[::1]:80//')",[201582]
"('URIish.java', 'org.eclipse.jgit.transport.URIish', '<init>', '^(file):([\\\\/](?![\\\\/])((?:[A-Za-z]:)?[\\\\/]?(?:(?:[^\\\\/]+[\\\\/]+)*[^\\\\/]+[\\\\/]*)))$', 'http://me:wtf@example.com:80/D:/x')",[199834]
"('URIish.java', 'org.eclipse.jgit.transport.URIish', '<init>', '^(file):([\\\\/](?![\\\\/])((?:[A-Za-z]:)?[\\\\/]?(?:(?:[^\\\\/]+[\\\\/]+)*[^\\\\/]+[\\\\/]*)))$', 'http://me@1.2.3.4//abc')","[227833, 228017]"
"('AttributesRule.java', 'org.eclipse.jgit.attributes.AttributesRule', 'isMatch', '[tv]est\\.sta[a-d]', 'test.stae')","[74463, 75607]"
"('URIish.java', 'org.eclipse.jgit.transport.URIish', '<init>', '^(file):([\\\\/](?![\\\\/])((?:[A-Za-z]:)?[\\\\/]?(?:(?:[^\\\\/]+[\\\\/]+)*[^\\\\/]+[\\\\/]*)))$', 'https://l usr\\example.com@example.com:1234/D:/x')",[218127]
"('URIish.java', 'org.eclipse.jgit.transport.URIish', '<init>', '^(file):([\\\\/](?![\\\\/])((?:[A-Za-z]:)?[\\\\/]?(?:(?:[^\\\\/]+[\\\\/]+)*[^\\\\/]+[\\\\/]*)))$', 'http://lusr\\example@1.2.3.4:80/D:\\x')",[216494]
"('Description.java', 'org.junit.runner.Description', 'methodAndClassNamePatternGroupOrDefault', '([\\s\\S]*)\\((.*)\\)', 'testValidTreeSorting6(org.eclipse.jgit.lib.ObjectCheckerTest)')","[49130, 51648]"
"('URIish.java', 'org.eclipse.jgit.transport.URIish', '<init>', '^([a-z][a-z0-9+-]+)://(?:(?:([^/:@]+)(?::([^\\\\/]+))?@)?((?:[^\\\\/:]+)|(?:\\[[0-9a-f:]+\\]))(?::(\\d+))?((?:/~(?:[^\\\\/]+))?[\\\\/]))?(.+)?$', 'file:///tmp/jgit_test_908729481602052817_tmp/tmp_5018835069090381471')","[159782, 159994]"
"('Description.java', 'org.junit.runner.Description', 'methodAndClassNamePatternGroupOrDefault', '([\\s\\S]*)\\((.*)\\)', 'testAddExistingSingleBinaryFile(org.eclipse.jgit.api.AddCommandTest)')","[164747, 165184]"
"('URIish.java', 'org.eclipse.jgit.transport.URIish', '<init>', '^([a-z][a-z0-9+-]+)://(?:(?:([^/:@]+)(?::([^\\\\/]+))?@)?((?:[^\\\\/:]+)|(?:\\[[0-9a-f:]+\\]))(?::(\\d+))?((?:/~(?:[^\\\\/]+))?[\\\\/]))?(.+)?$', 'ssh://l usr\\example.com:wtf@[::1]:80//')",[194191]
"('Description.java', 'org.junit.runner.Description', 'methodAndClassNamePatternGroupOrDefault', '([\\s\\S]*)\\((.*)\\)', 'testFileNameWildcards(org.eclipse.jgit.attributes.AttributesMatcherTest)')","[73502, 73651]"
"('URIish.java', 'org.eclipse.jgit.transport.URIish', '<init>', '^(file):([\\\\/](?![\\\\/])((?:[A-Za-z]:)?[\\\\/]?(?:(?:[^\\\\/]+[\\\\/]+)*[^\\\\/]+[\\\\/]*)))$', 'ssh://lusr\\example@example.com:80//abc')",[209410]
"('Description.java', 'org.junit.runner.Description', 'methodAndClassNamePatternGroupOrDefault', '([\\s\\S]*)\\((.*)\\)', 'testInvalidTreeNameIsNotMacHFSGit2(org.eclipse.jgit.lib.ObjectCheckerTest)')","[49004, 51516]"
"('Description.java', 'org.junit.runner.Description', 'methodAndClassNamePatternGroupOrDefault', '([\\s\\S]*)\\((.*)\\)', 'testEntryPath(org.eclipse.jgit.treewalk.AbstractTreeIteratorTest)')","[266855, 267007]"
"('Description.java', 'org.junit.runner.Description', 'methodAndClassNamePatternGroupOrDefault', '([\\s\\S]*)\\((.*)\\)', 'testSet(org.eclipse.jgit.diff.EditListTest)')","[4035, 4141]"
"('Description.java', 'org.junit.runner.Description', 'methodAndClassNamePatternGroupOrDefault', '([\\s\\S]*)\\((.*)\\)', 'testBoundary(org.eclipse.jgit.util.io.AutoCRLFInputStreamTest)')","[25858, 25901]"
"('URIish.java', 'org.eclipse.jgit.transport.URIish', '<init>', '^([a-z][a-z0-9+-]+)://(?:(?:([^/:@]+)(?::([^\\\\/]+))?@)?((?:[^\\\\/:]+)|(?:\\[[0-9a-f:]+\\]))(?::(\\d+))?((?:/~(?:[^\\\\/]+))?[\\\\/]))?(.+)?$', 'https://lusr\\example@1.2.3.4//abc')","[233376, 233560]"
"('Description.java', 'org.junit.runner.Description', 'methodAndClassNamePatternGroupOrDefault', '([\\s\\S]*)\\((.*)\\)', 'testMergeBlockedBySelf(org.eclipse.jgit.revplot.PlotCommitListTest)')","[169280, 169596]"
"('Description.java', 'org.junit.runner.Description', 'methodAndClassNamePatternGroupOrDefault', '([\\s\\S]*)\\((.*)\\)', 'org.eclipse.jgit.internal.storage.file.AbbreviationTest')","[121307, 121502]"
"('Description.java', 'org.junit.runner.Description', 'methodAndClassNamePatternGroupOrDefault', '([\\s\\S]*)\\((.*)\\)', 'testResolvedSymRef(org.eclipse.jgit.lib.RefTest)')","[57743, 57935]"
"('URIish.java', 'org.eclipse.jgit.transport.URIish', '<init>', '^(file):([\\\\/](?![\\\\/])((?:[A-Za-z]:)?[\\\\/]?(?:(?:[^\\\\/]+[\\\\/]+)*[^\\\\/]+[\\\\/]*)))$', 'http://l usr\\example.com@1.2.3.4:80//abc')",[215298]
"('Description.java', 'org.junit.runner.Description', 'methodAndClassNamePatternGroupOrDefault', '([\\s\\S]*)\\((.*)\\)', 'testSpecialGroupCase0[OldRule? true](org.eclipse.jgit.ignore.IgnoreRuleSpecialCasesTest)')","[88318, 95402]"
"('URIish.java', 'org.eclipse.jgit.transport.URIish', '<init>', '^(?:([^/:@]+)(?::([^\\\\/]+))?@)?([^\\\\/:]{2,}):([\\\\/](?:(?:[^\\\\/]+[\\\\/]+)*[^\\\\/]+[\\\\/]*))$', '/tmp/jgit_test_2902873097385022246_tmp/tmp_6356966833193134406')","[160504, 160644]"
"('URIish.java', 'org.eclipse.jgit.transport.URIish', '<init>', '^([a-z][a-z0-9+-]+)://(?:(?:([^/:@]+)(?::([^\\\\/]+))?@)?((?:[^\\\\/:]+)|(?:\\[[0-9a-f:]+\\]))(?::(\\d+))?((?:/~(?:[^\\\\/]+))?[\\\\/]))?(.+)?$', 'ssh+git://lusr\\example@[::1]/D:\\x')","[227212, 227396]"
"('Description.java', 'org.junit.runner.Description', 'methodAndClassNamePatternGroupOrDefault', '([\\s\\S]*)\\((.*)\\)', 'testError_GarbageBetweenFiles(org.eclipse.jgit.patch.PatchErrorTest)')","[1107, 1303]"
"('URIish.java', 'org.eclipse.jgit.transport.URIish', 'getHumanishName', '^([\\\\/]?((?:[A-Za-z]:)?[\\\\/]?(?:(?:[^\\\\/]+[\\\\/]+)*[^\\\\/]+[\\\\/]*)))$', '/a/b/c.git')",[191225]
"('URIish.java', 'org.eclipse.jgit.transport.URIish', '<init>', '^(file):([\\\\/](?![\\\\/])((?:[A-Za-z]:)?[\\\\/]?(?:(?:[^\\\\/]+[\\\\/]+)*[^\\\\/]+[\\\\/]*)))$', '/tmp/jgit_test_5912311065364399188_tmp/tmp_6780050081060399522')","[151429, 151554, 151700, 151850]"
"('URIish.java', 'org.eclipse.jgit.transport.URIish', '<init>', '^(file):([\\\\/](?![\\\\/])((?:[A-Za-z]:)?[\\\\/]?(?:(?:[^\\\\/]+[\\\\/]+)*[^\\\\/]+[\\\\/]*)))$', 'file:/tmp/jgit_test_4045324050557360246_tmp/tmp_5930971390776294452/.git/')",[19300]
"('URIish.java', 'org.eclipse.jgit.transport.URIish', '<init>', '^([a-z][a-z0-9+-]+)://(?:(?:([^/:@]+)(?::([^\\\\/]+))?@)?((?:[^\\\\/:]+)|(?:\\[[0-9a-f:]+\\]))(?::(\\d+))?((?:/~(?:[^\\\\/]+))?[\\\\/]))?(.+)?$', 'ssh+git://lusr\\example:wtf@1.2.3.4:80//abc')",[199075]
"('URIish.java', 'org.eclipse.jgit.transport.URIish', '<init>', '^(file):([\\\\/](?![\\\\/])((?:[A-Za-z]:)?[\\\\/]?(?:(?:[^\\\\/]+[\\\\/]+)*[^\\\\/]+[\\\\/]*)))$', 'https://me:wtf@[::1]:1234/D:/x')",[204488]
"('URIish.java', 'org.eclipse.jgit.transport.URIish', '<init>', '^([a-z][a-z0-9+-]+)://(?:(?:([^/:@]+)(?::([^\\\\/]+))?@)?((?:[^\\\\/:]+)|(?:\\[[0-9a-f:]+\\]))(?::(\\d+))?((?:/~(?:[^\\\\/]+))?[\\\\/]))?(.+)?$', 'https://me@[::1]:1234//abc')",[217736]
"('Description.java', 'org.junit.runner.Description', 'methodAndClassNamePatternGroupOrDefault', '([\\s\\S]*)\\((.*)\\)', 'testGraphGroupCase1[OldRule? true](org.eclipse.jgit.ignore.IgnoreRuleSpecialCasesTest)')","[88962, 96046]"
"('Description.java', 'org.junit.runner.Description', 'methodAndClassNamePatternGroupOrDefault', '([\\s\\S]*)\\((.*)\\)', 'testCloneFIFO(org.eclipse.jgit.revwalk.DateRevQueueTest)')","[174969, 175119]"
"('Description.java', 'org.junit.runner.Description', 'methodAndClassNamePatternGroupOrDefault', '([\\s\\S]*)\\((.*)\\)', 'testCheckoutOurs(org.eclipse.jgit.api.PathCheckoutCommandTest)')","[123734, 124009]"
"('Description.java', 'org.junit.runner.Description', 'methodAndClassNamePatternGroupOrDefault', '([\\s\\S]*)\\((.*)\\)', 'testAddToEnd(org.eclipse.jgit.util.BlockListTest)')","[27638, 27899]"
"('URIish.java', 'org.eclipse.jgit.transport.URIish', '<init>', '^([a-z][a-z0-9+-]+)://(?:(?:([^/:@]+)(?::([^\\\\/]+))?@)?((?:[^\\\\/:]+)|(?:\\[[0-9a-f:]+\\]))(?::(\\d+))?((?:/~(?:[^\\\\/]+))?[\\\\/]))?(.+)?$', 'ssh+git://me@example.com//abc')","[224176, 224360]"
"('URIish.java', 'org.eclipse.jgit.transport.URIish', '<init>', '^([a-z][a-z0-9+-]+)://(?:(?:([^/:@]+)(?::([^\\\\/]+))?@)?((?:[^\\\\/:]+)|(?:\\[[0-9a-f:]+\\]))(?::(\\d+))?((?:/~(?:[^\\\\/]+))?[\\\\/]))?(.+)?$', 'file:///tmp/jgit_test_9003108192405825140_tmp/tmp_6355030264635806042/.git/')",[63098]
"('Description.java', 'org.junit.runner.Description', 'methodAndClassNamePatternGroupOrDefault', '([\\s\\S]*)\\((.*)\\)', 'testGetValidWithSlashDotGitSlashHumanishName(org.eclipse.jgit.transport.URIishTest)')","[188548, 189930]"
"('URIish.java', 'org.eclipse.jgit.transport.URIish', '<init>', '^(file):([\\\\/](?![\\\\/])((?:[A-Za-z]:)?[\\\\/]?(?:(?:[^\\\\/]+[\\\\/]+)*[^\\\\/]+[\\\\/]*)))$', 'http://lusr\\example:wtf@example.com:1234/D:\\x')",[201904]
"('Description.java', 'org.junit.runner.Description', 'methodAndClassNamePatternGroupOrDefault', '([\\s\\S]*)\\((.*)\\)', 'testPutReplaceEntry(org.eclipse.jgit.util.RefListTest)')","[19907, 20396]"
"('Description.java', 'org.junit.runner.Description', 'methodAndClassNamePatternGroupOrDefault', '([\\s\\S]*)\\((.*)\\)', 'testVerySimpleGroupRangeCase3[OldRule? true](org.eclipse.jgit.ignore.IgnoreRuleSpecialCasesTest)')","[90135, 97219]"
"('Description.java', 'org.junit.runner.Description', 'methodAndClassNamePatternGroupOrDefault', '([\\s\\S]*)\\((.*)\\)', 'testOnlyOption_f1_4_e(org.eclipse.jgit.api.CommitOnlyTest)')","[134836, 136877]"
"('URIish.java', 'org.eclipse.jgit.transport.URIish', '<init>', '^(file):([\\\\/](?![\\\\/])((?:[A-Za-z]:)?[\\\\/]?(?:(?:[^\\\\/]+[\\\\/]+)*[^\\\\/]+[\\\\/]*)))$', 'ssh+git://me:wtf@1.2.3.4:80//abc')",[196844]
"('Description.java', 'org.junit.runner.Description', 'methodAndClassNamePatternGroupOrDefault', '([\\s\\S]*)\\((.*)\\)', 'testError_BodyTooLong(org.eclipse.jgit.patch.PatchErrorTest)')","[1193, 1347]"
"('URIish.java', 'org.eclipse.jgit.transport.URIish', '<init>', '^([a-z][a-z0-9+-]+)://(?:(?:([^/:@]+)(?::([^\\\\/]+))?@)?((?:[^\\\\/:]+)|(?:\\[[0-9a-f:]+\\]))(?::(\\d+))?((?:/~(?:[^\\\\/]+))?[\\\\/]))?(.+)?$', '/abc.git')",[247659]
"('URIish.java', 'org.eclipse.jgit.transport.URIish', '<init>', '^([a-z][a-z0-9+-]+)://(?:(?:([^/:@]+)(?::([^\\\\/]+))?@)?((?:[^\\\\/:]+)|(?:\\[[0-9a-f:]+\\]))(?::(\\d+))?((?:/~(?:[^\\\\/]+))?[\\\\/]))?(.+)?$', 'http://lusr\\example:wtf@1.2.3.4:80/D:/x')",[202433]
"('Description.java', 'org.junit.runner.Description', 'methodAndClassNamePatternGroupOrDefault', '([\\s\\S]*)\\((.*)\\)', 'testOnlyOption_f1_1_e(org.eclipse.jgit.api.CommitOnlyTest)')","[134521, 136547]"
"('URIish.java', 'org.eclipse.jgit.transport.URIish', '<init>', '^(file):([\\\\/](?![\\\\/])((?:[A-Za-z]:)?[\\\\/]?(?:(?:[^\\\\/]+[\\\\/]+)*[^\\\\/]+[\\\\/]*)))$', 'file:///tmp/jgit_test_2768247327927037753_tmp/tmp_3196723450529294565/.git/')",[56948]
"('URIish.java', 'org.eclipse.jgit.transport.URIish', '<init>', '^(file):([\\\\/](?![\\\\/])((?:[A-Za-z]:)?[\\\\/]?(?:(?:[^\\\\/]+[\\\\/]+)*[^\\\\/]+[\\\\/]*)))$', 'http://me@example.com:80/D:\\x')",[213918]
"('URIish.java', 'org.eclipse.jgit.transport.URIish', '<init>', '^(file):([\\\\/](?![\\\\/])((?:[A-Za-z]:)?[\\\\/]?(?:(?:[^\\\\/]+[\\\\/]+)*[^\\\\/]+[\\\\/]*)))$', 'ssh://1.2.3.4/D:\\x')","[234549, 234733, 235653, 235837, 236757, 236941]"
"('Description.java', 'org.junit.runner.Description', 'methodAndClassNamePatternGroupOrDefault', '([\\s\\S]*)\\((.*)\\)', 'testMergeEmptyBranches(org.eclipse.jgit.api.CommitAndLogCommandTest)')","[155122, 155340]"
"('URIish.java', 'org.eclipse.jgit.transport.URIish', '<init>', '^([a-z][a-z0-9+-]+)://(?:(?:([^/:@]+)(?::([^\\\\/]+))?@)?((?:[^\\\\/:]+)|(?:\\[[0-9a-f:]+\\]))(?::(\\d+))?((?:/~(?:[^\\\\/]+))?[\\\\/]))?(.+)?$', 'ssh+git://l usr\\example.com@example.com:80//abc')",[211641]
"('Description.java', 'org.junit.runner.Description', 'methodAndClassNamePatternGroupOrDefault', '([\\s\\S]*)\\((.*)\\)', 'invalidWhenMoreThanOneWildcardInDestination(org.eclipse.jgit.transport.RefSpecTest)')","[186906, 187643]"
"('Description.java', 'org.junit.runner.Description', 'methodAndClassNamePatternGroupOrDefault', '([\\s\\S]*)\\((.*)\\)', 'testFuture(org.eclipse.jgit.util.RelativeDateFormatterTest)')","[31358, 31555]"
"('URIish.java', 'org.eclipse.jgit.transport.URIish', '<init>', '^([a-z][a-z0-9+-]+)://(?:(?:([^/:@]+)(?::([^\\\\/]+))?@)?((?:[^\\\\/:]+)|(?:\\[[0-9a-f:]+\\]))(?::(\\d+))?((?:/~(?:[^\\\\/]+))?[\\\\/]))?(.+)?$', 'ssh://l usr\\example.com@example.com:80/D:/x')",[208375]
"('Description.java', 'org.junit.runner.Description', 'methodAndClassNamePatternGroupOrDefault', '([\\s\\S]*)\\((.*)\\)', 'testDepth2(org.eclipse.jgit.revwalk.RevWalkShallowTest)')","[181604, 181735]"
"('Description.java', 'org.junit.runner.Description', 'methodAndClassNamePatternGroupOrDefault', '([\\s\\S]*)\\((.*)\\)', 'testEquals_Short(org.eclipse.jgit.lib.AbbreviatedObjectIdTest)')","[55525, 56069]"
"('Description.java', 'org.junit.runner.Description', 'methodAndClassNamePatternGroupOrDefault', '([\\s\\S]*)\\((.*)\\)', 'testMixedGroupCase1(org.eclipse.jgit.fnmatch.FileNameMatcherTest)')","[41734, 45008]"
"('Description.java', 'org.junit.runner.Description', 'methodAndClassNamePatternGroupOrDefault', '([\\s\\S]*)\\((.*)\\)', 'testReadString_LenHELO(org.eclipse.jgit.transport.PacketLineInTest)')","[184479, 185017]"
"('Description.java', 'org.junit.runner.Description', 'methodAndClassNamePatternGroupOrDefault', '([\\s\\S]*)\\((.*)\\)', 'testMergeConflictFileFolder(org.eclipse.jgit.api.MergeCommandTest)')","[126601, 127527]"
"('URIish.java', 'org.eclipse.jgit.transport.URIish', '<init>', '^(file):([\\\\/](?![\\\\/])((?:[A-Za-z]:)?[\\\\/]?(?:(?:[^\\\\/]+[\\\\/]+)*[^\\\\/]+[\\\\/]*)))$', 'ssh://l usr\\example.com:wtf@1.2.3.4:80//')",[193800]
"('Description.java', 'org.junit.runner.Description', 'methodAndClassNamePatternGroupOrDefault', '([\\s\\S]*)\\((.*)\\)', 'testStageState(org.eclipse.jgit.lib.IndexDiffTest)')","[68895, 69243]"
"('Description.java', 'org.junit.runner.Description', 'methodAndClassNamePatternGroupOrDefault', '([\\s\\S]*)\\((.*)\\)', 'testFailureOnSignedTags(org.eclipse.jgit.api.TagCommandTest)')","[157490, 157788]"
"('URIish.java', 'org.eclipse.jgit.transport.URIish', '<init>', '^(file):([\\\\/](?![\\\\/])((?:[A-Za-z]:)?[\\\\/]?(?:(?:[^\\\\/]+[\\\\/]+)*[^\\\\/]+[\\\\/]*)))$', 'http://l usr\\example.com:wtf@example.com:1234/D:/x')",[200754]
"('URIish.java', 'org.eclipse.jgit.transport.URIish', '<init>', '^(?:([^/:@]+)(?::([^\\\\/]+))?@)?([^\\\\/:]{2,}):([\\\\/](?:(?:[^\\\\/]+[\\\\/]+)*[^\\\\/]+[\\\\/]*))$', '../../foo/bar')","[250166, 250281]"
"('Description.java', 'org.junit.runner.Description', 'methodAndClassNamePatternGroupOrDefault', '([\\s\\S]*)\\((.*)\\)', 'testXDigitGroupCase3(org.eclipse.jgit.fnmatch.FileNameMatcherTest)')","[44002, 47384]"
"('FastIgnoreRule.java', 'org.eclipse.jgit.ignore.FastIgnoreRule', 'isMatch', '[\\.a\\.]', 'a')",[101003]
"('URIish.java', 'org.eclipse.jgit.transport.URIish', '<init>', '^([a-z][a-z0-9+-]+)://(?:(?:([^/:@]+)(?::([^\\\\/]+))?@)?((?:[^\\\\/:]+)|(?:\\[[0-9a-f:]+\\]))(?::(\\d+))?((?:/~(?:[^\\\\/]+))?[\\\\/]))?(.+)?$', 'ssh://DOMAIN\\user:pass@example.com:33/some/p ath')","[248441, 248487]"
"('Description.java', 'org.junit.runner.Description', 'methodAndClassNamePatternGroupOrDefault', '([\\s\\S]*)\\((.*)\\)', 'testBranchReflog(org.eclipse.jgit.api.ReflogCommandTest)')","[166811, 166876]"
"('Description.java', 'org.junit.runner.Description', 'methodAndClassNamePatternGroupOrDefault', '([\\s\\S]*)\\((.*)\\)', 'testMissingSubtree_DetectFileAdded_FileModified(org.eclipse.jgit.treewalk.TreeWalkBasicDiffTest)')","[267131, 267153]"
"('Description.java', 'org.junit.runner.Description', 'methodAndClassNamePatternGroupOrDefault', '([\\s\\S]*)\\((.*)\\)', 'testOnlyOption_f1_14_b(org.eclipse.jgit.api.CommitOnlyTest)')","[136138, 138241]"
"('Description.java', 'org.junit.runner.Description', 'methodAndClassNamePatternGroupOrDefault', '([\\s\\S]*)\\((.*)\\)', 'org.eclipse.jgit.util.RawParseUtils_ParsePersonIdentTest')","[38799, 38994]"
"('Description.java', 'org.junit.runner.Description', 'methodAndClassNamePatternGroupOrDefault', '([\\s\\S]*)\\((.*)\\)', 'testInvalidCommitNoCommitter1(org.eclipse.jgit.lib.ObjectCheckerTest)')","[49760, 52308]"
"('URIish.java', 'org.eclipse.jgit.transport.URIish', '<init>', '^(file):([\\\\/](?![\\\\/])((?:[A-Za-z]:)?[\\\\/]?(?:(?:[^\\\\/]+[\\\\/]+)*[^\\\\/]+[\\\\/]*)))$', 'git+ssh://example.com/some/p ath')","[250557, 250603]"
"('Description.java', 'org.junit.runner.Description', 'methodAndClassNamePatternGroupOrDefault', '([\\s\\S]*)\\((.*)\\)', 'testDequote_SoleDq(org.eclipse.jgit.util.QuotedStringGitPathStyleTest)')","[39870, 40297]"
"('URIish.java', 'org.eclipse.jgit.transport.URIish', '<init>', '^(file):([\\\\/](?![\\\\/])((?:[A-Za-z]:)?[\\\\/]?(?:(?:[^\\\\/]+[\\\\/]+)*[^\\\\/]+[\\\\/]*)))$', 'file:///tmp/jgit_test_3236687163374977183_tmp/tmp_6012638459483677170/testCloneRepositoryWithNestedSubmodules2/.git/')","[160732, 162090]"
"('Description.java', 'org.junit.runner.Description', 'methodAndClassNamePatternGroupOrDefault', '([\\s\\S]*)\\((.*)\\)', 'testWordGroupCase5[OldRule? true](org.eclipse.jgit.ignore.IgnoreRuleSpecialCasesTest)')","[91492, 98576]"
"('Description.java', 'org.junit.runner.Description', 'methodAndClassNamePatternGroupOrDefault', '([\\s\\S]*)\\((.*)\\)', 'testUpdateNonFastForward(org.eclipse.jgit.transport.PushProcessTest)')","[203547, 204101]"
"('Description.java', 'org.junit.runner.Description', 'methodAndClassNamePatternGroupOrDefault', '([\\s\\S]*)\\((.*)\\)', 'org.eclipse.jgit.submodule.SubmoduleUpdateTest')","[17495, 17781]"
"('URIish.java', 'org.eclipse.jgit.transport.URIish', '<init>', '^(file):([\\\\/](?![\\\\/])((?:[A-Za-z]:)?[\\\\/]?(?:(?:[^\\\\/]+[\\\\/]+)*[^\\\\/]+[\\\\/]*)))$', 'file:/tmp/jgit_test_1453594300143160598_tmp/tmp_2358754623373159383/.git/')",[14066]
"('Description.java', 'org.junit.runner.Description', 'methodAndClassNamePatternGroupOrDefault', '([\\s\\S]*)\\((.*)\\)', 'testGetRefs_IgnoresGarbageRef2(org.eclipse.jgit.internal.storage.file.RefDirectoryTest)')","[110572, 111735]"
"('Description.java', 'org.junit.runner.Description', 'methodAndClassNamePatternGroupOrDefault', '([\\s\\S]*)\\((.*)\\)', 'org.eclipse.jgit.transport.OpenSshConfigTest')","[195722, 202962]"
"('Description.java', 'org.junit.runner.Description', 'methodAndClassNamePatternGroupOrDefault', '([\\s\\S]*)\\((.*)\\)', 'testRemove(org.eclipse.jgit.util.RefMapTest)')","[21270, 21753]"
"('Description.java', 'org.junit.runner.Description', 'methodAndClassNamePatternGroupOrDefault', '([\\s\\S]*)\\((.*)\\)', 'testAddSameNoteDifferentContent(org.eclipse.jgit.notes.NoteMapMergerTest)')","[259443, 259807]"
"('URIish.java', 'org.eclipse.jgit.transport.URIish', '<init>', '^([a-z][a-z0-9+-]+)://(?:(?:([^/:@]+)(?::([^\\\\/]+))?@)?((?:[^\\\\/:]+)|(?:\\[[0-9a-f:]+\\]))(?::(\\d+))?((?:/~(?:[^\\\\/]+))?[\\\\/]))?(.+)?$', 'ssh://me@1.2.3.4:80/D:\\x')",[207685]
"('Description.java', 'org.junit.runner.Description', 'methodAndClassNamePatternGroupOrDefault', '([\\s\\S]*)\\((.*)\\)', 'test000_sort_05(org.eclipse.jgit.lib.T0002_TreeTest)')","[58675, 58980]"
"('URIish.java', 'org.eclipse.jgit.transport.URIish', '<init>', '^([a-z][a-z0-9+-]+)://(?:(?:([^/:@]+)(?::([^\\\\/]+))?@)?((?:[^\\\\/:]+)|(?:\\[[0-9a-f:]+\\]))(?::(\\d+))?((?:/~(?:[^\\\\/]+))?[\\\\/]))?(.+)?$', 'ssh://me@example.com:80//abc')",[207225]
"('FastIgnoreRule.java', 'org.eclipse.jgit.ignore.FastIgnoreRule', 'isMatch', 'a.*c', 'ab')",[100587]
"('Description.java', 'org.junit.runner.Description', 'methodAndClassNamePatternGroupOrDefault', '([\\s\\S]*)\\((.*)\\)', 'testPullWithUri(org.eclipse.jgit.merge.MergeMessageFormatterTest)')","[16119, 16438]"
"('URIish.java', 'org.eclipse.jgit.transport.URIish', '<init>', '^([\\\\/]?((?:[A-Za-z]:)?[\\\\/]?(?:(?:[^\\\\/]+[\\\\/]+)*[^\\\\/]+[\\\\/]*)))$', '/tmp/jgit_test_8538603759973152363_tmp/tmp_8885440780712787474')","[146900, 147045, 147269]"
"('Description.java', 'org.junit.runner.Description', 'methodAndClassNamePatternGroupOrDefault', '([\\s\\S]*)\\((.*)\\)', 'org.eclipse.jgit.api.BlameCommandTest')","[139610, 142277]"
"('URIish.java', 'org.eclipse.jgit.transport.URIish', '<init>', '^([a-z][a-z0-9+-]+)://(?:(?:([^/:@]+)(?::([^\\\\/]+))?@)?((?:[^\\\\/:]+)|(?:\\[[0-9a-f:]+\\]))(?::(\\d+))?((?:/~(?:[^\\\\/]+))?[\\\\/]))?(.+)?$', 'https://lusr\\example:wtf@[::1]:1234//abc')",[206673]
"('FastIgnoreRule.java', 'org.eclipse.jgit.ignore.FastIgnoreRule', 'isMatch', '[\\p{XDigit}]', '9')",[102149]
"('Description.java', 'org.junit.runner.Description', 'methodAndClassNamePatternGroupOrDefault', '([\\s\\S]*)\\((.*)\\)', 'org.eclipse.jgit.api.StashListCommandTest')","[165879, 166302]"
"('URIish.java', 'org.eclipse.jgit.transport.URIish', '<init>', '^(file):([\\\\/](?![\\\\/])((?:[A-Za-z]:)?[\\\\/]?(?:(?:[^\\\\/]+[\\\\/]+)*[^\\\\/]+[\\\\/]*)))$', 'file:///tmp/jgit_test_1848736545095559723_tmp/tmp_623829252570834949/.git/')",[17726]
"('Description.java', 'org.junit.runner.Description', 'methodAndClassNamePatternGroupOrDefault', '([\\s\\S]*)\\((.*)\\)', 'testOnlyOption_f1_7_f2_14_c(org.eclipse.jgit.api.CommitOnlyTest)')","[134374, 136393]"
"('Description.java', 'org.junit.runner.Description', 'methodAndClassNamePatternGroupOrDefault', '([\\s\\S]*)\\((.*)\\)', 'shouldWorkWithoutCommonAncestor(org.eclipse.jgit.revwalk.RevWalkUtilsCountTest)')","[174571, 174701]"
"('FastIgnoreRule.java', 'org.eclipse.jgit.ignore.FastIgnoreRule', 'isMatch', '.*\\.st.', 'another')","[104450, 104612, 105707, 105842]"
"('FastIgnoreRule.java', 'org.eclipse.jgit.ignore.FastIgnoreRule', 'isMatch', '[\\p{Lu}]', 'H')",[101809]
"('Description.java', 'org.junit.runner.Description', 'methodAndClassNamePatternGroupOrDefault', '([\\s\\S]*)\\((.*)\\)', 'testTimeout_writeByte_Timeout(org.eclipse.jgit.util.io.TimeoutOutputStreamTest)')","[24439, 24630]"
"('Description.java', 'org.junit.runner.Description', 'methodAndClassNamePatternGroupOrDefault', '([\\s\\S]*)\\((.*)\\)', 'testEmpty(org.eclipse.jgit.util.RawParseUtils_LineMapTest)')","[30749, 30855]"
"('URIish.java', 'org.eclipse.jgit.transport.URIish', '<init>', '^(file):([\\\\/](?![\\\\/])((?:[A-Za-z]:)?[\\\\/]?(?:(?:[^\\\\/]+[\\\\/]+)*[^\\\\/]+[\\\\/]*)))$', 'ssh://l usr\\example.com@1.2.3.4:1234//abc')",[208490]
"('Description.java', 'org.junit.runner.Description', 'methodAndClassNamePatternGroupOrDefault', '([\\s\\S]*)\\((.*)\\)', 'testCherryPickConflictResolution(org.eclipse.jgit.api.CherryPickCommandTest)')","[168236, 168492]"
"('FastIgnoreRule.java', 'org.eclipse.jgit.ignore.FastIgnoreRule', 'isMatch', 'a.*a.*a', 'ababa')",[101653]
"('Description.java', 'org.junit.runner.Description', 'methodAndClassNamePatternGroupOrDefault', '([\\s\\S]*)\\((.*)\\)', 'testPrefixCompare_1(org.eclipse.jgit.lib.AbbreviatedObjectIdTest)')","[55210, 55739]"
"('URIish.java', 'org.eclipse.jgit.transport.URIish', '<init>', '^([a-z][a-z0-9+-]+)://(?:(?:([^/:@]+)(?::([^\\\\/]+))?@)?((?:[^\\\\/:]+)|(?:\\[[0-9a-f:]+\\]))(?::(\\d+))?((?:/~(?:[^\\\\/]+))?[\\\\/]))?(.+)?$', 'http://lusr\\example:wtf@example.com:80//')",[201973]
"('Description.java', 'org.junit.runner.Description', 'methodAndClassNamePatternGroupOrDefault', '([\\s\\S]*)\\((.*)\\)', 'testParseUnicodeName_NewFile(org.eclipse.jgit.patch.FileHeaderTest)')","[639, 1413]"
"('Description.java', 'org.junit.runner.Description', 'methodAndClassNamePatternGroupOrDefault', '([\\s\\S]*)\\((.*)\\)', 'org.eclipse.jgit.diff.DiffFormatterReflowTest')","[7905, 8358]"
"('Description.java', 'org.junit.runner.Description', 'methodAndClassNamePatternGroupOrDefault', '([\\s\\S]*)\\((.*)\\)', 'testInsertOutOfOrder(org.eclipse.jgit.revwalk.DateRevQueueTest)')","[174927, 175075]"
"('URIish.java', 'org.eclipse.jgit.transport.URIish', '<init>', '^([a-z][a-z0-9+-]+)://(?:(?:([^/:@]+)(?::([^\\\\/]+))?@)?((?:[^\\\\/:]+)|(?:\\[[0-9a-f:]+\\]))(?::(\\d+))?((?:/~(?:[^\\\\/]+))?[\\\\/]))?(.+)?$', 'ssh://l usr\\example.com:wtf@[::1]:80/D:\\x')",[194329]
"('Description.java', 'org.junit.runner.Description', 'methodAndClassNamePatternGroupOrDefault', '([\\s\\S]*)\\((.*)\\)', 'org.eclipse.jgit.revwalk.RevWalkMergedIntoTest')","[174804, 175230]"
"('URIish.java', 'org.eclipse.jgit.transport.URIish', '<init>', '^([a-z][a-z0-9+-]+)://(?:(?:([^/:@]+)(?::([^\\\\/]+))?@)?((?:[^\\\\/:]+)|(?:\\[[0-9a-f:]+\\]))(?::(\\d+))?((?:/~(?:[^\\\\/]+))?[\\\\/]))?(.+)?$', 'file:///tmp/jgit_test_477294897805989668_tmp/tmp_8963832828128156712')","[165416, 165478, 165530, 165592]"
"('Description.java', 'org.junit.runner.Description', 'methodAndClassNamePatternGroupOrDefault', '([\\s\\S]*)\\((.*)\\)', 'testBreakModify_BreakNone(org.eclipse.jgit.diff.RenameDetectorTest)')","[4729, 5296]"
"('URIish.java', 'org.eclipse.jgit.transport.URIish', '<init>', '^([a-z][a-z0-9+-]+)://(?:(?:([^/:@]+)(?::([^\\\\/]+))?@)?((?:[^\\\\/:]+)|(?:\\[[0-9a-f:]+\\]))(?::(\\d+))?((?:/~(?:[^\\\\/]+))?[\\\\/]))?(.+)?$', 'http://me:wtf@[::1]:80/D:\\x')",[200639]
"('Description.java', 'org.junit.runner.Description', 'methodAndClassNamePatternGroupOrDefault', '([\\s\\S]*)\\((.*)\\)', 'testMixedGroupCase6[OldRule? false](org.eclipse.jgit.ignore.IgnoreRuleSpecialCasesTest)')","[85261, 92366]"
"('Description.java', 'org.junit.runner.Description', 'methodAndClassNamePatternGroupOrDefault', '([\\s\\S]*)\\((.*)\\)', 'testInitNonBare_GitdirAndDirShouldntBeSame(org.eclipse.jgit.api.InitCommandTest)')","[156609, 156800]"
"('URIish.java', 'org.eclipse.jgit.transport.URIish', '<init>', '^(file):([\\\\/](?![\\\\/])((?:[A-Za-z]:)?[\\\\/]?(?:(?:[^\\\\/]+[\\\\/]+)*[^\\\\/]+[\\\\/]*)))$', 'https://l usr\\example.com:wtf@example.com:80/D:\\x')",[205086]
"('Description.java', 'org.junit.runner.Description', 'methodAndClassNamePatternGroupOrDefault', '([\\s\\S]*)\\((.*)\\)', 'testQuoteParsing(org.eclipse.jgit.transport.OpenSshConfigTest)')","[195911, 196277]"
"('URIish.java', 'org.eclipse.jgit.transport.URIish', '<init>', '^([a-z][a-z0-9+-]+)://(?:(?:([^/:@]+)(?::([^\\\\/]+))?@)?((?:[^\\\\/:]+)|(?:\\[[0-9a-f:]+\\]))(?::(\\d+))?((?:/~(?:[^\\\\/]+))?[\\\\/]))?(.+)?$', 'file:///tmp/jgit_test_7011585186404647018_tmp/tmp_336296750021107928.git/')","[143760, 143816]"
"('URIish.java', 'org.eclipse.jgit.transport.URIish', '<init>', '^(file):([\\\\/](?![\\\\/])((?:[A-Za-z]:)?[\\\\/]?(?:(?:[^\\\\/]+[\\\\/]+)*[^\\\\/]+[\\\\/]*)))$', 'file:/tmp/jgit_test_1523009632444671625_tmp/tmp_1392089401907229157/.git/')",[58311]
"('Description.java', 'org.junit.runner.Description', 'methodAndClassNamePatternGroupOrDefault', '([\\s\\S]*)\\((.*)\\)', 'testReadString2(org.eclipse.jgit.transport.PacketLineInTest)')","[184668, 185215]"
"('ChangeIdUtil.java', 'org.eclipse.jgit.util.ChangeIdUtil', 'indexOfChangeId', '(^Change-Id: *I[a-f0-9]{40}$)', '\t Change-Id:  I3b7e4e16b503ce00f07ba6ad01d97a356dad7701')",[33637]
"('Description.java', 'org.junit.runner.Description', 'methodAndClassNamePatternGroupOrDefault', '([\\s\\S]*)\\((.*)\\)', 'testMixedGroupCase4[OldRule? false](org.eclipse.jgit.ignore.IgnoreRuleSpecialCasesTest)')","[85215, 92320]"
"('URIish.java', 'org.eclipse.jgit.transport.URIish', '<init>', '^([a-z][a-z0-9+-]+)://(?:(?:([^/:@]+)(?::([^\\\\/]+))?@)?((?:[^\\\\/:]+)|(?:\\[[0-9a-f:]+\\]))(?::(\\d+))?((?:/~(?:[^\\\\/]+))?[\\\\/]))?(.+)?$', 'https://l usr\\example.com@[::1]:80//')",[219530]
"('Description.java', 'org.junit.runner.Description', 'methodAndClassNamePatternGroupOrDefault', '([\\s\\S]*)\\((.*)\\)', 'testInversedGroupCase1[OldRule? false](org.eclipse.jgit.ignore.IgnoreRuleSpecialCasesTest)')","[85974, 93079]"
"('URIish.java', 'org.eclipse.jgit.transport.URIish', '<init>', '^(file):([\\\\/](?![\\\\/])((?:[A-Za-z]:)?[\\\\/]?(?:(?:[^\\\\/]+[\\\\/]+)*[^\\\\/]+[\\\\/]*)))$', 'ssh://me@[::1]:1234/D:/x')",[207800]
"('URIish.java', 'org.eclipse.jgit.transport.URIish', '<init>', '^([a-z][a-z0-9+-]+)://(?:(?:([^/:@]+)(?::([^\\\\/]+))?@)?((?:[^\\\\/:]+)|(?:\\[[0-9a-f:]+\\]))(?::(\\d+))?((?:/~(?:[^\\\\/]+))?[\\\\/]))?(.+)?$', 'file:///tmp/jgit_test_6994561984974601045_tmp/tmp_2388301606729275401/.git/')",[59152]
"('Description.java', 'org.junit.runner.Description', 'methodAndClassNamePatternGroupOrDefault', '([\\s\\S]*)\\((.*)\\)', 'testUnsupportedGroupCase01[OldRule? false](org.eclipse.jgit.ignore.IgnoreRuleSpecialCasesTest)')","[85928, 93033]"
"('URIish.java', 'org.eclipse.jgit.transport.URIish', '<init>', '^([a-z][a-z0-9+-]+)://(?:(?:([^/:@]+)(?::([^\\\\/]+))?@)?((?:[^\\\\/:]+)|(?:\\[[0-9a-f:]+\\]))(?::(\\d+))?((?:/~(?:[^\\\\/]+))?[\\\\/]))?(.+)?$', 'ssh+git://example.com/D:/x')","[237470, 237654, 238574, 238758, 239678, 239862]"
"('Description.java', 'org.junit.runner.Description', 'methodAndClassNamePatternGroupOrDefault', '([\\s\\S]*)\\((.*)\\)', 'testOnlyOption_f1_1_f2_14_d(org.eclipse.jgit.api.CommitOnlyTest)')","[136285, 138395]"
"('URIish.java', 'org.eclipse.jgit.transport.URIish', '<init>', '^([a-z][a-z0-9+-]+)://(?:(?:([^/:@]+)(?::([^\\\\/]+))?@)?((?:[^\\\\/:]+)|(?:\\[[0-9a-f:]+\\]))(?::(\\d+))?((?:/~(?:[^\\\\/]+))?[\\\\/]))?(.+)?$', 'http://lusr\\example@[::1]/D:/x')","[230478, 230662]"
"('URIish.java', 'org.eclipse.jgit.transport.URIish', '<init>', '^(file):([\\\\/](?![\\\\/])((?:[A-Za-z]:)?[\\\\/]?(?:(?:[^\\\\/]+[\\\\/]+)*[^\\\\/]+[\\\\/]*)))$', 'http://[::1]//')","[241403, 241587, 242507, 242691, 243611, 243795]"
"('Description.java', 'org.junit.runner.Description', 'methodAndClassNamePatternGroupOrDefault', '([\\s\\S]*)\\((.*)\\)', 'testPut_KeyMustMatchName_NoPrefix(org.eclipse.jgit.util.RefMapTest)')","[20913, 21379]"
"('URIish.java', 'org.eclipse.jgit.transport.URIish', '<init>', '^(file):([\\\\/](?![\\\\/])((?:[A-Za-z]:)?[\\\\/]?(?:(?:[^\\\\/]+[\\\\/]+)*[^\\\\/]+[\\\\/]*)))$', 'file:/tmp/jgit_test_4582028382631114631_tmp/tmp_6846814007920204467/.git/')",[57335]
"('URIish.java', 'org.eclipse.jgit.transport.URIish', '<init>', '^([a-z][a-z0-9+-]+)://(?:(?:([^/:@]+)(?::([^\\\\/]+))?@)?((?:[^\\\\/:]+)|(?:\\[[0-9a-f:]+\\]))(?::(\\d+))?((?:/~(?:[^\\\\/]+))?[\\\\/]))?(.+)?$', 'https://l usr\\example.com:wtf@example.com:1234//')",[204787]
"('Description.java', 'org.junit.runner.Description', 'methodAndClassNamePatternGroupOrDefault', '([\\s\\S]*)\\((.*)\\)', 'testTwoRangesInOneGroupCase2(org.eclipse.jgit.fnmatch.FileNameMatcherTest)')","[44338, 47736]"
"('URIish.java', 'org.eclipse.jgit.transport.URIish', '<init>', '^(file):([\\\\/](?![\\\\/])((?:[A-Za-z]:)?[\\\\/]?(?:(?:[^\\\\/]+[\\\\/]+)*[^\\\\/]+[\\\\/]*)))$', 'https://me:wtf@1.2.3.4:1234//abc')",[203722]
"('URIish.java', 'org.eclipse.jgit.transport.URIish', '<init>', '^(file):([\\\\/](?![\\\\/])((?:[A-Za-z]:)?[\\\\/]?(?:(?:[^\\\\/]+[\\\\/]+)*[^\\\\/]+[\\\\/]*)))$', 'http://me:wtf@[::1]:1234/D:/x')",[200386]
"('Description.java', 'org.junit.runner.Description', 'methodAndClassNamePatternGroupOrDefault', '([\\s\\S]*)\\((.*)\\)', 'testConstructor_RejectsBadChannel(org.eclipse.jgit.transport.SideBandOutputStreamTest)')","[251850, 252085]"
"('URIish.java', 'org.eclipse.jgit.transport.URIish', '<init>', '^([a-z][a-z0-9+-]+)://(?:(?:([^/:@]+)(?::([^\\\\/]+))?@)?((?:[^\\\\/:]+)|(?:\\[[0-9a-f:]+\\]))(?::(\\d+))?((?:/~(?:[^\\\\/]+))?[\\\\/]))?(.+)?$', 'ssh://l usr\\example.com@example.com:1234/D:/x')",[208191]
"('ChangeIdUtil.java', 'org.eclipse.jgit.util.ChangeIdUtil', 'indexOfFirstFooterLine', '(^[a-zA-Z0-9-]+:(?!//).*$)', 'Bug: 42')",[34737]
"('Description.java', 'org.junit.runner.Description', 'methodAndClassNamePatternGroupOrDefault', '([\\s\\S]*)\\((.*)\\)', 'testVerySimpleGroupRangeCase2(org.eclipse.jgit.fnmatch.FileNameMatcherTest)')","[43036, 46372]"
"('URIish.java', 'org.eclipse.jgit.transport.URIish', '<init>', '^(file):([\\\\/](?![\\\\/])((?:[A-Za-z]:)?[\\\\/]?(?:(?:[^\\\\/]+[\\\\/]+)*[^\\\\/]+[\\\\/]*)))$', 'https://l usr\\example.com@[::1]:80//abc')",[219553]
"('Description.java', 'org.junit.runner.Description', 'methodAndClassNamePatternGroupOrDefault', '([\\s\\S]*)\\((.*)\\)', 'testStringOfPearls_DirPath2(org.eclipse.jgit.revwalk.RevWalkPathFilter1Test)')","[175392, 175671]"
"('Description.java', 'org.junit.runner.Description', 'methodAndClassNamePatternGroupOrDefault', '([\\s\\S]*)\\((.*)\\)', 'testIterator_RefusesRemove(org.eclipse.jgit.util.RefMapTest)')","[21060, 21533]"
"('Description.java', 'org.junit.runner.Description', 'methodAndClassNamePatternGroupOrDefault', '([\\s\\S]*)\\((.*)\\)', 'org.eclipse.jgit.treewalk.filter.PathFilterGroupTest')","[266202, 266526]"
"('Description.java', 'org.junit.runner.Description', 'methodAndClassNamePatternGroupOrDefault', '([\\s\\S]*)\\((.*)\\)', 'testInvalidTreeModeNotSupportedMode1(org.eclipse.jgit.lib.ObjectCheckerTest)')","[48731, 51230]"
"('URIish.java', 'org.eclipse.jgit.transport.URIish', '<init>', '^(file):([\\\\/](?![\\\\/])((?:[A-Za-z]:)?[\\\\/]?(?:(?:[^\\\\/]+[\\\\/]+)*[^\\\\/]+[\\\\/]*)))$', 'ssh://me:wtf@example.com:80/D:\\x')",[192364]
"('Description.java', 'org.junit.runner.Description', 'methodAndClassNamePatternGroupOrDefault', '([\\s\\S]*)\\((.*)\\)', 'repositoryWithRootLevelSubmoduleAbsoluteRef(org.eclipse.jgit.submodule.SubmoduleWalkTest)')","[17175, 17370]"
"('URIish.java', 'org.eclipse.jgit.transport.URIish', '<init>', '^([a-z][a-z0-9+-]+)://(?:(?:([^/:@]+)(?::([^\\\\/]+))?@)?((?:[^\\\\/:]+)|(?:\\[[0-9a-f:]+\\]))(?::(\\d+))?((?:/~(?:[^\\\\/]+))?[\\\\/]))?(.+)?$', 'http://me:wtf@example.com:1234/D:/x')",[199673]
"('Description.java', 'org.junit.runner.Description', 'methodAndClassNamePatternGroupOrDefault', '([\\s\\S]*)\\((.*)\\)', 'testEquals(org.eclipse.jgit.revwalk.RevObjectTest)')","[178249, 178468]"
"('Description.java', 'org.junit.runner.Description', 'methodAndClassNamePatternGroupOrDefault', '([\\s\\S]*)\\((.*)\\)', 'testQuote_NamedEscapes(org.eclipse.jgit.util.QuotedStringBourneUserPathStyleTest)')","[29018, 29281]"
"('Description.java', 'org.junit.runner.Description', 'methodAndClassNamePatternGroupOrDefault', '([\\s\\S]*)\\((.*)\\)', 'testFileCommittedDeletedCommittedComparedWithInitialCommit(org.eclipse.jgit.treewalk.filter.IndexDiffFilterTest)')","[264485, 265299]"
"('Description.java', 'org.junit.runner.Description', 'methodAndClassNamePatternGroupOrDefault', '([\\s\\S]*)\\((.*)\\)', 'testComputeFileObjectId(org.eclipse.jgit.treewalk.FileTreeIteratorTest)')","[262019, 262358]"
"('Description.java', 'org.junit.runner.Description', 'methodAndClassNamePatternGroupOrDefault', '([\\s\\S]*)\\((.*)\\)', 'testAlias_PreferredAuthentications(org.eclipse.jgit.transport.OpenSshConfigTest)')","[196016, 196387]"
"('URIish.java', 'org.eclipse.jgit.transport.URIish', '<init>', '^([a-z][a-z0-9+-]+)://(?:(?:([^/:@]+)(?::([^\\\\/]+))?@)?((?:[^\\\\/:]+)|(?:\\[[0-9a-f:]+\\]))(?::(\\d+))?((?:/~(?:[^\\\\/]+))?[\\\\/]))?(.+)?$', 'https://lusr\\example@[::1]//abc')","[233744, 233928]"
"('URIish.java', 'org.eclipse.jgit.transport.URIish', '<init>', '^([a-z][a-z0-9+-]+)://(?:(?:([^/:@]+)(?::([^\\\\/]+))?@)?((?:[^\\\\/:]+)|(?:\\[[0-9a-f:]+\\]))(?::(\\d+))?((?:/~(?:[^\\\\/]+))?[\\\\/]))?(.+)?$', 'http://me@[::1]:80/D:\\x')",[214677]
"('Description.java', 'org.junit.runner.Description', 'methodAndClassNamePatternGroupOrDefault', '([\\s\\S]*)\\((.*)\\)', 'testAddExistingSingleFileTwiceWithCommit(org.eclipse.jgit.api.AddCommandTest)')","[164705, 165140]"
"('URIish.java', 'org.eclipse.jgit.transport.URIish', '<init>', '^([a-z][a-z0-9+-]+)://(?:(?:([^/:@]+)(?::([^\\\\/]+))?@)?((?:[^\\\\/:]+)|(?:\\[[0-9a-f:]+\\]))(?::(\\d+))?((?:/~(?:[^\\\\/]+))?[\\\\/]))?(.+)?$', 'file:///tmp/jgit_test_2505266252843607322_tmp/tmp_4768295878180271289/.git/')",[57197]
"('Description.java', 'org.junit.runner.Description', 'methodAndClassNamePatternGroupOrDefault', '([\\s\\S]*)\\((.*)\\)', 'testCloneIsDeepClone(org.eclipse.jgit.treewalk.filter.NotTreeFilterTest)')","[263600, 263728]"
"('Description.java', 'org.junit.runner.Description', 'methodAndClassNamePatternGroupOrDefault', '([\\s\\S]*)\\((.*)\\)', 'testParse_implicit_mixed_encoded(org.eclipse.jgit.revwalk.RevTagParseTest)')","[179520, 179922]"
"('URIish.java', 'org.eclipse.jgit.transport.URIish', '<init>', '^(file):([\\\\/](?![\\\\/])((?:[A-Za-z]:)?[\\\\/]?(?:(?:[^\\\\/]+[\\\\/]+)*[^\\\\/]+[\\\\/]*)))$', '/a/b/.git')",[252837]
"('Description.java', 'org.junit.runner.Description', 'methodAndClassNamePatternGroupOrDefault', '([\\s\\S]*)\\((.*)\\)', 'testStandardFormat_NegativeSize(org.eclipse.jgit.internal.storage.file.UnpackedObjectTest)')","[121664, 121985]"
"('URIish.java', 'org.eclipse.jgit.transport.URIish', '<init>', '^(file):([\\\\/](?![\\\\/])((?:[A-Za-z]:)?[\\\\/]?(?:(?:[^\\\\/]+[\\\\/]+)*[^\\\\/]+[\\\\/]*)))$', 'ssh://l usr\\example.com@example.com:80//abc')",[208306]
"('Description.java', 'org.junit.runner.Description', 'methodAndClassNamePatternGroupOrDefault', '([\\s\\S]*)\\((.*)\\)', 'shouldListAddedFileBetweenTwoCommits(org.eclipse.jgit.diff.DiffEntryTest)')","[10103, 10366]"
"('Description.java', 'org.junit.runner.Description', 'methodAndClassNamePatternGroupOrDefault', '([\\s\\S]*)\\((.*)\\)', 'testRemovedSubtree(org.eclipse.jgit.dircache.DirCacheIteratorTest)')","[170191, 170428]"
"('Description.java', 'org.junit.runner.Description', 'methodAndClassNamePatternGroupOrDefault', '([\\s\\S]*)\\((.*)\\)', 'testWordroupCase2(org.eclipse.jgit.fnmatch.FileNameMatcherTest)')","[44149, 47538]"
"('Description.java', 'org.junit.runner.Description', 'methodAndClassNamePatternGroupOrDefault', '([\\s\\S]*)\\((.*)\\)', 'workingDirectoryModifyInSubfolder(org.eclipse.jgit.api.StashCreateCommandTest)')","[155904, 156244]"
"('URIish.java', 'org.eclipse.jgit.transport.URIish', '<init>', '^([a-z][a-z0-9+-]+)://(?:(?:([^/:@]+)(?::([^\\\\/]+))?@)?((?:[^\\\\/:]+)|(?:\\[[0-9a-f:]+\\]))(?::(\\d+))?((?:/~(?:[^\\\\/]+))?[\\\\/]))?(.+)?$', 'https://lusr\\example:wtf@1.2.3.4:1234//')",[206259]
"('Description.java', 'org.junit.runner.Description', 'methodAndClassNamePatternGroupOrDefault', '([\\s\\S]*)\\((.*)\\)', 'org.eclipse.jgit.util.GitDateFormatterTest')","[25982, 26392]"
"('Description.java', 'org.junit.runner.Description', 'methodAndClassNamePatternGroupOrDefault', '([\\s\\S]*)\\((.*)\\)', 'testSuccessfulContentMergeNoCommit(org.eclipse.jgit.api.MergeCommandTest)')","[126370, 127285]"
"('URIish.java', 'org.eclipse.jgit.transport.URIish', '<init>', '^([a-z][a-z0-9+-]+)://(?:(?:([^/:@]+)(?::([^\\\\/]+))?@)?((?:[^\\\\/:]+)|(?:\\[[0-9a-f:]+\\]))(?::(\\d+))?((?:/~(?:[^\\\\/]+))?[\\\\/]))?(.+)?$', 'https://l usr\\example.com@1.2.3.4:1234/D:/x')",[219070]
"('URIish.java', 'org.eclipse.jgit.transport.URIish', '<init>', '^(?:([^/:@]+)(?::([^\\\\/]+))?@)?([^\\\\/:]{2,}):([\\\\/](?:(?:[^\\\\/]+[\\\\/]+)*[^\\\\/]+[\\\\/]*))$', '/tmp/jgit_test_1060628017969836137_tmp/tmp_884518266944927743.git')","[185746, 185927]"
"('Description.java', 'org.junit.runner.Description', 'methodAndClassNamePatternGroupOrDefault', '([\\s\\S]*)\\((.*)\\)', 'testPrintGroupCase0[OldRule? false](org.eclipse.jgit.ignore.IgnoreRuleSpecialCasesTest)')","[86986, 94091]"
"('URIish.java', 'org.eclipse.jgit.transport.URIish', '<init>', '^(file):([\\\\/](?![\\\\/])((?:[A-Za-z]:)?[\\\\/]?(?:(?:[^\\\\/]+[\\\\/]+)*[^\\\\/]+[\\\\/]*)))$', 'https://lusr\\example:wtf@[::1]:1234//abc')",[206650]
"('FastIgnoreRule.java', 'org.eclipse.jgit.ignore.FastIgnoreRule', 'isMatch', '.rc', 'new')",[106883]
"('URIish.java', 'org.eclipse.jgit.transport.URIish', '<init>', '^([a-z][a-z0-9+-]+)://(?:(?:([^/:@]+)(?::([^\\\\/]+))?@)?((?:[^\\\\/:]+)|(?:\\[[0-9a-f:]+\\]))(?::(\\d+))?((?:/~(?:[^\\\\/]+))?[\\\\/]))?(.+)?$', 'http://me:wtf@example.com:80//')",[199765]
"('Description.java', 'org.junit.runner.Description', 'methodAndClassNamePatternGroupOrDefault', '([\\s\\S]*)\\((.*)\\)', 'testFileProtoWindows(org.eclipse.jgit.transport.URIishTest)')","[189428, 190700]"
"('Description.java', 'org.junit.runner.Description', 'methodAndClassNamePatternGroupOrDefault', '([\\s\\S]*)\\((.*)\\)', 'testEmptyIfRootIsFile(org.eclipse.jgit.treewalk.FileTreeIteratorTest)')","[262250, 262600]"
"('Description.java', 'org.junit.runner.Description', 'methodAndClassNamePatternGroupOrDefault', '([\\s\\S]*)\\((.*)\\)', 'testDequote_FooTabBar(org.eclipse.jgit.util.QuotedStringGitPathStyleTest)')","[40080, 40517]"
"('URIish.java', 'org.eclipse.jgit.transport.URIish', '<init>', '^([a-z][a-z0-9+-]+)://(?:(?:([^/:@]+)(?::([^\\\\/]+))?@)?((?:[^\\\\/:]+)|(?:\\[[0-9a-f:]+\\]))(?::(\\d+))?((?:/~(?:[^\\\\/]+))?[\\\\/]))?(.+)?$', 'ssh+git://l usr\\example.com@example.com:80/D:\\x')",[211733]
"('Description.java', 'org.junit.runner.Description', 'methodAndClassNamePatternGroupOrDefault', '([\\s\\S]*)\\((.*)\\)', 'testDirModeAndRegex3[OldRule? true](org.eclipse.jgit.ignore.IgnoreMatcherParametrizedTest)')","[103855, 104315]"
"('URIish.java', 'org.eclipse.jgit.transport.URIish', '<init>', '^([a-z][a-z0-9+-]+)://(?:(?:([^/:@]+)(?::([^\\\\/]+))?@)?((?:[^\\\\/:]+)|(?:\\[[0-9a-f:]+\\]))(?::(\\d+))?((?:/~(?:[^\\\\/]+))?[\\\\/]))?(.+)?$', 'ssh://lusr\\example:wtf@example.com:80//abc')",[194605]
"('Description.java', 'org.junit.runner.Description', 'methodAndClassNamePatternGroupOrDefault', '([\\s\\S]*)\\((.*)\\)', 'testDequote_OctalAll(org.eclipse.jgit.util.QuotedStringGitPathStyleTest)')","[39744, 40165]"
"('URIish.java', 'org.eclipse.jgit.transport.URIish', '<init>', '^([a-z][a-z0-9+-]+)://(?:(?:([^/:@]+)(?::([^\\\\/]+))?@)?((?:[^\\\\/:]+)|(?:\\[[0-9a-f:]+\\]))(?::(\\d+))?((?:/~(?:[^\\\\/]+))?[\\\\/]))?(.+)?$', '/tmp/jgit_test_5935307310089394202_tmp/tmp_8096884284597820746')","[146145, 146275, 146422, 146631]"
"('Description.java', 'org.junit.runner.Description', 'methodAndClassNamePatternGroupOrDefault', '([\\s\\S]*)\\((.*)\\)', 'testConflictingMergeFailsDueToDirtyIndex(org.eclipse.jgit.api.MergeCommandTest)')","[126202, 127109]"
"('URIish.java', 'org.eclipse.jgit.transport.URIish', '<init>', '^([a-z][a-z0-9+-]+)://(?:(?:([^/:@]+)(?::([^\\\\/]+))?@)?((?:[^\\\\/:]+)|(?:\\[[0-9a-f:]+\\]))(?::(\\d+))?((?:/~(?:[^\\\\/]+))?[\\\\/]))?(.+)?$', 'ssh+git://1.2.3.4/D:/x')","[237838, 238022, 238942, 239126, 240046, 240230]"
"('Description.java', 'org.junit.runner.Description', 'methodAndClassNamePatternGroupOrDefault', '([\\s\\S]*)\\((.*)\\)', 'testReadStringRaw2(org.eclipse.jgit.transport.PacketLineInTest)')","[184248, 184775]"
"('Description.java', 'org.junit.runner.Description', 'methodAndClassNamePatternGroupOrDefault', '([\\s\\S]*)\\((.*)\\)', 'testCopyWholeObject_Length128(org.eclipse.jgit.internal.storage.pack.DeltaIndexTest)')","[108950, 109230]"
"('Description.java', 'org.junit.runner.Description', 'methodAndClassNamePatternGroupOrDefault', '([\\s\\S]*)\\((.*)\\)', 'testPackCommitsAndLooseOneWithPruneNow(org.eclipse.jgit.internal.storage.file.GcPruneNonReferencedTest)')","[119381, 119490]"
"('Description.java', 'org.junit.runner.Description', 'methodAndClassNamePatternGroupOrDefault', '([\\s\\S]*)\\((.*)\\)', 'testRebaseShouldTryToParseValidLineMarkedAsComment(org.eclipse.jgit.api.RebaseCommandTest)')","[132440, 133976]"
"('Description.java', 'org.junit.runner.Description', 'methodAndClassNamePatternGroupOrDefault', '([\\s\\S]*)\\((.*)\\)', 'testTwoLineNoLF(org.eclipse.jgit.util.RawParseUtils_LineMapTest)')","[30833, 30943]"
"('URIish.java', 'org.eclipse.jgit.transport.URIish', '<init>', '^(file):([\\\\/](?![\\\\/])((?:[A-Za-z]:)?[\\\\/]?(?:(?:[^\\\\/]+[\\\\/]+)*[^\\\\/]+[\\\\/]*)))$', 'http://lusr\\example:wtf@[::1]:1234/D:/x')",[202594]
"('URIish.java', 'org.eclipse.jgit.transport.URIish', '<init>', '^(file):([\\\\/](?![\\\\/])((?:[A-Za-z]:)?[\\\\/]?(?:(?:[^\\\\/]+[\\\\/]+)*[^\\\\/]+[\\\\/]*)))$', 'ssh+git://me@1.2.3.4:80/D:/x')",[210928]
"('URIish.java', 'org.eclipse.jgit.transport.URIish', '<init>', '^(file):([\\\\/](?![\\\\/])((?:[A-Za-z]:)?[\\\\/]?(?:(?:[^\\\\/]+[\\\\/]+)*[^\\\\/]+[\\\\/]*)))$', 'ssh+git://l usr\\example.com@1.2.3.4:80//')",[211940]
"('Description.java', 'org.junit.runner.Description', 'methodAndClassNamePatternGroupOrDefault', '([\\s\\S]*)\\((.*)\\)', 'testLarge_SingleWrite(org.eclipse.jgit.util.TemporaryBufferTest)')","[26554, 26854]"
"('Description.java', 'org.junit.runner.Description', 'methodAndClassNamePatternGroupOrDefault', '([\\s\\S]*)\\((.*)\\)', 'testAbbreviateLooseBlob(org.eclipse.jgit.internal.storage.file.AbbreviationTest)')","[121349, 121435]"
"('URIish.java', 'org.eclipse.jgit.transport.URIish', '<init>', '^(file):([\\\\/](?![\\\\/])((?:[A-Za-z]:)?[\\\\/]?(?:(?:[^\\\\/]+[\\\\/]+)*[^\\\\/]+[\\\\/]*)))$', 'ssh://lusr\\example@[::1]:1234//abc')",[209962]
"('URIish.java', 'org.eclipse.jgit.transport.URIish', '<init>', '^([a-z][a-z0-9+-]+)://(?:(?:([^/:@]+)(?::([^\\\\/]+))?@)?((?:[^\\\\/:]+)|(?:\\[[0-9a-f:]+\\]))(?::(\\d+))?((?:/~(?:[^\\\\/]+))?[\\\\/]))?(.+)?$', 'file:///tmp/jgit_test_5458912818544640927_tmp/tmp_828064902123961797/.git/')",[262820]
"('Description.java', 'org.junit.runner.Description', 'methodAndClassNamePatternGroupOrDefault', '([\\s\\S]*)\\((.*)\\)', 'org.eclipse.jgit.internal.storage.file.PackFileTest')","[122473, 122668]"
"('Description.java', 'org.junit.runner.Description', 'methodAndClassNamePatternGroupOrDefault', '([\\s\\S]*)\\((.*)\\)', 'testDeleteLooseAndItsDirectory(org.eclipse.jgit.internal.storage.file.RefUpdateTest)')","[119886, 120720]"
"('URIish.java', 'org.eclipse.jgit.transport.URIish', '<init>', '^(?:([^/:@]+)(?::([^\\\\/]+))?@)?([^\\\\/:]{2,}):([\\\\/](?:(?:[^\\\\/]+[\\\\/]+)*[^\\\\/]+[\\\\/]*))$', '/tmp/jgit_test_982072369712344218_tmp/tmp_4000253905304581205')","[152496, 152636, 152785]"
"('Description.java', 'org.junit.runner.Description', 'methodAndClassNamePatternGroupOrDefault', '([\\s\\S]*)\\((.*)\\)', 'dontPackHEAD_nonBare(org.eclipse.jgit.internal.storage.file.GcPackRefsTest)')","[122746, 122874]"
"('Description.java', 'org.junit.runner.Description', 'methodAndClassNamePatternGroupOrDefault', '([\\s\\S]*)\\((.*)\\)', 'testToLowerCaseChar(org.eclipse.jgit.util.StringUtilsTest)')","[27236, 27390]"
"('AttributesRule.java', 'org.eclipse.jgit.attributes.AttributesRule', 'isMatch', 'ne.', 'new')","[74689, 74743, 74797, 74851, 75833, 75887, 75941, 75995]"
"('Description.java', 'org.junit.runner.Description', 'methodAndClassNamePatternGroupOrDefault', '([\\s\\S]*)\\((.*)\\)', 'testAddAndRemoveNote(org.eclipse.jgit.api.NotesCommandTest)')","[128068, 128112]"
"('URIish.java', 'org.eclipse.jgit.transport.URIish', '<init>', '^([a-z][a-z0-9+-]+)://(?:(?:([^/:@]+)(?::([^\\\\/]+))?@)?((?:[^\\\\/:]+)|(?:\\[[0-9a-f:]+\\]))(?::(\\d+))?((?:/~(?:[^\\\\/]+))?[\\\\/]))?(.+)?$', 'https://lusr\\example:wtf@[::1]:1234//')",[206627]
"('URIish.java', 'org.eclipse.jgit.transport.URIish', '<init>', '^(file):([\\\\/](?![\\\\/])((?:[A-Za-z]:)?[\\\\/]?(?:(?:[^\\\\/]+[\\\\/]+)*[^\\\\/]+[\\\\/]*)))$', 'http://l usr\\example.com@1.2.3.4:1234//')",[215068]
"('Description.java', 'org.junit.runner.Description', 'methodAndClassNamePatternGroupOrDefault', '([\\s\\S]*)\\((.*)\\)', 'org.eclipse.jgit.util.RawParseUtilsTest')","[39535, 39687]"
"('Description.java', 'org.junit.runner.Description', 'methodAndClassNamePatternGroupOrDefault', '([\\s\\S]*)\\((.*)\\)', 'testNotEquals2(org.eclipse.jgit.diff.EditTest)')","[6073, 6421]"
"('URIish.java', 'org.eclipse.jgit.transport.URIish', '<init>', '^([a-z][a-z0-9+-]+)://(?:(?:([^/:@]+)(?::([^\\\\/]+))?@)?((?:[^\\\\/:]+)|(?:\\[[0-9a-f:]+\\]))(?::(\\d+))?((?:/~(?:[^\\\\/]+))?[\\\\/]))?(.+)?$', 'file:///tmp/jgit_test_583085024953481414_tmp/tmp_188172790691230482')","[139139, 139201, 139292]"
"('URIish.java', 'org.eclipse.jgit.transport.URIish', '<init>', '^(file):([\\\\/](?![\\\\/])((?:[A-Za-z]:)?[\\\\/]?(?:(?:[^\\\\/]+[\\\\/]+)*[^\\\\/]+[\\\\/]*)))$', 'ssh+git://l usr\\example.com@[::1]//')","[225947, 226131]"
"('Description.java', 'org.junit.runner.Description', 'methodAndClassNamePatternGroupOrDefault', '([\\s\\S]*)\\((.*)\\)', 'oneCommit(org.eclipse.jgit.revwalk.RevWalkUtilsReachableTest)')","[177107, 177216]"
"('Description.java', 'org.junit.runner.Description', 'methodAndClassNamePatternGroupOrDefault', '([\\s\\S]*)\\((.*)\\)', 'testDirtySubmoduleIndex(org.eclipse.jgit.lib.IndexDiffSubmoduleTest)')","[56386, 56539]"
"('Description.java', 'org.junit.runner.Description', 'methodAndClassNamePatternGroupOrDefault', '([\\s\\S]*)\\((.*)\\)', 'testXDigitGroupCase2(org.eclipse.jgit.fnmatch.FileNameMatcherTest)')","[43981, 47362]"
"('Description.java', 'org.junit.runner.Description', 'methodAndClassNamePatternGroupOrDefault', '([\\s\\S]*)\\((.*)\\)', 'testUpdateRefLockFailureWrongOldValue(org.eclipse.jgit.internal.storage.file.RefUpdateTest)')","[120033, 120874]"
"('URIish.java', 'org.eclipse.jgit.transport.URIish', '<init>', '^([a-z][a-z0-9+-]+)://(?:(?:([^/:@]+)(?::([^\\\\/]+))?@)?((?:[^\\\\/:]+)|(?:\\[[0-9a-f:]+\\]))(?::(\\d+))?((?:/~(?:[^\\\\/]+))?[\\\\/]))?(.+)?$', 'file:///tmp/jgit_test_5783626678477263478_tmp/tmp_7374908731213404106/.git/')",[63201]
"('Description.java', 'org.junit.runner.Description', 'methodAndClassNamePatternGroupOrDefault', '([\\s\\S]*)\\((.*)\\)', 'testGetValidHumanishName(org.eclipse.jgit.transport.URIishTest)')","[188401, 189776]"
"('URIish.java', 'org.eclipse.jgit.transport.URIish', '<init>', '^([a-z][a-z0-9+-]+)://(?:(?:([^/:@]+)(?::([^\\\\/]+))?@)?((?:[^\\\\/:]+)|(?:\\[[0-9a-f:]+\\]))(?::(\\d+))?((?:/~(?:[^\\\\/]+))?[\\\\/]))?(.+)?$', 'http://l usr\\example.com@[::1]/D:\\x')","[229420, 229604]"
"('Description.java', 'org.junit.runner.Description', 'methodAndClassNamePatternGroupOrDefault', '([\\s\\S]*)\\((.*)\\)', 'testBasic(org.eclipse.jgit.ignore.IgnoreMatcherTest)')","[102970, 103162]"
"('Description.java', 'org.junit.runner.Description', 'methodAndClassNamePatternGroupOrDefault', '([\\s\\S]*)\\((.*)\\)', 'testParseFullIndexLine_WithMode(org.eclipse.jgit.patch.FileHeaderTest)')","[387, 855]"
"('URIish.java', 'org.eclipse.jgit.transport.URIish', '<init>', '^(file):([\\\\/](?![\\\\/])((?:[A-Za-z]:)?[\\\\/]?(?:(?:[^\\\\/]+[\\\\/]+)*[^\\\\/]+[\\\\/]*)))$', 'ssh+git://l usr\\example.com@example.com:80//')",[211572]
"('AttributesRule.java', 'org.eclipse.jgit.attributes.AttributesRule', 'isMatch', '.*\\.sta[0-5]', 'test.sta3')","[74139, 75283]"
"('Description.java', 'org.junit.runner.Description', 'methodAndClassNamePatternGroupOrDefault', '([\\s\\S]*)\\((.*)\\)', 'testMaliciousPathDot(org.eclipse.jgit.lib.DirCacheCheckoutMaliciousPathTest)')","[66592, 67481]"
"('Description.java', 'org.junit.runner.Description', 'methodAndClassNamePatternGroupOrDefault', '([\\s\\S]*)\\((.*)\\)', 'fetchShouldNotFetchTagsFromOtherBranches(org.eclipse.jgit.api.FetchCommandTest)')","[124755, 124883]"
"('Description.java', 'org.junit.runner.Description', 'methodAndClassNamePatternGroupOrDefault', '([\\s\\S]*)\\((.*)\\)', 'testObjectInNewPack(org.eclipse.jgit.internal.storage.file.ConcurrentRepackTest)')","[122305, 122392]"
"('Description.java', 'org.junit.runner.Description', 'methodAndClassNamePatternGroupOrDefault', '([\\s\\S]*)\\((.*)\\)', 'testInvalidCommitNoTree2(org.eclipse.jgit.lib.ObjectCheckerTest)')","[50285, 52858]"
"('URIish.java', 'org.eclipse.jgit.transport.URIish', '<init>', '^([a-z][a-z0-9+-]+)://(?:(?:([^/:@]+)(?::([^\\\\/]+))?@)?((?:[^\\\\/:]+)|(?:\\[[0-9a-f:]+\\]))(?::(\\d+))?((?:/~(?:[^\\\\/]+))?[\\\\/]))?(.+)?$', 'ssh+git://l usr\\example.com:wtf@[::1]:80/D:/x')",[198385]
"('URIish.java', 'org.eclipse.jgit.transport.URIish', '<init>', '^(file):([\\\\/](?![\\\\/])((?:[A-Za-z]:)?[\\\\/]?(?:(?:[^\\\\/]+[\\\\/]+)*[^\\\\/]+[\\\\/]*)))$', 'ssh+git://lusr\\example@1.2.3.4//')","[226683, 226867]"
"('Description.java', 'org.junit.runner.Description', 'methodAndClassNamePatternGroupOrDefault', '([\\s\\S]*)\\((.*)\\)', 'testSpaceGroupCase0[OldRule? true](org.eclipse.jgit.ignore.IgnoreRuleSpecialCasesTest)')","[89606, 96690]"
"('URIish.java', 'org.eclipse.jgit.transport.URIish', '<init>', '^(file):([\\\\/](?![\\\\/])((?:[A-Za-z]:)?[\\\\/]?(?:(?:[^\\\\/]+[\\\\/]+)*[^\\\\/]+[\\\\/]*)))$', 'http://l usr\\example.com:wtf@example.com:80/D:/x')",[200938]
"('URIish.java', 'org.eclipse.jgit.transport.URIish', '<init>', '^(?:([^/:@]+)(?::([^\\\\/]+))?@)?((?:[^\\\\/:]+)|(?:\\[[0-9a-f:]+\\])):((?:(?:/~(?:[^\\\\/]+))[\\\\/])?(?:(?:[^\\\\/]+[\\\\/]+)*[^\\\\/]+[\\\\/]*))$', 'user@example.com:some/p ath')","[249683, 249752]"
"('URIish.java', 'org.eclipse.jgit.transport.URIish', '<init>', '^([a-z][a-z0-9+-]+)://(?:(?:([^/:@]+)(?::([^\\\\/]+))?@)?((?:[^\\\\/:]+)|(?:\\[[0-9a-f:]+\\]))(?::(\\d+))?((?:/~(?:[^\\\\/]+))?[\\\\/]))?(.+)?$', 'ssh://me@[::1]//')","[221554, 221738]"
"('Description.java', 'org.junit.runner.Description', 'methodAndClassNamePatternGroupOrDefault', '([\\s\\S]*)\\((.*)\\)', 'testTwoRangesInOneGroupCase1(org.eclipse.jgit.fnmatch.FileNameMatcherTest)')","[44317, 47714]"
"('Description.java', 'org.junit.runner.Description', 'methodAndClassNamePatternGroupOrDefault', '([\\s\\S]*)\\((.*)\\)', 'testModify(org.eclipse.jgit.lib.IndexModificationTimesTest)')","[71937, 72025]"
"('Description.java', 'org.junit.runner.Description', 'methodAndClassNamePatternGroupOrDefault', '([\\s\\S]*)\\((.*)\\)', 'testSpecialGroupCase0[OldRule? false](org.eclipse.jgit.ignore.IgnoreRuleSpecialCasesTest)')","[84755, 91860]"
"('URIish.java', 'org.eclipse.jgit.transport.URIish', '<init>', '^([a-z][a-z0-9+-]+)://(?:(?:([^/:@]+)(?::([^\\\\/]+))?@)?((?:[^\\\\/:]+)|(?:\\[[0-9a-f:]+\\]))(?::(\\d+))?((?:/~(?:[^\\\\/]+))?[\\\\/]))?(.+)?$', 'file:///tmp/jgit_test_9215790154376357519_tmp/tmp_4920629738042412768/.git/')",[13570]
"('Description.java', 'org.junit.runner.Description', 'methodAndClassNamePatternGroupOrDefault', '([\\s\\S]*)\\((.*)\\)', 'testModifyE(org.eclipse.jgit.api.ApplyCommandTest)')","[163777, 164015]"
"('Description.java', 'org.junit.runner.Description', 'methodAndClassNamePatternGroupOrDefault', '([\\s\\S]*)\\((.*)\\)', 'testWordGroupCase2[OldRule? false](org.eclipse.jgit.ignore.IgnoreRuleSpecialCasesTest)')","[87860, 94965]"
"('Description.java', 'org.junit.runner.Description', 'methodAndClassNamePatternGroupOrDefault', '([\\s\\S]*)\\((.*)\\)', 'testSignedOffBy_OneUserWithLF(org.eclipse.jgit.revwalk.FooterLineTest)')","[173444, 173844]"
"('Description.java', 'org.junit.runner.Description', 'methodAndClassNamePatternGroupOrDefault', '([\\s\\S]*)\\((.*)\\)', 'testCheckoutHierarchy(org.eclipse.jgit.lib.DirCacheCheckoutTest)')","[61209, 62197]"
"('ChangeIdUtil.java', 'org.eclipse.jgit.util.ChangeIdUtil', 'indexOfChangeId', '(^Change-Id: *I[a-f0-9]{40}$)', 'Bug: 42')",[34659]
"('URIish.java', 'org.eclipse.jgit.transport.URIish', '<init>', '^([a-z][a-z0-9+-]+)://(?:(?:([^/:@]+)(?::([^\\\\/]+))?@)?((?:[^\\\\/:]+)|(?:\\[[0-9a-f:]+\\]))(?::(\\d+))?((?:/~(?:[^\\\\/]+))?[\\\\/]))?(.+)?$', 'ssh+git://lusr\\example@1.2.3.4:1234//abc')",[212929]
"('Description.java', 'org.junit.runner.Description', 'methodAndClassNamePatternGroupOrDefault', '([\\s\\S]*)\\((.*)\\)', 'testNonNotesWithoutNonNoteConflict(org.eclipse.jgit.notes.NoteMapMergerTest)')","[259464, 259829]"
"('ChangeIdUtil.java', 'org.eclipse.jgit.util.ChangeIdUtil', 'indexOfChangeId', '(^Change-Id: *I[a-f0-9]{40}$)', 'a two lines')",[34011]
"('URIish.java', 'org.eclipse.jgit.transport.URIish', '<init>', '^(file):([\\\\/](?![\\\\/])((?:[A-Za-z]:)?[\\\\/]?(?:(?:[^\\\\/]+[\\\\/]+)*[^\\\\/]+[\\\\/]*)))$', 'https://me:wtf@1.2.3.4:1234/D:/x')",[203856]
"('Description.java', 'org.junit.runner.Description', 'methodAndClassNamePatternGroupOrDefault', '([\\s\\S]*)\\((.*)\\)', 'test004_PutGetSimple(org.eclipse.jgit.lib.ConfigTest)')","[69894, 70632]"
"('Description.java', 'org.junit.runner.Description', 'methodAndClassNamePatternGroupOrDefault', '([\\s\\S]*)\\((.*)\\)', 'testCreateOrphanBranchWithStartPoint(org.eclipse.jgit.api.CheckoutCommandTest)')","[149640, 150185]"
"('Description.java', 'org.junit.runner.Description', 'methodAndClassNamePatternGroupOrDefault', '([\\s\\S]*)\\((.*)\\)', 'testEncodeMatchesDecode(org.eclipse.jgit.util.Base64Test)')","[22912, 23000]"
"('Description.java', 'org.junit.runner.Description', 'methodAndClassNamePatternGroupOrDefault', '([\\s\\S]*)\\((.*)\\)', 'testCombinedRangesInOneGroupCase0[OldRule? false](org.eclipse.jgit.ignore.IgnoreRuleSpecialCasesTest)')","[85054, 92159]"
"('URIish.java', 'org.eclipse.jgit.transport.URIish', '<init>', '^(file):([\\\\/](?![\\\\/])((?:[A-Za-z]:)?[\\\\/]?(?:(?:[^\\\\/]+[\\\\/]+)*[^\\\\/]+[\\\\/]*)))$', 'ssh://l usr\\example.com@[::1]:1234//abc')",[208858]
"('Description.java', 'org.junit.runner.Description', 'methodAndClassNamePatternGroupOrDefault', '([\\s\\S]*)\\((.*)\\)', 'testVerySimpleWildCardCase3[OldRule? false](org.eclipse.jgit.ignore.IgnoreRuleSpecialCasesTest)')","[85031, 92136]"
"('URIish.java', 'org.eclipse.jgit.transport.URIish', '<init>', '^(file):([\\\\/](?![\\\\/])((?:[A-Za-z]:)?[\\\\/]?(?:(?:[^\\\\/]+[\\\\/]+)*[^\\\\/]+[\\\\/]*)))$', 'file:/tmp/jgit_test_3236687163374977183_tmp/tmp_1757677135814889258/.git/')",[161446]
"('Description.java', 'org.junit.runner.Description', 'methodAndClassNamePatternGroupOrDefault', '([\\s\\S]*)\\((.*)\\)', 'testAddIfAbsent(org.eclipse.jgit.lib.ObjectIdOwnerMapTest)')","[59465, 59614]"
"('URIish.java', 'org.eclipse.jgit.transport.URIish', '<init>', '^(file):([\\\\/](?![\\\\/])((?:[A-Za-z]:)?[\\\\/]?(?:(?:[^\\\\/]+[\\\\/]+)*[^\\\\/]+[\\\\/]*)))$', 'file:///tmp/jgit_test_5471313499283770628_tmp/tmp_5967200836362785173/.git/')",[125058]
"('Description.java', 'org.junit.runner.Description', 'methodAndClassNamePatternGroupOrDefault', '([\\s\\S]*)\\((.*)\\)', 'testRenameLocalBranch(org.eclipse.jgit.api.BranchCommandTest)')","[128758, 129081]"
"('Description.java', 'org.junit.runner.Description', 'methodAndClassNamePatternGroupOrDefault', '([\\s\\S]*)\\((.*)\\)', 'test007_Open(org.eclipse.jgit.internal.storage.file.T0003_BasicTest)')","[116609, 117147]"
"('Description.java', 'org.junit.runner.Description', 'methodAndClassNamePatternGroupOrDefault', '([\\s\\S]*)\\((.*)\\)', 'testFormatSeconds(org.eclipse.jgit.util.RelativeDateFormatterTest)')","[31337, 31533]"
"('Description.java', 'org.junit.runner.Description', 'methodAndClassNamePatternGroupOrDefault', '([\\s\\S]*)\\((.*)\\)', 'org.eclipse.jgit.lib.RepositoryResolveTest')","[71099, 72500]"
"('Description.java', 'org.junit.runner.Description', 'methodAndClassNamePatternGroupOrDefault', '([\\s\\S]*)\\((.*)\\)', 'test022_createCommitTag(org.eclipse.jgit.internal.storage.file.T0003_BasicTest)')","[116693, 117235]"
"('Description.java', 'org.junit.runner.Description', 'methodAndClassNamePatternGroupOrDefault', '([\\s\\S]*)\\((.*)\\)', 'testFileInFolderCommittedDeletedCommittedIgnoredComparedWithInitialCommit(org.eclipse.jgit.treewalk.filter.IndexDiffFilterTest)')","[264527, 265343]"
"('URIish.java', 'org.eclipse.jgit.transport.URIish', '<init>', '^(file):([\\\\/](?![\\\\/])((?:[A-Za-z]:)?[\\\\/]?(?:(?:[^\\\\/]+[\\\\/]+)*[^\\\\/]+[\\\\/]*)))$', 'ssh+git://me@example.com:1234//abc')",[210330]
"('Description.java', 'org.junit.runner.Description', 'methodAndClassNamePatternGroupOrDefault', '([\\s\\S]*)\\((.*)\\)', 'testSimple1(org.eclipse.jgit.revwalk.RevWalkPathFilter1Test)')","[175518, 175803]"
"('Description.java', 'org.junit.runner.Description', 'methodAndClassNamePatternGroupOrDefault', '([\\s\\S]*)\\((.*)\\)', 'resolveNonExistingBranch(org.eclipse.jgit.lib.ReflogResolveTest)')","[64322, 64452]"
"('Description.java', 'org.junit.runner.Description', 'methodAndClassNamePatternGroupOrDefault', '([\\s\\S]*)\\((.*)\\)', 'testUnsupportedRequiredExtension(org.eclipse.jgit.dircache.DirCacheCGitCompatabilityTest)')","[172960, 173109]"
"('Description.java', 'org.junit.runner.Description', 'methodAndClassNamePatternGroupOrDefault', '([\\s\\S]*)\\((.*)\\)', 'testInexactRename_SameContentMultipleTimes(org.eclipse.jgit.diff.RenameDetectorTest)')","[4582, 5142]"
"('Description.java', 'org.junit.runner.Description', 'methodAndClassNamePatternGroupOrDefault', '([\\s\\S]*)\\((.*)\\)', 'shortWithDotsReverse(org.eclipse.jgit.util.GitDateParserTest)')","[22065, 22349]"
"('Description.java', 'org.junit.runner.Description', 'methodAndClassNamePatternGroupOrDefault', '([\\s\\S]*)\\((.*)\\)', 'testCheckoutWithStartPointOnlyCertainFiles(org.eclipse.jgit.api.CheckoutCommandTest)')","[149493, 150031]"
"('Description.java', 'org.junit.runner.Description', 'methodAndClassNamePatternGroupOrDefault', '([\\s\\S]*)\\((.*)\\)', 'testWildmatch[OldRule? true](org.eclipse.jgit.ignore.FastIgnoreRuleTest)')","[77447, 78183]"
"('Description.java', 'org.junit.runner.Description', 'methodAndClassNamePatternGroupOrDefault', '([\\s\\S]*)\\((.*)\\)', 'testFillTo100(org.eclipse.jgit.util.IntListTest)')","[28234, 28475]"
"('Description.java', 'org.junit.runner.Description', 'methodAndClassNamePatternGroupOrDefault', '([\\s\\S]*)\\((.*)\\)', 'testPackWithTrailingGarbage(org.eclipse.jgit.transport.PackParserTest)')","[218402, 218661]"
"('URIish.java', 'org.eclipse.jgit.transport.URIish', '<init>', '^(file):([\\\\/](?![\\\\/])((?:[A-Za-z]:)?[\\\\/]?(?:(?:[^\\\\/]+[\\\\/]+)*[^\\\\/]+[\\\\/]*)))$', 'ssh://me:wtf@[::1]:1234/D:/x')",[192870]
"('Description.java', 'org.junit.runner.Description', 'methodAndClassNamePatternGroupOrDefault', '([\\s\\S]*)\\((.*)\\)', 'testAddToMiddleOfListByInsertionPosition(org.eclipse.jgit.util.RefListTest)')","[19991, 20484]"
"('Description.java', 'org.junit.runner.Description', 'methodAndClassNamePatternGroupOrDefault', '([\\s\\S]*)\\((.*)\\)', 'testPullConfigRenameLocalBranch(org.eclipse.jgit.api.BranchCommandTest)')","[128884, 129213]"
"('Description.java', 'org.junit.runner.Description', 'methodAndClassNamePatternGroupOrDefault', '([\\s\\S]*)\\((.*)\\)', 'repositoryWithInitializedSubmodule(org.eclipse.jgit.submodule.SubmoduleStatusTest)')","[18781, 18932]"
"('Description.java', 'org.junit.runner.Description', 'methodAndClassNamePatternGroupOrDefault', '([\\s\\S]*)\\((.*)\\)', 'testParse_ShortLineOnlyNoLF(org.eclipse.jgit.revwalk.RevTagParseTest)')","[179667, 180076]"
"('URIish.java', 'org.eclipse.jgit.transport.URIish', '<init>', '^(file):([\\\\/](?![\\\\/])((?:[A-Za-z]:)?[\\\\/]?(?:(?:[^\\\\/]+[\\\\/]+)*[^\\\\/]+[\\\\/]*)))$', 'ssh://l usr\\example.com@[::1]:1234/D:\\x')",[208950]
"('Description.java', 'org.junit.runner.Description', 'methodAndClassNamePatternGroupOrDefault', '([\\s\\S]*)\\((.*)\\)', 'test2SideBranches(org.eclipse.jgit.revplot.PlotCommitListTest)')","[169490, 169816]"
"('URIish.java', 'org.eclipse.jgit.transport.URIish', '<init>', '^([a-z][a-z0-9+-]+)://(?:(?:([^/:@]+)(?::([^\\\\/]+))?@)?((?:[^\\\\/:]+)|(?:\\[[0-9a-f:]+\\]))(?::(\\d+))?((?:/~(?:[^\\\\/]+))?[\\\\/]))?(.+)?$', 'ssh+git://me@1.2.3.4:80//abc')",[210905]
"('URIish.java', 'org.eclipse.jgit.transport.URIish', '<init>', '^(file):([\\\\/](?![\\\\/])((?:[A-Za-z]:)?[\\\\/]?(?:(?:[^\\\\/]+[\\\\/]+)*[^\\\\/]+[\\\\/]*)))$', 'file:/tmp/jgit_test_7290935297598507122_tmp/tmp_6439669014203965208/.git/')",[262670]
"('Description.java', 'org.junit.runner.Description', 'methodAndClassNamePatternGroupOrDefault', '([\\s\\S]*)\\((.*)\\)', 'test002_ReadWithSubsection(org.eclipse.jgit.lib.ConfigTest)')","[69789, 70522]"
"('URIish.java', 'org.eclipse.jgit.transport.URIish', '<init>', '^(file):([\\\\/](?![\\\\/])((?:[A-Za-z]:)?[\\\\/]?(?:(?:[^\\\\/]+[\\\\/]+)*[^\\\\/]+[\\\\/]*)))$', 'http://me@[::1]:80//')",[214516]
"('URIish.java', 'org.eclipse.jgit.transport.URIish', '<init>', '^([a-z][a-z0-9+-]+)://(?:(?:([^/:@]+)(?::([^\\\\/]+))?@)?((?:[^\\\\/:]+)|(?:\\[[0-9a-f:]+\\]))(?::(\\d+))?((?:/~(?:[^\\\\/]+))?[\\\\/]))?(.+)?$', 'file:///tmp/jgit_test_6269317750974915610_tmp/tmp_1064218016998638921')",[139346]
"('URIish.java', 'org.eclipse.jgit.transport.URIish', '<init>', '^(file):([\\\\/](?![\\\\/])((?:[A-Za-z]:)?[\\\\/]?(?:(?:[^\\\\/]+[\\\\/]+)*[^\\\\/]+[\\\\/]*)))$', 'ssh://me:wtf@1.2.3.4:1234//abc')",[192456]
"('Description.java', 'org.junit.runner.Description', 'methodAndClassNamePatternGroupOrDefault', '([\\s\\S]*)\\((.*)\\)', 'testReadString_End(org.eclipse.jgit.transport.PacketLineInTest)')","[184311, 184841]"
"('URIish.java', 'org.eclipse.jgit.transport.URIish', '<init>', '^([a-z][a-z0-9+-]+)://(?:(?:([^/:@]+)(?::([^\\\\/]+))?@)?((?:[^\\\\/:]+)|(?:\\[[0-9a-f:]+\\]))(?::(\\d+))?((?:/~(?:[^\\\\/]+))?[\\\\/]))?(.+)?$', 'ssh+git://lusr\\example@1.2.3.4:80/D:\\x')",[213205]
"('URIish.java', 'org.eclipse.jgit.transport.URIish', '<init>', '^(file):([\\\\/](?![\\\\/])((?:[A-Za-z]:)?[\\\\/]?(?:(?:[^\\\\/]+[\\\\/]+)*[^\\\\/]+[\\\\/]*)))$', 'https://l usr\\example.com:wtf@[::1]:1234//')",[205500]
"('Description.java', 'org.junit.runner.Description', 'methodAndClassNamePatternGroupOrDefault', '([\\s\\S]*)\\((.*)\\)', 'testRefLogQueryIsValidRef(org.eclipse.jgit.lib.ValidRefNameTest)')","[65697, 66056]"
"('URIish.java', 'org.eclipse.jgit.transport.URIish', '<init>', '^(file):([\\\\/](?![\\\\/])((?:[A-Za-z]:)?[\\\\/]?(?:(?:[^\\\\/]+[\\\\/]+)*[^\\\\/]+[\\\\/]*)))$', 'file:///tmp/jgit_test_583085024953481414_tmp/tmp_188172790691230482')","[139113, 139170, 139262]"
"('Description.java', 'org.junit.runner.Description', 'methodAndClassNamePatternGroupOrDefault', '([\\s\\S]*)\\((.*)\\)', 'testBlankGroupCase4(org.eclipse.jgit.fnmatch.FileNameMatcherTest)')","[43855, 47230]"
"('AttributesRule.java', 'org.eclipse.jgit.attributes.AttributesRule', 'isMatch', '.*\\.sta[0-5]', 'anothertest.sta2')","[74247, 75391]"
"('Description.java', 'org.junit.runner.Description', 'methodAndClassNamePatternGroupOrDefault', '([\\s\\S]*)\\((.*)\\)', 'shouldReturnZeroOnSameCommit(org.eclipse.jgit.revwalk.RevWalkUtilsCountTest)')","[174613, 174745]"
"('URIish.java', 'org.eclipse.jgit.transport.URIish', '<init>', '^([a-z][a-z0-9+-]+)://(?:(?:([^/:@]+)(?::([^\\\\/]+))?@)?((?:[^\\\\/:]+)|(?:\\[[0-9a-f:]+\\]))(?::(\\d+))?((?:/~(?:[^\\\\/]+))?[\\\\/]))?(.+)?$', 'ssh+git://l usr\\example.com@[::1]//')","[225970, 226154]"
"('URIish.java', 'org.eclipse.jgit.transport.URIish', '<init>', '^([a-z][a-z0-9+-]+)://(?:(?:([^/:@]+)(?::([^\\\\/]+))?@)?((?:[^\\\\/:]+)|(?:\\[[0-9a-f:]+\\]))(?::(\\d+))?((?:/~(?:[^\\\\/]+))?[\\\\/]))?(.+)?$', 'https://l usr\\example.com@[::1]:1234/D:\\x')",[219484]
"('Description.java', 'org.junit.runner.Description', 'methodAndClassNamePatternGroupOrDefault', '([\\s\\S]*)\\((.*)\\)', 'testParseFullIndexLine_NoMode(org.eclipse.jgit.patch.FileHeaderTest)')","[513, 1065]"
"('Description.java', 'org.junit.runner.Description', 'methodAndClassNamePatternGroupOrDefault', '([\\s\\S]*)\\((.*)\\)', 'testDisallowTreeFilter(org.eclipse.jgit.revwalk.RevWalkMergeBaseTest)')","[177827, 177957]"
"('Description.java', 'org.junit.runner.Description', 'methodAndClassNamePatternGroupOrDefault', '([\\s\\S]*)\\((.*)\\)', 'shortWithSlash(org.eclipse.jgit.util.GitDateParserTest)')","[22086, 22371]"
"('URIish.java', 'org.eclipse.jgit.transport.URIish', '<init>', '^(file):([\\\\/](?![\\\\/])((?:[A-Za-z]:)?[\\\\/]?(?:(?:[^\\\\/]+[\\\\/]+)*[^\\\\/]+[\\\\/]*)))$', 'http://lusr\\example:wtf@1.2.3.4:1234//abc')",[202180]
"('URIish.java', 'org.eclipse.jgit.transport.URIish', '<init>', '^(file):([\\\\/](?![\\\\/])((?:[A-Za-z]:)?[\\\\/]?(?:(?:[^\\\\/]+[\\\\/]+)*[^\\\\/]+[\\\\/]*)))$', 'git://abc')",[247337]
"('URIish.java', 'org.eclipse.jgit.transport.URIish', '<init>', '^(file):([\\\\/](?![\\\\/])((?:[A-Za-z]:)?[\\\\/]?(?:(?:[^\\\\/]+[\\\\/]+)*[^\\\\/]+[\\\\/]*)))$', 'https://l usr\\example.com:wtf@[::1]:80//')",[205684]
"('Description.java', 'org.junit.runner.Description', 'methodAndClassNamePatternGroupOrDefault', '([\\s\\S]*)\\((.*)\\)', 'testAlphaGroupCase1[OldRule? true](org.eclipse.jgit.ignore.IgnoreRuleSpecialCasesTest)')","[89445, 96529]"
"('Description.java', 'org.junit.runner.Description', 'methodAndClassNamePatternGroupOrDefault', '([\\s\\S]*)\\((.*)\\)', 'yesterday(org.eclipse.jgit.util.GitDateParserTest)')","[21876, 22151]"
"('URIish.java', 'org.eclipse.jgit.transport.URIish', '<init>', '^([a-z][a-z0-9+-]+)://(?:(?:([^/:@]+)(?::([^\\\\/]+))?@)?((?:[^\\\\/:]+)|(?:\\[[0-9a-f:]+\\]))(?::(\\d+))?((?:/~(?:[^\\\\/]+))?[\\\\/]))?(.+)?$', 'http://l usr\\example.com:wtf@example.com:80/D:/x')",[200961]
"('Description.java', 'org.junit.runner.Description', 'methodAndClassNamePatternGroupOrDefault', '([\\s\\S]*)\\((.*)\\)', 'testSpecialGroupCase2[OldRule? false](org.eclipse.jgit.ignore.IgnoreRuleSpecialCasesTest)')","[84801, 91906]"
"('URIish.java', 'org.eclipse.jgit.transport.URIish', '<init>', '^(file):([\\\\/](?![\\\\/])((?:[A-Za-z]:)?[\\\\/]?(?:(?:[^\\\\/]+[\\\\/]+)*[^\\\\/]+[\\\\/]*)))$', 'ssh://lusr\\example:wtf@[::1]:80/D:\\x')",[195410]
"('Description.java', 'org.junit.runner.Description', 'methodAndClassNamePatternGroupOrDefault', '([\\s\\S]*)\\((.*)\\)', 'testClear(org.eclipse.jgit.revwalk.FIFORevQueueTest)')","[176177, 176308]"
"('URIish.java', 'org.eclipse.jgit.transport.URIish', '<init>', '^(file):([\\\\/](?![\\\\/])((?:[A-Za-z]:)?[\\\\/]?(?:(?:[^\\\\/]+[\\\\/]+)*[^\\\\/]+[\\\\/]*)))$', 'https://me@example.com:80/D:/x')",[217184]
"('Description.java', 'org.junit.runner.Description', 'methodAndClassNamePatternGroupOrDefault', '([\\s\\S]*)\\((.*)\\)', 'testSuccessfulMergeFailsDueToDirtyIndex(org.eclipse.jgit.api.MergeCommandTest)')","[126727, 127659]"
"('Description.java', 'org.junit.runner.Description', 'methodAndClassNamePatternGroupOrDefault', '([\\s\\S]*)\\((.*)\\)', 'testEdit_CommonReplaceCommonDeleteCommon(org.eclipse.jgit.diff.MyersDiffTest)')","[8938, 9378]"
"('Description.java', 'org.junit.runner.Description', 'methodAndClassNamePatternGroupOrDefault', '([\\s\\S]*)\\((.*)\\)', 'testOnlyOption_f1_7_c(org.eclipse.jgit.api.CommitOnlyTest)')","[135109, 137163]"
"('Description.java', 'org.junit.runner.Description', 'methodAndClassNamePatternGroupOrDefault', '([\\s\\S]*)\\((.*)\\)', 'untrackedFileIncluded(org.eclipse.jgit.api.StashApplyCommandTest)')","[142876, 143445]"
"('Description.java', 'org.junit.runner.Description', 'methodAndClassNamePatternGroupOrDefault', '([\\s\\S]*)\\((.*)\\)', 'testFlush(org.eclipse.jgit.transport.SideBandOutputStreamTest)')","[251808, 252041]"
"('URIish.java', 'org.eclipse.jgit.transport.URIish', '<init>', '^([a-z][a-z0-9+-]+)://(?:(?:([^/:@]+)(?::([^\\\\/]+))?@)?((?:[^\\\\/:]+)|(?:\\[[0-9a-f:]+\\]))(?::(\\d+))?((?:/~(?:[^\\\\/]+))?[\\\\/]))?(.+)?$', 'ssh://lusr\\example@example.com/D:/x')","[223118, 223302]"
"('URIish.java', 'org.eclipse.jgit.transport.URIish', '<init>', '^([a-z][a-z0-9+-]+)://(?:(?:([^/:@]+)(?::([^\\\\/]+))?@)?((?:[^\\\\/:]+)|(?:\\[[0-9a-f:]+\\]))(?::(\\d+))?((?:/~(?:[^\\\\/]+))?[\\\\/]))?(.+)?$', 'ssh+git://l usr\\example.com@[::1]:1234/D:/x')",[212239]
"('URIish.java', 'org.eclipse.jgit.transport.URIish', '<init>', '^([a-z][a-z0-9+-]+)://(?:(?:([^/:@]+)(?::([^\\\\/]+))?@)?((?:[^\\\\/:]+)|(?:\\[[0-9a-f:]+\\]))(?::(\\d+))?((?:/~(?:[^\\\\/]+))?[\\\\/]))?(.+)?$', 'file:///tmp/jgit_test_3922997925567642347_tmp/tmp_5044209954024475555/.git/')",[57621]
"('Description.java', 'org.junit.runner.Description', 'methodAndClassNamePatternGroupOrDefault', '([\\s\\S]*)\\((.*)\\)', 'testCloneEmpty(org.eclipse.jgit.revwalk.DateRevQueueTest)')","[175011, 175163]"
"('Description.java', 'org.junit.runner.Description', 'methodAndClassNamePatternGroupOrDefault', '([\\s\\S]*)\\((.*)\\)', 'archiveByDirectoryPath(org.eclipse.jgit.api.ArchiveCommandTest)')","[158192, 158278]"
"('URIish.java', 'org.eclipse.jgit.transport.URIish', '<init>', '^([a-z][a-z0-9+-]+)://(?:(?:([^/:@]+)(?::([^\\\\/]+))?@)?((?:[^\\\\/:]+)|(?:\\[[0-9a-f:]+\\]))(?::(\\d+))?((?:/~(?:[^\\\\/]+))?[\\\\/]))?(.+)?$', 'https://lusr\\example:wtf@1.2.3.4:80//abc')",[206489]
"('Description.java', 'org.junit.runner.Description', 'methodAndClassNamePatternGroupOrDefault', '([\\s\\S]*)\\((.*)\\)', 'testOneCommitOneTreeTwoBlob(org.eclipse.jgit.revwalk.ObjectWalkTest)')","[177339, 177530]"
"('URIish.java', 'org.eclipse.jgit.transport.URIish', '<init>', '^(file):([\\\\/](?![\\\\/])((?:[A-Za-z]:)?[\\\\/]?(?:(?:[^\\\\/]+[\\\\/]+)*[^\\\\/]+[\\\\/]*)))$', 'ssh://[::1]//')","[234779, 234963, 235883, 236067, 236987, 237171]"
"('URIish.java', 'org.eclipse.jgit.transport.URIish', '<init>', '^(file):([\\\\/](?![\\\\/])((?:[A-Za-z]:)?[\\\\/]?(?:(?:[^\\\\/]+[\\\\/]+)*[^\\\\/]+[\\\\/]*)))$', 'ssh://me@[::1]/D:\\x')","[221669, 221853]"
"('Description.java', 'org.junit.runner.Description', 'methodAndClassNamePatternGroupOrDefault', '([\\s\\S]*)\\((.*)\\)', 'testTwoCommitTwoTreeTwoBlob(org.eclipse.jgit.revwalk.ObjectWalkTest)')","[177444, 177640]"
"('URIish.java', 'org.eclipse.jgit.transport.URIish', '<init>', '^(?:([^/:@]+)(?::([^\\\\/]+))?@)?((?:[^\\\\/:]+)|(?:\\[[0-9a-f:]+\\])):((?:(?:/~(?:[^\\\\/]+))[\\\\/])?(?:(?:[^\\\\/]+[\\\\/]+)*[^\\\\/]+[\\\\/]*))$', '/tmp/jgit_test_72803735483777762_tmp/tmp_5952370543069622143/.git')","[129313, 129455]"
"('Description.java', 'org.junit.runner.Description', 'methodAndClassNamePatternGroupOrDefault', '([\\s\\S]*)\\((.*)\\)', 'testGetValidGitSchemeWithTwoSlashesHumanishName(org.eclipse.jgit.transport.URIishTest)')","[189094, 190502]"
"('URIish.java', 'org.eclipse.jgit.transport.URIish', '<init>', '^(file):([\\\\/](?![\\\\/])((?:[A-Za-z]:)?[\\\\/]?(?:(?:[^\\\\/]+[\\\\/]+)*[^\\\\/]+[\\\\/]*)))$', 'ssh://l usr\\example.com:wtf@[::1]:1234//abc')",[194030]
"('Description.java', 'org.junit.runner.Description', 'methodAndClassNamePatternGroupOrDefault', '([\\s\\S]*)\\((.*)\\)', 'testValidTree3(org.eclipse.jgit.lib.ObjectCheckerTest)')","[48815, 51318]"
"('Description.java', 'org.junit.runner.Description', 'methodAndClassNamePatternGroupOrDefault', '([\\s\\S]*)\\((.*)\\)', 'testAbbreviateIsActuallyUnique(org.eclipse.jgit.internal.storage.file.AbbreviationTest)')","[121370, 121457]"
"('URIish.java', 'org.eclipse.jgit.transport.URIish', '<init>', '^([a-z][a-z0-9+-]+)://(?:(?:([^/:@]+)(?::([^\\\\/]+))?@)?((?:[^\\\\/:]+)|(?:\\[[0-9a-f:]+\\]))(?::(\\d+))?((?:/~(?:[^\\\\/]+))?[\\\\/]))?(.+)?$', 'ssh://me:wtf@1.2.3.4:1234/D:/x')",[192525]
"('Description.java', 'org.junit.runner.Description', 'methodAndClassNamePatternGroupOrDefault', '([\\s\\S]*)\\((.*)\\)', 'testIterator_MissingUnresolvedSymbolicRefIsBug(org.eclipse.jgit.util.RefMapTest)')","[20976, 21445]"
"('Description.java', 'org.junit.runner.Description', 'methodAndClassNamePatternGroupOrDefault', '([\\s\\S]*)\\((.*)\\)', 'testRebaseParentOntoHeadShouldBeUptoDate(org.eclipse.jgit.api.RebaseCommandTest)')","[132335, 133866]"
"('URIish.java', 'org.eclipse.jgit.transport.URIish', '<init>', '^([a-z][a-z0-9+-]+)://(?:(?:([^/:@]+)(?::([^\\\\/]+))?@)?((?:[^\\\\/:]+)|(?:\\[[0-9a-f:]+\\]))(?::(\\d+))?((?:/~(?:[^\\\\/]+))?[\\\\/]))?(.+)?$', 'https://me@example.com:80//abc')",[217161]
"('Description.java', 'org.junit.runner.Description', 'methodAndClassNamePatternGroupOrDefault', '([\\s\\S]*)\\((.*)\\)', 'org.eclipse.jgit.internal.storage.file.GcTagTest')","[110259, 110368]"
"('Description.java', 'org.junit.runner.Description', 'methodAndClassNamePatternGroupOrDefault', '([\\s\\S]*)\\((.*)\\)', 'testACommitWithSubjectBug_NonFooterLineAndSob(org.eclipse.jgit.util.ChangeIdUtilTest)')","[32245, 33009]"
"('URIish.java', 'org.eclipse.jgit.transport.URIish', '<init>', '^(file):([\\\\/](?![\\\\/])((?:[A-Za-z]:)?[\\\\/]?(?:(?:[^\\\\/]+[\\\\/]+)*[^\\\\/]+[\\\\/]*)))$', 'http://lusr\\example:wtf@1.2.3.4:1234/D:\\x')",[202272]
"('Description.java', 'org.junit.runner.Description', 'methodAndClassNamePatternGroupOrDefault', '([\\s\\S]*)\\((.*)\\)', 'testFilter_NOT_NONE(org.eclipse.jgit.revwalk.RevWalkFilterTest)')","[180542, 180858]"
"('URIish.java', 'org.eclipse.jgit.transport.URIish', '<init>', '^([a-z][a-z0-9+-]+)://(?:(?:([^/:@]+)(?::([^\\\\/]+))?@)?((?:[^\\\\/:]+)|(?:\\[[0-9a-f:]+\\]))(?::(\\d+))?((?:/~(?:[^\\\\/]+))?[\\\\/]))?(.+)?$', 'ssh://me:wtf@1.2.3.4:1234/D:\\x')",[192571]
"('URIish.java', 'org.eclipse.jgit.transport.URIish', '<init>', '^(file):([\\\\/](?![\\\\/])((?:[A-Za-z]:)?[\\\\/]?(?:(?:[^\\\\/]+[\\\\/]+)*[^\\\\/]+[\\\\/]*)))$', 'http://me@example.com//abc')","[227465, 227649]"
"('Description.java', 'org.junit.runner.Description', 'methodAndClassNamePatternGroupOrDefault', '([\\s\\S]*)\\((.*)\\)', 'testCheckoutWithStartPoint(org.eclipse.jgit.api.CheckoutCommandTest)')","[149325, 149855]"
"('Description.java', 'org.junit.runner.Description', 'methodAndClassNamePatternGroupOrDefault', '([\\s\\S]*)\\((.*)\\)', 'org.eclipse.jgit.api.ReflogCommandTest')","[166769, 167089]"
"('Description.java', 'org.junit.runner.Description', 'methodAndClassNamePatternGroupOrDefault', '([\\s\\S]*)\\((.*)\\)', 'org.eclipse.jgit.patch.PatchCcErrorTest')","[201, 767]"
"('URIish.java', 'org.eclipse.jgit.transport.URIish', '<init>', '^(file):([\\\\/](?![\\\\/])((?:[A-Za-z]:)?[\\\\/]?(?:(?:[^\\\\/]+[\\\\/]+)*[^\\\\/]+[\\\\/]*)))$', 'https://me:wtf@example.com:80//')",[203077]
"('URIish.java', 'org.eclipse.jgit.transport.URIish', '<init>', '^(file):([\\\\/](?![\\\\/])((?:[A-Za-z]:)?[\\\\/]?(?:(?:[^\\\\/]+[\\\\/]+)*[^\\\\/]+[\\\\/]*)))$', 'file:///tmp/jgit_test_7657625701278535970_tmp/tmp_1171187948670924664/.git/')",[63371]
"('URIish.java', 'org.eclipse.jgit.transport.URIish', '<init>', '^([a-z][a-z0-9+-]+)://(?:(?:([^/:@]+)(?::([^\\\\/]+))?@)?((?:[^\\\\/:]+)|(?:\\[[0-9a-f:]+\\]))(?::(\\d+))?((?:/~(?:[^\\\\/]+))?[\\\\/]))?(.+)?$', 'ssh+git://lusr\\example:wtf@[::1]:80/D:\\x')",[199535]
"('URIish.java', 'org.eclipse.jgit.transport.URIish', '<init>', '^(file):([\\\\/](?![\\\\/])((?:[A-Za-z]:)?[\\\\/]?(?:(?:[^\\\\/]+[\\\\/]+)*[^\\\\/]+[\\\\/]*)))$', 'http://me@[::1]:80/D:\\x')",[214654]
"('Description.java', 'org.junit.runner.Description', 'methodAndClassNamePatternGroupOrDefault', '([\\s\\S]*)\\((.*)\\)', 'testTrivialTwoWay_conflict(org.eclipse.jgit.merge.SimpleMergeTest)')","[15627, 15910]"
"('Description.java', 'org.junit.runner.Description', 'methodAndClassNamePatternGroupOrDefault', '([\\s\\S]*)\\((.*)\\)', 'testRenameRefNameColission1avoided(org.eclipse.jgit.internal.storage.file.RefUpdateTest)')","[120369, 121226]"
"('Description.java', 'org.junit.runner.Description', 'methodAndClassNamePatternGroupOrDefault', '([\\s\\S]*)\\((.*)\\)', 'testXDigitGroupCase0[OldRule? true](org.eclipse.jgit.ignore.IgnoreRuleSpecialCasesTest)')","[91124, 98208]"
"('URIish.java', 'org.eclipse.jgit.transport.URIish', '<init>', '^(file):([\\\\/](?![\\\\/])((?:[A-Za-z]:)?[\\\\/]?(?:(?:[^\\\\/]+[\\\\/]+)*[^\\\\/]+[\\\\/]*)))$', 'ssh://l usr\\example.com:wtf@1.2.3.4:80/D:\\x')",[193938]
"('PathMatcher.java', 'org.eclipse.jgit.ignore.internal.PathMatcher', 'iterate', 'ne.', 'new.c')","[74635, 75779, 105219, 106449]"
"('URIish.java', 'org.eclipse.jgit.transport.URIish', '<init>', '^([a-z][a-z0-9+-]+)://(?:(?:([^/:@]+)(?::([^\\\\/]+))?@)?((?:[^\\\\/:]+)|(?:\\[[0-9a-f:]+\\]))(?::(\\d+))?((?:/~(?:[^\\\\/]+))?[\\\\/]))?(.+)?$', 'https://server/repos/project.git')","[254340, 255130, 256413, 257466]"
"('URIish.java', 'org.eclipse.jgit.transport.URIish', '<init>', '^(file):([\\\\/](?![\\\\/])((?:[A-Za-z]:)?[\\\\/]?(?:(?:[^\\\\/]+[\\\\/]+)*[^\\\\/]+[\\\\/]*)))$', 'http://me:wtf@example.com:1234//')",[199558]
"('URIish.java', 'org.eclipse.jgit.transport.URIish', '<init>', '^(file):([\\\\/](?![\\\\/])((?:[A-Za-z]:)?[\\\\/]?(?:(?:[^\\\\/]+[\\\\/]+)*[^\\\\/]+[\\\\/]*)))$', 'https://l usr\\example.com@example.com:80//abc')",[218817]
"('Description.java', 'org.junit.runner.Description', 'methodAndClassNamePatternGroupOrDefault', '([\\s\\S]*)\\((.*)\\)', 'testError_TruncatedOld(org.eclipse.jgit.patch.PatchErrorTest)')","[1086, 1281]"
"('URIish.java', 'org.eclipse.jgit.transport.URIish', '<init>', '^(file):([\\\\/](?![\\\\/])((?:[A-Za-z]:)?[\\\\/]?(?:(?:[^\\\\/]+[\\\\/]+)*[^\\\\/]+[\\\\/]*)))$', 'ssh://lusr\\example@[::1]/D:\\x')","[223877, 224061]"
"('URIish.java', 'org.eclipse.jgit.transport.URIish', '<init>', '^([a-z][a-z0-9+-]+)://(?:(?:([^/:@]+)(?::([^\\\\/]+))?@)?((?:[^\\\\/:]+)|(?:\\[[0-9a-f:]+\\]))(?::(\\d+))?((?:/~(?:[^\\\\/]+))?[\\\\/]))?(.+)?$', 'file:///home/m y')","[249062, 249108]"
"('Description.java', 'org.junit.runner.Description', 'methodAndClassNamePatternGroupOrDefault', '([\\s\\S]*)\\((.*)\\)', 'testParsePersonIdent_malformedCases(org.eclipse.jgit.util.RawParseUtils_ParsePersonIdentTest)')","[38862, 38949]"
"('URIish.java', 'org.eclipse.jgit.transport.URIish', '<init>', '^([a-z][a-z0-9+-]+)://(?:(?:([^/:@]+)(?::([^\\\\/]+))?@)?((?:[^\\\\/:]+)|(?:\\[[0-9a-f:]+\\]))(?::(\\d+))?((?:/~(?:[^\\\\/]+))?[\\\\/]))?(.+)?$', 'http://lusr\\example@1.2.3.4:80//abc')",[216425]
"('URIish.java', 'org.eclipse.jgit.transport.URIish', '<init>', '^([\\\\/]?((?:[A-Za-z]:)?[\\\\/]?(?:(?:[^\\\\/]+[\\\\/]+)*[^\\\\/]+[\\\\/]*)))$', '/another/dir')","[254960, 255660, 257296]"
"('Description.java', 'org.junit.runner.Description', 'methodAndClassNamePatternGroupOrDefault', '([\\s\\S]*)\\((.*)\\)', 'testDiff(org.eclipse.jgit.diff.DiffFormatterTest)')","[2908, 3164]"
"('Description.java', 'org.junit.runner.Description', 'methodAndClassNamePatternGroupOrDefault', '([\\s\\S]*)\\((.*)\\)', 'testAmendReflog(org.eclipse.jgit.api.ReflogCommandTest)')","[166790, 166854]"
"('Description.java', 'org.junit.runner.Description', 'methodAndClassNamePatternGroupOrDefault', '([\\s\\S]*)\\((.*)\\)', 'testAdd_ZeroCapacity(org.eclipse.jgit.util.IntListTest)')","[28045, 28277]"
"('Description.java', 'org.junit.runner.Description', 'methodAndClassNamePatternGroupOrDefault', '([\\s\\S]*)\\((.*)\\)', 'org.eclipse.jgit.fnmatch.FileNameMatcherTest')","[41335, 48023]"
"('Description.java', 'org.junit.runner.Description', 'methodAndClassNamePatternGroupOrDefault', '([\\s\\S]*)\\((.*)\\)', 'testDirectoryFileConflicts_16(org.eclipse.jgit.lib.DirCacheCheckoutTest)')","[61713, 62797]"
"('URIish.java', 'org.eclipse.jgit.transport.URIish', '<init>', '^([a-z][a-z0-9+-]+)://(?:(?:([^/:@]+)(?::([^\\\\/]+))?@)?((?:[^\\\\/:]+)|(?:\\[[0-9a-f:]+\\]))(?::(\\d+))?((?:/~(?:[^\\\\/]+))?[\\\\/]))?(.+)?$', 'ssh://me@[::1]:1234//')",[207731]
"('URIish.java', 'org.eclipse.jgit.transport.URIish', '<init>', '^([a-z][a-z0-9+-]+)://(?:(?:([^/:@]+)(?::([^\\\\/]+))?@)?((?:[^\\\\/:]+)|(?:\\[[0-9a-f:]+\\]))(?::(\\d+))?((?:/~(?:[^\\\\/]+))?[\\\\/]))?(.+)?$', 'http://l usr\\example.com@example.com:80/D:\\x')",[215045]
"('Description.java', 'org.junit.runner.Description', 'methodAndClassNamePatternGroupOrDefault', '([\\s\\S]*)\\((.*)\\)', 'testSimplePatterns[OldRule? true](org.eclipse.jgit.ignore.FastIgnoreRuleTest)')","[77677, 78413]"
"('Description.java', 'org.junit.runner.Description', 'methodAndClassNamePatternGroupOrDefault', '([\\s\\S]*)\\((.*)\\)', 'org.eclipse.jgit.lib.ReflogResolveTest')","[64238, 65619]"
"('ChangeIdUtil.java', 'org.eclipse.jgit.util.ChangeIdUtil', 'indexOfFirstFooterLine', '^[ \\[].*$', '[bracket]')",[33323]
"('Description.java', 'org.junit.runner.Description', 'methodAndClassNamePatternGroupOrDefault', '([\\s\\S]*)\\((.*)\\)', 'testSort_REVERSE(org.eclipse.jgit.revwalk.RevWalkSortTest)')","[181963, 182117]"
"('URIish.java', 'org.eclipse.jgit.transport.URIish', '<init>', '^([a-z][a-z0-9+-]+)://(?:(?:([^/:@]+)(?::([^\\\\/]+))?@)?((?:[^\\\\/:]+)|(?:\\[[0-9a-f:]+\\]))(?::(\\d+))?((?:/~(?:[^\\\\/]+))?[\\\\/]))?(.+)?$', 'ssh+git://l usr\\example.com@1.2.3.4:80//')",[211963]
"('Description.java', 'org.junit.runner.Description', 'methodAndClassNamePatternGroupOrDefault', '([\\s\\S]*)\\((.*)\\)', 'testAlias_OptionsInherit(org.eclipse.jgit.transport.OpenSshConfigTest)')","[195869, 196233]"
"('URIish.java', 'org.eclipse.jgit.transport.URIish', '<init>', '^(file):([\\\\/](?![\\\\/])((?:[A-Za-z]:)?[\\\\/]?(?:(?:[^\\\\/]+[\\\\/]+)*[^\\\\/]+[\\\\/]*)))$', 'ssh+git://l usr\\example.com@1.2.3.4:80/D:\\x')",[212078]
"('Description.java', 'org.junit.runner.Description', 'methodAndClassNamePatternGroupOrDefault', '([\\s\\S]*)\\((.*)\\)', 'testDirModeAndRegex1[OldRule? false](org.eclipse.jgit.ignore.IgnoreMatcherParametrizedTest)')","[103558, 104039]"
"('URIish.java', 'org.eclipse.jgit.transport.URIish', '<init>', '^([a-z][a-z0-9+-]+)://(?:(?:([^/:@]+)(?::([^\\\\/]+))?@)?((?:[^\\\\/:]+)|(?:\\[[0-9a-f:]+\\]))(?::(\\d+))?((?:/~(?:[^\\\\/]+))?[\\\\/]))?(.+)?$', 'http://lusr\\example@1.2.3.4/D:\\x')","[230156, 230340]"
"('Description.java', 'org.junit.runner.Description', 'methodAndClassNamePatternGroupOrDefault', '([\\s\\S]*)\\((.*)\\)', 'testSingleSubtree_NoRecursion(org.eclipse.jgit.dircache.DirCacheIteratorTest)')","[170233, 170472]"
"('AttributesRule.java', 'org.eclipse.jgit.attributes.AttributesRule', 'isMatch', '[tv]est\\.sta[a-d]', 'test.stab')","[74355, 75499]"
"('Description.java', 'org.junit.runner.Description', 'methodAndClassNamePatternGroupOrDefault', '([\\s\\S]*)\\((.*)\\)', 'testLimitObjectSize_Length130CopyFails(org.eclipse.jgit.internal.storage.pack.DeltaIndexTest)')","[109034, 109318]"
"('Description.java', 'org.junit.runner.Description', 'methodAndClassNamePatternGroupOrDefault', '([\\s\\S]*)\\((.*)\\)', 'testOnlyOptionWithDirectory(org.eclipse.jgit.api.CommitOnlyTest)')","[136327, 138439]"
"('Description.java', 'org.junit.runner.Description', 'methodAndClassNamePatternGroupOrDefault', '([\\s\\S]*)\\((.*)\\)', 'testFileIgnoredNotHonored(org.eclipse.jgit.treewalk.filter.IndexDiffFilterTest)')","[264170, 264969]"
"('URIish.java', 'org.eclipse.jgit.transport.URIish', '<init>', '^(file):([\\\\/](?![\\\\/])((?:[A-Za-z]:)?[\\\\/]?(?:(?:[^\\\\/]+[\\\\/]+)*[^\\\\/]+[\\\\/]*)))$', 'ssh://me:wtf@example.com:80//')",[192226]
"('URIish.java', 'org.eclipse.jgit.transport.URIish', '<init>', '^([a-z][a-z0-9+-]+)://(?:(?:([^/:@]+)(?::([^\\\\/]+))?@)?((?:[^\\\\/:]+)|(?:\\[[0-9a-f:]+\\]))(?::(\\d+))?((?:/~(?:[^\\\\/]+))?[\\\\/]))?(.+)?$', 'ssh+git://me@1.2.3.4:80/D:/x')",[210951]
"('URIish.java', 'org.eclipse.jgit.transport.URIish', '<init>', '^(file):([\\\\/](?![\\\\/])((?:[A-Za-z]:)?[\\\\/]?(?:(?:[^\\\\/]+[\\\\/]+)*[^\\\\/]+[\\\\/]*)))$', 'ssh+git://lusr\\example@[::1]:1234//abc')",[213274]
"('Description.java', 'org.junit.runner.Description', 'methodAndClassNamePatternGroupOrDefault', '([\\s\\S]*)\\((.*)\\)', 'testDequote_Empty2(org.eclipse.jgit.util.QuotedStringGitPathStyleTest)')","[39807, 40231]"
"('Description.java', 'org.junit.runner.Description', 'methodAndClassNamePatternGroupOrDefault', '([\\s\\S]*)\\((.*)\\)', 'testRevert(org.eclipse.jgit.api.RevertCommandTest)')","[125662, 125880]"
"('URIish.java', 'org.eclipse.jgit.transport.URIish', '<init>', '^(file):([\\\\/](?![\\\\/])((?:[A-Za-z]:)?[\\\\/]?(?:(?:[^\\\\/]+[\\\\/]+)*[^\\\\/]+[\\\\/]*)))$', 'http://example.com/D:\\x')","[240805, 240989, 241909, 242093, 243013, 243197]"
"('URIish.java', 'org.eclipse.jgit.transport.URIish', '<init>', '^([a-z][a-z0-9+-]+)://(?:(?:([^/:@]+)(?::([^\\\\/]+))?@)?((?:[^\\\\/:]+)|(?:\\[[0-9a-f:]+\\]))(?::(\\d+))?((?:/~(?:[^\\\\/]+))?[\\\\/]))?(.+)?$', '/.git')",[247429]
"('Description.java', 'org.junit.runner.Description', 'methodAndClassNamePatternGroupOrDefault', '([\\s\\S]*)\\((.*)\\)', 'testEmptyValueNoLF(org.eclipse.jgit.revwalk.FooterLineTest)')","[173717, 174130]"
"('Description.java', 'org.junit.runner.Description', 'methodAndClassNamePatternGroupOrDefault', '([\\s\\S]*)\\((.*)\\)', 'org.eclipse.jgit.lib.ValidRefNameTest')","[65655, 66409]"
"('URIish.java', 'org.eclipse.jgit.transport.URIish', '<init>', '^(?:([^/:@]+)(?::([^\\\\/]+))?@)?((?:[^\\\\/:]+)|(?:\\[[0-9a-f:]+\\])):((?:(?:/~(?:[^\\\\/]+))[\\\\/])?(?:(?:[^\\\\/]+[\\\\/]+)*[^\\\\/]+[\\\\/]*))$', '/tmp/jgit_test_1060628017969836137_tmp/tmp_884518266944927743.git')","[185721, 185901]"
"('URIish.java', 'org.eclipse.jgit.transport.URIish', '<init>', '^(file):([\\\\/](?![\\\\/])((?:[A-Za-z]:)?[\\\\/]?(?:(?:[^\\\\/]+[\\\\/]+)*[^\\\\/]+[\\\\/]*)))$', 'git://example.com:338/D:/m y')","[250005, 250051]"
"('Description.java', 'org.junit.runner.Description', 'methodAndClassNamePatternGroupOrDefault', '([\\s\\S]*)\\((.*)\\)', 'dropNegativeRef(org.eclipse.jgit.api.StashDropCommandTest)')","[124394, 124566]"
"('Description.java', 'org.junit.runner.Description', 'methodAndClassNamePatternGroupOrDefault', '([\\s\\S]*)\\((.*)\\)', 'testConfigureCache_Limits1(org.eclipse.jgit.internal.storage.file.WindowCacheReconfigureTest)')","[115577, 115727]"
"('Description.java', 'org.junit.runner.Description', 'methodAndClassNamePatternGroupOrDefault', '([\\s\\S]*)\\((.*)\\)', 'testRecursiveMergeWithConflict(org.eclipse.jgit.api.MergeCommandTest)')","[126181, 127087]"
"('Description.java', 'org.junit.runner.Description', 'methodAndClassNamePatternGroupOrDefault', '([\\s\\S]*)\\((.*)\\)', 'testGetRefs_HeadsOnly_AllLoose(org.eclipse.jgit.internal.storage.file.RefDirectoryTest)')","[110509, 111669]"
"('URIish.java', 'org.eclipse.jgit.transport.URIish', '<init>', '^(?:([^/:@]+)(?::([^\\\\/]+))?@)?([^\\\\/:]{2,}):([\\\\/](?:(?:[^\\\\/]+[\\\\/]+)*[^\\\\/]+[\\\\/]*))$', '/tmp/jgit_test_4895667423267485854_tmp/tmp_229822824317133648')","[152911, 153051, 153212]"
"('Description.java', 'org.junit.runner.Description', 'methodAndClassNamePatternGroupOrDefault', '([\\s\\S]*)\\((.*)\\)', 'testTimeout_readByte_Success1(org.eclipse.jgit.util.io.TimeoutInputStreamTest)')","[24036, 24206]"
"('Description.java', 'org.junit.runner.Description', 'methodAndClassNamePatternGroupOrDefault', '([\\s\\S]*)\\((.*)\\)', 'test010_readNamesInSubSection(org.eclipse.jgit.lib.ConfigTest)')","[69873, 70610]"
"('Description.java', 'org.junit.runner.Description', 'methodAndClassNamePatternGroupOrDefault', '([\\s\\S]*)\\((.*)\\)', 'testTwoRangesInOneGroupCase5(org.eclipse.jgit.fnmatch.FileNameMatcherTest)')","[44401, 47802]"
"('Description.java', 'org.junit.runner.Description', 'methodAndClassNamePatternGroupOrDefault', '([\\s\\S]*)\\((.*)\\)', 'testBackDoesNothing(org.eclipse.jgit.treewalk.EmptyTreeIteratorTest)')","[261019, 261149]"
"('FastIgnoreRule.java', 'org.eclipse.jgit.ignore.FastIgnoreRule', 'isMatch', '[b-d][ab]', 'bb')",[100431]
"('Description.java', 'org.junit.runner.Description', 'methodAndClassNamePatternGroupOrDefault', '([\\s\\S]*)\\((.*)\\)', 'testRemoveDeletesTreeFanout2_38(org.eclipse.jgit.notes.NoteMapTest)')","[258315, 258572]"
"('FastIgnoreRule.java', 'org.eclipse.jgit.ignore.FastIgnoreRule', 'isMatch', '[b-d][ab]', 'bc')",[100509]
"('Description.java', 'org.junit.runner.Description', 'methodAndClassNamePatternGroupOrDefault', '([\\s\\S]*)\\((.*)\\)', 'emptyRepositoryFormatVersion(org.eclipse.jgit.internal.storage.file.FileRepositoryBuilderTest)')","[118597, 118747]"
"('Description.java', 'org.junit.runner.Description', 'methodAndClassNamePatternGroupOrDefault', '([\\s\\S]*)\\((.*)\\)', 'testUnsupportedGroupCase1[OldRule? false](org.eclipse.jgit.ignore.IgnoreRuleSpecialCasesTest)')","[86664, 93769]"
"('Description.java', 'org.junit.runner.Description', 'methodAndClassNamePatternGroupOrDefault', '([\\s\\S]*)\\((.*)\\)', 'testCombinedRangesInOneGroupCase0(org.eclipse.jgit.fnmatch.FileNameMatcherTest)')","[41650, 44920]"
"('URIish.java', 'org.eclipse.jgit.transport.URIish', '<init>', '^([a-z][a-z0-9+-]+)://(?:(?:([^/:@]+)(?::([^\\\\/]+))?@)?((?:[^\\\\/:]+)|(?:\\[[0-9a-f:]+\\]))(?::(\\d+))?((?:/~(?:[^\\\\/]+))?[\\\\/]))?(.+)?$', 'ssh+git://lusr\\example@1.2.3.4//')","[226706, 226890]"
"('QuotedString.java', 'org.eclipse.jgit.util.QuotedString$BourneUserPathStyle', 'quote', '^~[A-Za-z0-9_-]+$', '~/a')","[29871, 29895]"
"('URIish.java', 'org.eclipse.jgit.transport.URIish', '<init>', '^([a-z][a-z0-9+-]+)://(?:(?:([^/:@]+)(?::([^\\\\/]+))?@)?((?:[^\\\\/:]+)|(?:\\[[0-9a-f:]+\\]))(?::(\\d+))?((?:/~(?:[^\\\\/]+))?[\\\\/]))?(.+)?$', 'file:///tmp/jgit_test_9215790154376357519_tmp/tmp_2615392917240434684/.git/.')",[13446]
"('Description.java', 'org.junit.runner.Description', 'methodAndClassNamePatternGroupOrDefault', '([\\s\\S]*)\\((.*)\\)', 'testSystemEncoding(org.eclipse.jgit.storage.file.FileBasedConfigTest)')","[48143, 48231]"
"('URIish.java', 'org.eclipse.jgit.transport.URIish', '<init>', '^([\\\\/]?((?:[A-Za-z]:)?[\\\\/]?(?:(?:[^\\\\/]+[\\\\/]+)*[^\\\\/]+[\\\\/]*)))$', '//.git')",[251684]
"('Description.java', 'org.junit.runner.Description', 'methodAndClassNamePatternGroupOrDefault', '([\\s\\S]*)\\((.*)\\)', 'crissCrossMerge_ParentsNotMergeable(org.eclipse.jgit.merge.RecursiveMergerTest)')","[15183, 15336]"
"('URIish.java', 'org.eclipse.jgit.transport.URIish', '<init>', '^(file):([\\\\/](?![\\\\/])((?:[A-Za-z]:)?[\\\\/]?(?:(?:[^\\\\/]+[\\\\/]+)*[^\\\\/]+[\\\\/]*)))$', 'ssh://l usr\\example.com@example.com:1234//abc')",[208122]
"('URIish.java', 'org.eclipse.jgit.transport.URIish', '<init>', '^([a-z][a-z0-9+-]+)://(?:(?:([^/:@]+)(?::([^\\\\/]+))?@)?((?:[^\\\\/:]+)|(?:\\[[0-9a-f:]+\\]))(?::(\\d+))?((?:/~(?:[^\\\\/]+))?[\\\\/]))?(.+)?$', 'http://l usr\\example.com@example.com/D:/x')","[228638, 228822]"
"('Description.java', 'org.junit.runner.Description', 'methodAndClassNamePatternGroupOrDefault', '([\\s\\S]*)\\((.*)\\)', 'testBatchRefUpdateConflict(org.eclipse.jgit.internal.storage.file.RefDirectoryTest)')","[110887, 112065]"
"('Description.java', 'org.junit.runner.Description', 'methodAndClassNamePatternGroupOrDefault', '([\\s\\S]*)\\((.*)\\)', 'testInvalidTreeNameIsMacHFSGit2(org.eclipse.jgit.lib.ObjectCheckerTest)')","[48458, 50944]"
"('Description.java', 'org.junit.runner.Description', 'methodAndClassNamePatternGroupOrDefault', '([\\s\\S]*)\\((.*)\\)', 'org.eclipse.jgit.util.GitDateParserTest')","[21834, 22416]"
"('Description.java', 'org.junit.runner.Description', 'methodAndClassNamePatternGroupOrDefault', '([\\s\\S]*)\\((.*)\\)', 'test021_createTreeTag(org.eclipse.jgit.internal.storage.file.T0003_BasicTest)')","[116651, 117191]"
"('Description.java', 'org.junit.runner.Description', 'methodAndClassNamePatternGroupOrDefault', '([\\s\\S]*)\\((.*)\\)', 'testSplit[OldRule? true](org.eclipse.jgit.ignore.FastIgnoreRuleTest)')","[77470, 78206]"
"('Description.java', 'org.junit.runner.Description', 'methodAndClassNamePatternGroupOrDefault', '([\\s\\S]*)\\((.*)\\)', 'testGraphGroupCase1[OldRule? false](org.eclipse.jgit.ignore.IgnoreRuleSpecialCasesTest)')","[85399, 92504]"
"('URIish.java', 'org.eclipse.jgit.transport.URIish', '<init>', '^([a-z][a-z0-9+-]+)://(?:(?:([^/:@]+)(?::([^\\\\/]+))?@)?((?:[^\\\\/:]+)|(?:\\[[0-9a-f:]+\\]))(?::(\\d+))?((?:/~(?:[^\\\\/]+))?[\\\\/]))?(.+)?$', 'https://me:wtf@example.com:1234//')",[202893]
"('URIish.java', 'org.eclipse.jgit.transport.URIish', '<init>', '^([a-z][a-z0-9+-]+)://(?:(?:([^/:@]+)(?::([^\\\\/]+))?@)?((?:[^\\\\/:]+)|(?:\\[[0-9a-f:]+\\]))(?::(\\d+))?((?:/~(?:[^\\\\/]+))?[\\\\/]))?(.+)?$', 'ssh+git://me@[::1]:80//abc')",[211273]
"('Description.java', 'org.junit.runner.Description', 'methodAndClassNamePatternGroupOrDefault', '([\\s\\S]*)\\((.*)\\)', 'testInvalidCommitInvalidAuthor1(org.eclipse.jgit.lib.ObjectCheckerTest)')","[49319, 51846]"
"('Description.java', 'org.junit.runner.Description', 'methodAndClassNamePatternGroupOrDefault', '([\\s\\S]*)\\((.*)\\)', 'testCRLF(org.eclipse.jgit.util.io.EolCanonicalizingInputStreamTest)')","[24885, 25034]"
"('Description.java', 'org.junit.runner.Description', 'methodAndClassNamePatternGroupOrDefault', '([\\s\\S]*)\\((.*)\\)', 'testOnlyOption_f1_7_e(org.eclipse.jgit.api.CommitOnlyTest)')","[135151, 137207]"
"('URIish.java', 'org.eclipse.jgit.transport.URIish', '<init>', '^([a-z][a-z0-9+-]+)://(?:(?:([^/:@]+)(?::([^\\\\/]+))?@)?((?:[^\\\\/:]+)|(?:\\[[0-9a-f:]+\\]))(?::(\\d+))?((?:/~(?:[^\\\\/]+))?[\\\\/]))?(.+)?$', 'file:///tmp/jgit_test_3191652883693208135_tmp/tmp_7162045041867769283/.git/')",[158068]
"('Description.java', 'org.junit.runner.Description', 'methodAndClassNamePatternGroupOrDefault', '([\\s\\S]*)\\((.*)\\)', 'testDeletionOnSideConflict(org.eclipse.jgit.api.MergeCommandTest)')","[126139, 127043]"
"('URIish.java', 'org.eclipse.jgit.transport.URIish', '<init>', '^([a-z][a-z0-9+-]+)://(?:(?:([^/:@]+)(?::([^\\\\/]+))?@)?((?:[^\\\\/:]+)|(?:\\[[0-9a-f:]+\\]))(?::(\\d+))?((?:/~(?:[^\\\\/]+))?[\\\\/]))?(.+)?$', 'https://lusr\\example@1.2.3.4:80//')",[220266]
"('Description.java', 'org.junit.runner.Description', 'methodAndClassNamePatternGroupOrDefault', '([\\s\\S]*)\\((.*)\\)', 'workingDirectoryCleanIndexModify(org.eclipse.jgit.api.StashCreateCommandTest)')","[155862, 156200]"
"('URIish.java', 'org.eclipse.jgit.transport.URIish', '<init>', '^(file):([\\\\/](?![\\\\/])((?:[A-Za-z]:)?[\\\\/]?(?:(?:[^\\\\/]+[\\\\/]+)*[^\\\\/]+[\\\\/]*)))$', 'http://l usr\\example.com@1.2.3.4/D:\\x')","[229029, 229213]"
"('Description.java', 'org.junit.runner.Description', 'methodAndClassNamePatternGroupOrDefault', '([\\s\\S]*)\\((.*)\\)', 'testInvalidTagName(org.eclipse.jgit.api.TagCommandTest)')","[157637, 157942]"
"('URIish.java', 'org.eclipse.jgit.transport.URIish', '<init>', '^([a-z][a-z0-9+-]+)://(?:(?:([^/:@]+)(?::([^\\\\/]+))?@)?((?:[^\\\\/:]+)|(?:\\[[0-9a-f:]+\\]))(?::(\\d+))?((?:/~(?:[^\\\\/]+))?[\\\\/]))?(.+)?$', 'https://l usr\\example.com@[::1]:80//abc')",[219576]
"('Description.java', 'org.junit.runner.Description', 'methodAndClassNamePatternGroupOrDefault', '([\\s\\S]*)\\((.*)\\)', 'testAlias_badConnectionAttempts(org.eclipse.jgit.transport.OpenSshConfigTest)')","[196058, 196431]"
"('Description.java', 'org.junit.runner.Description', 'methodAndClassNamePatternGroupOrDefault', '([\\s\\S]*)\\((.*)\\)', 'testGetRefs_DiscoversDeletedLoose1(org.eclipse.jgit.internal.storage.file.RefDirectoryTest)')","[111349, 112549]"
"('URIish.java', 'org.eclipse.jgit.transport.URIish', '<init>', '^([a-z][a-z0-9+-]+)://(?:(?:([^/:@]+)(?::([^\\\\/]+))?@)?((?:[^\\\\/:]+)|(?:\\[[0-9a-f:]+\\]))(?::(\\d+))?((?:/~(?:[^\\\\/]+))?[\\\\/]))?(.+)?$', 'http://me@[::1]:1234/D:/x')",[214447]
"('URIish.java', 'org.eclipse.jgit.transport.URIish', '<init>', '^(file):([\\\\/](?![\\\\/])((?:[A-Za-z]:)?[\\\\/]?(?:(?:[^\\\\/]+[\\\\/]+)*[^\\\\/]+[\\\\/]*)))$', 'https://lusr\\example@[::1]//')","[233675, 233859]"
"('FastIgnoreRule.java', 'org.eclipse.jgit.ignore.FastIgnoreRule', 'isMatch', '[\\p{Blank}]', 'a')",[101993]
"('Description.java', 'org.junit.runner.Description', 'methodAndClassNamePatternGroupOrDefault', '([\\s\\S]*)\\((.*)\\)', 'testDF_GapByOne(org.eclipse.jgit.treewalk.NameConflictTreeWalkTest)')","[263051, 263160]"
"('Description.java', 'org.junit.runner.Description', 'methodAndClassNamePatternGroupOrDefault', '([\\s\\S]*)\\((.*)\\)', 'testFormatWithConflictsNoFooterNoLineBreak(org.eclipse.jgit.merge.MergeMessageFormatterTest)')","[16077, 16394]"
"('URIish.java', 'org.eclipse.jgit.transport.URIish', '<init>', '^([a-z][a-z0-9+-]+)://(?:(?:([^/:@]+)(?::([^\\\\/]+))?@)?((?:[^\\\\/:]+)|(?:\\[[0-9a-f:]+\\]))(?::(\\d+))?((?:/~(?:[^\\\\/]+))?[\\\\/]))?(.+)?$', 'ssh://some-host:/path/to/repository.git')",[249154]
"('Description.java', 'org.junit.runner.Description', 'methodAndClassNamePatternGroupOrDefault', '([\\s\\S]*)\\((.*)\\)', 'testRevertConflictResolution(org.eclipse.jgit.api.RevertCommandTest)')","[125557, 125770]"
"('Description.java', 'org.junit.runner.Description', 'methodAndClassNamePatternGroupOrDefault', '([\\s\\S]*)\\((.*)\\)', 'testInsertHeadMiddle(org.eclipse.jgit.internal.storage.pack.DeltaIndexTest)')","[109013, 109296]"
"('Description.java', 'org.junit.runner.Description', 'methodAndClassNamePatternGroupOrDefault', '([\\s\\S]*)\\((.*)\\)', 'testParse_GitStyleMessage(org.eclipse.jgit.revwalk.RevTagParseTest)')","[179646, 180054]"
"('Description.java', 'org.junit.runner.Description', 'methodAndClassNamePatternGroupOrDefault', '([\\s\\S]*)\\((.*)\\)', 'org.eclipse.jgit.treewalk.FileTreeIteratorTest')","[261956, 262931]"
"('URIish.java', 'org.eclipse.jgit.transport.URIish', '<init>', '^([a-z][a-z0-9+-]+)://(?:(?:([^/:@]+)(?::([^\\\\/]+))?@)?((?:[^\\\\/:]+)|(?:\\[[0-9a-f:]+\\]))(?::(\\d+))?((?:/~(?:[^\\\\/]+))?[\\\\/]))?(.+)?$', 'https://me:wtf@example.com:80//')",[203100]
"('Description.java', 'org.junit.runner.Description', 'methodAndClassNamePatternGroupOrDefault', '([\\s\\S]*)\\((.*)\\)', 'testVerySimplePatternCase3(org.eclipse.jgit.fnmatch.FileNameMatcherTest)')","[42364, 45668]"
"('URIish.java', 'org.eclipse.jgit.transport.URIish', '<init>', '^([a-z][a-z0-9+-]+)://(?:(?:([^/:@]+)(?::([^\\\\/]+))?@)?((?:[^\\\\/:]+)|(?:\\[[0-9a-f:]+\\]))(?::(\\d+))?((?:/~(?:[^\\\\/]+))?[\\\\/]))?(.+)?$', 'https://l usr\\example.com@example.com:80//')",[218794]
"('URIish.java', 'org.eclipse.jgit.transport.URIish', '<init>', '^(file):([\\\\/](?![\\\\/])((?:[A-Za-z]:)?[\\\\/]?(?:(?:[^\\\\/]+[\\\\/]+)*[^\\\\/]+[\\\\/]*)))$', 'ssh://me@[::1]:80/D:/x')",[207984]
"('URIish.java', 'org.eclipse.jgit.transport.URIish', '<init>', '^(?:([^/:@]+)(?::([^\\\\/]+))?@)?((?:[^\\\\/:]+)|(?:\\[[0-9a-f:]+\\])):((?:(?:/~(?:[^\\\\/]+))[\\\\/])?(?:(?:[^\\\\/]+[\\\\/]+)*[^\\\\/]+[\\\\/]*))$', '/home/m y')","[248625, 248740]"
"('Description.java', 'org.junit.runner.Description', 'methodAndClassNamePatternGroupOrDefault', '([\\s\\S]*)\\((.*)\\)', 'org.eclipse.jgit.diff.SimilarityIndexTest')","[11344, 11711]"
"('Description.java', 'org.junit.runner.Description', 'methodAndClassNamePatternGroupOrDefault', '([\\s\\S]*)\\((.*)\\)', 'testCombinedRangesInOneGroupCase0[OldRule? true](org.eclipse.jgit.ignore.IgnoreRuleSpecialCasesTest)')","[88617, 95701]"
"('URIish.java', 'org.eclipse.jgit.transport.URIish', '<init>', '^([a-z][a-z0-9+-]+)://(?:(?:([^/:@]+)(?::([^\\\\/]+))?@)?((?:[^\\\\/:]+)|(?:\\[[0-9a-f:]+\\]))(?::(\\d+))?((?:/~(?:[^\\\\/]+))?[\\\\/]))?(.+)?$', 'ssh://me:wtf@1.2.3.4:80/D:\\x')",[192755]
"('URIish.java', 'org.eclipse.jgit.transport.URIish', '<init>', '^(file):([\\\\/](?![\\\\/])((?:[A-Za-z]:)?[\\\\/]?(?:(?:[^\\\\/]+[\\\\/]+)*[^\\\\/]+[\\\\/]*)))$', 'file:///tmp/jgit_test_3236687163374977183_tmp/tmp_995430085484609221/testCloneRepositoryWithNestedSubmodules1/.git/')","[161238, 161838]"
"('Description.java', 'org.junit.runner.Description', 'methodAndClassNamePatternGroupOrDefault', '([\\s\\S]*)\\((.*)\\)', 'renameBranchExistingSection(org.eclipse.jgit.api.RenameBranchCommandTest)')","[158400, 158486]"
"('URIish.java', 'org.eclipse.jgit.transport.URIish', '<init>', '^([a-z][a-z0-9+-]+)://(?:(?:([^/:@]+)(?::([^\\\\/]+))?@)?((?:[^\\\\/:]+)|(?:\\[[0-9a-f:]+\\]))(?::(\\d+))?((?:/~(?:[^\\\\/]+))?[\\\\/]))?(.+)?$', 'http://lusr\\example@example.com:80//abc')",[216057]
"('Description.java', 'org.junit.runner.Description', 'methodAndClassNamePatternGroupOrDefault', '([\\s\\S]*)\\((.*)\\)', 'testType_Insert(org.eclipse.jgit.diff.EditTest)')","[6031, 6377]"
"('URIish.java', 'org.eclipse.jgit.transport.URIish', '<init>', '^(file):([\\\\/](?![\\\\/])((?:[A-Za-z]:)?[\\\\/]?(?:(?:[^\\\\/]+[\\\\/]+)*[^\\\\/]+[\\\\/]*)))$', 'ssh://1.2.3.4//abc')","[234457, 234641, 235561, 235745, 236665, 236849]"
"('Description.java', 'org.junit.runner.Description', 'methodAndClassNamePatternGroupOrDefault', '([\\s\\S]*)\\((.*)\\)', 'testPullLocalConflict(org.eclipse.jgit.api.PullCommandWithRebaseTest)')","[158631, 158738]"
"('URIish.java', 'org.eclipse.jgit.transport.URIish', '<init>', '^([a-z][a-z0-9+-]+)://(?:(?:([^/:@]+)(?::([^\\\\/]+))?@)?((?:[^\\\\/:]+)|(?:\\[[0-9a-f:]+\\]))(?::(\\d+))?((?:/~(?:[^\\\\/]+))?[\\\\/]))?(.+)?$', 'ssh://lusr\\example@[::1]:1234/D:/x')",[210031]
"('URIish.java', 'org.eclipse.jgit.transport.URIish', '<init>', '^([a-z][a-z0-9+-]+)://(?:(?:([^/:@]+)(?::([^\\\\/]+))?@)?((?:[^\\\\/:]+)|(?:\\[[0-9a-f:]+\\]))(?::(\\d+))?((?:/~(?:[^\\\\/]+))?[\\\\/]))?(.+)?$', 'ssh+git://lusr\\example@1.2.3.4:80//abc')",[213113]
"('URIish.java', 'org.eclipse.jgit.transport.URIish', '<init>', '^([a-z][a-z0-9+-]+)://(?:(?:([^/:@]+)(?::([^\\\\/]+))?@)?((?:[^\\\\/:]+)|(?:\\[[0-9a-f:]+\\]))(?::(\\d+))?((?:/~(?:[^\\\\/]+))?[\\\\/]))?(.+)?$', 'http://me@1.2.3.4:80//abc')",[214217]
"('URIish.java', 'org.eclipse.jgit.transport.URIish', '<init>', '^(file):([\\\\/](?![\\\\/])((?:[A-Za-z]:)?[\\\\/]?(?:(?:[^\\\\/]+[\\\\/]+)*[^\\\\/]+[\\\\/]*)))$', '/abc/')",[252975]
"('Description.java', 'org.junit.runner.Description', 'methodAndClassNamePatternGroupOrDefault', '([\\s\\S]*)\\((.*)\\)', 'testEscapedBracket2[OldRule? false](org.eclipse.jgit.ignore.IgnoreRuleSpecialCasesTest)')","[88182, 95287]"
"('Description.java', 'org.junit.runner.Description', 'methodAndClassNamePatternGroupOrDefault', '([\\s\\S]*)\\((.*)\\)', 'testTagCommit(org.eclipse.jgit.revwalk.RevTagParseTest)')","[179835, 180252]"
"('FastIgnoreRule.java', 'org.eclipse.jgit.ignore.FastIgnoreRule', 'isMatch', '.r[a-c]', '5ra')",[107507]
"('FastIgnoreRule.java', 'org.eclipse.jgit.ignore.FastIgnoreRule', 'isMatch', '.rc', 'file')",[106937]
"('Description.java', 'org.junit.runner.Description', 'methodAndClassNamePatternGroupOrDefault', '([\\s\\S]*)\\((.*)\\)', 'workingDirectoryCleanIndexModify(org.eclipse.jgit.api.StashApplyCommandTest)')","[142477, 143027]"
"('Description.java', 'org.junit.runner.Description', 'methodAndClassNamePatternGroupOrDefault', '([\\s\\S]*)\\((.*)\\)', 'testPathFilterOrOtherFilter(org.eclipse.jgit.revwalk.TreeRevFilterTest)')","[181330, 181440]"
"('Description.java', 'org.junit.runner.Description', 'methodAndClassNamePatternGroupOrDefault', '([\\s\\S]*)\\((.*)\\)', 'testSpaceGroupCase1[OldRule? false](org.eclipse.jgit.ignore.IgnoreRuleSpecialCasesTest)')","[86066, 93171]"
"('Description.java', 'org.junit.runner.Description', 'methodAndClassNamePatternGroupOrDefault', '([\\s\\S]*)\\((.*)\\)', 'testInitiallyClean(org.eclipse.jgit.lib.IndexDiffSubmoduleTest)')","[56323, 56473]"
"('Description.java', 'org.junit.runner.Description', 'methodAndClassNamePatternGroupOrDefault', '([\\s\\S]*)\\((.*)\\)', 'testGitProtoUnixPort(org.eclipse.jgit.transport.URIishTest)')","[188779, 190172]"
"('Description.java', 'org.junit.runner.Description', 'methodAndClassNamePatternGroupOrDefault', '([\\s\\S]*)\\((.*)\\)', 'testDigitGroupCase5[OldRule? false](org.eclipse.jgit.ignore.IgnoreRuleSpecialCasesTest)')","[86480, 93585]"
"('Description.java', 'org.junit.runner.Description', 'methodAndClassNamePatternGroupOrDefault', '([\\s\\S]*)\\((.*)\\)', 'testDirModeAndNoRegex[OldRule? true](org.eclipse.jgit.ignore.IgnoreMatcherParametrizedTest)')","[103740, 104200]"
"('URIish.java', 'org.eclipse.jgit.transport.URIish', '<init>', '^([a-z][a-z0-9+-]+)://(?:(?:([^/:@]+)(?::([^\\\\/]+))?@)?((?:[^\\\\/:]+)|(?:\\[[0-9a-f:]+\\]))(?::(\\d+))?((?:/~(?:[^\\\\/]+))?[\\\\/]))?(.+)?$', '/tmp/jgit_test_1358523526465653191_tmp/tmp_2395600565988697857')","[161556, 161686, 161933]"
"('Description.java', 'org.junit.runner.Description', 'methodAndClassNamePatternGroupOrDefault', '([\\s\\S]*)\\((.*)\\)', 'testGraphGroupCase5[OldRule? false](org.eclipse.jgit.ignore.IgnoreRuleSpecialCasesTest)')","[85491, 92596]"
"('URIish.java', 'org.eclipse.jgit.transport.URIish', '<init>', '^([a-z][a-z0-9+-]+)://(?:(?:([^/:@]+)(?::([^\\\\/]+))?@)?((?:[^\\\\/:]+)|(?:\\[[0-9a-f:]+\\]))(?::(\\d+))?((?:/~(?:[^\\\\/]+))?[\\\\/]))?(.+)?$', 'https://l usr\\example.com@example.com:1234/D:\\x')",[218196]
"('URIish.java', 'org.eclipse.jgit.transport.URIish', '<init>', '^(file):([\\\\/](?![\\\\/])((?:[A-Za-z]:)?[\\\\/]?(?:(?:[^\\\\/]+[\\\\/]+)*[^\\\\/]+[\\\\/]*)))$', 'http://l usr\\example.com@[::1]:1234/D:\\x')",[215574]
"('AttributesRule.java', 'org.eclipse.jgit.attributes.AttributesRule', 'isMatch', '.r[a-c]', 'grb')",[76508]
"('FastIgnoreRule.java', 'org.eclipse.jgit.ignore.FastIgnoreRule', 'isMatch', '[A\\p{Ll}C3-5]', '.')",[99571]
"('Description.java', 'org.junit.runner.Description', 'methodAndClassNamePatternGroupOrDefault', '([\\s\\S]*)\\((.*)\\)', 'testForbiddenNamesOnWindowsEgCon(org.eclipse.jgit.lib.DirCacheCheckoutMaliciousPathTest)')","[66487, 67371]"
"('Description.java', 'org.junit.runner.Description', 'methodAndClassNamePatternGroupOrDefault', '([\\s\\S]*)\\((.*)\\)', 'testParse_explicit_bad_encoded(org.eclipse.jgit.revwalk.RevTagParseTest)')","[179709, 180120]"
"('Description.java', 'org.junit.runner.Description', 'methodAndClassNamePatternGroupOrDefault', '([\\s\\S]*)\\((.*)\\)', 'test002_NewIdent(org.eclipse.jgit.lib.T0001_PersonIdentTest)')","[60601, 60707]"
"('Description.java', 'org.junit.runner.Description', 'methodAndClassNamePatternGroupOrDefault', '([\\s\\S]*)\\((.*)\\)', 'testGetSlashesValidSlashHumanishName(org.eclipse.jgit.transport.URIishTest)')","[188695, 190084]"
"('URIish.java', 'org.eclipse.jgit.transport.URIish', '<init>', '^([a-z][a-z0-9+-]+)://(?:(?:([^/:@]+)(?::([^\\\\/]+))?@)?((?:[^\\\\/:]+)|(?:\\[[0-9a-f:]+\\]))(?::(\\d+))?((?:/~(?:[^\\\\/]+))?[\\\\/]))?(.+)?$', 'https://[::1]/D:\\x')","[244876, 245060, 245980, 246164, 247084, 247268]"
"('Description.java', 'org.junit.runner.Description', 'methodAndClassNamePatternGroupOrDefault', '([\\s\\S]*)\\((.*)\\)', 'testInvalidTreeDuplicateNames8(org.eclipse.jgit.lib.ObjectCheckerTest)')","[50768, 53364]"
"('URIish.java', 'org.eclipse.jgit.transport.URIish', '<init>', '^(file):([\\\\/](?![\\\\/])((?:[A-Za-z]:)?[\\\\/]?(?:(?:[^\\\\/]+[\\\\/]+)*[^\\\\/]+[\\\\/]*)))$', 'file:/tmp/jgit_test_5783626678477263478_tmp/tmp_7374908731213404106/.git/')",[63129]
"('URIish.java', 'org.eclipse.jgit.transport.URIish', '<init>', '^([a-z][a-z0-9+-]+)://(?:(?:([^/:@]+)(?::([^\\\\/]+))?@)?((?:[^\\\\/:]+)|(?:\\[[0-9a-f:]+\\]))(?::(\\d+))?((?:/~(?:[^\\\\/]+))?[\\\\/]))?(.+)?$', 'ssh://l usr\\example.com@[::1]:80//')",[209019]
"('URIish.java', 'org.eclipse.jgit.transport.URIish', '<init>', '^([a-z][a-z0-9+-]+)://(?:(?:([^/:@]+)(?::([^\\\\/]+))?@)?((?:[^\\\\/:]+)|(?:\\[[0-9a-f:]+\\]))(?::(\\d+))?((?:/~(?:[^\\\\/]+))?[\\\\/]))?(.+)?$', 'ssh://[::1]/D:\\x')","[234940, 235124, 236044, 236228, 237148, 237332]"
"('URIish.java', 'org.eclipse.jgit.transport.URIish', '<init>', '^(file):([\\\\/](?![\\\\/])((?:[A-Za-z]:)?[\\\\/]?(?:(?:[^\\\\/]+[\\\\/]+)*[^\\\\/]+[\\\\/]*)))$', 'ssh+git://lusr\\example@example.com:1234//')",[212492]
"('Description.java', 'org.junit.runner.Description', 'methodAndClassNamePatternGroupOrDefault', '([\\s\\S]*)\\((.*)\\)', 'testNewNamespaceConflictWithLoosePrefixOfExisting(org.eclipse.jgit.internal.storage.file.RefUpdateTest)')","[120159, 121006]"
"('URIish.java', 'org.eclipse.jgit.transport.URIish', '<init>', '^(?:([^/:@]+)(?::([^\\\\/]+))?@)?([^\\\\/:]{2,}):([\\\\/](?:(?:[^\\\\/]+[\\\\/]+)*[^\\\\/]+[\\\\/]*))$', '/abc.git/')",[248119]
"('Description.java', 'org.junit.runner.Description', 'methodAndClassNamePatternGroupOrDefault', '([\\s\\S]*)\\((.*)\\)', 'testACommitWithSubjectBodyBugEmptyLineAndSob(org.eclipse.jgit.util.ChangeIdUtilTest)')","[32308, 33075]"
"('ChangeIdUtil.java', 'org.eclipse.jgit.util.ChangeIdUtil', 'indexOfChangeId', '(^Change-Id: *I[a-f0-9]{40}$)', 'Change-Id: Id3bc5359d768a6400450283e12bdfb6cd135ea4b')","[35042, 36541]"
"('FastIgnoreRule.java', 'org.eclipse.jgit.ignore.FastIgnoreRule', 'isMatch', '[\\p{Lu}]', 'a')",[101731]
"('Description.java', 'org.junit.runner.Description', 'methodAndClassNamePatternGroupOrDefault', '([\\s\\S]*)\\((.*)\\)', 'testUpdateFastForward(org.eclipse.jgit.transport.PushProcessTest)')","[203287, 203833]"
"('Description.java', 'org.junit.runner.Description', 'methodAndClassNamePatternGroupOrDefault', '([\\s\\S]*)\\((.*)\\)', 'org.eclipse.jgit.util.RawParseUtils_HexParseTest')","[31002, 31154]"
"('Description.java', 'org.junit.runner.Description', 'methodAndClassNamePatternGroupOrDefault', '([\\s\\S]*)\\((.*)\\)', 'org.eclipse.jgit.revplot.AbstractPlotRendererTest')","[169986, 170561]"
"('URIish.java', 'org.eclipse.jgit.transport.URIish', '<init>', '^(file):([\\\\/](?![\\\\/])((?:[A-Za-z]:)?[\\\\/]?(?:(?:[^\\\\/]+[\\\\/]+)*[^\\\\/]+[\\\\/]*)))$', 'file:///tmp/jgit_test_4045324050557360246_tmp/tmp_5930971390776294452/.git/')",[19331]
"('Description.java', 'org.junit.runner.Description', 'methodAndClassNamePatternGroupOrDefault', '([\\s\\S]*)\\((.*)\\)', 'testInitWithDefaultsBare(org.eclipse.jgit.api.InitCommandTest)')","[156672, 156866]"
"('Description.java', 'org.junit.runner.Description', 'methodAndClassNamePatternGroupOrDefault', '([\\s\\S]*)\\((.*)\\)', 'testFilePathCase3[OldRule? true](org.eclipse.jgit.ignore.IgnoreRuleSpecialCasesTest)')","[90457, 97541]"
"('Description.java', 'org.junit.runner.Description', 'methodAndClassNamePatternGroupOrDefault', '([\\s\\S]*)\\((.*)\\)', 'testAlphaGroupCase0[OldRule? true](org.eclipse.jgit.ignore.IgnoreRuleSpecialCasesTest)')","[89422, 96506]"
"('Description.java', 'org.junit.runner.Description', 'methodAndClassNamePatternGroupOrDefault', '([\\s\\S]*)\\((.*)\\)', 'testParse_OnlyLFMessage(org.eclipse.jgit.revwalk.RevCommitParseTest)')","[182362, 182723]"
"('Description.java', 'org.junit.runner.Description', 'methodAndClassNamePatternGroupOrDefault', '([\\s\\S]*)\\((.*)\\)', 'testRevFilterReceivesParsedCommits(org.eclipse.jgit.revwalk.RevWalkResetTest)')","[182197, 182219]"
"('Description.java', 'org.junit.runner.Description', 'methodAndClassNamePatternGroupOrDefault', '([\\s\\S]*)\\((.*)\\)', 'lockFailedExceptionRecovery(org.eclipse.jgit.internal.storage.file.LockFileTest)')","[114434, 114456]"
"('Description.java', 'org.junit.runner.Description', 'methodAndClassNamePatternGroupOrDefault', '([\\s\\S]*)\\((.*)\\)', 'testForbiddenNamesOnWindowsEgLpt1(org.eclipse.jgit.lib.DirCacheCheckoutMaliciousPathTest)')","[66949, 67855]"
"('URIish.java', 'org.eclipse.jgit.transport.URIish', '<init>', '^(file):([\\\\/](?![\\\\/])((?:[A-Za-z]:)?[\\\\/]?(?:(?:[^\\\\/]+[\\\\/]+)*[^\\\\/]+[\\\\/]*)))$', 'file:///tmp/jgit_test_6569854883740192292_tmp/tmp_475652343048211867/.git/')",[10469]
"('Description.java', 'org.junit.runner.Description', 'methodAndClassNamePatternGroupOrDefault', '([\\s\\S]*)\\((.*)\\)', 'testCheckout(org.eclipse.jgit.api.CheckoutCommandTest)')","[149241, 149767]"
"('Description.java', 'org.junit.runner.Description', 'methodAndClassNamePatternGroupOrDefault', '([\\s\\S]*)\\((.*)\\)', 'testBasic(org.eclipse.jgit.attributes.AttributeTest)')","[72557, 72579]"
"('Description.java', 'org.junit.runner.Description', 'methodAndClassNamePatternGroupOrDefault', '([\\s\\S]*)\\((.*)\\)', 'testDirectoryFileConflicts_4(org.eclipse.jgit.lib.DirCacheCheckoutTest)')","[61398, 62395]"
"('URIish.java', 'org.eclipse.jgit.transport.URIish', '<init>', '^(file):([\\\\/](?![\\\\/])((?:[A-Za-z]:)?[\\\\/]?(?:(?:[^\\\\/]+[\\\\/]+)*[^\\\\/]+[\\\\/]*)))$', 'http://lusr\\example@1.2.3.4:80//')",[216356]
"('URIish.java', 'org.eclipse.jgit.transport.URIish', '<init>', '^([a-z][a-z0-9+-]+)://(?:(?:([^/:@]+)(?::([^\\\\/]+))?@)?((?:[^\\\\/:]+)|(?:\\[[0-9a-f:]+\\]))(?::(\\d+))?((?:/~(?:[^\\\\/]+))?[\\\\/]))?(.+)?$', 'ssh://l usr\\example.com@example.com/D:/x')","[222014, 222198]"
"('Description.java', 'org.junit.runner.Description', 'methodAndClassNamePatternGroupOrDefault', '([\\s\\S]*)\\((.*)\\)', 'testDirectoryFileConflicts_3(org.eclipse.jgit.lib.DirCacheCheckoutTest)')","[61377, 62373]"
"('URIish.java', 'org.eclipse.jgit.transport.URIish', '<init>', '^([a-z][a-z0-9+-]+)://(?:(?:([^/:@]+)(?::([^\\\\/]+))?@)?((?:[^\\\\/:]+)|(?:\\[[0-9a-f:]+\\]))(?::(\\d+))?((?:/~(?:[^\\\\/]+))?[\\\\/]))?(.+)?$', 'https://l usr\\example.com@example.com:1234/D:/x')",[218150]
"('URIish.java', 'org.eclipse.jgit.transport.URIish', '<init>', '^([a-z][a-z0-9+-]+)://(?:(?:([^/:@]+)(?::([^\\\\/]+))?@)?((?:[^\\\\/:]+)|(?:\\[[0-9a-f:]+\\]))(?::(\\d+))?((?:/~(?:[^\\\\/]+))?[\\\\/]))?(.+)?$', 'ssh+git://lusr\\example@[::1]:80/D:/x')",[213527]
"('Description.java', 'org.junit.runner.Description', 'methodAndClassNamePatternGroupOrDefault', '([\\s\\S]*)\\((.*)\\)', 'null')","[17, 182, 284, 938, 1563, 1794, 1982, 2365, 2674, 3850, 3995, 4269, 5657, 5802, 6549, 7886, 8375, 9418, 9563, 9708, 9853, 10707, 11325, 11728, 11873, 12534, 14936, 15038, 15398, 16016, 16928, 17030, 17476, 17798, 18678, 19038, 19402, 19762, 20810, 21815, 22433, 22578, 22809, 23040, 23228, 23975, 24378, 24824, 25184, 25673, 25818, 25963, 26409, 27070, 27430, 28005, 28537, 28768, 30392, 30709, 30983, 31171, 31617, 38291, 38780, 39011, 39414, 39516, 39704, 40623, 40854, 41085, 41316, 48040, 48271, 53404, 54022, 54210, 54312, 54414, 54516, 54704, 55107, 56241, 57661, 58425, 59404, 59867, 60172, 60561, 60938, 63859, 64219, 65636, 66426, 68291, 68479, 68624, 69371, 70915, 71080, 71349, 71854, 72517, 72619, 72893, 73210, 73441, 76926, 84590, 84692, 102888, 103334, 108021, 108682, 108784, 109402, 109676, 109907, 110095, 110240, 110385, 112809, 113040, 113185, 113502, 113819, 114394, 114496, 114813, 114915, 115017, 115205, 115307, 115495, 115855, 116086, 116317, 117451, 117553, 118515, 118875, 119278, 119552, 121288, 121519, 122223, 122454, 122685, 123002, 123673, 124291, 124694, 125475, 126099, 128007, 128152, 128469, 128571, 130675, 131035, 134104, 134292, 138722, 139591, 140455, 142374, 144380, 149201, 154575, 154935, 155656, 155801, 156548, 157054, 157199, 157387, 158131, 158339, 158570, 158844, 162695, 163611, 164371, 165860, 166319, 166750, 167106, 168133, 168708, 169240, 169967, 170024, 170578, 170766, 171235, 171589, 172104, 172206, 172308, 172582, 172899, 173259, 173404, 174280, 174468, 174785, 174887, 175247, 175865, 176053, 176370, 176644, 177004, 177278, 177724, 178041, 178530, 178890, 179250, 179438, 180314, 180502, 181206, 181480, 181797, 182157, 182259, 183049, 183534, 184187, 185446, 186404, 188130, 189218, 191541, 193531, 195703, 203117, 218236, 251747, 253130, 254357, 258191, 259277, 260067, 260599, 260916, 261233, 261937, 262948, 263222, 263539, 263856, 264130, 265823, 266183, 266543, 266731, 267091, 267193]"
"('Description.java', 'org.junit.runner.Description', 'methodAndClassNamePatternGroupOrDefault', '([\\s\\S]*)\\((.*)\\)', 'testSshGitProto(org.eclipse.jgit.transport.URIishTest)')","[188590, 189974]"
"('URIish.java', 'org.eclipse.jgit.transport.URIish', '<init>', '^(?:([^/:@]+)(?::([^\\\\/]+))?@)?([^\\\\/:]{2,}):([\\\\/](?:(?:[^\\\\/]+[\\\\/]+)*[^\\\\/]+[\\\\/]*))$', '/tmp/jgit_test_6525282766431782376_tmp/tmp_51199864732082123')","[154201, 154341, 154502]"
"('URIish.java', 'org.eclipse.jgit.transport.URIish', '<init>', '^([a-z][a-z0-9+-]+)://(?:(?:([^/:@]+)(?::([^\\\\/]+))?@)?((?:[^\\\\/:]+)|(?:\\[[0-9a-f:]+\\]))(?::(\\d+))?((?:/~(?:[^\\\\/]+))?[\\\\/]))?(.+)?$', 'https://lusr\\example@[::1]:1234//')",[220450]
"('Description.java', 'org.junit.runner.Description', 'methodAndClassNamePatternGroupOrDefault', '([\\s\\S]*)\\((.*)\\)', 'testCorruptChecksumAtFooter(org.eclipse.jgit.dircache.DirCacheCGitCompatabilityTest)')","[173002, 173153]"
"('Description.java', 'org.junit.runner.Description', 'methodAndClassNamePatternGroupOrDefault', '([\\s\\S]*)\\((.*)\\)', 'testOnlyOption_f1_6_d(org.eclipse.jgit.api.CommitOnlyTest)')","[135025, 137075]"
"('URIish.java', 'org.eclipse.jgit.transport.URIish', '<init>', '^([a-z][a-z0-9+-]+)://(?:(?:([^/:@]+)(?::([^\\\\/]+))?@)?((?:[^\\\\/:]+)|(?:\\[[0-9a-f:]+\\]))(?::(\\d+))?((?:/~(?:[^\\\\/]+))?[\\\\/]))?(.+)?$', 'ssh+git://me@example.com:80//abc')",[210537]
"('URIish.java', 'org.eclipse.jgit.transport.URIish', '<init>', '^(file):([\\\\/](?![\\\\/])((?:[A-Za-z]:)?[\\\\/]?(?:(?:[^\\\\/]+[\\\\/]+)*[^\\\\/]+[\\\\/]*)))$', 'https://lusr\\example:wtf@[::1]:1234/D:\\x')",[206742]
"('Description.java', 'org.junit.runner.Description', 'methodAndClassNamePatternGroupOrDefault', '([\\s\\S]*)\\((.*)\\)', 'testEdit_UniqueCommonLargerThanMatchPoint(org.eclipse.jgit.diff.MyersDiffTest)')","[8770, 9202]"
"('QuotedString.java', 'org.eclipse.jgit.util.QuotedString$BourneUserPathStyle', 'quote', '^~[A-Za-z0-9_-]*/.*$', '')","[29479, 29503]"
"('Description.java', 'org.junit.runner.Description', 'methodAndClassNamePatternGroupOrDefault', '([\\s\\S]*)\\((.*)\\)', 'org.eclipse.jgit.api.GarbageCollectCommandTest')","[155675, 155784]"
"('FastIgnoreRule.java', 'org.eclipse.jgit.ignore.FastIgnoreRule', 'isMatch', 'a\\\\b', 'a\\b')",[101081]
"('Description.java', 'org.junit.runner.Description', 'methodAndClassNamePatternGroupOrDefault', '([\\s\\S]*)\\((.*)\\)', 'test002_addFile(org.eclipse.jgit.lib.T0002_TreeTest)')","[58717, 59024]"
"('Description.java', 'org.junit.runner.Description', 'methodAndClassNamePatternGroupOrDefault', '([\\s\\S]*)\\((.*)\\)', 'testBuildOneFile_Commit_IndexChangedEvent(org.eclipse.jgit.dircache.DirCacheBuilderTest)')","[170890, 171084]"
"('Description.java', 'org.junit.runner.Description', 'methodAndClassNamePatternGroupOrDefault', '([\\s\\S]*)\\((.*)\\)', 'org.eclipse.jgit.api.LsRemoteCommandTest')","[138741, 139574]"
"('URIish.java', 'org.eclipse.jgit.transport.URIish', '<init>', '^([a-z][a-z0-9+-]+)://(?:(?:([^/:@]+)(?::([^\\\\/]+))?@)?((?:[^\\\\/:]+)|(?:\\[[0-9a-f:]+\\]))(?::(\\d+))?((?:/~(?:[^\\\\/]+))?[\\\\/]))?(.+)?$', 'https://[::1]//')","[244738, 244922, 245842, 246026, 246946, 247130]"
"('Description.java', 'org.junit.runner.Description', 'methodAndClassNamePatternGroupOrDefault', '([\\s\\S]*)\\((.*)\\)', 'testBuildOneFile_Commit(org.eclipse.jgit.dircache.DirCacheBuilderTest)')","[170932, 171128]"
"('URIish.java', 'org.eclipse.jgit.transport.URIish', '<init>', '^(file):([\\\\/](?![\\\\/])((?:[A-Za-z]:)?[\\\\/]?(?:(?:[^\\\\/]+[\\\\/]+)*[^\\\\/]+[\\\\/]*)))$', '/tmp/jgit_test_4869566695306036567_tmp/tmp_8360922162679768520')","[151994, 152119, 152268]"
"('URIish.java', 'org.eclipse.jgit.transport.URIish', '<init>', '^([a-z][a-z0-9+-]+)://(?:(?:([^/:@]+)(?::([^\\\\/]+))?@)?((?:[^\\\\/:]+)|(?:\\[[0-9a-f:]+\\]))(?::(\\d+))?((?:/~(?:[^\\\\/]+))?[\\\\/]))?(.+)?$', 'ssh://example.com/D:\\x')","[234204, 234388, 235308, 235492, 236412, 236596]"
"('Description.java', 'org.junit.runner.Description', 'methodAndClassNamePatternGroupOrDefault', '([\\s\\S]*)\\((.*)\\)', 'testGetRefs_HeadsOnly_Mixed(org.eclipse.jgit.internal.storage.file.RefDirectoryTest)')","[111475, 112681]"
"('Description.java', 'org.junit.runner.Description', 'methodAndClassNamePatternGroupOrDefault', '([\\s\\S]*)\\((.*)\\)', 'testFilter_ALL(org.eclipse.jgit.revwalk.RevWalkFilterTest)')","[180815, 181144]"
"('URIish.java', 'org.eclipse.jgit.transport.URIish', '<init>', '^([a-z][a-z0-9+-]+)://(?:(?:([^/:@]+)(?::([^\\\\/]+))?@)?((?:[^\\\\/:]+)|(?:\\[[0-9a-f:]+\\]))(?::(\\d+))?((?:/~(?:[^\\\\/]+))?[\\\\/]))?(.+)?$', 'https://lusr\\example:wtf@example.com:1234//abc')",[205937]
"('Description.java', 'org.junit.runner.Description', 'methodAndClassNamePatternGroupOrDefault', '([\\s\\S]*)\\((.*)\\)', 'testValidCommitBlankAuthor(org.eclipse.jgit.lib.ObjectCheckerTest)')","[49718, 52264]"
"('URIish.java', 'org.eclipse.jgit.transport.URIish', '<init>', '^(file):([\\\\/](?![\\\\/])((?:[A-Za-z]:)?[\\\\/]?(?:(?:[^\\\\/]+[\\\\/]+)*[^\\\\/]+[\\\\/]*)))$', 'ssh+git://me:wtf@example.com:80/D:/x')",[196522]
"('URIish.java', 'org.eclipse.jgit.transport.URIish', '<init>', '^([a-z][a-z0-9+-]+)://(?:(?:([^/:@]+)(?::([^\\\\/]+))?@)?((?:[^\\\\/:]+)|(?:\\[[0-9a-f:]+\\]))(?::(\\d+))?((?:/~(?:[^\\\\/]+))?[\\\\/]))?(.+)?$', '/tmp/jgit_test_2307217292654954211_tmp/tmp_6715492902754415962.git')",[184072]
"('URIish.java', 'org.eclipse.jgit.transport.URIish', '<init>', '^([a-z][a-z0-9+-]+)://(?:(?:([^/:@]+)(?::([^\\\\/]+))?@)?((?:[^\\\\/:]+)|(?:\\[[0-9a-f:]+\\]))(?::(\\d+))?((?:/~(?:[^\\\\/]+))?[\\\\/]))?(.+)?$', 'D:\\m y')","[249430, 249545]"
"('Description.java', 'org.junit.runner.Description', 'methodAndClassNamePatternGroupOrDefault', '([\\s\\S]*)\\((.*)\\)', 'idOffset(org.eclipse.jgit.treewalk.FileTreeIteratorTest)')","[262061, 262402]"
"('Description.java', 'org.junit.runner.Description', 'methodAndClassNamePatternGroupOrDefault', '([\\s\\S]*)\\((.*)\\)', 'testTwoGroupsCase1(org.eclipse.jgit.fnmatch.FileNameMatcherTest)')","[42721, 46042]"
"('FastIgnoreRule.java', 'org.eclipse.jgit.ignore.FastIgnoreRule', 'isMatch', '.r[a-c]', '3rb')",[107398]
"('URIish.java', 'org.eclipse.jgit.transport.URIish', '<init>', '^([a-z][a-z0-9+-]+)://(?:(?:([^/:@]+)(?::([^\\\\/]+))?@)?((?:[^\\\\/:]+)|(?:\\[[0-9a-f:]+\\]))(?::(\\d+))?((?:/~(?:[^\\\\/]+))?[\\\\/]))?(.+)?$', 'ssh+git://l usr\\example.com@example.com:1234//abc')",[211457]
"('URIish.java', 'org.eclipse.jgit.transport.URIish', '<init>', '^(file):([\\\\/](?![\\\\/])((?:[A-Za-z]:)?[\\\\/]?(?:(?:[^\\\\/]+[\\\\/]+)*[^\\\\/]+[\\\\/]*)))$', 'ssh://lusr\\example:wtf@example.com:1234//abc')",[194398]
"('Description.java', 'org.junit.runner.Description', 'methodAndClassNamePatternGroupOrDefault', '([\\s\\S]*)\\((.*)\\)', 'testFindRemoteRefUpdatesTwoRefSpecs(org.eclipse.jgit.transport.TransportTest)')","[254397, 254566]"
"('Description.java', 'org.junit.runner.Description', 'methodAndClassNamePatternGroupOrDefault', '([\\s\\S]*)\\((.*)\\)', 'testAddAllFromOtherList(org.eclipse.jgit.util.BlockListTest)')","[27491, 27745]"
"('Description.java', 'org.junit.runner.Description', 'methodAndClassNamePatternGroupOrDefault', '([\\s\\S]*)\\((.*)\\)', 'testGetRefs_HeadOnOneBranch(org.eclipse.jgit.internal.storage.file.RefDirectoryTest)')","[110530, 111691]"
"('URIish.java', 'org.eclipse.jgit.transport.URIish', '<init>', '^([a-z][a-z0-9+-]+)://(?:(?:([^/:@]+)(?::([^\\\\/]+))?@)?((?:[^\\\\/:]+)|(?:\\[[0-9a-f:]+\\]))(?::(\\d+))?((?:/~(?:[^\\\\/]+))?[\\\\/]))?(.+)?$', 'ssh+git://lusr\\example:wtf@1.2.3.4:1234//')",[198845]
"('ChangeIdUtil.java', 'org.eclipse.jgit.util.ChangeIdUtil', 'indexOfFirstFooterLine', '^[ \\[].*$', '[ja: Fixed')",[34478]
"('Description.java', 'org.junit.runner.Description', 'methodAndClassNamePatternGroupOrDefault', '([\\s\\S]*)\\((.*)\\)', 'testReadWriteMergeHeads(org.eclipse.jgit.lib.MergeHeadMsgTest)')","[68519, 68562]"
"('URIish.java', 'org.eclipse.jgit.transport.URIish', '<init>', '^(file):([\\\\/](?![\\\\/])((?:[A-Za-z]:)?[\\\\/]?(?:(?:[^\\\\/]+[\\\\/]+)*[^\\\\/]+[\\\\/]*)))$', 'http://l usr\\example.com@example.com:80/D:\\x')",[215022]
"('Description.java', 'org.junit.runner.Description', 'methodAndClassNamePatternGroupOrDefault', '([\\s\\S]*)\\((.*)\\)', 'testExactRename_DifferentObjects(org.eclipse.jgit.diff.RenameDetectorTest)')","[4666, 5230]"
"('Description.java', 'org.junit.runner.Description', 'methodAndClassNamePatternGroupOrDefault', '([\\s\\S]*)\\((.*)\\)', 'testSignedOffBy_SkipNonFooter(org.eclipse.jgit.revwalk.FooterLineTest)')","[173696, 174108]"
"('Description.java', 'org.junit.runner.Description', 'methodAndClassNamePatternGroupOrDefault', '([\\s\\S]*)\\((.*)\\)', 'testRenameBranchCannotLockAFileHEADisToLockFrom(org.eclipse.jgit.internal.storage.file.RefUpdateTest)')","[119991, 120830]"
"('Description.java', 'org.junit.runner.Description', 'methodAndClassNamePatternGroupOrDefault', '([\\s\\S]*)\\((.*)\\)', 'testRevertMultiple(org.eclipse.jgit.api.RevertCommandTest)')","[125620, 125836]"
"('Description.java', 'org.junit.runner.Description', 'methodAndClassNamePatternGroupOrDefault', '([\\s\\S]*)\\((.*)\\)', 'testDeleteRecursiveEmpty(org.eclipse.jgit.util.FileUtilTest)')","[23415, 23759]"
"('URIish.java', 'org.eclipse.jgit.transport.URIish', '<init>', '^(?:([^/:@]+)(?::([^\\\\/]+))?@)?([^\\\\/:]{2,}):([\\\\/](?:(?:[^\\\\/]+[\\\\/]+)*[^\\\\/]+[\\\\/]*))$', '/tmp/jgit_test_1202794844773508614_tmp/tmp_7885106280618449498.git')",[183469]
"('Description.java', 'org.junit.runner.Description', 'methodAndClassNamePatternGroupOrDefault', '([\\s\\S]*)\\((.*)\\)', 'testAuthorScriptConverter(org.eclipse.jgit.api.RebaseCommandTest)')","[131978, 133492]"
"('Description.java', 'org.junit.runner.Description', 'methodAndClassNamePatternGroupOrDefault', '([\\s\\S]*)\\((.*)\\)', 'testCreateFromCommit(org.eclipse.jgit.api.BranchCommandTest)')","[128611, 128927]"
"('URIish.java', 'org.eclipse.jgit.transport.URIish', '<init>', '^(file):([\\\\/](?![\\\\/])((?:[A-Za-z]:)?[\\\\/]?(?:(?:[^\\\\/]+[\\\\/]+)*[^\\\\/]+[\\\\/]*)))$', 'ssh+git://l usr\\example.com@[::1]//abc')","[225993, 226177]"
"('URIish.java', 'org.eclipse.jgit.transport.URIish', '<init>', '^([a-z][a-z0-9+-]+)://(?:(?:([^/:@]+)(?::([^\\\\/]+))?@)?((?:[^\\\\/:]+)|(?:\\[[0-9a-f:]+\\]))(?::(\\d+))?((?:/~(?:[^\\\\/]+))?[\\\\/]))?(.+)?$', 'ssh+git://l usr\\example.com@example.com/D:\\x')","[225372, 225556]"
"('Description.java', 'org.junit.runner.Description', 'methodAndClassNamePatternGroupOrDefault', '([\\s\\S]*)\\((.*)\\)', 'testCommitAmend(org.eclipse.jgit.api.CommitAndLogCommandTest)')","[155080, 155296]"
"('URIish.java', 'org.eclipse.jgit.transport.URIish', '<init>', '^(file):([\\\\/](?![\\\\/])((?:[A-Za-z]:)?[\\\\/]?(?:(?:[^\\\\/]+[\\\\/]+)*[^\\\\/]+[\\\\/]*)))$', 'ssh+git://l usr\\example.com:wtf@1.2.3.4:80//abc')",[197948]
"('Description.java', 'org.junit.runner.Description', 'methodAndClassNamePatternGroupOrDefault', '([\\s\\S]*)\\((.*)\\)', 'testGetNullHumanishName(org.eclipse.jgit.transport.URIishTest)')","[188296, 189666]"
"('URIish.java', 'org.eclipse.jgit.transport.URIish', '<init>', '^([a-z][a-z0-9+-]+)://(?:(?:([^/:@]+)(?::([^\\\\/]+))?@)?((?:[^\\\\/:]+)|(?:\\[[0-9a-f:]+\\]))(?::(\\d+))?((?:/~(?:[^\\\\/]+))?[\\\\/]))?(.+)?$', 'ssh://me@example.com:1234/D:/x')",[207087]
"('URIish.java', 'org.eclipse.jgit.transport.URIish', '<init>', '^(file):([\\\\/](?![\\\\/])((?:[A-Za-z]:)?[\\\\/]?(?:(?:[^\\\\/]+[\\\\/]+)*[^\\\\/]+[\\\\/]*)))$', 'http://me@[::1]:1234/D:\\x')",[214470]
"('URIish.java', 'org.eclipse.jgit.transport.URIish', '<init>', '^(file):([\\\\/](?![\\\\/])((?:[A-Za-z]:)?[\\\\/]?(?:(?:[^\\\\/]+[\\\\/]+)*[^\\\\/]+[\\\\/]*)))$', 'file:///tmp/jgit_test_1988309938804811301_tmp/tmp_8167031851852704344/.git/')",[162898]
"('Description.java', 'org.junit.runner.Description', 'methodAndClassNamePatternGroupOrDefault', '([\\s\\S]*)\\((.*)\\)', 'testScpStyleWithUser(org.eclipse.jgit.transport.URIishTest)')","[188863, 190260]"
"('Description.java', 'org.junit.runner.Description', 'methodAndClassNamePatternGroupOrDefault', '([\\s\\S]*)\\((.*)\\)', 'testUnknownUpstream(org.eclipse.jgit.api.RebaseCommandTest)')","[132209, 133734]"
"('URIish.java', 'org.eclipse.jgit.transport.URIish', '<init>', '^([a-z][a-z0-9+-]+)://(?:(?:([^/:@]+)(?::([^\\\\/]+))?@)?((?:[^\\\\/:]+)|(?:\\[[0-9a-f:]+\\]))(?::(\\d+))?((?:/~(?:[^\\\\/]+))?[\\\\/]))?(.+)?$', 'https://me@example.com/D:\\x')","[230892, 231076]"
"('URIish.java', 'org.eclipse.jgit.transport.URIish', '<init>', '^(file):([\\\\/](?![\\\\/])((?:[A-Za-z]:)?[\\\\/]?(?:(?:[^\\\\/]+[\\\\/]+)*[^\\\\/]+[\\\\/]*)))$', 'ssh+git://me@[::1]:80/D:/x')",[211296]
"('Description.java', 'org.junit.runner.Description', 'methodAndClassNamePatternGroupOrDefault', '([\\s\\S]*)\\((.*)\\)', 'testMaliciousGitPath1Case(org.eclipse.jgit.lib.DirCacheCheckoutMaliciousPathTest)')","[66739, 67635]"
"('Description.java', 'org.junit.runner.Description', 'methodAndClassNamePatternGroupOrDefault', '([\\s\\S]*)\\((.*)\\)', 'testWrap(org.eclipse.jgit.api.GitConstructionTest)')","[162777, 162843]"
"('URIish.java', 'org.eclipse.jgit.transport.URIish', '<init>', '^(file):([\\\\/](?![\\\\/])((?:[A-Za-z]:)?[\\\\/]?(?:(?:[^\\\\/]+[\\\\/]+)*[^\\\\/]+[\\\\/]*)))$', 'ssh://l usr\\example.com@[::1]//')","[222635, 222819]"
"('URIish.java', 'org.eclipse.jgit.transport.URIish', '<init>', '^(file):([\\\\/](?![\\\\/])((?:[A-Za-z]:)?[\\\\/]?(?:(?:[^\\\\/]+[\\\\/]+)*[^\\\\/]+[\\\\/]*)))$', 'ssh+git://l usr\\example.com:wtf@[::1]:1234//')",[198086]
"('Description.java', 'org.junit.runner.Description', 'methodAndClassNamePatternGroupOrDefault', '([\\s\\S]*)\\((.*)\\)', 'testDigitGroupCase4(org.eclipse.jgit.fnmatch.FileNameMatcherTest)')","[42952, 46284]"
"('Description.java', 'org.junit.runner.Description', 'methodAndClassNamePatternGroupOrDefault', '([\\s\\S]*)\\((.*)\\)', 'testEntryFileMode(org.eclipse.jgit.treewalk.AbstractTreeIteratorTest)')","[266834, 266985]"
"('Description.java', 'org.junit.runner.Description', 'methodAndClassNamePatternGroupOrDefault', '([\\s\\S]*)\\((.*)\\)', 'org.eclipse.jgit.notes.DefaultNoteMergerTest')","[260618, 260899]"
"('Description.java', 'org.junit.runner.Description', 'methodAndClassNamePatternGroupOrDefault', '([\\s\\S]*)\\((.*)\\)', 'testUIText(org.eclipse.jgit.nls.RootLocaleTest)')","[41188, 41276]"
"('Description.java', 'org.junit.runner.Description', 'methodAndClassNamePatternGroupOrDefault', '([\\s\\S]*)\\((.*)\\)', 'testUpdateWorkingDirectory(org.eclipse.jgit.api.PathCheckoutCommandTest)')","[123776, 124053]"
"('Description.java', 'org.junit.runner.Description', 'methodAndClassNamePatternGroupOrDefault', '([\\s\\S]*)\\((.*)\\)', 'testEmptyFolderCommittedDeletedCommittedIgnoredComparedWithInitialCommit(org.eclipse.jgit.treewalk.filter.IndexDiffFilterTest)')","[264653, 265475]"
"('URIish.java', 'org.eclipse.jgit.transport.URIish', '<init>', '^([a-z][a-z0-9+-]+)://(?:(?:([^/:@]+)(?::([^\\\\/]+))?@)?((?:[^\\\\/:]+)|(?:\\[[0-9a-f:]+\\]))(?::(\\d+))?((?:/~(?:[^\\\\/]+))?[\\\\/]))?(.+)?$', 'file:///tmp/jgit_test_6569854883740192292_tmp/tmp_475652343048211867/.git/')",[10512]
"('Description.java', 'org.junit.runner.Description', 'methodAndClassNamePatternGroupOrDefault', '([\\s\\S]*)\\((.*)\\)', 'testDequote_BareA(org.eclipse.jgit.util.QuotedStringBourneStyleTest)')","[38436, 38652]"
"('Description.java', 'org.junit.runner.Description', 'methodAndClassNamePatternGroupOrDefault', '([\\s\\S]*)\\((.*)\\)', 'testObjectMovedToNewPack1(org.eclipse.jgit.internal.storage.file.ConcurrentRepackTest)')","[122263, 122348]"
"('Description.java', 'org.junit.runner.Description', 'methodAndClassNamePatternGroupOrDefault', '([\\s\\S]*)\\((.*)\\)', 'shouldReturnZeroWhenMergedInto(org.eclipse.jgit.revwalk.RevWalkUtilsCountTest)')","[174529, 174657]"
"('Description.java', 'org.junit.runner.Description', 'methodAndClassNamePatternGroupOrDefault', '([\\s\\S]*)\\((.*)\\)', 'testParse_AddNoNewline(org.eclipse.jgit.patch.PatchTest)')","[2106, 2258]"
"('URIish.java', 'org.eclipse.jgit.transport.URIish', '<init>', '^([a-z][a-z0-9+-]+)://(?:(?:([^/:@]+)(?::([^\\\\/]+))?@)?((?:[^\\\\/:]+)|(?:\\[[0-9a-f:]+\\]))(?::(\\d+))?((?:/~(?:[^\\\\/]+))?[\\\\/]))?(.+)?$', 'http://lusr\\example@example.com:1234//abc')",[215873]
"('Description.java', 'org.junit.runner.Description', 'methodAndClassNamePatternGroupOrDefault', '([\\s\\S]*)\\((.*)\\)', 'testFileCommitted(org.eclipse.jgit.treewalk.filter.IndexDiffFilterTest)')","[264632, 265453]"
"('Description.java', 'org.junit.runner.Description', 'methodAndClassNamePatternGroupOrDefault', '([\\s\\S]*)\\((.*)\\)', 'testReadString_Len0003(org.eclipse.jgit.transport.PacketLineInTest)')","[184437, 184973]"
"('URIish.java', 'org.eclipse.jgit.transport.URIish', '<init>', '^(?:([^/:@]+)(?::([^\\\\/]+))?@)?((?:[^\\\\/:]+)|(?:\\[[0-9a-f:]+\\])):((?:(?:/~(?:[^\\\\/]+))[\\\\/])?(?:(?:[^\\\\/]+[\\\\/]+)*[^\\\\/]+[\\\\/]*))$', '/tmp/jgit_test_2166166318525399122_tmp/tmp_3429394497116144220')","[150797, 150932, 151080]"
"('Description.java', 'org.junit.runner.Description', 'methodAndClassNamePatternGroupOrDefault', '([\\s\\S]*)\\((.*)\\)', 'testUpdateCreateRef(org.eclipse.jgit.transport.PushProcessTest)')","[203656, 204213]"
"('Description.java', 'org.junit.runner.Description', 'methodAndClassNamePatternGroupOrDefault', '([\\s\\S]*)\\((.*)\\)', 'org.eclipse.jgit.revwalk.RevWalkShallowTest')","[181499, 181780]"
"('ChangeIdUtil.java', 'org.eclipse.jgit.util.ChangeIdUtil', 'indexOfChangeId', '(^Change-Id: *I[a-f0-9]{40}$)', 'more text')",[37088]
"('URIish.java', 'org.eclipse.jgit.transport.URIish', '<init>', '^([a-z][a-z0-9+-]+)://(?:(?:([^/:@]+)(?::([^\\\\/]+))?@)?((?:[^\\\\/:]+)|(?:\\[[0-9a-f:]+\\]))(?::(\\d+))?((?:/~(?:[^\\\\/]+))?[\\\\/]))?(.+)?$', 'http://l usr\\example.com:wtf@1.2.3.4:80/D:/x')",[201329]
"('Description.java', 'org.junit.runner.Description', 'methodAndClassNamePatternGroupOrDefault', '([\\s\\S]*)\\((.*)\\)', 'testGetRef_PackedNotPeeled_WrongSort(org.eclipse.jgit.internal.storage.file.RefDirectoryTest)')","[111202, 112395]"
"('URIish.java', 'org.eclipse.jgit.transport.URIish', '<init>', '^([a-z][a-z0-9+-]+)://(?:(?:([^/:@]+)(?::([^\\\\/]+))?@)?((?:[^\\\\/:]+)|(?:\\[[0-9a-f:]+\\]))(?::(\\d+))?((?:/~(?:[^\\\\/]+))?[\\\\/]))?(.+)?$', 'file:///a/b.txt')",[191501]
"('URIish.java', 'org.eclipse.jgit.transport.URIish', '<init>', '^(file):([\\\\/](?![\\\\/])((?:[A-Za-z]:)?[\\\\/]?(?:(?:[^\\\\/]+[\\\\/]+)*[^\\\\/]+[\\\\/]*)))$', 'file:///home/m%00y')","[247774, 247820]"
"('URIish.java', 'org.eclipse.jgit.transport.URIish', '<init>', '^(file):([\\\\/](?![\\\\/])((?:[A-Za-z]:)?[\\\\/]?(?:(?:[^\\\\/]+[\\\\/]+)*[^\\\\/]+[\\\\/]*)))$', 'ssh+git://lusr\\example:wtf@example.com:1234//')",[198454]
"('URIish.java', 'org.eclipse.jgit.transport.URIish', '<init>', '^(file):([\\\\/](?![\\\\/])((?:[A-Za-z]:)?[\\\\/]?(?:(?:[^\\\\/]+[\\\\/]+)*[^\\\\/]+[\\\\/]*)))$', 'ssh://lusr\\example@[::1]:1234/D:\\x')",[210054]
"('Description.java', 'org.junit.runner.Description', 'methodAndClassNamePatternGroupOrDefault', '([\\s\\S]*)\\((.*)\\)', 'testLowerGroupCase5[OldRule? false](org.eclipse.jgit.ignore.IgnoreRuleSpecialCasesTest)')","[85652, 92757]"
"('Description.java', 'org.junit.runner.Description', 'methodAndClassNamePatternGroupOrDefault', '([\\s\\S]*)\\((.*)\\)', 'testInserterDiscardsPack(org.eclipse.jgit.internal.storage.dfs.DfsInserterTest)')","[109526, 109636]"
"('URIish.java', 'org.eclipse.jgit.transport.URIish', '<init>', '^([a-z][a-z0-9+-]+)://(?:(?:([^/:@]+)(?::([^\\\\/]+))?@)?((?:[^\\\\/:]+)|(?:\\[[0-9a-f:]+\\]))(?::(\\d+))?((?:/~(?:[^\\\\/]+))?[\\\\/]))?(.+)?$', 'ssh+git://me:wtf@[::1]:80/D:/x')",[197281]
"('Description.java', 'org.junit.runner.Description', 'methodAndClassNamePatternGroupOrDefault', '([\\s\\S]*)\\((.*)\\)', 'testPushRefUpdate(org.eclipse.jgit.api.PushCommandTest)')","[140516, 140644]"
"('URIish.java', 'org.eclipse.jgit.transport.URIish', '<init>', '^(file):([\\\\/](?![\\\\/])((?:[A-Za-z]:)?[\\\\/]?(?:(?:[^\\\\/]+[\\\\/]+)*[^\\\\/]+[\\\\/]*)))$', 'ssh://lusr\\example@example.com/D:\\x')","[223141, 223325]"
"('ChangeIdUtil.java', 'org.eclipse.jgit.util.ChangeIdUtil', 'indexOfChangeId', '(^Change-Id: *I[a-f0-9]{40}$)', 'c')",[37374]
"('URIish.java', 'org.eclipse.jgit.transport.URIish', '<init>', '^(?:([^/:@]+)(?::([^\\\\/]+))?@)?([^\\\\/:]{2,}):([\\\\/](?:(?:[^\\\\/]+[\\\\/]+)*[^\\\\/]+[\\\\/]*))$', '/a/b/c//')",[252515]
"('Description.java', 'org.junit.runner.Description', 'methodAndClassNamePatternGroupOrDefault', '([\\s\\S]*)\\((.*)\\)', 'testContext100(org.eclipse.jgit.diff.DiffFormatterReflowTest)')","[7947, 8159]"
"('Description.java', 'org.junit.runner.Description', 'methodAndClassNamePatternGroupOrDefault', '([\\s\\S]*)\\((.*)\\)', 'testOnlyOption_f1_5_e(org.eclipse.jgit.api.CommitOnlyTest)')","[134941, 136987]"
"('URIish.java', 'org.eclipse.jgit.transport.URIish', '<init>', '^(file):([\\\\/](?![\\\\/])((?:[A-Za-z]:)?[\\\\/]?(?:(?:[^\\\\/]+[\\\\/]+)*[^\\\\/]+[\\\\/]*)))$', 'https://me:wtf@example.com:1234//')",[202870]
"('Description.java', 'org.junit.runner.Description', 'methodAndClassNamePatternGroupOrDefault', '([\\s\\S]*)\\((.*)\\)', 'testOnlyOption_f1_11_a(org.eclipse.jgit.api.CommitOnlyTest)')","[135802, 137889]"
"('Description.java', 'org.junit.runner.Description', 'methodAndClassNamePatternGroupOrDefault', '([\\s\\S]*)\\((.*)\\)', 'testLogWithFilter(org.eclipse.jgit.api.CommitAndLogCommandTest)')","[155059, 155274]"
"('URIish.java', 'org.eclipse.jgit.transport.URIish', '<init>', '^(file):([\\\\/](?![\\\\/])((?:[A-Za-z]:)?[\\\\/]?(?:(?:[^\\\\/]+[\\\\/]+)*[^\\\\/]+[\\\\/]*)))$', 'http://lusr\\example:wtf@[::1]:1234/D:\\x')",[202640]
"('Description.java', 'org.junit.runner.Description', 'methodAndClassNamePatternGroupOrDefault', '([\\s\\S]*)\\((.*)\\)', 'testTimeout_close_Timeout(org.eclipse.jgit.util.io.TimeoutOutputStreamTest)')","[24565, 24762]"
"('FastIgnoreRule.java', 'org.eclipse.jgit.ignore.FastIgnoreRule', 'isMatch', '[A\\p{Ll}C3-5]', 'B')",[99493]
"('URIish.java', 'org.eclipse.jgit.transport.URIish', '<init>', '^([a-z][a-z0-9+-]+)://(?:(?:([^/:@]+)(?::([^\\\\/]+))?@)?((?:[^\\\\/:]+)|(?:\\[[0-9a-f:]+\\]))(?::(\\d+))?((?:/~(?:[^\\\\/]+))?[\\\\/]))?(.+)?$', 'http://me@[::1]//')","[228178, 228362]"
"('URIish.java', 'org.eclipse.jgit.transport.URIish', '<init>', '^([a-z][a-z0-9+-]+)://(?:(?:([^/:@]+)(?::([^\\\\/]+))?@)?((?:[^\\\\/:]+)|(?:\\[[0-9a-f:]+\\]))(?::(\\d+))?((?:/~(?:[^\\\\/]+))?[\\\\/]))?(.+)?$', 'file:///tmp/jgit_test_4120846694434054961_tmp/tmp_6485671899387644126/.git/')",[59827]
"('Description.java', 'org.junit.runner.Description', 'methodAndClassNamePatternGroupOrDefault', '([\\s\\S]*)\\((.*)\\)', 'testStringOfPearls_FilePath1(org.eclipse.jgit.revwalk.TreeRevFilterTest)')","[181246, 181352]"
"('Description.java', 'org.junit.runner.Description', 'methodAndClassNamePatternGroupOrDefault', '([\\s\\S]*)\\((.*)\\)', 'testPackFormat_SmallObject(org.eclipse.jgit.internal.storage.file.UnpackedObjectTest)')","[121811, 122139]"
"('Description.java', 'org.junit.runner.Description', 'methodAndClassNamePatternGroupOrDefault', '([\\s\\S]*)\\((.*)\\)', 'testStringOfPearls_DirPath2(org.eclipse.jgit.revwalk.TreeRevFilterTest)')","[181309, 181418]"
"('Description.java', 'org.junit.runner.Description', 'methodAndClassNamePatternGroupOrDefault', '([\\s\\S]*)\\((.*)\\)', 'testTimeout_readByte_Timeout(org.eclipse.jgit.util.io.TimeoutInputStreamTest)')","[24078, 24250]"
"('Description.java', 'org.junit.runner.Description', 'methodAndClassNamePatternGroupOrDefault', '([\\s\\S]*)\\((.*)\\)', 'testTwoCommitDeepTree1(org.eclipse.jgit.revwalk.ObjectWalkTest)')","[177402, 177596]"
"('URIish.java', 'org.eclipse.jgit.transport.URIish', '<init>', '^([a-z][a-z0-9+-]+)://(?:(?:([^/:@]+)(?::([^\\\\/]+))?@)?((?:[^\\\\/:]+)|(?:\\[[0-9a-f:]+\\]))(?::(\\d+))?((?:/~(?:[^\\\\/]+))?[\\\\/]))?(.+)?$', 'https://lusr\\example:wtf@1.2.3.4:80//')",[206443]
"('Description.java', 'org.junit.runner.Description', 'methodAndClassNamePatternGroupOrDefault', '([\\s\\S]*)\\((.*)\\)', 'testPrefixCompare_17(org.eclipse.jgit.lib.AbbreviatedObjectIdTest)')","[55336, 55871]"
"('Description.java', 'org.junit.runner.Description', 'methodAndClassNamePatternGroupOrDefault', '([\\s\\S]*)\\((.*)\\)', 'testOurs(org.eclipse.jgit.merge.SimpleMergeTest)')","[15522, 15800]"
"('Description.java', 'org.junit.runner.Description', 'methodAndClassNamePatternGroupOrDefault', '([\\s\\S]*)\\((.*)\\)', 'org.eclipse.jgit.diff.MyersDiffTest')","[8394, 9401]"
"('Description.java', 'org.junit.runner.Description', 'methodAndClassNamePatternGroupOrDefault', '([\\s\\S]*)\\((.*)\\)', 'testKeepFiles(org.eclipse.jgit.internal.storage.file.GcKeepFilesTest)')","[114853, 114875]"
"('Description.java', 'org.junit.runner.Description', 'methodAndClassNamePatternGroupOrDefault', '([\\s\\S]*)\\((.*)\\)', 'testHasChangeidWithSpacesBeforeId(org.eclipse.jgit.util.ChangeIdUtilTest)')","[32056, 32811]"
"('Description.java', 'org.junit.runner.Description', 'methodAndClassNamePatternGroupOrDefault', '([\\s\\S]*)\\((.*)\\)', 'testLsRemoteWithTags(org.eclipse.jgit.api.LsRemoteCommandTest)')","[138762, 138847]"
"('Description.java', 'org.junit.runner.Description', 'methodAndClassNamePatternGroupOrDefault', '([\\s\\S]*)\\((.*)\\)', 'testFastForward(org.eclipse.jgit.api.MergeCommandTest)')","[126223, 127131]"
"('URIish.java', 'org.eclipse.jgit.transport.URIish', '<init>', '^(file):([\\\\/](?![\\\\/])((?:[A-Za-z]:)?[\\\\/]?(?:(?:[^\\\\/]+[\\\\/]+)*[^\\\\/]+[\\\\/]*)))$', 'ssh://l usr\\example.com@1.2.3.4:80/D:/x')",[208720]
"('Description.java', 'org.junit.runner.Description', 'methodAndClassNamePatternGroupOrDefault', '([\\s\\S]*)\\((.*)\\)', 'invalidDestinationDoubleSlashes(org.eclipse.jgit.transport.RefSpecTest)')","[186549, 187269]"
"('Description.java', 'org.junit.runner.Description', 'methodAndClassNamePatternGroupOrDefault', '([\\s\\S]*)\\((.*)\\)', 'testAddGetAndContains(org.eclipse.jgit.lib.ObjectIdOwnerMapTest)')","[59528, 59680]"
"('FastIgnoreRule.java', 'org.eclipse.jgit.ignore.FastIgnoreRule', 'isMatch', '[b-d][ab]', 'ca')",[100457]
"('Description.java', 'org.junit.runner.Description', 'methodAndClassNamePatternGroupOrDefault', '([\\s\\S]*)\\((.*)\\)', 'shouldThrowIAEWhenTreeWalkHasLessThanTwoTrees(org.eclipse.jgit.diff.DiffEntryTest)')","[10082, 10344]"
"('Description.java', 'org.junit.runner.Description', 'methodAndClassNamePatternGroupOrDefault', '([\\s\\S]*)\\((.*)\\)', 'testPushWithRefSpecFromConfig(org.eclipse.jgit.api.PushCommandTest)')","[140558, 140688]"
"('Description.java', 'org.junit.runner.Description', 'methodAndClassNamePatternGroupOrDefault', '([\\s\\S]*)\\((.*)\\)', 'testAlreadyExists(org.eclipse.jgit.api.CheckoutCommandTest)')","[149451, 149987]"
"('Description.java', 'org.junit.runner.Description', 'methodAndClassNamePatternGroupOrDefault', '([\\s\\S]*)\\((.*)\\)', 'test001_toString(org.eclipse.jgit.lib.ObjectIdTest)')","[53612, 53894]"
"('Description.java', 'org.junit.runner.Description', 'methodAndClassNamePatternGroupOrDefault', '([\\s\\S]*)\\((.*)\\)', 'testTwoGroupsCase3[OldRule? true](org.eclipse.jgit.ignore.IgnoreRuleSpecialCasesTest)')","[89813, 96897]"
"('URIish.java', 'org.eclipse.jgit.transport.URIish', '<init>', '^(file):([\\\\/](?![\\\\/])((?:[A-Za-z]:)?[\\\\/]?(?:(?:[^\\\\/]+[\\\\/]+)*[^\\\\/]+[\\\\/]*)))$', 'ssh+git://me:wtf@1.2.3.4:80//')",[196798]
"('URIish.java', 'org.eclipse.jgit.transport.URIish', '<init>', '^([a-z][a-z0-9+-]+)://(?:(?:([^/:@]+)(?::([^\\\\/]+))?@)?((?:[^\\\\/:]+)|(?:\\[[0-9a-f:]+\\]))(?::(\\d+))?((?:/~(?:[^\\\\/]+))?[\\\\/]))?(.+)?$', 'ssh://lusr\\example:wtf@[::1]:80/D:/x')",[195387]
"('Description.java', 'org.junit.runner.Description', 'methodAndClassNamePatternGroupOrDefault', '([\\s\\S]*)\\((.*)\\)', 'testIsWhitespace(org.eclipse.jgit.util.RawCharUtilTest)')","[23122, 23188]"
"('URIish.java', 'org.eclipse.jgit.transport.URIish', '<init>', '^(file):([\\\\/](?![\\\\/])((?:[A-Za-z]:)?[\\\\/]?(?:(?:[^\\\\/]+[\\\\/]+)*[^\\\\/]+[\\\\/]*)))$', 'file:///tmp/jgit_test_4565836515503464262_tmp/tmp_731711786754578526/.git/')","[140760, 140896]"
"('Description.java', 'org.junit.runner.Description', 'methodAndClassNamePatternGroupOrDefault', '([\\s\\S]*)\\((.*)\\)', 'testGetBitmapWithOneXor(org.eclipse.jgit.internal.storage.file.StoredBitmapTest)')","[109989, 110055]"
"('Description.java', 'org.junit.runner.Description', 'methodAndClassNamePatternGroupOrDefault', '([\\s\\S]*)\\((.*)\\)', 'testCherryPickOverExecutableChangeOnNonExectuableFileSystem(org.eclipse.jgit.api.CherryPickCommandTest)')","[168173, 168426]"
"('Description.java', 'org.junit.runner.Description', 'methodAndClassNamePatternGroupOrDefault', '([\\s\\S]*)\\((.*)\\)', 'workingDirectoryModify(org.eclipse.jgit.api.StashCreateCommandTest)')","[156093, 156442]"
"('Description.java', 'org.junit.runner.Description', 'methodAndClassNamePatternGroupOrDefault', '([\\s\\S]*)\\((.*)\\)', 'testSpaceGroupCase0[OldRule? false](org.eclipse.jgit.ignore.IgnoreRuleSpecialCasesTest)')","[86043, 93148]"
"('Description.java', 'org.junit.runner.Description', 'methodAndClassNamePatternGroupOrDefault', '([\\s\\S]*)\\((.*)\\)', 'testCreateBranchOnCheckout(org.eclipse.jgit.api.CheckoutCommandTest)')","[149472, 150009]"
"('Description.java', 'org.junit.runner.Description', 'methodAndClassNamePatternGroupOrDefault', '([\\s\\S]*)\\((.*)\\)', 'testMixedGroupCase3[OldRule? false](org.eclipse.jgit.ignore.IgnoreRuleSpecialCasesTest)')","[85192, 92297]"
"('FastIgnoreRule.java', 'org.eclipse.jgit.ignore.FastIgnoreRule', 'isMatch', '[a-c-e]', 'e')",[99311]
"('Description.java', 'org.junit.runner.Description', 'methodAndClassNamePatternGroupOrDefault', '([\\s\\S]*)\\((.*)\\)', 'testParse_NoMessage(org.eclipse.jgit.revwalk.RevTagParseTest)')","[179562, 179966]"
"('Description.java', 'org.junit.runner.Description', 'methodAndClassNamePatternGroupOrDefault', '([\\s\\S]*)\\((.*)\\)', 'testVerySimpleWildCardCase2[OldRule? true](org.eclipse.jgit.ignore.IgnoreRuleSpecialCasesTest)')","[88571, 95655]"
"('FastIgnoreRule.java', 'org.eclipse.jgit.ignore.FastIgnoreRule', 'isMatch', '[\\p{Cntrl}]', 'a')",[99961]
"('Description.java', 'org.junit.runner.Description', 'methodAndClassNamePatternGroupOrDefault', '([\\s\\S]*)\\((.*)\\)', 'checkMergeConflictingTreesWithoutIndex(org.eclipse.jgit.merge.ResolveMergerTest)')","[12658, 13016]"
"('URIish.java', 'org.eclipse.jgit.transport.URIish', '<init>', '^(file):([\\\\/](?![\\\\/])((?:[A-Za-z]:)?[\\\\/]?(?:(?:[^\\\\/]+[\\\\/]+)*[^\\\\/]+[\\\\/]*)))$', 'http://1.2.3.4/D:/x')","[241127, 241311, 242231, 242415, 243335, 243519]"
"('Description.java', 'org.junit.runner.Description', 'methodAndClassNamePatternGroupOrDefault', '([\\s\\S]*)\\((.*)\\)', 'testCharClass[OldRule? true](org.eclipse.jgit.ignore.FastIgnoreRuleTest)')","[77401, 78137]"
"('Description.java', 'org.junit.runner.Description', 'methodAndClassNamePatternGroupOrDefault', '([\\s\\S]*)\\((.*)\\)', 'org.eclipse.jgit.patch.GetTextTest')","[1582, 1965]"
"('URIish.java', 'org.eclipse.jgit.transport.URIish', '<init>', '^([a-z][a-z0-9+-]+)://(?:(?:([^/:@]+)(?::([^\\\\/]+))?@)?((?:[^\\\\/:]+)|(?:\\[[0-9a-f:]+\\]))(?::(\\d+))?((?:/~(?:[^\\\\/]+))?[\\\\/]))?(.+)?$', 'ssh://lusr\\example:wtf@example.com:1234/D:/x')",[194467]
"('Description.java', 'org.junit.runner.Description', 'methodAndClassNamePatternGroupOrDefault', '([\\s\\S]*)\\((.*)\\)', 'testCloneRepositoryOnlyOneBranch(org.eclipse.jgit.api.CloneCommandTest)')","[159031, 159333]"
"('Description.java', 'org.junit.runner.Description', 'methodAndClassNamePatternGroupOrDefault', '([\\s\\S]*)\\((.*)\\)', 'testDiffNullToNull(org.eclipse.jgit.diff.DiffFormatterTest)')","[2950, 3208]"
"('URIish.java', 'org.eclipse.jgit.transport.URIish', '<init>', '^(file):([\\\\/](?![\\\\/])((?:[A-Za-z]:)?[\\\\/]?(?:(?:[^\\\\/]+[\\\\/]+)*[^\\\\/]+[\\\\/]*)))$', 'ssh://me@1.2.3.4:80//abc')",[207570]
"('FastIgnoreRule.java', 'org.eclipse.jgit.ignore.FastIgnoreRule', 'isMatch', '[a\\[]', 'a')",[99051]
"('URIish.java', 'org.eclipse.jgit.transport.URIish', '<init>', '^([a-z][a-z0-9+-]+)://(?:(?:([^/:@]+)(?::([^\\\\/]+))?@)?((?:[^\\\\/:]+)|(?:\\[[0-9a-f:]+\\]))(?::(\\d+))?((?:/~(?:[^\\\\/]+))?[\\\\/]))?(.+)?$', 'http://l usr\\example.com@1.2.3.4//abc')","[228960, 229144]"
"('Description.java', 'org.junit.runner.Description', 'methodAndClassNamePatternGroupOrDefault', '([\\s\\S]*)\\((.*)\\)', 'testRefsCacheAfterUpdateLooseOnly(org.eclipse.jgit.internal.storage.file.RefUpdateTest)')","[120138, 120984]"
"('URIish.java', 'org.eclipse.jgit.transport.URIish', '<init>', '^([a-z][a-z0-9+-]+)://(?:(?:([^/:@]+)(?::([^\\\\/]+))?@)?((?:[^\\\\/:]+)|(?:\\[[0-9a-f:]+\\]))(?::(\\d+))?((?:/~(?:[^\\\\/]+))?[\\\\/]))?(.+)?$', 'ssh://l usr\\example.com@[::1]:80/D:/x')",[209111]
"('Description.java', 'org.junit.runner.Description', 'methodAndClassNamePatternGroupOrDefault', '([\\s\\S]*)\\((.*)\\)', 'testOursEqualsTheirs(org.eclipse.jgit.notes.NoteMapMergerTest)')","[259569, 259939]"
"('Description.java', 'org.junit.runner.Description', 'methodAndClassNamePatternGroupOrDefault', '([\\s\\S]*)\\((.*)\\)', 'testXDigitGroupCase7(org.eclipse.jgit.fnmatch.FileNameMatcherTest)')","[44086, 47472]"
"('URIish.java', 'org.eclipse.jgit.transport.URIish', '<init>', '^(file):([\\\\/](?![\\\\/])((?:[A-Za-z]:)?[\\\\/]?(?:(?:[^\\\\/]+[\\\\/]+)*[^\\\\/]+[\\\\/]*)))$', 'http://lusr\\example:wtf@1.2.3.4:1234//')",[202134]
"('URIish.java', 'org.eclipse.jgit.transport.URIish', '<init>', '^([a-z][a-z0-9+-]+)://(?:(?:([^/:@]+)(?::([^\\\\/]+))?@)?((?:[^\\\\/:]+)|(?:\\[[0-9a-f:]+\\]))(?::(\\d+))?((?:/~(?:[^\\\\/]+))?[\\\\/]))?(.+)?$', 'ssh://lusr\\example@1.2.3.4:80/D:\\x')",[209893]
"('Description.java', 'org.junit.runner.Description', 'methodAndClassNamePatternGroupOrDefault', '([\\s\\S]*)\\((.*)\\)', 'testRebaseWithUncommittedMasterChangeOtherCommit(org.eclipse.jgit.api.RebaseCommandTest)')","[132398, 133932]"
"('Description.java', 'org.junit.runner.Description', 'methodAndClassNamePatternGroupOrDefault', '([\\s\\S]*)\\((.*)\\)', 'testOnlyOption_f1_12_a(org.eclipse.jgit.api.CommitOnlyTest)')","[135907, 137999]"
"('URIish.java', 'org.eclipse.jgit.transport.URIish', '<init>', '^([a-z][a-z0-9+-]+)://(?:(?:([^/:@]+)(?::([^\\\\/]+))?@)?((?:[^\\\\/:]+)|(?:\\[[0-9a-f:]+\\]))(?::(\\d+))?((?:/~(?:[^\\\\/]+))?[\\\\/]))?(.+)?$', 'ssh://me@example.com//')","[220818, 221002]"
"('ChangeIdUtil.java', 'org.eclipse.jgit.util.ChangeIdUtil', 'indexOfChangeId', '(^Change-Id: *I[a-f0-9]{40}$)', 'oneliner')",[33476]
"('URIish.java', 'org.eclipse.jgit.transport.URIish', '<init>', '^([a-z][a-z0-9+-]+)://(?:(?:([^/:@]+)(?::([^\\\\/]+))?@)?((?:[^\\\\/:]+)|(?:\\[[0-9a-f:]+\\]))(?::(\\d+))?((?:/~(?:[^\\\\/]+))?[\\\\/]))?(.+)?$', 'http://me@[::1]:80//abc')",[214585]
"('Description.java', 'org.junit.runner.Description', 'methodAndClassNamePatternGroupOrDefault', '([\\s\\S]*)\\((.*)\\)', 'testManySolutionsCase3(org.eclipse.jgit.fnmatch.FileNameMatcherTest)')","[43603, 46966]"
"('URIish.java', 'org.eclipse.jgit.transport.URIish', '<init>', '^(file):([\\\\/](?![\\\\/])((?:[A-Za-z]:)?[\\\\/]?(?:(?:[^\\\\/]+[\\\\/]+)*[^\\\\/]+[\\\\/]*)))$', 'https://me:wtf@example.com:80//abc')",[203180]
"('Description.java', 'org.junit.runner.Description', 'methodAndClassNamePatternGroupOrDefault', '([\\s\\S]*)\\((.*)\\)', 'org.eclipse.jgit.dircache.DirCacheLargePathTest')","[172327, 173242]"
"('Description.java', 'org.junit.runner.Description', 'methodAndClassNamePatternGroupOrDefault', '([\\s\\S]*)\\((.*)\\)', 'testDequote_Empty1(org.eclipse.jgit.util.QuotedStringBourneStyleTest)')","[38352, 38564]"
"('URIish.java', 'org.eclipse.jgit.transport.URIish', '<init>', '^([a-z][a-z0-9+-]+)://(?:(?:([^/:@]+)(?::([^\\\\/]+))?@)?((?:[^\\\\/:]+)|(?:\\[[0-9a-f:]+\\]))(?::(\\d+))?((?:/~(?:[^\\\\/]+))?[\\\\/]))?(.+)?$', 'ssh+git://lusr\\example:wtf@example.com:1234/D:/x')",[198569]
"('URIish.java', 'org.eclipse.jgit.transport.URIish', '<init>', '^([a-z][a-z0-9+-]+)://(?:(?:([^/:@]+)(?::([^\\\\/]+))?@)?((?:[^\\\\/:]+)|(?:\\[[0-9a-f:]+\\]))(?::(\\d+))?((?:/~(?:[^\\\\/]+))?[\\\\/]))?(.+)?$', 'ssh://lusr\\example:wtf@example.com:1234//')",[194375]
"('URIish.java', 'org.eclipse.jgit.transport.URIish', '<init>', '^([a-z][a-z0-9+-]+)://(?:(?:([^/:@]+)(?::([^\\\\/]+))?@)?((?:[^\\\\/:]+)|(?:\\[[0-9a-f:]+\\]))(?::(\\d+))?((?:/~(?:[^\\\\/]+))?[\\\\/]))?(.+)?$', 'http://me:wtf@[::1]:80/D:/x')",[200593]
"('URIish.java', 'org.eclipse.jgit.transport.URIish', '<init>', '^(?:([^/:@]+)(?::([^\\\\/]+))?@)?([^\\\\/:]{2,}):([\\\\/](?:(?:[^\\\\/]+[\\\\/]+)*[^\\\\/]+[\\\\/]*))$', '/tmp/jgit_test_5912311065364399188_tmp/tmp_6780050081060399522')","[151501, 151641, 151790, 151940]"
"('Description.java', 'org.junit.runner.Description', 'methodAndClassNamePatternGroupOrDefault', '([\\s\\S]*)\\((.*)\\)', 'testCopyMetaDataWithStage(org.eclipse.jgit.dircache.DirCacheEntryTest)')","[172622, 172749]"
"('Description.java', 'org.junit.runner.Description', 'methodAndClassNamePatternGroupOrDefault', '([\\s\\S]*)\\((.*)\\)', 'testClear(org.eclipse.jgit.lib.ObjectIdOwnerMapTest)')","[59444, 59592]"
"('Description.java', 'org.junit.runner.Description', 'methodAndClassNamePatternGroupOrDefault', '([\\s\\S]*)\\((.*)\\)', 'testDigitGroupCase2[OldRule? true](org.eclipse.jgit.ignore.IgnoreRuleSpecialCasesTest)')","[89974, 97058]"
"('URIish.java', 'org.eclipse.jgit.transport.URIish', '<init>', '^(file):([\\\\/](?![\\\\/])((?:[A-Za-z]:)?[\\\\/]?(?:(?:[^\\\\/]+[\\\\/]+)*[^\\\\/]+[\\\\/]*)))$', 'http://lusr\\example:wtf@example.com:1234/D:/x')",[201858]
"('Description.java', 'org.junit.runner.Description', 'methodAndClassNamePatternGroupOrDefault', '([\\s\\S]*)\\((.*)\\)', 'testExactRename_OneRenameOneModify(org.eclipse.jgit.diff.RenameDetectorTest)')","[4393, 4944]"
"('Description.java', 'org.junit.runner.Description', 'methodAndClassNamePatternGroupOrDefault', '([\\s\\S]*)\\((.*)\\)', 'testNonTranslatedBundle(org.eclipse.jgit.nls.TranslationBundleTest)')","[40705, 40792]"
"('URIish.java', 'org.eclipse.jgit.transport.URIish', '<init>', '^([a-z][a-z0-9+-]+)://(?:(?:([^/:@]+)(?::([^\\\\/]+))?@)?((?:[^\\\\/:]+)|(?:\\[[0-9a-f:]+\\]))(?::(\\d+))?((?:/~(?:[^\\\\/]+))?[\\\\/]))?(.+)?$', 'https://l usr\\example.com:wtf@1.2.3.4:1234//abc')",[205201]
"('Description.java', 'org.junit.runner.Description', 'methodAndClassNamePatternGroupOrDefault', '([\\s\\S]*)\\((.*)\\)', 'testWithPostOrder_EnterSubtree(org.eclipse.jgit.treewalk.PostOrderTreeWalkTest)')","[263367, 263499]"
"('URIish.java', 'org.eclipse.jgit.transport.URIish', '<init>', '^([a-z][a-z0-9+-]+)://(?:(?:([^/:@]+)(?::([^\\\\/]+))?@)?((?:[^\\\\/:]+)|(?:\\[[0-9a-f:]+\\]))(?::(\\d+))?((?:/~(?:[^\\\\/]+))?[\\\\/]))?(.+)?$', 'https://me@1.2.3.4//abc')","[231168, 231352]"
"('Description.java', 'org.junit.runner.Description', 'methodAndClassNamePatternGroupOrDefault', '([\\s\\S]*)\\((.*)\\)', 'testAlias_OptionsSet(org.eclipse.jgit.transport.OpenSshConfigTest)')","[195764, 196123]"
"('URIish.java', 'org.eclipse.jgit.transport.URIish', '<init>', '^(file):([\\\\/](?![\\\\/])((?:[A-Za-z]:)?[\\\\/]?(?:(?:[^\\\\/]+[\\\\/]+)*[^\\\\/]+[\\\\/]*)))$', 'file:/tmp/jgit_test_7662726567108576804_tmp/tmp_1579710296504973156.git/')",[7234]
"('Description.java', 'org.junit.runner.Description', 'methodAndClassNamePatternGroupOrDefault', '([\\s\\S]*)\\((.*)\\)', 'testTwoGroupsCase2[OldRule? false](org.eclipse.jgit.ignore.IgnoreRuleSpecialCasesTest)')","[86227, 93332]"
"('Description.java', 'org.junit.runner.Description', 'methodAndClassNamePatternGroupOrDefault', '([\\s\\S]*)\\((.*)\\)', 'testCreateEmpty(org.eclipse.jgit.diff.EditTest)')","[5947, 6289]"
"('Description.java', 'org.junit.runner.Description', 'methodAndClassNamePatternGroupOrDefault', '([\\s\\S]*)\\((.*)\\)', 'testFilePathCase2(org.eclipse.jgit.fnmatch.FileNameMatcherTest)')","[43309, 46658]"
"('Description.java', 'org.junit.runner.Description', 'methodAndClassNamePatternGroupOrDefault', '([\\s\\S]*)\\((.*)\\)', 'testLargeTreesWithConflict(org.eclipse.jgit.notes.NoteMapMergerTest)')","[259527, 259895]"
"('Description.java', 'org.junit.runner.Description', 'methodAndClassNamePatternGroupOrDefault', '([\\s\\S]*)\\((.*)\\)', 'testAdd_InGitSortOrder(org.eclipse.jgit.dircache.DirCacheBuilderTest)')","[170953, 171150]"
"('URIish.java', 'org.eclipse.jgit.transport.URIish', '<init>', '^([a-z][a-z0-9+-]+)://(?:(?:([^/:@]+)(?::([^\\\\/]+))?@)?((?:[^\\\\/:]+)|(?:\\[[0-9a-f:]+\\]))(?::(\\d+))?((?:/~(?:[^\\\\/]+))?[\\\\/]))?(.+)?$', '\\\\some\\place')","[191271, 191386]"
"('Description.java', 'org.junit.runner.Description', 'methodAndClassNamePatternGroupOrDefault', '([\\s\\S]*)\\((.*)\\)', 'testValidCommitNoParent(org.eclipse.jgit.lib.ObjectCheckerTest)')","[50096, 52660]"
"('Description.java', 'org.junit.runner.Description', 'methodAndClassNamePatternGroupOrDefault', '([\\s\\S]*)\\((.*)\\)', 'testInvalidRefName(org.eclipse.jgit.api.CheckoutCommandTest)')","[149409, 149943]"
"('URIish.java', 'org.eclipse.jgit.transport.URIish', '<init>', '^(file):([\\\\/](?![\\\\/])((?:[A-Za-z]:)?[\\\\/]?(?:(?:[^\\\\/]+[\\\\/]+)*[^\\\\/]+[\\\\/]*)))$', 'ssh://lusr\\example@1.2.3.4:80//')",[209732]
"('Description.java', 'org.junit.runner.Description', 'methodAndClassNamePatternGroupOrDefault', '([\\s\\S]*)\\((.*)\\)', 'test_repack(org.eclipse.jgit.internal.storage.file.RefDirectoryTest)')","[110761, 111933]"
"('Description.java', 'org.junit.runner.Description', 'methodAndClassNamePatternGroupOrDefault', '([\\s\\S]*)\\((.*)\\)', 'testFillToNullCommit(org.eclipse.jgit.revwalk.RevCommitListTest)')","[176726, 176876]"
"('FastIgnoreRule.java', 'org.eclipse.jgit.ignore.FastIgnoreRule', 'isMatch', '[\\p{Space}]', ' ')",[100273]
"('Description.java', 'org.junit.runner.Description', 'methodAndClassNamePatternGroupOrDefault', '([\\s\\S]*)\\((.*)\\)', 'testFileModeChangeWithNoContentChangeUpdate(org.eclipse.jgit.lib.DirCacheCheckoutTest)')","[61230, 62219]"
"('URIish.java', 'org.eclipse.jgit.transport.URIish', '<init>', '^([a-z][a-z0-9+-]+)://(?:(?:([^/:@]+)(?::([^\\\\/]+))?@)?((?:[^\\\\/:]+)|(?:\\[[0-9a-f:]+\\]))(?::(\\d+))?((?:/~(?:[^\\\\/]+))?[\\\\/]))?(.+)?$', 'ssh://lusr\\example@example.com//')","[223026, 223210]"
"('Description.java', 'org.junit.runner.Description', 'methodAndClassNamePatternGroupOrDefault', '([\\s\\S]*)\\((.*)\\)', 'testFindOnEmpty(org.eclipse.jgit.dircache.DirCacheBasicTest)')","[171296, 171550]"
"('URIish.java', 'org.eclipse.jgit.transport.URIish', '<init>', '^(file):([\\\\/](?![\\\\/])((?:[A-Za-z]:)?[\\\\/]?(?:(?:[^\\\\/]+[\\\\/]+)*[^\\\\/]+[\\\\/]*)))$', 'https://l usr\\example.com@example.com//abc')","[231881, 232065]"
"('Description.java', 'org.junit.runner.Description', 'methodAndClassNamePatternGroupOrDefault', '([\\s\\S]*)\\((.*)\\)', 'testWriteString2(org.eclipse.jgit.transport.PacketLineOutTest)')","[191707, 191882]"
"('URIish.java', 'org.eclipse.jgit.transport.URIish', '<init>', '^([a-z][a-z0-9+-]+)://(?:(?:([^/:@]+)(?::([^\\\\/]+))?@)?((?:[^\\\\/:]+)|(?:\\[[0-9a-f:]+\\]))(?::(\\d+))?((?:/~(?:[^\\\\/]+))?[\\\\/]))?(.+)?$', 'ssh://me@example.com:1234//abc')",[207041]
"('URIish.java', 'org.eclipse.jgit.transport.URIish', '<init>', '^([a-z][a-z0-9+-]+)://(?:(?:([^/:@]+)(?::([^\\\\/]+))?@)?((?:[^\\\\/:]+)|(?:\\[[0-9a-f:]+\\]))(?::(\\d+))?((?:/~(?:[^\\\\/]+))?[\\\\/]))?(.+)?$', 'https://lusr\\example@1.2.3.4:1234/D:\\x')",[220220]
"('Description.java', 'org.junit.runner.Description', 'methodAndClassNamePatternGroupOrDefault', '([\\s\\S]*)\\((.*)\\)', 'testDotAsteriskMatch[OldRule? true](org.eclipse.jgit.ignore.FastIgnoreRuleTest)')","[77562, 78298]"
"('URIish.java', 'org.eclipse.jgit.transport.URIish', '<init>', '^(?:([^/:@]+)(?::([^\\\\/]+))?@)?([^\\\\/:]{2,}):([\\\\/](?:(?:[^\\\\/]+[\\\\/]+)*[^\\\\/]+[\\\\/]*))$', '/abc/')",[253044]
"('Description.java', 'org.junit.runner.Description', 'methodAndClassNamePatternGroupOrDefault', '([\\s\\S]*)\\((.*)\\)', 'shouldRaiseErrorOnEmptyURI(org.eclipse.jgit.transport.URIishTest)')","[189365, 190634]"
"('Description.java', 'org.junit.runner.Description', 'methodAndClassNamePatternGroupOrDefault', '([\\s\\S]*)\\((.*)\\)', 'testEmpty(org.eclipse.jgit.revwalk.LIFORevQueueTest)')","[176410, 176516]"
"('Description.java', 'org.junit.runner.Description', 'methodAndClassNamePatternGroupOrDefault', '([\\s\\S]*)\\((.*)\\)', 'testDiffTwoCommits(org.eclipse.jgit.api.DiffCommandTest)')","[166401, 166530]"
"('Description.java', 'org.junit.runner.Description', 'methodAndClassNamePatternGroupOrDefault', '([\\s\\S]*)\\((.*)\\)', 'testToString(org.eclipse.jgit.ignore.IgnoreNodeTest)')","[108082, 108378]"
"('ChangeIdUtil.java', 'org.eclipse.jgit.util.ChangeIdUtil', 'insertId', '^(Bug|Issue)[a-zA-Z0-9-]*:.*$', '[bracket]')",[33425]
"('Description.java', 'org.junit.runner.Description', 'methodAndClassNamePatternGroupOrDefault', '([\\s\\S]*)\\((.*)\\)', 'testSegments[OldRule? false](org.eclipse.jgit.ignore.FastIgnoreRuleTest)')","[77311, 78068]"
"('ChangeIdUtil.java', 'org.eclipse.jgit.util.ChangeIdUtil', 'indexOfChangeId', '(^Change-Id: *I[a-f0-9]{40}$)', 'Some foooter lines')","[155442, 155587]"
"('Description.java', 'org.junit.runner.Description', 'methodAndClassNamePatternGroupOrDefault', '([\\s\\S]*)\\((.*)\\)', 'testAddWithParameterUpdate(org.eclipse.jgit.api.AddCommandTest)')","[164600, 165030]"
"('URIish.java', 'org.eclipse.jgit.transport.URIish', '<init>', '^([a-z][a-z0-9+-]+)://(?:(?:([^/:@]+)(?::([^\\\\/]+))?@)?((?:[^\\\\/:]+)|(?:\\[[0-9a-f:]+\\]))(?::(\\d+))?((?:/~(?:[^\\\\/]+))?[\\\\/]))?(.+)?$', 'http://me@[::1]/D:\\x')","[228316, 228500]"
"('Description.java', 'org.junit.runner.Description', 'methodAndClassNamePatternGroupOrDefault', '([\\s\\S]*)\\((.*)\\)', 'testModifiedAndRenamed(org.eclipse.jgit.api.MergeCommandTest)')","[126706, 127637]"
"('URIish.java', 'org.eclipse.jgit.transport.URIish', '<init>', '^([a-z][a-z0-9+-]+)://(?:(?:([^/:@]+)(?::([^\\\\/]+))?@)?((?:[^\\\\/:]+)|(?:\\[[0-9a-f:]+\\]))(?::(\\d+))?((?:/~(?:[^\\\\/]+))?[\\\\/]))?(.+)?$', 'http://l usr\\example.com@example.com:80/D:/x')",[214999]
"('Description.java', 'org.junit.runner.Description', 'methodAndClassNamePatternGroupOrDefault', '([\\s\\S]*)\\((.*)\\)', 'testForbiddenWindowsNamesOnUnixEgCon(org.eclipse.jgit.lib.DirCacheCheckoutMaliciousPathTest)')","[67096, 68009]"
"('URIish.java', 'org.eclipse.jgit.transport.URIish', '<init>', '^([a-z][a-z0-9+-]+)://(?:(?:([^/:@]+)(?::([^\\\\/]+))?@)?((?:[^\\\\/:]+)|(?:\\[[0-9a-f:]+\\]))(?::(\\d+))?((?:/~(?:[^\\\\/]+))?[\\\\/]))?(.+)?$', 'https://lusr\\example:wtf@example.com:80//')",[206075]
"('URIish.java', 'org.eclipse.jgit.transport.URIish', '<init>', '^(file):([\\\\/](?![\\\\/])((?:[A-Za-z]:)?[\\\\/]?(?:(?:[^\\\\/]+[\\\\/]+)*[^\\\\/]+[\\\\/]*)))$', 'https://me:wtf@example.com:80/D:\\x')",[203461]
"('Description.java', 'org.junit.runner.Description', 'methodAndClassNamePatternGroupOrDefault', '([\\s\\S]*)\\((.*)\\)', 'logAllCommitsWithSkipAndMaxCount(org.eclipse.jgit.api.LogCommandTest)')","[130757, 130907]"
"('Description.java', 'org.junit.runner.Description', 'methodAndClassNamePatternGroupOrDefault', '([\\s\\S]*)\\((.*)\\)', 'testEditDelete(org.eclipse.jgit.notes.DefaultNoteMergerTest)')","[260723, 260854]"
"('URIish.java', 'org.eclipse.jgit.transport.URIish', '<init>', '^(file):([\\\\/](?![\\\\/])((?:[A-Za-z]:)?[\\\\/]?(?:(?:[^\\\\/]+[\\\\/]+)*[^\\\\/]+[\\\\/]*)))$', '/tmp/jgit_test_1060628017969836137_tmp/tmp_884518266944927743.git')","[185671, 185849]"
"('Description.java', 'org.junit.runner.Description', 'methodAndClassNamePatternGroupOrDefault', '([\\s\\S]*)\\((.*)\\)', 'testNotEquals_SameLength(org.eclipse.jgit.lib.AbbreviatedObjectIdTest)')","[55168, 55695]"
"('Description.java', 'org.junit.runner.Description', 'methodAndClassNamePatternGroupOrDefault', '([\\s\\S]*)\\((.*)\\)', 'org.eclipse.jgit.lib.ConfigTest')","[69390, 70898]"
"('URIish.java', 'org.eclipse.jgit.transport.URIish', '<init>', '^([\\\\/]?((?:[A-Za-z]:)?[\\\\/]?(?:(?:[^\\\\/]+[\\\\/]+)*[^\\\\/]+[\\\\/]*)))$', '/tmp/jgit_test_4869566695306036567_tmp/tmp_8360922162679768520')","[152090, 152235, 152400]"
"('Description.java', 'org.junit.runner.Description', 'methodAndClassNamePatternGroupOrDefault', '([\\s\\S]*)\\((.*)\\)', 'untrackedFileConflictsWithCommit(org.eclipse.jgit.api.StashApplyCommandTest)')","[142939, 143511]"
"('URIish.java', 'org.eclipse.jgit.transport.URIish', '<init>', '^([\\\\/]?((?:[A-Za-z]:)?[\\\\/]?(?:(?:[^\\\\/]+[\\\\/]+)*[^\\\\/]+[\\\\/]*)))$', '/tmp/jgit_test_4807633653944290416_tmp/tmp_5972304591781699420/.git')","[130205, 130355]"
"('URIish.java', 'org.eclipse.jgit.transport.URIish', '<init>', '^([a-z][a-z0-9+-]+)://(?:(?:([^/:@]+)(?::([^\\\\/]+))?@)?((?:[^\\\\/:]+)|(?:\\[[0-9a-f:]+\\]))(?::(\\d+))?((?:/~(?:[^\\\\/]+))?[\\\\/]))?(.+)?$', 'http://me@1.2.3.4:80/D:/x')",[214263]
"('Description.java', 'org.junit.runner.Description', 'methodAndClassNamePatternGroupOrDefault', '([\\s\\S]*)\\((.*)\\)', 'testNoteInMiddle(org.eclipse.jgit.util.ChangeIdUtilTest)')","[32224, 32987]"
"('URIish.java', 'org.eclipse.jgit.transport.URIish', '<init>', '^([a-z][a-z0-9+-]+)://(?:(?:([^/:@]+)(?::([^\\\\/]+))?@)?((?:[^\\\\/:]+)|(?:\\[[0-9a-f:]+\\]))(?::(\\d+))?((?:/~(?:[^\\\\/]+))?[\\\\/]))?(.+)?$', 'ssh://l usr\\example.com:wtf@1.2.3.4:1234/D:\\x')",[193777]
"('Description.java', 'org.junit.runner.Description', 'methodAndClassNamePatternGroupOrDefault', '([\\s\\S]*)\\((.*)\\)', 'org.eclipse.jgit.lib.ReflogConfigTest')","[54229, 54295]"
"('URIish.java', 'org.eclipse.jgit.transport.URIish', '<init>', '^([a-z][a-z0-9+-]+)://(?:(?:([^/:@]+)(?::([^\\\\/]+))?@)?((?:[^\\\\/:]+)|(?:\\[[0-9a-f:]+\\]))(?::(\\d+))?((?:/~(?:[^\\\\/]+))?[\\\\/]))?(.+)?$', 'ssh://l usr\\example.com:wtf@1.2.3.4:1234//')",[193639]
"('URIish.java', 'org.eclipse.jgit.transport.URIish', '<init>', '^(file):([\\\\/](?![\\\\/])((?:[A-Za-z]:)?[\\\\/]?(?:(?:[^\\\\/]+[\\\\/]+)*[^\\\\/]+[\\\\/]*)))$', 'https://me@[::1]/D:/x')","[231559, 231743]"
"('Description.java', 'org.junit.runner.Description', 'methodAndClassNamePatternGroupOrDefault', '([\\s\\S]*)\\((.*)\\)', 'testConflictingDeletedAndModified(org.eclipse.jgit.lib.IndexDiffTest)')","[68811, 69155]"
"('Description.java', 'org.junit.runner.Description', 'methodAndClassNamePatternGroupOrDefault', '([\\s\\S]*)\\((.*)\\)', 'stashedContentMerge(org.eclipse.jgit.api.StashApplyCommandTest)')","[142834, 143401]"
"('Description.java', 'org.junit.runner.Description', 'methodAndClassNamePatternGroupOrDefault', '([\\s\\S]*)\\((.*)\\)', 'testANY_DIFF_ShouldNotBeRecursive(org.eclipse.jgit.treewalk.filter.TreeFilterTest)')","[265905, 266055]"
"('URIish.java', 'org.eclipse.jgit.transport.URIish', '<init>', '^([a-z][a-z0-9+-]+)://(?:(?:([^/:@]+)(?::([^\\\\/]+))?@)?((?:[^\\\\/:]+)|(?:\\[[0-9a-f:]+\\]))(?::(\\d+))?((?:/~(?:[^\\\\/]+))?[\\\\/]))?(.+)?$', 'https://example.com/D:/x')","[244094, 244278, 245198, 245382, 246302, 246486]"
"('URIish.java', 'org.eclipse.jgit.transport.URIish', '<init>', '^(file):([\\\\/](?![\\\\/])((?:[A-Za-z]:)?[\\\\/]?(?:(?:[^\\\\/]+[\\\\/]+)*[^\\\\/]+[\\\\/]*)))$', 'https://me:wtf@example.com:1234/D:/x')",[202985]
"('URIish.java', 'org.eclipse.jgit.transport.URIish', '<init>', '^([a-z][a-z0-9+-]+)://(?:(?:([^/:@]+)(?::([^\\\\/]+))?@)?((?:[^\\\\/:]+)|(?:\\[[0-9a-f:]+\\]))(?::(\\d+))?((?:/~(?:[^\\\\/]+))?[\\\\/]))?(.+)?$', 'ssh+git://l usr\\example.com@1.2.3.4:1234/D:/x')",[211871]
"('Description.java', 'org.junit.runner.Description', 'methodAndClassNamePatternGroupOrDefault', '([\\s\\S]*)\\((.*)\\)', 'testStringOfPearls_FilePath3(org.eclipse.jgit.revwalk.RevWalkPathFilter1Test)')","[175350, 175627]"
"('URIish.java', 'org.eclipse.jgit.transport.URIish', '<init>', '^([a-z][a-z0-9+-]+)://(?:(?:([^/:@]+)(?::([^\\\\/]+))?@)?((?:[^\\\\/:]+)|(?:\\[[0-9a-f:]+\\]))(?::(\\d+))?((?:/~(?:[^\\\\/]+))?[\\\\/]))?(.+)?$', 'ssh+git://lusr\\example:wtf@1.2.3.4:1234/D:/x')",[198937]
"('Description.java', 'org.junit.runner.Description', 'methodAndClassNamePatternGroupOrDefault', '([\\s\\S]*)\\((.*)\\)', 'concurrentOnlyOneWritesPackedRefs(org.eclipse.jgit.internal.storage.file.GcPackRefsTest)')","[122809, 122940]"
"('URIish.java', 'org.eclipse.jgit.transport.URIish', '<init>', '^(file):([\\\\/](?![\\\\/])((?:[A-Za-z]:)?[\\\\/]?(?:(?:[^\\\\/]+[\\\\/]+)*[^\\\\/]+[\\\\/]*)))$', 'ssh://me:wtf@[::1]:80//')",[192962]
"('URIish.java', 'org.eclipse.jgit.transport.URIish', '<init>', '^(file):([\\\\/](?![\\\\/])((?:[A-Za-z]:)?[\\\\/]?(?:(?:[^\\\\/]+[\\\\/]+)*[^\\\\/]+[\\\\/]*)))$', 'ssh+git://me:wtf@1.2.3.4:1234//abc')",[196660]
"('URIish.java', 'org.eclipse.jgit.transport.URIish', '<init>', '^([a-z][a-z0-9+-]+)://(?:(?:([^/:@]+)(?::([^\\\\/]+))?@)?((?:[^\\\\/:]+)|(?:\\[[0-9a-f:]+\\]))(?::(\\d+))?((?:/~(?:[^\\\\/]+))?[\\\\/]))?(.+)?$', 'file:///tmp/jgit_test_597757690182063003_tmp/tmp_6960298199588244567.git/')","[141058, 141114, 141248, 141304, 141438, 141494, 141628, 141684, 141818, 141874, 142008, 142064, 142198, 142254]"
"('Description.java', 'org.junit.runner.Description', 'methodAndClassNamePatternGroupOrDefault', '([\\s\\S]*)\\((.*)\\)', 'testInvalidTreeDuplicateNames3(org.eclipse.jgit.lib.ObjectCheckerTest)')","[50663, 53254]"
"('FastIgnoreRule.java', 'org.eclipse.jgit.ignore.FastIgnoreRule', 'isMatch', '[[\\p{javaDigit}\\p{javaLetter}_]]', '5')",[102357]
"('Description.java', 'org.junit.runner.Description', 'methodAndClassNamePatternGroupOrDefault', '([\\s\\S]*)\\((.*)\\)', 'testPunctGroupCase2(org.eclipse.jgit.fnmatch.FileNameMatcherTest)')","[43225, 46570]"
"('Description.java', 'org.junit.runner.Description', 'methodAndClassNamePatternGroupOrDefault', '([\\s\\S]*)\\((.*)\\)', 'testPut_WithPrefix(org.eclipse.jgit.util.RefMapTest)')","[21228, 21709]"
"('Description.java', 'org.junit.runner.Description', 'methodAndClassNamePatternGroupOrDefault', '([\\s\\S]*)\\((.*)\\)', 'testValidHead(org.eclipse.jgit.lib.ValidRefNameTest)')","[65907, 66276]"
"('Description.java', 'org.junit.runner.Description', 'methodAndClassNamePatternGroupOrDefault', '([\\s\\S]*)\\((.*)\\)', 'testWordGroupCase1[OldRule? false](org.eclipse.jgit.ignore.IgnoreRuleSpecialCasesTest)')","[87837, 94942]"
"('Description.java', 'org.junit.runner.Description', 'methodAndClassNamePatternGroupOrDefault', '([\\s\\S]*)\\((.*)\\)', 'testGetRefs_IgnoresGarbageRef4(org.eclipse.jgit.internal.storage.file.RefDirectoryTest)')","[110614, 111779]"
"('Description.java', 'org.junit.runner.Description', 'methodAndClassNamePatternGroupOrDefault', '([\\s\\S]*)\\((.*)\\)', 'testSimpleCheckout(org.eclipse.jgit.api.CheckoutCommandTest)')","[149619, 150163]"
"('Description.java', 'org.junit.runner.Description', 'methodAndClassNamePatternGroupOrDefault', '([\\s\\S]*)\\((.*)\\)', 'testEmptyGitAttributeFile(org.eclipse.jgit.attributes.AttributesNodeDirCacheIteratorTest)')","[72743, 72853]"
"('Description.java', 'org.junit.runner.Description', 'methodAndClassNamePatternGroupOrDefault', '([\\s\\S]*)\\((.*)\\)', 'testOnlyOption_f1_4_a(org.eclipse.jgit.api.CommitOnlyTest)')","[134752, 136789]"
"('URIish.java', 'org.eclipse.jgit.transport.URIish', '<init>', '^(file):([\\\\/](?![\\\\/])((?:[A-Za-z]:)?[\\\\/]?(?:(?:[^\\\\/]+[\\\\/]+)*[^\\\\/]+[\\\\/]*)))$', '/tmp/jgit_test_8267236767099531789_tmp/tmp_530234452973594559/.git')","[130381, 130515]"
"('URIish.java', 'org.eclipse.jgit.transport.URIish', '<init>', '^([\\\\/]?((?:[A-Za-z]:)?[\\\\/]?(?:(?:[^\\\\/]+[\\\\/]+)*[^\\\\/]+[\\\\/]*)))$', '/tmp/jgit_test_9017651431273807895_tmp/tmp_2045899248531600700')","[145325, 145470, 145679, 145888, 146038]"
"('URIish.java', 'org.eclipse.jgit.transport.URIish', '<init>', '^([a-z][a-z0-9+-]+)://(?:(?:([^/:@]+)(?::([^\\\\/]+))?@)?((?:[^\\\\/:]+)|(?:\\[[0-9a-f:]+\\]))(?::(\\d+))?((?:/~(?:[^\\\\/]+))?[\\\\/]))?(.+)?$', 'ssh://lusr\\example:wtf@1.2.3.4:80//')",[194927]
"('Description.java', 'org.junit.runner.Description', 'methodAndClassNamePatternGroupOrDefault', '([\\s\\S]*)\\((.*)\\)', 'testEdit_InsertNearCommonTail(org.eclipse.jgit.diff.HistogramDiffTest)')","[6933, 7604]"
"('Description.java', 'org.junit.runner.Description', 'methodAndClassNamePatternGroupOrDefault', '([\\s\\S]*)\\((.*)\\)', 'org.eclipse.jgit.submodule.SubmoduleSyncTest')","[19057, 19385]"
"('Description.java', 'org.junit.runner.Description', 'methodAndClassNamePatternGroupOrDefault', '([\\s\\S]*)\\((.*)\\)', 'testThreeEntries_Seek3IsEOF(org.eclipse.jgit.treewalk.CanonicalTreeParserTest)')","[261357, 261677]"
"('Description.java', 'org.junit.runner.Description', 'methodAndClassNamePatternGroupOrDefault', '([\\s\\S]*)\\((.*)\\)', 'testDigitGroupCase5(org.eclipse.jgit.fnmatch.FileNameMatcherTest)')","[42973, 46306]"
"('URIish.java', 'org.eclipse.jgit.transport.URIish', '<init>', '^(file):([\\\\/](?![\\\\/])((?:[A-Za-z]:)?[\\\\/]?(?:(?:[^\\\\/]+[\\\\/]+)*[^\\\\/]+[\\\\/]*)))$', 'http://l usr\\example.com@1.2.3.4:1234/D:/x')",[215160]
"('Description.java', 'org.junit.runner.Description', 'methodAndClassNamePatternGroupOrDefault', '([\\s\\S]*)\\((.*)\\)', 'testLastModifiedTimes(org.eclipse.jgit.lib.IndexModificationTimesTest)')","[71916, 71981]"
"('URIish.java', 'org.eclipse.jgit.transport.URIish', '<init>', '^(file):([\\\\/](?![\\\\/])((?:[A-Za-z]:)?[\\\\/]?(?:(?:[^\\\\/]+[\\\\/]+)*[^\\\\/]+[\\\\/]*)))$', 'ssh://me:wtf@example.com:1234/D:\\x')",[192180]
"('Description.java', 'org.junit.runner.Description', 'methodAndClassNamePatternGroupOrDefault', '([\\s\\S]*)\\((.*)\\)', 'testFillTo0(org.eclipse.jgit.util.IntListTest)')","[28129, 28365]"
"('URIish.java', 'org.eclipse.jgit.transport.URIish', '<init>', '^(file):([\\\\/](?![\\\\/])((?:[A-Za-z]:)?[\\\\/]?(?:(?:[^\\\\/]+[\\\\/]+)*[^\\\\/]+[\\\\/]*)))$', 'file:///tmp/jgit_test_3803194728110070212_tmp/tmp_784519170733952064/.git/')",[63577]
"('URIish.java', 'org.eclipse.jgit.transport.URIish', '<init>', '^([a-z][a-z0-9+-]+)://(?:(?:([^/:@]+)(?::([^\\\\/]+))?@)?((?:[^\\\\/:]+)|(?:\\[[0-9a-f:]+\\]))(?::(\\d+))?((?:/~(?:[^\\\\/]+))?[\\\\/]))?(.+)?$', 'http://[::1]/D:/x')","[241518, 241702, 242622, 242806, 243726, 243910]"
"('Description.java', 'org.junit.runner.Description', 'methodAndClassNamePatternGroupOrDefault', '([\\s\\S]*)\\((.*)\\)', 'testRenameInSubDir(org.eclipse.jgit.api.BlameCommandTest)')","[139736, 140120]"
"('Description.java', 'org.junit.runner.Description', 'methodAndClassNamePatternGroupOrDefault', '([\\s\\S]*)\\((.*)\\)', 'org.eclipse.jgit.internal.storage.file.RefDirectoryTest')","[110404, 112792]"
"('URIish.java', 'org.eclipse.jgit.transport.URIish', '<init>', '^(file):([\\\\/](?![\\\\/])((?:[A-Za-z]:)?[\\\\/]?(?:(?:[^\\\\/]+[\\\\/]+)*[^\\\\/]+[\\\\/]*)))$', 'https://lusr\\example:wtf@example.com:80/D:\\x')",[206190]
"('Description.java', 'org.junit.runner.Description', 'methodAndClassNamePatternGroupOrDefault', '([\\s\\S]*)\\((.*)\\)', 'testSkipRevFilterNegative(org.eclipse.jgit.revwalk.SkipRevFilterTest)')","[174341, 174406]"
"('Description.java', 'org.junit.runner.Description', 'methodAndClassNamePatternGroupOrDefault', '([\\s\\S]*)\\((.*)\\)', 'testInvalidTagNoType4(org.eclipse.jgit.lib.ObjectCheckerTest)')","[50432, 53012]"
"('Description.java', 'org.junit.runner.Description', 'methodAndClassNamePatternGroupOrDefault', '([\\s\\S]*)\\((.*)\\)', 'testMixedGroupCase0[OldRule? false](org.eclipse.jgit.ignore.IgnoreRuleSpecialCasesTest)')","[85123, 92228]"
"('Description.java', 'org.junit.runner.Description', 'methodAndClassNamePatternGroupOrDefault', '([\\s\\S]*)\\((.*)\\)', 'testSplitLastColon(org.eclipse.jgit.transport.RefSpecTest)')","[187116, 187863]"
"('ChangeIdUtil.java', 'org.eclipse.jgit.util.ChangeIdUtil', 'indexOfChangeId', '(^Change-Id: *I[a-f0-9]{40}$)', '[bracket]')",[33193]
"('URIish.java', 'org.eclipse.jgit.transport.URIish', '<init>', '^(file):([\\\\/](?![\\\\/])((?:[A-Za-z]:)?[\\\\/]?(?:(?:[^\\\\/]+[\\\\/]+)*[^\\\\/]+[\\\\/]*)))$', 'ssh://me@example.com:1234//abc')",[207018]
"('Description.java', 'org.junit.runner.Description', 'methodAndClassNamePatternGroupOrDefault', '([\\s\\S]*)\\((.*)\\)', 'testContext1(org.eclipse.jgit.diff.DiffFormatterReflowTest)')","[7989, 8203]"
"('URIish.java', 'org.eclipse.jgit.transport.URIish', '<init>', '^(file):([\\\\/](?![\\\\/])((?:[A-Za-z]:)?[\\\\/]?(?:(?:[^\\\\/]+[\\\\/]+)*[^\\\\/]+[\\\\/]*)))$', 'ssh://DOMAIN\\user:pass@example.com:33/some/p ath%20')","[251155, 251201]"
"('Description.java', 'org.junit.runner.Description', 'methodAndClassNamePatternGroupOrDefault', '([\\s\\S]*)\\((.*)\\)', 'testDeleteRecursiveEmptyNeedsToCheckFilesFirst(org.eclipse.jgit.util.FileUtilTest)')","[23562, 23913]"
"('ChangeIdUtil.java', 'org.eclipse.jgit.util.ChangeIdUtil', 'indexOfChangeId', '(^Change-Id: *I[a-f0-9]{40}$)', 'git://example.com/ fixes this')",[36408]
"('Description.java', 'org.junit.runner.Description', 'methodAndClassNamePatternGroupOrDefault', '([\\s\\S]*)\\((.*)\\)', 'testSetSource(org.eclipse.jgit.transport.RefSpecTest)')","[186969, 187709]"
"('URIish.java', 'org.eclipse.jgit.transport.URIish', '<init>', '^([a-z][a-z0-9+-]+)://(?:(?:([^/:@]+)(?::([^\\\\/]+))?@)?((?:[^\\\\/:]+)|(?:\\[[0-9a-f:]+\\]))(?::(\\d+))?((?:/~(?:[^\\\\/]+))?[\\\\/]))?(.+)?$', 'file:///tmp/jgit_test_423578117363873144_tmp/tmp_5965468416386616865/.git/')",[57091]
"('Description.java', 'org.junit.runner.Description', 'methodAndClassNamePatternGroupOrDefault', '([\\s\\S]*)\\((.*)\\)', 'testEmptyInputs(org.eclipse.jgit.diff.HistogramDiffTest)')","[6954, 7626]"
"('URIish.java', 'org.eclipse.jgit.transport.URIish', '<init>', '^([a-z][a-z0-9+-]+)://(?:(?:([^/:@]+)(?::([^\\\\/]+))?@)?((?:[^\\\\/:]+)|(?:\\[[0-9a-f:]+\\]))(?::(\\d+))?((?:/~(?:[^\\\\/]+))?[\\\\/]))?(.+)?$', '/tmp/jgit_test_8097070924435391496_tmp/tmp_383454845786079686/.git')","[129847, 129985]"
"('Description.java', 'org.junit.runner.Description', 'methodAndClassNamePatternGroupOrDefault', '([\\s\\S]*)\\((.*)\\)', 'testEmptyTree_NoTreeWalk(org.eclipse.jgit.dircache.DirCacheIteratorTest)')","[170296, 170538]"
"('URIish.java', 'org.eclipse.jgit.transport.URIish', '<init>', '^([a-z][a-z0-9+-]+)://(?:(?:([^/:@]+)(?::([^\\\\/]+))?@)?((?:[^\\\\/:]+)|(?:\\[[0-9a-f:]+\\]))(?::(\\d+))?((?:/~(?:[^\\\\/]+))?[\\\\/]))?(.+)?$', 'ssh://me:wtf@[::1]:80/D:\\x')",[193123]
"('ChangeIdUtil.java', 'org.eclipse.jgit.util.ChangeIdUtil', 'indexOfFirstFooterLine', '(^[a-zA-Z0-9-]+:(?!//).*$)', 'This is conflicting')","[138470, 138558, 138589, 138620, 138651, 138682, 139232, 139491, 140415]"
"('URIish.java', 'org.eclipse.jgit.transport.URIish', '<init>', '^([a-z][a-z0-9+-]+)://(?:(?:([^/:@]+)(?::([^\\\\/]+))?@)?((?:[^\\\\/:]+)|(?:\\[[0-9a-f:]+\\]))(?::(\\d+))?((?:/~(?:[^\\\\/]+))?[\\\\/]))?(.+)?$', 'https://l usr\\example.com:wtf@example.com:80/D:\\x')",[205109]
"('Description.java', 'org.junit.runner.Description', 'methodAndClassNamePatternGroupOrDefault', '([\\s\\S]*)\\((.*)\\)', 'testCreate(org.eclipse.jgit.internal.storage.file.RefDirectoryTest)')","[111181, 112373]"
"('Description.java', 'org.junit.runner.Description', 'methodAndClassNamePatternGroupOrDefault', '([\\s\\S]*)\\((.*)\\)', 'testCheckoutOrphanBranch(org.eclipse.jgit.api.CheckoutCommandTest)')","[149661, 150207]"
"('Description.java', 'org.junit.runner.Description', 'methodAndClassNamePatternGroupOrDefault', '([\\s\\S]*)\\((.*)\\)', 'testLsRemoteWithHeads(org.eclipse.jgit.api.LsRemoteCommandTest)')","[138783, 138869]"
"('URIish.java', 'org.eclipse.jgit.transport.URIish', '<init>', '^(file):([\\\\/](?![\\\\/])((?:[A-Za-z]:)?[\\\\/]?(?:(?:[^\\\\/]+[\\\\/]+)*[^\\\\/]+[\\\\/]*)))$', 'ssh://l usr\\example.com:wtf@1.2.3.4:80/D:/x')",[193892]
"('Description.java', 'org.junit.runner.Description', 'methodAndClassNamePatternGroupOrDefault', '([\\s\\S]*)\\((.*)\\)', 'testSpecialGroupCase1[OldRule? false](org.eclipse.jgit.ignore.IgnoreRuleSpecialCasesTest)')","[84778, 91883]"
"('FastIgnoreRule.java', 'org.eclipse.jgit.ignore.FastIgnoreRule', 'isMatch', '[v-z]', 'x')","[78486, 78513, 78540, 78567, 78594, 78621, 78675, 78729, 78783, 78837, 78891, 78945, 78972, 78999, 79026, 79053, 79107, 79161, 79242, 79323, 79350, 79377, 79404, 79431, 79458, 79485, 79512, 79539, 79566, 79593, 79620, 79647, 79674, 79701, 79728, 79755, 79782, 79809, 79836, 79863, 79890, 79917, 79944, 79971, 79998, 80025, 80052, 80079]"
"('Description.java', 'org.junit.runner.Description', 'methodAndClassNamePatternGroupOrDefault', '([\\s\\S]*)\\((.*)\\)', 'testSignedOffBy_ManyUsers(org.eclipse.jgit.revwalk.FooterLineTest)')","[173759, 174174]"
"('Description.java', 'org.junit.runner.Description', 'methodAndClassNamePatternGroupOrDefault', '([\\s\\S]*)\\((.*)\\)', 'testFastForwardRebaseWithModification(org.eclipse.jgit.api.RebaseCommandTest)')","[131957, 133470]"
"('Description.java', 'org.junit.runner.Description', 'methodAndClassNamePatternGroupOrDefault', '([\\s\\S]*)\\((.*)\\)', 'testURIEncode_0a(org.eclipse.jgit.transport.URIishTest)')","[188506, 189886]"
"('AttributesRule.java', 'org.eclipse.jgit.attributes.AttributesRule', 'isMatch', '.r[a-c]', 'crb')",[76562]
"('Description.java', 'org.junit.runner.Description', 'methodAndClassNamePatternGroupOrDefault', '([\\s\\S]*)\\((.*)\\)', 'testCreateFromAnnotatetdTag(org.eclipse.jgit.api.BranchCommandTest)')","[128653, 128971]"
"('URIish.java', 'org.eclipse.jgit.transport.URIish', '<init>', '^([a-z][a-z0-9+-]+)://(?:(?:([^/:@]+)(?::([^\\\\/]+))?@)?((?:[^\\\\/:]+)|(?:\\[[0-9a-f:]+\\]))(?::(\\d+))?((?:/~(?:[^\\\\/]+))?[\\\\/]))?(.+)?$', 'ssh+git://me@example.com:1234/D:\\x')",[210445]
"('Description.java', 'org.junit.runner.Description', 'methodAndClassNamePatternGroupOrDefault', '([\\s\\S]*)\\((.*)\\)', 'testInvalidTreeNameContainsSlash(org.eclipse.jgit.lib.ObjectCheckerTest)')","[48437, 50922]"
"('URIish.java', 'org.eclipse.jgit.transport.URIish', '<init>', '^(file):([\\\\/](?![\\\\/])((?:[A-Za-z]:)?[\\\\/]?(?:(?:[^\\\\/]+[\\\\/]+)*[^\\\\/]+[\\\\/]*)))$', 'ssh://me@example.com:80/D:/x')",[207248]
"('Description.java', 'org.junit.runner.Description', 'methodAndClassNamePatternGroupOrDefault', '([\\s\\S]*)\\((.*)\\)', 'testUntrackedFolders(org.eclipse.jgit.lib.IndexDiffTest)')","[68769, 69111]"
"('Description.java', 'org.junit.runner.Description', 'methodAndClassNamePatternGroupOrDefault', '([\\s\\S]*)\\((.*)\\)', 'org.eclipse.jgit.api.ResetCommandTest')","[167125, 168691]"
"('Description.java', 'org.junit.runner.Description', 'methodAndClassNamePatternGroupOrDefault', '([\\s\\S]*)\\((.*)\\)', 'testMultiLineMessagesWithSignedOffBy(org.eclipse.jgit.util.ChangeIdUtilTest)')","[32035, 32789]"
"('Description.java', 'org.junit.runner.Description', 'methodAndClassNamePatternGroupOrDefault', '([\\s\\S]*)\\((.*)\\)', 'testContext10(org.eclipse.jgit.diff.DiffFormatterReflowTest)')","[8052, 8269]"
"('Description.java', 'org.junit.runner.Description', 'methodAndClassNamePatternGroupOrDefault', '([\\s\\S]*)\\((.*)\\)', 'stashChangeInANewSubdirectory(org.eclipse.jgit.api.StashApplyCommandTest)')","[142603, 143159]"
"('URIish.java', 'org.eclipse.jgit.transport.URIish', '<init>', '^([a-z][a-z0-9+-]+)://(?:(?:([^/:@]+)(?::([^\\\\/]+))?@)?((?:[^\\\\/:]+)|(?:\\[[0-9a-f:]+\\]))(?::(\\d+))?((?:/~(?:[^\\\\/]+))?[\\\\/]))?(.+)?$', 'ssh+git://[::1]//abc')","[238160, 238344, 239264, 239448, 240368, 240552]"
"('URIish.java', 'org.eclipse.jgit.transport.URIish', '<init>', '^(file):([\\\\/](?![\\\\/])((?:[A-Za-z]:)?[\\\\/]?(?:(?:[^\\\\/]+[\\\\/]+)*[^\\\\/]+[\\\\/]*)))$', 'http://me@[::1]:80/D:/x')",[214608]
"('Description.java', 'org.junit.runner.Description', 'methodAndClassNamePatternGroupOrDefault', '([\\s\\S]*)\\((.*)\\)', 'testIncompleteRangesInOneGroupCase1[OldRule? false](org.eclipse.jgit.ignore.IgnoreRuleSpecialCasesTest)')","[86940, 94045]"
"('FastIgnoreRule.java', 'org.eclipse.jgit.ignore.FastIgnoreRule', 'isMatch', 'a[b\\-]', 'ac')",[101393]
"('Description.java', 'org.junit.runner.Description', 'methodAndClassNamePatternGroupOrDefault', '([\\s\\S]*)\\((.*)\\)', 'testEdit_CommonReplaceCommonDeleteCommon(org.eclipse.jgit.diff.HistogramDiffTest)')","[7164, 7846]"
"('Description.java', 'org.junit.runner.Description', 'methodAndClassNamePatternGroupOrDefault', '([\\s\\S]*)\\((.*)\\)', 'testSpecialGroupCase6[OldRule? true](org.eclipse.jgit.ignore.IgnoreRuleSpecialCasesTest)')","[88456, 95540]"
"('QuotedString.java', 'org.eclipse.jgit.util.QuotedString$BourneUserPathStyle', 'quote', '^~[A-Za-z0-9_-]+$', '~foo/')","[29577, 29601]"
"('Description.java', 'org.junit.runner.Description', 'methodAndClassNamePatternGroupOrDefault', '([\\s\\S]*)\\((.*)\\)', 'test3_FromString(org.eclipse.jgit.lib.AbbreviatedObjectIdTest)')","[55441, 55981]"
"('Description.java', 'org.junit.runner.Description', 'methodAndClassNamePatternGroupOrDefault', '([\\s\\S]*)\\((.*)\\)', 'testOnlyOption_f1_7_f2_14_a(org.eclipse.jgit.api.CommitOnlyTest)')","[134332, 136349]"
"('FastIgnoreRule.java', 'org.eclipse.jgit.ignore.FastIgnoreRule', 'isMatch', '[[\\p{Print}\\p{javaDigit}\\p{javaLetter}]]', ']')",[101445]
"('URIish.java', 'org.eclipse.jgit.transport.URIish', '<init>', '^([a-z][a-z0-9+-]+)://(?:(?:([^/:@]+)(?::([^\\\\/]+))?@)?((?:[^\\\\/:]+)|(?:\\[[0-9a-f:]+\\]))(?::(\\d+))?((?:/~(?:[^\\\\/]+))?[\\\\/]))?(.+)?$', 'http://1.2.3.4//abc')","[241104, 241288, 242208, 242392, 243312, 243496]"
"('URIish.java', 'org.eclipse.jgit.transport.URIish', '<init>', '^(file):([\\\\/](?![\\\\/])((?:[A-Za-z]:)?[\\\\/]?(?:(?:[^\\\\/]+[\\\\/]+)*[^\\\\/]+[\\\\/]*)))$', 'ssh+git://me:wtf@example.com:1234//abc')",[195502]
"('Description.java', 'org.junit.runner.Description', 'methodAndClassNamePatternGroupOrDefault', '([\\s\\S]*)\\((.*)\\)', 'testBlankGroupCase2[OldRule? true](org.eclipse.jgit.ignore.IgnoreRuleSpecialCasesTest)')","[90986, 98070]"
"('URIish.java', 'org.eclipse.jgit.transport.URIish', '<init>', '^(file):([\\\\/](?![\\\\/])((?:[A-Za-z]:)?[\\\\/]?(?:(?:[^\\\\/]+[\\\\/]+)*[^\\\\/]+[\\\\/]*)))$', 'https://l usr\\example.com@[::1]:1234/D:/x')",[219415]
"('Description.java', 'org.junit.runner.Description', 'methodAndClassNamePatternGroupOrDefault', '([\\s\\S]*)\\((.*)\\)', 'testSimpleIterate(org.eclipse.jgit.treewalk.FileTreeIteratorTest)')","[262292, 262644]"
"('URIish.java', 'org.eclipse.jgit.transport.URIish', '<init>', '^([a-z][a-z0-9+-]+)://(?:(?:([^/:@]+)(?::([^\\\\/]+))?@)?((?:[^\\\\/:]+)|(?:\\[[0-9a-f:]+\\]))(?::(\\d+))?((?:/~(?:[^\\\\/]+))?[\\\\/]))?(.+)?$', 'http://me@1.2.3.4:1234//')",[213987]
"('URIish.java', 'org.eclipse.jgit.transport.URIish', '<init>', '^([a-z][a-z0-9+-]+)://(?:(?:([^/:@]+)(?::([^\\\\/]+))?@)?((?:[^\\\\/:]+)|(?:\\[[0-9a-f:]+\\]))(?::(\\d+))?((?:/~(?:[^\\\\/]+))?[\\\\/]))?(.+)?$', 'https://me:wtf@1.2.3.4:1234/D:\\x')",[204035]
"('URIish.java', 'org.eclipse.jgit.transport.URIish', '<init>', '^([a-z][a-z0-9+-]+)://(?:(?:([^/:@]+)(?::([^\\\\/]+))?@)?((?:[^\\\\/:]+)|(?:\\[[0-9a-f:]+\\]))(?::(\\d+))?((?:/~(?:[^\\\\/]+))?[\\\\/]))?(.+)?$', 'https://l usr\\example.com@1.2.3.4//abc')","[232272, 232456]"
"('Description.java', 'org.junit.runner.Description', 'methodAndClassNamePatternGroupOrDefault', '([\\s\\S]*)\\((.*)\\)', 'testBuilderClear(org.eclipse.jgit.dircache.DirCacheBuilderTest)')","[170911, 171106]"
"('Description.java', 'org.junit.runner.Description', 'methodAndClassNamePatternGroupOrDefault', '([\\s\\S]*)\\((.*)\\)', 'testSimpleStarCase1(org.eclipse.jgit.fnmatch.FileNameMatcherTest)')","[42805, 46130]"
"('Description.java', 'org.junit.runner.Description', 'methodAndClassNamePatternGroupOrDefault', '([\\s\\S]*)\\((.*)\\)', 'testCheckoutTheirs(org.eclipse.jgit.api.PathCheckoutCommandTest)')","[123860, 124141]"
"('Description.java', 'org.junit.runner.Description', 'methodAndClassNamePatternGroupOrDefault', '([\\s\\S]*)\\((.*)\\)', 'org.eclipse.jgit.api.CommitAndLogCommandTest')","[154954, 155639]"
"('Description.java', 'org.junit.runner.Description', 'methodAndClassNamePatternGroupOrDefault', '([\\s\\S]*)\\((.*)\\)', 'repositoryWithNoSubmodules(org.eclipse.jgit.submodule.SubmoduleInitTest)')","[19568, 19722]"
"('URIish.java', 'org.eclipse.jgit.transport.URIish', '<init>', '^(file):([\\\\/](?![\\\\/])((?:[A-Za-z]:)?[\\\\/]?(?:(?:[^\\\\/]+[\\\\/]+)*[^\\\\/]+[\\\\/]*)))$', 'ssh+git://lusr\\example:wtf@[::1]:1234//abc')",[199236]
"('Description.java', 'org.junit.runner.Description', 'methodAndClassNamePatternGroupOrDefault', '([\\s\\S]*)\\((.*)\\)', 'testReadLooseRef(org.eclipse.jgit.lib.RefTest)')","[57827, 58023]"
"('URIish.java', 'org.eclipse.jgit.transport.URIish', '<init>', '^(file):([\\\\/](?![\\\\/])((?:[A-Za-z]:)?[\\\\/]?(?:(?:[^\\\\/]+[\\\\/]+)*[^\\\\/]+[\\\\/]*)))$', 'file:/tmp/jgit_test_1212230039583698495_tmp/tmp_6808533813290140997.git/')",[5555]
"('URIish.java', 'org.eclipse.jgit.transport.URIish', '<init>', '^(file):([\\\\/](?![\\\\/])((?:[A-Za-z]:)?[\\\\/]?(?:(?:[^\\\\/]+[\\\\/]+)*[^\\\\/]+[\\\\/]*)))$', 'ssh://lusr\\example@[::1]:80/D:/x')",[210192]
"('URIish.java', 'org.eclipse.jgit.transport.URIish', '<init>', '^(file):([\\\\/](?![\\\\/])((?:[A-Za-z]:)?[\\\\/]?(?:(?:[^\\\\/]+[\\\\/]+)*[^\\\\/]+[\\\\/]*)))$', 'ssh+git://example.com/some/p ath')","[248188, 248234]"
"('Description.java', 'org.junit.runner.Description', 'methodAndClassNamePatternGroupOrDefault', '([\\s\\S]*)\\((.*)\\)', 'testXDigitGroupCase6(org.eclipse.jgit.fnmatch.FileNameMatcherTest)')","[44065, 47450]"
"('URIish.java', 'org.eclipse.jgit.transport.URIish', '<init>', '^([a-z][a-z0-9+-]+)://(?:(?:([^/:@]+)(?::([^\\\\/]+))?@)?((?:[^\\\\/:]+)|(?:\\[[0-9a-f:]+\\]))(?::(\\d+))?((?:/~(?:[^\\\\/]+))?[\\\\/]))?(.+)?$', 'ssh+git://lusr\\example:wtf@1.2.3.4:1234//abc')",[198891]
"('URIish.java', 'org.eclipse.jgit.transport.URIish', '<init>', '^([a-z][a-z0-9+-]+)://(?:(?:([^/:@]+)(?::([^\\\\/]+))?@)?((?:[^\\\\/:]+)|(?:\\[[0-9a-f:]+\\]))(?::(\\d+))?((?:/~(?:[^\\\\/]+))?[\\\\/]))?(.+)?$', 'git://host.xy/abc.git/')",[252791]
"('Description.java', 'org.junit.runner.Description', 'methodAndClassNamePatternGroupOrDefault', '([\\s\\S]*)\\((.*)\\)', 'testFilter_NOT_ALL(org.eclipse.jgit.revwalk.RevWalkFilterTest)')","[180605, 180924]"
"('FastIgnoreRule.java', 'org.eclipse.jgit.ignore.FastIgnoreRule', 'isMatch', '.*\\.sta[0-5]', 'anothertest.sta2')","[104801, 106031]"
"('URIish.java', 'org.eclipse.jgit.transport.URIish', '<init>', '^(file):([\\\\/](?![\\\\/])((?:[A-Za-z]:)?[\\\\/]?(?:(?:[^\\\\/]+[\\\\/]+)*[^\\\\/]+[\\\\/]*)))$', '//.git')",[251592]
"('Description.java', 'org.junit.runner.Description', 'methodAndClassNamePatternGroupOrDefault', '([\\s\\S]*)\\((.*)\\)', 'testInsertTail(org.eclipse.jgit.internal.storage.pack.DeltaIndexTest)')","[108992, 109274]"
"('URIish.java', 'org.eclipse.jgit.transport.URIish', '<init>', '^([a-z][a-z0-9+-]+)://(?:(?:([^/:@]+)(?::([^\\\\/]+))?@)?((?:[^\\\\/:]+)|(?:\\[[0-9a-f:]+\\]))(?::(\\d+))?((?:/~(?:[^\\\\/]+))?[\\\\/]))?(.+)?$', 'http://l usr\\example.com:wtf@1.2.3.4:1234/D:/x')",[201145]
"('Description.java', 'org.junit.runner.Description', 'methodAndClassNamePatternGroupOrDefault', '([\\s\\S]*)\\((.*)\\)', 'testCreateFileHeaderForRenameModeChange(org.eclipse.jgit.diff.DiffFormatterTest)')","[2887, 3142]"
"('Description.java', 'org.junit.runner.Description', 'methodAndClassNamePatternGroupOrDefault', '([\\s\\S]*)\\((.*)\\)', 'testMaster(org.eclipse.jgit.transport.RefSpecTest)')","[187011, 187753]"
"('Description.java', 'org.junit.runner.Description', 'methodAndClassNamePatternGroupOrDefault', '([\\s\\S]*)\\((.*)\\)', 'testModifyY(org.eclipse.jgit.api.ApplyCommandTest)')","[163819, 164059]"
"('URIish.java', 'org.eclipse.jgit.transport.URIish', '<init>', '^([a-z][a-z0-9+-]+)://(?:(?:([^/:@]+)(?::([^\\\\/]+))?@)?((?:[^\\\\/:]+)|(?:\\[[0-9a-f:]+\\]))(?::(\\d+))?((?:/~(?:[^\\\\/]+))?[\\\\/]))?(.+)?$', 'http://me@1.2.3.4:1234/D:\\x')",[214125]
"('Description.java', 'org.junit.runner.Description', 'methodAndClassNamePatternGroupOrDefault', '([\\s\\S]*)\\((.*)\\)', 'testGetters(org.eclipse.jgit.attributes.AttributesMatcherTest)')","[73586, 73739]"
"('URIish.java', 'org.eclipse.jgit.transport.URIish', '<init>', '^(file):([\\\\/](?![\\\\/])((?:[A-Za-z]:)?[\\\\/]?(?:(?:[^\\\\/]+[\\\\/]+)*[^\\\\/]+[\\\\/]*)))$', 'ssh://lusr\\example@1.2.3.4:1234//abc')",[209594]
"('Description.java', 'org.junit.runner.Description', 'methodAndClassNamePatternGroupOrDefault', '([\\s\\S]*)\\((.*)\\)', 'testTwoConflictingModifications(org.eclipse.jgit.merge.MergeAlgorithmTest)')","[12102, 12406]"
"('URIish.java', 'org.eclipse.jgit.transport.URIish', '<init>', '^([a-z][a-z0-9+-]+)://(?:(?:([^/:@]+)(?::([^\\\\/]+))?@)?((?:[^\\\\/:]+)|(?:\\[[0-9a-f:]+\\]))(?::(\\d+))?((?:/~(?:[^\\\\/]+))?[\\\\/]))?(.+)?$', 'http://example.com//abc')","[240736, 240920, 241840, 242024, 242944, 243128]"
"('URIish.java', 'org.eclipse.jgit.transport.URIish', '<init>', '^(file):([\\\\/](?![\\\\/])((?:[A-Za-z]:)?[\\\\/]?(?:(?:[^\\\\/]+[\\\\/]+)*[^\\\\/]+[\\\\/]*)))$', 'file:/tmp/jgit_test_4698797764319809264_tmp/tmp_3689618803005173298/.git/')",[163411]
"('FastIgnoreRule.java', 'org.eclipse.jgit.ignore.FastIgnoreRule', 'isMatch', '[A\\p{Ll}C3-5]', '6')",[99545]
"('Description.java', 'org.junit.runner.Description', 'methodAndClassNamePatternGroupOrDefault', '([\\s\\S]*)\\((.*)\\)', 'testTargetWithoutLeadingSlash(org.eclipse.jgit.ignore.IgnoreMatcherTest)')","[102991, 103184]"
"('URIish.java', 'org.eclipse.jgit.transport.URIish', '<init>', '^(?:([^/:@]+)(?::([^\\\\/]+))?@)?((?:[^\\\\/:]+)|(?:\\[[0-9a-f:]+\\])):((?:(?:/~(?:[^\\\\/]+))[\\\\/])?(?:(?:[^\\\\/]+[\\\\/]+)*[^\\\\/]+[\\\\/]*))$', 'user@example.com:egit.git')",[255855]
"('Description.java', 'org.junit.runner.Description', 'methodAndClassNamePatternGroupOrDefault', '([\\s\\S]*)\\((.*)\\)', 'testAbbreviatePackedBlob(org.eclipse.jgit.internal.storage.file.AbbreviationTest)')","[121391, 121479]"
"('Description.java', 'org.junit.runner.Description', 'methodAndClassNamePatternGroupOrDefault', '([\\s\\S]*)\\((.*)\\)', 'testWithPostOrder_NoEnterSubtree(org.eclipse.jgit.treewalk.PostOrderTreeWalkTest)')","[263346, 263477]"
"('Description.java', 'org.junit.runner.Description', 'methodAndClassNamePatternGroupOrDefault', '([\\s\\S]*)\\((.*)\\)', 'org.eclipse.jgit.util.ReadLinesTest')","[30411, 30692]"
"('Description.java', 'org.junit.runner.Description', 'methodAndClassNamePatternGroupOrDefault', '([\\s\\S]*)\\((.*)\\)', 'testMaliciousAbsolutePathTwoLevelsFirstBad(org.eclipse.jgit.lib.DirCacheCheckoutMaliciousPathTest)')","[66865, 67767]"
"('URIish.java', 'org.eclipse.jgit.transport.URIish', '<init>', '^([a-z][a-z0-9+-]+)://(?:(?:([^/:@]+)(?::([^\\\\/]+))?@)?((?:[^\\\\/:]+)|(?:\\[[0-9a-f:]+\\]))(?::(\\d+))?((?:/~(?:[^\\\\/]+))?[\\\\/]))?(.+)?$', 'ssh+git://lusr\\example@[::1]//')","[227074, 227258]"
"('Description.java', 'org.junit.runner.Description', 'methodAndClassNamePatternGroupOrDefault', '([\\s\\S]*)\\((.*)\\)', 'testOnlyOption_f1_11_d(org.eclipse.jgit.api.CommitOnlyTest)')","[135865, 137955]"
"('URIish.java', 'org.eclipse.jgit.transport.URIish', '<init>', '^(file):([\\\\/](?![\\\\/])((?:[A-Za-z]:)?[\\\\/]?(?:(?:[^\\\\/]+[\\\\/]+)*[^\\\\/]+[\\\\/]*)))$', 'https://l usr\\example.com:wtf@[::1]:80/D:/x')",[205776]
"('URIish.java', 'org.eclipse.jgit.transport.URIish', '<init>', '^([a-z][a-z0-9+-]+)://(?:(?:([^/:@]+)(?::([^\\\\/]+))?@)?((?:[^\\\\/:]+)|(?:\\[[0-9a-f:]+\\]))(?::(\\d+))?((?:/~(?:[^\\\\/]+))?[\\\\/]))?(.+)?$', 'https://lusr\\example@[::1]:80//')",[220634]
"('URIish.java', 'org.eclipse.jgit.transport.URIish', '<init>', '^([a-z][a-z0-9+-]+)://(?:(?:([^/:@]+)(?::([^\\\\/]+))?@)?((?:[^\\\\/:]+)|(?:\\[[0-9a-f:]+\\]))(?::(\\d+))?((?:/~(?:[^\\\\/]+))?[\\\\/]))?(.+)?$', 'ssh://me@[::1]:1234//abc')",[207777]
"('Description.java', 'org.junit.runner.Description', 'methodAndClassNamePatternGroupOrDefault', '([\\s\\S]*)\\((.*)\\)', 'testIteratorMethodsContract(org.eclipse.jgit.internal.storage.file.PackIndexV1Test)')","[113563, 113691]"
"('AttributesRule.java', 'org.eclipse.jgit.attributes.AttributesRule', 'isMatch', '.*\\.sta[0-5]', 'test.sta6')","[74301, 75445]"
"('URIish.java', 'org.eclipse.jgit.transport.URIish', '<init>', '^(file):([\\\\/](?![\\\\/])((?:[A-Za-z]:)?[\\\\/]?(?:(?:[^\\\\/]+[\\\\/]+)*[^\\\\/]+[\\\\/]*)))$', 'ssh://l usr\\example.com:wtf@[::1]:1234//')",[193984]
"('Description.java', 'org.junit.runner.Description', 'methodAndClassNamePatternGroupOrDefault', '([\\s\\S]*)\\((.*)\\)', 'testMixedReset(org.eclipse.jgit.api.ResetCommandTest)')","[167209, 167549]"
"('Description.java', 'org.junit.runner.Description', 'methodAndClassNamePatternGroupOrDefault', '([\\s\\S]*)\\((.*)\\)', 'testRenamedBoundLineDelete(org.eclipse.jgit.api.blame.BlameGeneratorTest)')","[134165, 134230]"
"('Description.java', 'org.junit.runner.Description', 'methodAndClassNamePatternGroupOrDefault', '([\\s\\S]*)\\((.*)\\)', 'testAddUnstagedChanges(org.eclipse.jgit.api.CommitAndLogCommandTest)')","[154996, 155208]"
"('Description.java', 'org.junit.runner.Description', 'methodAndClassNamePatternGroupOrDefault', '([\\s\\S]*)\\((.*)\\)', 'testEmpty_NoMatch(org.eclipse.jgit.revwalk.RevWalkPathFilter1Test)')","[175497, 175781]"
"('Description.java', 'org.junit.runner.Description', 'methodAndClassNamePatternGroupOrDefault', '([\\s\\S]*)\\((.*)\\)', 'testMaliciousAbsoluteWindowsPath1(org.eclipse.jgit.lib.DirCacheCheckoutMaliciousPathTest)')","[67159, 68075]"
"('URIish.java', 'org.eclipse.jgit.transport.URIish', '<init>', '^([a-z][a-z0-9+-]+)://(?:(?:([^/:@]+)(?::([^\\\\/]+))?@)?((?:[^\\\\/:]+)|(?:\\[[0-9a-f:]+\\]))(?::(\\d+))?((?:/~(?:[^\\\\/]+))?[\\\\/]))?(.+)?$', 'http://me@1.2.3.4:80/D:\\x')",[214309]
"('URIish.java', 'org.eclipse.jgit.transport.URIish', '<init>', '^(file):([\\\\/](?![\\\\/])((?:[A-Za-z]:)?[\\\\/]?(?:(?:[^\\\\/]+[\\\\/]+)*[^\\\\/]+[\\\\/]*)))$', 'ssh+git://l usr\\example.com@[::1]/D:\\x')","[226085, 226269]"
"('Description.java', 'org.junit.runner.Description', 'methodAndClassNamePatternGroupOrDefault', '([\\s\\S]*)\\((.*)\\)', 'testManySolutionsCase2[OldRule? false](org.eclipse.jgit.ignore.IgnoreRuleSpecialCasesTest)')","[87170, 94275]"
"('URIish.java', 'org.eclipse.jgit.transport.URIish', '<init>', '^(file):([\\\\/](?![\\\\/])((?:[A-Za-z]:)?[\\\\/]?(?:(?:[^\\\\/]+[\\\\/]+)*[^\\\\/]+[\\\\/]*)))$', 'ssh+git://l usr\\example.com:wtf@example.com:80//')",[197534]
"('URIish.java', 'org.eclipse.jgit.transport.URIish', '<init>', '^(file):([\\\\/](?![\\\\/])((?:[A-Za-z]:)?[\\\\/]?(?:(?:[^\\\\/]+[\\\\/]+)*[^\\\\/]+[\\\\/]*)))$', 'ssh+git://lusr\\example@example.com:1234//abc')",[212538]
"('URIish.java', 'org.eclipse.jgit.transport.URIish', '<init>', '^(file):([\\\\/](?![\\\\/])((?:[A-Za-z]:)?[\\\\/]?(?:(?:[^\\\\/]+[\\\\/]+)*[^\\\\/]+[\\\\/]*)))$', 'https://[::1]//abc')","[244761, 244945, 245865, 246049, 246969, 247153]"
"('Description.java', 'org.junit.runner.Description', 'methodAndClassNamePatternGroupOrDefault', '([\\s\\S]*)\\((.*)\\)', 'testJustCommonPrefixIsNotMatch(org.eclipse.jgit.treewalk.filter.PathFilterGroupTest)')","[266223, 266371]"
"('URIish.java', 'org.eclipse.jgit.transport.URIish', '<init>', '^(file):([\\\\/](?![\\\\/])((?:[A-Za-z]:)?[\\\\/]?(?:(?:[^\\\\/]+[\\\\/]+)*[^\\\\/]+[\\\\/]*)))$', 'file:///tmp/jgit_test_1212230039583698495_tmp/tmp_6607950726549284424/.git/')",[5496]
"('URIish.java', 'org.eclipse.jgit.transport.URIish', '<init>', '^([a-z][a-z0-9+-]+)://(?:(?:([^/:@]+)(?::([^\\\\/]+))?@)?((?:[^\\\\/:]+)|(?:\\[[0-9a-f:]+\\]))(?::(\\d+))?((?:/~(?:[^\\\\/]+))?[\\\\/]))?(.+)?$', 'ssh+git://me:wtf@[::1]:1234//')",[197005]
"('URIish.java', 'org.eclipse.jgit.transport.URIish', '<init>', '^(file):([\\\\/](?![\\\\/])((?:[A-Za-z]:)?[\\\\/]?(?:(?:[^\\\\/]+[\\\\/]+)*[^\\\\/]+[\\\\/]*)))$', '/abc.git')",[247636]
"('URIish.java', 'org.eclipse.jgit.transport.URIish', '<init>', '^([a-z][a-z0-9+-]+)://(?:(?:([^/:@]+)(?::([^\\\\/]+))?@)?((?:[^\\\\/:]+)|(?:\\[[0-9a-f:]+\\]))(?::(\\d+))?((?:/~(?:[^\\\\/]+))?[\\\\/]))?(.+)?$', 'ssh+git://lusr\\example@example.com:1234/D:\\x')",[212653]
"('Description.java', 'org.junit.runner.Description', 'methodAndClassNamePatternGroupOrDefault', '([\\s\\S]*)\\((.*)\\)', 'testManySolutionsCase0[OldRule? true](org.eclipse.jgit.ignore.IgnoreRuleSpecialCasesTest)')","[90687, 97771]"
"('Description.java', 'org.junit.runner.Description', 'methodAndClassNamePatternGroupOrDefault', '([\\s\\S]*)\\((.*)\\)', 'testFastForwardRebaseWithAutoStash(org.eclipse.jgit.api.RebaseCommandTest)')","[131117, 132590]"
"('Description.java', 'org.junit.runner.Description', 'methodAndClassNamePatternGroupOrDefault', '([\\s\\S]*)\\((.*)\\)', 'testConfigureCache_PackedGitWindowSize_0(org.eclipse.jgit.internal.storage.file.WindowCacheReconfigureTest)')","[115598, 115749]"
"('URIish.java', 'org.eclipse.jgit.transport.URIish', '<init>', '^([a-z][a-z0-9+-]+)://(?:(?:([^/:@]+)(?::([^\\\\/]+))?@)?((?:[^\\\\/:]+)|(?:\\[[0-9a-f:]+\\]))(?::(\\d+))?((?:/~(?:[^\\\\/]+))?[\\\\/]))?(.+)?$', 'ssh+git://me@1.2.3.4:80//')",[210859]
"('ChangeIdUtil.java', 'org.eclipse.jgit.util.ChangeIdUtil', 'indexOfFirstFooterLine', '(^[a-zA-Z0-9-]+:(?!//).*$)', 'Issue: 42')",[34917]
"('Description.java', 'org.junit.runner.Description', 'methodAndClassNamePatternGroupOrDefault', '([\\s\\S]*)\\((.*)\\)', 'testAddGrowsWithObjects(org.eclipse.jgit.lib.ObjectIdOwnerMapTest)')","[59486, 59636]"
"('URIish.java', 'org.eclipse.jgit.transport.URIish', '<init>', '^([a-z][a-z0-9+-]+)://(?:(?:([^/:@]+)(?::([^\\\\/]+))?@)?((?:[^\\\\/:]+)|(?:\\[[0-9a-f:]+\\]))(?::(\\d+))?((?:/~(?:[^\\\\/]+))?[\\\\/]))?(.+)?$', 'ssh+git://me@1.2.3.4:1234/D:\\x')",[210813]
"('Description.java', 'org.junit.runner.Description', 'methodAndClassNamePatternGroupOrDefault', '([\\s\\S]*)\\((.*)\\)', 'testConstructor_PeeledStatusNotKnown(org.eclipse.jgit.lib.ObjectIdRefTest)')","[54598, 54664]"
"('Description.java', 'org.junit.runner.Description', 'methodAndClassNamePatternGroupOrDefault', '([\\s\\S]*)\\((.*)\\)', 'testVerySimplePatternCase4[OldRule? false](org.eclipse.jgit.ignore.IgnoreRuleSpecialCasesTest)')","[85813, 92918]"
"('Description.java', 'org.junit.runner.Description', 'methodAndClassNamePatternGroupOrDefault', '([\\s\\S]*)\\((.*)\\)', 'testTrackingRefUpdateDisabled(org.eclipse.jgit.transport.PushProcessTest)')","[203677, 204235]"
"('Description.java', 'org.junit.runner.Description', 'methodAndClassNamePatternGroupOrDefault', '([\\s\\S]*)\\((.*)\\)', 'repositoryWithUnconfiguredSubmodule(org.eclipse.jgit.submodule.SubmoduleUpdateTest)')","[17537, 17623]"
"('Description.java', 'org.junit.runner.Description', 'methodAndClassNamePatternGroupOrDefault', '([\\s\\S]*)\\((.*)\\)', 'testParse_OneFileCc(org.eclipse.jgit.patch.PatchCcTest)')","[1834, 1898]"
"('Description.java', 'org.junit.runner.Description', 'methodAndClassNamePatternGroupOrDefault', '([\\s\\S]*)\\((.*)\\)', 'testContructor(org.eclipse.jgit.internal.storage.file.PackWriterTest)')","[117887, 118343]"
"('URIish.java', 'org.eclipse.jgit.transport.URIish', '<init>', '^(file):([\\\\/](?![\\\\/])((?:[A-Za-z]:)?[\\\\/]?(?:(?:[^\\\\/]+[\\\\/]+)*[^\\\\/]+[\\\\/]*)))$', 'http://l usr\\example.com@[::1]/D:\\x')","[229397, 229581]"
"('URIish.java', 'org.eclipse.jgit.transport.URIish', '<init>', '^(file):([\\\\/](?![\\\\/])((?:[A-Za-z]:)?[\\\\/]?(?:(?:[^\\\\/]+[\\\\/]+)*[^\\\\/]+[\\\\/]*)))$', 'ssh+git://lusr\\example:wtf@1.2.3.4:1234/D:/x')",[198914]
"('Description.java', 'org.junit.runner.Description', 'methodAndClassNamePatternGroupOrDefault', '([\\s\\S]*)\\((.*)\\)', 'testObjectId_existing(org.eclipse.jgit.lib.RepositoryResolveTest)')","[71666, 72289]"
"('Description.java', 'org.junit.runner.Description', 'methodAndClassNamePatternGroupOrDefault', '([\\s\\S]*)\\((.*)\\)', 'testCache_Defaults(org.eclipse.jgit.internal.storage.file.WindowCacheGetTest)')","[115099, 115165]"
"('Description.java', 'org.junit.runner.Description', 'methodAndClassNamePatternGroupOrDefault', '([\\s\\S]*)\\((.*)\\)', 'testMergeSuccessAllStrategies(org.eclipse.jgit.api.MergeCommandTest)')","[127021, 127967]"
"('Description.java', 'org.junit.runner.Description', 'methodAndClassNamePatternGroupOrDefault', '([\\s\\S]*)\\((.*)\\)', 'testCommonScore_SameFiles(org.eclipse.jgit.diff.SimilarityIndexTest)')","[11365, 11534]"
"('URIish.java', 'org.eclipse.jgit.transport.URIish', '<init>', '^(file):([\\\\/](?![\\\\/])((?:[A-Za-z]:)?[\\\\/]?(?:(?:[^\\\\/]+[\\\\/]+)*[^\\\\/]+[\\\\/]*)))$', 'ssh://l usr\\example.com:wtf@example.com:1234//abc')",[193192]
"('Description.java', 'org.junit.runner.Description', 'methodAndClassNamePatternGroupOrDefault', '([\\s\\S]*)\\((.*)\\)', 'repositoryWithNoSubmodules(org.eclipse.jgit.submodule.SubmoduleStatusTest)')","[18844, 18998]"
"('Description.java', 'org.junit.runner.Description', 'methodAndClassNamePatternGroupOrDefault', '([\\s\\S]*)\\((.*)\\)', 'testOnlyOption_f1_13_d(org.eclipse.jgit.api.CommitOnlyTest)')","[136075, 138175]"
"('URIish.java', 'org.eclipse.jgit.transport.URIish', '<init>', '^(file):([\\\\/](?![\\\\/])((?:[A-Za-z]:)?[\\\\/]?(?:(?:[^\\\\/]+[\\\\/]+)*[^\\\\/]+[\\\\/]*)))$', 'ssh+git://me@example.com/D:/x')","[224199, 224383]"
"('Description.java', 'org.junit.runner.Description', 'methodAndClassNamePatternGroupOrDefault', '([\\s\\S]*)\\((.*)\\)', 'testFindObject(org.eclipse.jgit.internal.storage.file.PackReverseIndexTest)')","[116168, 116255]"
"('Description.java', 'org.junit.runner.Description', 'methodAndClassNamePatternGroupOrDefault', '([\\s\\S]*)\\((.*)\\)', 'testRemove(org.eclipse.jgit.revwalk.RevFlagSetTest)')","[178696, 178850]"
"('URIish.java', 'org.eclipse.jgit.transport.URIish', '<init>', '^(file):([\\\\/](?![\\\\/])((?:[A-Za-z]:)?[\\\\/]?(?:(?:[^\\\\/]+[\\\\/]+)*[^\\\\/]+[\\\\/]*)))$', 'ssh://lusr\\example@[::1]:80//')",[210100]
"('URIish.java', 'org.eclipse.jgit.transport.URIish', '<init>', '^(file):([\\\\/](?![\\\\/])((?:[A-Za-z]:)?[\\\\/]?(?:(?:[^\\\\/]+[\\\\/]+)*[^\\\\/]+[\\\\/]*)))$', 'http://me@[::1]//abc')","[228201, 228385]"
"('Description.java', 'org.junit.runner.Description', 'methodAndClassNamePatternGroupOrDefault', '([\\s\\S]*)\\((.*)\\)', 'testCloneEmpty(org.eclipse.jgit.revwalk.LIFORevQueueTest)')","[176431, 176538]"
"('Description.java', 'org.junit.runner.Description', 'methodAndClassNamePatternGroupOrDefault', '([\\s\\S]*)\\((.*)\\)', 'testTwoRangesInOneGroupCase1[OldRule? false](org.eclipse.jgit.ignore.IgnoreRuleSpecialCasesTest)')","[87975, 95080]"
"('URIish.java', 'org.eclipse.jgit.transport.URIish', '<init>', '^([a-z][a-z0-9+-]+)://(?:(?:([^/:@]+)(?::([^\\\\/]+))?@)?((?:[^\\\\/:]+)|(?:\\[[0-9a-f:]+\\]))(?::(\\d+))?((?:/~(?:[^\\\\/]+))?[\\\\/]))?(.+)?$', 'ssh+git://lusr\\example@1.2.3.4:1234//')",[212883]
"('Description.java', 'org.junit.runner.Description', 'methodAndClassNamePatternGroupOrDefault', '([\\s\\S]*)\\((.*)\\)', 'testEquals(org.eclipse.jgit.diff.RawTextTest)')","[10936, 11263]"
"('URIish.java', 'org.eclipse.jgit.transport.URIish', '<init>', '^(file):([\\\\/](?![\\\\/])((?:[A-Za-z]:)?[\\\\/]?(?:(?:[^\\\\/]+[\\\\/]+)*[^\\\\/]+[\\\\/]*)))$', 'http://lusr\\example@[::1]//abc')","[230409, 230593]"
"('Description.java', 'org.junit.runner.Description', 'methodAndClassNamePatternGroupOrDefault', '([\\s\\S]*)\\((.*)\\)', 'org.eclipse.jgit.internal.storage.file.InflatingBitSetTest')","[115874, 116069]"
"('Description.java', 'org.junit.runner.Description', 'methodAndClassNamePatternGroupOrDefault', '([\\s\\S]*)\\((.*)\\)', 'invalidNames(org.eclipse.jgit.lib.RepositoryResolveTest)')","[71332, 72157]"
"('Description.java', 'org.junit.runner.Description', 'methodAndClassNamePatternGroupOrDefault', '([\\s\\S]*)\\((.*)\\)', 'testRebaseWithUnstagedMasterChange(org.eclipse.jgit.api.RebaseCommandTest)')","[132083, 133602]"
"('Description.java', 'org.junit.runner.Description', 'methodAndClassNamePatternGroupOrDefault', '([\\s\\S]*)\\((.*)\\)', 'testMultipleCreations(org.eclipse.jgit.api.MergeCommandTest)')","[126643, 127571]"
"('URIish.java', 'org.eclipse.jgit.transport.URIish', '<init>', '^([a-z][a-z0-9+-]+)://(?:(?:([^/:@]+)(?::([^\\\\/]+))?@)?((?:[^\\\\/:]+)|(?:\\[[0-9a-f:]+\\]))(?::(\\d+))?((?:/~(?:[^\\\\/]+))?[\\\\/]))?(.+)?$', 'http://me@1.2.3.4/D:\\x')","[227948, 228132]"
"('URIish.java', 'org.eclipse.jgit.transport.URIish', '<init>', '^([a-z][a-z0-9+-]+)://(?:(?:([^/:@]+)(?::([^\\\\/]+))?@)?((?:[^\\\\/:]+)|(?:\\[[0-9a-f:]+\\]))(?::(\\d+))?((?:/~(?:[^\\\\/]+))?[\\\\/]))?(.+)?$', 'https://l usr\\example.com@[::1]:1234/D:/x')",[219438]
"('Description.java', 'org.junit.runner.Description', 'methodAndClassNamePatternGroupOrDefault', '([\\s\\S]*)\\((.*)\\)', 'testEmptyString(org.eclipse.jgit.lib.ConfigTest)')","[69831, 70566]"
"('Description.java', 'org.junit.runner.Description', 'methodAndClassNamePatternGroupOrDefault', '([\\s\\S]*)\\((.*)\\)', 'testWrite_Large(org.eclipse.jgit.transport.SideBandOutputStreamTest)')","[251955, 252195]"
"('Description.java', 'org.junit.runner.Description', 'methodAndClassNamePatternGroupOrDefault', '([\\s\\S]*)\\((.*)\\)', 'org.eclipse.jgit.lib.MergeHeadMsgTest')","[68498, 68607]"
"('Description.java', 'org.junit.runner.Description', 'methodAndClassNamePatternGroupOrDefault', '([\\s\\S]*)\\((.*)\\)', 'testPrefixCompare_9(org.eclipse.jgit.lib.AbbreviatedObjectIdTest)')","[55273, 55805]"
"('URIish.java', 'org.eclipse.jgit.transport.URIish', '<init>', '^(file):([\\\\/](?![\\\\/])((?:[A-Za-z]:)?[\\\\/]?(?:(?:[^\\\\/]+[\\\\/]+)*[^\\\\/]+[\\\\/]*)))$', 'ssh://lusr\\example:wtf@example.com:1234/D:/x')",[194444]
"('Description.java', 'org.junit.runner.Description', 'methodAndClassNamePatternGroupOrDefault', '([\\s\\S]*)\\((.*)\\)', 'testSquashMerge(org.eclipse.jgit.api.MergeCommandTest)')","[126664, 127593]"
"('Description.java', 'org.junit.runner.Description', 'methodAndClassNamePatternGroupOrDefault', '([\\s\\S]*)\\((.*)\\)', 'testDirectoryFileConflicts_10(org.eclipse.jgit.lib.DirCacheCheckoutTest)')","[61587, 62665]"
"('Description.java', 'org.junit.runner.Description', 'methodAndClassNamePatternGroupOrDefault', '([\\s\\S]*)\\((.*)\\)', 'testEmptyIteratorOnEmptyDirectory(org.eclipse.jgit.treewalk.FileTreeIteratorTest)')","[262124, 262468]"
"('URIish.java', 'org.eclipse.jgit.transport.URIish', '<init>', '^(file):([\\\\/](?![\\\\/])((?:[A-Za-z]:)?[\\\\/]?(?:(?:[^\\\\/]+[\\\\/]+)*[^\\\\/]+[\\\\/]*)))$', 'https://lusr\\example@example.com//abc')","[232985, 233169]"
"('Description.java', 'org.junit.runner.Description', 'methodAndClassNamePatternGroupOrDefault', '([\\s\\S]*)\\((.*)\\)', 'noStashRef(org.eclipse.jgit.api.StashListCommandTest)')","[165921, 166007]"
"('Description.java', 'org.junit.runner.Description', 'methodAndClassNamePatternGroupOrDefault', '([\\s\\S]*)\\((.*)\\)', 'testBuilder_AddAll(org.eclipse.jgit.util.RefListTest)')","[20201, 20704]"
"('URIish.java', 'org.eclipse.jgit.transport.URIish', '<init>', '^([a-z][a-z0-9+-]+)://(?:(?:([^/:@]+)(?::([^\\\\/]+))?@)?((?:[^\\\\/:]+)|(?:\\[[0-9a-f:]+\\]))(?::(\\d+))?((?:/~(?:[^\\\\/]+))?[\\\\/]))?(.+)?$', 'http://lusr\\example:wtf@[::1]:80//abc')",[202755]
"('Description.java', 'org.junit.runner.Description', 'methodAndClassNamePatternGroupOrDefault', '([\\s\\S]*)\\((.*)\\)', 'org.eclipse.jgit.api.AddCommandTest')","[164390, 165843]"
"('URIish.java', 'org.eclipse.jgit.transport.URIish', '<init>', '^(file):([\\\\/](?![\\\\/])((?:[A-Za-z]:)?[\\\\/]?(?:(?:[^\\\\/]+[\\\\/]+)*[^\\\\/]+[\\\\/]*)))$', 'https://lusr\\example:wtf@[::1]:80//abc')",[206834]
"('Description.java', 'org.junit.runner.Description', 'methodAndClassNamePatternGroupOrDefault', '([\\s\\S]*)\\((.*)\\)', 'testFastForwardWithNewFile(org.eclipse.jgit.api.RebaseCommandTest)')","[132293, 133822]"
"('Description.java', 'org.junit.runner.Description', 'methodAndClassNamePatternGroupOrDefault', '([\\s\\S]*)\\((.*)\\)', 'indexDelete(org.eclipse.jgit.api.StashCreateCommandTest)')","[156072, 156420]"
"('URIish.java', 'org.eclipse.jgit.transport.URIish', '<init>', '^([a-z][a-z0-9+-]+)://(?:(?:([^/:@]+)(?::([^\\\\/]+))?@)?((?:[^\\\\/:]+)|(?:\\[[0-9a-f:]+\\]))(?::(\\d+))?((?:/~(?:[^\\\\/]+))?[\\\\/]))?(.+)?$', '/tmp/jgit_test_4436388230543018363_tmp/tmp_2933209461077420112.git')","[186055, 186309]"
"('URIish.java', 'org.eclipse.jgit.transport.URIish', '<init>', '^(file):([\\\\/](?![\\\\/])((?:[A-Za-z]:)?[\\\\/]?(?:(?:[^\\\\/]+[\\\\/]+)*[^\\\\/]+[\\\\/]*)))$', 'ssh+git://l usr\\example.com@[::1]:80//abc')",[212354]
"('Description.java', 'org.junit.runner.Description', 'methodAndClassNamePatternGroupOrDefault', '([\\s\\S]*)\\((.*)\\)', 'testFilter_NONE_And_MY_ALL(org.eclipse.jgit.revwalk.RevWalkFilterTest)')","[180752, 181078]"
"('URIish.java', 'org.eclipse.jgit.transport.URIish', '<init>', '^([a-z][a-z0-9+-]+)://(?:(?:([^/:@]+)(?::([^\\\\/]+))?@)?((?:[^\\\\/:]+)|(?:\\[[0-9a-f:]+\\]))(?::(\\d+))?((?:/~(?:[^\\\\/]+))?[\\\\/]))?(.+)?$', 'ssh+git://lusr\\example:wtf@[::1]:80/D:/x')",[199489]
"('URIish.java', 'org.eclipse.jgit.transport.URIish', '<init>', '^([a-z][a-z0-9+-]+)://(?:(?:([^/:@]+)(?::([^\\\\/]+))?@)?((?:[^\\\\/:]+)|(?:\\[[0-9a-f:]+\\]))(?::(\\d+))?((?:/~(?:[^\\\\/]+))?[\\\\/]))?(.+)?$', 'ssh://l usr\\example.com@1.2.3.4:1234/D:\\x')",[208605]
"('Description.java', 'org.junit.runner.Description', 'methodAndClassNamePatternGroupOrDefault', '([\\s\\S]*)\\((.*)\\)', 'testReadLines_CRLF(org.eclipse.jgit.util.ReadLinesTest)')","[30516, 30647]"
"('URIish.java', 'org.eclipse.jgit.transport.URIish', '<init>', '^([a-z][a-z0-9+-]+)://(?:(?:([^/:@]+)(?::([^\\\\/]+))?@)?((?:[^\\\\/:]+)|(?:\\[[0-9a-f:]+\\]))(?::(\\d+))?((?:/~(?:[^\\\\/]+))?[\\\\/]))?(.+)?$', 'https://me@example.com:1234/D:\\x')",[217069]
"('Description.java', 'org.junit.runner.Description', 'methodAndClassNamePatternGroupOrDefault', '([\\s\\S]*)\\((.*)\\)', 'testNoChange(org.eclipse.jgit.notes.NoteMapMergerTest)')","[259611, 259983]"
"('URIish.java', 'org.eclipse.jgit.transport.URIish', '<init>', '^([a-z][a-z0-9+-]+)://(?:(?:([^/:@]+)(?::([^\\\\/]+))?@)?((?:[^\\\\/:]+)|(?:\\[[0-9a-f:]+\\]))(?::(\\d+))?((?:/~(?:[^\\\\/]+))?[\\\\/]))?(.+)?$', 'https://me@example.com:1234/D:/x')",[217023]
"('Description.java', 'org.junit.runner.Description', 'methodAndClassNamePatternGroupOrDefault', '([\\s\\S]*)\\((.*)\\)', 'testInCoreLimit_SwitchBeforeAppendByte(org.eclipse.jgit.util.TemporaryBufferTest)')","[26575, 26876]"
"('Description.java', 'org.junit.runner.Description', 'methodAndClassNamePatternGroupOrDefault', '([\\s\\S]*)\\((.*)\\)', 'deleteBranch_historyPruned(org.eclipse.jgit.internal.storage.file.GcBranchPrunedTest)')","[115389, 115455]"
"('Description.java', 'org.junit.runner.Description', 'methodAndClassNamePatternGroupOrDefault', '([\\s\\S]*)\\((.*)\\)', 'workingDirectoryDelete(org.eclipse.jgit.api.StashCreateCommandTest)')","[156051, 156398]"
"('Description.java', 'org.junit.runner.Description', 'methodAndClassNamePatternGroupOrDefault', '([\\s\\S]*)\\((.*)\\)', 'testGetRefs_DiscoversNewLoose1(org.eclipse.jgit.internal.storage.file.RefDirectoryTest)')","[111496, 112703]"
"('URIish.java', 'org.eclipse.jgit.transport.URIish', '<init>', '^(file):([\\\\/](?![\\\\/])((?:[A-Za-z]:)?[\\\\/]?(?:(?:[^\\\\/]+[\\\\/]+)*[^\\\\/]+[\\\\/]*)))$', 'file:///tmp/jgit_test_500639673404351849_tmp/tmp_418537364732325258/.git/')","[13784, 13907]"
"('Description.java', 'org.junit.runner.Description', 'methodAndClassNamePatternGroupOrDefault', '([\\s\\S]*)\\((.*)\\)', 'testCheckoutWithNonDeletedFiles(org.eclipse.jgit.api.CheckoutCommandTest)')","[149577, 150119]"
"('Description.java', 'org.junit.runner.Description', 'methodAndClassNamePatternGroupOrDefault', '([\\s\\S]*)\\((.*)\\)', 'testParse_OnlyLFMessage(org.eclipse.jgit.revwalk.RevTagParseTest)')","[179583, 179988]"
"('Description.java', 'org.junit.runner.Description', 'methodAndClassNamePatternGroupOrDefault', '([\\s\\S]*)\\((.*)\\)', 'crissCrossMerge_ThreeCommonPredecessors(org.eclipse.jgit.merge.RecursiveMergerTest)')","[15162, 15314]"
"('URIish.java', 'org.eclipse.jgit.transport.URIish', '<init>', '^([a-z][a-z0-9+-]+)://(?:(?:([^/:@]+)(?::([^\\\\/]+))?@)?((?:[^\\\\/:]+)|(?:\\[[0-9a-f:]+\\]))(?::(\\d+))?((?:/~(?:[^\\\\/]+))?[\\\\/]))?(.+)?$', 'https://l usr\\example.com@example.com//')","[231858, 232042]"
"('URIish.java', 'org.eclipse.jgit.transport.URIish', '<init>', '^([a-z][a-z0-9+-]+)://(?:(?:([^/:@]+)(?::([^\\\\/]+))?@)?((?:[^\\\\/:]+)|(?:\\[[0-9a-f:]+\\]))(?::(\\d+))?((?:/~(?:[^\\\\/]+))?[\\\\/]))?(.+)?$', 'file:///tmp/jgit_test_7662726567108576804_tmp/tmp_1579710296504973156.git/')",[7538]
"('URIish.java', 'org.eclipse.jgit.transport.URIish', '<init>', '^([a-z][a-z0-9+-]+)://(?:(?:([^/:@]+)(?::([^\\\\/]+))?@)?((?:[^\\\\/:]+)|(?:\\[[0-9a-f:]+\\]))(?::(\\d+))?((?:/~(?:[^\\\\/]+))?[\\\\/]))?(.+)?$', 'ssh+git://me:wtf@example.com:1234//abc')",[195525]
"('Description.java', 'org.junit.runner.Description', 'methodAndClassNamePatternGroupOrDefault', '([\\s\\S]*)\\((.*)\\)', 'testStopOnConflictAndSkipWithConflict(org.eclipse.jgit.api.RebaseCommandTest)')","[132503, 134042]"
"('Description.java', 'org.junit.runner.Description', 'methodAndClassNamePatternGroupOrDefault', '([\\s\\S]*)\\((.*)\\)', 'testDanglingCommitShouldContinueLane(org.eclipse.jgit.revplot.PlotCommitListTest)')","[169574, 169904]"
"('Description.java', 'org.junit.runner.Description', 'methodAndClassNamePatternGroupOrDefault', '([\\s\\S]*)\\((.*)\\)', 'testStringOfPearls_DirPath2_NoParentRewriting(org.eclipse.jgit.revwalk.RevWalkPathFilter1Test)')","[175455, 175737]"
"('URIish.java', 'org.eclipse.jgit.transport.URIish', '<init>', '^(?:([^/:@]+)(?::([^\\\\/]+))?@)?((?:[^\\\\/:]+)|(?:\\[[0-9a-f:]+\\])):((?:(?:/~(?:[^\\\\/]+))[\\\\/])?(?:(?:[^\\\\/]+[\\\\/]+)*[^\\\\/]+[\\\\/]*))$', '/abc/')",[253021]
"('Description.java', 'org.junit.runner.Description', 'methodAndClassNamePatternGroupOrDefault', '([\\s\\S]*)\\((.*)\\)', 'testConflictingMergeFailsDueToDirtyWorktree(org.eclipse.jgit.api.MergeCommandTest)')","[126958, 127901]"
"('URIish.java', 'org.eclipse.jgit.transport.URIish', '<init>', '^([a-z][a-z0-9+-]+)://(?:(?:([^/:@]+)(?::([^\\\\/]+))?@)?((?:[^\\\\/:]+)|(?:\\[[0-9a-f:]+\\]))(?::(\\d+))?((?:/~(?:[^\\\\/]+))?[\\\\/]))?(.+)?$', 'ssh://me@[::1]:80//')",[207915]
"('URIish.java', 'org.eclipse.jgit.transport.URIish', '<init>', '^(file):([\\\\/](?![\\\\/])((?:[A-Za-z]:)?[\\\\/]?(?:(?:[^\\\\/]+[\\\\/]+)*[^\\\\/]+[\\\\/]*)))$', 'file:///tmp/jgit_test_477294897805989668_tmp/tmp_8963832828128156712')","[165390, 165447, 165504, 165561]"
"('Description.java', 'org.junit.runner.Description', 'methodAndClassNamePatternGroupOrDefault', '([\\s\\S]*)\\((.*)\\)', 'testWritePack2DeltasReuseOffsets(org.eclipse.jgit.internal.storage.file.PackWriterTest)')","[117593, 118035]"
"('Description.java', 'org.junit.runner.Description', 'methodAndClassNamePatternGroupOrDefault', '([\\s\\S]*)\\((.*)\\)', 'testError_CcTruncatedOld(org.eclipse.jgit.patch.PatchCcErrorTest)')","[222, 244]"
"('Description.java', 'org.junit.runner.Description', 'methodAndClassNamePatternGroupOrDefault', '([\\s\\S]*)\\((.*)\\)', 'testLocalTransportWithRelativePath(org.eclipse.jgit.transport.TransportTest)')","[254544, 254720]"
"('Description.java', 'org.junit.runner.Description', 'methodAndClassNamePatternGroupOrDefault', '([\\s\\S]*)\\((.*)\\)', 'org.eclipse.jgit.diff.DiffEntryTest')","[9872, 10652]"
"('Description.java', 'org.junit.runner.Description', 'methodAndClassNamePatternGroupOrDefault', '([\\s\\S]*)\\((.*)\\)', 'testEmptyList(org.eclipse.jgit.util.BlockListTest)')","[27596, 27855]"
"('Description.java', 'org.junit.runner.Description', 'methodAndClassNamePatternGroupOrDefault', '([\\s\\S]*)\\((.*)\\)', 'org.eclipse.jgit.submodule.SubmoduleAddTest')","[17817, 18661]"
"('ChangeIdUtil.java', 'org.eclipse.jgit.util.ChangeIdUtil', 'indexOfFirstFooterLine', '(^[a-zA-Z0-9-]+:(?!//).*$)', 'does not fix it.')",[37036]
"('Description.java', 'org.junit.runner.Description', 'methodAndClassNamePatternGroupOrDefault', '([\\s\\S]*)\\((.*)\\)', 'testTwoEntries_ForwardOneAtATime(org.eclipse.jgit.treewalk.CanonicalTreeParserTest)')","[261378, 261699]"
"('Description.java', 'org.junit.runner.Description', 'methodAndClassNamePatternGroupOrDefault', '([\\s\\S]*)\\((.*)\\)', 'testDigitGroupCase1[OldRule? false](org.eclipse.jgit.ignore.IgnoreRuleSpecialCasesTest)')","[86388, 93493]"
"('URIish.java', 'org.eclipse.jgit.transport.URIish', '<init>', '^(file):([\\\\/](?![\\\\/])((?:[A-Za-z]:)?[\\\\/]?(?:(?:[^\\\\/]+[\\\\/]+)*[^\\\\/]+[\\\\/]*)))$', 'https://1.2.3.4/D:\\x')","[244485, 244669, 245589, 245773, 246693, 246877]"
"('Description.java', 'org.junit.runner.Description', 'methodAndClassNamePatternGroupOrDefault', '([\\s\\S]*)\\((.*)\\)', 'org.eclipse.jgit.revwalk.RevWalkUtilsReachableTest')","[177023, 177261]"
"('Description.java', 'org.junit.runner.Description', 'methodAndClassNamePatternGroupOrDefault', '([\\s\\S]*)\\((.*)\\)', 'testRemoveOnlyURI(org.eclipse.jgit.transport.RemoteConfigTest)')","[253695, 254267]"
"('URIish.java', 'org.eclipse.jgit.transport.URIish', '<init>', '^([\\\\/]?((?:[A-Za-z]:)?[\\\\/]?(?:(?:[^\\\\/]+[\\\\/]+)*[^\\\\/]+[\\\\/]*)))$', '/tmp/jgit_test_8267236767099531789_tmp/tmp_530234452973594559/.git')","[130485, 130635]"
"('Description.java', 'org.junit.runner.Description', 'methodAndClassNamePatternGroupOrDefault', '([\\s\\S]*)\\((.*)\\)', 'testInvalidTreeModeNotOctal1(org.eclipse.jgit.lib.ObjectCheckerTest)')","[48500, 50988]"
"('Description.java', 'org.junit.runner.Description', 'methodAndClassNamePatternGroupOrDefault', '([\\s\\S]*)\\((.*)\\)', 'testEmpty(org.eclipse.jgit.revwalk.DateRevQueueTest)')","[174948, 175097]"
"('URIish.java', 'org.eclipse.jgit.transport.URIish', '<init>', '^(file):([\\\\/](?![\\\\/])((?:[A-Za-z]:)?[\\\\/]?(?:(?:[^\\\\/]+[\\\\/]+)*[^\\\\/]+[\\\\/]*)))$', 'http://me@1.2.3.4:80/D:/x')",[214240]
"('URIish.java', 'org.eclipse.jgit.transport.URIish', '<init>', '^(file):([\\\\/](?![\\\\/])((?:[A-Za-z]:)?[\\\\/]?(?:(?:[^\\\\/]+[\\\\/]+)*[^\\\\/]+[\\\\/]*)))$', 'ssh://me@[::1]//abc')","[221577, 221761]"
"('URIish.java', 'org.eclipse.jgit.transport.URIish', '<init>', '^(?:([^/:@]+)(?::([^\\\\/]+))?@)?((?:[^\\\\/:]+)|(?:\\[[0-9a-f:]+\\])):((?:(?:/~(?:[^\\\\/]+))[\\\\/])?(?:(?:[^\\\\/]+[\\\\/]+)*[^\\\\/]+[\\\\/]*))$', '/abc.git/')",[248096]
"('Description.java', 'org.junit.runner.Description', 'methodAndClassNamePatternGroupOrDefault', '([\\s\\S]*)\\((.*)\\)', 'testOnlyOption_f1_1_a(org.eclipse.jgit.api.CommitOnlyTest)')","[134437, 136459]"
"('FastIgnoreRule.java', 'org.eclipse.jgit.ignore.FastIgnoreRule', 'isMatch', 'a.*b', 'b')",[101237]
"('Description.java', 'org.junit.runner.Description', 'methodAndClassNamePatternGroupOrDefault', '([\\s\\S]*)\\((.*)\\)', 'testRejectInvalidWindowsCharacters(org.eclipse.jgit.lib.ObjectCheckerTest)')","[50012, 52572]"
"('URIish.java', 'org.eclipse.jgit.transport.URIish', '<init>', '^(file):([\\\\/](?![\\\\/])((?:[A-Za-z]:)?[\\\\/]?(?:(?:[^\\\\/]+[\\\\/]+)*[^\\\\/]+[\\\\/]*)))$', 'https://me@[::1]:80/D:\\x')",[217989]
"('URIish.java', 'org.eclipse.jgit.transport.URIish', '<init>', '^([a-z][a-z0-9+-]+)://(?:(?:([^/:@]+)(?::([^\\\\/]+))?@)?((?:[^\\\\/:]+)|(?:\\[[0-9a-f:]+\\]))(?::(\\d+))?((?:/~(?:[^\\\\/]+))?[\\\\/]))?(.+)?$', 'ssh://me@1.2.3.4/D:\\x')","[221324, 221508]"
"('FastIgnoreRule.java', 'org.eclipse.jgit.ignore.FastIgnoreRule', 'isMatch', '[\\p{Punct}]', 'a')",[101185]
"('Description.java', 'org.junit.runner.Description', 'methodAndClassNamePatternGroupOrDefault', '([\\s\\S]*)\\((.*)\\)', 'testSuccessfulMergeFailsDueToDirtyWorktree(org.eclipse.jgit.api.MergeCommandTest)')","[126832, 127769]"
"('Description.java', 'org.junit.runner.Description', 'methodAndClassNamePatternGroupOrDefault', '([\\s\\S]*)\\((.*)\\)', 'test002_WriteEmptyTree2(org.eclipse.jgit.internal.storage.file.T0003_BasicTest)')","[116378, 116905]"
"('Description.java', 'org.junit.runner.Description', 'methodAndClassNamePatternGroupOrDefault', '([\\s\\S]*)\\((.*)\\)', 'testEqualsWithoutWhitespace(org.eclipse.jgit.diff.RawTextIgnoreLeadingWhitespaceTest)')","[3890, 3933]"
"('URIish.java', 'org.eclipse.jgit.transport.URIish', '<init>', '^([a-z][a-z0-9+-]+)://(?:(?:([^/:@]+)(?::([^\\\\/]+))?@)?((?:[^\\\\/:]+)|(?:\\[[0-9a-f:]+\\]))(?::(\\d+))?((?:/~(?:[^\\\\/]+))?[\\\\/]))?(.+)?$', 'http://lusr\\example@example.com:1234/D:/x')",[215919]
"('URIish.java', 'org.eclipse.jgit.transport.URIish', '<init>', '^(file):([\\\\/](?![\\\\/])((?:[A-Za-z]:)?[\\\\/]?(?:(?:[^\\\\/]+[\\\\/]+)*[^\\\\/]+[\\\\/]*)))$', 'https://me@1.2.3.4:80//')",[217460]
"('Description.java', 'org.junit.runner.Description', 'methodAndClassNamePatternGroupOrDefault', '([\\s\\S]*)\\((.*)\\)', 'testReadBoolean_OnOff2(org.eclipse.jgit.lib.ConfigTest)')","[69474, 70192]"
"('Description.java', 'org.junit.runner.Description', 'methodAndClassNamePatternGroupOrDefault', '([\\s\\S]*)\\((.*)\\)', 'testTrivialTwoWay_conflictSubtreeChange(org.eclipse.jgit.merge.SimpleMergeTest)')","[15606, 15888]"
"('Description.java', 'org.junit.runner.Description', 'methodAndClassNamePatternGroupOrDefault', '([\\s\\S]*)\\((.*)\\)', 'testCopyConstructorReusesArray(org.eclipse.jgit.util.RefListTest)')","[19865, 20352]"
"('Description.java', 'org.junit.runner.Description', 'methodAndClassNamePatternGroupOrDefault', '([\\s\\S]*)\\((.*)\\)', 'testInvalidCommitInvalidParent1(org.eclipse.jgit.lib.ObjectCheckerTest)')","[49193, 51714]"
"('Description.java', 'org.junit.runner.Description', 'methodAndClassNamePatternGroupOrDefault', '([\\s\\S]*)\\((.*)\\)', 'test000_sort_03(org.eclipse.jgit.lib.T0002_TreeTest)')","[58633, 58936]"
"('ChangeIdUtil.java', 'org.eclipse.jgit.util.ChangeIdUtil', 'indexOfChangeId', '(^Change-Id: *I[a-f0-9]{40}$)', 'Issue: 42')",[34839]
"('URIish.java', 'org.eclipse.jgit.transport.URIish', '<init>', '^([a-z][a-z0-9+-]+)://(?:(?:([^/:@]+)(?::([^\\\\/]+))?@)?((?:[^\\\\/:]+)|(?:\\[[0-9a-f:]+\\]))(?::(\\d+))?((?:/~(?:[^\\\\/]+))?[\\\\/]))?(.+)?$', 'ssh://1.2.3.4/D:\\x')","[234572, 234756, 235676, 235860, 236780, 236964]"
"('URIish.java', 'org.eclipse.jgit.transport.URIish', '<init>', '^(file):([\\\\/](?![\\\\/])((?:[A-Za-z]:)?[\\\\/]?(?:(?:[^\\\\/]+[\\\\/]+)*[^\\\\/]+[\\\\/]*)))$', 'http://me@[::1]:80//abc')",[214562]
"('URIish.java', 'org.eclipse.jgit.transport.URIish', '<init>', '^(file):([\\\\/](?![\\\\/])((?:[A-Za-z]:)?[\\\\/]?(?:(?:[^\\\\/]+[\\\\/]+)*[^\\\\/]+[\\\\/]*)))$', 'ssh://me:wtf@1.2.3.4:1234/D:\\x')",[192548]
"('URIish.java', 'org.eclipse.jgit.transport.URIish', '<init>', '^([a-z][a-z0-9+-]+)://(?:(?:([^/:@]+)(?::([^\\\\/]+))?@)?((?:[^\\\\/:]+)|(?:\\[[0-9a-f:]+\\]))(?::(\\d+))?((?:/~(?:[^\\\\/]+))?[\\\\/]))?(.+)?$', 'https://lusr\\example:wtf@1.2.3.4:80/D:/x')",[206535]
"('Description.java', 'org.junit.runner.Description', 'methodAndClassNamePatternGroupOrDefault', '([\\s\\S]*)\\((.*)\\)', 'testSetForceUpdate(org.eclipse.jgit.transport.RefSpecTest)')","[186822, 187555]"
"('Description.java', 'org.junit.runner.Description', 'methodAndClassNamePatternGroupOrDefault', '([\\s\\S]*)\\((.*)\\)', 'testUpdateRefLockFailureLocked(org.eclipse.jgit.internal.storage.file.RefUpdateTest)')","[119865, 120698]"
"('Description.java', 'org.junit.runner.Description', 'methodAndClassNamePatternGroupOrDefault', '([\\s\\S]*)\\((.*)\\)', 'testAlphaGroupCase0(org.eclipse.jgit.fnmatch.FileNameMatcherTest)')","[42427, 45734]"
"('Description.java', 'org.junit.runner.Description', 'methodAndClassNamePatternGroupOrDefault', '([\\s\\S]*)\\((.*)\\)', 'testDeleteHead(org.eclipse.jgit.internal.storage.file.RefUpdateTest)')","[120201, 121050]"
"('URIish.java', 'org.eclipse.jgit.transport.URIish', '<init>', '^([a-z][a-z0-9+-]+)://(?:(?:([^/:@]+)(?::([^\\\\/]+))?@)?((?:[^\\\\/:]+)|(?:\\[[0-9a-f:]+\\]))(?::(\\d+))?((?:/~(?:[^\\\\/]+))?[\\\\/]))?(.+)?$', 'ssh+git://l usr\\example.com@[::1]:80//abc')",[212377]
"('URIish.java', 'org.eclipse.jgit.transport.URIish', '<init>', '^(file):([\\\\/](?![\\\\/])((?:[A-Za-z]:)?[\\\\/]?(?:(?:[^\\\\/]+[\\\\/]+)*[^\\\\/]+[\\\\/]*)))$', 'https://l usr\\example.com@1.2.3.4:1234//abc')",[219001]
"('URIish.java', 'org.eclipse.jgit.transport.URIish', '<init>', '^([a-z][a-z0-9+-]+)://(?:(?:([^/:@]+)(?::([^\\\\/]+))?@)?((?:[^\\\\/:]+)|(?:\\[[0-9a-f:]+\\]))(?::(\\d+))?((?:/~(?:[^\\\\/]+))?[\\\\/]))?(.+)?$', 'http://me@1.2.3.4:80//')",[214171]
"('URIish.java', 'org.eclipse.jgit.transport.URIish', '<init>', '^(?:([^/:@]+)(?::([^\\\\/]+))?@)?((?:[^\\\\/:]+)|(?:\\[[0-9a-f:]+\\])):((?:(?:/~(?:[^\\\\/]+))[\\\\/])?(?:(?:[^\\\\/]+[\\\\/]+)*[^\\\\/]+[\\\\/]*))$', '/tmp/jgit_test_2307217292654954211_tmp/tmp_6715492902754415962.git')",[184097]
"('Description.java', 'org.junit.runner.Description', 'methodAndClassNamePatternGroupOrDefault', '([\\s\\S]*)\\((.*)\\)', 'testBasic[OldRule? false](org.eclipse.jgit.ignore.IgnoreMatcherParametrizedTest)')","[103443, 103924]"
"('Description.java', 'org.junit.runner.Description', 'methodAndClassNamePatternGroupOrDefault', '([\\s\\S]*)\\((.*)\\)', 'testDequote_BareABCZ_OnlyBC(org.eclipse.jgit.util.QuotedStringGitPathStyleTest)')","[39765, 40187]"
"('FastIgnoreRule.java', 'org.eclipse.jgit.ignore.FastIgnoreRule', 'isMatch', '[\\p{Ll}]', 'A')",[99857]
"('Description.java', 'org.junit.runner.Description', 'methodAndClassNamePatternGroupOrDefault', '([\\s\\S]*)\\((.*)\\)', 'testMixedGroupCase0[OldRule? true](org.eclipse.jgit.ignore.IgnoreRuleSpecialCasesTest)')","[88686, 95770]"
"('Description.java', 'org.junit.runner.Description', 'methodAndClassNamePatternGroupOrDefault', '([\\s\\S]*)\\((.*)\\)', 'testTwoSimilarModsAndOneInsert(org.eclipse.jgit.merge.MergeAlgorithmTest)')","[12039, 12340]"
"('URIish.java', 'org.eclipse.jgit.transport.URIish', '<init>', '^(file):([\\\\/](?![\\\\/])((?:[A-Za-z]:)?[\\\\/]?(?:(?:[^\\\\/]+[\\\\/]+)*[^\\\\/]+[\\\\/]*)))$', 'http://lusr\\example@1.2.3.4:80//abc')",[216402]
"('URIish.java', 'org.eclipse.jgit.transport.URIish', '<init>', '^([a-z][a-z0-9+-]+)://(?:(?:([^/:@]+)(?::([^\\\\/]+))?@)?((?:[^\\\\/:]+)|(?:\\[[0-9a-f:]+\\]))(?::(\\d+))?((?:/~(?:[^\\\\/]+))?[\\\\/]))?(.+)?$', 'file:///tmp/jgit_test_1453594300143160598_tmp/tmp_5336065936066258285/.git/')","[14276, 14524]"
"('Description.java', 'org.junit.runner.Description', 'methodAndClassNamePatternGroupOrDefault', '([\\s\\S]*)\\((.*)\\)', 'testEncodeInt32(org.eclipse.jgit.util.NBTest)')","[39177, 39352]"
"('Description.java', 'org.junit.runner.Description', 'methodAndClassNamePatternGroupOrDefault', '([\\s\\S]*)\\((.*)\\)', 'org.eclipse.jgit.lib.ObjectIdOwnerMapTest')","[59423, 59850]"
"('URIish.java', 'org.eclipse.jgit.transport.URIish', '<init>', '^(file):([\\\\/](?![\\\\/])((?:[A-Za-z]:)?[\\\\/]?(?:(?:[^\\\\/]+[\\\\/]+)*[^\\\\/]+[\\\\/]*)))$', 'ssh+git://l usr\\example.com:wtf@1.2.3.4:80/D:\\x')",[198040]
"('Description.java', 'org.junit.runner.Description', 'methodAndClassNamePatternGroupOrDefault', '([\\s\\S]*)\\((.*)\\)', 'testUnsupportedGroupCase1(org.eclipse.jgit.fnmatch.FileNameMatcherTest)')","[43141, 46482]"
"('Description.java', 'org.junit.runner.Description', 'methodAndClassNamePatternGroupOrDefault', '([\\s\\S]*)\\((.*)\\)', 'testNoBareDot(org.eclipse.jgit.lib.ValidRefNameTest)')","[65991, 66364]"
"('Description.java', 'org.junit.runner.Description', 'methodAndClassNamePatternGroupOrDefault', '([\\s\\S]*)\\((.*)\\)', 'testOneEntry_Backwards(org.eclipse.jgit.treewalk.CanonicalTreeParserTest)')","[261483, 261809]"
"('URIish.java', 'org.eclipse.jgit.transport.URIish', '<init>', '^(file):([\\\\/](?![\\\\/])((?:[A-Za-z]:)?[\\\\/]?(?:(?:[^\\\\/]+[\\\\/]+)*[^\\\\/]+[\\\\/]*)))$', 'ssh+git://me@1.2.3.4//abc')","[224521, 224705]"
"('Description.java', 'org.junit.runner.Description', 'methodAndClassNamePatternGroupOrDefault', '([\\s\\S]*)\\((.*)\\)', 'testFileCommittedModifiedIgnored(org.eclipse.jgit.treewalk.filter.IndexDiffFilterTest)')","[264611, 265431]"
"('Description.java', 'org.junit.runner.Description', 'methodAndClassNamePatternGroupOrDefault', '([\\s\\S]*)\\((.*)\\)', 'testConsoleText(org.eclipse.jgit.nls.RootLocaleTest)')","[41167, 41254]"
"('URIish.java', 'org.eclipse.jgit.transport.URIish', '<init>', '^([a-z][a-z0-9+-]+)://(?:(?:([^/:@]+)(?::([^\\\\/]+))?@)?((?:[^\\\\/:]+)|(?:\\[[0-9a-f:]+\\]))(?::(\\d+))?((?:/~(?:[^\\\\/]+))?[\\\\/]))?(.+)?$', 'ssh+git://l usr\\example.com:wtf@[::1]:80//')",[198293]
"('URIish.java', 'org.eclipse.jgit.transport.URIish', '<init>', '^([a-z][a-z0-9+-]+)://(?:(?:([^/:@]+)(?::([^\\\\/]+))?@)?((?:[^\\\\/:]+)|(?:\\[[0-9a-f:]+\\]))(?::(\\d+))?((?:/~(?:[^\\\\/]+))?[\\\\/]))?(.+)?$', '/tmp/jgit_test_2902873097385022246_tmp/tmp_6356966833193134406')","[160456, 160586]"
"('Description.java', 'org.junit.runner.Description', 'methodAndClassNamePatternGroupOrDefault', '([\\s\\S]*)\\((.*)\\)', 'testObjectId_objectid_explicit_firstparent(org.eclipse.jgit.lib.RepositoryResolveTest)')","[71752, 72355]"
"('URIish.java', 'org.eclipse.jgit.transport.URIish', '<init>', '^(file):([\\\\/](?![\\\\/])((?:[A-Za-z]:)?[\\\\/]?(?:(?:[^\\\\/]+[\\\\/]+)*[^\\\\/]+[\\\\/]*)))$', 'ssh+git://me@example.com:80/D:\\x')",[210606]
"('Description.java', 'org.junit.runner.Description', 'methodAndClassNamePatternGroupOrDefault', '([\\s\\S]*)\\((.*)\\)', 'testSpecialGroupCase3(org.eclipse.jgit.fnmatch.FileNameMatcherTest)')","[41419, 44678]"
"('Description.java', 'org.junit.runner.Description', 'methodAndClassNamePatternGroupOrDefault', '([\\s\\S]*)\\((.*)\\)', 'testNegationAllExceptJavaInSrcAndExceptChildDirInSrc(org.eclipse.jgit.ignore.IgnoreNodeTest)')","[108187, 108488]"
"('URIish.java', 'org.eclipse.jgit.transport.URIish', '<init>', '^([a-z][a-z0-9+-]+)://(?:(?:([^/:@]+)(?::([^\\\\/]+))?@)?((?:[^\\\\/:]+)|(?:\\[[0-9a-f:]+\\]))(?::(\\d+))?((?:/~(?:[^\\\\/]+))?[\\\\/]))?(.+)?$', 'https://me:wtf@1.2.3.4:80//')",[204191]
"('URIish.java', 'org.eclipse.jgit.transport.URIish', '<init>', '^([a-z][a-z0-9+-]+)://(?:(?:([^/:@]+)(?::([^\\\\/]+))?@)?((?:[^\\\\/:]+)|(?:\\[[0-9a-f:]+\\]))(?::(\\d+))?((?:/~(?:[^\\\\/]+))?[\\\\/]))?(.+)?$', 'file:///tmp/jgit_test_916033517641211181_tmp/tmp_6621953051006342817/.git/')",[19274]
"('Description.java', 'org.junit.runner.Description', 'methodAndClassNamePatternGroupOrDefault', '([\\s\\S]*)\\((.*)\\)', 'isWildcardShouldWorkForWildcardSuffixAndComponent(org.eclipse.jgit.transport.RefSpecTest)')","[186885, 187621]"
"('Description.java', 'org.junit.runner.Description', 'methodAndClassNamePatternGroupOrDefault', '([\\s\\S]*)\\((.*)\\)', 'testSetFastForwardMergeoptions(org.eclipse.jgit.lib.ConfigTest)')","[69558, 70280]"
"('Description.java', 'org.junit.runner.Description', 'methodAndClassNamePatternGroupOrDefault', '([\\s\\S]*)\\((.*)\\)', 'testNewFileNoWait(org.eclipse.jgit.internal.storage.file.FileSnapshotTest)')","[109758, 109845]"
"('Description.java', 'org.junit.runner.Description', 'methodAndClassNamePatternGroupOrDefault', '([\\s\\S]*)\\((.*)\\)', 'org.eclipse.jgit.ignore.IgnoreRuleSpecialCasesTest')",[84711]
"('Description.java', 'org.junit.runner.Description', 'methodAndClassNamePatternGroupOrDefault', '([\\s\\S]*)\\((.*)\\)', 'testEmpty(org.eclipse.jgit.patch.PatchTest)')","[2043, 2192]"
"('Description.java', 'org.junit.runner.Description', 'methodAndClassNamePatternGroupOrDefault', '([\\s\\S]*)\\((.*)\\)', 'testEdit_LinuxBug(org.eclipse.jgit.diff.HistogramDiffTest)')","[6786, 7388]"
"('FastIgnoreRule.java', 'org.eclipse.jgit.ignore.FastIgnoreRule', 'isMatch', '[a-c-e]', 'd')",[99285]
"('Description.java', 'org.junit.runner.Description', 'methodAndClassNamePatternGroupOrDefault', '([\\s\\S]*)\\((.*)\\)', 'org.eclipse.jgit.revwalk.RevWalkMergeBaseTest')","[177743, 178024]"
"('URIish.java', 'org.eclipse.jgit.transport.URIish', '<init>', '^([\\\\/]?((?:[A-Za-z]:)?[\\\\/]?(?:(?:[^\\\\/]+[\\\\/]+)*[^\\\\/]+[\\\\/]*)))$', '/a/b/.git')",[252929]
"('Description.java', 'org.junit.runner.Description', 'methodAndClassNamePatternGroupOrDefault', '([\\s\\S]*)\\((.*)\\)', 'testMergeSuccessAllStrategiesNoCommit(org.eclipse.jgit.api.MergeCommandTest)')","[127000, 127945]"
"('Description.java', 'org.junit.runner.Description', 'methodAndClassNamePatternGroupOrDefault', '([\\s\\S]*)\\((.*)\\)', 'testAdd_LargeGroup(org.eclipse.jgit.util.IntListTest)')","[28087, 28321]"
"('Description.java', 'org.junit.runner.Description', 'methodAndClassNamePatternGroupOrDefault', '([\\s\\S]*)\\((.*)\\)', 'testAssumeUnchanged(org.eclipse.jgit.lib.IndexDiffTest)')","[68832, 69177]"
"('URIish.java', 'org.eclipse.jgit.transport.URIish', '<init>', '^(file):([\\\\/](?![\\\\/])((?:[A-Za-z]:)?[\\\\/]?(?:(?:[^\\\\/]+[\\\\/]+)*[^\\\\/]+[\\\\/]*)))$', 'file:/tmp/jgit_test_1219138336105598436_tmp/tmp_4943700805231016094.git/')",[10567]
"('Description.java', 'org.junit.runner.Description', 'methodAndClassNamePatternGroupOrDefault', '([\\s\\S]*)\\((.*)\\)', 'testInversedGroupCase3(org.eclipse.jgit.fnmatch.FileNameMatcherTest)')","[42553, 45866]"
"('Description.java', 'org.junit.runner.Description', 'methodAndClassNamePatternGroupOrDefault', '([\\s\\S]*)\\((.*)\\)', 'testDequote_Latin1(org.eclipse.jgit.util.QuotedStringGitPathStyleTest)')","[39849, 40275]"
"('URIish.java', 'org.eclipse.jgit.transport.URIish', '<init>', '^(file):([\\\\/](?![\\\\/])((?:[A-Za-z]:)?[\\\\/]?(?:(?:[^\\\\/]+[\\\\/]+)*[^\\\\/]+[\\\\/]*)))$', 'ssh://lusr\\example@1.2.3.4/D:/x')","[223463, 223647]"
"('Description.java', 'org.junit.runner.Description', 'methodAndClassNamePatternGroupOrDefault', '([\\s\\S]*)\\((.*)\\)', 'testLowerGroupCase2[OldRule? false](org.eclipse.jgit.ignore.IgnoreRuleSpecialCasesTest)')","[85583, 92688]"
"('Description.java', 'org.junit.runner.Description', 'methodAndClassNamePatternGroupOrDefault', '([\\s\\S]*)\\((.*)\\)', 'testNoLeadingOrTrailingDot(org.eclipse.jgit.lib.ValidRefNameTest)')","[65781, 66144]"
"('Description.java', 'org.junit.runner.Description', 'methodAndClassNamePatternGroupOrDefault', '([\\s\\S]*)\\((.*)\\)', 'testObjectId_nonexisting(org.eclipse.jgit.lib.RepositoryResolveTest)')","[71120, 71837]"
"('Description.java', 'org.junit.runner.Description', 'methodAndClassNamePatternGroupOrDefault', '([\\s\\S]*)\\((.*)\\)', 'org.eclipse.jgit.gitrepo.RepoCommandTest')","[2384, 14919]"
"('URIish.java', 'org.eclipse.jgit.transport.URIish', '<init>', '^(?:([^/:@]+)(?::([^\\\\/]+))?@)?([^\\\\/:]{2,}):([\\\\/](?:(?:[^\\\\/]+[\\\\/]+)*[^\\\\/]+[\\\\/]*))$', '/tmp/jgit_test_2166166318525399122_tmp/tmp_3429394497116144220')","[150821, 150961, 151110]"
"('Description.java', 'org.junit.runner.Description', 'methodAndClassNamePatternGroupOrDefault', '([\\s\\S]*)\\((.*)\\)', 'weeksAgo(org.eclipse.jgit.util.GitDateParserTest)')","[21897, 22173]"
"('FastIgnoreRule.java', 'org.eclipse.jgit.ignore.FastIgnoreRule', 'isMatch', '[b-ce-e]', 'a')",[102461]
"('Description.java', 'org.junit.runner.Description', 'methodAndClassNamePatternGroupOrDefault', '([\\s\\S]*)\\((.*)\\)', 'testBlankGroupCase0[OldRule? false](org.eclipse.jgit.ignore.IgnoreRuleSpecialCasesTest)')","[87377, 94482]"
"('URIish.java', 'org.eclipse.jgit.transport.URIish', '<init>', '^(file):([\\\\/](?![\\\\/])((?:[A-Za-z]:)?[\\\\/]?(?:(?:[^\\\\/]+[\\\\/]+)*[^\\\\/]+[\\\\/]*)))$', 'ssh+git://lusr\\example@1.2.3.4:80/D:\\x')",[213182]
"('Description.java', 'org.junit.runner.Description', 'methodAndClassNamePatternGroupOrDefault', '([\\s\\S]*)\\((.*)\\)', 'testParse_explicit_bad_encoded(org.eclipse.jgit.revwalk.RevCommitParseTest)')","[182467, 182833]"
"('Description.java', 'org.junit.runner.Description', 'methodAndClassNamePatternGroupOrDefault', '([\\s\\S]*)\\((.*)\\)', 'commandWithNullUri(org.eclipse.jgit.submodule.SubmoduleAddTest)')","[17985, 18161]"
"('URIish.java', 'org.eclipse.jgit.transport.URIish', '<init>', '^(file):([\\\\/](?![\\\\/])((?:[A-Za-z]:)?[\\\\/]?(?:(?:[^\\\\/]+[\\\\/]+)*[^\\\\/]+[\\\\/]*)))$', 'http://lusr\\example@1.2.3.4:1234//')",[216172]
"('URIish.java', 'org.eclipse.jgit.transport.URIish', '<init>', '^(?:([^/:@]+)(?::([^\\\\/]+))?@)?((?:[^\\\\/:]+)|(?:\\[[0-9a-f:]+\\])):((?:(?:/~(?:[^\\\\/]+))[\\\\/])?(?:(?:[^\\\\/]+[\\\\/]+)*[^\\\\/]+[\\\\/]*))$', '//.git')",[251638]
"('ChangeIdUtil.java', 'org.eclipse.jgit.util.ChangeIdUtil', 'indexOfChangeId', '(^Change-Id: *I[a-f0-9]{40}$)', 'Change-Id: I388bdaf52ed05b55e62a22d0a20d2c1ae0d33e7e')","[35017, 36514]"
"('Description.java', 'org.junit.runner.Description', 'methodAndClassNamePatternGroupOrDefault', '([\\s\\S]*)\\((.*)\\)', 'test2(org.eclipse.jgit.transport.PackParserTest)')","[218318, 218573]"
"('Description.java', 'org.junit.runner.Description', 'methodAndClassNamePatternGroupOrDefault', '([\\s\\S]*)\\((.*)\\)', 'org.eclipse.jgit.internal.storage.pack.DeltaIndexTest')","[108803, 109385]"
"('URIish.java', 'org.eclipse.jgit.transport.URIish', '<init>', '^([a-z][a-z0-9+-]+)://(?:(?:([^/:@]+)(?::([^\\\\/]+))?@)?((?:[^\\\\/:]+)|(?:\\[[0-9a-f:]+\\]))(?::(\\d+))?((?:/~(?:[^\\\\/]+))?[\\\\/]))?(.+)?$', 'ssh://l usr\\example.com:wtf@example.com:1234/D:/x')",[193261]
"('URIish.java', 'org.eclipse.jgit.transport.URIish', '<init>', '^(file):([\\\\/](?![\\\\/])((?:[A-Za-z]:)?[\\\\/]?(?:(?:[^\\\\/]+[\\\\/]+)*[^\\\\/]+[\\\\/]*)))$', 'ssh+git://lusr\\example@[::1]//abc')","[227097, 227281]"
"('Description.java', 'org.junit.runner.Description', 'methodAndClassNamePatternGroupOrDefault', '([\\s\\S]*)\\((.*)\\)', 'testMaliciousWindowsADSOnUnix(org.eclipse.jgit.lib.DirCacheCheckoutMaliciousPathTest)')","[66991, 67899]"
"('Description.java', 'org.junit.runner.Description', 'methodAndClassNamePatternGroupOrDefault', '([\\s\\S]*)\\((.*)\\)', 'testGetRefs_DiscoversDeletedLoose4(org.eclipse.jgit.internal.storage.file.RefDirectoryTest)')","[111412, 112615]"
"('URIish.java', 'org.eclipse.jgit.transport.URIish', '<init>', '^([a-z][a-z0-9+-]+)://(?:(?:([^/:@]+)(?::([^\\\\/]+))?@)?((?:[^\\\\/:]+)|(?:\\[[0-9a-f:]+\\]))(?::(\\d+))?((?:/~(?:[^\\\\/]+))?[\\\\/]))?(.+)?$', 'https://l usr\\example.com:wtf@[::1]:80//')",[205707]
"('URIish.java', 'org.eclipse.jgit.transport.URIish', '<init>', '^([a-z][a-z0-9+-]+)://(?:(?:([^/:@]+)(?::([^\\\\/]+))?@)?((?:[^\\\\/:]+)|(?:\\[[0-9a-f:]+\\]))(?::(\\d+))?((?:/~(?:[^\\\\/]+))?[\\\\/]))?(.+)?$', 'file:///tmp/jgit_test_2768247327927037753_tmp/tmp_3196723450529294565/.git/')",[56985]
"('PathMatcher.java', 'org.eclipse.jgit.ignore.internal.PathMatcher', 'iterate', 'ne.', 'new')","[74519, 74548, 74577, 74606, 75663, 75692, 75721, 75750, 105073, 105103, 105132, 105161, 105190, 106303, 106333, 106362, 106391, 106420]"
"('Description.java', 'org.junit.runner.Description', 'methodAndClassNamePatternGroupOrDefault', '([\\s\\S]*)\\((.*)\\)', 'test003_equals(org.eclipse.jgit.lib.ObjectIdTest)')","[53654, 53938]"
"('Description.java', 'org.junit.runner.Description', 'methodAndClassNamePatternGroupOrDefault', '([\\s\\S]*)\\((.*)\\)', 'testDeleteDelete(org.eclipse.jgit.notes.DefaultNoteMergerTest)')","[260681, 260810]"
"('Description.java', 'org.junit.runner.Description', 'methodAndClassNamePatternGroupOrDefault', '([\\s\\S]*)\\((.*)\\)', 'testTargetWithoutLeadingSlash[OldRule? false](org.eclipse.jgit.ignore.IgnoreMatcherParametrizedTest)')","[103466, 103947]"
"('FastIgnoreRule.java', 'org.eclipse.jgit.ignore.FastIgnoreRule', 'isMatch', '[[\\p{javaDigit}\\p{javaLetter}_]]', 'ö')",[102331]
"('ChangeIdUtil.java', 'org.eclipse.jgit.util.ChangeIdUtil', 'indexOfChangeId', '(^Change-Id: *I[a-f0-9]{40}$)', 'Bug: 33')","[33219, 37114, 37608, 37994, 38071]"
"('Description.java', 'org.junit.runner.Description', 'methodAndClassNamePatternGroupOrDefault', '([\\s\\S]*)\\((.*)\\)', 'testGetRefs_CorruptObjectIdReference(org.eclipse.jgit.internal.storage.file.RefDirectoryTest)')","[110824, 111999]"
"('Description.java', 'org.junit.runner.Description', 'methodAndClassNamePatternGroupOrDefault', '([\\s\\S]*)\\((.*)\\)', 'testCacheOpen(org.eclipse.jgit.lib.RepositoryCacheTest)')","[60347, 60477]"
"('URIish.java', 'org.eclipse.jgit.transport.URIish', '<init>', '^(file):([\\\\/](?![\\\\/])((?:[A-Za-z]:)?[\\\\/]?(?:(?:[^\\\\/]+[\\\\/]+)*[^\\\\/]+[\\\\/]*)))$', 'file:///tmp/jgit_test_5651175302048387135_tmp/tmp_5143292996262932816.git/')",[144232]
"('Description.java', 'org.junit.runner.Description', 'methodAndClassNamePatternGroupOrDefault', '([\\s\\S]*)\\((.*)\\)', 'org.eclipse.jgit.util.NBTest')","[39030, 39397]"
"('Description.java', 'org.junit.runner.Description', 'methodAndClassNamePatternGroupOrDefault', '([\\s\\S]*)\\((.*)\\)', 'testOneBlock_BulkWrite(org.eclipse.jgit.util.TemporaryBufferTest)')","[26596, 26898]"
"('URIish.java', 'org.eclipse.jgit.transport.URIish', '<init>', '^(file):([\\\\/](?![\\\\/])((?:[A-Za-z]:)?[\\\\/]?(?:(?:[^\\\\/]+[\\\\/]+)*[^\\\\/]+[\\\\/]*)))$', 'file:///tmp/jgit_test_3149639463277021735_tmp/tmp_4316409130603707111.git/')",[3779]
"('Description.java', 'org.junit.runner.Description', 'methodAndClassNamePatternGroupOrDefault', '([\\s\\S]*)\\((.*)\\)', 'testVerySimplePatternCase4(org.eclipse.jgit.fnmatch.FileNameMatcherTest)')","[42385, 45690]"
"('Description.java', 'org.junit.runner.Description', 'methodAndClassNamePatternGroupOrDefault', '([\\s\\S]*)\\((.*)\\)', 'testNegation(org.eclipse.jgit.ignore.IgnoreMatcherTest)')","[103075, 103272]"
"('Description.java', 'org.junit.runner.Description', 'methodAndClassNamePatternGroupOrDefault', '([\\s\\S]*)\\((.*)\\)', 'testOnlyOption_f1_10_a(org.eclipse.jgit.api.CommitOnlyTest)')","[135697, 137779]"
"('Description.java', 'org.junit.runner.Description', 'methodAndClassNamePatternGroupOrDefault', '([\\s\\S]*)\\((.*)\\)', 'org.eclipse.jgit.api.NotesCommandTest')","[128026, 128135]"
"('URIish.java', 'org.eclipse.jgit.transport.URIish', '<init>', '^(file):([\\\\/](?![\\\\/])((?:[A-Za-z]:)?[\\\\/]?(?:(?:[^\\\\/]+[\\\\/]+)*[^\\\\/]+[\\\\/]*)))$', 'http://l usr\\example.com:wtf@[::1]:1234//')",[201398]
"('Description.java', 'org.junit.runner.Description', 'methodAndClassNamePatternGroupOrDefault', '([\\s\\S]*)\\((.*)\\)', 'testCreateAndList(org.eclipse.jgit.api.BranchCommandTest)')","[128737, 129059]"
"('URIish.java', 'org.eclipse.jgit.transport.URIish', '<init>', '^(file):([\\\\/](?![\\\\/])((?:[A-Za-z]:)?[\\\\/]?(?:(?:[^\\\\/]+[\\\\/]+)*[^\\\\/]+[\\\\/]*)))$', 'file:///tmp/jgit_test_280728366645432052_tmp/tmp_37851480862469748/.git/')",[11022]
"('Description.java', 'org.junit.runner.Description', 'methodAndClassNamePatternGroupOrDefault', '([\\s\\S]*)\\((.*)\\)', 'iso(org.eclipse.jgit.util.GitDateParserTest)')","[21939, 22217]"
"('Description.java', 'org.junit.runner.Description', 'methodAndClassNamePatternGroupOrDefault', '([\\s\\S]*)\\((.*)\\)', 'testUpperGroupCase5(org.eclipse.jgit.fnmatch.FileNameMatcherTest)')","[43750, 47120]"
"('Description.java', 'org.junit.runner.Description', 'methodAndClassNamePatternGroupOrDefault', '([\\s\\S]*)\\((.*)\\)', 'testFilePathCase2[OldRule? false](org.eclipse.jgit.ignore.IgnoreRuleSpecialCasesTest)')","[86871, 93976]"
"('Description.java', 'org.junit.runner.Description', 'methodAndClassNamePatternGroupOrDefault', '([\\s\\S]*)\\((.*)\\)', 'testUpperGroupCase0[OldRule? true](org.eclipse.jgit.ignore.IgnoreRuleSpecialCasesTest)')","[90802, 97886]"
"('URIish.java', 'org.eclipse.jgit.transport.URIish', '<init>', '^([a-z][a-z0-9+-]+)://(?:(?:([^/:@]+)(?::([^\\\\/]+))?@)?((?:[^\\\\/:]+)|(?:\\[[0-9a-f:]+\\]))(?::(\\d+))?((?:/~(?:[^\\\\/]+))?[\\\\/]))?(.+)?$', 'ssh://l usr\\example.com@1.2.3.4/D:/x')","[222382, 222566]"
"('Description.java', 'org.junit.runner.Description', 'methodAndClassNamePatternGroupOrDefault', '([\\s\\S]*)\\((.*)\\)', 'testShortKey(org.eclipse.jgit.revwalk.FooterLineTest)')","[173738, 174152]"
"('URIish.java', 'org.eclipse.jgit.transport.URIish', '<init>', '^([a-z][a-z0-9+-]+)://(?:(?:([^/:@]+)(?::([^\\\\/]+))?@)?((?:[^\\\\/:]+)|(?:\\[[0-9a-f:]+\\]))(?::(\\d+))?((?:/~(?:[^\\\\/]+))?[\\\\/]))?(.+)?$', 'ssh://1.2.3.4//')","[234434, 234618, 235538, 235722, 236642, 236826]"
"('URIish.java', 'org.eclipse.jgit.transport.URIish', '<init>', '^(file):([\\\\/](?![\\\\/])((?:[A-Za-z]:)?[\\\\/]?(?:(?:[^\\\\/]+[\\\\/]+)*[^\\\\/]+[\\\\/]*)))$', 'file:/tmp/jgit_test_3353191491242534664_tmp/tmp_6009797392716155554/.git/')",[123569]
"('URIish.java', 'org.eclipse.jgit.transport.URIish', '<init>', '^([a-z][a-z0-9+-]+)://(?:(?:([^/:@]+)(?::([^\\\\/]+))?@)?((?:[^\\\\/:]+)|(?:\\[[0-9a-f:]+\\]))(?::(\\d+))?((?:/~(?:[^\\\\/]+))?[\\\\/]))?(.+)?$', 'https://me@1.2.3.4:80/D:\\x')",[217644]
"('URIish.java', 'org.eclipse.jgit.transport.URIish', '<init>', '^(?:([^/:@]+)(?::([^\\\\/]+))?@)?((?:[^\\\\/:]+)|(?:\\[[0-9a-f:]+\\])):((?:(?:/~(?:[^\\\\/]+))[\\\\/])?(?:(?:[^\\\\/]+[\\\\/]+)*[^\\\\/]+[\\\\/]*))$', '../tmp_5292851732867779189')",[259187]
"('Description.java', 'org.junit.runner.Description', 'methodAndClassNamePatternGroupOrDefault', '([\\s\\S]*)\\((.*)\\)', 'testNoFooters_ShortBodyWithLF(org.eclipse.jgit.revwalk.FooterLineTest)')","[173780, 174196]"
"('Description.java', 'org.junit.runner.Description', 'methodAndClassNamePatternGroupOrDefault', '([\\s\\S]*)\\((.*)\\)', 'testUpdateRefDetachedUnbornHead(org.eclipse.jgit.internal.storage.file.RefUpdateTest)')","[120390, 121248]"
"('URIish.java', 'org.eclipse.jgit.transport.URIish', '<init>', '^(file):([\\\\/](?![\\\\/])((?:[A-Za-z]:)?[\\\\/]?(?:(?:[^\\\\/]+[\\\\/]+)*[^\\\\/]+[\\\\/]*)))$', 'http://lusr\\example@[::1]//')","[230363, 230547]"
"('URIish.java', 'org.eclipse.jgit.transport.URIish', '<init>', '^([a-z][a-z0-9+-]+)://(?:(?:([^/:@]+)(?::([^\\\\/]+))?@)?((?:[^\\\\/:]+)|(?:\\[[0-9a-f:]+\\]))(?::(\\d+))?((?:/~(?:[^\\\\/]+))?[\\\\/]))?(.+)?$', 'ssh://user@example.com:33/some/p ath')","[247981, 248027]"
"('URIish.java', 'org.eclipse.jgit.transport.URIish', '<init>', '^(file):([\\\\/](?![\\\\/])((?:[A-Za-z]:)?[\\\\/]?(?:(?:[^\\\\/]+[\\\\/]+)*[^\\\\/]+[\\\\/]*)))$', 'ssh://me:wtf@[::1]:80//abc')",[193008]
"('AttributesRule.java', 'org.eclipse.jgit.attributes.AttributesRule', 'isMatch', '.*\\.sta[0-5]', 'test.sta0')","[74220, 75364]"
"('Description.java', 'org.junit.runner.Description', 'methodAndClassNamePatternGroupOrDefault', '([\\s\\S]*)\\((.*)\\)', 'testGetTwoSlashesDotGitHumanishName(org.eclipse.jgit.transport.URIishTest)')","[189157, 190568]"
"('Description.java', 'org.junit.runner.Description', 'methodAndClassNamePatternGroupOrDefault', '([\\s\\S]*)\\((.*)\\)', 'testLFCR(org.eclipse.jgit.util.io.EolCanonicalizingInputStreamTest)')","[24906, 25056]"
"('URIish.java', 'org.eclipse.jgit.transport.URIish', '<init>', '^(file):([\\\\/](?![\\\\/])((?:[A-Za-z]:)?[\\\\/]?(?:(?:[^\\\\/]+[\\\\/]+)*[^\\\\/]+[\\\\/]*)))$', 'http://l usr\\example.com@1.2.3.4:80/D:\\x')",[215390]
"('Description.java', 'org.junit.runner.Description', 'methodAndClassNamePatternGroupOrDefault', '([\\s\\S]*)\\((.*)\\)', 'org.eclipse.jgit.internal.storage.dfs.DfsInserterTest')","[109421, 109659]"
"('URIish.java', 'org.eclipse.jgit.transport.URIish', '<init>', '^([a-z][a-z0-9+-]+)://(?:(?:([^/:@]+)(?::([^\\\\/]+))?@)?((?:[^\\\\/:]+)|(?:\\[[0-9a-f:]+\\]))(?::(\\d+))?((?:/~(?:[^\\\\/]+))?[\\\\/]))?(.+)?$', 'http://lusr\\example@[::1]:1234/D:\\x')",[216701]
"('Description.java', 'org.junit.runner.Description', 'methodAndClassNamePatternGroupOrDefault', '([\\s\\S]*)\\((.*)\\)', 'test1_FromString(org.eclipse.jgit.lib.AbbreviatedObjectIdTest)')","[55399, 55937]"
"('URIish.java', 'org.eclipse.jgit.transport.URIish', '<init>', '^([a-z][a-z0-9+-]+)://(?:(?:([^/:@]+)(?::([^\\\\/]+))?@)?((?:[^\\\\/:]+)|(?:\\[[0-9a-f:]+\\]))(?::(\\d+))?((?:/~(?:[^\\\\/]+))?[\\\\/]))?(.+)?$', 'http://me:wtf@example.com:1234//')",[199581]
"('Description.java', 'org.junit.runner.Description', 'methodAndClassNamePatternGroupOrDefault', '([\\s\\S]*)\\((.*)\\)', 'testDegenerate_ReplaceMiddle(org.eclipse.jgit.diff.HistogramDiffTest)')","[7122, 7802]"
"('Description.java', 'org.junit.runner.Description', 'methodAndClassNamePatternGroupOrDefault', '([\\s\\S]*)\\((.*)\\)', 'testPrintGroupCase1[OldRule? false](org.eclipse.jgit.ignore.IgnoreRuleSpecialCasesTest)')","[87009, 94114]"
"('URIish.java', 'org.eclipse.jgit.transport.URIish', '<init>', '^([a-z][a-z0-9+-]+)://(?:(?:([^/:@]+)(?::([^\\\\/]+))?@)?((?:[^\\\\/:]+)|(?:\\[[0-9a-f:]+\\]))(?::(\\d+))?((?:/~(?:[^\\\\/]+))?[\\\\/]))?(.+)?$', 'ssh+git://l usr\\example.com:wtf@1.2.3.4:1234/D:\\x')",[197879]
"('URIish.java', 'org.eclipse.jgit.transport.URIish', '<init>', '^([a-z][a-z0-9+-]+)://(?:(?:([^/:@]+)(?::([^\\\\/]+))?@)?((?:[^\\\\/:]+)|(?:\\[[0-9a-f:]+\\]))(?::(\\d+))?((?:/~(?:[^\\\\/]+))?[\\\\/]))?(.+)?$', 'https://me:wtf@[::1]:1234/D:\\x')",[204557]
"('QuotedString.java', 'org.eclipse.jgit.util.QuotedString$BourneUserPathStyle', 'quote', '^~[A-Za-z0-9_-]+$', '~/')","[29675, 29699]"
"('Description.java', 'org.junit.runner.Description', 'methodAndClassNamePatternGroupOrDefault', '([\\s\\S]*)\\((.*)\\)', 'testAlias_ConnectionAttemptsDefault(org.eclipse.jgit.transport.OpenSshConfigTest)')","[195974, 196343]"
"('Description.java', 'org.junit.runner.Description', 'methodAndClassNamePatternGroupOrDefault', '([\\s\\S]*)\\((.*)\\)', 'testMergeCommitEntirelyShallow(org.eclipse.jgit.revwalk.RevWalkShallowTest)')","[181520, 181647]"
"('Description.java', 'org.junit.runner.Description', 'methodAndClassNamePatternGroupOrDefault', '([\\s\\S]*)\\((.*)\\)', 'testAddExistingSingleFileTwice(org.eclipse.jgit.api.AddCommandTest)')","[164411, 164832]"
"('Description.java', 'org.junit.runner.Description', 'methodAndClassNamePatternGroupOrDefault', '([\\s\\S]*)\\((.*)\\)', 'testPath_16384(org.eclipse.jgit.dircache.DirCacheLargePathTest)')","[172432, 172542]"
"('Description.java', 'org.junit.runner.Description', 'methodAndClassNamePatternGroupOrDefault', '([\\s\\S]*)\\((.*)\\)', 'testShellGlob(org.eclipse.jgit.lib.ValidRefNameTest)')","[65718, 66078]"
"('Description.java', 'org.junit.runner.Description', 'methodAndClassNamePatternGroupOrDefault', '([\\s\\S]*)\\((.*)\\)', 'org.eclipse.jgit.treewalk.ForPathTest')","[267212, 267278]"
"('Description.java', 'org.junit.runner.Description', 'methodAndClassNamePatternGroupOrDefault', '([\\s\\S]*)\\((.*)\\)', 'testBuildOneFile_FinishWriteCommit(org.eclipse.jgit.dircache.DirCacheBuilderTest)')","[170806, 170996]"
"('Description.java', 'org.junit.runner.Description', 'methodAndClassNamePatternGroupOrDefault', '([\\s\\S]*)\\((.*)\\)', 'org.eclipse.jgit.lib.ObjectIdRefTest')","[54535, 54687]"
"('Description.java', 'org.junit.runner.Description', 'methodAndClassNamePatternGroupOrDefault', '([\\s\\S]*)\\((.*)\\)', 'testPullConfigLocalBranch(org.eclipse.jgit.api.BranchCommandTest)')","[128842, 129169]"
"('AttributesRule.java', 'org.eclipse.jgit.attributes.AttributesRule', 'isMatch', '.r[a-c]', 'srb')",[76481]
"('Description.java', 'org.junit.runner.Description', 'methodAndClassNamePatternGroupOrDefault', '([\\s\\S]*)\\((.*)\\)', 'org.eclipse.jgit.internal.storage.file.T0004_PackReaderTest')","[110114, 110223]"
"('Description.java', 'org.junit.runner.Description', 'methodAndClassNamePatternGroupOrDefault', '([\\s\\S]*)\\((.*)\\)', 'testWritePack4SizeThinVsNoThin(org.eclipse.jgit.internal.storage.file.PackWriterTest)')","[117866, 118321]"
"('Description.java', 'org.junit.runner.Description', 'methodAndClassNamePatternGroupOrDefault', '([\\s\\S]*)\\((.*)\\)', 'testAddRevFlag(org.eclipse.jgit.revwalk.RevObjectTest)')","[178081, 178292]"
"('Description.java', 'org.junit.runner.Description', 'methodAndClassNamePatternGroupOrDefault', '([\\s\\S]*)\\((.*)\\)', 'testUpperGroupCase2(org.eclipse.jgit.fnmatch.FileNameMatcherTest)')","[43687, 47054]"
"('Description.java', 'org.junit.runner.Description', 'methodAndClassNamePatternGroupOrDefault', '([\\s\\S]*)\\((.*)\\)', 'testPullConfigRemoteBranch(org.eclipse.jgit.api.BranchCommandTest)')","[128716, 129037]"
"('Description.java', 'org.junit.runner.Description', 'methodAndClassNamePatternGroupOrDefault', '([\\s\\S]*)\\((.*)\\)', 'testInvalidTreeDuplicateNames2(org.eclipse.jgit.lib.ObjectCheckerTest)')","[50642, 53232]"
"('FastIgnoreRule.java', 'org.eclipse.jgit.ignore.FastIgnoreRule', 'isMatch', '[\\p{XDigit}]', '.')",[102201]
"('Description.java', 'org.junit.runner.Description', 'methodAndClassNamePatternGroupOrDefault', '([\\s\\S]*)\\((.*)\\)', 'testTree(org.eclipse.jgit.lib.RepositoryResolveTest)')","[71183, 72003]"
"('Description.java', 'org.junit.runner.Description', 'methodAndClassNamePatternGroupOrDefault', '([\\s\\S]*)\\((.*)\\)', 'testPack2Commits(org.eclipse.jgit.internal.storage.file.GcBasicPackingTest)')","[113330, 113462]"
"('Description.java', 'org.junit.runner.Description', 'methodAndClassNamePatternGroupOrDefault', '([\\s\\S]*)\\((.*)\\)', 'testFourLineBlanks(org.eclipse.jgit.util.RawParseUtils_LineMapTest)')","[30812, 30921]"
"('Description.java', 'org.junit.runner.Description', 'methodAndClassNamePatternGroupOrDefault', '([\\s\\S]*)\\((.*)\\)', 'testCleanWithPaths(org.eclipse.jgit.api.CleanCommandTest)')","[154636, 154785]"
"('Description.java', 'org.junit.runner.Description', 'methodAndClassNamePatternGroupOrDefault', '([\\s\\S]*)\\((.*)\\)', 'testMixedGroupCase6[OldRule? true](org.eclipse.jgit.ignore.IgnoreRuleSpecialCasesTest)')","[88824, 95908]"
"('URIish.java', 'org.eclipse.jgit.transport.URIish', '<init>', '^([a-z][a-z0-9+-]+)://(?:(?:([^/:@]+)(?::([^\\\\/]+))?@)?((?:[^\\\\/:]+)|(?:\\[[0-9a-f:]+\\]))(?::(\\d+))?((?:/~(?:[^\\\\/]+))?[\\\\/]))?(.+)?$', 'file:///tmp/jgit_test_7726753311847713028_tmp/tmp_262524205056608450/.git/')",[60898]
"('Description.java', 'org.junit.runner.Description', 'methodAndClassNamePatternGroupOrDefault', '([\\s\\S]*)\\((.*)\\)', 'testCheckoutOutChangesAutoCRLFfalse(org.eclipse.jgit.lib.DirCacheCheckoutTest)')","[61566, 62643]"
"('Description.java', 'org.junit.runner.Description', 'methodAndClassNamePatternGroupOrDefault', '([\\s\\S]*)\\((.*)\\)', 'testBatchRefUpdateSimpleForce(org.eclipse.jgit.internal.storage.file.RefDirectoryTest)')","[110446, 111603]"
"('URIish.java', 'org.eclipse.jgit.transport.URIish', '<init>', '^([a-z][a-z0-9+-]+)://(?:(?:([^/:@]+)(?::([^\\\\/]+))?@)?((?:[^\\\\/:]+)|(?:\\[[0-9a-f:]+\\]))(?::(\\d+))?((?:/~(?:[^\\\\/]+))?[\\\\/]))?(.+)?$', 'ssh+git://l usr\\example.com@1.2.3.4:1234/D:\\x')",[211917]
"('URIish.java', 'org.eclipse.jgit.transport.URIish', '<init>', '^([a-z][a-z0-9+-]+)://(?:(?:([^/:@]+)(?::([^\\\\/]+))?@)?((?:[^\\\\/:]+)|(?:\\[[0-9a-f:]+\\]))(?::(\\d+))?((?:/~(?:[^\\\\/]+))?[\\\\/]))?(.+)?$', 'http://l usr\\example.com@example.com:80//')",[214907]
"('URIish.java', 'org.eclipse.jgit.transport.URIish', '<init>', '^(file):([\\\\/](?![\\\\/])((?:[A-Za-z]:)?[\\\\/]?(?:(?:[^\\\\/]+[\\\\/]+)*[^\\\\/]+[\\\\/]*)))$', 'ssh+git://me:wtf@[::1]:1234/D:/x')",[197074]
"('ChangeIdUtil.java', 'org.eclipse.jgit.util.ChangeIdUtil', 'indexOfChangeId', '(^Change-Id: *I[a-f0-9]{40}$)', 'Another footer line')","[155413, 155558]"
"('URIish.java', 'org.eclipse.jgit.transport.URIish', '<init>', '^(?:([^/:@]+)(?::([^\\\\/]+))?@)?((?:[^\\\\/:]+)|(?:\\[[0-9a-f:]+\\])):((?:(?:/~(?:[^\\\\/]+))[\\\\/])?(?:(?:[^\\\\/]+[\\\\/]+)*[^\\\\/]+[\\\\/]*))$', '/.git')",[247452]
"('URIish.java', 'org.eclipse.jgit.transport.URIish', '<init>', '^([a-z][a-z0-9+-]+)://(?:(?:([^/:@]+)(?::([^\\\\/]+))?@)?((?:[^\\\\/:]+)|(?:\\[[0-9a-f:]+\\]))(?::(\\d+))?((?:/~(?:[^\\\\/]+))?[\\\\/]))?(.+)?$', 'ssh://lusr\\example@[::1]:1234//abc')",[209985]
"('Description.java', 'org.junit.runner.Description', 'methodAndClassNamePatternGroupOrDefault', '([\\s\\S]*)\\((.*)\\)', 'org.eclipse.jgit.api.StashApplyCommandTest')","[142393, 149184]"
"('Description.java', 'org.junit.runner.Description', 'methodAndClassNamePatternGroupOrDefault', '([\\s\\S]*)\\((.*)\\)', 'testSpaceGroupCase3[OldRule? false](org.eclipse.jgit.ignore.IgnoreRuleSpecialCasesTest)')","[86112, 93217]"
"('URIish.java', 'org.eclipse.jgit.transport.URIish', '<init>', '^(file):([\\\\/](?![\\\\/])((?:[A-Za-z]:)?[\\\\/]?(?:(?:[^\\\\/]+[\\\\/]+)*[^\\\\/]+[\\\\/]*)))$', 'https://lusr\\example:wtf@1.2.3.4:80//abc')",[206466]
"('URIish.java', 'org.eclipse.jgit.transport.URIish', '<init>', '^([a-z][a-z0-9+-]+)://(?:(?:([^/:@]+)(?::([^\\\\/]+))?@)?((?:[^\\\\/:]+)|(?:\\[[0-9a-f:]+\\]))(?::(\\d+))?((?:/~(?:[^\\\\/]+))?[\\\\/]))?(.+)?$', 'example.com:some/p ath')","[190926, 190995]"
"('Description.java', 'org.junit.runner.Description', 'methodAndClassNamePatternGroupOrDefault', '([\\s\\S]*)\\((.*)\\)', 'testTwoEntries_BackwardsTwo(org.eclipse.jgit.treewalk.CanonicalTreeParserTest)')","[261546, 261875]"
"('AttributesRule.java', 'org.eclipse.jgit.attributes.AttributesRule', 'isMatch', '.r[a-c]', '3rb')",[76616]
"('Description.java', 'org.junit.runner.Description', 'methodAndClassNamePatternGroupOrDefault', '([\\s\\S]*)\\((.*)\\)', 'testReadBoolean_OnOff1(org.eclipse.jgit.lib.ConfigTest)')","[69453, 70170]"
"('URIish.java', 'org.eclipse.jgit.transport.URIish', '<init>', '^([a-z][a-z0-9+-]+)://(?:(?:([^/:@]+)(?::([^\\\\/]+))?@)?((?:[^\\\\/:]+)|(?:\\[[0-9a-f:]+\\]))(?::(\\d+))?((?:/~(?:[^\\\\/]+))?[\\\\/]))?(.+)?$', 'ssh://[::1]//')","[234802, 234986, 235906, 236090, 237010, 237194]"
"('URIish.java', 'org.eclipse.jgit.transport.URIish', '<init>', '^([a-z][a-z0-9+-]+)://(?:(?:([^/:@]+)(?::([^\\\\/]+))?@)?((?:[^\\\\/:]+)|(?:\\[[0-9a-f:]+\\]))(?::(\\d+))?((?:/~(?:[^\\\\/]+))?[\\\\/]))?(.+)?$', 'ssh+git://me@example.com:1234//')",[210307]
"('URIish.java', 'org.eclipse.jgit.transport.URIish', '<init>', '^(file):([\\\\/](?![\\\\/])((?:[A-Za-z]:)?[\\\\/]?(?:(?:[^\\\\/]+[\\\\/]+)*[^\\\\/]+[\\\\/]*)))$', 'ssh+git://lusr\\example@[::1]/D:/x')","[227143, 227327]"
"('Description.java', 'org.junit.runner.Description', 'methodAndClassNamePatternGroupOrDefault', '([\\s\\S]*)\\((.*)\\)', 'testMaliciousAbsolutePathIsOk(org.eclipse.jgit.lib.DirCacheCheckoutMaliciousPathTest)')","[66466, 67349]"
"('URIish.java', 'org.eclipse.jgit.transport.URIish', '<init>', '^([a-z][a-z0-9+-]+)://(?:(?:([^/:@]+)(?::([^\\\\/]+))?@)?((?:[^\\\\/:]+)|(?:\\[[0-9a-f:]+\\]))(?::(\\d+))?((?:/~(?:[^\\\\/]+))?[\\\\/]))?(.+)?$', 'ssh://l usr\\example.com@1.2.3.4:80//abc')",[208697]
"('Description.java', 'org.junit.runner.Description', 'methodAndClassNamePatternGroupOrDefault', '([\\s\\S]*)\\((.*)\\)', 'singleStashedCommit(org.eclipse.jgit.api.StashListCommandTest)')","[165963, 166051]"
"('Description.java', 'org.junit.runner.Description', 'methodAndClassNamePatternGroupOrDefault', '([\\s\\S]*)\\((.*)\\)', 'testExceptionThrown_BareRepoGetIndex(org.eclipse.jgit.internal.storage.file.RepositorySetupWorkDirTest)')","[114048, 114310]"
"('Description.java', 'org.junit.runner.Description', 'methodAndClassNamePatternGroupOrDefault', '([\\s\\S]*)\\((.*)\\)', 'testNoFinalNewline(org.eclipse.jgit.lib.ConfigTest)')","[69852, 70588]"
"('Description.java', 'org.junit.runner.Description', 'methodAndClassNamePatternGroupOrDefault', '([\\s\\S]*)\\((.*)\\)', 'test5(org.eclipse.jgit.revwalk.RevWalkPathFilter6012Test)')","[179014, 179166]"
"('Description.java', 'org.junit.runner.Description', 'methodAndClassNamePatternGroupOrDefault', '([\\s\\S]*)\\((.*)\\)', 'testInvalidTreeNameIsGit(org.eclipse.jgit.lib.ObjectCheckerTest)')","[49487, 52022]"
"('Description.java', 'org.junit.runner.Description', 'methodAndClassNamePatternGroupOrDefault', '([\\s\\S]*)\\((.*)\\)', 'testWrite_Small(org.eclipse.jgit.transport.SideBandOutputStreamTest)')","[251976, 252217]"
"('Description.java', 'org.junit.runner.Description', 'methodAndClassNamePatternGroupOrDefault', '([\\s\\S]*)\\((.*)\\)', 'testEdit_LcsContainsUnique(org.eclipse.jgit.diff.HistogramDiffTest)')","[6744, 7344]"
"('URIish.java', 'org.eclipse.jgit.transport.URIish', '<init>', '^([a-z][a-z0-9+-]+)://(?:(?:([^/:@]+)(?::([^\\\\/]+))?@)?((?:[^\\\\/:]+)|(?:\\[[0-9a-f:]+\\]))(?::(\\d+))?((?:/~(?:[^\\\\/]+))?[\\\\/]))?(.+)?$', 'https://me@[::1]/D:\\x')","[231628, 231812]"
"('Description.java', 'org.junit.runner.Description', 'methodAndClassNamePatternGroupOrDefault', '([\\s\\S]*)\\((.*)\\)', 'crissCrossMerge_mergeable(org.eclipse.jgit.merge.RecursiveMergerTest)')","[15141, 15292]"
"('URIish.java', 'org.eclipse.jgit.transport.URIish', '<init>', '^(file):([\\\\/](?![\\\\/])((?:[A-Za-z]:)?[\\\\/]?(?:(?:[^\\\\/]+[\\\\/]+)*[^\\\\/]+[\\\\/]*)))$', 'file:///tmp/jgit_test_3313886005029198754_tmp/tmp_3894563903676098303/.git/')",[8664]
"('Description.java', 'org.junit.runner.Description', 'methodAndClassNamePatternGroupOrDefault', '([\\s\\S]*)\\((.*)\\)', 'testContainsEmpty(org.eclipse.jgit.internal.storage.file.InflatingBitSetTest)')","[115937, 116024]"
"('ChangeIdUtil.java', 'org.eclipse.jgit.util.ChangeIdUtil', 'indexOfFirstFooterLine', '(^[a-zA-Z0-9-]+:(?!//).*$)', 'h')",[37582]
"('FastIgnoreRule.java', 'org.eclipse.jgit.ignore.FastIgnoreRule', 'isMatch', '[[\\p{Graph}\\p{javaDigit}\\p{javaLetter}]]', ']')",[99649]
"('URIish.java', 'org.eclipse.jgit.transport.URIish', '<init>', '^(?:([^/:@]+)(?::([^\\\\/]+))?@)?([^\\\\/:]{2,}):([\\\\/](?:(?:[^\\\\/]+[\\\\/]+)*[^\\\\/]+[\\\\/]*))$', '/a/b/c.git/')",[248349]
"('URIish.java', 'org.eclipse.jgit.transport.URIish', '<init>', '^(?:([^/:@]+)(?::([^\\\\/]+))?@)?((?:[^\\\\/:]+)|(?:\\[[0-9a-f:]+\\])):((?:(?:/~(?:[^\\\\/]+))[\\\\/])?(?:(?:[^\\\\/]+[\\\\/]+)*[^\\\\/]+[\\\\/]*))$', '/a/b/c.git')",[191156]
"('URIish.java', 'org.eclipse.jgit.transport.URIish', '<init>', '^(file):([\\\\/](?![\\\\/])((?:[A-Za-z]:)?[\\\\/]?(?:(?:[^\\\\/]+[\\\\/]+)*[^\\\\/]+[\\\\/]*)))$', 'ssh+git://l usr\\example.com@example.com//abc')","[225257, 225441]"
"('Description.java', 'org.junit.runner.Description', 'methodAndClassNamePatternGroupOrDefault', '([\\s\\S]*)\\((.*)\\)', 'testInvalidTreeBadSorting2(org.eclipse.jgit.lib.ObjectCheckerTest)')","[48941, 51450]"
"('Description.java', 'org.junit.runner.Description', 'methodAndClassNamePatternGroupOrDefault', '([\\s\\S]*)\\((.*)\\)', 'testAddTwo(org.eclipse.jgit.diff.EditListTest)')","[4098, 4207]"
"('Description.java', 'org.junit.runner.Description', 'methodAndClassNamePatternGroupOrDefault', '([\\s\\S]*)\\((.*)\\)', 'getRemoteTrackingBranchShouldHandleNormalCase(org.eclipse.jgit.lib.BranchConfigTest)')","[54828, 55001]"
"('URIish.java', 'org.eclipse.jgit.transport.URIish', '<init>', '^([a-z][a-z0-9+-]+)://(?:(?:([^/:@]+)(?::([^\\\\/]+))?@)?((?:[^\\\\/:]+)|(?:\\[[0-9a-f:]+\\]))(?::(\\d+))?((?:/~(?:[^\\\\/]+))?[\\\\/]))?(.+)?$', 'ssh+git://lusr\\example:wtf@1.2.3.4:80/D:/x')",[199121]
"('URIish.java', 'org.eclipse.jgit.transport.URIish', '<init>', '^([a-z][a-z0-9+-]+)://(?:(?:([^/:@]+)(?::([^\\\\/]+))?@)?((?:[^\\\\/:]+)|(?:\\[[0-9a-f:]+\\]))(?::(\\d+))?((?:/~(?:[^\\\\/]+))?[\\\\/]))?(.+)?$', 'ssh://lusr\\example:wtf@[::1]:80//')",[195295]
"('Description.java', 'org.junit.runner.Description', 'methodAndClassNamePatternGroupOrDefault', '([\\s\\S]*)\\((.*)\\)', 'testScpStyleNoURIDecoding(org.eclipse.jgit.transport.URIishTest)')","[188968, 190370]"
"('URIish.java', 'org.eclipse.jgit.transport.URIish', '<init>', '^([a-z][a-z0-9+-]+)://(?:(?:([^/:@]+)(?::([^\\\\/]+))?@)?((?:[^\\\\/:]+)|(?:\\[[0-9a-f:]+\\]))(?::(\\d+))?((?:/~(?:[^\\\\/]+))?[\\\\/]))?(.+)?$', 'http://lusr\\example:wtf@example.com:1234/D:/x')",[201881]
"('Description.java', 'org.junit.runner.Description', 'methodAndClassNamePatternGroupOrDefault', '([\\s\\S]*)\\((.*)\\)', 'testReadACK_ACKcommon1(org.eclipse.jgit.transport.PacketLineInTest)')","[184731, 185281]"
"('URIish.java', 'org.eclipse.jgit.transport.URIish', '<init>', '^([a-z][a-z0-9+-]+)://(?:(?:([^/:@]+)(?::([^\\\\/]+))?@)?((?:[^\\\\/:]+)|(?:\\[[0-9a-f:]+\\]))(?::(\\d+))?((?:/~(?:[^\\\\/]+))?[\\\\/]))?(.+)?$', 'ssh://l usr\\example.com@example.com/D:\\x')","[222060, 222244]"
"('URIish.java', 'org.eclipse.jgit.transport.URIish', '<init>', '^([a-z][a-z0-9+-]+)://(?:(?:([^/:@]+)(?::([^\\\\/]+))?@)?((?:[^\\\\/:]+)|(?:\\[[0-9a-f:]+\\]))(?::(\\d+))?((?:/~(?:[^\\\\/]+))?[\\\\/]))?(.+)?$', 'ssh://l usr\\example.com@1.2.3.4//abc')","[222336, 222520]"
"('URIish.java', 'org.eclipse.jgit.transport.URIish', '<init>', '^([a-z][a-z0-9+-]+)://(?:(?:([^/:@]+)(?::([^\\\\/]+))?@)?((?:[^\\\\/:]+)|(?:\\[[0-9a-f:]+\\]))(?::(\\d+))?((?:/~(?:[^\\\\/]+))?[\\\\/]))?(.+)?$', 'https://me@[::1]:1234/D:/x')",[217782]
"('Description.java', 'org.junit.runner.Description', 'methodAndClassNamePatternGroupOrDefault', '([\\s\\S]*)\\((.*)\\)', 'testXDigitGroupCase1[OldRule? true](org.eclipse.jgit.ignore.IgnoreRuleSpecialCasesTest)')","[91147, 98231]"
"('ChangeIdUtil.java', 'org.eclipse.jgit.util.ChangeIdUtil', 'indexOfChangeId', '(^Change-Id: *I[a-f0-9]{40}$)', 'a')","[34166, 34192, 34218, 34581, 34607, 36621, 38225, 38251]"
"('Description.java', 'org.junit.runner.Description', 'methodAndClassNamePatternGroupOrDefault', '([\\s\\S]*)\\((.*)\\)', 'testLineDelimiter(org.eclipse.jgit.diff.RawTextTest)')","[10873, 11197]"
"('Description.java', 'org.junit.runner.Description', 'methodAndClassNamePatternGroupOrDefault', '([\\s\\S]*)\\((.*)\\)', 'testHeap(org.eclipse.jgit.util.TemporaryBufferTest)')","[26512, 26810]"
"('Description.java', 'org.junit.runner.Description', 'methodAndClassNamePatternGroupOrDefault', '([\\s\\S]*)\\((.*)\\)', 'testGetRefs_HeadsOnly_AllPacked1(org.eclipse.jgit.internal.storage.file.RefDirectoryTest)')","[111055, 112241]"
"('Description.java', 'org.junit.runner.Description', 'methodAndClassNamePatternGroupOrDefault', '([\\s\\S]*)\\((.*)\\)', 'testRefKeySameAsName(org.eclipse.jgit.internal.storage.file.RefUpdateTest)')","[119823, 120654]"
"('URIish.java', 'org.eclipse.jgit.transport.URIish', '<init>', '^([a-z][a-z0-9+-]+)://(?:(?:([^/:@]+)(?::([^\\\\/]+))?@)?((?:[^\\\\/:]+)|(?:\\[[0-9a-f:]+\\]))(?::(\\d+))?((?:/~(?:[^\\\\/]+))?[\\\\/]))?(.+)?$', 'ssh://me@[::1]/D:\\x')","[221692, 221876]"
"('Description.java', 'org.junit.runner.Description', 'methodAndClassNamePatternGroupOrDefault', '([\\s\\S]*)\\((.*)\\)', 'testNotEquals4(org.eclipse.jgit.diff.EditTest)')","[6115, 6465]"
"('Description.java', 'org.junit.runner.Description', 'methodAndClassNamePatternGroupOrDefault', '([\\s\\S]*)\\((.*)\\)', 'testLowerGroupCase4(org.eclipse.jgit.fnmatch.FileNameMatcherTest)')","[42217, 45514]"
"('Description.java', 'org.junit.runner.Description', 'methodAndClassNamePatternGroupOrDefault', '([\\s\\S]*)\\((.*)\\)', 'testLowerGroupCase3(org.eclipse.jgit.fnmatch.FileNameMatcherTest)')","[42196, 45492]"
"('Description.java', 'org.junit.runner.Description', 'methodAndClassNamePatternGroupOrDefault', '([\\s\\S]*)\\((.*)\\)', 'submoduleHeadMatchesIndex(org.eclipse.jgit.treewalk.FileTreeIteratorTest)')","[262166, 262512]"
"('URIish.java', 'org.eclipse.jgit.transport.URIish', '<init>', '^(file):([\\\\/](?![\\\\/])((?:[A-Za-z]:)?[\\\\/]?(?:(?:[^\\\\/]+[\\\\/]+)*[^\\\\/]+[\\\\/]*)))$', 'ssh://[::1]/D:\\x')","[234917, 235101, 236021, 236205, 237125, 237309]"
"('Description.java', 'org.junit.runner.Description', 'methodAndClassNamePatternGroupOrDefault', '([\\s\\S]*)\\((.*)\\)', 'shouldThrowIAEWhenScanShouldIncludeTreesAndWalkIsRecursive(org.eclipse.jgit.diff.DiffEntryTest)')","[9998, 10256]"
"('Description.java', 'org.junit.runner.Description', 'methodAndClassNamePatternGroupOrDefault', '([\\s\\S]*)\\((.*)\\)', 'testCoreAutoCrlf3(org.eclipse.jgit.api.BlameCommandTest)')","[139673, 140054]"
"('Description.java', 'org.junit.runner.Description', 'methodAndClassNamePatternGroupOrDefault', '([\\s\\S]*)\\((.*)\\)', 'testShuffleSegments(org.eclipse.jgit.internal.storage.pack.DeltaIndexTest)')","[109055, 109340]"
"('Description.java', 'org.junit.runner.Description', 'methodAndClassNamePatternGroupOrDefault', '([\\s\\S]*)\\((.*)\\)', 'org.eclipse.jgit.internal.storage.file.PackIndexV1Test')","[113521, 113802]"
"('FastIgnoreRule.java', 'org.eclipse.jgit.ignore.FastIgnoreRule', 'isMatch', 'a.', 'a')","[82976, 83030]"
"('Description.java', 'org.junit.runner.Description', 'methodAndClassNamePatternGroupOrDefault', '([\\s\\S]*)\\((.*)\\)', 'testSpaceGroupCase2[OldRule? false](org.eclipse.jgit.ignore.IgnoreRuleSpecialCasesTest)')","[86089, 93194]"
"('Description.java', 'org.junit.runner.Description', 'methodAndClassNamePatternGroupOrDefault', '([\\s\\S]*)\\((.*)\\)', 'testTimeAltersId(org.eclipse.jgit.util.ChangeIdUtilTest)')","[31846, 32591]"
"('Description.java', 'org.junit.runner.Description', 'methodAndClassNamePatternGroupOrDefault', '([\\s\\S]*)\\((.*)\\)', 'testNameOnlyMatches[OldRule? true](org.eclipse.jgit.ignore.IgnoreMatcherParametrizedTest)')","[103763, 104223]"
"('Description.java', 'org.junit.runner.Description', 'methodAndClassNamePatternGroupOrDefault', '([\\s\\S]*)\\((.*)\\)', 'testTagBlob(org.eclipse.jgit.revwalk.RevTagParseTest)')","[179478, 179878]"
"('Description.java', 'org.junit.runner.Description', 'methodAndClassNamePatternGroupOrDefault', '([\\s\\S]*)\\((.*)\\)', 'testInvalidTagNoObject1(org.eclipse.jgit.lib.ObjectCheckerTest)')","[49886, 52440]"
"('Description.java', 'org.junit.runner.Description', 'methodAndClassNamePatternGroupOrDefault', '([\\s\\S]*)\\((.*)\\)', 'invalidWhenMoreThanOneWildcardInSource(org.eclipse.jgit.transport.RefSpecTest)')","[186801, 187533]"
"('Description.java', 'org.junit.runner.Description', 'methodAndClassNamePatternGroupOrDefault', '([\\s\\S]*)\\((.*)\\)', 'testReplaceManifestBare(org.eclipse.jgit.gitrepo.RepoCommandTest)')","[2615, 3384]"
"('Description.java', 'org.junit.runner.Description', 'methodAndClassNamePatternGroupOrDefault', '([\\s\\S]*)\\((.*)\\)', 'workingDirectoryContentConflict(org.eclipse.jgit.api.StashApplyCommandTest)')","[142414, 142961]"
"('Description.java', 'org.junit.runner.Description', 'methodAndClassNamePatternGroupOrDefault', '([\\s\\S]*)\\((.*)\\)', 'testInexactRenames_OnePair2(org.eclipse.jgit.diff.RenameDetectorTest)')","[4372, 4922]"
"('URIish.java', 'org.eclipse.jgit.transport.URIish', '<init>', '^([a-z][a-z0-9+-]+)://(?:(?:([^/:@]+)(?::([^\\\\/]+))?@)?((?:[^\\\\/:]+)|(?:\\[[0-9a-f:]+\\]))(?::(\\d+))?((?:/~(?:[^\\\\/]+))?[\\\\/]))?(.+)?$', 'https://lusr\\example@1.2.3.4:1234//')",[220082]
"('URIish.java', 'org.eclipse.jgit.transport.URIish', '<init>', '^([a-z][a-z0-9+-]+)://(?:(?:([^/:@]+)(?::([^\\\\/]+))?@)?((?:[^\\\\/:]+)|(?:\\[[0-9a-f:]+\\]))(?::(\\d+))?((?:/~(?:[^\\\\/]+))?[\\\\/]))?(.+)?$', 'ssh://l usr\\example.com@example.com:80//abc')",[208329]
"('Description.java', 'org.junit.runner.Description', 'methodAndClassNamePatternGroupOrDefault', '([\\s\\S]*)\\((.*)\\)', 'org.eclipse.jgit.revwalk.RevWalkPathFilter6012Test')","[178909, 179233]"
"('URIish.java', 'org.eclipse.jgit.transport.URIish', '<init>', '^([a-z][a-z0-9+-]+)://(?:(?:([^/:@]+)(?::([^\\\\/]+))?@)?((?:[^\\\\/:]+)|(?:\\[[0-9a-f:]+\\]))(?::(\\d+))?((?:/~(?:[^\\\\/]+))?[\\\\/]))?(.+)?$', 'ssh+git://me@1.2.3.4:1234/D:/x')",[210767]
"('ChangeIdUtil.java', 'org.eclipse.jgit.util.ChangeIdUtil', 'indexOfFirstFooterLine', '(^[a-zA-Z0-9-]+:(?!//).*$)', 'b')",[37296]
"('ChangeIdUtil.java', 'org.eclipse.jgit.util.ChangeIdUtil', 'indexOfChangeId', '(^Change-Id: *I[a-f0-9]{40}$)', 'Signed-off-by: J Author <ja@example.com>')","[34322, 34633, 34813, 35350, 35479, 35608, 35763, 35944]"
"('URIish.java', 'org.eclipse.jgit.transport.URIish', '<init>', '^([a-z][a-z0-9+-]+)://(?:(?:([^/:@]+)(?::([^\\\\/]+))?@)?((?:[^\\\\/:]+)|(?:\\[[0-9a-f:]+\\]))(?::(\\d+))?((?:/~(?:[^\\\\/]+))?[\\\\/]))?(.+)?$', 'ssh://l usr\\example.com:wtf@1.2.3.4:1234//abc')",[193685]
"('URIish.java', 'org.eclipse.jgit.transport.URIish', '<init>', '^([a-z][a-z0-9+-]+)://(?:(?:([^/:@]+)(?::([^\\\\/]+))?@)?((?:[^\\\\/:]+)|(?:\\[[0-9a-f:]+\\]))(?::(\\d+))?((?:/~(?:[^\\\\/]+))?[\\\\/]))?(.+)?$', 'ssh://lusr\\example@1.2.3.4/D:/x')","[223486, 223670]"
"('URIish.java', 'org.eclipse.jgit.transport.URIish', '<init>', '^([a-z][a-z0-9+-]+)://(?:(?:([^/:@]+)(?::([^\\\\/]+))?@)?((?:[^\\\\/:]+)|(?:\\[[0-9a-f:]+\\]))(?::(\\d+))?((?:/~(?:[^\\\\/]+))?[\\\\/]))?(.+)?$', 'ssh+git://me@[::1]:80/D:/x')",[211319]
"('URIish.java', 'org.eclipse.jgit.transport.URIish', '<init>', '^(file):([\\\\/](?![\\\\/])((?:[A-Za-z]:)?[\\\\/]?(?:(?:[^\\\\/]+[\\\\/]+)*[^\\\\/]+[\\\\/]*)))$', 'http://lusr\\example@example.com//abc')","[229673, 229857]"
"('Description.java', 'org.junit.runner.Description', 'methodAndClassNamePatternGroupOrDefault', '([\\s\\S]*)\\((.*)\\)', 'testRebaseInteractiveFixupWithBlankLines(org.eclipse.jgit.api.RebaseCommandTest)')","[131306, 132788]"
"('URIish.java', 'org.eclipse.jgit.transport.URIish', '<init>', '^([a-z][a-z0-9+-]+)://(?:(?:([^/:@]+)(?::([^\\\\/]+))?@)?((?:[^\\\\/:]+)|(?:\\[[0-9a-f:]+\\]))(?::(\\d+))?((?:/~(?:[^\\\\/]+))?[\\\\/]))?(.+)?$', 'ssh+git://l usr\\example.com:wtf@[::1]:1234//')",[198109]
"('AttributesRule.java', 'org.eclipse.jgit.attributes.AttributesRule', 'isMatch', '.rc', 'file')",[76211]
"('URIish.java', 'org.eclipse.jgit.transport.URIish', '<init>', '^([a-z][a-z0-9+-]+)://(?:(?:([^/:@]+)(?::([^\\\\/]+))?@)?((?:[^\\\\/:]+)|(?:\\[[0-9a-f:]+\\]))(?::(\\d+))?((?:/~(?:[^\\\\/]+))?[\\\\/]))?(.+)?$', 'file:///tmp/jgit_test_6721186325767818022_tmp/tmp_8758045609552187131/.git/')",[58279]
"('Description.java', 'org.junit.runner.Description', 'methodAndClassNamePatternGroupOrDefault', '([\\s\\S]*)\\((.*)\\)', 'testPrintGroupCase5[OldRule? true](org.eclipse.jgit.ignore.IgnoreRuleSpecialCasesTest)')","[90664, 97748]"
"('URIish.java', 'org.eclipse.jgit.transport.URIish', '<init>', '^(file):([\\\\/](?![\\\\/])((?:[A-Za-z]:)?[\\\\/]?(?:(?:[^\\\\/]+[\\\\/]+)*[^\\\\/]+[\\\\/]*)))$', 'ssh+git://lusr\\example@example.com//abc')","[226361, 226545]"
"('URIish.java', 'org.eclipse.jgit.transport.URIish', '<init>', '^([a-z][a-z0-9+-]+)://(?:(?:([^/:@]+)(?::([^\\\\/]+))?@)?((?:[^\\\\/:]+)|(?:\\[[0-9a-f:]+\\]))(?::(\\d+))?((?:/~(?:[^\\\\/]+))?[\\\\/]))?(.+)?$', '/tmp/jgit_test_6525282766431782376_tmp/tmp_51199864732082123')","[154153, 154283, 154436]"
"('Description.java', 'org.junit.runner.Description', 'methodAndClassNamePatternGroupOrDefault', '([\\s\\S]*)\\((.*)\\)', 'testUnsupportedGroupCase0[OldRule? false](org.eclipse.jgit.ignore.IgnoreRuleSpecialCasesTest)')","[86641, 93746]"
"('Description.java', 'org.junit.runner.Description', 'methodAndClassNamePatternGroupOrDefault', '([\\s\\S]*)\\((.*)\\)', 'testPullMerge(org.eclipse.jgit.api.PullCommandTest)')","[144441, 144779]"
"('URIish.java', 'org.eclipse.jgit.transport.URIish', '<init>', '^(file):([\\\\/](?![\\\\/])((?:[A-Za-z]:)?[\\\\/]?(?:(?:[^\\\\/]+[\\\\/]+)*[^\\\\/]+[\\\\/]*)))$', 'ssh+git://me:wtf@example.com:80//')",[195640]
"('FastIgnoreRule.java', 'org.eclipse.jgit.ignore.FastIgnoreRule', 'isMatch', '[[\\p{javaDigit}\\p{javaLetter}_]]', 'g')",[102305]
"('Description.java', 'org.junit.runner.Description', 'methodAndClassNamePatternGroupOrDefault', '([\\s\\S]*)\\((.*)\\)', 'testWritePack2SizeOffsetsVsRefs(org.eclipse.jgit.internal.storage.file.PackWriterTest)')","[117971, 118431]"
"('Description.java', 'org.junit.runner.Description', 'methodAndClassNamePatternGroupOrDefault', '([\\s\\S]*)\\((.*)\\)', 'test000_openrepo_alternate_index_file_and_objdirs(org.eclipse.jgit.internal.storage.file.T0003_BasicTest)')","[116525, 117059]"
"('URIish.java', 'org.eclipse.jgit.transport.URIish', '<init>', '^(file):([\\\\/](?![\\\\/])((?:[A-Za-z]:)?[\\\\/]?(?:(?:[^\\\\/]+[\\\\/]+)*[^\\\\/]+[\\\\/]*)))$', 'file:/tmp/jgit_test_3236687163374977183_tmp/tmp_995430085484609221/testCloneRepositoryWithNestedSubmodules1/.git/')","[161206, 161803]"
"('Description.java', 'org.junit.runner.Description', 'methodAndClassNamePatternGroupOrDefault', '([\\s\\S]*)\\((.*)\\)', 'testAdd(org.eclipse.jgit.internal.storage.pack.IntSetTest)')","[108722, 108744]"
"('URIish.java', 'org.eclipse.jgit.transport.URIish', '<init>', '^([a-z][a-z0-9+-]+)://(?:(?:([^/:@]+)(?::([^\\\\/]+))?@)?((?:[^\\\\/:]+)|(?:\\[[0-9a-f:]+\\]))(?::(\\d+))?((?:/~(?:[^\\\\/]+))?[\\\\/]))?(.+)?$', 'https://lusr\\example:wtf@1.2.3.4:1234//abc')",[206305]
"('Description.java', 'org.junit.runner.Description', 'methodAndClassNamePatternGroupOrDefault', '([\\s\\S]*)\\((.*)\\)', 'testValidTreeNameIsGitTilde11(org.eclipse.jgit.lib.ObjectCheckerTest)')","[50348, 52924]"
"('Description.java', 'org.junit.runner.Description', 'methodAndClassNamePatternGroupOrDefault', '([\\s\\S]*)\\((.*)\\)', 'testOnlyOption_f1_14_c(org.eclipse.jgit.api.CommitOnlyTest)')","[136159, 138263]"
"('URIish.java', 'org.eclipse.jgit.transport.URIish', '<init>', '^(file):([\\\\/](?![\\\\/])((?:[A-Za-z]:)?[\\\\/]?(?:(?:[^\\\\/]+[\\\\/]+)*[^\\\\/]+[\\\\/]*)))$', 'https://l usr\\example.com:wtf@1.2.3.4:80/D:/x')",[205408]
"('URIish.java', 'org.eclipse.jgit.transport.URIish', '<init>', '^([a-z][a-z0-9+-]+)://(?:(?:([^/:@]+)(?::([^\\\\/]+))?@)?((?:[^\\\\/:]+)|(?:\\[[0-9a-f:]+\\]))(?::(\\d+))?((?:/~(?:[^\\\\/]+))?[\\\\/]))?(.+)?$', 'ssh://lusr\\example@[::1]:1234/D:\\x')",[210077]
"('Description.java', 'org.junit.runner.Description', 'methodAndClassNamePatternGroupOrDefault', '([\\s\\S]*)\\((.*)\\)', 'testMkdir(org.eclipse.jgit.util.FileUtilTest)')","[23289, 23627]"
"('Description.java', 'org.junit.runner.Description', 'methodAndClassNamePatternGroupOrDefault', '([\\s\\S]*)\\((.*)\\)', 'testReadIndex_LsFiles(org.eclipse.jgit.dircache.DirCacheCGitCompatabilityTest)')","[173044, 173197]"
"('URIish.java', 'org.eclipse.jgit.transport.URIish', '<init>', '^([a-z][a-z0-9+-]+)://(?:(?:([^/:@]+)(?::([^\\\\/]+))?@)?((?:[^\\\\/:]+)|(?:\\[[0-9a-f:]+\\]))(?::(\\d+))?((?:/~(?:[^\\\\/]+))?[\\\\/]))?(.+)?$', 'http://lusr\\example@[::1]:1234//abc')",[216609]
"('Description.java', 'org.junit.runner.Description', 'methodAndClassNamePatternGroupOrDefault', '([\\s\\S]*)\\((.*)\\)', 'testReadFromInserterSmallObjects(org.eclipse.jgit.internal.storage.dfs.DfsInserterTest)')","[109442, 109548]"
"('ChangeIdUtil.java', 'org.eclipse.jgit.util.ChangeIdUtil', 'indexOfChangeId', '(^Change-Id: *I[a-f0-9]{40}$)', '     the indentation]')",[34270]
"('Description.java', 'org.junit.runner.Description', 'methodAndClassNamePatternGroupOrDefault', '([\\s\\S]*)\\((.*)\\)', 'testVerySimpleGroupRangeCase0[OldRule? true](org.eclipse.jgit.ignore.IgnoreRuleSpecialCasesTest)')","[90066, 97150]"
"('URIish.java', 'org.eclipse.jgit.transport.URIish', '<init>', '^(?:([^/:@]+)(?::([^\\\\/]+))?@)?([^\\\\/:]{2,}):([\\\\/](?:(?:[^\\\\/]+[\\\\/]+)*[^\\\\/]+[\\\\/]*))$', '/tmp/jgit_test_2307217292654954211_tmp/tmp_6715492902754415962.git')",[184122]
"('Description.java', 'org.junit.runner.Description', 'methodAndClassNamePatternGroupOrDefault', '([\\s\\S]*)\\((.*)\\)', 'org.eclipse.jgit.api.CommitCommandTest')","[123021, 123656]"
"('URIish.java', 'org.eclipse.jgit.transport.URIish', '<init>', '^([a-z][a-z0-9+-]+)://(?:(?:([^/:@]+)(?::([^\\\\/]+))?@)?((?:[^\\\\/:]+)|(?:\\[[0-9a-f:]+\\]))(?::(\\d+))?((?:/~(?:[^\\\\/]+))?[\\\\/]))?(.+)?$', 'file:///tmp/jgit_test_1107658446954903154_tmp/tmp_3281325662526635036')","[138965, 139027, 139087]"
"('URIish.java', 'org.eclipse.jgit.transport.URIish', '<init>', '^(file):([\\\\/](?![\\\\/])((?:[A-Za-z]:)?[\\\\/]?(?:(?:[^\\\\/]+[\\\\/]+)*[^\\\\/]+[\\\\/]*)))$', 'https://me@[::1]:1234//')",[217667]
"('Description.java', 'org.junit.runner.Description', 'methodAndClassNamePatternGroupOrDefault', '([\\s\\S]*)\\((.*)\\)', 'testCombinedRangesInOneGroupCase1[OldRule? false](org.eclipse.jgit.ignore.IgnoreRuleSpecialCasesTest)')","[85077, 92182]"
"('URIish.java', 'org.eclipse.jgit.transport.URIish', '<init>', '^(file):([\\\\/](?![\\\\/])((?:[A-Za-z]:)?[\\\\/]?(?:(?:[^\\\\/]+[\\\\/]+)*[^\\\\/]+[\\\\/]*)))$', 'https://lusr\\example@[::1]:1234/D:/x')",[220519]
"('Description.java', 'org.junit.runner.Description', 'methodAndClassNamePatternGroupOrDefault', '([\\s\\S]*)\\((.*)\\)', 'testInsertTie(org.eclipse.jgit.revwalk.DateRevQueueTest)')","[174990, 175141]"
"('Description.java', 'org.junit.runner.Description', 'methodAndClassNamePatternGroupOrDefault', '([\\s\\S]*)\\((.*)\\)', 'testEmptyStatus(org.eclipse.jgit.api.StatusCommandTest)')","[157260, 157325]"
"('Description.java', 'org.junit.runner.Description', 'methodAndClassNamePatternGroupOrDefault', '([\\s\\S]*)\\((.*)\\)', 'testEqualsWithWhitespace(org.eclipse.jgit.diff.RawTextIgnoreWhitespaceChangeTest)')","[5718, 5762]"
"('Description.java', 'org.junit.runner.Description', 'methodAndClassNamePatternGroupOrDefault', '([\\s\\S]*)\\((.*)\\)', 'testRevertMultipleWithFail(org.eclipse.jgit.api.RevertCommandTest)')","[125599, 125814]"
"('FastIgnoreRule.java', 'org.eclipse.jgit.ignore.FastIgnoreRule', 'isMatch', '[A\\p{Ll}C3-5]', 'A')",[99337]
"('Description.java', 'org.junit.runner.Description', 'methodAndClassNamePatternGroupOrDefault', '([\\s\\S]*)\\((.*)\\)', 'testMergeMessage(org.eclipse.jgit.api.MergeCommandTest)')","[126790, 127725]"
"('Description.java', 'org.junit.runner.Description', 'methodAndClassNamePatternGroupOrDefault', '([\\s\\S]*)\\((.*)\\)', 'org.eclipse.jgit.util.RawParseUtils_FormatTest')","[39433, 39499]"
"('Description.java', 'org.junit.runner.Description', 'methodAndClassNamePatternGroupOrDefault', '([\\s\\S]*)\\((.*)\\)', 'testUnixFile(org.eclipse.jgit.transport.URIishTest)')","[188674, 190062]"
"('Description.java', 'org.junit.runner.Description', 'methodAndClassNamePatternGroupOrDefault', '([\\s\\S]*)\\((.*)\\)', 'testSimpleStarCase3(org.eclipse.jgit.fnmatch.FileNameMatcherTest)')","[42847, 46174]"
"('URIish.java', 'org.eclipse.jgit.transport.URIish', '<init>', '^([a-z][a-z0-9+-]+)://(?:(?:([^/:@]+)(?::([^\\\\/]+))?@)?((?:[^\\\\/:]+)|(?:\\[[0-9a-f:]+\\]))(?::(\\d+))?((?:/~(?:[^\\\\/]+))?[\\\\/]))?(.+)?$', 'http://l usr\\example.com@1.2.3.4/D:/x')","[229006, 229190]"
"('URIish.java', 'org.eclipse.jgit.transport.URIish', '<init>', '^([a-z][a-z0-9+-]+)://(?:(?:([^/:@]+)(?::([^\\\\/]+))?@)?((?:[^\\\\/:]+)|(?:\\[[0-9a-f:]+\\]))(?::(\\d+))?((?:/~(?:[^\\\\/]+))?[\\\\/]))?(.+)?$', 'ssh://lusr\\example:wtf@1.2.3.4:1234//')",[194743]
"('ChangeIdUtil.java', 'org.eclipse.jgit.util.ChangeIdUtil', 'indexOfChangeId', '(^Change-Id: *I[a-f0-9]{40}$)', 'Change-Id: I3b7e4e16b503ce00f07ba6ad01d97a356dad7701')","[33499, 33522, 33545, 33729, 33752, 33775, 33890, 33913, 33936, 33959]"
"('Description.java', 'org.junit.runner.Description', 'methodAndClassNamePatternGroupOrDefault', '([\\s\\S]*)\\((.*)\\)', 'testFileInFolderCommittedAllDeletedCommittedAllIgnoredComparedWithInitialCommit(org.eclipse.jgit.treewalk.filter.IndexDiffFilterTest)')","[264317, 265123]"
"('URIish.java', 'org.eclipse.jgit.transport.URIish', '<init>', '^([a-z][a-z0-9+-]+)://(?:(?:([^/:@]+)(?::([^\\\\/]+))?@)?((?:[^\\\\/:]+)|(?:\\[[0-9a-f:]+\\]))(?::(\\d+))?((?:/~(?:[^\\\\/]+))?[\\\\/]))?(.+)?$', 'file:///tmp/jgit_test_4316411690756966690_tmp/tmp_5182268387694359159')","[160196, 160408]"
"('URIish.java', 'org.eclipse.jgit.transport.URIish', '<init>', '^(file):([\\\\/](?![\\\\/])((?:[A-Za-z]:)?[\\\\/]?(?:(?:[^\\\\/]+[\\\\/]+)*[^\\\\/]+[\\\\/]*)))$', 'http://me:wtf@[::1]:80//abc')",[200524]
"('Description.java', 'org.junit.runner.Description', 'methodAndClassNamePatternGroupOrDefault', '([\\s\\S]*)\\((.*)\\)', 'testCR(org.eclipse.jgit.util.io.EolCanonicalizingInputStreamTest)')","[24927, 25078]"
"('Description.java', 'org.junit.runner.Description', 'methodAndClassNamePatternGroupOrDefault', '([\\s\\S]*)\\((.*)\\)', 'test008_notIsId(org.eclipse.jgit.lib.ObjectIdTest)')","[53507, 53784]"
"('Description.java', 'org.junit.runner.Description', 'methodAndClassNamePatternGroupOrDefault', '([\\s\\S]*)\\((.*)\\)', 'testManySolutionsCase4[OldRule? true](org.eclipse.jgit.ignore.IgnoreRuleSpecialCasesTest)')","[90779, 97863]"
"('Description.java', 'org.junit.runner.Description', 'methodAndClassNamePatternGroupOrDefault', '([\\s\\S]*)\\((.*)\\)', 'testRemoveMiddleURI(org.eclipse.jgit.transport.RemoteConfigTest)')","[253191, 253739]"
"('FastIgnoreRule.java', 'org.eclipse.jgit.ignore.FastIgnoreRule', 'isMatch', '.*\\.sta[0-5]', 'test.sta3')","[104693, 105923]"
"('Description.java', 'org.junit.runner.Description', 'methodAndClassNamePatternGroupOrDefault', '([\\s\\S]*)\\((.*)\\)', 'testThreadTranslationBundleInheritance(org.eclipse.jgit.nls.NLSTest)')","[40936, 41023]"
"('Description.java', 'org.junit.runner.Description', 'methodAndClassNamePatternGroupOrDefault', '([\\s\\S]*)\\((.*)\\)', 'org.eclipse.jgit.ignore.IgnoreMatcherParametrizedTest')",[103353]
"('URIish.java', 'org.eclipse.jgit.transport.URIish', '<init>', '^([a-z][a-z0-9+-]+)://(?:(?:([^/:@]+)(?::([^\\\\/]+))?@)?((?:[^\\\\/:]+)|(?:\\[[0-9a-f:]+\\]))(?::(\\d+))?((?:/~(?:[^\\\\/]+))?[\\\\/]))?(.+)?$', 'http://me:wtf@1.2.3.4:80/D:\\x')",[200271]
"('Description.java', 'org.junit.runner.Description', 'methodAndClassNamePatternGroupOrDefault', '([\\s\\S]*)\\((.*)\\)', 'testFilter_NONE_Or_MY_ALL(org.eclipse.jgit.revwalk.RevWalkFilterTest)')","[180710, 181034]"
"('Description.java', 'org.junit.runner.Description', 'methodAndClassNamePatternGroupOrDefault', '([\\s\\S]*)\\((.*)\\)', 'testReadSimplePackedRefSameRepo(org.eclipse.jgit.lib.RefTest)')","[57722, 57913]"
"('Description.java', 'org.junit.runner.Description', 'methodAndClassNamePatternGroupOrDefault', '([\\s\\S]*)\\((.*)\\)', 'testParseGitFileName_FailFooBar(org.eclipse.jgit.patch.FileHeaderTest)')","[450, 921]"
"('PathMatcher.java', 'org.eclipse.jgit.ignore.internal.PathMatcher', 'iterate', '[a-b]', 'b')","[107753, 107783, 107812, 107841, 107870, 107899, 107928, 107958]"
"('URIish.java', 'org.eclipse.jgit.transport.URIish', '<init>', '^([a-z][a-z0-9+-]+)://(?:(?:([^/:@]+)(?::([^\\\\/]+))?@)?((?:[^\\\\/:]+)|(?:\\[[0-9a-f:]+\\]))(?::(\\d+))?((?:/~(?:[^\\\\/]+))?[\\\\/]))?(.+)?$', '/home/m y')","[248602, 248717]"
"('Description.java', 'org.junit.runner.Description', 'methodAndClassNamePatternGroupOrDefault', '([\\s\\S]*)\\((.*)\\)', 'testInsertVsModify(org.eclipse.jgit.merge.MergeAlgorithmTest)')","[12081, 12384]"
"('URIish.java', 'org.eclipse.jgit.transport.URIish', '<init>', '^([a-z][a-z0-9+-]+)://(?:(?:([^/:@]+)(?::([^\\\\/]+))?@)?((?:[^\\\\/:]+)|(?:\\[[0-9a-f:]+\\]))(?::(\\d+))?((?:/~(?:[^\\\\/]+))?[\\\\/]))?(.+)?$', 'https://l usr\\example.com@[::1]:1234//')",[219346]
"('URIish.java', 'org.eclipse.jgit.transport.URIish', '<init>', '^([a-z][a-z0-9+-]+)://(?:(?:([^/:@]+)(?::([^\\\\/]+))?@)?((?:[^\\\\/:]+)|(?:\\[[0-9a-f:]+\\]))(?::(\\d+))?((?:/~(?:[^\\\\/]+))?[\\\\/]))?(.+)?$', '/tmp/jgit_test_2155224643509466025_tmp/tmp_5834574717535685926.git')",[188015]
"('Description.java', 'org.junit.runner.Description', 'methodAndClassNamePatternGroupOrDefault', '([\\s\\S]*)\\((.*)\\)', 'testCloneWithAutoSetupRebase(org.eclipse.jgit.api.CloneCommandTest)')","[159010, 159311]"
"('URIish.java', 'org.eclipse.jgit.transport.URIish', '<init>', '^(file):([\\\\/](?![\\\\/])((?:[A-Za-z]:)?[\\\\/]?(?:(?:[^\\\\/]+[\\\\/]+)*[^\\\\/]+[\\\\/]*)))$', 'ssh://lusr\\example:wtf@example.com:80//abc')",[194582]
"('URIish.java', 'org.eclipse.jgit.transport.URIish', '<init>', '^(file):([\\\\/](?![\\\\/])((?:[A-Za-z]:)?[\\\\/]?(?:(?:[^\\\\/]+[\\\\/]+)*[^\\\\/]+[\\\\/]*)))$', 'https://me@1.2.3.4:1234/D:/x')",[217368]
"('URIish.java', 'org.eclipse.jgit.transport.URIish', '<init>', '^(file):([\\\\/](?![\\\\/])((?:[A-Za-z]:)?[\\\\/]?(?:(?:[^\\\\/]+[\\\\/]+)*[^\\\\/]+[\\\\/]*)))$', 'file:///tmp/jgit_test_3341477454584314902_tmp/tmp_1018413196038832020')","[167839, 167896]"
"('URIish.java', 'org.eclipse.jgit.transport.URIish', '<init>', '^([a-z][a-z0-9+-]+)://(?:(?:([^/:@]+)(?::([^\\\\/]+))?@)?((?:[^\\\\/:]+)|(?:\\[[0-9a-f:]+\\]))(?::(\\d+))?((?:/~(?:[^\\\\/]+))?[\\\\/]))?(.+)?$', 'ssh://lusr\\example@1.2.3.4:1234//')",[209571]
"('URIish.java', 'org.eclipse.jgit.transport.URIish', '<init>', '^(file):([\\\\/](?![\\\\/])((?:[A-Za-z]:)?[\\\\/]?(?:(?:[^\\\\/]+[\\\\/]+)*[^\\\\/]+[\\\\/]*)))$', 'ssh://l usr\\example.com@example.com//abc')","[221945, 222129]"
"('URIish.java', 'org.eclipse.jgit.transport.URIish', '<init>', '^(file):([\\\\/](?![\\\\/])((?:[A-Za-z]:)?[\\\\/]?(?:(?:[^\\\\/]+[\\\\/]+)*[^\\\\/]+[\\\\/]*)))$', '/tmp/jgit_test_6323444599553401210_tmp/tmp_1339419818471425794')","[159489, 159614, 159812, 160024, 160226]"
"('Description.java', 'org.junit.runner.Description', 'methodAndClassNamePatternGroupOrDefault', '([\\s\\S]*)\\((.*)\\)', 'testPut_NoPrefix(org.eclipse.jgit.util.RefMapTest)')","[20850, 21313]"
"('URIish.java', 'org.eclipse.jgit.transport.URIish', '<init>', '^(file):([\\\\/](?![\\\\/])((?:[A-Za-z]:)?[\\\\/]?(?:(?:[^\\\\/]+[\\\\/]+)*[^\\\\/]+[\\\\/]*)))$', 'ssh+git://lusr\\example@example.com:80/D:/x')",[212768]
"('FastIgnoreRule.java', 'org.eclipse.jgit.ignore.FastIgnoreRule', 'isMatch', '.r[a-c]', 'srb')",[107263]
"('URIish.java', 'org.eclipse.jgit.transport.URIish', '<init>', '^(file):([\\\\/](?![\\\\/])((?:[A-Za-z]:)?[\\\\/]?(?:(?:[^\\\\/]+[\\\\/]+)*[^\\\\/]+[\\\\/]*)))$', 'http://lusr\\example@1.2.3.4:80/D:/x')",[216448]
"('Description.java', 'org.junit.runner.Description', 'methodAndClassNamePatternGroupOrDefault', '([\\s\\S]*)\\((.*)\\)', 'testLimitObjectSize_InsertFrontFails(org.eclipse.jgit.internal.storage.pack.DeltaIndexTest)')","[108887, 109164]"
"('URIish.java', 'org.eclipse.jgit.transport.URIish', '<init>', '^(file):([\\\\/](?![\\\\/])((?:[A-Za-z]:)?[\\\\/]?(?:(?:[^\\\\/]+[\\\\/]+)*[^\\\\/]+[\\\\/]*)))$', 'ssh://some-host:/path/to/repository.git')",[249131]
"('Description.java', 'org.junit.runner.Description', 'methodAndClassNamePatternGroupOrDefault', '([\\s\\S]*)\\((.*)\\)', 'org.eclipse.jgit.diff.EditTest')","[5821, 6532]"
"('URIish.java', 'org.eclipse.jgit.transport.URIish', '<init>', '^([a-z][a-z0-9+-]+)://(?:(?:([^/:@]+)(?::([^\\\\/]+))?@)?((?:[^\\\\/:]+)|(?:\\[[0-9a-f:]+\\]))(?::(\\d+))?((?:/~(?:[^\\\\/]+))?[\\\\/]))?(.+)?$', 'git://example.com/here')",[72477]
"('FastIgnoreRule.java', 'org.eclipse.jgit.ignore.FastIgnoreRule', 'isMatch', '.r[a-c]', 'crb')",[107344]
"('URIish.java', 'org.eclipse.jgit.transport.URIish', '<init>', '^([a-z][a-z0-9+-]+)://(?:(?:([^/:@]+)(?::([^\\\\/]+))?@)?((?:[^\\\\/:]+)|(?:\\[[0-9a-f:]+\\]))(?::(\\d+))?((?:/~(?:[^\\\\/]+))?[\\\\/]))?(.+)?$', 'file:///tmp/jgit_test_7992031711278970977_tmp/tmp_2047810706527378292/.git/')",[163272]
"('URIish.java', 'org.eclipse.jgit.transport.URIish', '<init>', '^(file):([\\\\/](?![\\\\/])((?:[A-Za-z]:)?[\\\\/]?(?:(?:[^\\\\/]+[\\\\/]+)*[^\\\\/]+[\\\\/]*)))$', 'ssh+git://[::1]//')","[238091, 238275, 239195, 239379, 240299, 240483]"
"('Description.java', 'org.junit.runner.Description', 'methodAndClassNamePatternGroupOrDefault', '([\\s\\S]*)\\((.*)\\)', 'testAdded(org.eclipse.jgit.lib.IndexDiffTest)')","[68727, 69067]"
"('Description.java', 'org.junit.runner.Description', 'methodAndClassNamePatternGroupOrDefault', '([\\s\\S]*)\\((.*)\\)', 'testDiffRootNullToTree(org.eclipse.jgit.diff.DiffFormatterTest)')","[2866, 3120]"
"('AttributesRule.java', 'org.eclipse.jgit.attributes.AttributesRule', 'isMatch', '.*\\.sta[0-5]', 'test.sta2')","[74166, 75310]"
"('Description.java', 'org.junit.runner.Description', 'methodAndClassNamePatternGroupOrDefault', '([\\s\\S]*)\\((.*)\\)', 'prefix(org.eclipse.jgit.api.NameRevCommandTest)')","[168790, 169024]"
"('URIish.java', 'org.eclipse.jgit.transport.URIish', '<init>', '^(file):([\\\\/](?![\\\\/])((?:[A-Za-z]:)?[\\\\/]?(?:(?:[^\\\\/]+[\\\\/]+)*[^\\\\/]+[\\\\/]*)))$', 'https://l usr\\example.com@example.com/D:\\x')","[231973, 232157]"
"('Description.java', 'org.junit.runner.Description', 'methodAndClassNamePatternGroupOrDefault', '([\\s\\S]*)\\((.*)\\)', 'testPullWithRebaseConfig1(org.eclipse.jgit.api.PullCommandTest)')","[144462, 144801]"
"('Description.java', 'org.junit.runner.Description', 'methodAndClassNamePatternGroupOrDefault', '([\\s\\S]*)\\((.*)\\)', 'testSpecialGroupCase5(org.eclipse.jgit.fnmatch.FileNameMatcherTest)')","[41461, 44722]"
"('URIish.java', 'org.eclipse.jgit.transport.URIish', '<init>', '^([a-z][a-z0-9+-]+)://(?:(?:([^/:@]+)(?::([^\\\\/]+))?@)?((?:[^\\\\/:]+)|(?:\\[[0-9a-f:]+\\]))(?::(\\d+))?((?:/~(?:[^\\\\/]+))?[\\\\/]))?(.+)?$', 'file:///tmp/jgit_test_6430606486811908958_tmp/tmp_53734240674403407')","[167979, 168041, 168093]"
"('URIish.java', 'org.eclipse.jgit.transport.URIish', '<init>', '^([a-z][a-z0-9+-]+)://(?:(?:([^/:@]+)(?::([^\\\\/]+))?@)?((?:[^\\\\/:]+)|(?:\\[[0-9a-f:]+\\]))(?::(\\d+))?((?:/~(?:[^\\\\/]+))?[\\\\/]))?(.+)?$', 'http://lusr\\example:wtf@[::1]:1234/D:\\x')",[202663]
"('Description.java', 'org.junit.runner.Description', 'methodAndClassNamePatternGroupOrDefault', '([\\s\\S]*)\\((.*)\\)', 'testInversedGroupCase2[OldRule? true](org.eclipse.jgit.ignore.IgnoreRuleSpecialCasesTest)')","[89560, 96644]"
"('Description.java', 'org.junit.runner.Description', 'methodAndClassNamePatternGroupOrDefault', '([\\s\\S]*)\\((.*)\\)', 'testOnlyOption_f1_9_d(org.eclipse.jgit.api.CommitOnlyTest)')","[135340, 137405]"
"('URIish.java', 'org.eclipse.jgit.transport.URIish', '<init>', '^([a-z][a-z0-9+-]+)://(?:(?:([^/:@]+)(?::([^\\\\/]+))?@)?((?:[^\\\\/:]+)|(?:\\[[0-9a-f:]+\\]))(?::(\\d+))?((?:/~(?:[^\\\\/]+))?[\\\\/]))?(.+)?$', 'ssh://me@1.2.3.4:1234/D:\\x')",[207501]
"('Description.java', 'org.junit.runner.Description', 'methodAndClassNamePatternGroupOrDefault', '([\\s\\S]*)\\((.*)\\)', 'testUnicodeNames(org.eclipse.jgit.lib.ValidRefNameTest)')","[65760, 66122]"
"('Description.java', 'org.junit.runner.Description', 'methodAndClassNamePatternGroupOrDefault', '([\\s\\S]*)\\((.*)\\)', 'testLsRemoteWithoutLocalRepository(org.eclipse.jgit.api.LsRemoteCommandTest)')","[138804, 138891]"
"('Description.java', 'org.junit.runner.Description', 'methodAndClassNamePatternGroupOrDefault', '([\\s\\S]*)\\((.*)\\)', 'test003_lookupCompressedObject(org.eclipse.jgit.internal.storage.file.T0004_PackReaderTest)')","[110135, 110178]"
"('Description.java', 'org.junit.runner.Description', 'methodAndClassNamePatternGroupOrDefault', '([\\s\\S]*)\\((.*)\\)', 'testUpperGroupCase2[OldRule? true](org.eclipse.jgit.ignore.IgnoreRuleSpecialCasesTest)')","[90848, 97932]"
"('Description.java', 'org.junit.runner.Description', 'methodAndClassNamePatternGroupOrDefault', '([\\s\\S]*)\\((.*)\\)', 'testInsertChangeId(org.eclipse.jgit.api.CommitAndLogCommandTest)')","[155143, 155362]"
"('Description.java', 'org.junit.runner.Description', 'methodAndClassNamePatternGroupOrDefault', '([\\s\\S]*)\\((.*)\\)', 'testMixedGroupCase8(org.eclipse.jgit.fnmatch.FileNameMatcherTest)')","[41881, 45162]"
"('URIish.java', 'org.eclipse.jgit.transport.URIish', '<init>', '^([a-z][a-z0-9+-]+)://(?:(?:([^/:@]+)(?::([^\\\\/]+))?@)?((?:[^\\\\/:]+)|(?:\\[[0-9a-f:]+\\]))(?::(\\d+))?((?:/~(?:[^\\\\/]+))?[\\\\/]))?(.+)?$', 'http://l usr\\example.com@1.2.3.4:1234//abc')",[215137]
"('Description.java', 'org.junit.runner.Description', 'methodAndClassNamePatternGroupOrDefault', '([\\s\\S]*)\\((.*)\\)', 'testRemoveMiddleOfList(org.eclipse.jgit.util.RefListTest)')","[20075, 20572]"
"('Description.java', 'org.junit.runner.Description', 'methodAndClassNamePatternGroupOrDefault', '([\\s\\S]*)\\((.*)\\)', 'testComparatorReduceCommonStartButLastLineNoEol_2(org.eclipse.jgit.diff.RawTextTest)')","[10957, 11285]"
"('URIish.java', 'org.eclipse.jgit.transport.URIish', '<init>', '^(file):([\\\\/](?![\\\\/])((?:[A-Za-z]:)?[\\\\/]?(?:(?:[^\\\\/]+[\\\\/]+)*[^\\\\/]+[\\\\/]*)))$', 'ssh://me:wtf@1.2.3.4:80//abc')",[192640]
"('Description.java', 'org.junit.runner.Description', 'methodAndClassNamePatternGroupOrDefault', '([\\s\\S]*)\\((.*)\\)', 'testEscapedBackslash[OldRule? true](org.eclipse.jgit.ignore.IgnoreRuleSpecialCasesTest)')","[90273, 97357]"
"('Description.java', 'org.junit.runner.Description', 'methodAndClassNamePatternGroupOrDefault', '([\\s\\S]*)\\((.*)\\)', 'testTargetWithoutLeadingSlash(org.eclipse.jgit.attributes.AttributesMatcherTest)')","[73544, 73695]"
"('Description.java', 'org.junit.runner.Description', 'methodAndClassNamePatternGroupOrDefault', '([\\s\\S]*)\\((.*)\\)', 'testNonBareFileKey(org.eclipse.jgit.lib.RepositoryCacheTest)')","[60305, 60433]"
"('URIish.java', 'org.eclipse.jgit.transport.URIish', '<init>', '^([a-z][a-z0-9+-]+)://(?:(?:([^/:@]+)(?::([^\\\\/]+))?@)?((?:[^\\\\/:]+)|(?:\\[[0-9a-f:]+\\]))(?::(\\d+))?((?:/~(?:[^\\\\/]+))?[\\\\/]))?(.+)?$', 'http://me:wtf@1.2.3.4:1234/D:/x')",[200041]
"('Description.java', 'org.junit.runner.Description', 'methodAndClassNamePatternGroupOrDefault', '([\\s\\S]*)\\((.*)\\)', 'repositoryWithNoSubmodules(org.eclipse.jgit.submodule.SubmoduleWalkTest)')","[17238, 17436]"
"('Description.java', 'org.junit.runner.Description', 'methodAndClassNamePatternGroupOrDefault', '([\\s\\S]*)\\((.*)\\)', 'testNotEquals1(org.eclipse.jgit.diff.EditTest)')","[6052, 6399]"
"('URIish.java', 'org.eclipse.jgit.transport.URIish', '<init>', '^([a-z][a-z0-9+-]+)://(?:(?:([^/:@]+)(?::([^\\\\/]+))?@)?((?:[^\\\\/:]+)|(?:\\[[0-9a-f:]+\\]))(?::(\\d+))?((?:/~(?:[^\\\\/]+))?[\\\\/]))?(.+)?$', 'http://lusr\\example@1.2.3.4:80//')",[216379]
"('Description.java', 'org.junit.runner.Description', 'methodAndClassNamePatternGroupOrDefault', '([\\s\\S]*)\\((.*)\\)', 'testRebaseWithAutoStashConflictOnApply(org.eclipse.jgit.api.RebaseCommandTest)')","[131600, 133096]"
"('FastIgnoreRule.java', 'org.eclipse.jgit.ignore.FastIgnoreRule', 'isMatch', '[\\p{XDigit}]', '5')",[102123]
"('Description.java', 'org.junit.runner.Description', 'methodAndClassNamePatternGroupOrDefault', '([\\s\\S]*)\\((.*)\\)', 'testPullConflict(org.eclipse.jgit.api.PullCommandWithRebaseTest)')","[158652, 158760]"
"('Description.java', 'org.junit.runner.Description', 'methodAndClassNamePatternGroupOrDefault', '([\\s\\S]*)\\((.*)\\)', 'testLargeMap(org.eclipse.jgit.transport.LongMapTest)')","[183637, 183809]"
"('Description.java', 'org.junit.runner.Description', 'methodAndClassNamePatternGroupOrDefault', '([\\s\\S]*)\\((.*)\\)', 'testExactRename_PathBreaksTie(org.eclipse.jgit.diff.RenameDetectorTest)')","[4519, 5076]"
"('URIish.java', 'org.eclipse.jgit.transport.URIish', '<init>', '^([\\\\/]?((?:[A-Za-z]:)?[\\\\/]?(?:(?:[^\\\\/]+[\\\\/]+)*[^\\\\/]+[\\\\/]*)))$', '\\\\some\\place')","[191340, 191455]"
"('Description.java', 'org.junit.runner.Description', 'methodAndClassNamePatternGroupOrDefault', '([\\s\\S]*)\\((.*)\\)', 'testInvalidTreeNameIsMacHFSGit(org.eclipse.jgit.lib.ObjectCheckerTest)')","[50033, 52594]"
"('Description.java', 'org.junit.runner.Description', 'methodAndClassNamePatternGroupOrDefault', '([\\s\\S]*)\\((.*)\\)', 'testAlias_DoesNotMatch(org.eclipse.jgit.transport.OpenSshConfigTest)')","[195743, 196101]"
"('Description.java', 'org.junit.runner.Description', 'methodAndClassNamePatternGroupOrDefault', '([\\s\\S]*)\\((.*)\\)', 'testBareRepo(org.eclipse.jgit.gitrepo.RepoCommandTest)')","[2447, 2780]"
"('URIish.java', 'org.eclipse.jgit.transport.URIish', '<init>', '^(?:([^/:@]+)(?::([^\\\\/]+))?@)?((?:[^\\\\/:]+)|(?:\\[[0-9a-f:]+\\])):((?:(?:/~(?:[^\\\\/]+))[\\\\/])?(?:(?:[^\\\\/]+[\\\\/]+)*[^\\\\/]+[\\\\/]*))$', '/tmp/jgit_test_279927277504112735_tmp/tmp_3984817157549652538/.git')","[18424, 18574]"
"('URIish.java', 'org.eclipse.jgit.transport.URIish', '<init>', '^([a-z][a-z0-9+-]+)://(?:(?:([^/:@]+)(?::([^\\\\/]+))?@)?((?:[^\\\\/:]+)|(?:\\[[0-9a-f:]+\\]))(?::(\\d+))?((?:/~(?:[^\\\\/]+))?[\\\\/]))?(.+)?$', 'http://me:wtf@[::1]:1234//')",[200317]
"('Description.java', 'org.junit.runner.Description', 'methodAndClassNamePatternGroupOrDefault', '([\\s\\S]*)\\((.*)\\)', 'testGetRef_DiscoversModifiedLoose(org.eclipse.jgit.internal.storage.file.RefDirectoryTest)')","[110488, 111647]"
"('Description.java', 'org.junit.runner.Description', 'methodAndClassNamePatternGroupOrDefault', '([\\s\\S]*)\\((.*)\\)', 'testMaliciousGitPathEndSpaceUnixOk(org.eclipse.jgit.lib.DirCacheCheckoutMaliciousPathTest)')","[67033, 67943]"
"('Description.java', 'org.junit.runner.Description', 'methodAndClassNamePatternGroupOrDefault', '([\\s\\S]*)\\((.*)\\)', 'testMaliciousGitPathEndDotWindows2(org.eclipse.jgit.lib.DirCacheCheckoutMaliciousPathTest)')","[66655, 67547]"
"('URIish.java', 'org.eclipse.jgit.transport.URIish', '<init>', '^(?:([^/:@]+)(?::([^\\\\/]+))?@)?([^\\\\/:]{2,}):([\\\\/](?:(?:[^\\\\/]+[\\\\/]+)*[^\\\\/]+[\\\\/]*))$', '/abc.git')",[247705]
"('URIish.java', 'org.eclipse.jgit.transport.URIish', '<init>', '^(?:([^/:@]+)(?::([^\\\\/]+))?@)?([^\\\\/:]{2,}):([\\\\/](?:(?:[^\\\\/]+[\\\\/]+)*[^\\\\/]+[\\\\/]*))$', '/tmp/jgit_test_8097070924435391496_tmp/tmp_383454845786079686/.git')","[129899, 130045]"
"('URIish.java', 'org.eclipse.jgit.transport.URIish', '<init>', '^([a-z][a-z0-9+-]+)://(?:(?:([^/:@]+)(?::([^\\\\/]+))?@)?((?:[^\\\\/:]+)|(?:\\[[0-9a-f:]+\\]))(?::(\\d+))?((?:/~(?:[^\\\\/]+))?[\\\\/]))?(.+)?$', 'https://l usr\\example.com:wtf@example.com:80//')",[204971]
"('URIish.java', 'org.eclipse.jgit.transport.URIish', '<init>', '^(file):([\\\\/](?![\\\\/])((?:[A-Za-z]:)?[\\\\/]?(?:(?:[^\\\\/]+[\\\\/]+)*[^\\\\/]+[\\\\/]*)))$', 'ssh://me@example.com:1234//')",[206972]
"('Description.java', 'org.junit.runner.Description', 'methodAndClassNamePatternGroupOrDefault', '([\\s\\S]*)\\((.*)\\)', 'testNoSubtree_NoTreeWalk(org.eclipse.jgit.dircache.DirCacheIteratorTest)')","[170254, 170494]"
"('URIish.java', 'org.eclipse.jgit.transport.URIish', '<init>', '^(file):([\\\\/](?![\\\\/])((?:[A-Za-z]:)?[\\\\/]?(?:(?:[^\\\\/]+[\\\\/]+)*[^\\\\/]+[\\\\/]*)))$', 'file:///tmp/jgit_test_5783626678477263478_tmp/tmp_7374908731213404106/.git/')",[63165]
"('URIish.java', 'org.eclipse.jgit.transport.URIish', '<init>', '^([\\\\/]?((?:[A-Za-z]:)?[\\\\/]?(?:(?:[^\\\\/]+[\\\\/]+)*[^\\\\/]+[\\\\/]*)))$', '/tmp/jgit_test_1358523526465653191_tmp/tmp_2395600565988697857')","[161628, 161773, 162023]"
"('Description.java', 'org.junit.runner.Description', 'methodAndClassNamePatternGroupOrDefault', '([\\s\\S]*)\\((.*)\\)', 'testUpdateExpectedRemote(org.eclipse.jgit.transport.PushProcessTest)')","[203438, 204012]"
"('Description.java', 'org.junit.runner.Description', 'methodAndClassNamePatternGroupOrDefault', '([\\s\\S]*)\\((.*)\\)', 'testVerySimpleGroupCase2[OldRule? false](org.eclipse.jgit.ignore.IgnoreRuleSpecialCasesTest)')","[88136, 95241]"
"('Description.java', 'org.junit.runner.Description', 'methodAndClassNamePatternGroupOrDefault', '([\\s\\S]*)\\((.*)\\)', 'testSimpleStarCase1[OldRule? false](org.eclipse.jgit.ignore.IgnoreRuleSpecialCasesTest)')","[86296, 93401]"
"('Description.java', 'org.junit.runner.Description', 'methodAndClassNamePatternGroupOrDefault', '([\\s\\S]*)\\((.*)\\)', 'shouldFilterLineFeedFromMessage(org.eclipse.jgit.internal.storage.file.ReflogWriterTest)')","[115245, 115267]"
"('Description.java', 'org.junit.runner.Description', 'methodAndClassNamePatternGroupOrDefault', '([\\s\\S]*)\\((.*)\\)', 'testValidTree6(org.eclipse.jgit.lib.ObjectCheckerTest)')","[48878, 51384]"
"('Description.java', 'org.junit.runner.Description', 'methodAndClassNamePatternGroupOrDefault', '([\\s\\S]*)\\((.*)\\)', 'testCreateEmptyTreeIterator(org.eclipse.jgit.treewalk.AbstractTreeIteratorTest)')","[266876, 267029]"
"('Description.java', 'org.junit.runner.Description', 'methodAndClassNamePatternGroupOrDefault', '([\\s\\S]*)\\((.*)\\)', 'test027_UnpackedRefHigherPriorityThanPacked(org.eclipse.jgit.internal.storage.file.T0003_BasicTest)')","[116504, 117037]"
"('Description.java', 'org.junit.runner.Description', 'methodAndClassNamePatternGroupOrDefault', '([\\s\\S]*)\\((.*)\\)', 'testMixedGroupCase5[OldRule? true](org.eclipse.jgit.ignore.IgnoreRuleSpecialCasesTest)')","[88801, 95885]"
"('URIish.java', 'org.eclipse.jgit.transport.URIish', '<init>', '^(file):([\\\\/](?![\\\\/])((?:[A-Za-z]:)?[\\\\/]?(?:(?:[^\\\\/]+[\\\\/]+)*[^\\\\/]+[\\\\/]*)))$', '/tmp/jgit_test_2155224643509466025_tmp/tmp_5834574717535685926.git')",[187990]
"('FastIgnoreRule.java', 'org.eclipse.jgit.ignore.FastIgnoreRule', 'isMatch', '[[\\p{Print}\\p{javaDigit}\\p{javaLetter}]]', '0')",[101523]
"('Description.java', 'org.junit.runner.Description', 'methodAndClassNamePatternGroupOrDefault', '([\\s\\S]*)\\((.*)\\)', 'testInitRepository(org.eclipse.jgit.api.InitCommandTest)')","[156756, 156954]"
"('URIish.java', 'org.eclipse.jgit.transport.URIish', '<init>', '^([a-z][a-z0-9+-]+)://(?:(?:([^/:@]+)(?::([^\\\\/]+))?@)?((?:[^\\\\/:]+)|(?:\\[[0-9a-f:]+\\]))(?::(\\d+))?((?:/~(?:[^\\\\/]+))?[\\\\/]))?(.+)?$', 'http://lusr\\example:wtf@example.com:80/D:\\x')",[202111]
"('Description.java', 'org.junit.runner.Description', 'methodAndClassNamePatternGroupOrDefault', '([\\s\\S]*)\\((.*)\\)', 'org.eclipse.jgit.lib.DirCacheCheckoutMaliciousPathTest')","[66445, 69354]"
"('URIish.java', 'org.eclipse.jgit.transport.URIish', '<init>', '^([a-z][a-z0-9+-]+)://(?:(?:([^/:@]+)(?::([^\\\\/]+))?@)?((?:[^\\\\/:]+)|(?:\\[[0-9a-f:]+\\]))(?::(\\d+))?((?:/~(?:[^\\\\/]+))?[\\\\/]))?(.+)?$', 'https://lusr\\example:wtf@example.com:1234/D:\\x')",[206029]
"('Description.java', 'org.junit.runner.Description', 'methodAndClassNamePatternGroupOrDefault', '([\\s\\S]*)\\((.*)\\)', 'testClear(org.eclipse.jgit.util.IntListTest)')","[28171, 28409]"
"('URIish.java', 'org.eclipse.jgit.transport.URIish', '<init>', '^(file):([\\\\/](?![\\\\/])((?:[A-Za-z]:)?[\\\\/]?(?:(?:[^\\\\/]+[\\\\/]+)*[^\\\\/]+[\\\\/]*)))$', 'ssh+git://l usr\\example.com@[::1]:80/D:/x')",[212400]
"('Description.java', 'org.junit.runner.Description', 'methodAndClassNamePatternGroupOrDefault', '([\\s\\S]*)\\((.*)\\)', 'testPullWithRebasePreserveConfig2(org.eclipse.jgit.api.PullCommandTest)')","[144714, 145065]"
"('URIish.java', 'org.eclipse.jgit.transport.URIish', '<init>', '^([a-z][a-z0-9+-]+)://(?:(?:([^/:@]+)(?::([^\\\\/]+))?@)?((?:[^\\\\/:]+)|(?:\\[[0-9a-f:]+\\]))(?::(\\d+))?((?:/~(?:[^\\\\/]+))?[\\\\/]))?(.+)?$', 'https://l usr\\example.com@example.com:1234//abc')",[218104]
"('Description.java', 'org.junit.runner.Description', 'methodAndClassNamePatternGroupOrDefault', '([\\s\\S]*)\\((.*)\\)', 'testLimitObjectSize_Length12InsertFails(org.eclipse.jgit.internal.storage.pack.DeltaIndexTest)')","[108866, 109142]"
"('URIish.java', 'org.eclipse.jgit.transport.URIish', '<init>', '^(file):([\\\\/](?![\\\\/])((?:[A-Za-z]:)?[\\\\/]?(?:(?:[^\\\\/]+[\\\\/]+)*[^\\\\/]+[\\\\/]*)))$', 'ssh+git://me@[::1]:1234/D:/x')",[211112]
"('URIish.java', 'org.eclipse.jgit.transport.URIish', 'getHumanishName', '^([\\\\/]?((?:[A-Za-z]:)?[\\\\/]?(?:(?:[^\\\\/]+[\\\\/]+)*[^\\\\/]+[\\\\/]*)))$', '/abc/.git')",[249384]
"('URIish.java', 'org.eclipse.jgit.transport.URIish', '<init>', '^(file):([\\\\/](?![\\\\/])((?:[A-Za-z]:)?[\\\\/]?(?:(?:[^\\\\/]+[\\\\/]+)*[^\\\\/]+[\\\\/]*)))$', 'git://example.com/here')",[72449]
"('Description.java', 'org.junit.runner.Description', 'methodAndClassNamePatternGroupOrDefault', '([\\s\\S]*)\\((.*)\\)', 'testSquashFastForward(org.eclipse.jgit.api.MergeCommandTest)')","[126874, 127813]"
"('QuotedString.java', 'org.eclipse.jgit.util.QuotedString$BourneUserPathStyle', 'quote', '^~[A-Za-z0-9_-]*/.*$', '!')","[30123, 30148]"
"('Description.java', 'org.junit.runner.Description', 'methodAndClassNamePatternGroupOrDefault', '([\\s\\S]*)\\((.*)\\)', 'testParseOldStyleNoTagger(org.eclipse.jgit.revwalk.RevTagParseTest)')","[179541, 179944]"
"('Description.java', 'org.junit.runner.Description', 'methodAndClassNamePatternGroupOrDefault', '([\\s\\S]*)\\((.*)\\)', 'testListBranchesWithContains(org.eclipse.jgit.api.BranchCommandTest)')","[128779, 129103]"
"('Description.java', 'org.junit.runner.Description', 'methodAndClassNamePatternGroupOrDefault', '([\\s\\S]*)\\((.*)\\)', 'testMaliciousPathEmptyUnix(org.eclipse.jgit.lib.DirCacheCheckoutMaliciousPathTest)')","[66718, 67613]"
"('URIish.java', 'org.eclipse.jgit.transport.URIish', '<init>', '^([a-z][a-z0-9+-]+)://(?:(?:([^/:@]+)(?::([^\\\\/]+))?@)?((?:[^\\\\/:]+)|(?:\\[[0-9a-f:]+\\]))(?::(\\d+))?((?:/~(?:[^\\\\/]+))?[\\\\/]))?(.+)?$', 'http://l usr\\example.com:wtf@[::1]:1234/D:/x')",[201513]
"('ChangeIdUtil.java', 'org.eclipse.jgit.util.ChangeIdUtil', 'indexOfChangeId', '(^Change-Id: *I[a-f0-9]{40}$)', 'does not fix it.')",[36958]
"('Description.java', 'org.junit.runner.Description', 'methodAndClassNamePatternGroupOrDefault', '([\\s\\S]*)\\((.*)\\)', 'testNotALL_IncludesNothing(org.eclipse.jgit.treewalk.filter.TreeFilterTest)')","[265926, 266077]"
"('Description.java', 'org.junit.runner.Description', 'methodAndClassNamePatternGroupOrDefault', '([\\s\\S]*)\\((.*)\\)', 'testSingleSubtree_Recursive(org.eclipse.jgit.dircache.DirCacheIteratorTest)')","[170149, 170384]"
"('Description.java', 'org.junit.runner.Description', 'methodAndClassNamePatternGroupOrDefault', '([\\s\\S]*)\\((.*)\\)', 'testPullMergeProgrammaticConfiguration(org.eclipse.jgit.api.PullCommandTest)')","[144651, 144999]"
"('Description.java', 'org.junit.runner.Description', 'methodAndClassNamePatternGroupOrDefault', '([\\s\\S]*)\\((.*)\\)', 'testTrackingUpdate(org.eclipse.jgit.api.PushCommandTest)')","[140600, 140732]"
"('Description.java', 'org.junit.runner.Description', 'methodAndClassNamePatternGroupOrDefault', '([\\s\\S]*)\\((.*)\\)', 'testStringOfPearls_FilePath2(org.eclipse.jgit.revwalk.TreeRevFilterTest)')","[181267, 181374]"
"('Description.java', 'org.junit.runner.Description', 'methodAndClassNamePatternGroupOrDefault', '([\\s\\S]*)\\((.*)\\)', 'nonReferencedExpiredObjectTree_pruned(org.eclipse.jgit.internal.storage.file.GcPruneNonReferencedTest)')","[119360, 119468]"
"('Description.java', 'org.junit.runner.Description', 'methodAndClassNamePatternGroupOrDefault', '([\\s\\S]*)\\((.*)\\)', 'testForbiddenNamesOnWindowsEgCon1(org.eclipse.jgit.lib.DirCacheCheckoutMaliciousPathTest)')","[66928, 67833]"
"('Description.java', 'org.junit.runner.Description', 'methodAndClassNamePatternGroupOrDefault', '([\\s\\S]*)\\((.*)\\)', 'testFilePathCase0[OldRule? false](org.eclipse.jgit.ignore.IgnoreRuleSpecialCasesTest)')","[86825, 93930]"
"('Description.java', 'org.junit.runner.Description', 'methodAndClassNamePatternGroupOrDefault', '([\\s\\S]*)\\((.*)\\)', 'org.eclipse.jgit.diff.RawTextIgnoreTrailingWhitespaceTest')","[9582, 9691]"
"('URIish.java', 'org.eclipse.jgit.transport.URIish', '<init>', '^(?:([^/:@]+)(?::([^\\\\/]+))?@)?([^\\\\/:]{2,}):([\\\\/](?:(?:[^\\\\/]+[\\\\/]+)*[^\\\\/]+[\\\\/]*))$', '/tmp/jgit_test_279927277504112735_tmp/tmp_3984817157549652538/.git')","[18451, 18606]"
"('Description.java', 'org.junit.runner.Description', 'methodAndClassNamePatternGroupOrDefault', '([\\s\\S]*)\\((.*)\\)', 'testNonMarkingInputStream(org.eclipse.jgit.transport.PackParserTest)')","[218507, 218771]"
"('Description.java', 'org.junit.runner.Description', 'methodAndClassNamePatternGroupOrDefault', '([\\s\\S]*)\\((.*)\\)', 'test005_addRecursiveFile(org.eclipse.jgit.lib.T0002_TreeTest)')","[58528, 58826]"
"('Description.java', 'org.junit.runner.Description', 'methodAndClassNamePatternGroupOrDefault', '([\\s\\S]*)\\((.*)\\)', 'testLimitedGetCachedBytes(org.eclipse.jgit.lib.ObjectLoaderTest)')","[71410, 71496]"
"('URIish.java', 'org.eclipse.jgit.transport.URIish', '<init>', '^(?:([^/:@]+)(?::([^\\\\/]+))?@)?((?:[^\\\\/:]+)|(?:\\[[0-9a-f:]+\\])):((?:(?:/~(?:[^\\\\/]+))[\\\\/])?(?:(?:[^\\\\/]+[\\\\/]+)*[^\\\\/]+[\\\\/]*))$', 'example.com:some/p%20ath')","[250465, 250534]"
"('URIish.java', 'org.eclipse.jgit.transport.URIish', '<init>', '^(file):([\\\\/](?![\\\\/])((?:[A-Za-z]:)?[\\\\/]?(?:(?:[^\\\\/]+[\\\\/]+)*[^\\\\/]+[\\\\/]*)))$', 'https://l usr\\example.com:wtf@example.com:80//abc')",[204994]
"('Description.java', 'org.junit.runner.Description', 'methodAndClassNamePatternGroupOrDefault', '([\\s\\S]*)\\((.*)\\)', 'testGitSshProto(org.eclipse.jgit.transport.URIishTest)')","[188989, 190392]"
"('Description.java', 'org.junit.runner.Description', 'methodAndClassNamePatternGroupOrDefault', '([\\s\\S]*)\\((.*)\\)', 'untrackedFileNotIncluded(org.eclipse.jgit.api.StashApplyCommandTest)')","[142855, 143423]"
"('URIish.java', 'org.eclipse.jgit.transport.URIish', '<init>', '^([a-z][a-z0-9+-]+)://(?:(?:([^/:@]+)(?::([^\\\\/]+))?@)?((?:[^\\\\/:]+)|(?:\\[[0-9a-f:]+\\]))(?::(\\d+))?((?:/~(?:[^\\\\/]+))?[\\\\/]))?(.+)?$', 'https://l usr\\example.com@example.com:1234//')",[218058]
"('URIish.java', 'org.eclipse.jgit.transport.URIish', '<init>', '^([a-z][a-z0-9+-]+)://(?:(?:([^/:@]+)(?::([^\\\\/]+))?@)?((?:[^\\\\/:]+)|(?:\\[[0-9a-f:]+\\]))(?::(\\d+))?((?:/~(?:[^\\\\/]+))?[\\\\/]))?(.+)?$', 'ssh://me@[::1]/D:/x')","[221646, 221830]"
"('URIish.java', 'org.eclipse.jgit.transport.URIish', '<init>', '^(file):([\\\\/](?![\\\\/])((?:[A-Za-z]:)?[\\\\/]?(?:(?:[^\\\\/]+[\\\\/]+)*[^\\\\/]+[\\\\/]*)))$', '/tmp/jgit_test_8705262332183795899_tmp/tmp_6035244968182702733')","[148802, 148927]"
"('URIish.java', 'org.eclipse.jgit.transport.URIish', '<init>', '^(file):([\\\\/](?![\\\\/])((?:[A-Za-z]:)?[\\\\/]?(?:(?:[^\\\\/]+[\\\\/]+)*[^\\\\/]+[\\\\/]*)))$', 'http://me:wtf@example.com:80//abc')",[199788]
"('Description.java', 'org.junit.runner.Description', 'methodAndClassNamePatternGroupOrDefault', '([\\s\\S]*)\\((.*)\\)', 'testAlias_BatchModeDefault(org.eclipse.jgit.transport.OpenSshConfigTest)')","[195827, 196189]"
"('Description.java', 'org.junit.runner.Description', 'methodAndClassNamePatternGroupOrDefault', '([\\s\\S]*)\\((.*)\\)', 'testWrite_SmallBlocks2(org.eclipse.jgit.transport.SideBandOutputStreamTest)')","[251892, 252129]"
"('FastIgnoreRule.java', 'org.eclipse.jgit.ignore.FastIgnoreRule', 'isMatch', '[^b-c]', 'c')",[100221]
"('Description.java', 'org.junit.runner.Description', 'methodAndClassNamePatternGroupOrDefault', '([\\s\\S]*)\\((.*)\\)', 'commitAmendWithoutAuthorShouldSetOriginalAuthorAndAuthorTime(org.eclipse.jgit.api.CommitCommandTest)')","[123105, 123319]"
"('URIish.java', 'org.eclipse.jgit.transport.URIish', '<init>', '^(file):([\\\\/](?![\\\\/])((?:[A-Za-z]:)?[\\\\/]?(?:(?:[^\\\\/]+[\\\\/]+)*[^\\\\/]+[\\\\/]*)))$', 'ssh://l usr\\example.com@example.com:80/D:/x')",[208352]
"('URIish.java', 'org.eclipse.jgit.transport.URIish', '<init>', '^(file):([\\\\/](?![\\\\/])((?:[A-Za-z]:)?[\\\\/]?(?:(?:[^\\\\/]+[\\\\/]+)*[^\\\\/]+[\\\\/]*)))$', 'http://l usr\\example.com:wtf@1.2.3.4:80/D:\\x')",[201352]
"('URIish.java', 'org.eclipse.jgit.transport.URIish', '<init>', '^(file):([\\\\/](?![\\\\/])((?:[A-Za-z]:)?[\\\\/]?(?:(?:[^\\\\/]+[\\\\/]+)*[^\\\\/]+[\\\\/]*)))$', 'file:///tmp/jgit_test_3922997925567642347_tmp/tmp_5044209954024475555/.git/')",[57584]
"('Description.java', 'org.junit.runner.Description', 'methodAndClassNamePatternGroupOrDefault', '([\\s\\S]*)\\((.*)\\)', 'testParentDirectoryGitAttributes(org.eclipse.jgit.attributes.AttributesMatcherTest)')","[73481, 73629]"
"('URIish.java', 'org.eclipse.jgit.transport.URIish', '<init>', '^(file):([\\\\/](?![\\\\/])((?:[A-Za-z]:)?[\\\\/]?(?:(?:[^\\\\/]+[\\\\/]+)*[^\\\\/]+[\\\\/]*)))$', 'http://me:wtf@example.com:80/D:\\x')",[199880]
"('Description.java', 'org.junit.runner.Description', 'methodAndClassNamePatternGroupOrDefault', '([\\s\\S]*)\\((.*)\\)', 'testWriteEmptyPack1(org.eclipse.jgit.internal.storage.file.PackWriterTest)')","[117614, 118057]"
"('URIish.java', 'org.eclipse.jgit.transport.URIish', '<init>', '^([a-z][a-z0-9+-]+)://(?:(?:([^/:@]+)(?::([^\\\\/]+))?@)?((?:[^\\\\/:]+)|(?:\\[[0-9a-f:]+\\]))(?::(\\d+))?((?:/~(?:[^\\\\/]+))?[\\\\/]))?(.+)?$', 'ssh+git://l usr\\example.com:wtf@example.com:80//')",[197557]
"('URIish.java', 'org.eclipse.jgit.transport.URIish', '<init>', '^(file):([\\\\/](?![\\\\/])((?:[A-Za-z]:)?[\\\\/]?(?:(?:[^\\\\/]+[\\\\/]+)*[^\\\\/]+[\\\\/]*)))$', 'https://example.com//abc')","[244025, 244209, 245129, 245313, 246233, 246417]"
"('Description.java', 'org.junit.runner.Description', 'methodAndClassNamePatternGroupOrDefault', '([\\s\\S]*)\\((.*)\\)', 'crissCrossMerge_mergeable2(org.eclipse.jgit.merge.RecursiveMergerTest)')","[15099, 15248]"
"('Description.java', 'org.junit.runner.Description', 'methodAndClassNamePatternGroupOrDefault', '([\\s\\S]*)\\((.*)\\)', 'testRebaseWithUncommittedMasterChange(org.eclipse.jgit.api.RebaseCommandTest)')","[131705, 133206]"
"('FastIgnoreRule.java', 'org.eclipse.jgit.ignore.FastIgnoreRule', 'isMatch', '.r[a-c]', 'src')","[107046, 107073, 107127, 107181, 107208, 107236]"
"('Description.java', 'org.junit.runner.Description', 'methodAndClassNamePatternGroupOrDefault', '([\\s\\S]*)\\((.*)\\)', 'testExactRename_OneDeleteManyAdds(org.eclipse.jgit.diff.RenameDetectorTest)')","[4414, 4966]"
"('Description.java', 'org.junit.runner.Description', 'methodAndClassNamePatternGroupOrDefault', '([\\s\\S]*)\\((.*)\\)', 'testLowerGroupCase1[OldRule? true](org.eclipse.jgit.ignore.IgnoreRuleSpecialCasesTest)')","[89123, 96207]"
"('URIish.java', 'org.eclipse.jgit.transport.URIish', '<init>', '^([\\\\/]?((?:[A-Za-z]:)?[\\\\/]?(?:(?:[^\\\\/]+[\\\\/]+)*[^\\\\/]+[\\\\/]*)))$', '/.git')",[247498]
"('Description.java', 'org.junit.runner.Description', 'methodAndClassNamePatternGroupOrDefault', '([\\s\\S]*)\\((.*)\\)', 'testOneOnly(org.eclipse.jgit.treewalk.filter.InterIndexDiffFilterTest)')","[263896, 264002]"
"('Description.java', 'org.junit.runner.Description', 'methodAndClassNamePatternGroupOrDefault', '([\\s\\S]*)\\((.*)\\)', 'testCheckoutRepository(org.eclipse.jgit.api.PathCheckoutCommandTest)')","[123797, 124075]"
"('Description.java', 'org.junit.runner.Description', 'methodAndClassNamePatternGroupOrDefault', '([\\s\\S]*)\\((.*)\\)', 'testHasRevFlag(org.eclipse.jgit.revwalk.RevObjectTest)')","[178102, 178314]"
"('AttributesRule.java', 'org.eclipse.jgit.attributes.AttributesRule', 'isMatch', '.*\\.sta[0-5]', 'test.stag')","[74274, 75418]"
"('Description.java', 'org.junit.runner.Description', 'methodAndClassNamePatternGroupOrDefault', '([\\s\\S]*)\\((.*)\\)', 'testPrintGroupCase3[OldRule? true](org.eclipse.jgit.ignore.IgnoreRuleSpecialCasesTest)')","[90618, 97702]"
"('URIish.java', 'org.eclipse.jgit.transport.URIish', '<init>', '^(file):([\\\\/](?![\\\\/])((?:[A-Za-z]:)?[\\\\/]?(?:(?:[^\\\\/]+[\\\\/]+)*[^\\\\/]+[\\\\/]*)))$', 'file:///tmp/jgit_test_1107658446954903154_tmp/tmp_3281325662526635036')","[138939, 138996, 139057]"
"('FastIgnoreRule.java', 'org.eclipse.jgit.ignore.FastIgnoreRule', 'isMatch', '\\]a.c\\*\\[d\\?\\]', ']abc*[d?]')",[100405]
"('URIish.java', 'org.eclipse.jgit.transport.URIish', '<init>', '^([a-z][a-z0-9+-]+)://(?:(?:([^/:@]+)(?::([^\\\\/]+))?@)?((?:[^\\\\/:]+)|(?:\\[[0-9a-f:]+\\]))(?::(\\d+))?((?:/~(?:[^\\\\/]+))?[\\\\/]))?(.+)?$', 'https://me@[::1]:1234//')",[217690]
"('URIish.java', 'org.eclipse.jgit.transport.URIish', '<init>', '^([a-z][a-z0-9+-]+)://(?:(?:([^/:@]+)(?::([^\\\\/]+))?@)?((?:[^\\\\/:]+)|(?:\\[[0-9a-f:]+\\]))(?::(\\d+))?((?:/~(?:[^\\\\/]+))?[\\\\/]))?(.+)?$', 'file:///tmp/jgit_test_4730936440061608129_tmp/tmp_7076638002040378464/.git/')",[63510]
"('Description.java', 'org.junit.runner.Description', 'methodAndClassNamePatternGroupOrDefault', '([\\s\\S]*)\\((.*)\\)', 'addSubmoduleWithRelativeUri(org.eclipse.jgit.submodule.SubmoduleAddTest)')","[17943, 18117]"
"('URIish.java', 'org.eclipse.jgit.transport.URIish', '<init>', '^([a-z][a-z0-9+-]+)://(?:(?:([^/:@]+)(?::([^\\\\/]+))?@)?((?:[^\\\\/:]+)|(?:\\[[0-9a-f:]+\\]))(?::(\\d+))?((?:/~(?:[^\\\\/]+))?[\\\\/]))?(.+)?$', 'ssh+git://l usr\\example.com:wtf@[::1]:1234/D:\\x')",[198247]
"('Description.java', 'org.junit.runner.Description', 'methodAndClassNamePatternGroupOrDefault', '([\\s\\S]*)\\((.*)\\)', 'org.eclipse.jgit.submodule.SubmoduleWalkTest')","[17049, 17459]"
"('URIish.java', 'org.eclipse.jgit.transport.URIish', '<init>', '^([a-z][a-z0-9+-]+)://(?:(?:([^/:@]+)(?::([^\\\\/]+))?@)?((?:[^\\\\/:]+)|(?:\\[[0-9a-f:]+\\]))(?::(\\d+))?((?:/~(?:[^\\\\/]+))?[\\\\/]))?(.+)?$', 'ssh+git://l usr\\example.com@[::1]/D:\\x')","[226108, 226292]"
"('ChangeIdUtil.java', 'org.eclipse.jgit.util.ChangeIdUtil', 'indexOfFirstFooterLine', '(^[a-zA-Z0-9-]+:(?!//).*$)', 'e')",[37452]
"('URIish.java', 'org.eclipse.jgit.transport.URIish', '<init>', '^(file):([\\\\/](?![\\\\/])((?:[A-Za-z]:)?[\\\\/]?(?:(?:[^\\\\/]+[\\\\/]+)*[^\\\\/]+[\\\\/]*)))$', 'file:///tmp/jgit_test_8359519696988264440_tmp/tmp_5084939587537640844/.git/')",[13651]
"('Description.java', 'org.junit.runner.Description', 'methodAndClassNamePatternGroupOrDefault', '([\\s\\S]*)\\((.*)\\)', 'testAddExistingSingleMediumSizeFileWithNewLine(org.eclipse.jgit.api.AddCommandTest)')","[164516, 164942]"
"('URIish.java', 'org.eclipse.jgit.transport.URIish', '<init>', '^([\\\\/]?((?:[A-Za-z]:)?[\\\\/]?(?:(?:[^\\\\/]+[\\\\/]+)*[^\\\\/]+[\\\\/]*)))$', '/tmp/jgit_test_4286677760507975988_tmp/tmp_6334190847139878105')","[147566, 147711, 147935]"
"('URIish.java', 'org.eclipse.jgit.transport.URIish', '<init>', '^(file):([\\\\/](?![\\\\/])((?:[A-Za-z]:)?[\\\\/]?(?:(?:[^\\\\/]+[\\\\/]+)*[^\\\\/]+[\\\\/]*)))$', 'ssh+git://me:wtf@[::1]:1234//abc')",[197028]
"('Description.java', 'org.junit.runner.Description', 'methodAndClassNamePatternGroupOrDefault', '([\\s\\S]*)\\((.*)\\)', 'org.eclipse.jgit.lib.ConstantsEncodingTest')","[59886, 60124]"
"('Description.java', 'org.junit.runner.Description', 'methodAndClassNamePatternGroupOrDefault', '([\\s\\S]*)\\((.*)\\)', 'rfc(org.eclipse.jgit.util.GitDateParserTest)')","[21981, 22261]"
"('URIish.java', 'org.eclipse.jgit.transport.URIish', '<init>', '^(file):([\\\\/](?![\\\\/])((?:[A-Za-z]:)?[\\\\/]?(?:(?:[^\\\\/]+[\\\\/]+)*[^\\\\/]+[\\\\/]*)))$', 'ssh://me@example.com/D:/x')","[220887, 221071]"
"('Description.java', 'org.junit.runner.Description', 'methodAndClassNamePatternGroupOrDefault', '([\\s\\S]*)\\((.*)\\)', 'testTabSeparator(org.eclipse.jgit.attributes.AttributeNodeTest)')","[72933, 73060]"
"('Description.java', 'org.junit.runner.Description', 'methodAndClassNamePatternGroupOrDefault', '([\\s\\S]*)\\((.*)\\)', 'onePathMerge(org.eclipse.jgit.api.NameRevCommandTest)')","[168895, 169134]"
"('URIish.java', 'org.eclipse.jgit.transport.URIish', '<init>', '^(file):([\\\\/](?![\\\\/])((?:[A-Za-z]:)?[\\\\/]?(?:(?:[^\\\\/]+[\\\\/]+)*[^\\\\/]+[\\\\/]*)))$', 'ssh://l usr\\example.com:wtf@1.2.3.4:1234/D:/x')",[193708]
"('Description.java', 'org.junit.runner.Description', 'methodAndClassNamePatternGroupOrDefault', '([\\s\\S]*)\\((.*)\\)', 'testParse_ShortLineOnlyEmbeddedAndEndingLF(org.eclipse.jgit.revwalk.RevCommitParseTest)')","[182572, 182943]"
"('Description.java', 'org.junit.runner.Description', 'methodAndClassNamePatternGroupOrDefault', '([\\s\\S]*)\\((.*)\\)', 'testWritePack4(org.eclipse.jgit.internal.storage.file.PackWriterTest)')","[117803, 118255]"
"('URIish.java', 'org.eclipse.jgit.transport.URIish', '<init>', '^([a-z][a-z0-9+-]+)://(?:(?:([^/:@]+)(?::([^\\\\/]+))?@)?((?:[^\\\\/:]+)|(?:\\[[0-9a-f:]+\\]))(?::(\\d+))?((?:/~(?:[^\\\\/]+))?[\\\\/]))?(.+)?$', 'git://example.com/D:/m y')","[252285, 252331]"
"('FastIgnoreRule.java', 'org.eclipse.jgit.ignore.FastIgnoreRule', 'isMatch', 'a.b', 'b')",[101289]
"('Description.java', 'org.junit.runner.Description', 'methodAndClassNamePatternGroupOrDefault', '([\\s\\S]*)\\((.*)\\)', 'invalidWhenWildcardBeforeText(org.eclipse.jgit.transport.RefSpecTest)')","[186948, 187687]"
"('Description.java', 'org.junit.runner.Description', 'methodAndClassNamePatternGroupOrDefault', '([\\s\\S]*)\\((.*)\\)', 'org.eclipse.jgit.api.CheckoutCommandTest')","[149220, 158091]"
"('Description.java', 'org.junit.runner.Description', 'methodAndClassNamePatternGroupOrDefault', '([\\s\\S]*)\\((.*)\\)', 'testMixedGroupCase5(org.eclipse.jgit.fnmatch.FileNameMatcherTest)')","[41818, 45096]"
"('AttributesRule.java', 'org.eclipse.jgit.attributes.AttributesRule', 'isMatch', '[tv]est\\.sta[a-d]', 'vest.stac')","[74436, 75580]"
"('URIish.java', 'org.eclipse.jgit.transport.URIish', '<init>', '^(file):([\\\\/](?![\\\\/])((?:[A-Za-z]:)?[\\\\/]?(?:(?:[^\\\\/]+[\\\\/]+)*[^\\\\/]+[\\\\/]*)))$', 'ssh+git://l usr\\example.com:wtf@[::1]:1234/D:\\x')",[198224]
"('Description.java', 'org.junit.runner.Description', 'methodAndClassNamePatternGroupOrDefault', '([\\s\\S]*)\\((.*)\\)', 'test026_CreateCommitMultipleparents(org.eclipse.jgit.internal.storage.file.T0003_BasicTest)')","[116798, 117345]"
"('URIish.java', 'org.eclipse.jgit.transport.URIish', '<init>', '^(file):([\\\\/](?![\\\\/])((?:[A-Za-z]:)?[\\\\/]?(?:(?:[^\\\\/]+[\\\\/]+)*[^\\\\/]+[\\\\/]*)))$', 'ssh+git://[::1]//abc')","[238137, 238321, 239241, 239425, 240345, 240529]"
"('Description.java', 'org.junit.runner.Description', 'methodAndClassNamePatternGroupOrDefault', '([\\s\\S]*)\\((.*)\\)', 'testInvalidCommitInvalidParent4(org.eclipse.jgit.lib.ObjectCheckerTest)')","[49256, 51780]"
"('URIish.java', 'org.eclipse.jgit.transport.URIish', '<init>', '^(file):([\\\\/](?![\\\\/])((?:[A-Za-z]:)?[\\\\/]?(?:(?:[^\\\\/]+[\\\\/]+)*[^\\\\/]+[\\\\/]*)))$', 'https://l usr\\example.com@[::1]:1234//')",[219323]
"('Description.java', 'org.junit.runner.Description', 'methodAndClassNamePatternGroupOrDefault', '([\\s\\S]*)\\((.*)\\)', 'testMaliciousGitPath2Case(org.eclipse.jgit.lib.DirCacheCheckoutMaliciousPathTest)')","[66760, 67657]"
"('URIish.java', 'org.eclipse.jgit.transport.URIish', '<init>', '^(file):([\\\\/](?![\\\\/])((?:[A-Za-z]:)?[\\\\/]?(?:(?:[^\\\\/]+[\\\\/]+)*[^\\\\/]+[\\\\/]*)))$', 'ssh://lusr\\example:wtf@1.2.3.4:1234/D:/x')",[194812]
"('Description.java', 'org.junit.runner.Description', 'methodAndClassNamePatternGroupOrDefault', '([\\s\\S]*)\\((.*)\\)', 'testContext0(org.eclipse.jgit.diff.DiffFormatterReflowTest)')","[7968, 8181]"
"('Description.java', 'org.junit.runner.Description', 'methodAndClassNamePatternGroupOrDefault', '([\\s\\S]*)\\((.*)\\)', 'testAddIfAbsentGrowsWithObjects(org.eclipse.jgit.lib.ObjectIdSubclassMapTest)')","[63962, 64113]"
"('URIish.java', 'org.eclipse.jgit.transport.URIish', '<init>', '^(file):([\\\\/](?![\\\\/])((?:[A-Za-z]:)?[\\\\/]?(?:(?:[^\\\\/]+[\\\\/]+)*[^\\\\/]+[\\\\/]*)))$', 'http://example.com//abc')","[240713, 240897, 241817, 242001, 242921, 243105]"
"('URIish.java', 'org.eclipse.jgit.transport.URIish', '<init>', '^(file):([\\\\/](?![\\\\/])((?:[A-Za-z]:)?[\\\\/]?(?:(?:[^\\\\/]+[\\\\/]+)*[^\\\\/]+[\\\\/]*)))$', 'ssh+git://l usr\\example.com:wtf@example.com:80//abc')",[197580]
"('URIish.java', 'org.eclipse.jgit.transport.URIish', '<init>', '^(file):([\\\\/](?![\\\\/])((?:[A-Za-z]:)?[\\\\/]?(?:(?:[^\\\\/]+[\\\\/]+)*[^\\\\/]+[\\\\/]*)))$', 'file:/tmp/jgit_test_1453594300143160598_tmp/tmp_5336065936066258285/.git/')","[14190, 14438]"
"('URIish.java', 'org.eclipse.jgit.transport.URIish', '<init>', '^(file):([\\\\/](?![\\\\/])((?:[A-Za-z]:)?[\\\\/]?(?:(?:[^\\\\/]+[\\\\/]+)*[^\\\\/]+[\\\\/]*)))$', 'http://me@[::1]/D:/x')","[228247, 228431]"
"('URIish.java', 'org.eclipse.jgit.transport.URIish', '<init>', '^([a-z][a-z0-9+-]+)://(?:(?:([^/:@]+)(?::([^\\\\/]+))?@)?((?:[^\\\\/:]+)|(?:\\[[0-9a-f:]+\\]))(?::(\\d+))?((?:/~(?:[^\\\\/]+))?[\\\\/]))?(.+)?$', 'https://l usr\\example.com@[::1]:1234//abc')",[219392]
"('Description.java', 'org.junit.runner.Description', 'methodAndClassNamePatternGroupOrDefault', '([\\s\\S]*)\\((.*)\\)', 'testRepeatedNegationInDifferentFiles3(org.eclipse.jgit.ignore.IgnoreNodeTest)')","[108145, 108444]"
"('URIish.java', 'org.eclipse.jgit.transport.URIish', '<init>', '^(file):([\\\\/](?![\\\\/])((?:[A-Za-z]:)?[\\\\/]?(?:(?:[^\\\\/]+[\\\\/]+)*[^\\\\/]+[\\\\/]*)))$', 'ssh://lusr\\example@1.2.3.4:1234//')",[209548]
"('Description.java', 'org.junit.runner.Description', 'methodAndClassNamePatternGroupOrDefault', '([\\s\\S]*)\\((.*)\\)', 'testStringOfPearls_FilePath1(org.eclipse.jgit.revwalk.RevWalkPathFilter1Test)')","[175308, 175583]"
"('Description.java', 'org.junit.runner.Description', 'methodAndClassNamePatternGroupOrDefault', '([\\s\\S]*)\\((.*)\\)', 'test005_addRecursiveTree(org.eclipse.jgit.lib.T0002_TreeTest)')","[58549, 58848]"
"('URIish.java', 'org.eclipse.jgit.transport.URIish', '<init>', '^(file):([\\\\/](?![\\\\/])((?:[A-Za-z]:)?[\\\\/]?(?:(?:[^\\\\/]+[\\\\/]+)*[^\\\\/]+[\\\\/]*)))$', 'https://lusr\\example:wtf@1.2.3.4:80//')",[206420]
"('ChangeIdUtil.java', 'org.eclipse.jgit.util.ChangeIdUtil', 'indexOfChangeId', '(^Change-Id: *I[a-f0-9]{40}$)', 'NOTE: This')",[36984]
"('URIish.java', 'org.eclipse.jgit.transport.URIish', '<init>', '^([\\\\/]?((?:[A-Za-z]:)?[\\\\/]?(?:(?:[^\\\\/]+[\\\\/]+)*[^\\\\/]+[\\\\/]*)))$', '../tmp_5292851732867779189')",[259237]
"('URIish.java', 'org.eclipse.jgit.transport.URIish', '<init>', '^(file):([\\\\/](?![\\\\/])((?:[A-Za-z]:)?[\\\\/]?(?:(?:[^\\\\/]+[\\\\/]+)*[^\\\\/]+[\\\\/]*)))$', 'ssh+git://lusr\\example:wtf@example.com:80//')",[198638]
"('Description.java', 'org.junit.runner.Description', 'methodAndClassNamePatternGroupOrDefault', '([\\s\\S]*)\\((.*)\\)', 'testDiffWithPrefixes(org.eclipse.jgit.api.DiffCommandTest)')","[166443, 166574]"
"('URIish.java', 'org.eclipse.jgit.transport.URIish', '<init>', '^(file):([\\\\/](?![\\\\/])((?:[A-Za-z]:)?[\\\\/]?(?:(?:[^\\\\/]+[\\\\/]+)*[^\\\\/]+[\\\\/]*)))$', '/tmp/jgit_test_8115236347897594923_tmp/tmp_2639625294261366337.git')",[183922]
"('URIish.java', 'org.eclipse.jgit.transport.URIish', '<init>', '^([\\\\/]?((?:[A-Za-z]:)?[\\\\/]?(?:(?:[^\\\\/]+[\\\\/]+)*[^\\\\/]+[\\\\/]*)))$', '/tmp/jgit_test_8115236347897594923_tmp/tmp_2639625294261366337.git')",[184022]
"('Description.java', 'org.junit.runner.Description', 'methodAndClassNamePatternGroupOrDefault', '([\\s\\S]*)\\((.*)\\)', 'testSkipRevFilter(org.eclipse.jgit.revwalk.SkipRevFilterTest)')","[174362, 174428]"
"('Description.java', 'org.junit.runner.Description', 'methodAndClassNamePatternGroupOrDefault', '([\\s\\S]*)\\((.*)\\)', 'testSeperateModifications(org.eclipse.jgit.merge.MergeAlgorithmTest)')","[11997, 12296]"
"('URIish.java', 'org.eclipse.jgit.transport.URIish', '<init>', '^(file):([\\\\/](?![\\\\/])((?:[A-Za-z]:)?[\\\\/]?(?:(?:[^\\\\/]+[\\\\/]+)*[^\\\\/]+[\\\\/]*)))$', 'http://me@example.com:1234//')",[213596]
"('AttributesRule.java', 'org.eclipse.jgit.attributes.AttributesRule', 'isMatch', '.*\\.st.', 'anothertest.st0')","[73842, 74004, 75013, 75148]"
"('Description.java', 'org.junit.runner.Description', 'methodAndClassNamePatternGroupOrDefault', '([\\s\\S]*)\\((.*)\\)', 'testInvalidTreeModeMissingName(org.eclipse.jgit.lib.ObjectCheckerTest)')","[50537, 53122]"
"('Description.java', 'org.junit.runner.Description', 'methodAndClassNamePatternGroupOrDefault', '([\\s\\S]*)\\((.*)\\)', 'testDirtyRootWorktree(org.eclipse.jgit.lib.IndexDiffSubmoduleTest)')","[56281, 56429]"
"('Description.java', 'org.junit.runner.Description', 'methodAndClassNamePatternGroupOrDefault', '([\\s\\S]*)\\((.*)\\)', 'testAddTwo(org.eclipse.jgit.revwalk.RevFlagSetTest)')","[178654, 178806]"
"('URIish.java', 'org.eclipse.jgit.transport.URIish', '<init>', '^([a-z][a-z0-9+-]+)://(?:(?:([^/:@]+)(?::([^\\\\/]+))?@)?((?:[^\\\\/:]+)|(?:\\[[0-9a-f:]+\\]))(?::(\\d+))?((?:/~(?:[^\\\\/]+))?[\\\\/]))?(.+)?$', 'file:///tmp/jgit_test_3341477454584314902_tmp/tmp_1018413196038832020')","[167865, 167927]"
"('Description.java', 'org.junit.runner.Description', 'methodAndClassNamePatternGroupOrDefault', '([\\s\\S]*)\\((.*)\\)', 'testStandardFormat_GarbageAfterSize(org.eclipse.jgit.internal.storage.file.UnpackedObjectTest)')","[121706, 122029]"
"('Description.java', 'org.junit.runner.Description', 'methodAndClassNamePatternGroupOrDefault', '([\\s\\S]*)\\((.*)\\)', 'testDigitGroupCase1(org.eclipse.jgit.fnmatch.FileNameMatcherTest)')","[42889, 46218]"
"('Description.java', 'org.junit.runner.Description', 'methodAndClassNamePatternGroupOrDefault', '([\\s\\S]*)\\((.*)\\)', 'testFilePathCase3(org.eclipse.jgit.fnmatch.FileNameMatcherTest)')","[43330, 46680]"
"('URIish.java', 'org.eclipse.jgit.transport.URIish', '<init>', '^([a-z][a-z0-9+-]+)://(?:(?:([^/:@]+)(?::([^\\\\/]+))?@)?((?:[^\\\\/:]+)|(?:\\[[0-9a-f:]+\\]))(?::(\\d+))?((?:/~(?:[^\\\\/]+))?[\\\\/]))?(.+)?$', 'http://lusr\\example@example.com/D:/x')","[229742, 229926]"
"('Description.java', 'org.junit.runner.Description', 'methodAndClassNamePatternGroupOrDefault', '([\\s\\S]*)\\((.*)\\)', 'testForceRemotesOrigin(org.eclipse.jgit.transport.RefSpecTest)')","[187053, 187797]"
"('Description.java', 'org.junit.runner.Description', 'methodAndClassNamePatternGroupOrDefault', '([\\s\\S]*)\\((.*)\\)', 'testDescribeBranch(org.eclipse.jgit.api.DescribeCommandTest)')","[128192, 128319]"
"('Description.java', 'org.junit.runner.Description', 'methodAndClassNamePatternGroupOrDefault', '([\\s\\S]*)\\((.*)\\)', 'testQuestionmarkDoNotMatch[OldRule? false](org.eclipse.jgit.ignore.FastIgnoreRuleTest)')","[77242, 77999]"
"('URIish.java', 'org.eclipse.jgit.transport.URIish', '<init>', '^([a-z][a-z0-9+-]+)://(?:(?:([^/:@]+)(?::([^\\\\/]+))?@)?((?:[^\\\\/:]+)|(?:\\[[0-9a-f:]+\\]))(?::(\\d+))?((?:/~(?:[^\\\\/]+))?[\\\\/]))?(.+)?$', 'https://1.2.3.4//abc')","[244416, 244600, 245520, 245704, 246624, 246808]"
"('Description.java', 'org.junit.runner.Description', 'methodAndClassNamePatternGroupOrDefault', '([\\s\\S]*)\\((.*)\\)', 'testVerySimpleGroupCase0(org.eclipse.jgit.fnmatch.FileNameMatcherTest)')","[44422, 47824]"
"('URIish.java', 'org.eclipse.jgit.transport.URIish', '<init>', '^(file):([\\\\/](?![\\\\/])((?:[A-Za-z]:)?[\\\\/]?(?:(?:[^\\\\/]+[\\\\/]+)*[^\\\\/]+[\\\\/]*)))$', 'ssh+git://lusr\\example@example.com:80//')",[212676]
"('Description.java', 'org.junit.runner.Description', 'methodAndClassNamePatternGroupOrDefault', '([\\s\\S]*)\\((.*)\\)', 'testParse_WeirdHeaderOnlyCommit(org.eclipse.jgit.revwalk.RevCommitParseTest)')","[182320, 182679]"
"('Description.java', 'org.junit.runner.Description', 'methodAndClassNamePatternGroupOrDefault', '([\\s\\S]*)\\((.*)\\)', 'testSimplePatterns[OldRule? false](org.eclipse.jgit.ignore.FastIgnoreRuleTest)')","[77288, 78045]"
"('URIish.java', 'org.eclipse.jgit.transport.URIish', '<init>', '^([a-z][a-z0-9+-]+)://(?:(?:([^/:@]+)(?::([^\\\\/]+))?@)?((?:[^\\\\/:]+)|(?:\\[[0-9a-f:]+\\]))(?::(\\d+))?((?:/~(?:[^\\\\/]+))?[\\\\/]))?(.+)?$', 'ssh://lusr\\example:wtf@example.com:1234/D:\\x')",[194513]
"('Description.java', 'org.junit.runner.Description', 'methodAndClassNamePatternGroupOrDefault', '([\\s\\S]*)\\((.*)\\)', 'testNegation[OldRule? false](org.eclipse.jgit.ignore.IgnoreMatcherParametrizedTest)')","[103535, 104016]"
"('URIish.java', 'org.eclipse.jgit.transport.URIish', '<init>', '^(?:([^/:@]+)(?::([^\\\\/]+))?@)?([^\\\\/:]{2,}):([\\\\/](?:(?:[^\\\\/]+[\\\\/]+)*[^\\\\/]+[\\\\/]*))$', '/tmp/jgit_test_4266839774263809352_tmp/tmp_2253646626749303486/.git')","[129619, 129765]"
"('Description.java', 'org.junit.runner.Description', 'methodAndClassNamePatternGroupOrDefault', '([\\s\\S]*)\\((.*)\\)', 'testSpi(org.eclipse.jgit.transport.TransportTest)')","[254418, 254588]"
"('Description.java', 'org.junit.runner.Description', 'methodAndClassNamePatternGroupOrDefault', '([\\s\\S]*)\\((.*)\\)', 'testSort_COMMIT_TIME_DESC_OutOfOrder2(org.eclipse.jgit.revwalk.RevWalkSortTest)')","[181900, 182051]"
"('Description.java', 'org.junit.runner.Description', 'methodAndClassNamePatternGroupOrDefault', '([\\s\\S]*)\\((.*)\\)', 'shouldListModificationBetweenTwoCommits(org.eclipse.jgit.diff.DiffEntryTest)')","[9956, 10212]"
"('URIish.java', 'org.eclipse.jgit.transport.URIish', '<init>', '^([a-z][a-z0-9+-]+)://(?:(?:([^/:@]+)(?::([^\\\\/]+))?@)?((?:[^\\\\/:]+)|(?:\\[[0-9a-f:]+\\]))(?::(\\d+))?((?:/~(?:[^\\\\/]+))?[\\\\/]))?(.+)?$', 'ssh+git://lusr\\example@[::1]:80/D:\\x')",[213573]
"('FastIgnoreRule.java', 'org.eclipse.jgit.ignore.FastIgnoreRule', 'isMatch', '[\\p{javaDigit}]', ']')",[100769]
"('Description.java', 'org.junit.runner.Description', 'methodAndClassNamePatternGroupOrDefault', '([\\s\\S]*)\\((.*)\\)', 'org.eclipse.jgit.patch.FileHeaderTest')","[303, 1777]"
"('URIish.java', 'org.eclipse.jgit.transport.URIish', '<init>', '^(file):([\\\\/](?![\\\\/])((?:[A-Za-z]:)?[\\\\/]?(?:(?:[^\\\\/]+[\\\\/]+)*[^\\\\/]+[\\\\/]*)))$', 'http://l usr\\example.com@1.2.3.4:80/D:/x')",[215344]
"('Description.java', 'org.junit.runner.Description', 'methodAndClassNamePatternGroupOrDefault', '([\\s\\S]*)\\((.*)\\)', 'testProperlyCullAllAncestors_LongHistory(org.eclipse.jgit.revwalk.RevWalkCullTest)')","[179290, 179354]"
"('Description.java', 'org.junit.runner.Description', 'methodAndClassNamePatternGroupOrDefault', '([\\s\\S]*)\\((.*)\\)', 'testOnlyOption_f1_9_e(org.eclipse.jgit.api.CommitOnlyTest)')","[135361, 137427]"
"('URIish.java', 'org.eclipse.jgit.transport.URIish', '<init>', '^([a-z][a-z0-9+-]+)://(?:(?:([^/:@]+)(?::([^\\\\/]+))?@)?((?:[^\\\\/:]+)|(?:\\[[0-9a-f:]+\\]))(?::(\\d+))?((?:/~(?:[^\\\\/]+))?[\\\\/]))?(.+)?$', 'ssh://me@example.com:80/D:\\x')",[207317]
"('Description.java', 'org.junit.runner.Description', 'methodAndClassNamePatternGroupOrDefault', '([\\s\\S]*)\\((.*)\\)', 'testBackwards_ConfusingPathName(org.eclipse.jgit.treewalk.CanonicalTreeParserTest)')","[261525, 261853]"
"('URIish.java', 'org.eclipse.jgit.transport.URIish', '<init>', '^([a-z][a-z0-9+-]+)://(?:(?:([^/:@]+)(?::([^\\\\/]+))?@)?((?:[^\\\\/:]+)|(?:\\[[0-9a-f:]+\\]))(?::(\\d+))?((?:/~(?:[^\\\\/]+))?[\\\\/]))?(.+)?$', 'http://lusr\\example@[::1]:1234/D:/x')",[216655]
"('URIish.java', 'org.eclipse.jgit.transport.URIish', '<init>', '^(file):([\\\\/](?![\\\\/])((?:[A-Za-z]:)?[\\\\/]?(?:(?:[^\\\\/]+[\\\\/]+)*[^\\\\/]+[\\\\/]*)))$', 'ssh+git://lusr\\example:wtf@example.com:80/D:/x')",[198730]
"('Description.java', 'org.junit.runner.Description', 'methodAndClassNamePatternGroupOrDefault', '([\\s\\S]*)\\((.*)\\)', 'testUpdateOnBackgroundThreads(org.eclipse.jgit.lib.ThreadSafeProgressMonitorTest)')","[68352, 68417]"
"('Description.java', 'org.junit.runner.Description', 'methodAndClassNamePatternGroupOrDefault', '([\\s\\S]*)\\((.*)\\)', 'testReadLines_endCRLF(org.eclipse.jgit.util.ReadLinesTest)')","[30432, 30559]"
"('Description.java', 'org.junit.runner.Description', 'methodAndClassNamePatternGroupOrDefault', '([\\s\\S]*)\\((.*)\\)', 'testAlias_OptionsKeywordCaseInsensitive(org.eclipse.jgit.transport.OpenSshConfigTest)')","[195953, 196321]"
"('URIish.java', 'org.eclipse.jgit.transport.URIish', '<init>', '^([a-z][a-z0-9+-]+)://(?:(?:([^/:@]+)(?::([^\\\\/]+))?@)?((?:[^\\\\/:]+)|(?:\\[[0-9a-f:]+\\]))(?::(\\d+))?((?:/~(?:[^\\\\/]+))?[\\\\/]))?(.+)?$', 'ssh://lusr\\example@1.2.3.4:80//')",[209755]
"('Description.java', 'org.junit.runner.Description', 'methodAndClassNamePatternGroupOrDefault', '([\\s\\S]*)\\((.*)\\)', 'testGetText_DiffCc(org.eclipse.jgit.patch.GetTextTest)')","[1603, 1688]"
"('FastIgnoreRule.java', 'org.eclipse.jgit.ignore.FastIgnoreRule', 'isMatch', '[^b-c]', 'd')",[100247]
"('Description.java', 'org.junit.runner.Description', 'methodAndClassNamePatternGroupOrDefault', '([\\s\\S]*)\\((.*)\\)', 'testDirectoryFileConflicts_6(org.eclipse.jgit.lib.DirCacheCheckoutTest)')","[61440, 62511]"
"('Description.java', 'org.junit.runner.Description', 'methodAndClassNamePatternGroupOrDefault', '([\\s\\S]*)\\((.*)\\)', 'testEncodeASCII_SimpleASCII(org.eclipse.jgit.lib.ConstantsEncodingTest)')","[59928, 60035]"
"('Description.java', 'org.junit.runner.Description', 'methodAndClassNamePatternGroupOrDefault', '([\\s\\S]*)\\((.*)\\)', 'org.eclipse.jgit.api.PullCommandWithRebaseTest')","[158589, 162678]"
"('URIish.java', 'org.eclipse.jgit.transport.URIish', '<init>', '^(file):([\\\\/](?![\\\\/])((?:[A-Za-z]:)?[\\\\/]?(?:(?:[^\\\\/]+[\\\\/]+)*[^\\\\/]+[\\\\/]*)))$', 'ssh+git://lusr\\example@[::1]:1234//')",[213228]
"('URIish.java', 'org.eclipse.jgit.transport.URIish', '<init>', '^(file):([\\\\/](?![\\\\/])((?:[A-Za-z]:)?[\\\\/]?(?:(?:[^\\\\/]+[\\\\/]+)*[^\\\\/]+[\\\\/]*)))$', 'https://l usr\\example.com:wtf@example.com:80/D:/x')",[205040]
"('Description.java', 'org.junit.runner.Description', 'methodAndClassNamePatternGroupOrDefault', '([\\s\\S]*)\\((.*)\\)', 'testDegenerate_DeleteEnd(org.eclipse.jgit.diff.HistogramDiffTest)')","[6828, 7432]"
"('FastIgnoreRule.java', 'org.eclipse.jgit.ignore.FastIgnoreRule', 'isMatch', '..', 'ab')",[99207]
"('URIish.java', 'org.eclipse.jgit.transport.URIish', '<init>', '^([a-z][a-z0-9+-]+)://(?:(?:([^/:@]+)(?::([^\\\\/]+))?@)?((?:[^\\\\/:]+)|(?:\\[[0-9a-f:]+\\]))(?::(\\d+))?((?:/~(?:[^\\\\/]+))?[\\\\/]))?(.+)?$', 'ssh+git://me@example.com:1234//abc')",[210353]
"('Description.java', 'org.junit.runner.Description', 'methodAndClassNamePatternGroupOrDefault', '([\\s\\S]*)\\((.*)\\)', 'testTwoGroupsCase3(org.eclipse.jgit.fnmatch.FileNameMatcherTest)')","[42763, 46086]"
"('Description.java', 'org.junit.runner.Description', 'methodAndClassNamePatternGroupOrDefault', '([\\s\\S]*)\\((.*)\\)', 'testPrintGroupCase2(org.eclipse.jgit.fnmatch.FileNameMatcherTest)')","[43456, 46812]"
"('Description.java', 'org.junit.runner.Description', 'methodAndClassNamePatternGroupOrDefault', '([\\s\\S]*)\\((.*)\\)', 'org.eclipse.jgit.util.FileUtilTest')","[23247, 23958]"
"('URIish.java', 'org.eclipse.jgit.transport.URIish', '<init>', '^([a-z][a-z0-9+-]+)://(?:(?:([^/:@]+)(?::([^\\\\/]+))?@)?((?:[^\\\\/:]+)|(?:\\[[0-9a-f:]+\\]))(?::(\\d+))?((?:/~(?:[^\\\\/]+))?[\\\\/]))?(.+)?$', 'file:///tmp/jgit_test_1212230039583698495_tmp/tmp_6808533813290140997.git/')",[5617]
"('AttributesRule.java', 'org.eclipse.jgit.attributes.AttributesRule', 'isMatch', '.r[a-c]', 'cr3')",[76886]
"('URIish.java', 'org.eclipse.jgit.transport.URIish', '<init>', '^([a-z][a-z0-9+-]+)://(?:(?:([^/:@]+)(?::([^\\\\/]+))?@)?((?:[^\\\\/:]+)|(?:\\[[0-9a-f:]+\\]))(?::(\\d+))?((?:/~(?:[^\\\\/]+))?[\\\\/]))?(.+)?$', 'http://me:wtf@[::1]:80//')",[200501]
"('FastIgnoreRule.java', 'org.eclipse.jgit.ignore.FastIgnoreRule', 'isMatch', '.*\\.sta[0-5]', 'test.sta2')","[104720, 105950]"
"('Description.java', 'org.junit.runner.Description', 'methodAndClassNamePatternGroupOrDefault', '([\\s\\S]*)\\((.*)\\)', 'testUTF8withoutBOM(org.eclipse.jgit.storage.file.FileBasedConfigTest)')","[48101, 48187]"
"('Description.java', 'org.junit.runner.Description', 'methodAndClassNamePatternGroupOrDefault', '([\\s\\S]*)\\((.*)\\)', 'testTwoGroupsCase0[OldRule? false](org.eclipse.jgit.ignore.IgnoreRuleSpecialCasesTest)')","[86181, 93286]"
"('URIish.java', 'org.eclipse.jgit.transport.URIish', '<init>', '^(file):([\\\\/](?![\\\\/])((?:[A-Za-z]:)?[\\\\/]?(?:(?:[^\\\\/]+[\\\\/]+)*[^\\\\/]+[\\\\/]*)))$', 'ssh://lusr\\example@1.2.3.4//')","[223371, 223555]"
"('Description.java', 'org.junit.runner.Description', 'methodAndClassNamePatternGroupOrDefault', '([\\s\\S]*)\\((.*)\\)', 'org.eclipse.jgit.merge.ResolveMergerTest')","[12553, 57644]"
"('Description.java', 'org.junit.runner.Description', 'methodAndClassNamePatternGroupOrDefault', '([\\s\\S]*)\\((.*)\\)', 'testOnlyOption_f1_4_b(org.eclipse.jgit.api.CommitOnlyTest)')","[134773, 136811]"
"('URIish.java', 'org.eclipse.jgit.transport.URIish', '<init>', '^(file):([\\\\/](?![\\\\/])((?:[A-Za-z]:)?[\\\\/]?(?:(?:[^\\\\/]+[\\\\/]+)*[^\\\\/]+[\\\\/]*)))$', 'http://l usr\\example.com:wtf@example.com:1234/D:\\x')",[200800]
"('Description.java', 'org.junit.runner.Description', 'methodAndClassNamePatternGroupOrDefault', '([\\s\\S]*)\\((.*)\\)', 'testInvalidTreeNameIsMacHFSGitCorruptUTF8AtEnd(org.eclipse.jgit.lib.ObjectCheckerTest)')","[50516, 53100]"
"('Description.java', 'org.junit.runner.Description', 'methodAndClassNamePatternGroupOrDefault', '([\\s\\S]*)\\((.*)\\)', 'testEdit_NoUniqueMiddleSide_FlipBlocks(org.eclipse.jgit.diff.HistogramDiffTest)')","[6652, 7278]"
"('Description.java', 'org.junit.runner.Description', 'methodAndClassNamePatternGroupOrDefault', '([\\s\\S]*)\\((.*)\\)', 'testEmptyMap(org.eclipse.jgit.transport.LongMapTest)')","[183700, 183875]"
"('URIish.java', 'org.eclipse.jgit.transport.URIish', '<init>', '^([a-z][a-z0-9+-]+)://(?:(?:([^/:@]+)(?::([^\\\\/]+))?@)?((?:[^\\\\/:]+)|(?:\\[[0-9a-f:]+\\]))(?::(\\d+))?((?:/~(?:[^\\\\/]+))?[\\\\/]))?(.+)?$', '/tmp/jgit_test_1060628017969836137_tmp/tmp_884518266944927743.git')","[185696, 185875]"
"('Description.java', 'org.junit.runner.Description', 'methodAndClassNamePatternGroupOrDefault', '([\\s\\S]*)\\((.*)\\)', 'testRevObjectTypes(org.eclipse.jgit.revwalk.RevObjectTest)')","[178186, 178402]"
"('URIish.java', 'org.eclipse.jgit.transport.URIish', '<init>', '^(?:([^/:@]+)(?::([^\\\\/]+))?@)?([^\\\\/:]{2,}):([\\\\/](?:(?:[^\\\\/]+[\\\\/]+)*[^\\\\/]+[\\\\/]*))$', '/tmp/jgit_test_3398920852013764911_tmp/tmp_7767066208309385669')","[162222, 162362, 162511]"
"('URIish.java', 'org.eclipse.jgit.transport.URIish', '<init>', '^([a-z][a-z0-9+-]+)://(?:(?:([^/:@]+)(?::([^\\\\/]+))?@)?((?:[^\\\\/:]+)|(?:\\[[0-9a-f:]+\\]))(?::(\\d+))?((?:/~(?:[^\\\\/]+))?[\\\\/]))?(.+)?$', 'file:///tmp/jgit_test_3034655928926536309_tmp/tmp_8831357079882312553/.git/')",[57515]
"('URIish.java', 'org.eclipse.jgit.transport.URIish', '<init>', '^(file):([\\\\/](?![\\\\/])((?:[A-Za-z]:)?[\\\\/]?(?:(?:[^\\\\/]+[\\\\/]+)*[^\\\\/]+[\\\\/]*)))$', 'file:/tmp/jgit_test_2768247327927037753_tmp/tmp_3196723450529294565/.git/')",[56911]
"('Description.java', 'org.junit.runner.Description', 'methodAndClassNamePatternGroupOrDefault', '([\\s\\S]*)\\((.*)\\)', 'testFileInFolderCommittedDeletedCommittedComparedWithInitialCommit(org.eclipse.jgit.treewalk.filter.IndexDiffFilterTest)')","[264464, 265277]"
"('Description.java', 'org.junit.runner.Description', 'methodAndClassNamePatternGroupOrDefault', '([\\s\\S]*)\\((.*)\\)', 'testOnlyOption_f1_8_e(org.eclipse.jgit.api.CommitOnlyTest)')","[135256, 137317]"
"('URIish.java', 'org.eclipse.jgit.transport.URIish', '<init>', '^(?:([^/:@]+)(?::([^\\\\/]+))?@)?([^\\\\/:]{2,}):([\\\\/](?:(?:[^\\\\/]+[\\\\/]+)*[^\\\\/]+[\\\\/]*))$', '/tmp/jgit_test_8705262332183795899_tmp/tmp_6035244968182702733')","[148874, 149014]"
"('Description.java', 'org.junit.runner.Description', 'methodAndClassNamePatternGroupOrDefault', '([\\s\\S]*)\\((.*)\\)', 'testEqualsWithoutWhitespace(org.eclipse.jgit.diff.RawTextIgnoreAllWhitespaceTest)')","[9748, 9791]"
"('URIish.java', 'org.eclipse.jgit.transport.URIish', '<init>', '^([a-z][a-z0-9+-]+)://(?:(?:([^/:@]+)(?::([^\\\\/]+))?@)?((?:[^\\\\/:]+)|(?:\\[[0-9a-f:]+\\]))(?::(\\d+))?((?:/~(?:[^\\\\/]+))?[\\\\/]))?(.+)?$', 'ssh://lusr\\example@[::1]:80/D:\\x')",[210261]
"('Description.java', 'org.junit.runner.Description', 'methodAndClassNamePatternGroupOrDefault', '([\\s\\S]*)\\((.*)\\)', 'invalidRepositoryFormatVersion(org.eclipse.jgit.internal.storage.file.FileRepositoryBuilderTest)')","[118576, 118725]"
"('Description.java', 'org.junit.runner.Description', 'methodAndClassNamePatternGroupOrDefault', '([\\s\\S]*)\\((.*)\\)', 'testCntrlGroupCase1[OldRule? false](org.eclipse.jgit.ignore.IgnoreRuleSpecialCasesTest)')","[85698, 92803]"
"('URIish.java', 'org.eclipse.jgit.transport.URIish', '<init>', '^(file):([\\\\/](?![\\\\/])((?:[A-Za-z]:)?[\\\\/]?(?:(?:[^\\\\/]+[\\\\/]+)*[^\\\\/]+[\\\\/]*)))$', 'ssh://lusr\\example@example.com:80/D:/x')",[209456]
"('URIish.java', 'org.eclipse.jgit.transport.URIish', 'getHumanishName', '^([\\\\/]?((?:[A-Za-z]:)?[\\\\/]?(?:(?:[^\\\\/]+[\\\\/]+)*[^\\\\/]+[\\\\/]*)))$', '/abc/')","[248556, 253090]"
"('URIish.java', 'org.eclipse.jgit.transport.URIish', '<init>', '^([a-z][a-z0-9+-]+)://(?:(?:([^/:@]+)(?::([^\\\\/]+))?@)?((?:[^\\\\/:]+)|(?:\\[[0-9a-f:]+\\]))(?::(\\d+))?((?:/~(?:[^\\\\/]+))?[\\\\/]))?(.+)?$', 'http://lusr\\example@1.2.3.4:1234/D:/x')",[216287]
"('URIish.java', 'org.eclipse.jgit.transport.URIish', '<init>', '^(file):([\\\\/](?![\\\\/])((?:[A-Za-z]:)?[\\\\/]?(?:(?:[^\\\\/]+[\\\\/]+)*[^\\\\/]+[\\\\/]*)))$', 'ssh+git://l usr\\example.com@1.2.3.4:1234/D:/x')",[211848]
"('Description.java', 'org.junit.runner.Description', 'methodAndClassNamePatternGroupOrDefault', '([\\s\\S]*)\\((.*)\\)', 'testOnlyOption_f1_13_b(org.eclipse.jgit.api.CommitOnlyTest)')","[136033, 138131]"
"('Description.java', 'org.junit.runner.Description', 'methodAndClassNamePatternGroupOrDefault', '([\\s\\S]*)\\((.*)\\)', 'testSshProtoWithADUserPassAndPort(org.eclipse.jgit.transport.URIishTest)')","[188632, 190018]"
"('URIish.java', 'org.eclipse.jgit.transport.URIish', '<init>', '^(file):([\\\\/](?![\\\\/])((?:[A-Za-z]:)?[\\\\/]?(?:(?:[^\\\\/]+[\\\\/]+)*[^\\\\/]+[\\\\/]*)))$', 'ssh+git://me@1.2.3.4:80//')",[210836]
"('Description.java', 'org.junit.runner.Description', 'methodAndClassNamePatternGroupOrDefault', '([\\s\\S]*)\\((.*)\\)', 'testOnlyOption_f1_10_d(org.eclipse.jgit.api.CommitOnlyTest)')","[135760, 137845]"
"('Description.java', 'org.junit.runner.Description', 'methodAndClassNamePatternGroupOrDefault', '([\\s\\S]*)\\((.*)\\)', 'test4_FromString(org.eclipse.jgit.lib.AbbreviatedObjectIdTest)')","[55462, 56003]"
"('Description.java', 'org.junit.runner.Description', 'methodAndClassNamePatternGroupOrDefault', '([\\s\\S]*)\\((.*)\\)', 'testEdit_CommonGrowsPrefixAndSuffix(org.eclipse.jgit.diff.HistogramDiffTest)')","[7143, 7824]"
"('Description.java', 'org.junit.runner.Description', 'methodAndClassNamePatternGroupOrDefault', '([\\s\\S]*)\\((.*)\\)', 'testAddDeleteTrickyNames(org.eclipse.jgit.dircache.DirCachePathEditTest)')","[170618, 170682]"
"('Description.java', 'org.junit.runner.Description', 'methodAndClassNamePatternGroupOrDefault', '([\\s\\S]*)\\((.*)\\)', 'testOnlyOption_f1_13_c(org.eclipse.jgit.api.CommitOnlyTest)')","[136054, 138153]"
"('URIish.java', 'org.eclipse.jgit.transport.URIish', '<init>', '^([a-z][a-z0-9+-]+)://(?:(?:([^/:@]+)(?::([^\\\\/]+))?@)?((?:[^\\\\/:]+)|(?:\\[[0-9a-f:]+\\]))(?::(\\d+))?((?:/~(?:[^\\\\/]+))?[\\\\/]))?(.+)?$', '/tmp/jgit_test_4266839774263809352_tmp/tmp_2253646626749303486/.git')","[129567, 129705]"
"('URIish.java', 'org.eclipse.jgit.transport.URIish', '<init>', '^(file):([\\\\/](?![\\\\/])((?:[A-Za-z]:)?[\\\\/]?(?:(?:[^\\\\/]+[\\\\/]+)*[^\\\\/]+[\\\\/]*)))$', 'https://me@[::1]//abc')","[231513, 231697]"
"('Description.java', 'org.junit.runner.Description', 'methodAndClassNamePatternGroupOrDefault', '([\\s\\S]*)\\((.*)\\)', 'testTimeout_flush_Timeout(org.eclipse.jgit.util.io.TimeoutOutputStreamTest)')","[24586, 24784]"
"('Description.java', 'org.junit.runner.Description', 'methodAndClassNamePatternGroupOrDefault', '([\\s\\S]*)\\((.*)\\)', 'testBasic[OldRule? true](org.eclipse.jgit.ignore.IgnoreMatcherParametrizedTest)')","[103694, 104154]"
"('Description.java', 'org.junit.runner.Description', 'methodAndClassNamePatternGroupOrDefault', '([\\s\\S]*)\\((.*)\\)', 'testTimeout_readBuffer_Timeout(org.eclipse.jgit.util.io.TimeoutInputStreamTest)')","[24099, 24272]"
"('URIish.java', 'org.eclipse.jgit.transport.URIish', '<init>', '^([a-z][a-z0-9+-]+)://(?:(?:([^/:@]+)(?::([^\\\\/]+))?@)?((?:[^\\\\/:]+)|(?:\\[[0-9a-f:]+\\]))(?::(\\d+))?((?:/~(?:[^\\\\/]+))?[\\\\/]))?(.+)?$', 'http://www.spearce.org/egit.git')","[255300, 256073, 256123, 256463, 256636, 256686, 256981, 257756, 257906, 258031]"
"('Description.java', 'org.junit.runner.Description', 'methodAndClassNamePatternGroupOrDefault', '([\\s\\S]*)\\((.*)\\)', 'testSpecialGroupCase4[OldRule? true](org.eclipse.jgit.ignore.IgnoreRuleSpecialCasesTest)')","[88410, 95494]"
"('Description.java', 'org.junit.runner.Description', 'methodAndClassNamePatternGroupOrDefault', '([\\s\\S]*)\\((.*)\\)', 'testBackwords_Prebuilts2(org.eclipse.jgit.treewalk.CanonicalTreeParserTest)')","[261315, 261633]"
"('Description.java', 'org.junit.runner.Description', 'methodAndClassNamePatternGroupOrDefault', '([\\s\\S]*)\\((.*)\\)', 'testCheckout(org.eclipse.jgit.internal.storage.file.ReflogReaderTest)')","[118915, 119084]"
"('Description.java', 'org.junit.runner.Description', 'methodAndClassNamePatternGroupOrDefault', '([\\s\\S]*)\\((.*)\\)', 'testXDigitGroupCase4[OldRule? false](org.eclipse.jgit.ignore.IgnoreRuleSpecialCasesTest)')","[87653, 94758]"
"('Description.java', 'org.junit.runner.Description', 'methodAndClassNamePatternGroupOrDefault', '([\\s\\S]*)\\((.*)\\)', 'org.eclipse.jgit.treewalk.filter.IndexDiffFilterTest')","[264149, 267301]"
"('Description.java', 'org.junit.runner.Description', 'methodAndClassNamePatternGroupOrDefault', '([\\s\\S]*)\\((.*)\\)', 'testParsePersonIdent_fuzzyCases(org.eclipse.jgit.util.RawParseUtils_ParsePersonIdentTest)')","[38883, 38971]"
"('Description.java', 'org.junit.runner.Description', 'methodAndClassNamePatternGroupOrDefault', '([\\s\\S]*)\\((.*)\\)', 'testInitBareRepository(org.eclipse.jgit.api.InitCommandTest)')","[156630, 156822]"
"('URIish.java', 'org.eclipse.jgit.transport.URIish', '<init>', '^([a-z][a-z0-9+-]+)://(?:(?:([^/:@]+)(?::([^\\\\/]+))?@)?((?:[^\\\\/:]+)|(?:\\[[0-9a-f:]+\\]))(?::(\\d+))?((?:/~(?:[^\\\\/]+))?[\\\\/]))?(.+)?$', 'https://lusr\\example@example.com:1234//abc')",[219760]
"('Description.java', 'org.junit.runner.Description', 'methodAndClassNamePatternGroupOrDefault', '([\\s\\S]*)\\((.*)\\)', 'testCreateFileHeaderForRenameWithoutContentChange(org.eclipse.jgit.diff.DiffFormatterTest)')","[3013, 3472]"
"('URIish.java', 'org.eclipse.jgit.transport.URIish', '<init>', '^(file):([\\\\/](?![\\\\/])((?:[A-Za-z]:)?[\\\\/]?(?:(?:[^\\\\/]+[\\\\/]+)*[^\\\\/]+[\\\\/]*)))$', 'file:/tmp/jgit_test_3149639463277021735_tmp/tmp_125955257974406603/.git/')",[3722]
"('Description.java', 'org.junit.runner.Description', 'methodAndClassNamePatternGroupOrDefault', '([\\s\\S]*)\\((.*)\\)', 'testWriteEmptyCommit_RealIndex(org.eclipse.jgit.dircache.DirCacheBasicTest)')","[171317, 171572]"
"('Description.java', 'org.junit.runner.Description', 'methodAndClassNamePatternGroupOrDefault', '([\\s\\S]*)\\((.*)\\)', 'testFastForwardOnly(org.eclipse.jgit.api.MergeCommandTest)')","[126349, 127263]"
"('Description.java', 'org.junit.runner.Description', 'methodAndClassNamePatternGroupOrDefault', '([\\s\\S]*)\\((.*)\\)', 'testFormatWeeks(org.eclipse.jgit.util.RelativeDateFormatterTest)')","[31295, 31489]"
"('Description.java', 'org.junit.runner.Description', 'methodAndClassNamePatternGroupOrDefault', '([\\s\\S]*)\\((.*)\\)', 'testBuildThenClear(org.eclipse.jgit.dircache.DirCacheBasicTest)')","[171422, 171976]"
"('Description.java', 'org.junit.runner.Description', 'methodAndClassNamePatternGroupOrDefault', '([\\s\\S]*)\\((.*)\\)', 'testPullEmptyRepository(org.eclipse.jgit.api.PullCommandTest)')","[144588, 144933]"
"('URIish.java', 'org.eclipse.jgit.transport.URIish', '<init>', '^([a-z][a-z0-9+-]+)://(?:(?:([^/:@]+)(?::([^\\\\/]+))?@)?((?:[^\\\\/:]+)|(?:\\[[0-9a-f:]+\\]))(?::(\\d+))?((?:/~(?:[^\\\\/]+))?[\\\\/]))?(.+)?$', 'https://lusr\\example@[::1]:80/D:/x')",[220726]
"('Description.java', 'org.junit.runner.Description', 'methodAndClassNamePatternGroupOrDefault', '([\\s\\S]*)\\((.*)\\)', 'testNotEquals3(org.eclipse.jgit.diff.EditTest)')","[6094, 6443]"
"('Description.java', 'org.junit.runner.Description', 'methodAndClassNamePatternGroupOrDefault', '([\\s\\S]*)\\((.*)\\)', 'testWordGroupCase3[OldRule? true](org.eclipse.jgit.ignore.IgnoreRuleSpecialCasesTest)')","[91446, 98530]"
"('URIish.java', 'org.eclipse.jgit.transport.URIish', '<init>', '^(file):([\\\\/](?![\\\\/])((?:[A-Za-z]:)?[\\\\/]?(?:(?:[^\\\\/]+[\\\\/]+)*[^\\\\/]+[\\\\/]*)))$', 'D:\\m y')","[249407, 249522]"
"('Description.java', 'org.junit.runner.Description', 'methodAndClassNamePatternGroupOrDefault', '([\\s\\S]*)\\((.*)\\)', 'testReadFullyFannedOut(org.eclipse.jgit.notes.NoteMapTest)')","[258420, 258682]"
"('URIish.java', 'org.eclipse.jgit.transport.URIish', '<init>', '^(file):([\\\\/](?![\\\\/])((?:[A-Za-z]:)?[\\\\/]?(?:(?:[^\\\\/]+[\\\\/]+)*[^\\\\/]+[\\\\/]*)))$', 'https://me@1.2.3.4//abc')","[231145, 231329]"
"('URIish.java', 'org.eclipse.jgit.transport.URIish', '<init>', '^([a-z][a-z0-9+-]+)://(?:(?:([^/:@]+)(?::([^\\\\/]+))?@)?((?:[^\\\\/:]+)|(?:\\[[0-9a-f:]+\\]))(?::(\\d+))?((?:/~(?:[^\\\\/]+))?[\\\\/]))?(.+)?$', 'file:///tmp/jgit_test_4902706930144711069_tmp/tmp_335954329502971208/.git/')",[59364]
"('URIish.java', 'org.eclipse.jgit.transport.URIish', '<init>', '^(?:([^/:@]+)(?::([^\\\\/]+))?@)?((?:[^\\\\/:]+)|(?:\\[[0-9a-f:]+\\])):((?:(?:/~(?:[^\\\\/]+))[\\\\/])?(?:(?:[^\\\\/]+[\\\\/]+)*[^\\\\/]+[\\\\/]*))$', '/tmp/jgit_test_4286677760507975988_tmp/tmp_6334190847139878105')","[147518, 147653, 147869]"
"('URIish.java', 'org.eclipse.jgit.transport.URIish', '<init>', '^(file):([\\\\/](?![\\\\/])((?:[A-Za-z]:)?[\\\\/]?(?:(?:[^\\\\/]+[\\\\/]+)*[^\\\\/]+[\\\\/]*)))$', 'https://lusr\\example@example.com/D:/x')","[233031, 233215]"
"('URIish.java', 'org.eclipse.jgit.transport.URIish', '<init>', '^([a-z][a-z0-9+-]+)://(?:(?:([^/:@]+)(?::([^\\\\/]+))?@)?((?:[^\\\\/:]+)|(?:\\[[0-9a-f:]+\\]))(?::(\\d+))?((?:/~(?:[^\\\\/]+))?[\\\\/]))?(.+)?$', '/tmp/jgit_test_8538603759973152363_tmp/tmp_8885440780712787474')","[146828, 146958, 147170]"
"('Description.java', 'org.junit.runner.Description', 'methodAndClassNamePatternGroupOrDefault', '([\\s\\S]*)\\((.*)\\)', 'testRemoveFirstURI(org.eclipse.jgit.transport.RemoteConfigTest)')","[253548, 254113]"
"('FastIgnoreRule.java', 'org.eclipse.jgit.ignore.FastIgnoreRule', 'isMatch', '[:]\\]', ':]')",[99129]
"('Description.java', 'org.junit.runner.Description', 'methodAndClassNamePatternGroupOrDefault', '([\\s\\S]*)\\((.*)\\)', 'testEditAllLines(org.eclipse.jgit.api.BlameCommandTest)')","[139904, 140296]"
"('Description.java', 'org.junit.runner.Description', 'methodAndClassNamePatternGroupOrDefault', '([\\s\\S]*)\\((.*)\\)', 'test2_FromString(org.eclipse.jgit.lib.AbbreviatedObjectIdTest)')","[55420, 55959]"
"('FastIgnoreRule.java', 'org.eclipse.jgit.ignore.FastIgnoreRule', 'isMatch', '[[\\p{Graph}\\p{javaDigit}\\p{javaLetter}]]', 'a')",[99675]
"('Description.java', 'org.junit.runner.Description', 'methodAndClassNamePatternGroupOrDefault', '([\\s\\S]*)\\((.*)\\)', 'testOldFile(org.eclipse.jgit.internal.storage.file.FileSnapshotTest)')","[109716, 109801]"
"('Description.java', 'org.junit.runner.Description', 'methodAndClassNamePatternGroupOrDefault', '([\\s\\S]*)\\((.*)\\)', 'testLowerGroupCase2(org.eclipse.jgit.fnmatch.FileNameMatcherTest)')","[42175, 45470]"
"('URIish.java', 'org.eclipse.jgit.transport.URIish', '<init>', '^(?:([^/:@]+)(?::([^\\\\/]+))?@)?((?:[^\\\\/:]+)|(?:\\[[0-9a-f:]+\\])):((?:(?:/~(?:[^\\\\/]+))[\\\\/])?(?:(?:[^\\\\/]+[\\\\/]+)*[^\\\\/]+[\\\\/]*))$', '/tmp/jgit_test_4436388230543018363_tmp/tmp_2933209461077420112.git')","[186080, 186335]"
"('URIish.java', 'org.eclipse.jgit.transport.URIish', '<init>', '^(file):([\\\\/](?![\\\\/])((?:[A-Za-z]:)?[\\\\/]?(?:(?:[^\\\\/]+[\\\\/]+)*[^\\\\/]+[\\\\/]*)))$', 'ssh://me@1.2.3.4:1234//abc')",[207386]
"('Description.java', 'org.junit.runner.Description', 'methodAndClassNamePatternGroupOrDefault', '([\\s\\S]*)\\((.*)\\)', 'testIsId(org.eclipse.jgit.lib.AbbreviatedObjectIdTest)')","[55189, 55717]"
"('URIish.java', 'org.eclipse.jgit.transport.URIish', '<init>', '^(file):([\\\\/](?![\\\\/])((?:[A-Za-z]:)?[\\\\/]?(?:(?:[^\\\\/]+[\\\\/]+)*[^\\\\/]+[\\\\/]*)))$', 'file:///tmp/jgit_test_6256491358168162883_tmp/tmp_6857378809242731644')","[164129, 164186, 164243, 164300, 165276, 165333]"
"('URIish.java', 'org.eclipse.jgit.transport.URIish', '<init>', '^([a-z][a-z0-9+-]+)://(?:(?:([^/:@]+)(?::([^\\\\/]+))?@)?((?:[^\\\\/:]+)|(?:\\[[0-9a-f:]+\\]))(?::(\\d+))?((?:/~(?:[^\\\\/]+))?[\\\\/]))?(.+)?$', 'ssh+git://l usr\\example.com@1.2.3.4:1234//abc')",[211825]
"('Description.java', 'org.junit.runner.Description', 'methodAndClassNamePatternGroupOrDefault', '([\\s\\S]*)\\((.*)\\)', 'testDequote_BareA(org.eclipse.jgit.util.QuotedStringBourneUserPathStyleTest)')","[28913, 29171]"
"('Description.java', 'org.junit.runner.Description', 'methodAndClassNamePatternGroupOrDefault', '([\\s\\S]*)\\((.*)\\)', 'getTrackingBranchShouldReturnMergeBranchForLocalBranch(org.eclipse.jgit.lib.BranchConfigTest)')","[54744, 54913]"
"('Description.java', 'org.junit.runner.Description', 'methodAndClassNamePatternGroupOrDefault', '([\\s\\S]*)\\((.*)\\)', 'testEscapedBracket4(org.eclipse.jgit.fnmatch.FileNameMatcherTest)')","[44548, 47956]"
"('Description.java', 'org.junit.runner.Description', 'methodAndClassNamePatternGroupOrDefault', '([\\s\\S]*)\\((.*)\\)', 'testBoundary(org.eclipse.jgit.util.io.AutoCRLFOutputStreamTest)')","[25713, 25756]"
"('URIish.java', 'org.eclipse.jgit.transport.URIish', '<init>', '^(file):([\\\\/](?![\\\\/])((?:[A-Za-z]:)?[\\\\/]?(?:(?:[^\\\\/]+[\\\\/]+)*[^\\\\/]+[\\\\/]*)))$', 'http://l usr\\example.com:wtf@1.2.3.4:1234//')",[201030]
"('URIish.java', 'org.eclipse.jgit.transport.URIish', '<init>', '^([\\\\/]?((?:[A-Za-z]:)?[\\\\/]?(?:(?:[^\\\\/]+[\\\\/]+)*[^\\\\/]+[\\\\/]*)))$', '/abc/')",[253067]
"('Description.java', 'org.junit.runner.Description', 'methodAndClassNamePatternGroupOrDefault', '([\\s\\S]*)\\((.*)\\)', 'testFilter_ALL_Or_NONE(org.eclipse.jgit.revwalk.RevWalkFilterTest)')","[180626, 180946]"
"('URIish.java', 'org.eclipse.jgit.transport.URIish', '<init>', '^(file):([\\\\/](?![\\\\/])((?:[A-Za-z]:)?[\\\\/]?(?:(?:[^\\\\/]+[\\\\/]+)*[^\\\\/]+[\\\\/]*)))$', 'ssh://example.com/some/p ath')","[250879, 250925]"
"('URIish.java', 'org.eclipse.jgit.transport.URIish', '<init>', '^(file):([\\\\/](?![\\\\/])((?:[A-Za-z]:)?[\\\\/]?(?:(?:[^\\\\/]+[\\\\/]+)*[^\\\\/]+[\\\\/]*)))$', 'ssh+git://l usr\\example.com@[::1]:1234//')",[212124]
"('Description.java', 'org.junit.runner.Description', 'methodAndClassNamePatternGroupOrDefault', '([\\s\\S]*)\\((.*)\\)', 'testInvalidTreeNameIsDotDot(org.eclipse.jgit.lib.ObjectCheckerTest)')","[49697, 52242]"
"('Description.java', 'org.junit.runner.Description', 'methodAndClassNamePatternGroupOrDefault', '([\\s\\S]*)\\((.*)\\)', 'org.eclipse.jgit.storage.file.FileBasedConfigTest')","[48059, 48254]"
"('URIish.java', 'org.eclipse.jgit.transport.URIish', '<init>', '^(file):([\\\\/](?![\\\\/])((?:[A-Za-z]:)?[\\\\/]?(?:(?:[^\\\\/]+[\\\\/]+)*[^\\\\/]+[\\\\/]*)))$', 'ssh://lusr\\example:wtf@[::1]:80//abc')",[195318]
"('SideBandInputStream.java', 'org.eclipse.jgit.transport.SideBandInputStream', 'doProgressLine', '^([\\w ]+): +\\d+% +\\( *(\\d+)/ *(\\d+)\\)(?:, done\\.)? *[\r\n]$', 'Updating references: 100% (1/1)   \r')","[140828, 140964, 141154, 141344, 141534, 141724, 141914, 142104, 142317, 143607, 143856, 144105, 144300, 187925]"
"('URIish.java', 'org.eclipse.jgit.transport.URIish', '<init>', '^([a-z][a-z0-9+-]+)://(?:(?:([^/:@]+)(?::([^\\\\/]+))?@)?((?:[^\\\\/:]+)|(?:\\[[0-9a-f:]+\\]))(?::(\\d+))?((?:/~(?:[^\\\\/]+))?[\\\\/]))?(.+)?$', 'https://lusr\\example@example.com//')","[232962, 233146]"
"('Description.java', 'org.junit.runner.Description', 'methodAndClassNamePatternGroupOrDefault', '([\\s\\S]*)\\((.*)\\)', 'testBeforeAfterCuts(org.eclipse.jgit.diff.EditTest)')","[6136, 6487]"
"('Description.java', 'org.junit.runner.Description', 'methodAndClassNamePatternGroupOrDefault', '([\\s\\S]*)\\((.*)\\)', 'testEmpty(org.eclipse.jgit.treewalk.filter.InterIndexDiffFilterTest)')","[263938, 264046]"
"('Description.java', 'org.junit.runner.Description', 'methodAndClassNamePatternGroupOrDefault', '([\\s\\S]*)\\((.*)\\)', 'testFileProtoUnix(org.eclipse.jgit.transport.URIishTest)')","[188737, 190128]"
"('Description.java', 'org.junit.runner.Description', 'methodAndClassNamePatternGroupOrDefault', '([\\s\\S]*)\\((.*)\\)', 'testManySolutionsCase0[OldRule? false](org.eclipse.jgit.ignore.IgnoreRuleSpecialCasesTest)')","[87124, 94229]"
"('URIish.java', 'org.eclipse.jgit.transport.URIish', '<init>', '^(file):([\\\\/](?![\\\\/])((?:[A-Za-z]:)?[\\\\/]?(?:(?:[^\\\\/]+[\\\\/]+)*[^\\\\/]+[\\\\/]*)))$', 'http://l usr\\example.com:wtf@[::1]:80//abc')",[201628]
"('URIish.java', 'org.eclipse.jgit.transport.URIish', '<init>', '^(file):([\\\\/](?![\\\\/])((?:[A-Za-z]:)?[\\\\/]?(?:(?:[^\\\\/]+[\\\\/]+)*[^\\\\/]+[\\\\/]*)))$', 'git://example.com/D:/m y')","[252262, 252308]"
"('QuotedString.java', 'org.eclipse.jgit.util.QuotedString$BourneUserPathStyle', 'quote', '^~[A-Za-z0-9_-]+$', '~foo')","[29528, 29552]"
"('URIish.java', 'org.eclipse.jgit.transport.URIish', '<init>', '^([a-z][a-z0-9+-]+)://(?:(?:([^/:@]+)(?::([^\\\\/]+))?@)?((?:[^\\\\/:]+)|(?:\\[[0-9a-f:]+\\]))(?::(\\d+))?((?:/~(?:[^\\\\/]+))?[\\\\/]))?(.+)?$', 'https://me:wtf@example.com:80/D:/x')",[203375]
"('Description.java', 'org.junit.runner.Description', 'methodAndClassNamePatternGroupOrDefault', '([\\s\\S]*)\\((.*)\\)', 'testRepeatedNegation(org.eclipse.jgit.ignore.IgnoreNodeTest)')","[108334, 108642]"
"('FastIgnoreRule.java', 'org.eclipse.jgit.ignore.FastIgnoreRule', 'isMatch', '[\\p{javaLetter}]', 'ö')",[100117]
"('Description.java', 'org.junit.runner.Description', 'methodAndClassNamePatternGroupOrDefault', '([\\s\\S]*)\\((.*)\\)', 'org.eclipse.jgit.api.ApplyCommandTest')","[163630, 164354]"
"('Description.java', 'org.junit.runner.Description', 'methodAndClassNamePatternGroupOrDefault', '([\\s\\S]*)\\((.*)\\)', 'testACommitWithSubject_NonFooterAndBugAndSob(org.eclipse.jgit.util.ChangeIdUtilTest)')","[32203, 32965]"
"('Description.java', 'org.junit.runner.Description', 'methodAndClassNamePatternGroupOrDefault', '([\\s\\S]*)\\((.*)\\)', 'testRemoveMiddle(org.eclipse.jgit.notes.LeafBucketTest)')","[260212, 260449]"
"('URIish.java', 'org.eclipse.jgit.transport.URIish', '<init>', '^(file):([\\\\/](?![\\\\/])((?:[A-Za-z]:)?[\\\\/]?(?:(?:[^\\\\/]+[\\\\/]+)*[^\\\\/]+[\\\\/]*)))$', 'ssh+git://me:wtf@[::1]:1234/D:\\x')",[197120]
"('Description.java', 'org.junit.runner.Description', 'methodAndClassNamePatternGroupOrDefault', '([\\s\\S]*)\\((.*)\\)', 'testIterator_FailsAtEnd(org.eclipse.jgit.util.RefMapTest)')","[21291, 21775]"
"('URIish.java', 'org.eclipse.jgit.transport.URIish', '<init>', '^(file):([\\\\/](?![\\\\/])((?:[A-Za-z]:)?[\\\\/]?(?:(?:[^\\\\/]+[\\\\/]+)*[^\\\\/]+[\\\\/]*)))$', 'file:/tmp/jgit_test_4120846694434054961_tmp/tmp_6485671899387644126/.git/')",[59755]
"('Description.java', 'org.junit.runner.Description', 'methodAndClassNamePatternGroupOrDefault', '([\\s\\S]*)\\((.*)\\)', 'testCombinedRangesInOneGroupCase1(org.eclipse.jgit.fnmatch.FileNameMatcherTest)')","[41671, 44942]"
"('Description.java', 'org.junit.runner.Description', 'methodAndClassNamePatternGroupOrDefault', '([\\s\\S]*)\\((.*)\\)', 'withMerge(org.eclipse.jgit.revwalk.RevWalkUtilsReachableTest)')","[177044, 177150]"
"('Description.java', 'org.junit.runner.Description', 'methodAndClassNamePatternGroupOrDefault', '([\\s\\S]*)\\((.*)\\)', 'testBasic(org.eclipse.jgit.attributes.AttributesMatcherTest)')","[73523, 73673]"
"('URIish.java', 'org.eclipse.jgit.transport.URIish', '<init>', '^([a-z][a-z0-9+-]+)://(?:(?:([^/:@]+)(?::([^\\\\/]+))?@)?((?:[^\\\\/:]+)|(?:\\[[0-9a-f:]+\\]))(?::(\\d+))?((?:/~(?:[^\\\\/]+))?[\\\\/]))?(.+)?$', '/tmp/jgit_test_8115236347897594923_tmp/tmp_2639625294261366337.git')",[183947]
"('URIish.java', 'org.eclipse.jgit.transport.URIish', '<init>', '^([a-z][a-z0-9+-]+)://(?:(?:([^/:@]+)(?::([^\\\\/]+))?@)?((?:[^\\\\/:]+)|(?:\\[[0-9a-f:]+\\]))(?::(\\d+))?((?:/~(?:[^\\\\/]+))?[\\\\/]))?(.+)?$', 'https://l usr\\example.com@1.2.3.4:1234//abc')",[219024]
"('URIish.java', 'org.eclipse.jgit.transport.URIish', '<init>', '^([a-z][a-z0-9+-]+)://(?:(?:([^/:@]+)(?::([^\\\\/]+))?@)?((?:[^\\\\/:]+)|(?:\\[[0-9a-f:]+\\]))(?::(\\d+))?((?:/~(?:[^\\\\/]+))?[\\\\/]))?(.+)?$', 'https://me:wtf@1.2.3.4:80/D:/x')",[204327]
"('Description.java', 'org.junit.runner.Description', 'methodAndClassNamePatternGroupOrDefault', '([\\s\\S]*)\\((.*)\\)', 'testFanoutAndLeafWithoutConflict(org.eclipse.jgit.notes.NoteMapMergerTest)')","[259590, 259961]"
"('Description.java', 'org.junit.runner.Description', 'methodAndClassNamePatternGroupOrDefault', '([\\s\\S]*)\\((.*)\\)', 'testOnlyOption_f1_10_b(org.eclipse.jgit.api.CommitOnlyTest)')","[135718, 137801]"
"('Description.java', 'org.junit.runner.Description', 'methodAndClassNamePatternGroupOrDefault', '([\\s\\S]*)\\((.*)\\)', 'testHardResetOnTag(org.eclipse.jgit.api.ResetCommandTest)')","[167461, 167813]"
"('URIish.java', 'org.eclipse.jgit.transport.URIish', 'getHumanishName', '^([\\\\/]?((?:[A-Za-z]:)?[\\\\/]?(?:(?:[^\\\\/]+[\\\\/]+)*[^\\\\/]+[\\\\/]*)))$', 'abc')",[247383]
"('FastIgnoreRule.java', 'org.eclipse.jgit.ignore.FastIgnoreRule', 'isMatch', '[^\\]]', 'x')",[99103]
"('Description.java', 'org.junit.runner.Description', 'methodAndClassNamePatternGroupOrDefault', '([\\s\\S]*)\\((.*)\\)', 'testUsingUnknownTreeFails(org.eclipse.jgit.transport.ReceivePackAdvertiseRefsHookTest)')","[183215, 183369]"
"('FastIgnoreRule.java', 'org.eclipse.jgit.ignore.FastIgnoreRule', 'isMatch', '[b-d]', 'd')",[100873]
"('URIish.java', 'org.eclipse.jgit.transport.URIish', '<init>', '^([a-z][a-z0-9+-]+)://(?:(?:([^/:@]+)(?::([^\\\\/]+))?@)?((?:[^\\\\/:]+)|(?:\\[[0-9a-f:]+\\]))(?::(\\d+))?((?:/~(?:[^\\\\/]+))?[\\\\/]))?(.+)?$', 'file:///tmp/jgit_test_1437815989145954065_tmp/tmp_9002806209384523115/.git/')",[262908]
"('Description.java', 'org.junit.runner.Description', 'methodAndClassNamePatternGroupOrDefault', '([\\s\\S]*)\\((.*)\\)', 'deleteMergedBranch_historyNotPruned(org.eclipse.jgit.internal.storage.file.GcBranchPrunedTest)')","[115347, 115411]"
"('Description.java', 'org.junit.runner.Description', 'methodAndClassNamePatternGroupOrDefault', '([\\s\\S]*)\\((.*)\\)', 'testExceptionDuringClose(org.eclipse.jgit.util.io.UnionInputStreamTest)')","[25392, 25611]"
"('URIish.java', 'org.eclipse.jgit.transport.URIish', '<init>', '^(file):([\\\\/](?![\\\\/])((?:[A-Za-z]:)?[\\\\/]?(?:(?:[^\\\\/]+[\\\\/]+)*[^\\\\/]+[\\\\/]*)))$', 'https://me@1.2.3.4:80/D:/x')",[217575]
"('Description.java', 'org.junit.runner.Description', 'methodAndClassNamePatternGroupOrDefault', '([\\s\\S]*)\\((.*)\\)', 'testBreakModify_BreakAll(org.eclipse.jgit.diff.RenameDetectorTest)')","[4792, 5362]"
"('Description.java', 'org.junit.runner.Description', 'methodAndClassNamePatternGroupOrDefault', '([\\s\\S]*)\\((.*)\\)', 'testOnlyOption_f1_6_f2_14_b(org.eclipse.jgit.api.CommitOnlyTest)')","[135613, 137691]"
"('Description.java', 'org.junit.runner.Description', 'methodAndClassNamePatternGroupOrDefault', '([\\s\\S]*)\\((.*)\\)', 'testAlphaGroupCase2[OldRule? true](org.eclipse.jgit.ignore.IgnoreRuleSpecialCasesTest)')","[89468, 96552]"
"('Description.java', 'org.junit.runner.Description', 'methodAndClassNamePatternGroupOrDefault', '([\\s\\S]*)\\((.*)\\)', 'testModifyZ(org.eclipse.jgit.api.ApplyCommandTest)')","[163840, 164081]"
"('Description.java', 'org.junit.runner.Description', 'methodAndClassNamePatternGroupOrDefault', '([\\s\\S]*)\\((.*)\\)', 'testXDigitGroupCase5[OldRule? true](org.eclipse.jgit.ignore.IgnoreRuleSpecialCasesTest)')","[91239, 98323]"
"('Description.java', 'org.junit.runner.Description', 'methodAndClassNamePatternGroupOrDefault', '([\\s\\S]*)\\((.*)\\)', 'testInvalidTagNoTagHeader3(org.eclipse.jgit.lib.ObjectCheckerTest)')","[49655, 52198]"
"('Description.java', 'org.junit.runner.Description', 'methodAndClassNamePatternGroupOrDefault', '([\\s\\S]*)\\((.*)\\)', 'org.eclipse.jgit.util.RawParseUtils_LineMapTest')","[30728, 30966]"
"('Description.java', 'org.junit.runner.Description', 'methodAndClassNamePatternGroupOrDefault', '([\\s\\S]*)\\((.*)\\)', 'org.eclipse.jgit.lib.AbbreviatedObjectIdTest')","[55126, 56224]"
"('Description.java', 'org.junit.runner.Description', 'methodAndClassNamePatternGroupOrDefault', '([\\s\\S]*)\\((.*)\\)', 'testInvalidTreeTruncatedInObjectId(org.eclipse.jgit.lib.ObjectCheckerTest)')","[48332, 50812]"
"('Description.java', 'org.junit.runner.Description', 'methodAndClassNamePatternGroupOrDefault', '([\\s\\S]*)\\((.*)\\)', 'testTrackingRefUpdateOnReject(org.eclipse.jgit.transport.PushProcessTest)')","[203245, 203789]"
"('URIish.java', 'org.eclipse.jgit.transport.URIish', '<init>', '^([a-z][a-z0-9+-]+)://(?:(?:([^/:@]+)(?::([^\\\\/]+))?@)?((?:[^\\\\/:]+)|(?:\\[[0-9a-f:]+\\]))(?::(\\d+))?((?:/~(?:[^\\\\/]+))?[\\\\/]))?(.+)?$', 'http://me:wtf@1.2.3.4:80//abc')",[200179]
"('URIish.java', 'org.eclipse.jgit.transport.URIish', '<init>', '^(file):([\\\\/](?![\\\\/])((?:[A-Za-z]:)?[\\\\/]?(?:(?:[^\\\\/]+[\\\\/]+)*[^\\\\/]+[\\\\/]*)))$', 'ssh://lusr\\example@1.2.3.4:1234/D:/x')",[209640]
"('Description.java', 'org.junit.runner.Description', 'methodAndClassNamePatternGroupOrDefault', '([\\s\\S]*)\\((.*)\\)', 'testFull_FromString(org.eclipse.jgit.lib.AbbreviatedObjectIdTest)')","[55567, 56113]"
"('URIish.java', 'org.eclipse.jgit.transport.URIish', '<init>', '^(file):([\\\\/](?![\\\\/])((?:[A-Za-z]:)?[\\\\/]?(?:(?:[^\\\\/]+[\\\\/]+)*[^\\\\/]+[\\\\/]*)))$', 'ssh+git://me:wtf@[::1]:80//abc')",[197212]
"('URIish.java', 'org.eclipse.jgit.transport.URIish', '<init>', '^(file):([\\\\/](?![\\\\/])((?:[A-Za-z]:)?[\\\\/]?(?:(?:[^\\\\/]+[\\\\/]+)*[^\\\\/]+[\\\\/]*)))$', 'file:///tmp/jgit_test_916033517641211181_tmp/tmp_6621953051006342817/.git/')",[19243]
"('Description.java', 'org.junit.runner.Description', 'methodAndClassNamePatternGroupOrDefault', '([\\s\\S]*)\\((.*)\\)', 'test6_FromString(org.eclipse.jgit.lib.AbbreviatedObjectIdTest)')","[55504, 56047]"
"('Description.java', 'org.junit.runner.Description', 'methodAndClassNamePatternGroupOrDefault', '([\\s\\S]*)\\((.*)\\)', 'testCreateFileHeader_Add(org.eclipse.jgit.diff.DiffFormatterTest)')","[2971, 3230]"
"('Description.java', 'org.junit.runner.Description', 'methodAndClassNamePatternGroupOrDefault', '([\\s\\S]*)\\((.*)\\)', 'testMaliciousAbsoluteWindowsPath2(org.eclipse.jgit.lib.DirCacheCheckoutMaliciousPathTest)')","[67180, 68097]"
"('Description.java', 'org.junit.runner.Description', 'methodAndClassNamePatternGroupOrDefault', '([\\s\\S]*)\\((.*)\\)', 'testPullWithRebaseConfig3(org.eclipse.jgit.api.PullCommandTest)')","[144504, 144845]"
"('URIish.java', 'org.eclipse.jgit.transport.URIish', '<init>', '^(file):([\\\\/](?![\\\\/])((?:[A-Za-z]:)?[\\\\/]?(?:(?:[^\\\\/]+[\\\\/]+)*[^\\\\/]+[\\\\/]*)))$', 'ssh://l usr\\example.com:wtf@[::1]:1234/D:/x')",[194076]
"('Description.java', 'org.junit.runner.Description', 'methodAndClassNamePatternGroupOrDefault', '([\\s\\S]*)\\((.*)\\)', 'test000_openrepo_default_absolute_workdirconfig(org.eclipse.jgit.internal.storage.file.T0003_BasicTest)')","[116483, 117015]"
"('Description.java', 'org.junit.runner.Description', 'methodAndClassNamePatternGroupOrDefault', '([\\s\\S]*)\\((.*)\\)', 'testRemoveLast(org.eclipse.jgit.notes.LeafBucketTest)')","[260233, 260471]"
"('URIish.java', 'org.eclipse.jgit.transport.URIish', '<init>', '^(file):([\\\\/](?![\\\\/])((?:[A-Za-z]:)?[\\\\/]?(?:(?:[^\\\\/]+[\\\\/]+)*[^\\\\/]+[\\\\/]*)))$', '/tmp/jgit_test_7458934864323210735_tmp/tmp_3824345633208984745.git')",[185329]
"('Description.java', 'org.junit.runner.Description', 'methodAndClassNamePatternGroupOrDefault', '([\\s\\S]*)\\((.*)\\)', 'testPackAllObjectsInOnePack(org.eclipse.jgit.internal.storage.file.GcBasicPackingTest)')","[113246, 113374]"
"('Description.java', 'org.junit.runner.Description', 'methodAndClassNamePatternGroupOrDefault', '([\\s\\S]*)\\((.*)\\)', 'testPathsResetWithRef(org.eclipse.jgit.api.ResetCommandTest)')","[167335, 167681]"
"('URIish.java', 'org.eclipse.jgit.transport.URIish', '<init>', '^(file):([\\\\/](?![\\\\/])((?:[A-Za-z]:)?[\\\\/]?(?:(?:[^\\\\/]+[\\\\/]+)*[^\\\\/]+[\\\\/]*)))$', 'file:///tmp/jgit_test_7469688953466028795_tmp/tmp_5564136039387254100/.git/')",[14853]
"('URIish.java', 'org.eclipse.jgit.transport.URIish', '<init>', '^(file):([\\\\/](?![\\\\/])((?:[A-Za-z]:)?[\\\\/]?(?:(?:[^\\\\/]+[\\\\/]+)*[^\\\\/]+[\\\\/]*)))$', 'ssh+git://lusr\\example@[::1]/D:\\x')","[227189, 227373]"
"('Description.java', 'org.junit.runner.Description', 'methodAndClassNamePatternGroupOrDefault', '([\\s\\S]*)\\((.*)\\)', 'testFilter_MY_ALL_And_NONE(org.eclipse.jgit.revwalk.RevWalkFilterTest)')","[180773, 181100]"
"('URIish.java', 'org.eclipse.jgit.transport.URIish', '<init>', '^([a-z][a-z0-9+-]+)://(?:(?:([^/:@]+)(?::([^\\\\/]+))?@)?((?:[^\\\\/:]+)|(?:\\[[0-9a-f:]+\\]))(?::(\\d+))?((?:/~(?:[^\\\\/]+))?[\\\\/]))?(.+)?$', 'file:///tmp/jgit_test_5135597944360628056_tmp/tmp_7197478466745448908/.git/')",[125029]
"('URIish.java', 'org.eclipse.jgit.transport.URIish', '<init>', '^([a-z][a-z0-9+-]+)://(?:(?:([^/:@]+)(?::([^\\\\/]+))?@)?((?:[^\\\\/:]+)|(?:\\[[0-9a-f:]+\\]))(?::(\\d+))?((?:/~(?:[^\\\\/]+))?[\\\\/]))?(.+)?$', 'file:///tmp/jgit_test_8392325917977493495_tmp/tmp_4924969987571419466')","[166217, 166279]"
"('Description.java', 'org.junit.runner.Description', 'methodAndClassNamePatternGroupOrDefault', '([\\s\\S]*)\\((.*)\\)', 'testRenameBranchCannotLockAFileHEADisToLockTo(org.eclipse.jgit.internal.storage.file.RefUpdateTest)')","[119781, 120610]"
"('URIish.java', 'org.eclipse.jgit.transport.URIish', '<init>', '^(file):([\\\\/](?![\\\\/])((?:[A-Za-z]:)?[\\\\/]?(?:(?:[^\\\\/]+[\\\\/]+)*[^\\\\/]+[\\\\/]*)))$', 'https://me@[::1]:1234//abc')",[217713]
"('Description.java', 'org.junit.runner.Description', 'methodAndClassNamePatternGroupOrDefault', '([\\s\\S]*)\\((.*)\\)', 'testNotBare_CreateRepositoryFromWorkDirOnly(org.eclipse.jgit.internal.storage.file.RepositorySetupWorkDirTest)')","[113943, 114200]"
"('URIish.java', 'org.eclipse.jgit.transport.URIish', '<init>', '^([a-z][a-z0-9+-]+)://(?:(?:([^/:@]+)(?::([^\\\\/]+))?@)?((?:[^\\\\/:]+)|(?:\\[[0-9a-f:]+\\]))(?::(\\d+))?((?:/~(?:[^\\\\/]+))?[\\\\/]))?(.+)?$', 'ssh://me:wtf@example.com:1234/D:/x')",[192157]
"('Description.java', 'org.junit.runner.Description', 'methodAndClassNamePatternGroupOrDefault', '([\\s\\S]*)\\((.*)\\)', 'testClear(org.eclipse.jgit.util.RefMapTest)')","[20955, 21423]"
"('URIish.java', 'org.eclipse.jgit.transport.URIish', '<init>', '^([a-z][a-z0-9+-]+)://(?:(?:([^/:@]+)(?::([^\\\\/]+))?@)?((?:[^\\\\/:]+)|(?:\\[[0-9a-f:]+\\]))(?::(\\d+))?((?:/~(?:[^\\\\/]+))?[\\\\/]))?(.+)?$', 'ssh+git://lusr\\example@example.com:1234//abc')",[212561]
"('Description.java', 'org.junit.runner.Description', 'methodAndClassNamePatternGroupOrDefault', '([\\s\\S]*)\\((.*)\\)', 'testAlias_BatchModeYes(org.eclipse.jgit.transport.OpenSshConfigTest)')","[195890, 196255]"
"('Description.java', 'org.junit.runner.Description', 'methodAndClassNamePatternGroupOrDefault', '([\\s\\S]*)\\((.*)\\)', 'testProperlyCullAllAncestors2(org.eclipse.jgit.revwalk.RevWalkCullTest)')","[179332, 179398]"
"('Description.java', 'org.junit.runner.Description', 'methodAndClassNamePatternGroupOrDefault', '([\\s\\S]*)\\((.*)\\)', 'testOnlyOption_f1_3_b(org.eclipse.jgit.api.CommitOnlyTest)')","[134668, 136701]"
"('Description.java', 'org.junit.runner.Description', 'methodAndClassNamePatternGroupOrDefault', '([\\s\\S]*)\\((.*)\\)', 'testSpecialGroupCase10[OldRule? true](org.eclipse.jgit.ignore.IgnoreRuleSpecialCasesTest)')","[88916, 96000]"
"('URIish.java', 'org.eclipse.jgit.transport.URIish', '<init>', '^(file):([\\\\/](?![\\\\/])((?:[A-Za-z]:)?[\\\\/]?(?:(?:[^\\\\/]+[\\\\/]+)*[^\\\\/]+[\\\\/]*)))$', 'file:/tmp/jgit_test_6994561984974601045_tmp/tmp_2388301606729275401/.git/')",[59078]
"('URIish.java', 'org.eclipse.jgit.transport.URIish', '<init>', '^(?:([^/:@]+)(?::([^\\\\/]+))?@)?((?:[^\\\\/:]+)|(?:\\[[0-9a-f:]+\\])):((?:(?:/~(?:[^\\\\/]+))[\\\\/])?(?:(?:[^\\\\/]+[\\\\/]+)*[^\\\\/]+[\\\\/]*))$', '/tmp/jgit_test_8705262332183795899_tmp/tmp_6035244968182702733')","[148850, 148985]"
"('URIish.java', 'org.eclipse.jgit.transport.URIish', '<init>', '^(file):([\\\\/](?![\\\\/])((?:[A-Za-z]:)?[\\\\/]?(?:(?:[^\\\\/]+[\\\\/]+)*[^\\\\/]+[\\\\/]*)))$', 'https://me:wtf@1.2.3.4:1234//')",[203591]
"('Description.java', 'org.junit.runner.Description', 'methodAndClassNamePatternGroupOrDefault', '([\\s\\S]*)\\((.*)\\)', 'testParse_implicit_UTF8_encoded(org.eclipse.jgit.revwalk.RevCommitParseTest)')","[182383, 182745]"
"('URIish.java', 'org.eclipse.jgit.transport.URIish', '<init>', '^([a-z][a-z0-9+-]+)://(?:(?:([^/:@]+)(?::([^\\\\/]+))?@)?((?:[^\\\\/:]+)|(?:\\[[0-9a-f:]+\\]))(?::(\\d+))?((?:/~(?:[^\\\\/]+))?[\\\\/]))?(.+)?$', 'ssh+git://l usr\\example.com@[::1]:80//')",[212331]
"('Description.java', 'org.junit.runner.Description', 'methodAndClassNamePatternGroupOrDefault', '([\\s\\S]*)\\((.*)\\)', 'testIncompleteRangesInOneGroupCase0[OldRule? false](org.eclipse.jgit.ignore.IgnoreRuleSpecialCasesTest)')","[86917, 94022]"
"('Description.java', 'org.junit.runner.Description', 'methodAndClassNamePatternGroupOrDefault', '([\\s\\S]*)\\((.*)\\)', 'testSetFastForwardMerge(org.eclipse.jgit.lib.ConfigTest)')","[69915, 70654]"
"('Description.java', 'org.junit.runner.Description', 'methodAndClassNamePatternGroupOrDefault', '([\\s\\S]*)\\((.*)\\)', 'testRevertDirtyWorktree(org.eclipse.jgit.api.RevertCommandTest)')","[125641, 125858]"
"('URIish.java', 'org.eclipse.jgit.transport.URIish', '<init>', '^([a-z][a-z0-9+-]+)://(?:(?:([^/:@]+)(?::([^\\\\/]+))?@)?((?:[^\\\\/:]+)|(?:\\[[0-9a-f:]+\\]))(?::(\\d+))?((?:/~(?:[^\\\\/]+))?[\\\\/]))?(.+)?$', 'ssh://lusr\\example:wtf@[::1]:1234//abc')",[195157]
"('Description.java', 'org.junit.runner.Description', 'methodAndClassNamePatternGroupOrDefault', '([\\s\\S]*)\\((.*)\\)', 'testVerySimpleGroupRangeCase5[OldRule? false](org.eclipse.jgit.ignore.IgnoreRuleSpecialCasesTest)')","[86618, 93723]"
"('Description.java', 'org.junit.runner.Description', 'methodAndClassNamePatternGroupOrDefault', '([\\s\\S]*)\\((.*)\\)', 'testGetRefs_CycleInSymbolicRef(org.eclipse.jgit.internal.storage.file.RefDirectoryTest)')","[111223, 112417]"
"('URIish.java', 'org.eclipse.jgit.transport.URIish', '<init>', '^([a-z][a-z0-9+-]+)://(?:(?:([^/:@]+)(?::([^\\\\/]+))?@)?((?:[^\\\\/:]+)|(?:\\[[0-9a-f:]+\\]))(?::(\\d+))?((?:/~(?:[^\\\\/]+))?[\\\\/]))?(.+)?$', 'file:///home/m%0ay')","[247889, 247935]"
"('Description.java', 'org.junit.runner.Description', 'methodAndClassNamePatternGroupOrDefault', '([\\s\\S]*)\\((.*)\\)', 'testTinyThinPack(org.eclipse.jgit.transport.PackParserTest)')","[218339, 218595]"
"('Description.java', 'org.junit.runner.Description', 'methodAndClassNamePatternGroupOrDefault', '([\\s\\S]*)\\((.*)\\)', 'workingDirectoryDeleteIndexAdd(org.eclipse.jgit.api.StashCreateCommandTest)')","[155967, 156310]"
"('Description.java', 'org.junit.runner.Description', 'methodAndClassNamePatternGroupOrDefault', '([\\s\\S]*)\\((.*)\\)', 'testInvalidTreeTruncatedInName(org.eclipse.jgit.lib.ObjectCheckerTest)')","[50474, 53056]"
"('FastIgnoreRule.java', 'org.eclipse.jgit.ignore.FastIgnoreRule', 'isMatch', '[\\p{Space}]', '\r')",[100326]
"('URIish.java', 'org.eclipse.jgit.transport.URIish', '<init>', '^([a-z][a-z0-9+-]+)://(?:(?:([^/:@]+)(?::([^\\\\/]+))?@)?((?:[^\\\\/:]+)|(?:\\[[0-9a-f:]+\\]))(?::(\\d+))?((?:/~(?:[^\\\\/]+))?[\\\\/]))?(.+)?$', 'ssh+git://me@[::1]//abc')","[224912, 225096]"
"('Description.java', 'org.junit.runner.Description', 'methodAndClassNamePatternGroupOrDefault', '([\\s\\S]*)\\((.*)\\)', 'testSmallObjectLoader(org.eclipse.jgit.lib.ObjectLoaderTest)')","[71452, 71540]"
"('URIish.java', 'org.eclipse.jgit.transport.URIish', '<init>', '^([a-z][a-z0-9+-]+)://(?:(?:([^/:@]+)(?::([^\\\\/]+))?@)?((?:[^\\\\/:]+)|(?:\\[[0-9a-f:]+\\]))(?::(\\d+))?((?:/~(?:[^\\\\/]+))?[\\\\/]))?(.+)?$', 'file:///tmp/jgit_test_7918567340210203710_tmp/tmp_1615893433875976443/.git/')",[125261]
"('AttributesRule.java', 'org.eclipse.jgit.attributes.AttributesRule', 'isMatch', '.*\\.st.', 'test.stp')","[73788, 73950, 74959, 75094]"
"('URIish.java', 'org.eclipse.jgit.transport.URIish', '<init>', '^(file):([\\\\/](?![\\\\/])((?:[A-Za-z]:)?[\\\\/]?(?:(?:[^\\\\/]+[\\\\/]+)*[^\\\\/]+[\\\\/]*)))$', 'file:///tmp/jgit_test_6975584198630329475_tmp/tmp_8672658496339573344')","[165618, 165675, 165732, 165789, 166077, 166134]"
"('URIish.java', 'org.eclipse.jgit.transport.URIish', '<init>', '^(file):([\\\\/](?![\\\\/])((?:[A-Za-z]:)?[\\\\/]?(?:(?:[^\\\\/]+[\\\\/]+)*[^\\\\/]+[\\\\/]*)))$', 'http://lusr\\example:wtf@example.com:80//abc')",[201996]
"('Description.java', 'org.junit.runner.Description', 'methodAndClassNamePatternGroupOrDefault', '([\\s\\S]*)\\((.*)\\)', 'testPullWithRebasePreserve1Config(org.eclipse.jgit.api.PullCommandTest)')","[144693, 145043]"
"('Description.java', 'org.junit.runner.Description', 'methodAndClassNamePatternGroupOrDefault', '([\\s\\S]*)\\((.*)\\)', 'testConfigureCache_PackedGitWindowSize_512(org.eclipse.jgit.internal.storage.file.WindowCacheReconfigureTest)')","[115535, 115683]"
"('Description.java', 'org.junit.runner.Description', 'methodAndClassNamePatternGroupOrDefault', '([\\s\\S]*)\\((.*)\\)', 'testRebaseWithUnstagedMasterChangeOtherCommit(org.eclipse.jgit.api.RebaseCommandTest)')","[131516, 133008]"
"('URIish.java', 'org.eclipse.jgit.transport.URIish', '<init>', '^(file):([\\\\/](?![\\\\/])((?:[A-Za-z]:)?[\\\\/]?(?:(?:[^\\\\/]+[\\\\/]+)*[^\\\\/]+[\\\\/]*)))$', 'ssh+git://lusr\\example:wtf@1.2.3.4:80/D:\\x')",[199144]
"('URIish.java', 'org.eclipse.jgit.transport.URIish', '<init>', '^(file):([\\\\/](?![\\\\/])((?:[A-Za-z]:)?[\\\\/]?(?:(?:[^\\\\/]+[\\\\/]+)*[^\\\\/]+[\\\\/]*)))$', 'https://l usr\\example.com:wtf@example.com:1234/D:/x')",[204856]
"('URIish.java', 'org.eclipse.jgit.transport.URIish', '<init>', '^(file):([\\\\/](?![\\\\/])((?:[A-Za-z]:)?[\\\\/]?(?:(?:[^\\\\/]+[\\\\/]+)*[^\\\\/]+[\\\\/]*)))$', 'ssh+git://l usr\\example.com@example.com:1234//')",[211388]
"('URIish.java', 'org.eclipse.jgit.transport.URIish', '<init>', '^(file):([\\\\/](?![\\\\/])((?:[A-Za-z]:)?[\\\\/]?(?:(?:[^\\\\/]+[\\\\/]+)*[^\\\\/]+[\\\\/]*)))$', 'ssh://me@1.2.3.4:80/D:/x')",[207616]
"('Description.java', 'org.junit.runner.Description', 'methodAndClassNamePatternGroupOrDefault', '([\\s\\S]*)\\((.*)\\)', 'testFileInFolderCommitted(org.eclipse.jgit.treewalk.filter.IndexDiffFilterTest)')","[264863, 265695]"
"('URIish.java', 'org.eclipse.jgit.transport.URIish', '<init>', '^([a-z][a-z0-9+-]+)://(?:(?:([^/:@]+)(?::([^\\\\/]+))?@)?((?:[^\\\\/:]+)|(?:\\[[0-9a-f:]+\\]))(?::(\\d+))?((?:/~(?:[^\\\\/]+))?[\\\\/]))?(.+)?$', 'https://lusr\\example:wtf@1.2.3.4:80/D:\\x')",[206581]
"('Description.java', 'org.junit.runner.Description', 'methodAndClassNamePatternGroupOrDefault', '([\\s\\S]*)\\((.*)\\)', 'testWordGroupCase0[OldRule? false](org.eclipse.jgit.ignore.IgnoreRuleSpecialCasesTest)')","[87814, 94919]"
"('Description.java', 'org.junit.runner.Description', 'methodAndClassNamePatternGroupOrDefault', '([\\s\\S]*)\\((.*)\\)', 'testIncompleteRangesInOneGroupCase2[OldRule? true](org.eclipse.jgit.ignore.IgnoreRuleSpecialCasesTest)')","[90526, 97610]"
"('Description.java', 'org.junit.runner.Description', 'methodAndClassNamePatternGroupOrDefault', '([\\s\\S]*)\\((.*)\\)', 'testContainsAll(org.eclipse.jgit.revwalk.RevFlagSetTest)')","[178591, 178740]"
"('Description.java', 'org.junit.runner.Description', 'methodAndClassNamePatternGroupOrDefault', '([\\s\\S]*)\\((.*)\\)', 'testWindowsReservedNames(org.eclipse.jgit.lib.ValidRefNameTest)')","[65865, 66232]"
"('Description.java', 'org.junit.runner.Description', 'methodAndClassNamePatternGroupOrDefault', '([\\s\\S]*)\\((.*)\\)', 'testMixedGroupCase4(org.eclipse.jgit.fnmatch.FileNameMatcherTest)')","[41797, 45074]"
"('Description.java', 'org.junit.runner.Description', 'methodAndClassNamePatternGroupOrDefault', '([\\s\\S]*)\\((.*)\\)', 'testSimpleStarCase2[OldRule? false](org.eclipse.jgit.ignore.IgnoreRuleSpecialCasesTest)')","[86319, 93424]"
"('URIish.java', 'org.eclipse.jgit.transport.URIish', '<init>', '^(file):([\\\\/](?![\\\\/])((?:[A-Za-z]:)?[\\\\/]?(?:(?:[^\\\\/]+[\\\\/]+)*[^\\\\/]+[\\\\/]*)))$', 'ssh://me@[::1]:1234//abc')",[207754]
"('Description.java', 'org.junit.runner.Description', 'methodAndClassNamePatternGroupOrDefault', '([\\s\\S]*)\\((.*)\\)', 'testRef_refname(org.eclipse.jgit.lib.RepositoryResolveTest)')","[71794, 72399]"
"('Description.java', 'org.junit.runner.Description', 'methodAndClassNamePatternGroupOrDefault', '([\\s\\S]*)\\((.*)\\)', 'testIncrementalBundle(org.eclipse.jgit.transport.BundleWriterTest)')","[185528, 185594]"
"('Description.java', 'org.junit.runner.Description', 'methodAndClassNamePatternGroupOrDefault', '([\\s\\S]*)\\((.*)\\)', 'test000_openrepo_default_gitDirAndWorkTreeSet(org.eclipse.jgit.internal.storage.file.T0003_BasicTest)')","[116462, 116993]"
"('URIish.java', 'org.eclipse.jgit.transport.URIish', '<init>', '^(?:([^/:@]+)(?::([^\\\\/]+))?@)?((?:[^\\\\/:]+)|(?:\\[[0-9a-f:]+\\])):((?:(?:/~(?:[^\\\\/]+))[\\\\/])?(?:(?:[^\\\\/]+[\\\\/]+)*[^\\\\/]+[\\\\/]*))$', '/tmp/jgit_test_4266839774263809352_tmp/tmp_2253646626749303486/.git')","[129593, 129735]"
"('URIish.java', 'org.eclipse.jgit.transport.URIish', '<init>', '^(file):([\\\\/](?![\\\\/])((?:[A-Za-z]:)?[\\\\/]?(?:(?:[^\\\\/]+[\\\\/]+)*[^\\\\/]+[\\\\/]*)))$', 'https://me:wtf@1.2.3.4:1234/D:\\x')",[203990]
"('Description.java', 'org.junit.runner.Description', 'methodAndClassNamePatternGroupOrDefault', '([\\s\\S]*)\\((.*)\\)', 'testGraphGroupCase3[OldRule? false](org.eclipse.jgit.ignore.IgnoreRuleSpecialCasesTest)')","[85445, 92550]"
"('Description.java', 'org.junit.runner.Description', 'methodAndClassNamePatternGroupOrDefault', '([\\s\\S]*)\\((.*)\\)', 'checkForCorrectIndex(org.eclipse.jgit.merge.ResolveMergerTest)')","[12906, 13236]"
"('URIish.java', 'org.eclipse.jgit.transport.URIish', '<init>', '^([a-z][a-z0-9+-]+)://(?:(?:([^/:@]+)(?::([^\\\\/]+))?@)?((?:[^\\\\/:]+)|(?:\\[[0-9a-f:]+\\]))(?::(\\d+))?((?:/~(?:[^\\\\/]+))?[\\\\/]))?(.+)?$', 'ssh+git://lusr\\example@example.com:80//abc')",[212745]
"('URIish.java', 'org.eclipse.jgit.transport.URIish', '<init>', '^([a-z][a-z0-9+-]+)://(?:(?:([^/:@]+)(?::([^\\\\/]+))?@)?((?:[^\\\\/:]+)|(?:\\[[0-9a-f:]+\\]))(?::(\\d+))?((?:/~(?:[^\\\\/]+))?[\\\\/]))?(.+)?$', 'file:///tmp/jgit_test_1848736545095559723_tmp/tmp_623829252570834949/.git/')",[17758]
"('Description.java', 'org.junit.runner.Description', 'methodAndClassNamePatternGroupOrDefault', '([\\s\\S]*)\\((.*)\\)', 'testCrissCross(org.eclipse.jgit.revwalk.RevWalkMergeBaseTest)')","[177869, 178001]"
"('Description.java', 'org.junit.runner.Description', 'methodAndClassNamePatternGroupOrDefault', '([\\s\\S]*)\\((.*)\\)', 'testACommitWithSubjectBodyBugLineWithASpaceAndSob(org.eclipse.jgit.util.ChangeIdUtilTest)')","[31993, 32745]"
"('Description.java', 'org.junit.runner.Description', 'methodAndClassNamePatternGroupOrDefault', '([\\s\\S]*)\\((.*)\\)', 'testMergeConflictWithMessageOption(org.eclipse.jgit.api.MergeCommandTest)')","[126559, 127483]"
"('Description.java', 'org.junit.runner.Description', 'methodAndClassNamePatternGroupOrDefault', '([\\s\\S]*)\\((.*)\\)', 'testEmpty(org.eclipse.jgit.util.io.EolCanonicalizingInputStreamTest)')","[24864, 25012]"
"('Description.java', 'org.junit.runner.Description', 'methodAndClassNamePatternGroupOrDefault', '([\\s\\S]*)\\((.*)\\)', 'testPackFormat_DeltaNotAllowed(org.eclipse.jgit.internal.storage.file.UnpackedObjectTest)')","[121748, 122073]"
"('Description.java', 'org.junit.runner.Description', 'methodAndClassNamePatternGroupOrDefault', '([\\s\\S]*)\\((.*)\\)', 'testWildmatch[OldRule? false](org.eclipse.jgit.ignore.FastIgnoreRuleTest)')","[77058, 77815]"
"('Description.java', 'org.junit.runner.Description', 'methodAndClassNamePatternGroupOrDefault', '([\\s\\S]*)\\((.*)\\)', 'testDeleteEmptyTagNames(org.eclipse.jgit.api.TagCommandTest)')","[157532, 157832]"
"('Description.java', 'org.junit.runner.Description', 'methodAndClassNamePatternGroupOrDefault', '([\\s\\S]*)\\((.*)\\)', 'testCloneRepositoryWithBranchShortName(org.eclipse.jgit.api.CloneCommandTest)')","[158947, 159245]"
"('URIish.java', 'org.eclipse.jgit.transport.URIish', '<init>', '^([a-z][a-z0-9+-]+)://(?:(?:([^/:@]+)(?::([^\\\\/]+))?@)?((?:[^\\\\/:]+)|(?:\\[[0-9a-f:]+\\]))(?::(\\d+))?((?:/~(?:[^\\\\/]+))?[\\\\/]))?(.+)?$', 'http://l usr\\example.com:wtf@1.2.3.4:80/D:\\x')",[201375]
"('Description.java', 'org.junit.runner.Description', 'methodAndClassNamePatternGroupOrDefault', '([\\s\\S]*)\\((.*)\\)', 'org.eclipse.jgit.api.RenameBranchCommandTest')","[158358, 158553]"
"('Description.java', 'org.junit.runner.Description', 'methodAndClassNamePatternGroupOrDefault', '([\\s\\S]*)\\((.*)\\)', 'testWordGroupCase4[OldRule? true](org.eclipse.jgit.ignore.IgnoreRuleSpecialCasesTest)')","[91469, 98553]"
"('FastIgnoreRule.java', 'org.eclipse.jgit.ignore.FastIgnoreRule', 'isMatch', '..', 'abc')",[99233]
"('URIish.java', 'org.eclipse.jgit.transport.URIish', '<init>', '^(file):([\\\\/](?![\\\\/])((?:[A-Za-z]:)?[\\\\/]?(?:(?:[^\\\\/]+[\\\\/]+)*[^\\\\/]+[\\\\/]*)))$', 'ssh+git://me:wtf@example.com:1234/D:/x')",[195548]
"('Description.java', 'org.junit.runner.Description', 'methodAndClassNamePatternGroupOrDefault', '([\\s\\S]*)\\((.*)\\)', 'testGetEntryContentLength(org.eclipse.jgit.treewalk.FileTreeIteratorTest)')","[262271, 262622]"
"('Description.java', 'org.junit.runner.Description', 'methodAndClassNamePatternGroupOrDefault', '([\\s\\S]*)\\((.*)\\)', 'testInt16(org.eclipse.jgit.util.RawParseUtils_HexParseTest)')","[31023, 31087]"
"('Description.java', 'org.junit.runner.Description', 'methodAndClassNamePatternGroupOrDefault', '([\\s\\S]*)\\((.*)\\)', 'testTypes(org.eclipse.jgit.patch.EditListTest)')","[57, 121]"
"('Description.java', 'org.junit.runner.Description', 'methodAndClassNamePatternGroupOrDefault', '([\\s\\S]*)\\((.*)\\)', 'noLocalChanges(org.eclipse.jgit.api.StashCreateCommandTest)')","[156114, 156464]"
"('Description.java', 'org.junit.runner.Description', 'methodAndClassNamePatternGroupOrDefault', '([\\s\\S]*)\\((.*)\\)', 'testTimeout_readBuffer_Success1(org.eclipse.jgit.util.io.TimeoutInputStreamTest)')","[24120, 24294]"
"('Description.java', 'org.junit.runner.Description', 'methodAndClassNamePatternGroupOrDefault', '([\\s\\S]*)\\((.*)\\)', 'resolveUpstream(org.eclipse.jgit.lib.RepositoryResolveTest)')","[71269, 72091]"
"('URIish.java', 'org.eclipse.jgit.transport.URIish', '<init>', '^(file):([\\\\/](?![\\\\/])((?:[A-Za-z]:)?[\\\\/]?(?:(?:[^\\\\/]+[\\\\/]+)*[^\\\\/]+[\\\\/]*)))$', 'https://lusr\\example@example.com:80//')",[219875]
"('URIish.java', 'org.eclipse.jgit.transport.URIish', '<init>', '^(file):([\\\\/](?![\\\\/])((?:[A-Za-z]:)?[\\\\/]?(?:(?:[^\\\\/]+[\\\\/]+)*[^\\\\/]+[\\\\/]*)))$', '/tmp/jgit_test_4807633653944290416_tmp/tmp_5972304591781699420/.git')","[130101, 130235]"
"('Description.java', 'org.junit.runner.Description', 'methodAndClassNamePatternGroupOrDefault', '([\\s\\S]*)\\((.*)\\)', 'org.eclipse.jgit.api.DescribeCommandTest')","[128171, 128452]"
"('FastIgnoreRule.java', 'org.eclipse.jgit.ignore.FastIgnoreRule', 'isMatch', '..', 'a')",[99181]
"('Description.java', 'org.junit.runner.Description', 'methodAndClassNamePatternGroupOrDefault', '([\\s\\S]*)\\((.*)\\)', 'test000_openrepo_default_workDirSet(org.eclipse.jgit.internal.storage.file.T0003_BasicTest)')","[116861, 117411]"
"('Description.java', 'org.junit.runner.Description', 'methodAndClassNamePatternGroupOrDefault', '([\\s\\S]*)\\((.*)\\)', 'testNotIgnoreNonExistingObjects(org.eclipse.jgit.internal.storage.file.PackWriterTest)')","[117950, 118409]"
"('Description.java', 'org.junit.runner.Description', 'methodAndClassNamePatternGroupOrDefault', '([\\s\\S]*)\\((.*)\\)', 'testManySolutionsCase1[OldRule? true](org.eclipse.jgit.ignore.IgnoreRuleSpecialCasesTest)')","[90710, 97794]"
"('Description.java', 'org.junit.runner.Description', 'methodAndClassNamePatternGroupOrDefault', '([\\s\\S]*)\\((.*)\\)', 'testNoNewLine1(org.eclipse.jgit.diff.DiffFormatterReflowTest)')","[8094, 8313]"
"('URIish.java', 'org.eclipse.jgit.transport.URIish', '<init>', '^(file):([\\\\/](?![\\\\/])((?:[A-Za-z]:)?[\\\\/]?(?:(?:[^\\\\/]+[\\\\/]+)*[^\\\\/]+[\\\\/]*)))$', 'ssh://l usr\\example.com:wtf@[::1]:80//abc')",[194214]
"('URIish.java', 'org.eclipse.jgit.transport.URIish', '<init>', '^([a-z][a-z0-9+-]+)://(?:(?:([^/:@]+)(?::([^\\\\/]+))?@)?((?:[^\\\\/:]+)|(?:\\[[0-9a-f:]+\\]))(?::(\\d+))?((?:/~(?:[^\\\\/]+))?[\\\\/]))?(.+)?$', 'ssh+git://l usr\\example.com@[::1]:1234//abc')",[212193]
"('Description.java', 'org.junit.runner.Description', 'methodAndClassNamePatternGroupOrDefault', '([\\s\\S]*)\\((.*)\\)', 'testAddIfAbsentGrowsWithObjects(org.eclipse.jgit.lib.ObjectIdOwnerMapTest)')","[59507, 59658]"
"('URIish.java', 'org.eclipse.jgit.transport.URIish', '<init>', '^(file):([\\\\/](?![\\\\/])((?:[A-Za-z]:)?[\\\\/]?(?:(?:[^\\\\/]+[\\\\/]+)*[^\\\\/]+[\\\\/]*)))$', 'ssh+git://lusr\\example:wtf@example.com:1234/D:\\x')",[198592]
"('Description.java', 'org.junit.runner.Description', 'methodAndClassNamePatternGroupOrDefault', '([\\s\\S]*)\\((.*)\\)', 'testMixedGroupCase1[OldRule? true](org.eclipse.jgit.ignore.IgnoreRuleSpecialCasesTest)')","[88709, 95793]"
"('URIish.java', 'org.eclipse.jgit.transport.URIish', '<init>', '^([a-z][a-z0-9+-]+)://(?:(?:([^/:@]+)(?::([^\\\\/]+))?@)?((?:[^\\\\/:]+)|(?:\\[[0-9a-f:]+\\]))(?::(\\d+))?((?:/~(?:[^\\\\/]+))?[\\\\/]))?(.+)?$', 'https://lusr\\example@[::1]:80/D:\\x')",[220772]
"('URIish.java', 'org.eclipse.jgit.transport.URIish', '<init>', '^(file):([\\\\/](?![\\\\/])((?:[A-Za-z]:)?[\\\\/]?(?:(?:[^\\\\/]+[\\\\/]+)*[^\\\\/]+[\\\\/]*)))$', 'file:///tmp/jgit_test_7011585186404647018_tmp/tmp_336296750021107928.git/')","[143733, 143788]"
"('URIish.java', 'org.eclipse.jgit.transport.URIish', '<init>', '^([a-z][a-z0-9+-]+)://(?:(?:([^/:@]+)(?::([^\\\\/]+))?@)?((?:[^\\\\/:]+)|(?:\\[[0-9a-f:]+\\]))(?::(\\d+))?((?:/~(?:[^\\\\/]+))?[\\\\/]))?(.+)?$', 'https://l usr\\example.com:wtf@[::1]:80/D:/x')",[205799]
"('Description.java', 'org.junit.runner.Description', 'methodAndClassNamePatternGroupOrDefault', '([\\s\\S]*)\\((.*)\\)', 'testLeadingWhitespaces(org.eclipse.jgit.storage.file.FileBasedConfigTest)')","[48080, 48165]"
"('URIish.java', 'org.eclipse.jgit.transport.URIish', '<init>', '^([a-z][a-z0-9+-]+)://(?:(?:([^/:@]+)(?::([^\\\\/]+))?@)?((?:[^\\\\/:]+)|(?:\\[[0-9a-f:]+\\]))(?::(\\d+))?((?:/~(?:[^\\\\/]+))?[\\\\/]))?(.+)?$', 'ssh+git://l usr\\example.com:wtf@example.com:80/D:/x')",[197649]
"('URIish.java', 'org.eclipse.jgit.transport.URIish', '<init>', '^(?:([^/:@]+)(?::([^\\\\/]+))?@)?([^\\\\/:]{2,}):([\\\\/](?:(?:[^\\\\/]+[\\\\/]+)*[^\\\\/]+[\\\\/]*))$', '/tmp/jgit_test_2155224643509466025_tmp/tmp_5834574717535685926.git')",[188065]
"('URIish.java', 'org.eclipse.jgit.transport.URIish', '<init>', '^([a-z][a-z0-9+-]+)://(?:(?:([^/:@]+)(?::([^\\\\/]+))?@)?((?:[^\\\\/:]+)|(?:\\[[0-9a-f:]+\\]))(?::(\\d+))?((?:/~(?:[^\\\\/]+))?[\\\\/]))?(.+)?$', 'ssh://me:wtf@example.com:80//')",[192249]
"('Description.java', 'org.junit.runner.Description', 'methodAndClassNamePatternGroupOrDefault', '([\\s\\S]*)\\((.*)\\)', 'testEmpty(org.eclipse.jgit.util.RefListTest)')","[19928, 20418]"
"('Description.java', 'org.junit.runner.Description', 'methodAndClassNamePatternGroupOrDefault', '([\\s\\S]*)\\((.*)\\)', 'testWordGroupCase5[OldRule? false](org.eclipse.jgit.ignore.IgnoreRuleSpecialCasesTest)')","[87929, 95034]"
"('Description.java', 'org.junit.runner.Description', 'methodAndClassNamePatternGroupOrDefault', '([\\s\\S]*)\\((.*)\\)', 'multiplePushInsteadOf(org.eclipse.jgit.transport.RemoteConfigTest)')","[253170, 253717]"
"('Description.java', 'org.junit.runner.Description', 'methodAndClassNamePatternGroupOrDefault', '([\\s\\S]*)\\((.*)\\)', 'testMaxObjectSizeDeltaBlock(org.eclipse.jgit.transport.PackParserTest)')","[218360, 218617]"
"('Description.java', 'org.junit.runner.Description', 'methodAndClassNamePatternGroupOrDefault', '([\\s\\S]*)\\((.*)\\)', 'testTwoRenames(org.eclipse.jgit.api.BlameCommandTest)')","[139862, 140252]"
"('Description.java', 'org.junit.runner.Description', 'methodAndClassNamePatternGroupOrDefault', '([\\s\\S]*)\\((.*)\\)', 'repositoryWithRootLevelSubmodule(org.eclipse.jgit.submodule.SubmoduleWalkTest)')","[17196, 17392]"
"('FastIgnoreRule.java', 'org.eclipse.jgit.ignore.FastIgnoreRule', 'isMatch', '.r[a-c]', 'era')","[107642, 107670]"
"('URIish.java', 'org.eclipse.jgit.transport.URIish', '<init>', '^([a-z][a-z0-9+-]+)://(?:(?:([^/:@]+)(?::([^\\\\/]+))?@)?((?:[^\\\\/:]+)|(?:\\[[0-9a-f:]+\\]))(?::(\\d+))?((?:/~(?:[^\\\\/]+))?[\\\\/]))?(.+)?$', 'https://me:wtf@[::1]:1234/D:/x')",[204511]
"('URIish.java', 'org.eclipse.jgit.transport.URIish', '<init>', '^([\\\\/]?((?:[A-Za-z]:)?[\\\\/]?(?:(?:[^\\\\/]+[\\\\/]+)*[^\\\\/]+[\\\\/]*)))$', '/tmp/jgit_test_5912311065364399188_tmp/tmp_6780050081060399522')","[151525, 151670, 151820, 151970]"
"('Description.java', 'org.junit.runner.Description', 'methodAndClassNamePatternGroupOrDefault', '([\\s\\S]*)\\((.*)\\)', 'testCreateFileHeader_Modify(org.eclipse.jgit.diff.DiffFormatterTest)')","[2823, 3098]"
"('Description.java', 'org.junit.runner.Description', 'methodAndClassNamePatternGroupOrDefault', '([\\s\\S]*)\\((.*)\\)', 'testCommonScore_EmptyFiles(org.eclipse.jgit.diff.SimilarityIndexTest)')","[11407, 11578]"
"('Description.java', 'org.junit.runner.Description', 'methodAndClassNamePatternGroupOrDefault', '([\\s\\S]*)\\((.*)\\)', 'testDigitGroupCase0[OldRule? false](org.eclipse.jgit.ignore.IgnoreRuleSpecialCasesTest)')","[86365, 93470]"
"('Description.java', 'org.junit.runner.Description', 'methodAndClassNamePatternGroupOrDefault', '([\\s\\S]*)\\((.*)\\)', 'testCompareEntriesOffsetsWithFindOffsets(org.eclipse.jgit.internal.storage.file.PackIndexV2Test)')","[114641, 114773]"
"('Description.java', 'org.junit.runner.Description', 'methodAndClassNamePatternGroupOrDefault', '([\\s\\S]*)\\((.*)\\)', 'testDigitGroupCase2[OldRule? false](org.eclipse.jgit.ignore.IgnoreRuleSpecialCasesTest)')","[86411, 93516]"
"('Description.java', 'org.junit.runner.Description', 'methodAndClassNamePatternGroupOrDefault', '([\\s\\S]*)\\((.*)\\)', 'org.eclipse.jgit.lib.IndexDiffSubmoduleTest')","[56260, 63842]"
"('URIish.java', 'org.eclipse.jgit.transport.URIish', '<init>', '^(file):([\\\\/](?![\\\\/])((?:[A-Za-z]:)?[\\\\/]?(?:(?:[^\\\\/]+[\\\\/]+)*[^\\\\/]+[\\\\/]*)))$', 'ssh+git://me@example.com//abc')","[224153, 224337]"
"('Description.java', 'org.junit.runner.Description', 'methodAndClassNamePatternGroupOrDefault', '([\\s\\S]*)\\((.*)\\)', 'org.eclipse.jgit.notes.NoteMapMergerTest')","[259296, 265806]"
"('Description.java', 'org.junit.runner.Description', 'methodAndClassNamePatternGroupOrDefault', '([\\s\\S]*)\\((.*)\\)', 'testCheckoutOutChanges(org.eclipse.jgit.lib.DirCacheCheckoutTest)')","[61146, 62131]"
"('Description.java', 'org.junit.runner.Description', 'methodAndClassNamePatternGroupOrDefault', '([\\s\\S]*)\\((.*)\\)', 'org.eclipse.jgit.internal.storage.file.RepositorySetupWorkDirTest')","[113838, 114377]"
"('Description.java', 'org.junit.runner.Description', 'methodAndClassNamePatternGroupOrDefault', '([\\s\\S]*)\\((.*)\\)', 'testPackRepoWithNoRefs(org.eclipse.jgit.internal.storage.file.GcBasicPackingTest)')","[113288, 113418]"
"('URIish.java', 'org.eclipse.jgit.transport.URIish', '<init>', '^([a-z][a-z0-9+-]+)://(?:(?:([^/:@]+)(?::([^\\\\/]+))?@)?((?:[^\\\\/:]+)|(?:\\[[0-9a-f:]+\\]))(?::(\\d+))?((?:/~(?:[^\\\\/]+))?[\\\\/]))?(.+)?$', 'file:///tmp/jgit_test_3353191491242534664_tmp/tmp_6009797392716155554/.git/')",[123633]
"('URIish.java', 'org.eclipse.jgit.transport.URIish', '<init>', '^([a-z][a-z0-9+-]+)://(?:(?:([^/:@]+)(?::([^\\\\/]+))?@)?((?:[^\\\\/:]+)|(?:\\[[0-9a-f:]+\\]))(?::(\\d+))?((?:/~(?:[^\\\\/]+))?[\\\\/]))?(.+)?$', 'http://user:secret@host.xy:80/some%2Fpath')","[250350, 250396]"
"('URIish.java', 'org.eclipse.jgit.transport.URIish', '<init>', '^([a-z][a-z0-9+-]+)://(?:(?:([^/:@]+)(?::([^\\\\/]+))?@)?((?:[^\\\\/:]+)|(?:\\[[0-9a-f:]+\\]))(?::(\\d+))?((?:/~(?:[^\\\\/]+))?[\\\\/]))?(.+)?$', '/tmp/jgit_test_622044983367939275_tmp/tmp_3909595270568668392')","[148101, 148231, 148502]"
"('FastIgnoreRule.java', 'org.eclipse.jgit.ignore.FastIgnoreRule', 'isMatch', 'a.', 'c')","[82266, 82320, 82374, 82455, 83732, 83813, 83894, 83975]"
"('Description.java', 'org.junit.runner.Description', 'methodAndClassNamePatternGroupOrDefault', '([\\s\\S]*)\\((.*)\\)', 'testTwoRangesInOneGroupCase0[OldRule? false](org.eclipse.jgit.ignore.IgnoreRuleSpecialCasesTest)')","[87952, 95057]"
"('URIish.java', 'org.eclipse.jgit.transport.URIish', '<init>', '^(file):([\\\\/](?![\\\\/])((?:[A-Za-z]:)?[\\\\/]?(?:(?:[^\\\\/]+[\\\\/]+)*[^\\\\/]+[\\\\/]*)))$', 'ssh://l usr\\example.com:wtf@[::1]:80/D:/x')",[194260]
"('Description.java', 'org.junit.runner.Description', 'methodAndClassNamePatternGroupOrDefault', '([\\s\\S]*)\\((.*)\\)', 'crissCrossMerge_checkOtherFiles(org.eclipse.jgit.merge.RecursiveMergerTest)')","[15204, 15358]"
"('URIish.java', 'org.eclipse.jgit.transport.URIish', '<init>', '^([a-z][a-z0-9+-]+)://(?:(?:([^/:@]+)(?::([^\\\\/]+))?@)?((?:[^\\\\/:]+)|(?:\\[[0-9a-f:]+\\]))(?::(\\d+))?((?:/~(?:[^\\\\/]+))?[\\\\/]))?(.+)?$', 'https://l usr\\example.com:wtf@1.2.3.4:1234/D:\\x')",[205293]
"('Description.java', 'org.junit.runner.Description', 'methodAndClassNamePatternGroupOrDefault', '([\\s\\S]*)\\((.*)\\)', 'testLongPaths(org.eclipse.jgit.treewalk.filter.PathFilterGroupTest)')","[266328, 266481]"
"('Description.java', 'org.junit.runner.Description', 'methodAndClassNamePatternGroupOrDefault', '([\\s\\S]*)\\((.*)\\)', 'testRenameBranchCannotLockAFileHEADisOtherLockFrom(org.eclipse.jgit.internal.storage.file.RefUpdateTest)')","[119760, 120588]"
"('URIish.java', 'org.eclipse.jgit.transport.URIish', '<init>', '^([a-z][a-z0-9+-]+)://(?:(?:([^/:@]+)(?::([^\\\\/]+))?@)?((?:[^\\\\/:]+)|(?:\\[[0-9a-f:]+\\]))(?::(\\d+))?((?:/~(?:[^\\\\/]+))?[\\\\/]))?(.+)?$', 'ssh://l usr\\example.com@1.2.3.4/D:\\x')","[222428, 222612]"
"('Description.java', 'org.junit.runner.Description', 'methodAndClassNamePatternGroupOrDefault', '([\\s\\S]*)\\((.*)\\)', 'testObjectMovedWithinPack(org.eclipse.jgit.internal.storage.file.ConcurrentRepackTest)')","[122326, 122414]"
"('Description.java', 'org.junit.runner.Description', 'methodAndClassNamePatternGroupOrDefault', '([\\s\\S]*)\\((.*)\\)', 'testMixedResetRetainsSizeAndModifiedTime(org.eclipse.jgit.api.ResetCommandTest)')","[167230, 167571]"
"('Description.java', 'org.junit.runner.Description', 'methodAndClassNamePatternGroupOrDefault', '([\\s\\S]*)\\((.*)\\)', 'testAlnumGroupCase1[OldRule? false](org.eclipse.jgit.ignore.IgnoreRuleSpecialCasesTest)')","[87768, 94873]"
"('URIish.java', 'org.eclipse.jgit.transport.URIish', '<init>', '^(file):([\\\\/](?![\\\\/])((?:[A-Za-z]:)?[\\\\/]?(?:(?:[^\\\\/]+[\\\\/]+)*[^\\\\/]+[\\\\/]*)))$', 'file:///tmp/jgit_test_3191652883693208135_tmp/tmp_7162045041867769283/.git/')",[158038]
"('URIish.java', 'org.eclipse.jgit.transport.URIish', '<init>', '^(file):([\\\\/](?![\\\\/])((?:[A-Za-z]:)?[\\\\/]?(?:(?:[^\\\\/]+[\\\\/]+)*[^\\\\/]+[\\\\/]*)))$', 'http://l usr\\example.com@1.2.3.4:80//')",[215252]
"('URIish.java', 'org.eclipse.jgit.transport.URIish', '<init>', '^(file):([\\\\/](?![\\\\/])((?:[A-Za-z]:)?[\\\\/]?(?:(?:[^\\\\/]+[\\\\/]+)*[^\\\\/]+[\\\\/]*)))$', 'ssh://lusr\\example@[::1]//')","[223739, 223923]"
"('Description.java', 'org.junit.runner.Description', 'methodAndClassNamePatternGroupOrDefault', '([\\s\\S]*)\\((.*)\\)', 'testInvalidCommitInvalidTree3(org.eclipse.jgit.lib.ObjectCheckerTest)')","[48605, 51098]"
"('Description.java', 'org.junit.runner.Description', 'methodAndClassNamePatternGroupOrDefault', '([\\s\\S]*)\\((.*)\\)', 'testGetRefs_DeatchedHead2(org.eclipse.jgit.internal.storage.file.RefDirectoryTest)')","[110971, 112153]"
"('AttributesRule.java', 'org.eclipse.jgit.attributes.AttributesRule', 'isMatch', '.r[a-c]', 'crg')",[76859]
"('Description.java', 'org.junit.runner.Description', 'methodAndClassNamePatternGroupOrDefault', '([\\s\\S]*)\\((.*)\\)', 'testMergeInItself(org.eclipse.jgit.api.MergeCommandTest)')","[126538, 127461]"
"('Description.java', 'org.junit.runner.Description', 'methodAndClassNamePatternGroupOrDefault', '([\\s\\S]*)\\((.*)\\)', 'testParseFive(org.eclipse.jgit.notes.LeafBucketTest)')","[260149, 260383]"
"('Description.java', 'org.junit.runner.Description', 'methodAndClassNamePatternGroupOrDefault', '([\\s\\S]*)\\((.*)\\)', 'repositoryWithNoHeadInSubmodule(org.eclipse.jgit.submodule.SubmoduleStatusTest)')","[18739, 18888]"
"('URIish.java', 'org.eclipse.jgit.transport.URIish', '<init>', '^(file):([\\\\/](?![\\\\/])((?:[A-Za-z]:)?[\\\\/]?(?:(?:[^\\\\/]+[\\\\/]+)*[^\\\\/]+[\\\\/]*)))$', '/tmp/jgit_test_4639109472720102754_tmp/tmp_8101730606670789681')","[151164, 151289]"
"('Description.java', 'org.junit.runner.Description', 'methodAndClassNamePatternGroupOrDefault', '([\\s\\S]*)\\((.*)\\)', 'org.eclipse.jgit.attributes.AttributeNodeTest')","[72912, 73193]"
"('URIish.java', 'org.eclipse.jgit.transport.URIish', '<init>', '^([a-z][a-z0-9+-]+)://(?:(?:([^/:@]+)(?::([^\\\\/]+))?@)?((?:[^\\\\/:]+)|(?:\\[[0-9a-f:]+\\]))(?::(\\d+))?((?:/~(?:[^\\\\/]+))?[\\\\/]))?(.+)?$', 'https://lusr\\example@example.com:80//abc')",[219944]
"('URIish.java', 'org.eclipse.jgit.transport.URIish', '<init>', '^([a-z][a-z0-9+-]+)://(?:(?:([^/:@]+)(?::([^\\\\/]+))?@)?((?:[^\\\\/:]+)|(?:\\[[0-9a-f:]+\\]))(?::(\\d+))?((?:/~(?:[^\\\\/]+))?[\\\\/]))?(.+)?$', 'https://lusr\\example@[::1]//')","[233698, 233882]"
"('Description.java', 'org.junit.runner.Description', 'methodAndClassNamePatternGroupOrDefault', '([\\s\\S]*)\\((.*)\\)', 'testFileModeMerge(org.eclipse.jgit.api.MergeCommandTest)')","[126391, 127307]"
"('Description.java', 'org.junit.runner.Description', 'methodAndClassNamePatternGroupOrDefault', '([\\s\\S]*)\\((.*)\\)', 'testCopyMetaDataWithoutStage(org.eclipse.jgit.dircache.DirCacheEntryTest)')","[172706, 172837]"
"('Description.java', 'org.junit.runner.Description', 'methodAndClassNamePatternGroupOrDefault', '([\\s\\S]*)\\((.*)\\)', 'testSegmentsDoNotMatch[OldRule? true](org.eclipse.jgit.ignore.FastIgnoreRuleTest)')","[77654, 78390]"
"('URIish.java', 'org.eclipse.jgit.transport.URIish', '<init>', '^([a-z][a-z0-9+-]+)://(?:(?:([^/:@]+)(?::([^\\\\/]+))?@)?((?:[^\\\\/:]+)|(?:\\[[0-9a-f:]+\\]))(?::(\\d+))?((?:/~(?:[^\\\\/]+))?[\\\\/]))?(.+)?$', 'ssh://me:wtf@example.com:1234/D:\\x')",[192203]
"('Description.java', 'org.junit.runner.Description', 'methodAndClassNamePatternGroupOrDefault', '([\\s\\S]*)\\((.*)\\)', 'testEmpty(org.eclipse.jgit.revwalk.AlwaysEmptyRevQueueTest)')","[175926, 175991]"
"('Description.java', 'org.junit.runner.Description', 'methodAndClassNamePatternGroupOrDefault', '([\\s\\S]*)\\((.*)\\)', 'testWordroupCase1(org.eclipse.jgit.fnmatch.FileNameMatcherTest)')","[44128, 47516]"
"('Description.java', 'org.junit.runner.Description', 'methodAndClassNamePatternGroupOrDefault', '([\\s\\S]*)\\((.*)\\)', 'multipleEdits(org.eclipse.jgit.api.StashCreateCommandTest)')","[155883, 156222]"
"('URIish.java', 'org.eclipse.jgit.transport.URIish', '<init>', '^([a-z][a-z0-9+-]+)://(?:(?:([^/:@]+)(?::([^\\\\/]+))?@)?((?:[^\\\\/:]+)|(?:\\[[0-9a-f:]+\\]))(?::(\\d+))?((?:/~(?:[^\\\\/]+))?[\\\\/]))?(.+)?$', 'ssh://lusr\\example@example.com:80//')",[209387]
"('URIish.java', 'org.eclipse.jgit.transport.URIish', '<init>', '^(file):([\\\\/](?![\\\\/])((?:[A-Za-z]:)?[\\\\/]?(?:(?:[^\\\\/]+[\\\\/]+)*[^\\\\/]+[\\\\/]*)))$', 'ssh://me@example.com:1234/D:\\x')",[207110]
"('URIish.java', 'org.eclipse.jgit.transport.URIish', '<init>', '^(file):([\\\\/](?![\\\\/])((?:[A-Za-z]:)?[\\\\/]?(?:(?:[^\\\\/]+[\\\\/]+)*[^\\\\/]+[\\\\/]*)))$', 'https://me:wtf@1.2.3.4:80//abc')",[204258]
"('Description.java', 'org.junit.runner.Description', 'methodAndClassNamePatternGroupOrDefault', '([\\s\\S]*)\\((.*)\\)', 'org.eclipse.jgit.lib.ObjectIdSubclassMapTest')","[63878, 64202]"
"('URIish.java', 'org.eclipse.jgit.transport.URIish', '<init>', '^(file):([\\\\/](?![\\\\/])((?:[A-Za-z]:)?[\\\\/]?(?:(?:[^\\\\/]+[\\\\/]+)*[^\\\\/]+[\\\\/]*)))$', '/tmp/jgit_test_982072369712344218_tmp/tmp_4000253905304581205')","[152424, 152549, 152695]"
"('URIish.java', 'org.eclipse.jgit.transport.URIish', '<init>', '^([a-z][a-z0-9+-]+)://(?:(?:([^/:@]+)(?::([^\\\\/]+))?@)?((?:[^\\\\/:]+)|(?:\\[[0-9a-f:]+\\]))(?::(\\d+))?((?:/~(?:[^\\\\/]+))?[\\\\/]))?(.+)?$', 'https://lusr\\example@example.com:1234/D:/x')",[219806]
"('Description.java', 'org.junit.runner.Description', 'methodAndClassNamePatternGroupOrDefault', '([\\s\\S]*)\\((.*)\\)', 'testWildcardMirror(org.eclipse.jgit.transport.RefSpecTest)')","[186780, 187511]"
"('URIish.java', 'org.eclipse.jgit.transport.URIish', '<init>', '^(file):([\\\\/](?![\\\\/])((?:[A-Za-z]:)?[\\\\/]?(?:(?:[^\\\\/]+[\\\\/]+)*[^\\\\/]+[\\\\/]*)))$', 'user@repo.or.cz:/srv/git/egit.git')",[257781]
"('URIish.java', 'org.eclipse.jgit.transport.URIish', '<init>', '^(file):([\\\\/](?![\\\\/])((?:[A-Za-z]:)?[\\\\/]?(?:(?:[^\\\\/]+[\\\\/]+)*[^\\\\/]+[\\\\/]*)))$', 'http://l usr\\example.com@[::1]//abc')","[229305, 229489]"
"('Description.java', 'org.junit.runner.Description', 'methodAndClassNamePatternGroupOrDefault', '([\\s\\S]*)\\((.*)\\)', 'testEquals(org.eclipse.jgit.revwalk.RevFlagSetTest)')","[178675, 178828]"
"('Description.java', 'org.junit.runner.Description', 'methodAndClassNamePatternGroupOrDefault', '([\\s\\S]*)\\((.*)\\)', 'testUpperGroupCase5[OldRule? true](org.eclipse.jgit.ignore.IgnoreRuleSpecialCasesTest)')","[90917, 98001]"
"('URIish.java', 'org.eclipse.jgit.transport.URIish', '<init>', '^(file):([\\\\/](?![\\\\/])((?:[A-Za-z]:)?[\\\\/]?(?:(?:[^\\\\/]+[\\\\/]+)*[^\\\\/]+[\\\\/]*)))$', 'file:///tmp/jgit_test_8357538809303882728_tmp/tmp_8868203724769448409/.git/')",[143539]
"('URIish.java', 'org.eclipse.jgit.transport.URIish', '<init>', '^(file):([\\\\/](?![\\\\/])((?:[A-Za-z]:)?[\\\\/]?(?:(?:[^\\\\/]+[\\\\/]+)*[^\\\\/]+[\\\\/]*)))$', 'https://lusr\\example@1.2.3.4//')","[233307, 233491]"
"('Description.java', 'org.junit.runner.Description', 'methodAndClassNamePatternGroupOrDefault', '([\\s\\S]*)\\((.*)\\)', 'testDistance_past_root(org.eclipse.jgit.lib.RepositoryResolveTest)')","[71204, 72047]"
"('URIish.java', 'org.eclipse.jgit.transport.URIish', '<init>', '^([a-z][a-z0-9+-]+)://(?:(?:([^/:@]+)(?::([^\\\\/]+))?@)?((?:[^\\\\/:]+)|(?:\\[[0-9a-f:]+\\]))(?::(\\d+))?((?:/~(?:[^\\\\/]+))?[\\\\/]))?(.+)?$', 'ssh+git://me:wtf@[::1]:80//')",[197189]
"('Description.java', 'org.junit.runner.Description', 'methodAndClassNamePatternGroupOrDefault', '([\\s\\S]*)\\((.*)\\)', 'testUnsetSingleSection(org.eclipse.jgit.lib.ConfigTest)')","[69978, 70720]"
"('URIish.java', 'org.eclipse.jgit.transport.URIish', '<init>', '^([a-z][a-z0-9+-]+)://(?:(?:([^/:@]+)(?::([^\\\\/]+))?@)?((?:[^\\\\/:]+)|(?:\\[[0-9a-f:]+\\]))(?::(\\d+))?((?:/~(?:[^\\\\/]+))?[\\\\/]))?(.+)?$', 'ssh+git://l usr\\example.com:wtf@example.com:1234//abc')",[197419]
"('FastIgnoreRule.java', 'org.eclipse.jgit.ignore.FastIgnoreRule', 'isMatch', '.*\\.st.', 'anothertest.st0')","[104396, 104558, 105653, 105788]"
"('URIish.java', 'org.eclipse.jgit.transport.URIish', '<init>', '^([a-z][a-z0-9+-]+)://(?:(?:([^/:@]+)(?::([^\\\\/]+))?@)?((?:[^\\\\/:]+)|(?:\\[[0-9a-f:]+\\]))(?::(\\d+))?((?:/~(?:[^\\\\/]+))?[\\\\/]))?(.+)?$', '/tmp/jgit_test_7458934864323210735_tmp/tmp_3824345633208984745.git')",[185354]
"('URIish.java', 'org.eclipse.jgit.transport.URIish', '<init>', '^([a-z][a-z0-9+-]+)://(?:(?:([^/:@]+)(?::([^\\\\/]+))?@)?((?:[^\\\\/:]+)|(?:\\[[0-9a-f:]+\\]))(?::(\\d+))?((?:/~(?:[^\\\\/]+))?[\\\\/]))?(.+)?$', 'ssh+git://me:wtf@example.com:80//')",[195663]
"('Description.java', 'org.junit.runner.Description', 'methodAndClassNamePatternGroupOrDefault', '([\\s\\S]*)\\((.*)\\)', 'org.eclipse.jgit.diff.PatchIdDiffFormatterTest')","[9437, 9546]"
"('Description.java', 'org.junit.runner.Description', 'methodAndClassNamePatternGroupOrDefault', '([\\s\\S]*)\\((.*)\\)', 'testManySolutionsCase4(org.eclipse.jgit.fnmatch.FileNameMatcherTest)')","[43624, 46988]"
"('URIish.java', 'org.eclipse.jgit.transport.URIish', '<init>', '^(file):([\\\\/](?![\\\\/])((?:[A-Za-z]:)?[\\\\/]?(?:(?:[^\\\\/]+[\\\\/]+)*[^\\\\/]+[\\\\/]*)))$', 'ssh://me:wtf@[::1]:80/D:\\x')",[193100]
"('URIish.java', 'org.eclipse.jgit.transport.URIish', '<init>', '^([a-z][a-z0-9+-]+)://(?:(?:([^/:@]+)(?::([^\\\\/]+))?@)?((?:[^\\\\/:]+)|(?:\\[[0-9a-f:]+\\]))(?::(\\d+))?((?:/~(?:[^\\\\/]+))?[\\\\/]))?(.+)?$', 'file:///tmp/jgit_test_3986526152599191930_tmp/tmp_827137502116348097/.git/')",[62489]
"('Description.java', 'org.junit.runner.Description', 'methodAndClassNamePatternGroupOrDefault', '([\\s\\S]*)\\((.*)\\)', 'testOneBlockAndHalf_Copy(org.eclipse.jgit.util.TemporaryBufferTest)')","[26701, 27008]"
"('Description.java', 'org.junit.runner.Description', 'methodAndClassNamePatternGroupOrDefault', '([\\s\\S]*)\\((.*)\\)', 'testLowerGroupCase0[OldRule? false](org.eclipse.jgit.ignore.IgnoreRuleSpecialCasesTest)')","[85537, 92642]"
"('Description.java', 'org.junit.runner.Description', 'methodAndClassNamePatternGroupOrDefault', '([\\s\\S]*)\\((.*)\\)', 'org.eclipse.jgit.api.RevertCommandTest')","[125494, 126082]"
"('Description.java', 'org.junit.runner.Description', 'methodAndClassNamePatternGroupOrDefault', '([\\s\\S]*)\\((.*)\\)', 'testTwoSameDifferByAssumeValid(org.eclipse.jgit.treewalk.filter.InterIndexDiffFilterTest)')","[263959, 264068]"
"('Description.java', 'org.junit.runner.Description', 'methodAndClassNamePatternGroupOrDefault', '([\\s\\S]*)\\((.*)\\)', 'testRebaseEndsIfLastStepIsEdit(org.eclipse.jgit.api.RebaseCommandTest)')","[131411, 132898]"
"('URIish.java', 'org.eclipse.jgit.transport.URIish', '<init>', '^([a-z][a-z0-9+-]+)://(?:(?:([^/:@]+)(?::([^\\\\/]+))?@)?((?:[^\\\\/:]+)|(?:\\[[0-9a-f:]+\\]))(?::(\\d+))?((?:/~(?:[^\\\\/]+))?[\\\\/]))?(.+)?$', 'ssh://lusr\\example@[::1]/D:/x')","[223854, 224038]"
"('Description.java', 'org.junit.runner.Description', 'methodAndClassNamePatternGroupOrDefault', '([\\s\\S]*)\\((.*)\\)', 'testPrintGroupCase1[OldRule? true](org.eclipse.jgit.ignore.IgnoreRuleSpecialCasesTest)')","[90572, 97656]"
"('Description.java', 'org.junit.runner.Description', 'methodAndClassNamePatternGroupOrDefault', '([\\s\\S]*)\\((.*)\\)', 'testHasChangeidWithReplacementWithChangeIdInCommitMessage(org.eclipse.jgit.util.ChangeIdUtilTest)')","[31678, 32415]"
"('URIish.java', 'org.eclipse.jgit.transport.URIish', '<init>', '^([a-z][a-z0-9+-]+)://(?:(?:([^/:@]+)(?::([^\\\\/]+))?@)?((?:[^\\\\/:]+)|(?:\\[[0-9a-f:]+\\]))(?::(\\d+))?((?:/~(?:[^\\\\/]+))?[\\\\/]))?(.+)?$', 'http://l usr\\example.com@[::1]/D:/x')","[229374, 229558]"
"('Description.java', 'org.junit.runner.Description', 'methodAndClassNamePatternGroupOrDefault', '([\\s\\S]*)\\((.*)\\)', 'testAlnumGroupCase0[OldRule? true](org.eclipse.jgit.ignore.IgnoreRuleSpecialCasesTest)')","[91308, 98392]"
"('Description.java', 'org.junit.runner.Description', 'methodAndClassNamePatternGroupOrDefault', '([\\s\\S]*)\\((.*)\\)', 'org.eclipse.jgit.internal.storage.file.WindowCacheGetTest')","[115036, 115188]"
"('Description.java', 'org.junit.runner.Description', 'methodAndClassNamePatternGroupOrDefault', '([\\s\\S]*)\\((.*)\\)', 'testToString(org.eclipse.jgit.lib.SymbolicRefTest)')","[70976, 71041]"
"('Description.java', 'org.junit.runner.Description', 'methodAndClassNamePatternGroupOrDefault', '([\\s\\S]*)\\((.*)\\)', 'testSshProtoWithEscapedADUserPassAndPort(org.eclipse.jgit.transport.URIishTest)')","[189115, 190524]"
"('URIish.java', 'org.eclipse.jgit.transport.URIish', '<init>', '^(file):([\\\\/](?![\\\\/])((?:[A-Za-z]:)?[\\\\/]?(?:(?:[^\\\\/]+[\\\\/]+)*[^\\\\/]+[\\\\/]*)))$', 'file:/tmp/jgit_test_3236687163374977183_tmp/tmp_6012638459483677170/testCloneRepositoryWithNestedSubmodules2/.git/')","[160700, 162054]"
"('Description.java', 'org.junit.runner.Description', 'methodAndClassNamePatternGroupOrDefault', '([\\s\\S]*)\\((.*)\\)', 'testNullRefName(org.eclipse.jgit.api.CheckoutCommandTest)')","[149745, 150295]"
"('Description.java', 'org.junit.runner.Description', 'methodAndClassNamePatternGroupOrDefault', '([\\s\\S]*)\\((.*)\\)', 'testReadFromFallback(org.eclipse.jgit.internal.storage.dfs.DfsInserterTest)')","[109484, 109592]"
"('URIish.java', 'org.eclipse.jgit.transport.URIish', '<init>', '^(file):([\\\\/](?![\\\\/])((?:[A-Za-z]:)?[\\\\/]?(?:(?:[^\\\\/]+[\\\\/]+)*[^\\\\/]+[\\\\/]*)))$', 'http://lusr\\example:wtf@[::1]:80/D:/x')",[202778]
"('Description.java', 'org.junit.runner.Description', 'methodAndClassNamePatternGroupOrDefault', '([\\s\\S]*)\\((.*)\\)', 'testConflictAtEnd(org.eclipse.jgit.merge.MergeAlgorithmTest)')","[11934, 12230]"
"('Description.java', 'org.junit.runner.Description', 'methodAndClassNamePatternGroupOrDefault', '([\\s\\S]*)\\((.*)\\)', 'testReadACK_Invalid4(org.eclipse.jgit.transport.PacketLineInTest)')","[184563, 185105]"
"('Description.java', 'org.junit.runner.Description', 'methodAndClassNamePatternGroupOrDefault', '([\\s\\S]*)\\((.*)\\)', 'multipleInsteadOf(org.eclipse.jgit.transport.RemoteConfigTest)')","[253212, 253761]"
"('URIish.java', 'org.eclipse.jgit.transport.URIish', '<init>', '^(file):([\\\\/](?![\\\\/])((?:[A-Za-z]:)?[\\\\/]?(?:(?:[^\\\\/]+[\\\\/]+)*[^\\\\/]+[\\\\/]*)))$', 'file:///tmp/jgit_test_7726753311847713028_tmp/tmp_262524205056608450/.git/')",[60862]
"('Description.java', 'org.junit.runner.Description', 'methodAndClassNamePatternGroupOrDefault', '([\\s\\S]*)\\((.*)\\)', 'logPathWithSkip(org.eclipse.jgit.api.LogCommandTest)')","[130820, 130973]"
"('Description.java', 'org.junit.runner.Description', 'methodAndClassNamePatternGroupOrDefault', '([\\s\\S]*)\\((.*)\\)', 'testVerySimpleWirdcardCase0(org.eclipse.jgit.fnmatch.FileNameMatcherTest)')","[41629, 44898]"
"('URIish.java', 'org.eclipse.jgit.transport.URIish', '<init>', '^([a-z][a-z0-9+-]+)://(?:(?:([^/:@]+)(?::([^\\\\/]+))?@)?((?:[^\\\\/:]+)|(?:\\[[0-9a-f:]+\\]))(?::(\\d+))?((?:/~(?:[^\\\\/]+))?[\\\\/]))?(.+)?$', 'ssh+git://1.2.3.4//abc')","[237792, 237976, 238896, 239080, 240000, 240184]"
"('Description.java', 'org.junit.runner.Description', 'methodAndClassNamePatternGroupOrDefault', '([\\s\\S]*)\\((.*)\\)', 'testFilterFootersIgnoreCase(org.eclipse.jgit.revwalk.FooterLineTest)')","[173675, 174086]"
"('Description.java', 'org.junit.runner.Description', 'methodAndClassNamePatternGroupOrDefault', '([\\s\\S]*)\\((.*)\\)', 'testEmptyString(org.eclipse.jgit.lib.ValidRefNameTest)')","[65949, 66320]"
"('URIish.java', 'org.eclipse.jgit.transport.URIish', '<init>', '^(file):([\\\\/](?![\\\\/])((?:[A-Za-z]:)?[\\\\/]?(?:(?:[^\\\\/]+[\\\\/]+)*[^\\\\/]+[\\\\/]*)))$', 'https://l usr\\example.com@[::1]:80/D:/x')",[219599]
"('Description.java', 'org.junit.runner.Description', 'methodAndClassNamePatternGroupOrDefault', '([\\s\\S]*)\\((.*)\\)', 'never(org.eclipse.jgit.util.GitDateParserTest)')","[22023, 22305]"
"('Description.java', 'org.junit.runner.Description', 'methodAndClassNamePatternGroupOrDefault', '([\\s\\S]*)\\((.*)\\)', 'testGetRefs_LooseSorting_Bug_348834(org.eclipse.jgit.internal.storage.file.RefDirectoryTest)')","[110866, 112043]"
"('Description.java', 'org.junit.runner.Description', 'methodAndClassNamePatternGroupOrDefault', '([\\s\\S]*)\\((.*)\\)', 'testWordGroupCase3[OldRule? false](org.eclipse.jgit.ignore.IgnoreRuleSpecialCasesTest)')","[87883, 94988]"
"('URIish.java', 'org.eclipse.jgit.transport.URIish', '<init>', '^([a-z][a-z0-9+-]+)://(?:(?:([^/:@]+)(?::([^\\\\/]+))?@)?((?:[^\\\\/:]+)|(?:\\[[0-9a-f:]+\\]))(?::(\\d+))?((?:/~(?:[^\\\\/]+))?[\\\\/]))?(.+)?$', 'ssh+git://lusr\\example:wtf@example.com:1234//abc')",[198523]
"('Description.java', 'org.junit.runner.Description', 'methodAndClassNamePatternGroupOrDefault', '([\\s\\S]*)\\((.*)\\)', 'testInCoreLimit_SwitchOnAppendByte(org.eclipse.jgit.util.TemporaryBufferTest)')","[26533, 26832]"
"('Description.java', 'org.junit.runner.Description', 'methodAndClassNamePatternGroupOrDefault', '([\\s\\S]*)\\((.*)\\)', 'nonReferencedExpiredObject_pruned(org.eclipse.jgit.internal.storage.file.GcPruneNonReferencedTest)')","[119318, 119424]"
"('Description.java', 'org.junit.runner.Description', 'methodAndClassNamePatternGroupOrDefault', '([\\s\\S]*)\\((.*)\\)', 'testUnsetBranchSection(org.eclipse.jgit.lib.ConfigTest)')","[69684, 70412]"
"('URIish.java', 'org.eclipse.jgit.transport.URIish', '<init>', '^(file):([\\\\/](?![\\\\/])((?:[A-Za-z]:)?[\\\\/]?(?:(?:[^\\\\/]+[\\\\/]+)*[^\\\\/]+[\\\\/]*)))$', 'http://l usr\\example.com:wtf@example.com:1234//abc')",[200708]
"('URIish.java', 'org.eclipse.jgit.transport.URIish', '<init>', '^(file):([\\\\/](?![\\\\/])((?:[A-Za-z]:)?[\\\\/]?(?:(?:[^\\\\/]+[\\\\/]+)*[^\\\\/]+[\\\\/]*)))$', 'https://l usr\\example.com@1.2.3.4//abc')","[232249, 232433]"
"('Description.java', 'org.junit.runner.Description', 'methodAndClassNamePatternGroupOrDefault', '([\\s\\S]*)\\((.*)\\)', 'testReadMissing_RealIndex(org.eclipse.jgit.dircache.DirCacheBasicTest)')","[171485, 172042]"
"('URIish.java', 'org.eclipse.jgit.transport.URIish', '<init>', '^([a-z][a-z0-9+-]+)://(?:(?:([^/:@]+)(?::([^\\\\/]+))?@)?((?:[^\\\\/:]+)|(?:\\[[0-9a-f:]+\\]))(?::(\\d+))?((?:/~(?:[^\\\\/]+))?[\\\\/]))?(.+)?$', 'http://everyones.loves.git/u/2')","[256023, 258774, 258822, 258870, 258918, 258966, 259064, 259112]"
"('Description.java', 'org.junit.runner.Description', 'methodAndClassNamePatternGroupOrDefault', '([\\s\\S]*)\\((.*)\\)', 'org.eclipse.jgit.lib.BranchTrackingStatusTest')","[54041, 54193]"
"('ChangeIdUtil.java', 'org.eclipse.jgit.util.ChangeIdUtil', 'insertId', '^(Bug|Issue)[a-zA-Z0-9-]*:.*$', 'Signed-off-by: me@you.too')","[34140, 36932, 37737, 38199]"
"('URIish.java', 'org.eclipse.jgit.transport.URIish', '<init>', '^(file):([\\\\/](?![\\\\/])((?:[A-Za-z]:)?[\\\\/]?(?:(?:[^\\\\/]+[\\\\/]+)*[^\\\\/]+[\\\\/]*)))$', 'D:/m y')","[250649, 250764]"
"('Description.java', 'org.junit.runner.Description', 'methodAndClassNamePatternGroupOrDefault', '([\\s\\S]*)\\((.*)\\)', 'testUpperGroupCase4(org.eclipse.jgit.fnmatch.FileNameMatcherTest)')","[43729, 47098]"
"('Description.java', 'org.junit.runner.Description', 'methodAndClassNamePatternGroupOrDefault', '([\\s\\S]*)\\((.*)\\)', 'testLeaf(org.eclipse.jgit.lib.SymbolicRefTest)')","[70955, 71019]"
"('Description.java', 'org.junit.runner.Description', 'methodAndClassNamePatternGroupOrDefault', '([\\s\\S]*)\\((.*)\\)', 'testInvalidCommitInvalidParent5(org.eclipse.jgit.lib.ObjectCheckerTest)')","[49277, 51802]"
"('URIish.java', 'org.eclipse.jgit.transport.URIish', '<init>', '^(file):([\\\\/](?![\\\\/])((?:[A-Za-z]:)?[\\\\/]?(?:(?:[^\\\\/]+[\\\\/]+)*[^\\\\/]+[\\\\/]*)))$', 'https://me@[::1]/D:\\x')","[231605, 231789]"
"('URIish.java', 'org.eclipse.jgit.transport.URIish', '<init>', '^(file):([\\\\/](?![\\\\/])((?:[A-Za-z]:)?[\\\\/]?(?:(?:[^\\\\/]+[\\\\/]+)*[^\\\\/]+[\\\\/]*)))$', 'ssh+git://lusr\\example:wtf@1.2.3.4:1234/D:\\x')",[198960]
"('URIish.java', 'org.eclipse.jgit.transport.URIish', '<init>', '^(file):([\\\\/](?![\\\\/])((?:[A-Za-z]:)?[\\\\/]?(?:(?:[^\\\\/]+[\\\\/]+)*[^\\\\/]+[\\\\/]*)))$', '/some/dir')","[254744, 255154, 255324, 255444, 255879, 256147, 256267, 256488, 256711, 256835, 257080, 257490, 257610, 258055]"
"('Description.java', 'org.junit.runner.Description', 'methodAndClassNamePatternGroupOrDefault', '([\\s\\S]*)\\((.*)\\)', 'testParseAbbrIndexLine_WithMode(org.eclipse.jgit.patch.FileHeaderTest)')","[471, 979]"
"('URIish.java', 'org.eclipse.jgit.transport.URIish', '<init>', '^(file):([\\\\/](?![\\\\/])((?:[A-Za-z]:)?[\\\\/]?(?:(?:[^\\\\/]+[\\\\/]+)*[^\\\\/]+[\\\\/]*)))$', 'git://host.xy/abc.git/')",[252768]
"('FastIgnoreRule.java', 'org.eclipse.jgit.ignore.FastIgnoreRule', 'isMatch', '[\\]]', ']')",[98973]
"('URIish.java', 'org.eclipse.jgit.transport.URIish', '<init>', '^([a-z][a-z0-9+-]+)://(?:(?:([^/:@]+)(?::([^\\\\/]+))?@)?((?:[^\\\\/:]+)|(?:\\[[0-9a-f:]+\\]))(?::(\\d+))?((?:/~(?:[^\\\\/]+))?[\\\\/]))?(.+)?$', 'ssh://lusr\\example:wtf@example.com:80/D:/x')",[194651]
"('URIish.java', 'org.eclipse.jgit.transport.URIish', '<init>', '^([a-z][a-z0-9+-]+)://(?:(?:([^/:@]+)(?::([^\\\\/]+))?@)?((?:[^\\\\/:]+)|(?:\\[[0-9a-f:]+\\]))(?::(\\d+))?((?:/~(?:[^\\\\/]+))?[\\\\/]))?(.+)?$', '//.git')",[251615]
"('Description.java', 'org.junit.runner.Description', 'methodAndClassNamePatternGroupOrDefault', '([\\s\\S]*)\\((.*)\\)', 'testUpdateRefForwardWithCheck1(org.eclipse.jgit.internal.storage.file.RefUpdateTest)')","[119949, 120786]"
"('Description.java', 'org.junit.runner.Description', 'methodAndClassNamePatternGroupOrDefault', '([\\s\\S]*)\\((.*)\\)', 'testFileInFolderCommittedDeleted(org.eclipse.jgit.treewalk.filter.IndexDiffFilterTest)')","[264275, 265079]"
"('URIish.java', 'org.eclipse.jgit.transport.URIish', '<init>', '^([a-z][a-z0-9+-]+)://(?:(?:([^/:@]+)(?::([^\\\\/]+))?@)?((?:[^\\\\/:]+)|(?:\\[[0-9a-f:]+\\]))(?::(\\d+))?((?:/~(?:[^\\\\/]+))?[\\\\/]))?(.+)?$', 'file:///tmp/jgit_test_5029312574137886746_tmp/tmp_3793577667892320160/.git/')",[123542]
"('Description.java', 'org.junit.runner.Description', 'methodAndClassNamePatternGroupOrDefault', '([\\s\\S]*)\\((.*)\\)', 'testConfigureCache_PackedGitLimit_0(org.eclipse.jgit.internal.storage.file.WindowCacheReconfigureTest)')","[115619, 115771]"
"('Description.java', 'org.junit.runner.Description', 'methodAndClassNamePatternGroupOrDefault', '([\\s\\S]*)\\((.*)\\)', 'testPunctGroupCase1(org.eclipse.jgit.fnmatch.FileNameMatcherTest)')","[43204, 46548]"
"('Description.java', 'org.junit.runner.Description', 'methodAndClassNamePatternGroupOrDefault', '([\\s\\S]*)\\((.*)\\)', 'testUpdateWorkingDirectoryFromHeadWithIndexChange(org.eclipse.jgit.api.PathCheckoutCommandTest)')","[123818, 124097]"
"('URIish.java', 'org.eclipse.jgit.transport.URIish', '<init>', '^([a-z][a-z0-9+-]+)://(?:(?:([^/:@]+)(?::([^\\\\/]+))?@)?((?:[^\\\\/:]+)|(?:\\[[0-9a-f:]+\\]))(?::(\\d+))?((?:/~(?:[^\\\\/]+))?[\\\\/]))?(.+)?$', 'ssh+git://me:wtf@example.com:80/D:\\x')",[196591]
"('URIish.java', 'org.eclipse.jgit.transport.URIish', '<init>', '^([a-z][a-z0-9+-]+)://(?:(?:([^/:@]+)(?::([^\\\\/]+))?@)?((?:[^\\\\/:]+)|(?:\\[[0-9a-f:]+\\]))(?::(\\d+))?((?:/~(?:[^\\\\/]+))?[\\\\/]))?(.+)?$', 'example.com:some/p%20ath')","[250442, 250511]"
"('Description.java', 'org.junit.runner.Description', 'methodAndClassNamePatternGroupOrDefault', '([\\s\\S]*)\\((.*)\\)', 'testPullConflict(org.eclipse.jgit.api.PullCommandTest)')","[144609, 144955]"
"('URIish.java', 'org.eclipse.jgit.transport.URIish', '<init>', '^(file):([\\\\/](?![\\\\/])((?:[A-Za-z]:)?[\\\\/]?(?:(?:[^\\\\/]+[\\\\/]+)*[^\\\\/]+[\\\\/]*)))$', 'ssh://lusr\\example:wtf@[::1]:80//')",[195272]
"('Description.java', 'org.junit.runner.Description', 'methodAndClassNamePatternGroupOrDefault', '([\\s\\S]*)\\((.*)\\)', 'testInvalidTagNoType2(org.eclipse.jgit.lib.ObjectCheckerTest)')","[50390, 52968]"
"('Description.java', 'org.junit.runner.Description', 'methodAndClassNamePatternGroupOrDefault', '([\\s\\S]*)\\((.*)\\)', 'resolveDate(org.eclipse.jgit.lib.ReflogResolveTest)')","[64364, 64496]"
"('Description.java', 'org.junit.runner.Description', 'methodAndClassNamePatternGroupOrDefault', '([\\s\\S]*)\\((.*)\\)', 'testSort_TOPO_REVERSE(org.eclipse.jgit.revwalk.RevWalkSortTest)')","[181921, 182073]"
"('Description.java', 'org.junit.runner.Description', 'methodAndClassNamePatternGroupOrDefault', '([\\s\\S]*)\\((.*)\\)', 'testNonRecursiveTreeWalk(org.eclipse.jgit.treewalk.filter.IndexDiffFilterTest)')","[264443, 265255]"
"('URIish.java', 'org.eclipse.jgit.transport.URIish', '<init>', '^(file):([\\\\/](?![\\\\/])((?:[A-Za-z]:)?[\\\\/]?(?:(?:[^\\\\/]+[\\\\/]+)*[^\\\\/]+[\\\\/]*)))$', 'ssh+git://me@example.com/D:\\x')","[224245, 224429]"
"('Description.java', 'org.junit.runner.Description', 'methodAndClassNamePatternGroupOrDefault', '([\\s\\S]*)\\((.*)\\)', 'testAlphaGroupCase0[OldRule? false](org.eclipse.jgit.ignore.IgnoreRuleSpecialCasesTest)')","[85859, 92964]"
"('Description.java', 'org.junit.runner.Description', 'methodAndClassNamePatternGroupOrDefault', '([\\s\\S]*)\\((.*)\\)', 'testUploadPack(org.eclipse.jgit.transport.RemoteConfigTest)')","[253317, 253871]"
"('URIish.java', 'org.eclipse.jgit.transport.URIish', '<init>', '^([a-z][a-z0-9+-]+)://(?:(?:([^/:@]+)(?::([^\\\\/]+))?@)?((?:[^\\\\/:]+)|(?:\\[[0-9a-f:]+\\]))(?::(\\d+))?((?:/~(?:[^\\\\/]+))?[\\\\/]))?(.+)?$', 'ssh://me:wtf@1.2.3.4:1234//abc')",[192479]
"('Description.java', 'org.junit.runner.Description', 'methodAndClassNamePatternGroupOrDefault', '([\\s\\S]*)\\((.*)\\)', 'org.eclipse.jgit.api.RebaseCommandTest')","[131054, 140438]"
"('Description.java', 'org.junit.runner.Description', 'methodAndClassNamePatternGroupOrDefault', '([\\s\\S]*)\\((.*)\\)', 'testToString(org.eclipse.jgit.lib.ObjectIdRefTest)')","[54556, 54620]"
"('Description.java', 'org.junit.runner.Description', 'methodAndClassNamePatternGroupOrDefault', '([\\s\\S]*)\\((.*)\\)', 'org.eclipse.jgit.util.io.AutoCRLFInputStreamTest')","[25837, 25946]"
"('Description.java', 'org.junit.runner.Description', 'methodAndClassNamePatternGroupOrDefault', '([\\s\\S]*)\\((.*)\\)', 'testToExternalStringTrimsNameAndEmail(org.eclipse.jgit.lib.T0001_PersonIdentTest)')","[60622, 60729]"
"('Description.java', 'org.junit.runner.Description', 'methodAndClassNamePatternGroupOrDefault', '([\\s\\S]*)\\((.*)\\)', 'testUpperGroupCase3[OldRule? false](org.eclipse.jgit.ignore.IgnoreRuleSpecialCasesTest)')","[87308, 94413]"
"('Description.java', 'org.junit.runner.Description', 'methodAndClassNamePatternGroupOrDefault', '([\\s\\S]*)\\((.*)\\)', 'testOpen(org.eclipse.jgit.api.GitConstructionTest)')","[162756, 162821]"
"('URIish.java', 'org.eclipse.jgit.transport.URIish', '<init>', '^(file):([\\\\/](?![\\\\/])((?:[A-Za-z]:)?[\\\\/]?(?:(?:[^\\\\/]+[\\\\/]+)*[^\\\\/]+[\\\\/]*)))$', 'file:/tmp/jgit_test_3313886005029198754_tmp/tmp_3894563903676098303/.git/')",[8621]
"('URIish.java', 'org.eclipse.jgit.transport.URIish', '<init>', '^(file):([\\\\/](?![\\\\/])((?:[A-Za-z]:)?[\\\\/]?(?:(?:[^\\\\/]+[\\\\/]+)*[^\\\\/]+[\\\\/]*)))$', 'https://me:wtf@[::1]:80/D:/x')",[204672]
"('Description.java', 'org.junit.runner.Description', 'methodAndClassNamePatternGroupOrDefault', '([\\s\\S]*)\\((.*)\\)', 'org.eclipse.jgit.api.InitCommandTest')","[156567, 157037]"
"('FastIgnoreRule.java', 'org.eclipse.jgit.ignore.FastIgnoreRule', 'isMatch', '[\\]a]', ']')",[98999]
"('Description.java', 'org.junit.runner.Description', 'methodAndClassNamePatternGroupOrDefault', '([\\s\\S]*)\\((.*)\\)', 'testRebaseWithUncommittedTopicChange(org.eclipse.jgit.api.RebaseCommandTest)')","[132020, 133536]"
"('Description.java', 'org.junit.runner.Description', 'methodAndClassNamePatternGroupOrDefault', '([\\s\\S]*)\\((.*)\\)', 'testVerySimpleStarCase2[OldRule? false](org.eclipse.jgit.ignore.IgnoreRuleSpecialCasesTest)')","[87538, 94643]"
"('Description.java', 'org.junit.runner.Description', 'methodAndClassNamePatternGroupOrDefault', '([\\s\\S]*)\\((.*)\\)', 'testIgnoreNonExistingObjects(org.eclipse.jgit.internal.storage.file.PackWriterTest)')","[117908, 118365]"
"('URIish.java', 'org.eclipse.jgit.transport.URIish', '<init>', '^([a-z][a-z0-9+-]+)://(?:(?:([^/:@]+)(?::([^\\\\/]+))?@)?((?:[^\\\\/:]+)|(?:\\[[0-9a-f:]+\\]))(?::(\\d+))?((?:/~(?:[^\\\\/]+))?[\\\\/]))?(.+)?$', 'http://lusr\\example:wtf@1.2.3.4:1234//abc')",[202203]
"('Description.java', 'org.junit.runner.Description', 'methodAndClassNamePatternGroupOrDefault', '([\\s\\S]*)\\((.*)\\)', 'testInvalidCommitInvalidAuthor7(org.eclipse.jgit.lib.ObjectCheckerTest)')","[49445, 51978]"
"('URIish.java', 'org.eclipse.jgit.transport.URIish', '<init>', '^(file):([\\\\/](?![\\\\/])((?:[A-Za-z]:)?[\\\\/]?(?:(?:[^\\\\/]+[\\\\/]+)*[^\\\\/]+[\\\\/]*)))$', 'ssh+git://l usr\\example.com@example.com:80/D:\\x')",[211710]
"('Description.java', 'org.junit.runner.Description', 'methodAndClassNamePatternGroupOrDefault', '([\\s\\S]*)\\((.*)\\)', 'org.eclipse.jgit.diff.RawTextIgnoreWhitespaceChangeTest')","[5676, 5785]"
"('Description.java', 'org.junit.runner.Description', 'methodAndClassNamePatternGroupOrDefault', '([\\s\\S]*)\\((.*)\\)', 'testOnlyOption_f1_1_f2_14_a(org.eclipse.jgit.api.CommitOnlyTest)')","[136222, 138329]"
"('ChangeIdUtil.java', 'org.eclipse.jgit.util.ChangeIdUtil', 'insertId', '^(Bug|Issue)[a-zA-Z0-9-]*:.*$', 'Issue: 42')",[34942]
"('URIish.java', 'org.eclipse.jgit.transport.URIish', '<init>', '^(file):([\\\\/](?![\\\\/])((?:[A-Za-z]:)?[\\\\/]?(?:(?:[^\\\\/]+[\\\\/]+)*[^\\\\/]+[\\\\/]*)))$', 'ssh://lusr\\example:wtf@1.2.3.4:80/D:\\x')",[195042]
"('Description.java', 'org.junit.runner.Description', 'methodAndClassNamePatternGroupOrDefault', '([\\s\\S]*)\\((.*)\\)', 'testALL_ShouldNotBeRecursive(org.eclipse.jgit.treewalk.filter.TreeFilterTest)')","[265989, 266143]"
"('Description.java', 'org.junit.runner.Description', 'methodAndClassNamePatternGroupOrDefault', '([\\s\\S]*)\\((.*)\\)', 'testDeleteFullName(org.eclipse.jgit.api.TagCommandTest)')","[157427, 157722]"
"('Description.java', 'org.junit.runner.Description', 'methodAndClassNamePatternGroupOrDefault', '([\\s\\S]*)\\((.*)\\)', 'dropWithNoStashedCommits(org.eclipse.jgit.api.StashDropCommandTest)')","[124415, 124588]"
"('URIish.java', 'org.eclipse.jgit.transport.URIish', '<init>', '^(file):([\\\\/](?![\\\\/])((?:[A-Za-z]:)?[\\\\/]?(?:(?:[^\\\\/]+[\\\\/]+)*[^\\\\/]+[\\\\/]*)))$', 'file:/tmp/jgit_test_5458912818544640927_tmp/tmp_828064902123961797/.git/')",[262758]
"('Description.java', 'org.junit.runner.Description', 'methodAndClassNamePatternGroupOrDefault', '([\\s\\S]*)\\((.*)\\)', 'org.eclipse.jgit.util.TemporaryBufferTest')","[26428, 27053]"
"('Description.java', 'org.junit.runner.Description', 'methodAndClassNamePatternGroupOrDefault', '([\\s\\S]*)\\((.*)\\)', 'testTimeout_writeByte_Success1(org.eclipse.jgit.util.io.TimeoutOutputStreamTest)')","[24460, 24652]"
"('URIish.java', 'org.eclipse.jgit.transport.URIish', '<init>', '^([a-z][a-z0-9+-]+)://(?:(?:([^/:@]+)(?::([^\\\\/]+))?@)?((?:[^\\\\/:]+)|(?:\\[[0-9a-f:]+\\]))(?::(\\d+))?((?:/~(?:[^\\\\/]+))?[\\\\/]))?(.+)?$', 'http://lusr\\example:wtf@[::1]:1234/D:/x')",[202617]
"('Description.java', 'org.junit.runner.Description', 'methodAndClassNamePatternGroupOrDefault', '([\\s\\S]*)\\((.*)\\)', 'readNamesInSubSectionRecursive(org.eclipse.jgit.lib.ConfigTest)')","[69600, 70324]"
"('URIish.java', 'org.eclipse.jgit.transport.URIish', '<init>', '^([a-z][a-z0-9+-]+)://(?:(?:([^/:@]+)(?::([^\\\\/]+))?@)?((?:[^\\\\/:]+)|(?:\\[[0-9a-f:]+\\]))(?::(\\d+))?((?:/~(?:[^\\\\/]+))?[\\\\/]))?(.+)?$', 'ssh+git://l usr\\example.com:wtf@[::1]:1234//abc')",[198155]
"('Description.java', 'org.junit.runner.Description', 'methodAndClassNamePatternGroupOrDefault', '([\\s\\S]*)\\((.*)\\)', 'testMultipleCreationsSameContent(org.eclipse.jgit.api.MergeCommandTest)')","[126265, 127175]"
"('Description.java', 'org.junit.runner.Description', 'methodAndClassNamePatternGroupOrDefault', '([\\s\\S]*)\\((.*)\\)', 'testGetText_Convert(org.eclipse.jgit.patch.GetTextTest)')","[1666, 1754]"
"('ChangeIdUtil.java', 'org.eclipse.jgit.util.ChangeIdUtil', 'indexOfFirstFooterLine', '(^[a-zA-Z0-9-]+:(?!//).*$)', '[ja: Fixed')",[34452]
"('URIish.java', 'org.eclipse.jgit.transport.URIish', '<init>', '^(file):([\\\\/](?![\\\\/])((?:[A-Za-z]:)?[\\\\/]?(?:(?:[^\\\\/]+[\\\\/]+)*[^\\\\/]+[\\\\/]*)))$', 'file:///tmp/jgit_test_4734102348625464011_tmp/tmp_6845498822371707756/.git/')","[125290, 125348]"
"('Description.java', 'org.junit.runner.Description', 'methodAndClassNamePatternGroupOrDefault', '([\\s\\S]*)\\((.*)\\)', 'testMaxCountRevFilter0(org.eclipse.jgit.revwalk.MaxCountRevFilterTest)')","[173299, 173342]"
"('Description.java', 'org.junit.runner.Description', 'methodAndClassNamePatternGroupOrDefault', '([\\s\\S]*)\\((.*)\\)', 'testGetAbsEmptyHumanishName(org.eclipse.jgit.transport.URIishTest)')","[188821, 190216]"
"('Description.java', 'org.junit.runner.Description', 'methodAndClassNamePatternGroupOrDefault', '([\\s\\S]*)\\((.*)\\)', 'testParseGitFileName_EmptyHeader(org.eclipse.jgit.patch.FileHeaderTest)')","[534, 1129]"
"('Description.java', 'org.junit.runner.Description', 'methodAndClassNamePatternGroupOrDefault', '([\\s\\S]*)\\((.*)\\)', 'testGetRefs_IgnoresGarbageRef3(org.eclipse.jgit.internal.storage.file.RefDirectoryTest)')","[110593, 111757]"
"('URIish.java', 'org.eclipse.jgit.transport.URIish', '<init>', '^([\\\\/]?((?:[A-Za-z]:)?[\\\\/]?(?:(?:[^\\\\/]+[\\\\/]+)*[^\\\\/]+[\\\\/]*)))$', '/tmp/jgit_test_4895667423267485854_tmp/tmp_229822824317133648')","[152935, 153080, 153245]"
"('Description.java', 'org.junit.runner.Description', 'methodAndClassNamePatternGroupOrDefault', '([\\s\\S]*)\\((.*)\\)', 'testFileModeMergeWithDirtyWorkTree(org.eclipse.jgit.api.MergeCommandTest)')","[126412, 127329]"
"('URIish.java', 'org.eclipse.jgit.transport.URIish', '<init>', '^([a-z][a-z0-9+-]+)://(?:(?:([^/:@]+)(?::([^\\\\/]+))?@)?((?:[^\\\\/:]+)|(?:\\[[0-9a-f:]+\\]))(?::(\\d+))?((?:/~(?:[^\\\\/]+))?[\\\\/]))?(.+)?$', 'ssh+git://l usr\\example.com@1.2.3.4//abc')","[225648, 225832]"
"('Description.java', 'org.junit.runner.Description', 'methodAndClassNamePatternGroupOrDefault', '([\\s\\S]*)\\((.*)\\)', 'testWritePack1(org.eclipse.jgit.internal.storage.file.PackWriterTest)')","[117740, 118189]"
"('Description.java', 'org.junit.runner.Description', 'methodAndClassNamePatternGroupOrDefault', '([\\s\\S]*)\\((.*)\\)', 'testModeChange(org.eclipse.jgit.api.CommitAndLogCommandTest)')","[155038, 155252]"
"('URIish.java', 'org.eclipse.jgit.transport.URIish', '<init>', '^([a-z][a-z0-9+-]+)://(?:(?:([^/:@]+)(?::([^\\\\/]+))?@)?((?:[^\\\\/:]+)|(?:\\[[0-9a-f:]+\\]))(?::(\\d+))?((?:/~(?:[^\\\\/]+))?[\\\\/]))?(.+)?$', 'ssh://user:pass@example.com:33/some/p ath')","[247567, 247613]"
"('URIish.java', 'org.eclipse.jgit.transport.URIish', '<init>', '^(file):([\\\\/](?![\\\\/])((?:[A-Za-z]:)?[\\\\/]?(?:(?:[^\\\\/]+[\\\\/]+)*[^\\\\/]+[\\\\/]*)))$', 'http://l usr\\example.com:wtf@example.com:80/D:\\x')",[200984]
"('URIish.java', 'org.eclipse.jgit.transport.URIish', '<init>', '^([a-z][a-z0-9+-]+)://(?:(?:([^/:@]+)(?::([^\\\\/]+))?@)?((?:[^\\\\/:]+)|(?:\\[[0-9a-f:]+\\]))(?::(\\d+))?((?:/~(?:[^\\\\/]+))?[\\\\/]))?(.+)?$', 'http://me@example.com//abc')","[227488, 227672]"
"('QuotedString.java', 'org.eclipse.jgit.util.QuotedString$BourneUserPathStyle', 'quote', '^~[A-Za-z0-9_-]+$', ""a'b"")","[30174, 30199]"
"('Description.java', 'org.junit.runner.Description', 'methodAndClassNamePatternGroupOrDefault', '([\\s\\S]*)\\((.*)\\)', 'testMixedGroupCase0(org.eclipse.jgit.fnmatch.FileNameMatcherTest)')","[41713, 44986]"
"('Description.java', 'org.junit.runner.Description', 'methodAndClassNamePatternGroupOrDefault', '([\\s\\S]*)\\((.*)\\)', 'testListAllTagsInRepositoryInOrder(org.eclipse.jgit.api.TagCommandTest)')","[157616, 157920]"
"('URIish.java', 'org.eclipse.jgit.transport.URIish', '<init>', '^([a-z][a-z0-9+-]+)://(?:(?:([^/:@]+)(?::([^\\\\/]+))?@)?((?:[^\\\\/:]+)|(?:\\[[0-9a-f:]+\\]))(?::(\\d+))?((?:/~(?:[^\\\\/]+))?[\\\\/]))?(.+)?$', 'file:///tmp/jgit_test_7657625701278535970_tmp/tmp_1171187948670924664/.git/')",[63407]
"('URIish.java', 'org.eclipse.jgit.transport.URIish', '<init>', '^(file):([\\\\/](?![\\\\/])((?:[A-Za-z]:)?[\\\\/]?(?:(?:[^\\\\/]+[\\\\/]+)*[^\\\\/]+[\\\\/]*)))$', 'ssh://me@example.com/D:\\x')","[220933, 221117]"
"('URIish.java', 'org.eclipse.jgit.transport.URIish', '<init>', '^([a-z][a-z0-9+-]+)://(?:(?:([^/:@]+)(?::([^\\\\/]+))?@)?((?:[^\\\\/:]+)|(?:\\[[0-9a-f:]+\\]))(?::(\\d+))?((?:/~(?:[^\\\\/]+))?[\\\\/]))?(.+)?$', 'ssh://lusr\\example@example.com/D:\\x')","[223164, 223348]"
"('Description.java', 'org.junit.runner.Description', 'methodAndClassNamePatternGroupOrDefault', '([\\s\\S]*)\\((.*)\\)', 'testInvalidCommitInvalidTree4(org.eclipse.jgit.lib.ObjectCheckerTest)')","[48626, 51120]"
"('Description.java', 'org.junit.runner.Description', 'methodAndClassNamePatternGroupOrDefault', '([\\s\\S]*)\\((.*)\\)', 'org.eclipse.jgit.lib.DirCacheCheckoutTest')","[60957, 68274]"
"('Description.java', 'org.junit.runner.Description', 'methodAndClassNamePatternGroupOrDefault', '([\\s\\S]*)\\((.*)\\)', 'testDataAfterPackFooterSingleRead(org.eclipse.jgit.transport.PackParserTest)')","[218444, 218705]"
"('URIish.java', 'org.eclipse.jgit.transport.URIish', '<init>', '^([a-z][a-z0-9+-]+)://(?:(?:([^/:@]+)(?::([^\\\\/]+))?@)?((?:[^\\\\/:]+)|(?:\\[[0-9a-f:]+\\]))(?::(\\d+))?((?:/~(?:[^\\\\/]+))?[\\\\/]))?(.+)?$', 'ssh+git://lusr\\example:wtf@example.com:80//abc')",[198707]
"('Description.java', 'org.junit.runner.Description', 'methodAndClassNamePatternGroupOrDefault', '([\\s\\S]*)\\((.*)\\)', 'testEdit_UniqueCommonLargerThanMatchPoint(org.eclipse.jgit.diff.HistogramDiffTest)')","[6996, 7670]"
"('Description.java', 'org.junit.runner.Description', 'methodAndClassNamePatternGroupOrDefault', '([\\s\\S]*)\\((.*)\\)', 'testInvalidTreeDuplicateNames6(org.eclipse.jgit.lib.ObjectCheckerTest)')","[50726, 53320]"
"('Description.java', 'org.junit.runner.Description', 'methodAndClassNamePatternGroupOrDefault', '([\\s\\S]*)\\((.*)\\)', 'testNoFooters_EmptyBody(org.eclipse.jgit.revwalk.FooterLineTest)')","[173486, 173888]"
"('URIish.java', 'org.eclipse.jgit.transport.URIish', '<init>', '^(file):([\\\\/](?![\\\\/])((?:[A-Za-z]:)?[\\\\/]?(?:(?:[^\\\\/]+[\\\\/]+)*[^\\\\/]+[\\\\/]*)))$', 'https://lusr\\example@1.2.3.4:1234/D:/x')",[220151]
"('Description.java', 'org.junit.runner.Description', 'methodAndClassNamePatternGroupOrDefault', '([\\s\\S]*)\\((.*)\\)', 'testPathEditShouldBeCalledForEachStage(org.eclipse.jgit.dircache.DirCachePathEditTest)')","[170639, 170704]"
"('FastIgnoreRule.java', 'org.eclipse.jgit.ignore.FastIgnoreRule', 'isMatch', '[[\\p{Graph}\\p{javaDigit}\\p{javaLetter}]]', '.')",[99701]
"('Description.java', 'org.junit.runner.Description', 'methodAndClassNamePatternGroupOrDefault', '([\\s\\S]*)\\((.*)\\)', 'testConflictingFromMultipleCreations(org.eclipse.jgit.lib.IndexDiffTest)')","[68937, 69287]"
"('URIish.java', 'org.eclipse.jgit.transport.URIish', '<init>', '^(file):([\\\\/](?![\\\\/])((?:[A-Za-z]:)?[\\\\/]?(?:(?:[^\\\\/]+[\\\\/]+)*[^\\\\/]+[\\\\/]*)))$', 'ssh://l usr\\example.com@example.com//')","[221899, 222083]"
"('URIish.java', 'org.eclipse.jgit.transport.URIish', '<init>', '^(file):([\\\\/](?![\\\\/])((?:[A-Za-z]:)?[\\\\/]?(?:(?:[^\\\\/]+[\\\\/]+)*[^\\\\/]+[\\\\/]*)))$', 'ssh://l usr\\example.com:wtf@example.com:80/D:/x')",[193422]
"('Description.java', 'org.junit.runner.Description', 'methodAndClassNamePatternGroupOrDefault', '([\\s\\S]*)\\((.*)\\)', 'testVerySimplePatternCase2[OldRule? false](org.eclipse.jgit.ignore.IgnoreRuleSpecialCasesTest)')","[85767, 92872]"
"('Description.java', 'org.junit.runner.Description', 'methodAndClassNamePatternGroupOrDefault', '([\\s\\S]*)\\((.*)\\)', 'commitSubmoduleUpdate(org.eclipse.jgit.api.CommitCommandTest)')","[123084, 123297]"
"('Description.java', 'org.junit.runner.Description', 'methodAndClassNamePatternGroupOrDefault', '([\\s\\S]*)\\((.*)\\)', 'testSshProtoWithUserAndPort(org.eclipse.jgit.transport.URIishTest)')","[188527, 189908]"
"('Description.java', 'org.junit.runner.Description', 'methodAndClassNamePatternGroupOrDefault', '([\\s\\S]*)\\((.*)\\)', 'testIncludeTag(org.eclipse.jgit.gitrepo.RepoCommandTest)')","[2552, 3318]"
"('URIish.java', 'org.eclipse.jgit.transport.URIish', '<init>', '^([a-z][a-z0-9+-]+)://(?:(?:([^/:@]+)(?::([^\\\\/]+))?@)?((?:[^\\\\/:]+)|(?:\\[[0-9a-f:]+\\]))(?::(\\d+))?((?:/~(?:[^\\\\/]+))?[\\\\/]))?(.+)?$', 'ssh+git://l usr\\example.com:wtf@[::1]:1234/D:/x')",[198201]
"('Description.java', 'org.junit.runner.Description', 'methodAndClassNamePatternGroupOrDefault', '([\\s\\S]*)\\((.*)\\)', 'testUpdateRefForward(org.eclipse.jgit.internal.storage.file.RefUpdateTest)')","[120306, 121160]"
"('Description.java', 'org.junit.runner.Description', 'methodAndClassNamePatternGroupOrDefault', '([\\s\\S]*)\\((.*)\\)', 'testShouldNotBlowUpIfThereAreNoTagsInRepository(org.eclipse.jgit.api.TagCommandTest)')","[157595, 157898]"
"('Description.java', 'org.junit.runner.Description', 'methodAndClassNamePatternGroupOrDefault', '([\\s\\S]*)\\((.*)\\)', 'testParseRewordCommand(org.eclipse.jgit.api.RebaseCommandTest)')","[131453, 132942]"
"('Description.java', 'org.junit.runner.Description', 'methodAndClassNamePatternGroupOrDefault', '([\\s\\S]*)\\((.*)\\)', 'org.eclipse.jgit.revwalk.RevWalkSortTest')","[181816, 182140]"
"('Description.java', 'org.junit.runner.Description', 'methodAndClassNamePatternGroupOrDefault', '([\\s\\S]*)\\((.*)\\)', 'testDequote_LoneBackslash(org.eclipse.jgit.util.QuotedStringGitPathStyleTest)')","[39828, 40253]"
"('URIish.java', 'org.eclipse.jgit.transport.URIish', '<init>', '^(file):([\\\\/](?![\\\\/])((?:[A-Za-z]:)?[\\\\/]?(?:(?:[^\\\\/]+[\\\\/]+)*[^\\\\/]+[\\\\/]*)))$', 'file:/tmp/jgit_test_9215790154376357519_tmp/tmp_4920629738042412768/.git/')",[13484]
"('URIish.java', 'org.eclipse.jgit.transport.URIish', '<init>', '^(file):([\\\\/](?![\\\\/])((?:[A-Za-z]:)?[\\\\/]?(?:(?:[^\\\\/]+[\\\\/]+)*[^\\\\/]+[\\\\/]*)))$', 'https://me:wtf@[::1]:1234/D:\\x')",[204534]
"('Description.java', 'org.junit.runner.Description', 'methodAndClassNamePatternGroupOrDefault', '([\\s\\S]*)\\((.*)\\)', 'testUpdateRefDetached(org.eclipse.jgit.internal.storage.file.RefUpdateTest)')","[120117, 120962]"
"('Description.java', 'org.junit.runner.Description', 'methodAndClassNamePatternGroupOrDefault', '([\\s\\S]*)\\((.*)\\)', 'testIntoSymbolicRefHeadPointingToMaster(org.eclipse.jgit.merge.MergeMessageFormatterTest)')","[16308, 16636]"
"('URIish.java', 'org.eclipse.jgit.transport.URIish', '<init>', '^([a-z][a-z0-9+-]+)://(?:(?:([^/:@]+)(?::([^\\\\/]+))?@)?((?:[^\\\\/:]+)|(?:\\[[0-9a-f:]+\\]))(?::(\\d+))?((?:/~(?:[^\\\\/]+))?[\\\\/]))?(.+)?$', 'ssh://me:wtf@[::1]:80//abc')",[193031]
"('ChangeIdUtil.java', 'org.eclipse.jgit.util.ChangeIdUtil', 'indexOfFirstFooterLine', '(^[a-zA-Z0-9-]+:(?!//).*$)', 'Signed-off-by: J Author <ja@example.com>')","[34504, 34711, 34891, 35402, 35557, 35660, 35841, 36022]"
"('ChangeIdUtil.java', 'org.eclipse.jgit.util.ChangeIdUtil', 'indexOfChangeId', '(^Change-Id: *I[a-f0-9]{40}$)', 'b')","[37244, 37400]"
"('Description.java', 'org.junit.runner.Description', 'methodAndClassNamePatternGroupOrDefault', '([\\s\\S]*)\\((.*)\\)', 'commitAmendWithAuthorShouldUseIt(org.eclipse.jgit.api.CommitCommandTest)')","[123231, 123451]"
"('URIish.java', 'org.eclipse.jgit.transport.URIish', '<init>', '^([a-z][a-z0-9+-]+)://(?:(?:([^/:@]+)(?::([^\\\\/]+))?@)?((?:[^\\\\/:]+)|(?:\\[[0-9a-f:]+\\]))(?::(\\d+))?((?:/~(?:[^\\\\/]+))?[\\\\/]))?(.+)?$', 'ssh://lusr\\example:wtf@1.2.3.4:80/D:\\x')",[195065]
"('URIish.java', 'org.eclipse.jgit.transport.URIish', '<init>', '^([a-z][a-z0-9+-]+)://(?:(?:([^/:@]+)(?::([^\\\\/]+))?@)?((?:[^\\\\/:]+)|(?:\\[[0-9a-f:]+\\]))(?::(\\d+))?((?:/~(?:[^\\\\/]+))?[\\\\/]))?(.+)?$', 'http://lusr\\example@[::1]:80/D:\\x')",[216885]
"('URIish.java', 'org.eclipse.jgit.transport.URIish', '<init>', '^(file):([\\\\/](?![\\\\/])((?:[A-Za-z]:)?[\\\\/]?(?:(?:[^\\\\/]+[\\\\/]+)*[^\\\\/]+[\\\\/]*)))$', '/tmp/jgit_test_8097070924435391496_tmp/tmp_383454845786079686/.git')","[129821, 129955]"
"('Description.java', 'org.junit.runner.Description', 'methodAndClassNamePatternGroupOrDefault', '([\\s\\S]*)\\((.*)\\)', 'test006_ReadUglyConfig(org.eclipse.jgit.internal.storage.file.T0003_BasicTest)')","[116441, 116971]"
"('URIish.java', 'org.eclipse.jgit.transport.URIish', '<init>', '^([a-z][a-z0-9+-]+)://(?:(?:([^/:@]+)(?::([^\\\\/]+))?@)?((?:[^\\\\/:]+)|(?:\\[[0-9a-f:]+\\]))(?::(\\d+))?((?:/~(?:[^\\\\/]+))?[\\\\/]))?(.+)?$', 'https://lusr\\example@1.2.3.4//')","[233330, 233514]"
"('Description.java', 'org.junit.runner.Description', 'methodAndClassNamePatternGroupOrDefault', '([\\s\\S]*)\\((.*)\\)', 'testDirectoryFileConflicts_18(org.eclipse.jgit.lib.DirCacheCheckoutTest)')","[61755, 62841]"
"('Description.java', 'org.junit.runner.Description', 'methodAndClassNamePatternGroupOrDefault', '([\\s\\S]*)\\((.*)\\)', 'org.eclipse.jgit.util.RefListTest')","[19781, 20793]"
"('Description.java', 'org.junit.runner.Description', 'methodAndClassNamePatternGroupOrDefault', '([\\s\\S]*)\\((.*)\\)', 'testVerySimpleWildCardCase3(org.eclipse.jgit.fnmatch.FileNameMatcherTest)')","[41608, 44876]"
"('Description.java', 'org.junit.runner.Description', 'methodAndClassNamePatternGroupOrDefault', '([\\s\\S]*)\\((.*)\\)', 'testResetDefaultMode(org.eclipse.jgit.api.ResetCommandTest)')","[167293, 167637]"
"('Description.java', 'org.junit.runner.Description', 'methodAndClassNamePatternGroupOrDefault', '([\\s\\S]*)\\((.*)\\)', 'testOnlyOption_f1_11_c(org.eclipse.jgit.api.CommitOnlyTest)')","[135844, 137933]"
"('Description.java', 'org.junit.runner.Description', 'methodAndClassNamePatternGroupOrDefault', '([\\s\\S]*)\\((.*)\\)', 'testOnlyOption_f1_6_b(org.eclipse.jgit.api.CommitOnlyTest)')","[134983, 137031]"
"('Description.java', 'org.junit.runner.Description', 'methodAndClassNamePatternGroupOrDefault', '([\\s\\S]*)\\((.*)\\)', 'testInvalidTagNoObject2(org.eclipse.jgit.lib.ObjectCheckerTest)')","[49907, 52462]"
"('Description.java', 'org.junit.runner.Description', 'methodAndClassNamePatternGroupOrDefault', '([\\s\\S]*)\\((.*)\\)', 'test4(org.eclipse.jgit.revwalk.RevWalkPathFilter6012Test)')","[178993, 179144]"
"('Description.java', 'org.junit.runner.Description', 'methodAndClassNamePatternGroupOrDefault', '([\\s\\S]*)\\((.*)\\)', 'testPunctGroupCase0(org.eclipse.jgit.fnmatch.FileNameMatcherTest)')","[43183, 46526]"
"('Description.java', 'org.junit.runner.Description', 'methodAndClassNamePatternGroupOrDefault', '([\\s\\S]*)\\((.*)\\)', 'testInvalidTreeNameIsNotMacHFSGit(org.eclipse.jgit.lib.ObjectCheckerTest)')","[49844, 52396]"
"('Description.java', 'org.junit.runner.Description', 'methodAndClassNamePatternGroupOrDefault', '([\\s\\S]*)\\((.*)\\)', 'test009_SymlinkAndGitlink(org.eclipse.jgit.lib.T0002_TreeTest)')","[58465, 58760]"
"('Description.java', 'org.junit.runner.Description', 'methodAndClassNamePatternGroupOrDefault', '([\\s\\S]*)\\((.*)\\)', 'testBareCloneRepository(org.eclipse.jgit.api.CloneCommandTest)')","[158968, 159267]"
"('URIish.java', 'org.eclipse.jgit.transport.URIish', '<init>', '^([\\\\/]?((?:[A-Za-z]:)?[\\\\/]?(?:(?:[^\\\\/]+[\\\\/]+)*[^\\\\/]+[\\\\/]*)))$', '/abc/.git')",[249361]
"('Description.java', 'org.junit.runner.Description', 'methodAndClassNamePatternGroupOrDefault', '([\\s\\S]*)\\((.*)\\)', 'test17_FromString(org.eclipse.jgit.lib.AbbreviatedObjectIdTest)')","[55315, 55849]"
"('Description.java', 'org.junit.runner.Description', 'methodAndClassNamePatternGroupOrDefault', '([\\s\\S]*)\\((.*)\\)', 'testQuote_BareA(org.eclipse.jgit.util.QuotedStringBourneUserPathStyleTest)')","[28955, 29215]"
"('URIish.java', 'org.eclipse.jgit.transport.URIish', '<init>', '^(file):([\\\\/](?![\\\\/])((?:[A-Za-z]:)?[\\\\/]?(?:(?:[^\\\\/]+[\\\\/]+)*[^\\\\/]+[\\\\/]*)))$', 'ssh://[::1]/D:/x')","[234871, 235055, 235975, 236159, 237079, 237263]"
"('Description.java', 'org.junit.runner.Description', 'methodAndClassNamePatternGroupOrDefault', '([\\s\\S]*)\\((.*)\\)', 'testNoSpace(org.eclipse.jgit.lib.ValidRefNameTest)')","[66012, 66386]"
"('Description.java', 'org.junit.runner.Description', 'methodAndClassNamePatternGroupOrDefault', '([\\s\\S]*)\\((.*)\\)', 'testValidTreeSorting3(org.eclipse.jgit.lib.ObjectCheckerTest)')","[49067, 51582]"
"('Description.java', 'org.junit.runner.Description', 'methodAndClassNamePatternGroupOrDefault', '([\\s\\S]*)\\((.*)\\)', 'testOnlyOption_f1_12_c(org.eclipse.jgit.api.CommitOnlyTest)')","[135949, 138043]"
"('Description.java', 'org.junit.runner.Description', 'methodAndClassNamePatternGroupOrDefault', '([\\s\\S]*)\\((.*)\\)', 'testDequote_UnknownEscapeQ(org.eclipse.jgit.util.QuotedStringGitPathStyleTest)')","[39996, 40429]"
"('Description.java', 'org.junit.runner.Description', 'methodAndClassNamePatternGroupOrDefault', '([\\s\\S]*)\\((.*)\\)', 'testPushWithoutPushRefSpec(org.eclipse.jgit.api.PushCommandTest)')","[140579, 140710]"
"('Description.java', 'org.junit.runner.Description', 'methodAndClassNamePatternGroupOrDefault', '([\\s\\S]*)\\((.*)\\)', 'testFilePathCase1(org.eclipse.jgit.fnmatch.FileNameMatcherTest)')","[43288, 46636]"
"('URIish.java', 'org.eclipse.jgit.transport.URIish', '<init>', '^(file):([\\\\/](?![\\\\/])((?:[A-Za-z]:)?[\\\\/]?(?:(?:[^\\\\/]+[\\\\/]+)*[^\\\\/]+[\\\\/]*)))$', 'file:///tmp/jgit_test_6994561984974601045_tmp/tmp_2388301606729275401/.git/')",[59115]
"('URIish.java', 'org.eclipse.jgit.transport.URIish', '<init>', '^(file):([\\\\/](?![\\\\/])((?:[A-Za-z]:)?[\\\\/]?(?:(?:[^\\\\/]+[\\\\/]+)*[^\\\\/]+[\\\\/]*)))$', 'ssh+git://lusr\\example:wtf@1.2.3.4:80/D:/x')",[199098]
"('Description.java', 'org.junit.runner.Description', 'methodAndClassNamePatternGroupOrDefault', '([\\s\\S]*)\\((.*)\\)', 'workingDirectoryEditPreCommit(org.eclipse.jgit.api.StashApplyCommandTest)')","[142435, 142983]"
"('Description.java', 'org.junit.runner.Description', 'methodAndClassNamePatternGroupOrDefault', '([\\s\\S]*)\\((.*)\\)', 'testCloneRepositoryExplicitGitDirNonStd(org.eclipse.jgit.api.CloneCommandTest)')","[158905, 159201]"
"('Description.java', 'org.junit.runner.Description', 'methodAndClassNamePatternGroupOrDefault', '([\\s\\S]*)\\((.*)\\)', 'testEscapedBracket1(org.eclipse.jgit.fnmatch.FileNameMatcherTest)')","[44485, 47890]"
"('ChangeIdUtil.java', 'org.eclipse.jgit.util.ChangeIdUtil', 'indexOfFirstFooterLine', '(^[a-zA-Z0-9-]+:(?!//).*$)', 'Commit body')","[16784, 16810]"
"('URIish.java', 'org.eclipse.jgit.transport.URIish', '<init>', '^(file):([\\\\/](?![\\\\/])((?:[A-Za-z]:)?[\\\\/]?(?:(?:[^\\\\/]+[\\\\/]+)*[^\\\\/]+[\\\\/]*)))$', 'ssh+git://example.com/D:/x')","[237447, 237631, 238551, 238735, 239655, 239839]"
"('Description.java', 'org.junit.runner.Description', 'methodAndClassNamePatternGroupOrDefault', '([\\s\\S]*)\\((.*)\\)', 'testEnsurePathCapacityGrows(org.eclipse.jgit.treewalk.AbstractTreeIteratorTest)')","[266813, 266963]"
"('Description.java', 'org.junit.runner.Description', 'methodAndClassNamePatternGroupOrDefault', '([\\s\\S]*)\\((.*)\\)', 'testNoFooters_OneLineBodyWithLF(org.eclipse.jgit.revwalk.FooterLineTest)')","[173822, 174240]"
"('Description.java', 'org.junit.runner.Description', 'methodAndClassNamePatternGroupOrDefault', '([\\s\\S]*)\\((.*)\\)', 'org.eclipse.jgit.revwalk.RevWalkPathFilter1Test')","[175266, 176353]"
"('URIish.java', 'org.eclipse.jgit.transport.URIish', '<init>', '^(file):([\\\\/](?![\\\\/])((?:[A-Za-z]:)?[\\\\/]?(?:(?:[^\\\\/]+[\\\\/]+)*[^\\\\/]+[\\\\/]*)))$', '/a/b/c/')",[248809]
"('URIish.java', 'org.eclipse.jgit.transport.URIish', '<init>', '^([a-z][a-z0-9+-]+)://(?:(?:([^/:@]+)(?::([^\\\\/]+))?@)?((?:[^\\\\/:]+)|(?:\\[[0-9a-f:]+\\]))(?::(\\d+))?((?:/~(?:[^\\\\/]+))?[\\\\/]))?(.+)?$', 'https://me:wtf@example.com:80//abc')",[203224]
"('Description.java', 'org.junit.runner.Description', 'methodAndClassNamePatternGroupOrDefault', '([\\s\\S]*)\\((.*)\\)', 'testSimpleStarCase0(org.eclipse.jgit.fnmatch.FileNameMatcherTest)')","[42784, 46108]"
"('Description.java', 'org.junit.runner.Description', 'methodAndClassNamePatternGroupOrDefault', '([\\s\\S]*)\\((.*)\\)', 'org.eclipse.jgit.treewalk.filter.InterIndexDiffFilterTest')","[263875, 264113]"
"('URIish.java', 'org.eclipse.jgit.transport.URIish', '<init>', '^(file):([\\\\/](?![\\\\/])((?:[A-Za-z]:)?[\\\\/]?(?:(?:[^\\\\/]+[\\\\/]+)*[^\\\\/]+[\\\\/]*)))$', 'ssh+git://l usr\\example.com:wtf@1.2.3.4:1234//')",[197718]
"('URIish.java', 'org.eclipse.jgit.transport.URIish', '<init>', '^([a-z][a-z0-9+-]+)://(?:(?:([^/:@]+)(?::([^\\\\/]+))?@)?((?:[^\\\\/:]+)|(?:\\[[0-9a-f:]+\\]))(?::(\\d+))?((?:/~(?:[^\\\\/]+))?[\\\\/]))?(.+)?$', 'http://lusr\\example@1.2.3.4:1234//abc')",[216241]
"('URIish.java', 'org.eclipse.jgit.transport.URIish', '<init>', '^(file):([\\\\/](?![\\\\/])((?:[A-Za-z]:)?[\\\\/]?(?:(?:[^\\\\/]+[\\\\/]+)*[^\\\\/]+[\\\\/]*)))$', 'http://me:wtf@[::1]:80/D:/x')",[200570]
"('URIish.java', 'org.eclipse.jgit.transport.URIish', '<init>', '^([a-z][a-z0-9+-]+)://(?:(?:([^/:@]+)(?::([^\\\\/]+))?@)?((?:[^\\\\/:]+)|(?:\\[[0-9a-f:]+\\]))(?::(\\d+))?((?:/~(?:[^\\\\/]+))?[\\\\/]))?(.+)?$', 'file:///tmp/jgit_test_8626667126801225208_tmp/tmp_7113505270375999961')","[162593, 162655]"
"('URIish.java', 'org.eclipse.jgit.transport.URIish', '<init>', '^([a-z][a-z0-9+-]+)://(?:(?:([^/:@]+)(?::([^\\\\/]+))?@)?((?:[^\\\\/:]+)|(?:\\[[0-9a-f:]+\\]))(?::(\\d+))?((?:/~(?:[^\\\\/]+))?[\\\\/]))?(.+)?$', 'http://lusr\\example@1.2.3.4//abc')","[230064, 230248]"
"('URIish.java', 'org.eclipse.jgit.transport.URIish', '<init>', '^(file):([\\\\/](?![\\\\/])((?:[A-Za-z]:)?[\\\\/]?(?:(?:[^\\\\/]+[\\\\/]+)*[^\\\\/]+[\\\\/]*)))$', 'ssh://l usr\\example.com@example.com:1234/D:/x')",[208168]
"('Description.java', 'org.junit.runner.Description', 'methodAndClassNamePatternGroupOrDefault', '([\\s\\S]*)\\((.*)\\)', 'testAddRemovedCommittedFile(org.eclipse.jgit.api.AddCommandTest)')","[164579, 165008]"
"('FastIgnoreRule.java', 'org.eclipse.jgit.ignore.FastIgnoreRule', 'isMatch', '[\\p{Ll}]', 'h')",[99831]
"('Description.java', 'org.junit.runner.Description', 'methodAndClassNamePatternGroupOrDefault', '([\\s\\S]*)\\((.*)\\)', 'org.eclipse.jgit.util.Base64Test')","[22828, 23023]"
"('Description.java', 'org.junit.runner.Description', 'methodAndClassNamePatternGroupOrDefault', '([\\s\\S]*)\\((.*)\\)', 'testAddWithConflicts(org.eclipse.jgit.api.AddCommandTest)')","[164432, 164854]"
"('URIish.java', 'org.eclipse.jgit.transport.URIish', '<init>', '^(file):([\\\\/](?![\\\\/])((?:[A-Za-z]:)?[\\\\/]?(?:(?:[^\\\\/]+[\\\\/]+)*[^\\\\/]+[\\\\/]*)))$', 'file:///tmp/jgit_test_4203544178191705150_tmp/tmp_1072081446307725160.git/')","[143982, 144037]"
"('ChangeIdUtil.java', 'org.eclipse.jgit.util.ChangeIdUtil', 'indexOfChangeId', '(^Change-Id: *I[a-f0-9]{40}$)', 'Change-Id:    I0123456789012345678901234567890123456789')",[36098]
"('URIish.java', 'org.eclipse.jgit.transport.URIish', '<init>', '^(?:([^/:@]+)(?::([^\\\\/]+))?@)?([^\\\\/:]{2,}):([\\\\/](?:(?:[^\\\\/]+[\\\\/]+)*[^\\\\/]+[\\\\/]*))$', '/more/dirs')","[255056, 255756, 257392]"
"('Description.java', 'org.junit.runner.Description', 'methodAndClassNamePatternGroupOrDefault', '([\\s\\S]*)\\((.*)\\)', 'testEdit_InsertNearCommonTail(org.eclipse.jgit.diff.MyersDiffTest)')","[8583, 9136]"
"('URIish.java', 'org.eclipse.jgit.transport.URIish', '<init>', '^(file):([\\\\/](?![\\\\/])((?:[A-Za-z]:)?[\\\\/]?(?:(?:[^\\\\/]+[\\\\/]+)*[^\\\\/]+[\\\\/]*)))$', 'http://me@1.2.3.4/D:/x')","[227879, 228063]"
"('Description.java', 'org.junit.runner.Description', 'methodAndClassNamePatternGroupOrDefault', '([\\s\\S]*)\\((.*)\\)', 'testUpToDate(org.eclipse.jgit.api.RebaseCommandTest)')","[132314, 133844]"
"('Description.java', 'org.junit.runner.Description', 'methodAndClassNamePatternGroupOrDefault', '([\\s\\S]*)\\((.*)\\)', 'testJVMDefaultLocale(org.eclipse.jgit.nls.NLSTest)')","[40894, 40979]"
"('URIish.java', 'org.eclipse.jgit.transport.URIish', '<init>', '^(file):([\\\\/](?![\\\\/])((?:[A-Za-z]:)?[\\\\/]?(?:(?:[^\\\\/]+[\\\\/]+)*[^\\\\/]+[\\\\/]*)))$', 'https://lusr\\example:wtf@1.2.3.4:80/D:/x')",[206512]
"('URIish.java', 'org.eclipse.jgit.transport.URIish', '<init>', '^(file):([\\\\/](?![\\\\/])((?:[A-Za-z]:)?[\\\\/]?(?:(?:[^\\\\/]+[\\\\/]+)*[^\\\\/]+[\\\\/]*)))$', 'ssh://lusr\\example@1.2.3.4:80//abc')",[209778]
"('URIish.java', 'org.eclipse.jgit.transport.URIish', '<init>', '^([a-z][a-z0-9+-]+)://(?:(?:([^/:@]+)(?::([^\\\\/]+))?@)?((?:[^\\\\/:]+)|(?:\\[[0-9a-f:]+\\]))(?::(\\d+))?((?:/~(?:[^\\\\/]+))?[\\\\/]))?(.+)?$', 'ssh+git://me@[::1]:1234/D:\\x')",[211181]
"('Description.java', 'org.junit.runner.Description', 'methodAndClassNamePatternGroupOrDefault', '([\\s\\S]*)\\((.*)\\)', 'testMarkUninterestingPropagation(org.eclipse.jgit.revwalk.ObjectWalkTest)')","[177381, 177574]"
"('Description.java', 'org.junit.runner.Description', 'methodAndClassNamePatternGroupOrDefault', '([\\s\\S]*)\\((.*)\\)', 'testRebasePreservingMergesWithUnrelatedSide1(org.eclipse.jgit.api.RebaseCommandTest)')","[131474, 132964]"
"('Description.java', 'org.junit.runner.Description', 'methodAndClassNamePatternGroupOrDefault', '([\\s\\S]*)\\((.*)\\)', 'testAddRemovedFile(org.eclipse.jgit.api.AddCommandTest)')","[164474, 164898]"
"('URIish.java', 'org.eclipse.jgit.transport.URIish', '<init>', '^(file):([\\\\/](?![\\\\/])((?:[A-Za-z]:)?[\\\\/]?(?:(?:[^\\\\/]+[\\\\/]+)*[^\\\\/]+[\\\\/]*)))$', 'https://lusr\\example:wtf@[::1]:1234/D:/x')",[206696]
"('Description.java', 'org.junit.runner.Description', 'methodAndClassNamePatternGroupOrDefault', '([\\s\\S]*)\\((.*)\\)', 'testBaseEqualsOurs(org.eclipse.jgit.notes.NoteMapMergerTest)')","[259632, 260005]"
"('URIish.java', 'org.eclipse.jgit.transport.URIish', '<init>', '^([a-z][a-z0-9+-]+)://(?:(?:([^/:@]+)(?::([^\\\\/]+))?@)?((?:[^\\\\/:]+)|(?:\\[[0-9a-f:]+\\]))(?::(\\d+))?((?:/~(?:[^\\\\/]+))?[\\\\/]))?(.+)?$', 'http://l usr\\example.com:wtf@[::1]:80/D:/x')",[201697]
"('Description.java', 'org.junit.runner.Description', 'methodAndClassNamePatternGroupOrDefault', '([\\s\\S]*)\\((.*)\\)', 'testLowerGroupCase5[OldRule? true](org.eclipse.jgit.ignore.IgnoreRuleSpecialCasesTest)')","[89215, 96299]"
"('Description.java', 'org.junit.runner.Description', 'methodAndClassNamePatternGroupOrDefault', '([\\s\\S]*)\\((.*)\\)', 'testIteratorReturnedValues1(org.eclipse.jgit.internal.storage.file.PackIndexV1Test)')","[113605, 113735]"
"('FastIgnoreRule.java', 'org.eclipse.jgit.ignore.FastIgnoreRule', 'isMatch', '.r[a-c]', 'cr3')",[107724]
"('Description.java', 'org.junit.runner.Description', 'methodAndClassNamePatternGroupOrDefault', '([\\s\\S]*)\\((.*)\\)', 'testParseGitFileName_NoSecondLine(org.eclipse.jgit.patch.FileHeaderTest)')","[345, 811]"
"('Description.java', 'org.junit.runner.Description', 'methodAndClassNamePatternGroupOrDefault', '([\\s\\S]*)\\((.*)\\)', 'testRemoveRevFlag(org.eclipse.jgit.revwalk.RevObjectTest)')","[178165, 178380]"
"('URIish.java', 'org.eclipse.jgit.transport.URIish', '<init>', '^([a-z][a-z0-9+-]+)://(?:(?:([^/:@]+)(?::([^\\\\/]+))?@)?((?:[^\\\\/:]+)|(?:\\[[0-9a-f:]+\\]))(?::(\\d+))?((?:/~(?:[^\\\\/]+))?[\\\\/]))?(.+)?$', 'http://me@example.com:80/D:/x')",[213895]
"('URIish.java', 'org.eclipse.jgit.transport.URIish', '<init>', '^(file):([\\\\/](?![\\\\/])((?:[A-Za-z]:)?[\\\\/]?(?:(?:[^\\\\/]+[\\\\/]+)*[^\\\\/]+[\\\\/]*)))$', 'file:/tmp/jgit_test_1219138336105598436_tmp/tmp_1741996323951038484/.git/')",[10541]
"('AttributesRule.java', 'org.eclipse.jgit.attributes.AttributesRule', 'isMatch', '.rc', 'src')","[76103, 76130, 76184, 76238, 76265]"
"('Description.java', 'org.junit.runner.Description', 'methodAndClassNamePatternGroupOrDefault', '([\\s\\S]*)\\((.*)\\)', 'testSshProto(org.eclipse.jgit.transport.URIishTest)')","[189031, 190436]"
"('Description.java', 'org.junit.runner.Description', 'methodAndClassNamePatternGroupOrDefault', '([\\s\\S]*)\\((.*)\\)', 'testEditFanout2_38(org.eclipse.jgit.notes.NoteMapTest)')","[258378, 258638]"
"('URIish.java', 'org.eclipse.jgit.transport.URIish', '<init>', '^(file):([\\\\/](?![\\\\/])((?:[A-Za-z]:)?[\\\\/]?(?:(?:[^\\\\/]+[\\\\/]+)*[^\\\\/]+[\\\\/]*)))$', 'ssh+git://lusr\\example@1.2.3.4/D:\\x')","[226821, 227005]"
"('URIish.java', 'org.eclipse.jgit.transport.URIish', '<init>', '^([a-z][a-z0-9+-]+)://(?:(?:([^/:@]+)(?::([^\\\\/]+))?@)?((?:[^\\\\/:]+)|(?:\\[[0-9a-f:]+\\]))(?::(\\d+))?((?:/~(?:[^\\\\/]+))?[\\\\/]))?(.+)?$', 'https://lusr\\example@1.2.3.4:80/D:/x')",[220358]
"('Description.java', 'org.junit.runner.Description', 'methodAndClassNamePatternGroupOrDefault', '([\\s\\S]*)\\((.*)\\)', 'testRebaseInteractiveReword(org.eclipse.jgit.api.RebaseCommandTest)')","[131621, 133118]"
"('URIish.java', 'org.eclipse.jgit.transport.URIish', '<init>', '^(file):([\\\\/](?![\\\\/])((?:[A-Za-z]:)?[\\\\/]?(?:(?:[^\\\\/]+[\\\\/]+)*[^\\\\/]+[\\\\/]*)))$', 'ssh://me:wtf@1.2.3.4:80/D:/x')",[192686]
"('Description.java', 'org.junit.runner.Description', 'methodAndClassNamePatternGroupOrDefault', '([\\s\\S]*)\\((.*)\\)', 'testReadFanout2_2_36(org.eclipse.jgit.notes.NoteMapTest)')","[258399, 258660]"
"('URIish.java', 'org.eclipse.jgit.transport.URIish', '<init>', '^([a-z][a-z0-9+-]+)://(?:(?:([^/:@]+)(?::([^\\\\/]+))?@)?((?:[^\\\\/:]+)|(?:\\[[0-9a-f:]+\\]))(?::(\\d+))?((?:/~(?:[^\\\\/]+))?[\\\\/]))?(.+)?$', 'ssh://example.com//abc')","[234112, 234296, 235216, 235400, 236320, 236504]"
"('Description.java', 'org.junit.runner.Description', 'methodAndClassNamePatternGroupOrDefault', '([\\s\\S]*)\\((.*)\\)', 'testIterator(org.eclipse.jgit.lib.ObjectIdSubclassMapTest)')","[64004, 64157]"
"('Description.java', 'org.junit.runner.Description', 'methodAndClassNamePatternGroupOrDefault', '([\\s\\S]*)\\((.*)\\)', 'testCheckoutOutChangesAutoCRLFtrueBinary(org.eclipse.jgit.lib.DirCacheCheckoutTest)')","[61902, 62995]"
"('Description.java', 'org.junit.runner.Description', 'methodAndClassNamePatternGroupOrDefault', '([\\s\\S]*)\\((.*)\\)', 'testGraphGroupCase5(org.eclipse.jgit.fnmatch.FileNameMatcherTest)')","[42049, 45338]"
"('URIish.java', 'org.eclipse.jgit.transport.URIish', '<init>', '^(file):([\\\\/](?![\\\\/])((?:[A-Za-z]:)?[\\\\/]?(?:(?:[^\\\\/]+[\\\\/]+)*[^\\\\/]+[\\\\/]*)))$', 'https://me@[::1]:80/D:/x')",[217943]
"('Description.java', 'org.junit.runner.Description', 'methodAndClassNamePatternGroupOrDefault', '([\\s\\S]*)\\((.*)\\)', 'testMultipleHeads(org.eclipse.jgit.api.MergeCommandTest)')","[126769, 127703]"
"('Description.java', 'org.junit.runner.Description', 'methodAndClassNamePatternGroupOrDefault', '([\\s\\S]*)\\((.*)\\)', 'multiplePathsNoMerge(org.eclipse.jgit.api.NameRevCommandTest)')","[168748, 168980]"
"('Description.java', 'org.junit.runner.Description', 'methodAndClassNamePatternGroupOrDefault', '([\\s\\S]*)\\((.*)\\)', 'testRevisionBare(org.eclipse.jgit.gitrepo.RepoCommandTest)')","[2510, 3274]"
"('Description.java', 'org.junit.runner.Description', 'methodAndClassNamePatternGroupOrDefault', '([\\s\\S]*)\\((.*)\\)', 'testParse_PublicParseMethod(org.eclipse.jgit.revwalk.RevCommitParseTest)')","[182551, 182921]"
"('Description.java', 'org.junit.runner.Description', 'methodAndClassNamePatternGroupOrDefault', '([\\s\\S]*)\\((.*)\\)', 'testParseUnicodeName_DeleteFile(org.eclipse.jgit.patch.FileHeaderTest)')","[723, 1501]"
"('Description.java', 'org.junit.runner.Description', 'methodAndClassNamePatternGroupOrDefault', '([\\s\\S]*)\\((.*)\\)', 'testAddRepoManifest(org.eclipse.jgit.gitrepo.RepoCommandTest)')","[2489, 2845]"
"('Description.java', 'org.junit.runner.Description', 'methodAndClassNamePatternGroupOrDefault', '([\\s\\S]*)\\((.*)\\)', 'testUnsupportedOptionalExtension(org.eclipse.jgit.dircache.DirCacheCGitCompatabilityTest)')","[172939, 173087]"
"('Description.java', 'org.junit.runner.Description', 'methodAndClassNamePatternGroupOrDefault', '([\\s\\S]*)\\((.*)\\)', 'testTwoGroupsCase1[OldRule? false](org.eclipse.jgit.ignore.IgnoreRuleSpecialCasesTest)')","[86204, 93309]"
"('URIish.java', 'org.eclipse.jgit.transport.URIish', '<init>', '^([a-z][a-z0-9+-]+)://(?:(?:([^/:@]+)(?::([^\\\\/]+))?@)?((?:[^\\\\/:]+)|(?:\\[[0-9a-f:]+\\]))(?::(\\d+))?((?:/~(?:[^\\\\/]+))?[\\\\/]))?(.+)?$', 'ssh://me@[::1]:1234/D:\\x')",[207869]
"('URIish.java', 'org.eclipse.jgit.transport.URIish', '<init>', '^(file):([\\\\/](?![\\\\/])((?:[A-Za-z]:)?[\\\\/]?(?:(?:[^\\\\/]+[\\\\/]+)*[^\\\\/]+[\\\\/]*)))$', '/tmp/jgit_test_2667399414619613576_tmp/tmp_2988195032823876487')","[153699, 153824, 153973]"
"('Description.java', 'org.junit.runner.Description', 'methodAndClassNamePatternGroupOrDefault', '([\\s\\S]*)\\((.*)\\)', 'testInvalidTreeNameIsDotGitSomethingSpaceSomething(org.eclipse.jgit.lib.ObjectCheckerTest)')","[48689, 51186]"
"('URIish.java', 'org.eclipse.jgit.transport.URIish', '<init>', '^(file):([\\\\/](?![\\\\/])((?:[A-Za-z]:)?[\\\\/]?(?:(?:[^\\\\/]+[\\\\/]+)*[^\\\\/]+[\\\\/]*)))$', 'https://lusr\\example:wtf@[::1]:80/D:\\x')",[206926]
"('URIish.java', 'org.eclipse.jgit.transport.URIish', '<init>', '^([a-z][a-z0-9+-]+)://(?:(?:([^/:@]+)(?::([^\\\\/]+))?@)?((?:[^\\\\/:]+)|(?:\\[[0-9a-f:]+\\]))(?::(\\d+))?((?:/~(?:[^\\\\/]+))?[\\\\/]))?(.+)?$', 'http://l usr\\example.com@[::1]:80/D:\\x')",[215781]
"('FastIgnoreRule.java', 'org.eclipse.jgit.ignore.FastIgnoreRule', 'isMatch', '[ab]', 'a')",[102617]
"('Description.java', 'org.junit.runner.Description', 'methodAndClassNamePatternGroupOrDefault', '([\\s\\S]*)\\((.*)\\)', 'testEscapedBracket3(org.eclipse.jgit.fnmatch.FileNameMatcherTest)')","[44527, 47934]"
"('URIish.java', 'org.eclipse.jgit.transport.URIish', '<init>', '^(file):([\\\\/](?![\\\\/])((?:[A-Za-z]:)?[\\\\/]?(?:(?:[^\\\\/]+[\\\\/]+)*[^\\\\/]+[\\\\/]*)))$', 'https://l usr\\example.com@example.com:1234//abc')",[218081]
"('Description.java', 'org.junit.runner.Description', 'methodAndClassNamePatternGroupOrDefault', '([\\s\\S]*)\\((.*)\\)', 'testInvalidCommitNoAuthor(org.eclipse.jgit.lib.ObjectCheckerTest)')","[50138, 52704]"
"('Description.java', 'org.junit.runner.Description', 'methodAndClassNamePatternGroupOrDefault', '([\\s\\S]*)\\((.*)\\)', 'org.eclipse.jgit.dircache.DirCacheIteratorTest')","[170043, 171195]"
"('Description.java', 'org.junit.runner.Description', 'methodAndClassNamePatternGroupOrDefault', '([\\s\\S]*)\\((.*)\\)', 'testReadLong(org.eclipse.jgit.lib.ConfigTest)')","[69747, 70478]"
"('Description.java', 'org.junit.runner.Description', 'methodAndClassNamePatternGroupOrDefault', '([\\s\\S]*)\\((.*)\\)', 'testContext5(org.eclipse.jgit.diff.DiffFormatterReflowTest)')","[8031, 8247]"
"('Description.java', 'org.junit.runner.Description', 'methodAndClassNamePatternGroupOrDefault', '([\\s\\S]*)\\((.*)\\)', 'testXDigitGroupCase0(org.eclipse.jgit.fnmatch.FileNameMatcherTest)')","[43939, 47318]"
"('URIish.java', 'org.eclipse.jgit.transport.URIish', '<init>', '^(file):([\\\\/](?![\\\\/])((?:[A-Za-z]:)?[\\\\/]?(?:(?:[^\\\\/]+[\\\\/]+)*[^\\\\/]+[\\\\/]*)))$', 'https://lusr\\example:wtf@1.2.3.4:1234/D:\\x')",[206374]
"('URIish.java', 'org.eclipse.jgit.transport.URIish', '<init>', '^([a-z][a-z0-9+-]+)://(?:(?:([^/:@]+)(?::([^\\\\/]+))?@)?((?:[^\\\\/:]+)|(?:\\[[0-9a-f:]+\\]))(?::(\\d+))?((?:/~(?:[^\\\\/]+))?[\\\\/]))?(.+)?$', 'ssh+git://lusr\\example:wtf@example.com:1234//')",[198477]
"('Description.java', 'org.junit.runner.Description', 'methodAndClassNamePatternGroupOrDefault', '([\\s\\S]*)\\((.*)\\)', 'testHasAllFlag(org.eclipse.jgit.revwalk.RevObjectTest)')","[178207, 178424]"
"('Description.java', 'org.junit.runner.Description', 'methodAndClassNamePatternGroupOrDefault', '([\\s\\S]*)\\((.*)\\)', 'testMatch_Prefix(org.eclipse.jgit.util.RawParseUtils_MatchTest)')","[22660, 22747]"
"('Description.java', 'org.junit.runner.Description', 'methodAndClassNamePatternGroupOrDefault', '([\\s\\S]*)\\((.*)\\)', 'checkMergeEqualNewTrees(org.eclipse.jgit.merge.ResolveMergerTest)')","[12595, 12950]"
"('URIish.java', 'org.eclipse.jgit.transport.URIish', '<init>', '^([a-z][a-z0-9+-]+)://(?:(?:([^/:@]+)(?::([^\\\\/]+))?@)?((?:[^\\\\/:]+)|(?:\\[[0-9a-f:]+\\]))(?::(\\d+))?((?:/~(?:[^\\\\/]+))?[\\\\/]))?(.+)?$', 'example.com:/some/p ath')","[250994, 251086]"
"('Description.java', 'org.junit.runner.Description', 'methodAndClassNamePatternGroupOrDefault', '([\\s\\S]*)\\((.*)\\)', 'testQuote_BareA(org.eclipse.jgit.util.QuotedStringGitPathStyleTest)')","[40017, 40451]"
"('Description.java', 'org.junit.runner.Description', 'methodAndClassNamePatternGroupOrDefault', '([\\s\\S]*)\\((.*)\\)', 'testVerySimpleGroupRangeCase2[OldRule? true](org.eclipse.jgit.ignore.IgnoreRuleSpecialCasesTest)')","[90112, 97196]"
"('Description.java', 'org.junit.runner.Description', 'methodAndClassNamePatternGroupOrDefault', '([\\s\\S]*)\\((.*)\\)', 'whileRefLockedRefNotPackedNoError(org.eclipse.jgit.internal.storage.file.GcPackRefsTest)')","[122788, 122918]"
"('URIish.java', 'org.eclipse.jgit.transport.URIish', '<init>', '^([a-z][a-z0-9+-]+)://(?:(?:([^/:@]+)(?::([^\\\\/]+))?@)?((?:[^\\\\/:]+)|(?:\\[[0-9a-f:]+\\]))(?::(\\d+))?((?:/~(?:[^\\\\/]+))?[\\\\/]))?(.+)?$', 'http://[::1]//abc')","[241472, 241656, 242576, 242760, 243680, 243864]"
"('URIish.java', 'org.eclipse.jgit.transport.URIish', '<init>', '^([a-z][a-z0-9+-]+)://(?:(?:([^/:@]+)(?::([^\\\\/]+))?@)?((?:[^\\\\/:]+)|(?:\\[[0-9a-f:]+\\]))(?::(\\d+))?((?:/~(?:[^\\\\/]+))?[\\\\/]))?(.+)?$', 'https://me:wtf@[::1]:1234//')",[204419]
"('Description.java', 'org.junit.runner.Description', 'methodAndClassNamePatternGroupOrDefault', '([\\s\\S]*)\\((.*)\\)', 'testGetFastForwardMergeoptions(org.eclipse.jgit.lib.ConfigTest)')","[69495, 70214]"
"('Description.java', 'org.junit.runner.Description', 'methodAndClassNamePatternGroupOrDefault', '([\\s\\S]*)\\((.*)\\)', 'testFilter_ALL_And_NONE(org.eclipse.jgit.revwalk.RevWalkFilterTest)')","[180794, 181122]"
"('Description.java', 'org.junit.runner.Description', 'methodAndClassNamePatternGroupOrDefault', '([\\s\\S]*)\\((.*)\\)', 'test007_readUserConfig(org.eclipse.jgit.lib.ConfigTest)')","[70104, 70852]"
"('Description.java', 'org.junit.runner.Description', 'methodAndClassNamePatternGroupOrDefault', '([\\s\\S]*)\\((.*)\\)', 'testLinesAllDeletedShortenedWalk(org.eclipse.jgit.api.blame.BlameGeneratorTest)')","[134144, 134208]"
"('Repository.java', 'org.eclipse.jgit.lib.Repository', 'resolve', '^-\\d+$', '7')","[65459, 65486]"
"('Description.java', 'org.junit.runner.Description', 'methodAndClassNamePatternGroupOrDefault', '([\\s\\S]*)\\((.*)\\)', 'testEmptyIfRootIsEmpty(org.eclipse.jgit.treewalk.FileTreeIteratorTest)')","[261977, 262314]"
"('Description.java', 'org.junit.runner.Description', 'methodAndClassNamePatternGroupOrDefault', '([\\s\\S]*)\\((.*)\\)', 'org.eclipse.jgit.dircache.DirCachePathEditTest')","[170597, 170749]"
"('URIish.java', 'org.eclipse.jgit.transport.URIish', '<init>', '^(file):([\\\\/](?![\\\\/])((?:[A-Za-z]:)?[\\\\/]?(?:(?:[^\\\\/]+[\\\\/]+)*[^\\\\/]+[\\\\/]*)))$', 'https://l usr\\example.com:wtf@[::1]:80/D:\\x')",[205822]
"('Description.java', 'org.junit.runner.Description', 'methodAndClassNamePatternGroupOrDefault', '([\\s\\S]*)\\((.*)\\)', 'testVerySimpleWildcardCase0[OldRule? true](org.eclipse.jgit.ignore.IgnoreRuleSpecialCasesTest)')","[90250, 97334]"
"('Description.java', 'org.junit.runner.Description', 'methodAndClassNamePatternGroupOrDefault', '([\\s\\S]*)\\((.*)\\)', 'testMaliciousAbsolutePathIsOkSecondCheckout(org.eclipse.jgit.lib.DirCacheCheckoutMaliciousPathTest)')","[67201, 68119]"
"('Description.java', 'org.junit.runner.Description', 'methodAndClassNamePatternGroupOrDefault', '([\\s\\S]*)\\((.*)\\)', 'org.eclipse.jgit.dircache.DirCacheFindTest')","[172123, 172189]"
"('Description.java', 'org.junit.runner.Description', 'methodAndClassNamePatternGroupOrDefault', '([\\s\\S]*)\\((.*)\\)', 'testSkip(org.eclipse.jgit.util.io.UnionInputStreamTest)')","[25245, 25457]"
"('Description.java', 'org.junit.runner.Description', 'methodAndClassNamePatternGroupOrDefault', '([\\s\\S]*)\\((.*)\\)', 'testParse_implicit_UTF8_encoded(org.eclipse.jgit.revwalk.RevTagParseTest)')","[179604, 180010]"
"('Description.java', 'org.junit.runner.Description', 'methodAndClassNamePatternGroupOrDefault', '([\\s\\S]*)\\((.*)\\)', 'org.eclipse.jgit.internal.storage.file.PackIndexV2Test')","[114515, 114796]"
"('Description.java', 'org.junit.runner.Description', 'methodAndClassNamePatternGroupOrDefault', '([\\s\\S]*)\\((.*)\\)', 'testPunctGroupCase1[OldRule? false](org.eclipse.jgit.ignore.IgnoreRuleSpecialCasesTest)')","[86756, 93861]"
"('Description.java', 'org.junit.runner.Description', 'methodAndClassNamePatternGroupOrDefault', '([\\s\\S]*)\\((.*)\\)', 'testExtendA(org.eclipse.jgit.diff.EditTest)')","[5884, 6223]"
"('Description.java', 'org.junit.runner.Description', 'methodAndClassNamePatternGroupOrDefault', '([\\s\\S]*)\\((.*)\\)', 'org.eclipse.jgit.transport.RemoteConfigTest')","[253149, 258174]"
"('Description.java', 'org.junit.runner.Description', 'methodAndClassNamePatternGroupOrDefault', '([\\s\\S]*)\\((.*)\\)', 'testHeadReflog(org.eclipse.jgit.api.ReflogCommandTest)')","[166832, 166898]"
"('URIish.java', 'org.eclipse.jgit.transport.URIish', '<init>', '^(file):([\\\\/](?![\\\\/])((?:[A-Za-z]:)?[\\\\/]?(?:(?:[^\\\\/]+[\\\\/]+)*[^\\\\/]+[\\\\/]*)))$', 'http://l usr\\example.com:wtf@[::1]:80/D:/x')",[201674]
"('Description.java', 'org.junit.runner.Description', 'methodAndClassNamePatternGroupOrDefault', '([\\s\\S]*)\\((.*)\\)', 'testTrailingSlash(org.eclipse.jgit.attributes.AttributesMatcherTest)')","[73607, 73761]"
"('URIish.java', 'org.eclipse.jgit.transport.URIish', '<init>', '^(file):([\\\\/](?![\\\\/])((?:[A-Za-z]:)?[\\\\/]?(?:(?:[^\\\\/]+[\\\\/]+)*[^\\\\/]+[\\\\/]*)))$', 'http://me@example.com:80/D:/x')",[213872]
"('Description.java', 'org.junit.runner.Description', 'methodAndClassNamePatternGroupOrDefault', '([\\s\\S]*)\\((.*)\\)', 'org.eclipse.jgit.nls.RootLocaleTest')","[41104, 41299]"
"('URIish.java', 'org.eclipse.jgit.transport.URIish', '<init>', '^(file):([\\\\/](?![\\\\/])((?:[A-Za-z]:)?[\\\\/]?(?:(?:[^\\\\/]+[\\\\/]+)*[^\\\\/]+[\\\\/]*)))$', 'https://l usr\\example.com:wtf@[::1]:1234/D:/x')",[205592]
"('URIish.java', 'org.eclipse.jgit.transport.URIish', '<init>', '^(file):([\\\\/](?![\\\\/])((?:[A-Za-z]:)?[\\\\/]?(?:(?:[^\\\\/]+[\\\\/]+)*[^\\\\/]+[\\\\/]*)))$', 'http://lusr\\example@[::1]:1234//abc')",[216586]
"('URIish.java', 'org.eclipse.jgit.transport.URIish', '<init>', '^(file):([\\\\/](?![\\\\/])((?:[A-Za-z]:)?[\\\\/]?(?:(?:[^\\\\/]+[\\\\/]+)*[^\\\\/]+[\\\\/]*)))$', 'git://example.com:333/home/m y')","[249177, 249223]"
"('Description.java', 'org.junit.runner.Description', 'methodAndClassNamePatternGroupOrDefault', '([\\s\\S]*)\\((.*)\\)', 'testHasChangeidWithReplacementInLastLineNoLineBreak(org.eclipse.jgit.util.ChangeIdUtilTest)')","[32098, 32855]"
"('Description.java', 'org.junit.runner.Description', 'methodAndClassNamePatternGroupOrDefault', '([\\s\\S]*)\\((.*)\\)', 'testEmpty(org.eclipse.jgit.util.TemporaryBufferTest)')","[26491, 26788]"
"('URIish.java', 'org.eclipse.jgit.transport.URIish', '<init>', '^([a-z][a-z0-9+-]+)://(?:(?:([^/:@]+)(?::([^\\\\/]+))?@)?((?:[^\\\\/:]+)|(?:\\[[0-9a-f:]+\\]))(?::(\\d+))?((?:/~(?:[^\\\\/]+))?[\\\\/]))?(.+)?$', 'ssh://me@1.2.3.4/D:/x')","[221278, 221462]"
"('Description.java', 'org.junit.runner.Description', 'methodAndClassNamePatternGroupOrDefault', '([\\s\\S]*)\\((.*)\\)', 'testParentDirectoryGitIgnores(org.eclipse.jgit.ignore.IgnoreMatcherTest)')","[102928, 103118]"
"('Description.java', 'org.junit.runner.Description', 'methodAndClassNamePatternGroupOrDefault', '([\\s\\S]*)\\((.*)\\)', 'testNoAsciiControlCharacters(org.eclipse.jgit.lib.ValidRefNameTest)')","[65802, 66166]"
"('Description.java', 'org.junit.runner.Description', 'methodAndClassNamePatternGroupOrDefault', '([\\s\\S]*)\\((.*)\\)', 'testCntrlGroupCase0[OldRule? true](org.eclipse.jgit.ignore.IgnoreRuleSpecialCasesTest)')","[89238, 96322]"
"('Description.java', 'org.junit.runner.Description', 'methodAndClassNamePatternGroupOrDefault', '([\\s\\S]*)\\((.*)\\)', 'testDuplicateParents(org.eclipse.jgit.revplot.PlotCommitListTest)')","[169364, 169684]"
"('URIish.java', 'org.eclipse.jgit.transport.URIish', '<init>', '^([a-z][a-z0-9+-]+)://(?:(?:([^/:@]+)(?::([^\\\\/]+))?@)?((?:[^\\\\/:]+)|(?:\\[[0-9a-f:]+\\]))(?::(\\d+))?((?:/~(?:[^\\\\/]+))?[\\\\/]))?(.+)?$', 'ssh://l usr\\example.com:wtf@example.com:1234/D:\\x')",[193307]
"('URIish.java', 'org.eclipse.jgit.transport.URIish', '<init>', '^([a-z][a-z0-9+-]+)://(?:(?:([^/:@]+)(?::([^\\\\/]+))?@)?((?:[^\\\\/:]+)|(?:\\[[0-9a-f:]+\\]))(?::(\\d+))?((?:/~(?:[^\\\\/]+))?[\\\\/]))?(.+)?$', 'ssh://me:wtf@1.2.3.4:80/D:/x')",[192709]
"('PathMatcher.java', 'org.eclipse.jgit.ignore.internal.PathMatcher', 'iterate', 'a.', 'a')","[84498, 84527]"
"('URIish.java', 'org.eclipse.jgit.transport.URIish', '<init>', '^(file):([\\\\/](?![\\\\/])((?:[A-Za-z]:)?[\\\\/]?(?:(?:[^\\\\/]+[\\\\/]+)*[^\\\\/]+[\\\\/]*)))$', 'example.com:some/p ath')","[190903, 190972]"
"('URIish.java', 'org.eclipse.jgit.transport.URIish', '<init>', '^(file):([\\\\/](?![\\\\/])((?:[A-Za-z]:)?[\\\\/]?(?:(?:[^\\\\/]+[\\\\/]+)*[^\\\\/]+[\\\\/]*)))$', 'http://l usr\\example.com@[::1]:1234/D:/x')",[215528]
"('Description.java', 'org.junit.runner.Description', 'methodAndClassNamePatternGroupOrDefault', '([\\s\\S]*)\\((.*)\\)', 'testCoreAutoCrlf2(org.eclipse.jgit.api.BlameCommandTest)')","[139652, 140032]"
"('URIish.java', 'org.eclipse.jgit.transport.URIish', '<init>', '^([a-z][a-z0-9+-]+)://(?:(?:([^/:@]+)(?::([^\\\\/]+))?@)?((?:[^\\\\/:]+)|(?:\\[[0-9a-f:]+\\]))(?::(\\d+))?((?:/~(?:[^\\\\/]+))?[\\\\/]))?(.+)?$', '/another/dir')","[254888, 255588, 257224]"
"('ChangeIdUtil.java', 'org.eclipse.jgit.util.ChangeIdUtil', 'indexOfChangeId', '(^Change-Id: *I[a-f0-9]{40}$)', 'd')",[37348]
"('Description.java', 'org.junit.runner.Description', 'methodAndClassNamePatternGroupOrDefault', '([\\s\\S]*)\\((.*)\\)', 'testDigitGroupCase4[OldRule? false](org.eclipse.jgit.ignore.IgnoreRuleSpecialCasesTest)')","[86457, 93562]"
"('FastIgnoreRule.java', 'org.eclipse.jgit.ignore.FastIgnoreRule', 'isMatch', '[\\p{Space}]', '\t')",[100299]
"('Description.java', 'org.junit.runner.Description', 'methodAndClassNamePatternGroupOrDefault', '([\\s\\S]*)\\((.*)\\)', 'testMatch_TooSmall(org.eclipse.jgit.util.RawParseUtils_MatchTest)')","[22681, 22769]"
"('Description.java', 'org.junit.runner.Description', 'methodAndClassNamePatternGroupOrDefault', '([\\s\\S]*)\\((.*)\\)', 'testFilter_Negate_ALL(org.eclipse.jgit.revwalk.RevWalkFilterTest)')","[180584, 180902]"
"('URIish.java', 'org.eclipse.jgit.transport.URIish', '<init>', '^([a-z][a-z0-9+-]+)://(?:(?:([^/:@]+)(?::([^\\\\/]+))?@)?((?:[^\\\\/:]+)|(?:\\[[0-9a-f:]+\\]))(?::(\\d+))?((?:/~(?:[^\\\\/]+))?[\\\\/]))?(.+)?$', '/tmp/jgit_test_2667399414619613576_tmp/tmp_2988195032823876487')","[153723, 153853, 154006]"
"('URIish.java', 'org.eclipse.jgit.transport.URIish', '<init>', '^(file):([\\\\/](?![\\\\/])((?:[A-Za-z]:)?[\\\\/]?(?:(?:[^\\\\/]+[\\\\/]+)*[^\\\\/]+[\\\\/]*)))$', 'file:///tmp/jgit_test_8422413440265261651_tmp/tmp_7920018543723792281')","[139372, 139429, 139521]"
"('URIish.java', 'org.eclipse.jgit.transport.URIish', '<init>', '^(file):([\\\\/](?![\\\\/])((?:[A-Za-z]:)?[\\\\/]?(?:(?:[^\\\\/]+[\\\\/]+)*[^\\\\/]+[\\\\/]*)))$', 'http://l usr\\example.com:wtf@1.2.3.4:80/D:/x')",[201306]
"('Description.java', 'org.junit.runner.Description', 'methodAndClassNamePatternGroupOrDefault', '([\\s\\S]*)\\((.*)\\)', 'testFileRepository_ChangeEventsOnlyOnSave(org.eclipse.jgit.events.ConfigChangeEventTest)')","[16968, 16990]"
"('URIish.java', 'org.eclipse.jgit.transport.URIish', '<init>', '^([\\\\/]?((?:[A-Za-z]:)?[\\\\/]?(?:(?:[^\\\\/]+[\\\\/]+)*[^\\\\/]+[\\\\/]*)))$', '/tmp/jgit_test_1060628017969836137_tmp/tmp_884518266944927743.git')","[185771, 185953]"
"('URIish.java', 'org.eclipse.jgit.transport.URIish', '<init>', '^(file):([\\\\/](?![\\\\/])((?:[A-Za-z]:)?[\\\\/]?(?:(?:[^\\\\/]+[\\\\/]+)*[^\\\\/]+[\\\\/]*)))$', 'https://me@[::1]//')","[231467, 231651]"
"('Description.java', 'org.junit.runner.Description', 'methodAndClassNamePatternGroupOrDefault', '([\\s\\S]*)\\((.*)\\)', 'testToString_NoPrefix(org.eclipse.jgit.util.RefMapTest)')","[21186, 21665]"
"('URIish.java', 'org.eclipse.jgit.transport.URIish', '<init>', '^(file):([\\\\/](?![\\\\/])((?:[A-Za-z]:)?[\\\\/]?(?:(?:[^\\\\/]+[\\\\/]+)*[^\\\\/]+[\\\\/]*)))$', 'ssh://lusr\\example:wtf@1.2.3.4:1234//abc')",[194766]
"('Description.java', 'org.junit.runner.Description', 'methodAndClassNamePatternGroupOrDefault', '([\\s\\S]*)\\((.*)\\)', 'testGetRefs_LooseOverridesPacked(org.eclipse.jgit.internal.storage.file.RefDirectoryTest)')","[110992, 112175]"
"('Description.java', 'org.junit.runner.Description', 'methodAndClassNamePatternGroupOrDefault', '([\\s\\S]*)\\((.*)\\)', 'testGetRefs_DeatchedHead1(org.eclipse.jgit.internal.storage.file.RefDirectoryTest)')","[110950, 112131]"
"('URIish.java', 'org.eclipse.jgit.transport.URIish', '<init>', '^(file):([\\\\/](?![\\\\/])((?:[A-Za-z]:)?[\\\\/]?(?:(?:[^\\\\/]+[\\\\/]+)*[^\\\\/]+[\\\\/]*)))$', 'ssh+git://[::1]/D:/x')","[238183, 238367, 239287, 239471, 240391, 240575]"
"('Description.java', 'org.junit.runner.Description', 'methodAndClassNamePatternGroupOrDefault', '([\\s\\S]*)\\((.*)\\)', 'testDequote_NamedEscapes(org.eclipse.jgit.util.QuotedStringBourneUserPathStyleTest)')","[28934, 29193]"
"('FastIgnoreRule.java', 'org.eclipse.jgit.ignore.FastIgnoreRule', 'isMatch', '[\\p{Ll}]', 'ä')",[99909]
"('FastIgnoreRule.java', 'org.eclipse.jgit.ignore.FastIgnoreRule', 'isMatch', '[A\\p{Ll}C3-5]', '4')",[99441]
"('Description.java', 'org.junit.runner.Description', 'methodAndClassNamePatternGroupOrDefault', '([\\s\\S]*)\\((.*)\\)', 'testExpandFromDestination_Wildcard(org.eclipse.jgit.transport.RefSpecTest)')","[187074, 187819]"
"('URIish.java', 'org.eclipse.jgit.transport.URIish', '<init>', '^([\\\\/]?((?:[A-Za-z]:)?[\\\\/]?(?:(?:[^\\\\/]+[\\\\/]+)*[^\\\\/]+[\\\\/]*)))$', '/tmp/jgit_test_7458934864323210735_tmp/tmp_3824345633208984745.git')",[185429]
"('Description.java', 'org.junit.runner.Description', 'methodAndClassNamePatternGroupOrDefault', '([\\s\\S]*)\\((.*)\\)', 'testGetRefs_DiscoversNewLoose2(org.eclipse.jgit.internal.storage.file.RefDirectoryTest)')","[111517, 112725]"
"('URIish.java', 'org.eclipse.jgit.transport.URIish', '<init>', '^([a-z][a-z0-9+-]+)://(?:(?:([^/:@]+)(?::([^\\\\/]+))?@)?((?:[^\\\\/:]+)|(?:\\[[0-9a-f:]+\\]))(?::(\\d+))?((?:/~(?:[^\\\\/]+))?[\\\\/]))?(.+)?$', 'ssh+git://l usr\\example.com@[::1]//abc')","[226016, 226200]"
"('URIish.java', 'org.eclipse.jgit.transport.URIish', '<init>', '^(file):([\\\\/](?![\\\\/])((?:[A-Za-z]:)?[\\\\/]?(?:(?:[^\\\\/]+[\\\\/]+)*[^\\\\/]+[\\\\/]*)))$', 'https://l usr\\example.com@example.com:80//')",[218219]
"('Description.java', 'org.junit.runner.Description', 'methodAndClassNamePatternGroupOrDefault', '([\\s\\S]*)\\((.*)\\)', 'testLowerGroupCase1[OldRule? false](org.eclipse.jgit.ignore.IgnoreRuleSpecialCasesTest)')","[85560, 92665]"
"('FastIgnoreRule.java', 'org.eclipse.jgit.ignore.FastIgnoreRule', 'isMatch', '[\\p{Space}]', 'a')",[100379]
"('Description.java', 'org.junit.runner.Description', 'methodAndClassNamePatternGroupOrDefault', '([\\s\\S]*)\\((.*)\\)', 'testEmptyFolderUntracked(org.eclipse.jgit.treewalk.filter.IndexDiffFilterTest)')","[264842, 265673]"
"('Description.java', 'org.junit.runner.Description', 'methodAndClassNamePatternGroupOrDefault', '([\\s\\S]*)\\((.*)\\)', 'commitAmendOnInitialShouldFail(org.eclipse.jgit.api.CommitCommandTest)')","[123210, 123429]"
"('URIish.java', 'org.eclipse.jgit.transport.URIish', '<init>', '^([a-z][a-z0-9+-]+)://(?:(?:([^/:@]+)(?::([^\\\\/]+))?@)?((?:[^\\\\/:]+)|(?:\\[[0-9a-f:]+\\]))(?::(\\d+))?((?:/~(?:[^\\\\/]+))?[\\\\/]))?(.+)?$', 'ssh+git://l usr\\example.com@[::1]:1234/D:\\x')",[212285]
"('Description.java', 'org.junit.runner.Description', 'methodAndClassNamePatternGroupOrDefault', '([\\s\\S]*)\\((.*)\\)', 'testManySolutionsCase1[OldRule? false](org.eclipse.jgit.ignore.IgnoreRuleSpecialCasesTest)')","[87147, 94252]"
"('URIish.java', 'org.eclipse.jgit.transport.URIish', '<init>', '^(file):([\\\\/](?![\\\\/])((?:[A-Za-z]:)?[\\\\/]?(?:(?:[^\\\\/]+[\\\\/]+)*[^\\\\/]+[\\\\/]*)))$', 'http://me@1.2.3.4:80//abc')",[214194]
"('Description.java', 'org.junit.runner.Description', 'methodAndClassNamePatternGroupOrDefault', '([\\s\\S]*)\\((.*)\\)', 'testSetFive_MixedOrder(org.eclipse.jgit.notes.LeafBucketTest)')","[260191, 260427]"
"('FastIgnoreRule.java', 'org.eclipse.jgit.ignore.FastIgnoreRule', 'isMatch', '\\[[a]', '[')",[102721]
"('Description.java', 'org.junit.runner.Description', 'methodAndClassNamePatternGroupOrDefault', '([\\s\\S]*)\\((.*)\\)', 'testValidPosixTree(org.eclipse.jgit.lib.ObjectCheckerTest)')","[48710, 51208]"
"('URIish.java', 'org.eclipse.jgit.transport.URIish', '<init>', '^([a-z][a-z0-9+-]+)://(?:(?:([^/:@]+)(?::([^\\\\/]+))?@)?((?:[^\\\\/:]+)|(?:\\[[0-9a-f:]+\\]))(?::(\\d+))?((?:/~(?:[^\\\\/]+))?[\\\\/]))?(.+)?$', 'http://me@1.2.3.4:1234/D:/x')",[214079]
"('Description.java', 'org.junit.runner.Description', 'methodAndClassNamePatternGroupOrDefault', '([\\s\\S]*)\\((.*)\\)', 'testGetRefs_PackedNotPeeled_Sorted(org.eclipse.jgit.internal.storage.file.RefDirectoryTest)')","[111118, 112307]"
"('Description.java', 'org.junit.runner.Description', 'methodAndClassNamePatternGroupOrDefault', '([\\s\\S]*)\\((.*)\\)', 'testStopOnConflict(org.eclipse.jgit.api.RebaseCommandTest)')","[131243, 132722]"
"('Description.java', 'org.junit.runner.Description', 'methodAndClassNamePatternGroupOrDefault', '([\\s\\S]*)\\((.*)\\)', 'org.eclipse.jgit.lib.SymbolicRefTest')","[70934, 71248]"
"('Description.java', 'org.junit.runner.Description', 'methodAndClassNamePatternGroupOrDefault', '([\\s\\S]*)\\((.*)\\)', 'testCollapseFanoutAfterMerge(org.eclipse.jgit.notes.NoteMapMergerTest)')","[259338, 259697]"
"('URIish.java', 'org.eclipse.jgit.transport.URIish', '<init>', '^(file):([\\\\/](?![\\\\/])((?:[A-Za-z]:)?[\\\\/]?(?:(?:[^\\\\/]+[\\\\/]+)*[^\\\\/]+[\\\\/]*)))$', 'ssh://l usr\\example.com@[::1]/D:\\x')","[222773, 222957]"
"('Description.java', 'org.junit.runner.Description', 'methodAndClassNamePatternGroupOrDefault', '([\\s\\S]*)\\((.*)\\)', 'testInvalidTreeNameIsDotGitSomethingDot(org.eclipse.jgit.lib.ObjectCheckerTest)')","[50180, 52748]"
"('URIish.java', 'org.eclipse.jgit.transport.URIish', '<init>', '^(file):([\\\\/](?![\\\\/])((?:[A-Za-z]:)?[\\\\/]?(?:(?:[^\\\\/]+[\\\\/]+)*[^\\\\/]+[\\\\/]*)))$', 'ssh://l usr\\example.com@example.com:80//')",[208260]
"('Description.java', 'org.junit.runner.Description', 'methodAndClassNamePatternGroupOrDefault', '([\\s\\S]*)\\((.*)\\)', 'testDataAfterPackFooterSplitObjectRead(org.eclipse.jgit.transport.PackParserTest)')","[218465, 218727]"
"('Description.java', 'org.junit.runner.Description', 'methodAndClassNamePatternGroupOrDefault', '([\\s\\S]*)\\((.*)\\)', 'org.eclipse.jgit.lib.ObjectCheckerTest')","[48290, 53387]"
"('URIish.java', 'org.eclipse.jgit.transport.URIish', '<init>', '^(file):([\\\\/](?![\\\\/])((?:[A-Za-z]:)?[\\\\/]?(?:(?:[^\\\\/]+[\\\\/]+)*[^\\\\/]+[\\\\/]*)))$', 'https://lusr\\example@[::1]:80//abc')",[220657]
"('URIish.java', 'org.eclipse.jgit.transport.URIish', '<init>', '^([a-z][a-z0-9+-]+)://(?:(?:([^/:@]+)(?::([^\\\\/]+))?@)?((?:[^\\\\/:]+)|(?:\\[[0-9a-f:]+\\]))(?::(\\d+))?((?:/~(?:[^\\\\/]+))?[\\\\/]))?(.+)?$', 'ssh+git://lusr\\example@example.com:80/D:/x')",[212791]
"('Description.java', 'org.junit.runner.Description', 'methodAndClassNamePatternGroupOrDefault', '([\\s\\S]*)\\((.*)\\)', 'org.eclipse.jgit.lib.ThreadSafeProgressMonitorTest')","[68310, 68462]"
"('URIish.java', 'org.eclipse.jgit.transport.URIish', '<init>', '^(file):([\\\\/](?![\\\\/])((?:[A-Za-z]:)?[\\\\/]?(?:(?:[^\\\\/]+[\\\\/]+)*[^\\\\/]+[\\\\/]*)))$', 'ssh://me@1.2.3.4:1234/D:/x')",[207432]
"('URIish.java', 'org.eclipse.jgit.transport.URIish', '<init>', '^([a-z][a-z0-9+-]+)://(?:(?:([^/:@]+)(?::([^\\\\/]+))?@)?((?:[^\\\\/:]+)|(?:\\[[0-9a-f:]+\\]))(?::(\\d+))?((?:/~(?:[^\\\\/]+))?[\\\\/]))?(.+)?$', 'ssh://[::1]/D:/x')","[234894, 235078, 235998, 236182, 237102, 237286]"
"('Description.java', 'org.junit.runner.Description', 'methodAndClassNamePatternGroupOrDefault', '([\\s\\S]*)\\((.*)\\)', 'testSingleRevision(org.eclipse.jgit.api.BlameCommandTest)')","[139799, 140186]"
"('URIish.java', 'org.eclipse.jgit.transport.URIish', '<init>', '^([a-z][a-z0-9+-]+)://(?:(?:([^/:@]+)(?::([^\\\\/]+))?@)?((?:[^\\\\/:]+)|(?:\\[[0-9a-f:]+\\]))(?::(\\d+))?((?:/~(?:[^\\\\/]+))?[\\\\/]))?(.+)?$', 'ssh://l usr\\example.com:wtf@example.com:80//abc')",[193399]
"('Description.java', 'org.junit.runner.Description', 'methodAndClassNamePatternGroupOrDefault', '([\\s\\S]*)\\((.*)\\)', 'test2(org.eclipse.jgit.revwalk.RevWalkPathFilter6012Test)')","[178951, 179100]"
"('URIish.java', 'org.eclipse.jgit.transport.URIish', '<init>', '^(file):([\\\\/](?![\\\\/])((?:[A-Za-z]:)?[\\\\/]?(?:(?:[^\\\\/]+[\\\\/]+)*[^\\\\/]+[\\\\/]*)))$', 'file:/tmp/jgit_test_916033517641211181_tmp/tmp_6621953051006342817/.git/')",[19212]
"('URIish.java', 'org.eclipse.jgit.transport.URIish', '<init>', '^(file):([\\\\/](?![\\\\/])((?:[A-Za-z]:)?[\\\\/]?(?:(?:[^\\\\/]+[\\\\/]+)*[^\\\\/]+[\\\\/]*)))$', 'https://lusr\\example@1.2.3.4:80//abc')",[220289]
"('URIish.java', 'org.eclipse.jgit.transport.URIish', '<init>', '^([a-z][a-z0-9+-]+)://(?:(?:([^/:@]+)(?::([^\\\\/]+))?@)?((?:[^\\\\/:]+)|(?:\\[[0-9a-f:]+\\]))(?::(\\d+))?((?:/~(?:[^\\\\/]+))?[\\\\/]))?(.+)?$', 'https://[::1]/D:/x')","[244830, 245014, 245934, 246118, 247038, 247222]"
"('Description.java', 'org.junit.runner.Description', 'methodAndClassNamePatternGroupOrDefault', '([\\s\\S]*)\\((.*)\\)', 'testEdits_MatchNone(org.eclipse.jgit.revwalk.RevWalkPathFilter1Test)')","[175476, 175759]"
"('URIish.java', 'org.eclipse.jgit.transport.URIish', '<init>', '^(file):([\\\\/](?![\\\\/])((?:[A-Za-z]:)?[\\\\/]?(?:(?:[^\\\\/]+[\\\\/]+)*[^\\\\/]+[\\\\/]*)))$', 'ssh://lusr\\example@1.2.3.4/D:\\x')","[223509, 223693]"
"('Description.java', 'org.junit.runner.Description', 'methodAndClassNamePatternGroupOrDefault', '([\\s\\S]*)\\((.*)\\)', 'testNonNotesWithNonNoteConflict(org.eclipse.jgit.notes.NoteMapMergerTest)')","[259422, 259785]"
"('Description.java', 'org.junit.runner.Description', 'methodAndClassNamePatternGroupOrDefault', '([\\s\\S]*)\\((.*)\\)', 'testSetFileMode(org.eclipse.jgit.dircache.DirCacheEntryTest)')","[172685, 172815]"
"('Description.java', 'org.junit.runner.Description', 'methodAndClassNamePatternGroupOrDefault', '([\\s\\S]*)\\((.*)\\)', 'testMixedGroupCase2[OldRule? false](org.eclipse.jgit.ignore.IgnoreRuleSpecialCasesTest)')","[85169, 92274]"
"('FastIgnoreRule.java', 'org.eclipse.jgit.ignore.FastIgnoreRule', 'isMatch', '[\\p{Alnum}]', '1')",[102253]
"('URIish.java', 'org.eclipse.jgit.transport.URIish', '<init>', '^([a-z][a-z0-9+-]+)://(?:(?:([^/:@]+)(?::([^\\\\/]+))?@)?((?:[^\\\\/:]+)|(?:\\[[0-9a-f:]+\\]))(?::(\\d+))?((?:/~(?:[^\\\\/]+))?[\\\\/]))?(.+)?$', '/a/b/c/')",[248832]
"('Description.java', 'org.junit.runner.Description', 'methodAndClassNamePatternGroupOrDefault', '([\\s\\S]*)\\((.*)\\)', 'testFastForwardNoCommit(org.eclipse.jgit.api.MergeCommandTest)')","[126475, 127395]"
"('URIish.java', 'org.eclipse.jgit.transport.URIish', '<init>', '^([a-z][a-z0-9+-]+)://(?:(?:([^/:@]+)(?::([^\\\\/]+))?@)?((?:[^\\\\/:]+)|(?:\\[[0-9a-f:]+\\]))(?::(\\d+))?((?:/~(?:[^\\\\/]+))?[\\\\/]))?(.+)?$', 'http://me:wtf@example.com:80/D:/x')",[199857]
"('Description.java', 'org.junit.runner.Description', 'methodAndClassNamePatternGroupOrDefault', '([\\s\\S]*)\\((.*)\\)', 'testRenameOverExistingEmptyDirectory(org.eclipse.jgit.util.FileUtilTest)')","[23541, 23891]"
"('URIish.java', 'org.eclipse.jgit.transport.URIish', '<init>', '^([a-z][a-z0-9+-]+)://(?:(?:([^/:@]+)(?::([^\\\\/]+))?@)?((?:[^\\\\/:]+)|(?:\\[[0-9a-f:]+\\]))(?::(\\d+))?((?:/~(?:[^\\\\/]+))?[\\\\/]))?(.+)?$', 'ssh+git://l usr\\example.com:wtf@1.2.3.4:1234//')",[197741]
"('Description.java', 'org.junit.runner.Description', 'methodAndClassNamePatternGroupOrDefault', '([\\s\\S]*)\\((.*)\\)', 'org.eclipse.jgit.api.LogCommandTest')","[130694, 131018]"
"('Description.java', 'org.junit.runner.Description', 'methodAndClassNamePatternGroupOrDefault', '([\\s\\S]*)\\((.*)\\)', 'testForceMasterMaster(org.eclipse.jgit.transport.RefSpecTest)')","[186465, 187181]"
"('URIish.java', 'org.eclipse.jgit.transport.URIish', '<init>', '^([a-z][a-z0-9+-]+)://(?:(?:([^/:@]+)(?::([^\\\\/]+))?@)?((?:[^\\\\/:]+)|(?:\\[[0-9a-f:]+\\]))(?::(\\d+))?((?:/~(?:[^\\\\/]+))?[\\\\/]))?(.+)?$', 'git://example.com:333/home/m y')","[249200, 249246]"
"('Description.java', 'org.junit.runner.Description', 'methodAndClassNamePatternGroupOrDefault', '([\\s\\S]*)\\((.*)\\)', 'testFolderChangedToFile(org.eclipse.jgit.treewalk.filter.IndexDiffFilterTest)')","[264401, 265211]"
"('URIish.java', 'org.eclipse.jgit.transport.URIish', '<init>', '^([a-z][a-z0-9+-]+)://(?:(?:([^/:@]+)(?::([^\\\\/]+))?@)?((?:[^\\\\/:]+)|(?:\\[[0-9a-f:]+\\]))(?::(\\d+))?((?:/~(?:[^\\\\/]+))?[\\\\/]))?(.+)?$', 'http://l usr\\example.com:wtf@1.2.3.4:80//abc')",[201283]
"('URIish.java', 'org.eclipse.jgit.transport.URIish', '<init>', '^([a-z][a-z0-9+-]+)://(?:(?:([^/:@]+)(?::([^\\\\/]+))?@)?((?:[^\\\\/:]+)|(?:\\[[0-9a-f:]+\\]))(?::(\\d+))?((?:/~(?:[^\\\\/]+))?[\\\\/]))?(.+)?$', 'http://me@example.com//')","[227442, 227626]"
"('URIish.java', 'org.eclipse.jgit.transport.URIish', '<init>', '^(file):([\\\\/](?![\\\\/])((?:[A-Za-z]:)?[\\\\/]?(?:(?:[^\\\\/]+[\\\\/]+)*[^\\\\/]+[\\\\/]*)))$', 'ssh+git://lusr\\example@example.com:80/D:\\x')",[212814]
"('Description.java', 'org.junit.runner.Description', 'methodAndClassNamePatternGroupOrDefault', '([\\s\\S]*)\\((.*)\\)', 'testTwoGroupsCase0[OldRule? true](org.eclipse.jgit.ignore.IgnoreRuleSpecialCasesTest)')","[89744, 96828]"
"('Description.java', 'org.junit.runner.Description', 'methodAndClassNamePatternGroupOrDefault', '([\\s\\S]*)\\((.*)\\)', 'testMaliciousAbsoluteWindowsPath1OnUnix(org.eclipse.jgit.lib.DirCacheCheckoutMaliciousPathTest)')","[67327, 68251]"
"('Description.java', 'org.junit.runner.Description', 'methodAndClassNamePatternGroupOrDefault', '([\\s\\S]*)\\((.*)\\)', 'testCommitTimeRevFilter(org.eclipse.jgit.revwalk.RevWalkFilterTest)')","[180836, 181166]"
"('Description.java', 'org.junit.runner.Description', 'methodAndClassNamePatternGroupOrDefault', '([\\s\\S]*)\\((.*)\\)', 'testRebaseShouldSquashInCaseOfConflict(org.eclipse.jgit.api.RebaseCommandTest)')","[132461, 133998]"
"('FastIgnoreRule.java', 'org.eclipse.jgit.ignore.FastIgnoreRule', 'isMatch', 'a.', 'b')","[81834, 81888, 81942, 81996, 82050, 82104, 82401, 82482, 83246, 83300, 83354, 83435, 83651, 83705, 83786, 83867, 83921, 84002]"
"('QuotedString.java', 'org.eclipse.jgit.util.QuotedString$BourneUserPathStyle', 'quote', '^~[A-Za-z0-9_-]*/.*$', '~foo/')","[29626, 29650]"
"('URIish.java', 'org.eclipse.jgit.transport.URIish', '<init>', '^([a-z][a-z0-9+-]+)://(?:(?:([^/:@]+)(?::([^\\\\/]+))?@)?((?:[^\\\\/:]+)|(?:\\[[0-9a-f:]+\\]))(?::(\\d+))?((?:/~(?:[^\\\\/]+))?[\\\\/]))?(.+)?$', 'https://lusr\\example@example.com/D:/x')","[233054, 233238]"
"('URIish.java', 'org.eclipse.jgit.transport.URIish', '<init>', '^(file):([\\\\/](?![\\\\/])((?:[A-Za-z]:)?[\\\\/]?(?:(?:[^\\\\/]+[\\\\/]+)*[^\\\\/]+[\\\\/]*)))$', 'http://lusr\\example@example.com:1234/D:\\x')",[215942]
"('Description.java', 'org.junit.runner.Description', 'methodAndClassNamePatternGroupOrDefault', '([\\s\\S]*)\\((.*)\\)', 'testRules4thru13_IndexEntryNotInHead(org.eclipse.jgit.lib.DirCacheCheckoutTest)')","[61524, 62599]"
"('URIish.java', 'org.eclipse.jgit.transport.URIish', '<init>', '^(file):([\\\\/](?![\\\\/])((?:[A-Za-z]:)?[\\\\/]?(?:(?:[^\\\\/]+[\\\\/]+)*[^\\\\/]+[\\\\/]*)))$', '/another/dir')","[254864, 255564, 257200]"
"('Description.java', 'org.junit.runner.Description', 'methodAndClassNamePatternGroupOrDefault', '([\\s\\S]*)\\((.*)\\)', 'testVerySimpleGroupCase0[OldRule? false](org.eclipse.jgit.ignore.IgnoreRuleSpecialCasesTest)')","[88090, 95195]"
"('Description.java', 'org.junit.runner.Description', 'methodAndClassNamePatternGroupOrDefault', '([\\s\\S]*)\\((.*)\\)', 'testVerySimpleGroupRangeCase1(org.eclipse.jgit.fnmatch.FileNameMatcherTest)')","[43015, 46350]"
"('Description.java', 'org.junit.runner.Description', 'methodAndClassNamePatternGroupOrDefault', '([\\s\\S]*)\\((.*)\\)', 'testIndexSize(org.eclipse.jgit.internal.storage.pack.DeltaIndexTest)')","[108971, 109252]"
"('Description.java', 'org.junit.runner.Description', 'methodAndClassNamePatternGroupOrDefault', '([\\s\\S]*)\\((.*)\\)', 'testInvalidCommitNoCommitter2(org.eclipse.jgit.lib.ObjectCheckerTest)')","[49781, 52330]"
"('Description.java', 'org.junit.runner.Description', 'methodAndClassNamePatternGroupOrDefault', '([\\s\\S]*)\\((.*)\\)', 'testLimitObjectSize_Length130CopyOk(org.eclipse.jgit.internal.storage.pack.DeltaIndexTest)')","[108824, 109098]"
"('Description.java', 'org.junit.runner.Description', 'methodAndClassNamePatternGroupOrDefault', '([\\s\\S]*)\\((.*)\\)', 'shouldListChangesInWorkingTree(org.eclipse.jgit.diff.DiffEntryTest)')","[10061, 10322]"
"('Description.java', 'org.junit.runner.Description', 'methodAndClassNamePatternGroupOrDefault', '([\\s\\S]*)\\((.*)\\)', 'testMixedGroupCase8[OldRule? true](org.eclipse.jgit.ignore.IgnoreRuleSpecialCasesTest)')","[88870, 95954]"
"('FastIgnoreRule.java', 'org.eclipse.jgit.ignore.FastIgnoreRule', 'isMatch', '[[\\p{Graph}\\p{javaDigit}\\p{javaLetter}]]', '0')",[99727]
"('Description.java', 'org.junit.runner.Description', 'methodAndClassNamePatternGroupOrDefault', '([\\s\\S]*)\\((.*)\\)', 'testStandardFormat_SmallObject_CorruptZLibStream(org.eclipse.jgit.internal.storage.file.UnpackedObjectTest)')","[121832, 122161]"
"('Description.java', 'org.junit.runner.Description', 'methodAndClassNamePatternGroupOrDefault', '([\\s\\S]*)\\((.*)\\)', 'testAddWithoutParameterUpdate(org.eclipse.jgit.api.AddCommandTest)')","[164495, 164920]"
"('Description.java', 'org.junit.runner.Description', 'methodAndClassNamePatternGroupOrDefault', '([\\s\\S]*)\\((.*)\\)', 'unmergedPathsShouldCauseException(org.eclipse.jgit.api.StashCreateCommandTest)')","[155841, 156178]"
"('URIish.java', 'org.eclipse.jgit.transport.URIish', '<init>', '^(file):([\\\\/](?![\\\\/])((?:[A-Za-z]:)?[\\\\/]?(?:(?:[^\\\\/]+[\\\\/]+)*[^\\\\/]+[\\\\/]*)))$', 'https://l usr\\example.com:wtf@1.2.3.4:1234/D:/x')",[205224]
"('Description.java', 'org.junit.runner.Description', 'methodAndClassNamePatternGroupOrDefault', '([\\s\\S]*)\\((.*)\\)', 'testReadOneLine(org.eclipse.jgit.internal.storage.file.ReflogReaderTest)')","[119041, 119216]"
"('URIish.java', 'org.eclipse.jgit.transport.URIish', '<init>', '^([a-z][a-z0-9+-]+)://(?:(?:([^/:@]+)(?::([^\\\\/]+))?@)?((?:[^\\\\/:]+)|(?:\\[[0-9a-f:]+\\]))(?::(\\d+))?((?:/~(?:[^\\\\/]+))?[\\\\/]))?(.+)?$', 'http://l usr\\example.com:wtf@1.2.3.4:1234//')",[201053]
"('Description.java', 'org.junit.runner.Description', 'methodAndClassNamePatternGroupOrDefault', '([\\s\\S]*)\\((.*)\\)', 'testIndexOfChangeId(org.eclipse.jgit.util.ChangeIdUtilTest)')","[31741, 32481]"
"('Description.java', 'org.junit.runner.Description', 'methodAndClassNamePatternGroupOrDefault', '([\\s\\S]*)\\((.*)\\)', 'testValidTreeSorting8(org.eclipse.jgit.lib.ObjectCheckerTest)')","[49172, 51692]"
"('URIish.java', 'org.eclipse.jgit.transport.URIish', '<init>', '^(file):([\\\\/](?![\\\\/])((?:[A-Za-z]:)?[\\\\/]?(?:(?:[^\\\\/]+[\\\\/]+)*[^\\\\/]+[\\\\/]*)))$', 'file:/tmp/jgit_test_7381207999529287529_tmp/tmp_7255833410172097346/.git/')",[60155]
"('URIish.java', 'org.eclipse.jgit.transport.URIish', '<init>', '^([a-z][a-z0-9+-]+)://(?:(?:([^/:@]+)(?::([^\\\\/]+))?@)?((?:[^\\\\/:]+)|(?:\\[[0-9a-f:]+\\]))(?::(\\d+))?((?:/~(?:[^\\\\/]+))?[\\\\/]))?(.+)?$', 'ssh://lusr\\example@[::1]/D:\\x')","[223900, 224084]"
"('Description.java', 'org.junit.runner.Description', 'methodAndClassNamePatternGroupOrDefault', '([\\s\\S]*)\\((.*)\\)', 'testOnlyOption_f1_12_b(org.eclipse.jgit.api.CommitOnlyTest)')","[135928, 138021]"
"('Description.java', 'org.junit.runner.Description', 'methodAndClassNamePatternGroupOrDefault', '([\\s\\S]*)\\((.*)\\)', 'testEqualsIgnoreCase3(org.eclipse.jgit.util.StringUtilsTest)')","[27173, 27324]"
"('URIish.java', 'org.eclipse.jgit.transport.URIish', '<init>', '^(file):([\\\\/](?![\\\\/])((?:[A-Za-z]:)?[\\\\/]?(?:(?:[^\\\\/]+[\\\\/]+)*[^\\\\/]+[\\\\/]*)))$', 'ssh://%3ax%25:%40%41x@example.com:33/some%c3%a5/p%20a th')","[248947, 248993]"
"('Description.java', 'org.junit.runner.Description', 'methodAndClassNamePatternGroupOrDefault', '([\\s\\S]*)\\((.*)\\)', 'testInvalidTreeNameIsMacHFSGit3(org.eclipse.jgit.lib.ObjectCheckerTest)')","[48479, 50966]"
"('URIish.java', 'org.eclipse.jgit.transport.URIish', '<init>', '^([a-z][a-z0-9+-]+)://(?:(?:([^/:@]+)(?::([^\\\\/]+))?@)?((?:[^\\\\/:]+)|(?:\\[[0-9a-f:]+\\]))(?::(\\d+))?((?:/~(?:[^\\\\/]+))?[\\\\/]))?(.+)?$', 'https://l usr\\example.com@[::1]:80/D:\\x')",[219668]
"('URIish.java', 'org.eclipse.jgit.transport.URIish', '<init>', '^([a-z][a-z0-9+-]+)://(?:(?:([^/:@]+)(?::([^\\\\/]+))?@)?((?:[^\\\\/:]+)|(?:\\[[0-9a-f:]+\\]))(?::(\\d+))?((?:/~(?:[^\\\\/]+))?[\\\\/]))?(.+)?$', 'file:///tmp/jgit_test_1212230039583698495_tmp/tmp_6607950726549284424/.git/')",[5529]
"('URIish.java', 'org.eclipse.jgit.transport.URIish', '<init>', '^(file):([\\\\/](?![\\\\/])((?:[A-Za-z]:)?[\\\\/]?(?:(?:[^\\\\/]+[\\\\/]+)*[^\\\\/]+[\\\\/]*)))$', 'http://me@1.2.3.4:1234//')",[213964]
"('Description.java', 'org.junit.runner.Description', 'methodAndClassNamePatternGroupOrDefault', '([\\s\\S]*)\\((.*)\\)', 'testTwoRangesInOneGroupCase2[OldRule? false](org.eclipse.jgit.ignore.IgnoreRuleSpecialCasesTest)')","[87998, 95103]"
"('Description.java', 'org.junit.runner.Description', 'methodAndClassNamePatternGroupOrDefault', '([\\s\\S]*)\\((.*)\\)', 'testStandardFormat_SmallObject_TrailingGarbage(org.eclipse.jgit.internal.storage.file.UnpackedObjectTest)')","[121685, 122007]"
"('URIish.java', 'org.eclipse.jgit.transport.URIish', '<init>', '^(file):([\\\\/](?![\\\\/])((?:[A-Za-z]:)?[\\\\/]?(?:(?:[^\\\\/]+[\\\\/]+)*[^\\\\/]+[\\\\/]*)))$', 'https://lusr\\example:wtf@example.com:80/D:/x')",[206144]
"('Description.java', 'org.junit.runner.Description', 'methodAndClassNamePatternGroupOrDefault', '([\\s\\S]*)\\((.*)\\)', 'testRename(org.eclipse.jgit.api.BlameCommandTest)')","[139925, 140318]"
"('Description.java', 'org.junit.runner.Description', 'methodAndClassNamePatternGroupOrDefault', '([\\s\\S]*)\\((.*)\\)', 'testParsePersonIdent_incompleteCases(org.eclipse.jgit.util.RawParseUtils_ParsePersonIdentTest)')","[38820, 38905]"
"('Description.java', 'org.junit.runner.Description', 'methodAndClassNamePatternGroupOrDefault', '([\\s\\S]*)\\((.*)\\)', 'testEmptyInputs(org.eclipse.jgit.diff.MyersDiffTest)')","[8728, 9158]"
"('URIish.java', 'org.eclipse.jgit.transport.URIish', '<init>', '^(?:([^/:@]+)(?::([^\\\\/]+))?@)?([^\\\\/:]{2,}):([\\\\/](?:(?:[^\\\\/]+[\\\\/]+)*[^\\\\/]+[\\\\/]*))$', '\\\\some\\place')","[191317, 191432]"
"('Description.java', 'org.junit.runner.Description', 'methodAndClassNamePatternGroupOrDefault', '([\\s\\S]*)\\((.*)\\)', 'testOneBlockAndHalf_BulkWrite(org.eclipse.jgit.util.TemporaryBufferTest)')","[26638, 26942]"
"('QuotedString.java', 'org.eclipse.jgit.util.QuotedString$BourneUserPathStyle', 'quote', '^~[A-Za-z0-9_-]*/.*$', '~foo/a')","[29822, 29846]"
"('Description.java', 'org.junit.runner.Description', 'methodAndClassNamePatternGroupOrDefault', '([\\s\\S]*)\\((.*)\\)', 'testCheckoutCommit(org.eclipse.jgit.api.CheckoutCommandTest)')","[149367, 149899]"
"('Description.java', 'org.junit.runner.Description', 'methodAndClassNamePatternGroupOrDefault', '([\\s\\S]*)\\((.*)\\)', 'testVerySimpleGroupCase0[OldRule? true](org.eclipse.jgit.ignore.IgnoreRuleSpecialCasesTest)')","[91653, 98737]"
"('Description.java', 'org.junit.runner.Description', 'methodAndClassNamePatternGroupOrDefault', '([\\s\\S]*)\\((.*)\\)', 'testManySolutionsCase3[OldRule? false](org.eclipse.jgit.ignore.IgnoreRuleSpecialCasesTest)')","[87193, 94298]"
"('Description.java', 'org.junit.runner.Description', 'methodAndClassNamePatternGroupOrDefault', '([\\s\\S]*)\\((.*)\\)', 'testDequote_Empty1(org.eclipse.jgit.util.QuotedStringBourneUserPathStyleTest)')","[28829, 29083]"
"('Description.java', 'org.junit.runner.Description', 'methodAndClassNamePatternGroupOrDefault', '([\\s\\S]*)\\((.*)\\)', 'testPrefixCompare_8(org.eclipse.jgit.lib.AbbreviatedObjectIdTest)')","[55252, 55783]"
"('URIish.java', 'org.eclipse.jgit.transport.URIish', 'getHumanishName', '^([\\\\/]?((?:[A-Za-z]:)?[\\\\/]?(?:(?:[^\\\\/]+[\\\\/]+)*[^\\\\/]+[\\\\/]*)))$', 'abc.git')",[192019]
"('URIish.java', 'org.eclipse.jgit.transport.URIish', '<init>', '^([a-z][a-z0-9+-]+)://(?:(?:([^/:@]+)(?::([^\\\\/]+))?@)?((?:[^\\\\/:]+)|(?:\\[[0-9a-f:]+\\]))(?::(\\d+))?((?:/~(?:[^\\\\/]+))?[\\\\/]))?(.+)?$', 'http://lusr\\example:wtf@1.2.3.4:80//abc')",[202387]
"('URIish.java', 'org.eclipse.jgit.transport.URIish', '<init>', '^([a-z][a-z0-9+-]+)://(?:(?:([^/:@]+)(?::([^\\\\/]+))?@)?((?:[^\\\\/:]+)|(?:\\[[0-9a-f:]+\\]))(?::(\\d+))?((?:/~(?:[^\\\\/]+))?[\\\\/]))?(.+)?$', 'https://lusr\\example:wtf@[::1]:80/D:\\x')",[206949]
"('Description.java', 'org.junit.runner.Description', 'methodAndClassNamePatternGroupOrDefault', '([\\s\\S]*)\\((.*)\\)', 'testEdgeCases(org.eclipse.jgit.treewalk.filter.PathSuffixFilterTest)')","[266583, 266647]"
"('Description.java', 'org.junit.runner.Description', 'methodAndClassNamePatternGroupOrDefault', '([\\s\\S]*)\\((.*)\\)', 'testDequote_BareA(org.eclipse.jgit.util.QuotedStringGitPathStyleTest)')","[39933, 40363]"
"('URIish.java', 'org.eclipse.jgit.transport.URIish', '<init>', '^(file):([\\\\/](?![\\\\/])((?:[A-Za-z]:)?[\\\\/]?(?:(?:[^\\\\/]+[\\\\/]+)*[^\\\\/]+[\\\\/]*)))$', 'ssh+git://l usr\\example.com:wtf@1.2.3.4:80//')",[197902]
"('Description.java', 'org.junit.runner.Description', 'methodAndClassNamePatternGroupOrDefault', '([\\s\\S]*)\\((.*)\\)', 'testEmpty(org.eclipse.jgit.revwalk.RevFlagSetTest)')","[178570, 178718]"
"('Description.java', 'org.junit.runner.Description', 'methodAndClassNamePatternGroupOrDefault', '([\\s\\S]*)\\((.*)\\)', 'testResetState(org.eclipse.jgit.ignore.IgnoreMatcherTest)')","[103096, 103294]"
"('URIish.java', 'org.eclipse.jgit.transport.URIish', '<init>', '^(file):([\\\\/](?![\\\\/])((?:[A-Za-z]:)?[\\\\/]?(?:(?:[^\\\\/]+[\\\\/]+)*[^\\\\/]+[\\\\/]*)))$', 'http://lusr\\example:wtf@1.2.3.4:80/D:\\x')",[202456]
"('Description.java', 'org.junit.runner.Description', 'methodAndClassNamePatternGroupOrDefault', '([\\s\\S]*)\\((.*)\\)', 'testDecode(org.eclipse.jgit.util.Base64Test)')","[22870, 22956]"
"('Description.java', 'org.junit.runner.Description', 'methodAndClassNamePatternGroupOrDefault', '([\\s\\S]*)\\((.*)\\)', 'testTrivialTwoWay_leftDFconflict1(org.eclipse.jgit.merge.SimpleMergeTest)')","[15564, 15844]"
"('Description.java', 'org.junit.runner.Description', 'methodAndClassNamePatternGroupOrDefault', '([\\s\\S]*)\\((.*)\\)', 'test000_sort_02(org.eclipse.jgit.lib.T0002_TreeTest)')","[58612, 58914]"
"('URIish.java', 'org.eclipse.jgit.transport.URIish', '<init>', '^(file):([\\\\/](?![\\\\/])((?:[A-Za-z]:)?[\\\\/]?(?:(?:[^\\\\/]+[\\\\/]+)*[^\\\\/]+[\\\\/]*)))$', '/home/m y')","[248579, 248694]"
"('Description.java', 'org.junit.runner.Description', 'methodAndClassNamePatternGroupOrDefault', '([\\s\\S]*)\\((.*)\\)', 'testPrintGroupCase4[OldRule? true](org.eclipse.jgit.ignore.IgnoreRuleSpecialCasesTest)')","[90641, 97725]"
"('Description.java', 'org.junit.runner.Description', 'methodAndClassNamePatternGroupOrDefault', '([\\s\\S]*)\\((.*)\\)', 'testForbiddenNamesOnWindowsEgConDotSuffix(org.eclipse.jgit.lib.DirCacheCheckoutMaliciousPathTest)')","[67264, 68185]"
"('Description.java', 'org.junit.runner.Description', 'methodAndClassNamePatternGroupOrDefault', '([\\s\\S]*)\\((.*)\\)', 'test3(org.eclipse.jgit.revwalk.RevWalkPathFilter6012Test)')","[178972, 179122]"
"('Description.java', 'org.junit.runner.Description', 'methodAndClassNamePatternGroupOrDefault', '([\\s\\S]*)\\((.*)\\)', 'org.eclipse.jgit.patch.PatchCcTest')","[1813, 2325]"
"('Description.java', 'org.junit.runner.Description', 'methodAndClassNamePatternGroupOrDefault', '([\\s\\S]*)\\((.*)\\)', 'submoduleWithNoHead(org.eclipse.jgit.treewalk.FileTreeIteratorTest)')","[262229, 262578]"
"('URIish.java', 'org.eclipse.jgit.transport.URIish', '<init>', '^(file):([\\\\/](?![\\\\/])((?:[A-Za-z]:)?[\\\\/]?(?:(?:[^\\\\/]+[\\\\/]+)*[^\\\\/]+[\\\\/]*)))$', 'ssh+git://lusr\\example:wtf@1.2.3.4:80//')",[199006]
"('Description.java', 'org.junit.runner.Description', 'methodAndClassNamePatternGroupOrDefault', '([\\s\\S]*)\\((.*)\\)', 'testPath_4094(org.eclipse.jgit.dircache.DirCacheLargePathTest)')","[172369, 172476]"
"('Description.java', 'org.junit.runner.Description', 'methodAndClassNamePatternGroupOrDefault', '([\\s\\S]*)\\((.*)\\)', 'org.eclipse.jgit.util.RawParseUtils_MatchTest')","[22597, 22792]"
"('Description.java', 'org.junit.runner.Description', 'methodAndClassNamePatternGroupOrDefault', '([\\s\\S]*)\\((.*)\\)', 'testClear(org.eclipse.jgit.revwalk.LIFORevQueueTest)')","[176473, 176582]"
"('FastIgnoreRule.java', 'org.eclipse.jgit.ignore.FastIgnoreRule', 'isMatch', '[\\p{Cntrl}]', '\x07')",[99987]
"('Description.java', 'org.junit.runner.Description', 'methodAndClassNamePatternGroupOrDefault', '([\\s\\S]*)\\((.*)\\)', 'testAlnumGroupCase2(org.eclipse.jgit.fnmatch.FileNameMatcherTest)')","[44275, 47670]"
"('URIish.java', 'org.eclipse.jgit.transport.URIish', '<init>', '^(file):([\\\\/](?![\\\\/])((?:[A-Za-z]:)?[\\\\/]?(?:(?:[^\\\\/]+[\\\\/]+)*[^\\\\/]+[\\\\/]*)))$', 'https://l usr\\example.com:wtf@1.2.3.4:1234//abc')",[205178]
"('Description.java', 'org.junit.runner.Description', 'methodAndClassNamePatternGroupOrDefault', '([\\s\\S]*)\\((.*)\\)', 'testEmpty_SpecificCapacity(org.eclipse.jgit.util.IntListTest)')","[28066, 28299]"
"('Description.java', 'org.junit.runner.Description', 'methodAndClassNamePatternGroupOrDefault', '([\\s\\S]*)\\((.*)\\)', 'testEmptyLine(org.eclipse.jgit.attributes.AttributeNodeTest)')","[72996, 73126]"
"('Description.java', 'org.junit.runner.Description', 'methodAndClassNamePatternGroupOrDefault', '([\\s\\S]*)\\((.*)\\)', 'testOnlyOption_f1_8_b(org.eclipse.jgit.api.CommitOnlyTest)')","[135193, 137251]"
"('URIish.java', 'org.eclipse.jgit.transport.URIish', '<init>', '^(file):([\\\\/](?![\\\\/])((?:[A-Za-z]:)?[\\\\/]?(?:(?:[^\\\\/]+[\\\\/]+)*[^\\\\/]+[\\\\/]*)))$', 'http://lusr\\example@[::1]:1234/D:/x')",[216632]
"('Description.java', 'org.junit.runner.Description', 'methodAndClassNamePatternGroupOrDefault', '([\\s\\S]*)\\((.*)\\)', 'testCloneEmpty(org.eclipse.jgit.revwalk.FIFORevQueueTest)')","[176135, 176264]"
"('URIish.java', 'org.eclipse.jgit.transport.URIish', '<init>', '^(file):([\\\\/](?![\\\\/])((?:[A-Za-z]:)?[\\\\/]?(?:(?:[^\\\\/]+[\\\\/]+)*[^\\\\/]+[\\\\/]*)))$', 'ssh+git://me@example.com:80//')",[210468]
"('URIish.java', 'org.eclipse.jgit.transport.URIish', '<init>', '^(file):([\\\\/](?![\\\\/])((?:[A-Za-z]:)?[\\\\/]?(?:(?:[^\\\\/]+[\\\\/]+)*[^\\\\/]+[\\\\/]*)))$', 'ssh://l usr\\example.com@[::1]/D:/x')","[222727, 222911]"
"('ChangeIdUtil.java', 'org.eclipse.jgit.util.ChangeIdUtil', 'indexOfFirstFooterLine', '(^[a-zA-Z0-9-]+:(?!//).*$)', 'https://example.com/ fixes this')",[36304]
"('Description.java', 'org.junit.runner.Description', 'methodAndClassNamePatternGroupOrDefault', '([\\s\\S]*)\\((.*)\\)', 'testFindNextOffset(org.eclipse.jgit.internal.storage.file.PackReverseIndexTest)')","[116189, 116277]"
"('URIish.java', 'org.eclipse.jgit.transport.URIish', '<init>', '^([a-z][a-z0-9+-]+)://(?:(?:([^/:@]+)(?::([^\\\\/]+))?@)?((?:[^\\\\/:]+)|(?:\\[[0-9a-f:]+\\]))(?::(\\d+))?((?:/~(?:[^\\\\/]+))?[\\\\/]))?(.+)?$', 'ssh+git://l usr\\example.com:wtf@1.2.3.4:80/D:/x')",[198017]
"('Description.java', 'org.junit.runner.Description', 'methodAndClassNamePatternGroupOrDefault', '([\\s\\S]*)\\((.*)\\)', 'testInvalidType(org.eclipse.jgit.lib.ObjectCheckerTest)')","[48395, 50878]"
"('Description.java', 'org.junit.runner.Description', 'methodAndClassNamePatternGroupOrDefault', '([\\s\\S]*)\\((.*)\\)', 'testDeleteLoosePackedRejected(org.eclipse.jgit.internal.storage.file.RefUpdateTest)')","[119697, 120522]"
"('Description.java', 'org.junit.runner.Description', 'methodAndClassNamePatternGroupOrDefault', '([\\s\\S]*)\\((.*)\\)', 'testMergeBlockedByOther(org.eclipse.jgit.revplot.PlotCommitListTest)')","[169448, 169772]"
"('URIish.java', 'org.eclipse.jgit.transport.URIish', '<init>', '^(file):([\\\\/](?![\\\\/])((?:[A-Za-z]:)?[\\\\/]?(?:(?:[^\\\\/]+[\\\\/]+)*[^\\\\/]+[\\\\/]*)))$', '/tmp/jgit_test_5935307310089394202_tmp/tmp_8096884284597820746')","[146121, 146246, 146392, 146601]"
"('URIish.java', 'org.eclipse.jgit.transport.URIish', '<init>', '^([\\\\/]?((?:[A-Za-z]:)?[\\\\/]?(?:(?:[^\\\\/]+[\\\\/]+)*[^\\\\/]+[\\\\/]*)))$', '/tmp/jgit_test_279927277504112735_tmp/tmp_3984817157549652538/.git')","[18478, 18638]"
"('FastIgnoreRule.java', 'org.eclipse.jgit.ignore.FastIgnoreRule', 'isMatch', '.r[a-c]', 'crg')",[107697]
"('Description.java', 'org.junit.runner.Description', 'methodAndClassNamePatternGroupOrDefault', '([\\s\\S]*)\\((.*)\\)', 'testRevertkConflictReset(org.eclipse.jgit.api.RevertCommandTest)')","[125704, 125924]"
"('URIish.java', 'org.eclipse.jgit.transport.URIish', '<init>', '^(file):([\\\\/](?![\\\\/])((?:[A-Za-z]:)?[\\\\/]?(?:(?:[^\\\\/]+[\\\\/]+)*[^\\\\/]+[\\\\/]*)))$', 'http://example.com//')","[240667, 240851, 241771, 241955, 242875, 243059]"
"('Description.java', 'org.junit.runner.Description', 'methodAndClassNamePatternGroupOrDefault', '([\\s\\S]*)\\((.*)\\)', 'testUpperGroupCase4[OldRule? true](org.eclipse.jgit.ignore.IgnoreRuleSpecialCasesTest)')","[90894, 97978]"
"('Description.java', 'org.junit.runner.Description', 'methodAndClassNamePatternGroupOrDefault', '([\\s\\S]*)\\((.*)\\)', 'repositoryWithNoSubmoduleRepository(org.eclipse.jgit.submodule.SubmoduleStatusTest)')","[18718, 18866]"
"('Description.java', 'org.junit.runner.Description', 'methodAndClassNamePatternGroupOrDefault', '([\\s\\S]*)\\((.*)\\)', 'testVerySimpleGroupRangeCase4[OldRule? true](org.eclipse.jgit.ignore.IgnoreRuleSpecialCasesTest)')","[90158, 97242]"
"('URIish.java', 'org.eclipse.jgit.transport.URIish', '<init>', '^(file):([\\\\/](?![\\\\/])((?:[A-Za-z]:)?[\\\\/]?(?:(?:[^\\\\/]+[\\\\/]+)*[^\\\\/]+[\\\\/]*)))$', 'ssh://lusr\\example:wtf@[::1]:1234//')",[195088]
"('ChangeIdUtil.java', 'org.eclipse.jgit.util.ChangeIdUtil', 'indexOfChangeId', '(^Change-Id: *I[a-f0-9]{40}$)', ' Change-Id:  I3b7e4e16b503ce00f07ba6ad01d97a356dad7701')",[33591]
"('Description.java', 'org.junit.runner.Description', 'methodAndClassNamePatternGroupOrDefault', '([\\s\\S]*)\\((.*)\\)', 'org.eclipse.jgit.internal.storage.file.StoredBitmapTest')","[109926, 110078]"
"('URIish.java', 'org.eclipse.jgit.transport.URIish', '<init>', '^(file):([\\\\/](?![\\\\/])((?:[A-Za-z]:)?[\\\\/]?(?:(?:[^\\\\/]+[\\\\/]+)*[^\\\\/]+[\\\\/]*)))$', 'http://lusr\\example@example.com:80/D:/x')",[216080]
"('Description.java', 'org.junit.runner.Description', 'methodAndClassNamePatternGroupOrDefault', '([\\s\\S]*)\\((.*)\\)', 'testGermanTranslation(org.eclipse.jgit.nls.TranslationBundleTest)')","[40663, 40748]"
"('Description.java', 'org.junit.runner.Description', 'methodAndClassNamePatternGroupOrDefault', '([\\s\\S]*)\\((.*)\\)', 'testInexactRename_OneRenameTwoUnrelatedFiles(org.eclipse.jgit.diff.RenameDetectorTest)')","[4624, 5186]"
"('Description.java', 'org.junit.runner.Description', 'methodAndClassNamePatternGroupOrDefault', '([\\s\\S]*)\\((.*)\\)', 'testBlankGroupCase4[OldRule? true](org.eclipse.jgit.ignore.IgnoreRuleSpecialCasesTest)')","[91032, 98116]"
"('URIish.java', 'org.eclipse.jgit.transport.URIish', '<init>', '^(file):([\\\\/](?![\\\\/])((?:[A-Za-z]:)?[\\\\/]?(?:(?:[^\\\\/]+[\\\\/]+)*[^\\\\/]+[\\\\/]*)))$', 'https://lusr\\example:wtf@example.com:80//abc')",[206098]
"('URIish.java', 'org.eclipse.jgit.transport.URIish', '<init>', '^(file):([\\\\/](?![\\\\/])((?:[A-Za-z]:)?[\\\\/]?(?:(?:[^\\\\/]+[\\\\/]+)*[^\\\\/]+[\\\\/]*)))$', 'ssh+git://me@[::1]:80//abc')",[211250]
"('Description.java', 'org.junit.runner.Description', 'methodAndClassNamePatternGroupOrDefault', '([\\s\\S]*)\\((.*)\\)', 'testTrivialTwoWay_validSubtreeSort(org.eclipse.jgit.merge.SimpleMergeTest)')","[15543, 15822]"
"('Description.java', 'org.junit.runner.Description', 'methodAndClassNamePatternGroupOrDefault', '([\\s\\S]*)\\((.*)\\)', 'testIndexingLargeObject(org.eclipse.jgit.diff.SimilarityIndexTest)')","[11449, 11622]"
"('Description.java', 'org.junit.runner.Description', 'methodAndClassNamePatternGroupOrDefault', '([\\s\\S]*)\\((.*)\\)', 'testOneliner(org.eclipse.jgit.util.ChangeIdUtilTest)')","[31699, 32437]"
"('Description.java', 'org.junit.runner.Description', 'methodAndClassNamePatternGroupOrDefault', '([\\s\\S]*)\\((.*)\\)', 'testForbiddenWindowsNamesOnUnixEgLpt1(org.eclipse.jgit.lib.DirCacheCheckoutMaliciousPathTest)')","[67243, 68163]"
"('Description.java', 'org.junit.runner.Description', 'methodAndClassNamePatternGroupOrDefault', '([\\s\\S]*)\\((.*)\\)', 'testOnlyOption_f1_12_e(org.eclipse.jgit.api.CommitOnlyTest)')","[135991, 138087]"
"('AttributesRule.java', 'org.eclipse.jgit.attributes.AttributesRule', 'isMatch', '.*\\.st.', 'another')","[73896, 74058, 75067, 75202]"
"('Description.java', 'org.junit.runner.Description', 'methodAndClassNamePatternGroupOrDefault', '([\\s\\S]*)\\((.*)\\)', 'testLinear(org.eclipse.jgit.revplot.PlotCommitListTest)')","[169511, 169838]"
"('Description.java', 'org.junit.runner.Description', 'methodAndClassNamePatternGroupOrDefault', '([\\s\\S]*)\\((.*)\\)', 'testRemoveFrontOfList(org.eclipse.jgit.util.RefListTest)')","[20264, 20770]"
"('URIish.java', 'org.eclipse.jgit.transport.URIish', '<init>', '^(file):([\\\\/](?![\\\\/])((?:[A-Za-z]:)?[\\\\/]?(?:(?:[^\\\\/]+[\\\\/]+)*[^\\\\/]+[\\\\/]*)))$', 'file:///tmp/jgit_test_4902706930144711069_tmp/tmp_335954329502971208/.git/')",[59327]
"('Description.java', 'org.junit.runner.Description', 'methodAndClassNamePatternGroupOrDefault', '([\\s\\S]*)\\((.*)\\)', 'testOnlyOption_f1_9_b(org.eclipse.jgit.api.CommitOnlyTest)')","[135298, 137361]"
"('URIish.java', 'org.eclipse.jgit.transport.URIish', '<init>', '^([a-z][a-z0-9+-]+)://(?:(?:([^/:@]+)(?::([^\\\\/]+))?@)?((?:[^\\\\/:]+)|(?:\\[[0-9a-f:]+\\]))(?::(\\d+))?((?:/~(?:[^\\\\/]+))?[\\\\/]))?(.+)?$', '/more/dirs')","[255008, 255708, 257344]"
"('URIish.java', 'org.eclipse.jgit.transport.URIish', '<init>', '^(file):([\\\\/](?![\\\\/])((?:[A-Za-z]:)?[\\\\/]?(?:(?:[^\\\\/]+[\\\\/]+)*[^\\\\/]+[\\\\/]*)))$', 'https://lusr\\example:wtf@example.com:80//')",[206052]
"('URIish.java', 'org.eclipse.jgit.transport.URIish', '<init>', '^([a-z][a-z0-9+-]+)://(?:(?:([^/:@]+)(?::([^\\\\/]+))?@)?((?:[^\\\\/:]+)|(?:\\[[0-9a-f:]+\\]))(?::(\\d+))?((?:/~(?:[^\\\\/]+))?[\\\\/]))?(.+)?$', 'ssh://me@1.2.3.4:1234//')",[207363]
"('Description.java', 'org.junit.runner.Description', 'methodAndClassNamePatternGroupOrDefault', '([\\s\\S]*)\\((.*)\\)', 'testPick(org.eclipse.jgit.merge.CherryPickTest)')","[11768, 11811]"
"('Description.java', 'org.junit.runner.Description', 'methodAndClassNamePatternGroupOrDefault', '([\\s\\S]*)\\((.*)\\)', 'testLargeObjectLoader(org.eclipse.jgit.lib.ObjectLoaderTest)')","[71389, 71474]"
"('Description.java', 'org.junit.runner.Description', 'methodAndClassNamePatternGroupOrDefault', '([\\s\\S]*)\\((.*)\\)', 'invalidWhenOnlyDestinationWildcard(org.eclipse.jgit.transport.RefSpecTest)')","[186864, 187599]"
"('Description.java', 'org.junit.runner.Description', 'methodAndClassNamePatternGroupOrDefault', '([\\s\\S]*)\\((.*)\\)', 'testIsNameConflicting(org.eclipse.jgit.internal.storage.file.RefDirectoryTest)')","[111538, 112747]"
"('Description.java', 'org.junit.runner.Description', 'methodAndClassNamePatternGroupOrDefault', '([\\s\\S]*)\\((.*)\\)', 'testInexactRename_OnePair(org.eclipse.jgit.diff.RenameDetectorTest)')","[4561, 5120]"
"('URIish.java', 'org.eclipse.jgit.transport.URIish', '<init>', '^([a-z][a-z0-9+-]+)://(?:(?:([^/:@]+)(?::([^\\\\/]+))?@)?((?:[^\\\\/:]+)|(?:\\[[0-9a-f:]+\\]))(?::(\\d+))?((?:/~(?:[^\\\\/]+))?[\\\\/]))?(.+)?$', 'ssh+git://example.com//')","[237378, 237562, 238482, 238666, 239586, 239770]"
"('Description.java', 'org.junit.runner.Description', 'methodAndClassNamePatternGroupOrDefault', '([\\s\\S]*)\\((.*)\\)', 'commandWithEmptyUri(org.eclipse.jgit.submodule.SubmoduleAddTest)')","[17964, 18139]"
"('Description.java', 'org.junit.runner.Description', 'methodAndClassNamePatternGroupOrDefault', '([\\s\\S]*)\\((.*)\\)', 'org.eclipse.jgit.internal.storage.file.ReflogWriterTest')","[115224, 115290]"
"('Description.java', 'org.junit.runner.Description', 'methodAndClassNamePatternGroupOrDefault', '([\\s\\S]*)\\((.*)\\)', 'testEmptyFolderCommittedDeleted(org.eclipse.jgit.treewalk.filter.IndexDiffFilterTest)')","[264926, 265761]"
"('URIish.java', 'org.eclipse.jgit.transport.URIish', '<init>', '^([a-z][a-z0-9+-]+)://(?:(?:([^/:@]+)(?::([^\\\\/]+))?@)?((?:[^\\\\/:]+)|(?:\\[[0-9a-f:]+\\]))(?::(\\d+))?((?:/~(?:[^\\\\/]+))?[\\\\/]))?(.+)?$', 'http://me@[::1]:80/D:/x')",[214631]
"('Description.java', 'org.junit.runner.Description', 'methodAndClassNamePatternGroupOrDefault', '([\\s\\S]*)\\((.*)\\)', 'testParse_ShortLineOnlyEmbeddedAndEndingLF(org.eclipse.jgit.revwalk.RevTagParseTest)')","[179793, 180208]"
"('URIish.java', 'org.eclipse.jgit.transport.URIish', '<init>', '^([a-z][a-z0-9+-]+)://(?:(?:([^/:@]+)(?::([^\\\\/]+))?@)?((?:[^\\\\/:]+)|(?:\\[[0-9a-f:]+\\]))(?::(\\d+))?((?:/~(?:[^\\\\/]+))?[\\\\/]))?(.+)?$', 'http://lusr\\example@[::1]:80//abc')",[216793]
"('Description.java', 'org.junit.runner.Description', 'methodAndClassNamePatternGroupOrDefault', '([\\s\\S]*)\\((.*)\\)', 'testTwoGroupsCase1[OldRule? true](org.eclipse.jgit.ignore.IgnoreRuleSpecialCasesTest)')","[89767, 96851]"
"('Description.java', 'org.junit.runner.Description', 'methodAndClassNamePatternGroupOrDefault', '([\\s\\S]*)\\((.*)\\)', 'testBug419359(org.eclipse.jgit.revplot.PlotCommitListTest)')","[169343, 169662]"
"('Description.java', 'org.junit.runner.Description', 'methodAndClassNamePatternGroupOrDefault', '([\\s\\S]*)\\((.*)\\)', 'testNoRenames_SymlinkAndFile(org.eclipse.jgit.diff.RenameDetectorTest)')","[4435, 4988]"
"('URIish.java', 'org.eclipse.jgit.transport.URIish', '<init>', '^([a-z][a-z0-9+-]+)://(?:(?:([^/:@]+)(?::([^\\\\/]+))?@)?((?:[^\\\\/:]+)|(?:\\[[0-9a-f:]+\\]))(?::(\\d+))?((?:/~(?:[^\\\\/]+))?[\\\\/]))?(.+)?$', 'https://lusr\\example@example.com:1234/D:\\x')",[219852]
"('Description.java', 'org.junit.runner.Description', 'methodAndClassNamePatternGroupOrDefault', '([\\s\\S]*)\\((.*)\\)', 'testParse_GitStyleMessage(org.eclipse.jgit.revwalk.RevCommitParseTest)')","[182404, 182767]"
"('URIish.java', 'org.eclipse.jgit.transport.URIish', '<init>', '^([a-z][a-z0-9+-]+)://(?:(?:([^/:@]+)(?::([^\\\\/]+))?@)?((?:[^\\\\/:]+)|(?:\\[[0-9a-f:]+\\]))(?::(\\d+))?((?:/~(?:[^\\\\/]+))?[\\\\/]))?(.+)?$', 'ssh+git://me:wtf@1.2.3.4:1234//abc')",[196683]
"('Description.java', 'org.junit.runner.Description', 'methodAndClassNamePatternGroupOrDefault', '([\\s\\S]*)\\((.*)\\)', 'testCloneRepositoryExplicitGitDirBare(org.eclipse.jgit.api.CloneCommandTest)')","[159073, 159377]"
"('Description.java', 'org.junit.runner.Description', 'methodAndClassNamePatternGroupOrDefault', '([\\s\\S]*)\\((.*)\\)', 'testFileHeader(org.eclipse.jgit.patch.EditListTest)')","[99, 165]"
"('Description.java', 'org.junit.runner.Description', 'methodAndClassNamePatternGroupOrDefault', '([\\s\\S]*)\\((.*)\\)', 'testManySolutionsCase2[OldRule? true](org.eclipse.jgit.ignore.IgnoreRuleSpecialCasesTest)')","[90733, 97817]"
"('URIish.java', 'org.eclipse.jgit.transport.URIish', '<init>', '^([a-z][a-z0-9+-]+)://(?:(?:([^/:@]+)(?::([^\\\\/]+))?@)?((?:[^\\\\/:]+)|(?:\\[[0-9a-f:]+\\]))(?::(\\d+))?((?:/~(?:[^\\\\/]+))?[\\\\/]))?(.+)?$', 'ssh://lusr\\example@[::1]//abc')","[223808, 223992]"
"('Description.java', 'org.junit.runner.Description', 'methodAndClassNamePatternGroupOrDefault', '([\\s\\S]*)\\((.*)\\)', 'testFileInFolderCommittedModifiedAllIgnored(org.eclipse.jgit.treewalk.filter.IndexDiffFilterTest)')","[264254, 265057]"
"('ChangeIdUtil.java', 'org.eclipse.jgit.util.ChangeIdUtil', 'indexOfChangeId', '(^Change-Id: *I[a-f0-9]{40}$)', 'Some detail explanation')",[155471]
"('Description.java', 'org.junit.runner.Description', 'methodAndClassNamePatternGroupOrDefault', '([\\s\\S]*)\\((.*)\\)', 'testXDigitGroupCase3[OldRule? false](org.eclipse.jgit.ignore.IgnoreRuleSpecialCasesTest)')","[87630, 94735]"
"('URIish.java', 'org.eclipse.jgit.transport.URIish', '<init>', '^(?:([^/:@]+)(?::([^\\\\/]+))?@)?([^\\\\/:]{2,}):([\\\\/](?:(?:[^\\\\/]+[\\\\/]+)*[^\\\\/]+[\\\\/]*))$', '/a/b/.git')",[252906]
"('Description.java', 'org.junit.runner.Description', 'methodAndClassNamePatternGroupOrDefault', '([\\s\\S]*)\\((.*)\\)', 'testAlias_InheritBatchMode(org.eclipse.jgit.transport.OpenSshConfigTest)')","[195785, 196145]"
"('URIish.java', 'org.eclipse.jgit.transport.URIish', '<init>', '^([a-z][a-z0-9+-]+)://(?:(?:([^/:@]+)(?::([^\\\\/]+))?@)?((?:[^\\\\/:]+)|(?:\\[[0-9a-f:]+\\]))(?::(\\d+))?((?:/~(?:[^\\\\/]+))?[\\\\/]))?(.+)?$', 'ssh://1.2.3.4/D:/x')","[234526, 234710, 235630, 235814, 236734, 236918]"
"('URIish.java', 'org.eclipse.jgit.transport.URIish', '<init>', '^([a-z][a-z0-9+-]+)://(?:(?:([^/:@]+)(?::([^\\\\/]+))?@)?((?:[^\\\\/:]+)|(?:\\[[0-9a-f:]+\\]))(?::(\\d+))?((?:/~(?:[^\\\\/]+))?[\\\\/]))?(.+)?$', 'https://l usr\\example.com@1.2.3.4/D:/x')","[232318, 232502]"
"('URIish.java', 'org.eclipse.jgit.transport.URIish', '<init>', '^([a-z][a-z0-9+-]+)://(?:(?:([^/:@]+)(?::([^\\\\/]+))?@)?((?:[^\\\\/:]+)|(?:\\[[0-9a-f:]+\\]))(?::(\\d+))?((?:/~(?:[^\\\\/]+))?[\\\\/]))?(.+)?$', 'http://1.2.3.4/D:/x')","[241150, 241334, 242254, 242438, 243358, 243542]"
"('Description.java', 'org.junit.runner.Description', 'methodAndClassNamePatternGroupOrDefault', '([\\s\\S]*)\\((.*)\\)', 'testSpecialGroupCase4(org.eclipse.jgit.fnmatch.FileNameMatcherTest)')","[41440, 44700]"
"('URIish.java', 'org.eclipse.jgit.transport.URIish', '<init>', '^(file):([\\\\/](?![\\\\/])((?:[A-Za-z]:)?[\\\\/]?(?:(?:[^\\\\/]+[\\\\/]+)*[^\\\\/]+[\\\\/]*)))$', 'https://lusr\\example@[::1]//abc')","[233721, 233905]"
"('Description.java', 'org.junit.runner.Description', 'methodAndClassNamePatternGroupOrDefault', '([\\s\\S]*)\\((.*)\\)', 'testNotPackTwice(org.eclipse.jgit.internal.storage.file.GcBasicPackingTest)')","[113225, 113352]"
"('URIish.java', 'org.eclipse.jgit.transport.URIish', '<init>', '^(file):([\\\\/](?![\\\\/])((?:[A-Za-z]:)?[\\\\/]?(?:(?:[^\\\\/]+[\\\\/]+)*[^\\\\/]+[\\\\/]*)))$', 'http://lusr\\example:wtf@[::1]:1234//')",[202502]
"('URIish.java', 'org.eclipse.jgit.transport.URIish', '<init>', '^(file):([\\\\/](?![\\\\/])((?:[A-Za-z]:)?[\\\\/]?(?:(?:[^\\\\/]+[\\\\/]+)*[^\\\\/]+[\\\\/]*)))$', 'file:///tmp/jgit_test_2505266252843607322_tmp/tmp_4768295878180271289/.git/')",[57160]
"('Description.java', 'org.junit.runner.Description', 'methodAndClassNamePatternGroupOrDefault', '([\\s\\S]*)\\((.*)\\)', 'testLowerGroupCase4[OldRule? false](org.eclipse.jgit.ignore.IgnoreRuleSpecialCasesTest)')","[85629, 92734]"
"('ChangeIdUtil.java', 'org.eclipse.jgit.util.ChangeIdUtil', 'indexOfChangeId', '(^Change-Id: *I[a-f0-9]{40}$)', 'Change-Id: I0123456789012345678901234567890123456789')","[33450, 34555, 36123, 36148, 38019]"
"('URIish.java', 'org.eclipse.jgit.transport.URIish', '<init>', '^(file):([\\\\/](?![\\\\/])((?:[A-Za-z]:)?[\\\\/]?(?:(?:[^\\\\/]+[\\\\/]+)*[^\\\\/]+[\\\\/]*)))$', 'ssh+git://me:wtf@1.2.3.4:1234//')",[196614]
"('URIish.java', 'org.eclipse.jgit.transport.URIish', '<init>', '^(file):([\\\\/](?![\\\\/])((?:[A-Za-z]:)?[\\\\/]?(?:(?:[^\\\\/]+[\\\\/]+)*[^\\\\/]+[\\\\/]*)))$', 'ssh+git://me:wtf@example.com:80//abc')",[196476]
"('ChangeIdUtil.java', 'org.eclipse.jgit.util.ChangeIdUtil', 'indexOfFirstFooterLine', '(^[a-zA-Z0-9-]+:(?!//).*$)', 'with header and body')",[36803]
"('Description.java', 'org.junit.runner.Description', 'methodAndClassNamePatternGroupOrDefault', '([\\s\\S]*)\\((.*)\\)', 'org.eclipse.jgit.util.QuotedStringBourneStyleTest')","[38310, 38763]"
"('Description.java', 'org.junit.runner.Description', 'methodAndClassNamePatternGroupOrDefault', '([\\s\\S]*)\\((.*)\\)', 'testConstructor_Peeled(org.eclipse.jgit.lib.ObjectIdRefTest)')","[54577, 54642]"
"('Description.java', 'org.junit.runner.Description', 'methodAndClassNamePatternGroupOrDefault', '([\\s\\S]*)\\((.*)\\)', 'testCreateFromEmpty(org.eclipse.jgit.notes.NoteMapTest)')","[258294, 258550]"
"('URIish.java', 'org.eclipse.jgit.transport.URIish', '<init>', '^(file):([\\\\/](?![\\\\/])((?:[A-Za-z]:)?[\\\\/]?(?:(?:[^\\\\/]+[\\\\/]+)*[^\\\\/]+[\\\\/]*)))$', 'http://l usr\\example.com@example.com/D:\\x')","[228661, 228845]"
"('Description.java', 'org.junit.runner.Description', 'methodAndClassNamePatternGroupOrDefault', '([\\s\\S]*)\\((.*)\\)', 'test009_CreateCommitOldFormat(org.eclipse.jgit.internal.storage.file.T0003_BasicTest)')","[116777, 117323]"
"('Description.java', 'org.junit.runner.Description', 'methodAndClassNamePatternGroupOrDefault', '([\\s\\S]*)\\((.*)\\)', 'testDF_DetectConflict(org.eclipse.jgit.treewalk.NameConflictTreeWalkTest)')","[263030, 263138]"
"('FastIgnoreRule.java', 'org.eclipse.jgit.ignore.FastIgnoreRule', 'isMatch', '.*\\.st.', 'anothertest.sta1')","[104423, 104585, 105680, 105815]"
"('Description.java', 'org.junit.runner.Description', 'methodAndClassNamePatternGroupOrDefault', '([\\s\\S]*)\\((.*)\\)', 'testPackCommitsAndLooseOneWithPruneNowNoReflog(org.eclipse.jgit.internal.storage.file.GcReflogTest)')","[112891, 112978]"
"('URIish.java', 'org.eclipse.jgit.transport.URIish', '<init>', '^([a-z][a-z0-9+-]+)://(?:(?:([^/:@]+)(?::([^\\\\/]+))?@)?((?:[^\\\\/:]+)|(?:\\[[0-9a-f:]+\\]))(?::(\\d+))?((?:/~(?:[^\\\\/]+))?[\\\\/]))?(.+)?$', 'ssh+git://me@1.2.3.4/D:/x')","[224590, 224774]"
"('URIish.java', 'org.eclipse.jgit.transport.URIish', '<init>', '^(file):([\\\\/](?![\\\\/])((?:[A-Za-z]:)?[\\\\/]?(?:(?:[^\\\\/]+[\\\\/]+)*[^\\\\/]+[\\\\/]*)))$', 'https://me@[::1]:80//abc')",[217897]
"('Description.java', 'org.junit.runner.Description', 'methodAndClassNamePatternGroupOrDefault', '([\\s\\S]*)\\((.*)\\)', 'testForbiddenNamesOnWindowsEgLpr(org.eclipse.jgit.lib.DirCacheCheckoutMaliciousPathTest)')","[66508, 67393]"
"('Description.java', 'org.junit.runner.Description', 'methodAndClassNamePatternGroupOrDefault', '([\\s\\S]*)\\((.*)\\)', 'testRebaseWithModificationShouldNotDeleteData(org.eclipse.jgit.api.RebaseCommandTest)')","[131915, 133426]"
"('Description.java', 'org.junit.runner.Description', 'methodAndClassNamePatternGroupOrDefault', '([\\s\\S]*)\\((.*)\\)', 'testEqualsWithWhitespace(org.eclipse.jgit.diff.RawTextIgnoreTrailingWhitespaceTest)')","[9624, 9668]"
"('URIish.java', 'org.eclipse.jgit.transport.URIish', '<init>', '^([a-z][a-z0-9+-]+)://(?:(?:([^/:@]+)(?::([^\\\\/]+))?@)?((?:[^\\\\/:]+)|(?:\\[[0-9a-f:]+\\]))(?::(\\d+))?((?:/~(?:[^\\\\/]+))?[\\\\/]))?(.+)?$', 'http://me@[::1]:1234//')",[214355]
"('URIish.java', 'org.eclipse.jgit.transport.URIish', '<init>', '^([a-z][a-z0-9+-]+)://(?:(?:([^/:@]+)(?::([^\\\\/]+))?@)?((?:[^\\\\/:]+)|(?:\\[[0-9a-f:]+\\]))(?::(\\d+))?((?:/~(?:[^\\\\/]+))?[\\\\/]))?(.+)?$', 'ssh+git://me@example.com:80/D:\\x')",[210629]
"('URIish.java', 'org.eclipse.jgit.transport.URIish', '<init>', '^(file):([\\\\/](?![\\\\/])((?:[A-Za-z]:)?[\\\\/]?(?:(?:[^\\\\/]+[\\\\/]+)*[^\\\\/]+[\\\\/]*)))$', 'https://me:wtf@[::1]:80//')",[204580]
"('Description.java', 'org.junit.runner.Description', 'methodAndClassNamePatternGroupOrDefault', '([\\s\\S]*)\\((.*)\\)', 'testFilter_NONE(org.eclipse.jgit.revwalk.RevWalkFilterTest)')","[180563, 180880]"
"('Description.java', 'org.junit.runner.Description', 'methodAndClassNamePatternGroupOrDefault', '([\\s\\S]*)\\((.*)\\)', 'testSimpleStarCase0[OldRule? false](org.eclipse.jgit.ignore.IgnoreRuleSpecialCasesTest)')","[86273, 93378]"
"('URIish.java', 'org.eclipse.jgit.transport.URIish', '<init>', '^([a-z][a-z0-9+-]+)://(?:(?:([^/:@]+)(?::([^\\\\/]+))?@)?((?:[^\\\\/:]+)|(?:\\[[0-9a-f:]+\\]))(?::(\\d+))?((?:/~(?:[^\\\\/]+))?[\\\\/]))?(.+)?$', 'ssh+git://lusr\\example@example.com//')","[226338, 226522]"
"('Description.java', 'org.junit.runner.Description', 'methodAndClassNamePatternGroupOrDefault', '([\\s\\S]*)\\((.*)\\)', 'org.eclipse.jgit.internal.storage.pack.IntSetTest')","[108701, 108767]"
"('URIish.java', 'org.eclipse.jgit.transport.URIish', '<init>', '^([a-z][a-z0-9+-]+)://(?:(?:([^/:@]+)(?::([^\\\\/]+))?@)?((?:[^\\\\/:]+)|(?:\\[[0-9a-f:]+\\]))(?::(\\d+))?((?:/~(?:[^\\\\/]+))?[\\\\/]))?(.+)?$', 'ssh+git://lusr\\example@example.com:80/D:\\x')",[212837]
"('Description.java', 'org.junit.runner.Description', 'methodAndClassNamePatternGroupOrDefault', '([\\s\\S]*)\\((.*)\\)', 'testUpdateWorkingDirectoryFromIndex2(org.eclipse.jgit.api.PathCheckoutCommandTest)')","[123944, 124229]"
"('Description.java', 'org.junit.runner.Description', 'methodAndClassNamePatternGroupOrDefault', '([\\s\\S]*)\\((.*)\\)', 'testSimpleStarCase3[OldRule? true](org.eclipse.jgit.ignore.IgnoreRuleSpecialCasesTest)')","[89905, 96989]"
"('Description.java', 'org.junit.runner.Description', 'methodAndClassNamePatternGroupOrDefault', '([\\s\\S]*)\\((.*)\\)', 'testVerySimplePatternCase0[OldRule? false](org.eclipse.jgit.ignore.IgnoreRuleSpecialCasesTest)')","[85721, 92826]"
"('Description.java', 'org.junit.runner.Description', 'methodAndClassNamePatternGroupOrDefault', '([\\s\\S]*)\\((.*)\\)', 'archiveByIdSpecificFile(org.eclipse.jgit.api.ArchiveCommandTest)')","[158171, 158256]"
"('Description.java', 'org.junit.runner.Description', 'methodAndClassNamePatternGroupOrDefault', '([\\s\\S]*)\\((.*)\\)', 'testReadACK_Invalid3(org.eclipse.jgit.transport.PacketLineInTest)')","[184542, 185083]"
"('Description.java', 'org.junit.runner.Description', 'methodAndClassNamePatternGroupOrDefault', '([\\s\\S]*)\\((.*)\\)', 'testTimeout_flush_Success(org.eclipse.jgit.util.io.TimeoutOutputStreamTest)')","[24544, 24740]"
"('Description.java', 'org.junit.runner.Description', 'methodAndClassNamePatternGroupOrDefault', '([\\s\\S]*)\\((.*)\\)', 'testInvalidCommitInvalidAuthor3(org.eclipse.jgit.lib.ObjectCheckerTest)')","[49361, 51890]"
"('Description.java', 'org.junit.runner.Description', 'methodAndClassNamePatternGroupOrDefault', '([\\s\\S]*)\\((.*)\\)', 'org.eclipse.jgit.api.PathCheckoutCommandTest')","[123692, 127990]"
"('Description.java', 'org.junit.runner.Description', 'methodAndClassNamePatternGroupOrDefault', '([\\s\\S]*)\\((.*)\\)', 'testMaliciousAbsolutePathIsOkTwoLevels(org.eclipse.jgit.lib.DirCacheCheckoutMaliciousPathTest)')","[66970, 67877]"
"('URIish.java', 'org.eclipse.jgit.transport.URIish', '<init>', '^(file):([\\\\/](?![\\\\/])((?:[A-Za-z]:)?[\\\\/]?(?:(?:[^\\\\/]+[\\\\/]+)*[^\\\\/]+[\\\\/]*)))$', 'http://me@example.com:1234/D:\\x')",[213734]
"('Description.java', 'org.junit.runner.Description', 'methodAndClassNamePatternGroupOrDefault', '([\\s\\S]*)\\((.*)\\)', 'testGraphGroupCase5[OldRule? true](org.eclipse.jgit.ignore.IgnoreRuleSpecialCasesTest)')","[89054, 96138]"
"('Description.java', 'org.junit.runner.Description', 'methodAndClassNamePatternGroupOrDefault', '([\\s\\S]*)\\((.*)\\)', '[OldRule? false]')","[76966, 84732, 103374]"
"('Description.java', 'org.junit.runner.Description', 'methodAndClassNamePatternGroupOrDefault', '([\\s\\S]*)\\((.*)\\)', 'testAddExistingSingleSmallFileWithNewLine(org.eclipse.jgit.api.AddCommandTest)')","[164810, 165250]"
"('URIish.java', 'org.eclipse.jgit.transport.URIish', '<init>', '^([a-z][a-z0-9+-]+)://(?:(?:([^/:@]+)(?::([^\\\\/]+))?@)?((?:[^\\\\/:]+)|(?:\\[[0-9a-f:]+\\]))(?::(\\d+))?((?:/~(?:[^\\\\/]+))?[\\\\/]))?(.+)?$', 'https://l usr\\example.com@example.com//abc')","[231904, 232088]"
"('AttributesRule.java', 'org.eclipse.jgit.attributes.AttributesRule', 'isMatch', '.*\\.st.', 'anothertest.sta1')","[73869, 74031, 75040, 75175]"
"('URIish.java', 'org.eclipse.jgit.transport.URIish', '<init>', '^([a-z][a-z0-9+-]+)://(?:(?:([^/:@]+)(?::([^\\\\/]+))?@)?((?:[^\\\\/:]+)|(?:\\[[0-9a-f:]+\\]))(?::(\\d+))?((?:/~(?:[^\\\\/]+))?[\\\\/]))?(.+)?$', 'ssh://%3ax%25:%40%41x@example.com:33/some%c3%a5/p%20a th')","[248970, 249016]"
"('Description.java', 'org.junit.runner.Description', 'methodAndClassNamePatternGroupOrDefault', '([\\s\\S]*)\\((.*)\\)', 'testIdenticalAdd(org.eclipse.jgit.notes.DefaultNoteMergerTest)')","[260702, 260832]"
"('Description.java', 'org.junit.runner.Description', 'methodAndClassNamePatternGroupOrDefault', '([\\s\\S]*)\\((.*)\\)', 'testSet_Replace(org.eclipse.jgit.notes.LeafBucketTest)')","[260317, 260559]"
"('Description.java', 'org.junit.runner.Description', 'methodAndClassNamePatternGroupOrDefault', '([\\s\\S]*)\\((.*)\\)', 'testIteratorReturnedValues2(org.eclipse.jgit.internal.storage.file.PackIndexV1Test)')","[113626, 113757]"
"('Description.java', 'org.junit.runner.Description', 'methodAndClassNamePatternGroupOrDefault', '([\\s\\S]*)\\((.*)\\)', 'testDeleteFile(org.eclipse.jgit.util.FileUtilTest)')","[23436, 23781]"
"('Description.java', 'org.junit.runner.Description', 'methodAndClassNamePatternGroupOrDefault', '([\\s\\S]*)\\((.*)\\)', 'testBlankGroupCase0[OldRule? true](org.eclipse.jgit.ignore.IgnoreRuleSpecialCasesTest)')","[90940, 98024]"
"('URIish.java', 'org.eclipse.jgit.transport.URIish', '<init>', '^([a-z][a-z0-9+-]+)://(?:(?:([^/:@]+)(?::([^\\\\/]+))?@)?((?:[^\\\\/:]+)|(?:\\[[0-9a-f:]+\\]))(?::(\\d+))?((?:/~(?:[^\\\\/]+))?[\\\\/]))?(.+)?$', 'ssh://me:wtf@[::1]:1234//abc')",[192847]
"('Description.java', 'org.junit.runner.Description', 'methodAndClassNamePatternGroupOrDefault', '([\\s\\S]*)\\((.*)\\)', 'org.eclipse.jgit.treewalk.AbstractTreeIteratorTest')","[266750, 267074]"
"('Description.java', 'org.junit.runner.Description', 'methodAndClassNamePatternGroupOrDefault', '([\\s\\S]*)\\((.*)\\)', 'testUpdateUnexpectedRemoteVsForce(org.eclipse.jgit.transport.PushProcessTest)')","[203308, 203878]"
"('Description.java', 'org.junit.runner.Description', 'methodAndClassNamePatternGroupOrDefault', '([\\s\\S]*)\\((.*)\\)', 'testAddToEndOfList(org.eclipse.jgit.util.RefListTest)')","[20012, 20506]"
"('Description.java', 'org.junit.runner.Description', 'methodAndClassNamePatternGroupOrDefault', '([\\s\\S]*)\\((.*)\\)', 'testReadLineWithMissingComment(org.eclipse.jgit.internal.storage.file.ReflogReaderTest)')","[118999, 119172]"
"('Description.java', 'org.junit.runner.Description', 'methodAndClassNamePatternGroupOrDefault', '([\\s\\S]*)\\((.*)\\)', 'testEscapedBracket1[OldRule? true](org.eclipse.jgit.ignore.IgnoreRuleSpecialCasesTest)')","[91722, 98806]"
"('Description.java', 'org.junit.runner.Description', 'methodAndClassNamePatternGroupOrDefault', '([\\s\\S]*)\\((.*)\\)', 'testQuote_Empty(org.eclipse.jgit.util.QuotedStringBourneUserPathStyleTest)')","[28976, 29237]"
"('Description.java', 'org.junit.runner.Description', 'methodAndClassNamePatternGroupOrDefault', '([\\s\\S]*)\\((.*)\\)', 'org.eclipse.jgit.util.RelativeDateFormatterTest')","[31190, 31600]"
"('URIish.java', 'org.eclipse.jgit.transport.URIish', '<init>', '^(file):([\\\\/](?![\\\\/])((?:[A-Za-z]:)?[\\\\/]?(?:(?:[^\\\\/]+[\\\\/]+)*[^\\\\/]+[\\\\/]*)))$', 'ssh+git://lusr\\example:wtf@[::1]:80/D:\\x')",[199512]
"('Description.java', 'org.junit.runner.Description', 'methodAndClassNamePatternGroupOrDefault', '([\\s\\S]*)\\((.*)\\)', 'testExactRename_OneRename(org.eclipse.jgit.diff.RenameDetectorTest)')","[4456, 5010]"
"('URIish.java', 'org.eclipse.jgit.transport.URIish', '<init>', '^(file):([\\\\/](?![\\\\/])((?:[A-Za-z]:)?[\\\\/]?(?:(?:[^\\\\/]+[\\\\/]+)*[^\\\\/]+[\\\\/]*)))$', 'ssh+git://me@[::1]:1234//')",[211020]
"('URIish.java', 'org.eclipse.jgit.transport.URIish', '<init>', '^([a-z][a-z0-9+-]+)://(?:(?:([^/:@]+)(?::([^\\\\/]+))?@)?((?:[^\\\\/:]+)|(?:\\[[0-9a-f:]+\\]))(?::(\\d+))?((?:/~(?:[^\\\\/]+))?[\\\\/]))?(.+)?$', 'ssh://lusr\\example@example.com:1234/D:/x')",[209295]
"('Description.java', 'org.junit.runner.Description', 'methodAndClassNamePatternGroupOrDefault', '([\\s\\S]*)\\((.*)\\)', 'testIntoOtherThanMaster(org.eclipse.jgit.merge.MergeMessageFormatterTest)')","[16224, 16548]"
"('URIish.java', 'org.eclipse.jgit.transport.URIish', '<init>', '^(file):([\\\\/](?![\\\\/])((?:[A-Za-z]:)?[\\\\/]?(?:(?:[^\\\\/]+[\\\\/]+)*[^\\\\/]+[\\\\/]*)))$', '/tmp/jgit_test_622044983367939275_tmp/tmp_3909595270568668392')","[148077, 148202, 148469]"
"('URIish.java', 'org.eclipse.jgit.transport.URIish', '<init>', '^([\\\\/]?((?:[A-Za-z]:)?[\\\\/]?(?:(?:[^\\\\/]+[\\\\/]+)*[^\\\\/]+[\\\\/]*)))$', '/tmp/jgit_test_622044983367939275_tmp/tmp_3909595270568668392')","[148173, 148318, 148601]"
"('ChangeIdUtil.java', 'org.eclipse.jgit.util.ChangeIdUtil', 'indexOfChangeId', '(^Change-Id: *I[a-f0-9]{40}$)', 'x')","[33798, 33844]"
"('URIish.java', 'org.eclipse.jgit.transport.URIish', '<init>', '^(file):([\\\\/](?![\\\\/])((?:[A-Za-z]:)?[\\\\/]?(?:(?:[^\\\\/]+[\\\\/]+)*[^\\\\/]+[\\\\/]*)))$', 'http://l usr\\example.com@example.com:80/D:/x')",[214976]
"('Description.java', 'org.junit.runner.Description', 'methodAndClassNamePatternGroupOrDefault', '([\\s\\S]*)\\((.*)\\)', 'testRules(org.eclipse.jgit.attributes.AttributesNodeDirCacheIteratorTest)')","[72680, 72787]"
"('Description.java', 'org.junit.runner.Description', 'methodAndClassNamePatternGroupOrDefault', '([\\s\\S]*)\\((.*)\\)', 'testDetachedHeadOnCheckout(org.eclipse.jgit.api.CheckoutCommandTest)')","[149703, 150251]"
"('Description.java', 'org.junit.runner.Description', 'methodAndClassNamePatternGroupOrDefault', '([\\s\\S]*)\\((.*)\\)', 'checkMergeConflictingFilesWithTreeInIndex(org.eclipse.jgit.merge.ResolveMergerTest)')","[12801, 13126]"
"('Description.java', 'org.junit.runner.Description', 'methodAndClassNamePatternGroupOrDefault', '([\\s\\S]*)\\((.*)\\)', 'testPunctGroupCase3(org.eclipse.jgit.fnmatch.FileNameMatcherTest)')","[43246, 46592]"
"('URIish.java', 'org.eclipse.jgit.transport.URIish', '<init>', '^([a-z][a-z0-9+-]+)://(?:(?:([^/:@]+)(?::([^\\\\/]+))?@)?((?:[^\\\\/:]+)|(?:\\[[0-9a-f:]+\\]))(?::(\\d+))?((?:/~(?:[^\\\\/]+))?[\\\\/]))?(.+)?$', 'http://lusr\\example@[::1]/D:\\x')","[230524, 230708]"
"('Description.java', 'org.junit.runner.Description', 'methodAndClassNamePatternGroupOrDefault', '([\\s\\S]*)\\((.*)\\)', 'testTwoRoots1(org.eclipse.jgit.revplot.PlotCommitListTest)')","[169406, 169728]"
"('Description.java', 'org.junit.runner.Description', 'methodAndClassNamePatternGroupOrDefault', '([\\s\\S]*)\\((.*)\\)', 'test008_readSectionNames(org.eclipse.jgit.lib.ConfigTest)')","[69999, 70742]"
"('URIish.java', 'org.eclipse.jgit.transport.URIish', '<init>', '^(file):([\\\\/](?![\\\\/])((?:[A-Za-z]:)?[\\\\/]?(?:(?:[^\\\\/]+[\\\\/]+)*[^\\\\/]+[\\\\/]*)))$', 'https://me:wtf@[::1]:1234//abc')",[204442]
"('URIish.java', 'org.eclipse.jgit.transport.URIish', '<init>', '^([a-z][a-z0-9+-]+)://(?:(?:([^/:@]+)(?::([^\\\\/]+))?@)?((?:[^\\\\/:]+)|(?:\\[[0-9a-f:]+\\]))(?::(\\d+))?((?:/~(?:[^\\\\/]+))?[\\\\/]))?(.+)?$', 'file:///tmp/jgit_test_3149639463277021735_tmp/tmp_4316409130603707111.git/')",[3810]
"('Description.java', 'org.junit.runner.Description', 'methodAndClassNamePatternGroupOrDefault', '([\\s\\S]*)\\((.*)\\)', 'org.eclipse.jgit.patch.EditListTest')","[36, 267]"
"('URIish.java', 'org.eclipse.jgit.transport.URIish', '<init>', '^([a-z][a-z0-9+-]+)://(?:(?:([^/:@]+)(?::([^\\\\/]+))?@)?((?:[^\\\\/:]+)|(?:\\[[0-9a-f:]+\\]))(?::(\\d+))?((?:/~(?:[^\\\\/]+))?[\\\\/]))?(.+)?$', 'http://me:wtf@[::1]:1234//abc')",[200363]
"('URIish.java', 'org.eclipse.jgit.transport.URIish', '<init>', '^([a-z][a-z0-9+-]+)://(?:(?:([^/:@]+)(?::([^\\\\/]+))?@)?((?:[^\\\\/:]+)|(?:\\[[0-9a-f:]+\\]))(?::(\\d+))?((?:/~(?:[^\\\\/]+))?[\\\\/]))?(.+)?$', 'https://me@example.com/D:/x')","[230846, 231030]"
"('Description.java', 'org.junit.runner.Description', 'methodAndClassNamePatternGroupOrDefault', '([\\s\\S]*)\\((.*)\\)', 'testDirectoryFileConflicts_6b(org.eclipse.jgit.lib.DirCacheCheckoutTest)')","[61818, 62907]"
"('Description.java', 'org.junit.runner.Description', 'methodAndClassNamePatternGroupOrDefault', '([\\s\\S]*)\\((.*)\\)', 'org.eclipse.jgit.lib.RepositoryCacheTest')","[60191, 60544]"
"('URIish.java', 'org.eclipse.jgit.transport.URIish', '<init>', '^([a-z][a-z0-9+-]+)://(?:(?:([^/:@]+)(?::([^\\\\/]+))?@)?((?:[^\\\\/:]+)|(?:\\[[0-9a-f:]+\\]))(?::(\\d+))?((?:/~(?:[^\\\\/]+))?[\\\\/]))?(.+)?$', 'file:///tmp/jgit_test_4874465296214480399_tmp/tmp_6126357013847573839/.git/')",[56773]
"('Description.java', 'org.junit.runner.Description', 'methodAndClassNamePatternGroupOrDefault', '([\\s\\S]*)\\((.*)\\)', 'testDeleteFastForward(org.eclipse.jgit.internal.storage.file.RefUpdateTest)')","[120243, 121094]"
"('Description.java', 'org.junit.runner.Description', 'methodAndClassNamePatternGroupOrDefault', '([\\s\\S]*)\\((.*)\\)', 'testIsModifiedFileSmudged(org.eclipse.jgit.treewalk.FileTreeIteratorTest)')","[262208, 262556]"
"('Description.java', 'org.junit.runner.Description', 'methodAndClassNamePatternGroupOrDefault', '([\\s\\S]*)\\((.*)\\)', 'testInversedGroupCase3[OldRule? false](org.eclipse.jgit.ignore.IgnoreRuleSpecialCasesTest)')","[86020, 93125]"
"('URIish.java', 'org.eclipse.jgit.transport.URIish', '<init>', '^([a-z][a-z0-9+-]+)://(?:(?:([^/:@]+)(?::([^\\\\/]+))?@)?((?:[^\\\\/:]+)|(?:\\[[0-9a-f:]+\\]))(?::(\\d+))?((?:/~(?:[^\\\\/]+))?[\\\\/]))?(.+)?$', 'http://l usr\\example.com@1.2.3.4:80//')",[215275]
"('Description.java', 'org.junit.runner.Description', 'methodAndClassNamePatternGroupOrDefault', '([\\s\\S]*)\\((.*)\\)', 'testAddIgnoredFile(org.eclipse.jgit.api.AddCommandTest)')","[164726, 165162]"
"('Description.java', 'org.junit.runner.Description', 'methodAndClassNamePatternGroupOrDefault', '([\\s\\S]*)\\((.*)\\)', 'test1(org.eclipse.jgit.transport.PackParserTest)')","[218297, 218551]"
"('FastIgnoreRule.java', 'org.eclipse.jgit.ignore.FastIgnoreRule', 'isMatch', '[[\\p{Print}\\p{javaDigit}\\p{javaLetter}]]', ' ')",[101549]
"('URIish.java', 'org.eclipse.jgit.transport.URIish', '<init>', '^(file):([\\\\/](?![\\\\/])((?:[A-Za-z]:)?[\\\\/]?(?:(?:[^\\\\/]+[\\\\/]+)*[^\\\\/]+[\\\\/]*)))$', 'https://me:wtf@example.com:1234/D:\\x')",[203031]
"('Description.java', 'org.junit.runner.Description', 'methodAndClassNamePatternGroupOrDefault', '([\\s\\S]*)\\((.*)\\)', 'testDirtySubmoduleWorktreeUntracked(org.eclipse.jgit.lib.IndexDiffSubmoduleTest)')","[56302, 56451]"
"('ChangeIdUtil.java', 'org.eclipse.jgit.util.ChangeIdUtil', 'indexOfFirstFooterLine', '(^[a-zA-Z0-9-]+:(?!//).*$)', 'This reverts commit f371b515060ef3218fa2942d04f30be250bdef76.')",[126005]
"('Description.java', 'org.junit.runner.Description', 'methodAndClassNamePatternGroupOrDefault', '([\\s\\S]*)\\((.*)\\)', 'testParse_GitStyleMessageWithCRLF(org.eclipse.jgit.revwalk.RevCommitParseTest)')","[182488, 182855]"
"('Description.java', 'org.junit.runner.Description', 'methodAndClassNamePatternGroupOrDefault', '([\\s\\S]*)\\((.*)\\)', 'testEditFlat(org.eclipse.jgit.notes.NoteMapTest)')","[258252, 258506]"
"('Description.java', 'org.junit.runner.Description', 'methodAndClassNamePatternGroupOrDefault', '([\\s\\S]*)\\((.*)\\)', 'testTwoRangesInOneGroupCase3[OldRule? false](org.eclipse.jgit.ignore.IgnoreRuleSpecialCasesTest)')","[88021, 95126]"
"('Description.java', 'org.junit.runner.Description', 'methodAndClassNamePatternGroupOrDefault', '([\\s\\S]*)\\((.*)\\)', 'testDequote_BareABCZ_OnlyBC(org.eclipse.jgit.util.QuotedStringBourneUserPathStyleTest)')","[28808, 29061]"
"('URIish.java', 'org.eclipse.jgit.transport.URIish', '<init>', '^([a-z][a-z0-9+-]+)://(?:(?:([^/:@]+)(?::([^\\\\/]+))?@)?((?:[^\\\\/:]+)|(?:\\[[0-9a-f:]+\\]))(?::(\\d+))?((?:/~(?:[^\\\\/]+))?[\\\\/]))?(.+)?$', 'ssh+git://lusr\\example@1.2.3.4/D:/x')","[226798, 226982]"
"('URIish.java', 'org.eclipse.jgit.transport.URIish', '<init>', '^([a-z][a-z0-9+-]+)://(?:(?:([^/:@]+)(?::([^\\\\/]+))?@)?((?:[^\\\\/:]+)|(?:\\[[0-9a-f:]+\\]))(?::(\\d+))?((?:/~(?:[^\\\\/]+))?[\\\\/]))?(.+)?$', 'https://me@1.2.3.4/D:\\x')","[231260, 231444]"
"('URIish.java', 'org.eclipse.jgit.transport.URIish', '<init>', '^([a-z][a-z0-9+-]+)://(?:(?:([^/:@]+)(?::([^\\\\/]+))?@)?((?:[^\\\\/:]+)|(?:\\[[0-9a-f:]+\\]))(?::(\\d+))?((?:/~(?:[^\\\\/]+))?[\\\\/]))?(.+)?$', 'http://lusr\\example:wtf@example.com:1234//abc')",[201835]
"('Description.java', 'org.junit.runner.Description', 'methodAndClassNamePatternGroupOrDefault', '([\\s\\S]*)\\((.*)\\)', 'repositoryWithMissingSubmodule(org.eclipse.jgit.submodule.SubmoduleStatusTest)')","[18802, 18954]"
"('Description.java', 'org.junit.runner.Description', 'methodAndClassNamePatternGroupOrDefault', '([\\s\\S]*)\\((.*)\\)', 'testAdjacentModifications(org.eclipse.jgit.merge.MergeAlgorithmTest)')","[12144, 12450]"
"('Description.java', 'org.junit.runner.Description', 'methodAndClassNamePatternGroupOrDefault', '([\\s\\S]*)\\((.*)\\)', 'testRebaseWithUncommittedMasterChangeBaseCommit(org.eclipse.jgit.api.RebaseCommandTest)')","[131558, 133052]"
"('Description.java', 'org.junit.runner.Description', 'methodAndClassNamePatternGroupOrDefault', '([\\s\\S]*)\\((.*)\\)', 'testCheckoutAllPaths(org.eclipse.jgit.api.CheckoutCommandTest)')","[149388, 149921]"
"('URIish.java', 'org.eclipse.jgit.transport.URIish', '<init>', '^([a-z][a-z0-9+-]+)://(?:(?:([^/:@]+)(?::([^\\\\/]+))?@)?((?:[^\\\\/:]+)|(?:\\[[0-9a-f:]+\\]))(?::(\\d+))?((?:/~(?:[^\\\\/]+))?[\\\\/]))?(.+)?$', 'http://l usr\\example.com@[::1]//abc')","[229328, 229512]"
"('Description.java', 'org.junit.runner.Description', 'methodAndClassNamePatternGroupOrDefault', '([\\s\\S]*)\\((.*)\\)', 'testDirModeAndRegex3[OldRule? false](org.eclipse.jgit.ignore.IgnoreMatcherParametrizedTest)')","[103604, 104085]"
"('Description.java', 'org.junit.runner.Description', 'methodAndClassNamePatternGroupOrDefault', '([\\s\\S]*)\\((.*)\\)', 'workingDirectoryDeleteIndexAdd(org.eclipse.jgit.api.StashApplyCommandTest)')","[142666, 143225]"
"('URIish.java', 'org.eclipse.jgit.transport.URIish', '<init>', '^([a-z][a-z0-9+-]+)://(?:(?:([^/:@]+)(?::([^\\\\/]+))?@)?((?:[^\\\\/:]+)|(?:\\[[0-9a-f:]+\\]))(?::(\\d+))?((?:/~(?:[^\\\\/]+))?[\\\\/]))?(.+)?$', 'file:///tmp/jgit_test_6951491485595886041_tmp/tmp_8609324631633590643/.git/')",[157014]
"('Description.java', 'org.junit.runner.Description', 'methodAndClassNamePatternGroupOrDefault', '([\\s\\S]*)\\((.*)\\)', 'testOnlyOption_f1_6_c(org.eclipse.jgit.api.CommitOnlyTest)')","[135004, 137053]"
"('URIish.java', 'org.eclipse.jgit.transport.URIish', '<init>', '^(file):([\\\\/](?![\\\\/])((?:[A-Za-z]:)?[\\\\/]?(?:(?:[^\\\\/]+[\\\\/]+)*[^\\\\/]+[\\\\/]*)))$', 'https://me:wtf@example.com:1234//abc')",[202916]
"('Description.java', 'org.junit.runner.Description', 'methodAndClassNamePatternGroupOrDefault', '([\\s\\S]*)\\((.*)\\)', 'testQuoteAtAndNumber(org.eclipse.jgit.util.QuotedStringGitPathStyleTest)')","[40143, 40583]"
"('AttributesRule.java', 'org.eclipse.jgit.attributes.AttributesRule', 'isMatch', '[tv]est\\.sta[a-d]', 'test.stad')","[74409, 75553]"
"('Description.java', 'org.junit.runner.Description', 'methodAndClassNamePatternGroupOrDefault', '([\\s\\S]*)\\((.*)\\)', 'testFolderChangedToFileCommittedComparedWithInitialCommit(org.eclipse.jgit.treewalk.filter.IndexDiffFilterTest)')","[264569, 265387]"
"('Description.java', 'org.junit.runner.Description', 'methodAndClassNamePatternGroupOrDefault', '([\\s\\S]*)\\((.*)\\)', 'testTwoRangesInOneGroupCase3(org.eclipse.jgit.fnmatch.FileNameMatcherTest)')","[44359, 47758]"
"('Description.java', 'org.junit.runner.Description', 'methodAndClassNamePatternGroupOrDefault', '([\\s\\S]*)\\((.*)\\)', 'testSmallMap(org.eclipse.jgit.transport.LongMapTest)')","[183658, 183831]"
"('Description.java', 'org.junit.runner.Description', 'methodAndClassNamePatternGroupOrDefault', '([\\s\\S]*)\\((.*)\\)', 'testSpecialGroupCase6(org.eclipse.jgit.fnmatch.FileNameMatcherTest)')","[41482, 44744]"
"('URIish.java', 'org.eclipse.jgit.transport.URIish', '<init>', '^([a-z][a-z0-9+-]+)://(?:(?:([^/:@]+)(?::([^\\\\/]+))?@)?((?:[^\\\\/:]+)|(?:\\[[0-9a-f:]+\\]))(?::(\\d+))?((?:/~(?:[^\\\\/]+))?[\\\\/]))?(.+)?$', 'ssh://l usr\\example.com@1.2.3.4:80/D:\\x')",[208789]
"('FastIgnoreRule.java', 'org.eclipse.jgit.ignore.FastIgnoreRule', 'isMatch', '[\\p{Punct}]', '@')",[101133]
"('Description.java', 'org.junit.runner.Description', 'methodAndClassNamePatternGroupOrDefault', '([\\s\\S]*)\\((.*)\\)', 'testDiffRootTreeToNull(org.eclipse.jgit.diff.DiffFormatterTest)')","[3034, 3494]"
"('Description.java', 'org.junit.runner.Description', 'methodAndClassNamePatternGroupOrDefault', '([\\s\\S]*)\\((.*)\\)', 'testFileNameWildcards[OldRule? false](org.eclipse.jgit.ignore.IgnoreMatcherParametrizedTest)')","[103420, 103901]"
"('Description.java', 'org.junit.runner.Description', 'methodAndClassNamePatternGroupOrDefault', '([\\s\\S]*)\\((.*)\\)', 'testUNC(org.eclipse.jgit.transport.URIishTest)')","[188275, 189644]"
"('Description.java', 'org.junit.runner.Description', 'methodAndClassNamePatternGroupOrDefault', '([\\s\\S]*)\\((.*)\\)', 'testSpecialGroupCase2[OldRule? true](org.eclipse.jgit.ignore.IgnoreRuleSpecialCasesTest)')","[88364, 95448]"
"('URIish.java', 'org.eclipse.jgit.transport.URIish', '<init>', '^([a-z][a-z0-9+-]+)://(?:(?:([^/:@]+)(?::([^\\\\/]+))?@)?((?:[^\\\\/:]+)|(?:\\[[0-9a-f:]+\\]))(?::(\\d+))?((?:/~(?:[^\\\\/]+))?[\\\\/]))?(.+)?$', 'ssh://l usr\\example.com:wtf@1.2.3.4:80//abc')",[193869]
"('URIish.java', 'org.eclipse.jgit.transport.URIish', '<init>', '^(file):([\\\\/](?![\\\\/])((?:[A-Za-z]:)?[\\\\/]?(?:(?:[^\\\\/]+[\\\\/]+)*[^\\\\/]+[\\\\/]*)))$', 'ssh+git://me:wtf@example.com:1234/D:\\x')",[195594]
"('URIish.java', 'org.eclipse.jgit.transport.URIish', '<init>', '^([a-z][a-z0-9+-]+)://(?:(?:([^/:@]+)(?::([^\\\\/]+))?@)?((?:[^\\\\/:]+)|(?:\\[[0-9a-f:]+\\]))(?::(\\d+))?((?:/~(?:[^\\\\/]+))?[\\\\/]))?(.+)?$', 'http://user:secret@host.xy:80/some/path')","[251431, 251477]"
"('Description.java', 'org.junit.runner.Description', 'methodAndClassNamePatternGroupOrDefault', '([\\s\\S]*)\\((.*)\\)', 'testExclude(org.eclipse.jgit.internal.storage.file.PackWriterTest)')","[117677, 118123]"
"('Description.java', 'org.junit.runner.Description', 'methodAndClassNamePatternGroupOrDefault', '([\\s\\S]*)\\((.*)\\)', 'testEdit_MoveBlock(org.eclipse.jgit.diff.HistogramDiffTest)')","[6870, 7476]"
"('URIish.java', 'org.eclipse.jgit.transport.URIish', '<init>', '^([a-z][a-z0-9+-]+)://(?:(?:([^/:@]+)(?::([^\\\\/]+))?@)?((?:[^\\\\/:]+)|(?:\\[[0-9a-f:]+\\]))(?::(\\d+))?((?:/~(?:[^\\\\/]+))?[\\\\/]))?(.+)?$', 'https://l usr\\example.com:wtf@example.com:1234//abc')",[204833]
"('URIish.java', 'org.eclipse.jgit.transport.URIish', '<init>', '^([a-z][a-z0-9+-]+)://(?:(?:([^/:@]+)(?::([^\\\\/]+))?@)?((?:[^\\\\/:]+)|(?:\\[[0-9a-f:]+\\]))(?::(\\d+))?((?:/~(?:[^\\\\/]+))?[\\\\/]))?(.+)?$', 'ssh://me:wtf@example.com:1234//')",[192065]
"('Description.java', 'org.junit.runner.Description', 'methodAndClassNamePatternGroupOrDefault', '([\\s\\S]*)\\((.*)\\)', 'testWriteLine1(org.eclipse.jgit.diff.RawTextTest)')","[10789, 11109]"
"('Description.java', 'org.junit.runner.Description', 'methodAndClassNamePatternGroupOrDefault', '([\\s\\S]*)\\((.*)\\)', 'testToString(org.eclipse.jgit.diff.EditTest)')","[6010, 6355]"
"('URIish.java', 'org.eclipse.jgit.transport.URIish', '<init>', '^(file):([\\\\/](?![\\\\/])((?:[A-Za-z]:)?[\\\\/]?(?:(?:[^\\\\/]+[\\\\/]+)*[^\\\\/]+[\\\\/]*)))$', 'ssh+git://me@example.com:80/D:/x')",[210560]
"('Description.java', 'org.junit.runner.Description', 'methodAndClassNamePatternGroupOrDefault', '([\\s\\S]*)\\((.*)\\)', 'testXDigitGroupCase1(org.eclipse.jgit.fnmatch.FileNameMatcherTest)')","[43960, 47340]"
"('Description.java', 'org.junit.runner.Description', 'methodAndClassNamePatternGroupOrDefault', '([\\s\\S]*)\\((.*)\\)', 'testUpperGroupCase2[OldRule? false](org.eclipse.jgit.ignore.IgnoreRuleSpecialCasesTest)')","[87285, 94390]"
"('Description.java', 'org.junit.runner.Description', 'methodAndClassNamePatternGroupOrDefault', '([\\s\\S]*)\\((.*)\\)', 'testPullWithMergeConfig(org.eclipse.jgit.api.PullCommandTest)')","[144672, 145021]"
"('URIish.java', 'org.eclipse.jgit.transport.URIish', '<init>', '^([a-z][a-z0-9+-]+)://(?:(?:([^/:@]+)(?::([^\\\\/]+))?@)?((?:[^\\\\/:]+)|(?:\\[[0-9a-f:]+\\]))(?::(\\d+))?((?:/~(?:[^\\\\/]+))?[\\\\/]))?(.+)?$', 'http://l usr\\example.com@1.2.3.4:80//abc')",[215321]
"('Description.java', 'org.junit.runner.Description', 'methodAndClassNamePatternGroupOrDefault', '([\\s\\S]*)\\((.*)\\)', 'testSingleRename(org.eclipse.jgit.revwalk.RevWalkFollowFilterTest)')","[180354, 180418]"
"('FastIgnoreRule.java', 'org.eclipse.jgit.ignore.FastIgnoreRule', 'isMatch', '[^b-c]', 'b')",[100195]
"('ChangeIdUtil.java', 'org.eclipse.jgit.util.ChangeIdUtil', 'indexOfFirstFooterLine', '(^[a-zA-Z0-9-]+:(?!//).*$)', '')","[16758, 16888, 33375, 35274, 35686, 35867, 36048, 36907, 37919]"
"('Description.java', 'org.junit.runner.Description', 'methodAndClassNamePatternGroupOrDefault', '([\\s\\S]*)\\((.*)\\)', 'testListNotes(org.eclipse.jgit.api.NotesCommandTest)')","[128047, 128090]"
"('URIish.java', 'org.eclipse.jgit.transport.URIish', '<init>', '^([a-z][a-z0-9+-]+)://(?:(?:([^/:@]+)(?::([^\\\\/]+))?@)?((?:[^\\\\/:]+)|(?:\\[[0-9a-f:]+\\]))(?::(\\d+))?((?:/~(?:[^\\\\/]+))?[\\\\/]))?(.+)?$', 'http://l usr\\example.com:wtf@example.com:1234/D:\\x')",[200823]
"('Description.java', 'org.junit.runner.Description', 'methodAndClassNamePatternGroupOrDefault', '([\\s\\S]*)\\((.*)\\)', 'testAlias_invalidConnectionAttempts(org.eclipse.jgit.transport.OpenSshConfigTest)')","[195995, 196365]"
"('URIish.java', 'org.eclipse.jgit.transport.URIish', '<init>', '^(file):([\\\\/](?![\\\\/])((?:[A-Za-z]:)?[\\\\/]?(?:(?:[^\\\\/]+[\\\\/]+)*[^\\\\/]+[\\\\/]*)))$', 'https://lusr\\example@example.com:80/D:\\x')",[220013]
"('Description.java', 'org.junit.runner.Description', 'methodAndClassNamePatternGroupOrDefault', '([\\s\\S]*)\\((.*)\\)', 'testVerySimpleWildCardCase3[OldRule? true](org.eclipse.jgit.ignore.IgnoreRuleSpecialCasesTest)')","[88594, 95678]"
"('Description.java', 'org.junit.runner.Description', 'methodAndClassNamePatternGroupOrDefault', '([\\s\\S]*)\\((.*)\\)', 'testCheckoutOutChangesAutoCRLFtrue(org.eclipse.jgit.lib.DirCacheCheckoutTest)')","[61881, 62973]"
"('URIish.java', 'org.eclipse.jgit.transport.URIish', '<init>', '^([a-z][a-z0-9+-]+)://(?:(?:([^/:@]+)(?::([^\\\\/]+))?@)?((?:[^\\\\/:]+)|(?:\\[[0-9a-f:]+\\]))(?::(\\d+))?((?:/~(?:[^\\\\/]+))?[\\\\/]))?(.+)?$', 'ssh+git://l usr\\example.com:wtf@example.com:80//abc')",[197603]
"('Description.java', 'org.junit.runner.Description', 'methodAndClassNamePatternGroupOrDefault', '([\\s\\S]*)\\((.*)\\)', 'testOnlyOption_f1_14_d(org.eclipse.jgit.api.CommitOnlyTest)')","[136180, 138285]"
"('Description.java', 'org.junit.runner.Description', 'methodAndClassNamePatternGroupOrDefault', '([\\s\\S]*)\\((.*)\\)', 'testReadWhileAppendIsInProgress(org.eclipse.jgit.internal.storage.file.ReflogReaderTest)')","[118957, 119128]"
"('URIish.java', 'org.eclipse.jgit.transport.URIish', '<init>', '^(file):([\\\\/](?![\\\\/])((?:[A-Za-z]:)?[\\\\/]?(?:(?:[^\\\\/]+[\\\\/]+)*[^\\\\/]+[\\\\/]*)))$', 'https://l usr\\example.com:wtf@example.com:1234//')",[204764]
"('Description.java', 'org.junit.runner.Description', 'methodAndClassNamePatternGroupOrDefault', '([\\s\\S]*)\\((.*)\\)', 'testReadACK_ACKready1(org.eclipse.jgit.transport.PacketLineInTest)')","[184332, 184863]"
"('Description.java', 'org.junit.runner.Description', 'methodAndClassNamePatternGroupOrDefault', '([\\s\\S]*)\\((.*)\\)', 'testValidSpecialCharacterUnixs(org.eclipse.jgit.lib.ValidRefNameTest)')","[65739, 66100]"
"('Description.java', 'org.junit.runner.Description', 'methodAndClassNamePatternGroupOrDefault', '([\\s\\S]*)\\((.*)\\)', 'testReplaceLineBreaks(org.eclipse.jgit.util.StringUtilsTest)')","[27215, 27368]"
"('URIish.java', 'org.eclipse.jgit.transport.URIish', '<init>', '^([a-z][a-z0-9+-]+)://(?:(?:([^/:@]+)(?::([^\\\\/]+))?@)?((?:[^\\\\/:]+)|(?:\\[[0-9a-f:]+\\]))(?::(\\d+))?((?:/~(?:[^\\\\/]+))?[\\\\/]))?(.+)?$', 'short:project.git')","[257031, 257956]"
"('Description.java', 'org.junit.runner.Description', 'methodAndClassNamePatternGroupOrDefault', '([\\s\\S]*)\\((.*)\\)', 'testValidTree4(org.eclipse.jgit.lib.ObjectCheckerTest)')","[48836, 51340]"
"('URIish.java', 'org.eclipse.jgit.transport.URIish', '<init>', '^(file):([\\\\/](?![\\\\/])((?:[A-Za-z]:)?[\\\\/]?(?:(?:[^\\\\/]+[\\\\/]+)*[^\\\\/]+[\\\\/]*)))$', 'ssh://l usr\\example.com@1.2.3.4:80//')",[208628]
"('Description.java', 'org.junit.runner.Description', 'methodAndClassNamePatternGroupOrDefault', '([\\s\\S]*)\\((.*)\\)', 'testInvalidTreeNameIsDotGitDotSpace(org.eclipse.jgit.lib.ObjectCheckerTest)')","[50495, 53078]"
"('Description.java', 'org.junit.runner.Description', 'methodAndClassNamePatternGroupOrDefault', '([\\s\\S]*)\\((.*)\\)', 'testWordGroupCase4[OldRule? false](org.eclipse.jgit.ignore.IgnoreRuleSpecialCasesTest)')","[87906, 95011]"
"('Description.java', 'org.junit.runner.Description', 'methodAndClassNamePatternGroupOrDefault', '([\\s\\S]*)\\((.*)\\)', 'testBoundLineDelete(org.eclipse.jgit.api.blame.BlameGeneratorTest)')","[134186, 134252]"
"('URIish.java', 'org.eclipse.jgit.transport.URIish', '<init>', '^(file):([\\\\/](?![\\\\/])((?:[A-Za-z]:)?[\\\\/]?(?:(?:[^\\\\/]+[\\\\/]+)*[^\\\\/]+[\\\\/]*)))$', 'ssh+git://lusr\\example:wtf@[::1]:1234/D:/x')",[199282]
"('URIish.java', 'org.eclipse.jgit.transport.URIish', '<init>', '^([a-z][a-z0-9+-]+)://(?:(?:([^/:@]+)(?::([^\\\\/]+))?@)?((?:[^\\\\/:]+)|(?:\\[[0-9a-f:]+\\]))(?::(\\d+))?((?:/~(?:[^\\\\/]+))?[\\\\/]))?(.+)?$', 'file:///tmp/jgit_test_1357611572328791281_tmp/tmp_8891242238099152345/.git/')",[59258]
"('Description.java', 'org.junit.runner.Description', 'methodAndClassNamePatternGroupOrDefault', '([\\s\\S]*)\\((.*)\\)', 'testSimpleAlwaysTags(org.eclipse.jgit.transport.RemoteConfigTest)')","[253506, 254069]"
"('FastIgnoreRule.java', 'org.eclipse.jgit.ignore.FastIgnoreRule', 'isMatch', '.*\\.sta[0-5]', 'test.sta0')","[104774, 106004]"
"('Description.java', 'org.junit.runner.Description', 'methodAndClassNamePatternGroupOrDefault', '([\\s\\S]*)\\((.*)\\)', 'testInvalidTagNoType1(org.eclipse.jgit.lib.ObjectCheckerTest)')","[50369, 52946]"
"('Description.java', 'org.junit.runner.Description', 'methodAndClassNamePatternGroupOrDefault', '([\\s\\S]*)\\((.*)\\)', 'testReadLines_LF(org.eclipse.jgit.util.ReadLinesTest)')","[30537, 30669]"
"('Description.java', 'org.junit.runner.Description', 'methodAndClassNamePatternGroupOrDefault', '([\\s\\S]*)\\((.*)\\)', 'submoduleWithNoGitDirectory(org.eclipse.jgit.treewalk.FileTreeIteratorTest)')","[262040, 262380]"
"('Description.java', 'org.junit.runner.Description', 'methodAndClassNamePatternGroupOrDefault', '([\\s\\S]*)\\((.*)\\)', 'testGetRef_CorruptSymbolicReference(org.eclipse.jgit.internal.storage.file.RefDirectoryTest)')","[110635, 111801]"
"('URIish.java', 'org.eclipse.jgit.transport.URIish', '<init>', '^([a-z][a-z0-9+-]+)://(?:(?:([^/:@]+)(?::([^\\\\/]+))?@)?((?:[^\\\\/:]+)|(?:\\[[0-9a-f:]+\\]))(?::(\\d+))?((?:/~(?:[^\\\\/]+))?[\\\\/]))?(.+)?$', 'ssh://l usr\\example.com@1.2.3.4//')","[222290, 222474]"
"('Description.java', 'org.junit.runner.Description', 'methodAndClassNamePatternGroupOrDefault', '([\\s\\S]*)\\((.*)\\)', 'testFillToHighMark2(org.eclipse.jgit.revwalk.RevCommitListTest)')","[176747, 176898]"
"('URIish.java', 'org.eclipse.jgit.transport.URIish', '<init>', '^(file):([\\\\/](?![\\\\/])((?:[A-Za-z]:)?[\\\\/]?(?:(?:[^\\\\/]+[\\\\/]+)*[^\\\\/]+[\\\\/]*)))$', 'http://me:wtf@example.com:1234/D:/x')",[199650]
"('URIish.java', 'org.eclipse.jgit.transport.URIish', '<init>', '^(file):([\\\\/](?![\\\\/])((?:[A-Za-z]:)?[\\\\/]?(?:(?:[^\\\\/]+[\\\\/]+)*[^\\\\/]+[\\\\/]*)))$', 'ssh+git://me@example.com:1234/D:/x')",[210376]
"('URIish.java', 'org.eclipse.jgit.transport.URIish', '<init>', '^([a-z][a-z0-9+-]+)://(?:(?:([^/:@]+)(?::([^\\\\/]+))?@)?((?:[^\\\\/:]+)|(?:\\[[0-9a-f:]+\\]))(?::(\\d+))?((?:/~(?:[^\\\\/]+))?[\\\\/]))?(.+)?$', 'ssh://lusr\\example@example.com:1234/D:\\x')",[209341]
"('URIish.java', 'org.eclipse.jgit.transport.URIish', '<init>', '^([a-z][a-z0-9+-]+)://(?:(?:([^/:@]+)(?::([^\\\\/]+))?@)?((?:[^\\\\/:]+)|(?:\\[[0-9a-f:]+\\]))(?::(\\d+))?((?:/~(?:[^\\\\/]+))?[\\\\/]))?(.+)?$', 'ssh+git://lusr\\example@[::1]:1234/D:\\x')",[213389]
"('URIish.java', 'org.eclipse.jgit.transport.URIish', '<init>', '^([a-z][a-z0-9+-]+)://(?:(?:([^/:@]+)(?::([^\\\\/]+))?@)?((?:[^\\\\/:]+)|(?:\\[[0-9a-f:]+\\]))(?::(\\d+))?((?:/~(?:[^\\\\/]+))?[\\\\/]))?(.+)?$', 'ssh://l usr\\example.com@[::1]:80/D:\\x')",[209157]
"('Description.java', 'org.junit.runner.Description', 'methodAndClassNamePatternGroupOrDefault', '([\\s\\S]*)\\((.*)\\)', 'testParse_incompleteAuthorAndCommitter(org.eclipse.jgit.revwalk.RevCommitParseTest)')","[182593, 182965]"
"('Description.java', 'org.junit.runner.Description', 'methodAndClassNamePatternGroupOrDefault', '([\\s\\S]*)\\((.*)\\)', 'testTimeout_readByte_Success2(org.eclipse.jgit.util.io.TimeoutInputStreamTest)')","[24057, 24228]"
"('URIish.java', 'org.eclipse.jgit.transport.URIish', '<init>', '^([a-z][a-z0-9+-]+)://(?:(?:([^/:@]+)(?::([^\\\\/]+))?@)?((?:[^\\\\/:]+)|(?:\\[[0-9a-f:]+\\]))(?::(\\d+))?((?:/~(?:[^\\\\/]+))?[\\\\/]))?(.+)?$', 'ssh+git://lusr\\example:wtf@[::1]:80//')",[199397]
"('Description.java', 'org.junit.runner.Description', 'methodAndClassNamePatternGroupOrDefault', '([\\s\\S]*)\\((.*)\\)', 'testParentDirectoryGitIgnores[OldRule? true](org.eclipse.jgit.ignore.IgnoreMatcherParametrizedTest)')","[103648, 104108]"
"('Description.java', 'org.junit.runner.Description', 'methodAndClassNamePatternGroupOrDefault', '([\\s\\S]*)\\((.*)\\)', 'testShouldBeRecursive_PathFilter(org.eclipse.jgit.treewalk.filter.NotTreeFilterTest)')","[263642, 263772]"
"('Description.java', 'org.junit.runner.Description', 'methodAndClassNamePatternGroupOrDefault', '([\\s\\S]*)\\((.*)\\)', 'org.eclipse.jgit.revwalk.RevWalkFilterTest')","[180521, 181189]"
"('URIish.java', 'org.eclipse.jgit.transport.URIish', '<init>', '^(file):([\\\\/](?![\\\\/])((?:[A-Za-z]:)?[\\\\/]?(?:(?:[^\\\\/]+[\\\\/]+)*[^\\\\/]+[\\\\/]*)))$', 'file:/tmp/jgit_test_7662726567108576804_tmp/tmp_247792946236895582/.git/')",[6723]
"('URIish.java', 'org.eclipse.jgit.transport.URIish', '<init>', '^([a-z][a-z0-9+-]+)://(?:(?:([^/:@]+)(?::([^\\\\/]+))?@)?((?:[^\\\\/:]+)|(?:\\[[0-9a-f:]+\\]))(?::(\\d+))?((?:/~(?:[^\\\\/]+))?[\\\\/]))?(.+)?$', '/a/b/.git')",[252860]
"('Description.java', 'org.junit.runner.Description', 'methodAndClassNamePatternGroupOrDefault', '([\\s\\S]*)\\((.*)\\)', 'getRemoteTrackingBranchShouldReturnNullWithoutFetchSpec(org.eclipse.jgit.lib.BranchConfigTest)')","[54807, 54979]"
"('Description.java', 'org.junit.runner.Description', 'methodAndClassNamePatternGroupOrDefault', '([\\s\\S]*)\\((.*)\\)', 'dropSingleStashedCommit(org.eclipse.jgit.api.StashDropCommandTest)')","[124331, 124500]"
"('Description.java', 'org.junit.runner.Description', 'methodAndClassNamePatternGroupOrDefault', '([\\s\\S]*)\\((.*)\\)', 'testMethodsOkOnMainThread(org.eclipse.jgit.lib.ThreadSafeProgressMonitorTest)')","[68331, 68395]"
"('Description.java', 'org.junit.runner.Description', 'methodAndClassNamePatternGroupOrDefault', '([\\s\\S]*)\\((.*)\\)', 'testRebaseShouldIgnoreMergeCommits(org.eclipse.jgit.api.RebaseCommandTest)')","[131096, 132568]"
"('URIish.java', 'org.eclipse.jgit.transport.URIish', '<init>', '^([a-z][a-z0-9+-]+)://(?:(?:([^/:@]+)(?::([^\\\\/]+))?@)?((?:[^\\\\/:]+)|(?:\\[[0-9a-f:]+\\]))(?::(\\d+))?((?:/~(?:[^\\\\/]+))?[\\\\/]))?(.+)?$', 'ssh://lusr\\example@[::1]:80/D:/x')",[210215]
"('Description.java', 'org.junit.runner.Description', 'methodAndClassNamePatternGroupOrDefault', '([\\s\\S]*)\\((.*)\\)', 'testStopOnConflictCommitAndContinue(org.eclipse.jgit.api.RebaseCommandTest)')","[132188, 133712]"
"('URIish.java', 'org.eclipse.jgit.transport.URIish', '<init>', '^(file):([\\\\/](?![\\\\/])((?:[A-Za-z]:)?[\\\\/]?(?:(?:[^\\\\/]+[\\\\/]+)*[^\\\\/]+[\\\\/]*)))$', 'https://l usr\\example.com@[::1]/D:/x')","[232663, 232847]"
"('Description.java', 'org.junit.runner.Description', 'methodAndClassNamePatternGroupOrDefault', '([\\s\\S]*)\\((.*)\\)', 'org.eclipse.jgit.lib.BranchConfigTest')","[54723, 55090]"
"('Description.java', 'org.junit.runner.Description', 'methodAndClassNamePatternGroupOrDefault', '([\\s\\S]*)\\((.*)\\)', 'testFull_FromByteArray(org.eclipse.jgit.lib.AbbreviatedObjectIdTest)')","[55378, 55915]"
"('Description.java', 'org.junit.runner.Description', 'methodAndClassNamePatternGroupOrDefault', '([\\s\\S]*)\\((.*)\\)', 'testWriteEmptyPack2(org.eclipse.jgit.internal.storage.file.PackWriterTest)')","[117635, 118079]"
"('Description.java', 'org.junit.runner.Description', 'methodAndClassNamePatternGroupOrDefault', '([\\s\\S]*)\\((.*)\\)', 'testUnannotatedTagging(org.eclipse.jgit.api.TagCommandTest)')","[157700, 158008]"
"('Description.java', 'org.junit.runner.Description', 'methodAndClassNamePatternGroupOrDefault', '([\\s\\S]*)\\((.*)\\)', 'org.eclipse.jgit.diff.RawTextIgnoreAllWhitespaceTest')","[9727, 9836]"
"('Description.java', 'org.junit.runner.Description', 'methodAndClassNamePatternGroupOrDefault', '([\\s\\S]*)\\((.*)\\)', 'testCommit(org.eclipse.jgit.merge.MergeMessageFormatterTest)')","[16329, 16658]"
"('Description.java', 'org.junit.runner.Description', 'methodAndClassNamePatternGroupOrDefault', '([\\s\\S]*)\\((.*)\\)', 'test000_sort_04(org.eclipse.jgit.lib.T0002_TreeTest)')","[58654, 58958]"
"('Description.java', 'org.junit.runner.Description', 'methodAndClassNamePatternGroupOrDefault', '([\\s\\S]*)\\((.*)\\)', 'testParse_ShortLineOnlyNoLF(org.eclipse.jgit.revwalk.RevCommitParseTest)')","[182425, 182789]"
"('Description.java', 'org.junit.runner.Description', 'methodAndClassNamePatternGroupOrDefault', '([\\s\\S]*)\\((.*)\\)', 'testRebaseInteractiveFixupFirstCommitShouldFail(org.eclipse.jgit.api.RebaseCommandTest)')","[131936, 133448]"
"('URIish.java', 'org.eclipse.jgit.transport.URIish', '<init>', '^(?:([^/:@]+)(?::([^\\\\/]+))?@)?((?:[^\\\\/:]+)|(?:\\[[0-9a-f:]+\\])):((?:(?:/~(?:[^\\\\/]+))[\\\\/])?(?:(?:[^\\\\/]+[\\\\/]+)*[^\\\\/]+[\\\\/]*))$', '/another/dir')","[254912, 255612, 257248]"
"('Description.java', 'org.junit.runner.Description', 'methodAndClassNamePatternGroupOrDefault', '([\\s\\S]*)\\((.*)\\)', 'testUpdateNonFastForwardForced(org.eclipse.jgit.transport.PushProcessTest)')","[203417, 203967]"
"('Description.java', 'org.junit.runner.Description', 'methodAndClassNamePatternGroupOrDefault', '([\\s\\S]*)\\((.*)\\)', 'testInsertWholeObject_Length12(org.eclipse.jgit.internal.storage.pack.DeltaIndexTest)')","[109076, 109362]"
"('Description.java', 'org.junit.runner.Description', 'methodAndClassNamePatternGroupOrDefault', '([\\s\\S]*)\\((.*)\\)', 'testSetDestination_SourceNull(org.eclipse.jgit.transport.RefSpecTest)')","[187095, 187841]"
"('URIish.java', 'org.eclipse.jgit.transport.URIish', '<init>', '^([a-z][a-z0-9+-]+)://(?:(?:([^/:@]+)(?::([^\\\\/]+))?@)?((?:[^\\\\/:]+)|(?:\\[[0-9a-f:]+\\]))(?::(\\d+))?((?:/~(?:[^\\\\/]+))?[\\\\/]))?(.+)?$', 'ssh://lusr\\example@1.2.3.4:1234//abc')",[209617]
"('Description.java', 'org.junit.runner.Description', 'methodAndClassNamePatternGroupOrDefault', '([\\s\\S]*)\\((.*)\\)', 'testNewNamespaceConflictWithLoosePrefixNameExists(org.eclipse.jgit.internal.storage.file.RefUpdateTest)')","[120348, 121204]"
"('Description.java', 'org.junit.runner.Description', 'methodAndClassNamePatternGroupOrDefault', '([\\s\\S]*)\\((.*)\\)', 'testAutoCRLFInput(org.eclipse.jgit.lib.IndexDiffTest)')","[68853, 69199]"
"('Description.java', 'org.junit.runner.Description', 'methodAndClassNamePatternGroupOrDefault', '([\\s\\S]*)\\((.*)\\)', 'testDirectoryFileConflicts_2(org.eclipse.jgit.lib.DirCacheCheckoutTest)')","[61356, 62351]"
"('Description.java', 'org.junit.runner.Description', 'methodAndClassNamePatternGroupOrDefault', '([\\s\\S]*)\\((.*)\\)', 'testWildcardInMiddleOfDestionation(org.eclipse.jgit.transport.RefSpecTest)')","[186486, 187203]"
"('Description.java', 'org.junit.runner.Description', 'methodAndClassNamePatternGroupOrDefault', '([\\s\\S]*)\\((.*)\\)', 'testOnlyOption_f1_2_f2_14_a(org.eclipse.jgit.api.CommitOnlyTest)')","[135382, 137449]"
"('Description.java', 'org.junit.runner.Description', 'methodAndClassNamePatternGroupOrDefault', '([\\s\\S]*)\\((.*)\\)', 'testDrawTextAlignment(org.eclipse.jgit.revplot.AbstractPlotRendererTest)')","[170007, 170065]"
"('Description.java', 'org.junit.runner.Description', 'methodAndClassNamePatternGroupOrDefault', '([\\s\\S]*)\\((.*)\\)', 'testAddToFrontOfList(org.eclipse.jgit.util.RefListTest)')","[20033, 20528]"
"('URIish.java', 'org.eclipse.jgit.transport.URIish', '<init>', '^([a-z][a-z0-9+-]+)://(?:(?:([^/:@]+)(?::([^\\\\/]+))?@)?((?:[^\\\\/:]+)|(?:\\[[0-9a-f:]+\\]))(?::(\\d+))?((?:/~(?:[^\\\\/]+))?[\\\\/]))?(.+)?$', 'ssh://l usr\\example.com:wtf@[::1]:80//abc')",[194237]
"('Description.java', 'org.junit.runner.Description', 'methodAndClassNamePatternGroupOrDefault', '([\\s\\S]*)\\((.*)\\)', 'testReplaceMaxValue(org.eclipse.jgit.transport.LongMapTest)')","[183679, 183853]"
"('URIish.java', 'org.eclipse.jgit.transport.URIish', '<init>', '^([a-z][a-z0-9+-]+)://(?:(?:([^/:@]+)(?::([^\\\\/]+))?@)?((?:[^\\\\/:]+)|(?:\\[[0-9a-f:]+\\]))(?::(\\d+))?((?:/~(?:[^\\\\/]+))?[\\\\/]))?(.+)?$', 'ssh+git://lusr\\example:wtf@example.com:1234/D:\\x')",[198615]
"('Description.java', 'org.junit.runner.Description', 'methodAndClassNamePatternGroupOrDefault', '([\\s\\S]*)\\((.*)\\)', 'renameBranchMultipleConfigValues(org.eclipse.jgit.api.RenameBranchCommandTest)')","[158421, 158508]"
"('URIish.java', 'org.eclipse.jgit.transport.URIish', '<init>', '^(file):([\\\\/](?![\\\\/])((?:[A-Za-z]:)?[\\\\/]?(?:(?:[^\\\\/]+[\\\\/]+)*[^\\\\/]+[\\\\/]*)))$', 'ssh+git://1.2.3.4//')","[237723, 237907, 238827, 239011, 239931, 240115]"
"('Description.java', 'org.junit.runner.Description', 'methodAndClassNamePatternGroupOrDefault', '([\\s\\S]*)\\((.*)\\)', 'testStandardFormat_NoHeader(org.eclipse.jgit.internal.storage.file.UnpackedObjectTest)')","[121622, 121941]"
"('Description.java', 'org.junit.runner.Description', 'methodAndClassNamePatternGroupOrDefault', '([\\s\\S]*)\\((.*)\\)', 'testRebaseWithUntrackedFile(org.eclipse.jgit.api.RebaseCommandTest)')","[131642, 133140]"
"('Description.java', 'org.junit.runner.Description', 'methodAndClassNamePatternGroupOrDefault', '([\\s\\S]*)\\((.*)\\)', 'testALL_IdentityClone(org.eclipse.jgit.treewalk.filter.TreeFilterTest)')","[265884, 266033]"
"('Description.java', 'org.junit.runner.Description', 'methodAndClassNamePatternGroupOrDefault', '([\\s\\S]*)\\((.*)\\)', 'testEmpty_EmptyTree(org.eclipse.jgit.revwalk.RevWalkPathFilter1Test)')","[175287, 175561]"
"('Description.java', 'org.junit.runner.Description', 'methodAndClassNamePatternGroupOrDefault', '([\\s\\S]*)\\((.*)\\)', 'testAddRejectsBadIndexes(org.eclipse.jgit.util.BlockListTest)')","[27617, 27877]"
"('URIish.java', 'org.eclipse.jgit.transport.URIish', '<init>', '^([a-z][a-z0-9+-]+)://(?:(?:([^/:@]+)(?::([^\\\\/]+))?@)?((?:[^\\\\/:]+)|(?:\\[[0-9a-f:]+\\]))(?::(\\d+))?((?:/~(?:[^\\\\/]+))?[\\\\/]))?(.+)?$', 'ssh+git://me:wtf@1.2.3.4:1234/D:/x')",[196729]
"('PathMatcher.java', 'org.eclipse.jgit.ignore.internal.PathMatcher', 'iterate', 'a.', 'abc')","[84382, 84411, 84440, 84469]"
"('URIish.java', 'org.eclipse.jgit.transport.URIish', '<init>', '^([a-z][a-z0-9+-]+)://(?:(?:([^/:@]+)(?::([^\\\\/]+))?@)?((?:[^\\\\/:]+)|(?:\\[[0-9a-f:]+\\]))(?::(\\d+))?((?:/~(?:[^\\\\/]+))?[\\\\/]))?(.+)?$', 'file:///tmp/jgit_test_7469688953466028795_tmp/tmp_5564136039387254100/.git/')",[14896]
"('URIish.java', 'org.eclipse.jgit.transport.URIish', '<init>', '^(file):([\\\\/](?![\\\\/])((?:[A-Za-z]:)?[\\\\/]?(?:(?:[^\\\\/]+[\\\\/]+)*[^\\\\/]+[\\\\/]*)))$', 'ssh://lusr\\example:wtf@example.com:80/D:\\x')",[194674]
"('URIish.java', 'org.eclipse.jgit.transport.URIish', '<init>', '^(file):([\\\\/](?![\\\\/])((?:[A-Za-z]:)?[\\\\/]?(?:(?:[^\\\\/]+[\\\\/]+)*[^\\\\/]+[\\\\/]*)))$', 'https://lusr\\example@1.2.3.4/D:\\x')","[233445, 233629]"
"('Description.java', 'org.junit.runner.Description', 'methodAndClassNamePatternGroupOrDefault', '([\\s\\S]*)\\((.*)\\)', 'testConstructor(org.eclipse.jgit.lib.SymbolicRefTest)')","[70997, 71063]"
"('Description.java', 'org.junit.runner.Description', 'methodAndClassNamePatternGroupOrDefault', '([\\s\\S]*)\\((.*)\\)', 'testLineDelimiter2(org.eclipse.jgit.diff.RawTextTest)')","[10747, 10979]"
"('Description.java', 'org.junit.runner.Description', 'methodAndClassNamePatternGroupOrDefault', '([\\s\\S]*)\\((.*)\\)', 'testXDigitGroupCase5[OldRule? false](org.eclipse.jgit.ignore.IgnoreRuleSpecialCasesTest)')","[87676, 94781]"
"('URIish.java', 'org.eclipse.jgit.transport.URIish', '<init>', '^(file):([\\\\/](?![\\\\/])((?:[A-Za-z]:)?[\\\\/]?(?:(?:[^\\\\/]+[\\\\/]+)*[^\\\\/]+[\\\\/]*)))$', 'file:///tmp/jgit_test_8392325917977493495_tmp/tmp_4924969987571419466')","[166191, 166248]"
"('Description.java', 'org.junit.runner.Description', 'methodAndClassNamePatternGroupOrDefault', '([\\s\\S]*)\\((.*)\\)', 'testCreateSymlink(org.eclipse.jgit.util.FileUtilTest)')","[23268, 23605]"
"('Description.java', 'org.junit.runner.Description', 'methodAndClassNamePatternGroupOrDefault', '([\\s\\S]*)\\((.*)\\)', 'testReadACK_ERR(org.eclipse.jgit.transport.PacketLineInTest)')","[184605, 185149]"
"('Description.java', 'org.junit.runner.Description', 'methodAndClassNamePatternGroupOrDefault', '([\\s\\S]*)\\((.*)\\)', 'testVerySimpleGroupRangeCase5(org.eclipse.jgit.fnmatch.FileNameMatcherTest)')","[43099, 46438]"
"('Description.java', 'org.junit.runner.Description', 'methodAndClassNamePatternGroupOrDefault', '([\\s\\S]*)\\((.*)\\)', 'testOnlyOption_f1_10_c(org.eclipse.jgit.api.CommitOnlyTest)')","[135739, 137823]"
"('URIish.java', 'org.eclipse.jgit.transport.URIish', '<init>', '^([a-z][a-z0-9+-]+)://(?:(?:([^/:@]+)(?::([^\\\\/]+))?@)?((?:[^\\\\/:]+)|(?:\\[[0-9a-f:]+\\]))(?::(\\d+))?((?:/~(?:[^\\\\/]+))?[\\\\/]))?(.+)?$', 'https://l usr\\example.com:wtf@1.2.3.4:80//abc')",[205385]
"('URIish.java', 'org.eclipse.jgit.transport.URIish', '<init>', '^(file):([\\\\/](?![\\\\/])((?:[A-Za-z]:)?[\\\\/]?(?:(?:[^\\\\/]+[\\\\/]+)*[^\\\\/]+[\\\\/]*)))$', 'ssh://me@1.2.3.4/D:\\x')","[221301, 221485]"
"('URIish.java', 'org.eclipse.jgit.transport.URIish', '<init>', '^([a-z][a-z0-9+-]+)://(?:(?:([^/:@]+)(?::([^\\\\/]+))?@)?((?:[^\\\\/:]+)|(?:\\[[0-9a-f:]+\\]))(?::(\\d+))?((?:/~(?:[^\\\\/]+))?[\\\\/]))?(.+)?$', 'http://me@1.2.3.4:1234//abc')",[214033]
"('URIish.java', 'org.eclipse.jgit.transport.URIish', '<init>', '^([a-z][a-z0-9+-]+)://(?:(?:([^/:@]+)(?::([^\\\\/]+))?@)?((?:[^\\\\/:]+)|(?:\\[[0-9a-f:]+\\]))(?::(\\d+))?((?:/~(?:[^\\\\/]+))?[\\\\/]))?(.+)?$', 'ssh://l usr\\example.com@1.2.3.4:80//')",[208651]
"('Description.java', 'org.junit.runner.Description', 'methodAndClassNamePatternGroupOrDefault', '([\\s\\S]*)\\((.*)\\)', 'org.eclipse.jgit.api.GitConstructionTest')","[162714, 163594]"
"('Description.java', 'org.junit.runner.Description', 'methodAndClassNamePatternGroupOrDefault', '([\\s\\S]*)\\((.*)\\)', 'testEdit_ReplaceCommonDelete(org.eclipse.jgit.diff.HistogramDiffTest)')","[6765, 7366]"
"('URIish.java', 'org.eclipse.jgit.transport.URIish', '<init>', '^(file):([\\\\/](?![\\\\/])((?:[A-Za-z]:)?[\\\\/]?(?:(?:[^\\\\/]+[\\\\/]+)*[^\\\\/]+[\\\\/]*)))$', 'ssh+git://l usr\\example.com@[::1]:80//')",[212308]
"('FastIgnoreRule.java', 'org.eclipse.jgit.ignore.FastIgnoreRule', 'isMatch', '[tv]est\\.sta[a-d]', 'test.staa')","[104882, 106112]"
"('Description.java', 'org.junit.runner.Description', 'methodAndClassNamePatternGroupOrDefault', '([\\s\\S]*)\\((.*)\\)', 'testAbortShouldAlsoAbortNonInteractiveRebaseWithRebaseApplyDir(org.eclipse.jgit.api.RebaseCommandTest)')","[132524, 134064]"
"('URIish.java', 'org.eclipse.jgit.transport.URIish', '<init>', '^(file):([\\\\/](?![\\\\/])((?:[A-Za-z]:)?[\\\\/]?(?:(?:[^\\\\/]+[\\\\/]+)*[^\\\\/]+[\\\\/]*)))$', 'ssh://me:wtf@[::1]:1234//abc')",[192824]
"('URIish.java', 'org.eclipse.jgit.transport.URIish', '<init>', '^(?:([^/:@]+)(?::([^\\\\/]+))?@)?((?:[^\\\\/:]+)|(?:\\[[0-9a-f:]+\\])):((?:(?:/~(?:[^\\\\/]+))[\\\\/])?(?:(?:[^\\\\/]+[\\\\/]+)*[^\\\\/]+[\\\\/]*))$', '\\\\some\\place')","[191294, 191409]"
"('URIish.java', 'org.eclipse.jgit.transport.URIish', '<init>', '^(file):([\\\\/](?![\\\\/])((?:[A-Za-z]:)?[\\\\/]?(?:(?:[^\\\\/]+[\\\\/]+)*[^\\\\/]+[\\\\/]*)))$', 'ssh+git://lusr\\example@example.com:1234/D:\\x')",[212630]
"('Description.java', 'org.junit.runner.Description', 'methodAndClassNamePatternGroupOrDefault', '([\\s\\S]*)\\((.*)\\)', 'testParseRename100_OldStyle(org.eclipse.jgit.patch.FileHeaderTest)')","[324, 789]"
"('Description.java', 'org.junit.runner.Description', 'methodAndClassNamePatternGroupOrDefault', '([\\s\\S]*)\\((.*)\\)', 'testRemoveFromEnd(org.eclipse.jgit.util.BlockListTest)')","[27512, 27767]"
"('Description.java', 'org.junit.runner.Description', 'methodAndClassNamePatternGroupOrDefault', '([\\s\\S]*)\\((.*)\\)', 'testJGitText(org.eclipse.jgit.nls.RootLocaleTest)')","[41125, 41210]"
"('Description.java', 'org.junit.runner.Description', 'methodAndClassNamePatternGroupOrDefault', '([\\s\\S]*)\\((.*)\\)', 'testOnlyOption_f1_2_f2_14_d(org.eclipse.jgit.api.CommitOnlyTest)')","[135445, 137515]"
"('URIish.java', 'org.eclipse.jgit.transport.URIish', '<init>', '^([a-z][a-z0-9+-]+)://(?:(?:([^/:@]+)(?::([^\\\\/]+))?@)?((?:[^\\\\/:]+)|(?:\\[[0-9a-f:]+\\]))(?::(\\d+))?((?:/~(?:[^\\\\/]+))?[\\\\/]))?(.+)?$', 'ssh+git://me@[::1]:1234//')",[211043]
"('Description.java', 'org.junit.runner.Description', 'methodAndClassNamePatternGroupOrDefault', '([\\s\\S]*)\\((.*)\\)', 'testMerge_WithPrefix(org.eclipse.jgit.util.RefMapTest)')","[21144, 21621]"
"('Description.java', 'org.junit.runner.Description', 'methodAndClassNamePatternGroupOrDefault', '([\\s\\S]*)\\((.*)\\)', 'testQuote_User(org.eclipse.jgit.util.QuotedStringBourneUserPathStyleTest)')","[28997, 29259]"
"('URIish.java', 'org.eclipse.jgit.transport.URIish', '<init>', '^([a-z][a-z0-9+-]+)://(?:(?:([^/:@]+)(?::([^\\\\/]+))?@)?((?:[^\\\\/:]+)|(?:\\[[0-9a-f:]+\\]))(?::(\\d+))?((?:/~(?:[^\\\\/]+))?[\\\\/]))?(.+)?$', 'https://l usr\\example.com@1.2.3.4:1234/D:\\x')",[219116]
"('URIish.java', 'org.eclipse.jgit.transport.URIish', '<init>', '^([a-z][a-z0-9+-]+)://(?:(?:([^/:@]+)(?::([^\\\\/]+))?@)?((?:[^\\\\/:]+)|(?:\\[[0-9a-f:]+\\]))(?::(\\d+))?((?:/~(?:[^\\\\/]+))?[\\\\/]))?(.+)?$', 'ssh+git://lusr\\example:wtf@example.com:80/D:\\x')",[198799]
"('Description.java', 'org.junit.runner.Description', 'methodAndClassNamePatternGroupOrDefault', '([\\s\\S]*)\\((.*)\\)', 'testOnlyOption_f1_3_a(org.eclipse.jgit.api.CommitOnlyTest)')","[134647, 136679]"
"('Description.java', 'org.junit.runner.Description', 'methodAndClassNamePatternGroupOrDefault', '([\\s\\S]*)\\((.*)\\)', 'testParseAbbrIndexLine_NoMode(org.eclipse.jgit.patch.FileHeaderTest)')","[702, 1479]"
"('Description.java', 'org.junit.runner.Description', 'methodAndClassNamePatternGroupOrDefault', '([\\s\\S]*)\\((.*)\\)', 'testDegenerate_DeleteEnd(org.eclipse.jgit.diff.MyersDiffTest)')","[8478, 9026]"
"('URIish.java', 'org.eclipse.jgit.transport.URIish', '<init>', '^(file):([\\\\/](?![\\\\/])((?:[A-Za-z]:)?[\\\\/]?(?:(?:[^\\\\/]+[\\\\/]+)*[^\\\\/]+[\\\\/]*)))$', 'git://example.com/~some/p ath')","[252354, 252400]"
"('URIish.java', 'org.eclipse.jgit.transport.URIish', '<init>', '^(file):([\\\\/](?![\\\\/])((?:[A-Za-z]:)?[\\\\/]?(?:(?:[^\\\\/]+[\\\\/]+)*[^\\\\/]+[\\\\/]*)))$', 'https://l usr\\example.com:wtf@1.2.3.4:80//')",[205316]
"('Description.java', 'org.junit.runner.Description', 'methodAndClassNamePatternGroupOrDefault', '([\\s\\S]*)\\((.*)\\)', 'testEscapedBracket4[OldRule? false](org.eclipse.jgit.ignore.IgnoreRuleSpecialCasesTest)')","[88228, 95333]"
"('URIish.java', 'org.eclipse.jgit.transport.URIish', '<init>', '^(file):([\\\\/](?![\\\\/])((?:[A-Za-z]:)?[\\\\/]?(?:(?:[^\\\\/]+[\\\\/]+)*[^\\\\/]+[\\\\/]*)))$', 'ssh://me@example.com:80//')",[207156]
"('Description.java', 'org.junit.runner.Description', 'methodAndClassNamePatternGroupOrDefault', '([\\s\\S]*)\\((.*)\\)', 'testFormatMonths(org.eclipse.jgit.util.RelativeDateFormatterTest)')","[31211, 31401]"
"('URIish.java', 'org.eclipse.jgit.transport.URIish', '<init>', '^([a-z][a-z0-9+-]+)://(?:(?:([^/:@]+)(?::([^\\\\/]+))?@)?((?:[^\\\\/:]+)|(?:\\[[0-9a-f:]+\\]))(?::(\\d+))?((?:/~(?:[^\\\\/]+))?[\\\\/]))?(.+)?$', 'https://me:wtf@[::1]:1234//abc')",[204465]
"('URIish.java', 'org.eclipse.jgit.transport.URIish', '<init>', '^([a-z][a-z0-9+-]+)://(?:(?:([^/:@]+)(?::([^\\\\/]+))?@)?((?:[^\\\\/:]+)|(?:\\[[0-9a-f:]+\\]))(?::(\\d+))?((?:/~(?:[^\\\\/]+))?[\\\\/]))?(.+)?$', 'ssh://l usr\\example.com:wtf@example.com:1234//abc')",[193215]
"('Description.java', 'org.junit.runner.Description', 'methodAndClassNamePatternGroupOrDefault', '([\\s\\S]*)\\((.*)\\)', 'test024_createCommitNonAscii(org.eclipse.jgit.internal.storage.file.T0003_BasicTest)')","[116714, 117257]"
"('URIish.java', 'org.eclipse.jgit.transport.URIish', '<init>', '^(file):([\\\\/](?![\\\\/])((?:[A-Za-z]:)?[\\\\/]?(?:(?:[^\\\\/]+[\\\\/]+)*[^\\\\/]+[\\\\/]*)))$', 'ssh+git://lusr\\example:wtf@[::1]:1234/D:\\x')",[199328]
"('URIish.java', 'org.eclipse.jgit.transport.URIish', '<init>', '^([a-z][a-z0-9+-]+)://(?:(?:([^/:@]+)(?::([^\\\\/]+))?@)?((?:[^\\\\/:]+)|(?:\\[[0-9a-f:]+\\]))(?::(\\d+))?((?:/~(?:[^\\\\/]+))?[\\\\/]))?(.+)?$', 'file:///tmp/jgit_test_5499424142043640690_tmp/tmp_4662388987398792546/.git/')",[58173]
"('Description.java', 'org.junit.runner.Description', 'methodAndClassNamePatternGroupOrDefault', '([\\s\\S]*)\\((.*)\\)', 'testRepeatedNegationInDifferentFiles2(org.eclipse.jgit.ignore.IgnoreNodeTest)')","[108124, 108422]"
"('URIish.java', 'org.eclipse.jgit.transport.URIish', '<init>', '^(file):([\\\\/](?![\\\\/])((?:[A-Za-z]:)?[\\\\/]?(?:(?:[^\\\\/]+[\\\\/]+)*[^\\\\/]+[\\\\/]*)))$', 'ssh://me@example.com:80//abc')",[207202]
"('Description.java', 'org.junit.runner.Description', 'methodAndClassNamePatternGroupOrDefault', '([\\s\\S]*)\\((.*)\\)', 'testDigitGroupCase5[OldRule? true](org.eclipse.jgit.ignore.IgnoreRuleSpecialCasesTest)')","[90043, 97127]"
"('Description.java', 'org.junit.runner.Description', 'methodAndClassNamePatternGroupOrDefault', '([\\s\\S]*)\\((.*)\\)', 'testWritePack1NoObjectReuse(org.eclipse.jgit.internal.storage.file.PackWriterTest)')","[117824, 118277]"
"('URIish.java', 'org.eclipse.jgit.transport.URIish', '<init>', '^([a-z][a-z0-9+-]+)://(?:(?:([^/:@]+)(?::([^\\\\/]+))?@)?((?:[^\\\\/:]+)|(?:\\[[0-9a-f:]+\\]))(?::(\\d+))?((?:/~(?:[^\\\\/]+))?[\\\\/]))?(.+)?$', 'git+ssh://example.com/some/p ath')","[250580, 250626]"
"('Description.java', 'org.junit.runner.Description', 'methodAndClassNamePatternGroupOrDefault', '([\\s\\S]*)\\((.*)\\)', 'testGrowPath(org.eclipse.jgit.treewalk.AbstractTreeIteratorTest)')","[266897, 267051]"
"('URIish.java', 'org.eclipse.jgit.transport.URIish', '<init>', '^([a-z][a-z0-9+-]+)://(?:(?:([^/:@]+)(?::([^\\\\/]+))?@)?((?:[^\\\\/:]+)|(?:\\[[0-9a-f:]+\\]))(?::(\\d+))?((?:/~(?:[^\\\\/]+))?[\\\\/]))?(.+)?$', 'ssh://l usr\\example.com@[::1]/D:/x')","[222750, 222934]"
"('ChangeIdUtil.java', 'org.eclipse.jgit.util.ChangeIdUtil', 'insertId', '^(Bug|Issue)[a-zA-Z0-9-]*:.*$', 'Bug: 33')","[33400, 35299, 37944, 38174]"
"('Description.java', 'org.junit.runner.Description', 'methodAndClassNamePatternGroupOrDefault', '([\\s\\S]*)\\((.*)\\)', 'testVerySimpleGroupRangeCase0(org.eclipse.jgit.fnmatch.FileNameMatcherTest)')","[42994, 46328]"
"('Description.java', 'org.junit.runner.Description', 'methodAndClassNamePatternGroupOrDefault', '([\\s\\S]*)\\((.*)\\)', 'testInvalidCommitInvalidParent3(org.eclipse.jgit.lib.ObjectCheckerTest)')","[49235, 51758]"
"('Description.java', 'org.junit.runner.Description', 'methodAndClassNamePatternGroupOrDefault', '([\\s\\S]*)\\((.*)\\)', 'testAssumeUnchanged(org.eclipse.jgit.api.AddCommandTest)')","[164558, 164986]"
"('Description.java', 'org.junit.runner.Description', 'methodAndClassNamePatternGroupOrDefault', '([\\s\\S]*)\\((.*)\\)', 'testUpdateWorkingDirectoryFromIndex(org.eclipse.jgit.api.PathCheckoutCommandTest)')","[123965, 124251]"
"('Description.java', 'org.junit.runner.Description', 'methodAndClassNamePatternGroupOrDefault', '([\\s\\S]*)\\((.*)\\)', 'testVerySimpleStarCase0[OldRule? true](org.eclipse.jgit.ignore.IgnoreRuleSpecialCasesTest)')","[91055, 98139]"
"('Description.java', 'org.junit.runner.Description', 'methodAndClassNamePatternGroupOrDefault', '([\\s\\S]*)\\((.*)\\)', 'testTwoEntries_Seek2IsEOF(org.eclipse.jgit.treewalk.CanonicalTreeParserTest)')","[261420, 261743]"
"('FastIgnoreRule.java', 'org.eclipse.jgit.ignore.FastIgnoreRule', 'isMatch', 'a.*b', 'a')","[100535, 101211]"
"('URIish.java', 'org.eclipse.jgit.transport.URIish', '<init>', '^([a-z][a-z0-9+-]+)://(?:(?:([^/:@]+)(?::([^\\\\/]+))?@)?((?:[^\\\\/:]+)|(?:\\[[0-9a-f:]+\\]))(?::(\\d+))?((?:/~(?:[^\\\\/]+))?[\\\\/]))?(.+)?$', 'https://l usr\\example.com:wtf@1.2.3.4:1234//')",[205155]
"('URIish.java', 'org.eclipse.jgit.transport.URIish', '<init>', '^([a-z][a-z0-9+-]+)://(?:(?:([^/:@]+)(?::([^\\\\/]+))?@)?((?:[^\\\\/:]+)|(?:\\[[0-9a-f:]+\\]))(?::(\\d+))?((?:/~(?:[^\\\\/]+))?[\\\\/]))?(.+)?$', 'http://[::1]/D:\\x')","[241564, 241748, 242668, 242852, 243772, 243956]"
"('Description.java', 'org.junit.runner.Description', 'methodAndClassNamePatternGroupOrDefault', '([\\s\\S]*)\\((.*)\\)', 'testShouldAutomagicallyDetectGitDirectory(org.eclipse.jgit.internal.storage.file.FileRepositoryBuilderTest)')","[118681, 118835]"
"('FastIgnoreRule.java', 'org.eclipse.jgit.ignore.FastIgnoreRule', 'isMatch', '[[\\p{javaDigit}\\p{javaLetter}_]]', ' ')",[102409]
"('Description.java', 'org.junit.runner.Description', 'methodAndClassNamePatternGroupOrDefault', '([\\s\\S]*)\\((.*)\\)', 'test008_FailOnWrongVersion(org.eclipse.jgit.internal.storage.file.T0003_BasicTest)')","[116735, 117279]"
"('FastIgnoreRule.java', 'org.eclipse.jgit.ignore.FastIgnoreRule', 'isMatch', 'ne.', 'new')","[105273, 105329, 105383, 105437, 105491, 106503, 106559, 106613, 106667, 106721]"
"('URIish.java', 'org.eclipse.jgit.transport.URIish', '<init>', '^(?:([^/:@]+)(?::([^\\\\/]+))?@)?((?:[^\\\\/:]+)|(?:\\[[0-9a-f:]+\\])):((?:(?:/~(?:[^\\\\/]+))[\\\\/])?(?:(?:[^\\\\/]+[\\\\/]+)*[^\\\\/]+[\\\\/]*))$', '/tmp/jgit_test_1358523526465653191_tmp/tmp_2395600565988697857')","[161580, 161715, 161963]"
"('FastIgnoreRule.java', 'org.eclipse.jgit.ignore.FastIgnoreRule', 'isMatch', '[\\p{Blank}]', '\n')",[101967]
"('Description.java', 'org.junit.runner.Description', 'methodAndClassNamePatternGroupOrDefault', '([\\s\\S]*)\\((.*)\\)', 'testWriteLine3(org.eclipse.jgit.diff.RawTextTest)')","[10831, 11153]"
"('URIish.java', 'org.eclipse.jgit.transport.URIish', '<init>', '^(file):([\\\\/](?![\\\\/])((?:[A-Za-z]:)?[\\\\/]?(?:(?:[^\\\\/]+[\\\\/]+)*[^\\\\/]+[\\\\/]*)))$', 'file:/tmp/jgit_test_3803194728110070212_tmp/tmp_784519170733952064/.git/')",[63541]
"('URIish.java', 'org.eclipse.jgit.transport.URIish', '<init>', '^(file):([\\\\/](?![\\\\/])((?:[A-Za-z]:)?[\\\\/]?(?:(?:[^\\\\/]+[\\\\/]+)*[^\\\\/]+[\\\\/]*)))$', 'https://me@1.2.3.4/D:\\x')","[231237, 231421]"
"('URIish.java', 'org.eclipse.jgit.transport.URIish', '<init>', '^(file):([\\\\/](?![\\\\/])((?:[A-Za-z]:)?[\\\\/]?(?:(?:[^\\\\/]+[\\\\/]+)*[^\\\\/]+[\\\\/]*)))$', 'ssh+git://lusr\\example@example.com:80//abc')",[212722]
"('Description.java', 'org.junit.runner.Description', 'methodAndClassNamePatternGroupOrDefault', '([\\s\\S]*)\\((.*)\\)', 'testUpdateRefForwardWithCheck2(org.eclipse.jgit.internal.storage.file.RefUpdateTest)')","[119970, 120808]"
"('Description.java', 'org.junit.runner.Description', 'methodAndClassNamePatternGroupOrDefault', '([\\s\\S]*)\\((.*)\\)', 'testBlankGroupCase4[OldRule? false](org.eclipse.jgit.ignore.IgnoreRuleSpecialCasesTest)')","[87469, 94574]"
"('Description.java', 'org.junit.runner.Description', 'methodAndClassNamePatternGroupOrDefault', '([\\s\\S]*)\\((.*)\\)', 'testInitWithOnlyExplicitGitDir(org.eclipse.jgit.api.InitCommandTest)')","[156714, 156910]"
"('Description.java', 'org.junit.runner.Description', 'methodAndClassNamePatternGroupOrDefault', '([\\s\\S]*)\\((.*)\\)', 'testEdit_CommonGrowsPrefixAndSuffix(org.eclipse.jgit.diff.MyersDiffTest)')","[8917, 9356]"
"('AttributesRule.java', 'org.eclipse.jgit.attributes.AttributesRule', 'isMatch', 'ne.', 'src')","[74662, 74716, 74770, 74824, 74905, 75806, 75860, 75914, 75968, 76049]"
"('FastIgnoreRule.java', 'org.eclipse.jgit.ignore.FastIgnoreRule', 'isMatch', '[[\\p{Print}\\p{javaDigit}\\p{javaLetter}]]', 'a')",[101471]
"('Description.java', 'org.junit.runner.Description', 'methodAndClassNamePatternGroupOrDefault', '([\\s\\S]*)\\((.*)\\)', 'testHEAD(org.eclipse.jgit.lib.RepositoryResolveTest)')","[71162, 71959]"
"('Description.java', 'org.junit.runner.Description', 'methodAndClassNamePatternGroupOrDefault', '([\\s\\S]*)\\((.*)\\)', 'org.eclipse.jgit.api.StatusCommandTest')","[157218, 157370]"
"('URIish.java', 'org.eclipse.jgit.transport.URIish', '<init>', '^(?:([^/:@]+)(?::([^\\\\/]+))?@)?([^\\\\/:]{2,}):([\\\\/](?:(?:[^\\\\/]+[\\\\/]+)*[^\\\\/]+[\\\\/]*))$', '/tmp/jgit_test_3041254964624474396_tmp/tmp_2406781432731361300')","[160860, 161000, 161149, 161390]"
"('Description.java', 'org.junit.runner.Description', 'methodAndClassNamePatternGroupOrDefault', '([\\s\\S]*)\\((.*)\\)', 'org.eclipse.jgit.transport.BundleWriterTest')","[185465, 186257]"
"('Description.java', 'org.junit.runner.Description', 'methodAndClassNamePatternGroupOrDefault', '([\\s\\S]*)\\((.*)\\)', 'testParse_explicit_bad_encoded2(org.eclipse.jgit.revwalk.RevCommitParseTest)')","[182446, 182811]"
"('URIish.java', 'org.eclipse.jgit.transport.URIish', '<init>', '^(file):([\\\\/](?![\\\\/])((?:[A-Za-z]:)?[\\\\/]?(?:(?:[^\\\\/]+[\\\\/]+)*[^\\\\/]+[\\\\/]*)))$', 'file:///tmp/jgit_test_9215790154376357519_tmp/tmp_4920629738042412768/.git/')",[13527]
"('Description.java', 'org.junit.runner.Description', 'methodAndClassNamePatternGroupOrDefault', '([\\s\\S]*)\\((.*)\\)', 'noStashedCommits(org.eclipse.jgit.api.StashApplyCommandTest)')","[142561, 143115]"
"('Description.java', 'org.junit.runner.Description', 'methodAndClassNamePatternGroupOrDefault', '([\\s\\S]*)\\((.*)\\)', 'testNoCacheObjectIdSubclass(org.eclipse.jgit.internal.storage.file.RefUpdateTest)')","[119676, 120500]"
"('Description.java', 'org.junit.runner.Description', 'methodAndClassNamePatternGroupOrDefault', '([\\s\\S]*)\\((.*)\\)', 'twoCommits(org.eclipse.jgit.revwalk.RevWalkUtilsReachableTest)')","[177086, 177194]"
"('Description.java', 'org.junit.runner.Description', 'methodAndClassNamePatternGroupOrDefault', '([\\s\\S]*)\\((.*)\\)', 'testDequote_NamedEscapes(org.eclipse.jgit.util.QuotedStringBourneStyleTest)')","[38457, 38674]"
"('URIish.java', 'org.eclipse.jgit.transport.URIish', '<init>', '^(file):([\\\\/](?![\\\\/])((?:[A-Za-z]:)?[\\\\/]?(?:(?:[^\\\\/]+[\\\\/]+)*[^\\\\/]+[\\\\/]*)))$', 'http://lusr\\example@example.com//')","[229627, 229811]"
"('Description.java', 'org.junit.runner.Description', 'methodAndClassNamePatternGroupOrDefault', '([\\s\\S]*)\\((.*)\\)', 'treeIdWithGitmodules(org.eclipse.jgit.submodule.SubmoduleWalkTest)')","[17112, 17304]"
"('Description.java', 'org.junit.runner.Description', 'methodAndClassNamePatternGroupOrDefault', '([\\s\\S]*)\\((.*)\\)', 'testWrite_CH_ERROR(org.eclipse.jgit.transport.SideBandOutputStreamTest)')","[251787, 252019]"
"('URIish.java', 'org.eclipse.jgit.transport.URIish', '<init>', '^([a-z][a-z0-9+-]+)://(?:(?:([^/:@]+)(?::([^\\\\/]+))?@)?((?:[^\\\\/:]+)|(?:\\[[0-9a-f:]+\\]))(?::(\\d+))?((?:/~(?:[^\\\\/]+))?[\\\\/]))?(.+)?$', 'ssh://lusr\\example@1.2.3.4:80//abc')",[209801]
"('Description.java', 'org.junit.runner.Description', 'methodAndClassNamePatternGroupOrDefault', '([\\s\\S]*)\\((.*)\\)', 'testFileInFolderUntracked(org.eclipse.jgit.treewalk.filter.IndexDiffFilterTest)')","[264233, 265035]"
"('Description.java', 'org.junit.runner.Description', 'methodAndClassNamePatternGroupOrDefault', '([\\s\\S]*)\\((.*)\\)', 'testFillTo1(org.eclipse.jgit.util.IntListTest)')","[28150, 28387]"
"('URIish.java', 'org.eclipse.jgit.transport.URIish', '<init>', '^(file):([\\\\/](?![\\\\/])((?:[A-Za-z]:)?[\\\\/]?(?:(?:[^\\\\/]+[\\\\/]+)*[^\\\\/]+[\\\\/]*)))$', 'file:///tmp/jgit_test_203586385014137691_tmp/tmp_1399021271848822854/.git/')",[63680]
"('URIish.java', 'org.eclipse.jgit.transport.URIish', '<init>', '^([a-z][a-z0-9+-]+)://(?:(?:([^/:@]+)(?::([^\\\\/]+))?@)?((?:[^\\\\/:]+)|(?:\\[[0-9a-f:]+\\]))(?::(\\d+))?((?:/~(?:[^\\\\/]+))?[\\\\/]))?(.+)?$', 'http://lusr\\example@1.2.3.4:80/D:/x')",[216471]
"('URIish.java', 'org.eclipse.jgit.transport.URIish', '<init>', '^(file):([\\\\/](?![\\\\/])((?:[A-Za-z]:)?[\\\\/]?(?:(?:[^\\\\/]+[\\\\/]+)*[^\\\\/]+[\\\\/]*)))$', 'ssh+git://l usr\\example.com@1.2.3.4:1234//abc')",[211802]
"('Description.java', 'org.junit.runner.Description', 'methodAndClassNamePatternGroupOrDefault', '([\\s\\S]*)\\((.*)\\)', 'testReadRightLog(org.eclipse.jgit.internal.storage.file.ReflogReaderTest)')","[118936, 119106]"
"('Description.java', 'org.junit.runner.Description', 'methodAndClassNamePatternGroupOrDefault', '([\\s\\S]*)\\((.*)\\)', 'testDiffModified(org.eclipse.jgit.api.DiffCommandTest)')","[166359, 166486]"
"('Description.java', 'org.junit.runner.Description', 'methodAndClassNamePatternGroupOrDefault', '([\\s\\S]*)\\((.*)\\)', 'testOnlyOption_f1_4_d(org.eclipse.jgit.api.CommitOnlyTest)')","[134815, 136855]"
"('Description.java', 'org.junit.runner.Description', 'methodAndClassNamePatternGroupOrDefault', '([\\s\\S]*)\\((.*)\\)', 'testXDigitGroupCase6[OldRule? true](org.eclipse.jgit.ignore.IgnoreRuleSpecialCasesTest)')","[91262, 98346]"
"('URIish.java', 'org.eclipse.jgit.transport.URIish', '<init>', '^(file):([\\\\/](?![\\\\/])((?:[A-Za-z]:)?[\\\\/]?(?:(?:[^\\\\/]+[\\\\/]+)*[^\\\\/]+[\\\\/]*)))$', 'http://user:secret@host.xy:80/some/path')","[251408, 251454]"
"('Description.java', 'org.junit.runner.Description', 'methodAndClassNamePatternGroupOrDefault', '([\\s\\S]*)\\((.*)\\)', 'testRevisionTag(org.eclipse.jgit.gitrepo.RepoCommandTest)')","[2531, 3296]"
"('Description.java', 'org.junit.runner.Description', 'methodAndClassNamePatternGroupOrDefault', '([\\s\\S]*)\\((.*)\\)', 'testPullFastForwardWithLocalCommitAndRebaseFlagSet(org.eclipse.jgit.api.PullCommandWithRebaseTest)')","[158694, 158804]"
"('URIish.java', 'org.eclipse.jgit.transport.URIish', '<init>', '^([a-z][a-z0-9+-]+)://(?:(?:([^/:@]+)(?::([^\\\\/]+))?@)?((?:[^\\\\/:]+)|(?:\\[[0-9a-f:]+\\]))(?::(\\d+))?((?:/~(?:[^\\\\/]+))?[\\\\/]))?(.+)?$', 'http://l usr\\example.com:wtf@1.2.3.4:80//')",[201237]
"('URIish.java', 'org.eclipse.jgit.transport.URIish', '<init>', '^([a-z][a-z0-9+-]+)://(?:(?:([^/:@]+)(?::([^\\\\/]+))?@)?((?:[^\\\\/:]+)|(?:\\[[0-9a-f:]+\\]))(?::(\\d+))?((?:/~(?:[^\\\\/]+))?[\\\\/]))?(.+)?$', 'ssh+git://l usr\\example.com@[::1]:1234//')",[212147]
"('ChangeIdUtil.java', 'org.eclipse.jgit.util.ChangeIdUtil', 'indexOfChangeId', '(^Change-Id: *I[a-f0-9]{40}$)', 'FIX: this thing')",[36699]
"('Description.java', 'org.junit.runner.Description', 'methodAndClassNamePatternGroupOrDefault', '([\\s\\S]*)\\((.*)\\)', 'testNonDelimtedEmail(org.eclipse.jgit.revwalk.FooterLineTest)')","[173633, 174042]"
"('Description.java', 'org.junit.runner.Description', 'methodAndClassNamePatternGroupOrDefault', '([\\s\\S]*)\\((.*)\\)', 'testStandardFormat_LargeObject_TruncatedZLibStream(org.eclipse.jgit.internal.storage.file.UnpackedObjectTest)')","[121601, 121919]"
"('URIish.java', 'org.eclipse.jgit.transport.URIish', '<init>', '^(file):([\\\\/](?![\\\\/])((?:[A-Za-z]:)?[\\\\/]?(?:(?:[^\\\\/]+[\\\\/]+)*[^\\\\/]+[\\\\/]*)))$', 'file:/tmp/jgit_test_203586385014137691_tmp/tmp_1399021271848822854/.git/')",[63644]
"('Description.java', 'org.junit.runner.Description', 'methodAndClassNamePatternGroupOrDefault', '([\\s\\S]*)\\((.*)\\)', 'testRules(org.eclipse.jgit.ignore.IgnoreNodeTest)')","[108061, 108356]"
"('Description.java', 'org.junit.runner.Description', 'methodAndClassNamePatternGroupOrDefault', '([\\s\\S]*)\\((.*)\\)', 'testPutNewEntry(org.eclipse.jgit.util.RefListTest)')","[20096, 20594]"
"('Description.java', 'org.junit.runner.Description', 'methodAndClassNamePatternGroupOrDefault', '([\\s\\S]*)\\((.*)\\)', 'testEqualsWithoutWhitespace(org.eclipse.jgit.diff.RawTextIgnoreTrailingWhitespaceTest)')","[9603, 9646]"
"('Description.java', 'org.junit.runner.Description', 'methodAndClassNamePatternGroupOrDefault', '([\\s\\S]*)\\((.*)\\)', 'testFileInFolderCommittedModifiedCommittedComparedWithInitialCommit(org.eclipse.jgit.treewalk.filter.IndexDiffFilterTest)')","[264296, 265101]"
"('Description.java', 'org.junit.runner.Description', 'methodAndClassNamePatternGroupOrDefault', '([\\s\\S]*)\\((.*)\\)', 'testEscapedBracket5[OldRule? true](org.eclipse.jgit.ignore.IgnoreRuleSpecialCasesTest)')","[91814, 98898]"
"('Description.java', 'org.junit.runner.Description', 'methodAndClassNamePatternGroupOrDefault', '([\\s\\S]*)\\((.*)\\)', 'testHasChangeidWithReplacement(org.eclipse.jgit.util.ChangeIdUtilTest)')","[32329, 33097]"
"('Description.java', 'org.junit.runner.Description', 'methodAndClassNamePatternGroupOrDefault', '([\\s\\S]*)\\((.*)\\)', 'testFilter_NO_MERGES(org.eclipse.jgit.revwalk.RevWalkFilterTest)')","[180689, 181012]"
"('Description.java', 'org.junit.runner.Description', 'methodAndClassNamePatternGroupOrDefault', '([\\s\\S]*)\\((.*)\\)', 'org.eclipse.jgit.treewalk.PostOrderTreeWalkTest')","[263241, 263522]"
"('Description.java', 'org.junit.runner.Description', 'methodAndClassNamePatternGroupOrDefault', '([\\s\\S]*)\\((.*)\\)', 'testDegenerate_DeleteStart(org.eclipse.jgit.diff.MyersDiffTest)')","[8749, 9180]"
"('URIish.java', 'org.eclipse.jgit.transport.URIish', 'getHumanishName', '^([\\\\/]?((?:[A-Za-z]:)?[\\\\/]?(?:(?:[^\\\\/]+[\\\\/]+)*[^\\\\/]+[\\\\/]*)))$', '/a/b/.git')",[252952]
"('Description.java', 'org.junit.runner.Description', 'methodAndClassNamePatternGroupOrDefault', '([\\s\\S]*)\\((.*)\\)', 'testDirectoryFileConflicts_1(org.eclipse.jgit.lib.DirCacheCheckoutTest)')","[61335, 62329]"
"('URIish.java', 'org.eclipse.jgit.transport.URIish', '<init>', '^(file):([\\\\/](?![\\\\/])((?:[A-Za-z]:)?[\\\\/]?(?:(?:[^\\\\/]+[\\\\/]+)*[^\\\\/]+[\\\\/]*)))$', 'ssh://lusr\\example:wtf@example.com:80//')",[194536]
"('URIish.java', 'org.eclipse.jgit.transport.URIish', '<init>', '^(file):([\\\\/](?![\\\\/])((?:[A-Za-z]:)?[\\\\/]?(?:(?:[^\\\\/]+[\\\\/]+)*[^\\\\/]+[\\\\/]*)))$', 'https://l usr\\example.com@1.2.3.4//')","[232203, 232387]"
"('Description.java', 'org.junit.runner.Description', 'methodAndClassNamePatternGroupOrDefault', '([\\s\\S]*)\\((.*)\\)', 'testDequote_RawLatin1(org.eclipse.jgit.util.QuotedStringGitPathStyleTest)')","[40059, 40495]"
"('Description.java', 'org.junit.runner.Description', 'methodAndClassNamePatternGroupOrDefault', '([\\s\\S]*)\\((.*)\\)', 'org.eclipse.jgit.internal.storage.file.PackWriterTest')","[117572, 119535]"
"('Description.java', 'org.junit.runner.Description', 'methodAndClassNamePatternGroupOrDefault', '([\\s\\S]*)\\((.*)\\)', 'testMissingString(org.eclipse.jgit.nls.TranslationBundleTest)')","[40684, 40770]"
"('Description.java', 'org.junit.runner.Description', 'methodAndClassNamePatternGroupOrDefault', '([\\s\\S]*)\\((.*)\\)', 'testInitialize_NoPostOrder(org.eclipse.jgit.treewalk.PostOrderTreeWalkTest)')","[263283, 263411]"
"('Description.java', 'org.junit.runner.Description', 'methodAndClassNamePatternGroupOrDefault', '([\\s\\S]*)\\((.*)\\)', 'commitAfterSquashMerge(org.eclipse.jgit.api.CommitCommandTest)')","[123042, 123253]"
"('Description.java', 'org.junit.runner.Description', 'methodAndClassNamePatternGroupOrDefault', '([\\s\\S]*)\\((.*)\\)', 'testEdits_MatchAll(org.eclipse.jgit.revwalk.RevWalkPathFilter1Test)')","[175539, 175825]"
"('URIish.java', 'org.eclipse.jgit.transport.URIish', '<init>', '^(file):([\\\\/](?![\\\\/])((?:[A-Za-z]:)?[\\\\/]?(?:(?:[^\\\\/]+[\\\\/]+)*[^\\\\/]+[\\\\/]*)))$', 'short:project.git')","[257006, 257931]"
"('Description.java', 'org.junit.runner.Description', 'methodAndClassNamePatternGroupOrDefault', '([\\s\\S]*)\\((.*)\\)', 'testResetDoesNotAffectPostOrder(org.eclipse.jgit.treewalk.PostOrderTreeWalkTest)')","[263325, 263455]"
"('URIish.java', 'org.eclipse.jgit.transport.URIish', '<init>', '^(file):([\\\\/](?![\\\\/])((?:[A-Za-z]:)?[\\\\/]?(?:(?:[^\\\\/]+[\\\\/]+)*[^\\\\/]+[\\\\/]*)))$', 'https://me@example.com:80//abc')",[217138]
"('Description.java', 'org.junit.runner.Description', 'methodAndClassNamePatternGroupOrDefault', '([\\s\\S]*)\\((.*)\\)', 'testLowerGroupCase0[OldRule? true](org.eclipse.jgit.ignore.IgnoreRuleSpecialCasesTest)')","[89100, 96184]"
"('FastIgnoreRule.java', 'org.eclipse.jgit.ignore.FastIgnoreRule', 'isMatch', '.r[a-c]', 'dra')",[107615]
"('URIish.java', 'org.eclipse.jgit.transport.URIish', '<init>', '^(file):([\\\\/](?![\\\\/])((?:[A-Za-z]:)?[\\\\/]?(?:(?:[^\\\\/]+[\\\\/]+)*[^\\\\/]+[\\\\/]*)))$', 'http://1.2.3.4/D:\\x')","[241173, 241357, 242277, 242461, 243381, 243565]"
"('URIish.java', 'org.eclipse.jgit.transport.URIish', '<init>', '^([a-z][a-z0-9+-]+)://(?:(?:([^/:@]+)(?::([^\\\\/]+))?@)?((?:[^\\\\/:]+)|(?:\\[[0-9a-f:]+\\]))(?::(\\d+))?((?:/~(?:[^\\\\/]+))?[\\\\/]))?(.+)?$', 'ssh://lusr\\example@[::1]:80//')",[210123]
"('URIish.java', 'org.eclipse.jgit.transport.URIish', '<init>', '^(file):([\\\\/](?![\\\\/])((?:[A-Za-z]:)?[\\\\/]?(?:(?:[^\\\\/]+[\\\\/]+)*[^\\\\/]+[\\\\/]*)))$', 'https://example.com//')","[243979, 244163, 245083, 245267, 246187, 246371]"
"('Description.java', 'org.junit.runner.Description', 'methodAndClassNamePatternGroupOrDefault', '([\\s\\S]*)\\((.*)\\)', 'daysAndWeeksAgo(org.eclipse.jgit.util.GitDateParserTest)')","[22107, 22393]"
"('ChangeIdUtil.java', 'org.eclipse.jgit.util.ChangeIdUtil', 'indexOfChangeId', '(^Change-Id: *I[a-f0-9]{40}$)', '[ja: Fixed')",[34296]
"('URIish.java', 'org.eclipse.jgit.transport.URIish', '<init>', '^(file):([\\\\/](?![\\\\/])((?:[A-Za-z]:)?[\\\\/]?(?:(?:[^\\\\/]+[\\\\/]+)*[^\\\\/]+[\\\\/]*)))$', 'ssh+git://l usr\\example.com:wtf@1.2.3.4:1234/D:/x')",[197810]
"('URIish.java', 'org.eclipse.jgit.transport.URIish', '<init>', '^([a-z][a-z0-9+-]+)://(?:(?:([^/:@]+)(?::([^\\\\/]+))?@)?((?:[^\\\\/:]+)|(?:\\[[0-9a-f:]+\\]))(?::(\\d+))?((?:/~(?:[^\\\\/]+))?[\\\\/]))?(.+)?$', 'http://l usr\\example.com:wtf@example.com:80/D:\\x')",[201007]
"('Description.java', 'org.junit.runner.Description', 'methodAndClassNamePatternGroupOrDefault', '([\\s\\S]*)\\((.*)\\)', 'testOnlyOption_f1_2_f2_14_c(org.eclipse.jgit.api.CommitOnlyTest)')","[135424, 137493]"
"('Description.java', 'org.junit.runner.Description', 'methodAndClassNamePatternGroupOrDefault', '([\\s\\S]*)\\((.*)\\)', 'dropWithInvalidLogIndex(org.eclipse.jgit.api.StashDropCommandTest)')","[124457, 124632]"
"('Description.java', 'org.junit.runner.Description', 'methodAndClassNamePatternGroupOrDefault', '([\\s\\S]*)\\((.*)\\)', 'testInvalidCommitInvalidParent2(org.eclipse.jgit.lib.ObjectCheckerTest)')","[49214, 51736]"
"('Description.java', 'org.junit.runner.Description', 'methodAndClassNamePatternGroupOrDefault', '([\\s\\S]*)\\((.*)\\)', 'resolveExprSimple(org.eclipse.jgit.lib.RepositoryResolveTest)')","[71311, 72135]"
"('URIish.java', 'org.eclipse.jgit.transport.URIish', '<init>', '^([a-z][a-z0-9+-]+)://(?:(?:([^/:@]+)(?::([^\\\\/]+))?@)?((?:[^\\\\/:]+)|(?:\\[[0-9a-f:]+\\]))(?::(\\d+))?((?:/~(?:[^\\\\/]+))?[\\\\/]))?(.+)?$', 'http://l usr\\example.com@[::1]:80//')",[215643]
"('FastIgnoreRule.java', 'org.eclipse.jgit.ignore.FastIgnoreRule', 'isMatch', '[b-d]', 'a')",[100795]
"('Description.java', 'org.junit.runner.Description', 'methodAndClassNamePatternGroupOrDefault', '([\\s\\S]*)\\((.*)\\)', 'testAlnumGroupCase0(org.eclipse.jgit.fnmatch.FileNameMatcherTest)')","[44233, 47626]"
"('Description.java', 'org.junit.runner.Description', 'methodAndClassNamePatternGroupOrDefault', '([\\s\\S]*)\\((.*)\\)', 'testNoRename(org.eclipse.jgit.revwalk.RevWalkFollowFilterTest)')","[180396, 180462]"
"('Description.java', 'org.junit.runner.Description', 'methodAndClassNamePatternGroupOrDefault', '([\\s\\S]*)\\((.*)\\)', 'testDecodeInt32(org.eclipse.jgit.util.NBTest)')","[39114, 39286]"
"('URIish.java', 'org.eclipse.jgit.transport.URIish', '<init>', '^([\\\\/]?((?:[A-Za-z]:)?[\\\\/]?(?:(?:[^\\\\/]+[\\\\/]+)*[^\\\\/]+[\\\\/]*)))$', '/tmp/jgit_test_1202794844773508614_tmp/tmp_7885106280618449498.git')",[183494]
"('URIish.java', 'org.eclipse.jgit.transport.URIish', '<init>', '^(file):([\\\\/](?![\\\\/])((?:[A-Za-z]:)?[\\\\/]?(?:(?:[^\\\\/]+[\\\\/]+)*[^\\\\/]+[\\\\/]*)))$', 'file:///tmp/jgit_test_1453594300143160598_tmp/tmp_4212344384831512108/.git/')",[14357]
"('Description.java', 'org.junit.runner.Description', 'methodAndClassNamePatternGroupOrDefault', '([\\s\\S]*)\\((.*)\\)', 'testPullWithRebasePreserveConfig3(org.eclipse.jgit.api.PullCommandTest)')","[144735, 145087]"
"('Description.java', 'org.junit.runner.Description', 'methodAndClassNamePatternGroupOrDefault', '([\\s\\S]*)\\((.*)\\)', 'testToLowerCaseString(org.eclipse.jgit.util.StringUtilsTest)')","[27110, 27258]"
"('URIish.java', 'org.eclipse.jgit.transport.URIish', '<init>', '^(file):([\\\\/](?![\\\\/])((?:[A-Za-z]:)?[\\\\/]?(?:(?:[^\\\\/]+[\\\\/]+)*[^\\\\/]+[\\\\/]*)))$', 'http://example.com/D:/x')","[240759, 240943, 241863, 242047, 242967, 243151]"
"('Description.java', 'org.junit.runner.Description', 'methodAndClassNamePatternGroupOrDefault', '([\\s\\S]*)\\((.*)\\)', 'RFC(org.eclipse.jgit.util.GitDateFormatterTest)')","[26108, 26303]"
"('FastIgnoreRule.java', 'org.eclipse.jgit.ignore.FastIgnoreRule', 'isMatch', '[A\\p{Ll}C3-5]', 'C')",[99363]
"('Description.java', 'org.junit.runner.Description', 'methodAndClassNamePatternGroupOrDefault', '([\\s\\S]*)\\((.*)\\)', 'testOnlyOption_f1_11_b(org.eclipse.jgit.api.CommitOnlyTest)')","[135823, 137911]"
"('Description.java', 'org.junit.runner.Description', 'methodAndClassNamePatternGroupOrDefault', '([\\s\\S]*)\\((.*)\\)', 'testVerySimpleStarCase1[OldRule? false](org.eclipse.jgit.ignore.IgnoreRuleSpecialCasesTest)')","[87515, 94620]"
"('Description.java', 'org.junit.runner.Description', 'methodAndClassNamePatternGroupOrDefault', '([\\s\\S]*)\\((.*)\\)', 'testValidTag(org.eclipse.jgit.lib.ObjectCheckerTest)')","[48899, 51406]"
"('Description.java', 'org.junit.runner.Description', 'methodAndClassNamePatternGroupOrDefault', '([\\s\\S]*)\\((.*)\\)', 'testTrimTrailingWhitespace(org.eclipse.jgit.util.RawCharUtilTest)')","[23101, 23166]"
"('URIish.java', 'org.eclipse.jgit.transport.URIish', '<init>', '^([a-z][a-z0-9+-]+)://(?:(?:([^/:@]+)(?::([^\\\\/]+))?@)?((?:[^\\\\/:]+)|(?:\\[[0-9a-f:]+\\]))(?::(\\d+))?((?:/~(?:[^\\\\/]+))?[\\\\/]))?(.+)?$', 'https://lusr\\example:wtf@1.2.3.4:1234/D:\\x')",[206397]
"('URIish.java', 'org.eclipse.jgit.transport.URIish', '<init>', '^(?:([^/:@]+)(?::([^\\\\/]+))?@)?([^\\\\/:]{2,}):([\\\\/](?:(?:[^\\\\/]+[\\\\/]+)*[^\\\\/]+[\\\\/]*))$', '/tmp/jgit_test_3534781626954288034_tmp/tmp_6146485395206315100')","[150391, 150531, 150692]"
"('Description.java', 'org.junit.runner.Description', 'methodAndClassNamePatternGroupOrDefault', '([\\s\\S]*)\\((.*)\\)', 'testDifferentStates(org.eclipse.jgit.api.StatusCommandTest)')","[157239, 157303]"
"('FastIgnoreRule.java', 'org.eclipse.jgit.ignore.FastIgnoreRule', 'isMatch', '[\\p{Lu}]', 'A')",[101783]
"('URIish.java', 'org.eclipse.jgit.transport.URIish', '<init>', '^([\\\\/]?((?:[A-Za-z]:)?[\\\\/]?(?:(?:[^\\\\/]+[\\\\/]+)*[^\\\\/]+[\\\\/]*)))$', '/tmp/jgit_test_6323444599553401210_tmp/tmp_1339419818471425794')","[159585, 159730, 159932, 160144, 160346]"
"('URIish.java', 'org.eclipse.jgit.transport.URIish', '<init>', '^([a-z][a-z0-9+-]+)://(?:(?:([^/:@]+)(?::([^\\\\/]+))?@)?((?:[^\\\\/:]+)|(?:\\[[0-9a-f:]+\\]))(?::(\\d+))?((?:/~(?:[^\\\\/]+))?[\\\\/]))?(.+)?$', 'ssh://l usr\\example.com:wtf@example.com:80/D:/x')",[193445]
"('Description.java', 'org.junit.runner.Description', 'methodAndClassNamePatternGroupOrDefault', '([\\s\\S]*)\\((.*)\\)', 'testMixedGroupCase1[OldRule? false](org.eclipse.jgit.ignore.IgnoreRuleSpecialCasesTest)')","[85146, 92251]"
"('Description.java', 'org.junit.runner.Description', 'methodAndClassNamePatternGroupOrDefault', '([\\s\\S]*)\\((.*)\\)', 'testPackFormat_LargeObject(org.eclipse.jgit.internal.storage.file.UnpackedObjectTest)')","[121790, 122117]"
"('FastIgnoreRule.java', 'org.eclipse.jgit.ignore.FastIgnoreRule', 'isMatch', '[\\p{javaLetter}][\\p{javaLetter}]', 'a1')",[100039]
"('Description.java', 'org.junit.runner.Description', 'methodAndClassNamePatternGroupOrDefault', '([\\s\\S]*)\\((.*)\\)', 'testCntrlGroupCase0[OldRule? false](org.eclipse.jgit.ignore.IgnoreRuleSpecialCasesTest)')","[85675, 92780]"
"('Description.java', 'org.junit.runner.Description', 'methodAndClassNamePatternGroupOrDefault', '([\\s\\S]*)\\((.*)\\)', 'testTrailingSlash(org.eclipse.jgit.ignore.IgnoreMatcherTest)')","[103054, 103250]"
"('URIish.java', 'org.eclipse.jgit.transport.URIish', '<init>', '^(file):([\\\\/](?![\\\\/])((?:[A-Za-z]:)?[\\\\/]?(?:(?:[^\\\\/]+[\\\\/]+)*[^\\\\/]+[\\\\/]*)))$', 'https://1.2.3.4//')","[244347, 244531, 245451, 245635, 246555, 246739]"
"('URIish.java', 'org.eclipse.jgit.transport.URIish', '<init>', '^(file):([\\\\/](?![\\\\/])((?:[A-Za-z]:)?[\\\\/]?(?:(?:[^\\\\/]+[\\\\/]+)*[^\\\\/]+[\\\\/]*)))$', 'ssh+git://l usr\\example.com@example.com/D:/x')","[225303, 225487]"
"('Description.java', 'org.junit.runner.Description', 'methodAndClassNamePatternGroupOrDefault', '([\\s\\S]*)\\((.*)\\)', 'org.eclipse.jgit.diff.RawTextTest')","[10726, 11308]"
"('Description.java', 'org.junit.runner.Description', 'methodAndClassNamePatternGroupOrDefault', '([\\s\\S]*)\\((.*)\\)', 'org.eclipse.jgit.lib.T0002_TreeTest')","[58444, 59387]"
"('Description.java', 'org.junit.runner.Description', 'methodAndClassNamePatternGroupOrDefault', '([\\s\\S]*)\\((.*)\\)', 'logAllCommits(org.eclipse.jgit.api.LogCommandTest)')","[130736, 130885]"
"('Description.java', 'org.junit.runner.Description', 'methodAndClassNamePatternGroupOrDefault', '([\\s\\S]*)\\((.*)\\)', 'testXDigitGroupCase5(org.eclipse.jgit.fnmatch.FileNameMatcherTest)')","[44044, 47428]"
"('Description.java', 'org.junit.runner.Description', 'methodAndClassNamePatternGroupOrDefault', '([\\s\\S]*)\\((.*)\\)', 'testWriteUnchangedFlat(org.eclipse.jgit.notes.NoteMapTest)')","[258462, 258726]"
"('URIish.java', 'org.eclipse.jgit.transport.URIish', '<init>', '^(file):([\\\\/](?![\\\\/])((?:[A-Za-z]:)?[\\\\/]?(?:(?:[^\\\\/]+[\\\\/]+)*[^\\\\/]+[\\\\/]*)))$', '/tmp/jgit_test_5968972444401405261_tmp/tmp_9143152110680163369')","[153269, 153394, 153543]"
"('URIish.java', 'org.eclipse.jgit.transport.URIish', '<init>', '^([a-z][a-z0-9+-]+)://(?:(?:([^/:@]+)(?::([^\\\\/]+))?@)?((?:[^\\\\/:]+)|(?:\\[[0-9a-f:]+\\]))(?::(\\d+))?((?:/~(?:[^\\\\/]+))?[\\\\/]))?(.+)?$', 'http://lusr\\example@[::1]:80//')",[216747]
"('FastIgnoreRule.java', 'org.eclipse.jgit.ignore.FastIgnoreRule', 'isMatch', '[\\p{Ll}]', '.')",[99935]
"('Description.java', 'org.junit.runner.Description', 'methodAndClassNamePatternGroupOrDefault', '([\\s\\S]*)\\((.*)\\)', 'testReadString4(org.eclipse.jgit.transport.PacketLineInTest)')","[184689, 185237]"
"('Description.java', 'org.junit.runner.Description', 'methodAndClassNamePatternGroupOrDefault', '([\\s\\S]*)\\((.*)\\)', 'testFastForwardWithFiles(org.eclipse.jgit.api.MergeCommandTest)')","[126622, 127549]"
"('Description.java', 'org.junit.runner.Description', 'methodAndClassNamePatternGroupOrDefault', '([\\s\\S]*)\\((.*)\\)', 'testRenameBranchCannotLockAFileHEADisOtherLockTo(org.eclipse.jgit.internal.storage.file.RefUpdateTest)')","[120222, 121072]"
"('URIish.java', 'org.eclipse.jgit.transport.URIish', '<init>', '^(?:([^/:@]+)(?::([^\\\\/]+))?@)?([^\\\\/:]{2,}):([\\\\/](?:(?:[^\\\\/]+[\\\\/]+)*[^\\\\/]+[\\\\/]*))$', '/tmp/jgit_test_5968972444401405261_tmp/tmp_9143152110680163369')","[153341, 153481, 153642]"
"('URIish.java', 'org.eclipse.jgit.transport.URIish', '<init>', '^(file):([\\\\/](?![\\\\/])((?:[A-Za-z]:)?[\\\\/]?(?:(?:[^\\\\/]+[\\\\/]+)*[^\\\\/]+[\\\\/]*)))$', 'http://l usr\\example.com:wtf@[::1]:1234//abc')",[201444]
"('FastIgnoreRule.java', 'org.eclipse.jgit.ignore.FastIgnoreRule', 'isMatch', '[\\p{XDigit}]', '۹')",[102175]
"('Description.java', 'org.junit.runner.Description', 'methodAndClassNamePatternGroupOrDefault', '([\\s\\S]*)\\((.*)\\)', 'testRebaseWithUnstagedTopicChange(org.eclipse.jgit.api.RebaseCommandTest)')","[131327, 132810]"
"('URIish.java', 'org.eclipse.jgit.transport.URIish', '<init>', '^(file):([\\\\/](?![\\\\/])((?:[A-Za-z]:)?[\\\\/]?(?:(?:[^\\\\/]+[\\\\/]+)*[^\\\\/]+[\\\\/]*)))$', 'ssh+git://l usr\\example.com@1.2.3.4/D:\\x')","[225717, 225901]"
"('Description.java', 'org.junit.runner.Description', 'methodAndClassNamePatternGroupOrDefault', '([\\s\\S]*)\\((.*)\\)', 'testOnlyOption_f1_6_f2_14_d(org.eclipse.jgit.api.CommitOnlyTest)')","[135655, 137735]"
"('Description.java', 'org.junit.runner.Description', 'methodAndClassNamePatternGroupOrDefault', '([\\s\\S]*)\\((.*)\\)', 'testInvalidCommitNoTree3(org.eclipse.jgit.lib.ObjectCheckerTest)')","[50306, 52880]"
"('Description.java', 'org.junit.runner.Description', 'methodAndClassNamePatternGroupOrDefault', '([\\s\\S]*)\\((.*)\\)', 'org.eclipse.jgit.internal.storage.file.GcConcurrentTest')","[114934, 115000]"
"('Description.java', 'org.junit.runner.Description', 'methodAndClassNamePatternGroupOrDefault', '([\\s\\S]*)\\((.*)\\)', 'testNoFooters_OneLineBodyNoLF(org.eclipse.jgit.revwalk.FooterLineTest)')","[173528, 173932]"
"('Description.java', 'org.junit.runner.Description', 'methodAndClassNamePatternGroupOrDefault', '([\\s\\S]*)\\((.*)\\)', 'testAsterisk[OldRule? true](org.eclipse.jgit.ignore.FastIgnoreRuleTest)')","[77539, 78275]"
"('URIish.java', 'org.eclipse.jgit.transport.URIish', '<init>', '^(?:([^/:@]+)(?::([^\\\\/]+))?@)?((?:[^\\\\/:]+)|(?:\\[[0-9a-f:]+\\])):((?:(?:/~(?:[^\\\\/]+))[\\\\/])?(?:(?:[^\\\\/]+[\\\\/]+)*[^\\\\/]+[\\\\/]*))$', '/tmp/jgit_test_1202794844773508614_tmp/tmp_7885106280618449498.git')",[183444]
"('Description.java', 'org.junit.runner.Description', 'methodAndClassNamePatternGroupOrDefault', '([\\s\\S]*)\\((.*)\\)', 'testFailureF1(org.eclipse.jgit.api.ApplyCommandTest)')","[163735, 163971]"
"('Description.java', 'org.junit.runner.Description', 'methodAndClassNamePatternGroupOrDefault', '([\\s\\S]*)\\((.*)\\)', 'testTwoEntries_BackwardsOneAtATime(org.eclipse.jgit.treewalk.CanonicalTreeParserTest)')","[261441, 261765]"
"('URIish.java', 'org.eclipse.jgit.transport.URIish', '<init>', '^(file):([\\\\/](?![\\\\/])((?:[A-Za-z]:)?[\\\\/]?(?:(?:[^\\\\/]+[\\\\/]+)*[^\\\\/]+[\\\\/]*)))$', 'ssh://DOMAIN%5cüser:pass@example.com:33/some/p ath')","[251316, 251362]"
"('URIish.java', 'org.eclipse.jgit.transport.URIish', '<init>', '^([a-z][a-z0-9+-]+)://(?:(?:([^/:@]+)(?::([^\\\\/]+))?@)?((?:[^\\\\/:]+)|(?:\\[[0-9a-f:]+\\]))(?::(\\d+))?((?:/~(?:[^\\\\/]+))?[\\\\/]))?(.+)?$', 'https://l usr\\example.com@1.2.3.4//')","[232226, 232410]"
"('Description.java', 'org.junit.runner.Description', 'methodAndClassNamePatternGroupOrDefault', '([\\s\\S]*)\\((.*)\\)', 'testEmptyIfRootDoesNotExist(org.eclipse.jgit.treewalk.FileTreeIteratorTest)')","[261998, 262336]"
"('Description.java', 'org.junit.runner.Description', 'methodAndClassNamePatternGroupOrDefault', '([\\s\\S]*)\\((.*)\\)', 'branch_historyNotPruned(org.eclipse.jgit.internal.storage.file.GcBranchPrunedTest)')","[115368, 115433]"
"('Description.java', 'org.junit.runner.Description', 'methodAndClassNamePatternGroupOrDefault', '([\\s\\S]*)\\((.*)\\)', 'org.eclipse.jgit.api.ArchiveCommandTest')","[158150, 158827]"
"('URIish.java', 'org.eclipse.jgit.transport.URIish', '<init>', '^(file):([\\\\/](?![\\\\/])((?:[A-Za-z]:)?[\\\\/]?(?:(?:[^\\\\/]+[\\\\/]+)*[^\\\\/]+[\\\\/]*)))$', 'ssh+git://me@example.com:1234//')",[210284]
"('Description.java', 'org.junit.runner.Description', 'methodAndClassNamePatternGroupOrDefault', '([\\s\\S]*)\\((.*)\\)', 'testIterable(org.eclipse.jgit.util.RefListTest)')","[20222, 20726]"
"('Description.java', 'org.junit.runner.Description', 'methodAndClassNamePatternGroupOrDefault', '([\\s\\S]*)\\((.*)\\)', 'testTwoLineFooBar(org.eclipse.jgit.util.RawParseUtils_LineMapTest)')","[30791, 30899]"
"('Description.java', 'org.junit.runner.Description', 'methodAndClassNamePatternGroupOrDefault', '([\\s\\S]*)\\((.*)\\)', 'indexAdd(org.eclipse.jgit.api.StashApplyCommandTest)')","[142624, 143181]"
"('URIish.java', 'org.eclipse.jgit.transport.URIish', '<init>', '^([a-z][a-z0-9+-]+)://(?:(?:([^/:@]+)(?::([^\\\\/]+))?@)?((?:[^\\\\/:]+)|(?:\\[[0-9a-f:]+\\]))(?::(\\d+))?((?:/~(?:[^\\\\/]+))?[\\\\/]))?(.+)?$', 'ssh+git://l usr\\example.com:wtf@[::1]:80//abc')",[198339]
"('URIish.java', 'org.eclipse.jgit.transport.URIish', '<init>', '^(?:([^/:@]+)(?::([^\\\\/]+))?@)?([^\\\\/:]{2,}):([\\\\/](?:(?:[^\\\\/]+[\\\\/]+)*[^\\\\/]+[\\\\/]*))$', '/another/dir')","[254936, 255636, 257272]"
"('Description.java', 'org.junit.runner.Description', 'methodAndClassNamePatternGroupOrDefault', '([\\s\\S]*)\\((.*)\\)', 'testPrintGroupCase0(org.eclipse.jgit.fnmatch.FileNameMatcherTest)')","[43414, 46768]"
"('Description.java', 'org.junit.runner.Description', 'methodAndClassNamePatternGroupOrDefault', '([\\s\\S]*)\\((.*)\\)', 'testValidTree1(org.eclipse.jgit.lib.ObjectCheckerTest)')","[48773, 51274]"
"('Description.java', 'org.junit.runner.Description', 'methodAndClassNamePatternGroupOrDefault', '([\\s\\S]*)\\((.*)\\)', 'org.eclipse.jgit.transport.PackParserTest')","[218255, 251730]"
"('URIish.java', 'org.eclipse.jgit.transport.URIish', '<init>', '^(file):([\\\\/](?![\\\\/])((?:[A-Za-z]:)?[\\\\/]?(?:(?:[^\\\\/]+[\\\\/]+)*[^\\\\/]+[\\\\/]*)))$', 'git://example.com/home/m y')","[252584, 252630]"
"('Description.java', 'org.junit.runner.Description', 'methodAndClassNamePatternGroupOrDefault', '([\\s\\S]*)\\((.*)\\)', 'testNoRenames_GitlinkAndFile(org.eclipse.jgit.diff.RenameDetectorTest)')","[4771, 5340]"
"('URIish.java', 'org.eclipse.jgit.transport.URIish', '<init>', '^(?:([^/:@]+)(?::([^\\\\/]+))?@)?([^\\\\/:]{2,}):([\\\\/](?:(?:[^\\\\/]+[\\\\/]+)*[^\\\\/]+[\\\\/]*))$', '/tmp/jgit_test_5935307310089394202_tmp/tmp_8096884284597820746')","[146193, 146333, 146482, 146691]"
"('Description.java', 'org.junit.runner.Description', 'methodAndClassNamePatternGroupOrDefault', '([\\s\\S]*)\\((.*)\\)', 'testOnlyOption_f1_5_b(org.eclipse.jgit.api.CommitOnlyTest)')","[134878, 136921]"
"('FastIgnoreRule.java', 'org.eclipse.jgit.ignore.FastIgnoreRule', 'isMatch', '[:]\\]', ':')",[99155]
"('URIish.java', 'org.eclipse.jgit.transport.URIish', '<init>', '^(?:([^/:@]+)(?::([^\\\\/]+))?@)?((?:[^\\\\/:]+)|(?:\\[[0-9a-f:]+\\])):((?:(?:/~(?:[^\\\\/]+))[\\\\/])?(?:(?:[^\\\\/]+[\\\\/]+)*[^\\\\/]+[\\\\/]*))$', '/tmp/jgit_test_3534781626954288034_tmp/tmp_6146485395206315100')","[150367, 150502, 150659]"
"('Description.java', 'org.junit.runner.Description', 'methodAndClassNamePatternGroupOrDefault', '([\\s\\S]*)\\((.*)\\)', 'testEdit_InvertBlocks(org.eclipse.jgit.diff.MyersDiffTest)')","[8791, 9224]"
"('Description.java', 'org.junit.runner.Description', 'methodAndClassNamePatternGroupOrDefault', '([\\s\\S]*)\\((.*)\\)', 'org.eclipse.jgit.revwalk.ObjectWalkTest')","[177297, 177707]"
"('Description.java', 'org.junit.runner.Description', 'methodAndClassNamePatternGroupOrDefault', '([\\s\\S]*)\\((.*)\\)', 'org.eclipse.jgit.util.QuotedStringBourneUserPathStyleTest')","[28787, 30375]"
"('URIish.java', 'org.eclipse.jgit.transport.URIish', '<init>', '^(file):([\\\\/](?![\\\\/])((?:[A-Za-z]:)?[\\\\/]?(?:(?:[^\\\\/]+[\\\\/]+)*[^\\\\/]+[\\\\/]*)))$', 'file:/tmp/jgit_test_5071656691698208479_tmp/tmp_3411914629949002968/.git/')",[14686]
"('Description.java', 'org.junit.runner.Description', 'methodAndClassNamePatternGroupOrDefault', '([\\s\\S]*)\\((.*)\\)', 'testSshProtoWithUserPassAndPort(org.eclipse.jgit.transport.URIishTest)')","[188443, 189820]"
"('Description.java', 'org.junit.runner.Description', 'methodAndClassNamePatternGroupOrDefault', '([\\s\\S]*)\\((.*)\\)', 'testGetRefs_DiscoversModifiedLoose(org.eclipse.jgit.internal.storage.file.RefDirectoryTest)')","[111013, 112197]"
"('Description.java', 'org.junit.runner.Description', 'methodAndClassNamePatternGroupOrDefault', '([\\s\\S]*)\\((.*)\\)', 'testAlias_PreferredAuthenticationsDefault(org.eclipse.jgit.transport.OpenSshConfigTest)')","[195848, 196211]"
"('URIish.java', 'org.eclipse.jgit.transport.URIish', '<init>', '^([a-z][a-z0-9+-]+)://(?:(?:([^/:@]+)(?::([^\\\\/]+))?@)?((?:[^\\\\/:]+)|(?:\\[[0-9a-f:]+\\]))(?::(\\d+))?((?:/~(?:[^\\\\/]+))?[\\\\/]))?(.+)?$', 'https://me@[::1]:1234/D:\\x')",[217828]
"('Description.java', 'org.junit.runner.Description', 'methodAndClassNamePatternGroupOrDefault', '([\\s\\S]*)\\((.*)\\)', 'testTwoGroupsCase3[OldRule? false](org.eclipse.jgit.ignore.IgnoreRuleSpecialCasesTest)')","[86250, 93355]"
"('URIish.java', 'org.eclipse.jgit.transport.URIish', '<init>', '^(?:([^/:@]+)(?::([^\\\\/]+))?@)?((?:[^\\\\/:]+)|(?:\\[[0-9a-f:]+\\])):((?:(?:/~(?:[^\\\\/]+))[\\\\/])?(?:(?:[^\\\\/]+[\\\\/]+)*[^\\\\/]+[\\\\/]*))$', '/abc/.git')",[249315]
"('Description.java', 'org.junit.runner.Description', 'methodAndClassNamePatternGroupOrDefault', '([\\s\\S]*)\\((.*)\\)', 'testRemoveFirst(org.eclipse.jgit.notes.LeafBucketTest)')","[260170, 260405]"
"('URIish.java', 'org.eclipse.jgit.transport.URIish', '<init>', '^(file):([\\\\/](?![\\\\/])((?:[A-Za-z]:)?[\\\\/]?(?:(?:[^\\\\/]+[\\\\/]+)*[^\\\\/]+[\\\\/]*)))$', 'ssh+git://me:wtf@[::1]:80/D:/x')",[197258]
"('URIish.java', 'org.eclipse.jgit.transport.URIish', '<init>', '^(file):([\\\\/](?![\\\\/])((?:[A-Za-z]:)?[\\\\/]?(?:(?:[^\\\\/]+[\\\\/]+)*[^\\\\/]+[\\\\/]*)))$', 'ssh://l usr\\example.com@[::1]:80//abc')",[209042]
"('Description.java', 'org.junit.runner.Description', 'methodAndClassNamePatternGroupOrDefault', '([\\s\\S]*)\\((.*)\\)', 'testGetValidDotGitSlashHumanishName(org.eclipse.jgit.transport.URIishTest)')","[189470, 190744]"
"('Description.java', 'org.junit.runner.Description', 'methodAndClassNamePatternGroupOrDefault', '([\\s\\S]*)\\((.*)\\)', 'testMaliciousGitPath1(org.eclipse.jgit.lib.DirCacheCheckoutMaliciousPathTest)')","[67117, 68031]"
"('Description.java', 'org.junit.runner.Description', 'methodAndClassNamePatternGroupOrDefault', '([\\s\\S]*)\\((.*)\\)', 'testParse_CcNewFile(org.eclipse.jgit.patch.PatchCcTest)')","[1855, 1920]"
"('Description.java', 'org.junit.runner.Description', 'methodAndClassNamePatternGroupOrDefault', '([\\s\\S]*)\\((.*)\\)', 'testBlankGroupCase1[OldRule? true](org.eclipse.jgit.ignore.IgnoreRuleSpecialCasesTest)')","[90963, 98047]"
"('Description.java', 'org.junit.runner.Description', 'methodAndClassNamePatternGroupOrDefault', '([\\s\\S]*)\\((.*)\\)', 'testEmpty_NoPrefix1(org.eclipse.jgit.util.RefMapTest)')","[21081, 21555]"
"('Description.java', 'org.junit.runner.Description', 'methodAndClassNamePatternGroupOrDefault', '([\\s\\S]*)\\((.*)\\)', 'testParse_PublicParseMethod(org.eclipse.jgit.revwalk.RevTagParseTest)')","[179772, 180186]"
"('Description.java', 'org.junit.runner.Description', 'methodAndClassNamePatternGroupOrDefault', '([\\s\\S]*)\\((.*)\\)', 'test004_isId(org.eclipse.jgit.lib.ObjectIdTest)')","[53570, 53850]"
"('Description.java', 'org.junit.runner.Description', 'methodAndClassNamePatternGroupOrDefault', '([\\s\\S]*)\\((.*)\\)', 'testRemoteAlias(org.eclipse.jgit.gitrepo.RepoCommandTest)')","[2714, 3450]"
"('Description.java', 'org.junit.runner.Description', 'methodAndClassNamePatternGroupOrDefault', '([\\s\\S]*)\\((.*)\\)', 'org.eclipse.jgit.api.StashCreateCommandTest')","[155820, 156531]"
"('Description.java', 'org.junit.runner.Description', 'methodAndClassNamePatternGroupOrDefault', '([\\s\\S]*)\\((.*)\\)', 'testTrivialTwoWay_rightDFconflict1(org.eclipse.jgit.merge.SimpleMergeTest)')","[15438, 15712]"
"('Description.java', 'org.junit.runner.Description', 'methodAndClassNamePatternGroupOrDefault', '([\\s\\S]*)\\((.*)\\)', 'testFileCommittedModifiedCommittedComparedWithInitialCommit(org.eclipse.jgit.treewalk.filter.IndexDiffFilterTest)')","[264695, 265519]"
"('URIish.java', 'org.eclipse.jgit.transport.URIish', '<init>', '^(file):([\\\\/](?![\\\\/])((?:[A-Za-z]:)?[\\\\/]?(?:(?:[^\\\\/]+[\\\\/]+)*[^\\\\/]+[\\\\/]*)))$', 'http://me@[::1]:1234//abc')",[214378]
"('AttributesRule.java', 'org.eclipse.jgit.attributes.AttributesRule', 'isMatch', '.r[a-c]', '1ra')",[76751]
"('Description.java', 'org.junit.runner.Description', 'methodAndClassNamePatternGroupOrDefault', '([\\s\\S]*)\\((.*)\\)', 'testEmptyMap(org.eclipse.jgit.lib.ObjectIdSubclassMapTest)')","[64025, 64179]"
"('Description.java', 'org.junit.runner.Description', 'methodAndClassNamePatternGroupOrDefault', '([\\s\\S]*)\\((.*)\\)', 'testBuilder_Set(org.eclipse.jgit.util.RefListTest)')","[20243, 20748]"
"('Description.java', 'org.junit.runner.Description', 'methodAndClassNamePatternGroupOrDefault', '([\\s\\S]*)\\((.*)\\)', 'testXDigitGroupCase0[OldRule? false](org.eclipse.jgit.ignore.IgnoreRuleSpecialCasesTest)')","[87561, 94666]"
"('URIish.java', 'org.eclipse.jgit.transport.URIish', '<init>', '^(file):([\\\\/](?![\\\\/])((?:[A-Za-z]:)?[\\\\/]?(?:(?:[^\\\\/]+[\\\\/]+)*[^\\\\/]+[\\\\/]*)))$', 'ssh://me@example.com//abc')","[220841, 221025]"
"('Description.java', 'org.junit.runner.Description', 'methodAndClassNamePatternGroupOrDefault', '([\\s\\S]*)\\((.*)\\)', 'org.eclipse.jgit.transport.RefSpecTest')","[186423, 188113]"
"('URIish.java', 'org.eclipse.jgit.transport.URIish', '<init>', '^(file):([\\\\/](?![\\\\/])((?:[A-Za-z]:)?[\\\\/]?(?:(?:[^\\\\/]+[\\\\/]+)*[^\\\\/]+[\\\\/]*)))$', 'file:/tmp/jgit_test_6855180754937398385_tmp/tmp_8894118542179860150/.git/')",[57229]
"('Description.java', 'org.junit.runner.Description', 'methodAndClassNamePatternGroupOrDefault', '([\\s\\S]*)\\((.*)\\)', 'testOnlyOption_f1_13_a(org.eclipse.jgit.api.CommitOnlyTest)')","[136012, 138109]"
"('URIish.java', 'org.eclipse.jgit.transport.URIish', '<init>', '^([a-z][a-z0-9+-]+)://(?:(?:([^/:@]+)(?::([^\\\\/]+))?@)?((?:[^\\\\/:]+)|(?:\\[[0-9a-f:]+\\]))(?::(\\d+))?((?:/~(?:[^\\\\/]+))?[\\\\/]))?(.+)?$', '/tmp/jgit_test_8267236767099531789_tmp/tmp_530234452973594559/.git')","[130407, 130545]"
"('Description.java', 'org.junit.runner.Description', 'methodAndClassNamePatternGroupOrDefault', '([\\s\\S]*)\\((.*)\\)', 'testVerySimpleStarCase0(org.eclipse.jgit.fnmatch.FileNameMatcherTest)')","[43876, 47252]"
"('Description.java', 'org.junit.runner.Description', 'methodAndClassNamePatternGroupOrDefault', '([\\s\\S]*)\\((.*)\\)', 'testUpdateDelete(org.eclipse.jgit.transport.PushProcessTest)')","[203266, 203811]"
"('URIish.java', 'org.eclipse.jgit.transport.URIish', '<init>', '^(file):([\\\\/](?![\\\\/])((?:[A-Za-z]:)?[\\\\/]?(?:(?:[^\\\\/]+[\\\\/]+)*[^\\\\/]+[\\\\/]*)))$', 'ssh://1.2.3.4//')","[234411, 234595, 235515, 235699, 236619, 236803]"
"('Description.java', 'org.junit.runner.Description', 'methodAndClassNamePatternGroupOrDefault', '([\\s\\S]*)\\((.*)\\)', 'testUntrackedNotIgnoredFolders(org.eclipse.jgit.lib.IndexDiffTest)')","[68958, 69309]"
"('URIish.java', 'org.eclipse.jgit.transport.URIish', '<init>', '^(file):([\\\\/](?![\\\\/])((?:[A-Za-z]:)?[\\\\/]?(?:(?:[^\\\\/]+[\\\\/]+)*[^\\\\/]+[\\\\/]*)))$', 'https://l usr\\example.com:wtf@1.2.3.4:1234//')",[205132]
"('ChangeIdUtil.java', 'org.eclipse.jgit.util.ChangeIdUtil', 'indexOfChangeId', '(^Change-Id: *I[a-f0-9]{40}$)', 'Change-Id: Iaeac9b4149291060228ef0154db2985a31111335')","[34992, 36487]"
"('Description.java', 'org.junit.runner.Description', 'methodAndClassNamePatternGroupOrDefault', '([\\s\\S]*)\\((.*)\\)', 'testFileInFolderCommittedAllDeletedCommittedComparedWithInitialCommit(org.eclipse.jgit.treewalk.filter.IndexDiffFilterTest)')","[264590, 265409]"
"('URIish.java', 'org.eclipse.jgit.transport.URIish', '<init>', '^([a-z][a-z0-9+-]+)://(?:(?:([^/:@]+)(?::([^\\\\/]+))?@)?((?:[^\\\\/:]+)|(?:\\[[0-9a-f:]+\\]))(?::(\\d+))?((?:/~(?:[^\\\\/]+))?[\\\\/]))?(.+)?$', 'https://l usr\\example.com:wtf@[::1]:1234//')",[205523]
"('Description.java', 'org.junit.runner.Description', 'methodAndClassNamePatternGroupOrDefault', '([\\s\\S]*)\\((.*)\\)', 'testVerySimplePatternCase3[OldRule? false](org.eclipse.jgit.ignore.IgnoreRuleSpecialCasesTest)')","[85790, 92895]"
"('URIish.java', 'org.eclipse.jgit.transport.URIish', '<init>', '^(file):([\\\\/](?![\\\\/])((?:[A-Za-z]:)?[\\\\/]?(?:(?:[^\\\\/]+[\\\\/]+)*[^\\\\/]+[\\\\/]*)))$', 'file:/tmp/jgit_test_7726753311847713028_tmp/tmp_262524205056608450/.git/')",[60826]
"('Description.java', 'org.junit.runner.Description', 'methodAndClassNamePatternGroupOrDefault', '([\\s\\S]*)\\((.*)\\)', 'fetchWithUpdatedTagShouldNotTryToUpdateLocal(org.eclipse.jgit.api.FetchCommandTest)')","[124818, 124949]"
"('Description.java', 'org.junit.runner.Description', 'methodAndClassNamePatternGroupOrDefault', '([\\s\\S]*)\\((.*)\\)', 'testEdit_InvertBlocks(org.eclipse.jgit.diff.HistogramDiffTest)')","[7017, 7692]"
"('Description.java', 'org.junit.runner.Description', 'methodAndClassNamePatternGroupOrDefault', '([\\s\\S]*)\\((.*)\\)', 'testUpdateNonFastForwardUnknownObject(org.eclipse.jgit.transport.PushProcessTest)')","[203526, 204079]"
"('URIish.java', 'org.eclipse.jgit.transport.URIish', '<init>', '^([a-z][a-z0-9+-]+)://(?:(?:([^/:@]+)(?::([^\\\\/]+))?@)?((?:[^\\\\/:]+)|(?:\\[[0-9a-f:]+\\]))(?::(\\d+))?((?:/~(?:[^\\\\/]+))?[\\\\/]))?(.+)?$', 'http://l usr\\example.com@1.2.3.4/D:\\x')","[229052, 229236]"
"('Description.java', 'org.junit.runner.Description', 'methodAndClassNamePatternGroupOrDefault', '([\\s\\S]*)\\((.*)\\)', 'testDiff(org.eclipse.jgit.diff.PatchIdDiffFormatterTest)')","[9479, 9523]"
"('Description.java', 'org.junit.runner.Description', 'methodAndClassNamePatternGroupOrDefault', '([\\s\\S]*)\\((.*)\\)', 'testScpStyleWithoutUserAbsolutePath(org.eclipse.jgit.transport.URIishTest)')","[189052, 190458]"
"('Description.java', 'org.junit.runner.Description', 'methodAndClassNamePatternGroupOrDefault', '([\\s\\S]*)\\((.*)\\)', 'testMergeFirstStopOnLastConflictAndSkip(org.eclipse.jgit.api.RebaseCommandTest)')","[131873, 133382]"
"('Description.java', 'org.junit.runner.Description', 'methodAndClassNamePatternGroupOrDefault', '([\\s\\S]*)\\((.*)\\)', 'testCheckoutOutChangesAutoCRLFInput(org.eclipse.jgit.lib.DirCacheCheckoutTest)')","[61545, 62621]"
"('URIish.java', 'org.eclipse.jgit.transport.URIish', '<init>', '^(file):([\\\\/](?![\\\\/])((?:[A-Za-z]:)?[\\\\/]?(?:(?:[^\\\\/]+[\\\\/]+)*[^\\\\/]+[\\\\/]*)))$', 'https://l usr\\example.com@[::1]:1234//abc')",[219369]
"('URIish.java', 'org.eclipse.jgit.transport.URIish', '<init>', '^(file):([\\\\/](?![\\\\/])((?:[A-Za-z]:)?[\\\\/]?(?:(?:[^\\\\/]+[\\\\/]+)*[^\\\\/]+[\\\\/]*)))$', 'file:///tmp/jgit_test_5135597944360628056_tmp/tmp_7197478466745448908/.git/')",[125000]
"('URIish.java', 'org.eclipse.jgit.transport.URIish', '<init>', '^([a-z][a-z0-9+-]+)://(?:(?:([^/:@]+)(?::([^\\\\/]+))?@)?((?:[^\\\\/:]+)|(?:\\[[0-9a-f:]+\\]))(?::(\\d+))?((?:/~(?:[^\\\\/]+))?[\\\\/]))?(.+)?$', 'ssh://lusr\\example:wtf@[::1]:80/D:\\x')",[195433]
"('Repository.java', 'org.eclipse.jgit.lib.Repository', 'resolve', '^-\\d+$', '-2')","[64964, 64991, 65129, 65156]"
"('Description.java', 'org.junit.runner.Description', 'methodAndClassNamePatternGroupOrDefault', '([\\s\\S]*)\\((.*)\\)', 'testDeleteVsModify(org.eclipse.jgit.merge.MergeAlgorithmTest)')","[12165, 12472]"
"('Description.java', 'org.junit.runner.Description', 'methodAndClassNamePatternGroupOrDefault', '([\\s\\S]*)\\((.*)\\)', 'testSpaceGroupCase1(org.eclipse.jgit.fnmatch.FileNameMatcherTest)')","[42595, 45910]"
"('FastIgnoreRule.java', 'org.eclipse.jgit.ignore.FastIgnoreRule', 'isMatch', '[\\[:]', ':')",[99597]
"('Description.java', 'org.junit.runner.Description', 'methodAndClassNamePatternGroupOrDefault', '([\\s\\S]*)\\((.*)\\)', 'testVerySimplePatternCase0(org.eclipse.jgit.fnmatch.FileNameMatcherTest)')","[42301, 45602]"
"('Description.java', 'org.junit.runner.Description', 'methodAndClassNamePatternGroupOrDefault', '([\\s\\S]*)\\((.*)\\)', 'testCreateFromLightweightTag(org.eclipse.jgit.api.BranchCommandTest)')","[128632, 128949]"
"('URIish.java', 'org.eclipse.jgit.transport.URIish', '<init>', '^([a-z][a-z0-9+-]+)://(?:(?:([^/:@]+)(?::([^\\\\/]+))?@)?((?:[^\\\\/:]+)|(?:\\[[0-9a-f:]+\\]))(?::(\\d+))?((?:/~(?:[^\\\\/]+))?[\\\\/]))?(.+)?$', 'https://lusr\\example@[::1]:80//abc')",[220680]
"('URIish.java', 'org.eclipse.jgit.transport.URIish', '<init>', '^(file):([\\\\/](?![\\\\/])((?:[A-Za-z]:)?[\\\\/]?(?:(?:[^\\\\/]+[\\\\/]+)*[^\\\\/]+[\\\\/]*)))$', 'ssh+git://l usr\\example.com:wtf@[::1]:80//abc')",[198316]
"('URIish.java', 'org.eclipse.jgit.transport.URIish', '<init>', '^(file):([\\\\/](?![\\\\/])((?:[A-Za-z]:)?[\\\\/]?(?:(?:[^\\\\/]+[\\\\/]+)*[^\\\\/]+[\\\\/]*)))$', 'ssh://lusr\\example@1.2.3.4:80/D:\\x')",[209870]
"('Description.java', 'org.junit.runner.Description', 'methodAndClassNamePatternGroupOrDefault', '([\\s\\S]*)\\((.*)\\)', 'testEmptyCache_CreateEmptyCacheTree(org.eclipse.jgit.dircache.DirCacheTreeTest)')","[171713, 171844]"
"('Description.java', 'org.junit.runner.Description', 'methodAndClassNamePatternGroupOrDefault', '([\\s\\S]*)\\((.*)\\)', 'testFileInFolderIgnored(org.eclipse.jgit.treewalk.filter.IndexDiffFilterTest)')","[264884, 265717]"
"('Description.java', 'org.junit.runner.Description', 'methodAndClassNamePatternGroupOrDefault', '([\\s\\S]*)\\((.*)\\)', 'testRepoManifestGroups(org.eclipse.jgit.gitrepo.RepoCommandTest)')","[2636, 3406]"
"('ChangeIdUtil.java', 'org.eclipse.jgit.util.ChangeIdUtil', 'indexOfFirstFooterLine', '^[ \\[].*$', '     the indentation]')",[34426]
"('URIish.java', 'org.eclipse.jgit.transport.URIish', '<init>', '^(file):([\\\\/](?![\\\\/])((?:[A-Za-z]:)?[\\\\/]?(?:(?:[^\\\\/]+[\\\\/]+)*[^\\\\/]+[\\\\/]*)))$', 'https://lusr\\example:wtf@[::1]:1234//')",[206604]
"('Description.java', 'org.junit.runner.Description', 'methodAndClassNamePatternGroupOrDefault', '([\\s\\S]*)\\((.*)\\)', 'testQuote_OctalAll(org.eclipse.jgit.util.QuotedStringGitPathStyleTest)')","[39954, 40385]"
"('Description.java', 'org.junit.runner.Description', 'methodAndClassNamePatternGroupOrDefault', '([\\s\\S]*)\\((.*)\\)', 'testNameOnlyMatches[OldRule? false](org.eclipse.jgit.ignore.IgnoreMatcherParametrizedTest)')","[103512, 103993]"
"('Description.java', 'org.junit.runner.Description', 'methodAndClassNamePatternGroupOrDefault', '([\\s\\S]*)\\((.*)\\)', 'shouldWorkWithZeroAsEnd(org.eclipse.jgit.revwalk.RevWalkUtilsCountTest)')","[174592, 174723]"
"('Description.java', 'org.junit.runner.Description', 'methodAndClassNamePatternGroupOrDefault', '([\\s\\S]*)\\((.*)\\)', 'testGraphGroupCase4[OldRule? false](org.eclipse.jgit.ignore.IgnoreRuleSpecialCasesTest)')","[85468, 92573]"
"('URIish.java', 'org.eclipse.jgit.transport.URIish', '<init>', '^(file):([\\\\/](?![\\\\/])((?:[A-Za-z]:)?[\\\\/]?(?:(?:[^\\\\/]+[\\\\/]+)*[^\\\\/]+[\\\\/]*)))$', 'ssh://me@example.com//')","[220795, 220979]"
"('Description.java', 'org.junit.runner.Description', 'methodAndClassNamePatternGroupOrDefault', '([\\s\\S]*)\\((.*)\\)', 'testReadString_Len0004(org.eclipse.jgit.transport.PacketLineInTest)')","[184458, 184995]"
"('Description.java', 'org.junit.runner.Description', 'methodAndClassNamePatternGroupOrDefault', '([\\s\\S]*)\\((.*)\\)', 'testAlnumGroupCase2[OldRule? true](org.eclipse.jgit.ignore.IgnoreRuleSpecialCasesTest)')","[91354, 98438]"
"('AttributesRule.java', 'org.eclipse.jgit.attributes.AttributesRule', 'isMatch', '.r[a-c]', 'xrb')",[76643]
"('URIish.java', 'org.eclipse.jgit.transport.URIish', '<init>', '^([a-z][a-z0-9+-]+)://(?:(?:([^/:@]+)(?::([^\\\\/]+))?@)?((?:[^\\\\/:]+)|(?:\\[[0-9a-f:]+\\]))(?::(\\d+))?((?:/~(?:[^\\\\/]+))?[\\\\/]))?(.+)?$', 'https://me:wtf@example.com:1234/D:/x')",[203008]
"('URIish.java', 'org.eclipse.jgit.transport.URIish', '<init>', '^([a-z][a-z0-9+-]+)://(?:(?:([^/:@]+)(?::([^\\\\/]+))?@)?((?:[^\\\\/:]+)|(?:\\[[0-9a-f:]+\\]))(?::(\\d+))?((?:/~(?:[^\\\\/]+))?[\\\\/]))?(.+)?$', 'https://l usr\\example.com:wtf@example.com:1234/D:\\x')",[204925]
"('FastIgnoreRule.java', 'org.eclipse.jgit.ignore.FastIgnoreRule', 'isMatch', '[\\p{Lu}]', '.')",[101861]
"('URIish.java', 'org.eclipse.jgit.transport.URIish', '<init>', '^(file):([\\\\/](?![\\\\/])((?:[A-Za-z]:)?[\\\\/]?(?:(?:[^\\\\/]+[\\\\/]+)*[^\\\\/]+[\\\\/]*)))$', 'file:///tmp/jgit_test_1689849022431982095_tmp/tmp_2688667455844412783')","[163298, 163355]"
"('Description.java', 'org.junit.runner.Description', 'methodAndClassNamePatternGroupOrDefault', '([\\s\\S]*)\\((.*)\\)', 'testEmptyTree_AtEOF(org.eclipse.jgit.treewalk.CanonicalTreeParserTest)')","[261567, 261897]"
"('URIish.java', 'org.eclipse.jgit.transport.URIish', '<init>', '^([\\\\/]?((?:[A-Za-z]:)?[\\\\/]?(?:(?:[^\\\\/]+[\\\\/]+)*[^\\\\/]+[\\\\/]*)))$', '/tmp/jgit_test_2902873097385022246_tmp/tmp_6356966833193134406')","[160528, 160673]"
"('URIish.java', 'org.eclipse.jgit.transport.URIish', '<init>', '^(?:([^/:@]+)(?::([^\\\\/]+))?@)?((?:[^\\\\/:]+)|(?:\\[[0-9a-f:]+\\])):((?:(?:/~(?:[^\\\\/]+))[\\\\/])?(?:(?:[^\\\\/]+[\\\\/]+)*[^\\\\/]+[\\\\/]*))$', '/a/b/c/')",[248855]
"('Description.java', 'org.junit.runner.Description', 'methodAndClassNamePatternGroupOrDefault', '([\\s\\S]*)\\((.*)\\)', 'testDirectoryFileConflicts_5(org.eclipse.jgit.lib.DirCacheCheckoutTest)')","[61419, 62453]"
"('Description.java', 'org.junit.runner.Description', 'methodAndClassNamePatternGroupOrDefault', '([\\s\\S]*)\\((.*)\\)', 'testStringOfPearls_FilePath2(org.eclipse.jgit.revwalk.RevWalkPathFilter1Test)')","[175329, 175605]"
"('Description.java', 'org.junit.runner.Description', 'methodAndClassNamePatternGroupOrDefault', '([\\s\\S]*)\\((.*)\\)', 'testPath_4095(org.eclipse.jgit.dircache.DirCacheLargePathTest)')","[172390, 172498]"
"('URIish.java', 'org.eclipse.jgit.transport.URIish', '<init>', '^([a-z][a-z0-9+-]+)://(?:(?:([^/:@]+)(?::([^\\\\/]+))?@)?((?:[^\\\\/:]+)|(?:\\[[0-9a-f:]+\\]))(?::(\\d+))?((?:/~(?:[^\\\\/]+))?[\\\\/]))?(.+)?$', 'ssh://lusr\\example:wtf@example.com:80//')",[194559]
"('Description.java', 'org.junit.runner.Description', 'methodAndClassNamePatternGroupOrDefault', '([\\s\\S]*)\\((.*)\\)', 'testReadACK_ACKcontinue1(org.eclipse.jgit.transport.PacketLineInTest)')","[184374, 184907]"
"('Description.java', 'org.junit.runner.Description', 'methodAndClassNamePatternGroupOrDefault', '([\\s\\S]*)\\((.*)\\)', 'testSimple(org.eclipse.jgit.transport.RemoteConfigTest)')","[253674, 254245]"
"('Description.java', 'org.junit.runner.Description', 'methodAndClassNamePatternGroupOrDefault', '([\\s\\S]*)\\((.*)\\)', 'testTwoLevelSubtree_Recursive(org.eclipse.jgit.dircache.DirCacheIteratorTest)')","[170275, 170516]"
"('ChangeIdUtil.java', 'org.eclipse.jgit.util.ChangeIdUtil', 'insertId', '^(Bug|Issue)[a-zA-Z0-9-]*:.*$', ' ')","[35324, 37969]"
"('URIish.java', 'org.eclipse.jgit.transport.URIish', '<init>', '^(file):([\\\\/](?![\\\\/])((?:[A-Za-z]:)?[\\\\/]?(?:(?:[^\\\\/]+[\\\\/]+)*[^\\\\/]+[\\\\/]*)))$', 'https://l usr\\example.com:wtf@1.2.3.4:1234/D:\\x')",[205270]
"('Description.java', 'org.junit.runner.Description', 'methodAndClassNamePatternGroupOrDefault', '([\\s\\S]*)\\((.*)\\)', 'testExecutableRetention(org.eclipse.jgit.api.CommitCommandTest)')","[123126, 123341]"
"('Description.java', 'org.junit.runner.Description', 'methodAndClassNamePatternGroupOrDefault', '([\\s\\S]*)\\((.*)\\)', 'testVerySimpleGroupCase1(org.eclipse.jgit.fnmatch.FileNameMatcherTest)')","[44443, 47846]"
"('FastIgnoreRule.java', 'org.eclipse.jgit.ignore.FastIgnoreRule', 'isMatch', '[tv]est\\.sta[a-d]', 'test.stab')","[104909, 106139]"
"('URIish.java', 'org.eclipse.jgit.transport.URIish', '<init>', '^(file):([\\\\/](?![\\\\/])((?:[A-Za-z]:)?[\\\\/]?(?:(?:[^\\\\/]+[\\\\/]+)*[^\\\\/]+[\\\\/]*)))$', 'http://me@1.2.3.4:80//')",[214148]
"('Description.java', 'org.junit.runner.Description', 'methodAndClassNamePatternGroupOrDefault', '([\\s\\S]*)\\((.*)\\)', 'test020_createBlobTag(org.eclipse.jgit.internal.storage.file.T0003_BasicTest)')","[116567, 117103]"
"('URIish.java', 'org.eclipse.jgit.transport.URIish', '<init>', '^([a-z][a-z0-9+-]+)://(?:(?:([^/:@]+)(?::([^\\\\/]+))?@)?((?:[^\\\\/:]+)|(?:\\[[0-9a-f:]+\\]))(?::(\\d+))?((?:/~(?:[^\\\\/]+))?[\\\\/]))?(.+)?$', 'https://lusr\\example:wtf@[::1]:1234/D:\\x')",[206765]
"('URIish.java', 'org.eclipse.jgit.transport.URIish', '<init>', '^([a-z][a-z0-9+-]+)://(?:(?:([^/:@]+)(?::([^\\\\/]+))?@)?((?:[^\\\\/:]+)|(?:\\[[0-9a-f:]+\\]))(?::(\\d+))?((?:/~(?:[^\\\\/]+))?[\\\\/]))?(.+)?$', 'ssh+git://lusr\\example@[::1]:1234//')",[213251]
"('Description.java', 'org.junit.runner.Description', 'methodAndClassNamePatternGroupOrDefault', '([\\s\\S]*)\\((.*)\\)', 'testDeleteMiddleLines(org.eclipse.jgit.api.BlameCommandTest)')","[139757, 140142]"
"('URIish.java', 'org.eclipse.jgit.transport.URIish', '<init>', '^(file):([\\\\/](?![\\\\/])((?:[A-Za-z]:)?[\\\\/]?(?:(?:[^\\\\/]+[\\\\/]+)*[^\\\\/]+[\\\\/]*)))$', 'file:/tmp/jgit_test_1039595048602069369_tmp/tmp_1779983767005718860/.git/')",[56593]
"('Description.java', 'org.junit.runner.Description', 'methodAndClassNamePatternGroupOrDefault', '([\\s\\S]*)\\((.*)\\)', 'testHasChangeidWithReplacementInLastLine(org.eclipse.jgit.util.ChangeIdUtilTest)')","[32077, 32833]"
"('Description.java', 'org.junit.runner.Description', 'methodAndClassNamePatternGroupOrDefault', '([\\s\\S]*)\\((.*)\\)', 'repositoryWithNestedSubmodule(org.eclipse.jgit.submodule.SubmoduleWalkTest)')","[17070, 17260]"
"('Description.java', 'org.junit.runner.Description', 'methodAndClassNamePatternGroupOrDefault', '([\\s\\S]*)\\((.*)\\)', 'testEmptyMessages(org.eclipse.jgit.util.ChangeIdUtilTest)')","[31720, 32459]"
"('URIish.java', 'org.eclipse.jgit.transport.URIish', '<init>', '^(file):([\\\\/](?![\\\\/])((?:[A-Za-z]:)?[\\\\/]?(?:(?:[^\\\\/]+[\\\\/]+)*[^\\\\/]+[\\\\/]*)))$', 'ssh://lusr\\example@example.com:80/D:\\x')",[209502]
"('FastIgnoreRule.java', 'org.eclipse.jgit.ignore.FastIgnoreRule', 'isMatch', '[b-d][ab]', 'fa')",[100483]
"('URIish.java', 'org.eclipse.jgit.transport.URIish', '<init>', '^([a-z][a-z0-9+-]+)://(?:(?:([^/:@]+)(?::([^\\\\/]+))?@)?((?:[^\\\\/:]+)|(?:\\[[0-9a-f:]+\\]))(?::(\\d+))?((?:/~(?:[^\\\\/]+))?[\\\\/]))?(.+)?$', 'ssh+git://l usr\\example.com@[::1]:80/D:\\x')",[212469]
"('Description.java', 'org.junit.runner.Description', 'methodAndClassNamePatternGroupOrDefault', '([\\s\\S]*)\\((.*)\\)', 'resolveMasterCommits(org.eclipse.jgit.lib.ReflogResolveTest)')","[64301, 64430]"
"('URIish.java', 'org.eclipse.jgit.transport.URIish', '<init>', '^(file):([\\\\/](?![\\\\/])((?:[A-Za-z]:)?[\\\\/]?(?:(?:[^\\\\/]+[\\\\/]+)*[^\\\\/]+[\\\\/]*)))$', 'file:///tmp/jgit_test_5071656691698208479_tmp/tmp_3411914629949002968/.git/')",[14729]
"('URIish.java', 'org.eclipse.jgit.transport.URIish', '<init>', '^(file):([\\\\/](?![\\\\/])((?:[A-Za-z]:)?[\\\\/]?(?:(?:[^\\\\/]+[\\\\/]+)*[^\\\\/]+[\\\\/]*)))$', 'ssh://me@1.2.3.4/D:/x')","[221255, 221439]"
"('Description.java', 'org.junit.runner.Description', 'methodAndClassNamePatternGroupOrDefault', '([\\s\\S]*)\\((.*)\\)', 'testMixedGroupCase5[OldRule? false](org.eclipse.jgit.ignore.IgnoreRuleSpecialCasesTest)')","[85238, 92343]"
"('URIish.java', 'org.eclipse.jgit.transport.URIish', '<init>', '^(file):([\\\\/](?![\\\\/])((?:[A-Za-z]:)?[\\\\/]?(?:(?:[^\\\\/]+[\\\\/]+)*[^\\\\/]+[\\\\/]*)))$', 'ssh+git://l usr\\example.com:wtf@[::1]:80//')",[198270]
"('URIish.java', 'org.eclipse.jgit.transport.URIish', '<init>', '^(file):([\\\\/](?![\\\\/])((?:[A-Za-z]:)?[\\\\/]?(?:(?:[^\\\\/]+[\\\\/]+)*[^\\\\/]+[\\\\/]*)))$', 'http://lusr\\example:wtf@[::1]:80/D:\\x')",[202824]
"('URIish.java', 'org.eclipse.jgit.transport.URIish', '<init>', '^(?:([^/:@]+)(?::([^\\\\/]+))?@)?([^\\\\/:]{2,}):([\\\\/](?:(?:[^\\\\/]+[\\\\/]+)*[^\\\\/]+[\\\\/]*))$', '/tmp/jgit_test_1358523526465653191_tmp/tmp_2395600565988697857')","[161604, 161744, 161993]"
"('URIish.java', 'org.eclipse.jgit.transport.URIish', '<init>', '^(file):([\\\\/](?![\\\\/])((?:[A-Za-z]:)?[\\\\/]?(?:(?:[^\\\\/]+[\\\\/]+)*[^\\\\/]+[\\\\/]*)))$', 'http://l usr\\example.com@[::1]//')","[229259, 229443]"
"('URIish.java', 'org.eclipse.jgit.transport.URIish', '<init>', '^(file):([\\\\/](?![\\\\/])((?:[A-Za-z]:)?[\\\\/]?(?:(?:[^\\\\/]+[\\\\/]+)*[^\\\\/]+[\\\\/]*)))$', '/tmp/jgit_test_2307217292654954211_tmp/tmp_6715492902754415962.git')",[184047]
"('URIish.java', 'org.eclipse.jgit.transport.URIish', '<init>', '^(file):([\\\\/](?![\\\\/])((?:[A-Za-z]:)?[\\\\/]?(?:(?:[^\\\\/]+[\\\\/]+)*[^\\\\/]+[\\\\/]*)))$', 'ssh+git://lusr\\example@1.2.3.4:1234/D:\\x')",[212998]
"('URIish.java', 'org.eclipse.jgit.transport.URIish', '<init>', '^([\\\\/]?((?:[A-Za-z]:)?[\\\\/]?(?:(?:[^\\\\/]+[\\\\/]+)*[^\\\\/]+[\\\\/]*)))$', '/home/m y')","[248671, 248786]"
"('Description.java', 'org.junit.runner.Description', 'methodAndClassNamePatternGroupOrDefault', '([\\s\\S]*)\\((.*)\\)', 'testGetRef_CorruptObjectIdReference(org.eclipse.jgit.internal.storage.file.RefDirectoryTest)')","[111139, 112329]"
"('Description.java', 'org.junit.runner.Description', 'methodAndClassNamePatternGroupOrDefault', '([\\s\\S]*)\\((.*)\\)', 'testStandardFormat_LargeObject(org.eclipse.jgit.internal.storage.file.UnpackedObjectTest)')","[121853, 122183]"
"('Description.java', 'org.junit.runner.Description', 'methodAndClassNamePatternGroupOrDefault', '([\\s\\S]*)\\((.*)\\)', 'testNoFooters_ShortBodyNoLF(org.eclipse.jgit.revwalk.FooterLineTest)')","[173801, 174218]"
"('URIish.java', 'org.eclipse.jgit.transport.URIish', '<init>', '^(?:([^/:@]+)(?::([^\\\\/]+))?@)?((?:[^\\\\/:]+)|(?:\\[[0-9a-f:]+\\])):((?:(?:/~(?:[^\\\\/]+))[\\\\/])?(?:(?:[^\\\\/]+[\\\\/]+)*[^\\\\/]+[\\\\/]*))$', '/more/dirs')","[255032, 255732, 257368]"
"('Description.java', 'org.junit.runner.Description', 'methodAndClassNamePatternGroupOrDefault', '([\\s\\S]*)\\((.*)\\)', 'testStandardFormat_InvalidType(org.eclipse.jgit.internal.storage.file.UnpackedObjectTest)')","[121580, 121897]"
"('Description.java', 'org.junit.runner.Description', 'methodAndClassNamePatternGroupOrDefault', '([\\s\\S]*)\\((.*)\\)', 'testUpdateDeleteNonExisting(org.eclipse.jgit.transport.PushProcessTest)')","[203568, 204123]"
"('Description.java', 'org.junit.runner.Description', 'methodAndClassNamePatternGroupOrDefault', '([\\s\\S]*)\\((.*)\\)', 'testRenameOverNonExistingFile(org.eclipse.jgit.util.FileUtilTest)')","[23394, 23737]"
"('Description.java', 'org.junit.runner.Description', 'methodAndClassNamePatternGroupOrDefault', '([\\s\\S]*)\\((.*)\\)', 'testPullWithRebaseConfig2(org.eclipse.jgit.api.PullCommandTest)')","[144483, 144823]"
"('Description.java', 'org.junit.runner.Description', 'methodAndClassNamePatternGroupOrDefault', '([\\s\\S]*)\\((.*)\\)', 'testReadBoolean_TrueFalse1(org.eclipse.jgit.lib.ConfigTest)')","[70062, 70808]"
"('URIish.java', 'org.eclipse.jgit.transport.URIish', '<init>', '^(file):([\\\\/](?![\\\\/])((?:[A-Za-z]:)?[\\\\/]?(?:(?:[^\\\\/]+[\\\\/]+)*[^\\\\/]+[\\\\/]*)))$', 'ssh+git://me:wtf@[::1]:80//')",[197166]
"('AttributesRule.java', 'org.eclipse.jgit.attributes.AttributesRule', 'isMatch', '.*\\.st.', 'test.sta1')",[73923]
"('Description.java', 'org.junit.runner.Description', 'methodAndClassNamePatternGroupOrDefault', '([\\s\\S]*)\\((.*)\\)', 'testBreakModify_DontBreakAboveScore(org.eclipse.jgit.diff.RenameDetectorTest)')","[4645, 5208]"
"('Description.java', 'org.junit.runner.Description', 'methodAndClassNamePatternGroupOrDefault', '([\\s\\S]*)\\((.*)\\)', 'testGetByte(org.eclipse.jgit.lib.ObjectIdTest)')","[53549, 53828]"
"('Description.java', 'org.junit.runner.Description', 'methodAndClassNamePatternGroupOrDefault', '([\\s\\S]*)\\((.*)\\)', 't1sameDepthT2(org.eclipse.jgit.api.DescribeCommandTest)')","[128213, 128341]"
"('Description.java', 'org.junit.runner.Description', 'methodAndClassNamePatternGroupOrDefault', '([\\s\\S]*)\\((.*)\\)', 'testVerySimplePatternCase1(org.eclipse.jgit.fnmatch.FileNameMatcherTest)')","[42322, 45624]"
"('Description.java', 'org.junit.runner.Description', 'methodAndClassNamePatternGroupOrDefault', '([\\s\\S]*)\\((.*)\\)', 'testNoAttributes(org.eclipse.jgit.attributes.AttributesNodeWorkingTreeIteratorTest)')","[73250, 73335]"
"('Description.java', 'org.junit.runner.Description', 'methodAndClassNamePatternGroupOrDefault', '([\\s\\S]*)\\((.*)\\)', 'testDigitGroupCase2(org.eclipse.jgit.fnmatch.FileNameMatcherTest)')","[42910, 46240]"
"('URIish.java', 'org.eclipse.jgit.transport.URIish', '<init>', '^([a-z][a-z0-9+-]+)://(?:(?:([^/:@]+)(?::([^\\\\/]+))?@)?((?:[^\\\\/:]+)|(?:\\[[0-9a-f:]+\\]))(?::(\\d+))?((?:/~(?:[^\\\\/]+))?[\\\\/]))?(.+)?$', 'https://lusr\\example:wtf@example.com:80//abc')",[206121]
"('Description.java', 'org.junit.runner.Description', 'methodAndClassNamePatternGroupOrDefault', '([\\s\\S]*)\\((.*)\\)', 'testLargeTreesWithoutConflict(org.eclipse.jgit.notes.NoteMapMergerTest)')","[259548, 259917]"
"('Description.java', 'org.junit.runner.Description', 'methodAndClassNamePatternGroupOrDefault', '([\\s\\S]*)\\((.*)\\)', 'relativeGitDirRef(org.eclipse.jgit.internal.storage.file.FileRepositoryBuilderTest)')","[118618, 118769]"
"('Description.java', 'org.junit.runner.Description', 'methodAndClassNamePatternGroupOrDefault', '([\\s\\S]*)\\((.*)\\)', 'testCRC32(org.eclipse.jgit.internal.storage.file.PackIndexV1Test)')","[113542, 113669]"
"('Description.java', 'org.junit.runner.Description', 'methodAndClassNamePatternGroupOrDefault', '([\\s\\S]*)\\((.*)\\)', 'testCombinedRangesInOneGroupCase2(org.eclipse.jgit.fnmatch.FileNameMatcherTest)')","[41692, 44964]"
"('URIish.java', 'org.eclipse.jgit.transport.URIish', '<init>', '^([a-z][a-z0-9+-]+)://(?:(?:([^/:@]+)(?::([^\\\\/]+))?@)?((?:[^\\\\/:]+)|(?:\\[[0-9a-f:]+\\]))(?::(\\d+))?((?:/~(?:[^\\\\/]+))?[\\\\/]))?(.+)?$', 'ssh+git://l usr\\example.com:wtf@example.com:80/D:\\x')",[197695]
"('URIish.java', 'org.eclipse.jgit.transport.URIish', '<init>', '^([a-z][a-z0-9+-]+)://(?:(?:([^/:@]+)(?::([^\\\\/]+))?@)?((?:[^\\\\/:]+)|(?:\\[[0-9a-f:]+\\]))(?::(\\d+))?((?:/~(?:[^\\\\/]+))?[\\\\/]))?(.+)?$', 'ssh://lusr\\example:wtf@1.2.3.4:80/D:/x')",[195019]
"('URIish.java', 'org.eclipse.jgit.transport.URIish', '<init>', '^(file):([\\\\/](?![\\\\/])((?:[A-Za-z]:)?[\\\\/]?(?:(?:[^\\\\/]+[\\\\/]+)*[^\\\\/]+[\\\\/]*)))$', 'ssh://lusr\\example@example.com:1234//')",[209180]
"('Description.java', 'org.junit.runner.Description', 'methodAndClassNamePatternGroupOrDefault', '([\\s\\S]*)\\((.*)\\)', 'testContainsDot(org.eclipse.jgit.lib.ValidRefNameTest)')","[65886, 66254]"
"('URIish.java', 'org.eclipse.jgit.transport.URIish', '<init>', '^([a-z][a-z0-9+-]+)://(?:(?:([^/:@]+)(?::([^\\\\/]+))?@)?((?:[^\\\\/:]+)|(?:\\[[0-9a-f:]+\\]))(?::(\\d+))?((?:/~(?:[^\\\\/]+))?[\\\\/]))?(.+)?$', 'ssh+git://me@1.2.3.4//')","[224498, 224682]"
"('Description.java', 'org.junit.runner.Description', 'methodAndClassNamePatternGroupOrDefault', '([\\s\\S]*)\\((.*)\\)', 'testRebaseWithAutoStash(org.eclipse.jgit.api.RebaseCommandTest)')","[132251, 133778]"
"('URIish.java', 'org.eclipse.jgit.transport.URIish', '<init>', '^([a-z][a-z0-9+-]+)://(?:(?:([^/:@]+)(?::([^\\\\/]+))?@)?((?:[^\\\\/:]+)|(?:\\[[0-9a-f:]+\\]))(?::(\\d+))?((?:/~(?:[^\\\\/]+))?[\\\\/]))?(.+)?$', 'http://me@[::1]:1234/D:\\x')",[214493]
"('Description.java', 'org.junit.runner.Description', 'methodAndClassNamePatternGroupOrDefault', '([\\s\\S]*)\\((.*)\\)', 'testAddA1(org.eclipse.jgit.api.ApplyCommandTest)')","[163672, 163905]"
"('URIish.java', 'org.eclipse.jgit.transport.URIish', '<init>', '^([a-z][a-z0-9+-]+)://(?:(?:([^/:@]+)(?::([^\\\\/]+))?@)?((?:[^\\\\/:]+)|(?:\\[[0-9a-f:]+\\]))(?::(\\d+))?((?:/~(?:[^\\\\/]+))?[\\\\/]))?(.+)?$', 'ssh+git://l usr\\example.com@example.com:1234/D:\\x')",[211549]
"('Description.java', 'org.junit.runner.Description', 'methodAndClassNamePatternGroupOrDefault', '([\\s\\S]*)\\((.*)\\)', 'testStopOnLastConflictAndSkip(org.eclipse.jgit.api.RebaseCommandTest)')","[132377, 133910]"
"('Description.java', 'org.junit.runner.Description', 'methodAndClassNamePatternGroupOrDefault', '([\\s\\S]*)\\((.*)\\)', 'org.eclipse.jgit.revwalk.RevCommitParseTest')","[182278, 183032]"
"('Description.java', 'org.junit.runner.Description', 'methodAndClassNamePatternGroupOrDefault', '([\\s\\S]*)\\((.*)\\)', 'testEmptyGitAttributeFile(org.eclipse.jgit.attributes.AttributesNodeWorkingTreeIteratorTest)')","[73313, 73401]"
"('URIish.java', 'org.eclipse.jgit.transport.URIish', '<init>', '^(file):([\\\\/](?![\\\\/])((?:[A-Za-z]:)?[\\\\/]?(?:(?:[^\\\\/]+[\\\\/]+)*[^\\\\/]+[\\\\/]*)))$', 'file:/tmp/jgit_test_500639673404351849_tmp/tmp_8516621355928323871.git/')",[13966]
"('Description.java', 'org.junit.runner.Description', 'methodAndClassNamePatternGroupOrDefault', '([\\s\\S]*)\\((.*)\\)', 'testFormatBase10(org.eclipse.jgit.util.RawParseUtils_FormatTest)')","[39454, 39476]"
"('Description.java', 'org.junit.runner.Description', 'methodAndClassNamePatternGroupOrDefault', '([\\s\\S]*)\\((.*)\\)', 'testMkdirs(org.eclipse.jgit.util.FileUtilTest)')","[23457, 23803]"
"('Description.java', 'org.junit.runner.Description', 'methodAndClassNamePatternGroupOrDefault', '([\\s\\S]*)\\((.*)\\)', 'testUsingHiddenCommonBlobFails(org.eclipse.jgit.transport.ReceivePackAdvertiseRefsHookTest)')","[183131, 183281]"
"('Description.java', 'org.junit.runner.Description', 'methodAndClassNamePatternGroupOrDefault', '([\\s\\S]*)\\((.*)\\)', 'testCntrlGroupCase0(org.eclipse.jgit.fnmatch.FileNameMatcherTest)')","[42259, 45558]"
"('Description.java', 'org.junit.runner.Description', 'methodAndClassNamePatternGroupOrDefault', '([\\s\\S]*)\\((.*)\\)', 'testDegenerate_InsertMiddle(org.eclipse.jgit.diff.MyersDiffTest)')","[8875, 9312]"
"('URIish.java', 'org.eclipse.jgit.transport.URIish', '<init>', '^([a-z][a-z0-9+-]+)://(?:(?:([^/:@]+)(?::([^\\\\/]+))?@)?((?:[^\\\\/:]+)|(?:\\[[0-9a-f:]+\\]))(?::(\\d+))?((?:/~(?:[^\\\\/]+))?[\\\\/]))?(.+)?$', 'https://lusr\\example:wtf@1.2.3.4:1234/D:/x')",[206351]
"('URIish.java', 'org.eclipse.jgit.transport.URIish', '<init>', '^(file):([\\\\/](?![\\\\/])((?:[A-Za-z]:)?[\\\\/]?(?:(?:[^\\\\/]+[\\\\/]+)*[^\\\\/]+[\\\\/]*)))$', 'https://lusr\\example@example.com:80/D:/x')",[219967]
"('Description.java', 'org.junit.runner.Description', 'methodAndClassNamePatternGroupOrDefault', '([\\s\\S]*)\\((.*)\\)', 'org.eclipse.jgit.api.BranchCommandTest')","[128590, 130658]"
"('URIish.java', 'org.eclipse.jgit.transport.URIish', '<init>', '^(file):([\\\\/](?![\\\\/])((?:[A-Za-z]:)?[\\\\/]?(?:(?:[^\\\\/]+[\\\\/]+)*[^\\\\/]+[\\\\/]*)))$', 'file:///a/b.txt')",[191478]
"('URIish.java', 'org.eclipse.jgit.transport.URIish', '<init>', '^(file):([\\\\/](?![\\\\/])((?:[A-Za-z]:)?[\\\\/]?(?:(?:[^\\\\/]+[\\\\/]+)*[^\\\\/]+[\\\\/]*)))$', 'https://[::1]/D:/x')","[244807, 244991, 245911, 246095, 247015, 247199]"
"('AttributesRule.java', 'org.eclipse.jgit.attributes.AttributesRule', 'isMatch', '.*\\.sta[0-5]', 'test.sta5')","[74085, 75229]"
"('URIish.java', 'org.eclipse.jgit.transport.URIish', '<init>', '^([a-z][a-z0-9+-]+)://(?:(?:([^/:@]+)(?::([^\\\\/]+))?@)?((?:[^\\\\/:]+)|(?:\\[[0-9a-f:]+\\]))(?::(\\d+))?((?:/~(?:[^\\\\/]+))?[\\\\/]))?(.+)?$', 'http://me@example.com:80//abc')",[213849]
"('URIish.java', 'org.eclipse.jgit.transport.URIish', '<init>', '^([a-z][a-z0-9+-]+)://(?:(?:([^/:@]+)(?::([^\\\\/]+))?@)?((?:[^\\\\/:]+)|(?:\\[[0-9a-f:]+\\]))(?::(\\d+))?((?:/~(?:[^\\\\/]+))?[\\\\/]))?(.+)?$', 'https://l usr\\example.com@1.2.3.4:1234//')",[218978]
"('Description.java', 'org.junit.runner.Description', 'methodAndClassNamePatternGroupOrDefault', '([\\s\\S]*)\\((.*)\\)', 'testUpperGroupCase3[OldRule? true](org.eclipse.jgit.ignore.IgnoreRuleSpecialCasesTest)')","[90871, 97955]"
"('URIish.java', 'org.eclipse.jgit.transport.URIish', '<init>', '^(file):([\\\\/](?![\\\\/])((?:[A-Za-z]:)?[\\\\/]?(?:(?:[^\\\\/]+[\\\\/]+)*[^\\\\/]+[\\\\/]*)))$', '/a/b/c//')",[252446]
"('Description.java', 'org.junit.runner.Description', 'methodAndClassNamePatternGroupOrDefault', '([\\s\\S]*)\\((.*)\\)', 'dropMiddleStashCommit(org.eclipse.jgit.api.StashDropCommandTest)')","[124352, 124522]"
"('Description.java', 'org.junit.runner.Description', 'methodAndClassNamePatternGroupOrDefault', '([\\s\\S]*)\\((.*)\\)', 'testSpecialGroupCase3[OldRule? true](org.eclipse.jgit.ignore.IgnoreRuleSpecialCasesTest)')","[88387, 95471]"
"('FastIgnoreRule.java', 'org.eclipse.jgit.ignore.FastIgnoreRule', 'isMatch', '[v-z]', 'c')","[79080, 79134, 79188, 79269]"
"('Description.java', 'org.junit.runner.Description', 'methodAndClassNamePatternGroupOrDefault', '([\\s\\S]*)\\((.*)\\)', 'testMultiLineMessagesWithoutFooter(org.eclipse.jgit.util.ChangeIdUtilTest)')","[32266, 33031]"
"('FastIgnoreRule.java', 'org.eclipse.jgit.ignore.FastIgnoreRule', 'isMatch', 'a.b', 'a')",[101263]
"('Description.java', 'org.junit.runner.Description', 'methodAndClassNamePatternGroupOrDefault', '([\\s\\S]*)\\((.*)\\)', 'testFilter_NONE_And_ALL(org.eclipse.jgit.revwalk.RevWalkFilterTest)')","[180731, 181056]"
"('Description.java', 'org.junit.runner.Description', 'methodAndClassNamePatternGroupOrDefault', '([\\s\\S]*)\\((.*)\\)', 'testIsValidPath(org.eclipse.jgit.dircache.DirCacheEntryTest)')","[172664, 172793]"
"('URIish.java', 'org.eclipse.jgit.transport.URIish', '<init>', '^(file):([\\\\/](?![\\\\/])((?:[A-Za-z]:)?[\\\\/]?(?:(?:[^\\\\/]+[\\\\/]+)*[^\\\\/]+[\\\\/]*)))$', 'http://l usr\\example.com:wtf@example.com:80//abc')",[200892]
"('Description.java', 'org.junit.runner.Description', 'methodAndClassNamePatternGroupOrDefault', '([\\s\\S]*)\\((.*)\\)', 'testUnknown(org.eclipse.jgit.transport.RemoteConfigTest)')","[253359, 253915]"
"('URIish.java', 'org.eclipse.jgit.transport.URIish', '<init>', '^(file):([\\\\/](?![\\\\/])((?:[A-Za-z]:)?[\\\\/]?(?:(?:[^\\\\/]+[\\\\/]+)*[^\\\\/]+[\\\\/]*)))$', 'http://lusr\\example@example.com/D:\\x')","[229765, 229949]"
"('Description.java', 'org.junit.runner.Description', 'methodAndClassNamePatternGroupOrDefault', '([\\s\\S]*)\\((.*)\\)', 'testPullWithMergeConfig2(org.eclipse.jgit.api.PullCommandTest)')","[144546, 144889]"
"('URIish.java', 'org.eclipse.jgit.transport.URIish', '<init>', '^([a-z][a-z0-9+-]+)://(?:(?:([^/:@]+)(?::([^\\\\/]+))?@)?((?:[^\\\\/:]+)|(?:\\[[0-9a-f:]+\\]))(?::(\\d+))?((?:/~(?:[^\\\\/]+))?[\\\\/]))?(.+)?$', 'http://l usr\\example.com@[::1]:1234/D:/x')",[215551]
"('Description.java', 'org.junit.runner.Description', 'methodAndClassNamePatternGroupOrDefault', '([\\s\\S]*)\\((.*)\\)', 'org.eclipse.jgit.transport.ReceivePackAdvertiseRefsHookTest')","[183068, 189201]"
"('Description.java', 'org.junit.runner.Description', 'methodAndClassNamePatternGroupOrDefault', '([\\s\\S]*)\\((.*)\\)', 'testUpperGroupCase0[OldRule? false](org.eclipse.jgit.ignore.IgnoreRuleSpecialCasesTest)')","[87239, 94344]"
"('Description.java', 'org.junit.runner.Description', 'methodAndClassNamePatternGroupOrDefault', '([\\s\\S]*)\\((.*)\\)', 'testAddHugeFile(org.eclipse.jgit.api.HugeFileTest)')","[128509, 128531]"
"('URIish.java', 'org.eclipse.jgit.transport.URIish', '<init>', '^(?:([^/:@]+)(?::([^\\\\/]+))?@)?([^\\\\/:]{2,}):([\\\\/](?:(?:[^\\\\/]+[\\\\/]+)*[^\\\\/]+[\\\\/]*))$', '/tmp/jgit_test_4286677760507975988_tmp/tmp_6334190847139878105')","[147542, 147682, 147902]"
"('Description.java', 'org.junit.runner.Description', 'methodAndClassNamePatternGroupOrDefault', '([\\s\\S]*)\\((.*)\\)', 'testEmpty_DefaultCapacity(org.eclipse.jgit.util.IntListTest)')","[28192, 28431]"
"('ChangeIdUtil.java', 'org.eclipse.jgit.util.ChangeIdUtil', 'indexOfChangeId', '(^Change-Id: *I[a-f0-9]{40}$)', 'Fix-A-Widget: this thing')",[36725]
"('Description.java', 'org.junit.runner.Description', 'methodAndClassNamePatternGroupOrDefault', '([\\s\\S]*)\\((.*)\\)', 'org.eclipse.jgit.revwalk.FooterLineTest')","[173423, 174870]"
"('Description.java', 'org.junit.runner.Description', 'methodAndClassNamePatternGroupOrDefault', '([\\s\\S]*)\\((.*)\\)', 'invalidWhenOnlySourceWildcard(org.eclipse.jgit.transport.RefSpecTest)')","[187032, 187775]"
"('Description.java', 'org.junit.runner.Description', 'methodAndClassNamePatternGroupOrDefault', '([\\s\\S]*)\\((.*)\\)', 'testUserPasswordAndPort(org.eclipse.jgit.transport.URIishTest)')","[189136, 190546]"
"('Description.java', 'org.junit.runner.Description', 'methodAndClassNamePatternGroupOrDefault', '([\\s\\S]*)\\((.*)\\)', 'testWriteIndex(org.eclipse.jgit.internal.storage.file.PackWriterTest)')","[117719, 118167]"
"('Description.java', 'org.junit.runner.Description', 'methodAndClassNamePatternGroupOrDefault', '([\\s\\S]*)\\((.*)\\)', 'testCherryPickNoCommit(org.eclipse.jgit.api.CherryPickCommandTest)')","[168215, 168470]"
"('Description.java', 'org.junit.runner.Description', 'methodAndClassNamePatternGroupOrDefault', '([\\s\\S]*)\\((.*)\\)', 'testTwoRangesInOneGroupCase4[OldRule? false](org.eclipse.jgit.ignore.IgnoreRuleSpecialCasesTest)')","[88044, 95149]"
"('URIish.java', 'org.eclipse.jgit.transport.URIish', '<init>', '^(file):([\\\\/](?![\\\\/])((?:[A-Za-z]:)?[\\\\/]?(?:(?:[^\\\\/]+[\\\\/]+)*[^\\\\/]+[\\\\/]*)))$', 'https://lusr\\example@1.2.3.4:1234/D:\\x')",[220197]
"('URIish.java', 'org.eclipse.jgit.transport.URIish', '<init>', '^(file):([\\\\/](?![\\\\/])((?:[A-Za-z]:)?[\\\\/]?(?:(?:[^\\\\/]+[\\\\/]+)*[^\\\\/]+[\\\\/]*)))$', 'http://lusr\\example@example.com:80//abc')",[216034]
"('URIish.java', 'org.eclipse.jgit.transport.URIish', '<init>', '^([\\\\/]?((?:[A-Za-z]:)?[\\\\/]?(?:(?:[^\\\\/]+[\\\\/]+)*[^\\\\/]+[\\\\/]*)))$', '/tmp/jgit_test_3041254964624474396_tmp/tmp_2406781432731361300')","[160884, 161029, 161179, 161420]"
"('URIish.java', 'org.eclipse.jgit.transport.URIish', '<init>', '^(file):([\\\\/](?![\\\\/])((?:[A-Za-z]:)?[\\\\/]?(?:(?:[^\\\\/]+[\\\\/]+)*[^\\\\/]+[\\\\/]*)))$', 'http://l usr\\example.com@[::1]/D:/x')","[229351, 229535]"
"('Description.java', 'org.junit.runner.Description', 'methodAndClassNamePatternGroupOrDefault', '([\\s\\S]*)\\((.*)\\)', 'testVerySimpleWildCardCase2[OldRule? false](org.eclipse.jgit.ignore.IgnoreRuleSpecialCasesTest)')","[85008, 92113]"
"('Description.java', 'org.junit.runner.Description', 'methodAndClassNamePatternGroupOrDefault', '([\\s\\S]*)\\((.*)\\)', 'testRemoveRejectsBadIndexes(org.eclipse.jgit.util.BlockListTest)')","[27533, 27789]"
"('Description.java', 'org.junit.runner.Description', 'methodAndClassNamePatternGroupOrDefault', '([\\s\\S]*)\\((.*)\\)', 'testLocalTransportFetchWithoutLocalRepository(org.eclipse.jgit.transport.TransportTest)')","[254502, 254676]"
"('Description.java', 'org.junit.runner.Description', 'methodAndClassNamePatternGroupOrDefault', '([\\s\\S]*)\\((.*)\\)', 'submoduleDirectoryIterator(org.eclipse.jgit.treewalk.FileTreeIteratorTest)')","[262187, 262534]"
"('FastIgnoreRule.java', 'org.eclipse.jgit.ignore.FastIgnoreRule', 'isMatch', '.*\\.sta[0-5]', 'test.stag')","[104828, 106058]"
"('Description.java', 'org.junit.runner.Description', 'methodAndClassNamePatternGroupOrDefault', '([\\s\\S]*)\\((.*)\\)', 'testAlphaGroupCase1(org.eclipse.jgit.fnmatch.FileNameMatcherTest)')","[42448, 45756]"
"('URIish.java', 'org.eclipse.jgit.transport.URIish', '<init>', '^([a-z][a-z0-9+-]+)://(?:(?:([^/:@]+)(?::([^\\\\/]+))?@)?((?:[^\\\\/:]+)|(?:\\[[0-9a-f:]+\\]))(?::(\\d+))?((?:/~(?:[^\\\\/]+))?[\\\\/]))?(.+)?$', 'https://me@1.2.3.4:1234/D:\\x')",[217437]
"('Description.java', 'org.junit.runner.Description', 'methodAndClassNamePatternGroupOrDefault', '([\\s\\S]*)\\((.*)\\)', 'testAddGetAndContains(org.eclipse.jgit.lib.ObjectIdSubclassMapTest)')","[63983, 64135]"
"('Description.java', 'org.junit.runner.Description', 'methodAndClassNamePatternGroupOrDefault', '([\\s\\S]*)\\((.*)\\)', 'testEncodeInt64(org.eclipse.jgit.util.NBTest)')","[39198, 39374]"
"('QuotedString.java', 'org.eclipse.jgit.util.QuotedString$BourneUserPathStyle', 'quote', '^~[A-Za-z0-9_-]+$', ""'"")","[29970, 29995]"
"('URIish.java', 'org.eclipse.jgit.transport.URIish', '<init>', '^([a-z][a-z0-9+-]+)://(?:(?:([^/:@]+)(?::([^\\\\/]+))?@)?((?:[^\\\\/:]+)|(?:\\[[0-9a-f:]+\\]))(?::(\\d+))?((?:/~(?:[^\\\\/]+))?[\\\\/]))?(.+)?$', 'file:///home/m%c3%a5y')","[190834, 190880]"
"('Description.java', 'org.junit.runner.Description', 'methodAndClassNamePatternGroupOrDefault', '([\\s\\S]*)\\((.*)\\)', 'org.eclipse.jgit.api.MergeCommandTest')","[126118, 134087]"
"('Description.java', 'org.junit.runner.Description', 'methodAndClassNamePatternGroupOrDefault', '([\\s\\S]*)\\((.*)\\)', 'testMaliciousGitPathEndSpaceWindows(org.eclipse.jgit.lib.DirCacheCheckoutMaliciousPathTest)')","[67306, 68229]"
"('URIish.java', 'org.eclipse.jgit.transport.URIish', '<init>', '^(file):([\\\\/](?![\\\\/])((?:[A-Za-z]:)?[\\\\/]?(?:(?:[^\\\\/]+[\\\\/]+)*[^\\\\/]+[\\\\/]*)))$', 'http://l usr\\example.com@example.com:1234/D:/x')",[214792]
"('URIish.java', 'org.eclipse.jgit.transport.URIish', '<init>', '^(file):([\\\\/](?![\\\\/])((?:[A-Za-z]:)?[\\\\/]?(?:(?:[^\\\\/]+[\\\\/]+)*[^\\\\/]+[\\\\/]*)))$', 'git://')",[247291]
"('URIish.java', 'org.eclipse.jgit.transport.URIish', '<init>', '^([a-z][a-z0-9+-]+)://(?:(?:([^/:@]+)(?::([^\\\\/]+))?@)?((?:[^\\\\/:]+)|(?:\\[[0-9a-f:]+\\]))(?::(\\d+))?((?:/~(?:[^\\\\/]+))?[\\\\/]))?(.+)?$', 'http://me:wtf@[::1]:80//abc')",[200547]
"('Description.java', 'org.junit.runner.Description', 'methodAndClassNamePatternGroupOrDefault', '([\\s\\S]*)\\((.*)\\)', 'testEmpty(org.eclipse.jgit.notes.LeafBucketTest)')","[260128, 260361]"
"('Description.java', 'org.junit.runner.Description', 'methodAndClassNamePatternGroupOrDefault', '([\\s\\S]*)\\((.*)\\)', 'testRevertDirtyIndex(org.eclipse.jgit.api.RevertCommandTest)')","[125515, 125726]"
"('Description.java', 'org.junit.runner.Description', 'methodAndClassNamePatternGroupOrDefault', '([\\s\\S]*)\\((.*)\\)', 'testOnlyOption_f1_2_e(org.eclipse.jgit.api.CommitOnlyTest)')","[134626, 136657]"
"('URIish.java', 'org.eclipse.jgit.transport.URIish', '<init>', '^(file):([\\\\/](?![\\\\/])((?:[A-Za-z]:)?[\\\\/]?(?:(?:[^\\\\/]+[\\\\/]+)*[^\\\\/]+[\\\\/]*)))$', 'ssh+git://lusr\\example@1.2.3.4/D:/x')","[226775, 226959]"
"('Description.java', 'org.junit.runner.Description', 'methodAndClassNamePatternGroupOrDefault', '([\\s\\S]*)\\((.*)\\)', 'resolveTwoLevelHigherRelativeUrl(org.eclipse.jgit.submodule.SubmoduleInitTest)')","[19463, 19612]"
"('ChangeIdUtil.java', 'org.eclipse.jgit.util.ChangeIdUtil', 'indexOfFirstFooterLine', '(^[a-zA-Z0-9-]+:(?!//).*$)', 'Bug:1234567')","[16706, 16836]"
"('Description.java', 'org.junit.runner.Description', 'methodAndClassNamePatternGroupOrDefault', '([\\s\\S]*)\\((.*)\\)', 'testInvalidTagNoTagHeader2(org.eclipse.jgit.lib.ObjectCheckerTest)')","[49634, 52176]"
"('Description.java', 'org.junit.runner.Description', 'methodAndClassNamePatternGroupOrDefault', '([\\s\\S]*)\\((.*)\\)', 'testDiffCached(org.eclipse.jgit.api.DiffCommandTest)')","[166422, 166552]"
"('URIish.java', 'org.eclipse.jgit.transport.URIish', '<init>', '^(file):([\\\\/](?![\\\\/])((?:[A-Za-z]:)?[\\\\/]?(?:(?:[^\\\\/]+[\\\\/]+)*[^\\\\/]+[\\\\/]*)))$', 'https://l usr\\example.com@1.2.3.4:80/D:\\x')",[219277]
"('URIish.java', 'org.eclipse.jgit.transport.URIish', '<init>', '^([a-z][a-z0-9+-]+)://(?:(?:([^/:@]+)(?::([^\\\\/]+))?@)?((?:[^\\\\/:]+)|(?:\\[[0-9a-f:]+\\]))(?::(\\d+))?((?:/~(?:[^\\\\/]+))?[\\\\/]))?(.+)?$', 'http://l usr\\example.com:wtf@[::1]:80//abc')",[201651]
"('Description.java', 'org.junit.runner.Description', 'methodAndClassNamePatternGroupOrDefault', '([\\s\\S]*)\\((.*)\\)', 'testMaliciousAbsoluteUNCPathWindows1OnUnix(org.eclipse.jgit.lib.DirCacheCheckoutMaliciousPathTest)')","[66550, 67437]"
"('URIish.java', 'org.eclipse.jgit.transport.URIish', '<init>', '^([a-z][a-z0-9+-]+)://(?:(?:([^/:@]+)(?::([^\\\\/]+))?@)?((?:[^\\\\/:]+)|(?:\\[[0-9a-f:]+\\]))(?::(\\d+))?((?:/~(?:[^\\\\/]+))?[\\\\/]))?(.+)?$', 'ssh+git://me:wtf@example.com:80/D:/x')",[196545]
"('Description.java', 'org.junit.runner.Description', 'methodAndClassNamePatternGroupOrDefault', '([\\s\\S]*)\\((.*)\\)', 'testGraphGroupCase1(org.eclipse.jgit.fnmatch.FileNameMatcherTest)')","[41965, 45250]"
"('Description.java', 'org.junit.runner.Description', 'methodAndClassNamePatternGroupOrDefault', '([\\s\\S]*)\\((.*)\\)', 'org.eclipse.jgit.internal.storage.file.ReflogReaderTest')","[118894, 119261]"
"('URIish.java', 'org.eclipse.jgit.transport.URIish', '<init>', '^(file):([\\\\/](?![\\\\/])((?:[A-Za-z]:)?[\\\\/]?(?:(?:[^\\\\/]+[\\\\/]+)*[^\\\\/]+[\\\\/]*)))$', '/tmp/jgit_test_4895667423267485854_tmp/tmp_229822824317133648')","[152839, 152964, 153113]"
"('Description.java', 'org.junit.runner.Description', 'methodAndClassNamePatternGroupOrDefault', '([\\s\\S]*)\\((.*)\\)', 'testVerySimpleGroupRangeCase4(org.eclipse.jgit.fnmatch.FileNameMatcherTest)')","[43078, 46416]"
"('URIish.java', 'org.eclipse.jgit.transport.URIish', '<init>', '^(file):([\\\\/](?![\\\\/])((?:[A-Za-z]:)?[\\\\/]?(?:(?:[^\\\\/]+[\\\\/]+)*[^\\\\/]+[\\\\/]*)))$', 'http://me@example.com:80//')",[213780]
"('URIish.java', 'org.eclipse.jgit.transport.URIish', '<init>', '^([a-z][a-z0-9+-]+)://(?:(?:([^/:@]+)(?::([^\\\\/]+))?@)?((?:[^\\\\/:]+)|(?:\\[[0-9a-f:]+\\]))(?::(\\d+))?((?:/~(?:[^\\\\/]+))?[\\\\/]))?(.+)?$', 'ssh://lusr\\example:wtf@1.2.3.4:80//abc')",[194973]
"('Description.java', 'org.junit.runner.Description', 'methodAndClassNamePatternGroupOrDefault', '([\\s\\S]*)\\((.*)\\)', 'testStopOnConflictAndContinue(org.eclipse.jgit.api.RebaseCommandTest)')","[132062, 133580]"
"('URIish.java', 'org.eclipse.jgit.transport.URIish', '<init>', '^(file):([\\\\/](?![\\\\/])((?:[A-Za-z]:)?[\\\\/]?(?:(?:[^\\\\/]+[\\\\/]+)*[^\\\\/]+[\\\\/]*)))$', 'http://lusr\\example@example.com:1234//')",[215804]
"('Description.java', 'org.junit.runner.Description', 'methodAndClassNamePatternGroupOrDefault', '([\\s\\S]*)\\((.*)\\)', 'testType_Empty(org.eclipse.jgit.diff.EditTest)')","[5863, 6201]"
"('Description.java', 'org.junit.runner.Description', 'methodAndClassNamePatternGroupOrDefault', '([\\s\\S]*)\\((.*)\\)', 'testSetDestination(org.eclipse.jgit.transport.RefSpecTest)')","[186612, 187335]"
"('Description.java', 'org.junit.runner.Description', 'methodAndClassNamePatternGroupOrDefault', '([\\s\\S]*)\\((.*)\\)', 'testInvalidTreeNameIsMixedCaseGit(org.eclipse.jgit.lib.ObjectCheckerTest)')","[49802, 52352]"
"('URIish.java', 'org.eclipse.jgit.transport.URIish', '<init>', '^([a-z][a-z0-9+-]+)://(?:(?:([^/:@]+)(?::([^\\\\/]+))?@)?((?:[^\\\\/:]+)|(?:\\[[0-9a-f:]+\\]))(?::(\\d+))?((?:/~(?:[^\\\\/]+))?[\\\\/]))?(.+)?$', 'ssh+git://l usr\\example.com@example.com:1234/D:/x')",[211503]
"('Description.java', 'org.junit.runner.Description', 'methodAndClassNamePatternGroupOrDefault', '([\\s\\S]*)\\((.*)\\)', 'testGetValidDotGitHumanishName(org.eclipse.jgit.transport.URIishTest)')","[188338, 189710]"
"('URIish.java', 'org.eclipse.jgit.transport.URIish', '<init>', '^([a-z][a-z0-9+-]+)://(?:(?:([^/:@]+)(?::([^\\\\/]+))?@)?((?:[^\\\\/:]+)|(?:\\[[0-9a-f:]+\\]))(?::(\\d+))?((?:/~(?:[^\\\\/]+))?[\\\\/]))?(.+)?$', '/a/b/c.git/')",[248303]
"('URIish.java', 'org.eclipse.jgit.transport.URIish', '<init>', '^([a-z][a-z0-9+-]+)://(?:(?:([^/:@]+)(?::([^\\\\/]+))?@)?((?:[^\\\\/:]+)|(?:\\[[0-9a-f:]+\\]))(?::(\\d+))?((?:/~(?:[^\\\\/]+))?[\\\\/]))?(.+)?$', 'http://me:wtf@[::1]:1234/D:\\x')",[200455]
"('Description.java', 'org.junit.runner.Description', 'methodAndClassNamePatternGroupOrDefault', '([\\s\\S]*)\\((.*)\\)', 'testCommonScore_TotallyDifferentFiles(org.eclipse.jgit.diff.SimilarityIndexTest)')","[11470, 11644]"
"('Description.java', 'org.junit.runner.Description', 'methodAndClassNamePatternGroupOrDefault', '([\\s\\S]*)\\((.*)\\)', 'testLowerGroupCase3[OldRule? false](org.eclipse.jgit.ignore.IgnoreRuleSpecialCasesTest)')","[85606, 92711]"
"('Description.java', 'org.junit.runner.Description', 'methodAndClassNamePatternGroupOrDefault', '([\\s\\S]*)\\((.*)\\)', 'testXDigitGroupCase2[OldRule? false](org.eclipse.jgit.ignore.IgnoreRuleSpecialCasesTest)')","[87607, 94712]"
"('URIish.java', 'org.eclipse.jgit.transport.URIish', '<init>', '^([a-z][a-z0-9+-]+)://(?:(?:([^/:@]+)(?::([^\\\\/]+))?@)?((?:[^\\\\/:]+)|(?:\\[[0-9a-f:]+\\]))(?::(\\d+))?((?:/~(?:[^\\\\/]+))?[\\\\/]))?(.+)?$', 'https://me:wtf@[::1]:80//')",[204603]
"('URIish.java', 'org.eclipse.jgit.transport.URIish', '<init>', '^([a-z][a-z0-9+-]+)://(?:(?:([^/:@]+)(?::([^\\\\/]+))?@)?((?:[^\\\\/:]+)|(?:\\[[0-9a-f:]+\\]))(?::(\\d+))?((?:/~(?:[^\\\\/]+))?[\\\\/]))?(.+)?$', 'ssh+git://lusr\\example@[::1]:1234//abc')",[213297]
"('Description.java', 'org.junit.runner.Description', 'methodAndClassNamePatternGroupOrDefault', '([\\s\\S]*)\\((.*)\\)', 'testWriteEnd(org.eclipse.jgit.transport.PacketLineOutTest)')","[191665, 191838]"
"('URIish.java', 'org.eclipse.jgit.transport.URIish', '<init>', '^([a-z][a-z0-9+-]+)://(?:(?:([^/:@]+)(?::([^\\\\/]+))?@)?((?:[^\\\\/:]+)|(?:\\[[0-9a-f:]+\\]))(?::(\\d+))?((?:/~(?:[^\\\\/]+))?[\\\\/]))?(.+)?$', 'ssh+git://lusr\\example:wtf@[::1]:1234//abc')",[199259]
"('Description.java', 'org.junit.runner.Description', 'methodAndClassNamePatternGroupOrDefault', '([\\s\\S]*)\\((.*)\\)', 'testRebasePreservingMerges2(org.eclipse.jgit.api.RebaseCommandTest)')","[131222, 132700]"
"('URIish.java', 'org.eclipse.jgit.transport.URIish', '<init>', '^(file):([\\\\/](?![\\\\/])((?:[A-Za-z]:)?[\\\\/]?(?:(?:[^\\\\/]+[\\\\/]+)*[^\\\\/]+[\\\\/]*)))$', 'file:///tmp/jgit_test_7992031711278970977_tmp/tmp_2047810706527378292/.git/')",[163242]
"('URIish.java', 'org.eclipse.jgit.transport.URIish', '<init>', '^([a-z][a-z0-9+-]+)://(?:(?:([^/:@]+)(?::([^\\\\/]+))?@)?((?:[^\\\\/:]+)|(?:\\[[0-9a-f:]+\\]))(?::(\\d+))?((?:/~(?:[^\\\\/]+))?[\\\\/]))?(.+)?$', 'https://me@1.2.3.4//')","[231122, 231306]"
"('Description.java', 'org.junit.runner.Description', 'methodAndClassNamePatternGroupOrDefault', '([\\s\\S]*)\\((.*)\\)', 'testParseSquashFixupSequenceCount(org.eclipse.jgit.api.RebaseCommandTest)')","[131579, 133074]"
"('Description.java', 'org.junit.runner.Description', 'methodAndClassNamePatternGroupOrDefault', '([\\s\\S]*)\\((.*)\\)', 'testFileModeChangeAndContentChangeNoConflict(org.eclipse.jgit.lib.DirCacheCheckoutTest)')","[61062, 62043]"
"('Description.java', 'org.junit.runner.Description', 'methodAndClassNamePatternGroupOrDefault', '([\\s\\S]*)\\((.*)\\)', 'org.eclipse.jgit.diff.DiffFormatterTest')","[2693, 3833]"
"('Description.java', 'org.junit.runner.Description', 'methodAndClassNamePatternGroupOrDefault', '([\\s\\S]*)\\((.*)\\)', 'testQuote_NamedEscapes(org.eclipse.jgit.util.QuotedStringGitPathStyleTest)')","[40101, 40539]"
"('Description.java', 'org.junit.runner.Description', 'methodAndClassNamePatternGroupOrDefault', '([\\s\\S]*)\\((.*)\\)', 'simpleAncestor(org.eclipse.jgit.api.NameRevCommandTest)')","[168874, 169112]"
"('Description.java', 'org.junit.runner.Description', 'methodAndClassNamePatternGroupOrDefault', '([\\s\\S]*)\\((.*)\\)', 'testCntrlGroupCase1[OldRule? true](org.eclipse.jgit.ignore.IgnoreRuleSpecialCasesTest)')","[89261, 96345]"
"('URIish.java', 'org.eclipse.jgit.transport.URIish', '<init>', '^(file):([\\\\/](?![\\\\/])((?:[A-Za-z]:)?[\\\\/]?(?:(?:[^\\\\/]+[\\\\/]+)*[^\\\\/]+[\\\\/]*)))$', 'ssh+git://lusr\\example@1.2.3.4:80//abc')",[213090]
"('URIish.java', 'org.eclipse.jgit.transport.URIish', '<init>', '^(file):([\\\\/](?![\\\\/])((?:[A-Za-z]:)?[\\\\/]?(?:(?:[^\\\\/]+[\\\\/]+)*[^\\\\/]+[\\\\/]*)))$', 'ssh://l usr\\example.com@example.com/D:/x')","[221991, 222175]"
"('URIish.java', 'org.eclipse.jgit.transport.URIish', '<init>', '^(file):([\\\\/](?![\\\\/])((?:[A-Za-z]:)?[\\\\/]?(?:(?:[^\\\\/]+[\\\\/]+)*[^\\\\/]+[\\\\/]*)))$', 'https://lusr\\example:wtf@[::1]:80//')",[206788]
"('URIish.java', 'org.eclipse.jgit.transport.URIish', '<init>', '^(file):([\\\\/](?![\\\\/])((?:[A-Za-z]:)?[\\\\/]?(?:(?:[^\\\\/]+[\\\\/]+)*[^\\\\/]+[\\\\/]*)))$', 'ssh://l usr\\example.com:wtf@example.com:1234/D:/x')",[193238]
"('Description.java', 'org.junit.runner.Description', 'methodAndClassNamePatternGroupOrDefault', '([\\s\\S]*)\\((.*)\\)', 'testCheckoutUncachedChanges(org.eclipse.jgit.lib.DirCacheCheckoutTest)')","[61041, 62021]"
"('URIish.java', 'org.eclipse.jgit.transport.URIish', '<init>', '^(?:([^/:@]+)(?::([^\\\\/]+))?@)?([^\\\\/:]{2,}):([\\\\/](?:(?:[^\\\\/]+[\\\\/]+)*[^\\\\/]+[\\\\/]*))$', '/~some/p ath')","[249844, 249959]"
"('URIish.java', 'org.eclipse.jgit.transport.URIish', '<init>', '^(file):([\\\\/](?![\\\\/])((?:[A-Za-z]:)?[\\\\/]?(?:(?:[^\\\\/]+[\\\\/]+)*[^\\\\/]+[\\\\/]*)))$', 'ssh+git://lusr\\example@[::1]:80/D:/x')",[213504]
"('Description.java', 'org.junit.runner.Description', 'methodAndClassNamePatternGroupOrDefault', '([\\s\\S]*)\\((.*)\\)', 'testRemoveMakesEmpty(org.eclipse.jgit.notes.LeafBucketTest)')","[260296, 260537]"
"('URIish.java', 'org.eclipse.jgit.transport.URIish', '<init>', '^(file):([\\\\/](?![\\\\/])((?:[A-Za-z]:)?[\\\\/]?(?:(?:[^\\\\/]+[\\\\/]+)*[^\\\\/]+[\\\\/]*)))$', 'ssh+git://lusr\\example@example.com//')","[226315, 226499]"
"('Description.java', 'org.junit.runner.Description', 'methodAndClassNamePatternGroupOrDefault', '([\\s\\S]*)\\((.*)\\)', 'testTrackingRefUpdateEnabled(org.eclipse.jgit.transport.PushProcessTest)')","[203612, 204168]"
"('Description.java', 'org.junit.runner.Description', 'methodAndClassNamePatternGroupOrDefault', '([\\s\\S]*)\\((.*)\\)', 'testInvalidTagNoType3(org.eclipse.jgit.lib.ObjectCheckerTest)')","[50411, 52990]"
"('Description.java', 'org.junit.runner.Description', 'methodAndClassNamePatternGroupOrDefault', '([\\s\\S]*)\\((.*)\\)', 'testReadACK_NAK(org.eclipse.jgit.transport.PacketLineInTest)')","[184626, 185171]"
"('Description.java', 'org.junit.runner.Description', 'methodAndClassNamePatternGroupOrDefault', '([\\s\\S]*)\\((.*)\\)', 'testLeafSplitsWhenFull(org.eclipse.jgit.notes.NoteMapTest)')","[258441, 258704]"
"('URIish.java', 'org.eclipse.jgit.transport.URIish', '<init>', '^([a-z][a-z0-9+-]+)://(?:(?:([^/:@]+)(?::([^\\\\/]+))?@)?((?:[^\\\\/:]+)|(?:\\[[0-9a-f:]+\\]))(?::(\\d+))?((?:/~(?:[^\\\\/]+))?[\\\\/]))?(.+)?$', 'ssh://example.com//')","[234066, 234250, 235170, 235354, 236274, 236458]"
"('Description.java', 'org.junit.runner.Description', 'methodAndClassNamePatternGroupOrDefault', '([\\s\\S]*)\\((.*)\\)', 'testNLSLocale(org.eclipse.jgit.nls.NLSTest)')","[40957, 41045]"
"('URIish.java', 'org.eclipse.jgit.transport.URIish', '<init>', '^(file):([\\\\/](?![\\\\/])((?:[A-Za-z]:)?[\\\\/]?(?:(?:[^\\\\/]+[\\\\/]+)*[^\\\\/]+[\\\\/]*)))$', 'file:/tmp/jgit_test_7286773243984836704_tmp/tmp_8328110772619142051/.git/')",[56805]
"('Description.java', 'org.junit.runner.Description', 'methodAndClassNamePatternGroupOrDefault', '([\\s\\S]*)\\((.*)\\)', 'testSaveRemoveFirstURI(org.eclipse.jgit.transport.RemoteConfigTest)')","[253464, 254025]"
"('URIish.java', 'org.eclipse.jgit.transport.URIish', '<init>', '^([a-z][a-z0-9+-]+)://(?:(?:([^/:@]+)(?::([^\\\\/]+))?@)?((?:[^\\\\/:]+)|(?:\\[[0-9a-f:]+\\]))(?::(\\d+))?((?:/~(?:[^\\\\/]+))?[\\\\/]))?(.+)?$', 'ssh+git://example.com//abc')","[237424, 237608, 238528, 238712, 239632, 239816]"
"('Description.java', 'org.junit.runner.Description', 'methodAndClassNamePatternGroupOrDefault', '([\\s\\S]*)\\((.*)\\)', 'testNoNewLine2(org.eclipse.jgit.diff.DiffFormatterReflowTest)')","[8115, 8335]"
"('URIish.java', 'org.eclipse.jgit.transport.URIish', '<init>', '^([a-z][a-z0-9+-]+)://(?:(?:([^/:@]+)(?::([^\\\\/]+))?@)?((?:[^\\\\/:]+)|(?:\\[[0-9a-f:]+\\]))(?::(\\d+))?((?:/~(?:[^\\\\/]+))?[\\\\/]))?(.+)?$', 'ssh://l usr\\example.com@example.com:1234//abc')",[208145]
"('Description.java', 'org.junit.runner.Description', 'methodAndClassNamePatternGroupOrDefault', '([\\s\\S]*)\\((.*)\\)', 'testCopyConstructor(org.eclipse.jgit.fnmatch.FileNameMatcherTest)')","[41923, 45206]"
"('Repository.java', 'org.eclipse.jgit.lib.Repository', 'resolve', '^-\\d+$', '-1')","[64909, 64936, 65074, 65101]"
"('URIish.java', 'org.eclipse.jgit.transport.URIish', '<init>', '^([a-z][a-z0-9+-]+)://(?:(?:([^/:@]+)(?::([^\\\\/]+))?@)?((?:[^\\\\/:]+)|(?:\\[[0-9a-f:]+\\]))(?::(\\d+))?((?:/~(?:[^\\\\/]+))?[\\\\/]))?(.+)?$', 'ssh://me:wtf@[::1]:1234//')",[192801]
"('URIish.java', 'org.eclipse.jgit.transport.URIish', '<init>', '^(file):([\\\\/](?![\\\\/])((?:[A-Za-z]:)?[\\\\/]?(?:(?:[^\\\\/]+[\\\\/]+)*[^\\\\/]+[\\\\/]*)))$', 'file:/tmp/jgit_test_280728366645432052_tmp/tmp_37851480862469748/.git/')",[10690]
"('Description.java', 'org.junit.runner.Description', 'methodAndClassNamePatternGroupOrDefault', '([\\s\\S]*)\\((.*)\\)', 'testEscapedBracket2(org.eclipse.jgit.fnmatch.FileNameMatcherTest)')","[44506, 47912]"
"('Description.java', 'org.junit.runner.Description', 'methodAndClassNamePatternGroupOrDefault', '([\\s\\S]*)\\((.*)\\)', 'testSpaceGroupCase2[OldRule? true](org.eclipse.jgit.ignore.IgnoreRuleSpecialCasesTest)')","[89652, 96736]"
"('URIish.java', 'org.eclipse.jgit.transport.URIish', '<init>', '^([a-z][a-z0-9+-]+)://(?:(?:([^/:@]+)(?::([^\\\\/]+))?@)?((?:[^\\\\/:]+)|(?:\\[[0-9a-f:]+\\]))(?::(\\d+))?((?:/~(?:[^\\\\/]+))?[\\\\/]))?(.+)?$', 'ssh+git://l usr\\example.com@1.2.3.4//')","[225602, 225786]"
"('Description.java', 'org.junit.runner.Description', 'methodAndClassNamePatternGroupOrDefault', '([\\s\\S]*)\\((.*)\\)', 'testEntriesWithin(org.eclipse.jgit.dircache.DirCacheFindTest)')","[172144, 172166]"
"('Description.java', 'org.junit.runner.Description', 'methodAndClassNamePatternGroupOrDefault', '([\\s\\S]*)\\((.*)\\)', 'testNotBare_CreateRepositoryFromDotGitGitDir(org.eclipse.jgit.internal.storage.file.RepositorySetupWorkDirTest)')","[114027, 114288]"
"('Description.java', 'org.junit.runner.Description', 'methodAndClassNamePatternGroupOrDefault', '([\\s\\S]*)\\((.*)\\)', 'testInvalidTreeNameIsDotGitSomething(org.eclipse.jgit.lib.ObjectCheckerTest)')","[50453, 53034]"
"('URIish.java', 'org.eclipse.jgit.transport.URIish', '<init>', '^([a-z][a-z0-9+-]+)://(?:(?:([^/:@]+)(?::([^\\\\/]+))?@)?((?:[^\\\\/:]+)|(?:\\[[0-9a-f:]+\\]))(?::(\\d+))?((?:/~(?:[^\\\\/]+))?[\\\\/]))?(.+)?$', 'http://me@example.com:1234/D:\\x')",[213757]
"('Description.java', 'org.junit.runner.Description', 'methodAndClassNamePatternGroupOrDefault', '([\\s\\S]*)\\((.*)\\)', 'testMirror(org.eclipse.jgit.transport.RemoteConfigTest)')","[253632, 254201]"
"('Description.java', 'org.junit.runner.Description', 'methodAndClassNamePatternGroupOrDefault', '([\\s\\S]*)\\((.*)\\)', 'testEdit_DuplicateAButCommonUniqueInB(org.eclipse.jgit.diff.HistogramDiffTest)')","[6891, 7560]"
"('Description.java', 'org.junit.runner.Description', 'methodAndClassNamePatternGroupOrDefault', '([\\s\\S]*)\\((.*)\\)', 'test2AlphaGroupsCase0[OldRule? false](org.eclipse.jgit.ignore.IgnoreRuleSpecialCasesTest)')","[85836, 92941]"
"('URIish.java', 'org.eclipse.jgit.transport.URIish', '<init>', '^([a-z][a-z0-9+-]+)://(?:(?:([^/:@]+)(?::([^\\\\/]+))?@)?((?:[^\\\\/:]+)|(?:\\[[0-9a-f:]+\\]))(?::(\\d+))?((?:/~(?:[^\\\\/]+))?[\\\\/]))?(.+)?$', 'file:///tmp/jgit_test_1453594300143160598_tmp/tmp_2358754623373159383/.git/')",[14152]
"('Description.java', 'org.junit.runner.Description', 'methodAndClassNamePatternGroupOrDefault', '([\\s\\S]*)\\((.*)\\)', 'testIsModifiedSymlinkAsFile(org.eclipse.jgit.treewalk.FileTreeIteratorTest)')","[262082, 262424]"
"('Description.java', 'org.junit.runner.Description', 'methodAndClassNamePatternGroupOrDefault', '([\\s\\S]*)\\((.*)\\)', 'testParse_ShortLineOnlyEndLF(org.eclipse.jgit.revwalk.RevCommitParseTest)')","[182530, 182899]"
"('Description.java', 'org.junit.runner.Description', 'methodAndClassNamePatternGroupOrDefault', '([\\s\\S]*)\\((.*)\\)', 'testVerySimpleGroupRangeCase1[OldRule? true](org.eclipse.jgit.ignore.IgnoreRuleSpecialCasesTest)')","[90089, 97173]"
"('Description.java', 'org.junit.runner.Description', 'methodAndClassNamePatternGroupOrDefault', '([\\s\\S]*)\\((.*)\\)', 'testConstructor_RejectsBadBufferSize(org.eclipse.jgit.transport.SideBandOutputStreamTest)')","[251997, 252239]"
"('URIish.java', 'org.eclipse.jgit.transport.URIish', '<init>', '^([a-z][a-z0-9+-]+)://(?:(?:([^/:@]+)(?::([^\\\\/]+))?@)?((?:[^\\\\/:]+)|(?:\\[[0-9a-f:]+\\]))(?::(\\d+))?((?:/~(?:[^\\\\/]+))?[\\\\/]))?(.+)?$', 'ssh://me@1.2.3.4:80//')",[207547]
"('Description.java', 'org.junit.runner.Description', 'methodAndClassNamePatternGroupOrDefault', '([\\s\\S]*)\\((.*)\\)', 'testDeleteBadName(org.eclipse.jgit.api.TagCommandTest)')","[157679, 157986]"
"('URIish.java', 'org.eclipse.jgit.transport.URIish', '<init>', '^(file):([\\\\/](?![\\\\/])((?:[A-Za-z]:)?[\\\\/]?(?:(?:[^\\\\/]+[\\\\/]+)*[^\\\\/]+[\\\\/]*)))$', 'https://example.com/D:\\x')","[244117, 244301, 245221, 245405, 246325, 246509]"
"('URIish.java', 'org.eclipse.jgit.transport.URIish', '<init>', '^([a-z][a-z0-9+-]+)://(?:(?:([^/:@]+)(?::([^\\\\/]+))?@)?((?:[^\\\\/:]+)|(?:\\[[0-9a-f:]+\\]))(?::(\\d+))?((?:/~(?:[^\\\\/]+))?[\\\\/]))?(.+)?$', 'http://l usr\\example.com@example.com:1234/D:/x')",[214815]
"('Description.java', 'org.junit.runner.Description', 'methodAndClassNamePatternGroupOrDefault', '([\\s\\S]*)\\((.*)\\)', 'testSimpleCharClass[OldRule? false](org.eclipse.jgit.ignore.FastIgnoreRuleTest)')","[77104, 77861]"
"('URIish.java', 'org.eclipse.jgit.transport.URIish', '<init>', '^([a-z][a-z0-9+-]+)://(?:(?:([^/:@]+)(?::([^\\\\/]+))?@)?((?:[^\\\\/:]+)|(?:\\[[0-9a-f:]+\\]))(?::(\\d+))?((?:/~(?:[^\\\\/]+))?[\\\\/]))?(.+)?$', 'file:///tmp/jgit_test_1453594300143160598_tmp/tmp_6210392552640775347/.git/')",[14648]
"('Description.java', 'org.junit.runner.Description', 'methodAndClassNamePatternGroupOrDefault', '([\\s\\S]*)\\((.*)\\)', 'testMixedGroupCase7(org.eclipse.jgit.fnmatch.FileNameMatcherTest)')","[41860, 45140]"
"('URIish.java', 'org.eclipse.jgit.transport.URIish', '<init>', '^(?:([^/:@]+)(?::([^\\\\/]+))?@)?([^\\\\/:]{2,}):([\\\\/](?:(?:[^\\\\/]+[\\\\/]+)*[^\\\\/]+[\\\\/]*))$', '/tmp/jgit_test_4639109472720102754_tmp/tmp_8101730606670789681')","[151236, 151376]"
"('Description.java', 'org.junit.runner.Description', 'methodAndClassNamePatternGroupOrDefault', '([\\s\\S]*)\\((.*)\\)', 'testSpecialGroupCase9[OldRule? false](org.eclipse.jgit.ignore.IgnoreRuleSpecialCasesTest)')","[84962, 92067]"
"('Description.java', 'org.junit.runner.Description', 'methodAndClassNamePatternGroupOrDefault', '([\\s\\S]*)\\((.*)\\)', 'testMixed(org.eclipse.jgit.merge.MergeMessageFormatterTest)')","[16161, 16482]"
"('Description.java', 'org.junit.runner.Description', 'methodAndClassNamePatternGroupOrDefault', '([\\s\\S]*)\\((.*)\\)', 'testHasAnyFlag(org.eclipse.jgit.revwalk.RevObjectTest)')","[178228, 178446]"
"('Description.java', 'org.junit.runner.Description', 'methodAndClassNamePatternGroupOrDefault', '([\\s\\S]*)\\((.*)\\)', 'testStopWalkCallsParent(org.eclipse.jgit.treewalk.EmptyTreeIteratorTest)')","[260998, 261127]"
"('URIish.java', 'org.eclipse.jgit.transport.URIish', '<init>', '^([\\\\/]?((?:[A-Za-z]:)?[\\\\/]?(?:(?:[^\\\\/]+[\\\\/]+)*[^\\\\/]+[\\\\/]*)))$', '/tmp/jgit_test_8097070924435391496_tmp/tmp_383454845786079686/.git')","[129925, 130075]"
"('URIish.java', 'org.eclipse.jgit.transport.URIish', '<init>', '^(file):([\\\\/](?![\\\\/])((?:[A-Za-z]:)?[\\\\/]?(?:(?:[^\\\\/]+[\\\\/]+)*[^\\\\/]+[\\\\/]*)))$', 'https://l usr\\example.com@1.2.3.4:80//')",[219139]
"('URIish.java', 'org.eclipse.jgit.transport.URIish', '<init>', '^([a-z][a-z0-9+-]+)://(?:(?:([^/:@]+)(?::([^\\\\/]+))?@)?((?:[^\\\\/:]+)|(?:\\[[0-9a-f:]+\\]))(?::(\\d+))?((?:/~(?:[^\\\\/]+))?[\\\\/]))?(.+)?$', 'ssh+git://lusr\\example@1.2.3.4:1234/D:\\x')",[213021]
"('Description.java', 'org.junit.runner.Description', 'methodAndClassNamePatternGroupOrDefault', '([\\s\\S]*)\\((.*)\\)', 'testFillToHighMark4(org.eclipse.jgit.revwalk.RevCommitListTest)')","[176768, 176920]"
"('Description.java', 'org.junit.runner.Description', 'methodAndClassNamePatternGroupOrDefault', '([\\s\\S]*)\\((.*)\\)', 'org.eclipse.jgit.lib.RefDatabaseConflictingNamesTest')","[54433, 54499]"
"('URIish.java', 'org.eclipse.jgit.transport.URIish', '<init>', '^([a-z][a-z0-9+-]+)://(?:(?:([^/:@]+)(?::([^\\\\/]+))?@)?((?:[^\\\\/:]+)|(?:\\[[0-9a-f:]+\\]))(?::(\\d+))?((?:/~(?:[^\\\\/]+))?[\\\\/]))?(.+)?$', 'ssh://me@[::1]:80/D:/x')",[208007]
"('URIish.java', 'org.eclipse.jgit.transport.URIish', '<init>', '^([a-z][a-z0-9+-]+)://(?:(?:([^/:@]+)(?::([^\\\\/]+))?@)?((?:[^\\\\/:]+)|(?:\\[[0-9a-f:]+\\]))(?::(\\d+))?((?:/~(?:[^\\\\/]+))?[\\\\/]))?(.+)?$', 'https://lusr\\example@[::1]/D:\\x')","[233836, 234020]"
"('Description.java', 'org.junit.runner.Description', 'methodAndClassNamePatternGroupOrDefault', '([\\s\\S]*)\\((.*)\\)', 'testGraphGroupCase0[OldRule? false](org.eclipse.jgit.ignore.IgnoreRuleSpecialCasesTest)')","[85376, 92481]"
"('Description.java', 'org.junit.runner.Description', 'methodAndClassNamePatternGroupOrDefault', '([\\s\\S]*)\\((.*)\\)', 'testClean(org.eclipse.jgit.api.CleanCommandTest)')","[154615, 154763]"
"('Description.java', 'org.junit.runner.Description', 'methodAndClassNamePatternGroupOrDefault', '([\\s\\S]*)\\((.*)\\)', 'testVerySimplePatternCase0[OldRule? true](org.eclipse.jgit.ignore.IgnoreRuleSpecialCasesTest)')","[89284, 96368]"
"('URIish.java', 'org.eclipse.jgit.transport.URIish', '<init>', '^(file):([\\\\/](?![\\\\/])((?:[A-Za-z]:)?[\\\\/]?(?:(?:[^\\\\/]+[\\\\/]+)*[^\\\\/]+[\\\\/]*)))$', 'ssh+git://l usr\\example.com@example.com:80/D:/x')",[211664]
"('FastIgnoreRule.java', 'org.eclipse.jgit.ignore.FastIgnoreRule', 'isMatch', '[\\p{Lu}]', 'Ä')",[101835]
"('Description.java', 'org.junit.runner.Description', 'methodAndClassNamePatternGroupOrDefault', '([\\s\\S]*)\\((.*)\\)', 'testDigitGroupCase3(org.eclipse.jgit.fnmatch.FileNameMatcherTest)')","[42931, 46262]"
"('Description.java', 'org.junit.runner.Description', 'methodAndClassNamePatternGroupOrDefault', '([\\s\\S]*)\\((.*)\\)', 'testCompareEntriesOffsetsWithGetOffsets(org.eclipse.jgit.internal.storage.file.PackIndexV2Test)')","[114578, 114707]"
"('Description.java', 'org.junit.runner.Description', 'methodAndClassNamePatternGroupOrDefault', '([\\s\\S]*)\\((.*)\\)', 'testContext3(org.eclipse.jgit.diff.DiffFormatterReflowTest)')","[8010, 8225]"
"('URIish.java', 'org.eclipse.jgit.transport.URIish', '<init>', '^(file):([\\\\/](?![\\\\/])((?:[A-Za-z]:)?[\\\\/]?(?:(?:[^\\\\/]+[\\\\/]+)*[^\\\\/]+[\\\\/]*)))$', 'https://me@example.com:80/D:\\x')",[217230]
"('URIish.java', 'org.eclipse.jgit.transport.URIish', '<init>', '^(file):([\\\\/](?![\\\\/])((?:[A-Za-z]:)?[\\\\/]?(?:(?:[^\\\\/]+[\\\\/]+)*[^\\\\/]+[\\\\/]*)))$', 'file:/tmp/jgit_test_4752033303303576963_tmp/tmp_1842207113690785849/.git/')",[18188]
"('FastIgnoreRule.java', 'org.eclipse.jgit.ignore.FastIgnoreRule', 'isMatch', '.r[a-c]', 'file')","[107154, 107371, 107588]"
"('Description.java', 'org.junit.runner.Description', 'methodAndClassNamePatternGroupOrDefault', '([\\s\\S]*)\\((.*)\\)', 'testAsteriskDotDoNotMatch[OldRule? true](org.eclipse.jgit.ignore.FastIgnoreRuleTest)')","[77424, 78160]"
"('URIish.java', 'org.eclipse.jgit.transport.URIish', '<init>', '^(file):([\\\\/](?![\\\\/])((?:[A-Za-z]:)?[\\\\/]?(?:(?:[^\\\\/]+[\\\\/]+)*[^\\\\/]+[\\\\/]*)))$', 'ssh+git://me@1.2.3.4/D:\\x')","[224613, 224797]"
"('URIish.java', 'org.eclipse.jgit.transport.URIish', '<init>', '^([a-z][a-z0-9+-]+)://(?:(?:([^/:@]+)(?::([^\\\\/]+))?@)?((?:[^\\\\/:]+)|(?:\\[[0-9a-f:]+\\]))(?::(\\d+))?((?:/~(?:[^\\\\/]+))?[\\\\/]))?(.+)?$', 'file:///tmp/jgit_test_6975584198630329475_tmp/tmp_8672658496339573344')","[165644, 165706, 165758, 165820, 166103, 166165]"
"('Description.java', 'org.junit.runner.Description', 'methodAndClassNamePatternGroupOrDefault', '([\\s\\S]*)\\((.*)\\)', 'org.eclipse.jgit.util.RawSubStringPatternTest')","[28556, 28751]"
"('Description.java', 'org.junit.runner.Description', 'methodAndClassNamePatternGroupOrDefault', '([\\s\\S]*)\\((.*)\\)', 'testOnlyOption_f1_4_c(org.eclipse.jgit.api.CommitOnlyTest)')","[134794, 136833]"
"('Description.java', 'org.junit.runner.Description', 'methodAndClassNamePatternGroupOrDefault', '([\\s\\S]*)\\((.*)\\)', 'testCherryPickConflictResolutionNoCOmmit(org.eclipse.jgit.api.CherryPickCommandTest)')","[168404, 168668]"
"('Description.java', 'org.junit.runner.Description', 'methodAndClassNamePatternGroupOrDefault', '([\\s\\S]*)\\((.*)\\)', 'testModified(org.eclipse.jgit.lib.IndexDiffTest)')","[68874, 69221]"
"('URIish.java', 'org.eclipse.jgit.transport.URIish', '<init>', '^([\\\\/]?((?:[A-Za-z]:)?[\\\\/]?(?:(?:[^\\\\/]+[\\\\/]+)*[^\\\\/]+[\\\\/]*)))$', '/a/b/c.git')",[191202]
"('Description.java', 'org.junit.runner.Description', 'methodAndClassNamePatternGroupOrDefault', '([\\s\\S]*)\\((.*)\\)', 'testPathCompare(org.eclipse.jgit.treewalk.AbstractTreeIteratorTest)')","[266792, 266941]"
"('URIish.java', 'org.eclipse.jgit.transport.URIish', '<init>', '^(file):([\\\\/](?![\\\\/])((?:[A-Za-z]:)?[\\\\/]?(?:(?:[^\\\\/]+[\\\\/]+)*[^\\\\/]+[\\\\/]*)))$', 'ssh+git://me@1.2.3.4//')","[224475, 224659]"
"('URIish.java', 'org.eclipse.jgit.transport.URIish', '<init>', '^(file):([\\\\/](?![\\\\/])((?:[A-Za-z]:)?[\\\\/]?(?:(?:[^\\\\/]+[\\\\/]+)*[^\\\\/]+[\\\\/]*)))$', 'http://lusr\\example@[::1]:80//abc')",[216770]
"('QuotedString.java', 'org.eclipse.jgit.util.QuotedString$BourneUserPathStyle', 'quote', '^~[A-Za-z0-9_-]*/.*$', ""'"")","[30021, 30046]"
"('Description.java', 'org.junit.runner.Description', 'methodAndClassNamePatternGroupOrDefault', '([\\s\\S]*)\\((.*)\\)', 'org.eclipse.jgit.treewalk.filter.PathSuffixFilterTest')","[266562, 266714]"
"('URIish.java', 'org.eclipse.jgit.transport.URIish', '<init>', '^([a-z][a-z0-9+-]+)://(?:(?:([^/:@]+)(?::([^\\\\/]+))?@)?((?:[^\\\\/:]+)|(?:\\[[0-9a-f:]+\\]))(?::(\\d+))?((?:/~(?:[^\\\\/]+))?[\\\\/]))?(.+)?$', 'ssh+git://l usr\\example.com:wtf@[::1]:80/D:\\x')",[198431]
"('Description.java', 'org.junit.runner.Description', 'methodAndClassNamePatternGroupOrDefault', '([\\s\\S]*)\\((.*)\\)', 'testSpaceGroupCase3(org.eclipse.jgit.fnmatch.FileNameMatcherTest)')","[42637, 45954]"
"('URIish.java', 'org.eclipse.jgit.transport.URIish', '<init>', '^(file):([\\\\/](?![\\\\/])((?:[A-Za-z]:)?[\\\\/]?(?:(?:[^\\\\/]+[\\\\/]+)*[^\\\\/]+[\\\\/]*)))$', 'ssh://[::1]//abc')","[234825, 235009, 235929, 236113, 237033, 237217]"
"('Description.java', 'org.junit.runner.Description', 'methodAndClassNamePatternGroupOrDefault', '([\\s\\S]*)\\((.*)\\)', 'testEscapedBackslash[OldRule? false](org.eclipse.jgit.ignore.IgnoreRuleSpecialCasesTest)')","[86710, 93815]"
"('URIish.java', 'org.eclipse.jgit.transport.URIish', '<init>', '^([a-z][a-z0-9+-]+)://(?:(?:([^/:@]+)(?::([^\\\\/]+))?@)?((?:[^\\\\/:]+)|(?:\\[[0-9a-f:]+\\]))(?::(\\d+))?((?:/~(?:[^\\\\/]+))?[\\\\/]))?(.+)?$', 'ssh+git://me:wtf@1.2.3.4:80/D:/x')",[196913]
"('URIish.java', 'org.eclipse.jgit.transport.URIish', '<init>', '^([a-z][a-z0-9+-]+)://(?:(?:([^/:@]+)(?::([^\\\\/]+))?@)?((?:[^\\\\/:]+)|(?:\\[[0-9a-f:]+\\]))(?::(\\d+))?((?:/~(?:[^\\\\/]+))?[\\\\/]))?(.+)?$', 'ssh+git://me@1.2.3.4:1234//abc')",[210721]
"('URIish.java', 'org.eclipse.jgit.transport.URIish', '<init>', '^([a-z][a-z0-9+-]+)://(?:(?:([^/:@]+)(?::([^\\\\/]+))?@)?((?:[^\\\\/:]+)|(?:\\[[0-9a-f:]+\\]))(?::(\\d+))?((?:/~(?:[^\\\\/]+))?[\\\\/]))?(.+)?$', 'ssh://me@[::1]:80//abc')",[207961]
"('Description.java', 'org.junit.runner.Description', 'methodAndClassNamePatternGroupOrDefault', '([\\s\\S]*)\\((.*)\\)', 'testTargetWithoutLeadingSlash[OldRule? true](org.eclipse.jgit.ignore.IgnoreMatcherParametrizedTest)')","[103717, 104177]"
"('Description.java', 'org.junit.runner.Description', 'methodAndClassNamePatternGroupOrDefault', '([\\s\\S]*)\\((.*)\\)', 'testVerySimpleStarCase1(org.eclipse.jgit.fnmatch.FileNameMatcherTest)')","[43897, 47274]"
"('URIish.java', 'org.eclipse.jgit.transport.URIish', '<init>', '^(file):([\\\\/](?![\\\\/])((?:[A-Za-z]:)?[\\\\/]?(?:(?:[^\\\\/]+[\\\\/]+)*[^\\\\/]+[\\\\/]*)))$', 'http://lusr\\example@1.2.3.4//abc')","[230041, 230225]"
"('URIish.java', 'org.eclipse.jgit.transport.URIish', '<init>', '^([a-z][a-z0-9+-]+)://(?:(?:([^/:@]+)(?::([^\\\\/]+))?@)?((?:[^\\\\/:]+)|(?:\\[[0-9a-f:]+\\]))(?::(\\d+))?((?:/~(?:[^\\\\/]+))?[\\\\/]))?(.+)?$', 'http://l usr\\example.com@1.2.3.4:1234/D:/x')",[215183]
"('ChangeIdUtil.java', 'org.eclipse.jgit.util.ChangeIdUtil', 'indexOfChangeId', '(^Change-Id: *I[a-f0-9]{40}$)', 'fix: this thing')",[36647]
"('FastIgnoreRule.java', 'org.eclipse.jgit.ignore.FastIgnoreRule', 'isMatch', 'a.b', 'a\\b')",[101341]
"('Description.java', 'org.junit.runner.Description', 'methodAndClassNamePatternGroupOrDefault', '([\\s\\S]*)\\((.*)\\)', 'testParseGitFileName_Empty(org.eclipse.jgit.patch.FileHeaderTest)')","[618, 1391]"
"('Description.java', 'org.junit.runner.Description', 'methodAndClassNamePatternGroupOrDefault', '([\\s\\S]*)\\((.*)\\)', 'testRemoteBranch(org.eclipse.jgit.merge.MergeMessageFormatterTest)')","[16245, 16570]"
"('URIish.java', 'org.eclipse.jgit.transport.URIish', '<init>', '^(file):([\\\\/](?![\\\\/])((?:[A-Za-z]:)?[\\\\/]?(?:(?:[^\\\\/]+[\\\\/]+)*[^\\\\/]+[\\\\/]*)))$', 'http://[::1]/D:/x')","[241495, 241679, 242599, 242783, 243703, 243887]"
"('FastIgnoreRule.java', 'org.eclipse.jgit.ignore.FastIgnoreRule', 'isMatch', 'a.*b', 'a\\b')",[101315]
"('URIish.java', 'org.eclipse.jgit.transport.URIish', '<init>', '^(file):([\\\\/](?![\\\\/])((?:[A-Za-z]:)?[\\\\/]?(?:(?:[^\\\\/]+[\\\\/]+)*[^\\\\/]+[\\\\/]*)))$', 'ssh://l usr\\example.com@[::1]:80/D:/x')",[209088]
"('URIish.java', 'org.eclipse.jgit.transport.URIish', '<init>', '^([a-z][a-z0-9+-]+)://(?:(?:([^/:@]+)(?::([^\\\\/]+))?@)?((?:[^\\\\/:]+)|(?:\\[[0-9a-f:]+\\]))(?::(\\d+))?((?:/~(?:[^\\\\/]+))?[\\\\/]))?(.+)?$', 'ssh+git://lusr\\example@[::1]:1234/D:/x')",[213343]
"('Description.java', 'org.junit.runner.Description', 'methodAndClassNamePatternGroupOrDefault', '([\\s\\S]*)\\((.*)\\)', 'testOnlyOption_f1_6_f2_14_c(org.eclipse.jgit.api.CommitOnlyTest)')","[135634, 137713]"
"('Description.java', 'org.junit.runner.Description', 'methodAndClassNamePatternGroupOrDefault', '([\\s\\S]*)\\((.*)\\)', 'testURIEncodeDecode(org.eclipse.jgit.transport.URIishTest)')","[188716, 190106]"
"('URIish.java', 'org.eclipse.jgit.transport.URIish', '<init>', '^([a-z][a-z0-9+-]+)://(?:(?:([^/:@]+)(?::([^\\\\/]+))?@)?((?:[^\\\\/:]+)|(?:\\[[0-9a-f:]+\\]))(?::(\\d+))?((?:/~(?:[^\\\\/]+))?[\\\\/]))?(.+)?$', 'ssh://lusr\\example:wtf@[::1]:1234/D:/x')",[195203]
"('Description.java', 'org.junit.runner.Description', 'methodAndClassNamePatternGroupOrDefault', '([\\s\\S]*)\\((.*)\\)', 'testFileNameWildcards[OldRule? true](org.eclipse.jgit.ignore.IgnoreMatcherParametrizedTest)')","[103671, 104131]"
"('URIish.java', 'org.eclipse.jgit.transport.URIish', '<init>', '^(file):([\\\\/](?![\\\\/])((?:[A-Za-z]:)?[\\\\/]?(?:(?:[^\\\\/]+[\\\\/]+)*[^\\\\/]+[\\\\/]*)))$', 'ssh+git://lusr\\example@1.2.3.4:1234/D:/x')",[212952]
"('URIish.java', 'org.eclipse.jgit.transport.URIish', '<init>', '^(file):([\\\\/](?![\\\\/])((?:[A-Za-z]:)?[\\\\/]?(?:(?:[^\\\\/]+[\\\\/]+)*[^\\\\/]+[\\\\/]*)))$', 'http://me:wtf@1.2.3.4:1234/D:\\x')",[200064]
"('URIish.java', 'org.eclipse.jgit.transport.URIish', '<init>', '^([a-z][a-z0-9+-]+)://(?:(?:([^/:@]+)(?::([^\\\\/]+))?@)?((?:[^\\\\/:]+)|(?:\\[[0-9a-f:]+\\]))(?::(\\d+))?((?:/~(?:[^\\\\/]+))?[\\\\/]))?(.+)?$', 'https://lusr\\example:wtf@[::1]:1234/D:/x')",[206719]
"('Description.java', 'org.junit.runner.Description', 'methodAndClassNamePatternGroupOrDefault', '([\\s\\S]*)\\((.*)\\)', 'testPathsResetOnUnbornBranch(org.eclipse.jgit.api.ResetCommandTest)')","[167188, 167527]"
"('Description.java', 'org.junit.runner.Description', 'methodAndClassNamePatternGroupOrDefault', '([\\s\\S]*)\\((.*)\\)', 'testModifySettings(org.eclipse.jgit.internal.storage.file.PackWriterTest)')","[117929, 118387]"
"('URIish.java', 'org.eclipse.jgit.transport.URIish', '<init>', '^([a-z][a-z0-9+-]+)://(?:(?:([^/:@]+)(?::([^\\\\/]+))?@)?((?:[^\\\\/:]+)|(?:\\[[0-9a-f:]+\\]))(?::(\\d+))?((?:/~(?:[^\\\\/]+))?[\\\\/]))?(.+)?$', 'https://me@1.2.3.4:80//abc')",[217552]
"('Description.java', 'org.junit.runner.Description', 'methodAndClassNamePatternGroupOrDefault', '([\\s\\S]*)\\((.*)\\)', 'testRejectInvalidWindowsPaths(org.eclipse.jgit.dircache.DirCacheBasicTest)')","[171464, 172020]"
"('Description.java', 'org.junit.runner.Description', 'methodAndClassNamePatternGroupOrDefault', '([\\s\\S]*)\\((.*)\\)', 'testSort_COMMIT_TIME_DESC(org.eclipse.jgit.revwalk.RevWalkSortTest)')","[181858, 182007]"
"('FastIgnoreRule.java', 'org.eclipse.jgit.ignore.FastIgnoreRule', 'isMatch', '[a-c-e]', 'b')",[99259]
"('Description.java', 'org.junit.runner.Description', 'methodAndClassNamePatternGroupOrDefault', '([\\s\\S]*)\\((.*)\\)', 'testMergeRemovingFolders(org.eclipse.jgit.api.MergeCommandTest)')","[126328, 127241]"
"('URIish.java', 'org.eclipse.jgit.transport.URIish', '<init>', '^(file):([\\\\/](?![\\\\/])((?:[A-Za-z]:)?[\\\\/]?(?:(?:[^\\\\/]+[\\\\/]+)*[^\\\\/]+[\\\\/]*)))$', '/more/dirs')","[254984, 255684, 257320]"
"('Description.java', 'org.junit.runner.Description', 'methodAndClassNamePatternGroupOrDefault', '([\\s\\S]*)\\((.*)\\)', 'testSaveRemoveLastURI(org.eclipse.jgit.transport.RemoteConfigTest)')","[253485, 254047]"
"('Description.java', 'org.junit.runner.Description', 'methodAndClassNamePatternGroupOrDefault', '([\\s\\S]*)\\((.*)\\)', 'testCache_TooSmallLimit(org.eclipse.jgit.internal.storage.file.WindowCacheGetTest)')","[115057, 115121]"
"('URIish.java', 'org.eclipse.jgit.transport.URIish', '<init>', '^([a-z][a-z0-9+-]+)://(?:(?:([^/:@]+)(?::([^\\\\/]+))?@)?((?:[^\\\\/:]+)|(?:\\[[0-9a-f:]+\\]))(?::(\\d+))?((?:/~(?:[^\\\\/]+))?[\\\\/]))?(.+)?$', 'ssh+git://lusr\\example@1.2.3.4/D:\\x')","[226844, 227028]"
"('FastIgnoreRule.java', 'org.eclipse.jgit.ignore.FastIgnoreRule', 'isMatch', '[\\p{Ll}]', 'a')",[99805]
"('URIish.java', 'org.eclipse.jgit.transport.URIish', '<init>', '^([a-z][a-z0-9+-]+)://(?:(?:([^/:@]+)(?::([^\\\\/]+))?@)?((?:[^\\\\/:]+)|(?:\\[[0-9a-f:]+\\]))(?::(\\d+))?((?:/~(?:[^\\\\/]+))?[\\\\/]))?(.+)?$', 'file:///tmp/jgit_test_1219138336105598436_tmp/tmp_4943700805231016094.git/')",[10629]
"('Description.java', 'org.junit.runner.Description', 'methodAndClassNamePatternGroupOrDefault', '([\\s\\S]*)\\((.*)\\)', 'testRemove(org.eclipse.jgit.diff.EditListTest)')","[4119, 4229]"
"('Description.java', 'org.junit.runner.Description', 'methodAndClassNamePatternGroupOrDefault', '([\\s\\S]*)\\((.*)\\)', 'testFormatMinutes(org.eclipse.jgit.util.RelativeDateFormatterTest)')","[31253, 31445]"
"('Description.java', 'org.junit.runner.Description', 'methodAndClassNamePatternGroupOrDefault', '([\\s\\S]*)\\((.*)\\)', 'testStopOnConflictAndContinueWithNoDeltaToMaster(org.eclipse.jgit.api.RebaseCommandTest)')","[132104, 133624]"
"('Description.java', 'org.junit.runner.Description', 'methodAndClassNamePatternGroupOrDefault', '([\\s\\S]*)\\((.*)\\)', 'testRebaseWithUncommittedDelete(org.eclipse.jgit.api.RebaseCommandTest)')","[131159, 132634]"
"('Description.java', 'org.junit.runner.Description', 'methodAndClassNamePatternGroupOrDefault', '([\\s\\S]*)\\((.*)\\)', 'annotatedTags(org.eclipse.jgit.api.NameRevCommandTest)')","[168811, 169046]"
"('URIish.java', 'org.eclipse.jgit.transport.URIish', '<init>', '^(file):([\\\\/](?![\\\\/])((?:[A-Za-z]:)?[\\\\/]?(?:(?:[^\\\\/]+[\\\\/]+)*[^\\\\/]+[\\\\/]*)))$', 'ssh+git://lusr\\example@[::1]:80//')",[213412]
"('Description.java', 'org.junit.runner.Description', 'methodAndClassNamePatternGroupOrDefault', '([\\s\\S]*)\\((.*)\\)', 'now(org.eclipse.jgit.util.GitDateParserTest)')","[21960, 22239]"
"('Description.java', 'org.junit.runner.Description', 'methodAndClassNamePatternGroupOrDefault', '([\\s\\S]*)\\((.*)\\)', 'testEntryType(org.eclipse.jgit.util.RefMapTest)')","[21165, 21643]"
"('Description.java', 'org.junit.runner.Description', 'methodAndClassNamePatternGroupOrDefault', '([\\s\\S]*)\\((.*)\\)', 'testRebaseShouldBeAbleToHandleEmptyLinesInRebaseTodoFile(org.eclipse.jgit.api.RebaseCommandTest)')","[131390, 132876]"
"('Description.java', 'org.junit.runner.Description', 'methodAndClassNamePatternGroupOrDefault', '([\\s\\S]*)\\((.*)\\)', 'testWindowsFile(org.eclipse.jgit.transport.URIishTest)')","[189010, 190414]"
"('Description.java', 'org.junit.runner.Description', 'methodAndClassNamePatternGroupOrDefault', '([\\s\\S]*)\\((.*)\\)', 'testWrite_SmallBlocks3(org.eclipse.jgit.transport.SideBandOutputStreamTest)')","[251913, 252151]"
"('Description.java', 'org.junit.runner.Description', 'methodAndClassNamePatternGroupOrDefault', '([\\s\\S]*)\\((.*)\\)', 'logPathWithMaxCount(org.eclipse.jgit.api.LogCommandTest)')","[130778, 130929]"
"('Description.java', 'org.junit.runner.Description', 'methodAndClassNamePatternGroupOrDefault', '([\\s\\S]*)\\((.*)\\)', 'testInvalidTreeNameIsGiTTilde1(org.eclipse.jgit.lib.ObjectCheckerTest)')","[49508, 52044]"
"('URIish.java', 'org.eclipse.jgit.transport.URIish', '<init>', '^([a-z][a-z0-9+-]+)://(?:(?:([^/:@]+)(?::([^\\\\/]+))?@)?((?:[^\\\\/:]+)|(?:\\[[0-9a-f:]+\\]))(?::(\\d+))?((?:/~(?:[^\\\\/]+))?[\\\\/]))?(.+)?$', 'ssh://me:wtf@[::1]:1234/D:\\x')",[192939]
"('Description.java', 'org.junit.runner.Description', 'methodAndClassNamePatternGroupOrDefault', '([\\s\\S]*)\\((.*)\\)', 'testMixedGroupCase2(org.eclipse.jgit.fnmatch.FileNameMatcherTest)')","[41755, 45030]"
"('FastIgnoreRule.java', 'org.eclipse.jgit.ignore.FastIgnoreRule', 'isMatch', '.r[a-c]', 'xrb')","[107425, 107453]"
"('Description.java', 'org.junit.runner.Description', 'methodAndClassNamePatternGroupOrDefault', '([\\s\\S]*)\\((.*)\\)', 'checkMergeConflictingNewTrees(org.eclipse.jgit.merge.ResolveMergerTest)')","[12616, 12972]"
"('URIish.java', 'org.eclipse.jgit.transport.URIish', '<init>', '^([a-z][a-z0-9+-]+)://(?:(?:([^/:@]+)(?::([^\\\\/]+))?@)?((?:[^\\\\/:]+)|(?:\\[[0-9a-f:]+\\]))(?::(\\d+))?((?:/~(?:[^\\\\/]+))?[\\\\/]))?(.+)?$', 'git://abc')",[247360]
"('Description.java', 'org.junit.runner.Description', 'methodAndClassNamePatternGroupOrDefault', '([\\s\\S]*)\\((.*)\\)', 'testRemoveSlowPath(org.eclipse.jgit.util.BlockListTest)')","[27680, 27943]"
"('URIish.java', 'org.eclipse.jgit.transport.URIish', '<init>', '^(file):([\\\\/](?![\\\\/])((?:[A-Za-z]:)?[\\\\/]?(?:(?:[^\\\\/]+[\\\\/]+)*[^\\\\/]+[\\\\/]*)))$', 'http://lusr\\example@1.2.3.4:1234/D:/x')",[216264]
"('Description.java', 'org.junit.runner.Description', 'methodAndClassNamePatternGroupOrDefault', '([\\s\\S]*)\\((.*)\\)', 'testRemoteNames(org.eclipse.jgit.lib.RefTest)')","[57806, 58001]"
"('URIish.java', 'org.eclipse.jgit.transport.URIish', '<init>', '^(file):([\\\\/](?![\\\\/])((?:[A-Za-z]:)?[\\\\/]?(?:(?:[^\\\\/]+[\\\\/]+)*[^\\\\/]+[\\\\/]*)))$', 'http://lusr\\example:wtf@example.com:1234//abc')",[201812]
"('Description.java', 'org.junit.runner.Description', 'methodAndClassNamePatternGroupOrDefault', '([\\s\\S]*)\\((.*)\\)', 'testRebaseInteractiveMultipleSquash(org.eclipse.jgit.api.RebaseCommandTest)')","[131138, 132612]"
"('URIish.java', 'org.eclipse.jgit.transport.URIish', '<init>', '^(file):([\\\\/](?![\\\\/])((?:[A-Za-z]:)?[\\\\/]?(?:(?:[^\\\\/]+[\\\\/]+)*[^\\\\/]+[\\\\/]*)))$', 'https://lusr\\example@example.com:1234/D:\\x')",[219829]
"('Description.java', 'org.junit.runner.Description', 'methodAndClassNamePatternGroupOrDefault', '([\\s\\S]*)\\((.*)\\)', 'onePathMergeLongerFirstParentPath(org.eclipse.jgit.api.NameRevCommandTest)')","[168937, 169178]"
"('Description.java', 'org.junit.runner.Description', 'methodAndClassNamePatternGroupOrDefault', '([\\s\\S]*)\\((.*)\\)', 'testRefsCacheAfterUpdate(org.eclipse.jgit.internal.storage.file.RefUpdateTest)')","[120285, 121138]"
"('URIish.java', 'org.eclipse.jgit.transport.URIish', '<init>', '^([a-z][a-z0-9+-]+)://(?:(?:([^/:@]+)(?::([^\\\\/]+))?@)?((?:[^\\\\/:]+)|(?:\\[[0-9a-f:]+\\]))(?::(\\d+))?((?:/~(?:[^\\\\/]+))?[\\\\/]))?(.+)?$', 'ssh+git://me@[::1]//')","[224866, 225050]"
"('URIish.java', 'org.eclipse.jgit.transport.URIish', '<init>', '^(file):([\\\\/](?![\\\\/])((?:[A-Za-z]:)?[\\\\/]?(?:(?:[^\\\\/]+[\\\\/]+)*[^\\\\/]+[\\\\/]*)))$', 'https://me:wtf@1.2.3.4:80/D:\\x')",[204350]
"('Description.java', 'org.junit.runner.Description', 'methodAndClassNamePatternGroupOrDefault', '([\\s\\S]*)\\((.*)\\)', 'testMultiRename(org.eclipse.jgit.revwalk.RevWalkFollowFilterTest)')","[180375, 180440]"
"('URIish.java', 'org.eclipse.jgit.transport.URIish', '<init>', '^([a-z][a-z0-9+-]+)://(?:(?:([^/:@]+)(?::([^\\\\/]+))?@)?((?:[^\\\\/:]+)|(?:\\[[0-9a-f:]+\\]))(?::(\\d+))?((?:/~(?:[^\\\\/]+))?[\\\\/]))?(.+)?$', 'https://1.2.3.4//')","[244370, 244554, 245474, 245658, 246578, 246762]"
"('Description.java', 'org.junit.runner.Description', 'methodAndClassNamePatternGroupOrDefault', '([\\s\\S]*)\\((.*)\\)', 'testCLIText(org.eclipse.jgit.nls.RootLocaleTest)')","[41146, 41232]"
"('Description.java', 'org.junit.runner.Description', 'methodAndClassNamePatternGroupOrDefault', '([\\s\\S]*)\\((.*)\\)', 'testValidTreeSorting2(org.eclipse.jgit.lib.ObjectCheckerTest)')","[49046, 51560]"
"('FastIgnoreRule.java', 'org.eclipse.jgit.ignore.FastIgnoreRule', 'isMatch', '.*\\.sta[0-5]', 'test.sta1')","[104747, 105977]"
"('FastIgnoreRule.java', 'org.eclipse.jgit.ignore.FastIgnoreRule', 'isMatch', '[v-z]', 'b')","[78648, 78702, 78756, 78810, 78864, 78918, 79215, 79296]"
"('Description.java', 'org.junit.runner.Description', 'methodAndClassNamePatternGroupOrDefault', '([\\s\\S]*)\\((.*)\\)', 'testValidCommit128Parent(org.eclipse.jgit.lib.ObjectCheckerTest)')","[50159, 52726]"
"('Description.java', 'org.junit.runner.Description', 'methodAndClassNamePatternGroupOrDefault', '([\\s\\S]*)\\((.*)\\)', 'testOnlyOption_f1_12_d(org.eclipse.jgit.api.CommitOnlyTest)')","[135970, 138065]"
"('Description.java', 'org.junit.runner.Description', 'methodAndClassNamePatternGroupOrDefault', '([\\s\\S]*)\\((.*)\\)', 'testSet(org.eclipse.jgit.util.IntListTest)')","[28108, 28343]"
"('URIish.java', 'org.eclipse.jgit.transport.URIish', '<init>', '^(file):([\\\\/](?![\\\\/])((?:[A-Za-z]:)?[\\\\/]?(?:(?:[^\\\\/]+[\\\\/]+)*[^\\\\/]+[\\\\/]*)))$', 'ssh://lusr\\example:wtf@example.com:1234//')",[194352]
"('URIish.java', 'org.eclipse.jgit.transport.URIish', '<init>', '^(?:([^/:@]+)(?::([^\\\\/]+))?@)?((?:[^\\\\/:]+)|(?:\\[[0-9a-f:]+\\])):((?:(?:/~(?:[^\\\\/]+))[\\\\/])?(?:(?:[^\\\\/]+[\\\\/]+)*[^\\\\/]+[\\\\/]*))$', '/tmp/jgit_test_8538603759973152363_tmp/tmp_8885440780712787474')","[146852, 146987, 147203]"
"('URIish.java', 'org.eclipse.jgit.transport.URIish', '<init>', '^([a-z][a-z0-9+-]+)://(?:(?:([^/:@]+)(?::([^\\\\/]+))?@)?((?:[^\\\\/:]+)|(?:\\[[0-9a-f:]+\\]))(?::(\\d+))?((?:/~(?:[^\\\\/]+))?[\\\\/]))?(.+)?$', 'https://me@[::1]:80//')",[217874]
"('URIish.java', 'org.eclipse.jgit.transport.URIish', '<init>', '^(file):([\\\\/](?![\\\\/])((?:[A-Za-z]:)?[\\\\/]?(?:(?:[^\\\\/]+[\\\\/]+)*[^\\\\/]+[\\\\/]*)))$', 'file:///tmp/jgit_test_4120846694434054961_tmp/tmp_6485671899387644126/.git/')",[59791]
"('Description.java', 'org.junit.runner.Description', 'methodAndClassNamePatternGroupOrDefault', '([\\s\\S]*)\\((.*)\\)', 'org.eclipse.jgit.util.io.AutoCRLFOutputStreamTest')","[25692, 25801]"
"('ChangeIdUtil.java', 'org.eclipse.jgit.util.ChangeIdUtil', 'indexOfChangeId', '(^Change-Id: *I[a-f0-9]{40}$)', 'Signed-off-by: J Committer <jc@example.com>')","[34244, 35453, 35737, 35918]"
"('URIish.java', 'org.eclipse.jgit.transport.URIish', '<init>', '^([a-z][a-z0-9+-]+)://(?:(?:([^/:@]+)(?::([^\\\\/]+))?@)?((?:[^\\\\/:]+)|(?:\\[[0-9a-f:]+\\]))(?::(\\d+))?((?:/~(?:[^\\\\/]+))?[\\\\/]))?(.+)?$', 'ssh+git://lusr\\example:wtf@example.com:80//')",[198661]
"('Description.java', 'org.junit.runner.Description', 'methodAndClassNamePatternGroupOrDefault', '([\\s\\S]*)\\((.*)\\)', 'testInCoreInputStream(org.eclipse.jgit.util.TemporaryBufferTest)')","[26722, 27030]"
"('Description.java', 'org.junit.runner.Description', 'methodAndClassNamePatternGroupOrDefault', '([\\s\\S]*)\\((.*)\\)', 'testlogAllRefUpdates(org.eclipse.jgit.lib.ReflogConfigTest)')","[54250, 54272]"
"('Description.java', 'org.junit.runner.Description', 'methodAndClassNamePatternGroupOrDefault', '([\\s\\S]*)\\((.*)\\)', 'testChangeIdAlreadySet(org.eclipse.jgit.util.ChangeIdUtilTest)')","[32140, 32899]"
"('ChangeIdUtil.java', 'org.eclipse.jgit.util.ChangeIdUtil', 'indexOfChangeId', '(^Change-Id: *I[a-f0-9]{40}$)', 'Change-Id: I4f4e2e1e8568ddc1509baecb8c1270a1fb4b6da7')","[35092, 36595]"
"('URIish.java', 'org.eclipse.jgit.transport.URIish', '<init>', '^(file):([\\\\/](?![\\\\/])((?:[A-Za-z]:)?[\\\\/]?(?:(?:[^\\\\/]+[\\\\/]+)*[^\\\\/]+[\\\\/]*)))$', 'http://me@1.2.3.4//')","[227787, 227971]"
"('FastIgnoreRule.java', 'org.eclipse.jgit.ignore.FastIgnoreRule', 'isMatch', '[A\\p{Ll}C3-5]', '5')",[99467]
"('Description.java', 'org.junit.runner.Description', 'methodAndClassNamePatternGroupOrDefault', '([\\s\\S]*)\\((.*)\\)', 'testVerySimpleGroupCase2[OldRule? true](org.eclipse.jgit.ignore.IgnoreRuleSpecialCasesTest)')","[91699, 98783]"
"('Description.java', 'org.junit.runner.Description', 'methodAndClassNamePatternGroupOrDefault', '([\\s\\S]*)\\((.*)\\)', 'testParallelThreadsWithDifferentLocales(org.eclipse.jgit.nls.NLSTest)')","[40915, 41001]"
"('URIish.java', 'org.eclipse.jgit.transport.URIish', '<init>', '^(file):([\\\\/](?![\\\\/])((?:[A-Za-z]:)?[\\\\/]?(?:(?:[^\\\\/]+[\\\\/]+)*[^\\\\/]+[\\\\/]*)))$', 'https://l usr\\example.com@[::1]//')","[232571, 232755]"
"('Description.java', 'org.junit.runner.Description', 'methodAndClassNamePatternGroupOrDefault', '([\\s\\S]*)\\((.*)\\)', 'testDecodeUInt64(org.eclipse.jgit.util.NBTest)')","[39093, 39264]"
"('Description.java', 'org.junit.runner.Description', 'methodAndClassNamePatternGroupOrDefault', '([\\s\\S]*)\\((.*)\\)', 'testObjectId_objectid_invalid_explicit_parent(org.eclipse.jgit.lib.RepositoryResolveTest)')","[71141, 71895]"
"('URIish.java', 'org.eclipse.jgit.transport.URIish', '<init>', '^([\\\\/]?((?:[A-Za-z]:)?[\\\\/]?(?:(?:[^\\\\/]+[\\\\/]+)*[^\\\\/]+[\\\\/]*)))$', '/tmp/jgit_test_72803735483777762_tmp/tmp_5952370543069622143/.git')","[129365, 129515]"
"('URIish.java', 'org.eclipse.jgit.transport.URIish', '<init>', '^(file):([\\\\/](?![\\\\/])((?:[A-Za-z]:)?[\\\\/]?(?:(?:[^\\\\/]+[\\\\/]+)*[^\\\\/]+[\\\\/]*)))$', 'ssh://lusr\\example@[::1]:1234/D:/x')",[210008]
"('URIish.java', 'org.eclipse.jgit.transport.URIish', '<init>', '^(?:([^/:@]+)(?::([^\\\\/]+))?@)?([^\\\\/:]{2,}):([\\\\/](?:(?:[^\\\\/]+[\\\\/]+)*[^\\\\/]+[\\\\/]*))$', '/some/dir')","[254816, 255226, 255396, 255516, 255951, 256219, 256339, 256563, 256786, 256907, 257152, 257562, 257682, 258127]"
"('Description.java', 'org.junit.runner.Description', 'methodAndClassNamePatternGroupOrDefault', '([\\s\\S]*)\\((.*)\\)', 'testTimeout_writeByte_Success2(org.eclipse.jgit.util.io.TimeoutOutputStreamTest)')","[24481, 24674]"
"('ChangeIdUtil.java', 'org.eclipse.jgit.util.ChangeIdUtil', 'indexOfFirstFooterLine', '^[ \\[].*$', ' ')","[35222, 37867]"
"('Description.java', 'org.junit.runner.Description', 'methodAndClassNamePatternGroupOrDefault', '([\\s\\S]*)\\((.*)\\)', 'testGetRefs_IgnoresGarbageRef1(org.eclipse.jgit.internal.storage.file.RefDirectoryTest)')","[110551, 111713]"
"('URIish.java', 'org.eclipse.jgit.transport.URIish', '<init>', '^([a-z][a-z0-9+-]+)://(?:(?:([^/:@]+)(?::([^\\\\/]+))?@)?((?:[^\\\\/:]+)|(?:\\[[0-9a-f:]+\\]))(?::(\\d+))?((?:/~(?:[^\\\\/]+))?[\\\\/]))?(.+)?$', 'https://me@[::1]//abc')","[231536, 231720]"
"('URIish.java', 'org.eclipse.jgit.transport.URIish', '<init>', '^([a-z][a-z0-9+-]+)://(?:(?:([^/:@]+)(?::([^\\\\/]+))?@)?((?:[^\\\\/:]+)|(?:\\[[0-9a-f:]+\\]))(?::(\\d+))?((?:/~(?:[^\\\\/]+))?[\\\\/]))?(.+)?$', 'ssh+git://lusr\\example@example.com:80//')",[212699]
"('Description.java', 'org.junit.runner.Description', 'methodAndClassNamePatternGroupOrDefault', '([\\s\\S]*)\\((.*)\\)', 'testAbbreviateOnEmptyRepository(org.eclipse.jgit.internal.storage.file.AbbreviationTest)')","[121328, 121413]"
"('Description.java', 'org.junit.runner.Description', 'methodAndClassNamePatternGroupOrDefault', '([\\s\\S]*)\\((.*)\\)', 'testCheckoutLightweightTag(org.eclipse.jgit.api.CheckoutCommandTest)')","[149724, 150273]"
"('URIish.java', 'org.eclipse.jgit.transport.URIish', '<init>', '^([\\\\/]?((?:[A-Za-z]:)?[\\\\/]?(?:(?:[^\\\\/]+[\\\\/]+)*[^\\\\/]+[\\\\/]*)))$', '/some/dir')","[254840, 255250, 255420, 255540, 255975, 256243, 256363, 256588, 256811, 256931, 257176, 257586, 257706, 258151]"
"('Description.java', 'org.junit.runner.Description', 'methodAndClassNamePatternGroupOrDefault', '([\\s\\S]*)\\((.*)\\)', 'org.eclipse.jgit.revwalk.TreeRevFilterTest')","[181225, 181463]"
"('Description.java', 'org.junit.runner.Description', 'methodAndClassNamePatternGroupOrDefault', '([\\s\\S]*)\\((.*)\\)', 'testHardReset(org.eclipse.jgit.api.ResetCommandTest)')","[167272, 167615]"
"('FastIgnoreRule.java', 'org.eclipse.jgit.ignore.FastIgnoreRule', 'isMatch', '[\\p{Blank}]', ' ')",[101887]
"('URIish.java', 'org.eclipse.jgit.transport.URIish', '<init>', '^(file):([\\\\/](?![\\\\/])((?:[A-Za-z]:)?[\\\\/]?(?:(?:[^\\\\/]+[\\\\/]+)*[^\\\\/]+[\\\\/]*)))$', 'ssh://lusr\\example@example.com//')","[223003, 223187]"
"('Description.java', 'org.junit.runner.Description', 'methodAndClassNamePatternGroupOrDefault', '([\\s\\S]*)\\((.*)\\)', 'testKernelStyleFooter(org.eclipse.jgit.util.ChangeIdUtilTest)')","[31888, 32635]"
"('Repository.java', 'org.eclipse.jgit.lib.Repository', 'resolve', '^-\\d+$', '-3')","[65019, 65046, 65239, 65266]"
"('Description.java', 'org.junit.runner.Description', 'methodAndClassNamePatternGroupOrDefault', '([\\s\\S]*)\\((.*)\\)', 'testAsterisk[OldRule? false](org.eclipse.jgit.ignore.FastIgnoreRuleTest)')","[77150, 77907]"
"('URIish.java', 'org.eclipse.jgit.transport.URIish', '<init>', '^(file):([\\\\/](?![\\\\/])((?:[A-Za-z]:)?[\\\\/]?(?:(?:[^\\\\/]+[\\\\/]+)*[^\\\\/]+[\\\\/]*)))$', 'ssh+git://lusr\\example@1.2.3.4:80/D:/x')",[213136]
"('URIish.java', 'org.eclipse.jgit.transport.URIish', '<init>', '^(file):([\\\\/](?![\\\\/])((?:[A-Za-z]:)?[\\\\/]?(?:(?:[^\\\\/]+[\\\\/]+)*[^\\\\/]+[\\\\/]*)))$', '/tmp/jgit_test_8538603759973152363_tmp/tmp_8885440780712787474')","[146804, 146929, 147137]"
"('Description.java', 'org.junit.runner.Description', 'methodAndClassNamePatternGroupOrDefault', '([\\s\\S]*)\\((.*)\\)', 'org.eclipse.jgit.revwalk.RevWalkFollowFilterTest')","[180333, 180485]"
"('Description.java', 'org.junit.runner.Description', 'methodAndClassNamePatternGroupOrDefault', '([\\s\\S]*)\\((.*)\\)', 'org.eclipse.jgit.api.CleanCommandTest')","[154594, 154918]"
"('URIish.java', 'org.eclipse.jgit.transport.URIish', '<init>', '^([a-z][a-z0-9+-]+)://(?:(?:([^/:@]+)(?::([^\\\\/]+))?@)?((?:[^\\\\/:]+)|(?:\\[[0-9a-f:]+\\]))(?::(\\d+))?((?:/~(?:[^\\\\/]+))?[\\\\/]))?(.+)?$', 'ssh+git://me@example.com:80//')",[210491]
"('Description.java', 'org.junit.runner.Description', 'methodAndClassNamePatternGroupOrDefault', '([\\s\\S]*)\\((.*)\\)', 'testUsingHiddenDeltaBaseFails(org.eclipse.jgit.transport.ReceivePackAdvertiseRefsHookTest)')","[183089, 183237]"
"('Description.java', 'org.junit.runner.Description', 'methodAndClassNamePatternGroupOrDefault', '([\\s\\S]*)\\((.*)\\)', 'testReadLoosePackedRef(org.eclipse.jgit.lib.RefTest)')","[57848, 58045]"
"('URIish.java', 'org.eclipse.jgit.transport.URIish', '<init>', '^(?:([^/:@]+)(?::([^\\\\/]+))?@)?((?:[^\\\\/:]+)|(?:\\[[0-9a-f:]+\\])):((?:(?:/~(?:[^\\\\/]+))[\\\\/])?(?:(?:[^\\\\/]+[\\\\/]+)*[^\\\\/]+[\\\\/]*))$', '/abc.git')",[247682]
"('URIish.java', 'org.eclipse.jgit.transport.URIish', '<init>', '^(file):([\\\\/](?![\\\\/])((?:[A-Za-z]:)?[\\\\/]?(?:(?:[^\\\\/]+[\\\\/]+)*[^\\\\/]+[\\\\/]*)))$', 'ssh://l usr\\example.com:wtf@1.2.3.4:1234//abc')",[193662]
"('Description.java', 'org.junit.runner.Description', 'methodAndClassNamePatternGroupOrDefault', '([\\s\\S]*)\\((.*)\\)', 'testBoundary(org.eclipse.jgit.util.RawSubStringPatternTest)')","[28577, 28662]"
"('Description.java', 'org.junit.runner.Description', 'methodAndClassNamePatternGroupOrDefault', '([\\s\\S]*)\\((.*)\\)', 'testCreateForce(org.eclipse.jgit.api.BranchCommandTest)')","[128695, 129015]"
"('URIish.java', 'org.eclipse.jgit.transport.URIish', '<init>', '^(file):([\\\\/](?![\\\\/])((?:[A-Za-z]:)?[\\\\/]?(?:(?:[^\\\\/]+[\\\\/]+)*[^\\\\/]+[\\\\/]*)))$', 'https://l usr\\example.com@1.2.3.4/D:\\x')","[232341, 232525]"
"('Description.java', 'org.junit.runner.Description', 'methodAndClassNamePatternGroupOrDefault', '([\\s\\S]*)\\((.*)\\)', 'org.eclipse.jgit.diff.HistogramDiffTest')","[6568, 7869]"
"('Description.java', 'org.junit.runner.Description', 'methodAndClassNamePatternGroupOrDefault', '([\\s\\S]*)\\((.*)\\)', 'testCheckoutAutoCrlfTrue(org.eclipse.jgit.api.CheckoutCommandTest)')","[149283, 149811]"
"('URIish.java', 'org.eclipse.jgit.transport.URIish', '<init>', '^(?:([^/:@]+)(?::([^\\\\/]+))?@)?((?:[^\\\\/:]+)|(?:\\[[0-9a-f:]+\\])):((?:(?:/~(?:[^\\\\/]+))[\\\\/])?(?:(?:[^\\\\/]+[\\\\/]+)*[^\\\\/]+[\\\\/]*))$', '/some/dir')","[254792, 255202, 255372, 255492, 255927, 256195, 256315, 256538, 256761, 256883, 257128, 257538, 257658, 258103]"
"('Description.java', 'org.junit.runner.Description', 'methodAndClassNamePatternGroupOrDefault', '([\\s\\S]*)\\((.*)\\)', 'testBlankGroupCase1(org.eclipse.jgit.fnmatch.FileNameMatcherTest)')","[43792, 47164]"
"('Description.java', 'org.junit.runner.Description', 'methodAndClassNamePatternGroupOrDefault', '([\\s\\S]*)\\((.*)\\)', 'testGraphGroupCase4(org.eclipse.jgit.fnmatch.FileNameMatcherTest)')","[42028, 45316]"
"('Description.java', 'org.junit.runner.Description', 'methodAndClassNamePatternGroupOrDefault', '([\\s\\S]*)\\((.*)\\)', 'testGetRef_AnyHeadWithGarbage(org.eclipse.jgit.internal.storage.file.RefDirectoryTest)')","[111076, 112263]"
"('Description.java', 'org.junit.runner.Description', 'methodAndClassNamePatternGroupOrDefault', '([\\s\\S]*)\\((.*)\\)', 'testDeletionOnMasterConflict(org.eclipse.jgit.api.MergeCommandTest)')","[126853, 127791]"
"('URIish.java', 'org.eclipse.jgit.transport.URIish', '<init>', '^(file):([\\\\/](?![\\\\/])((?:[A-Za-z]:)?[\\\\/]?(?:(?:[^\\\\/]+[\\\\/]+)*[^\\\\/]+[\\\\/]*)))$', 'file:///tmp/jgit_test_7381207999529287529_tmp/tmp_7255833410172097346/.git/')",[60227]
"('Description.java', 'org.junit.runner.Description', 'methodAndClassNamePatternGroupOrDefault', '([\\s\\S]*)\\((.*)\\)', 'invalidWhenDestinationOnlyAndWildcard(org.eclipse.jgit.transport.RefSpecTest)')","[186990, 187731]"
"('Description.java', 'org.junit.runner.Description', 'methodAndClassNamePatternGroupOrDefault', '([\\s\\S]*)\\((.*)\\)', 'getRemoteTrackingBranchShouldReturnNullWithoutMergeBranch(org.eclipse.jgit.lib.BranchConfigTest)')","[54765, 54935]"
"('Description.java', 'org.junit.runner.Description', 'methodAndClassNamePatternGroupOrDefault', '([\\s\\S]*)\\((.*)\\)', 'testDeleteRecursiveEmptyDirectoriesOnlyButIsFile(org.eclipse.jgit.util.FileUtilTest)')","[23373, 23715]"
"('URIish.java', 'org.eclipse.jgit.transport.URIish', '<init>', '^([a-z][a-z0-9+-]+)://(?:(?:([^/:@]+)(?::([^\\\\/]+))?@)?((?:[^\\\\/:]+)|(?:\\[[0-9a-f:]+\\]))(?::(\\d+))?((?:/~(?:[^\\\\/]+))?[\\\\/]))?(.+)?$', 'http://lusr\\example@1.2.3.4:1234//')",[216195]
"('URIish.java', 'org.eclipse.jgit.transport.URIish', '<init>', '^([\\\\/]?((?:[A-Za-z]:)?[\\\\/]?(?:(?:[^\\\\/]+[\\\\/]+)*[^\\\\/]+[\\\\/]*)))$', '/tmp/jgit_test_4266839774263809352_tmp/tmp_2253646626749303486/.git')","[129645, 129795]"
"('URIish.java', 'org.eclipse.jgit.transport.URIish', '<init>', '^(file):([\\\\/](?![\\\\/])((?:[A-Za-z]:)?[\\\\/]?(?:(?:[^\\\\/]+[\\\\/]+)*[^\\\\/]+[\\\\/]*)))$', 'ssh+git://me@[::1]//')","[224843, 225027]"
"('URIish.java', 'org.eclipse.jgit.transport.URIish', '<init>', '^(file):([\\\\/](?![\\\\/])((?:[A-Za-z]:)?[\\\\/]?(?:(?:[^\\\\/]+[\\\\/]+)*[^\\\\/]+[\\\\/]*)))$', 'ssh://lusr\\example:wtf@[::1]:80/D:/x')",[195364]
"('Description.java', 'org.junit.runner.Description', 'methodAndClassNamePatternGroupOrDefault', '([\\s\\S]*)\\((.*)\\)', 'looseRefPacked(org.eclipse.jgit.internal.storage.file.GcPackRefsTest)')","[122830, 122962]"
"('Description.java', 'org.junit.runner.Description', 'methodAndClassNamePatternGroupOrDefault', '([\\s\\S]*)\\((.*)\\)', 'testRejectDevicesOnWindows(org.eclipse.jgit.lib.ObjectCheckerTest)')","[50243, 52814]"
"('URIish.java', 'org.eclipse.jgit.transport.URIish', '<init>', '^([a-z][a-z0-9+-]+)://(?:(?:([^/:@]+)(?::([^\\\\/]+))?@)?((?:[^\\\\/:]+)|(?:\\[[0-9a-f:]+\\]))(?::(\\d+))?((?:/~(?:[^\\\\/]+))?[\\\\/]))?(.+)?$', 'https://lusr\\example:wtf@example.com:1234//')",[205891]
"('Description.java', 'org.junit.runner.Description', 'methodAndClassNamePatternGroupOrDefault', '([\\s\\S]*)\\((.*)\\)', 'testMaliciousGitPath2(org.eclipse.jgit.lib.DirCacheCheckoutMaliciousPathTest)')","[67138, 68053]"
"('Description.java', 'org.junit.runner.Description', 'methodAndClassNamePatternGroupOrDefault', '([\\s\\S]*)\\((.*)\\)', 'testValidCommit2Parent(org.eclipse.jgit.lib.ObjectCheckerTest)')","[49298, 51824]"
"('Description.java', 'org.junit.runner.Description', 'methodAndClassNamePatternGroupOrDefault', '([\\s\\S]*)\\((.*)\\)', 'testFileInFolderCommittedModifiedIgnored(org.eclipse.jgit.treewalk.filter.IndexDiffFilterTest)')","[264674, 265497]"
"('Description.java', 'org.junit.runner.Description', 'methodAndClassNamePatternGroupOrDefault', '([\\s\\S]*)\\((.*)\\)', 'testBlankGroupCase3[OldRule? false](org.eclipse.jgit.ignore.IgnoreRuleSpecialCasesTest)')","[87446, 94551]"
"('URIish.java', 'org.eclipse.jgit.transport.URIish', '<init>', '^([a-z][a-z0-9+-]+)://(?:(?:([^/:@]+)(?::([^\\\\/]+))?@)?((?:[^\\\\/:]+)|(?:\\[[0-9a-f:]+\\]))(?::(\\d+))?((?:/~(?:[^\\\\/]+))?[\\\\/]))?(.+)?$', '/tmp/jgit_test_4286677760507975988_tmp/tmp_6334190847139878105')","[147494, 147624, 147836]"
"('URIish.java', 'org.eclipse.jgit.transport.URIish', '<init>', '^(file):([\\\\/](?![\\\\/])((?:[A-Za-z]:)?[\\\\/]?(?:(?:[^\\\\/]+[\\\\/]+)*[^\\\\/]+[\\\\/]*)))$', 'ssh+git://l usr\\example.com@example.com//')","[225211, 225395]"
"('URIish.java', 'org.eclipse.jgit.transport.URIish', '<init>', '^(file):([\\\\/](?![\\\\/])((?:[A-Za-z]:)?[\\\\/]?(?:(?:[^\\\\/]+[\\\\/]+)*[^\\\\/]+[\\\\/]*)))$', 'https://l usr\\example.com@1.2.3.4:1234/D:\\x')",[219093]
"('URIish.java', 'org.eclipse.jgit.transport.URIish', '<init>', '^(?:([^/:@]+)(?::([^\\\\/]+))?@)?((?:[^\\\\/:]+)|(?:\\[[0-9a-f:]+\\])):((?:(?:/~(?:[^\\\\/]+))[\\\\/])?(?:(?:[^\\\\/]+[\\\\/]+)*[^\\\\/]+[\\\\/]*))$', 'short:project.git')","[257056, 257981]"
"('URIish.java', 'org.eclipse.jgit.transport.URIish', '<init>', '^(file):([\\\\/](?![\\\\/])((?:[A-Za-z]:)?[\\\\/]?(?:(?:[^\\\\/]+[\\\\/]+)*[^\\\\/]+[\\\\/]*)))$', 'ssh+git://me@1.2.3.4/D:/x')","[224567, 224751]"
"('URIish.java', 'org.eclipse.jgit.transport.URIish', '<init>', '^(file):([\\\\/](?![\\\\/])((?:[A-Za-z]:)?[\\\\/]?(?:(?:[^\\\\/]+[\\\\/]+)*[^\\\\/]+[\\\\/]*)))$', 'file:///tmp/jgit_test_3034655928926536309_tmp/tmp_8831357079882312553/.git/')",[57478]
"('Description.java', 'org.junit.runner.Description', 'methodAndClassNamePatternGroupOrDefault', '([\\s\\S]*)\\((.*)\\)', 'untrackedFileIncluded(org.eclipse.jgit.api.StashCreateCommandTest)')","[156156, 156508]"
"('URIish.java', 'org.eclipse.jgit.transport.URIish', '<init>', '^(file):([\\\\/](?![\\\\/])((?:[A-Za-z]:)?[\\\\/]?(?:(?:[^\\\\/]+[\\\\/]+)*[^\\\\/]+[\\\\/]*)))$', 'https://lusr\\example:wtf@[::1]:80/D:/x')",[206880]
"('URIish.java', 'org.eclipse.jgit.transport.URIish', '<init>', '^(file):([\\\\/](?![\\\\/])((?:[A-Za-z]:)?[\\\\/]?(?:(?:[^\\\\/]+[\\\\/]+)*[^\\\\/]+[\\\\/]*)))$', 'http://l usr\\example.com:wtf@1.2.3.4:1234/D:/x')",[201122]
"('Description.java', 'org.junit.runner.Description', 'methodAndClassNamePatternGroupOrDefault', '([\\s\\S]*)\\((.*)\\)', 'testSaveNoTags(org.eclipse.jgit.transport.RemoteConfigTest)')","[253422, 253981]"
"('Description.java', 'org.junit.runner.Description', 'methodAndClassNamePatternGroupOrDefault', '([\\s\\S]*)\\((.*)\\)', 'testOnlyOption_f1_7_f2_14_e(org.eclipse.jgit.api.CommitOnlyTest)')","[134416, 136437]"
"('URIish.java', 'org.eclipse.jgit.transport.URIish', '<init>', '^(file):([\\\\/](?![\\\\/])((?:[A-Za-z]:)?[\\\\/]?(?:(?:[^\\\\/]+[\\\\/]+)*[^\\\\/]+[\\\\/]*)))$', 'https://[::1]//')","[244715, 244899, 245819, 246003, 246923, 247107]"
"('URIish.java', 'org.eclipse.jgit.transport.URIish', '<init>', '^(file):([\\\\/](?![\\\\/])((?:[A-Za-z]:)?[\\\\/]?(?:(?:[^\\\\/]+[\\\\/]+)*[^\\\\/]+[\\\\/]*)))$', 'ssh://user:pass@example.com:33/some/p ath')","[247544, 247590]"
"('URIish.java', 'org.eclipse.jgit.transport.URIish', '<init>', '^(file):([\\\\/](?![\\\\/])((?:[A-Za-z]:)?[\\\\/]?(?:(?:[^\\\\/]+[\\\\/]+)*[^\\\\/]+[\\\\/]*)))$', 'file:///tmp/jgit_test_5499424142043640690_tmp/tmp_4662388987398792546/.git/')",[58136]
"('Description.java', 'org.junit.runner.Description', 'methodAndClassNamePatternGroupOrDefault', '([\\s\\S]*)\\((.*)\\)', 'testIncompleteRangesInOneGroupCase2[OldRule? false](org.eclipse.jgit.ignore.IgnoreRuleSpecialCasesTest)')","[86963, 94068]"
"('URIish.java', 'org.eclipse.jgit.transport.URIish', '<init>', '^([a-z][a-z0-9+-]+)://(?:(?:([^/:@]+)(?::([^\\\\/]+))?@)?((?:[^\\\\/:]+)|(?:\\[[0-9a-f:]+\\]))(?::(\\d+))?((?:/~(?:[^\\\\/]+))?[\\\\/]))?(.+)?$', 'https://l usr\\example.com@[::1]//')","[232594, 232778]"
"('Description.java', 'org.junit.runner.Description', 'methodAndClassNamePatternGroupOrDefault', '([\\s\\S]*)\\((.*)\\)', 'testDetectUnmergedPaths(org.eclipse.jgit.dircache.DirCacheBasicTest)')","[171338, 171888]"
"('Description.java', 'org.junit.runner.Description', 'methodAndClassNamePatternGroupOrDefault', '([\\s\\S]*)\\((.*)\\)', 'testWriteReadTree(org.eclipse.jgit.dircache.DirCacheTreeTest)')","[171671, 171800]"
"('URIish.java', 'org.eclipse.jgit.transport.URIish', '<init>', '^([a-z][a-z0-9+-]+)://(?:(?:([^/:@]+)(?::([^\\\\/]+))?@)?((?:[^\\\\/:]+)|(?:\\[[0-9a-f:]+\\]))(?::(\\d+))?((?:/~(?:[^\\\\/]+))?[\\\\/]))?(.+)?$', 'http://me:wtf@example.com:80//abc')",[199811]
"('URIish.java', 'org.eclipse.jgit.transport.URIish', '<init>', '^([a-z][a-z0-9+-]+)://(?:(?:([^/:@]+)(?::([^\\\\/]+))?@)?((?:[^\\\\/:]+)|(?:\\[[0-9a-f:]+\\]))(?::(\\d+))?((?:/~(?:[^\\\\/]+))?[\\\\/]))?(.+)?$', 'ssh://me@1.2.3.4:1234/D:/x')",[207455]
"('Description.java', 'org.junit.runner.Description', 'methodAndClassNamePatternGroupOrDefault', '([\\s\\S]*)\\((.*)\\)', 'testPunctGroupCase1[OldRule? true](org.eclipse.jgit.ignore.IgnoreRuleSpecialCasesTest)')","[90319, 97403]"
"('URIish.java', 'org.eclipse.jgit.transport.URIish', '<init>', '^(file):([\\\\/](?![\\\\/])((?:[A-Za-z]:)?[\\\\/]?(?:(?:[^\\\\/]+[\\\\/]+)*[^\\\\/]+[\\\\/]*)))$', 'http://me:wtf@1.2.3.4:80/D:/x')",[200202]
"('Description.java', 'org.junit.runner.Description', 'methodAndClassNamePatternGroupOrDefault', '([\\s\\S]*)\\((.*)\\)', 'testRepeatedNegationInDifferentFiles1(org.eclipse.jgit.ignore.IgnoreNodeTest)')","[108103, 108400]"
"('URIish.java', 'org.eclipse.jgit.transport.URIish', '<init>', '^([a-z][a-z0-9+-]+)://(?:(?:([^/:@]+)(?::([^\\\\/]+))?@)?((?:[^\\\\/:]+)|(?:\\[[0-9a-f:]+\\]))(?::(\\d+))?((?:/~(?:[^\\\\/]+))?[\\\\/]))?(.+)?$', 'https://me@example.com:80//')",[217115]
"('URIish.java', 'org.eclipse.jgit.transport.URIish', '<init>', '^([\\\\/]?((?:[A-Za-z]:)?[\\\\/]?(?:(?:[^\\\\/]+[\\\\/]+)*[^\\\\/]+[\\\\/]*)))$', '/tmp/jgit_test_3398920852013764911_tmp/tmp_7767066208309385669')","[162246, 162391, 162541]"
"('URIish.java', 'org.eclipse.jgit.transport.URIish', '<init>', '^(file):([\\\\/](?![\\\\/])((?:[A-Za-z]:)?[\\\\/]?(?:(?:[^\\\\/]+[\\\\/]+)*[^\\\\/]+[\\\\/]*)))$', 'ssh://l usr\\example.com@1.2.3.4/D:/x')","[222359, 222543]"
"('URIish.java', 'org.eclipse.jgit.transport.URIish', '<init>', '^([a-z][a-z0-9+-]+)://(?:(?:([^/:@]+)(?::([^\\\\/]+))?@)?((?:[^\\\\/:]+)|(?:\\[[0-9a-f:]+\\]))(?::(\\d+))?((?:/~(?:[^\\\\/]+))?[\\\\/]))?(.+)?$', 'http://me:wtf@example.com:80/D:\\x')",[199903]
"('URIish.java', 'org.eclipse.jgit.transport.URIish', '<init>', '^([a-z][a-z0-9+-]+)://(?:(?:([^/:@]+)(?::([^\\\\/]+))?@)?((?:[^\\\\/:]+)|(?:\\[[0-9a-f:]+\\]))(?::(\\d+))?((?:/~(?:[^\\\\/]+))?[\\\\/]))?(.+)?$', 'ssh+git://example.com/D:\\x')","[237516, 237700, 238620, 238804, 239724, 239908]"
"('Description.java', 'org.junit.runner.Description', 'methodAndClassNamePatternGroupOrDefault', '([\\s\\S]*)\\((.*)\\)', 'testUpdateMixedCases(org.eclipse.jgit.transport.PushProcessTest)')","[203157, 203699]"
"('Description.java', 'org.junit.runner.Description', 'methodAndClassNamePatternGroupOrDefault', '([\\s\\S]*)\\((.*)\\)', 'testContentMerge(org.eclipse.jgit.api.MergeCommandTest)')","[126916, 127857]"
"('Description.java', 'org.junit.runner.Description', 'methodAndClassNamePatternGroupOrDefault', '([\\s\\S]*)\\((.*)\\)', 'test002_WriteEmptyTree(org.eclipse.jgit.internal.storage.file.T0003_BasicTest)')","[116420, 116949]"
"('Description.java', 'org.junit.runner.Description', 'methodAndClassNamePatternGroupOrDefault', '([\\s\\S]*)\\((.*)\\)', 'testBlankGroupCase1[OldRule? false](org.eclipse.jgit.ignore.IgnoreRuleSpecialCasesTest)')","[87400, 94505]"
"('URIish.java', 'org.eclipse.jgit.transport.URIish', '<init>', '^(file):([\\\\/](?![\\\\/])((?:[A-Za-z]:)?[\\\\/]?(?:(?:[^\\\\/]+[\\\\/]+)*[^\\\\/]+[\\\\/]*)))$', 'https://me@1.2.3.4:1234//abc')",[217322]
"('URIish.java', 'org.eclipse.jgit.transport.URIish', '<init>', '^(file):([\\\\/](?![\\\\/])((?:[A-Za-z]:)?[\\\\/]?(?:(?:[^\\\\/]+[\\\\/]+)*[^\\\\/]+[\\\\/]*)))$', 'ssh+git://me:wtf@example.com:80/D:\\x')",[196568]
"('Description.java', 'org.junit.runner.Description', 'methodAndClassNamePatternGroupOrDefault', '([\\s\\S]*)\\((.*)\\)', 'testResetToNonexistingHEAD(org.eclipse.jgit.api.ResetCommandTest)')","[167398, 167747]"
"('URIish.java', 'org.eclipse.jgit.transport.URIish', '<init>', '^(file):([\\\\/](?![\\\\/])((?:[A-Za-z]:)?[\\\\/]?(?:(?:[^\\\\/]+[\\\\/]+)*[^\\\\/]+[\\\\/]*)))$', 'ssh+git://lusr\\example:wtf@example.com:1234/D:/x')",[198546]
"('URIish.java', 'org.eclipse.jgit.transport.URIish', '<init>', '^([a-z][a-z0-9+-]+)://(?:(?:([^/:@]+)(?::([^\\\\/]+))?@)?((?:[^\\\\/:]+)|(?:\\[[0-9a-f:]+\\]))(?::(\\d+))?((?:/~(?:[^\\\\/]+))?[\\\\/]))?(.+)?$', 'https://l usr\\example.com:wtf@[::1]:80//abc')",[205753]
"('URIish.java', 'org.eclipse.jgit.transport.URIish', '<init>', '^(?:([^/:@]+)(?::([^\\\\/]+))?@)?((?:[^\\\\/:]+)|(?:\\[[0-9a-f:]+\\])):((?:(?:/~(?:[^\\\\/]+))[\\\\/])?(?:(?:[^\\\\/]+[\\\\/]+)*[^\\\\/]+[\\\\/]*))$', '/~some/p ath')","[249821, 249936]"
"('Description.java', 'org.junit.runner.Description', 'methodAndClassNamePatternGroupOrDefault', '([\\s\\S]*)\\((.*)\\)', 'testParseEncoding_ISO8859_1_encoding(org.eclipse.jgit.util.RawParseUtilsTest)')","[39577, 39642]"
"('ChangeIdUtil.java', 'org.eclipse.jgit.util.ChangeIdUtil', 'indexOfChangeId', '(^Change-Id: *I[a-f0-9]{40}$)', 'Signed-off-by: me@you.too')","[33167, 34063, 35118, 36829, 37062, 37634, 37763, 38045]"
"('Description.java', 'org.junit.runner.Description', 'methodAndClassNamePatternGroupOrDefault', '([\\s\\S]*)\\((.*)\\)', 'testGetValidWithSlashesDotGitSlashHumanishName(org.eclipse.jgit.transport.URIishTest)')","[188611, 189996]"
"('URIish.java', 'org.eclipse.jgit.transport.URIish', '<init>', '^(file):([\\\\/](?![\\\\/])((?:[A-Za-z]:)?[\\\\/]?(?:(?:[^\\\\/]+[\\\\/]+)*[^\\\\/]+[\\\\/]*)))$', 'http://l usr\\example.com@example.com//')","[228523, 228707]"
"('Description.java', 'org.junit.runner.Description', 'methodAndClassNamePatternGroupOrDefault', '([\\s\\S]*)\\((.*)\\)', 'testCreateOrigin(org.eclipse.jgit.transport.RemoteConfigTest)')","[253233, 253783]"
"('Description.java', 'org.junit.runner.Description', 'methodAndClassNamePatternGroupOrDefault', '([\\s\\S]*)\\((.*)\\)', 'testCleanWithDryRunAndNoIgnore(org.eclipse.jgit.api.CleanCommandTest)')","[154741, 154895]"
"('Description.java', 'org.junit.runner.Description', 'methodAndClassNamePatternGroupOrDefault', '([\\s\\S]*)\\((.*)\\)', 'testMaybeContains(org.eclipse.jgit.internal.storage.file.InflatingBitSetTest)')","[115958, 116046]"
"('Description.java', 'org.junit.runner.Description', 'methodAndClassNamePatternGroupOrDefault', '([\\s\\S]*)\\((.*)\\)', 'checkLockedFilesToBeDeleted(org.eclipse.jgit.merge.ResolveMergerTest)')","[12574, 12928]"
"('URIish.java', 'org.eclipse.jgit.transport.URIish', '<init>', '^([a-z][a-z0-9+-]+)://(?:(?:([^/:@]+)(?::([^\\\\/]+))?@)?((?:[^\\\\/:]+)|(?:\\[[0-9a-f:]+\\]))(?::(\\d+))?((?:/~(?:[^\\\\/]+))?[\\\\/]))?(.+)?$', 'http://lusr\\example@example.com:1234/D:\\x')",[215965]
"('Description.java', 'org.junit.runner.Description', 'methodAndClassNamePatternGroupOrDefault', '([\\s\\S]*)\\((.*)\\)', 'testFilterIsPrefixOfKey(org.eclipse.jgit.treewalk.filter.PathFilterGroupTest)')","[266265, 266415]"
"('URIish.java', 'org.eclipse.jgit.transport.URIish', '<init>', '^([a-z][a-z0-9+-]+)://(?:(?:([^/:@]+)(?::([^\\\\/]+))?@)?((?:[^\\\\/:]+)|(?:\\[[0-9a-f:]+\\]))(?::(\\d+))?((?:/~(?:[^\\\\/]+))?[\\\\/]))?(.+)?$', 'ssh+git://lusr\\example@example.com//abc')","[226384, 226568]"
"('Description.java', 'org.junit.runner.Description', 'methodAndClassNamePatternGroupOrDefault', '([\\s\\S]*)\\((.*)\\)', 'testDigitGroupCase4[OldRule? true](org.eclipse.jgit.ignore.IgnoreRuleSpecialCasesTest)')","[90020, 97104]"
"('URIish.java', 'org.eclipse.jgit.transport.URIish', '<init>', '^(file):([\\\\/](?![\\\\/])((?:[A-Za-z]:)?[\\\\/]?(?:(?:[^\\\\/]+[\\\\/]+)*[^\\\\/]+[\\\\/]*)))$', 'http://lusr\\example@[::1]:1234//')",[216540]
"('Description.java', 'org.junit.runner.Description', 'methodAndClassNamePatternGroupOrDefault', '([\\s\\S]*)\\((.*)\\)', 'testQuote_Empty(org.eclipse.jgit.util.QuotedStringGitPathStyleTest)')","[40038, 40473]"
"('URIish.java', 'org.eclipse.jgit.transport.URIish', '<init>', '^([a-z][a-z0-9+-]+)://(?:(?:([^/:@]+)(?::([^\\\\/]+))?@)?((?:[^\\\\/:]+)|(?:\\[[0-9a-f:]+\\]))(?::(\\d+))?((?:/~(?:[^\\\\/]+))?[\\\\/]))?(.+)?$', 'ssh+git://lusr\\example@1.2.3.4:1234/D:/x')",[212975]
"('Description.java', 'org.junit.runner.Description', 'methodAndClassNamePatternGroupOrDefault', '([\\s\\S]*)\\((.*)\\)', 'testNegation[OldRule? true](org.eclipse.jgit.ignore.IgnoreMatcherParametrizedTest)')","[103786, 104246]"
"('Description.java', 'org.junit.runner.Description', 'methodAndClassNamePatternGroupOrDefault', '([\\s\\S]*)\\((.*)\\)', 'testDerefTree(org.eclipse.jgit.lib.RepositoryResolveTest)')","[71731, 72333]"
"('Description.java', 'org.junit.runner.Description', 'methodAndClassNamePatternGroupOrDefault', '([\\s\\S]*)\\((.*)\\)', 'testMultipleEscapedCharacters1[OldRule? true](org.eclipse.jgit.ignore.IgnoreRuleSpecialCasesTest)')","[89721, 96805]"
"('URIish.java', 'org.eclipse.jgit.transport.URIish', '<init>', '^([a-z][a-z0-9+-]+)://(?:(?:([^/:@]+)(?::([^\\\\/]+))?@)?((?:[^\\\\/:]+)|(?:\\[[0-9a-f:]+\\]))(?::(\\d+))?((?:/~(?:[^\\\\/]+))?[\\\\/]))?(.+)?$', 'file:///tmp/jgit_test_1523009632444671625_tmp/tmp_1392089401907229157/.git/')",[58385]
"('URIish.java', 'org.eclipse.jgit.transport.URIish', '<init>', '^([\\\\/]?((?:[A-Za-z]:)?[\\\\/]?(?:(?:[^\\\\/]+[\\\\/]+)*[^\\\\/]+[\\\\/]*)))$', '/tmp/jgit_test_6525282766431782376_tmp/tmp_51199864732082123')","[154225, 154370, 154535]"
"('Description.java', 'org.junit.runner.Description', 'methodAndClassNamePatternGroupOrDefault', '([\\s\\S]*)\\((.*)\\)', 'testPathsResetWithUnmerged(org.eclipse.jgit.api.ResetCommandTest)')","[167440, 167791]"
"('URIish.java', 'org.eclipse.jgit.transport.URIish', '<init>', '^([a-z][a-z0-9+-]+)://(?:(?:([^/:@]+)(?::([^\\\\/]+))?@)?((?:[^\\\\/:]+)|(?:\\[[0-9a-f:]+\\]))(?::(\\d+))?((?:/~(?:[^\\\\/]+))?[\\\\/]))?(.+)?$', 'https://l usr\\example.com:wtf@1.2.3.4:1234/D:/x')",[205247]
"('Description.java', 'org.junit.runner.Description', 'methodAndClassNamePatternGroupOrDefault', '([\\s\\S]*)\\((.*)\\)', 'workingDirectoryModify(org.eclipse.jgit.api.StashApplyCommandTest)')","[142792, 143357]"
"('URIish.java', 'org.eclipse.jgit.transport.URIish', '<init>', '^(file):([\\\\/](?![\\\\/])((?:[A-Za-z]:)?[\\\\/]?(?:(?:[^\\\\/]+[\\\\/]+)*[^\\\\/]+[\\\\/]*)))$', '/tmp/jgit_test_2166166318525399122_tmp/tmp_3429394497116144220')","[150749, 150874, 151020]"
"('URIish.java', 'org.eclipse.jgit.transport.URIish', '<init>', '^(file):([\\\\/](?![\\\\/])((?:[A-Za-z]:)?[\\\\/]?(?:(?:[^\\\\/]+[\\\\/]+)*[^\\\\/]+[\\\\/]*)))$', 'https://me@1.2.3.4:1234//')",[217276]
"('Description.java', 'org.junit.runner.Description', 'methodAndClassNamePatternGroupOrDefault', '([\\s\\S]*)\\((.*)\\)', 'onePathMergeSecondParent(org.eclipse.jgit.api.NameRevCommandTest)')","[168916, 169156]"
"('Description.java', 'org.junit.runner.Description', 'methodAndClassNamePatternGroupOrDefault', '([\\s\\S]*)\\((.*)\\)', 'test(org.eclipse.jgit.util.io.AutoCRLFInputStreamTest)')","[25879, 25923]"
"('FastIgnoreRule.java', 'org.eclipse.jgit.ignore.FastIgnoreRule', 'isMatch', '[tv]est\\.sta[a-d]', 'test.stad')","[104963, 106193]"
"('Description.java', 'org.junit.runner.Description', 'methodAndClassNamePatternGroupOrDefault', '([\\s\\S]*)\\((.*)\\)', 'testConfigureCache_PackedGitWindowSizeAbovePackedGitLimit(org.eclipse.jgit.internal.storage.file.WindowCacheReconfigureTest)')","[115556, 115705]"
"('Description.java', 'org.junit.runner.Description', 'methodAndClassNamePatternGroupOrDefault', '([\\s\\S]*)\\((.*)\\)', 'testCloneRepositoryExplicitGitDir(org.eclipse.jgit.api.CloneCommandTest)')","[158884, 159179]"
"('URIish.java', 'org.eclipse.jgit.transport.URIish', '<init>', '^(file):([\\\\/](?![\\\\/])((?:[A-Za-z]:)?[\\\\/]?(?:(?:[^\\\\/]+[\\\\/]+)*[^\\\\/]+[\\\\/]*)))$', 'ssh+git://l usr\\example.com@1.2.3.4/D:/x')","[225671, 225855]"
"('Description.java', 'org.junit.runner.Description', 'methodAndClassNamePatternGroupOrDefault', '([\\s\\S]*)\\((.*)\\)', 'testAddLargeBlocks(org.eclipse.jgit.revwalk.FIFORevQueueTest)')","[176156, 176286]"
"('FastIgnoreRule.java', 'org.eclipse.jgit.ignore.FastIgnoreRule', 'isMatch', 'a.', 'ab')","[81726, 81753, 81780, 81807, 81861, 81915, 81969, 82023, 82077, 82131, 82158, 82185, 82212, 82239, 82293, 82347, 82428, 82509, 82536, 82563, 82590, 82617, 82644, 82671, 82698, 82725, 82752, 82779, 82806, 82833]"
"('URIish.java', 'org.eclipse.jgit.transport.URIish', '<init>', '^([a-z][a-z0-9+-]+)://(?:(?:([^/:@]+)(?::([^\\\\/]+))?@)?((?:[^\\\\/:]+)|(?:\\[[0-9a-f:]+\\]))(?::(\\d+))?((?:/~(?:[^\\\\/]+))?[\\\\/]))?(.+)?$', 'ssh://me@[::1]:1234/D:/x')",[207823]
"('URIish.java', 'org.eclipse.jgit.transport.URIish', '<init>', '^(file):([\\\\/](?![\\\\/])((?:[A-Za-z]:)?[\\\\/]?(?:(?:[^\\\\/]+[\\\\/]+)*[^\\\\/]+[\\\\/]*)))$', 'http://lusr\\example@[::1]:80/D:/x')",[216816]
"('Description.java', 'org.junit.runner.Description', 'methodAndClassNamePatternGroupOrDefault', '([\\s\\S]*)\\((.*)\\)', 'testValidTreeSorting5(org.eclipse.jgit.lib.ObjectCheckerTest)')","[49109, 51626]"
"('URIish.java', 'org.eclipse.jgit.transport.URIish', '<init>', '^([a-z][a-z0-9+-]+)://(?:(?:([^/:@]+)(?::([^\\\\/]+))?@)?((?:[^\\\\/:]+)|(?:\\[[0-9a-f:]+\\]))(?::(\\d+))?((?:/~(?:[^\\\\/]+))?[\\\\/]))?(.+)?$', 'http://l usr\\example.com@1.2.3.4:80/D:\\x')",[215413]
"('URIish.java', 'org.eclipse.jgit.transport.URIish', '<init>', '^(file):([\\\\/](?![\\\\/])((?:[A-Za-z]:)?[\\\\/]?(?:(?:[^\\\\/]+[\\\\/]+)*[^\\\\/]+[\\\\/]*)))$', 'file:/tmp/jgit_test_3149639463277021735_tmp/tmp_4316409130603707111.git/')",[3748]
"('Description.java', 'org.junit.runner.Description', 'methodAndClassNamePatternGroupOrDefault', '([\\s\\S]*)\\((.*)\\)', 'testVerySimplePatternCase2(org.eclipse.jgit.fnmatch.FileNameMatcherTest)')","[42343, 45646]"
"('Description.java', 'org.junit.runner.Description', 'methodAndClassNamePatternGroupOrDefault', '([\\s\\S]*)\\((.*)\\)', 'testNoLog(org.eclipse.jgit.internal.storage.file.ReflogReaderTest)')","[118978, 119150]"
"('Description.java', 'org.junit.runner.Description', 'methodAndClassNamePatternGroupOrDefault', '([\\s\\S]*)\\((.*)\\)', 'testUnchangedComplex(org.eclipse.jgit.lib.IndexDiffTest)')","[68664, 69001]"
"('URIish.java', 'org.eclipse.jgit.transport.URIish', '<init>', '^([a-z][a-z0-9+-]+)://(?:(?:([^/:@]+)(?::([^\\\\/]+))?@)?((?:[^\\\\/:]+)|(?:\\[[0-9a-f:]+\\]))(?::(\\d+))?((?:/~(?:[^\\\\/]+))?[\\\\/]))?(.+)?$', 'ssh+git://l usr\\example.com:wtf@1.2.3.4:80//')",[197925]
"('Description.java', 'org.junit.runner.Description', 'methodAndClassNamePatternGroupOrDefault', '([\\s\\S]*)\\((.*)\\)', 'LOCALELOCAL(org.eclipse.jgit.util.GitDateFormatterTest)')","[26045, 26237]"
"('Description.java', 'org.junit.runner.Description', 'methodAndClassNamePatternGroupOrDefault', '([\\s\\S]*)\\((.*)\\)', 'testWithSlashDoesNotMatchInSubDirectory(org.eclipse.jgit.ignore.IgnoreNodeTest)')","[108229, 108532]"
"('URIish.java', 'org.eclipse.jgit.transport.URIish', '<init>', '^(file):([\\\\/](?![\\\\/])((?:[A-Za-z]:)?[\\\\/]?(?:(?:[^\\\\/]+[\\\\/]+)*[^\\\\/]+[\\\\/]*)))$', 'http://lusr\\example:wtf@[::1]:1234//abc')",[202548]
"('URIish.java', 'org.eclipse.jgit.transport.URIish', '<init>', '^([a-z][a-z0-9+-]+)://(?:(?:([^/:@]+)(?::([^\\\\/]+))?@)?((?:[^\\\\/:]+)|(?:\\[[0-9a-f:]+\\]))(?::(\\d+))?((?:/~(?:[^\\\\/]+))?[\\\\/]))?(.+)?$', 'ssh+git://l usr\\example.com@example.com:1234//')",[211411]
"('Description.java', 'org.junit.runner.Description', 'methodAndClassNamePatternGroupOrDefault', '([\\s\\S]*)\\((.*)\\)', 'testParseLookupPath(org.eclipse.jgit.lib.RepositoryResolveTest)')","[71290, 72113]"
"('Description.java', 'org.junit.runner.Description', 'methodAndClassNamePatternGroupOrDefault', '([\\s\\S]*)\\((.*)\\)', 'testMixedGroupCase2[OldRule? true](org.eclipse.jgit.ignore.IgnoreRuleSpecialCasesTest)')","[88732, 95816]"
"('URIish.java', 'org.eclipse.jgit.transport.URIish', '<init>', '^([a-z][a-z0-9+-]+)://(?:(?:([^/:@]+)(?::([^\\\\/]+))?@)?((?:[^\\\\/:]+)|(?:\\[[0-9a-f:]+\\]))(?::(\\d+))?((?:/~(?:[^\\\\/]+))?[\\\\/]))?(.+)?$', 'ssh://l usr\\example.com@1.2.3.4:1234//')",[208467]
"('URIish.java', 'org.eclipse.jgit.transport.URIish', '<init>', '^([a-z][a-z0-9+-]+)://(?:(?:([^/:@]+)(?::([^\\\\/]+))?@)?((?:[^\\\\/:]+)|(?:\\[[0-9a-f:]+\\]))(?::(\\d+))?((?:/~(?:[^\\\\/]+))?[\\\\/]))?(.+)?$', 'http://1.2.3.4/D:\\x')","[241196, 241380, 242300, 242484, 243404, 243588]"
"('URIish.java', 'org.eclipse.jgit.transport.URIish', '<init>', '^([a-z][a-z0-9+-]+)://(?:(?:([^/:@]+)(?::([^\\\\/]+))?@)?((?:[^\\\\/:]+)|(?:\\[[0-9a-f:]+\\]))(?::(\\d+))?((?:/~(?:[^\\\\/]+))?[\\\\/]))?(.+)?$', 'http://me@example.com:1234//')",[213619]
"('Description.java', 'org.junit.runner.Description', 'methodAndClassNamePatternGroupOrDefault', '([\\s\\S]*)\\((.*)\\)', 'test002_toString(org.eclipse.jgit.lib.ObjectIdTest)')","[53528, 53806]"
"('Description.java', 'org.junit.runner.Description', 'methodAndClassNamePatternGroupOrDefault', '([\\s\\S]*)\\((.*)\\)', 'testNameOnlyMatches(org.eclipse.jgit.ignore.IgnoreMatcherTest)')","[103012, 103206]"
"('URIish.java', 'org.eclipse.jgit.transport.URIish', '<init>', '^(file):([\\\\/](?![\\\\/])((?:[A-Za-z]:)?[\\\\/]?(?:(?:[^\\\\/]+[\\\\/]+)*[^\\\\/]+[\\\\/]*)))$', 'ssh+git://me@1.2.3.4:1234/D:\\x')",[210790]
"('Description.java', 'org.junit.runner.Description', 'methodAndClassNamePatternGroupOrDefault', '([\\s\\S]*)\\((.*)\\)', 'testOnlyOption_f1_6_f2_14_a(org.eclipse.jgit.api.CommitOnlyTest)')","[135592, 137669]"
"('URIish.java', 'org.eclipse.jgit.transport.URIish', '<init>', '^([a-z][a-z0-9+-]+)://(?:(?:([^/:@]+)(?::([^\\\\/]+))?@)?((?:[^\\\\/:]+)|(?:\\[[0-9a-f:]+\\]))(?::(\\d+))?((?:/~(?:[^\\\\/]+))?[\\\\/]))?(.+)?$', 'ssh+git://me@[::1]/D:\\x')","[225004, 225188]"
"('URIish.java', 'org.eclipse.jgit.transport.URIish', '<init>', '^([a-z][a-z0-9+-]+)://(?:(?:([^/:@]+)(?::([^\\\\/]+))?@)?((?:[^\\\\/:]+)|(?:\\[[0-9a-f:]+\\]))(?::(\\d+))?((?:/~(?:[^\\\\/]+))?[\\\\/]))?(.+)?$', 'https://l usr\\example.com@[::1]//abc')","[232640, 232824]"
"('URIish.java', 'org.eclipse.jgit.transport.URIish', '<init>', '^(file):([\\\\/](?![\\\\/])((?:[A-Za-z]:)?[\\\\/]?(?:(?:[^\\\\/]+[\\\\/]+)*[^\\\\/]+[\\\\/]*)))$', 'http://l usr\\example.com@1.2.3.4//')","[228891, 229075]"
"('URIish.java', 'org.eclipse.jgit.transport.URIish', '<init>', '^(file):([\\\\/](?![\\\\/])((?:[A-Za-z]:)?[\\\\/]?(?:(?:[^\\\\/]+[\\\\/]+)*[^\\\\/]+[\\\\/]*)))$', 'ssh+git://l usr\\example.com@example.com:80//abc')",[211618]
"('URIish.java', 'org.eclipse.jgit.transport.URIish', '<init>', '^([a-z][a-z0-9+-]+)://(?:(?:([^/:@]+)(?::([^\\\\/]+))?@)?((?:[^\\\\/:]+)|(?:\\[[0-9a-f:]+\\]))(?::(\\d+))?((?:/~(?:[^\\\\/]+))?[\\\\/]))?(.+)?$', 'http://l usr\\example.com:wtf@[::1]:80//')",[201605]
"('Description.java', 'org.junit.runner.Description', 'methodAndClassNamePatternGroupOrDefault', '([\\s\\S]*)\\((.*)\\)', 'testManySolutionsCase3[OldRule? true](org.eclipse.jgit.ignore.IgnoreRuleSpecialCasesTest)')","[90756, 97840]"
"('Description.java', 'org.junit.runner.Description', 'methodAndClassNamePatternGroupOrDefault', '([\\s\\S]*)\\((.*)\\)', 'testWriteSingleRef(org.eclipse.jgit.transport.BundleWriterTest)')","[185507, 185572]"
"('URIish.java', 'org.eclipse.jgit.transport.URIish', '<init>', '^(file):([\\\\/](?![\\\\/])((?:[A-Za-z]:)?[\\\\/]?(?:(?:[^\\\\/]+[\\\\/]+)*[^\\\\/]+[\\\\/]*)))$', 'http://l usr\\example.com@example.com:80//abc')",[214930]
"('URIish.java', 'org.eclipse.jgit.transport.URIish', '<init>', '^([a-z][a-z0-9+-]+)://(?:(?:([^/:@]+)(?::([^\\\\/]+))?@)?((?:[^\\\\/:]+)|(?:\\[[0-9a-f:]+\\]))(?::(\\d+))?((?:/~(?:[^\\\\/]+))?[\\\\/]))?(.+)?$', 'https://me@example.com:1234//')",[216931]
"('URIish.java', 'org.eclipse.jgit.transport.URIish', '<init>', '^(file):([\\\\/](?![\\\\/])((?:[A-Za-z]:)?[\\\\/]?(?:(?:[^\\\\/]+[\\\\/]+)*[^\\\\/]+[\\\\/]*)))$', 'file:///tmp/jgit_test_4582028382631114631_tmp/tmp_6846814007920204467/.git/')",[57372]
"('Description.java', 'org.junit.runner.Description', 'methodAndClassNamePatternGroupOrDefault', '([\\s\\S]*)\\((.*)\\)', 'testPackWithDuplicateBlob(org.eclipse.jgit.transport.PackParserTest)')","[218423, 218683]"
"('Description.java', 'org.junit.runner.Description', 'methodAndClassNamePatternGroupOrDefault', '([\\s\\S]*)\\((.*)\\)', 'testMultipleDeletions(org.eclipse.jgit.api.MergeCommandTest)')","[126454, 127373]"
"('AttributesRule.java', 'org.eclipse.jgit.attributes.AttributesRule', 'isMatch', '.r[a-c]', '3ra')",[76670]
"('Description.java', 'org.junit.runner.Description', 'methodAndClassNamePatternGroupOrDefault', '([\\s\\S]*)\\((.*)\\)', 'resolveInvalidParentUrl(org.eclipse.jgit.submodule.SubmoduleInitTest)')","[19442, 19590]"
"('Description.java', 'org.junit.runner.Description', 'methodAndClassNamePatternGroupOrDefault', '([\\s\\S]*)\\((.*)\\)', 'testParseGitFileName_SrcFooCNonStandardPrefix(org.eclipse.jgit.patch.FileHeaderTest)')","[660, 1435]"
"('Description.java', 'org.junit.runner.Description', 'methodAndClassNamePatternGroupOrDefault', '([\\s\\S]*)\\((.*)\\)', 'testEdit_DuplicateAButCommonUniqueInB(org.eclipse.jgit.diff.MyersDiffTest)')","[8541, 9092]"
"('FastIgnoreRule.java', 'org.eclipse.jgit.ignore.FastIgnoreRule', 'isMatch', '[b-d]', '-')",[100925]
"('Description.java', 'org.junit.runner.Description', 'methodAndClassNamePatternGroupOrDefault', '([\\s\\S]*)\\((.*)\\)', 'testGetRefs_DiscoversDeletedLoose5(org.eclipse.jgit.internal.storage.file.RefDirectoryTest)')","[111433, 112637]"
"('Description.java', 'org.junit.runner.Description', 'methodAndClassNamePatternGroupOrDefault', '([\\s\\S]*)\\((.*)\\)', 'testInversedGroupCase0[OldRule? false](org.eclipse.jgit.ignore.IgnoreRuleSpecialCasesTest)')","[85951, 93056]"
"('Description.java', 'org.junit.runner.Description', 'methodAndClassNamePatternGroupOrDefault', '([\\s\\S]*)\\((.*)\\)', 'testHasFlags(org.eclipse.jgit.revwalk.LIFORevQueueTest)')","[176494, 176604]"
"('Description.java', 'org.junit.runner.Description', 'methodAndClassNamePatternGroupOrDefault', '([\\s\\S]*)\\((.*)\\)', 'testOldCommitWalk(org.eclipse.jgit.revwalk.RevWalkMergedIntoTest)')","[174825, 174847]"
"('URIish.java', 'org.eclipse.jgit.transport.URIish', '<init>', '^(file):([\\\\/](?![\\\\/])((?:[A-Za-z]:)?[\\\\/]?(?:(?:[^\\\\/]+[\\\\/]+)*[^\\\\/]+[\\\\/]*)))$', 'http://l usr\\example.com@[::1]:80//')",[215620]
"('Description.java', 'org.junit.runner.Description', 'methodAndClassNamePatternGroupOrDefault', '([\\s\\S]*)\\((.*)\\)', 'testWritePack2DeltasCRC32Copy(org.eclipse.jgit.internal.storage.file.PackWriterTest)')","[117992, 118453]"
"('URIish.java', 'org.eclipse.jgit.transport.URIish', '<init>', '^(file):([\\\\/](?![\\\\/])((?:[A-Za-z]:)?[\\\\/]?(?:(?:[^\\\\/]+[\\\\/]+)*[^\\\\/]+[\\\\/]*)))$', '/tmp/jgit_test_2902873097385022246_tmp/tmp_6356966833193134406')","[160432, 160557]"
"('Description.java', 'org.junit.runner.Description', 'methodAndClassNamePatternGroupOrDefault', '([\\s\\S]*)\\((.*)\\)', 'testGetRefs_DiscoversDeletedLoose3(org.eclipse.jgit.internal.storage.file.RefDirectoryTest)')","[111391, 112593]"
"('URIish.java', 'org.eclipse.jgit.transport.URIish', '<init>', '^(?:([^/:@]+)(?::([^\\\\/]+))?@)?([^\\\\/:]{2,}):([\\\\/](?:(?:[^\\\\/]+[\\\\/]+)*[^\\\\/]+[\\\\/]*))$', '/tmp/jgit_test_622044983367939275_tmp/tmp_3909595270568668392')","[148149, 148289, 148568]"
"('Description.java', 'org.junit.runner.Description', 'methodAndClassNamePatternGroupOrDefault', '([\\s\\S]*)\\((.*)\\)', 'testRenameBranchCannotLockAFileHEADisFromLockTo(org.eclipse.jgit.internal.storage.file.RefUpdateTest)')","[120012, 120852]"
"('URIish.java', 'org.eclipse.jgit.transport.URIish', '<init>', '^([a-z][a-z0-9+-]+)://(?:(?:([^/:@]+)(?::([^\\\\/]+))?@)?((?:[^\\\\/:]+)|(?:\\[[0-9a-f:]+\\]))(?::(\\d+))?((?:/~(?:[^\\\\/]+))?[\\\\/]))?(.+)?$', 'file:///tmp/jgit_test_5471313499283770628_tmp/tmp_5967200836362785173/.git/')",[125087]
"('Description.java', 'org.junit.runner.Description', 'methodAndClassNamePatternGroupOrDefault', '([\\s\\S]*)\\((.*)\\)', 'testOnlyOption_f1_1_b(org.eclipse.jgit.api.CommitOnlyTest)')","[134458, 136481]"
"('URIish.java', 'org.eclipse.jgit.transport.URIish', '<init>', '^([a-z][a-z0-9+-]+)://(?:(?:([^/:@]+)(?::([^\\\\/]+))?@)?((?:[^\\\\/:]+)|(?:\\[[0-9a-f:]+\\]))(?::(\\d+))?((?:/~(?:[^\\\\/]+))?[\\\\/]))?(.+)?$', 'http://l usr\\example.com:wtf@example.com:80//')",[200869]
"('URIish.java', 'org.eclipse.jgit.transport.URIish', '<init>', '^([a-z][a-z0-9+-]+)://(?:(?:([^/:@]+)(?::([^\\\\/]+))?@)?((?:[^\\\\/:]+)|(?:\\[[0-9a-f:]+\\]))(?::(\\d+))?((?:/~(?:[^\\\\/]+))?[\\\\/]))?(.+)?$', 'ssh+git://me:wtf@[::1]:80/D:\\x')",[197327]
"('Description.java', 'org.junit.runner.Description', 'methodAndClassNamePatternGroupOrDefault', '([\\s\\S]*)\\((.*)\\)', 'workingDirectoryModifyIndexChanged(org.eclipse.jgit.api.StashApplyCommandTest)')","[142729, 143291]"
"('URIish.java', 'org.eclipse.jgit.transport.URIish', '<init>', '^(file):([\\\\/](?![\\\\/])((?:[A-Za-z]:)?[\\\\/]?(?:(?:[^\\\\/]+[\\\\/]+)*[^\\\\/]+[\\\\/]*)))$', 'file:/tmp/jgit_test_3149639463277021735_tmp/tmp_1847379232626316547/.git/')",[3693]
"('URIish.java', 'org.eclipse.jgit.transport.URIish', '<init>', '^(file):([\\\\/](?![\\\\/])((?:[A-Za-z]:)?[\\\\/]?(?:(?:[^\\\\/]+[\\\\/]+)*[^\\\\/]+[\\\\/]*)))$', 'https://me:wtf@1.2.3.4:80//')",[204146]
"('URIish.java', 'org.eclipse.jgit.transport.URIish', '<init>', '^([a-z][a-z0-9+-]+)://(?:(?:([^/:@]+)(?::([^\\\\/]+))?@)?((?:[^\\\\/:]+)|(?:\\[[0-9a-f:]+\\]))(?::(\\d+))?((?:/~(?:[^\\\\/]+))?[\\\\/]))?(.+)?$', 'http://lusr\\example@1.2.3.4/D:/x')","[230110, 230294]"
"('Description.java', 'org.junit.runner.Description', 'methodAndClassNamePatternGroupOrDefault', '([\\s\\S]*)\\((.*)\\)', 'testHunkHeader(org.eclipse.jgit.patch.EditListTest)')","[78, 143]"
"('URIish.java', 'org.eclipse.jgit.transport.URIish', 'getHumanishName', '^([\\\\/]?((?:[A-Za-z]:)?[\\\\/]?(?:(?:[^\\\\/]+[\\\\/]+)*[^\\\\/]+[\\\\/]*)))$', '/.git')","[191087, 247521]"
"('FastIgnoreRule.java', 'org.eclipse.jgit.ignore.FastIgnoreRule', 'isMatch', '[ab]', 'ab')",[102669]
"('URIish.java', 'org.eclipse.jgit.transport.URIish', '<init>', '^([a-z][a-z0-9+-]+)://(?:(?:([^/:@]+)(?::([^\\\\/]+))?@)?((?:[^\\\\/:]+)|(?:\\[[0-9a-f:]+\\]))(?::(\\d+))?((?:/~(?:[^\\\\/]+))?[\\\\/]))?(.+)?$', 'ssh+git://me:wtf@[::1]:80//abc')",[197235]
"('URIish.java', 'org.eclipse.jgit.transport.URIish', '<init>', '^(file):([\\\\/](?![\\\\/])((?:[A-Za-z]:)?[\\\\/]?(?:(?:[^\\\\/]+[\\\\/]+)*[^\\\\/]+[\\\\/]*)))$', 'ssh+git://lusr\\example:wtf@[::1]:80/D:/x')",[199466]
"('Description.java', 'org.junit.runner.Description', 'methodAndClassNamePatternGroupOrDefault', '([\\s\\S]*)\\((.*)\\)', 'testOverwriteUntrackedIgnoredFile(org.eclipse.jgit.lib.DirCacheCheckoutTest)')","[61860, 62951]"
"('URIish.java', 'org.eclipse.jgit.transport.URIish', '<init>', '^(file):([\\\\/](?![\\\\/])((?:[A-Za-z]:)?[\\\\/]?(?:(?:[^\\\\/]+[\\\\/]+)*[^\\\\/]+[\\\\/]*)))$', 'ssh+git://lusr\\example@1.2.3.4:80//')",[213044]
"('Description.java', 'org.junit.runner.Description', 'methodAndClassNamePatternGroupOrDefault', '([\\s\\S]*)\\((.*)\\)', 'stashedApplyOnOtherBranchWithStagedChange(org.eclipse.jgit.api.StashApplyCommandTest)')","[142645, 143203]"
"('Description.java', 'org.junit.runner.Description', 'methodAndClassNamePatternGroupOrDefault', '([\\s\\S]*)\\((.*)\\)', 'testUnsupportedGroupCase0(org.eclipse.jgit.fnmatch.FileNameMatcherTest)')","[43120, 46460]"
"('Description.java', 'org.junit.runner.Description', 'methodAndClassNamePatternGroupOrDefault', '([\\s\\S]*)\\((.*)\\)', 'testAlphaGroupCase2(org.eclipse.jgit.fnmatch.FileNameMatcherTest)')","[42469, 45778]"
"('URIish.java', 'org.eclipse.jgit.transport.URIish', '<init>', '^(file):([\\\\/](?![\\\\/])((?:[A-Za-z]:)?[\\\\/]?(?:(?:[^\\\\/]+[\\\\/]+)*[^\\\\/]+[\\\\/]*)))$', 'file:///tmp/jgit_test_6951491485595886041_tmp/tmp_8609324631633590643/.git/')",[156984]
"('Description.java', 'org.junit.runner.Description', 'methodAndClassNamePatternGroupOrDefault', '([\\s\\S]*)\\((.*)\\)', 'testIteratorMethodsContract(org.eclipse.jgit.internal.storage.file.PackIndexV2Test)')","[114557, 114685]"
"('Description.java', 'org.junit.runner.Description', 'methodAndClassNamePatternGroupOrDefault', '([\\s\\S]*)\\((.*)\\)', 'testContainsMany(org.eclipse.jgit.internal.storage.file.InflatingBitSetTest)')","[115895, 115980]"
"('Description.java', 'org.junit.runner.Description', 'methodAndClassNamePatternGroupOrDefault', '([\\s\\S]*)\\((.*)\\)', 'testSort_COMMIT_TIME_DESC_OutOfOrder1(org.eclipse.jgit.revwalk.RevWalkSortTest)')","[181879, 182029]"
"('Description.java', 'org.junit.runner.Description', 'methodAndClassNamePatternGroupOrDefault', '([\\s\\S]*)\\((.*)\\)', 'testNoAttributes(org.eclipse.jgit.attributes.AttributesNodeDirCacheIteratorTest)')","[72659, 72765]"
"('Description.java', 'org.junit.runner.Description', 'methodAndClassNamePatternGroupOrDefault', '([\\s\\S]*)\\((.*)\\)', 'testDegenerate_InsertEnd(org.eclipse.jgit.diff.MyersDiffTest)')","[8457, 9004]"
"('Description.java', 'org.junit.runner.Description', 'methodAndClassNamePatternGroupOrDefault', '([\\s\\S]*)\\((.*)\\)', 'testTwoRoots2(org.eclipse.jgit.revplot.PlotCommitListTest)')","[169427, 169750]"
"('FastIgnoreRule.java', 'org.eclipse.jgit.ignore.FastIgnoreRule', 'isMatch', '[b-d]', 'c')",[100847]
"('Description.java', 'org.junit.runner.Description', 'methodAndClassNamePatternGroupOrDefault', '([\\s\\S]*)\\((.*)\\)', 'testDegenerate_InsertStart(org.eclipse.jgit.diff.MyersDiffTest)')","[8854, 9290]"
"('Description.java', 'org.junit.runner.Description', 'methodAndClassNamePatternGroupOrDefault', '([\\s\\S]*)\\((.*)\\)', 'testUsingUnknownBlobFails(org.eclipse.jgit.transport.ReceivePackAdvertiseRefsHookTest)')","[183110, 183259]"
"('Description.java', 'org.junit.runner.Description', 'methodAndClassNamePatternGroupOrDefault', '([\\s\\S]*)\\((.*)\\)', 'testContainsOne(org.eclipse.jgit.internal.storage.file.InflatingBitSetTest)')","[115916, 116002]"
"('Description.java', 'org.junit.runner.Description', 'methodAndClassNamePatternGroupOrDefault', '([\\s\\S]*)\\((.*)\\)', 'testAddIfAbsent(org.eclipse.jgit.lib.ObjectIdSubclassMapTest)')","[63920, 64069]"
"('Description.java', 'org.junit.runner.Description', 'methodAndClassNamePatternGroupOrDefault', '([\\s\\S]*)\\((.*)\\)', 'testSingleLineMessages(org.eclipse.jgit.util.ChangeIdUtilTest)')","[32161, 32921]"
"('Description.java', 'org.junit.runner.Description', 'methodAndClassNamePatternGroupOrDefault', '([\\s\\S]*)\\((.*)\\)', 'testOnlyOption_f1_1_f2_14_c(org.eclipse.jgit.api.CommitOnlyTest)')","[136264, 138373]"
"('Description.java', 'org.junit.runner.Description', 'methodAndClassNamePatternGroupOrDefault', '([\\s\\S]*)\\((.*)\\)', 'org.eclipse.jgit.lib.T0001_PersonIdentTest')","[60580, 60921]"
"('Description.java', 'org.junit.runner.Description', 'methodAndClassNamePatternGroupOrDefault', '([\\s\\S]*)\\((.*)\\)', 'testRevertOurCommitName(org.eclipse.jgit.api.RevertCommandTest)')","[125683, 125902]"
"('Description.java', 'org.junit.runner.Description', 'methodAndClassNamePatternGroupOrDefault', '([\\s\\S]*)\\((.*)\\)', 'testParse_explicit_encoded(org.eclipse.jgit.revwalk.RevCommitParseTest)')","[182635, 183009]"
"('URIish.java', 'org.eclipse.jgit.transport.URIish', '<init>', '^(file):([\\\\/](?![\\\\/])((?:[A-Za-z]:)?[\\\\/]?(?:(?:[^\\\\/]+[\\\\/]+)*[^\\\\/]+[\\\\/]*)))$', 'ssh://me:wtf@example.com:1234//')",[192042]
"('Description.java', 'org.junit.runner.Description', 'methodAndClassNamePatternGroupOrDefault', '([\\s\\S]*)\\((.*)\\)', 'testDeleteNonExisting(org.eclipse.jgit.api.TagCommandTest)')","[157511, 157810]"
"('Description.java', 'org.junit.runner.Description', 'methodAndClassNamePatternGroupOrDefault', '([\\s\\S]*)\\((.*)\\)', 'testNoRenames_SingleByteFiles(org.eclipse.jgit.diff.RenameDetectorTest)')","[4834, 5406]"
"('Description.java', 'org.junit.runner.Description', 'methodAndClassNamePatternGroupOrDefault', '([\\s\\S]*)\\((.*)\\)', 'testEscapedBracket3[OldRule? true](org.eclipse.jgit.ignore.IgnoreRuleSpecialCasesTest)')","[91768, 98852]"
"('URIish.java', 'org.eclipse.jgit.transport.URIish', '<init>', '^(file):([\\\\/](?![\\\\/])((?:[A-Za-z]:)?[\\\\/]?(?:(?:[^\\\\/]+[\\\\/]+)*[^\\\\/]+[\\\\/]*)))$', 'file:///tmp/jgit_test_1453594300143160598_tmp/tmp_6210392552640775347/.git/')",[14605]
"('Description.java', 'org.junit.runner.Description', 'methodAndClassNamePatternGroupOrDefault', '([\\s\\S]*)\\((.*)\\)', 'testInvalidTreeModeNotOctal2(org.eclipse.jgit.lib.ObjectCheckerTest)')","[48521, 51010]"
"('URIish.java', 'org.eclipse.jgit.transport.URIish', '<init>', '^(?:([^/:@]+)(?::([^\\\\/]+))?@)?([^\\\\/:]{2,}):([\\\\/](?:(?:[^\\\\/]+[\\\\/]+)*[^\\\\/]+[\\\\/]*))$', '/tmp/jgit_test_7458934864323210735_tmp/tmp_3824345633208984745.git')",[185404]
"('Description.java', 'org.junit.runner.Description', 'methodAndClassNamePatternGroupOrDefault', '([\\s\\S]*)\\((.*)\\)', 'test009_readNamesInSection(org.eclipse.jgit.lib.ConfigTest)')","[69705, 70434]"
"('Description.java', 'org.junit.runner.Description', 'methodAndClassNamePatternGroupOrDefault', '([\\s\\S]*)\\((.*)\\)', 'org.eclipse.jgit.util.io.EolCanonicalizingInputStreamTest')","[24843, 25167]"
"('Description.java', 'org.junit.runner.Description', 'methodAndClassNamePatternGroupOrDefault', '([\\s\\S]*)\\((.*)\\)', 'testCleanWithDryRun(org.eclipse.jgit.api.CleanCommandTest)')","[154678, 154829]"
"('Description.java', 'org.junit.runner.Description', 'methodAndClassNamePatternGroupOrDefault', '([\\s\\S]*)\\((.*)\\)', 'test1(org.eclipse.jgit.revwalk.RevWalkPathFilter6012Test)')","[178930, 179078]"
"('URIish.java', 'org.eclipse.jgit.transport.URIish', '<init>', '^(file):([\\\\/](?![\\\\/])((?:[A-Za-z]:)?[\\\\/]?(?:(?:[^\\\\/]+[\\\\/]+)*[^\\\\/]+[\\\\/]*)))$', 'file:///home/m%0ay')","[247866, 247912]"
"('Description.java', 'org.junit.runner.Description', 'methodAndClassNamePatternGroupOrDefault', '([\\s\\S]*)\\((.*)\\)', 'testSimpleStarCase1[OldRule? true](org.eclipse.jgit.ignore.IgnoreRuleSpecialCasesTest)')","[89859, 96943]"
"('ChangeIdUtil.java', 'org.eclipse.jgit.util.ChangeIdUtil', 'indexOfFirstFooterLine', '(^[a-zA-Z0-9-]+:(?!//).*$)', '     the indentation]')",[34400]
"('URIish.java', 'org.eclipse.jgit.transport.URIish', '<init>', '^([a-z][a-z0-9+-]+)://(?:(?:([^/:@]+)(?::([^\\\\/]+))?@)?((?:[^\\\\/:]+)|(?:\\[[0-9a-f:]+\\]))(?::(\\d+))?((?:/~(?:[^\\\\/]+))?[\\\\/]))?(.+)?$', 'https://l usr\\example.com:wtf@1.2.3.4:80//')",[205339]
"('URIish.java', 'org.eclipse.jgit.transport.URIish', '<init>', '^([a-z][a-z0-9+-]+)://(?:(?:([^/:@]+)(?::([^\\\\/]+))?@)?((?:[^\\\\/:]+)|(?:\\[[0-9a-f:]+\\]))(?::(\\d+))?((?:/~(?:[^\\\\/]+))?[\\\\/]))?(.+)?$', 'file:///tmp/jgit_test_4203544178191705150_tmp/tmp_1072081446307725160.git/')","[144009, 144065]"
"('Description.java', 'org.junit.runner.Description', 'methodAndClassNamePatternGroupOrDefault', '([\\s\\S]*)\\((.*)\\)', 'SHORT(org.eclipse.jgit.util.GitDateFormatterTest)')","[26150, 26347]"
"('Description.java', 'org.junit.runner.Description', 'methodAndClassNamePatternGroupOrDefault', '([\\s\\S]*)\\((.*)\\)', 'testMaxObjectSizeFullBlob(org.eclipse.jgit.transport.PackParserTest)')","[218381, 218639]"
"('URIish.java', 'org.eclipse.jgit.transport.URIish', '<init>', '^([a-z][a-z0-9+-]+)://(?:(?:([^/:@]+)(?::([^\\\\/]+))?@)?((?:[^\\\\/:]+)|(?:\\[[0-9a-f:]+\\]))(?::(\\d+))?((?:/~(?:[^\\\\/]+))?[\\\\/]))?(.+)?$', 'http://l usr\\example.com@example.com:80//abc')",[214953]
"('URIish.java', 'org.eclipse.jgit.transport.URIish', '<init>', '^(file):([\\\\/](?![\\\\/])((?:[A-Za-z]:)?[\\\\/]?(?:(?:[^\\\\/]+[\\\\/]+)*[^\\\\/]+[\\\\/]*)))$', 'ssh+git://me@[::1]//abc')","[224889, 225073]"
"('URIish.java', 'org.eclipse.jgit.transport.URIish', '<init>', '^([a-z][a-z0-9+-]+)://(?:(?:([^/:@]+)(?::([^\\\\/]+))?@)?((?:[^\\\\/:]+)|(?:\\[[0-9a-f:]+\\]))(?::(\\d+))?((?:/~(?:[^\\\\/]+))?[\\\\/]))?(.+)?$', 'ssh://l usr\\example.com@example.com:80/D:\\x')",[208421]
"('Description.java', 'org.junit.runner.Description', 'methodAndClassNamePatternGroupOrDefault', '([\\s\\S]*)\\((.*)\\)', 'test5_FromString(org.eclipse.jgit.lib.AbbreviatedObjectIdTest)')","[55483, 56025]"
"('URIish.java', 'org.eclipse.jgit.transport.URIish', '<init>', '^([a-z][a-z0-9+-]+)://(?:(?:([^/:@]+)(?::([^\\\\/]+))?@)?((?:[^\\\\/:]+)|(?:\\[[0-9a-f:]+\\]))(?::(\\d+))?((?:/~(?:[^\\\\/]+))?[\\\\/]))?(.+)?$', 'ssh+git://lusr\\example:wtf@[::1]:1234/D:/x')",[199305]
"('Description.java', 'org.junit.runner.Description', 'methodAndClassNamePatternGroupOrDefault', '([\\s\\S]*)\\((.*)\\)', 'org.eclipse.jgit.util.io.UnionInputStreamTest')","[25203, 25656]"
"('Description.java', 'org.junit.runner.Description', 'methodAndClassNamePatternGroupOrDefault', '([\\s\\S]*)\\((.*)\\)', 'testFormatWithConflictsWithFooters(org.eclipse.jgit.merge.MergeMessageFormatterTest)')","[16287, 16614]"
"('URIish.java', 'org.eclipse.jgit.transport.URIish', '<init>', '^([a-z][a-z0-9+-]+)://(?:(?:([^/:@]+)(?::([^\\\\/]+))?@)?((?:[^\\\\/:]+)|(?:\\[[0-9a-f:]+\\]))(?::(\\d+))?((?:/~(?:[^\\\\/]+))?[\\\\/]))?(.+)?$', 'git:///a/b/c//')",[251270]
"('URIish.java', 'org.eclipse.jgit.transport.URIish', '<init>', '^(file):([\\\\/](?![\\\\/])((?:[A-Za-z]:)?[\\\\/]?(?:(?:[^\\\\/]+[\\\\/]+)*[^\\\\/]+[\\\\/]*)))$', 'https://me@example.com:1234/D:/x')",[217000]
"('URIish.java', 'org.eclipse.jgit.transport.URIish', '<init>', '^([\\\\/]?((?:[A-Za-z]:)?[\\\\/]?(?:(?:[^\\\\/]+[\\\\/]+)*[^\\\\/]+[\\\\/]*)))$', '/tmp/jgit_test_982072369712344218_tmp/tmp_4000253905304581205')","[152520, 152665, 152815]"
"('URIish.java', 'org.eclipse.jgit.transport.URIish', '<init>', '^(file):([\\\\/](?![\\\\/])((?:[A-Za-z]:)?[\\\\/]?(?:(?:[^\\\\/]+[\\\\/]+)*[^\\\\/]+[\\\\/]*)))$', 'http://lusr\\example:wtf@example.com:1234//')",[201766]
"('URIish.java', 'org.eclipse.jgit.transport.URIish', '<init>', '^([a-z][a-z0-9+-]+)://(?:(?:([^/:@]+)(?::([^\\\\/]+))?@)?((?:[^\\\\/:]+)|(?:\\[[0-9a-f:]+\\]))(?::(\\d+))?((?:/~(?:[^\\\\/]+))?[\\\\/]))?(.+)?$', 'http://me@[::1]:80//')",[214539]
"('URIish.java', 'org.eclipse.jgit.transport.URIish', '<init>', '^([a-z][a-z0-9+-]+)://(?:(?:([^/:@]+)(?::([^\\\\/]+))?@)?((?:[^\\\\/:]+)|(?:\\[[0-9a-f:]+\\]))(?::(\\d+))?((?:/~(?:[^\\\\/]+))?[\\\\/]))?(.+)?$', 'ssh+git://lusr\\example:wtf@1.2.3.4:80/D:\\x')",[199167]
"('URIish.java', 'org.eclipse.jgit.transport.URIish', '<init>', '^([a-z][a-z0-9+-]+)://(?:(?:([^/:@]+)(?::([^\\\\/]+))?@)?((?:[^\\\\/:]+)|(?:\\[[0-9a-f:]+\\]))(?::(\\d+))?((?:/~(?:[^\\\\/]+))?[\\\\/]))?(.+)?$', 'ssh+git://me@1.2.3.4:80/D:\\x')",[210997]
"('FastIgnoreRule.java', 'org.eclipse.jgit.ignore.FastIgnoreRule', 'isMatch', '.rc', 'src')","[106829, 106856, 106910, 106964, 106991, 107019]"
"('Description.java', 'org.junit.runner.Description', 'methodAndClassNamePatternGroupOrDefault', '([\\s\\S]*)\\((.*)\\)', 'testNoRenames_SymlinkAndFileSamePath(org.eclipse.jgit.diff.RenameDetectorTest)')","[4813, 5384]"
"('Description.java', 'org.junit.runner.Description', 'methodAndClassNamePatternGroupOrDefault', '([\\s\\S]*)\\((.*)\\)', 'testNameOnlyMatches(org.eclipse.jgit.attributes.AttributesMatcherTest)')","[73565, 73717]"
"('Description.java', 'org.junit.runner.Description', 'methodAndClassNamePatternGroupOrDefault', '([\\s\\S]*)\\((.*)\\)', 'testReadFromInserterLargerObjects(org.eclipse.jgit.internal.storage.dfs.DfsInserterTest)')","[109505, 109614]"
"('Description.java', 'org.junit.runner.Description', 'methodAndClassNamePatternGroupOrDefault', '([\\s\\S]*)\\((.*)\\)', 'testAlnumGroupCase0[OldRule? false](org.eclipse.jgit.ignore.IgnoreRuleSpecialCasesTest)')","[87745, 94850]"
"('FastIgnoreRule.java', 'org.eclipse.jgit.ignore.FastIgnoreRule', 'isMatch', '.r[a-c]', '1ra')",[107561]
"('Description.java', 'org.junit.runner.Description', 'methodAndClassNamePatternGroupOrDefault', '([\\s\\S]*)\\((.*)\\)', 'withCommitLoadedByDifferentRevWalk(org.eclipse.jgit.revwalk.RevWalkUtilsReachableTest)')","[177065, 177172]"
"('Description.java', 'org.junit.runner.Description', 'methodAndClassNamePatternGroupOrDefault', '([\\s\\S]*)\\((.*)\\)', 'testTimeout_skip_Timeout(org.eclipse.jgit.util.io.TimeoutInputStreamTest)')","[24015, 24184]"
"('Description.java', 'org.junit.runner.Description', 'methodAndClassNamePatternGroupOrDefault', '([\\s\\S]*)\\((.*)\\)', 'testDepth3(org.eclipse.jgit.revwalk.RevWalkShallowTest)')","[181625, 181757]"
"('URIish.java', 'org.eclipse.jgit.transport.URIish', '<init>', '^(file):([\\\\/](?![\\\\/])((?:[A-Za-z]:)?[\\\\/]?(?:(?:[^\\\\/]+[\\\\/]+)*[^\\\\/]+[\\\\/]*)))$', 'https://lusr\\example@1.2.3.4:80/D:/x')",[220335]
"('Description.java', 'org.junit.runner.Description', 'methodAndClassNamePatternGroupOrDefault', '([\\s\\S]*)\\((.*)\\)', 'testMoveToOtherDir(org.eclipse.jgit.api.BlameCommandTest)')","[139820, 140208]"
"('URIish.java', 'org.eclipse.jgit.transport.URIish', '<init>', '^(file):([\\\\/](?![\\\\/])((?:[A-Za-z]:)?[\\\\/]?(?:(?:[^\\\\/]+[\\\\/]+)*[^\\\\/]+[\\\\/]*)))$', 'https://lusr\\example@example.com:1234//abc')",[219737]
"('URIish.java', 'org.eclipse.jgit.transport.URIish', '<init>', '^(file):([\\\\/](?![\\\\/])((?:[A-Za-z]:)?[\\\\/]?(?:(?:[^\\\\/]+[\\\\/]+)*[^\\\\/]+[\\\\/]*)))$', 'https://l usr\\example.com@example.com:80/D:\\x')",[218909]
"('Description.java', 'org.junit.runner.Description', 'methodAndClassNamePatternGroupOrDefault', '([\\s\\S]*)\\((.*)\\)', 'testOneByte(org.eclipse.jgit.util.TemporaryBufferTest)')","[26449, 26744]"
"('Description.java', 'org.junit.runner.Description', 'methodAndClassNamePatternGroupOrDefault', '([\\s\\S]*)\\((.*)\\)', 'repositoryWithUninitializedSubmodule(org.eclipse.jgit.submodule.SubmoduleStatusTest)')","[18760, 18910]"
"('Description.java', 'org.junit.runner.Description', 'methodAndClassNamePatternGroupOrDefault', '([\\s\\S]*)\\((.*)\\)', 'org.eclipse.jgit.merge.CherryPickTest')","[11747, 11856]"
"('Description.java', 'org.junit.runner.Description', 'methodAndClassNamePatternGroupOrDefault', '([\\s\\S]*)\\((.*)\\)', 'testTrivialTwoWay_concurrentSubtreeChange(org.eclipse.jgit.merge.SimpleMergeTest)')","[15690, 15976]"
"('Description.java', 'org.junit.runner.Description', 'methodAndClassNamePatternGroupOrDefault', '([\\s\\S]*)\\((.*)\\)', 'testReadLines_singleLine(org.eclipse.jgit.util.ReadLinesTest)')","[30453, 30581]"
"('URIish.java', 'org.eclipse.jgit.transport.URIish', '<init>', '^(file):([\\\\/](?![\\\\/])((?:[A-Za-z]:)?[\\\\/]?(?:(?:[^\\\\/]+[\\\\/]+)*[^\\\\/]+[\\\\/]*)))$', 'ssh+git://l usr\\example.com:wtf@[::1]:80/D:/x')",[198362]
"('URIish.java', 'org.eclipse.jgit.transport.URIish', '<init>', '^(file):([\\\\/](?![\\\\/])((?:[A-Za-z]:)?[\\\\/]?(?:(?:[^\\\\/]+[\\\\/]+)*[^\\\\/]+[\\\\/]*)))$', 'ssh+git://lusr\\example:wtf@[::1]:80//abc')",[199420]
"('URIish.java', 'org.eclipse.jgit.transport.URIish', '<init>', '^(?:([^/:@]+)(?::([^\\\\/]+))?@)?([^\\\\/:]{2,}):([\\\\/](?:(?:[^\\\\/]+[\\\\/]+)*[^\\\\/]+[\\\\/]*))$', '/tmp/jgit_test_6323444599553401210_tmp/tmp_1339419818471425794')","[159561, 159701, 159902, 160114, 160316]"
"('Description.java', 'org.junit.runner.Description', 'methodAndClassNamePatternGroupOrDefault', '([\\s\\S]*)\\((.*)\\)', 'testParentDirectoryGitIgnores[OldRule? false](org.eclipse.jgit.ignore.IgnoreMatcherParametrizedTest)')","[103397, 103878]"
"('ChangeIdUtil.java', 'org.eclipse.jgit.util.ChangeIdUtil', 'indexOfFirstFooterLine', '(^[a-zA-Z0-9-]+:(?!//).*$)', 'http://example.com/ fixes this')",[36226]
"('Description.java', 'org.junit.runner.Description', 'methodAndClassNamePatternGroupOrDefault', '([\\s\\S]*)\\((.*)\\)', 'testReadWriteMergeMsg(org.eclipse.jgit.lib.MergeHeadMsgTest)')","[68540, 68584]"
"('Description.java', 'org.junit.runner.Description', 'methodAndClassNamePatternGroupOrDefault', '([\\s\\S]*)\\((.*)\\)', 'testUntrackedConflicts(org.eclipse.jgit.lib.DirCacheCheckoutTest)')","[61188, 62175]"
"('FastIgnoreRule.java', 'org.eclipse.jgit.ignore.FastIgnoreRule', 'isMatch', '[[\\p{javaDigit}\\p{javaLetter}_]]', '.')",[102435]
"('Description.java', 'org.junit.runner.Description', 'methodAndClassNamePatternGroupOrDefault', '([\\s\\S]*)\\((.*)\\)', 'lightweightTag_objectNotPruned(org.eclipse.jgit.internal.storage.file.GcTagTest)')","[110301, 110345]"
"('Description.java', 'org.junit.runner.Description', 'methodAndClassNamePatternGroupOrDefault', '([\\s\\S]*)\\((.*)\\)', 'testMustHaveTwoComponents(org.eclipse.jgit.lib.ValidRefNameTest)')","[65970, 66342]"
"('Description.java', 'org.junit.runner.Description', 'methodAndClassNamePatternGroupOrDefault', '([\\s\\S]*)\\((.*)\\)', 'shouldReportFileModeChange(org.eclipse.jgit.diff.DiffEntryTest)')","[10019, 10278]"
"('Description.java', 'org.junit.runner.Description', 'methodAndClassNamePatternGroupOrDefault', '([\\s\\S]*)\\((.*)\\)', 'testDeleteMaster(org.eclipse.jgit.transport.RefSpecTest)')","[186759, 187489]"
"('Description.java', 'org.junit.runner.Description', 'methodAndClassNamePatternGroupOrDefault', '([\\s\\S]*)\\((.*)\\)', 'testObjectId_objectid_implicit_firstparent(org.eclipse.jgit.lib.RepositoryResolveTest)')","[71561, 72179]"
"('Description.java', 'org.junit.runner.Description', 'methodAndClassNamePatternGroupOrDefault', '([\\s\\S]*)\\((.*)\\)', 'testSpecialGroupCase9(org.eclipse.jgit.fnmatch.FileNameMatcherTest)')","[41545, 44810]"
"('URIish.java', 'org.eclipse.jgit.transport.URIish', '<init>', '^(file):([\\\\/](?![\\\\/])((?:[A-Za-z]:)?[\\\\/]?(?:(?:[^\\\\/]+[\\\\/]+)*[^\\\\/]+[\\\\/]*)))$', 'file:///tmp/jgit_test_4587677862206615588_tmp/tmp_510146673856571520/.git/')",[125406]
"('Description.java', 'org.junit.runner.Description', 'methodAndClassNamePatternGroupOrDefault', '([\\s\\S]*)\\((.*)\\)', 'testReadWriteV3(org.eclipse.jgit.dircache.DirCacheCGitCompatabilityTest)')","[173023, 173175]"
"('FastIgnoreRule.java', 'org.eclipse.jgit.ignore.FastIgnoreRule', 'isMatch', 'a.*a.*a', 'aaa')",[101601]
"('URIish.java', 'org.eclipse.jgit.transport.URIish', '<init>', '^(file):([\\\\/](?![\\\\/])((?:[A-Za-z]:)?[\\\\/]?(?:(?:[^\\\\/]+[\\\\/]+)*[^\\\\/]+[\\\\/]*)))$', 'https://lusr\\example@[::1]:80//')",[220611]
"('URIish.java', 'org.eclipse.jgit.transport.URIish', '<init>', '^(file):([\\\\/](?![\\\\/])((?:[A-Za-z]:)?[\\\\/]?(?:(?:[^\\\\/]+[\\\\/]+)*[^\\\\/]+[\\\\/]*)))$', 'ssh+git://l usr\\example.com@[::1]:1234//abc')",[212170]
"('URIish.java', 'org.eclipse.jgit.transport.URIish', '<init>', '^(file):([\\\\/](?![\\\\/])((?:[A-Za-z]:)?[\\\\/]?(?:(?:[^\\\\/]+[\\\\/]+)*[^\\\\/]+[\\\\/]*)))$', 'https://l usr\\example.com:wtf@1.2.3.4:80/D:\\x')",[205454]
"('QuotedString.java', 'org.eclipse.jgit.util.QuotedString$BourneUserPathStyle', 'quote', '^~[A-Za-z0-9_-]+$', '!')","[30072, 30097]"
"('URIish.java', 'org.eclipse.jgit.transport.URIish', '<init>', '^(?:([^/:@]+)(?::([^\\\\/]+))?@)?([^\\\\/:]{2,}):([\\\\/](?:(?:[^\\\\/]+[\\\\/]+)*[^\\\\/]+[\\\\/]*))$', 'user@repo.or.cz:/srv/git/egit.git')",[257856]
"('Description.java', 'org.junit.runner.Description', 'methodAndClassNamePatternGroupOrDefault', '([\\s\\S]*)\\((.*)\\)', 'testNoMatchingAttributes(org.eclipse.jgit.attributes.AttributesNodeDirCacheIteratorTest)')","[72722, 72831]"
"('URIish.java', 'org.eclipse.jgit.transport.URIish', '<init>', '^(file):([\\\\/](?![\\\\/])((?:[A-Za-z]:)?[\\\\/]?(?:(?:[^\\\\/]+[\\\\/]+)*[^\\\\/]+[\\\\/]*)))$', 'file:/tmp/jgit_test_500639673404351849_tmp/tmp_418537364732325258/.git/')","[13723, 13751, 13846, 13874]"
"('URIish.java', 'org.eclipse.jgit.transport.URIish', '<init>', '^([a-z][a-z0-9+-]+)://(?:(?:([^/:@]+)(?::([^\\\\/]+))?@)?((?:[^\\\\/:]+)|(?:\\[[0-9a-f:]+\\]))(?::(\\d+))?((?:/~(?:[^\\\\/]+))?[\\\\/]))?(.+)?$', 'http://me@example.com/D:/x')","[227534, 227718]"
"('Description.java', 'org.junit.runner.Description', 'methodAndClassNamePatternGroupOrDefault', '([\\s\\S]*)\\((.*)\\)', 'testCheckoutOfDirectoryShouldBeRecursive(org.eclipse.jgit.api.CheckoutCommandTest)')","[149262, 149789]"
"('Description.java', 'org.junit.runner.Description', 'methodAndClassNamePatternGroupOrDefault', '([\\s\\S]*)\\((.*)\\)', 'testError_GitBinaryNoForwardHunk(org.eclipse.jgit.patch.PatchErrorTest)')","[1150, 1325]"
"('URIish.java', 'org.eclipse.jgit.transport.URIish', '<init>', '^(file):([\\\\/](?![\\\\/])((?:[A-Za-z]:)?[\\\\/]?(?:(?:[^\\\\/]+[\\\\/]+)*[^\\\\/]+[\\\\/]*)))$', 'file:/tmp/jgit_test_4236178983154660084_tmp/tmp_6596808175431128322/.git/')",[63232]
"('URIish.java', 'org.eclipse.jgit.transport.URIish', '<init>', '^([a-z][a-z0-9+-]+)://(?:(?:([^/:@]+)(?::([^\\\\/]+))?@)?((?:[^\\\\/:]+)|(?:\\[[0-9a-f:]+\\]))(?::(\\d+))?((?:/~(?:[^\\\\/]+))?[\\\\/]))?(.+)?$', 'http://me:wtf@1.2.3.4:1234//abc')",[199995]
"('URIish.java', 'org.eclipse.jgit.transport.URIish', '<init>', '^(file):([\\\\/](?![\\\\/])((?:[A-Za-z]:)?[\\\\/]?(?:(?:[^\\\\/]+[\\\\/]+)*[^\\\\/]+[\\\\/]*)))$', 'https://l usr\\example.com@1.2.3.4:80//abc')",[219185]
"('Description.java', 'org.junit.runner.Description', 'methodAndClassNamePatternGroupOrDefault', '([\\s\\S]*)\\((.*)\\)', 'testTimeout_close_Success(org.eclipse.jgit.util.io.TimeoutOutputStreamTest)')","[24502, 24696]"
"('URIish.java', 'org.eclipse.jgit.transport.URIish', '<init>', '^([a-z][a-z0-9+-]+)://(?:(?:([^/:@]+)(?::([^\\\\/]+))?@)?((?:[^\\\\/:]+)|(?:\\[[0-9a-f:]+\\]))(?::(\\d+))?((?:/~(?:[^\\\\/]+))?[\\\\/]))?(.+)?$', '/tmp/jgit_test_2166166318525399122_tmp/tmp_3429394497116144220')","[150773, 150903, 151050]"
"('Description.java', 'org.junit.runner.Description', 'methodAndClassNamePatternGroupOrDefault', '([\\s\\S]*)\\((.*)\\)', 'testEmptyStream(org.eclipse.jgit.util.io.UnionInputStreamTest)')","[25329, 25545]"
"('Description.java', 'org.junit.runner.Description', 'methodAndClassNamePatternGroupOrDefault', '([\\s\\S]*)\\((.*)\\)', 'testBinaryDetect(org.eclipse.jgit.util.io.EolCanonicalizingInputStreamTest)')","[24969, 25122]"
"('Description.java', 'org.junit.runner.Description', 'methodAndClassNamePatternGroupOrDefault', '([\\s\\S]*)\\((.*)\\)', 'testDigitGroupCase3[OldRule? false](org.eclipse.jgit.ignore.IgnoreRuleSpecialCasesTest)')","[86434, 93539]"
"('Description.java', 'org.junit.runner.Description', 'methodAndClassNamePatternGroupOrDefault', '([\\s\\S]*)\\((.*)\\)', 'testCommitRange(org.eclipse.jgit.api.CommitAndLogCommandTest)')","[155101, 155318]"
"('URIish.java', 'org.eclipse.jgit.transport.URIish', '<init>', '^([a-z][a-z0-9+-]+)://(?:(?:([^/:@]+)(?::([^\\\\/]+))?@)?((?:[^\\\\/:]+)|(?:\\[[0-9a-f:]+\\]))(?::(\\d+))?((?:/~(?:[^\\\\/]+))?[\\\\/]))?(.+)?$', 'ssh+git://me:wtf@[::1]:1234/D:/x')",[197097]
"('Description.java', 'org.junit.runner.Description', 'methodAndClassNamePatternGroupOrDefault', '([\\s\\S]*)\\((.*)\\)', 'testSegments[OldRule? true](org.eclipse.jgit.ignore.FastIgnoreRuleTest)')","[77700, 78436]"
"('Description.java', 'org.junit.runner.Description', 'methodAndClassNamePatternGroupOrDefault', '([\\s\\S]*)\\((.*)\\)', 'testTwoNonConflictingModifications(org.eclipse.jgit.merge.MergeAlgorithmTest)')","[11955, 12252]"
"('Description.java', 'org.junit.runner.Description', 'methodAndClassNamePatternGroupOrDefault', '([\\s\\S]*)\\((.*)\\)', 'testEdit_MoveBlock(org.eclipse.jgit.diff.MyersDiffTest)')","[8520, 9070]"
"('Description.java', 'org.junit.runner.Description', 'methodAndClassNamePatternGroupOrDefault', '([\\s\\S]*)\\((.*)\\)', 'testInvalidTagInvalidTaggerHeader3(org.eclipse.jgit.lib.ObjectCheckerTest)')","[49592, 52132]"
"('URIish.java', 'org.eclipse.jgit.transport.URIish', '<init>', '^([a-z][a-z0-9+-]+)://(?:(?:([^/:@]+)(?::([^\\\\/]+))?@)?((?:[^\\\\/:]+)|(?:\\[[0-9a-f:]+\\]))(?::(\\d+))?((?:/~(?:[^\\\\/]+))?[\\\\/]))?(.+)?$', 'ssh://lusr\\example@[::1]//')","[223762, 223946]"
"('URIish.java', 'org.eclipse.jgit.transport.URIish', '<init>', '^(file):([\\\\/](?![\\\\/])((?:[A-Za-z]:)?[\\\\/]?(?:(?:[^\\\\/]+[\\\\/]+)*[^\\\\/]+[\\\\/]*)))$', 'ssh://me@1.2.3.4:1234/D:\\x')",[207478]
"('URIish.java', 'org.eclipse.jgit.transport.URIish', '<init>', '^([a-z][a-z0-9+-]+)://(?:(?:([^/:@]+)(?::([^\\\\/]+))?@)?((?:[^\\\\/:]+)|(?:\\[[0-9a-f:]+\\]))(?::(\\d+))?((?:/~(?:[^\\\\/]+))?[\\\\/]))?(.+)?$', 'ssh://lusr\\example:wtf@[::1]:1234//')",[195111]
"('URIish.java', 'org.eclipse.jgit.transport.URIish', '<init>', '^(file):([\\\\/](?![\\\\/])((?:[A-Za-z]:)?[\\\\/]?(?:(?:[^\\\\/]+[\\\\/]+)*[^\\\\/]+[\\\\/]*)))$', 'https://lusr\\example@example.com//')","[232939, 233123]"
"('URIish.java', 'org.eclipse.jgit.transport.URIish', '<init>', '^([a-z][a-z0-9+-]+)://(?:(?:([^/:@]+)(?::([^\\\\/]+))?@)?((?:[^\\\\/:]+)|(?:\\[[0-9a-f:]+\\]))(?::(\\d+))?((?:/~(?:[^\\\\/]+))?[\\\\/]))?(.+)?$', 'ssh+git://l usr\\example.com@1.2.3.4/D:/x')","[225694, 225878]"
"('URIish.java', 'org.eclipse.jgit.transport.URIish', '<init>', '^(file):([\\\\/](?![\\\\/])((?:[A-Za-z]:)?[\\\\/]?(?:(?:[^\\\\/]+[\\\\/]+)*[^\\\\/]+[\\\\/]*)))$', 'ssh+git://l usr\\example.com@[::1]:1234/D:/x')",[212216]
"('URIish.java', 'org.eclipse.jgit.transport.URIish', '<init>', '^(file):([\\\\/](?![\\\\/])((?:[A-Za-z]:)?[\\\\/]?(?:(?:[^\\\\/]+[\\\\/]+)*[^\\\\/]+[\\\\/]*)))$', 'git://host/abc/')",[248510]
"('URIish.java', 'org.eclipse.jgit.transport.URIish', '<init>', '^(file):([\\\\/](?![\\\\/])((?:[A-Za-z]:)?[\\\\/]?(?:(?:[^\\\\/]+[\\\\/]+)*[^\\\\/]+[\\\\/]*)))$', 'http://me@example.com:1234//abc')",[213642]
"('Description.java', 'org.junit.runner.Description', 'methodAndClassNamePatternGroupOrDefault', '([\\s\\S]*)\\((.*)\\)', 'testMergeFailingWithDirtyWorkingTree(org.eclipse.jgit.api.MergeCommandTest)')","[126979, 127923]"
"('Description.java', 'org.junit.runner.Description', 'methodAndClassNamePatternGroupOrDefault', '([\\s\\S]*)\\((.*)\\)', 'testValidCommitNormalTime(org.eclipse.jgit.lib.ObjectCheckerTest)')","[49529, 52066]"
"('Description.java', 'org.junit.runner.Description', 'methodAndClassNamePatternGroupOrDefault', '([\\s\\S]*)\\((.*)\\)', 'testSlashOnlyMatchesDirectory(org.eclipse.jgit.ignore.IgnoreNodeTest)')","[108271, 108576]"
"('URIish.java', 'org.eclipse.jgit.transport.URIish', '<init>', '^([a-z][a-z0-9+-]+)://(?:(?:([^/:@]+)(?::([^\\\\/]+))?@)?((?:[^\\\\/:]+)|(?:\\[[0-9a-f:]+\\]))(?::(\\d+))?((?:/~(?:[^\\\\/]+))?[\\\\/]))?(.+)?$', 'ssh+git://lusr\\example@example.com/D:\\x')","[226476, 226660]"
"('URIish.java', 'org.eclipse.jgit.transport.URIish', '<init>', '^([a-z][a-z0-9+-]+)://(?:(?:([^/:@]+)(?::([^\\\\/]+))?@)?((?:[^\\\\/:]+)|(?:\\[[0-9a-f:]+\\]))(?::(\\d+))?((?:/~(?:[^\\\\/]+))?[\\\\/]))?(.+)?$', 'https://l usr\\example.com:wtf@[::1]:80/D:\\x')",[205845]
"('FastIgnoreRule.java', 'org.eclipse.jgit.ignore.FastIgnoreRule', 'isMatch', '[a]', 'a')","[80106, 80133, 80160, 80187, 80214, 80241, 80295, 80349, 80403, 80457, 80511, 80565, 80592, 80619, 80646, 80673, 80727, 80781, 80862, 80943, 80970, 80997, 81024, 81051, 81078, 81105, 81132, 81159, 81186, 81213, 81240, 81267, 81294, 81321, 81348, 81375, 81402, 81429, 81456, 81483, 81510, 81537, 81564, 81591, 81618, 81645, 81672, 81699]"
"('Description.java', 'org.junit.runner.Description', 'methodAndClassNamePatternGroupOrDefault', '([\\s\\S]*)\\((.*)\\)', 'testRemoveOverlappingBare(org.eclipse.jgit.gitrepo.RepoCommandTest)')","[2405, 2736]"
"('URIish.java', 'org.eclipse.jgit.transport.URIish', '<init>', '^([a-z][a-z0-9+-]+)://(?:(?:([^/:@]+)(?::([^\\\\/]+))?@)?((?:[^\\\\/:]+)|(?:\\[[0-9a-f:]+\\]))(?::(\\d+))?((?:/~(?:[^\\\\/]+))?[\\\\/]))?(.+)?$', 'https://lusr\\example@1.2.3.4:80//abc')",[220312]
"('Description.java', 'org.junit.runner.Description', 'methodAndClassNamePatternGroupOrDefault', '([\\s\\S]*)\\((.*)\\)', 'testReadString_Len0001(org.eclipse.jgit.transport.PacketLineInTest)')","[184395, 184929]"
"('Description.java', 'org.junit.runner.Description', 'methodAndClassNamePatternGroupOrDefault', '([\\s\\S]*)\\((.*)\\)', 'testDeleteDifferentNotes(org.eclipse.jgit.notes.NoteMapMergerTest)')","[259401, 259763]"
"('URIish.java', 'org.eclipse.jgit.transport.URIish', '<init>', '^([a-z][a-z0-9+-]+)://(?:(?:([^/:@]+)(?::([^\\\\/]+))?@)?((?:[^\\\\/:]+)|(?:\\[[0-9a-f:]+\\]))(?::(\\d+))?((?:/~(?:[^\\\\/]+))?[\\\\/]))?(.+)?$', 'ssh+git://me:wtf@[::1]:1234/D:\\x')",[197143]
"('Description.java', 'org.junit.runner.Description', 'methodAndClassNamePatternGroupOrDefault', '([\\s\\S]*)\\((.*)\\)', 'testCreateNewFile(org.eclipse.jgit.util.FileUtilTest)')","[23499, 23847]"
"('URIish.java', 'org.eclipse.jgit.transport.URIish', '<init>', '^(?:([^/:@]+)(?::([^\\\\/]+))?@)?((?:[^\\\\/:]+)|(?:\\[[0-9a-f:]+\\])):((?:(?:/~(?:[^\\\\/]+))[\\\\/])?(?:(?:[^\\\\/]+[\\\\/]+)*[^\\\\/]+[\\\\/]*))$', 'D:\\m y')","[249453, 249568]"
"('Description.java', 'org.junit.runner.Description', 'methodAndClassNamePatternGroupOrDefault', '([\\s\\S]*)\\((.*)\\)', 'testRenameCurrentBranch(org.eclipse.jgit.internal.storage.file.RefUpdateTest)')","[119739, 120566]"
"('Description.java', 'org.junit.runner.Description', 'methodAndClassNamePatternGroupOrDefault', '([\\s\\S]*)\\((.*)\\)', 'org.eclipse.jgit.api.CommitOnlyTest')","[134311, 138705]"
"('URIish.java', 'org.eclipse.jgit.transport.URIish', '<init>', '^(file):([\\\\/](?![\\\\/])((?:[A-Za-z]:)?[\\\\/]?(?:(?:[^\\\\/]+[\\\\/]+)*[^\\\\/]+[\\\\/]*)))$', 'ssh://lusr\\example@[::1]:80//abc')",[210146]
"('Description.java', 'org.junit.runner.Description', 'methodAndClassNamePatternGroupOrDefault', '([\\s\\S]*)\\((.*)\\)', 'testInexactRename_LastByteDifferent(org.eclipse.jgit.diff.RenameDetectorTest)')","[4603, 5164]"
"('Description.java', 'org.junit.runner.Description', 'methodAndClassNamePatternGroupOrDefault', '([\\s\\S]*)\\((.*)\\)', 'testFileUntracked(org.eclipse.jgit.treewalk.filter.IndexDiffFilterTest)')","[264947, 265783]"
"('Description.java', 'org.junit.runner.Description', 'methodAndClassNamePatternGroupOrDefault', '([\\s\\S]*)\\((.*)\\)', 'testCreate_ByStringPath(org.eclipse.jgit.dircache.DirCacheEntryTest)')","[172643, 172771]"
"('URIish.java', 'org.eclipse.jgit.transport.URIish', '<init>', '^([a-z][a-z0-9+-]+)://(?:(?:([^/:@]+)(?::([^\\\\/]+))?@)?((?:[^\\\\/:]+)|(?:\\[[0-9a-f:]+\\]))(?::(\\d+))?((?:/~(?:[^\\\\/]+))?[\\\\/]))?(.+)?$', 'ssh://me@1.2.3.4//')","[221186, 221370]"
"('Description.java', 'org.junit.runner.Description', 'methodAndClassNamePatternGroupOrDefault', '([\\s\\S]*)\\((.*)\\)', 'testStringOfPearls_FilePath3_NoParentRewriting(org.eclipse.jgit.revwalk.RevWalkPathFilter1Test)')","[175371, 175649]"
"('Description.java', 'org.junit.runner.Description', 'methodAndClassNamePatternGroupOrDefault', '([\\s\\S]*)\\((.*)\\)', 'invalidSetDestination(org.eclipse.jgit.transport.RefSpecTest)')","[187137, 187885]"
"('Description.java', 'org.junit.runner.Description', 'methodAndClassNamePatternGroupOrDefault', '([\\s\\S]*)\\((.*)\\)', 'testFilePathCase2[OldRule? true](org.eclipse.jgit.ignore.IgnoreRuleSpecialCasesTest)')","[90434, 97518]"
"('Description.java', 'org.junit.runner.Description', 'methodAndClassNamePatternGroupOrDefault', '([\\s\\S]*)\\((.*)\\)', 'testDeleteWithoutHead(org.eclipse.jgit.internal.storage.file.RefUpdateTest)')","[119928, 120764]"
"('URIish.java', 'org.eclipse.jgit.transport.URIish', '<init>', '^(file):([\\\\/](?![\\\\/])((?:[A-Za-z]:)?[\\\\/]?(?:(?:[^\\\\/]+[\\\\/]+)*[^\\\\/]+[\\\\/]*)))$', 'ssh://example.com/D:\\x')","[234181, 234365, 235285, 235469, 236389, 236573]"
"('Description.java', 'org.junit.runner.Description', 'methodAndClassNamePatternGroupOrDefault', '([\\s\\S]*)\\((.*)\\)', 'testDirCacheSavesObjectsWithPruneNow(org.eclipse.jgit.internal.storage.file.GcDirCacheSavesObjectsTest)')","[113080, 113123]"
"('Description.java', 'org.junit.runner.Description', 'methodAndClassNamePatternGroupOrDefault', '([\\s\\S]*)\\((.*)\\)', 'testDeleteD(org.eclipse.jgit.api.ApplyCommandTest)')","[163861, 164103]"
"('Description.java', 'org.junit.runner.Description', 'methodAndClassNamePatternGroupOrDefault', '([\\s\\S]*)\\((.*)\\)', 'testInexactRename_NewlinesOnly(org.eclipse.jgit.diff.RenameDetectorTest)')","[4498, 5054]"
"('URIish.java', 'org.eclipse.jgit.transport.URIish', '<init>', '^(?:([^/:@]+)(?::([^\\\\/]+))?@)?((?:[^\\\\/:]+)|(?:\\[[0-9a-f:]+\\])):((?:(?:/~(?:[^\\\\/]+))[\\\\/])?(?:(?:[^\\\\/]+[\\\\/]+)*[^\\\\/]+[\\\\/]*))$', '/tmp/jgit_test_2902873097385022246_tmp/tmp_6356966833193134406')","[160480, 160615]"
"('URIish.java', 'org.eclipse.jgit.transport.URIish', '<init>', '^(file):([\\\\/](?![\\\\/])((?:[A-Za-z]:)?[\\\\/]?(?:(?:[^\\\\/]+[\\\\/]+)*[^\\\\/]+[\\\\/]*)))$', 'https://me:wtf@[::1]:80/D:\\x')",[204718]
"('Description.java', 'org.junit.runner.Description', 'methodAndClassNamePatternGroupOrDefault', '([\\s\\S]*)\\((.*)\\)', 'testNoRenames_EmptyFile1(org.eclipse.jgit.diff.RenameDetectorTest)')","[4687, 5252]"
"('URIish.java', 'org.eclipse.jgit.transport.URIish', 'getHumanishName', '^([\\\\/]?((?:[A-Za-z]:)?[\\\\/]?(?:(?:[^\\\\/]+[\\\\/]+)*[^\\\\/]+[\\\\/]*)))$', '//.git')",[251707]
"('URIish.java', 'org.eclipse.jgit.transport.URIish', '<init>', '^([a-z][a-z0-9+-]+)://(?:(?:([^/:@]+)(?::([^\\\\/]+))?@)?((?:[^\\\\/:]+)|(?:\\[[0-9a-f:]+\\]))(?::(\\d+))?((?:/~(?:[^\\\\/]+))?[\\\\/]))?(.+)?$', 'http://l usr\\example.com@[::1]//')","[229282, 229466]"
"('Description.java', 'org.junit.runner.Description', 'methodAndClassNamePatternGroupOrDefault', '([\\s\\S]*)\\((.*)\\)', 'repackEmptyRepo_noPackCreated(org.eclipse.jgit.internal.storage.file.GcBasicPackingTest)')","[113267, 113396]"
"('Description.java', 'org.junit.runner.Description', 'methodAndClassNamePatternGroupOrDefault', '([\\s\\S]*)\\((.*)\\)', 'org.eclipse.jgit.lib.ObjectLoaderTest')","[71368, 71689]"
"('Description.java', 'org.junit.runner.Description', 'methodAndClassNamePatternGroupOrDefault', '([\\s\\S]*)\\((.*)\\)', 'testStringOfPearls_FilePath2_NoParentRewriting(org.eclipse.jgit.revwalk.RevWalkPathFilter1Test)')","[175413, 175693]"
"('Description.java', 'org.junit.runner.Description', 'methodAndClassNamePatternGroupOrDefault', '([\\s\\S]*)\\((.*)\\)', 'testFilePathCase1[OldRule? false](org.eclipse.jgit.ignore.IgnoreRuleSpecialCasesTest)')","[86848, 93953]"
"('Description.java', 'org.junit.runner.Description', 'methodAndClassNamePatternGroupOrDefault', '([\\s\\S]*)\\((.*)\\)', 'testNoDF_NoGap(org.eclipse.jgit.treewalk.NameConflictTreeWalkTest)')","[262988, 263094]"
"('Description.java', 'org.junit.runner.Description', 'methodAndClassNamePatternGroupOrDefault', '([\\s\\S]*)\\((.*)\\)', 'testPut_KeyMustMatchName_WithPrefix(org.eclipse.jgit.util.RefMapTest)')","[21123, 21599]"
"('Description.java', 'org.junit.runner.Description', 'methodAndClassNamePatternGroupOrDefault', '([\\s\\S]*)\\((.*)\\)', 'org.eclipse.jgit.internal.storage.file.GcKeepFilesTest')","[114832, 114898]"
"('Description.java', 'org.junit.runner.Description', 'methodAndClassNamePatternGroupOrDefault', '([\\s\\S]*)\\((.*)\\)', 'testRevert(org.eclipse.jgit.merge.CherryPickTest)')","[11789, 11833]"
"('Description.java', 'org.junit.runner.Description', 'methodAndClassNamePatternGroupOrDefault', '([\\s\\S]*)\\((.*)\\)', 'testIncorrectAttributeFileName(org.eclipse.jgit.attributes.AttributesNodeDirCacheIteratorTest)')","[72701, 72809]"
"('URIish.java', 'org.eclipse.jgit.transport.URIish', '<init>', '^(file):([\\\\/](?![\\\\/])((?:[A-Za-z]:)?[\\\\/]?(?:(?:[^\\\\/]+[\\\\/]+)*[^\\\\/]+[\\\\/]*)))$', 'file:/tmp/jgit_test_5499424142043640690_tmp/tmp_4662388987398792546/.git/')",[58099]
"('Description.java', 'org.junit.runner.Description', 'methodAndClassNamePatternGroupOrDefault', '([\\s\\S]*)\\((.*)\\)', 'testMaliciousAbsolutePathTwoLevelsSecondBad(org.eclipse.jgit.lib.DirCacheCheckoutMaliciousPathTest)')","[67012, 67921]"
"('URIish.java', 'org.eclipse.jgit.transport.URIish', '<init>', '^([a-z][a-z0-9+-]+)://(?:(?:([^/:@]+)(?::([^\\\\/]+))?@)?((?:[^\\\\/:]+)|(?:\\[[0-9a-f:]+\\]))(?::(\\d+))?((?:/~(?:[^\\\\/]+))?[\\\\/]))?(.+)?$', 'https://me@example.com//abc')","[230800, 230984]"
"('URIish.java', 'org.eclipse.jgit.transport.URIish', '<init>', '^(file):([\\\\/](?![\\\\/])((?:[A-Za-z]:)?[\\\\/]?(?:(?:[^\\\\/]+[\\\\/]+)*[^\\\\/]+[\\\\/]*)))$', 'https://me@[::1]:1234/D:/x')",[217759]
"('FS_POSIX_Java7.java', 'org.eclipse.jgit.util.FS_POSIX_Java7', '<clinit>', '\\d{3,4}', '0022')","[3570, 3601, 3633, 3664]"
"('Description.java', 'org.junit.runner.Description', 'methodAndClassNamePatternGroupOrDefault', '([\\s\\S]*)\\((.*)\\)', 'testParse_NoMessage(org.eclipse.jgit.revwalk.RevCommitParseTest)')","[182341, 182701]"
"('Description.java', 'org.junit.runner.Description', 'methodAndClassNamePatternGroupOrDefault', '([\\s\\S]*)\\((.*)\\)', 'testFormatYears(org.eclipse.jgit.util.RelativeDateFormatterTest)')","[31316, 31511]"
"('URIish.java', 'org.eclipse.jgit.transport.URIish', '<init>', '^(file):([\\\\/](?![\\\\/])((?:[A-Za-z]:)?[\\\\/]?(?:(?:[^\\\\/]+[\\\\/]+)*[^\\\\/]+[\\\\/]*)))$', 'git:///.git')",[191041]
"('URIish.java', 'org.eclipse.jgit.transport.URIish', '<init>', '^([a-z][a-z0-9+-]+)://(?:(?:([^/:@]+)(?::([^\\\\/]+))?@)?((?:[^\\\\/:]+)|(?:\\[[0-9a-f:]+\\]))(?::(\\d+))?((?:/~(?:[^\\\\/]+))?[\\\\/]))?(.+)?$', 'https://l usr\\example.com@example.com/D:\\x')","[231996, 232180]"
"('URIish.java', 'org.eclipse.jgit.transport.URIish', '<init>', '^(file):([\\\\/](?![\\\\/])((?:[A-Za-z]:)?[\\\\/]?(?:(?:[^\\\\/]+[\\\\/]+)*[^\\\\/]+[\\\\/]*)))$', 'http://l usr\\example.com@[::1]:1234//abc')",[215482]
"('URIish.java', 'org.eclipse.jgit.transport.URIish', '<init>', '^(file):([\\\\/](?![\\\\/])((?:[A-Za-z]:)?[\\\\/]?(?:(?:[^\\\\/]+[\\\\/]+)*[^\\\\/]+[\\\\/]*)))$', 'file:///tmp/jgit_test_4752033303303576963_tmp/tmp_1842207113690785849/.git/')",[18220]
"('URIish.java', 'org.eclipse.jgit.transport.URIish', '<init>', '^(file):([\\\\/](?![\\\\/])((?:[A-Za-z]:)?[\\\\/]?(?:(?:[^\\\\/]+[\\\\/]+)*[^\\\\/]+[\\\\/]*)))$', 'http://lusr\\example@[::1]:80//')",[216724]
"('URIish.java', 'org.eclipse.jgit.transport.URIish', '<init>', '^([a-z][a-z0-9+-]+)://(?:(?:([^/:@]+)(?::([^\\\\/]+))?@)?((?:[^\\\\/:]+)|(?:\\[[0-9a-f:]+\\]))(?::(\\d+))?((?:/~(?:[^\\\\/]+))?[\\\\/]))?(.+)?$', 'http://lusr\\example@[::1]//')","[230386, 230570]"
"('Description.java', 'org.junit.runner.Description', 'methodAndClassNamePatternGroupOrDefault', '([\\s\\S]*)\\((.*)\\)', 'testMergeNonVersionedPaths(org.eclipse.jgit.api.MergeCommandTest)')","[126244, 127153]"
"('URIish.java', 'org.eclipse.jgit.transport.URIish', '<init>', '^([a-z][a-z0-9+-]+)://(?:(?:([^/:@]+)(?::([^\\\\/]+))?@)?((?:[^\\\\/:]+)|(?:\\[[0-9a-f:]+\\]))(?::(\\d+))?((?:/~(?:[^\\\\/]+))?[\\\\/]))?(.+)?$', 'ssh://l usr\\example.com@example.com:1234/D:\\x')",[208237]
"('Description.java', 'org.junit.runner.Description', 'methodAndClassNamePatternGroupOrDefault', '([\\s\\S]*)\\((.*)\\)', 'testMaxCountRevFilter(org.eclipse.jgit.revwalk.MaxCountRevFilterTest)')","[173320, 173364]"
"('URIish.java', 'org.eclipse.jgit.transport.URIish', '<init>', '^(?:([^/:@]+)(?::([^\\\\/]+))?@)?((?:[^\\\\/:]+)|(?:\\[[0-9a-f:]+\\])):((?:(?:/~(?:[^\\\\/]+))[\\\\/])?(?:(?:[^\\\\/]+[\\\\/]+)*[^\\\\/]+[\\\\/]*))$', '/tmp/jgit_test_2155224643509466025_tmp/tmp_5834574717535685926.git')",[188040]
"('URIish.java', 'org.eclipse.jgit.transport.URIish', '<init>', '^(file):([\\\\/](?![\\\\/])((?:[A-Za-z]:)?[\\\\/]?(?:(?:[^\\\\/]+[\\\\/]+)*[^\\\\/]+[\\\\/]*)))$', 'http://lusr\\example:wtf@example.com:80/D:/x')",[202042]
"('Description.java', 'org.junit.runner.Description', 'methodAndClassNamePatternGroupOrDefault', '([\\s\\S]*)\\((.*)\\)', 'dropFirstStashedCommit(org.eclipse.jgit.api.StashDropCommandTest)')","[124373, 124544]"
"('Description.java', 'org.junit.runner.Description', 'methodAndClassNamePatternGroupOrDefault', '([\\s\\S]*)\\((.*)\\)', 'testWorkdirIsDotGit_CreateRepositoryFromWorkDirOnly(org.eclipse.jgit.internal.storage.file.RepositorySetupWorkDirTest)')","[113964, 114222]"
"('URIish.java', 'org.eclipse.jgit.transport.URIish', '<init>', '^([a-z][a-z0-9+-]+)://(?:(?:([^/:@]+)(?::([^\\\\/]+))?@)?((?:[^\\\\/:]+)|(?:\\[[0-9a-f:]+\\]))(?::(\\d+))?((?:/~(?:[^\\\\/]+))?[\\\\/]))?(.+)?$', 'https://lusr\\example@1.2.3.4/D:/x')","[233422, 233606]"
"('Description.java', 'org.junit.runner.Description', 'methodAndClassNamePatternGroupOrDefault', '([\\s\\S]*)\\((.*)\\)', 'testPathsReset(org.eclipse.jgit.api.ResetCommandTest)')","[167377, 167725]"
"('Description.java', 'org.junit.runner.Description', 'methodAndClassNamePatternGroupOrDefault', '([\\s\\S]*)\\((.*)\\)', 'testEscapedBracket6[OldRule? false](org.eclipse.jgit.ignore.IgnoreRuleSpecialCasesTest)')","[88274, 95379]"
"('Description.java', 'org.junit.runner.Description', 'methodAndClassNamePatternGroupOrDefault', '([\\s\\S]*)\\((.*)\\)', 'org.eclipse.jgit.internal.storage.file.RefUpdateTest')","[119571, 122437]"
"('QuotedString.java', 'org.eclipse.jgit.util.QuotedString$BourneUserPathStyle', 'quote', '^~[A-Za-z0-9_-]+$', '~foo/a')","[29773, 29797]"
"('Description.java', 'org.junit.runner.Description', 'methodAndClassNamePatternGroupOrDefault', '([\\s\\S]*)\\((.*)\\)', 'testBinaryDontDetect(org.eclipse.jgit.util.io.EolCanonicalizingInputStreamTest)')","[24990, 25144]"
"('Description.java', 'org.junit.runner.Description', 'methodAndClassNamePatternGroupOrDefault', '([\\s\\S]*)\\((.*)\\)', 'testEmptyRebaseTodo(org.eclipse.jgit.api.RebaseCommandTest)')","[131831, 133338]"
"('URIish.java', 'org.eclipse.jgit.transport.URIish', '<init>', '^(file):([\\\\/](?![\\\\/])((?:[A-Za-z]:)?[\\\\/]?(?:(?:[^\\\\/]+[\\\\/]+)*[^\\\\/]+[\\\\/]*)))$', '/.git')",[247406]
"('Description.java', 'org.junit.runner.Description', 'methodAndClassNamePatternGroupOrDefault', '([\\s\\S]*)\\((.*)\\)', 'testGetEmptyHumanishName(org.eclipse.jgit.transport.URIishTest)')","[188380, 189754]"
"('Description.java', 'org.junit.runner.Description', 'methodAndClassNamePatternGroupOrDefault', '([\\s\\S]*)\\((.*)\\)', 'testReadMissing_TempIndex(org.eclipse.jgit.dircache.DirCacheBasicTest)')","[171380, 171932]"
"('Description.java', 'org.junit.runner.Description', 'methodAndClassNamePatternGroupOrDefault', '([\\s\\S]*)\\((.*)\\)', 'testGetText_NoBinary(org.eclipse.jgit.patch.GetTextTest)')","[1624, 1710]"
"('Description.java', 'org.junit.runner.Description', 'methodAndClassNamePatternGroupOrDefault', '([\\s\\S]*)\\((.*)\\)', 'testCheckBlob(org.eclipse.jgit.lib.ObjectCheckerTest)')","[50054, 52616]"
"('FastIgnoreRule.java', 'org.eclipse.jgit.ignore.FastIgnoreRule', 'isMatch', '[b-d]', 'e')",[100899]
"('URIish.java', 'org.eclipse.jgit.transport.URIish', '<init>', '^(file):([\\\\/](?![\\\\/])((?:[A-Za-z]:)?[\\\\/]?(?:(?:[^\\\\/]+[\\\\/]+)*[^\\\\/]+[\\\\/]*)))$', 'https://lusr\\example@[::1]/D:/x')","[233767, 233951]"
"('URIish.java', 'org.eclipse.jgit.transport.URIish', '<init>', '^(file):([\\\\/](?![\\\\/])((?:[A-Za-z]:)?[\\\\/]?(?:(?:[^\\\\/]+[\\\\/]+)*[^\\\\/]+[\\\\/]*)))$', 'ssh+git://l usr\\example.com@[::1]/D:/x')","[226039, 226223]"
"('Description.java', 'org.junit.runner.Description', 'methodAndClassNamePatternGroupOrDefault', '([\\s\\S]*)\\((.*)\\)', 'testSuccessfulContentMergeAndDirtyworkingTree(org.eclipse.jgit.api.MergeCommandTest)')","[126748, 127681]"
"('Description.java', 'org.junit.runner.Description', 'methodAndClassNamePatternGroupOrDefault', '([\\s\\S]*)\\((.*)\\)', 'testTimeout_writeBuffer_Success1(org.eclipse.jgit.util.io.TimeoutOutputStreamTest)')","[24523, 24718]"
"('URIish.java', 'org.eclipse.jgit.transport.URIish', '<init>', '^([a-z][a-z0-9+-]+)://(?:(?:([^/:@]+)(?::([^\\\\/]+))?@)?((?:[^\\\\/:]+)|(?:\\[[0-9a-f:]+\\]))(?::(\\d+))?((?:/~(?:[^\\\\/]+))?[\\\\/]))?(.+)?$', 'https://me@1.2.3.4/D:/x')","[231214, 231398]"
"('Description.java', 'org.junit.runner.Description', 'methodAndClassNamePatternGroupOrDefault', '([\\s\\S]*)\\((.*)\\)', 'testCommonScoreLargeObject_SameFiles_CR_canonicalization(org.eclipse.jgit.diff.SimilarityIndexTest)')","[11512, 11688]"
"('URIish.java', 'org.eclipse.jgit.transport.URIish', '<init>', '^(file):([\\\\/](?![\\\\/])((?:[A-Za-z]:)?[\\\\/]?(?:(?:[^\\\\/]+[\\\\/]+)*[^\\\\/]+[\\\\/]*)))$', 'ssh+git://lusr\\example@1.2.3.4:1234//abc')",[212906]
"('URIish.java', 'org.eclipse.jgit.transport.URIish', '<init>', '^(file):([\\\\/](?![\\\\/])((?:[A-Za-z]:)?[\\\\/]?(?:(?:[^\\\\/]+[\\\\/]+)*[^\\\\/]+[\\\\/]*)))$', 'ssh+git://l usr\\example.com@1.2.3.4//abc')","[225625, 225809]"
"('Description.java', 'org.junit.runner.Description', 'methodAndClassNamePatternGroupOrDefault', '([\\s\\S]*)\\((.*)\\)', 'testUpperGroupCase1(org.eclipse.jgit.fnmatch.FileNameMatcherTest)')","[43666, 47032]"
"('URIish.java', 'org.eclipse.jgit.transport.URIish', '<init>', '^([a-z][a-z0-9+-]+)://(?:(?:([^/:@]+)(?::([^\\\\/]+))?@)?((?:[^\\\\/:]+)|(?:\\[[0-9a-f:]+\\]))(?::(\\d+))?((?:/~(?:[^\\\\/]+))?[\\\\/]))?(.+)?$', 'https://l usr\\example.com@example.com/D:/x')","[231950, 232134]"
"('Description.java', 'org.junit.runner.Description', 'methodAndClassNamePatternGroupOrDefault', '([\\s\\S]*)\\((.*)\\)', 'testTheirs(org.eclipse.jgit.merge.SimpleMergeTest)')","[15669, 15954]"
"('URIish.java', 'org.eclipse.jgit.transport.URIish', '<init>', '^([a-z][a-z0-9+-]+)://(?:(?:([^/:@]+)(?::([^\\\\/]+))?@)?((?:[^\\\\/:]+)|(?:\\[[0-9a-f:]+\\]))(?::(\\d+))?((?:/~(?:[^\\\\/]+))?[\\\\/]))?(.+)?$', 'ssh://lusr\\example@[::1]:80//abc')",[210169]
"('Description.java', 'org.junit.runner.Description', 'methodAndClassNamePatternGroupOrDefault', '([\\s\\S]*)\\((.*)\\)', 'org.eclipse.jgit.dircache.DirCacheBuilderIteratorTest')","[172225, 172291]"
"('URIish.java', 'org.eclipse.jgit.transport.URIish', '<init>', '^([a-z][a-z0-9+-]+)://(?:(?:([^/:@]+)(?::([^\\\\/]+))?@)?((?:[^\\\\/:]+)|(?:\\[[0-9a-f:]+\\]))(?::(\\d+))?((?:/~(?:[^\\\\/]+))?[\\\\/]))?(.+)?$', '/tmp/jgit_test_4639109472720102754_tmp/tmp_8101730606670789681')","[151188, 151318]"
"('URIish.java', 'org.eclipse.jgit.transport.URIish', '<init>', '^(file):([\\\\/](?![\\\\/])((?:[A-Za-z]:)?[\\\\/]?(?:(?:[^\\\\/]+[\\\\/]+)*[^\\\\/]+[\\\\/]*)))$', 'https://me@[::1]:1234/D:\\x')",[217805]
"('Description.java', 'org.junit.runner.Description', 'methodAndClassNamePatternGroupOrDefault', '([\\s\\S]*)\\((.*)\\)', 'org.eclipse.jgit.util.GitDateParserBadlyFormattedTest')","[22452, 22561]"
"('URIish.java', 'org.eclipse.jgit.transport.URIish', '<init>', '^(file):([\\\\/](?![\\\\/])((?:[A-Za-z]:)?[\\\\/]?(?:(?:[^\\\\/]+[\\\\/]+)*[^\\\\/]+[\\\\/]*)))$', 'ssh+git://l usr\\example.com@1.2.3.4:1234/D:\\x')",[211894]
"('FastIgnoreRule.java', 'org.eclipse.jgit.ignore.FastIgnoreRule', 'isMatch', 'ne.', 'src')","[105246, 105301, 105356, 105410, 105464, 105545, 106476, 106531, 106586, 106640, 106694, 106775]"
"('Description.java', 'org.junit.runner.Description', 'methodAndClassNamePatternGroupOrDefault', '([\\s\\S]*)\\((.*)\\)', 'testHasFlags(org.eclipse.jgit.revwalk.FIFORevQueueTest)')","[176198, 176330]"
"('URIish.java', 'org.eclipse.jgit.transport.URIish', '<init>', '^([a-z][a-z0-9+-]+)://(?:(?:([^/:@]+)(?::([^\\\\/]+))?@)?((?:[^\\\\/:]+)|(?:\\[[0-9a-f:]+\\]))(?::(\\d+))?((?:/~(?:[^\\\\/]+))?[\\\\/]))?(.+)?$', 'file:///tmp/jgit_test_280728366645432052_tmp/tmp_37851480862469748/.git/')",[11087]
"('URIish.java', 'org.eclipse.jgit.transport.URIish', '<init>', '^(file):([\\\\/](?![\\\\/])((?:[A-Za-z]:)?[\\\\/]?(?:(?:[^\\\\/]+[\\\\/]+)*[^\\\\/]+[\\\\/]*)))$', 'ssh://l usr\\example.com@[::1]:1234//')",[208812]
"('URIish.java', 'org.eclipse.jgit.transport.URIish', '<init>', '^(file):([\\\\/](?![\\\\/])((?:[A-Za-z]:)?[\\\\/]?(?:(?:[^\\\\/]+[\\\\/]+)*[^\\\\/]+[\\\\/]*)))$', 'https://l usr\\example.com:wtf@example.com:1234/D:\\x')",[204902]
"('Description.java', 'org.junit.runner.Description', 'methodAndClassNamePatternGroupOrDefault', '([\\s\\S]*)\\((.*)\\)', 'org.eclipse.jgit.ignore.BasicRuleTest')","[84609, 84675]"
"('URIish.java', 'org.eclipse.jgit.transport.URIish', '<init>', '^([a-z][a-z0-9+-]+)://(?:(?:([^/:@]+)(?::([^\\\\/]+))?@)?((?:[^\\\\/:]+)|(?:\\[[0-9a-f:]+\\]))(?::(\\d+))?((?:/~(?:[^\\\\/]+))?[\\\\/]))?(.+)?$', 'file:///tmp/jgit_test_1689849022431982095_tmp/tmp_2688667455844412783')","[163324, 163386]"
"('URIish.java', 'org.eclipse.jgit.transport.URIish', '<init>', '^(file):([\\\\/](?![\\\\/])((?:[A-Za-z]:)?[\\\\/]?(?:(?:[^\\\\/]+[\\\\/]+)*[^\\\\/]+[\\\\/]*)))$', 'ssh://lusr\\example@example.com/D:/x')","[223095, 223279]"
"('Description.java', 'org.junit.runner.Description', 'methodAndClassNamePatternGroupOrDefault', '([\\s\\S]*)\\((.*)\\)', 'shouldWorkWithoutMergeBase(org.eclipse.jgit.lib.BranchTrackingStatusTest)')","[54083, 54148]"
"('Description.java', 'org.junit.runner.Description', 'methodAndClassNamePatternGroupOrDefault', '([\\s\\S]*)\\((.*)\\)', 'testMaliciousGitPathEndDotWindows1(org.eclipse.jgit.lib.DirCacheCheckoutMaliciousPathTest)')","[66634, 67525]"
"('URIish.java', 'org.eclipse.jgit.transport.URIish', '<init>', '^([a-z][a-z0-9+-]+)://(?:(?:([^/:@]+)(?::([^\\\\/]+))?@)?((?:[^\\\\/:]+)|(?:\\[[0-9a-f:]+\\]))(?::(\\d+))?((?:/~(?:[^\\\\/]+))?[\\\\/]))?(.+)?$', 'http://me@[::1]:1234//abc')",[214401]
"('FastIgnoreRule.java', 'org.eclipse.jgit.ignore.FastIgnoreRule', 'isMatch', '[b-ce-e]', 'e')",[102565]
"('Description.java', 'org.junit.runner.Description', 'methodAndClassNamePatternGroupOrDefault', '([\\s\\S]*)\\((.*)\\)', 'org.eclipse.jgit.revwalk.AlwaysEmptyRevQueueTest')","[175884, 176036]"
"('URIish.java', 'org.eclipse.jgit.transport.URIish', '<init>', '^([a-z][a-z0-9+-]+)://(?:(?:([^/:@]+)(?::([^\\\\/]+))?@)?((?:[^\\\\/:]+)|(?:\\[[0-9a-f:]+\\]))(?::(\\d+))?((?:/~(?:[^\\\\/]+))?[\\\\/]))?(.+)?$', 'ssh://me:wtf@1.2.3.4:80//')",[192617]
"('Description.java', 'org.junit.runner.Description', 'methodAndClassNamePatternGroupOrDefault', '([\\s\\S]*)\\((.*)\\)', 'testTwoRangesInOneGroupCase5[OldRule? true](org.eclipse.jgit.ignore.IgnoreRuleSpecialCasesTest)')","[91630, 98714]"
"('Description.java', 'org.junit.runner.Description', 'methodAndClassNamePatternGroupOrDefault', '([\\s\\S]*)\\((.*)\\)', 'testCherryPickDirtyWorktree(org.eclipse.jgit.api.CherryPickCommandTest)')","[168362, 168624]"
"('Description.java', 'org.junit.runner.Description', 'methodAndClassNamePatternGroupOrDefault', '([\\s\\S]*)\\((.*)\\)', 'testEscapedBracket3[OldRule? false](org.eclipse.jgit.ignore.IgnoreRuleSpecialCasesTest)')","[88205, 95310]"
"('Description.java', 'org.junit.runner.Description', 'methodAndClassNamePatternGroupOrDefault', '([\\s\\S]*)\\((.*)\\)', 'testEdit_NoUniqueMiddleSide_FlipAndExpand(org.eclipse.jgit.diff.HistogramDiffTest)')","[6673, 7300]"
"('Description.java', 'org.junit.runner.Description', 'methodAndClassNamePatternGroupOrDefault', '([\\s\\S]*)\\((.*)\\)', 'testVerySimpleGroupRangeCase1[OldRule? false](org.eclipse.jgit.ignore.IgnoreRuleSpecialCasesTest)')","[86526, 93631]"
"('Description.java', 'org.junit.runner.Description', 'methodAndClassNamePatternGroupOrDefault', '([\\s\\S]*)\\((.*)\\)', 'org.eclipse.jgit.attributes.AttributesNodeWorkingTreeIteratorTest')","[73229, 73424]"
"('Description.java', 'org.junit.runner.Description', 'methodAndClassNamePatternGroupOrDefault', '([\\s\\S]*)\\((.*)\\)', 'testOnlyOption_f1_2_f2_14_b(org.eclipse.jgit.api.CommitOnlyTest)')","[135403, 137471]"
"('Description.java', 'org.junit.runner.Description', 'methodAndClassNamePatternGroupOrDefault', '([\\s\\S]*)\\((.*)\\)', 'testVerySimpleWildCardCase1[OldRule? true](org.eclipse.jgit.ignore.IgnoreRuleSpecialCasesTest)')","[88548, 95632]"
"('URIish.java', 'org.eclipse.jgit.transport.URIish', '<init>', '^([a-z][a-z0-9+-]+)://(?:(?:([^/:@]+)(?::([^\\\\/]+))?@)?((?:[^\\\\/:]+)|(?:\\[[0-9a-f:]+\\]))(?::(\\d+))?((?:/~(?:[^\\\\/]+))?[\\\\/]))?(.+)?$', 'ssh://l usr\\example.com@example.com//')","[221922, 222106]"
"('Description.java', 'org.junit.runner.Description', 'methodAndClassNamePatternGroupOrDefault', '([\\s\\S]*)\\((.*)\\)', 'testOnlyOption_f1_2_f2_14_e(org.eclipse.jgit.api.CommitOnlyTest)')","[135466, 137537]"
"('URIish.java', 'org.eclipse.jgit.transport.URIish', '<init>', '^([a-z][a-z0-9+-]+)://(?:(?:([^/:@]+)(?::([^\\\\/]+))?@)?((?:[^\\\\/:]+)|(?:\\[[0-9a-f:]+\\]))(?::(\\d+))?((?:/~(?:[^\\\\/]+))?[\\\\/]))?(.+)?$', 'http://l usr\\example.com:wtf@example.com:80//abc')",[200915]
"('Description.java', 'org.junit.runner.Description', 'methodAndClassNamePatternGroupOrDefault', '([\\s\\S]*)\\((.*)\\)', 'testOnlyOption_f1_2_c(org.eclipse.jgit.api.CommitOnlyTest)')","[134584, 136613]"
"('URIish.java', 'org.eclipse.jgit.transport.URIish', '<init>', '^([a-z][a-z0-9+-]+)://(?:(?:([^/:@]+)(?::([^\\\\/]+))?@)?((?:[^\\\\/:]+)|(?:\\[[0-9a-f:]+\\]))(?::(\\d+))?((?:/~(?:[^\\\\/]+))?[\\\\/]))?(.+)?$', 'git://host/abc/')",[248533]
"('URIish.java', 'org.eclipse.jgit.transport.URIish', '<init>', '^(file):([\\\\/](?![\\\\/])((?:[A-Za-z]:)?[\\\\/]?(?:(?:[^\\\\/]+[\\\\/]+)*[^\\\\/]+[\\\\/]*)))$', 'ssh+git://l usr\\example.com:wtf@1.2.3.4:1234/D:\\x')",[197856]
"('Description.java', 'org.junit.runner.Description', 'methodAndClassNamePatternGroupOrDefault', '([\\s\\S]*)\\((.*)\\)', 'ISO(org.eclipse.jgit.util.GitDateFormatterTest)')","[26066, 26259]"
"('URIish.java', 'org.eclipse.jgit.transport.URIish', '<init>', '^(?:([^/:@]+)(?::([^\\\\/]+))?@)?((?:[^\\\\/:]+)|(?:\\[[0-9a-f:]+\\])):((?:(?:/~(?:[^\\\\/]+))[\\\\/])?(?:(?:[^\\\\/]+[\\\\/]+)*[^\\\\/]+[\\\\/]*))$', '/tmp/jgit_test_6323444599553401210_tmp/tmp_1339419818471425794')","[159537, 159672, 159872, 160084, 160286]"
"('Description.java', 'org.junit.runner.Description', 'methodAndClassNamePatternGroupOrDefault', '([\\s\\S]*)\\((.*)\\)', 'testNoMatchButClose(org.eclipse.jgit.treewalk.filter.PathFilterGroupTest)')","[266307, 266459]"
"('Description.java', 'org.junit.runner.Description', 'methodAndClassNamePatternGroupOrDefault', '([\\s\\S]*)\\((.*)\\)', 'testRebaseInteractiveSingleSquashAndModifyMessage(org.eclipse.jgit.api.RebaseCommandTest)')","[131537, 133030]"
"('Description.java', 'org.junit.runner.Description', 'methodAndClassNamePatternGroupOrDefault', '([\\s\\S]*)\\((.*)\\)', 'isRebase(org.eclipse.jgit.lib.BranchConfigTest)')","[54786, 54957]"
"('ChangeIdUtil.java', 'org.eclipse.jgit.util.ChangeIdUtil', 'indexOfFirstFooterLine', '(^[a-zA-Z0-9-]+:(?!//).*$)', 'Another footer line')",[155529]
"('URIish.java', 'org.eclipse.jgit.transport.URIish', '<init>', '^(file):([\\\\/](?![\\\\/])((?:[A-Za-z]:)?[\\\\/]?(?:(?:[^\\\\/]+[\\\\/]+)*[^\\\\/]+[\\\\/]*)))$', 'ssh://l usr\\example.com@1.2.3.4//abc')","[222313, 222497]"
"('URIish.java', 'org.eclipse.jgit.transport.URIish', '<init>', '^([a-z][a-z0-9+-]+)://(?:(?:([^/:@]+)(?::([^\\\\/]+))?@)?((?:[^\\\\/:]+)|(?:\\[[0-9a-f:]+\\]))(?::(\\d+))?((?:/~(?:[^\\\\/]+))?[\\\\/]))?(.+)?$', 'http://lusr\\example:wtf@example.com:80/D:/x')",[202065]
"('URIish.java', 'org.eclipse.jgit.transport.URIish', '<init>', '^([a-z][a-z0-9+-]+)://(?:(?:([^/:@]+)(?::([^\\\\/]+))?@)?((?:[^\\\\/:]+)|(?:\\[[0-9a-f:]+\\]))(?::(\\d+))?((?:/~(?:[^\\\\/]+))?[\\\\/]))?(.+)?$', 'file:///tmp/jgit_test_1689849022431982095_tmp/tmp_2688667455844412783/.git/')","[163212, 163571]"
"('Description.java', 'org.junit.runner.Description', 'methodAndClassNamePatternGroupOrDefault', '([\\s\\S]*)\\((.*)\\)', 'testGraphGroupCase4[OldRule? true](org.eclipse.jgit.ignore.IgnoreRuleSpecialCasesTest)')","[89031, 96115]"
"('Description.java', 'org.junit.runner.Description', 'methodAndClassNamePatternGroupOrDefault', '([\\s\\S]*)\\((.*)\\)', 'testDirectoryFileConflicts_14(org.eclipse.jgit.lib.DirCacheCheckoutTest)')","[61671, 62753]"
"('URIish.java', 'org.eclipse.jgit.transport.URIish', '<init>', '^([a-z][a-z0-9+-]+)://(?:(?:([^/:@]+)(?::([^\\\\/]+))?@)?((?:[^\\\\/:]+)|(?:\\[[0-9a-f:]+\\]))(?::(\\d+))?((?:/~(?:[^\\\\/]+))?[\\\\/]))?(.+)?$', 'https://me@[::1]:80/D:\\x')",[218012]
"('Description.java', 'org.junit.runner.Description', 'methodAndClassNamePatternGroupOrDefault', '([\\s\\S]*)\\((.*)\\)', 'testRelativePath(org.eclipse.jgit.transport.URIishTest)')","[188926, 190326]"
"('URIish.java', 'org.eclipse.jgit.transport.URIish', '<init>', '^(file):([\\\\/](?![\\\\/])((?:[A-Za-z]:)?[\\\\/]?(?:(?:[^\\\\/]+[\\\\/]+)*[^\\\\/]+[\\\\/]*)))$', 'http://me:wtf@example.com:80//')",[199742]
"('URIish.java', 'org.eclipse.jgit.transport.URIish', '<init>', '^(file):([\\\\/](?![\\\\/])((?:[A-Za-z]:)?[\\\\/]?(?:(?:[^\\\\/]+[\\\\/]+)*[^\\\\/]+[\\\\/]*)))$', 'ssh+git://lusr\\example@[::1]:1234/D:/x')",[213320]
"('PathMatcher.java', 'org.eclipse.jgit.ignore.internal.PathMatcher', 'iterate', 'a.', 'ab')","[82862, 82891, 82920, 82949]"
"('URIish.java', 'org.eclipse.jgit.transport.URIish', '<init>', '^(file):([\\\\/](?![\\\\/])((?:[A-Za-z]:)?[\\\\/]?(?:(?:[^\\\\/]+[\\\\/]+)*[^\\\\/]+[\\\\/]*)))$', 'http://lusr\\example:wtf@1.2.3.4:80//abc')",[202364]
"('Description.java', 'org.junit.runner.Description', 'methodAndClassNamePatternGroupOrDefault', '([\\s\\S]*)\\((.*)\\)', 'testRepoManifestCopyFile(org.eclipse.jgit.gitrepo.RepoCommandTest)')","[2657, 3428]"
"('URIish.java', 'org.eclipse.jgit.transport.URIish', '<init>', '^(file):([\\\\/](?![\\\\/])((?:[A-Za-z]:)?[\\\\/]?(?:(?:[^\\\\/]+[\\\\/]+)*[^\\\\/]+[\\\\/]*)))$', 'https://l usr\\example.com:wtf@[::1]:1234/D:\\x')",[205638]
"('Description.java', 'org.junit.runner.Description', 'methodAndClassNamePatternGroupOrDefault', '([\\s\\S]*)\\((.*)\\)', 'testSoftReset(org.eclipse.jgit.api.ResetCommandTest)')","[167167, 167505]"
"('URIish.java', 'org.eclipse.jgit.transport.URIish', '<init>', '^([a-z][a-z0-9+-]+)://(?:(?:([^/:@]+)(?::([^\\\\/]+))?@)?((?:[^\\\\/:]+)|(?:\\[[0-9a-f:]+\\]))(?::(\\d+))?((?:/~(?:[^\\\\/]+))?[\\\\/]))?(.+)?$', 'http://l usr\\example.com:wtf@[::1]:80/D:\\x')",[201743]
"('Description.java', 'org.junit.runner.Description', 'methodAndClassNamePatternGroupOrDefault', '([\\s\\S]*)\\((.*)\\)', 'repositoryWithRelativeUriSubmodule(org.eclipse.jgit.submodule.SubmoduleSyncTest)')","[19099, 19164]"
"('Description.java', 'org.junit.runner.Description', 'methodAndClassNamePatternGroupOrDefault', '([\\s\\S]*)\\((.*)\\)', 'testCreateFile(org.eclipse.jgit.diff.HistogramDiffTest)')","[7038, 7714]"
"('Description.java', 'org.junit.runner.Description', 'methodAndClassNamePatternGroupOrDefault', '([\\s\\S]*)\\((.*)\\)', 'testCloneRepositoryWithNestedSubmodules(org.eclipse.jgit.api.CloneCommandTest)')","[158926, 159223]"
"('Description.java', 'org.junit.runner.Description', 'methodAndClassNamePatternGroupOrDefault', '([\\s\\S]*)\\((.*)\\)', 'testSpecialGroupCase7[OldRule? false](org.eclipse.jgit.ignore.IgnoreRuleSpecialCasesTest)')","[84916, 92021]"
"('URIish.java', 'org.eclipse.jgit.transport.URIish', '<init>', '^([a-z][a-z0-9+-]+)://(?:(?:([^/:@]+)(?::([^\\\\/]+))?@)?((?:[^\\\\/:]+)|(?:\\[[0-9a-f:]+\\]))(?::(\\d+))?((?:/~(?:[^\\\\/]+))?[\\\\/]))?(.+)?$', 'https://lusr\\example@[::1]/D:/x')","[233790, 233974]"
"('Description.java', 'org.junit.runner.Description', 'methodAndClassNamePatternGroupOrDefault', '([\\s\\S]*)\\((.*)\\)', 'badlyFormattedWithExplicitRef(org.eclipse.jgit.util.GitDateParserBadlyFormattedTest)')","[22473, 22516]"
"('Description.java', 'org.junit.runner.Description', 'methodAndClassNamePatternGroupOrDefault', '([\\s\\S]*)\\((.*)\\)', 'archiveHeadAllFiles(org.eclipse.jgit.api.ArchiveCommandTest)')","[158213, 158300]"
"('Description.java', 'org.junit.runner.Description', 'methodAndClassNamePatternGroupOrDefault', '([\\s\\S]*)\\((.*)\\)', 'testTreeWalk_LsFiles(org.eclipse.jgit.dircache.DirCacheCGitCompatabilityTest)')","[173065, 173219]"
"('Description.java', 'org.junit.runner.Description', 'methodAndClassNamePatternGroupOrDefault', '([\\s\\S]*)\\((.*)\\)', 'testEmpty_FromByteArray(org.eclipse.jgit.lib.AbbreviatedObjectIdTest)')","[55651, 56201]"
"('Description.java', 'org.junit.runner.Description', 'methodAndClassNamePatternGroupOrDefault', '([\\s\\S]*)\\((.*)\\)', 'test006_notIsId(org.eclipse.jgit.lib.ObjectIdTest)')","[53696, 53982]"
"('URIish.java', 'org.eclipse.jgit.transport.URIish', '<init>', '^(file):([\\\\/](?![\\\\/])((?:[A-Za-z]:)?[\\\\/]?(?:(?:[^\\\\/]+[\\\\/]+)*[^\\\\/]+[\\\\/]*)))$', 'http://me@example.com/D:/x')","[227511, 227695]"
"('URIish.java', 'org.eclipse.jgit.transport.URIish', '<init>', '^([a-z][a-z0-9+-]+)://(?:(?:([^/:@]+)(?::([^\\\\/]+))?@)?((?:[^\\\\/:]+)|(?:\\[[0-9a-f:]+\\]))(?::(\\d+))?((?:/~(?:[^\\\\/]+))?[\\\\/]))?(.+)?$', 'https://me:wtf@[::1]:80/D:/x')",[204695]
"('Description.java', 'org.junit.runner.Description', 'methodAndClassNamePatternGroupOrDefault', '([\\s\\S]*)\\((.*)\\)', 'testCheckoutToNonExistingBranch(org.eclipse.jgit.api.CheckoutCommandTest)')","[149514, 150053]"
"('Description.java', 'org.junit.runner.Description', 'methodAndClassNamePatternGroupOrDefault', '([\\s\\S]*)\\((.*)\\)', 'testRevertConflictMarkers(org.eclipse.jgit.api.RevertCommandTest)')","[125536, 125748]"
"('URIish.java', 'org.eclipse.jgit.transport.URIish', '<init>', '^(?:([^/:@]+)(?::([^\\\\/]+))?@)?((?:[^\\\\/:]+)|(?:\\[[0-9a-f:]+\\])):((?:(?:/~(?:[^\\\\/]+))[\\\\/])?(?:(?:[^\\\\/]+[\\\\/]+)*[^\\\\/]+[\\\\/]*))$', '/tmp/jgit_test_2667399414619613576_tmp/tmp_2988195032823876487')","[153747, 153882, 154039]"
"('URIish.java', 'org.eclipse.jgit.transport.URIish', '<init>', '^([a-z][a-z0-9+-]+)://(?:(?:([^/:@]+)(?::([^\\\\/]+))?@)?((?:[^\\\\/:]+)|(?:\\[[0-9a-f:]+\\]))(?::(\\d+))?((?:/~(?:[^\\\\/]+))?[\\\\/]))?(.+)?$', 'ssh://me:wtf@example.com:1234//abc')",[192111]
"('URIish.java', 'org.eclipse.jgit.transport.URIish', '<init>', '^([\\\\/]?((?:[A-Za-z]:)?[\\\\/]?(?:(?:[^\\\\/]+[\\\\/]+)*[^\\\\/]+[\\\\/]*)))$', '/abc.git')",[247728]
"('Description.java', 'org.junit.runner.Description', 'methodAndClassNamePatternGroupOrDefault', '([\\s\\S]*)\\((.*)\\)', 'testSimpleStarCase2(org.eclipse.jgit.fnmatch.FileNameMatcherTest)')","[42826, 46152]"
"('FastIgnoreRule.java', 'org.eclipse.jgit.ignore.FastIgnoreRule', 'isMatch', '[[\\p{Print}\\p{javaDigit}\\p{javaLetter}]]', '.')",[101497]
"('Description.java', 'org.junit.runner.Description', 'methodAndClassNamePatternGroupOrDefault', '([\\s\\S]*)\\((.*)\\)', 'org.eclipse.jgit.revplot.PlotCommitListTest')","[169259, 169927]"
"('Description.java', 'org.junit.runner.Description', 'methodAndClassNamePatternGroupOrDefault', '([\\s\\S]*)\\((.*)\\)', 'testFillToUnknownCommit(org.eclipse.jgit.revwalk.RevCommitListTest)')","[176705, 176854]"
"('Description.java', 'org.junit.runner.Description', 'methodAndClassNamePatternGroupOrDefault', '([\\s\\S]*)\\((.*)\\)', 'testVerySimplePatternCase3[OldRule? true](org.eclipse.jgit.ignore.IgnoreRuleSpecialCasesTest)')","[89353, 96437]"
"('QuotedString.java', 'org.eclipse.jgit.util.QuotedString$BourneUserPathStyle', 'quote', '^~[A-Za-z0-9_-]*/.*$', 'a')","[29380, 29405]"
"('FastIgnoreRule.java', 'org.eclipse.jgit.ignore.FastIgnoreRule', 'isMatch', '[\\p{javaDigit}]', '9')",[100691]
"('Description.java', 'org.junit.runner.Description', 'methodAndClassNamePatternGroupOrDefault', '([\\s\\S]*)\\((.*)\\)', 'testValidTree5(org.eclipse.jgit.lib.ObjectCheckerTest)')","[48857, 51362]"
"('Description.java', 'org.junit.runner.Description', 'methodAndClassNamePatternGroupOrDefault', '([\\s\\S]*)\\((.*)\\)', 'testPullFastForward(org.eclipse.jgit.api.PullCommandTest)')","[144420, 144757]"
"('Description.java', 'org.junit.runner.Description', 'methodAndClassNamePatternGroupOrDefault', '([\\s\\S]*)\\((.*)\\)', 'testDeleteLoosePacked(org.eclipse.jgit.internal.storage.file.RefUpdateTest)')","[119655, 120478]"
"('FastIgnoreRule.java', 'org.eclipse.jgit.ignore.FastIgnoreRule', 'isMatch', '[\\p{XDigit}]', 'a')",[102019]
"('Description.java', 'org.junit.runner.Description', 'methodAndClassNamePatternGroupOrDefault', '([\\s\\S]*)\\((.*)\\)', 'invalidSetSource(org.eclipse.jgit.transport.RefSpecTest)')","[186696, 187423]"
"('URIish.java', 'org.eclipse.jgit.transport.URIish', '<init>', '^([a-z][a-z0-9+-]+)://(?:(?:([^/:@]+)(?::([^\\\\/]+))?@)?((?:[^\\\\/:]+)|(?:\\[[0-9a-f:]+\\]))(?::(\\d+))?((?:/~(?:[^\\\\/]+))?[\\\\/]))?(.+)?$', 'http://me@example.com:1234//abc')",[213665]
"('URIish.java', 'org.eclipse.jgit.transport.URIish', '<init>', '^([a-z][a-z0-9+-]+)://(?:(?:([^/:@]+)(?::([^\\\\/]+))?@)?((?:[^\\\\/:]+)|(?:\\[[0-9a-f:]+\\]))(?::(\\d+))?((?:/~(?:[^\\\\/]+))?[\\\\/]))?(.+)?$', 'file:///tmp/jgit_test_4734102348625464011_tmp/tmp_6845498822371707756/.git/')","[125319, 125377]"
"('Description.java', 'org.junit.runner.Description', 'methodAndClassNamePatternGroupOrDefault', '([\\s\\S]*)\\((.*)\\)', 'testParse_explicit_bad_encoded2(org.eclipse.jgit.revwalk.RevTagParseTest)')","[179688, 180098]"
"('URIish.java', 'org.eclipse.jgit.transport.URIish', '<init>', '^(file):([\\\\/](?![\\\\/])((?:[A-Za-z]:)?[\\\\/]?(?:(?:[^\\\\/]+[\\\\/]+)*[^\\\\/]+[\\\\/]*)))$', 'ssh+git://lusr\\example@[::1]:80/D:\\x')",[213550]
"('Description.java', 'org.junit.runner.Description', 'methodAndClassNamePatternGroupOrDefault', '([\\s\\S]*)\\((.*)\\)', 'multipleBranches(org.eclipse.jgit.revwalk.RevWalkUtilsReachableTest)')","[177128, 177238]"
"('Description.java', 'org.junit.runner.Description', 'methodAndClassNamePatternGroupOrDefault', '([\\s\\S]*)\\((.*)\\)', 'org.eclipse.jgit.revwalk.SkipRevFilterTest')","[174299, 174451]"
"('URIish.java', 'org.eclipse.jgit.transport.URIish', '<init>', '^(file):([\\\\/](?![\\\\/])((?:[A-Za-z]:)?[\\\\/]?(?:(?:[^\\\\/]+[\\\\/]+)*[^\\\\/]+[\\\\/]*)))$', 'ssh://me@[::1]//')","[221531, 221715]"
"('Description.java', 'org.junit.runner.Description', 'methodAndClassNamePatternGroupOrDefault', '([\\s\\S]*)\\((.*)\\)', 'testPunctGroupCase2[OldRule? true](org.eclipse.jgit.ignore.IgnoreRuleSpecialCasesTest)')","[90342, 97426]"
"('Description.java', 'org.junit.runner.Description', 'methodAndClassNamePatternGroupOrDefault', '([\\s\\S]*)\\((.*)\\)', 'testCommonScore_SimiliarBy75(org.eclipse.jgit.diff.SimilarityIndexTest)')","[11386, 11556]"
"('Description.java', 'org.junit.runner.Description', 'methodAndClassNamePatternGroupOrDefault', '([\\s\\S]*)\\((.*)\\)', 'local(org.eclipse.jgit.util.GitDateParserTest)')","[22002, 22283]"
"('URIish.java', 'org.eclipse.jgit.transport.URIish', '<init>', '^([\\\\/]?((?:[A-Za-z]:)?[\\\\/]?(?:(?:[^\\\\/]+[\\\\/]+)*[^\\\\/]+[\\\\/]*)))$', '/tmp/jgit_test_4639109472720102754_tmp/tmp_8101730606670789681')","[151260, 151405]"
"('Description.java', 'org.junit.runner.Description', 'methodAndClassNamePatternGroupOrDefault', '([\\s\\S]*)\\((.*)\\)', 'testSpecialGroupCase1(org.eclipse.jgit.fnmatch.FileNameMatcherTest)')","[41377, 44634]"
"('URIish.java', 'org.eclipse.jgit.transport.URIish', '<init>', '^([a-z][a-z0-9+-]+)://(?:(?:([^/:@]+)(?::([^\\\\/]+))?@)?((?:[^\\\\/:]+)|(?:\\[[0-9a-f:]+\\]))(?::(\\d+))?((?:/~(?:[^\\\\/]+))?[\\\\/]))?(.+)?$', 'file:///tmp/jgit_test_5651175302048387135_tmp/tmp_5143292996262932816.git/')",[144260]
"('Description.java', 'org.junit.runner.Description', 'methodAndClassNamePatternGroupOrDefault', '([\\s\\S]*)\\((.*)\\)', '[OldRule? true]')","[77355, 84550, 84573, 88295, 102848, 102871, 103625, 107981, 108004]"
"('ChangeIdUtil.java', 'org.eclipse.jgit.util.ChangeIdUtil', 'indexOfChangeId', '(^Change-Id: *I[a-f0-9]{40}$)', 'oneliner followed by blank')",[34037]
"('Description.java', 'org.junit.runner.Description', 'methodAndClassNamePatternGroupOrDefault', '([\\s\\S]*)\\((.*)\\)', 'testNoDirectorySuffix(org.eclipse.jgit.lib.ValidRefNameTest)')","[65928, 66298]"
"('URIish.java', 'org.eclipse.jgit.transport.URIish', '<init>', '^([a-z][a-z0-9+-]+)://(?:(?:([^/:@]+)(?::([^\\\\/]+))?@)?((?:[^\\\\/:]+)|(?:\\[[0-9a-f:]+\\]))(?::(\\d+))?((?:/~(?:[^\\\\/]+))?[\\\\/]))?(.+)?$', 'ssh://me@example.com:80//')",[207179]
"('URIish.java', 'org.eclipse.jgit.transport.URIish', '<init>', '^([a-z][a-z0-9+-]+)://(?:(?:([^/:@]+)(?::([^\\\\/]+))?@)?((?:[^\\\\/:]+)|(?:\\[[0-9a-f:]+\\]))(?::(\\d+))?((?:/~(?:[^\\\\/]+))?[\\\\/]))?(.+)?$', 'http://me:wtf@[::1]:1234/D:/x')",[200409]
"('URIish.java', 'org.eclipse.jgit.transport.URIish', '<init>', '^(file):([\\\\/](?![\\\\/])((?:[A-Za-z]:)?[\\\\/]?(?:(?:[^\\\\/]+[\\\\/]+)*[^\\\\/]+[\\\\/]*)))$', 'https://lusr\\example@[::1]:1234//')",[220427]
"('Description.java', 'org.junit.runner.Description', 'methodAndClassNamePatternGroupOrDefault', '([\\s\\S]*)\\((.*)\\)', 'testVerySimpleGroupRangeCase3(org.eclipse.jgit.fnmatch.FileNameMatcherTest)')","[43057, 46394]"
"('Description.java', 'org.junit.runner.Description', 'methodAndClassNamePatternGroupOrDefault', '([\\s\\S]*)\\((.*)\\)', 'testFindContainsGet(org.eclipse.jgit.util.RefListTest)')","[20159, 20660]"
"('Description.java', 'org.junit.runner.Description', 'methodAndClassNamePatternGroupOrDefault', '([\\s\\S]*)\\((.*)\\)', 'testMerged(org.eclipse.jgit.revplot.PlotCommitListTest)')","[169532, 169860]"
"('URIish.java', 'org.eclipse.jgit.transport.URIish', '<init>', '^(file):([\\\\/](?![\\\\/])((?:[A-Za-z]:)?[\\\\/]?(?:(?:[^\\\\/]+[\\\\/]+)*[^\\\\/]+[\\\\/]*)))$', 'ssh://example.com//')","[234043, 234227, 235147, 235331, 236251, 236435]"
"('URIish.java', 'org.eclipse.jgit.transport.URIish', '<init>', '^(file):([\\\\/](?![\\\\/])((?:[A-Za-z]:)?[\\\\/]?(?:(?:[^\\\\/]+[\\\\/]+)*[^\\\\/]+[\\\\/]*)))$', 'https://l usr\\example.com:wtf@example.com:80//')",[204948]
"('URIish.java', 'org.eclipse.jgit.transport.URIish', '<init>', '^([a-z][a-z0-9+-]+)://(?:(?:([^/:@]+)(?::([^\\\\/]+))?@)?((?:[^\\\\/:]+)|(?:\\[[0-9a-f:]+\\]))(?::(\\d+))?((?:/~(?:[^\\\\/]+))?[\\\\/]))?(.+)?$', 'https://l usr\\example.com@example.com:80/D:/x')",[218886]
"('Description.java', 'org.junit.runner.Description', 'methodAndClassNamePatternGroupOrDefault', '([\\s\\S]*)\\((.*)\\)', 'testSimple(org.eclipse.jgit.revwalk.RevWalkMergeBaseTest)')","[177848, 177979]"
"('Description.java', 'org.junit.runner.Description', 'methodAndClassNamePatternGroupOrDefault', '([\\s\\S]*)\\((.*)\\)', 'testManySolutionsCase4[OldRule? false](org.eclipse.jgit.ignore.IgnoreRuleSpecialCasesTest)')","[87216, 94321]"
"('URIish.java', 'org.eclipse.jgit.transport.URIish', '<init>', '^(file):([\\\\/](?![\\\\/])((?:[A-Za-z]:)?[\\\\/]?(?:(?:[^\\\\/]+[\\\\/]+)*[^\\\\/]+[\\\\/]*)))$', 'ssh://me@[::1]:80/D:\\x')",[208030]
"('URIish.java', 'org.eclipse.jgit.transport.URIish', '<init>', '^([a-z][a-z0-9+-]+)://(?:(?:([^/:@]+)(?::([^\\\\/]+))?@)?((?:[^\\\\/:]+)|(?:\\[[0-9a-f:]+\\]))(?::(\\d+))?((?:/~(?:[^\\\\/]+))?[\\\\/]))?(.+)?$', 'ssh+git://me@example.com:1234/D:/x')",[210399]
"('Description.java', 'org.junit.runner.Description', 'methodAndClassNamePatternGroupOrDefault', '([\\s\\S]*)\\((.*)\\)', 'testCreateMatcherForSuffix(org.eclipse.jgit.fnmatch.FileNameMatcherTest)')","[42091, 45382]"
"('Description.java', 'org.junit.runner.Description', 'methodAndClassNamePatternGroupOrDefault', '([\\s\\S]*)\\((.*)\\)', 'testCRC32(org.eclipse.jgit.internal.storage.file.PackIndexV2Test)')","[114536, 114663]"
"('URIish.java', 'org.eclipse.jgit.transport.URIish', '<init>', '^(file):([\\\\/](?![\\\\/])((?:[A-Za-z]:)?[\\\\/]?(?:(?:[^\\\\/]+[\\\\/]+)*[^\\\\/]+[\\\\/]*)))$', 'file:/tmp/jgit_test_423578117363873144_tmp/tmp_5965468416386616865/.git/')",[57017]
"('Description.java', 'org.junit.runner.Description', 'methodAndClassNamePatternGroupOrDefault', '([\\s\\S]*)\\((.*)\\)', 'testMerge_PackedLooseLoose(org.eclipse.jgit.util.RefMapTest)')","[20934, 21401]"
"('Description.java', 'org.junit.runner.Description', 'methodAndClassNamePatternGroupOrDefault', '([\\s\\S]*)\\((.*)\\)', 'testExceptionThrown_BareRepoGetWorkDir(org.eclipse.jgit.internal.storage.file.RepositorySetupWorkDirTest)')","[113901, 114156]"
"('Description.java', 'org.junit.runner.Description', 'methodAndClassNamePatternGroupOrDefault', '([\\s\\S]*)\\((.*)\\)', 'testFindNextOffsetWrongOffset(org.eclipse.jgit.internal.storage.file.PackReverseIndexTest)')","[116147, 116233]"
"('Description.java', 'org.junit.runner.Description', 'methodAndClassNamePatternGroupOrDefault', '([\\s\\S]*)\\((.*)\\)', 'testWritePack2DeltasReuseRefs(org.eclipse.jgit.internal.storage.file.PackWriterTest)')","[117698, 118145]"
"('URIish.java', 'org.eclipse.jgit.transport.URIish', '<init>', '^(file):([\\\\/](?![\\\\/])((?:[A-Za-z]:)?[\\\\/]?(?:(?:[^\\\\/]+[\\\\/]+)*[^\\\\/]+[\\\\/]*)))$', 'http://me:wtf@[::1]:80//')",[200478]
"('Description.java', 'org.junit.runner.Description', 'methodAndClassNamePatternGroupOrDefault', '([\\s\\S]*)\\((.*)\\)', 'testFilePathSimpleCase(org.eclipse.jgit.fnmatch.FileNameMatcherTest)')","[42070, 45360]"
"('Description.java', 'org.junit.runner.Description', 'methodAndClassNamePatternGroupOrDefault', '([\\s\\S]*)\\((.*)\\)', 'testPath_4096(org.eclipse.jgit.dircache.DirCacheLargePathTest)')","[172411, 172520]"
"('Description.java', 'org.junit.runner.Description', 'methodAndClassNamePatternGroupOrDefault', '([\\s\\S]*)\\((.*)\\)', 'testParse_NoBinary(org.eclipse.jgit.patch.PatchTest)')","[2022, 2170]"
"('URIish.java', 'org.eclipse.jgit.transport.URIish', '<init>', '^(file):([\\\\/](?![\\\\/])((?:[A-Za-z]:)?[\\\\/]?(?:(?:[^\\\\/]+[\\\\/]+)*[^\\\\/]+[\\\\/]*)))$', 'https://me@1.2.3.4:80/D:\\x')",[217621]
"('URIish.java', 'org.eclipse.jgit.transport.URIish', '<init>', '^([a-z][a-z0-9+-]+)://(?:(?:([^/:@]+)(?::([^\\\\/]+))?@)?((?:[^\\\\/:]+)|(?:\\[[0-9a-f:]+\\]))(?::(\\d+))?((?:/~(?:[^\\\\/]+))?[\\\\/]))?(.+)?$', 'https://me:wtf@example.com:1234/D:\\x')",[203054]
"('Description.java', 'org.junit.runner.Description', 'methodAndClassNamePatternGroupOrDefault', '([\\s\\S]*)\\((.*)\\)', 'testListAllBranchesShouldNotDie(org.eclipse.jgit.api.BranchCommandTest)')","[128800, 129125]"
"('Description.java', 'org.junit.runner.Description', 'methodAndClassNamePatternGroupOrDefault', '([\\s\\S]*)\\((.*)\\)', 'testFileKeyOpenNew(org.eclipse.jgit.lib.RepositoryCacheTest)')","[60326, 60455]"
"('Description.java', 'org.junit.runner.Description', 'methodAndClassNamePatternGroupOrDefault', '([\\s\\S]*)\\((.*)\\)', 'testWriteString1(org.eclipse.jgit.transport.PacketLineOutTest)')","[191686, 191860]"
"('URIish.java', 'org.eclipse.jgit.transport.URIish', '<init>', '^([a-z][a-z0-9+-]+)://(?:(?:([^/:@]+)(?::([^\\\\/]+))?@)?((?:[^\\\\/:]+)|(?:\\[[0-9a-f:]+\\]))(?::(\\d+))?((?:/~(?:[^\\\\/]+))?[\\\\/]))?(.+)?$', 'https://lusr\\example@example.com:1234//')",[219714]
"('Description.java', 'org.junit.runner.Description', 'methodAndClassNamePatternGroupOrDefault', '([\\s\\S]*)\\((.*)\\)', 'testDirectoryFileConflicts_15(org.eclipse.jgit.lib.DirCacheCheckoutTest)')","[61692, 62775]"
"('URIish.java', 'org.eclipse.jgit.transport.URIish', '<init>', '^(file):([\\\\/](?![\\\\/])((?:[A-Za-z]:)?[\\\\/]?(?:(?:[^\\\\/]+[\\\\/]+)*[^\\\\/]+[\\\\/]*)))$', 'https://lusr\\example@[::1]/D:\\x')","[233813, 233997]"
"('Description.java', 'org.junit.runner.Description', 'methodAndClassNamePatternGroupOrDefault', '([\\s\\S]*)\\((.*)\\)', 'testFileCommittedModified(org.eclipse.jgit.treewalk.filter.IndexDiffFilterTest)')","[264338, 265145]"
"('Description.java', 'org.junit.runner.Description', 'methodAndClassNamePatternGroupOrDefault', '([\\s\\S]*)\\((.*)\\)', 'testRebasePreservingMerges1(org.eclipse.jgit.api.RebaseCommandTest)')","[131201, 132678]"
"('URIish.java', 'org.eclipse.jgit.transport.URIish', '<init>', '^(file):([\\\\/](?![\\\\/])((?:[A-Za-z]:)?[\\\\/]?(?:(?:[^\\\\/]+[\\\\/]+)*[^\\\\/]+[\\\\/]*)))$', 'https://lusr\\example@example.com:1234/D:/x')",[219783]
"('URIish.java', 'org.eclipse.jgit.transport.URIish', '<init>', '^(file):([\\\\/](?![\\\\/])((?:[A-Za-z]:)?[\\\\/]?(?:(?:[^\\\\/]+[\\\\/]+)*[^\\\\/]+[\\\\/]*)))$', 'ssh+git://me@1.2.3.4:1234//')",[210652]
"('URIish.java', 'org.eclipse.jgit.transport.URIish', '<init>', '^([a-z][a-z0-9+-]+)://(?:(?:([^/:@]+)(?::([^\\\\/]+))?@)?((?:[^\\\\/:]+)|(?:\\[[0-9a-f:]+\\]))(?::(\\d+))?((?:/~(?:[^\\\\/]+))?[\\\\/]))?(.+)?$', 'ssh+git://l usr\\example.com@example.com:80/D:/x')",[211687]
"('Description.java', 'org.junit.runner.Description', 'methodAndClassNamePatternGroupOrDefault', '([\\s\\S]*)\\((.*)\\)', 'testIncompleteRangesInOneGroupCase1(org.eclipse.jgit.fnmatch.FileNameMatcherTest)')","[43372, 46724]"
"('Description.java', 'org.junit.runner.Description', 'methodAndClassNamePatternGroupOrDefault', '([\\s\\S]*)\\((.*)\\)', 'testAddURI(org.eclipse.jgit.transport.RemoteConfigTest)')","[253590, 254157]"
"('URIish.java', 'org.eclipse.jgit.transport.URIish', '<init>', '^(file):([\\\\/](?![\\\\/])((?:[A-Za-z]:)?[\\\\/]?(?:(?:[^\\\\/]+[\\\\/]+)*[^\\\\/]+[\\\\/]*)))$', 'file:/tmp/jgit_test_4506496780195827691_tmp/tmp_6091248007004860342/.git/')",[18279]
"('FastIgnoreRule.java', 'org.eclipse.jgit.ignore.FastIgnoreRule', 'isMatch', '[\\p{javaLetter}][\\p{javaLetter}]', 'aö')",[100013]
"('URIish.java', 'org.eclipse.jgit.transport.URIish', '<init>', '^([a-z][a-z0-9+-]+)://(?:(?:([^/:@]+)(?::([^\\\\/]+))?@)?((?:[^\\\\/:]+)|(?:\\[[0-9a-f:]+\\]))(?::(\\d+))?((?:/~(?:[^\\\\/]+))?[\\\\/]))?(.+)?$', 'ssh://me@1.2.3.4//abc')","[221232, 221416]"
"('Description.java', 'org.junit.runner.Description', 'methodAndClassNamePatternGroupOrDefault', '([\\s\\S]*)\\((.*)\\)', 'testGetRefs_LooseSortedCorrectly(org.eclipse.jgit.internal.storage.file.RefDirectoryTest)')","[111097, 112285]"
"('Description.java', 'org.junit.runner.Description', 'methodAndClassNamePatternGroupOrDefault', '([\\s\\S]*)\\((.*)\\)', 'testEquals1(org.eclipse.jgit.diff.EditTest)')","[5842, 6179]"
"('Description.java', 'org.junit.runner.Description', 'methodAndClassNamePatternGroupOrDefault', '([\\s\\S]*)\\((.*)\\)', 'testComparatorReduceCommonStartEnd_EmptyLine(org.eclipse.jgit.diff.RawTextTest)')","[10894, 11219]"
"('URIish.java', 'org.eclipse.jgit.transport.URIish', '<init>', '^([\\\\/]?((?:[A-Za-z]:)?[\\\\/]?(?:(?:[^\\\\/]+[\\\\/]+)*[^\\\\/]+[\\\\/]*)))$', '../../foo/bar')","[250189, 250304]"
"('URIish.java', 'org.eclipse.jgit.transport.URIish', '<init>', '^(file):([\\\\/](?![\\\\/])((?:[A-Za-z]:)?[\\\\/]?(?:(?:[^\\\\/]+[\\\\/]+)*[^\\\\/]+[\\\\/]*)))$', 'file:///home/m%c3%a5y')","[190811, 190857]"
"('Description.java', 'org.junit.runner.Description', 'methodAndClassNamePatternGroupOrDefault', '([\\s\\S]*)\\((.*)\\)', 'testBackwords_Prebuilts1(org.eclipse.jgit.treewalk.CanonicalTreeParserTest)')","[261294, 261611]"
"('Description.java', 'org.junit.runner.Description', 'methodAndClassNamePatternGroupOrDefault', '([\\s\\S]*)\\((.*)\\)', 'testCombinedMergeOptions(org.eclipse.jgit.lib.ConfigTest)')","[69726, 70456]"
"('Description.java', 'org.junit.runner.Description', 'methodAndClassNamePatternGroupOrDefault', '([\\s\\S]*)\\((.*)\\)', 'multiplePathsSecondParent(org.eclipse.jgit.api.NameRevCommandTest)')","[168769, 169002]"
"('Description.java', 'org.junit.runner.Description', 'methodAndClassNamePatternGroupOrDefault', '([\\s\\S]*)\\((.*)\\)', 'testInvalidTreeModeStartsWithZero2(org.eclipse.jgit.lib.ObjectCheckerTest)')","[50579, 53166]"
"('Description.java', 'org.junit.runner.Description', 'methodAndClassNamePatternGroupOrDefault', '([\\s\\S]*)\\((.*)\\)', 'testUpperGroupCase0(org.eclipse.jgit.fnmatch.FileNameMatcherTest)')","[43645, 47010]"
"('URIish.java', 'org.eclipse.jgit.transport.URIish', '<init>', '^([a-z][a-z0-9+-]+)://(?:(?:([^/:@]+)(?::([^\\\\/]+))?@)?((?:[^\\\\/:]+)|(?:\\[[0-9a-f:]+\\]))(?::(\\d+))?((?:/~(?:[^\\\\/]+))?[\\\\/]))?(.+)?$', 'http://lusr\\example:wtf@1.2.3.4:1234/D:/x')",[202249]
"('Description.java', 'org.junit.runner.Description', 'methodAndClassNamePatternGroupOrDefault', '([\\s\\S]*)\\((.*)\\)', 'testWhitespaceMerge(org.eclipse.jgit.api.BlameCommandTest)')","[139778, 140164]"
"('Description.java', 'org.junit.runner.Description', 'methodAndClassNamePatternGroupOrDefault', '([\\s\\S]*)\\((.*)\\)', 'test000_openRepoBadArgs(org.eclipse.jgit.internal.storage.file.T0003_BasicTest)')","[116672, 117213]"
"('Description.java', 'org.junit.runner.Description', 'methodAndClassNamePatternGroupOrDefault', '([\\s\\S]*)\\((.*)\\)', 'test005_PutGetStringList(org.eclipse.jgit.lib.ConfigTest)')","[69621, 70346]"
"('Description.java', 'org.junit.runner.Description', 'methodAndClassNamePatternGroupOrDefault', '([\\s\\S]*)\\((.*)\\)', 'testOnlyOption_f1_5_d(org.eclipse.jgit.api.CommitOnlyTest)')","[134920, 136965]"
"('Description.java', 'org.junit.runner.Description', 'methodAndClassNamePatternGroupOrDefault', '([\\s\\S]*)\\((.*)\\)', 'testDeleteRecursive(org.eclipse.jgit.util.FileUtilTest)')","[23520, 23869]"
"('URIish.java', 'org.eclipse.jgit.transport.URIish', '<init>', '^([a-z][a-z0-9+-]+)://(?:(?:([^/:@]+)(?::([^\\\\/]+))?@)?((?:[^\\\\/:]+)|(?:\\[[0-9a-f:]+\\]))(?::(\\d+))?((?:/~(?:[^\\\\/]+))?[\\\\/]))?(.+)?$', 'ssh://[::1]//abc')","[234848, 235032, 235952, 236136, 237056, 237240]"
"('URIish.java', 'org.eclipse.jgit.transport.URIish', '<init>', '^(file):([\\\\/](?![\\\\/])((?:[A-Za-z]:)?[\\\\/]?(?:(?:[^\\\\/]+[\\\\/]+)*[^\\\\/]+[\\\\/]*)))$', 'http://lusr\\example:wtf@1.2.3.4:80/D:/x')",[202410]
"('URIish.java', 'org.eclipse.jgit.transport.URIish', '<init>', '^(file):([\\\\/](?![\\\\/])((?:[A-Za-z]:)?[\\\\/]?(?:(?:[^\\\\/]+[\\\\/]+)*[^\\\\/]+[\\\\/]*)))$', 'file:///tmp/jgit_test_7290935297598507122_tmp/tmp_6439669014203965208/.git/')",[262701]
"('URIish.java', 'org.eclipse.jgit.transport.URIish', '<init>', '^(file):([\\\\/](?![\\\\/])((?:[A-Za-z]:)?[\\\\/]?(?:(?:[^\\\\/]+[\\\\/]+)*[^\\\\/]+[\\\\/]*)))$', 'https://l usr\\example.com@1.2.3.4:1234/D:/x')",[219047]
"('URIish.java', 'org.eclipse.jgit.transport.URIish', '<init>', '^(file):([\\\\/](?![\\\\/])((?:[A-Za-z]:)?[\\\\/]?(?:(?:[^\\\\/]+[\\\\/]+)*[^\\\\/]+[\\\\/]*)))$', 'https://me@example.com//')","[230731, 230915]"
"('URIish.java', 'org.eclipse.jgit.transport.URIish', '<init>', '^([a-z][a-z0-9+-]+)://(?:(?:([^/:@]+)(?::([^\\\\/]+))?@)?((?:[^\\\\/:]+)|(?:\\[[0-9a-f:]+\\]))(?::(\\d+))?((?:/~(?:[^\\\\/]+))?[\\\\/]))?(.+)?$', 'http://me@example.com:80//')",[213803]
"('URIish.java', 'org.eclipse.jgit.transport.URIish', '<init>', '^([a-z][a-z0-9+-]+)://(?:(?:([^/:@]+)(?::([^\\\\/]+))?@)?((?:[^\\\\/:]+)|(?:\\[[0-9a-f:]+\\]))(?::(\\d+))?((?:/~(?:[^\\\\/]+))?[\\\\/]))?(.+)?$', '/tmp/jgit_test_6323444599553401210_tmp/tmp_1339419818471425794')","[159513, 159643, 159842, 160054, 160256]"
"('Description.java', 'org.junit.runner.Description', 'methodAndClassNamePatternGroupOrDefault', '([\\s\\S]*)\\((.*)\\)', 'testGetEnum(org.eclipse.jgit.lib.ConfigTest)')","[69642, 70368]"
"('URIish.java', 'org.eclipse.jgit.transport.URIish', '<init>', '^([a-z][a-z0-9+-]+)://(?:(?:([^/:@]+)(?::([^\\\\/]+))?@)?((?:[^\\\\/:]+)|(?:\\[[0-9a-f:]+\\]))(?::(\\d+))?((?:/~(?:[^\\\\/]+))?[\\\\/]))?(.+)?$', 'file:///tmp/jgit_test_7286773243984836704_tmp/tmp_8328110772619142051/.git/')",[56879]
"('URIish.java', 'org.eclipse.jgit.transport.URIish', '<init>', '^(?:([^/:@]+)(?::([^\\\\/]+))?@)?((?:[^\\\\/:]+)|(?:\\[[0-9a-f:]+\\])):((?:(?:/~(?:[^\\\\/]+))[\\\\/])?(?:(?:[^\\\\/]+[\\\\/]+)*[^\\\\/]+[\\\\/]*))$', 'example.com:some/p ath')","[190949, 191018]"
"('Description.java', 'org.junit.runner.Description', 'methodAndClassNamePatternGroupOrDefault', '([\\s\\S]*)\\((.*)\\)', 'testCreate_ByStringPathAndStage(org.eclipse.jgit.dircache.DirCacheEntryTest)')","[172727, 172859]"
"('Repository.java', 'org.eclipse.jgit.lib.Repository', 'resolve', '^-\\d+$', 'yesterday')","[65569, 65596]"
"('Description.java', 'org.junit.runner.Description', 'methodAndClassNamePatternGroupOrDefault', '([\\s\\S]*)\\((.*)\\)', 'defaultFmt(org.eclipse.jgit.util.GitDateParserTest)')","[22044, 22327]"
"('URIish.java', 'org.eclipse.jgit.transport.URIish', '<init>', '^(file):([\\\\/](?![\\\\/])((?:[A-Za-z]:)?[\\\\/]?(?:(?:[^\\\\/]+[\\\\/]+)*[^\\\\/]+[\\\\/]*)))$', 'file:/tmp/jgit_test_1453594300143160598_tmp/tmp_6210392552640775347/.git/')",[14562]
"('URIish.java', 'org.eclipse.jgit.transport.URIish', '<init>', '^([a-z][a-z0-9+-]+)://(?:(?:([^/:@]+)(?::([^\\\\/]+))?@)?((?:[^\\\\/:]+)|(?:\\[[0-9a-f:]+\\]))(?::(\\d+))?((?:/~(?:[^\\\\/]+))?[\\\\/]))?(.+)?$', 'ssh+git://l usr\\example.com:wtf@example.com:1234/D:/x')",[197465]
"('Description.java', 'org.junit.runner.Description', 'methodAndClassNamePatternGroupOrDefault', '([\\s\\S]*)\\((.*)\\)', 'testWordGroupCase2[OldRule? true](org.eclipse.jgit.ignore.IgnoreRuleSpecialCasesTest)')","[91423, 98507]"
"('Description.java', 'org.junit.runner.Description', 'methodAndClassNamePatternGroupOrDefault', '([\\s\\S]*)\\((.*)\\)', 'testDigitGroupCase1[OldRule? true](org.eclipse.jgit.ignore.IgnoreRuleSpecialCasesTest)')","[89951, 97035]"
"('URIish.java', 'org.eclipse.jgit.transport.URIish', '<init>', '^(file):([\\\\/](?![\\\\/])((?:[A-Za-z]:)?[\\\\/]?(?:(?:[^\\\\/]+[\\\\/]+)*[^\\\\/]+[\\\\/]*)))$', '/tmp/jgit_test_72803735483777762_tmp/tmp_5952370543069622143/.git')","[129261, 129395]"
"('URIish.java', 'org.eclipse.jgit.transport.URIish', '<init>', '^(file):([\\\\/](?![\\\\/])((?:[A-Za-z]:)?[\\\\/]?(?:(?:[^\\\\/]+[\\\\/]+)*[^\\\\/]+[\\\\/]*)))$', 'https://l usr\\example.com@1.2.3.4:1234//')",[218955]
"('Description.java', 'org.junit.runner.Description', 'methodAndClassNamePatternGroupOrDefault', '([\\s\\S]*)\\((.*)\\)', 'testAddA2(org.eclipse.jgit.api.ApplyCommandTest)')","[163693, 163927]"
"('Description.java', 'org.junit.runner.Description', 'methodAndClassNamePatternGroupOrDefault', '([\\s\\S]*)\\((.*)\\)', 'testInvalidTreeNameIsEmpty(org.eclipse.jgit.lib.ObjectCheckerTest)')","[48311, 50790]"
"('Description.java', 'org.junit.runner.Description', 'methodAndClassNamePatternGroupOrDefault', '([\\s\\S]*)\\((.*)\\)', 'testAddDeletePathAndTreeNormalNames(org.eclipse.jgit.dircache.DirCachePathEditTest)')","[170660, 170726]"
"('Description.java', 'org.junit.runner.Description', 'methodAndClassNamePatternGroupOrDefault', '([\\s\\S]*)\\((.*)\\)', 'testTwoGroupsCase2[OldRule? true](org.eclipse.jgit.ignore.IgnoreRuleSpecialCasesTest)')","[89790, 96874]"
"('URIish.java', 'org.eclipse.jgit.transport.URIish', '<init>', '^(file):([\\\\/](?![\\\\/])((?:[A-Za-z]:)?[\\\\/]?(?:(?:[^\\\\/]+[\\\\/]+)*[^\\\\/]+[\\\\/]*)))$', 'ssh://me:wtf@[::1]:1234/D:\\x')",[192916]
"('URIish.java', 'org.eclipse.jgit.transport.URIish', '<init>', '^(file):([\\\\/](?![\\\\/])((?:[A-Za-z]:)?[\\\\/]?(?:(?:[^\\\\/]+[\\\\/]+)*[^\\\\/]+[\\\\/]*)))$', 'user@example.com:some/p ath')","[249637, 249706]"
"('Description.java', 'org.junit.runner.Description', 'methodAndClassNamePatternGroupOrDefault', '([\\s\\S]*)\\((.*)\\)', 'testAddNothing(org.eclipse.jgit.api.AddCommandTest)')","[164453, 164876]"
"('Description.java', 'org.junit.runner.Description', 'methodAndClassNamePatternGroupOrDefault', '([\\s\\S]*)\\((.*)\\)', 'testGetters(org.eclipse.jgit.ignore.IgnoreMatcherTest)')","[103033, 103228]"
"('URIish.java', 'org.eclipse.jgit.transport.URIish', '<init>', '^([a-z][a-z0-9+-]+)://(?:(?:([^/:@]+)(?::([^\\\\/]+))?@)?((?:[^\\\\/:]+)|(?:\\[[0-9a-f:]+\\]))(?::(\\d+))?((?:/~(?:[^\\\\/]+))?[\\\\/]))?(.+)?$', 'https://l usr\\example.com:wtf@[::1]:1234/D:/x')",[205615]
"('URIish.java', 'org.eclipse.jgit.transport.URIish', '<init>', '^([a-z][a-z0-9+-]+)://(?:(?:([^/:@]+)(?::([^\\\\/]+))?@)?((?:[^\\\\/:]+)|(?:\\[[0-9a-f:]+\\]))(?::(\\d+))?((?:/~(?:[^\\\\/]+))?[\\\\/]))?(.+)?$', 'ssh://l usr\\example.com:wtf@[::1]:1234/D:\\x')",[194145]
"('URIish.java', 'org.eclipse.jgit.transport.URIish', '<init>', '^([a-z][a-z0-9+-]+)://(?:(?:([^/:@]+)(?::([^\\\\/]+))?@)?((?:[^\\\\/:]+)|(?:\\[[0-9a-f:]+\\]))(?::(\\d+))?((?:/~(?:[^\\\\/]+))?[\\\\/]))?(.+)?$', 'https://lusr\\example:wtf@[::1]:80//')",[206811]
"('FastIgnoreRule.java', 'org.eclipse.jgit.ignore.FastIgnoreRule', 'isMatch', '[ab]', 'b')",[102643]
"('URIish.java', 'org.eclipse.jgit.transport.URIish', '<init>', '^(file):([\\\\/](?![\\\\/])((?:[A-Za-z]:)?[\\\\/]?(?:(?:[^\\\\/]+[\\\\/]+)*[^\\\\/]+[\\\\/]*)))$', 'ssh://lusr\\example:wtf@1.2.3.4:1234//')",[194720]
"('Description.java', 'org.junit.runner.Description', 'methodAndClassNamePatternGroupOrDefault', '([\\s\\S]*)\\((.*)\\)', 'testIntoHeadOtherThanMaster(org.eclipse.jgit.merge.MergeMessageFormatterTest)')","[16182, 16504]"
"('Description.java', 'org.junit.runner.Description', 'methodAndClassNamePatternGroupOrDefault', '([\\s\\S]*)\\((.*)\\)', 'testSimpleRules[OldRule? true](org.eclipse.jgit.ignore.FastIgnoreRuleTest)')","[77378, 78114]"
"('Description.java', 'org.junit.runner.Description', 'methodAndClassNamePatternGroupOrDefault', '([\\s\\S]*)\\((.*)\\)', 'testReadString_Len0002(org.eclipse.jgit.transport.PacketLineInTest)')","[184416, 184951]"
"('Description.java', 'org.junit.runner.Description', 'methodAndClassNamePatternGroupOrDefault', '([\\s\\S]*)\\((.*)\\)', 'org.eclipse.jgit.api.FetchCommandTest')","[124713, 125458]"
"('URIish.java', 'org.eclipse.jgit.transport.URIish', '<init>', '^([a-z][a-z0-9+-]+)://(?:(?:([^/:@]+)(?::([^\\\\/]+))?@)?((?:[^\\\\/:]+)|(?:\\[[0-9a-f:]+\\]))(?::(\\d+))?((?:/~(?:[^\\\\/]+))?[\\\\/]))?(.+)?$', 'ssh+git://me@example.com//')","[224130, 224314]"
"('Description.java', 'org.junit.runner.Description', 'methodAndClassNamePatternGroupOrDefault', '([\\s\\S]*)\\((.*)\\)', 'testFileInFolderAllIgnored(org.eclipse.jgit.treewalk.filter.IndexDiffFilterTest)')","[264737, 265563]"
"('Description.java', 'org.junit.runner.Description', 'methodAndClassNamePatternGroupOrDefault', '([\\s\\S]*)\\((.*)\\)', 'testCheckoutMultiple(org.eclipse.jgit.api.PathCheckoutCommandTest)')","[123755, 124031]"
"('Description.java', 'org.junit.runner.Description', 'methodAndClassNamePatternGroupOrDefault', '([\\s\\S]*)\\((.*)\\)', 'testEdit_ReplaceCommonDelete(org.eclipse.jgit.diff.MyersDiffTest)')","[8415, 8960]"
"('Description.java', 'org.junit.runner.Description', 'methodAndClassNamePatternGroupOrDefault', '([\\s\\S]*)\\((.*)\\)', 'testReadByteBlocks(org.eclipse.jgit.util.io.UnionInputStreamTest)')","[25308, 25523]"
"('Description.java', 'org.junit.runner.Description', 'methodAndClassNamePatternGroupOrDefault', '([\\s\\S]*)\\((.*)\\)', 'org.eclipse.jgit.treewalk.CanonicalTreeParserTest')","[261252, 261920]"
"('URIish.java', 'org.eclipse.jgit.transport.URIish', '<init>', '^(file):([\\\\/](?![\\\\/])((?:[A-Za-z]:)?[\\\\/]?(?:(?:[^\\\\/]+[\\\\/]+)*[^\\\\/]+[\\\\/]*)))$', 'ssh://1.2.3.4/D:/x')","[234503, 234687, 235607, 235791, 236711, 236895]"
"('URIish.java', 'org.eclipse.jgit.transport.URIish', '<init>', '^(file):([\\\\/](?![\\\\/])((?:[A-Za-z]:)?[\\\\/]?(?:(?:[^\\\\/]+[\\\\/]+)*[^\\\\/]+[\\\\/]*)))$', 'http://l usr\\example.com:wtf@[::1]:1234/D:\\x')",[201536]
"('Description.java', 'org.junit.runner.Description', 'methodAndClassNamePatternGroupOrDefault', '([\\s\\S]*)\\((.*)\\)', 'testCloneRepositoryWithTagName(org.eclipse.jgit.api.CloneCommandTest)')","[159094, 159399]"
"('URIish.java', 'org.eclipse.jgit.transport.URIish', '<init>', '^(file):([\\\\/](?![\\\\/])((?:[A-Za-z]:)?[\\\\/]?(?:(?:[^\\\\/]+[\\\\/]+)*[^\\\\/]+[\\\\/]*)))$', 'http://me:wtf@example.com:1234//abc')",[199604]
"('Description.java', 'org.junit.runner.Description', 'methodAndClassNamePatternGroupOrDefault', '([\\s\\S]*)\\((.*)\\)', 'testInvalidCommitInvalidAuthor2(org.eclipse.jgit.lib.ObjectCheckerTest)')","[49340, 51868]"
"('URIish.java', 'org.eclipse.jgit.transport.URIish', '<init>', '^(?:([^/:@]+)(?::([^\\\\/]+))?@)?([^\\\\/:]{2,}):([\\\\/](?:(?:[^\\\\/]+[\\\\/]+)*[^\\\\/]+[\\\\/]*))$', '../tmp_5292851732867779189')",[259212]
"('Description.java', 'org.junit.runner.Description', 'methodAndClassNamePatternGroupOrDefault', '([\\s\\S]*)\\((.*)\\)', 'org.eclipse.jgit.diff.EditListTest')","[4014, 4252]"
"('Description.java', 'org.junit.runner.Description', 'methodAndClassNamePatternGroupOrDefault', '([\\s\\S]*)\\((.*)\\)', 'testWritePacket2(org.eclipse.jgit.transport.PacketLineOutTest)')","[191602, 191772]"
"('Description.java', 'org.junit.runner.Description', 'methodAndClassNamePatternGroupOrDefault', '([\\s\\S]*)\\((.*)\\)', 'testGetSlashValidSlashDotGitSlashHumanishName(org.eclipse.jgit.transport.URIishTest)')","[188800, 190194]"
"('Description.java', 'org.junit.runner.Description', 'methodAndClassNamePatternGroupOrDefault', '([\\s\\S]*)\\((.*)\\)', 'testInvalidTreeDuplicateNames1(org.eclipse.jgit.lib.ObjectCheckerTest)')","[50621, 53210]"
"('FastIgnoreRule.java', 'org.eclipse.jgit.ignore.FastIgnoreRule', 'isMatch', '[A\\p{Ll}C3-5]', 'e')",[99389]
"('Description.java', 'org.junit.runner.Description', 'methodAndClassNamePatternGroupOrDefault', '([\\s\\S]*)\\((.*)\\)', 'testClear(org.eclipse.jgit.revwalk.DateRevQueueTest)')","[175032, 175185]"
"('Description.java', 'org.junit.runner.Description', 'methodAndClassNamePatternGroupOrDefault', '([\\s\\S]*)\\((.*)\\)', 'testStopWalk(org.eclipse.jgit.treewalk.filter.PathFilterGroupTest)')","[266244, 266393]"
"('Description.java', 'org.junit.runner.Description', 'methodAndClassNamePatternGroupOrDefault', '([\\s\\S]*)\\((.*)\\)', 'testRepositoryStateChecks(org.eclipse.jgit.api.RebaseCommandTest)')","[131768, 133272]"
"('Description.java', 'org.junit.runner.Description', 'methodAndClassNamePatternGroupOrDefault', '([\\s\\S]*)\\((.*)\\)', 'testDestroyWhileOpen(org.eclipse.jgit.util.TemporaryBufferTest)')","[26680, 26986]"
"('URIish.java', 'org.eclipse.jgit.transport.URIish', '<init>', '^([a-z][a-z0-9+-]+)://(?:(?:([^/:@]+)(?::([^\\\\/]+))?@)?((?:[^\\\\/:]+)|(?:\\[[0-9a-f:]+\\]))(?::(\\d+))?((?:/~(?:[^\\\\/]+))?[\\\\/]))?(.+)?$', 'ssh://lusr\\example@example.com:80/D:\\x')",[209525]
"('URIish.java', 'org.eclipse.jgit.transport.URIish', '<init>', '^(file):([\\\\/](?![\\\\/])((?:[A-Za-z]:)?[\\\\/]?(?:(?:[^\\\\/]+[\\\\/]+)*[^\\\\/]+[\\\\/]*)))$', 'http://l usr\\example.com@[::1]:80//abc')",[215666]
"('URIish.java', 'org.eclipse.jgit.transport.URIish', '<init>', '^([a-z][a-z0-9+-]+)://(?:(?:([^/:@]+)(?::([^\\\\/]+))?@)?((?:[^\\\\/:]+)|(?:\\[[0-9a-f:]+\\]))(?::(\\d+))?((?:/~(?:[^\\\\/]+))?[\\\\/]))?(.+)?$', 'http://l usr\\example.com@example.com:1234//')",[214723]
"('Description.java', 'org.junit.runner.Description', 'methodAndClassNamePatternGroupOrDefault', '([\\s\\S]*)\\((.*)\\)', 'test003_PutRemote(org.eclipse.jgit.lib.ConfigTest)')","[69810, 70544]"
"('URIish.java', 'org.eclipse.jgit.transport.URIish', '<init>', '^(file):([\\\\/](?![\\\\/])((?:[A-Za-z]:)?[\\\\/]?(?:(?:[^\\\\/]+[\\\\/]+)*[^\\\\/]+[\\\\/]*)))$', 'ssh://lusr\\example@[::1]:1234//')",[209916]
"('Description.java', 'org.junit.runner.Description', 'methodAndClassNamePatternGroupOrDefault', '([\\s\\S]*)\\((.*)\\)', 'testEmptyCache_NoCacheTree(org.eclipse.jgit.dircache.DirCacheTreeTest)')","[171629, 171756]"
"('Description.java', 'org.junit.runner.Description', 'methodAndClassNamePatternGroupOrDefault', '([\\s\\S]*)\\((.*)\\)', 'org.eclipse.jgit.transport.PacketLineOutTest')","[191560, 193514]"
"('URIish.java', 'org.eclipse.jgit.transport.URIish', '<init>', '^([a-z][a-z0-9+-]+)://(?:(?:([^/:@]+)(?::([^\\\\/]+))?@)?((?:[^\\\\/:]+)|(?:\\[[0-9a-f:]+\\]))(?::(\\d+))?((?:/~(?:[^\\\\/]+))?[\\\\/]))?(.+)?$', 'https://l usr\\example.com@1.2.3.4:80/D:\\x')",[219300]
"('Description.java', 'org.junit.runner.Description', 'methodAndClassNamePatternGroupOrDefault', '([\\s\\S]*)\\((.*)\\)', 'test005_notIsId(org.eclipse.jgit.lib.ObjectIdTest)')","[53591, 53872]"
"('Description.java', 'org.junit.runner.Description', 'methodAndClassNamePatternGroupOrDefault', '([\\s\\S]*)\\((.*)\\)', 'logAllCommitsWithMaxCount(org.eclipse.jgit.api.LogCommandTest)')","[130715, 130863]"
"('URIish.java', 'org.eclipse.jgit.transport.URIish', '<init>', '^([a-z][a-z0-9+-]+)://(?:(?:([^/:@]+)(?::([^\\\\/]+))?@)?((?:[^\\\\/:]+)|(?:\\[[0-9a-f:]+\\]))(?::(\\d+))?((?:/~(?:[^\\\\/]+))?[\\\\/]))?(.+)?$', 'http://l usr\\example.com@[::1]:80//abc')",[215689]
"('Description.java', 'org.junit.runner.Description', 'methodAndClassNamePatternGroupOrDefault', '([\\s\\S]*)\\((.*)\\)', 'testPrefixCompare_7(org.eclipse.jgit.lib.AbbreviatedObjectIdTest)')","[55231, 55761]"
"('URIish.java', 'org.eclipse.jgit.transport.URIish', '<init>', '^([a-z][a-z0-9+-]+)://(?:(?:([^/:@]+)(?::([^\\\\/]+))?@)?((?:[^\\\\/:]+)|(?:\\[[0-9a-f:]+\\]))(?::(\\d+))?((?:/~(?:[^\\\\/]+))?[\\\\/]))?(.+)?$', '/tmp/jgit_test_4869566695306036567_tmp/tmp_8360922162679768520')","[152018, 152148, 152301]"
"('URIish.java', 'org.eclipse.jgit.transport.URIish', '<init>', '^(?:([^/:@]+)(?::([^\\\\/]+))?@)?((?:[^\\\\/:]+)|(?:\\[[0-9a-f:]+\\])):((?:(?:/~(?:[^\\\\/]+))[\\\\/])?(?:(?:[^\\\\/]+[\\\\/]+)*[^\\\\/]+[\\\\/]*))$', '/a/b/c//')",[252492]
"('SideBandInputStream.java', 'org.eclipse.jgit.transport.SideBandInputStream', 'doProgressLine', '^([\\w ]+): +\\d+% +\\( *(\\d+)/ *(\\d+)\\)(?:, done\\.)? *[\r\n]$', 'Updating references: 100% (1/1)\n')","[140868, 141004, 141194, 141384, 141574, 141764, 141954, 142144, 142357, 143647, 143896, 144145, 144340, 187965]"
"('Description.java', 'org.junit.runner.Description', 'methodAndClassNamePatternGroupOrDefault', '([\\s\\S]*)\\((.*)\\)', 'invalidSlashAtStart(org.eclipse.jgit.transport.RefSpecTest)')","[186843, 187577]"
"('Description.java', 'org.junit.runner.Description', 'methodAndClassNamePatternGroupOrDefault', '([\\s\\S]*)\\((.*)\\)', 'testMaliciousAbsolutePath(org.eclipse.jgit.lib.DirCacheCheckoutMaliciousPathTest)')","[67222, 68141]"
"('URIish.java', 'org.eclipse.jgit.transport.URIish', '<init>', '^([\\\\/]?((?:[A-Za-z]:)?[\\\\/]?(?:(?:[^\\\\/]+[\\\\/]+)*[^\\\\/]+[\\\\/]*)))$', '/more/dirs')","[255080, 255780, 257416]"
"('FastIgnoreRule.java', 'org.eclipse.jgit.ignore.FastIgnoreRule', 'isMatch', '[\\p{javaDigit}]', '0')",[100639]
"('URIish.java', 'org.eclipse.jgit.transport.URIish', '<init>', '^(file):([\\\\/](?![\\\\/])((?:[A-Za-z]:)?[\\\\/]?(?:(?:[^\\\\/]+[\\\\/]+)*[^\\\\/]+[\\\\/]*)))$', 'https://lusr\\example:wtf@example.com:1234/D:\\x')",[206006]
"('Description.java', 'org.junit.runner.Description', 'methodAndClassNamePatternGroupOrDefault', '([\\s\\S]*)\\((.*)\\)', 'org.eclipse.jgit.submodule.SubmoduleInitTest')","[19421, 19745]"
"('Description.java', 'org.junit.runner.Description', 'methodAndClassNamePatternGroupOrDefault', '([\\s\\S]*)\\((.*)\\)', 'testWordroupCase5(org.eclipse.jgit.fnmatch.FileNameMatcherTest)')","[44212, 47604]"
"('Description.java', 'org.junit.runner.Description', 'methodAndClassNamePatternGroupOrDefault', '([\\s\\S]*)\\((.*)\\)', 'testOnlyOption_f1_12_f2_14_c(org.eclipse.jgit.api.CommitOnlyTest)')","[135529, 137603]"
"('URIish.java', 'org.eclipse.jgit.transport.URIish', '<init>', '^(file):([\\\\/](?![\\\\/])((?:[A-Za-z]:)?[\\\\/]?(?:(?:[^\\\\/]+[\\\\/]+)*[^\\\\/]+[\\\\/]*)))$', 'file:///tmp/jgit_test_6430606486811908958_tmp/tmp_53734240674403407')","[167953, 168010, 168067]"
"('URIish.java', 'org.eclipse.jgit.transport.URIish', '<init>', '^(file):([\\\\/](?![\\\\/])((?:[A-Za-z]:)?[\\\\/]?(?:(?:[^\\\\/]+[\\\\/]+)*[^\\\\/]+[\\\\/]*)))$', 'https://lusr\\example@[::1]:1234/D:\\x')",[220565]
"('URIish.java', 'org.eclipse.jgit.transport.URIish', '<init>', '^(file):([\\\\/](?![\\\\/])((?:[A-Za-z]:)?[\\\\/]?(?:(?:[^\\\\/]+[\\\\/]+)*[^\\\\/]+[\\\\/]*)))$', 'ssh://l usr\\example.com@[::1]:80//')",[208996]
"('Description.java', 'org.junit.runner.Description', 'methodAndClassNamePatternGroupOrDefault', '([\\s\\S]*)\\((.*)\\)', 'testValidTag(org.eclipse.jgit.lib.ValidRefNameTest)')","[65844, 66210]"
"('URIish.java', 'org.eclipse.jgit.transport.URIish', '<init>', '^(file):([\\\\/](?![\\\\/])((?:[A-Za-z]:)?[\\\\/]?(?:(?:[^\\\\/]+[\\\\/]+)*[^\\\\/]+[\\\\/]*)))$', 'http://l usr\\example.com@[::1]:80/D:\\x')",[215758]
"('URIish.java', 'org.eclipse.jgit.transport.URIish', '<init>', '^(file):([\\\\/](?![\\\\/])((?:[A-Za-z]:)?[\\\\/]?(?:(?:[^\\\\/]+[\\\\/]+)*[^\\\\/]+[\\\\/]*)))$', 'https://lusr\\example:wtf@1.2.3.4:1234//abc')",[206282]
"('Description.java', 'org.junit.runner.Description', 'methodAndClassNamePatternGroupOrDefault', '([\\s\\S]*)\\((.*)\\)', 'testEncode_SimpleASCII(org.eclipse.jgit.lib.ConstantsEncodingTest)')","[59949, 60057]"
"('Description.java', 'org.junit.runner.Description', 'methodAndClassNamePatternGroupOrDefault', '([\\s\\S]*)\\((.*)\\)', 'testRebaseInteractiveMixedSquashAndFixup(org.eclipse.jgit.api.RebaseCommandTest)')","[132272, 133800]"
"('Description.java', 'org.junit.runner.Description', 'methodAndClassNamePatternGroupOrDefault', '([\\s\\S]*)\\((.*)\\)', 'testChangeIdAlreadySetWithReplacement(org.eclipse.jgit.util.ChangeIdUtilTest)')","[31972, 32723]"
"('URIish.java', 'org.eclipse.jgit.transport.URIish', '<init>', '^(file):([\\\\/](?![\\\\/])((?:[A-Za-z]:)?[\\\\/]?(?:(?:[^\\\\/]+[\\\\/]+)*[^\\\\/]+[\\\\/]*)))$', 'https://me@example.com/D:/x')","[230823, 231007]"
"('Description.java', 'org.junit.runner.Description', 'methodAndClassNamePatternGroupOrDefault', '([\\s\\S]*)\\((.*)\\)', 'testPathSeparator(org.eclipse.jgit.transport.URIishTest)')","[188947, 190348]"
"('Description.java', 'org.junit.runner.Description', 'methodAndClassNamePatternGroupOrDefault', '([\\s\\S]*)\\((.*)\\)', 'testSameModification(org.eclipse.jgit.merge.MergeAlgorithmTest)')","[12123, 12428]"
"('URIish.java', 'org.eclipse.jgit.transport.URIish', '<init>', '^([a-z][a-z0-9+-]+)://(?:(?:([^/:@]+)(?::([^\\\\/]+))?@)?((?:[^\\\\/:]+)|(?:\\[[0-9a-f:]+\\]))(?::(\\d+))?((?:/~(?:[^\\\\/]+))?[\\\\/]))?(.+)?$', 'ssh://me:wtf@1.2.3.4:80//abc')",[192663]
"('Description.java', 'org.junit.runner.Description', 'methodAndClassNamePatternGroupOrDefault', '([\\s\\S]*)\\((.*)\\)', 'testDequote_Empty1(org.eclipse.jgit.util.QuotedStringGitPathStyleTest)')","[39786, 40209]"
"('URIish.java', 'org.eclipse.jgit.transport.URIish', '<init>', '^([a-z][a-z0-9+-]+)://(?:(?:([^/:@]+)(?::([^\\\\/]+))?@)?((?:[^\\\\/:]+)|(?:\\[[0-9a-f:]+\\]))(?::(\\d+))?((?:/~(?:[^\\\\/]+))?[\\\\/]))?(.+)?$', 'ssh://lusr\\example@example.com:1234//')",[209203]
"('URIish.java', 'org.eclipse.jgit.transport.URIish', '<init>', '^(file):([\\\\/](?![\\\\/])((?:[A-Za-z]:)?[\\\\/]?(?:(?:[^\\\\/]+[\\\\/]+)*[^\\\\/]+[\\\\/]*)))$', 'https://l usr\\example.com@1.2.3.4:80/D:/x')",[219231]
"('Description.java', 'org.junit.runner.Description', 'methodAndClassNamePatternGroupOrDefault', '([\\s\\S]*)\\((.*)\\)', 'testFilterHidesPrivate(org.eclipse.jgit.transport.ReceivePackAdvertiseRefsHookTest)')","[183173, 183325]"
"('URIish.java', 'org.eclipse.jgit.transport.URIish', '<init>', '^([a-z][a-z0-9+-]+)://(?:(?:([^/:@]+)(?::([^\\\\/]+))?@)?((?:[^\\\\/:]+)|(?:\\[[0-9a-f:]+\\]))(?::(\\d+))?((?:/~(?:[^\\\\/]+))?[\\\\/]))?(.+)?$', 'ssh+git://lusr\\example@example.com:1234/D:/x')",[212607]
"('URIish.java', 'org.eclipse.jgit.transport.URIish', '<init>', '^([a-z][a-z0-9+-]+)://(?:(?:([^/:@]+)(?::([^\\\\/]+))?@)?((?:[^\\\\/:]+)|(?:\\[[0-9a-f:]+\\]))(?::(\\d+))?((?:/~(?:[^\\\\/]+))?[\\\\/]))?(.+)?$', 'https://me@1.2.3.4:80/D:/x')",[217598]
"('Description.java', 'org.junit.runner.Description', 'methodAndClassNamePatternGroupOrDefault', '([\\s\\S]*)\\((.*)\\)', 'org.eclipse.jgit.dircache.DirCacheBasicTest')","[171254, 172565]"
"('Description.java', 'org.junit.runner.Description', 'methodAndClassNamePatternGroupOrDefault', '([\\s\\S]*)\\((.*)\\)', 'testMaliciousPathEmptyWindows(org.eclipse.jgit.lib.DirCacheCheckoutMaliciousPathTest)')","[67054, 67965]"
"('FastIgnoreRule.java', 'org.eclipse.jgit.ignore.FastIgnoreRule', 'isMatch', '[\\p{XDigit}]', 'f')",[102071]
"('URIish.java', 'org.eclipse.jgit.transport.URIish', '<init>', '^(file):([\\\\/](?![\\\\/])((?:[A-Za-z]:)?[\\\\/]?(?:(?:[^\\\\/]+[\\\\/]+)*[^\\\\/]+[\\\\/]*)))$', 'ssh+git://l usr\\example.com@example.com/D:\\x')","[225349, 225533]"
"('URIish.java', 'org.eclipse.jgit.transport.URIish', '<init>', '^(file):([\\\\/](?![\\\\/])((?:[A-Za-z]:)?[\\\\/]?(?:(?:[^\\\\/]+[\\\\/]+)*[^\\\\/]+[\\\\/]*)))$', 'ssh+git://1.2.3.4//abc')","[237769, 237953, 238873, 239057, 239977, 240161]"
"('Description.java', 'org.junit.runner.Description', 'methodAndClassNamePatternGroupOrDefault', '([\\s\\S]*)\\((.*)\\)', 'testFilePathCase0(org.eclipse.jgit.fnmatch.FileNameMatcherTest)')","[43267, 46614]"
"('Description.java', 'org.junit.runner.Description', 'methodAndClassNamePatternGroupOrDefault', '([\\s\\S]*)\\((.*)\\)', 'badlyFormattedWithoutRef(org.eclipse.jgit.util.GitDateParserBadlyFormattedTest)')","[22494, 22538]"
"('Description.java', 'org.junit.runner.Description', 'methodAndClassNamePatternGroupOrDefault', '([\\s\\S]*)\\((.*)\\)', 'testCloseNameConflictsX0(org.eclipse.jgit.lib.DirCacheCheckoutTest)')","[61272, 62263]"
"('Description.java', 'org.junit.runner.Description', 'methodAndClassNamePatternGroupOrDefault', '([\\s\\S]*)\\((.*)\\)', 'testGCmoreCommits(org.eclipse.jgit.api.GarbageCollectCommandTest)')","[155717, 155761]"
"('URIish.java', 'org.eclipse.jgit.transport.URIish', '<init>', '^(file):([\\\\/](?![\\\\/])((?:[A-Za-z]:)?[\\\\/]?(?:(?:[^\\\\/]+[\\\\/]+)*[^\\\\/]+[\\\\/]*)))$', 'http://me@[::1]:1234/D:/x')",[214424]
"('URIish.java', 'org.eclipse.jgit.transport.URIish', '<init>', '^([a-z][a-z0-9+-]+)://(?:(?:([^/:@]+)(?::([^\\\\/]+))?@)?((?:[^\\\\/:]+)|(?:\\[[0-9a-f:]+\\]))(?::(\\d+))?((?:/~(?:[^\\\\/]+))?[\\\\/]))?(.+)?$', '/some/dir')","[254768, 255178, 255348, 255468, 255903, 256171, 256291, 256513, 256736, 256859, 257104, 257514, 257634, 258079]"
"('URIish.java', 'org.eclipse.jgit.transport.URIish', '<init>', '^(file):([\\\\/](?![\\\\/])((?:[A-Za-z]:)?[\\\\/]?(?:(?:[^\\\\/]+[\\\\/]+)*[^\\\\/]+[\\\\/]*)))$', 'ssh://lusr\\example@[::1]/D:/x')","[223831, 224015]"
"('URIish.java', 'org.eclipse.jgit.transport.URIish', '<init>', '^(?:([^/:@]+)(?::([^\\\\/]+))?@)?((?:[^\\\\/:]+)|(?:\\[[0-9a-f:]+\\])):((?:(?:/~(?:[^\\\\/]+))[\\\\/])?(?:(?:[^\\\\/]+[\\\\/]+)*[^\\\\/]+[\\\\/]*))$', 'D:/m y')","[250695, 250810]"
"('URIish.java', 'org.eclipse.jgit.transport.URIish', '<init>', '^(file):([\\\\/](?![\\\\/])((?:[A-Za-z]:)?[\\\\/]?(?:(?:[^\\\\/]+[\\\\/]+)*[^\\\\/]+[\\\\/]*)))$', 'https://me:wtf@[::1]:1234//')",[204396]
"('Description.java', 'org.junit.runner.Description', 'methodAndClassNamePatternGroupOrDefault', '([\\s\\S]*)\\((.*)\\)', 'testGetRefs_DiscoversDeletedLoose2(org.eclipse.jgit.internal.storage.file.RefDirectoryTest)')","[111370, 112571]"
"('FastIgnoreRule.java', 'org.eclipse.jgit.ignore.FastIgnoreRule', 'isMatch', 'a.', '')","[83003, 83057, 83165, 83219, 83408, 83489, 83543, 83597]"
"('URIish.java', 'org.eclipse.jgit.transport.URIish', '<init>', '^(file):([\\\\/](?![\\\\/])((?:[A-Za-z]:)?[\\\\/]?(?:(?:[^\\\\/]+[\\\\/]+)*[^\\\\/]+[\\\\/]*)))$', '../tmp_5292851732867779189')",[259137]
"('URIish.java', 'org.eclipse.jgit.transport.URIish', '<init>', '^(file):([\\\\/](?![\\\\/])((?:[A-Za-z]:)?[\\\\/]?(?:(?:[^\\\\/]+[\\\\/]+)*[^\\\\/]+[\\\\/]*)))$', 'file:///tmp/jgit_test_6855180754937398385_tmp/tmp_8894118542179860150/.git/')",[57266]
"('Description.java', 'org.junit.runner.Description', 'methodAndClassNamePatternGroupOrDefault', '([\\s\\S]*)\\((.*)\\)', 'testExpandFromDestination_NonWildcard(org.eclipse.jgit.transport.RefSpecTest)')","[186507, 187225]"
"('Description.java', 'org.junit.runner.Description', 'methodAndClassNamePatternGroupOrDefault', '([\\s\\S]*)\\((.*)\\)', 'org.eclipse.jgit.api.NameRevCommandTest')","[168727, 169223]"
"('URIish.java', 'org.eclipse.jgit.transport.URIish', '<init>', '^([a-z][a-z0-9+-]+)://(?:(?:([^/:@]+)(?::([^\\\\/]+))?@)?((?:[^\\\\/:]+)|(?:\\[[0-9a-f:]+\\]))(?::(\\d+))?((?:/~(?:[^\\\\/]+))?[\\\\/]))?(.+)?$', 'file:///tmp/jgit_test_5071656691698208479_tmp/tmp_3411914629949002968/.git/')",[14772]
"('URIish.java', 'org.eclipse.jgit.transport.URIish', '<init>', '^([a-z][a-z0-9+-]+)://(?:(?:([^/:@]+)(?::([^\\\\/]+))?@)?((?:[^\\\\/:]+)|(?:\\[[0-9a-f:]+\\]))(?::(\\d+))?((?:/~(?:[^\\\\/]+))?[\\\\/]))?(.+)?$', 'https://l usr\\example.com:wtf@1.2.3.4:80/D:/x')",[205431]
"('Description.java', 'org.junit.runner.Description', 'methodAndClassNamePatternGroupOrDefault', '([\\s\\S]*)\\((.*)\\)', 'testParseGitFileName_DqFooTabBar(org.eclipse.jgit.patch.FileHeaderTest)')","[429, 899]"
"('Description.java', 'org.junit.runner.Description', 'methodAndClassNamePatternGroupOrDefault', '([\\s\\S]*)\\((.*)\\)', 'testMultipleHeads_SameBase1(org.eclipse.jgit.revwalk.RevWalkMergeBaseTest)')","[177764, 177891]"
"('Description.java', 'org.junit.runner.Description', 'methodAndClassNamePatternGroupOrDefault', '([\\s\\S]*)\\((.*)\\)', 'testRenameBranchCannotLockAFileHEADisFromLockFrom(org.eclipse.jgit.internal.storage.file.RefUpdateTest)')","[120075, 120918]"
"('Description.java', 'org.junit.runner.Description', 'methodAndClassNamePatternGroupOrDefault', '([\\s\\S]*)\\((.*)\\)', 'testMaliciousAbsoluteUNCPathWindows2(org.eclipse.jgit.lib.DirCacheCheckoutMaliciousPathTest)')","[66907, 67811]"
"('URIish.java', 'org.eclipse.jgit.transport.URIish', '<init>', '^([a-z][a-z0-9+-]+)://(?:(?:([^/:@]+)(?::([^\\\\/]+))?@)?((?:[^\\\\/:]+)|(?:\\[[0-9a-f:]+\\]))(?::(\\d+))?((?:/~(?:[^\\\\/]+))?[\\\\/]))?(.+)?$', 'ssh+git://me@[::1]:80//')",[211227]
"('Description.java', 'org.junit.runner.Description', 'methodAndClassNamePatternGroupOrDefault', '([\\s\\S]*)\\((.*)\\)', 'testFileCommittedDeleted(org.eclipse.jgit.treewalk.filter.IndexDiffFilterTest)')","[264548, 265365]"
"('Description.java', 'org.junit.runner.Description', 'methodAndClassNamePatternGroupOrDefault', '([\\s\\S]*)\\((.*)\\)', 'testNoOutputStreamSet(org.eclipse.jgit.api.DiffCommandTest)')","[166464, 166596]"
"('Description.java', 'org.junit.runner.Description', 'methodAndClassNamePatternGroupOrDefault', '([\\s\\S]*)\\((.*)\\)', 'testSpaceGroupCase1[OldRule? true](org.eclipse.jgit.ignore.IgnoreRuleSpecialCasesTest)')","[89629, 96713]"
"('URIish.java', 'org.eclipse.jgit.transport.URIish', '<init>', '^([a-z][a-z0-9+-]+)://(?:(?:([^/:@]+)(?::([^\\\\/]+))?@)?((?:[^\\\\/:]+)|(?:\\[[0-9a-f:]+\\]))(?::(\\d+))?((?:/~(?:[^\\\\/]+))?[\\\\/]))?(.+)?$', 'https://me:wtf@1.2.3.4:1234/D:/x')",[203901]
"('Description.java', 'org.junit.runner.Description', 'methodAndClassNamePatternGroupOrDefault', '([\\s\\S]*)\\((.*)\\)', 'testGraphGroupCase3(org.eclipse.jgit.fnmatch.FileNameMatcherTest)')","[42007, 45294]"
"('URIish.java', 'org.eclipse.jgit.transport.URIish', '<init>', '^([a-z][a-z0-9+-]+)://(?:(?:([^/:@]+)(?::([^\\\\/]+))?@)?((?:[^\\\\/:]+)|(?:\\[[0-9a-f:]+\\]))(?::(\\d+))?((?:/~(?:[^\\\\/]+))?[\\\\/]))?(.+)?$', 'https://lusr\\example@[::1]:1234/D:/x')",[220542]
"('Description.java', 'org.junit.runner.Description', 'methodAndClassNamePatternGroupOrDefault', '([\\s\\S]*)\\((.*)\\)', 'testAddLargeBlocks(org.eclipse.jgit.revwalk.LIFORevQueueTest)')","[176452, 176560]"
"('URIish.java', 'org.eclipse.jgit.transport.URIish', '<init>', '^(file):([\\\\/](?![\\\\/])((?:[A-Za-z]:)?[\\\\/]?(?:(?:[^\\\\/]+[\\\\/]+)*[^\\\\/]+[\\\\/]*)))$', 'http://lusr\\example:wtf@example.com:80/D:\\x')",[202088]
"('URIish.java', 'org.eclipse.jgit.transport.URIish', '<init>', '^([a-z][a-z0-9+-]+)://(?:(?:([^/:@]+)(?::([^\\\\/]+))?@)?((?:[^\\\\/:]+)|(?:\\[[0-9a-f:]+\\]))(?::(\\d+))?((?:/~(?:[^\\\\/]+))?[\\\\/]))?(.+)?$', 'ssh://lusr\\example@1.2.3.4:1234/D:/x')",[209663]
"('URIish.java', 'org.eclipse.jgit.transport.URIish', '<init>', '^([a-z][a-z0-9+-]+)://(?:(?:([^/:@]+)(?::([^\\\\/]+))?@)?((?:[^\\\\/:]+)|(?:\\[[0-9a-f:]+\\]))(?::(\\d+))?((?:/~(?:[^\\\\/]+))?[\\\\/]))?(.+)?$', 'http://lusr\\example:wtf@[::1]:80/D:\\x')",[202847]
"('URIish.java', 'org.eclipse.jgit.transport.URIish', '<init>', '^([a-z][a-z0-9+-]+)://(?:(?:([^/:@]+)(?::([^\\\\/]+))?@)?((?:[^\\\\/:]+)|(?:\\[[0-9a-f:]+\\]))(?::(\\d+))?((?:/~(?:[^\\\\/]+))?[\\\\/]))?(.+)?$', 'ssh+git://l usr\\example.com@[::1]:80/D:/x')",[212423]
"('Description.java', 'org.junit.runner.Description', 'methodAndClassNamePatternGroupOrDefault', '([\\s\\S]*)\\((.*)\\)', 'renameBranchNoConfigValues(org.eclipse.jgit.api.RenameBranchCommandTest)')","[158379, 158464]"
"('Description.java', 'org.junit.runner.Description', 'methodAndClassNamePatternGroupOrDefault', '([\\s\\S]*)\\((.*)\\)', 'testParse_NoParents(org.eclipse.jgit.revwalk.RevCommitParseTest)')","[182614, 182987]"
"('FastIgnoreRule.java', 'org.eclipse.jgit.ignore.FastIgnoreRule', 'isMatch', '.', 'a')",[101055]
"('Description.java', 'org.junit.runner.Description', 'methodAndClassNamePatternGroupOrDefault', '([\\s\\S]*)\\((.*)\\)', 'testPeelCommit(org.eclipse.jgit.internal.storage.file.RefDirectoryTest)')","[110803, 111977]"
"('URIish.java', 'org.eclipse.jgit.transport.URIish', '<init>', '^(file):([\\\\/](?![\\\\/])((?:[A-Za-z]:)?[\\\\/]?(?:(?:[^\\\\/]+[\\\\/]+)*[^\\\\/]+[\\\\/]*)))$', 'ssh://me:wtf@example.com:1234/D:/x')",[192134]
"('URIish.java', 'org.eclipse.jgit.transport.URIish', '<init>', '^(file):([\\\\/](?![\\\\/])((?:[A-Za-z]:)?[\\\\/]?(?:(?:[^\\\\/]+[\\\\/]+)*[^\\\\/]+[\\\\/]*)))$', 'http://lusr\\example@1.2.3.4/D:/x')","[230087, 230271]"
"('URIish.java', 'org.eclipse.jgit.transport.URIish', '<init>', '^(file):([\\\\/](?![\\\\/])((?:[A-Za-z]:)?[\\\\/]?(?:(?:[^\\\\/]+[\\\\/]+)*[^\\\\/]+[\\\\/]*)))$', '/abc.git/')",[248050]
"('Description.java', 'org.junit.runner.Description', 'methodAndClassNamePatternGroupOrDefault', '([\\s\\S]*)\\((.*)\\)', 'untrackedFileConflictsWithWorkingDirectory(org.eclipse.jgit.api.StashApplyCommandTest)')","[142708, 143269]"
"('URIish.java', 'org.eclipse.jgit.transport.URIish', '<init>', '^([a-z][a-z0-9+-]+)://(?:(?:([^/:@]+)(?::([^\\\\/]+))?@)?((?:[^\\\\/:]+)|(?:\\[[0-9a-f:]+\\]))(?::(\\d+))?((?:/~(?:[^\\\\/]+))?[\\\\/]))?(.+)?$', 'http://l usr\\example.com@example.com//abc')","[228592, 228776]"
"('URIish.java', 'org.eclipse.jgit.transport.URIish', '<init>', '^(file):([\\\\/](?![\\\\/])((?:[A-Za-z]:)?[\\\\/]?(?:(?:[^\\\\/]+[\\\\/]+)*[^\\\\/]+[\\\\/]*)))$', 'file:///tmp/jgit_test_500639673404351849_tmp/tmp_8516621355928323871.git/')",[13997]
"('Description.java', 'org.junit.runner.Description', 'methodAndClassNamePatternGroupOrDefault', '([\\s\\S]*)\\((.*)\\)', 'testEmptyTreeCorruption(org.eclipse.jgit.revwalk.ObjectWalkTest)')","[177465, 177662]"
"('URIish.java', 'org.eclipse.jgit.transport.URIish', '<init>', '^([\\\\/]?((?:[A-Za-z]:)?[\\\\/]?(?:(?:[^\\\\/]+[\\\\/]+)*[^\\\\/]+[\\\\/]*)))$', '/tmp/jgit_test_3534781626954288034_tmp/tmp_6146485395206315100')","[150415, 150560, 150725]"
"('Description.java', 'org.junit.runner.Description', 'methodAndClassNamePatternGroupOrDefault', '([\\s\\S]*)\\((.*)\\)', 'testEqualsWithWhitespace(org.eclipse.jgit.diff.RawTextIgnoreAllWhitespaceTest)')","[9769, 9813]"
"('Description.java', 'org.junit.runner.Description', 'methodAndClassNamePatternGroupOrDefault', '([\\s\\S]*)\\((.*)\\)', 'testFindObjects(org.eclipse.jgit.treewalk.ForPathTest)')","[267233, 267255]"
"('Description.java', 'org.junit.runner.Description', 'methodAndClassNamePatternGroupOrDefault', '([\\s\\S]*)\\((.*)\\)', 'testConflictingMerge1(org.eclipse.jgit.api.BlameCommandTest)')","[139946, 140340]"
"('Description.java', 'org.junit.runner.Description', 'methodAndClassNamePatternGroupOrDefault', '([\\s\\S]*)\\((.*)\\)', 'testWildcardInMiddleOfSource(org.eclipse.jgit.transport.RefSpecTest)')","[186654, 187379]"
"('Description.java', 'org.junit.runner.Description', 'methodAndClassNamePatternGroupOrDefault', '([\\s\\S]*)\\((.*)\\)', 'testUpperGroupCase1[OldRule? true](org.eclipse.jgit.ignore.IgnoreRuleSpecialCasesTest)')","[90825, 97909]"
