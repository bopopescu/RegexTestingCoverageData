"('Description.java', 'org.junit.runner.Description', 'methodAndClassNamePatternGroupOrDefault', '([\\s\\S]*)\\((.*)\\)', 'com.github.olivergondza.dumpling.cli.GroovyRuntimeTest')","[2398247, 2398269]"
"('FilterBuilder.java', 'org.reflections.util.FilterBuilder$Include', 'apply', 'com\\.github\\.olivergondza\\.dumpling.*', 'com.github.olivergondza.dumpling.factory.JmxRuntimeFactory$FailedToInitializeJmxConnection.class')","[69029, 88257, 113997, 133225, 154808, 174036, 194185, 213413, 233562, 251593, 270789, 290987, 310559, 330757, 350420, 370618, 390281, 410479, 430051, 450249, 478231, 497459, 517608, 536836, 556985, 576213, 596362, 615590, 635739, 654967, 675116, 693147, 715535, 738815, 762494, 785860, 811207, 834487, 857767, 881047, 904327, 928006, 951771, 988699, 1011979, 1035259, 1058539, 1081819, 1105099, 1128379, 1152058, 1177531, 1200811, 1224091, 1243381, 1261811, 1280241, 1298671, 1317101, 1335531, 1354759, 1374908, 1394136, 1414285, 1432316, 1450714, 1469942, 1495598, 1514826, 1545479, 1564707, 1583309, 1601739, 1620967, 1639569, 1657999, 1677227, 1697810, 1727998, 1746029, 1764373, 1783601, 1809395, 1827825, 1847053, 1865655, 1884085, 1902515, 1921344, 1939860, 1958689, 1977205, 1995635, 2014464, 2032980, 2052208, 2070810, 2089240, 2107271, 2129573, 2148801, 2172441, 2191669, 2225649, 2244877, 2270617, 2289845, 2328555, 2348268, 2372175, 2391888]"
"('ThreadDumpFactory.java', 'com.github.olivergondza.dumpling.factory.ThreadDumpFactory', 'initHeader', '#\\d+', '[0x00007f2a397b3000]')","[18168, 18202]"
"('FilterBuilder.java', 'org.reflections.util.FilterBuilder$Include', 'apply', 'com\\.github\\.olivergondza\\.dumpling.*', 'com/github/olivergondza/dumpling/factory/ThreadDumpFactoryVendorTest/parked.groovy')","[57598, 76226, 102566, 121194, 143377, 162005, 182754, 201382, 222131, 240462, 258758, 278356, 298528, 318126, 338389, 357987, 378250, 397848, 418020, 437618, 466800, 485428, 506177, 524805, 545554, 564182, 584931, 603559, 624308, 642936, 663685, 682016, 701104, 724384, 747763, 771429, 796776, 820056, 843336, 866616, 889896, 913275, 937040, 974268, 997548, 1020828, 1044108, 1067388, 1090668, 1113948, 1137327, 1163100, 1186380, 1209660, 1231950, 1250380, 1268810, 1287240, 1305670, 1324100, 1342728, 1363477, 1382105, 1402854, 1421185, 1439283, 1457911, 1484167, 1502795, 1534048, 1552676, 1571878, 1590308, 1608936, 1628138, 1646568, 1665196, 1686379, 1716567, 1734898, 1752942, 1771570, 1797964, 1816394, 1835022, 1854224, 1872654, 1891084, 1909613, 1928429, 1946958, 1965774, 1984204, 2002733, 2021549, 2040177, 2059379, 2077809, 2096140, 2118142, 2136770, 2161010, 2179638, 2214218, 2232846, 2259186, 2277814, 2316824, 2335937, 2360444, 2379557]"
"('ThreadDumpFactory.java', 'com.github.olivergondza.dumpling.factory.ThreadDumpFactory', 'initHeader', '#\\d+', '[0x00007f453da3d000]')","[34835, 34869]"
"('ThreadDumpFactory.java', 'com.github.olivergondza.dumpling.factory.ThreadDumpFactory', 'initHeader', '#\\d+', '[0x00007fae589f8000]')","[31224, 31258]"
"('FilterBuilder.java', 'org.reflections.util.FilterBuilder$Include', 'apply', 'com\\.github\\.olivergondza\\.dumpling.*', 'com/github/olivergondza/dumpling/cli/AbstractCliTest$1.class')","[55532, 74050, 100500, 119018, 141311, 159829, 180688, 199206, 220065, 238451, 256582, 276070, 296352, 315840, 336213, 355701, 376074, 395562, 415844, 435332, 464734, 483252, 504111, 522629, 543488, 562006, 582865, 601383, 622242, 640760, 661619, 680005, 698488, 721768, 745092, 768813, 794160, 817440, 840720, 864000, 887280, 910604, 934369, 971652, 994932, 1018212, 1041492, 1064772, 1088052, 1111332, 1134656, 1160484, 1183764, 1207044, 1229884, 1248314, 1266744, 1285174, 1303604, 1322034, 1340552, 1361411, 1379929, 1400788, 1419174, 1437217, 1455735, 1482101, 1500619, 1531982, 1550500, 1569812, 1588242, 1606760, 1626072, 1644502, 1663020, 1684313, 1714501, 1732887, 1750876, 1769394, 1795898, 1814328, 1832846, 1852158, 1870588, 1889018, 1907492, 1926363, 1944837, 1963708, 1982138, 2000612, 2019483, 2038001, 2057313, 2075743, 2094129, 2116076, 2134594, 2158944, 2177462, 2212152, 2230670, 2257120, 2275638, 2314703, 2333706, 2358323, 2377326]"
"('Description.java', 'org.junit.runner.Description', 'methodAndClassNamePatternGroupOrDefault', '([\\s\\S]*)\\((.*)\\)', 'com.github.olivergondza.dumpling.cli.MainTest')","[2110472, 2110499]"
"('ThreadDumpFactory.java', 'com.github.olivergondza.dumpling.factory.ThreadDumpFactory', 'initHeader', '#\\d+', '[0x00002b6fe4a08000]')","[178083, 178118, 217460, 217495, 501506, 501541, 540883, 540918, 580260, 580295, 619637, 619672, 659014, 659049, 790803, 790851, 1157103, 1157152, 1358806, 1358841, 1398183, 1398218, 1681274, 1681309]"
"('FilterBuilder.java', 'org.reflections.util.FilterBuilder$Include', 'apply', 'com\\.github\\.olivergondza\\.dumpling.*', 'com/github/olivergondza/dumpling/cli/SourceTest.class')","[55418, 73930, 100386, 118898, 141197, 159709, 180574, 199086, 219951, 238340, 256462, 275944, 296232, 315714, 336093, 355575, 375954, 395436, 415724, 435206, 464620, 483132, 503997, 522509, 543374, 561886, 582751, 601263, 622128, 640640, 661505, 679894, 698344, 721624, 744945, 768669, 794016, 817296, 840576, 863856, 887136, 910457, 934222, 971508, 994788, 1018068, 1041348, 1064628, 1087908, 1111188, 1134509, 1160340, 1183620, 1206900, 1229770, 1248200, 1266630, 1285060, 1303490, 1321920, 1340432, 1361297, 1379809, 1400674, 1419063, 1437103, 1455615, 1481987, 1500499, 1531868, 1550380, 1569698, 1588128, 1606640, 1625958, 1644388, 1662900, 1684199, 1714387, 1732776, 1750762, 1769274, 1795784, 1814214, 1832726, 1852044, 1870474, 1888904, 1907375, 1926249, 1944720, 1963594, 1982024, 2000495, 2019369, 2037881, 2057199, 2075629, 2094018, 2115962, 2134474, 2158830, 2177342, 2212038, 2230550, 2257006, 2275518, 2314586, 2333583, 2358206, 2377203]"
"('FilterBuilder.java', 'org.reflections.util.FilterBuilder$Include', 'apply', 'com\\.github\\.olivergondza\\.dumpling.*', 'com.github.olivergondza.dumpling.TestThread.jmxremote.password')","[71567, 90929, 116535, 135897, 157346, 176708, 196723, 216085, 236100, 254064, 273461, 293793, 313231, 333563, 353092, 373424, 392953, 413285, 432723, 453055, 480769, 500131, 520146, 539508, 559523, 578885, 598900, 618262, 638277, 657639, 677654, 695618, 718743, 742023, 765769, 789068, 814415, 837695, 860975, 884255, 907535, 931281, 955046, 991907, 1015187, 1038467, 1061747, 1085027, 1108307, 1131587, 1155333, 1180739, 1204019, 1227299, 1245919, 1264349, 1282779, 1301209, 1319639, 1338069, 1357431, 1377446, 1396808, 1416823, 1434787, 1453252, 1472614, 1498136, 1517498, 1548017, 1567379, 1585847, 1604277, 1623639, 1642107, 1660537, 1679899, 1700348, 1730536, 1748500, 1766911, 1786273, 1811933, 1830363, 1849725, 1868193, 1886623, 1905053, 1923949, 1942398, 1961294, 1979743, 1998173, 2017069, 2035518, 2054880, 2073348, 2091778, 2109742, 2132111, 2151473, 2174979, 2194341, 2228187, 2247549, 2273155, 2292517, 2331160, 2351007, 2374780, 2394627]"
"('FilterBuilder.java', 'org.reflections.util.FilterBuilder$Exclude', 'apply', 'java.lang.Object', 'com.github.olivergondza.dumpling.factory.ThreadDumpFactoryVendorTest.synchronizerDeadlock.groovy')","[56553, 75125, 101521, 120093, 142332, 160904, 181709, 200281, 221086, 239445, 257657, 277199, 297427, 316969, 337288, 356830, 377149, 396691, 416919, 436461, 465755, 484327, 505132, 523704, 544509, 563081, 583886, 602458, 623263, 641835, 662640, 680999, 699779, 723059, 746410, 770104, 795451, 818731, 842011, 865291, 888571, 911922, 935687, 972943, 996223, 1019503, 1042783, 1066063, 1089343, 1112623, 1135974, 1161775, 1185055, 1208335, 1230905, 1249335, 1267765, 1286195, 1304625, 1323055, 1341627, 1362432, 1381004, 1401809, 1420168, 1438238, 1456810, 1483122, 1501694, 1533003, 1551575, 1570833, 1589263, 1607835, 1627093, 1645523, 1664095, 1685334, 1715522, 1733881, 1751897, 1770469, 1796919, 1815349, 1833921, 1853179, 1871609, 1890039, 1908540, 1927384, 1945885, 1964729, 1983159, 2001660, 2020504, 2039076, 2058334, 2076764, 2095123, 2117097, 2135669, 2159965, 2178537, 2213173, 2231745, 2258141, 2276713, 2315751, 2334808, 2359371, 2378428]"
"('FilterBuilder.java', 'org.reflections.util.FilterBuilder$Include', 'apply', 'com\\.github\\.olivergondza\\.dumpling.*', 'jstack/blocking-chain.log')","[70656, 89970, 115624, 134938, 156435, 175749, 195812, 215126, 235189, 253177, 272502, 292786, 312272, 332556, 352133, 372417, 391994, 412278, 431764, 452048, 479858, 499172, 519235, 538549, 558612, 577926, 597989, 617303, 637366, 656680, 676743, 694731, 717592, 740872, 764594, 787917, 813264, 836544, 859824, 883104, 906384, 930106, 953871, 990756, 1014036, 1037316, 1060596, 1083876, 1107156, 1130436, 1154158, 1179588, 1202868, 1226148, 1245008, 1263438, 1281868, 1300298, 1318728, 1337158, 1356472, 1376535, 1395849, 1415912, 1433900, 1452341, 1471655, 1497225, 1516539, 1547106, 1566420, 1584936, 1603366, 1622680, 1641196, 1659626, 1678940, 1699437, 1729625, 1747613, 1766000, 1785314, 1811022, 1829452, 1848766, 1867282, 1885712, 1904142, 1923014, 1941487, 1960359, 1978832, 1997262, 2016134, 2034607, 2053921, 2072437, 2090867, 2108855, 2131200, 2150514, 2174068, 2193382, 2227276, 2246590, 2272244, 2291558, 2330225, 2350024, 2373845, 2393644]"
"('Scanner.java', 'java.util.Scanner', 'getCompleteTokenInBuffer', '(?s).*', '""aaa"" prio=10 tid=0x00007f416030e800 nid=0x7cd5 waiting for monitor entry [0x00007f414e28c000]\n   java.lang.Thread.State: BLOCKED (on object monitor)\n\tat com.github.olivergondza.dumpling.query.BlockingTreeTest$4.run(BlockingTreeTest.java:70)\n\t- waiting to lock <0x00000007d75111d8> (a com.github.olivergondza.dumpling.query.BlockingTreeTest$2)\n\t- locked <0x00000007d7511448> (a com.github.olivergondza.dumpling.query.BlockingTreeTest$4)\n\n""ab"" prio=10 tid=0x00007f416030d000 nid=0x7cd4 waiting for monitor entry [0x00007f414e38d000]\n   java.lang.Thread.State: BLOCKED (on object monitor)\n\tat com.github.olivergondza.dumpling.query.BlockingTreeTest$3.run(BlockingTreeTest.java:59)\n\t- waiting to lock <0x00000007d750e1e0> (a com.github.olivergondza.dumpling.query.BlockingTreeTest$1)\n\t- locked <0x00000007d7511310> (a com.github.olivergondza.dumpling.query.BlockingTreeTest$3)\n\n""b"" prio=10 tid=0x00007f4160310000 nid=0x7cd6 waiting on condition [0x00007f414e18b000]\n   java.lang.Thread.State: TIMED_WAITING (sleeping)\n\tat java.')","[2307490, 2307794, 2309535, 2309839, 2311580, 2311884, 2352645, 2353059, 2355200, 2355504, 2396265, 2396679]"
"('Description.java', 'org.junit.runner.Description', 'methodAndClassNamePatternGroupOrDefault', '([\\s\\S]*)\\((.*)\\)', 'threadNameWithLinebreak(com.github.olivergondza.dumpling.factory.ThreadDumpFactoryVendorTest)')",[286]
"('FilterBuilder.java', 'org.reflections.util.FilterBuilder$Include', 'apply', 'com\\.github\\.olivergondza\\.dumpling.*', 'com.github.olivergondza.dumpling.groovy.Factories.class')","[70209, 89499, 115177, 134467, 155988, 175278, 195365, 214655, 234742, 252742, 272031, 292291, 311801, 332061, 351662, 371922, 391523, 411783, 431293, 451553, 479411, 498701, 518788, 538078, 558165, 577455, 597542, 616832, 636919, 656209, 676296, 694296, 717025, 740305, 764015, 787350, 812697, 835977, 859257, 882537, 905817, 929527, 953292, 990189, 1013469, 1036749, 1060029, 1083309, 1106589, 1129869, 1153579, 1179021, 1202301, 1225581, 1244561, 1262991, 1281421, 1299851, 1318281, 1336711, 1356001, 1376088, 1395378, 1415465, 1433465, 1451894, 1471184, 1496778, 1516068, 1546659, 1565949, 1584489, 1602919, 1622209, 1640749, 1659179, 1678469, 1698990, 1729178, 1747178, 1765553, 1784843, 1810575, 1829005, 1848295, 1866835, 1885265, 1903695, 1922555, 1941040, 1959900, 1978385, 1996815, 2015675, 2034160, 2053450, 2071990, 2090420, 2108420, 2130753, 2150043, 2173621, 2192911, 2226829, 2246119, 2271797, 2291087, 2329766, 2349541, 2373386, 2393161]"
"('Description.java', 'org.junit.runner.Description', 'methodAndClassNamePatternGroupOrDefault', '([\\s\\S]*)\\((.*)\\)', 'detailedHelp(com.github.olivergondza.dumpling.cli.MainTest)')",[1540]
"('Scanner.java', 'java.util.Scanner', 'getCompleteTokenInBuffer', '(?s).*', '""JMX server connection timeout 23"" daemon prio=10 tid=0x00007fd67c00c000 nid=0x1042 in Object.wait() [0x00007fd68fdfc000]\n   java.lang.Thread.State: TIMED_WAITING (on object monitor)\n\tat java.lang.Object.wait(Native Method)\n\t- waiting on <0x00000007b5366780> (a [I)\n\tat com.sun.jmx.remote.internal.ServerCommunicatorAdmin$Timeout.run(ServerCommunicatorAdmin.java:168)\n\t- locked <0x00000007b5366780> (a [I)\n\tat java.lang.Thread.run(Thread.java:745)\n\n   Locked ownable synchronizers:\n\t- None\n\n""RMI TCP Connection(1)-127.0.0.1"" daemon prio=10 tid=0x00007fd688001800 nid=0x1041 runnable [0x00007fd68fefc000]\n   java.lang.Thread.State: RUNNABLE\n\tat java.net.SocketInputStream.socketRead0(Native Method)\n\tat java.net.SocketInputStream.read(SocketInputStream.java:152)\n\tat java.net.SocketInputStream.read(SocketInputStream.java:122)\n\tat java.io.BufferedInputStream.fill(BufferedInputStream.java:235)\n\tat java.io.BufferedInputStream.read(BufferedInputStream.java:254)\n\t- locked <0x00000007b5397498> (a java.io.BufferedInputStream)\n\t')",[454708]
"('ThreadDumpFactory.java', 'com.github.olivergondza.dumpling.factory.ThreadDumpFactory', 'initHeader', '#\\d+', '[0x00007f8b45d92000]')","[45641, 45675]"
"('FilterBuilder.java', 'org.reflections.util.FilterBuilder$Include', 'apply', 'com\\.github\\.olivergondza\\.dumpling.*', 'jstack.deadlock-and-friends.log')","[70323, 89619, 115291, 134587, 156102, 175398, 195479, 214775, 234856, 252853, 272151, 292417, 311921, 332187, 351782, 372048, 391643, 411909, 431413, 451679, 479525, 498821, 518902, 538198, 558279, 577575, 597656, 616952, 637033, 656329, 676410, 694407, 717169, 740449, 764162, 787494, 812841, 836121, 859401, 882681, 905961, 929674, 953439, 990333, 1013613, 1036893, 1060173, 1083453, 1106733, 1130013, 1153726, 1179165, 1202445, 1225725, 1244675, 1263105, 1281535, 1299965, 1318395, 1336825, 1356121, 1376202, 1395498, 1415579, 1433576, 1452008, 1471304, 1496892, 1516188, 1546773, 1566069, 1584603, 1603033, 1622329, 1640863, 1659293, 1678589, 1699104, 1729292, 1747289, 1765667, 1784963, 1810689, 1829119, 1848415, 1866949, 1885379, 1903809, 1922672, 1941154, 1960017, 1978499, 1996929, 2015792, 2034274, 2053570, 2072104, 2090534, 2108531, 2130867, 2150163, 2173735, 2193031, 2226943, 2246239, 2271911, 2291207, 2329883, 2349664, 2373503, 2393284]"
"('FilterBuilder.java', 'org.reflections.util.FilterBuilder$Include', 'apply', 'com\\.github\\.olivergondza\\.dumpling.*', 'jstack.deadlock.log')","[70545, 89853, 115513, 134821, 156324, 175632, 195701, 215009, 235078, 253069, 272385, 292663, 312155, 332433, 352016, 372294, 391877, 412155, 431647, 451925, 479747, 499055, 519124, 538432, 558501, 577809, 597878, 617186, 637255, 656563, 676632, 694623, 717451, 740731, 764450, 787776, 813123, 836403, 859683, 882963, 906243, 929962, 953727, 990615, 1013895, 1037175, 1060455, 1083735, 1107015, 1130295, 1154014, 1179447, 1202727, 1226007, 1244897, 1263327, 1281757, 1300187, 1318617, 1337047, 1356355, 1376424, 1395732, 1415801, 1433792, 1452230, 1471538, 1497114, 1516422, 1546995, 1566303, 1584825, 1603255, 1622563, 1641085, 1659515, 1678823, 1699326, 1729514, 1747505, 1765889, 1785197, 1810911, 1829341, 1848649, 1867171, 1885601, 1904031, 1922900, 1941376, 1960245, 1978721, 1997151, 2016020, 2034496, 2053804, 2072326, 2090756, 2108747, 2131089, 2150397, 2173957, 2193265, 2227165, 2246473, 2272133, 2291441, 2330111, 2349904, 2373731, 2393524]"
"('FilterBuilder.java', 'org.reflections.util.FilterBuilder$Include', 'apply', 'com\\.github\\.olivergondza\\.dumpling.*', 'com.github.olivergondza.dumpling.model.ProcessThread.class')","[66139, 85215, 111107, 130183, 151918, 170994, 191295, 210371, 230672, 248779, 267747, 287793, 307517, 327563, 347378, 367424, 387239, 407285, 427009, 447055, 475341, 494417, 514718, 533794, 554095, 573171, 593472, 612548, 632849, 651925, 672226, 690333, 711885, 735165, 758768, 782210, 807557, 830837, 854117, 877397, 900677, 924280, 948045, 985049, 1008329, 1031609, 1054889, 1078169, 1101449, 1124729, 1148332, 1173881, 1197161, 1220441, 1240491, 1258921, 1277351, 1295781, 1314211, 1332641, 1351717, 1372018, 1391094, 1411395, 1429502, 1447824, 1466900, 1492708, 1511784, 1542589, 1561665, 1580419, 1598849, 1617925, 1636679, 1655109, 1674185, 1694920, 1725108, 1743215, 1761483, 1780559, 1806505, 1824935, 1844011, 1862765, 1881195, 1899625, 1918378, 1936970, 1955723, 1974315, 1992745, 2011498, 2030090, 2049166, 2067920, 2086350, 2104457, 2126683, 2145759, 2169551, 2188627, 2222759, 2241835, 2267727, 2286803, 2325589, 2345150, 2369209, 2388770]"
"('FilterBuilder.java', 'org.reflections.util.FilterBuilder$Include', 'apply', 'com\\.github\\.olivergondza\\.dumpling.*', 'com.github.olivergondza.dumpling.cli.GrepCommandTest.class')","[55073, 73567, 100041, 118535, 140852, 159346, 180229, 198723, 219606, 238004, 256099, 275563, 295869, 315333, 335730, 355194, 375591, 395055, 415361, 434825, 464275, 482769, 503652, 522146, 543029, 561523, 582406, 600900, 621783, 640277, 661160, 679558, 697909, 721189, 744501, 768234, 793581, 816861, 840141, 863421, 886701, 910013, 933778, 971073, 994353, 1017633, 1040913, 1064193, 1087473, 1110753, 1134065, 1159905, 1183185, 1206465, 1229425, 1247855, 1266285, 1284715, 1303145, 1321575, 1340069, 1360952, 1379446, 1400329, 1418727, 1436758, 1455252, 1481642, 1500136, 1531523, 1550017, 1569353, 1587783, 1606277, 1625613, 1644043, 1662537, 1683854, 1714042, 1732440, 1750417, 1768911, 1795439, 1813869, 1832363, 1851699, 1870129, 1888559, 1907021, 1925904, 1944366, 1963249, 1981679, 2000141, 2019024, 2037518, 2056854, 2075284, 2093682, 2115617, 2134111, 2158485, 2176979, 2211693, 2230187, 2256661, 2275155, 2314232, 2333211, 2357852, 2376831]"
"('FilterBuilder.java', 'org.reflections.util.FilterBuilder$Include', 'apply', 'com\\.github\\.olivergondza\\.dumpling.*', 'com/github/olivergondza/dumpling/cli/ThreaddumpCommand.class')","[59160, 77870, 104128, 122838, 144939, 163649, 184316, 203026, 223693, 241983, 260402, 280082, 300172, 319852, 340033, 359713, 379894, 399574, 419664, 439344, 468362, 487072, 507739, 526449, 547116, 565826, 586493, 605203, 625870, 644580, 665247, 683537, 703076, 726356, 749776, 773401, 798748, 822028, 845308, 868588, 891868, 915288, 939053, 976240, 999520, 1022800, 1046080, 1069360, 1092640, 1115920, 1139340, 1165072, 1188352, 1211632, 1233512, 1251942, 1270372, 1288802, 1307232, 1325662, 1344372, 1365039, 1383749, 1404416, 1422706, 1440845, 1459555, 1485729, 1504439, 1535610, 1554320, 1573440, 1591870, 1610580, 1629700, 1648130, 1666840, 1687941, 1718129, 1736419, 1754504, 1773214, 1799526, 1817956, 1836666, 1855786, 1874216, 1892646, 1911216, 1929991, 1948561, 1967336, 1985766, 2004336, 2023111, 2041821, 2060941, 2079371, 2097661, 2119704, 2138414, 2162572, 2181282, 2215780, 2234490, 2260748, 2279458, 2318427, 2337622, 2362047, 2381242]"
"('Scanner.java', 'java.util.Scanner', 'getCompleteTokenInBuffer', '(?s).*', '""GC task thread#3 (ParallelGC)"" prio=10 tid=0x00007fd894023000 nid=0xfe5 runnable \n\n""VM Periodic Task Thread"" prio=10 tid=0x00007fd8940a9800 nid=0xfed waiting on condition \n\nJNI global references: 180\n\n\nFound one Java-level deadlock:\n=============================\n""other"":\n  waiting to lock monitor 0x00007fd8640062c8 (object 0x00000007ae995668, a java.lang.Object),\n  which is held by ""main""\n""main"":\n  waiting to lock monitor 0x00007fd864004068 (object 0x00000007ae995608, a java.lang.Object),\n  which is held by ""other""\n\nJava stack information for the threads listed above:\n===================================================\n""other"":\n\tat dumpling-script$1.run(dumpling-script:27)\n\t- waiting to lock <0x00000007ae995668> (a java.lang.Object)\n\t- locked <0x00000007ae995608> (a java.lang.Object)\n""main"":\n\tat dumpling-script.run(dumpling-script:36)\n\t- waiting to lock <0x00000007ae995608> (a java.lang.Object)\n\t- locked <0x00000007ae995668> (a java.lang.Object)\n\tat groovy.lang.GroovyShell.runScriptOrMainOrTestOrRunnable(Gro')","[50090, 50218, 50484]"
"('FilterBuilder.java', 'org.reflections.util.FilterBuilder$Include', 'apply', 'com\\.github\\.olivergondza\\.dumpling.*', 'com.github.olivergondza.dumpling.DisposeRule.class')","[71075, 90411, 116043, 135379, 156854, 176190, 196231, 215567, 235608, 253585, 272943, 293249, 312713, 333019, 352574, 372880, 392435, 412741, 432205, 452511, 480277, 499613, 519654, 538990, 559031, 578367, 598408, 617744, 637785, 657121, 677162, 695139, 718121, 741401, 765134, 788446, 813793, 837073, 860353, 883633, 906913, 930646, 954411, 991285, 1014565, 1037845, 1061125, 1084405, 1107685, 1130965, 1154698, 1180117, 1203397, 1226677, 1245427, 1263857, 1282287, 1300717, 1319147, 1337577, 1356913, 1376954, 1396290, 1416331, 1434308, 1452760, 1472096, 1497644, 1516980, 1547525, 1566861, 1585355, 1603785, 1623121, 1641615, 1660045, 1679381, 1699856, 1730044, 1748021, 1766419, 1785755, 1811441, 1829871, 1849207, 1867701, 1886131, 1904561, 1923444, 1941906, 1960789, 1979251, 1997681, 2016564, 2035026, 2054362, 2072856, 2091286, 2109263, 2131619, 2150955, 2174487, 2193823, 2227695, 2247031, 2272663, 2291999, 2330655, 2350476, 2374275, 2394096]"
"('FilterBuilder.java', 'org.reflections.util.FilterBuilder$Exclude', 'apply', 'java.lang.Object', 'com.github.olivergondza.dumpling.cli.CliCommand')","[58279, 58433, 58587, 59009, 59277, 59925, 61067, 61447, 76943, 77105, 77267, 77711, 77993, 78675, 79877, 80277, 103247, 103401, 103555, 103977, 104245, 104893, 106035, 106415, 121911, 122073, 122235, 122679, 122961, 123643, 124845, 125245, 144058, 144212, 144366, 144788, 145056, 145704, 146846, 147226, 162722, 162884, 163046, 163490, 163772, 164454, 165656, 166056, 183435, 183589, 183743, 184165, 184433, 185081, 186223, 186603, 202099, 202261, 202423, 202867, 203149, 203831, 205033, 205433, 222812, 222966, 223120, 223542, 223810, 224458, 225600, 225980, 241125, 241275, 241425, 241836, 242097, 242728, 243840, 244210, 259475, 259637, 259799, 260243, 260525, 261207, 262409, 262809, 279109, 279279, 279449, 279915, 280211, 280927, 282189, 282609, 299245, 299407, 299569, 300013, 300295, 300977, 302179, 302579, 318879, 319049, 319219, 319685, 319981, 320697, 321959, 322379, 339106, 339268, 339430, 339874, 340156, 340838, 342040, 342440, 358740, 358910, 359080, 359546, 359842, 360558, 361820, 362240, 378967, 379129, 379291, 379735, 380017, 380699, 381901, 382301, 398601, 398771, 398941, 399407, 399703, 400419, 401681, 402101, 418737, 418899, 419061, 419505, 419787, 420469, 421671, 422071, 438371, 438541, 438711, 439177, 439473, 440189, 441451, 441871, 467481, 467635, 467789, 468211, 468479, 469127, 470269, 470649, 486145, 486307, 486469, 486913, 487195, 487877, 489079, 489479, 506858, 507012, 507166, 507588, 507856, 508504, 509646, 510026, 525522, 525684, 525846, 526290, 526572, 527254, 528456, 528856, 546235, 546389, 546543, 546965, 547233, 547881, 549023, 549403, 564899, 565061, 565223, 565667, 565949, 566631, 567833, 568233, 585612, 585766, 585920, 586342, 586610, 587258, 588400, 588780, 604276, 604438, 604600, 605044, 605326, 606008, 607210, 607610, 624989, 625143, 625297, 625719, 625987, 626635, 627777, 628157, 643653, 643815, 643977, 644421, 644703, 645385, 646587, 646987, 664366, 664520, 664674, 665096, 665364, 666012, 667154, 667534, 682679, 682829, 682979, 683390, 683651, 684282, 685394, 685764, 701965, 702159, 702353, 702885, 703223, 704041, 705483, 705963, 725245, 725439, 725633, 726165, 726503, 727321, 728763, 729243, 748642, 748840, 749038, 749581, 749926, 750761, 752233, 752723, 772290, 772484, 772678, 773210, 773548, 774366, 775808, 776288, 797637, 797831, 798025, 798557, 798895, 799713, 801155, 801635, 820917, 821111, 821305, 821837, 822175, 822993, 824435, 824915, 844197, 844391, 844585, 845117, 845455, 846273, 847715, 848195, 867477, 867671, 867865, 868397, 868735, 869553, 870995, 871475, 890757, 890951, 891145, 891677, 892015, 892833, 894275, 894755, 914154, 914352, 914550, 915093, 915438, 916273, 917745, 918235, 937919, 938117, 938315, 938858, 939203, 940038, 941510, 942000, 975129, 975323, 975517, 976049, 976387, 977205, 978647, 979127, 998409, 998603, 998797, 999329, 999667, 1000485, 1001927, 1002407, 1021689, 1021883, 1022077, 1022609, 1022947, 1023765, 1025207, 1025687, 1044969, 1045163, 1045357, 1045889, 1046227, 1047045, 1048487, 1048967, 1068249, 1068443, 1068637, 1069169, 1069507, 1070325, 1071767, 1072247, 1091529, 1091723, 1091917, 1092449, 1092787, 1093605, 1095047, 1095527, 1114809, 1115003, 1115197, 1115729, 1116067, 1116885, 1118327, 1118807, 1138206, 1138404, 1138602, 1139145, 1139490, 1140325, 1141797, 1142287, 1163961, 1164155, 1164349, 1164881, 1165219, 1166037, 1167479, 1167959, 1187241, 1187435, 1187629, 1188161, 1188499, 1189317, 1190759, 1191239, 1210521, 1210715, 1210909, 1211441, 1211779, 1212597, 1214039, 1214519, 1232631, 1232785, 1232939, 1233361, 1233629, 1234277, 1235419, 1235799, 1251061, 1251215, 1251369, 1251791, 1252059, 1252707, 1253849, 1254229, 1269491, 1269645, 1269799, 1270221, 1270489, 1271137, 1272279, 1272659, 1287921, 1288075, 1288229, 1288651, 1288919, 1289567, 1290709, 1291089, 1306351, 1306505, 1306659, 1307081, 1307349, 1307997, 1309139, 1309519, 1324781, 1324935, 1325089, 1325511, 1325779, 1326427, 1327569, 1327949, 1343445, 1343607, 1343769, 1344213, 1344495, 1345177, 1346379, 1346779, 1364158, 1364312, 1364466, 1364888, 1365156, 1365804, 1366946, 1367326, 1382822, 1382984, 1383146, 1383590, 1383872, 1384554, 1385756, 1386156, 1403535, 1403689, 1403843, 1404265, 1404533, 1405181, 1406323, 1406703, 1421848, 1421998, 1422148, 1422559, 1422820, 1423451, 1424563, 1424933, 1439964, 1440118, 1440272, 1440694, 1440962, 1441610, 1442752, 1443132, 1458628, 1458790, 1458952, 1459396, 1459678, 1460360, 1461562, 1461962, 1484848, 1485002, 1485156, 1485578, 1485846, 1486494, 1487636, 1488016, 1503512, 1503674, 1503836, 1504280, 1504562, 1505244, 1506446, 1506846, 1534729, 1534883, 1535037, 1535459, 1535727, 1536375, 1537517, 1537897, 1553393, 1553555, 1553717, 1554161, 1554443, 1555125, 1556327, 1556727, 1572559, 1572713, 1572867, 1573289, 1573557, 1574205, 1575347, 1575727, 1590989, 1591143, 1591297, 1591719, 1591987, 1592635, 1593777, 1594157, 1609653, 1609815, 1609977, 1610421, 1610703, 1611385, 1612587, 1612987, 1628819, 1628973, 1629127, 1629549, 1629817, 1630465, 1631607, 1631987, 1647249, 1647403, 1647557, 1647979, 1648247, 1648895, 1650037, 1650417, 1665913, 1666075, 1666237, 1666681, 1666963, 1667645, 1668847, 1669247, 1687060, 1687214, 1687368, 1687790, 1688058, 1688706, 1689848, 1690228, 1717248, 1717402, 1717556, 1717978, 1718246, 1718894, 1720036, 1720416, 1735561, 1735711, 1735861, 1736272, 1736533, 1737164, 1738276, 1738646, 1753623, 1753777, 1753931, 1754353, 1754621, 1755269, 1756411, 1756791, 1772287, 1772449, 1772611, 1773055, 1773337, 1774019, 1775221, 1775621, 1798645, 1798799, 1798953, 1799375, 1799643, 1800291, 1801433, 1801813, 1817075, 1817229, 1817383, 1817805, 1818073, 1818721, 1819863, 1820243, 1835739, 1835901, 1836063, 1836507, 1836789, 1837471, 1838673, 1839073, 1854905, 1855059, 1855213, 1855635, 1855903, 1856551, 1857693, 1858073, 1873335, 1873489, 1873643, 1874065, 1874333, 1874981, 1876123, 1876503, 1891765, 1891919, 1892073, 1892495, 1892763, 1893411, 1894553, 1894933, 1910312, 1910470, 1910628, 1911061, 1911336, 1912001, 1913173, 1913563, 1929110, 1929264, 1929418, 1929840, 1930108, 1930756, 1931898, 1932278, 1947657, 1947815, 1947973, 1948406, 1948681, 1949346, 1950518, 1950908, 1966455, 1966609, 1966763, 1967185, 1967453, 1968101, 1969243, 1969623, 1984885, 1985039, 1985193, 1985615, 1985883, 1986531, 1987673, 1988053, 2003432, 2003590, 2003748, 2004181, 2004456, 2005121, 2006293, 2006683, 2022230, 2022384, 2022538, 2022960, 2023228, 2023876, 2025018, 2025398, 2040894, 2041056, 2041218, 2041662, 2041944, 2042626, 2043828, 2044228, 2060060, 2060214, 2060368, 2060790, 2061058, 2061706, 2062848, 2063228, 2078490, 2078644, 2078798, 2079220, 2079488, 2080136, 2081278, 2081658, 2096803, 2096953, 2097103, 2097514, 2097775, 2098406, 2099518, 2099888, 2118823, 2118977, 2119131, 2119553, 2119821, 2120469, 2121611, 2121991, 2137487, 2137649, 2137811, 2138255, 2138537, 2139219, 2140421, 2140821, 2161691, 2161845, 2161999, 2162421, 2162689, 2163337, 2164479, 2164859, 2180355, 2180517, 2180679, 2181123, 2181405, 2182087, 2183289, 2183689, 2214899, 2215053, 2215207, 2215629, 2215897, 2216545, 2217687, 2218067, 2233563, 2233725, 2233887, 2234331, 2234613, 2235295, 2236497, 2236897, 2259867, 2260021, 2260175, 2260597, 2260865, 2261513, 2262655, 2263035, 2278531, 2278693, 2278855, 2279299, 2279581, 2280263, 2281465, 2281865, 2317523, 2317681, 2317839, 2318272, 2318547, 2319212, 2320384, 2320774, 2336672, 2336838, 2337004, 2337459, 2337748, 2338447, 2339679, 2340089, 2361143, 2361301, 2361459, 2361892, 2362167, 2362832, 2364004, 2364394, 2380292, 2380458, 2380624, 2381079, 2381368, 2382067, 2383299, 2383709]"
"('FilterBuilder.java', 'org.reflections.util.FilterBuilder$Exclude', 'apply', 'java.lang.Object', 'com.github.olivergondza.dumpling.TestThread.logging.properties')","[71493, 90851, 116461, 135819, 157272, 176630, 196649, 216007, 236026, 253992, 273383, 293711, 313153, 333481, 353014, 373342, 392875, 413203, 432645, 452973, 480695, 500053, 520072, 539430, 559449, 578807, 598826, 618184, 638203, 657561, 677580, 695546, 718649, 741929, 765673, 788974, 814321, 837601, 860881, 884161, 907441, 931185, 954950, 991813, 1015093, 1038373, 1061653, 1084933, 1108213, 1131493, 1155237, 1180645, 1203925, 1227205, 1245845, 1264275, 1282705, 1301135, 1319565, 1337995, 1357353, 1377372, 1396730, 1416749, 1434715, 1453178, 1472536, 1498062, 1517420, 1547943, 1567301, 1585773, 1604203, 1623561, 1642033, 1660463, 1679821, 1700274, 1730462, 1748428, 1766837, 1786195, 1811859, 1830289, 1849647, 1868119, 1886549, 1904979, 1923873, 1942324, 1961218, 1979669, 1998099, 2016993, 2035444, 2054802, 2073274, 2091704, 2109670, 2132037, 2151395, 2174905, 2194263, 2228113, 2247471, 2273081, 2292439, 2331084, 2350927, 2374704, 2394547]"
"('FilterBuilder.java', 'org.reflections.util.FilterBuilder$Include', 'apply', 'com\\.github\\.olivergondza\\.dumpling.*', 'com/github/olivergondza/dumpling/cli/HelpCommand$1.class')","[59542, 78272, 104510, 123240, 145321, 164051, 184698, 203428, 224075, 242355, 260804, 280504, 300574, 320274, 340435, 360135, 380296, 399996, 420066, 439766, 468744, 487474, 508121, 526851, 547498, 566228, 586875, 605605, 626252, 644982, 665629, 683909, 703558, 726838, 750268, 773883, 799230, 822510, 845790, 869070, 892350, 915780, 939545, 976722, 1000002, 1023282, 1046562, 1069842, 1093122, 1116402, 1139832, 1165554, 1188834, 1212114, 1233894, 1252324, 1270754, 1289184, 1307614, 1326044, 1344774, 1365421, 1384151, 1404798, 1423078, 1441227, 1459957, 1486111, 1504841, 1535992, 1554722, 1573822, 1592252, 1610982, 1630082, 1648512, 1667242, 1688323, 1718511, 1736791, 1754886, 1773616, 1799908, 1818338, 1837068, 1856168, 1874598, 1893028, 1911608, 1930373, 1948953, 1967718, 1986148, 2004728, 2023493, 2042223, 2061323, 2079753, 2098033, 2120086, 2138816, 2162954, 2181684, 2216162, 2234892, 2261130, 2279860, 2318819, 2338034, 2362439, 2381654]"
"('ThreadDumpFactory.java', 'com.github.olivergondza.dumpling.factory.ThreadDumpFactory', 'initHeader', '#\\d+', '[0x00007fd6b09d3000]')","[456791, 456830, 961340, 961391, 1521977, 1522014]"
"('FilterBuilder.java', 'org.reflections.util.FilterBuilder$Exclude', 'apply', 'java.lang.Object', 'com.github.olivergondza.dumpling.query.SingleThreadSetQuery$Result')","[66973, 67241, 67929, 86093, 86375, 87099, 111941, 112209, 112897, 131061, 131343, 132067, 152752, 153020, 153708, 171872, 172154, 172878, 192129, 192397, 193085, 211249, 211531, 212255, 231506, 231774, 232462, 249591, 249852, 250522, 268625, 268907, 269631, 288715, 289011, 289771, 308395, 308677, 309401, 328485, 328781, 329541, 348256, 348538, 349262, 368346, 368642, 369402, 388117, 388399, 389123, 408207, 408503, 409263, 427887, 428169, 428893, 447977, 448273, 449033, 476175, 476443, 477131, 495295, 495577, 496301, 515552, 515820, 516508, 534672, 534954, 535678, 554929, 555197, 555885, 574049, 574331, 575055, 594306, 594574, 595262, 613426, 613708, 614432, 633683, 633951, 634639, 652803, 653085, 653809, 673060, 673328, 674016, 691145, 691406, 692076, 712939, 713277, 714145, 736219, 736557, 737425, 759844, 760189, 761075, 783264, 783602, 784470, 808611, 808949, 809817, 831891, 832229, 833097, 855171, 855509, 856377, 878451, 878789, 879657, 901731, 902069, 902937, 925356, 925701, 926587, 949121, 949466, 950352, 986103, 986441, 987309, 1009383, 1009721, 1010589, 1032663, 1033001, 1033869, 1055943, 1056281, 1057149, 1079223, 1079561, 1080429, 1102503, 1102841, 1103709, 1125783, 1126121, 1126989, 1149408, 1149753, 1150639, 1174935, 1175273, 1176141, 1198215, 1198553, 1199421, 1221495, 1221833, 1222701, 1241325, 1241593, 1242281, 1259755, 1260023, 1260711, 1278185, 1278453, 1279141, 1296615, 1296883, 1297571, 1315045, 1315313, 1316001, 1333475, 1333743, 1334431, 1352595, 1352877, 1353601, 1372852, 1373120, 1373808, 1391972, 1392254, 1392978, 1412229, 1412497, 1413185, 1430314, 1430575, 1431245, 1448658, 1448926, 1449614, 1467778, 1468060, 1468784, 1493542, 1493810, 1494498, 1512662, 1512944, 1513668, 1543423, 1543691, 1544379, 1562543, 1562825, 1563549, 1581253, 1581521, 1582209, 1599683, 1599951, 1600639, 1618803, 1619085, 1619809, 1637513, 1637781, 1638469, 1655943, 1656211, 1656899, 1675063, 1675345, 1676069, 1695754, 1696022, 1696710, 1725942, 1726210, 1726898, 1744027, 1744288, 1744958, 1762317, 1762585, 1763273, 1781437, 1781719, 1782443, 1807339, 1807607, 1808295, 1825769, 1826037, 1826725, 1844889, 1845171, 1845895, 1863599, 1863867, 1864555, 1882029, 1882297, 1882985, 1900459, 1900727, 1901415, 1919234, 1919509, 1920215, 1937804, 1938072, 1938760, 1956579, 1956854, 1957560, 1975149, 1975417, 1976105, 1993579, 1993847, 1994535, 2012354, 2012629, 2013335, 2030924, 2031192, 2031880, 2050044, 2050326, 2051050, 2068754, 2069022, 2069710, 2087184, 2087452, 2088140, 2105269, 2105530, 2106200, 2127517, 2127785, 2128473, 2146637, 2146919, 2147643, 2170385, 2170653, 2171341, 2189505, 2189787, 2190511, 2223593, 2223861, 2224549, 2242713, 2242995, 2243719, 2268561, 2268829, 2269517, 2287681, 2287963, 2288687, 2326445, 2326720, 2327426, 2346050, 2346339, 2347081, 2370065, 2370340, 2371046, 2389670, 2389959, 2390701]"
"('FilterBuilder.java', 'org.reflections.util.FilterBuilder$Exclude', 'apply', 'java.lang.Object', 'com.github.olivergondza.dumpling.cli.CliRuntimeFactory')","[60079, 60461, 61715, 78837, 79239, 80559, 105047, 105429, 106683, 123805, 124207, 125527, 145858, 146240, 147494, 164616, 165018, 166338, 185235, 185617, 186871, 203993, 204395, 205715, 224612, 224994, 226248, 242878, 243250, 244471, 261369, 261771, 263091, 281097, 281519, 282905, 301139, 301541, 302861, 320867, 321289, 322675, 341000, 341402, 342722, 360728, 361150, 362536, 380861, 381263, 382583, 400589, 401011, 402397, 420631, 421033, 422353, 440359, 440781, 442167, 469281, 469663, 470917, 488039, 488441, 489761, 508658, 509040, 510294, 527416, 527818, 529138, 548035, 548417, 549671, 566793, 567195, 568515, 587412, 587794, 589048, 606170, 606572, 607892, 626789, 627171, 628425, 645547, 645949, 647269, 666166, 666548, 667802, 684432, 684804, 686025, 704235, 704717, 706301, 727515, 727997, 729581, 750959, 751451, 753068, 774560, 775042, 776626, 799907, 800389, 801973, 823187, 823669, 825253, 846467, 846949, 848533, 869747, 870229, 871813, 893027, 893509, 895093, 916471, 916963, 918580, 940236, 940728, 942345, 977399, 977881, 979465, 1000679, 1001161, 1002745, 1023959, 1024441, 1026025, 1047239, 1047721, 1049305, 1070519, 1071001, 1072585, 1093799, 1094281, 1095865, 1117079, 1117561, 1119145, 1140523, 1141015, 1142632, 1166231, 1166713, 1168297, 1189511, 1189993, 1191577, 1212791, 1213273, 1214857, 1234431, 1234813, 1236067, 1252861, 1253243, 1254497, 1271291, 1271673, 1272927, 1289721, 1290103, 1291357, 1308151, 1308533, 1309787, 1326581, 1326963, 1328217, 1345339, 1345741, 1347061, 1365958, 1366340, 1367594, 1384716, 1385118, 1386438, 1405335, 1405717, 1406971, 1423601, 1423973, 1425194, 1441764, 1442146, 1443400, 1460522, 1460924, 1462244, 1486648, 1487030, 1488284, 1505406, 1505808, 1507128, 1536529, 1536911, 1538165, 1555287, 1555689, 1557009, 1574359, 1574741, 1575995, 1592789, 1593171, 1594425, 1611547, 1611949, 1613269, 1630619, 1631001, 1632255, 1649049, 1649431, 1650685, 1667807, 1668209, 1669529, 1688860, 1689242, 1690496, 1719048, 1719430, 1720684, 1737314, 1737686, 1738907, 1755423, 1755805, 1757059, 1774181, 1774583, 1775903, 1800445, 1800827, 1802081, 1818875, 1819257, 1820511, 1837633, 1838035, 1839355, 1856705, 1857087, 1858341, 1875135, 1875517, 1876771, 1893565, 1893947, 1895201, 1912159, 1912551, 1913838, 1930910, 1931292, 1932546, 1949504, 1949896, 1951183, 1968255, 1968637, 1969891, 1986685, 1987067, 1988321, 2005279, 2005671, 2006958, 2024030, 2024412, 2025666, 2042788, 2043190, 2044510, 2061860, 2062242, 2063496, 2080290, 2080672, 2081926, 2098556, 2098928, 2100149, 2120623, 2121005, 2122259, 2139381, 2139783, 2141103, 2163491, 2163873, 2165127, 2182249, 2182651, 2183971, 2216699, 2217081, 2218335, 2235457, 2235859, 2237179, 2261667, 2262049, 2263303, 2280425, 2280827, 2282147, 2319370, 2319762, 2321049, 2338613, 2339025, 2340378, 2362990, 2363382, 2364669, 2382233, 2382645, 2383998]"
"('ThreadDumpFactory.java', 'com.github.olivergondza.dumpling.factory.ThreadDumpFactory', 'initHeader', '#\\d+', '[0x00007f10688f7000]')","[52239, 52273]"
"('ThreadDumpFactory.java', 'com.github.olivergondza.dumpling.factory.ThreadDumpFactory', 'initHeader', '#\\d+', '[0x00007fe0a4143000]')","[41127, 41161]"
"('FilterBuilder.java', 'org.reflections.util.FilterBuilder$Include', 'apply', 'com\\.github\\.olivergondza\\.dumpling.*', 'com/github/olivergondza/dumpling/factory/ThreadDumpFactoryVendorTest/synchronizerDeadlock.groovy')","[56478, 75046, 101446, 120014, 142257, 160825, 181634, 200202, 221011, 239372, 257578, 277116, 297348, 316886, 337209, 356747, 377070, 396608, 416840, 436378, 465680, 484248, 505057, 523625, 544434, 563002, 583811, 602379, 623188, 641756, 662565, 680926, 699684, 722964, 746313, 770009, 795356, 818636, 841916, 865196, 888476, 911825, 935590, 972848, 996128, 1019408, 1042688, 1065968, 1089248, 1112528, 1135877, 1161680, 1184960, 1208240, 1230830, 1249260, 1267690, 1286120, 1304550, 1322980, 1341548, 1362357, 1380925, 1401734, 1420095, 1438163, 1456731, 1483047, 1501615, 1532928, 1551496, 1570758, 1589188, 1607756, 1627018, 1645448, 1664016, 1685259, 1715447, 1733808, 1751822, 1770390, 1796844, 1815274, 1833842, 1853104, 1871534, 1889964, 1908463, 1927309, 1945808, 1964654, 1983084, 2001583, 2020429, 2038997, 2058259, 2076689, 2095050, 2117022, 2135590, 2159890, 2178458, 2213098, 2231666, 2258066, 2276634, 2315674, 2334727, 2359294, 2378347]"
"('FilterBuilder.java', 'org.reflections.util.FilterBuilder$Include', 'apply', 'com\\.github\\.olivergondza\\.dumpling.*', 'com/github/olivergondza/dumpling/model/ProcessThread.class')","[66102, 85176, 111070, 130144, 151881, 170955, 191258, 210332, 230635, 248743, 267708, 287752, 307478, 327522, 347339, 367383, 387200, 407244, 426970, 447014, 475304, 494378, 514681, 533755, 554058, 573132, 593435, 612509, 632812, 651886, 672189, 690297, 711838, 735118, 758720, 782163, 807510, 830790, 854070, 877350, 900630, 924232, 947997, 985002, 1008282, 1031562, 1054842, 1078122, 1101402, 1124682, 1148284, 1173834, 1197114, 1220394, 1240454, 1258884, 1277314, 1295744, 1314174, 1332604, 1351678, 1371981, 1391055, 1411358, 1429466, 1447787, 1466861, 1492671, 1511745, 1542552, 1561626, 1580382, 1598812, 1617886, 1636642, 1655072, 1674146, 1694883, 1725071, 1743179, 1761446, 1780520, 1806468, 1824898, 1843972, 1862728, 1881158, 1899588, 1918340, 1936933, 1955685, 1974278, 1992708, 2011460, 2030053, 2049127, 2067883, 2086313, 2104421, 2126646, 2145720, 2169514, 2188588, 2222722, 2241796, 2267690, 2286764, 2325551, 2345110, 2369171, 2388730]"
"('ThreadDumpFactory.java', 'com.github.olivergondza.dumpling.factory.ThreadDumpFactory', 'initHeader', '#\\d+', '[0x00007fd68fbfa000]')","[958088, 958139, 1519539, 1519576]"
"('Scanner.java', 'java.util.Scanner', 'getCompleteTokenInBuffer', '(?s).*', '3562\n')",[4950]
"('Scanner.java', 'java.util.Scanner', 'getCompleteTokenInBuffer', '(?s).*', '""Reference Handler"" daemon prio=10 tid=0x00007f454406c000 nid=0xf3c in Object.wait() [0x00007f453da3d000]\n   java.lang.Thread.State: WAITING (on object monitor)\n\tat java.lang.Object.wait(Native Method)\n\t- waiting on <0x00000007b0f14078> (a java.lang.ref.Reference$Lock)\n\tat java.lang.Object.wait(Object.java:503)\n\tat java.lang.ref.Reference$ReferenceHandler.run(Reference.java:133)\n\t- locked <0x00000007b0f14078> (a java.lang.ref.Reference$Lock)\n\n   Locked ownable synchronizers:\n\t- None\n\n""main"" prio=10 tid=0x00007f4544007800 nid=0xf36 waiting on condition [0x00007f4549d9c000]\n   java.lang.Thread.State: WAITING (parking)\n\tat sun.misc.Unsafe.park(Native Method)\n\t- parking to wait for  <0x00000007ae60aab0> (a java.lang.Object)\n\tat java.util.concurrent.locks.LockSupport.park(LockSupport.java:186)\n\tat java_util_concurrent_locks_LockSupport$park.call(Unknown Source)\n\tat org.codehaus.groovy.runtime.callsite.CallSiteArray.defaultCall(CallSiteArray.java:45)\n\tat org.codehaus.groovy.runtime.callsite.AbstractCallSite.call(Ab')",[34662]
"('ThreadDumpFactory.java', 'com.github.olivergondza.dumpling.factory.ThreadDumpFactory', 'initHeader', '#\\d+', '[0x00007fd6f8ffe000]')","[460869, 460908, 966845, 966896, 1525887, 1525924]"
"('FilterBuilder.java', 'org.reflections.util.FilterBuilder$Include', 'apply', 'com\\.github\\.olivergondza\\.dumpling.*', 'com/github/olivergondza/dumpling/model/jmx/JmxThread.class')","[62590, 81480, 107558, 126448, 148369, 167259, 187746, 206636, 227123, 245323, 264012, 283872, 303782, 323642, 343643, 363503, 383504, 403364, 423274, 443134, 471792, 490682, 511169, 530059, 550546, 569436, 589923, 608813, 629300, 648190, 668677, 686877, 707406, 730686, 754196, 777731, 803078, 826358, 849638, 872918, 896198, 919708, 943473, 980570, 1003850, 1027130, 1050410, 1073690, 1096970, 1120250, 1143760, 1169402, 1192682, 1215962, 1236942, 1255372, 1273802, 1292232, 1310662, 1329092, 1347982, 1368469, 1387359, 1407846, 1426046, 1444275, 1463165, 1489159, 1508049, 1539040, 1557930, 1576870, 1595300, 1614190, 1633130, 1651560, 1670450, 1691371, 1721559, 1739759, 1757934, 1776824, 1802956, 1821386, 1840276, 1859216, 1877646, 1896076, 1914736, 1933421, 1952081, 1970766, 1989196, 2007856, 2026541, 2045431, 2064371, 2082801, 2101001, 2123134, 2142024, 2166002, 2184892, 2219210, 2238100, 2264178, 2283068, 2321947, 2341322, 2365567, 2384942]"
"('Description.java', 'org.junit.runner.Description', 'methodAndClassNamePatternGroupOrDefault', '([\\s\\S]*)\\((.*)\\)', 'waitingTimed(com.github.olivergondza.dumpling.factory.ThreadDumpFactoryVendorTest)')",[330]
"('FilterBuilder.java', 'org.reflections.util.FilterBuilder$Include', 'apply', 'com\\.github\\.olivergondza\\.dumpling.*', 'com.github.olivergondza.dumpling.model.ProcessThread$3.class')","[63807, 82761, 108775, 127729, 149586, 168540, 188963, 207917, 228340, 246508, 265293, 285217, 305063, 324987, 344924, 364848, 384785, 404709, 424555, 444479, 473009, 491963, 512386, 531340, 551763, 570717, 591140, 610094, 630517, 649471, 669894, 688062, 708943, 732223, 755765, 779268, 804615, 827895, 851175, 874455, 897735, 921277, 945042, 982107, 1005387, 1028667, 1051947, 1075227, 1098507, 1121787, 1145329, 1170939, 1194219, 1217499, 1238159, 1256589, 1275019, 1293449, 1311879, 1330309, 1349263, 1369686, 1388640, 1409063, 1427231, 1445492, 1464446, 1490376, 1509330, 1540257, 1559211, 1578087, 1596517, 1615471, 1634347, 1652777, 1671731, 1692588, 1722776, 1740944, 1759151, 1778105, 1804173, 1822603, 1841557, 1860433, 1878863, 1897293, 1915985, 1934638, 1953330, 1971983, 1990413, 2009105, 2027758, 2046712, 2065588, 2084018, 2102186, 2124351, 2143305, 2167219, 2186173, 2220427, 2239381, 2265395, 2284349, 2323196, 2342635, 2366816, 2386255]"
"('ThreadDumpFactory.java', 'com.github.olivergondza.dumpling.factory.ThreadDumpFactory', 'initHeader', '#\\d+', '[0x00007feb6a7c1000]')","[14910, 14944]"
"('ThreadDumpFactory.java', 'com.github.olivergondza.dumpling.factory.ThreadDumpFactory', 'initHeader', '#\\d+', '[0x00007f2a2d356000]')","[17702, 17736]"
"('Scanner.java', 'java.util.Scanner', 'getCompleteTokenInBuffer', '(?s).*', '""VM Periodic Task Thread"" prio=10 tid=0x00007fd8080a1800 nid=0xf8e waiting on condition \n\nJNI global references: 254\n\n')","[39126, 39370]"
"('FilterBuilder.java', 'org.reflections.util.FilterBuilder$Exclude', 'apply', 'java.lang.Object', 'java.lang.Cloneable')","[64879, 83889, 109847, 128857, 150658, 169668, 190035, 209045, 229412, 247552, 266421, 286401, 306191, 326171, 346052, 366032, 385913, 405893, 425683, 445663, 474081, 493091, 513458, 532468, 552835, 571845, 592212, 611222, 631589, 650599, 670966, 689106, 710295, 733575, 757145, 780620, 805967, 829247, 852527, 875807, 899087, 922657, 946422, 983459, 1006739, 1030019, 1053299, 1076579, 1099859, 1123139, 1146709, 1172291, 1195571, 1218851, 1239231, 1257661, 1276091, 1294521, 1312951, 1331381, 1350391, 1370758, 1389768, 1410135, 1428275, 1446564, 1465574, 1491448, 1510458, 1541329, 1560339, 1579159, 1597589, 1616599, 1635419, 1653849, 1672859, 1693660, 1723848, 1741988, 1760223, 1779233, 1805245, 1823675, 1842685, 1861505, 1879935, 1898365, 1917085, 1935710, 1954430, 1973055, 1991485, 2010205, 2028830, 2047840, 2066660, 2085090, 2103230, 2125423, 2144433, 2168291, 2187301, 2221499, 2240509, 2266467, 2285477, 2324296, 2343791, 2367916, 2387411]"
"('Description.java', 'org.junit.runner.Description', 'methodAndClassNamePatternGroupOrDefault', '([\\s\\S]*)\\((.*)\\)', 'groovyPlusDifferentRuntime(com.github.olivergondza.dumpling.cli.GroovyRuntimeTest)')",[1012]
"('FilterBuilder.java', 'org.reflections.util.FilterBuilder$Include', 'apply', 'com\\.github\\.olivergondza\\.dumpling.*', 'com/github/olivergondza/dumpling/DisposeRule$1.class')","[70730, 90048, 115698, 135016, 156509, 175827, 195886, 215204, 235263, 253249, 272580, 292868, 312350, 332638, 352211, 372499, 392072, 412360, 431842, 452130, 479932, 499250, 519309, 538627, 558686, 578004, 598063, 617381, 637440, 656758, 676817, 694803, 717686, 740966, 764690, 788011, 813358, 836638, 859918, 883198, 906478, 930202, 953967, 990850, 1014130, 1037410, 1060690, 1083970, 1107250, 1130530, 1154254, 1179682, 1202962, 1226242, 1245082, 1263512, 1281942, 1300372, 1318802, 1337232, 1356550, 1376609, 1395927, 1415986, 1433972, 1452415, 1471733, 1497299, 1516617, 1547180, 1566498, 1585010, 1603440, 1622758, 1641270, 1659700, 1679018, 1699511, 1729699, 1747685, 1766074, 1785392, 1811096, 1829526, 1848844, 1867356, 1885786, 1904216, 1923090, 1941561, 1960435, 1978906, 1997336, 2016210, 2034681, 2053999, 2072511, 2090941, 2108927, 2131274, 2150592, 2174142, 2193460, 2227350, 2246668, 2272318, 2291636, 2330301, 2350104, 2373921, 2393724]"
"('Description.java', 'org.junit.runner.Description', 'methodAndClassNamePatternGroupOrDefault', '([\\s\\S]*)\\((.*)\\)', 'groovyAsImmutable(com.github.olivergondza.dumpling.cli.GroovyRuntimeTest)')",[704]
"('Scanner.java', 'java.util.Scanner', 'getCompleteTokenInBuffer', '(?s).*', '2018-01-11 20:22:25\nFull thread dump Java HotSpot(TM) 64-Bit Server VM (24.80-b11 mixed mode):\n\n""Attach Listener"" daemon prio=10 tid=0x00007fd85c001000 nid=0xffd waiting on condition [0x0000000000000000]\n   java.lang.Thread.State: RUNNABLE\n\n   Locked ownable synchronizers:\n\t- None\n\n""other"" prio=10 tid=0x00007fd89456c800 nid=0xfee waiting for monitor entry [0x00007fd881b73000]\n   java.lang.Thread.State: BLOCKED (on object monitor)\n\tat dumpling-script$1.run(dumpling-script:27)\n\t- waiting to lock <0x00000007ae995668> (a java.lang.Object)\n\t- locked <0x00000007ae995608> (a java.lang.Object)\n\n   Locked ownable synchronizers:\n\t- None\n\n""Service Thread"" daemon prio=10 tid=0x00007fd89409e800 nid=0xfec runnable [0x0000000000000000]\n   java.lang.Thread.State: RUNNABLE\n\n   Locked ownable synchronizers:\n\t- None\n\n""C2 CompilerThread1"" daemon prio=10 tid=0x00007fd89409c800 nid=0xfeb waiting on condition [0x0000000000000000]\n   java.lang.Thread.State: RUNNABLE\n\n   Locked ownable synchronizers:\n\t- None\n\n""C2 CompilerThread0"" dae')","[46797, 46860, 47199, 47607, 47808]"
"('FilterBuilder.java', 'org.reflections.util.FilterBuilder$Include', 'apply', 'com\\.github\\.olivergondza\\.dumpling.*', 'com/github/olivergondza/dumpling/factory/ThreadDumpFactoryVendorTest/busyWaiting.groovy')","[56926, 75518, 101894, 120486, 142705, 161297, 182082, 200674, 221459, 239808, 258050, 277612, 297820, 317382, 337681, 357243, 377542, 397104, 417312, 436874, 466128, 484720, 505505, 524097, 544882, 563474, 584259, 602851, 623636, 642228, 663013, 681362, 700252, 723532, 746893, 770577, 795924, 819204, 842484, 865764, 889044, 912405, 936170, 973416, 996696, 1019976, 1043256, 1066536, 1089816, 1113096, 1136457, 1162248, 1185528, 1208808, 1231278, 1249708, 1268138, 1286568, 1304998, 1323428, 1342020, 1362805, 1381397, 1402182, 1420531, 1438611, 1457203, 1483495, 1502087, 1533376, 1551968, 1571206, 1589636, 1608228, 1627466, 1645896, 1664488, 1685707, 1715895, 1734244, 1752270, 1770862, 1797292, 1815722, 1834314, 1853552, 1871982, 1890412, 1908923, 1927757, 1946268, 1965102, 1983532, 2002043, 2020877, 2039469, 2058707, 2077137, 2095486, 2117470, 2136062, 2160338, 2178930, 2213546, 2232138, 2258514, 2277106, 2316134, 2335211, 2359754, 2378831]"
"('FilterBuilder.java', 'org.reflections.util.FilterBuilder$Include', 'apply', 'com\\.github\\.olivergondza\\.dumpling.*', 'com/github/olivergondza/dumpling/model/jvm/JvmThread.class')","[64648, 83646, 109616, 128614, 150427, 169425, 189804, 208802, 229181, 247327, 266178, 286146, 305948, 325916, 345809, 365777, 385670, 405638, 425440, 445408, 473850, 492848, 513227, 532225, 552604, 571602, 591981, 610979, 631358, 650356, 670735, 688881, 710004, 733284, 756848, 780329, 805676, 828956, 852236, 875516, 898796, 922360, 946125, 983168, 1006448, 1029728, 1053008, 1076288, 1099568, 1122848, 1146412, 1172000, 1195280, 1218560, 1239000, 1257430, 1275860, 1294290, 1312720, 1331150, 1350148, 1370527, 1389525, 1409904, 1428050, 1446333, 1465331, 1491217, 1510215, 1541098, 1560096, 1578928, 1597358, 1616356, 1635188, 1653618, 1672616, 1693429, 1723617, 1741763, 1759992, 1778990, 1805014, 1823444, 1842442, 1861274, 1879704, 1898134, 1916848, 1935479, 1954193, 1972824, 1991254, 2009968, 2028599, 2047597, 2066429, 2084859, 2103005, 2125192, 2144190, 2168060, 2187058, 2221268, 2240266, 2266236, 2285234, 2324059, 2343542, 2367679, 2387162]"
"('FilterBuilder.java', 'org.reflections.util.FilterBuilder$Include', 'apply', 'com\\.github\\.olivergondza\\.dumpling.*', 'com/github/olivergondza/dumpling/query/TopContenders$Result.class')","[66896, 86012, 111864, 130980, 152675, 171791, 192052, 211168, 231429, 249516, 268544, 288630, 308314, 328400, 348175, 368261, 388036, 408122, 427806, 447892, 476098, 495214, 515475, 534591, 554852, 573968, 594229, 613345, 633606, 652722, 672983, 691070, 712842, 736122, 759745, 783167, 808514, 831794, 855074, 878354, 901634, 925257, 949022, 986006, 1009286, 1032566, 1055846, 1079126, 1102406, 1125686, 1149309, 1174838, 1198118, 1221398, 1241248, 1259678, 1278108, 1296538, 1314968, 1333398, 1352514, 1372775, 1391891, 1412152, 1430239, 1448581, 1467697, 1493465, 1512581, 1543346, 1562462, 1581176, 1599606, 1618722, 1637436, 1655866, 1674982, 1695677, 1725865, 1743952, 1762240, 1781356, 1807262, 1825692, 1844808, 1863522, 1881952, 1900382, 1919155, 1937727, 1956500, 1975072, 1993502, 2012275, 2030847, 2049963, 2068677, 2087107, 2105194, 2127440, 2146556, 2170308, 2189424, 2223516, 2242632, 2268484, 2287600, 2326366, 2345967, 2369986, 2389587]"
"('Scanner.java', 'java.util.Scanner', 'getCompleteTokenInBuffer', '(?s).*', '""main"" prio=10 tid=0x00007ff5a0008800 nid=0x11ca waiting on condition [0x00007ff5a97f9000]\n   java.lang.Thread.State: TIMED_WAITING (sleeping)\n\tat java.lang.Thread.sleep(Native Method)\n\tat com.github.olivergondza.dumpling.cli.AbstractCliTest.pause(AbstractCliTest.java:54)\n\tat com.github.olivergondza.dumpling.query.TopContendersTest.contenders(TopContendersTest.java:95)\n\tat sun.reflect.NativeMethodAccessorImpl.invoke0(Native Method)\n\tat sun.reflect.NativeMethodAccessorImpl.invoke(NativeMethodAccessorImpl.java:57)\n\tat sun.reflect.DelegatingMethodAccessorImpl.invoke(DelegatingMethodAccessorImpl.java:43)\n\tat java.lang.reflect.Method.invoke(Method.java:606)\n\tat org.junit.runners.model.FrameworkMethod$1.runReflectiveCall(FrameworkMethod.java:47)\n\tat org.junit.internal.runners.model.ReflectiveCallable.run(ReflectiveCallable.java:12)\n\tat org.junit.runners.model.FrameworkMethod.invokeExplosively(FrameworkMethod.java:44)\n\tat org.junit.internal.runners.statements.InvokeMethod.evaluate(InvokeMethod.java:17)\n\tat org.junit.runners.ParentRunner.runLeaf(ParentRunner.java:271)\n\tat org.junit.runners.BlockJUnit4ClassRunner.runChild(BlockJUnit4ClassRunner.java:70)\n\tat org.junit.runners.BlockJUnit4ClassRunner.runChild(BlockJUnit4ClassRunner.java:50)\n\tat org.junit.runners.ParentRunner$3.run(ParentRunner.java:238)\n\tat org.junit.runners.ParentRunner$1.schedule(ParentRunner.java:63)\n\tat org.junit.runners.ParentRunner.runChildren(ParentRunner.java:236)\n\tat org.junit.runners.ParentRunner.access$000(ParentRunner.java:53)\n\tat org.junit.runners.ParentRunner$2.evaluate(ParentRunner.java:229)\n\tat org.junit.runners.ParentRunner.run(ParentRunner.java:309)\n\tat org.apache.maven.surefire.junit4.JUnit4Provider.execute(JUnit4Provider.java:242)\n\tat org.apache.maven.surefire.junit4.JUnit4Provider.executeTestSet(JUnit4Provider.java:137)\n\tat org.apache.maven.surefire.junit4.JUnit4Provider.invoke(JUnit4Provider.java:112)\n\tat sun.reflect.NativeMethodAccessorImpl.invoke0(Native Method)\n\tat sun.reflect.NativeMethodAccessorImpl.invoke(NativeMethodAccessorImpl.java:57)\n\tat sun.reflect.DelegatingMethodAccessorImpl.invoke(DelegatingMethodAccessorImpl.java:43)\n\tat java.lang.reflect.Method.invoke(Method.java:606)\n\tat org.apache.maven.surefire.util.ReflectionUtils.invokeMethodWithArray(ReflectionUtils.java:189)\n\tat org.apache.maven.surefire.booter.ProviderFactory$ProviderProxy.invoke(ProviderFactory.java:165)\n\tat org.apache.maven.surefire.booter.ProviderFactory.invokeProvider(ProviderFactory.java:85)\n\tat org.apache.maven.surefire.booter.ForkedBooter.runSuitesInProcess(ForkedBooter.java:115)\n\tat org.apache.maven.surefire.booter.ForkedBooter.main(ForkedBooter.java:75)\n\n""VM Thread"" prio=10 tid=0x00007ff5a013b000 nid=0x11cf runnable \n\n""GC task thread#0 (ParallelGC)"" prio=10 tid=0x00007ff5a001e000 nid=0x11cb runnable \n\n""GC task thread#1 (ParallelGC)"" prio=10 tid=0x00007ff5a0020000 nid=0x11cc runnable \n\n""GC task thread#2 (ParallelGC)"" prio=10 tid=0x00007ff5a0022000 nid=0x11cd runnable \n\n""GC task thread#3 (ParallelGC)"" prio=10 tid=0x00007ff5a0024000 nid=0x11ce runnable \n\n""VM Periodic Task Thread"" prio=10 tid=0x00007ff5a0180800 nid=0x11d6 waiting on condition \n\nJNI global references: 177\n\n')","[2113249, 2113535, 2113662, 2113789, 2113916, 2114043, 2114170, 2114403, 2155838, 2156205, 2156359, 2156513, 2156667, 2156821, 2156975, 2157271, 2198706, 2199073, 2199227, 2199381, 2199535, 2199689, 2199843, 2200139, 2202889, 2203175, 2203302, 2203429, 2203556, 2203683, 2203810, 2204043]"
"('FilterBuilder.java', 'org.reflections.util.FilterBuilder$Include', 'apply', 'com\\.github\\.olivergondza\\.dumpling.*', 'com.github.olivergondza.dumpling.cli.command.threaddump.usage')","[60535, 79317, 105503, 124285, 146314, 165096, 185691, 204473, 225068, 243322, 261849, 281601, 301619, 321371, 341480, 361232, 381341, 401093, 421111, 440863, 469737, 488519, 509114, 527896, 548491, 567273, 587868, 606650, 627245, 646027, 666622, 684876, 704811, 728091, 751547, 775136, 800483, 823763, 847043, 870323, 893603, 917059, 940824, 977975, 1001255, 1024535, 1047815, 1071095, 1094375, 1117655, 1141111, 1166807, 1190087, 1213367, 1234887, 1253317, 1271747, 1290177, 1308607, 1327037, 1345819, 1366414, 1385196, 1405791, 1424045, 1442220, 1461002, 1487104, 1505886, 1536985, 1555767, 1574815, 1593245, 1612027, 1631075, 1649505, 1668287, 1689316, 1719504, 1737758, 1755879, 1774661, 1800901, 1819331, 1838113, 1857161, 1875591, 1894021, 1912627, 1931366, 1949972, 1968711, 1987141, 2005747, 2024486, 2043268, 2062316, 2080746, 2099000, 2121079, 2139861, 2163947, 2182729, 2217155, 2235937, 2262123, 2280905, 2319838, 2339105, 2363458, 2382725]"
"('Scanner.java', 'java.util.Scanner', 'getCompleteTokenInBuffer', '(?s).*', '""Finalizer"" daemon prio=10 tid=0x00007feb6406e000 nid=0xe3a in Object.wait() [0x00007feb5e377000]\n   java.lang.Thread.State: WAITING (on object monitor)\n\tat java.lang.Object.wait(Native Method)\n\t- waiting on <0x00000007b0f08778> (a java.lang.ref.ReferenceQueue$Lock)\n\tat java.lang.ref.ReferenceQueue.remove(ReferenceQueue.java:135)\n\t- locked <0x00000007b0f08778> (a java.lang.ref.ReferenceQueue$Lock)\n\tat java.lang.ref.ReferenceQueue.remove(ReferenceQueue.java:151)\n\tat java.lang.ref.Finalizer$FinalizerThread.run(Finalizer.java:209)\n\n   Locked ownable synchronizers:\n\t- None\n\n""Reference Handler"" daemon prio=10 tid=0x00007feb6406c000 nid=0xe39 in Object.wait() [0x00007feb5e478000]\n   java.lang.Thread.State: WAITING (on object monitor)\n\tat java.lang.Object.wait(Native Method)\n\t- waiting on <0x00000007b0f20088> (a java.lang.ref.Reference$Lock)\n\tat java.lang.Object.wait(Object.java:503)\n\tat java.lang.ref.Reference$ReferenceHandler.run(Reference.java:133)\n\t- locked <0x00000007b0f20088> (a java.lang.ref.Reference$Lock)\n\n')",[14134]
"('FilterBuilder.java', 'org.reflections.util.FilterBuilder$Include', 'apply', 'com\\.github\\.olivergondza\\.dumpling.*', 'com.github.olivergondza.dumpling.model.ThreadLock.class')","[65871, 84933, 110839, 129901, 151650, 170712, 191027, 210089, 230404, 248518, 267465, 287497, 307235, 327267, 347096, 367128, 386957, 406989, 426727, 446759, 475073, 494135, 514450, 533512, 553827, 572889, 593204, 612266, 632581, 651643, 671958, 690072, 711547, 734827, 758423, 781872, 807219, 830499, 853779, 877059, 900339, 923935, 947700, 984711, 1007991, 1031271, 1054551, 1077831, 1101111, 1124391, 1147987, 1173543, 1196823, 1220103, 1240223, 1258653, 1277083, 1295513, 1313943, 1332373, 1351435, 1371750, 1390812, 1411127, 1429241, 1447556, 1466618, 1492440, 1511502, 1542321, 1561383, 1580151, 1598581, 1617643, 1636411, 1654841, 1673903, 1694652, 1724840, 1742954, 1761215, 1780277, 1806237, 1824667, 1843729, 1862497, 1880927, 1899357, 1918103, 1936702, 1955448, 1974047, 1992477, 2011223, 2029822, 2048884, 2067652, 2086082, 2104196, 2126415, 2145477, 2169283, 2188345, 2222491, 2241553, 2267459, 2286521, 2325314, 2344861, 2368934, 2388481]"
"('FilterBuilder.java', 'org.reflections.util.FilterBuilder$Exclude', 'apply', 'java.lang.Object', 'com.github.olivergondza.dumpling.TestThread.jmxremote.password')","[71605, 90969, 116573, 135937, 157384, 176748, 196761, 216125, 236138, 254101, 273501, 293835, 313271, 333605, 353132, 373466, 392993, 413327, 432763, 453097, 480807, 500171, 520184, 539548, 559561, 578925, 598938, 618302, 638315, 657679, 677692, 695655, 718791, 742071, 765818, 789116, 814463, 837743, 861023, 884303, 907583, 931330, 955095, 991955, 1015235, 1038515, 1061795, 1085075, 1108355, 1131635, 1155382, 1180787, 1204067, 1227347, 1245957, 1264387, 1282817, 1301247, 1319677, 1338107, 1357471, 1377484, 1396848, 1416861, 1434824, 1453290, 1472654, 1498174, 1517538, 1548055, 1567419, 1585885, 1604315, 1623679, 1642145, 1660575, 1679939, 1700386, 1730574, 1748537, 1766949, 1786313, 1811971, 1830401, 1849765, 1868231, 1886661, 1905091, 1923988, 1942436, 1961333, 1979781, 1998211, 2017108, 2035556, 2054920, 2073386, 2091816, 2109779, 2132149, 2151513, 2175017, 2194381, 2228225, 2247589, 2273193, 2292557, 2331199, 2351048, 2374819, 2394668]"
"('FilterBuilder.java', 'org.reflections.util.FilterBuilder$Include', 'apply', 'com\\.github\\.olivergondza\\.dumpling.*', 'com.github.olivergondza.dumpling.TestThread$1.class')","[71229, 90573, 116197, 135541, 157008, 176352, 196385, 215729, 235762, 253735, 273105, 293419, 312875, 333189, 352736, 373050, 392597, 412911, 432367, 452681, 480431, 499775, 519808, 539152, 559185, 578529, 598562, 617906, 637939, 657283, 677316, 695289, 718315, 741595, 765332, 788640, 813987, 837267, 860547, 883827, 907107, 930844, 954609, 991479, 1014759, 1038039, 1061319, 1084599, 1107879, 1131159, 1154896, 1180311, 1203591, 1226871, 1245581, 1264011, 1282441, 1300871, 1319301, 1337731, 1357075, 1377108, 1396452, 1416485, 1434458, 1452914, 1472258, 1497798, 1517142, 1547679, 1567023, 1585509, 1603939, 1623283, 1641769, 1660199, 1679543, 1700010, 1730198, 1748171, 1766573, 1785917, 1811595, 1830025, 1849369, 1867855, 1886285, 1904715, 1923602, 1942060, 1960947, 1979405, 1997835, 2016722, 2035180, 2054524, 2073010, 2091440, 2109413, 2131773, 2151117, 2174641, 2193985, 2227849, 2247193, 2272817, 2292161, 2330813, 2350642, 2374433, 2394262]"
"('FilterBuilder.java', 'org.reflections.util.FilterBuilder$Include', 'apply', 'com\\.github\\.olivergondza\\.dumpling.*', 'com.github.olivergondza.dumpling.model.ProcessThread$6.class')","[64189, 83163, 109157, 128131, 149968, 168942, 189345, 208319, 228722, 246880, 265695, 285639, 305465, 325409, 345326, 365270, 385187, 405131, 424957, 444901, 473391, 492365, 512768, 531742, 552145, 571119, 591522, 610496, 630899, 649873, 670276, 688434, 709425, 732705, 756257, 779750, 805097, 828377, 851657, 874937, 898217, 921769, 945534, 982589, 1005869, 1029149, 1052429, 1075709, 1098989, 1122269, 1145821, 1171421, 1194701, 1217981, 1238541, 1256971, 1275401, 1293831, 1312261, 1330691, 1349665, 1370068, 1389042, 1409445, 1427603, 1445874, 1464848, 1490758, 1509732, 1540639, 1559613, 1578469, 1596899, 1615873, 1634729, 1653159, 1672133, 1692970, 1723158, 1741316, 1759533, 1778507, 1804555, 1822985, 1841959, 1860815, 1879245, 1897675, 1916377, 1935020, 1953722, 1972365, 1990795, 2009497, 2028140, 2047114, 2065970, 2084400, 2102558, 2124733, 2143707, 2167601, 2186575, 2220809, 2239783, 2265777, 2284751, 2323588, 2343047, 2367208, 2386667]"
"('Scanner.java', 'java.util.Scanner', 'getCompleteTokenInBuffer', '(?s).*', '""remotely-observed-thread"" #11\n   java.lang.Thread.State: WAITING (on object monitor)\n\tat java.lang.Object.wait(Native Method)\n\t- waiting on <0x65b57dcc> (a com.github.olivergondza.dumpling.TestThread$1)\n\tat java.lang.Object.wait(Object.java:503)\n\tat com.github.olivergondza.dumpling.TestThread$1.run(TestThread.java:76)\n\n')",[334395]
"('FilterBuilder.java', 'org.reflections.util.FilterBuilder$Include', 'apply', 'com\\.github\\.olivergondza\\.dumpling.*', 'com/github/olivergondza/dumpling/groovy/GroovyApiEntryPoint$LoadCommand.class')","[69944, 89220, 114912, 134188, 155723, 174999, 195100, 214376, 234477, 252484, 271752, 291998, 311522, 331768, 351383, 371629, 391244, 411490, 431014, 451260, 479146, 498422, 518523, 537799, 557900, 577176, 597277, 616553, 636654, 655930, 676031, 694038, 716690, 739970, 763673, 787015, 812362, 835642, 858922, 882202, 905482, 929185, 952950, 989854, 1013134, 1036414, 1059694, 1082974, 1106254, 1129534, 1153237, 1178686, 1201966, 1225246, 1244296, 1262726, 1281156, 1299586, 1318016, 1336446, 1355722, 1375823, 1395099, 1415200, 1433207, 1451629, 1470905, 1496513, 1515789, 1546394, 1565670, 1584224, 1602654, 1621930, 1640484, 1658914, 1678190, 1698725, 1728913, 1746920, 1765288, 1784564, 1810310, 1828740, 1848016, 1866570, 1885000, 1903430, 1922283, 1940775, 1959628, 1978120, 1996550, 2015403, 2033895, 2053171, 2071725, 2090155, 2108162, 2130488, 2149764, 2173356, 2192632, 2226564, 2245840, 2271532, 2290808, 2329494, 2349255, 2373114, 2392875]"
"('FilterBuilder.java', 'org.reflections.util.FilterBuilder$Include', 'apply', 'com\\.github\\.olivergondza\\.dumpling.*', 'com/github/olivergondza/dumpling/factory/MXBeanFactoryUtils.class')","[67966, 87138, 112934, 132106, 153745, 172917, 193122, 212294, 232499, 250558, 269670, 289812, 309440, 329582, 349301, 369443, 389162, 409304, 428932, 449074, 477168, 496340, 516545, 535717, 555922, 575094, 595299, 614471, 634676, 653848, 674053, 692112, 714192, 737472, 761123, 784517, 809864, 833144, 856424, 879704, 902984, 926635, 950400, 987356, 1010636, 1033916, 1057196, 1080476, 1103756, 1127036, 1150687, 1176188, 1199468, 1222748, 1242318, 1260748, 1279178, 1297608, 1316038, 1334468, 1353640, 1373845, 1393017, 1413222, 1431281, 1449651, 1468823, 1494535, 1513707, 1544416, 1563588, 1582246, 1600676, 1619848, 1638506, 1656936, 1676108, 1696747, 1726935, 1744994, 1763310, 1782482, 1808332, 1826762, 1845934, 1864592, 1883022, 1901452, 1920253, 1938797, 1957598, 1976142, 1994572, 2013373, 2031917, 2051089, 2069747, 2088177, 2106236, 2128510, 2147682, 2171378, 2190550, 2224586, 2243758, 2269554, 2288726, 2327464, 2347121, 2371084, 2390741]"
"('Description.java', 'org.junit.runner.Description', 'methodAndClassNamePatternGroupOrDefault', '([\\s\\S]*)\\((.*)\\)', 'cliQueryTraces(com.github.olivergondza.dumpling.query.DeadlocksTest)')",[1694]
"('ThreadDumpFactory.java', 'com.github.olivergondza.dumpling.factory.ThreadDumpFactory', 'initHeader', '#\\d+', 'for')","[47303, 47337, 49294, 49328, 92077, 92112, 92665, 92700, 93276, 93311, 177673, 177708, 217050, 217085, 501096, 501131, 540473, 540508, 579850, 579885, 619227, 619262, 658604, 658639, 790250, 790298, 1156539, 1156588, 1358396, 1358431, 1397773, 1397808, 1473757, 1473791, 1474334, 1474368, 1474934, 1474968, 1680864, 1680899, 1701733, 1701823, 1702926, 1703016, 1704142, 1704232, 1787421, 1787456, 1788009, 1788044, 1788620, 1788655, 2110917, 2110943, 2111224, 2111250, 2111530, 2111556, 2152777, 2152812, 2153183, 2153218, 2153588, 2153623, 2195645, 2195680, 2196051, 2196086, 2196456, 2196491, 2200557, 2200583, 2200864, 2200890, 2201170, 2201196, 2204440, 2204466, 2204929, 2204955, 2205441, 2205467, 2248697, 2248732, 2249285, 2249320, 2249896, 2249931, 2293665, 2293700, 2294253, 2294288, 2294864, 2294899, 2300758, 2300784, 2301247, 2301273, 2301759, 2301785, 2307266, 2307292, 2307570, 2307596, 2307874, 2307900, 2308431, 2308457, 2309311, 2309337, 2309615, 2309641, 2309919, 2309945, 2310476, 2310502, 2311356, 2311382, 2311660, 2311686, 2311964, 2311990, 2312521, 2312547, 2352341, 2352377, 2352755, 2352791, 2353169, 2353205, 2353926, 2353962, 2354976, 2355002, 2355280, 2355306, 2355584, 2355610, 2356141, 2356167, 2395961, 2395997, 2396375, 2396411, 2396789, 2396825, 2397546, 2397582]"
"('FilterBuilder.java', 'org.reflections.util.FilterBuilder$Include', 'apply', 'com\\.github\\.olivergondza\\.dumpling.*', 'com.github.olivergondza.dumpling.factory.ThreadDumpFactory.class')","[68801, 88017, 113769, 132985, 154580, 173796, 193957, 213173, 233334, 251371, 270549, 290735, 310319, 330505, 350180, 370366, 390041, 410227, 429811, 449997, 478003, 497219, 517380, 536596, 556757, 575973, 596134, 615350, 635511, 654727, 674888, 692925, 715247, 738527, 762200, 785572, 810919, 834199, 857479, 880759, 904039, 927712, 951477, 988411, 1011691, 1034971, 1058251, 1081531, 1104811, 1128091, 1151764, 1177243, 1200523, 1223803, 1243153, 1261583, 1280013, 1298443, 1316873, 1335303, 1354519, 1374680, 1393896, 1414057, 1432094, 1450486, 1469702, 1495370, 1514586, 1545251, 1564467, 1583081, 1601511, 1620727, 1639341, 1657771, 1676987, 1697582, 1727770, 1745807, 1764145, 1783361, 1809167, 1827597, 1846813, 1865427, 1883857, 1902287, 1921110, 1939632, 1958455, 1976977, 1995407, 2014230, 2032752, 2051968, 2070582, 2089012, 2107049, 2129345, 2148561, 2172213, 2191429, 2225421, 2244637, 2270389, 2289605, 2328321, 2348022, 2371941, 2391642]"
"('Scanner.java', 'java.util.Scanner', 'getCompleteTokenInBuffer', '(?s).*', '""RMI Scheduler(0)"" daemon prio=10 tid=0x00007fd6b80ff800 nid=0x1034 waiting on condition [0x00007fd6b0bd5000]\n   java.lang.Thread.State: TIMED_WAITING (parking)\n\tat sun.misc.Unsafe.park(Native Method)\n\t- parking to wait for  <0x00000007072043e8> (a java.util.concurrent.locks.AbstractQueuedSynchronizer$ConditionObject)\n\tat java.util.concurrent.locks.LockSupport.parkNanos(LockSupport.java:226)\n\tat java.util.concurrent.locks.AbstractQueuedSynchronizer$ConditionObject.awaitNanos(AbstractQueuedSynchronizer.java:2082)\n\tat java.util.concurrent.ScheduledThreadPoolExecutor$DelayedWorkQueue.take(ScheduledThreadPoolExecutor.java:1090)\n\tat java.util.concurrent.ScheduledThreadPoolExecutor$DelayedWorkQueue.take(ScheduledThreadPoolExecutor.java:807)\n\tat java.util.concurrent.ThreadPoolExecutor.getTask(ThreadPoolExecutor.java:1068)\n\tat java.util.concurrent.ThreadPoolExecutor.runWorker(ThreadPoolExecutor.java:1130)\n\tat java.util.concurrent.ThreadPoolExecutor$Worker.run(ThreadPoolExecutor.java:615)\n\tat java.lang.Thread.run(Thread.java:745)\n\n   Locked ownable synchronizers:\n\t- None\n\n""process reaper"" daemon prio=10 tid=0x00007fd6b8029000 nid=0xdd9 waiting on condition [0x00007fd6e00ee000]\n   java.lang.Thread.State: TIMED_WAITING (parking)\n\tat sun.misc.Unsafe.park(Native Method)\n\t- parking to wait for  <0x00000007070054d0> (a java.util.concurrent.SynchronousQueue$TransferStack)\n\tat java.util.concurrent.locks.LockSupport.parkNanos(LockSupport.java:226)\n\tat java.util.concurrent.SynchronousQueue$TransferStack.awaitFulfill(SynchronousQueue.java:460)\n\tat java.util.concurrent.SynchronousQueue$TransferStack.transfer(SynchronousQueue.java:359)\n\tat java.util.concurrent.SynchronousQueue.poll(SynchronousQueue.java:942)\n\tat java.util.concurrent.ThreadPoolExecutor.getTask(ThreadPoolExecutor.java:1068)\n\tat java.util.concurrent.ThreadPoolExecutor.runWorker(ThreadPoolExecutor.java:1130)\n\tat java.util.concurrent.ThreadPoolExecutor$Worker.run(ThreadPoolExecutor.java:615)\n\tat java.lang.Thread.run(Thread.java:745)\n\n   Locked ownable synchronizers:\n\t- Non')","[457208, 961865, 1522376]"
"('FilterBuilder.java', 'org.reflections.util.FilterBuilder$Include', 'apply', 'com\\.github\\.olivergondza\\.dumpling.*', 'com.github.olivergondza.dumpling.cli.GrepCommand.class')","[59845, 78591, 104813, 123559, 145624, 164370, 185001, 203747, 224378, 242650, 261123, 280839, 300893, 320609, 340754, 360470, 380615, 400331, 420385, 440101, 469047, 487793, 508424, 527170, 547801, 566547, 587178, 605924, 626555, 645301, 665932, 684204, 703941, 727221, 750659, 774266, 799613, 822893, 846173, 869453, 892733, 916171, 939936, 977105, 1000385, 1023665, 1046945, 1070225, 1093505, 1116785, 1140223, 1165937, 1189217, 1212497, 1234197, 1252627, 1271057, 1289487, 1307917, 1326347, 1345093, 1365724, 1384470, 1405101, 1423373, 1441530, 1460276, 1486414, 1505160, 1536295, 1555041, 1574125, 1592555, 1611301, 1630385, 1648815, 1667561, 1688626, 1718814, 1737086, 1755189, 1773935, 1800211, 1818641, 1837387, 1856471, 1874901, 1893331, 1911919, 1930676, 1949264, 1968021, 1986451, 2005039, 2023796, 2042542, 2061626, 2080056, 2098328, 2120389, 2139135, 2163257, 2182003, 2216465, 2235211, 2261433, 2280179, 2319130, 2338361, 2362750, 2381981]"
"('FilterBuilder.java', 'org.reflections.util.FilterBuilder$Include', 'apply', 'com\\.github\\.olivergondza\\.dumpling.*', 'com.github.olivergondza.dumpling.query.BlockingTree$Result.class')","[67201, 86333, 112169, 131301, 152980, 172112, 192357, 211489, 231734, 249813, 268865, 288967, 308635, 328737, 348496, 368598, 388357, 408459, 428127, 448229, 476403, 495535, 515780, 534912, 555157, 574289, 594534, 613666, 633911, 653043, 673288, 691367, 713227, 736507, 760138, 783552, 808899, 832179, 855459, 878739, 902019, 925650, 949415, 986391, 1009671, 1032951, 1056231, 1079511, 1102791, 1126071, 1149702, 1175223, 1198503, 1221783, 1241553, 1259983, 1278413, 1296843, 1315273, 1333703, 1352835, 1373080, 1392212, 1412457, 1430536, 1448886, 1468018, 1493770, 1512902, 1543651, 1562783, 1581481, 1599911, 1619043, 1637741, 1656171, 1675303, 1695982, 1726170, 1744249, 1762545, 1781677, 1807567, 1825997, 1845129, 1863827, 1882257, 1900687, 1919468, 1938032, 1956813, 1975377, 1993807, 2012588, 2031152, 2050284, 2068982, 2087412, 2105491, 2127745, 2146877, 2170613, 2189745, 2223821, 2242953, 2268789, 2287921, 2326679, 2346296, 2370299, 2389916]"
"('FilterBuilder.java', 'org.reflections.util.FilterBuilder$Include', 'apply', 'com\\.github\\.olivergondza\\.dumpling.*', 'com/github/olivergondza/dumpling/groovy/Factories.class')","[70172, 89460, 115140, 134428, 155951, 175239, 195328, 214616, 234705, 252706, 271992, 292250, 311762, 332020, 351623, 371881, 391484, 411742, 431254, 451512, 479374, 498662, 518751, 538039, 558128, 577416, 597505, 616793, 636882, 656170, 676259, 694260, 716978, 740258, 763967, 787303, 812650, 835930, 859210, 882490, 905770, 929479, 953244, 990142, 1013422, 1036702, 1059982, 1083262, 1106542, 1129822, 1153531, 1178974, 1202254, 1225534, 1244524, 1262954, 1281384, 1299814, 1318244, 1336674, 1355962, 1376051, 1395339, 1415428, 1433429, 1451857, 1471145, 1496741, 1516029, 1546622, 1565910, 1584452, 1602882, 1622170, 1640712, 1659142, 1678430, 1698953, 1729141, 1747142, 1765516, 1784804, 1810538, 1828968, 1848256, 1866798, 1885228, 1903658, 1922517, 1941003, 1959862, 1978348, 1996778, 2015637, 2034123, 2053411, 2071953, 2090383, 2108384, 2130716, 2150004, 2173584, 2192872, 2226792, 2246080, 2271760, 2291048, 2329728, 2349501, 2373348, 2393121]"
"('ThreadDumpFactory.java', 'com.github.olivergondza.dumpling.factory.ThreadDumpFactory', 'initHeader', '#\\d+', '[0x00007fe0a9587000]')","[41660, 41694]"
"('Scanner.java', 'java.util.Scanner', 'getCompleteTokenInBuffer', '(?s).*', '""RMI RenewClean-[127.0.1.1:43573]"" daemon prio=10 tid=0x00007fd6b82cf000 nid=0x1040 in Object.wait() [0x00007fd68fffe000]\n   java.lang.Thread.State: TIMED_WAITING (on object monitor)\n\tat java.lang.Object.wait(Native Method)\n\t- waiting on <0x0000000707761e70> (a java.lang.ref.ReferenceQueue$Lock)\n\tat java.lang.ref.ReferenceQueue.remove(ReferenceQueue.java:135)\n\t- locked <0x0000000707761e70> (a java.lang.ref.ReferenceQueue$Lock)\n\tat sun.rmi.transport.DGCClient$EndpointEntry$RenewCleanThread.run(DGCClient.java:535)\n\tat java.lang.Thread.run(Thread.java:745)\n\n   Locked ownable synchronizers:\n\t- None\n\n""RMI TCP Accept-0"" daemon prio=10 tid=0x00007fd69400b800 nid=0x103f runnable [0x00007fd6b01c4000]\n   java.lang.Thread.State: RUNNABLE\n\tat java.net.PlainSocketImpl.socketAccept(Native Method)\n\tat java.net.AbstractPlainSocketImpl.accept(AbstractPlainSocketImpl.java:398)\n\tat java.net.ServerSocket.implAccept(ServerSocket.java:530)\n\tat java.net.ServerSocket.accept(ServerSocket.java:498)\n\tat sun.management.jmxremote.LocalRMIServerSocketFactory$1.accept(LocalRMIServerSocketFactory.java:52)\n\tat sun.rmi.transport.tcp.TCPTransport$AcceptLoop.executeAcceptLoop(TCPTransport.java:399)\n\tat sun.rmi.transport.tcp.TCPTransport$AcceptLoop.run(TCPTransport.java:371)\n\tat java.lang.Thread.run(Thread.java:745)\n\n   Locked ownable synchronizers:\n\t- None\n\n""Attach Listener"" daemon prio=10 tid=0x00007fd6cc001000 nid=0x103e waiting on condition [0x0000000000000000]\n   java.lang.Thread.State: RUNNABLE\n\n   Locked ownable synchronizers:\n\t- None\n\n""JMX client heartbeat 2"" daemon prio=10 tid=0x00007fd6b8106800 nid=0x1039 waiting on condition [0x00007fd6b08d2000]\n   java.lang.Thread.State: TIMED_WAITING (sleeping)\n\tat java.lang.Thread.sleep(Native Method)\n\tat com.sun.jmx.remote.internal.ClientCommunicatorAdmin$Checker.run(ClientCommunicatorAdmin.java:174)\n\tat java.lang.Thread.run(Thread.java:745)\n\n   Locked ownable synchronizers:\n\t- None\n\n""GC Daemon"" daemon prio=10 tid=0x00007fd6b8101000 nid=0x1036 in Object.wait() [0x00007fd6b09d3000]\n   java.lang.Thread.')","[959382, 959783, 960081, 960585, 1520509, 1520812, 1521040, 1521418]"
"('FilterBuilder.java', 'org.reflections.util.FilterBuilder$Include', 'apply', 'com\\.github\\.olivergondza\\.dumpling.*', 'com.github.olivergondza.dumpling.model.ModelObject.class')","[64075, 83043, 109043, 128011, 149854, 168822, 189231, 208199, 228608, 246769, 265575, 285513, 305345, 325283, 345206, 365144, 385067, 405005, 424837, 444775, 473277, 492245, 512654, 531622, 552031, 570999, 591408, 610376, 630785, 649753, 670162, 688323, 709281, 732561, 756110, 779606, 804953, 828233, 851513, 874793, 898073, 921622, 945387, 982445, 1005725, 1029005, 1052285, 1075565, 1098845, 1122125, 1145674, 1171277, 1194557, 1217837, 1238427, 1256857, 1275287, 1293717, 1312147, 1330577, 1349545, 1369954, 1388922, 1409331, 1427492, 1445760, 1464728, 1490644, 1509612, 1540525, 1559493, 1578355, 1596785, 1615753, 1634615, 1653045, 1672013, 1692856, 1723044, 1741205, 1759419, 1778387, 1804441, 1822871, 1841839, 1860701, 1879131, 1897561, 1916260, 1934906, 1953605, 1972251, 1990681, 2009380, 2028026, 2046994, 2065856, 2084286, 2102447, 2124619, 2143587, 2167487, 2186455, 2220695, 2239663, 2265663, 2284631, 2323471, 2342924, 2367091, 2386544]"
"('Scanner.java', 'java.util.Scanner', 'getCompleteTokenInBuffer', '(?s).*', '""main"" prio=10 tid=0x00007f8790007800 nid=0xee4 in Object.wait() [0x00007f8799aa1000]\n   java.lang.Thread.State: WAITING (on object monitor)\n\tat java.lang.Object.wait(Native Method)\n\t- waiting on <0x00000007ae938e60> (a java.lang.Object)\n\tat java.lang.Object.wait(Object.java:503)\n\tat java_lang_Object$wait.call(Unknown Source)\n\tat org.codehaus.groovy.runtime.callsite.CallSiteArray.defaultCall(CallSiteArray.java:45)\n\tat org.codehaus.groovy.runtime.callsite.AbstractCallSite.call(AbstractCallSite.java:108)\n\tat org.codehaus.groovy.runtime.callsite.AbstractCallSite.call(AbstractCallSite.java:112)\n\tat dumpling-script.pauseHere(dumpling-script:10)\n\t- locked <0x00000007ae938e60> (a java.lang.Object)\n\tat dumpling-script.bar(dumpling-script:21)\n\tat dumpling-script.foo(dumpling-script:26)\n\t- locked <0x00000007ae9388b0> (a java.lang.Double)\n\t- locked <0x00000007ae90cf60> (a java.lang.Integer)\n\t- locked <0x00000007ae90cf60> (a java.lang.Integer)\n\t- locked <0x00000007ae894658> (a java.lang.Object)\n\tat dumpling-script.run(dumpling-script:30)\n\tat groovy.lang.GroovyShell.runScriptOrMainOrTestOrRunnable(GroovyShell.java:258)\n\tat groovy.lang.GroovyShell.run(GroovyShell.java:550)\n\tat com.github.olivergondza.dumpling.cli.GroovyCommand.run(GroovyCommand.java:94)\n\tat com.github.olivergondza.dumpling.cli.Main.run(Main.java:75)\n\tat com.github.olivergondza.dumpling.cli.Main.main(Main.java:58)\n\n   Locked ownable synchronizers:\n\t- None\n\n""VM Thread"" prio=10 tid=0x00007f8790067800 nid=0xee9 runnable \n\n""GC task thread#0 (ParallelGC)"" prio=10 tid=0x00007f879001d800 nid=0xee5 runnable \n\n""GC task thread#1 (ParallelGC)"" prio=10 tid=0x00007f879001f800 nid=0xee6 runnable \n\n""GC task thread#2 (ParallelGC)"" prio=10 tid=0x00007f8790021000 nid=0xee7 runnable \n\n""GC task thread#3 (ParallelGC)"" prio=10 tid=0x00007f8790023000 nid=0xee8 runnable \n\n""VM Periodic Task Thread"" prio=10 tid=0x00007f87900a1000 nid=0xef0 waiting on condition \n\nJNI global references: 264\n\n')","[28190, 28471, 28614, 28757, 28900, 29043, 29186, 29467]"
"('Description.java', 'org.junit.runner.Description', 'methodAndClassNamePatternGroupOrDefault', '([\\s\\S]*)\\((.*)\\)', 'help(com.github.olivergondza.dumpling.cli.MainTest)')",[1496]
"('Description.java', 'org.junit.runner.Description', 'methodAndClassNamePatternGroupOrDefault', '([\\s\\S]*)\\((.*)\\)', 'com.github.olivergondza.dumpling.cli.GrepCommandTest')","[696348, 696375]"
"('FilterBuilder.java', 'org.reflections.util.FilterBuilder$Include', 'apply', 'com\\.github\\.olivergondza\\.dumpling.*', 'com.github.olivergondza.dumpling.cli.GroovyCommandTest.class')","[54845, 73327, 99813, 118295, 140624, 159106, 180001, 198483, 219378, 237782, 255859, 275311, 295629, 315081, 335490, 354942, 375351, 394803, 415121, 434573, 464047, 482529, 503424, 521906, 542801, 561283, 582178, 600660, 621555, 640037, 660932, 679336, 697621, 720901, 744207, 767946, 793293, 816573, 839853, 863133, 886413, 909719, 933484, 970785, 994065, 1017345, 1040625, 1063905, 1087185, 1110465, 1133771, 1159617, 1182897, 1206177, 1229197, 1247627, 1266057, 1284487, 1302917, 1321347, 1339829, 1360724, 1379206, 1400101, 1418505, 1436530, 1455012, 1481414, 1499896, 1531295, 1549777, 1569125, 1587555, 1606037, 1625385, 1643815, 1662297, 1683626, 1713814, 1732218, 1750189, 1768671, 1795211, 1813641, 1832123, 1851471, 1869901, 1888331, 1906787, 1925676, 1944132, 1963021, 1981451, 1999907, 2018796, 2037278, 2056626, 2075056, 2093460, 2115389, 2133871, 2158257, 2176739, 2211465, 2229947, 2256433, 2274915, 2313998, 2332965, 2357618, 2376585]"
"('Scanner.java', 'java.util.Scanner', 'getCompleteTokenInBuffer', '(?s).*', '""other"" prio=10 tid=0x00007fe39057c800 nid=0xe1a waiting on condition [0x00007fe37fdf6000]\n   java.lang.Thread.State: WAITING (parking)\n\tat sun.misc.Unsafe.park(Native Method)\n\t- parking to wait for  <0x00000007aea713d0> (a java.util.concurrent.locks.ReentrantLock$NonfairSync)\n\tat java.util.concurrent.locks.LockSupport.park(LockSupport.java:186)\n\tat java.util.concurrent.locks.AbstractQueuedSynchronizer.parkAndCheckInterrupt(AbstractQueuedSynchronizer.java:834)\n\tat java.util.concurrent.locks.AbstractQueuedSynchronizer.acquireQueued(AbstractQueuedSynchronizer.java:867)\n\tat java.util.concurrent.locks.AbstractQueuedSynchronizer.acquire(AbstractQueuedSynchronizer.java:1197)\n\tat java.util.concurrent.locks.ReentrantLock$NonfairSync.lock(ReentrantLock.java:214)\n\tat java.util.concurrent.locks.ReentrantLock.lock(ReentrantLock.java:290)\n\tat java_util_concurrent_locks_Lock$lock.call(Unknown Source)\n\tat org.codehaus.groovy.runtime.callsite.CallSiteArray.defaultCall(CallSiteArray.java:45)\n\tat org.codehaus.groovy.runtime.callsite.AbstractCallSite.call(AbstractCallSite.java:108)\n\tat org.codehaus.groovy.runtime.callsite.AbstractCallSite.call(AbstractCallSite.java:112)\n\tat dumpling-script$1.run(dumpling-script:28)\n\n   Locked ownable synchronizers:\n\t- <0x00000007aea71350> (a java.util.concurrent.locks.ReentrantLock$NonfairSync)\n\n""Service Thread"" daemon prio=10 tid=0x00007fe390096800 nid=0xe16 runnable [0x0000000000000000]\n   java.lang.Thread.State: RUNNABLE\n\n   Locked ownable synchronizers:\n\t- None\n\n""C2 CompilerThread1"" daemon prio=10 tid=0x00007fe390094800 nid=0xe15 waiting on condition [0x0000000000000000]\n   java.lang.Thread.State: RUNNABLE\n\n   Locked ownable synchronizers:\n\t- None\n\n""C2 CompilerThread0"" daemon prio=10 tid=0x00007fe390091800 nid=0xe14 waiting on condition [0x0000000000000000]\n   java.lang.Thread.State: RUNNABLE\n\n   Locked ownable synchronizers:\n\t- None\n\n""Signal Dispatcher"" daemon prio=10 tid=0x00007fe39008f000 nid=0xe13 runnable [0x0000000000000000]\n   java.lang.Thread.State: RUNNABLE\n\n   Locked ownable synchroni')","[9378, 9727, 9938, 10287]"
"('FilterBuilder.java', 'org.reflections.util.FilterBuilder$Include', 'apply', 'com\\.github\\.olivergondza\\.dumpling.*', 'com.github.olivergondza.dumpling.factory.ThreadDumpFactoryVendorTest.monitorDeadlock.groovy')","[57187, 75793, 102155, 120761, 142966, 161572, 182343, 200949, 221720, 240062, 258325, 277901, 298095, 317671, 337956, 357532, 377817, 397393, 417587, 437163, 466389, 484995, 505766, 524372, 545143, 563749, 584520, 603126, 623897, 642503, 663274, 681616, 700583, 723863, 747231, 770908, 796255, 819535, 842815, 866095, 889375, 912743, 936508, 973747, 997027, 1020307, 1043587, 1066867, 1090147, 1113427, 1136795, 1162579, 1185859, 1209139, 1231539, 1249969, 1268399, 1286829, 1305259, 1323689, 1342295, 1363066, 1381672, 1402443, 1420785, 1438872, 1457478, 1483756, 1502362, 1533637, 1552243, 1571467, 1589897, 1608503, 1627727, 1646157, 1664763, 1685968, 1716156, 1734498, 1752531, 1771137, 1797553, 1815983, 1834589, 1853813, 1872243, 1890673, 1909191, 1928018, 1946536, 1965363, 1983793, 2002311, 2021138, 2039744, 2058968, 2077398, 2095740, 2117731, 2136337, 2160599, 2179205, 2213807, 2232413, 2258775, 2277381, 2316402, 2335493, 2360022, 2379113]"
"('Description.java', 'org.junit.runner.Description', 'methodAndClassNamePatternGroupOrDefault', '([\\s\\S]*)\\((.*)\\)', 'com.github.olivergondza.dumpling.cli.ProcessRuntimeOptionHandlerTest')","[1682613, 1682640]"
"('Scanner.java', 'java.util.Scanner', 'getCompleteTokenInBuffer', '(?s).*', '""GC task thread#3 (ParallelGC)"" prio=10 tid=0x00007fe390023000 nid=0xe0f runnable \n\n""VM Periodic Task Thread"" prio=10 tid=0x00007fe3900a1800 nid=0xe17 waiting on condition \n\nJNI global references: 209\n\n\nFound one Java-level deadlock:\n=============================\n""other"":\n  waiting for ownable synchronizer 0x00000007aea713d0, (a java.util.concurrent.locks.ReentrantLock$NonfairSync),\n  which is held by ""main""\n""main"":\n  waiting for ownable synchronizer 0x00000007aea71350, (a java.util.concurrent.locks.ReentrantLock$NonfairSync),\n  which is held by ""other""\n\nJava stack information for the threads listed above:\n===================================================\n""other"":\n\tat sun.misc.Unsafe.park(Native Method)\n\t- parking to wait for  <0x00000007aea713d0> (a java.util.concurrent.locks.ReentrantLock$NonfairSync)\n\tat java.util.concurrent.locks.LockSupport.park(LockSupport.java:186)\n\tat java.util.concurrent.locks.AbstractQueuedSynchronizer.parkAndCheckInterrupt(AbstractQueuedSynchronizer.java:834)\n\tat java.util.concurrent.locks.AbstractQueuedSynchronizer.acquireQueued(AbstractQueuedSynchronizer.java:867)\n\tat java.util.concurrent.locks.AbstractQueuedSynchronizer.acquire(AbstractQueuedSynchronizer.java:1197)\n\tat java.util.concurrent.locks.ReentrantLock$NonfairSync.lock(ReentrantLock.java:214)\n\tat java.util.concurrent.locks.ReentrantLock.lock(ReentrantLock.java:290)\n\tat java_util_concurrent_locks_Lock$lock.call(Unknown Source)\n\tat org.codehaus.groovy.runtime.callsite.CallSiteArray.defaultCall(CallSiteArray.java:45)\n\tat org.codehaus.groovy.runtime.callsite.AbstractCallSite.call(AbstractCallSite.java:108)\n\tat org.codehaus.groovy.runtime.callsite.AbstractCallSite.call(AbstractCallSite.java:112)\n\tat dumpling-script$1.run(dumpling-script:28)\n""main"":\n\tat sun.misc.Unsafe.park(Native Method)\n\t- parking to wait for  <0x00000007aea71350> (a java.util.concurrent.locks.ReentrantLock$NonfairSync)\n\tat java.util.concurrent.locks.LockSupport.park(LockSupport.java:186)\n\tat java.util.concurrent.locks.AbstractQueuedSynchronizer.parkAndCheckInt')","[12274, 12412, 12688]"
"('Scanner.java', 'java.util.Scanner', 'getCompleteTokenInBuffer', '(?s).*', '""RMI RenewClean-[127.0.1.1:43573]"" daemon prio=10 tid=0x00007fd6b82cf000 nid=0x1040 in Object.wait() [0x00007fd68fffe000]\n   java.lang.Thread.State: TIMED_WAITING (on object monitor)\n\tat java.lang.Object.wait(Native Method)\n\t- waiting on <0x00000007b537c388> (a java.lang.ref.ReferenceQueue$Lock)\n\tat java.lang.ref.ReferenceQueue.remove(ReferenceQueue.java:135)\n\t- locked <0x00000007b537c388> (a java.lang.ref.ReferenceQueue$Lock)\n\tat sun.rmi.transport.DGCClient$EndpointEntry$RenewCleanThread.run(DGCClient.java:535)\n\tat java.lang.Thread.run(Thread.java:745)\n\n   Locked ownable synchronizers:\n\t- None\n\n""RMI TCP Accept-0"" daemon prio=10 tid=0x00007fd69400b800 nid=0x103f runnable [0x00007fd6b01c4000]\n   java.lang.Thread.State: RUNNABLE\n\tat java.net.PlainSocketImpl.socketAccept(Native Method)\n\tat java.net.AbstractPlainSocketImpl.accept(AbstractPlainSocketImpl.java:398)\n\tat java.net.ServerSocket.implAccept(ServerSocket.java:530)\n\tat java.net.ServerSocket.accept(ServerSocket.java:498)\n\tat sun.management.jmxremote.LocalRMIServerSocketFactory$1.accept(LocalRMIServerSocketFactory.java:52)\n\tat sun.rmi.transport.tcp.TCPTransport$AcceptLoop.executeAcceptLoop(TCPTransport.java:399)\n\tat sun.rmi.transport.tcp.TCPTransport$AcceptLoop.run(TCPTransport.java:371)\n\tat java.lang.Thread.run(Thread.java:745)\n\n   Locked ownable synchronizers:\n\t- None\n\n""Attach Listener"" daemon prio=10 tid=0x00007fd6cc001000 nid=0x103e waiting on condition [0x0000000000000000]\n   java.lang.Thread.State: RUNNABLE\n\n   Locked ownable synchronizers:\n\t- None\n\n""JMX client heartbeat 2"" daemon prio=10 tid=0x00007fd6b8106800 nid=0x1039 waiting on condition [0x00007fd6b08d2000]\n   java.lang.Thread.State: TIMED_WAITING (sleeping)\n\tat java.lang.Thread.sleep(Native Method)\n\tat com.sun.jmx.remote.internal.ClientCommunicatorAdmin$Checker.run(ClientCommunicatorAdmin.java:174)\n\tat java.lang.Thread.run(Thread.java:745)\n\n   Locked ownable synchronizers:\n\t- None\n\n""GC Daemon"" daemon prio=10 tid=0x00007fd6b8101000 nid=0x1036 in Object.wait() [0x00007fd6b09d3000]\n   java.lang.Thread.')","[455253, 455570, 455808, 456204]"
"('FilterBuilder.java', 'org.reflections.util.FilterBuilder$Include', 'apply', 'com\\.github\\.olivergondza\\.dumpling.*', 'com/github/olivergondza/dumpling/cli/Main$1.class')","[58624, 77306, 103592, 122274, 144403, 163085, 183780, 202462, 223157, 241461, 259838, 279490, 299608, 319260, 339469, 359121, 379330, 398982, 419100, 438752, 467826, 486508, 507203, 525885, 546580, 565262, 585957, 604639, 625334, 644016, 664711, 683015, 702400, 725680, 749086, 772725, 798072, 821352, 844632, 867912, 891192, 914598, 938363, 975564, 998844, 1022124, 1045404, 1068684, 1091964, 1115244, 1138650, 1164396, 1187676, 1210956, 1232976, 1251406, 1269836, 1288266, 1306696, 1325126, 1343808, 1364503, 1383185, 1403880, 1422184, 1440309, 1458991, 1485193, 1503875, 1535074, 1553756, 1572904, 1591334, 1610016, 1629164, 1647594, 1666276, 1687405, 1717593, 1735897, 1753968, 1772650, 1798990, 1817420, 1836102, 1855250, 1873680, 1892110, 1910666, 1929455, 1948011, 1966800, 1985230, 2003786, 2022575, 2041257, 2060405, 2078835, 2097139, 2119168, 2137850, 2162036, 2180718, 2215244, 2233926, 2260212, 2278894, 2317877, 2337044, 2361497, 2380664]"
"('Description.java', 'org.junit.runner.Description', 'methodAndClassNamePatternGroupOrDefault', '([\\s\\S]*)\\((.*)\\)', 'jmxRemoteConnectViaCli(com.github.olivergondza.dumpling.cli.SourceTest)')",[440]
"('FilterBuilder.java', 'org.reflections.util.FilterBuilder$Include', 'apply', 'com\\.github\\.olivergondza\\.dumpling.*', 'com/github/olivergondza/dumpling/query/BlockingTreeCommand.class')","[58470, 77144, 103438, 122112, 144249, 162923, 183626, 202300, 223003, 241311, 259676, 279320, 299446, 319090, 339307, 358951, 379168, 398812, 418938, 438582, 467672, 486346, 507049, 525723, 546426, 565100, 585803, 604477, 625180, 643854, 664557, 682865, 702206, 725486, 748888, 772531, 797878, 821158, 844438, 867718, 890998, 914400, 938165, 975370, 998650, 1021930, 1045210, 1068490, 1091770, 1115050, 1138452, 1164202, 1187482, 1210762, 1232822, 1251252, 1269682, 1288112, 1306542, 1324972, 1343646, 1364349, 1383023, 1403726, 1422034, 1440155, 1458829, 1485039, 1503713, 1534920, 1553594, 1572750, 1591180, 1609854, 1629010, 1647440, 1666114, 1687251, 1717439, 1735747, 1753814, 1772488, 1798836, 1817266, 1835940, 1855096, 1873526, 1891956, 1910508, 1929301, 1947853, 1966646, 1985076, 2003628, 2022421, 2041095, 2060251, 2078681, 2096989, 2119014, 2137688, 2161882, 2180556, 2215090, 2233764, 2260058, 2278732, 2317719, 2336878, 2361339, 2380498]"
"('ThreadDumpFactory.java', 'com.github.olivergondza.dumpling.factory.ThreadDumpFactory', 'initHeader', '#\\d+', '[0x00007ff59cbf7000]')","[2111383, 2111409, 2153396, 2153431, 2196264, 2196299, 2201023, 2201049]"
"('Description.java', 'org.junit.runner.Description', 'methodAndClassNamePatternGroupOrDefault', '([\\s\\S]*)\\((.*)\\)', 'readStdin(com.github.olivergondza.dumpling.cli.ProcessRuntimeOptionHandlerTest)')",[1232]
"('Scanner.java', 'java.util.Scanner', 'getCompleteTokenInBuffer', '(?s).*', '3969\n')",[36256]
"('Scanner.java', 'java.util.Scanner', 'getCompleteTokenInBuffer', '(?s).*', '""RMI TCP Connection(1)-127.0.0.1"" daemon prio=10 tid=0x00007fd688001800 nid=0x1041 runnable [0x00007fd68fefc000]\n   java.lang.Thread.State: RUNNABLE\n\tat java.net.SocketInputStream.socketRead0(Native Method)\n\tat java.net.SocketInputStream.read(SocketInputStream.java:152)\n\tat java.net.SocketInputStream.read(SocketInputStream.java:122)\n\tat java.io.BufferedInputStream.fill(BufferedInputStream.java:235)\n\tat java.io.BufferedInputStream.read(BufferedInputStream.java:254)\n\t- locked <0x00000007b5397498> (a java.io.BufferedInputStream)\n\tat java.io.FilterInputStream.read(FilterInputStream.java:83)\n\tat sun.rmi.transport.tcp.TCPTransport.handleMessages(TCPTransport.java:549)\n\tat sun.rmi.transport.tcp.TCPTransport$ConnectionHandler.run0(TCPTransport.java:828)\n\tat sun.rmi.transport.tcp.TCPTransport$ConnectionHandler.access$400(TCPTransport.java:619)\n\tat sun.rmi.transport.tcp.TCPTransport$ConnectionHandler$1.run(TCPTransport.java:684)\n\tat sun.rmi.transport.tcp.TCPTransport$ConnectionHandler$1.run(TCPTransport.java:681)\n\tat java.security.AccessController.doPrivileged(Native Method)\n\tat sun.rmi.transport.tcp.TCPTransport$ConnectionHandler.run(TCPTransport.java:681)\n\tat java.util.concurrent.ThreadPoolExecutor.runWorker(ThreadPoolExecutor.java:1145)\n\tat java.util.concurrent.ThreadPoolExecutor$Worker.run(ThreadPoolExecutor.java:615)\n\tat java.lang.Thread.run(Thread.java:745)\n\n   Locked ownable synchronizers:\n\t- <0x00000007b52f7028> (a java.util.concurrent.ThreadPoolExecutor$Worker)\n\n""RMI RenewClean-[127.0.1.1:43573]"" daemon prio=10 tid=0x00007fd6b82cf000 nid=0x1040 in Object.wait() [0x00007fd68fffe000]\n   java.lang.Thread.State: TIMED_WAITING (on object monitor)\n\tat java.lang.Object.wait(Native Method)\n\t- waiting on <0x00000007b537c388> (a java.lang.ref.ReferenceQueue$Lock)\n\tat java.lang.ref.ReferenceQueue.remove(ReferenceQueue.java:135)\n\t- locked <0x00000007b537c388> (a java.lang.ref.ReferenceQueue$Lock)\n\tat sun.rmi.transport.DGCClient$EndpointEntry$RenewCleanThread.run(DGCClient.java:535)\n\tat java.lang.Thread.run(Thread.java:745)\n\n ')",[455015]
"('Scanner.java', 'java.util.Scanner', 'getCompleteTokenInBuffer', '(?s).*', '""main"" prio=10 tid=0x00007fd894007800 nid=0xfe1 waiting for monitor entry [0x00007fd89aff6000]\n   java.lang.Thread.State: BLOCKED (on object monitor)\n\tat dumpling-script.run(dumpling-script:36)\n\t- waiting to lock <0x00000007ae995608> (a java.lang.Object)\n\t- locked <0x00000007ae995668> (a java.lang.Object)\n\tat groovy.lang.GroovyShell.runScriptOrMainOrTestOrRunnable(GroovyShell.java:258)\n\tat groovy.lang.GroovyShell.run(GroovyShell.java:550)\n\tat com.github.olivergondza.dumpling.cli.GroovyCommand.run(GroovyCommand.java:94)\n\tat com.github.olivergondza.dumpling.cli.Main.run(Main.java:75)\n\tat com.github.olivergondza.dumpling.cli.Main.main(Main.java:58)\n\n   Locked ownable synchronizers:\n\t- None\n\n""VM Thread"" prio=10 tid=0x00007fd894067800 nid=0xfe6 runnable \n\n""GC task thread#0 (ParallelGC)"" prio=10 tid=0x00007fd89401d800 nid=0xfe2 runnable \n\n""GC task thread#1 (ParallelGC)"" prio=10 tid=0x00007fd89401f800 nid=0xfe3 runnable \n\n""GC task thread#2 (ParallelGC)"" prio=10 tid=0x00007fd894021000 nid=0xfe4 runnable \n\n""GC task th')","[49190, 49590, 49714, 49838, 49962]"
"('Scanner.java', 'java.util.Scanner', 'getCompleteTokenInBuffer', '(?s).*', '2018-01-11 20:22:39\nFull thread dump Java HotSpot(TM) 64-Bit Server VM (24.80-b11 mixed mode):\n\n""JMX client heartbeat 5"" daemon prio=10 tid=0x00007fd6b80b3800 nid=0x10c4 waiting on condition [0x00007fd68f9f8000]\n   java.lang.Thread.State: TIMED_WAITING (sleeping)\n\tat java.lang.Thread.sleep(Native Method)\n\tat com.sun.jmx.remote.internal.ClientCommunicatorAdmin$Checker.run(ClientCommunicatorAdmin.java:174)\n\tat java.lang.Thread.run(Thread.java:745)\n\n   Locked ownable synchronizers:\n\t- None\n\n""RMI RenewClean-[127.0.0.1:34338]"" daemon prio=10 tid=0x00007fd6b80b9000 nid=0x10c1 in Object.wait() [0x00007fd6b07d1000]\n   java.lang.Thread.State: TIMED_WAITING (on object monitor)\n\tat java.lang.Object.wait(Native Method)\n\t- waiting on <0x0000000707efbcf0> (a java.lang.ref.ReferenceQueue$Lock)\n\tat java.lang.ref.ReferenceQueue.remove(ReferenceQueue.java:135)\n\t- locked <0x0000000707efbcf0> (a java.lang.ref.ReferenceQueue$Lock)\n\tat sun.rmi.transport.DGCClient$EndpointEntry$RenewCleanThread.run(DGCClient.java:535)\n\tat java.lang')",[1518355]
"('ThreadDumpFactory.java', 'com.github.olivergondza.dumpling.factory.ThreadDumpFactory', 'initHeader', '#\\d+', '[0x00007f414e58f001]')","[2308836, 2308862, 2310881, 2310907, 2312926, 2312952, 2354481, 2354517, 2356546, 2356572, 2398101, 2398137]"
"('FilterBuilder.java', 'org.reflections.util.FilterBuilder$Include', 'apply', 'com\\.github\\.olivergondza\\.dumpling.*', 'com.github.olivergondza.dumpling.factory.ThreadDumpFactoryVendorTest.parkedTimed.groovy')","[57747, 76383, 102715, 121351, 143526, 162162, 182903, 201539, 222280, 240607, 258915, 278521, 298685, 318291, 338546, 358152, 378407, 398013, 418177, 437783, 466949, 485585, 506326, 524962, 545703, 564339, 585080, 603716, 624457, 643093, 663834, 682161, 701293, 724573, 747956, 771618, 796965, 820245, 843525, 866805, 890085, 913468, 937233, 974457, 997737, 1021017, 1044297, 1067577, 1090857, 1114137, 1137520, 1163289, 1186569, 1209849, 1232099, 1250529, 1268959, 1287389, 1305819, 1324249, 1342885, 1363626, 1382262, 1403003, 1421330, 1439432, 1458068, 1484316, 1502952, 1534197, 1552833, 1572027, 1590457, 1609093, 1628287, 1646717, 1665353, 1686528, 1716716, 1735043, 1753091, 1771727, 1798113, 1816543, 1835179, 1854373, 1872803, 1891233, 1909766, 1928578, 1947111, 1965923, 1984353, 2002886, 2021698, 2040334, 2059528, 2077958, 2096285, 2118291, 2136927, 2161159, 2179795, 2214367, 2233003, 2259335, 2277971, 2316977, 2336098, 2360597, 2379718]"
"('FilterBuilder.java', 'org.reflections.util.FilterBuilder$Include', 'apply', 'com\\.github\\.olivergondza\\.dumpling.*', 'com/github/olivergondza/dumpling/model/dump/ThreadDumpThreadSet.class')","[63388, 82320, 108356, 127288, 149167, 168099, 188544, 207476, 227921, 246100, 264852, 284754, 304622, 324524, 344483, 364385, 384344, 404246, 424114, 444016, 472590, 491522, 511967, 530899, 551344, 570276, 590721, 609653, 630098, 649030, 669475, 687654, 708414, 731694, 755225, 778739, 804086, 827366, 850646, 873926, 897206, 920737, 944502, 981578, 1004858, 1028138, 1051418, 1074698, 1097978, 1121258, 1144789, 1170410, 1193690, 1216970, 1237740, 1256170, 1274600, 1293030, 1311460, 1329890, 1348822, 1369267, 1388199, 1408644, 1426823, 1445073, 1464005, 1489957, 1508889, 1539838, 1558770, 1577668, 1596098, 1615030, 1633928, 1652358, 1671290, 1692169, 1722357, 1740536, 1758732, 1777664, 1803754, 1822184, 1841116, 1860014, 1878444, 1896874, 1915555, 1934219, 1952900, 1971564, 1989994, 2008675, 2027339, 2046271, 2065169, 2083599, 2101778, 2123932, 2142864, 2166800, 2185732, 2220008, 2238940, 2264976, 2283908, 2322766, 2342183, 2366386, 2385803]"
"('FilterBuilder.java', 'org.reflections.util.FilterBuilder$Include', 'apply', 'com\\.github\\.olivergondza\\.dumpling.*', 'com.github.olivergondza.dumpling.query.BlockingTreeCommand.class')","[58507, 77183, 103475, 122151, 144286, 162962, 183663, 202339, 223040, 241347, 259715, 279361, 299485, 319131, 339346, 358992, 379207, 398853, 418977, 438623, 467709, 486385, 507086, 525762, 546463, 565139, 585840, 604516, 625217, 643893, 664594, 682901, 702253, 725533, 748936, 772578, 797925, 821205, 844485, 867765, 891045, 914448, 938213, 975417, 998697, 1021977, 1045257, 1068537, 1091817, 1115097, 1138500, 1164249, 1187529, 1210809, 1232859, 1251289, 1269719, 1288149, 1306579, 1325009, 1343685, 1364386, 1383062, 1403763, 1422070, 1440192, 1458868, 1485076, 1503752, 1534957, 1553633, 1572787, 1591217, 1609893, 1629047, 1647477, 1666153, 1687288, 1717476, 1735783, 1753851, 1772527, 1798873, 1817303, 1835979, 1855133, 1873563, 1891993, 1910546, 1929338, 1947891, 1966683, 1985113, 2003666, 2022458, 2041134, 2060288, 2078718, 2097025, 2119051, 2137727, 2161919, 2180595, 2215127, 2233803, 2260095, 2278771, 2317757, 2336918, 2361377, 2380538]"
"('FilterBuilder.java', 'org.reflections.util.FilterBuilder$Exclude', 'apply', 'java.lang.Object', 'com.github.olivergondza.dumpling.factory.ThreadDumpFactoryVendorTest.busyWaiting.groovy')","[57001, 75597, 101969, 120565, 142780, 161376, 182157, 200753, 221534, 239881, 258129, 277695, 297899, 317465, 337760, 357326, 377621, 397187, 417391, 436957, 466203, 484799, 505580, 524176, 544957, 563553, 584334, 602930, 623711, 642307, 663088, 681435, 700347, 723627, 746990, 770672, 796019, 819299, 842579, 865859, 889139, 912502, 936267, 973511, 996791, 1020071, 1043351, 1066631, 1089911, 1113191, 1136554, 1162343, 1185623, 1208903, 1231353, 1249783, 1268213, 1286643, 1305073, 1323503, 1342099, 1362880, 1381476, 1402257, 1420604, 1438686, 1457282, 1483570, 1502166, 1533451, 1552047, 1571281, 1589711, 1608307, 1627541, 1645971, 1664567, 1685782, 1715970, 1734317, 1752345, 1770941, 1797367, 1815797, 1834393, 1853627, 1872057, 1890487, 1909000, 1927832, 1946345, 1965177, 1983607, 2002120, 2020952, 2039548, 2058782, 2077212, 2095559, 2117545, 2136141, 2160413, 2179009, 2213621, 2232217, 2258589, 2277185, 2316211, 2335292, 2359831, 2378912]"
"('FilterBuilder.java', 'org.reflections.util.FilterBuilder$Include', 'apply', 'com\\.github\\.olivergondza\\.dumpling.*', 'com/github/olivergondza/dumpling/factory/ThreadDumpFactoryVendorTest/reacquireMonitorAfterWait.groovy')","[57262, 75872, 102230, 120840, 143041, 161651, 182418, 201028, 221795, 240135, 258404, 277984, 298174, 317754, 338035, 357615, 377896, 397476, 417666, 437246, 466464, 485074, 505841, 524451, 545218, 563828, 584595, 603205, 623972, 642582, 663349, 681689, 700678, 723958, 747328, 771003, 796350, 819630, 842910, 866190, 889470, 912840, 936605, 973842, 997122, 1020402, 1043682, 1066962, 1090242, 1113522, 1136892, 1162674, 1185954, 1209234, 1231614, 1250044, 1268474, 1286904, 1305334, 1323764, 1342374, 1363141, 1381751, 1402518, 1420858, 1438947, 1457557, 1483831, 1502441, 1533712, 1552322, 1571542, 1589972, 1608582, 1627802, 1646232, 1664842, 1686043, 1716231, 1734571, 1752606, 1771216, 1797628, 1816058, 1834668, 1853888, 1872318, 1890748, 1909268, 1928093, 1946613, 1965438, 1983868, 2002388, 2021213, 2039823, 2059043, 2077473, 2095813, 2117806, 2136416, 2160674, 2179284, 2213882, 2232492, 2258850, 2277460, 2316479, 2335574, 2360099, 2379194]"
"('ThreadDumpFactory.java', 'com.github.olivergondza.dumpling.factory.ThreadDumpFactory', 'initHeader', '#\\d+', '[0x00007f14cfdeb000]')","[7561, 7595]"
"('ThreadDumpFactory.java', 'com.github.olivergondza.dumpling.factory.ThreadDumpFactory', 'initHeader', '#\\d+', '[0x00002ad3cf8f7000]')","[177886, 177921, 217263, 217298, 501309, 501344, 540686, 540721, 580063, 580098, 619440, 619475, 658817, 658852, 790541, 790589, 1156836, 1156885, 1358609, 1358644, 1397986, 1398021, 1681077, 1681112]"
"('Scanner.java', 'java.util.Scanner', 'getCompleteTokenInBuffer', '(?s).*', '""main"" prio=10 tid=0x00007f14ec007800 nid=0xdeb in Object.wait() [0x00007f14f4053000]\n   java.lang.Thread.State: WAITING (on object monitor)\n\tat java.lang.Object.wait(Native Method)\n\t- waiting on <0x00000007ae929488> (a java.lang.Object)\n\tat java.lang.Object.wait(Object.java:503)\n\tat java_lang_Object$wait.call(Unknown Source)\n\tat org.codehaus.groovy.runtime.callsite.CallSiteArray.defaultCall(CallSiteArray.java:45)\n\tat org.codehaus.groovy.runtime.callsite.AbstractCallSite.call(AbstractCallSite.java:108)\n\tat org.codehaus.groovy.runtime.callsite.AbstractCallSite.call(AbstractCallSite.java:112)\n\tat dumpling-script.pauseHere(dumpling-script:10)\n\t- locked <0x00000007ae929488> (a java.lang.Object)\n\tat dumpling-script.run(dumpling-script:22)\n\tat groovy.lang.GroovyShell.runScriptOrMainOrTestOrRunnable(GroovyShell.java:258)\n\tat groovy.lang.GroovyShell.run(GroovyShell.java:550)\n\tat com.github.olivergondza.dumpling.cli.GroovyCommand.run(GroovyCommand.java:94)\n\tat com.github.olivergondza.dumpling.cli.Main.run(Main.java:75)\n\tat com.github.olivergondza.dumpling.cli.Main.main(Main.java:58)\n\n   Locked ownable synchronizers:\n\t- None\n\n""VM Thread"" prio=10 tid=0x00007f14ec067800 nid=0xdf0 runnable \n\n""GC task thread#0 (ParallelGC)"" prio=10 tid=0x00007f14ec01d800 nid=0xdec runnable \n\n""GC task thread#1 (ParallelGC)"" prio=10 tid=0x00007f14ec01f800 nid=0xded runnable \n\n""GC task thread#2 (ParallelGC)"" prio=10 tid=0x00007f14ec021000 nid=0xdee runnable \n\n""GC task thread#3 (ParallelGC)"" prio=10 tid=0x00007f14ec023000 nid=0xdef runnable \n\n""VM Periodic Task Thread"" prio=10 tid=0x00007f14ec0a1800 nid=0xdf7 waiting on condition \n\nJNI global references: 176\n\n')","[7663, 7938, 8075, 8212, 8349, 8486, 8623, 8898]"
"('FilterBuilder.java', 'org.reflections.util.FilterBuilder$Exclude', 'apply', 'java.lang.Object', 'com.github.olivergondza.dumpling.cli.command.grep.usage')","[61293, 80115, 106261, 125083, 147072, 165894, 186449, 205271, 225826, 244060, 262647, 282439, 302417, 322209, 342278, 362070, 382139, 401931, 421909, 441701, 470495, 489317, 509872, 528694, 549249, 568071, 588626, 607448, 628003, 646825, 667380, 685614, 705769, 729049, 752525, 776094, 801441, 824721, 848001, 871281, 894561, 918037, 941802, 978933, 1002213, 1025493, 1048773, 1072053, 1095333, 1118613, 1142089, 1167765, 1191045, 1214325, 1235645, 1254075, 1272505, 1290935, 1309365, 1327795, 1346617, 1367172, 1385994, 1406549, 1424783, 1442978, 1461800, 1487862, 1506684, 1537743, 1556565, 1575573, 1594003, 1612825, 1631833, 1650263, 1669085, 1690074, 1720262, 1738496, 1756637, 1775459, 1801659, 1820089, 1838911, 1857919, 1876349, 1894779, 1913405, 1932124, 1950750, 1969469, 1987899, 2006525, 2025244, 2044066, 2063074, 2081504, 2099738, 2121837, 2140659, 2164705, 2183527, 2217913, 2236735, 2262881, 2281703, 2320616, 2339923, 2364236, 2383543]"
"('FilterBuilder.java', 'org.reflections.util.FilterBuilder$Include', 'apply', 'com\\.github\\.olivergondza\\.dumpling.*', 'com/github/olivergondza/dumpling/factory/ThreadDumpFactory.class')","[68764, 87978, 113732, 132946, 154543, 173757, 193920, 213134, 233297, 251335, 270510, 290694, 310280, 330464, 350141, 370325, 390002, 410186, 429772, 449956, 477966, 497180, 517343, 536557, 556720, 575934, 596097, 615311, 635474, 654688, 674851, 692889, 715200, 738480, 762152, 785525, 810872, 834152, 857432, 880712, 903992, 927664, 951429, 988364, 1011644, 1034924, 1058204, 1081484, 1104764, 1128044, 1151716, 1177196, 1200476, 1223756, 1243116, 1261546, 1279976, 1298406, 1316836, 1335266, 1354480, 1374643, 1393857, 1414020, 1432058, 1450449, 1469663, 1495333, 1514547, 1545214, 1564428, 1583044, 1601474, 1620688, 1639304, 1657734, 1676948, 1697545, 1727733, 1745771, 1764108, 1783322, 1809130, 1827560, 1846774, 1865390, 1883820, 1902250, 1921072, 1939595, 1958417, 1976940, 1995370, 2014192, 2032715, 2051929, 2070545, 2088975, 2107013, 2129308, 2148522, 2172176, 2191390, 2225384, 2244598, 2270352, 2289566, 2328283, 2347982, 2371903, 2391602]"
"('FilterBuilder.java', 'org.reflections.util.FilterBuilder$Exclude', 'apply', 'java.lang.Object', 'com.github.olivergondza.dumpling.factory.ThreadDumpFactoryVendorTest.parked.groovy')","[57673, 76305, 102641, 121273, 143452, 162084, 182829, 201461, 222206, 240535, 258837, 278439, 298607, 318209, 338468, 358070, 378329, 397931, 418099, 437701, 466875, 485507, 506252, 524884, 545629, 564261, 585006, 603638, 624383, 643015, 663760, 682089, 701199, 724479, 747860, 771524, 796871, 820151, 843431, 866711, 889991, 913372, 937137, 974363, 997643, 1020923, 1044203, 1067483, 1090763, 1114043, 1137424, 1163195, 1186475, 1209755, 1232025, 1250455, 1268885, 1287315, 1305745, 1324175, 1342807, 1363552, 1382184, 1402929, 1421258, 1439358, 1457990, 1484242, 1502874, 1534123, 1552755, 1571953, 1590383, 1609015, 1628213, 1646643, 1665275, 1686454, 1716642, 1734971, 1753017, 1771649, 1798039, 1816469, 1835101, 1854299, 1872729, 1891159, 1909690, 1928504, 1947035, 1965849, 1984279, 2002810, 2021624, 2040256, 2059454, 2077884, 2096213, 2118217, 2136849, 2161085, 2179717, 2214293, 2232925, 2259261, 2277893, 2316901, 2336018, 2360521, 2379638]"
"('Scanner.java', 'java.util.Scanner', 'getCompleteTokenInBuffer', '(?s).*', '1970-01-01 11:22:33\nFull thread dump Java HotSpot(TM) 64-Bit Server VM (20.14-b01 mixed mode):\n\n""Handling GET /hudson/job/some_job/ : ajp-127.0.0.1-8009-133"" daemon prio=10 tid=0x2ad443486800 nid=18245\n   java.lang.Thread.State: BLOCKED (on object monitor)\n\tat hudson.model.AbstractProject.getActions(AbstractProject.java:1034)\n\t- waiting to lock <0x49c5f7990> (a hudson.model.FreeStyleProject)\n\tat sun.reflect.GeneratedMethodAccessor718.invoke(Unknown Source)\n\tat sun.reflect.DelegatingMethodAccessorImpl.invoke(DelegatingMethodAccessorImpl.java:25)\n\tat java.lang.reflect.Method.invoke(Method.java:597)\n\tat org.apache.commons.jexl.util.PropertyExecutor.execute(PropertyExecutor.java:125)\n\tat org.apache.commons.jexl.util.introspection.UberspectImpl$VelGetterImpl.invoke(UberspectImpl.java:314)\n\tat org.apache.commons.jexl.parser.ASTArrayAccess.evaluateExpr(ASTArrayAccess.java:185)\n\tat org.apache.commons.jexl.parser.ASTIdentifier.execute(ASTIdentifier.java:75)\n\tat org.apache.commons.jexl.parser.ASTReference.execute(ASTRe')",[136704]
"('ThreadDumpFactory.java', 'com.github.olivergondza.dumpling.factory.ThreadDumpFactory', 'initHeader', '#\\d+', 'condition')","[2140, 2174, 2686, 2720, 3028, 3062, 4844, 4878, 5231, 5265, 6200, 6234, 6592, 6626, 8796, 8830, 9202, 9236, 9551, 9585, 10111, 10145, 10460, 10494, 11566, 11600, 12585, 12619, 13432, 13466, 13774, 13808, 14841, 14875, 15876, 15910, 16281, 16315, 16827, 16861, 17169, 17203, 19134, 19168, 19573, 19607, 20119, 20153, 20461, 20495, 21510, 21544, 22413, 22447, 22804, 22838, 23599, 23633, 23936, 23970, 24997, 25031, 25995, 26029, 26402, 26436, 26948, 26982, 27290, 27324, 29359, 29393, 29803, 29837, 30349, 30383, 30691, 30725, 32718, 32752, 33156, 33190, 33702, 33736, 34044, 34078, 35108, 35142, 36125, 36159, 36561, 36595, 37107, 37141, 37449, 37483, 39299, 39333, 39706, 39740, 40252, 40286, 40594, 40628, 42614, 42648, 43029, 43063, 44001, 44035, 44394, 44428, 46601, 46635, 47033, 47067, 47981, 48015, 48314, 48348, 50391, 50425, 50820, 50854, 51366, 51400, 51708, 51742, 53754, 53788, 98536, 98571, 178939, 178974, 218316, 218351, 454158, 454197, 454533, 454572, 456006, 456045, 456402, 456441, 457406, 457445, 457794, 457833, 458995, 459034, 459713, 459752, 460151, 460190, 461564, 461603, 462869, 462908, 502362, 502397, 541739, 541774, 581116, 581151, 620493, 620528, 659870, 659905, 791945, 791993, 956742, 956793, 957605, 957656, 958468, 958519, 960339, 960390, 960843, 960894, 962123, 962174, 962619, 962670, 964282, 964333, 965266, 965317, 965861, 965912, 967707, 967758, 969366, 969417, 1158267, 1158316, 1359662, 1359697, 1399039, 1399074, 1480139, 1480173, 1518543, 1518580, 1519182, 1519219, 1519821, 1519858, 1521228, 1521265, 1521606, 1521643, 1522564, 1522601, 1522934, 1522971, 1524087, 1524124, 1524777, 1524814, 1525197, 1525234, 1526554, 1526591, 1527811, 1527848, 1682130, 1682165, 1712427, 1712517, 1793880, 1793915, 2110716, 2110742, 2111889, 2111915, 2112291, 2112317, 2112546, 2112572, 2113382, 2113408, 2114303, 2114329, 2152513, 2152548, 2154064, 2154099, 2154592, 2154627, 2154928, 2154963, 2156016, 2156051, 2157153, 2157188, 2195381, 2195416, 2196932, 2196967, 2197460, 2197495, 2197796, 2197831, 2198884, 2198919, 2200021, 2200056, 2200356, 2200382, 2201529, 2201555, 2201931, 2201957, 2202186, 2202212, 2203022, 2203048, 2203943, 2203969, 2210206, 2210232, 2255156, 2255191, 2300124, 2300159, 2306524, 2306550, 2307066, 2307092, 2308232, 2308258, 2308783, 2308809, 2309111, 2309137, 2310277, 2310303, 2310828, 2310854, 2311156, 2311182, 2312322, 2312348, 2312873, 2312899, 2352071, 2352107, 2353657, 2353693, 2354408, 2354444, 2354776, 2354802, 2355942, 2355968, 2356493, 2356519, 2395691, 2395727, 2397277, 2397313, 2398028, 2398064]"
"('Scanner.java', 'java.util.Scanner', 'getCompleteTokenInBuffer', '(?s).*', '""consumerA"" prio=10 tid=0x00007ff5a02e2800 nid=0x11d8 waiting for monitor entry [0x00007ff59ccf8000]\n   java.lang.Thread.State: BLOCKED (on object monitor)\n\tat com.github.olivergondza.dumpling.query.TopContendersTest$1Consumer.run(TopContendersTest.java:84)\n\t- waiting to lock <0x00000007d74de4c0> (a java.lang.Object)\n\n""producer"" prio=10 tid=0x00007ff5a02e2000 nid=0x11d7 waiting on condition [0x00007ff59cdf9000]\n   java.lang.Thread.State: TIMED_WAITING (sleeping)\n\tat java.lang.Thread.sleep(Native Method)\n\tat com.github.olivergondza.dumpling.cli.AbstractCliTest.pause(AbstractCliTest.java:54)\n\tat com.github.olivergondza.dumpling.query.TopContendersTest.access$000(TopContendersTest.java:43)\n\tat com.github.olivergondza.dumpling.query.TopContendersTest$1.run(TopContendersTest.java:68)\n\t- locked <0x00000007d74de4c0> (a java.lang.Object)\n\n""Service Thread"" daemon prio=10 tid=0x00007ff5a0175800 nid=0x11d5 runnable [0x0000000000000000]\n   java.lang.Thread.State: RUNNABLE\n\n""C2 CompilerThread1"" daemon prio=10 tid=0x00007f')","[2111450, 2111756, 2112009, 2153481, 2153886, 2154220, 2196349, 2196754, 2197088, 2201090, 2201396, 2201649]"
"('Scanner.java', 'java.util.Scanner', 'getCompleteTokenInBuffer', '(?s).*', '""JMX server connection timeout 27"" daemon prio=10 tid=0x00007fd67c00d000 nid=0x10ab in Object.wait() [0x00007fd68fbfa000]\n   java.lang.Thread.State: TIMED_WAITING (on object monitor)\n\tat java.lang.Object.wait(Native Method)\n\t- waiting on <0x0000000707d97cd0> (a [I)\n\tat com.sun.jmx.remote.internal.ServerCommunicatorAdmin$Timeout.run(ServerCommunicatorAdmin.java:168)\n\t- locked <0x0000000707d97cd0> (a [I)\n\tat java.lang.Thread.run(Thread.java:745)\n\n   Locked ownable synchronizers:\n\t- None\n\n""JMX client heartbeat 3"" daemon prio=10 tid=0x00007fd6b82e4800 nid=0x1043 waiting on condition [0x00007fd68fcfb000]\n   java.lang.Thread.State: TIMED_WAITING (sleeping)\n\tat java.lang.Thread.sleep(Native Method)\n\tat com.sun.jmx.remote.internal.ClientCommunicatorAdmin$Checker.run(ClientCommunicatorAdmin.java:174)\n\tat java.lang.Thread.run(Thread.java:745)\n\n   Locked ownable synchronizers:\n\t- None\n\n""JMX server connection timeout 23"" daemon prio=10 tid=0x00007fd67c00c000 nid=0x1042 in Object.wait() [0x00007fd68fdfc000]\n   java.lang.T')","[1519351, 1519633]"
"('FilterBuilder.java', 'org.reflections.util.FilterBuilder$Include', 'apply', 'com\\.github\\.olivergondza\\.dumpling.*', 'com.github.olivergondza.dumpling.cli.ThreaddumpCommandTest.class')","[55683, 74209, 100651, 119177, 141462, 159988, 180839, 199365, 220216, 238598, 256741, 276237, 296511, 316007, 336372, 355868, 376233, 395729, 416003, 435499, 464885, 483411, 504262, 522788, 543639, 562165, 583016, 601542, 622393, 640919, 661770, 680152, 698679, 721959, 745287, 769004, 794351, 817631, 840911, 864191, 887471, 910799, 934564, 971843, 995123, 1018403, 1041683, 1064963, 1088243, 1111523, 1134851, 1160675, 1183955, 1207235, 1230035, 1248465, 1266895, 1285325, 1303755, 1322185, 1340711, 1361562, 1380088, 1400939, 1419321, 1437368, 1455894, 1482252, 1500778, 1532133, 1550659, 1569963, 1588393, 1606919, 1626223, 1644653, 1663179, 1684464, 1714652, 1733034, 1751027, 1769553, 1796049, 1814479, 1833005, 1852309, 1870739, 1889169, 1907647, 1926514, 1944992, 1963859, 1982289, 2000767, 2019634, 2038160, 2057464, 2075894, 2094276, 2116227, 2134753, 2159095, 2177621, 2212303, 2230829, 2257271, 2275797, 2314858, 2333869, 2358478, 2377489]"
"('FilterBuilder.java', 'org.reflections.util.FilterBuilder$Include', 'apply', 'com\\.github\\.olivergondza\\.dumpling.*', 'com.github.olivergondza.dumpling.model.ThreadStatus$1.class')","[65335, 84369, 110303, 129337, 151114, 170148, 190491, 209525, 229868, 247996, 266901, 286905, 306671, 326675, 346532, 366536, 386393, 406397, 426163, 446167, 474537, 493571, 513914, 532948, 553291, 572325, 592668, 611702, 632045, 651079, 671422, 689550, 710871, 734151, 757733, 781196, 806543, 829823, 853103, 876383, 899663, 923245, 947010, 984035, 1007315, 1030595, 1053875, 1077155, 1100435, 1123715, 1147297, 1172867, 1196147, 1219427, 1239687, 1258117, 1276547, 1294977, 1313407, 1331837, 1350871, 1371214, 1390248, 1410591, 1428719, 1447020, 1466054, 1491904, 1510938, 1541785, 1560819, 1579615, 1598045, 1617079, 1635875, 1654305, 1673339, 1694116, 1724304, 1742432, 1760679, 1779713, 1805701, 1824131, 1843165, 1861961, 1880391, 1898821, 1917553, 1936166, 1954898, 1973511, 1991941, 2010673, 2029286, 2048320, 2067116, 2085546, 2103674, 2125879, 2144913, 2168747, 2187781, 2221955, 2240989, 2266923, 2285957, 2324764, 2344283, 2368384, 2387903]"
"('Scanner.java', 'java.util.Scanner', 'getCompleteTokenInBuffer', '(?s).*', '""Finalizer"" daemon prio=10 tid=0x00007f865006e000 nid=0xeab in Object.wait() [0x00007f863efcd000]\n   java.lang.Thread.State: WAITING (on object monitor)\n\tat java.lang.Object.wait(Native Method)\n\t- waiting on <0x00000007b0f00790> (a java.lang.ref.ReferenceQueue$Lock)\n\tat java.lang.ref.ReferenceQueue.remove(ReferenceQueue.java:135)\n\t- locked <0x00000007b0f00790> (a java.lang.ref.ReferenceQueue$Lock)\n\tat java.lang.ref.ReferenceQueue.remove(ReferenceQueue.java:151)\n\tat java.lang.ref.Finalizer$FinalizerThread.run(Finalizer.java:209)\n\n   Locked ownable synchronizers:\n\t- None\n\n""Reference Handler"" daemon prio=10 tid=0x00007f865006c000 nid=0xeaa in Object.wait() [0x00007f863f0ce000]\n   java.lang.Thread.State: WAITING (on object monitor)\n\tat java.lang.Object.wait(Native Method)\n\t- waiting on <0x00000007b0f10068> (a java.lang.ref.Reference$Lock)\n\tat java.lang.Object.wait(Object.java:503)\n\tat java.lang.ref.Reference$ReferenceHandler.run(Reference.java:133)\n\t- locked <0x00000007b0f10068> (a java.lang.ref.Reference$Lock)\n\n')",[20821]
"('FilterBuilder.java', 'org.reflections.util.FilterBuilder$Exclude', 'apply', 'java.lang.Object', 'com.github.olivergondza.dumpling.factory.ThreadDumpFactoryVendorTest.waitingTimed.groovy')","[56329, 74889, 101297, 119857, 142108, 160668, 181485, 200045, 220862, 239227, 257421, 276951, 297191, 316721, 337052, 356582, 376913, 396443, 416683, 436213, 465531, 484091, 504908, 523468, 544285, 562845, 583662, 602222, 623039, 641599, 662416, 680781, 699495, 722775, 746120, 769820, 795167, 818447, 841727, 865007, 888287, 911632, 935397, 972659, 995939, 1019219, 1042499, 1065779, 1089059, 1112339, 1135684, 1161491, 1184771, 1208051, 1230681, 1249111, 1267541, 1285971, 1304401, 1322831, 1341391, 1362208, 1380768, 1401585, 1419950, 1438014, 1456574, 1482898, 1501458, 1532779, 1551339, 1570609, 1589039, 1607599, 1626869, 1645299, 1663859, 1685110, 1715298, 1733663, 1751673, 1770233, 1796695, 1815125, 1833685, 1852955, 1871385, 1889815, 1908310, 1927160, 1945655, 1964505, 1982935, 2001430, 2020280, 2038840, 2058110, 2076540, 2094905, 2116873, 2135433, 2159741, 2178301, 2212949, 2231509, 2257917, 2276477, 2315521, 2334566, 2359141, 2378186]"
"('FilterBuilder.java', 'org.reflections.util.FilterBuilder$Include', 'apply', 'com\\.github\\.olivergondza\\.dumpling.*', 'com/github/olivergondza/dumpling/factory/PidRuntimeFactory$UnsupportedJdk.class')","[68878, 88098, 113846, 133066, 154657, 173877, 194034, 213254, 233411, 251446, 270630, 290820, 310400, 330590, 350261, 370451, 390122, 410312, 429892, 450082, 478080, 497300, 517457, 536677, 556834, 576054, 596211, 615431, 635588, 654808, 674965, 693000, 715344, 738624, 762299, 785669, 811016, 834296, 857576, 880856, 904136, 927811, 951576, 988508, 1011788, 1035068, 1058348, 1081628, 1104908, 1128188, 1151863, 1177340, 1200620, 1223900, 1243230, 1261660, 1280090, 1298520, 1316950, 1335380, 1354600, 1374757, 1393977, 1414134, 1432169, 1450563, 1469783, 1495447, 1514667, 1545328, 1564548, 1583158, 1601588, 1620808, 1639418, 1657848, 1677068, 1697659, 1727847, 1745882, 1764222, 1783442, 1809244, 1827674, 1846894, 1865504, 1883934, 1902364, 1921189, 1939709, 1958534, 1977054, 1995484, 2014309, 2032829, 2052049, 2070659, 2089089, 2107124, 2129422, 2148642, 2172290, 2191510, 2225498, 2244718, 2270466, 2289686, 2328400, 2348105, 2372020, 2391725]"
"('Scanner.java', 'java.util.Scanner', 'getCompleteTokenInBuffer', '(?s).*', '""RMI TCP Connection(1)-127.0.0.1"" daemon prio=10 tid=0x7fd688001800 nid=4161\n   java.lang.Thread.State: RUNNABLE\n\tat java.net.SocketInputStream.socketRead0(Native Method)\n\tat java.net.SocketInputStream.read(SocketInputStream.java:152)\n\tat java.net.SocketInputStream.read(SocketInputStream.java:122)\n\tat java.io.BufferedInputStream.fill(BufferedInputStream.java:235)\n\tat java.io.BufferedInputStream.read(BufferedInputStream.java:254)\n\t- locked <0x7077e3ab0> (a java.io.BufferedInputStream)\n\tat java.io.FilterInputStream.read(FilterInputStream.java:83)\n\tat sun.rmi.transport.tcp.TCPTransport.handleMessages(TCPTransport.java:549)\n\tat sun.rmi.transport.tcp.TCPTransport$ConnectionHandler.run0(TCPTransport.java:828)\n\tat sun.rmi.transport.tcp.TCPTransport$ConnectionHandler.access$400(TCPTransport.java:619)\n\tat sun.rmi.transport.tcp.TCPTransport$ConnectionHandler$1.run(TCPTransport.java:684)\n\tat sun.rmi.transport.tcp.TCPTransport$ConnectionHandler$1.run(TCPTransport.java:681)\n\tat java.security.AccessController.doPrivileged(Native Method)\n\tat sun.rmi.transport.tcp.TCPTransport$ConnectionHandler.run(TCPTransport.java:681)\n\tat java.util.concurrent.ThreadPoolExecutor.runWorker(ThreadPoolExecutor.java:1145)\n\tat java.util.concurrent.ThreadPoolExecutor$Worker.run(ThreadPoolExecutor.java:615)\n\tat java.lang.Thread.run(Thread.java:745)\n\n   Locked ownable synchronizers:\n\t- <0x7076de1c0> (a java.util.concurrent.ThreadPoolExecutor$Worker)\n\n\n""RMI RenewClean-[127.0.1.1:43573]"" daemon prio=10 tid=0x7fd6b82cf000 nid=4160\n   java.lang.Thread.State: TIMED_WAITING (on object monitor)\n\tat java.lang.Object.wait(Native Method)\n\t- waiting on <0x707761e70> (a java.lang.ref.ReferenceQueue$Lock)\n\tat java.lang.ref.ReferenceQueue.remove(ReferenceQueue.java:135)\n\tat sun.rmi.transport.DGCClient$EndpointEntry$RenewCleanThread.run(DGCClient.java:535)\n\tat java.lang.Thread.run(Thread.java:745)\n\n""RMI TCP Accept-0"" daemon prio=10 tid=0x7fd69400b800 nid=4159\n   java.lang.Thread.State: RUNNABLE\n\tat java.net.PlainSocketImpl.socketAccept(Native Method)\n\tat java.net.Ab')","[1528314, 1528374]"
"('FilterBuilder.java', 'org.reflections.util.FilterBuilder$Include', 'apply', 'com\\.github\\.olivergondza\\.dumpling.*', 'com.github.olivergondza.dumpling.factory.jmx.JmxLocalProcessConnector.class')","[68573, 87777, 113541, 132745, 154352, 173556, 193729, 212933, 233106, 251149, 270309, 290483, 310079, 330253, 349940, 370114, 389801, 409975, 429571, 449745, 477775, 496979, 517152, 536356, 556529, 575733, 595906, 615110, 635283, 654487, 674660, 692703, 714959, 738239, 761906, 785284, 810631, 833911, 857191, 880471, 903751, 927418, 951183, 988123, 1011403, 1034683, 1057963, 1081243, 1104523, 1127803, 1151470, 1176955, 1200235, 1223515, 1242925, 1261355, 1279785, 1298215, 1316645, 1335075, 1354279, 1374452, 1393656, 1413829, 1431872, 1450258, 1469462, 1495142, 1514346, 1545023, 1564227, 1582853, 1601283, 1620487, 1639113, 1657543, 1676747, 1697354, 1727542, 1745585, 1763917, 1783121, 1808939, 1827369, 1846573, 1865199, 1883629, 1902059, 1920876, 1939404, 1958221, 1976749, 1995179, 2013996, 2032524, 2051728, 2070354, 2088784, 2106827, 2129117, 2148321, 2171985, 2191189, 2225193, 2244397, 2270161, 2289365, 2328087, 2347776, 2371707, 2391396]"
"('Description.java', 'org.junit.runner.Description', 'methodAndClassNamePatternGroupOrDefault', '([\\s\\S]*)\\((.*)\\)', 'com.github.olivergondza.dumpling.cli.GroovyshCommandTest')","[1794198, 1794225]"
"('FilterBuilder.java', 'org.reflections.util.FilterBuilder$Include', 'apply', 'com\\.github\\.olivergondza\\.dumpling.*', 'com/github/olivergondza/dumpling/model/ProcessThread$4.class')","[65144, 84168, 110112, 129136, 150923, 169947, 190300, 209324, 229677, 247810, 266700, 286694, 306470, 326464, 346331, 366325, 386192, 406186, 425962, 445956, 474346, 493370, 513723, 532747, 553100, 572124, 592477, 611501, 631854, 650878, 671231, 689364, 710630, 733910, 757487, 780955, 806302, 829582, 852862, 876142, 899422, 922999, 946764, 983794, 1007074, 1030354, 1053634, 1076914, 1100194, 1123474, 1147051, 1172626, 1195906, 1219186, 1239496, 1257926, 1276356, 1294786, 1313216, 1331646, 1350670, 1371023, 1390047, 1410400, 1428533, 1446829, 1465853, 1491713, 1510737, 1541594, 1560618, 1579424, 1597854, 1616878, 1635684, 1654114, 1673138, 1693925, 1724113, 1742246, 1760488, 1779512, 1805510, 1823940, 1842964, 1861770, 1880200, 1898630, 1917357, 1935975, 1954702, 1973320, 1991750, 2010477, 2029095, 2048119, 2066925, 2085355, 2103488, 2125688, 2144712, 2168556, 2187580, 2221764, 2240788, 2266732, 2285756, 2324568, 2344077, 2368188, 2387697]"
"('FilterBuilder.java', 'org.reflections.util.FilterBuilder$Include', 'apply', 'com\\.github\\.olivergondza\\.dumpling.*', 'com.github.olivergondza.dumpling.model.StackTrace.class')","[63539, 82479, 108507, 127447, 149318, 168258, 188695, 207635, 228072, 246247, 265011, 284921, 304781, 324691, 344642, 364552, 384503, 404413, 424273, 444183, 472741, 491681, 512118, 531058, 551495, 570435, 590872, 609812, 630249, 649189, 669626, 687801, 708605, 731885, 755420, 778930, 804277, 827557, 850837, 874117, 897397, 920932, 944697, 981769, 1005049, 1028329, 1051609, 1074889, 1098169, 1121449, 1144984, 1170601, 1193881, 1217161, 1237891, 1256321, 1274751, 1293181, 1311611, 1330041, 1348981, 1369418, 1388358, 1408795, 1426970, 1445224, 1464164, 1490108, 1509048, 1539989, 1558929, 1577819, 1596249, 1615189, 1634079, 1652509, 1671449, 1692320, 1722508, 1740683, 1758883, 1777823, 1803905, 1822335, 1841275, 1860165, 1878595, 1897025, 1915710, 1934370, 1953055, 1971715, 1990145, 2008830, 2027490, 2046430, 2065320, 2083750, 2101925, 2124083, 2143023, 2166951, 2185891, 2220159, 2239099, 2265127, 2284067, 2322921, 2342346, 2366541, 2385966]"
"('FilterBuilder.java', 'org.reflections.util.FilterBuilder$Include', 'apply', 'com\\.github\\.olivergondza\\.dumpling.*', 'com.github.olivergondza.dumpling.cli.Factories.class')","[61521, 80355, 106489, 125323, 147300, 166134, 186677, 205511, 226054, 244282, 262887, 282691, 302657, 322461, 342518, 362322, 382379, 402183, 422149, 441953, 470723, 489557, 510100, 528934, 549477, 568311, 588854, 607688, 628231, 647065, 667608, 685836, 706057, 729337, 752819, 776382, 801729, 825009, 848289, 871569, 894849, 918331, 942096, 979221, 1002501, 1025781, 1049061, 1072341, 1095621, 1118901, 1142383, 1168053, 1191333, 1214613, 1235873, 1254303, 1272733, 1291163, 1309593, 1328023, 1346857, 1367400, 1386234, 1406777, 1425005, 1443206, 1462040, 1488090, 1506924, 1537971, 1556805, 1575801, 1594231, 1613065, 1632061, 1650491, 1669325, 1690302, 1720490, 1738718, 1756865, 1775699, 1801887, 1820317, 1839151, 1858147, 1876577, 1895007, 1913639, 1932352, 1950984, 1969697, 1988127, 2006759, 2025472, 2044306, 2063302, 2081732, 2099960, 2122065, 2140899, 2164933, 2183767, 2218141, 2236975, 2263109, 2281943, 2320850, 2340169, 2364470, 2383789]"
"('Description.java', 'org.junit.runner.Description', 'methodAndClassNamePatternGroupOrDefault', '([\\s\\S]*)\\((.*)\\)', 'cliQuery(com.github.olivergondza.dumpling.query.DeadlocksTest)')",[1672]
"('Scanner.java', 'java.util.Scanner', 'getCompleteTokenInBuffer', '(?s).*', '""main"" prio=10 tid=0x00007fd6fc008800 nid=0xdb8 waiting on condition [0x00007fd7055bb000]\n   java.lang.Thread.State: WAITING (parking)\n\tat sun.misc.Unsafe.park(Native Method)\n\t- parking to wait for  <0x00000007072210a0> (a java.util.concurrent.FutureTask)\n\tat java.util.concurrent.locks.LockSupport.park(LockSupport.java:186)\n\tat java.util.concurrent.FutureTask.awaitDone(FutureTask.java:425)\n\tat java.util.concurrent.FutureTask.get(FutureTask.java:187)\n\tat org.apache.maven.surefire.junitcore.pc.SharedThreadPoolStrategy.finished(SharedThreadPoolStrategy.java:60)\n\tat org.apache.maven.surefire.junitcore.pc.Scheduler.finished(Scheduler.java:372)\n\tat org.junit.runners.ParentRunner.runChildren(ParentRunner.java:295)\n\tat org.junit.runners.ParentRunner.access$000(ParentRunner.java:58)\n\tat org.junit.runners.ParentRunner$2.evaluate(ParentRunner.java:268)\n\tat org.junit.runners.ParentRunner.run(ParentRunner.java:363)\n\tat org.junit.runners.Suite.runChild(Suite.java:128)\n\tat org.junit.runners.Suite.runChild(Suite.java:27)\n\tat org.junit.runners.ParentRunner$3.run(ParentRunner.java:290)\n\tat org.apache.maven.surefire.junitcore.pc.Scheduler$1.run(Scheduler.java:393)\n\tat org.apache.maven.surefire.junitcore.pc.InvokerStrategy.schedule(InvokerStrategy.java:54)\n\tat org.apache.maven.surefire.junitcore.pc.Scheduler.schedule(Scheduler.java:352)\n\tat org.junit.runners.ParentRunner.runChildren(ParentRunner.java:288)\n\tat org.junit.runners.ParentRunner.access$000(ParentRunner.java:58)\n\tat org.junit.runners.ParentRunner$2.evaluate(ParentRunner.java:268)\n\tat org.junit.runners.ParentRunner.run(ParentRunner.java:363)\n\tat org.junit.runners.Suite.runChild(Suite.java:128)\n\tat org.junit.runners.Suite.runChild(Suite.java:27)\n\tat org.junit.runners.ParentRunner$3.run(ParentRunner.java:290)\n\tat org.apache.maven.surefire.junitcore.pc.Scheduler$1.run(Scheduler.java:393)\n\tat org.apache.maven.surefire.junitcore.pc.InvokerStrategy.schedule(InvokerStrategy.java:54)\n\tat org.apache.maven.surefire.junitcore.pc.Scheduler.schedule(Scheduler.java:352)\n\tat org.junit.runners.ParentRunner.runChildren(ParentRunner.java:288)\n\tat org.junit.runners.ParentRunner.access$000(ParentRunner.java:58)\n\tat org.junit.runners.ParentRunner$2.evaluate(ParentRunner.java:268)\n\tat org.junit.runners.ParentRunner.run(ParentRunner.java:363)\n\tat org.apache.maven.surefire.junitcore.pc.ParallelComputerBuilder$PC$1.run(ParallelComputerBuilder.java:554)\n\tat org.apache.maven.surefire.junitcore.JUnitCore.run(JUnitCore.java:55)\n\tat org.apache.maven.surefire.junitcore.JUnitCoreWrapper.createRequestAndRun(JUnitCoreWrapper.java:137)\n\tat org.apache.maven.surefire.junitcore.JUnitCoreWrapper.executeEager(JUnitCoreWrapper.java:107)\n\tat org.apache.maven.surefire.junitcore.JUnitCoreWrapper.execute(JUnitCoreWrapper.java:83)\n\tat org.apache.maven.surefire.junitcore.JUnitCoreWrapper.execute(JUnitCoreWrapper.java:75)\n\tat org.apache.maven.surefire.junitcore.JUnitCoreProvider.invoke(JUnitCoreProvider.java:161)\n\tat org.apache.maven.surefire.booter.ForkedBooter.invokeProviderInSameClassLoader(ForkedBooter.java:290)\n\tat org.apache.maven.surefire.booter.ForkedBooter.runSuitesInProcess(ForkedBooter.java:242)\n\tat org.apache.maven.surefire.booter.ForkedBooter.main(ForkedBooter.java:121)\n\n   Locked ownable synchronizers:\n\t- None\n\n""VM Thread"" prio=10 tid=0x00007fd6fc12f800 nid=0xdbd runnable \n\n""GC task thread#0 (ParallelGC)"" prio=10 tid=0x00007fd6fc01e800 nid=0xdb9 runnable \n\n""GC task thread#1 (ParallelGC)"" prio=10 tid=0x00007fd6fc020800 nid=0xdba runnable \n\n""GC task thread#2 (ParallelGC)"" prio=10 tid=0x00007fd6fc022000 nid=0xdbb runnable \n\n""GC task thread#3 (ParallelGC)"" prio=10 tid=0x00007fd6fc024000 nid=0xdbc runnable \n\n""VM Periodic Task Thread"" prio=10 tid=0x00007fd6fc2fe000 nid=0xdc4 waiting on condition \n\nJNI global references: 227\n\n')","[461366, 461781, 461959, 462137, 462315, 462493, 462671, 463007]"
"('FilterBuilder.java', 'org.reflections.util.FilterBuilder$Include', 'apply', 'com\\.github\\.olivergondza\\.dumpling.*', 'com.github.olivergondza.dumpling.factory.ThreadDumpFactoryVendorTest.parked.groovy')","[57635, 76265, 102603, 121233, 143414, 162044, 182791, 201421, 222168, 240498, 258797, 278397, 298567, 318167, 338428, 358028, 378289, 397889, 418059, 437659, 466837, 485467, 506214, 524844, 545591, 564221, 584968, 603598, 624345, 642975, 663722, 682052, 701151, 724431, 747811, 771476, 796823, 820103, 843383, 866663, 889943, 913323, 937088, 974315, 997595, 1020875, 1044155, 1067435, 1090715, 1113995, 1137375, 1163147, 1186427, 1209707, 1231987, 1250417, 1268847, 1287277, 1305707, 1324137, 1342767, 1363514, 1382144, 1402891, 1421221, 1439320, 1457950, 1484204, 1502834, 1534085, 1552715, 1571915, 1590345, 1608975, 1628175, 1646605, 1665235, 1686416, 1716604, 1734934, 1752979, 1771609, 1798001, 1816431, 1835061, 1854261, 1872691, 1891121, 1909651, 1928466, 1946996, 1965811, 1984241, 2002771, 2021586, 2040216, 2059416, 2077846, 2096176, 2118179, 2136809, 2161047, 2179677, 2214255, 2232885, 2259223, 2277853, 2316862, 2335977, 2360482, 2379597]"
"('FilterBuilder.java', 'org.reflections.util.FilterBuilder$Include', 'apply', 'com\\.github\\.olivergondza\\.dumpling.*', 'com.github.olivergondza.dumpling.cli.ProcessStream.class')","[60647, 79435, 105615, 124403, 146426, 165214, 185803, 204591, 225180, 243431, 261967, 281725, 301737, 321495, 341598, 361356, 381459, 401217, 421229, 440987, 469849, 488637, 509226, 528014, 548603, 567391, 587980, 606768, 627357, 646145, 666734, 684985, 704953, 728233, 751692, 775278, 800625, 823905, 847185, 870465, 893745, 917204, 940969, 978117, 1001397, 1024677, 1047957, 1071237, 1094517, 1117797, 1141256, 1166949, 1190229, 1213509, 1234999, 1253429, 1271859, 1290289, 1308719, 1327149, 1345937, 1366526, 1385314, 1405903, 1424154, 1442332, 1461120, 1487216, 1506004, 1537097, 1555885, 1574927, 1593357, 1612145, 1631187, 1649617, 1668405, 1689428, 1719616, 1737867, 1755991, 1774779, 1801013, 1819443, 1838231, 1857273, 1875703, 1894133, 1912742, 1931478, 1950087, 1968823, 1987253, 2005862, 2024598, 2043386, 2062428, 2080858, 2099109, 2121191, 2139979, 2164059, 2182847, 2217267, 2236055, 2262235, 2281023, 2319953, 2339226, 2363573, 2382846]"
"('Scanner.java', 'java.util.Scanner', 'getCompleteTokenInBuffer', '(?s).*', '2018-01-11 20:22:37\nFull thread dump Java HotSpot(TM) 64-Bit Server VM (24.80-b11 mixed mode):\n\n""remotely-observed-thread"" daemon prio=10 tid=0x00007fd6b80b7000 nid=0x10da in Object.wait() [0x00007fd68f8f7000]\n   java.lang.Thread.State: WAITING (on object monitor)\n\tat java.lang.Object.wait(Native Method)\n\t- waiting on <0x00000007af6d4360> (a com.github.olivergondza.dumpling.TestThread$1)\n\tat java.lang.Object.wait(Object.java:503)\n\tat com.github.olivergondza.dumpling.TestThread$1.run(TestThread.java:76)\n\t- locked <0x00000007af6d4360> (a com.github.olivergondza.dumpling.TestThread$1)\n\n   Locked ownable synchronizers:\n\t- None\n\n""JMX client heartbeat 5"" daemon prio=10 tid=0x00007fd6b80b3800 nid=0x10c4 waiting on condition [0x00007fd68f9f8000]\n   java.lang.Thread.State: TIMED_WAITING (sleeping)\n\tat java.lang.Thread.sleep(Native Method)\n\tat com.sun.jmx.remote.internal.ClientCommunicatorAdmin$Checker.run(ClientCommunicatorAdmin.java:174)\n\tat java.lang.Thread.run(Thread.java:745)\n\n   Locked ownable synchronizers:\n\t- N')",[956104]
"('FilterBuilder.java', 'org.reflections.util.FilterBuilder$Include', 'apply', 'com\\.github\\.olivergondza\\.dumpling.*', 'com/github/olivergondza/dumpling/factory/ThreadDumpFactoryVendorTest/_init.groovy')","[56142, 74692, 101110, 119660, 141921, 160471, 181298, 199848, 220675, 239045, 257224, 276744, 296994, 316514, 336855, 356375, 376716, 396236, 416486, 436006, 465344, 483894, 504721, 523271, 544098, 562648, 583475, 602025, 622852, 641402, 662229, 680599, 699258, 722538, 745878, 769583, 794930, 818210, 841490, 864770, 888050, 911390, 935155, 972422, 995702, 1018982, 1042262, 1065542, 1088822, 1112102, 1135442, 1161254, 1184534, 1207814, 1230494, 1248924, 1267354, 1285784, 1304214, 1322644, 1341194, 1362021, 1380571, 1401398, 1419768, 1437827, 1456377, 1482711, 1501261, 1532592, 1551142, 1570422, 1588852, 1607402, 1626682, 1645112, 1663662, 1684923, 1715111, 1733481, 1751486, 1770036, 1796508, 1814938, 1833488, 1852768, 1871198, 1889628, 1908118, 1926973, 1945463, 1964318, 1982748, 2001238, 2020093, 2038643, 2057923, 2076353, 2094723, 2116686, 2135236, 2159554, 2178104, 2212762, 2231312, 2257730, 2276280, 2315329, 2334364, 2358949, 2377984]"
"('Description.java', 'org.junit.runner.Description', 'methodAndClassNamePatternGroupOrDefault', '([\\s\\S]*)\\((.*)\\)', 'parked(com.github.olivergondza.dumpling.factory.ThreadDumpFactoryVendorTest)')",[132]
"('FilterBuilder.java', 'org.reflections.util.FilterBuilder$Include', 'apply', 'com\\.github\\.olivergondza\\.dumpling.*', 'com/github/olivergondza/dumpling/model/StackTrace.class')","[63502, 82440, 108470, 127408, 149281, 168219, 188658, 207596, 228035, 246211, 264972, 284880, 304742, 324650, 344603, 364511, 384464, 404372, 424234, 444142, 472704, 491642, 512081, 531019, 551458, 570396, 590835, 609773, 630212, 649150, 669589, 687765, 708558, 731838, 755372, 778883, 804230, 827510, 850790, 874070, 897350, 920884, 944649, 981722, 1005002, 1028282, 1051562, 1074842, 1098122, 1121402, 1144936, 1170554, 1193834, 1217114, 1237854, 1256284, 1274714, 1293144, 1311574, 1330004, 1348942, 1369381, 1388319, 1408758, 1426934, 1445187, 1464125, 1490071, 1509009, 1539952, 1558890, 1577782, 1596212, 1615150, 1634042, 1652472, 1671410, 1692283, 1722471, 1740647, 1758846, 1777784, 1803868, 1822298, 1841236, 1860128, 1878558, 1896988, 1915672, 1934333, 1953017, 1971678, 1990108, 2008792, 2027453, 2046391, 2065283, 2083713, 2101889, 2124046, 2142984, 2166914, 2185852, 2220122, 2239060, 2265090, 2284028, 2322883, 2342306, 2366503, 2385926]"
"('FilterBuilder.java', 'org.reflections.util.FilterBuilder$Include', 'apply', 'com\\.github\\.olivergondza\\.dumpling.*', 'com/github/olivergondza/dumpling/factory/jmx/JmxLocalProcessConnector.class')","[68536, 87738, 113504, 132706, 154315, 173517, 193692, 212894, 233069, 251113, 270270, 290442, 310040, 330212, 349901, 370073, 389762, 409934, 429532, 449704, 477738, 496940, 517115, 536317, 556492, 575694, 595869, 615071, 635246, 654448, 674623, 692667, 714912, 738192, 761858, 785237, 810584, 833864, 857144, 880424, 903704, 927370, 951135, 988076, 1011356, 1034636, 1057916, 1081196, 1104476, 1127756, 1151422, 1176908, 1200188, 1223468, 1242888, 1261318, 1279748, 1298178, 1316608, 1335038, 1354240, 1374415, 1393617, 1413792, 1431836, 1450221, 1469423, 1495105, 1514307, 1544986, 1564188, 1582816, 1601246, 1620448, 1639076, 1657506, 1676708, 1697317, 1727505, 1745549, 1763880, 1783082, 1808902, 1827332, 1846534, 1865162, 1883592, 1902022, 1920838, 1939367, 1958183, 1976712, 1995142, 2013958, 2032487, 2051689, 2070317, 2088747, 2106791, 2129080, 2148282, 2171948, 2191150, 2225156, 2244358, 2270124, 2289326, 2328049, 2347736, 2371669, 2391356]"
"('Description.java', 'org.junit.runner.Description', 'methodAndClassNamePatternGroupOrDefault', '([\\s\\S]*)\\((.*)\\)', 'groovyIntersect(com.github.olivergondza.dumpling.cli.GroovyRuntimeTest)')",[902]
"('ThreadDumpFactory.java', 'com.github.olivergondza.dumpling.factory.ThreadDumpFactory', 'initHeader', '#\\d+', '[0x00007fd6e00ee000]')","[457873, 457912, 962722, 962773, 1523009, 1523046]"
"('FilterBuilder.java', 'org.reflections.util.FilterBuilder$Include', 'apply', 'com\\.github\\.olivergondza\\.dumpling.*', 'com.github.olivergondza.dumpling.DisposeRule$1.class')","[70767, 90087, 115735, 135055, 156546, 175866, 195923, 215243, 235300, 253285, 272619, 292909, 312389, 332679, 352250, 372540, 392111, 412401, 431881, 452171, 479969, 499289, 519346, 538666, 558723, 578043, 598100, 617420, 637477, 656797, 676854, 694839, 717733, 741013, 764738, 788058, 813405, 836685, 859965, 883245, 906525, 930250, 954015, 990897, 1014177, 1037457, 1060737, 1084017, 1107297, 1130577, 1154302, 1179729, 1203009, 1226289, 1245119, 1263549, 1281979, 1300409, 1318839, 1337269, 1356589, 1376646, 1395966, 1416023, 1434008, 1452452, 1471772, 1497336, 1516656, 1547217, 1566537, 1585047, 1603477, 1622797, 1641307, 1659737, 1679057, 1699548, 1729736, 1747721, 1766111, 1785431, 1811133, 1829563, 1848883, 1867393, 1885823, 1904253, 1923128, 1941598, 1960473, 1978943, 1997373, 2016248, 2034718, 2054038, 2072548, 2090978, 2108963, 2131311, 2150631, 2174179, 2193499, 2227387, 2246707, 2272355, 2291675, 2330339, 2350144, 2373959, 2393764]"
"('FilterBuilder.java', 'org.reflections.util.FilterBuilder$Include', 'apply', 'com\\.github\\.olivergondza\\.dumpling.*', 'com/github/olivergondza/dumpling/cli/ProcessStream.class')","[60610, 79396, 105578, 124364, 146389, 165175, 185766, 204552, 225143, 243395, 261928, 281684, 301698, 321454, 341559, 361315, 381420, 401176, 421190, 440946, 469812, 488598, 509189, 527975, 548566, 567352, 587943, 606729, 627320, 646106, 666697, 684949, 704906, 728186, 751644, 775231, 800578, 823858, 847138, 870418, 893698, 917156, 940921, 978070, 1001350, 1024630, 1047910, 1071190, 1094470, 1117750, 1141208, 1166902, 1190182, 1213462, 1234962, 1253392, 1271822, 1290252, 1308682, 1327112, 1345898, 1366489, 1385275, 1405866, 1424118, 1442295, 1461081, 1487179, 1505965, 1537060, 1555846, 1574890, 1593320, 1612106, 1631150, 1649580, 1668366, 1689391, 1719579, 1737831, 1755954, 1774740, 1800976, 1819406, 1838192, 1857236, 1875666, 1894096, 1912704, 1931441, 1950049, 1968786, 1987216, 2005824, 2024561, 2043347, 2062391, 2080821, 2099073, 2121154, 2139940, 2164022, 2182808, 2217230, 2236016, 2262198, 2280984, 2319915, 2339186, 2363535, 2382806]"
"('Description.java', 'org.junit.runner.Description', 'methodAndClassNamePatternGroupOrDefault', '([\\s\\S]*)\\((.*)\\)', 'parkedWithBlocker(com.github.olivergondza.dumpling.factory.ThreadDumpFactoryVendorTest)')",[220]
"('Description.java', 'org.junit.runner.Description', 'methodAndClassNamePatternGroupOrDefault', '([\\s\\S]*)\\((.*)\\)', 'ignoreWaitLock(com.github.olivergondza.dumpling.factory.ThreadDumpFactoryVendorTest)')",[198]
"('Description.java', 'org.junit.runner.Description', 'methodAndClassNamePatternGroupOrDefault', '([\\s\\S]*)\\((.*)\\)', 'com.github.olivergondza.dumpling.cli.ThreaddumpCommandTest')","[254794, 254821]"
"('FilterBuilder.java', 'org.reflections.util.FilterBuilder$Include', 'apply', 'com\\.github\\.olivergondza\\.dumpling.*', 'com.github.olivergondza.dumpling.factory.ThreadDumpFactoryVendorTest.threadNameWithLinebreak.groovy')","[56403, 74967, 101371, 119935, 142182, 160746, 181559, 200123, 220936, 239299, 257499, 277033, 297269, 316803, 337130, 356664, 376991, 396525, 416761, 436295, 465605, 484169, 504982, 523546, 544359, 562923, 583736, 602300, 623113, 641677, 662490, 680853, 699589, 722869, 746216, 769914, 795261, 818541, 841821, 865101, 888381, 911728, 935493, 972753, 996033, 1019313, 1042593, 1065873, 1089153, 1112433, 1135780, 1161585, 1184865, 1208145, 1230755, 1249185, 1267615, 1286045, 1304475, 1322905, 1341469, 1362282, 1380846, 1401659, 1420022, 1438088, 1456652, 1482972, 1501536, 1532853, 1551417, 1570683, 1589113, 1607677, 1626943, 1645373, 1663937, 1685184, 1715372, 1733735, 1751747, 1770311, 1796769, 1815199, 1833763, 1853029, 1871459, 1889889, 1908386, 1927234, 1945731, 1964579, 1983009, 2001506, 2020354, 2038918, 2058184, 2076614, 2094977, 2116947, 2135511, 2159815, 2178379, 2213023, 2231587, 2257991, 2276555, 2315597, 2334646, 2359217, 2378266]"
"('FilterBuilder.java', 'org.reflections.util.FilterBuilder$Include', 'apply', 'com\\.github\\.olivergondza\\.dumpling.*', 'com.github.olivergondza.dumpling.cli.ProcessRuntimeOptionHandlerTest.class')","[54731, 73207, 99699, 118175, 140510, 158986, 179887, 198363, 219264, 237671, 255739, 275185, 295509, 314955, 335370, 354816, 375231, 394677, 415001, 434447, 463933, 482409, 503310, 521786, 542687, 561163, 582064, 600540, 621441, 639917, 660818, 679225, 697477, 720757, 744060, 767802, 793149, 816429, 839709, 862989, 886269, 909572, 933337, 970641, 993921, 1017201, 1040481, 1063761, 1087041, 1110321, 1133624, 1159473, 1182753, 1206033, 1229083, 1247513, 1265943, 1284373, 1302803, 1321233, 1339709, 1360610, 1379086, 1399987, 1418394, 1436416, 1454892, 1481300, 1499776, 1531181, 1549657, 1569011, 1587441, 1605917, 1625271, 1643701, 1662177, 1683512, 1713700, 1732107, 1750075, 1768551, 1795097, 1813527, 1832003, 1851357, 1869787, 1888217, 1906670, 1925562, 1944015, 1962907, 1981337, 1999790, 2018682, 2037158, 2056512, 2074942, 2093349, 2115275, 2133751, 2158143, 2176619, 2211351, 2229827, 2256319, 2274795, 2313881, 2332842, 2357501, 2376462]"
"('Description.java', 'org.junit.runner.Description', 'methodAndClassNamePatternGroupOrDefault', '([\\s\\S]*)\\((.*)\\)', 'verbatimScript(com.github.olivergondza.dumpling.cli.GroovyCommandTest)')",[1144]
"('ThreadDumpFactory.java', 'com.github.olivergondza.dumpling.factory.ThreadDumpFactory', 'initHeader', '#\\d+', '[0x00007f2c50dfc000]')","[4010, 4044]"
"('ThreadDumpFactory.java', 'com.github.olivergondza.dumpling.factory.ThreadDumpFactory', 'initHeader', '#\\d+', '[0x00007f1074dce000]')","[52776, 52810]"
"('Scanner.java', 'java.util.Scanner', 'getCompleteTokenInBuffer', '(?s).*', '""main"" prio=10 tid=0x00007f2c48007800 nid=0xdca runnable [0x00007f2c50dfc000]\n   java.lang.Thread.State: RUNNABLE\n\tat org.codehaus.groovy.runtime.ArrayUtil.createArray(ArrayUtil.java:66)\n\tat org.codehaus.groovy.runtime.callsite.AbstractCallSite.call(AbstractCallSite.java:120)\n\tat dumpling-script.run(dumpling-script:21)\n\tat groovy.lang.GroovyShell.runScriptOrMainOrTestOrRunnable(GroovyShell.java:258)\n\tat groovy.lang.GroovyShell.run(GroovyShell.java:550)\n\tat com.github.olivergondza.dumpling.cli.GroovyCommand.run(GroovyCommand.java:94)\n\tat com.github.olivergondza.dumpling.cli.Main.run(Main.java:75)\n\tat com.github.olivergondza.dumpling.cli.Main.main(Main.java:58)\n\n   Locked ownable synchronizers:\n\t- None\n\n""VM Thread"" prio=10 tid=0x00007f2c48067800 nid=0xdcf runnable \n\n""GC task thread#0 (ParallelGC)"" prio=10 tid=0x00007f2c4801d800 nid=0xdcb runnable \n\n""GC task thread#1 (ParallelGC)"" prio=10 tid=0x00007f2c4801f800 nid=0xdcc runnable \n\n""GC task thread#2 (ParallelGC)"" prio=10 tid=0x00007f2c48021000 nid=0xdcd runnable')","[3906, 4097, 4219, 4341]"
"('FilterBuilder.java', 'org.reflections.util.FilterBuilder$Include', 'apply', 'com\\.github\\.olivergondza\\.dumpling.*', 'com.github.olivergondza.dumpling.TestThread$2.class')","[71679, 91047, 116647, 136015, 157458, 176826, 196835, 216203, 236212, 254173, 273579, 293917, 313349, 333687, 353210, 373548, 393071, 413409, 432841, 453179, 480881, 500249, 520258, 539626, 559635, 579003, 599012, 618380, 638389, 657757, 677766, 695727, 718885, 742165, 765914, 789210, 814557, 837837, 861117, 884397, 907677, 931426, 955191, 992049, 1015329, 1038609, 1061889, 1085169, 1108449, 1131729, 1155478, 1180881, 1204161, 1227441, 1246031, 1264461, 1282891, 1301321, 1319751, 1338181, 1357549, 1377558, 1396926, 1416935, 1434896, 1453364, 1472732, 1498248, 1517616, 1548129, 1567497, 1585959, 1604389, 1623757, 1642219, 1660649, 1680017, 1700460, 1730648, 1748609, 1767023, 1786391, 1812045, 1830475, 1849843, 1868305, 1886735, 1905165, 1924064, 1942510, 1961409, 1979855, 1998285, 2017184, 2035630, 2054998, 2073460, 2091890, 2109851, 2132223, 2151591, 2175091, 2194459, 2228299, 2247667, 2273267, 2292635, 2331275, 2351128, 2374895, 2394748]"
"('FilterBuilder.java', 'org.reflections.util.FilterBuilder$Include', 'apply', 'com\\.github\\.olivergondza\\.dumpling.*', 'com/github/olivergondza/dumpling/cli/Factories$Jmx.class')","[59962, 78714, 104930, 123682, 145741, 164493, 185118, 203870, 224495, 242764, 261246, 280968, 301016, 320738, 340877, 360599, 380738, 400460, 420508, 440230, 469164, 487916, 508541, 527293, 547918, 566670, 587295, 606047, 626672, 645424, 666049, 684318, 704088, 727368, 750809, 774413, 799760, 823040, 846320, 869600, 892880, 916321, 940086, 977252, 1000532, 1023812, 1047092, 1070372, 1093652, 1116932, 1140373, 1166084, 1189364, 1212644, 1234314, 1252744, 1271174, 1289604, 1308034, 1326464, 1345216, 1365841, 1384593, 1405218, 1423487, 1441647, 1460399, 1486531, 1505283, 1536412, 1555164, 1574242, 1592672, 1611424, 1630502, 1648932, 1667684, 1688743, 1718931, 1737200, 1755306, 1774058, 1800328, 1818758, 1837510, 1856588, 1875018, 1893448, 1912039, 1930793, 1949384, 1968138, 1986568, 2005159, 2023913, 2042665, 2061743, 2080173, 2098442, 2120506, 2139258, 2163374, 2182126, 2216582, 2235334, 2261550, 2280302, 2319250, 2338487, 2362870, 2382107]"
"('FilterBuilder.java', 'org.reflections.util.FilterBuilder$Include', 'apply', 'com\\.github\\.olivergondza\\.dumpling.*', 'com/github/olivergondza/dumpling/cli/Main$ProcessRuntimeOptionHandler.class')","[59428, 78152, 104396, 123120, 145207, 163931, 184584, 203308, 223961, 242244, 260684, 280378, 300454, 320148, 340315, 360009, 380176, 399870, 419946, 439640, 468630, 487354, 508007, 526731, 547384, 566108, 586761, 605485, 626138, 644862, 665515, 683798, 703414, 726694, 750121, 773739, 799086, 822366, 845646, 868926, 892206, 915633, 939398, 976578, 999858, 1023138, 1046418, 1069698, 1092978, 1116258, 1139685, 1165410, 1188690, 1211970, 1233780, 1252210, 1270640, 1289070, 1307500, 1325930, 1344654, 1365307, 1384031, 1404684, 1422967, 1441113, 1459837, 1485997, 1504721, 1535878, 1554602, 1573708, 1592138, 1610862, 1629968, 1648398, 1667122, 1688209, 1718397, 1736680, 1754772, 1773496, 1799794, 1818224, 1836948, 1856054, 1874484, 1892914, 1911491, 1930259, 1948836, 1967604, 1986034, 2004611, 2023379, 2042103, 2061209, 2079639, 2097922, 2119972, 2138696, 2162840, 2181564, 2216048, 2234772, 2261016, 2279740, 2318702, 2337911, 2362322, 2381531]"
"('FilterBuilder.java', 'org.reflections.util.FilterBuilder$Exclude', 'apply', 'java.lang.Object', 'com.github.olivergondza.dumpling.factory.ThreadDumpFactoryVendorTest.parkedTimed.groovy')","[57785, 76423, 102753, 121391, 143564, 162202, 182941, 201579, 222318, 240644, 258955, 278563, 298725, 318333, 338586, 358194, 378447, 398055, 418217, 437825, 466987, 485625, 506364, 525002, 545741, 564379, 585118, 603756, 624495, 643133, 663872, 682198, 701341, 724621, 748005, 771666, 797013, 820293, 843573, 866853, 890133, 913517, 937282, 974505, 997785, 1021065, 1044345, 1067625, 1090905, 1114185, 1137569, 1163337, 1186617, 1209897, 1232137, 1250567, 1268997, 1287427, 1305857, 1324287, 1342925, 1363664, 1382302, 1403041, 1421367, 1439470, 1458108, 1484354, 1502992, 1534235, 1552873, 1572065, 1590495, 1609133, 1628325, 1646755, 1665393, 1686566, 1716754, 1735080, 1753129, 1771767, 1798151, 1816581, 1835219, 1854411, 1872841, 1891271, 1909805, 1928616, 1947150, 1965961, 1984391, 2002925, 2021736, 2040374, 2059566, 2077996, 2096322, 2118329, 2136967, 2161197, 2179835, 2214405, 2233043, 2259373, 2278011, 2317016, 2336139, 2360636, 2379759]"
"('FilterBuilder.java', 'org.reflections.util.FilterBuilder$Include', 'apply', 'com\\.github\\.olivergondza\\.dumpling.*', 'com.github.olivergondza.dumpling.query.TopContendersTest.class')","[54161, 72607, 99129, 117575, 139940, 158386, 179317, 197763, 218694, 237116, 255139, 274555, 294909, 314325, 334770, 354186, 374631, 394047, 414401, 433817, 463363, 481809, 502740, 521186, 542117, 560563, 581494, 599940, 620871, 639317, 660248, 678670, 696757, 720037, 743325, 767082, 792429, 815709, 838989, 862269, 885549, 908837, 932602, 969921, 993201, 1016481, 1039761, 1063041, 1086321, 1109601, 1132889, 1158753, 1182033, 1205313, 1228513, 1246943, 1265373, 1283803, 1302233, 1320663, 1339109, 1360040, 1378486, 1399417, 1417839, 1435846, 1454292, 1480730, 1499176, 1530611, 1549057, 1568441, 1586871, 1605317, 1624701, 1643131, 1661577, 1682942, 1713130, 1731552, 1749505, 1767951, 1794527, 1812957, 1831403, 1850787, 1869217, 1887647, 1906085, 1924992, 1943430, 1962337, 1980767, 1999205, 2018112, 2036558, 2055942, 2074372, 2092794, 2114705, 2133151, 2157573, 2176019, 2210781, 2229227, 2255749, 2274195, 2313296, 2332227, 2356916, 2375847]"
"('FilterBuilder.java', 'org.reflections.util.FilterBuilder$Include', 'apply', 'com\\.github\\.olivergondza\\.dumpling.*', 'com.github.olivergondza.dumpling.query.command.blocking-tree.usage')","[66707, 85813, 111675, 130781, 152486, 171592, 191863, 210969, 231240, 249332, 268345, 288421, 308115, 328191, 347976, 368052, 387837, 407913, 427607, 447683, 475909, 495015, 515286, 534392, 554663, 573769, 594040, 613146, 633417, 652523, 672794, 690886, 712603, 735883, 759501, 782928, 808275, 831555, 854835, 878115, 901395, 925013, 948778, 985767, 1009047, 1032327, 1055607, 1078887, 1102167, 1125447, 1149065, 1174599, 1197879, 1221159, 1241059, 1259489, 1277919, 1296349, 1314779, 1333209, 1352315, 1372586, 1391692, 1411963, 1430055, 1448392, 1467498, 1493276, 1512382, 1543157, 1562263, 1580987, 1599417, 1618523, 1637247, 1655677, 1674783, 1695488, 1725676, 1743768, 1762051, 1781157, 1807073, 1825503, 1844609, 1863333, 1881763, 1900193, 1918961, 1937538, 1956306, 1974883, 1993313, 2012081, 2030658, 2049764, 2068488, 2086918, 2105010, 2127251, 2146357, 2170119, 2189225, 2223327, 2242433, 2268295, 2287401, 2326172, 2345763, 2369792, 2389383]"
"('Scanner.java', 'java.util.Scanner', 'getCompleteTokenInBuffer', '(?s).*', '""GC task thread#2 (ParallelGC)"" prio=10 tid=0x00007f08ac022800 nid=0x6019 runnable \n\n""GC task thread#3 (ParallelGC)"" prio=10 tid=0x00007f08ac024000 nid=0x601a runnable \n\n""VM Periodic Task Thread"" prio=10 tid=0x00007f08ac17f000 nid=0x602d waiting on condition \n\nJNI global references: 42\n')","[178537, 178649, 178761, 179015, 217914, 218026, 218138, 218392, 501960, 502072, 502184, 502438, 541337, 541449, 541561, 541815, 580714, 580826, 580938, 581192, 620091, 620203, 620315, 620569, 659468, 659580, 659692, 659946, 791400, 791551, 791702, 792047, 1157711, 1157865, 1158019, 1158371, 1359260, 1359372, 1359484, 1359738, 1398637, 1398749, 1398861, 1399115, 1681728, 1681840, 1681952, 1682206]"
"('FilterBuilder.java', 'org.reflections.util.FilterBuilder$Include', 'apply', 'com\\.github\\.olivergondza\\.dumpling.*', 'com/github/olivergondza/dumpling/cli/GroovyRuntimeTest.class')","[54922, 73408, 99890, 118376, 140701, 159187, 180078, 198564, 219455, 237857, 255940, 275396, 295710, 315166, 335571, 355027, 375432, 394888, 415202, 434658, 464124, 482610, 503501, 521987, 542878, 561364, 582255, 600741, 621632, 640118, 661009, 679411, 697718, 720998, 744306, 768043, 793390, 816670, 839950, 863230, 886510, 909818, 933583, 970882, 994162, 1017442, 1040722, 1064002, 1087282, 1110562, 1133870, 1159714, 1182994, 1206274, 1229274, 1247704, 1266134, 1284564, 1302994, 1321424, 1339910, 1360801, 1379287, 1400178, 1418580, 1436607, 1455093, 1481491, 1499977, 1531372, 1549858, 1569202, 1587632, 1606118, 1625462, 1643892, 1662378, 1683703, 1713891, 1732293, 1750266, 1768752, 1795288, 1813718, 1832204, 1851548, 1869978, 1888408, 1906866, 1925753, 1944211, 1963098, 1981528, 1999986, 2018873, 2037359, 2056703, 2075133, 2093535, 2115466, 2133952, 2158334, 2176820, 2211542, 2230028, 2256510, 2274996, 2314077, 2333048, 2357697, 2376668]"
"('FilterBuilder.java', 'org.reflections.util.FilterBuilder$Include', 'apply', 'com\\.github\\.olivergondza\\.dumpling.*', 'jstack/deadlock-and-friends.log')","[70286, 89580, 115254, 134548, 156065, 175359, 195442, 214736, 234819, 252817, 272112, 292376, 311882, 332146, 351743, 372007, 391604, 411868, 431374, 451638, 479488, 498782, 518865, 538159, 558242, 577536, 597619, 616913, 636996, 656290, 676373, 694371, 717122, 740402, 764114, 787447, 812794, 836074, 859354, 882634, 905914, 929626, 953391, 990286, 1013566, 1036846, 1060126, 1083406, 1106686, 1129966, 1153678, 1179118, 1202398, 1225678, 1244638, 1263068, 1281498, 1299928, 1318358, 1336788, 1356082, 1376165, 1395459, 1415542, 1433540, 1451971, 1471265, 1496855, 1516149, 1546736, 1566030, 1584566, 1602996, 1622290, 1640826, 1659256, 1678550, 1699067, 1729255, 1747253, 1765630, 1784924, 1810652, 1829082, 1848376, 1866912, 1885342, 1903772, 1922634, 1941117, 1959979, 1978462, 1996892, 2015754, 2034237, 2053531, 2072067, 2090497, 2108495, 2130830, 2150124, 2173698, 2192992, 2226906, 2246200, 2271874, 2291168, 2329845, 2349624, 2373465, 2393244]"
"('FilterBuilder.java', 'org.reflections.util.FilterBuilder$Exclude', 'apply', 'java.lang.Object', 'com.github.olivergondza.dumpling.model.ThreadSet')","[62285, 63465, 81159, 82401, 107253, 108433, 126127, 127369, 148064, 149244, 166938, 168180, 187441, 188621, 206315, 207557, 226818, 227998, 245026, 246175, 263691, 264933, 283535, 284839, 303461, 304703, 323305, 324609, 343322, 344564, 363166, 364470, 383183, 384425, 403027, 404331, 422953, 424195, 442797, 444101, 471487, 472667, 490361, 491603, 510864, 512044, 529738, 530980, 550241, 551421, 569115, 570357, 589618, 590798, 608492, 609734, 628995, 630175, 647869, 649111, 668372, 669552, 686580, 687729, 707021, 708511, 730301, 731791, 753803, 755324, 777346, 778836, 802693, 804183, 825973, 827463, 849253, 850743, 872533, 874023, 895813, 897303, 919315, 920836, 943080, 944601, 980185, 981675, 1003465, 1004955, 1026745, 1028235, 1050025, 1051515, 1073305, 1074795, 1096585, 1098075, 1119865, 1121355, 1143367, 1144888, 1169017, 1170507, 1192297, 1193787, 1215577, 1217067, 1236637, 1237817, 1255067, 1256247, 1273497, 1274677, 1291927, 1293107, 1310357, 1311537, 1328787, 1329967, 1347661, 1348903, 1368164, 1369344, 1387038, 1388280, 1407541, 1408721, 1425749, 1426898, 1443970, 1445150, 1462844, 1464086, 1488854, 1490034, 1507728, 1508970, 1538735, 1539915, 1557609, 1558851, 1576565, 1577745, 1594995, 1596175, 1613869, 1615111, 1632825, 1634005, 1651255, 1652435, 1670129, 1671371, 1691066, 1692246, 1721254, 1722434, 1739462, 1740611, 1757629, 1758809, 1776503, 1777745, 1802651, 1803831, 1821081, 1822261, 1839955, 1841197, 1858911, 1860091, 1877341, 1878521, 1895771, 1896951, 1914423, 1915634, 1933116, 1934296, 1951768, 1952979, 1970461, 1971641, 1988891, 1990071, 2007543, 2008754, 2026236, 2027416, 2045110, 2046352, 2064066, 2065246, 2082496, 2083676, 2100704, 2101853, 2122829, 2124009, 2141703, 2142945, 2165697, 2166877, 2184571, 2185813, 2218905, 2220085, 2237779, 2239021, 2263873, 2265053, 2282747, 2283989, 2321634, 2322845, 2340993, 2342266, 2365254, 2366465, 2384613, 2385886]"
"('Description.java', 'org.junit.runner.Description', 'methodAndClassNamePatternGroupOrDefault', '([\\s\\S]*)\\((.*)\\)', 'useInputRuntime(com.github.olivergondza.dumpling.cli.GroovyshCommandTest)')",[1386]
"('FilterBuilder.java', 'org.reflections.util.FilterBuilder$Include', 'apply', 'com\\.github\\.olivergondza\\.dumpling.*', 'com/github/olivergondza/dumpling/DisposeRule$Disposable.class')","[72098, 91488, 117066, 136456, 157877, 177267, 197254, 216644, 236631, 254581, 274020, 294380, 313790, 334150, 353651, 374011, 393512, 413872, 433282, 453642, 481300, 500690, 520677, 540067, 560054, 579444, 599431, 618821, 638808, 658198, 678185, 696135, 719414, 742694, 766454, 789739, 815086, 838366, 861646, 884926, 908206, 931966, 955731, 992578, 1015858, 1039138, 1062418, 1085698, 1108978, 1132258, 1156018, 1181410, 1204690, 1227970, 1246450, 1264880, 1283310, 1301740, 1320170, 1338600, 1357990, 1377977, 1397367, 1417354, 1435304, 1453783, 1473173, 1498667, 1518057, 1548548, 1567938, 1586378, 1604808, 1624198, 1642638, 1661068, 1680458, 1700879, 1731067, 1749017, 1767442, 1786832, 1812464, 1830894, 1850284, 1868724, 1887154, 1905584, 1924494, 1942929, 1961839, 1980274, 1998704, 2017614, 2036049, 2055439, 2073879, 2092309, 2110259, 2132642, 2152032, 2175510, 2194900, 2228718, 2248108, 2273686, 2293076, 2331705, 2351580, 2375325, 2395200]"
"('Description.java', 'org.junit.runner.Description', 'methodAndClassNamePatternGroupOrDefault', '([\\s\\S]*)\\((.*)\\)', 'scriptFromStdinExplicit(com.github.olivergondza.dumpling.cli.GroovyCommandTest)')",[1166]
"('FilterBuilder.java', 'org.reflections.util.FilterBuilder$Exclude', 'apply', 'java.lang.Object', 'com.github.olivergondza.dumpling.model.ModelObject')","[63579, 64839, 65489, 65603, 65911, 66179, 66859, 82521, 83847, 84531, 84651, 84975, 85257, 85973, 108547, 109807, 110457, 110571, 110879, 111147, 111827, 127489, 128815, 129499, 129619, 129943, 130225, 130941, 149358, 150618, 151268, 151382, 151690, 151958, 152638, 168300, 169626, 170310, 170430, 170754, 171036, 171752, 188735, 189995, 190645, 190759, 191067, 191335, 192015, 207677, 209003, 209687, 209807, 210131, 210413, 211129, 228112, 229372, 230022, 230136, 230444, 230712, 231392, 246286, 247513, 248146, 248257, 248557, 248818, 249480, 265053, 266379, 267063, 267183, 267507, 267789, 268505, 284965, 286357, 287075, 287201, 287541, 287837, 288589, 304823, 306149, 306833, 306953, 307277, 307559, 308275, 324735, 326127, 326845, 326971, 327311, 327607, 328359, 344684, 346010, 346694, 346814, 347138, 347420, 348136, 364596, 365988, 366706, 366832, 367172, 367468, 368220, 384545, 385871, 386555, 386675, 386999, 387281, 387997, 404457, 405849, 406567, 406693, 407033, 407329, 408081, 424315, 425641, 426325, 426445, 426769, 427051, 427767, 444227, 445619, 446337, 446463, 446803, 447099, 447851, 472781, 474041, 474691, 474805, 475113, 475381, 476061, 491723, 493049, 493733, 493853, 494177, 494459, 495175, 512158, 513418, 514068, 514182, 514490, 514758, 515438, 531100, 532426, 533110, 533230, 533554, 533836, 534552, 551535, 552795, 553445, 553559, 553867, 554135, 554815, 570477, 571803, 572487, 572607, 572931, 573213, 573929, 590912, 592172, 592822, 592936, 593244, 593512, 594192, 609854, 611180, 611864, 611984, 612308, 612590, 613306, 630289, 631549, 632199, 632313, 632621, 632889, 633569, 649231, 650557, 651241, 651361, 651685, 651967, 652683, 669666, 670926, 671576, 671690, 671998, 672266, 672946, 687840, 689067, 689700, 689811, 690111, 690372, 691034, 708655, 710245, 711065, 711209, 711597, 711935, 712795, 731935, 733525, 734345, 734489, 734877, 735215, 736075, 755471, 757094, 757931, 758078, 758474, 758819, 759697, 778980, 780570, 781390, 781534, 781922, 782260, 783120, 804327, 805917, 806737, 806881, 807269, 807607, 808467, 827607, 829197, 830017, 830161, 830549, 830887, 831747, 850887, 852477, 853297, 853441, 853829, 854167, 855027, 874167, 875757, 876577, 876721, 877109, 877447, 878307, 897447, 899037, 899857, 900001, 900389, 900727, 901587, 920983, 922606, 923443, 923590, 923986, 924331, 925209, 944748, 946371, 947208, 947355, 947751, 948096, 948974, 981819, 983409, 984229, 984373, 984761, 985099, 985959, 1005099, 1006689, 1007509, 1007653, 1008041, 1008379, 1009239, 1028379, 1029969, 1030789, 1030933, 1031321, 1031659, 1032519, 1051659, 1053249, 1054069, 1054213, 1054601, 1054939, 1055799, 1074939, 1076529, 1077349, 1077493, 1077881, 1078219, 1079079, 1098219, 1099809, 1100629, 1100773, 1101161, 1101499, 1102359, 1121499, 1123089, 1123909, 1124053, 1124441, 1124779, 1125639, 1145035, 1146658, 1147495, 1147642, 1148038, 1148383, 1149261, 1170651, 1172241, 1173061, 1173205, 1173593, 1173931, 1174791, 1193931, 1195521, 1196341, 1196485, 1196873, 1197211, 1198071, 1217211, 1218801, 1219621, 1219765, 1220153, 1220491, 1221351, 1237931, 1239191, 1239841, 1239955, 1240263, 1240531, 1241211, 1256361, 1257621, 1258271, 1258385, 1258693, 1258961, 1259641, 1274791, 1276051, 1276701, 1276815, 1277123, 1277391, 1278071, 1293221, 1294481, 1295131, 1295245, 1295553, 1295821, 1296501, 1311651, 1312911, 1313561, 1313675, 1313983, 1314251, 1314931, 1330081, 1331341, 1331991, 1332105, 1332413, 1332681, 1333361, 1349023, 1350349, 1351033, 1351153, 1351477, 1351759, 1352475, 1369458, 1370718, 1371368, 1371482, 1371790, 1372058, 1372738, 1388400, 1389726, 1390410, 1390530, 1390854, 1391136, 1391852, 1408835, 1410095, 1410745, 1410859, 1411167, 1411435, 1412115, 1427009, 1428236, 1428869, 1428980, 1429280, 1429541, 1430203, 1445264, 1446524, 1447174, 1447288, 1447596, 1447864, 1448544, 1464206, 1465532, 1466216, 1466336, 1466660, 1466942, 1467658, 1490148, 1491408, 1492058, 1492172, 1492480, 1492748, 1493428, 1509090, 1510416, 1511100, 1511220, 1511544, 1511826, 1512542, 1540029, 1541289, 1541939, 1542053, 1542361, 1542629, 1543309, 1558971, 1560297, 1560981, 1561101, 1561425, 1561707, 1562423, 1577859, 1579119, 1579769, 1579883, 1580191, 1580459, 1581139, 1596289, 1597549, 1598199, 1598313, 1598621, 1598889, 1599569, 1615231, 1616557, 1617241, 1617361, 1617685, 1617967, 1618683, 1634119, 1635379, 1636029, 1636143, 1636451, 1636719, 1637399, 1652549, 1653809, 1654459, 1654573, 1654881, 1655149, 1655829, 1671491, 1672817, 1673501, 1673621, 1673945, 1674227, 1674943, 1692360, 1693620, 1694270, 1694384, 1694692, 1694960, 1695640, 1722548, 1723808, 1724458, 1724572, 1724880, 1725148, 1725828, 1740722, 1741949, 1742582, 1742693, 1742993, 1743254, 1743916, 1758923, 1760183, 1760833, 1760947, 1761255, 1761523, 1762203, 1777865, 1779191, 1779875, 1779995, 1780319, 1780601, 1781317, 1803945, 1805205, 1805855, 1805969, 1806277, 1806545, 1807225, 1822375, 1823635, 1824285, 1824399, 1824707, 1824975, 1825655, 1841317, 1842643, 1843327, 1843447, 1843771, 1844053, 1844769, 1860205, 1861465, 1862115, 1862229, 1862537, 1862805, 1863485, 1878635, 1879895, 1880545, 1880659, 1880967, 1881235, 1881915, 1897065, 1898325, 1898975, 1899089, 1899397, 1899665, 1900345, 1915751, 1917044, 1917711, 1917828, 1918144, 1918419, 1919117, 1934410, 1935670, 1936320, 1936434, 1936742, 1937010, 1937690, 1953096, 1954389, 1955056, 1955173, 1955489, 1955764, 1956462, 1971755, 1973015, 1973665, 1973779, 1974087, 1974355, 1975035, 1990185, 1991445, 1992095, 1992209, 1992517, 1992785, 1993465, 2008871, 2010164, 2010831, 2010948, 2011264, 2011539, 2012237, 2027530, 2028790, 2029440, 2029554, 2029862, 2030130, 2030810, 2046472, 2047798, 2048482, 2048602, 2048926, 2049208, 2049924, 2065360, 2066620, 2067270, 2067384, 2067692, 2067960, 2068640, 2083790, 2085050, 2085700, 2085814, 2086122, 2086390, 2087070, 2101964, 2103191, 2103824, 2103935, 2104235, 2104496, 2105158, 2124123, 2125383, 2126033, 2126147, 2126455, 2126723, 2127403, 2143065, 2144391, 2145075, 2145195, 2145519, 2145801, 2146517, 2166991, 2168251, 2168901, 2169015, 2169323, 2169591, 2170271, 2185933, 2187259, 2187943, 2188063, 2188387, 2188669, 2189385, 2220199, 2221459, 2222109, 2222223, 2222531, 2222799, 2223479, 2239141, 2240467, 2241151, 2241271, 2241595, 2241877, 2242593, 2265167, 2266427, 2267077, 2267191, 2267499, 2267767, 2268447, 2284109, 2285435, 2286119, 2286239, 2286563, 2286845, 2287561, 2322962, 2324255, 2324922, 2325039, 2325355, 2325630, 2326328, 2342389, 2343748, 2344449, 2344572, 2344904, 2345193, 2345927, 2366582, 2367875, 2368542, 2368659, 2368975, 2369250, 2369948, 2386009, 2387368, 2388069, 2388192, 2388524, 2388813, 2389547]"
"('Description.java', 'org.junit.runner.Description', 'methodAndClassNamePatternGroupOrDefault', '([\\s\\S]*)\\((.*)\\)', 'groovyIntersectDifferentRuntime(com.github.olivergondza.dumpling.cli.GroovyRuntimeTest)')",[1056]
"('ThreadDumpFactory.java', 'com.github.olivergondza.dumpling.factory.ThreadDumpFactory', 'initHeader', '#\\d+', '[0x00007ff5a471a000]')","[2113149, 2113175, 2155720, 2155755, 2198588, 2198623, 2202789, 2202815]"
"('Scanner.java', 'java.util.Scanner', 'getCompleteTokenInBuffer', '(?s).*', '""reacquiring"" prio=10 tid=0x00007f0d1c568000 nid=0xed1 in Object.wait() [0x00007f0d0a603000]\n   java.lang.Thread.State: BLOCKED (on object monitor)\n\tat java.lang.Object.wait(Native Method)\n\t- waiting on <0x00000007ae981058> (a java.lang.Object)\n\tat java.lang.Object.wait(Object.java:503)\n\tat java_lang_Object$wait.call(Unknown Source)\n\tat org.codehaus.groovy.runtime.callsite.CallSiteArray.defaultCall(CallSiteArray.java:45)\n\tat org.codehaus.groovy.runtime.callsite.AbstractCallSite.call(AbstractCallSite.java:108)\n\tat org.codehaus.groovy.runtime.callsite.AbstractCallSite.call(AbstractCallSite.java:112)\n\tat dumpling-script$1.run(dumpling-script:27)\n\t- locked <0x00000007ae981058> (a java.lang.Object)\n\t- locked <0x00000007ae9b88d8> (a java.lang.Object)\n\t- locked <0x00000007ae9b8938> (a java.lang.Object)\n\t- locked <0x00000007ae9b88d8> (a java.lang.Object)\n\t- locked <0x00000007ae981058> (a java.lang.Object)\n\n   Locked ownable synchronizers:\n\t- None\n\n""Service Thread"" daemon prio=10 tid=0x00007f0d1c09e800 nid=0xecf runna')",[22959]
"('ThreadDumpFactory.java', 'com.github.olivergondza.dumpling.factory.ThreadDumpFactory', 'initHeader', '#\\d+', '[0x00007f863f0ce000]')","[21252, 21286]"
"('Scanner.java', 'java.util.Scanner', 'getCompleteTokenInBuffer', '(?s).*', '""Handling GET /hudson/job/some_job/ : ajp-127.0.0.1-8009-133"" daemon prio=10 tid=0x2ad443486800 nid=18245\n   java.lang.Thread.State: BLOCKED (on object monitor)\n\tat hudson.model.AbstractProject.getActions(AbstractProject.java:1034)\n\t- waiting to lock <0x49c5f7990> (a hudson.model.FreeStyleProject)\n\tat sun.reflect.GeneratedMethodAccessor718.invoke(Unknown Source)\n\tat sun.reflect.DelegatingMethodAccessorImpl.invoke(DelegatingMethodAccessorImpl.java:25)\n\tat java.lang.reflect.Method.invoke(Method.java:597)\n\tat org.apache.commons.jexl.util.PropertyExecutor.execute(PropertyExecutor.java:125)\n\tat org.apache.commons.jexl.util.introspection.UberspectImpl$VelGetterImpl.invoke(UberspectImpl.java:314)\n\tat org.apache.commons.jexl.parser.ASTArrayAccess.evaluateExpr(ASTArrayAccess.java:185)\n\tat org.apache.commons.jexl.parser.ASTIdentifier.execute(ASTIdentifier.java:75)\n\tat org.apache.commons.jexl.parser.ASTReference.execute(ASTReference.java:83)\n\tat org.apache.commons.jexl.parser.ASTReference.value(ASTReference.java:57)\n\tat org.apache.commons.jexl.parser.ASTExpression.value(ASTExpression.java:54)\n\tat org.apache.commons.jexl.parser.ASTElvisNode.value(ASTElvisNode.java:40)\n\tat org.apache.commons.jexl.parser.ASTExpression.value(ASTExpression.java:54)\n\tat org.apache.commons.jexl.parser.ASTExpressionExpression.value(ASTExpressionExpression.java:56)\n\tat org.apache.commons.jexl.ExpressionImpl.evaluate(ExpressionImpl.java:80)\n\tat hudson.ExpressionFactory2$JexlExpression.evaluate(ExpressionFactory2.java:72)\n\tat org.apache.commons.jelly.expression.ExpressionSupport.evaluateRecurse(ExpressionSupport.java:61)\n\tat org.apache.commons.jelly.expression.ExpressionSupport.evaluateAsIterator(ExpressionSupport.java:94)\n\tat org.apache.commons.jelly.tags.core.ForEachTag.doTag(ForEachTag.java:89)\n\tat org.apache.commons.jelly.impl.TagScript.run(TagScript.java:269)\n\tat org.apache.commons.jelly.impl.ScriptBlock.run(ScriptBlock.java:95)\n\tat org.apache.commons.jelly.tags.core.CoreTagLibrary$2.run(CoreTagLibrary.java:105)\n\tat org.kohsuke.stapler.jelly.CallTagLibScript.run(CallTagLibScript.java:119)\n\tat org.apache.commons.jelly.tags.core.CoreTagLibrary$2.run(CoreTagLibrary.java:105)\n\tat org.kohsuke.stapler.jelly.JellyViewScript.run(JellyViewScript.java:81)\n\tat org.kohsuke.stapler.jelly.IncludeTag.doTag(IncludeTag.java:146)\n\tat org.apache.commons.jelly.impl.TagScript.run(TagScript.java:269)\n\tat org.apache.commons.jelly.impl.ScriptBlock.run(ScriptBlock.java:95)\n\tat org.kohsuke.stapler.jelly.CallTagLibScript$1.run(CallTagLibScript.java:98)\n\tat org.apache.commons.jelly.tags.define.InvokeBodyTag.doTag(InvokeBodyTag.java:91)\n\tat org.apache.commons.jelly.impl.TagScript.run(TagScript.java:269)\n\tat org.kohsuke.stapler.jelly.ReallyStaticTagLibrary$1.run(ReallyStaticTagLibrary.java:99)\n\tat org.apache.commons.jelly.tags.core.CoreTagLibrary$2.run(CoreTagLibrary.java:105)\n\tat org.kohsuke.stapler.jelly.CallTagLibScript.run(CallTagLibScript.java:119)\n\tat org.apache.commons.jelly.impl.ScriptBlock.run(ScriptBlock.java:95)\n\tat org.kohsuke.stapler.jelly.CallTagLibScript$1.run(CallTagLibScript.java:98)\n\tat org.apache.commons.jelly.tags.define.InvokeBodyTag.doTag(InvokeBodyTag.java:91)\n\tat org.apache.commons.jelly.impl.TagScript.run(TagScript.java:269)\n\tat org.apache.commons.jelly.tags.core.CoreTagLibrary$1.run(CoreTagLibrary.java:98)\n\tat org.apache.commons.jelly.tags.core.CoreTagLibrary$2.run(CoreTagLibrary.java:105)\n\tat org.kohsuke.stapler.jelly.CallTagLibScript.run(CallTagLibScript.java:119)\n\tat org.apache.commons.jelly.impl.ScriptBlock.run(ScriptBlock.java:95)\n\tat org.apache.commons.jelly.tags.core.CoreTagLibrary$2.run(CoreTagLibrary.java:105)\n\tat org.kohsuke.stapler.jelly.JellyViewScript.run(JellyViewScript.java:81)\n\tat org.kohsuke.stapler.jelly.IncludeTag.doTag(IncludeTag.java:146)\n\tat org.apache.commons.jelly.impl.TagScript.run(TagScript.java:269)\n\tat org.apache.commons.jelly.impl.ScriptBlock.run(ScriptBlock.java:95)\n\tat org.kohsuke.stapler.jelly.CallTagLibScript$1.run(CallTagLibScript.java:98)\n\tat org.apache.commons.jelly.tags.define.InvokeBodyTag.doTag(InvokeBodyTag.java:91)\n\tat org.apache.commons.jelly.impl.TagScript.run(TagScript.java:269)\n\tat org.apache.commons.jelly.impl.ScriptBlock.run(ScriptBlock.java:95)\n\tat org.kohsuke.stapler.jelly.ReallyStaticTagLibrary$1.run(ReallyStaticTagLibrary.java:99)\n\tat org.kohsuke.stapler.jelly.ReallyStaticTagLibrary$1.run(ReallyStaticTagLibrary.java:99)\n\tat org.apache.commons.jelly.impl.ScriptBlock.run(ScriptBlock.java:95)\n\tat org.kohsuke.stapler.jelly.ReallyStaticTagLibrary$1.run(ReallyStaticTagLibrary.java:99)\n\tat org.kohsuke.stapler.jelly.ReallyStaticTagLibrary$1.run(ReallyStaticTagLibrary.java:99)\n\tat org.apache.commons.jelly.impl.ScriptBlock.run(ScriptBlock.java:95)\n\tat org.kohsuke.stapler.jelly.ReallyStaticTagLibrary$1.run(ReallyStaticTagLibrary.java:99)\n\tat org.apache.commons.jelly.impl.ScriptBlock.run(ScriptBlock.java:95)\n\tat org.kohsuke.stapler.jelly.ReallyStaticTagLibrary$1.run(ReallyStaticTagLibrary.java:99)\n\tat org.apache.commons.jelly.impl.ScriptBlock.run(ScriptBlock.java:95)\n\tat org.apache.commons.jelly.tags.core.CoreTagLibrary$2.run(CoreTagLibrary.java:105)\n\tat org.kohsuke.stapler.jelly.CallTagLibScript.run(CallTagLibScript.java:119)\n\tat org.apache.commons.jelly.tags.core.CoreTagLibrary$2.run(CoreTagLibrary.java:105)\n\tat org.kohsuke.stapler.jelly.JellyViewScript.run(JellyViewScript.java:81)\n\tat org.kohsuke.stapler.jelly.DefaultScriptInvoker.invokeScript(DefaultScriptInvoker.java:63)\n\tat org.kohsuke.stapler.jelly.DefaultScriptInvoker.invokeScript(DefaultScriptInvoker.java:53)\n\tat org.kohsuke.stapler.jelly.JellyClassTearOff.serveIndexJelly(JellyClassTearOff.java:107)\n\tat org.kohsuke.stapler.jelly.JellyFacet.handleIndexRequest(JellyFacet.java:127)\n\tat org.kohsuke.stapler.Stapler.tryInvoke(Stapler.java:563)\n\tat org.kohsuke.stapler.Stapler.invoke(Stapler.java:659)\n\tat org.kohsuke.stapler.MetaClass$6.doDispatch(MetaClass.java:241)\n\tat org.kohsuke.stapler.NameBasedDispatcher.dispatch(NameBasedDispatcher.java:53)\n\tat org.kohsuke.stapler.Stapler.tryInvoke(Stapler.java:574)\n\tat org.kohsuke.stapler.Stapler.invoke(Stapler.java:659)\n\tat org.kohsuke.stapler.Stapler.invoke(Stapler.java:488)\n\tat org.kohsuke.stapler.Stapler.service(Stapler.java:162)\n\tat javax.servlet.http.HttpServlet.service(HttpServlet.java:717)\n\tat org.apache.catalina.core.ApplicationFilterChain.internalDoFilter(ApplicationFilterChain.java:290)\n\tat org.apache.catalina.core.ApplicationFilterChain.doFilter(ApplicationFilterChain.java:206)\n\tat hudson.util.PluginServletFilter$1.doFilter(PluginServletFilter.java:95)\n\tat hudson.plugins.audit_trail.AuditTrailFilter.doFilter(AuditTrailFilter.java:66)\n\tat hudson.util.PluginServletFilter$1.doFilter(PluginServletFilter.java:98)\n\tat hudson.util.PluginServletFilter.doFilter(PluginServletFilter.java:87)\n\tat org.apache.catalina.core.ApplicationFilterChain.internalDoFilter(ApplicationFilterChain.java:235)\n\tat org.apache.catalina.core.ApplicationFilterChain.doFilter(ApplicationFilterChain.java:206)\n\tat hudson.security.csrf.CrumbFilter.doFilter(CrumbFilter.java:47)\n\tat org.apache.catalina.core.ApplicationFilterChain.internalDoFilter(ApplicationFilterChain.java:235)\n\tat org.apache.catalina.core.ApplicationFilterChain.doFilter(ApplicationFilterChain.java:206)\n\tat org.jenkinsci.plugins.reverse_proxy_auth.ReverseProxySecurityRealm$1.doFilter(ReverseProxySecurityRealm.java:142)\n\tat hudson.security.HudsonFilter.doFilter(HudsonFilter.java:164)\n\tat org.apache.catalina.core.ApplicationFilterChain.internalDoFilter(ApplicationFilterChain.java:235)\n\tat org.apache.catalina.core.ApplicationFilterChain.doFilter(ApplicationFilterChain.java:206)\n\tat org.kohsuke.stapler.compression.CompressionFilter.doFilter(CompressionFilter.java:50)\n\tat org.apache.catalina.core.ApplicationFilterChain.internalDoFilter(ApplicationFilterChain.java:235)\n\tat org.apache.catalina.core.ApplicationFilterChain.doFilter(ApplicationFilterChain.java:206)\n\tat hudson.util.CharacterEncodingFilter.doFilter(CharacterEncodingFilter.java:81)\n\tat org.apache.catalina.core.ApplicationFilterChain.internalDoFilter(ApplicationFilterChain.java:235)\n\tat org.apache.catalina.core.ApplicationFilterChain.doFilter(ApplicationFilterChain.java:206)\n\tat org.jboss.web.tomcat.filters.ReplyHeaderFilter.doFilter(ReplyHeaderFilter.java:96)\n\tat org.apache.catalina.core.ApplicationFilterChain.internalDoFilter(ApplicationFilterChain.java:235)\n\tat org.apache.catalina.core.ApplicationFilterChain.doFilter(ApplicationFilterChain.java:206)\n\tat org.apache.catalina.core.StandardWrapperValve.invoke(StandardWrapperValve.java:235)\n\tat org.apache.catalina.core.StandardContextValve.invoke(StandardContextValve.java:191)\n\tat org.jboss.web.tomcat.security.SecurityAssociationValve.invoke(SecurityAssociationValve.java:183)\n\tat org.apache.catalina.authenticator.AuthenticatorBase.invoke(AuthenticatorBase.java:442)\n\tat org.jboss.web.tomcat.security.JaccContextValve.invoke(JaccContextValve.java:95)\n\tat org.jboss.web.tomcat.security.SecurityContextEstablishmentValve.process(SecurityContextEstablishmentValve.java:126)\n\tat org.jboss.web.tomcat.security.SecurityContextEstablishmentValve.invoke(SecurityContextEstablishmentValve.java:70)\n\tat org.apache.catalina.core.StandardHostValve.invoke(StandardHostValve.java:127)\n\tat org.apache.catalina.valves.ErrorReportValve.invoke(ErrorReportValve.java:102)\n\tat org.jboss.web.tomcat.service.jca.CachedConnectionValve.invoke(CachedConnectionValve.java:158)\n\tat org.apache.catalina.core.StandardEngineValve.invoke(StandardEngineValve.java:109)\n\tat org.jboss.web.tomcat.service.request.ActiveRequestResponseCacheValve.internalProcess(ActiveRequestResponseCacheValve.java:74)\n\tat org.jboss.web.tomcat.service.request.ActiveRequestResponseCacheValve.invoke(ActiveRequestResponseCacheValve.java:47)\n\tat org.apache.catalina.connector.CoyoteAdapter.service(CoyoteAdapter.java:330)\n\tat org.apache.coyote.ajp.AjpProcessor.process(AjpProcessor.java:437)\n\tat org.apache.coyote.ajp.AjpProtocol$AjpConnectionHandler.process(AjpProtocol.java:385)\n\tat org.apache.tomcat.util.net.JIoEndpoint$Worker.run(JIoEndpoint.java:451)\n\tat java.lang.Thread.run(Thread.java:662)\n\n""Handling POST /hudson/view/some_view/configSubmit : ajp-127.0.0.1-8009-107"" daemon prio=10 tid=0x2ad440c4e000 nid=17982\n   java.lang.Thread.State: BLOCKED (on object monitor)\n\tat jenkins.model.Jenkins.save(Jenkins.java:2552)\n\t- waiting to lock <0x404325338> (a hudson.model.Hudson)\n\tat hudson.plugins.nested_view.NestedView.save(NestedView.java:164)\n\tat hudson.model.View.save(View.java:319)\n\tat hudson.model.View.doConfigSubmit(View.java:902)\n\t- locked <0x40dce6960> (a hudson.model.ListView)\n\tat sun.reflect.NativeMethodAccessorImpl.invoke0(Native Method)\n\tat sun.reflect.NativeMethodAccessorImpl.invoke(NativeMethodAccessorImpl.java:39)\n\tat sun.reflect.DelegatingMethodAccessorImpl.invoke(DelegatingMethodAccessorImpl.java:25)\n\tat java.lang.reflect.Method.invoke(Method.java:597)\n\tat org.kohsuke.stapler.Function$InstanceFunction.invoke(Function.java:288)\n\tat org.kohsuke.stapler.interceptor.RequirePOST$Processor.invoke(RequirePOST.java:29)\n\tat org.kohsuke.stapler.Function$InterceptedFunction.invoke(Function.java:389)\n\tat org.kohsuke.stapler.Function.bindAndInvoke(Function.java:151)\n\tat org.kohsuke.stapler.Function.bindAndInvokeAndServeResponse(Function.java:90)\n\tat org.kohsuke.stapler.MetaClass$1.doDispatch(MetaClass.java:111)\n\tat org.kohsuke.stapler.NameBasedDispatcher.dispatch(NameBasedDispatcher.java:53)\n\tat org.kohsuke.stapler.Stapler.tryInvoke(Stapler.java:574)\n\tat org.kohsuke.stapler.Stapler.invoke(Stapler.java:659)\n\tat org.kohsuke.stapler.MetaClass$6.doDispatch(MetaClass.java:241)\n\tat org.kohsuke.stapler.NameBasedDispatcher.dispatch(NameBasedDispatcher.java:53)\n\tat org.kohsuke.stapler.Stapler.tryInvoke(Stapler.java:574)\n\tat org.kohsuke.stapler.Stapler.invoke(Stapler.java:659)\n\tat org.kohsuke.stapler.MetaClass$6.doDispatch(MetaClass.java:241)\n\tat org.kohsuke.stapler.NameBasedDispatcher.dispatch(NameBasedDispatcher.java:53)\n\tat org.kohsuke.stapler.Stapler.tryInvoke(Stapler.java:574)\n\tat org.kohsuke.stapler.Stapler.invoke(Stapler.java:659)\n\tat org.kohsuke.stapler.Stapler.invoke(Stapler.java:488)\n\tat org.kohsuke.stapler.Stapler.service(Stapler.java:162)\n\tat javax.servlet.http.HttpServlet.service(HttpServlet.java:717)\n\tat org.apache.catalina.core.ApplicationFilterChain.internalDoFilter(ApplicationFilterChain.java:290)\n\tat org.apache.catalina.core.ApplicationFilterChain.doFilter(ApplicationFilterChain.java:206)\n\tat hudson.util.PluginServletFilter$1.doFilter(PluginServletFilter.java:95)\n\tat hudson.plugins.audit_trail.AuditTrailFilter.doFilter(AuditTrailFilter.java:66)\n\tat hudson.util.PluginServletFilter$1.doFilter(PluginServletFilter.java:98)\n\tat hudson.util.PluginServletFilter.doFilter(PluginServletFilter.java:87)\n\tat org.apache.catalina.core.ApplicationFilterChain.internalDoFilter(ApplicationFilterChain.java:235)\n\tat org.apache.catalina.core.ApplicationFilterChain.doFilter(ApplicationFilterChain.java:206)\n\tat hudson.security.csrf.CrumbFilter.doFilter(CrumbFilter.java:47)\n\tat org.apache.catalina.core.ApplicationFilterChain.internalDoFilter(ApplicationFilterChain.java:235)\n\tat org.apache.catalina.core.ApplicationFilterChain.doFilter(ApplicationFilterChain.java:206)\n\tat org.jenkinsci.plugins.reverse_proxy_auth.ReverseProxySecurityRealm$1.doFilter(ReverseProxySecurityRealm.java:142)\n\tat hudson.security.HudsonFilter.doFilter(HudsonFilter.java:164)\n\tat org.apache.catalina.core.ApplicationFilterChain.internalDoFilter(ApplicationFilterChain.java:235)\n\tat org.apache.catalina.core.ApplicationFilterChain.doFilter(ApplicationFilterChain.java:206)\n\tat org.kohsuke.stapler.compression.CompressionFilter.doFilter(CompressionFilter.java:50)\n\tat org.apache.catalina.core.ApplicationFilterChain.internalDoFilter(ApplicationFilterChain.java:235)\n\tat org.apache.catalina.core.ApplicationFilterChain.doFilter(ApplicationFilterChain.java:206)\n\tat hudson.util.CharacterEncodingFilter.doFilter(CharacterEncodingFilter.java:81)\n\tat org.apache.catalina.core.ApplicationFilterChain.internalDoFilter(ApplicationFilterChain.java:235)\n\tat org.apache.catalina.core.ApplicationFilterChain.doFilter(ApplicationFilterChain.java:206)\n\tat org.jboss.web.tomcat.filters.ReplyHeaderFilter.doFilter(ReplyHeaderFilter.java:96)\n\tat org.apache.catalina.core.ApplicationFilterChain.internalDoFilter(ApplicationFilterChain.java:235)\n\tat org.apache.catalina.core.ApplicationFilterChain.doFilter(ApplicationFilterChain.java:206)\n\tat org.apache.catalina.core.StandardWrapperValve.invoke(StandardWrapperValve.java:235)\n\tat org.apache.catalina.core.StandardContextValve.invoke(StandardContextValve.java:191)\n\tat org.jboss.web.tomcat.security.SecurityAssociationValve.invoke(SecurityAssociationValve.java:183)\n\tat org.apache.catalina.authenticator.AuthenticatorBase.invoke(AuthenticatorBase.java:442)\n\tat org.jboss.web.tomcat.security.JaccContextValve.invoke(JaccContextValve.java:95)\n\tat org.jboss.web.tomcat.security.SecurityContextEstablishmentValve.process(SecurityContextEstablishmentValve.java:126)\n\tat org.jboss.web.tomcat.security.SecurityContextEstablishmentValve.invoke(SecurityContextEstablishmentValve.java:70)\n\tat org.apache.catalina.core.StandardHostValve.invoke(StandardHostValve.java:127)\n\tat org.apache.catalina.valves.ErrorReportValve.invoke(ErrorReportValve.java:102)\n\tat org.jboss.web.tomcat.service.jca.CachedConnectionValve.invoke(CachedConnectionValve.java:158)\n\tat org.apache.catalina.core.StandardEngineValve.invoke(StandardEngineValve.java:109)\n\tat org.jboss.web.tomcat.service.request.ActiveRequestResponseCacheValve.internalProcess(ActiveRequestResponseCacheValve.java:74)\n\tat org.jboss.web.tomcat.service.request.ActiveRequestResponseCacheValve.invoke(ActiveRequestResponseCacheValve.java:47)\n\tat org.apache.catalina.connector.CoyoteAdapter.service(CoyoteAdapter.java:330)\n\tat org.apache.coyote.ajp.AjpProcessor.process(AjpProcessor.java:437)\n\tat org.apache.coyote.ajp.AjpProtocol$AjpConnectionHandler.process(AjpProtocol.java:385)\n\tat org.apache.tomcat.util.net.JIoEndpoint$Worker.run(JIoEndpoint.java:451)\n\tat java.lang.Thread.run(Thread.java:662)\n\n""Handling POST /hudson/job/some_other_job/doRename : ajp-127.0.0.1-8009-24"" daemon prio=10 tid=0x5851b800 nid=27336\n   java.lang.Thread.State: BLOCKED (on object monitor)\n\tat hudson.model.ListView.onJobRenamed(ListView.java:250)\n\t- waiting to lock <0')","[136939, 137174]"
"('Scanner.java', 'java.util.Scanner', 'getCompleteTokenInBuffer', '(?s).*', '4000\n')",[39401]
"('FilterBuilder.java', 'org.reflections.util.FilterBuilder$Include', 'apply', 'com\\.github\\.olivergondza\\.dumpling.*', 'com/github/olivergondza/dumpling/query/BlockingTree$1.class')","[66330, 85416, 111298, 130384, 152109, 171195, 191486, 210572, 230863, 248965, 267948, 288004, 307718, 327774, 347579, 367635, 387440, 407496, 427210, 447266, 475532, 494618, 514909, 533995, 554286, 573372, 593663, 612749, 633040, 652126, 672417, 690519, 712126, 735406, 759014, 782451, 807798, 831078, 854358, 877638, 900918, 924526, 948291, 985290, 1008570, 1031850, 1055130, 1078410, 1101690, 1124970, 1148578, 1174122, 1197402, 1220682, 1240682, 1259112, 1277542, 1295972, 1314402, 1332832, 1351918, 1372209, 1391295, 1411586, 1429688, 1448015, 1467101, 1492899, 1511985, 1542780, 1561866, 1580610, 1599040, 1618126, 1636870, 1655300, 1674386, 1695111, 1725299, 1743401, 1761674, 1780760, 1806696, 1825126, 1844212, 1862956, 1881386, 1899816, 1918574, 1937161, 1955919, 1974506, 1992936, 2011694, 2030281, 2049367, 2068111, 2086541, 2104643, 2126874, 2145960, 2169742, 2188828, 2222950, 2242036, 2267918, 2287004, 2325785, 2345356, 2369405, 2388976]"
"('FilterBuilder.java', 'org.reflections.util.FilterBuilder$Include', 'apply', 'com\\.github\\.olivergondza\\.dumpling.*', 'com/github/olivergondza/dumpling/model/jvm/JvmThread$Builder.class')","[64420, 83406, 109388, 128374, 150199, 169185, 189576, 208562, 228953, 247105, 265938, 285894, 305708, 325664, 345569, 365525, 385430, 405386, 425200, 445156, 473622, 492608, 512999, 531985, 552376, 571362, 591753, 610739, 631130, 650116, 670507, 688659, 709716, 732996, 756554, 780041, 805388, 828668, 851948, 875228, 898508, 922066, 945831, 982880, 1006160, 1029440, 1052720, 1076000, 1099280, 1122560, 1146118, 1171712, 1194992, 1218272, 1238772, 1257202, 1275632, 1294062, 1312492, 1330922, 1349908, 1370299, 1389285, 1409676, 1427828, 1446105, 1465091, 1490989, 1509975, 1540870, 1559856, 1578700, 1597130, 1616116, 1634960, 1653390, 1672376, 1693201, 1723389, 1741541, 1759764, 1778750, 1804786, 1823216, 1842202, 1861046, 1879476, 1897906, 1916614, 1935251, 1953959, 1972596, 1991026, 2009734, 2028371, 2047357, 2066201, 2084631, 2102783, 2124964, 2143950, 2167832, 2186818, 2221040, 2240026, 2266008, 2284994, 2323825, 2343296, 2367445, 2386916]"
"('FilterBuilder.java', 'org.reflections.util.FilterBuilder$Exclude', 'apply', 'java.lang.Object', 'com.github.olivergondza.dumpling.factory.ThreadDumpFactoryVendorTest.waiting.groovy')","[57449, 76069, 102417, 121037, 143228, 161848, 182605, 201225, 221982, 240317, 258601, 278191, 298371, 317961, 338232, 357822, 378093, 397683, 417863, 437453, 466651, 485271, 506028, 524648, 545405, 564025, 584782, 603402, 624159, 642779, 663536, 681871, 700915, 724195, 747570, 771240, 796587, 819867, 843147, 866427, 889707, 913082, 936847, 974079, 997359, 1020639, 1043919, 1067199, 1090479, 1113759, 1137134, 1162911, 1186191, 1209471, 1231801, 1250231, 1268661, 1287091, 1305521, 1323951, 1342571, 1363328, 1381948, 1402705, 1421040, 1439134, 1457754, 1484018, 1502638, 1533899, 1552519, 1571729, 1590159, 1608779, 1627989, 1646419, 1665039, 1686230, 1716418, 1734753, 1752793, 1771413, 1797815, 1816245, 1834865, 1854075, 1872505, 1890935, 1909460, 1928280, 1946805, 1965625, 1984055, 2002580, 2021400, 2040020, 2059230, 2077660, 2095995, 2117993, 2136613, 2160861, 2179481, 2214069, 2232689, 2259037, 2277657, 2316671, 2335776, 2360291, 2379396]"
"('FilterBuilder.java', 'org.reflections.util.FilterBuilder$Exclude', 'apply', 'java.lang.Object', 'org.kohsuke.args4j.OptionHandlerRegistry$OptionHandlerFactory')","[58741, 77429, 103709, 122397, 144520, 163208, 183897, 202585, 223274, 241575, 259961, 279619, 299731, 319389, 339592, 359250, 379453, 399111, 419223, 438881, 467943, 486631, 507320, 526008, 546697, 565385, 586074, 604762, 625451, 644139, 664828, 683129, 702547, 725827, 749236, 772872, 798219, 821499, 844779, 868059, 891339, 914748, 938513, 975711, 998991, 1022271, 1045551, 1068831, 1092111, 1115391, 1138800, 1164543, 1187823, 1211103, 1233093, 1251523, 1269953, 1288383, 1306813, 1325243, 1343931, 1364620, 1383308, 1403997, 1422298, 1440426, 1459114, 1485310, 1503998, 1535191, 1553879, 1573021, 1591451, 1610139, 1629281, 1647711, 1666399, 1687522, 1717710, 1736011, 1754085, 1772773, 1799107, 1817537, 1836225, 1855367, 1873797, 1892227, 1910786, 1929572, 1948131, 1966917, 1985347, 2003906, 2022692, 2041380, 2060522, 2078952, 2097253, 2119285, 2137973, 2162153, 2180841, 2215361, 2234049, 2260329, 2279017, 2317997, 2337170, 2361617, 2380790]"
"('ThreadDumpFactory.java', 'com.github.olivergondza.dumpling.factory.ThreadDumpFactory', 'initHeader', '#\\d+', '[0x00007ff5a4619000]')","[2112950, 2112976, 2155458, 2155493, 2198326, 2198361, 2202590, 2202616]"
"('FilterBuilder.java', 'org.reflections.util.FilterBuilder$Exclude', 'apply', 'java.lang.Object', 'org.junit.rules.MethodRule')","[56105, 74653, 101073, 119621, 141884, 160432, 181261, 199809, 220638, 239009, 257185, 276703, 296955, 316473, 336816, 356334, 376677, 396195, 416447, 435965, 465307, 483855, 504684, 523232, 544061, 562609, 583438, 601986, 622815, 641363, 662192, 680563, 699211, 722491, 745830, 769536, 794883, 818163, 841443, 864723, 888003, 911342, 935107, 972375, 995655, 1018935, 1042215, 1065495, 1088775, 1112055, 1135394, 1161207, 1184487, 1207767, 1230457, 1248887, 1267317, 1285747, 1304177, 1322607, 1341155, 1361984, 1380532, 1401361, 1419732, 1437790, 1456338, 1482674, 1501222, 1532555, 1551103, 1570385, 1588815, 1607363, 1626645, 1645075, 1663623, 1684886, 1715074, 1733445, 1751449, 1769997, 1796471, 1814901, 1833449, 1852731, 1871161, 1889591, 1908080, 1926936, 1945425, 1964281, 1982711, 2001200, 2020056, 2038604, 2057886, 2076316, 2094687, 2116649, 2135197, 2159517, 2178065, 2212725, 2231273, 2257693, 2276241, 2315291, 2334324, 2358911, 2377944]"
"('ThreadDumpFactory.java', 'com.github.olivergondza.dumpling.factory.ThreadDumpFactory', 'initHeader', '#\\d+', '[0x00007f10689f8000]')","[52498, 52532]"
"('FilterBuilder.java', 'org.reflections.util.FilterBuilder$Exclude', 'apply', 'java.lang.Object', 'com.github.olivergondza.dumpling.query.command.deadlocks.usage')","[67815, 86979, 112783, 131947, 153594, 172758, 192971, 212135, 232348, 250411, 269511, 289645, 309281, 329415, 349142, 369276, 389003, 409137, 428773, 448907, 477017, 496181, 516394, 535558, 555771, 574935, 595148, 614312, 634525, 653689, 673902, 691965, 714001, 737281, 760928, 784326, 809673, 832953, 856233, 879513, 902793, 926440, 950205, 987165, 1010445, 1033725, 1057005, 1080285, 1103565, 1126845, 1150492, 1175997, 1199277, 1222557, 1242167, 1260597, 1279027, 1297457, 1315887, 1334317, 1353481, 1373694, 1392858, 1413071, 1431134, 1449500, 1468664, 1494384, 1513548, 1544265, 1563429, 1582095, 1600525, 1619689, 1638355, 1656785, 1675949, 1696596, 1726784, 1744847, 1763159, 1782323, 1808181, 1826611, 1845775, 1864441, 1882871, 1901301, 1920098, 1938646, 1957443, 1975991, 1994421, 2013218, 2031766, 2050930, 2069596, 2088026, 2106089, 2128359, 2147523, 2171227, 2190391, 2224435, 2243599, 2269403, 2288567, 2327309, 2346958, 2370929, 2390578]"
"('Description.java', 'org.junit.runner.Description', 'methodAndClassNamePatternGroupOrDefault', '([\\s\\S]*)\\((.*)\\)', 'loadPid(com.github.olivergondza.dumpling.cli.GroovyRuntimeTest)')",[814]
"('FilterBuilder.java', 'org.reflections.util.FilterBuilder$Exclude', 'apply', 'java.lang.Object', 'com.github.olivergondza.dumpling.DisposeRule$Disposable')","[70847, 71001, 90171, 90333, 115815, 115969, 135139, 135301, 156626, 156780, 175950, 176112, 196003, 196157, 215327, 215489, 235380, 235534, 253363, 253513, 272703, 272865, 292997, 293167, 312473, 312635, 332767, 332937, 352334, 352496, 372628, 372798, 392195, 392357, 412489, 412659, 431965, 432127, 452259, 452429, 480049, 480203, 499373, 499535, 519426, 519580, 538750, 538912, 558803, 558957, 578127, 578289, 598180, 598334, 617504, 617666, 637557, 637711, 656881, 657043, 676934, 677088, 694917, 695067, 717833, 718027, 741113, 741307, 764840, 765038, 788158, 788352, 813505, 813699, 836785, 836979, 860065, 860259, 883345, 883539, 906625, 906819, 930352, 930550, 954117, 954315, 990997, 991191, 1014277, 1014471, 1037557, 1037751, 1060837, 1061031, 1084117, 1084311, 1107397, 1107591, 1130677, 1130871, 1154404, 1154602, 1179829, 1180023, 1203109, 1203303, 1226389, 1226583, 1245199, 1245353, 1263629, 1263783, 1282059, 1282213, 1300489, 1300643, 1318919, 1319073, 1337349, 1337503, 1356673, 1356835, 1376726, 1376880, 1396050, 1396212, 1416103, 1416257, 1434086, 1434236, 1452532, 1452686, 1471856, 1472018, 1497416, 1497570, 1516740, 1516902, 1547297, 1547451, 1566621, 1566783, 1585127, 1585281, 1603557, 1603711, 1622881, 1623043, 1641387, 1641541, 1659817, 1659971, 1679141, 1679303, 1699628, 1699782, 1729816, 1729970, 1747799, 1747949, 1766191, 1766345, 1785515, 1785677, 1811213, 1811367, 1829643, 1829797, 1848967, 1849129, 1867473, 1867627, 1885903, 1886057, 1904333, 1904487, 1923210, 1923368, 1941678, 1941832, 1960555, 1960713, 1979023, 1979177, 1997453, 1997607, 2016330, 2016488, 2034798, 2034952, 2054122, 2054284, 2072628, 2072782, 2091058, 2091212, 2109041, 2109191, 2131391, 2131545, 2150715, 2150877, 2174259, 2174413, 2193583, 2193745, 2227467, 2227621, 2246791, 2246953, 2272435, 2272589, 2291759, 2291921, 2330421, 2330579, 2350230, 2350396, 2374041, 2374199, 2393850, 2394016]"
"('ThreadDumpFactory.java', 'com.github.olivergondza.dumpling.factory.ThreadDumpFactory', 'initHeader', '#\\d+', '[0x00007fd7055bb000]')","[461643, 461682, 967810, 967861, 1526629, 1526666]"
"('FilterBuilder.java', 'org.reflections.util.FilterBuilder$Include', 'apply', 'com\\.github\\.olivergondza\\.dumpling.*', 'com/github/olivergondza/dumpling/factory/ThreadDumpFactoryVendorTest/multipleMonitorsOnSingleStackFrame.groovy')","[57486, 76108, 102454, 121076, 143265, 161887, 182642, 201264, 222019, 240353, 258640, 278232, 298410, 318002, 338271, 357863, 378132, 397724, 417902, 437494, 466688, 485310, 506065, 524687, 545442, 564064, 584819, 603441, 624196, 642818, 663573, 681907, 700962, 724242, 747618, 771287, 796634, 819914, 843194, 866474, 889754, 913130, 936895, 974126, 997406, 1020686, 1043966, 1067246, 1090526, 1113806, 1137182, 1162958, 1186238, 1209518, 1231838, 1250268, 1268698, 1287128, 1305558, 1323988, 1342610, 1363365, 1381987, 1402742, 1421076, 1439171, 1457793, 1484055, 1502677, 1533936, 1552558, 1571766, 1590196, 1608818, 1628026, 1646456, 1665078, 1686267, 1716455, 1734789, 1752830, 1771452, 1797852, 1816282, 1834904, 1854112, 1872542, 1890972, 1909498, 1928317, 1946843, 1965662, 1984092, 2002618, 2021437, 2040059, 2059267, 2077697, 2096031, 2118030, 2136652, 2160898, 2179520, 2214106, 2232728, 2259074, 2277696, 2316709, 2335816, 2360329, 2379436]"
"('Scanner.java', 'java.util.Scanner', 'getCompleteTokenInBuffer', '(?s).*', '""Finalizer"" daemon prio=10 tid=0x00007fe0a006e000 nid=0xfa8 in Object.wait() [0x00007fe0a4143000]\n   java.lang.Thread.State: WAITING (on object monitor)\n\tat java.lang.Object.wait(Native Method)\n\t- waiting on <0x00000007b0f00790> (a java.lang.ref.ReferenceQueue$Lock)\n\tat java.lang.ref.ReferenceQueue.remove(ReferenceQueue.java:135)\n\t- locked <0x00000007b0f00790> (a java.lang.ref.ReferenceQueue$Lock)\n\tat java.lang.ref.ReferenceQueue.remove(ReferenceQueue.java:151)\n\tat java.lang.ref.Finalizer$FinalizerThread.run(Finalizer.java:209)\n\n   Locked ownable synchronizers:\n\t- None\n\n""Reference Handler"" daemon prio=10 tid=0x00007fe0a006c000 nid=0xfa7 in Object.wait() [0x00007fe0a4244000]\n   java.lang.Thread.State: WAITING (on object monitor)\n\tat java.lang.Object.wait(Native Method)\n\t- waiting on <0x00000007b0f10068> (a java.lang.ref.Reference$Lock)\n\tat java.lang.Object.wait(Object.java:503)\n\tat java.lang.ref.Reference$ReferenceHandler.run(Reference.java:133)\n\t- locked <0x00000007b0f10068> (a java.lang.ref.Reference$Lock)\n\n')",[40954]
"('FilterBuilder.java', 'org.reflections.util.FilterBuilder$Include', 'apply', 'com\\.github\\.olivergondza\\.dumpling.*', 'com/github/olivergondza/dumpling/factory/JmxRuntimeFactory$FailedToInitializeJmxConnection.class')","[68992, 88218, 113960, 133186, 154771, 173997, 194148, 213374, 233525, 251557, 270750, 290946, 310520, 330716, 350381, 370577, 390242, 410438, 430012, 450208, 478194, 497420, 517571, 536797, 556948, 576174, 596325, 615551, 635702, 654928, 675079, 693111, 715488, 738768, 762446, 785813, 811160, 834440, 857720, 881000, 904280, 927958, 951723, 988652, 1011932, 1035212, 1058492, 1081772, 1105052, 1128332, 1152010, 1177484, 1200764, 1224044, 1243344, 1261774, 1280204, 1298634, 1317064, 1335494, 1354720, 1374871, 1394097, 1414248, 1432280, 1450677, 1469903, 1495561, 1514787, 1545442, 1564668, 1583272, 1601702, 1620928, 1639532, 1657962, 1677188, 1697773, 1727961, 1745993, 1764336, 1783562, 1809358, 1827788, 1847014, 1865618, 1884048, 1902478, 1921306, 1939823, 1958651, 1977168, 1995598, 2014426, 2032943, 2052169, 2070773, 2089203, 2107235, 2129536, 2148762, 2172404, 2191630, 2225612, 2244838, 2270580, 2289806, 2328517, 2348228, 2372137, 2391848]"
"('FilterBuilder.java', 'org.reflections.util.FilterBuilder$Include', 'apply', 'com\\.github\\.olivergondza\\.dumpling.*', 'com.github.olivergondza.dumpling.factory.ThreadDumpFactoryVendorTest.waitingTimed.groovy')","[56291, 74849, 101259, 119817, 142070, 160628, 181447, 200005, 220824, 239190, 257381, 276909, 297151, 316679, 337012, 356540, 376873, 396401, 416643, 436171, 465493, 484051, 504870, 523428, 544247, 562805, 583624, 602182, 623001, 641559, 662378, 680744, 699447, 722727, 746071, 769772, 795119, 818399, 841679, 864959, 888239, 911583, 935348, 972611, 995891, 1019171, 1042451, 1065731, 1089011, 1112291, 1135635, 1161443, 1184723, 1208003, 1230643, 1249073, 1267503, 1285933, 1304363, 1322793, 1341351, 1362170, 1380728, 1401547, 1419913, 1437976, 1456534, 1482860, 1501418, 1532741, 1551299, 1570571, 1589001, 1607559, 1626831, 1645261, 1663819, 1685072, 1715260, 1733626, 1751635, 1770193, 1796657, 1815087, 1833645, 1852917, 1871347, 1889777, 1908271, 1927122, 1945616, 1964467, 1982897, 2001391, 2020242, 2038800, 2058072, 2076502, 2094868, 2116835, 2135393, 2159703, 2178261, 2212911, 2231469, 2257879, 2276437, 2315482, 2334525, 2359102, 2378145]"
"('Description.java', 'org.junit.runner.Description', 'methodAndClassNamePatternGroupOrDefault', '([\\s\\S]*)\\((.*)\\)', 'loadJmx(com.github.olivergondza.dumpling.cli.GroovyRuntimeTest)')",[792]
"('FilterBuilder.java', 'org.reflections.util.FilterBuilder$Include', 'apply', 'com\\.github\\.olivergondza\\.dumpling.*', 'com.github.olivergondza.dumpling.query.SingleThreadSetQuery$Result.class')","[66253, 85335, 111221, 130303, 152032, 171114, 191409, 210491, 230786, 248890, 267867, 287919, 307637, 327689, 347498, 367550, 387359, 407411, 427129, 447181, 475455, 494537, 514832, 533914, 554209, 573291, 593586, 612668, 632963, 652045, 672340, 690444, 712029, 735309, 758915, 782354, 807701, 830981, 854261, 877541, 900821, 924427, 948192, 985193, 1008473, 1031753, 1055033, 1078313, 1101593, 1124873, 1148479, 1174025, 1197305, 1220585, 1240605, 1259035, 1277465, 1295895, 1314325, 1332755, 1351837, 1372132, 1391214, 1411509, 1429613, 1447938, 1467020, 1492822, 1511904, 1542703, 1561785, 1580533, 1598963, 1618045, 1636793, 1655223, 1674305, 1695034, 1725222, 1743326, 1761597, 1780679, 1806619, 1825049, 1844131, 1862879, 1881309, 1899739, 1918495, 1937084, 1955840, 1974429, 1992859, 2011615, 2030204, 2049286, 2068034, 2086464, 2104568, 2126797, 2145879, 2169665, 2188747, 2222873, 2241955, 2267841, 2286923, 2325706, 2345273, 2369326, 2388893]"
"('FilterBuilder.java', 'org.reflections.util.FilterBuilder$Include', 'apply', 'com\\.github\\.olivergondza\\.dumpling.*', 'com/github/olivergondza/dumpling/factory/ThreadDumpFactoryVendorTest/monitorDeadlock.groovy')","[57150, 75754, 102118, 120722, 142929, 161533, 182306, 200910, 221683, 240026, 258286, 277860, 298056, 317630, 337917, 357491, 377778, 397352, 417548, 437122, 466352, 484956, 505729, 524333, 545106, 563710, 584483, 603087, 623860, 642464, 663237, 681580, 700536, 723816, 747183, 770861, 796208, 819488, 842768, 866048, 889328, 912695, 936460, 973700, 996980, 1020260, 1043540, 1066820, 1090100, 1113380, 1136747, 1162532, 1185812, 1209092, 1231502, 1249932, 1268362, 1286792, 1305222, 1323652, 1342256, 1363029, 1381633, 1402406, 1420749, 1438835, 1457439, 1483719, 1502323, 1533600, 1552204, 1571430, 1589860, 1608464, 1627690, 1646120, 1664724, 1685931, 1716119, 1734462, 1752494, 1771098, 1797516, 1815946, 1834550, 1853776, 1872206, 1890636, 1909153, 1927981, 1946498, 1965326, 1983756, 2002273, 2021101, 2039705, 2058931, 2077361, 2095704, 2117694, 2136298, 2160562, 2179166, 2213770, 2232374, 2258738, 2277342, 2316364, 2335453, 2359984, 2379073]"
"('FilterBuilder.java', 'org.reflections.util.FilterBuilder$Include', 'apply', 'com\\.github\\.olivergondza\\.dumpling.*', 'com.github.olivergondza.dumpling.model.ModelObject$Mode.class')","[62513, 81399, 107481, 126367, 148292, 167178, 187669, 206555, 227046, 245248, 263931, 283787, 303701, 323557, 343562, 363418, 383423, 403279, 423193, 443049, 471715, 490601, 511092, 529978, 550469, 569355, 589846, 608732, 629223, 648109, 668600, 686802, 707309, 730589, 754097, 777634, 802981, 826261, 849541, 872821, 896101, 919609, 943374, 980473, 1003753, 1027033, 1050313, 1073593, 1096873, 1120153, 1143661, 1169305, 1192585, 1215865, 1236865, 1255295, 1273725, 1292155, 1310585, 1329015, 1347901, 1368392, 1387278, 1407769, 1425971, 1444198, 1463084, 1489082, 1507968, 1538963, 1557849, 1576793, 1595223, 1614109, 1633053, 1651483, 1670369, 1691294, 1721482, 1739684, 1757857, 1776743, 1802879, 1821309, 1840195, 1859139, 1877569, 1895999, 1914657, 1933344, 1952002, 1970689, 1989119, 2007777, 2026464, 2045350, 2064294, 2082724, 2100926, 2123057, 2141943, 2165925, 2184811, 2219133, 2238019, 2264101, 2282987, 2321868, 2341239, 2365488, 2384859]"
"('FilterBuilder.java', 'org.reflections.util.FilterBuilder$Include', 'apply', 'com\\.github\\.olivergondza\\.dumpling.*', 'com.github.olivergondza.dumpling.cli.AbstractCliTest$1.class')","[55569, 74089, 100537, 119057, 141348, 159868, 180725, 199245, 220102, 238487, 256621, 276111, 296391, 315881, 336252, 355742, 376113, 395603, 415883, 435373, 464771, 483291, 504148, 522668, 543525, 562045, 582902, 601422, 622279, 640799, 661656, 680041, 698535, 721815, 745140, 768860, 794207, 817487, 840767, 864047, 887327, 910652, 934417, 971699, 994979, 1018259, 1041539, 1064819, 1088099, 1111379, 1134704, 1160531, 1183811, 1207091, 1229921, 1248351, 1266781, 1285211, 1303641, 1322071, 1340591, 1361448, 1379968, 1400825, 1419210, 1437254, 1455774, 1482138, 1500658, 1532019, 1550539, 1569849, 1588279, 1606799, 1626109, 1644539, 1663059, 1684350, 1714538, 1732923, 1750913, 1769433, 1795935, 1814365, 1832885, 1852195, 1870625, 1889055, 1907530, 1926400, 1944875, 1963745, 1982175, 2000650, 2019520, 2038040, 2057350, 2075780, 2094165, 2116113, 2134633, 2158981, 2177501, 2212189, 2230709, 2257157, 2275677, 2314741, 2333746, 2358361, 2377366]"
"('Description.java', 'org.junit.runner.Description', 'methodAndClassNamePatternGroupOrDefault', '([\\s\\S]*)\\((.*)\\)', 'reacquireMonitorAfterWait(com.github.olivergondza.dumpling.factory.ThreadDumpFactoryVendorTest)')",[154]
"('ThreadDumpFactory.java', 'com.github.olivergondza.dumpling.factory.ThreadDumpFactory', 'initHeader', '#\\d+', 'monitor')","[47372, 47406, 49363, 49397, 92148, 92183, 92736, 92771, 93347, 93382, 177744, 177779, 217121, 217156, 501167, 501202, 540544, 540579, 579921, 579956, 619298, 619333, 658675, 658710, 790347, 790395, 1156638, 1156687, 1358467, 1358502, 1397844, 1397879, 1473826, 1473860, 1474403, 1474437, 1475003, 1475037, 1680935, 1680970, 1701914, 1702004, 1703107, 1703197, 1704323, 1704413, 1787492, 1787527, 1788080, 1788115, 1788691, 1788726, 2110970, 2110996, 2111277, 2111303, 2111583, 2111609, 2152848, 2152883, 2153254, 2153289, 2153659, 2153694, 2195716, 2195751, 2196122, 2196157, 2196527, 2196562, 2200610, 2200636, 2200917, 2200943, 2201223, 2201249, 2204493, 2204519, 2204982, 2205008, 2205494, 2205520, 2248768, 2248803, 2249356, 2249391, 2249967, 2250002, 2293736, 2293771, 2294324, 2294359, 2294935, 2294970, 2300811, 2300837, 2301300, 2301326, 2301812, 2301838, 2307319, 2307345, 2307623, 2307649, 2307927, 2307953, 2308484, 2308510, 2309364, 2309390, 2309668, 2309694, 2309972, 2309998, 2310529, 2310555, 2311409, 2311435, 2311713, 2311739, 2312017, 2312043, 2312574, 2312600, 2352414, 2352450, 2352828, 2352864, 2353242, 2353278, 2353999, 2354035, 2355029, 2355055, 2355333, 2355359, 2355637, 2355663, 2356194, 2356220, 2396034, 2396070, 2396448, 2396484, 2396862, 2396898, 2397619, 2397655]"
"('FilterBuilder.java', 'org.reflections.util.FilterBuilder$Include', 'apply', 'com\\.github\\.olivergondza\\.dumpling.*', 'com.github.olivergondza.dumpling.cli.MainTest.class')","[54275, 72727, 99243, 117695, 140054, 158506, 179431, 197883, 218808, 237227, 255259, 274681, 295029, 314451, 334890, 354312, 374751, 394173, 414521, 433943, 463477, 481929, 502854, 521306, 542231, 560683, 581608, 600060, 620985, 639437, 660362, 678781, 696901, 720181, 743472, 767226, 792573, 815853, 839133, 862413, 885693, 908984, 932749, 970065, 993345, 1016625, 1039905, 1063185, 1086465, 1109745, 1133036, 1158897, 1182177, 1205457, 1228627, 1247057, 1265487, 1283917, 1302347, 1320777, 1339229, 1360154, 1378606, 1399531, 1417950, 1435960, 1454412, 1480844, 1499296, 1530725, 1549177, 1568555, 1586985, 1605437, 1624815, 1643245, 1661697, 1683056, 1713244, 1731663, 1749619, 1768071, 1794641, 1813071, 1831523, 1850901, 1869331, 1887761, 1906202, 1925106, 1943547, 1962451, 1980881, 1999322, 2018226, 2036678, 2056056, 2074486, 2092905, 2114819, 2133271, 2157687, 2176139, 2210895, 2229347, 2255863, 2274315, 2313413, 2332350, 2357033, 2375970]"
"('FilterBuilder.java', 'org.reflections.util.FilterBuilder$Exclude', 'apply', 'java.lang.Object', 'com.github.olivergondza.dumpling.cli.command.groovy.usage')","[59771, 78513, 104739, 123481, 145550, 164292, 184927, 203669, 224304, 242578, 261045, 280757, 300815, 320527, 340676, 360388, 380537, 400249, 420307, 440019, 468973, 487715, 508350, 527092, 547727, 566469, 587104, 605846, 626481, 645223, 665858, 684132, 703847, 727127, 750563, 774172, 799519, 822799, 846079, 869359, 892639, 916075, 939840, 977011, 1000291, 1023571, 1046851, 1070131, 1093411, 1116691, 1140127, 1165843, 1189123, 1212403, 1234123, 1252553, 1270983, 1289413, 1307843, 1326273, 1345015, 1365650, 1384392, 1405027, 1423301, 1441456, 1460198, 1486340, 1505082, 1536221, 1554963, 1574051, 1592481, 1611223, 1630311, 1648741, 1667483, 1688552, 1718740, 1737014, 1755115, 1773857, 1800137, 1818567, 1837309, 1856397, 1874827, 1893257, 1911843, 1930602, 1949188, 1967947, 1986377, 2004963, 2023722, 2042464, 2061552, 2079982, 2098256, 2120315, 2139057, 2163183, 2181925, 2216391, 2235133, 2261359, 2280101, 2319054, 2338281, 2362674, 2381901]"
"('Scanner.java', 'java.util.Scanner', 'getCompleteTokenInBuffer', '(?s).*', '""JMX server connection timeout 23"" daemon prio=10 tid=0x00007fd67c00c000 nid=0x1042 in Object.wait() [0x00007fd68fdfc000]\n   java.lang.Thread.State: TIMED_WAITING (on object monitor)\n\tat java.lang.Object.wait(Native Method)\n\t- waiting on <0x000000070775e830> (a [I)\n\tat com.sun.jmx.remote.internal.ServerCommunicatorAdmin$Timeout.run(ServerCommunicatorAdmin.java:168)\n\t- locked <0x000000070775e830> (a [I)\n\tat java.lang.Thread.run(Thread.java:745)\n\n   Locked ownable synchronizers:\n\t- None\n\n""RMI TCP Connection(1)-127.0.0.1"" daemon prio=10 tid=0x00007fd688001800 nid=0x1041 runnable [0x00007fd68fefc000]\n   java.lang.Thread.State: RUNNABLE\n\tat java.net.SocketInputStream.socketRead0(Native Method)\n\tat java.net.SocketInputStream.read(SocketInputStream.java:152)\n\tat java.net.SocketInputStream.read(SocketInputStream.java:122)\n\tat java.io.BufferedInputStream.fill(BufferedInputStream.java:235)\n\tat java.io.BufferedInputStream.read(BufferedInputStream.java:254)\n\t- locked <0x00000007077e3ab0> (a java.io.BufferedInputStream)\n\t')",[1519988]
"('ThreadDumpFactory.java', 'com.github.olivergondza.dumpling.factory.ThreadDumpFactory', 'initHeader', '#\\d+', '[0x00007feb5e377000]')","[14307, 14341]"
"('Description.java', 'org.junit.runner.Description', 'methodAndClassNamePatternGroupOrDefault', '([\\s\\S]*)\\((.*)\\)', 'hasHelp(com.github.olivergondza.dumpling.cli.ThreaddumpCommandTest)')",[396]
"('FilterBuilder.java', 'org.reflections.util.FilterBuilder$Include', 'apply', 'com\\.github\\.olivergondza\\.dumpling.*', 'com.github.olivergondza.dumpling.cli.Factories$ThreadDump.class')","[61635, 80475, 106603, 125443, 147414, 166254, 186791, 205631, 226168, 244393, 263007, 282817, 302777, 322587, 342638, 362448, 382499, 402309, 422269, 442079, 470837, 489677, 510214, 529054, 549591, 568431, 588968, 607808, 628345, 647185, 667722, 685947, 706201, 729481, 752966, 776526, 801873, 825153, 848433, 871713, 894993, 918478, 942243, 979365, 1002645, 1025925, 1049205, 1072485, 1095765, 1119045, 1142530, 1168197, 1191477, 1214757, 1235987, 1254417, 1272847, 1291277, 1309707, 1328137, 1346977, 1367514, 1386354, 1406891, 1425116, 1443320, 1462160, 1488204, 1507044, 1538085, 1556925, 1575915, 1594345, 1613185, 1632175, 1650605, 1669445, 1690416, 1720604, 1738829, 1756979, 1775819, 1802001, 1820431, 1839271, 1858261, 1876691, 1895121, 1913756, 1932466, 1951101, 1969811, 1988241, 2006876, 2025586, 2044426, 2063416, 2081846, 2100071, 2122179, 2141019, 2165047, 2183887, 2218255, 2237095, 2263223, 2282063, 2320967, 2340292, 2364587, 2383912]"
"('Scanner.java', 'java.util.Scanner', 'getCompleteTokenInBuffer', '(?s).*', '""process reaper"" daemon prio=10 tid=0x00007fd6b8029000 nid=0xdd9 waiting on condition [0x00007fd6e00ee000]\n   java.lang.Thread.State: TIMED_WAITING (parking)\n\tat sun.misc.Unsafe.park(Native Method)\n\t- parking to wait for  <0x00000007070054d0> (a java.util.concurrent.SynchronousQueue$TransferStack)\n\tat java.util.concurrent.locks.LockSupport.parkNanos(LockSupport.java:226)\n\tat java.util.concurrent.SynchronousQueue$TransferStack.awaitFulfill(SynchronousQueue.java:460)\n\tat java.util.concurrent.SynchronousQueue$TransferStack.transfer(SynchronousQueue.java:359)\n\tat java.util.concurrent.SynchronousQueue.poll(SynchronousQueue.java:942)\n\tat java.util.concurrent.ThreadPoolExecutor.getTask(ThreadPoolExecutor.java:1068)\n\tat java.util.concurrent.ThreadPoolExecutor.runWorker(ThreadPoolExecutor.java:1130)\n\tat java.util.concurrent.ThreadPoolExecutor$Worker.run(ThreadPoolExecutor.java:615)\n\tat java.lang.Thread.run(Thread.java:745)\n\n   Locked ownable synchronizers:\n\t- None\n\n""process reaper"" daemon prio=10 tid=0x00007fd6b800d000 nid=0xdc9 runnable [0x00007fd6f804f000]\n   java.lang.Thread.State: RUNNABLE\n\tat java.lang.UNIXProcess.waitForProcessExit(Native Method)\n\tat java.lang.UNIXProcess.access$500(UNIXProcess.java:55)\n\tat java.lang.UNIXProcess$4.run(UNIXProcess.java:228)\n\tat java.util.concurrent.ThreadPoolExecutor.runWorker(ThreadPoolExecutor.java:1145)\n\tat java.util.concurrent.ThreadPoolExecutor$Worker.run(ThreadPoolExecutor.java:615)\n\tat java.lang.Thread.run(Thread.java:745)\n\n   Locked ownable synchronizers:\n\t- <0x0000000707005618> (a java.util.concurrent.ThreadPoolExecutor$Worker)\n\n""pool-1-thread-1"" daemon prio=10 tid=0x00007fd6fc43d800 nid=0xdc7 runnable [0x00007fd6f8153000]\n   java.lang.Thread.State: RUNNABLE\n\tat java.io.FileInputStream.readBytes(Native Method)\n\tat java.io.FileInputStream.read(FileInputStream.java:272)\n\tat java.io.BufferedInputStream.read1(BufferedInputStream.java:273)\n\tat java.io.BufferedInputStream.read(BufferedInputStream.java:334)\n\t- locked <0x00000007b78ec540> (a java.lang.UNIXProcess$ProcessPipeInputStr')","[1522746, 1523116]"
"('Scanner.java', 'java.util.Scanner', 'getCompleteTokenInBuffer', '(?s).*', '""main"" prio=10 tid=0x00007f2a30007800 nid=0xe83 runnable [0x00007f2a397b3000]\n   java.lang.Thread.State: TIMED_WAITING (parking)\n\tat sun.misc.Unsafe.park(Native Method)\n\tat java.util.concurrent.locks.LockSupport.parkNanos(LockSupport.java:349)\n\tat sun.reflect.GeneratedMethodAccessor2.invoke(Unknown Source)\n\tat sun.reflect.DelegatingMethodAccessorImpl.invoke(DelegatingMethodAccessorImpl.java:43)\n\tat java.lang.reflect.Method.invoke(Method.java:606)\n\tat org.codehaus.groovy.reflection.CachedMethod.invoke(CachedMethod.java:90)\n\tat groovy.lang.MetaMethod.doMethodInvoke(MetaMethod.java:233)\n\tat org.codehaus.groovy.runtime.callsite.StaticMetaMethodSite$StaticMetaMethodSiteNoUnwrap.invoke(StaticMetaMethodSite.java:130)\n\tat org.codehaus.groovy.runtime.callsite.StaticMetaMethodSite.call(StaticMetaMethodSite.java:88)\n\tat org.codehaus.groovy.runtime.callsite.AbstractCallSite.call(AbstractCallSite.java:116)\n\tat dumpling-script.run(dumpling-script:19)\n\tat groovy.lang.GroovyShell.runScriptOrMainOrTestOrRunnable(GroovyShell.java:258)\n\tat groovy.lang.GroovyShell.run(GroovyShell.java:550)\n\tat com.github.olivergondza.dumpling.cli.GroovyCommand.run(GroovyCommand.java:94)\n\tat com.github.olivergondza.dumpling.cli.Main.run(Main.java:75)\n\tat com.github.olivergondza.dumpling.cli.Main.main(Main.java:58)\n\n   Locked ownable synchronizers:\n\t- None\n\n""VM Thread"" prio=10 tid=0x00007f2a30067800 nid=0xe88 runnable \n\n""GC task thread#0 (ParallelGC)"" prio=10 tid=0x00007f2a3001d800 nid=0xe84 runnable \n\n""GC task thread#1 (ParallelGC)"" prio=10 tid=0x00007f2a3001f800 nid=0xe85 runnable \n\n""GC task thread#2 (ParallelGC)"" prio=10 tid=0x00007f2a30021000 nid=0xe86 runnable \n\n""GC task thread#3 (ParallelGC)"" prio=10 tid=0x00007f2a30023000 nid=0xe87 runnable \n\n""VM Periodic Task Thread"" prio=10 tid=0x00007f2a300a9800 nid=0xe8f waiting on condition \n\nJNI global references: 269\n\n')","[18064, 18271, 18409, 18547, 18685, 18823, 18961, 19237]"
"('Scanner.java', 'java.util.Scanner', 'getCompleteTokenInBuffer', '(?s).*', '2018-01-11 20:22:04\nFull thread dump Java HotSpot(TM) 64-Bit Server VM (24.80-b11 mixed mode):\n\n""Attach Listener"" daemon prio=10 tid=0x00007f0ce8001000 nid=0xee0 waiting on condition [0x0000000000000000]\n   java.lang.Thread.State: RUNNABLE\n\n   Locked ownable synchronizers:\n\t- None\n\n""reacquiring"" prio=10 tid=0x00007f0d1c568000 nid=0xed1 in Object.wait() [0x00007f0d0a603000]\n   java.lang.Thread.State: BLOCKED (on object monitor)\n\tat java.lang.Object.wait(Native Method)\n\t- waiting on <0x00000007ae981058> (a java.lang.Object)\n\tat java.lang.Object.wait(Object.java:503)\n\tat java_lang_Object$wait.call(Unknown Source)\n\tat org.codehaus.groovy.runtime.callsite.CallSiteArray.defaultCall(CallSiteArray.java:45)\n\tat org.codehaus.groovy.runtime.callsite.AbstractCallSite.call(AbstractCallSite.java:108)\n\tat org.codehaus.groovy.runtime.callsite.AbstractCallSite.call(AbstractCallSite.java:112)\n\tat dumpling-script$1.run(dumpling-script:27)\n\t- locked <0x00000007ae981058> (a java.lang.Object)\n\t- locked <0x00000007ae9b88d8> (a java')","[22578, 22631]"
"('ThreadDumpFactory.java', 'com.github.olivergondza.dumpling.factory.ThreadDumpFactory', 'initHeader', '#\\d+', '[0x00007fd68fffe000]')","[455451, 455490, 959640, 959691, 1520697, 1520734]"
"('FilterBuilder.java', 'org.reflections.util.FilterBuilder$Include', 'apply', 'com\\.github\\.olivergondza\\.dumpling.*', 'com/github/olivergondza/dumpling/Util.class')","[71870, 91248, 116838, 136216, 157649, 177027, 197026, 216404, 236403, 254359, 273780, 294128, 313550, 333898, 353411, 373759, 393272, 413620, 433042, 453390, 481072, 500450, 520449, 539827, 559826, 579204, 599203, 618581, 638580, 657958, 677957, 695913, 719126, 742406, 766160, 789451, 814798, 838078, 861358, 884638, 907918, 931672, 955437, 992290, 1015570, 1038850, 1062130, 1085410, 1108690, 1131970, 1155724, 1181122, 1204402, 1227682, 1246222, 1264652, 1283082, 1301512, 1319942, 1338372, 1357750, 1377749, 1397127, 1417126, 1435082, 1453555, 1472933, 1498439, 1517817, 1548320, 1567698, 1586150, 1604580, 1623958, 1642410, 1660840, 1680218, 1700651, 1730839, 1748795, 1767214, 1786592, 1812236, 1830666, 1850044, 1868496, 1886926, 1905356, 1924260, 1942701, 1961605, 1980046, 1998476, 2017380, 2035821, 2055199, 2073651, 2092081, 2110037, 2132414, 2151792, 2175282, 2194660, 2228490, 2247868, 2273458, 2292836, 2331471, 2351334, 2375091, 2394954]"
"('Scanner.java', 'java.util.Scanner', 'getCompleteTokenInBuffer', '(?s).*', '""Finalizer"" daemon prio=10 tid=0x00007fae5c06e000 nid=0xf1b in Object.wait() [0x00007fae589f8000]\n   java.lang.Thread.State: WAITING (on object monitor)\n\tat java.lang.Object.wait(Native Method)\n\t- waiting on <0x00000007b0f08518> (a java.lang.ref.ReferenceQueue$Lock)\n\tat java.lang.ref.ReferenceQueue.remove(ReferenceQueue.java:135)\n\t- locked <0x00000007b0f08518> (a java.lang.ref.ReferenceQueue$Lock)\n\tat java.lang.ref.ReferenceQueue.remove(ReferenceQueue.java:151)\n\tat java.lang.ref.Finalizer$FinalizerThread.run(Finalizer.java:209)\n\n   Locked ownable synchronizers:\n\t- None\n\n""Reference Handler"" daemon prio=10 tid=0x00007fae5c06c000 nid=0xf1a in Object.wait() [0x00007fae58af9000]\n   java.lang.Thread.State: WAITING (on object monitor)\n\tat java.lang.Object.wait(Native Method)\n\t- waiting on <0x00000007b0f102c8> (a java.lang.ref.Reference$Lock)\n\tat java.lang.Object.wait(Object.java:503)\n\tat java.lang.ref.Reference$ReferenceHandler.run(Reference.java:133)\n\t- locked <0x00000007b0f102c8> (a java.lang.ref.Reference$Lock)\n\n')",[31051]
"('Scanner.java', 'java.util.Scanner', 'getCompleteTokenInBuffer', '(?s).*', '3528\n')",[1835]
"('ThreadDumpFactory.java', 'com.github.olivergondza.dumpling.factory.ThreadDumpFactory', 'initHeader', '#\\d+', '[0x00007f414e48e000]')","[2307425, 2307451, 2309470, 2309496, 2311515, 2311541, 2352560, 2352596, 2355135, 2355161, 2396180, 2396216]"
"('Description.java', 'org.junit.runner.Description', 'methodAndClassNamePatternGroupOrDefault', '([\\s\\S]*)\\((.*)\\)', 'runScriptThatDoesNotExist(com.github.olivergondza.dumpling.cli.GroovyCommandTest)')",[1100]
"('FilterBuilder.java', 'org.reflections.util.FilterBuilder$Include', 'apply', 'com\\.github\\.olivergondza\\.dumpling.*', 'com/github/olivergondza/dumpling/factory/PidRuntimeFactory.class')","[69106, 88338, 114074, 133306, 154885, 174117, 194262, 213494, 233639, 251668, 270870, 291072, 310640, 330842, 350501, 370703, 390362, 410564, 430132, 450334, 478308, 497540, 517685, 536917, 557062, 576294, 596439, 615671, 635816, 655048, 675193, 693222, 715632, 738912, 762593, 785957, 811304, 834584, 857864, 881144, 904424, 928105, 951870, 988796, 1012076, 1035356, 1058636, 1081916, 1105196, 1128476, 1152157, 1177628, 1200908, 1224188, 1243458, 1261888, 1280318, 1298748, 1317178, 1335608, 1354840, 1374985, 1394217, 1414362, 1432391, 1450791, 1470023, 1495675, 1514907, 1545556, 1564788, 1583386, 1601816, 1621048, 1639646, 1658076, 1677308, 1697887, 1728075, 1746104, 1764450, 1783682, 1809472, 1827902, 1847134, 1865732, 1884162, 1902592, 1921423, 1939937, 1958768, 1977282, 1995712, 2014543, 2033057, 2052289, 2070887, 2089317, 2107346, 2129650, 2148882, 2172518, 2191750, 2225726, 2244958, 2270694, 2289926, 2328634, 2348351, 2372254, 2391971]"
"('Description.java', 'org.junit.runner.Description', 'methodAndClassNamePatternGroupOrDefault', '([\\s\\S]*)\\((.*)\\)', 'factoryWithoutLocator(com.github.olivergondza.dumpling.cli.MainTest)')",[1518]
"('FilterBuilder.java', 'org.reflections.util.FilterBuilder$Include', 'apply', 'com\\.github\\.olivergondza\\.dumpling.*', 'com.github.olivergondza.dumpling.factory.JmxRuntimeFactory$RemoteConnector.class')","[68231, 87417, 113199, 132385, 154010, 173196, 193387, 212573, 232764, 250816, 269949, 290105, 309719, 329875, 349580, 369736, 389441, 409597, 429211, 449367, 477433, 496619, 516810, 535996, 556187, 575373, 595564, 614750, 634941, 654127, 674318, 692370, 714527, 737807, 761465, 784852, 810199, 833479, 856759, 880039, 903319, 926977, 950742, 987691, 1010971, 1034251, 1057531, 1080811, 1104091, 1127371, 1151029, 1176523, 1199803, 1223083, 1242583, 1261013, 1279443, 1297873, 1316303, 1334733, 1353919, 1374110, 1393296, 1413487, 1431539, 1449916, 1469102, 1494800, 1513986, 1544681, 1563867, 1582511, 1600941, 1620127, 1638771, 1657201, 1676387, 1697012, 1727200, 1745252, 1763575, 1782761, 1808597, 1827027, 1846213, 1864857, 1883287, 1901717, 1920525, 1939062, 1957870, 1976407, 1994837, 2013645, 2032182, 2051368, 2070012, 2088442, 2106494, 2128775, 2147961, 2171643, 2190829, 2224851, 2244037, 2269819, 2289005, 2327736, 2347407, 2371356, 2391027]"
"('FilterBuilder.java', 'org.reflections.util.FilterBuilder$Exclude', 'apply', 'java.lang.Object', 'com.github.olivergondza.dumpling.TestThread.jmxremote.access')","[71381, 90733, 116349, 135701, 157160, 176512, 196537, 215889, 235914, 253883, 273265, 293587, 313035, 333357, 352896, 373218, 392757, 413079, 432527, 452849, 480583, 499935, 519960, 539312, 559337, 578689, 598714, 618066, 638091, 657443, 677468, 695437, 718507, 741787, 765528, 788832, 814179, 837459, 860739, 884019, 907299, 931040, 954805, 991671, 1014951, 1038231, 1061511, 1084791, 1108071, 1131351, 1155092, 1180503, 1203783, 1227063, 1245733, 1264163, 1282593, 1301023, 1319453, 1337883, 1357235, 1377260, 1396612, 1416637, 1434606, 1453066, 1472418, 1497950, 1517302, 1547831, 1567183, 1585661, 1604091, 1623443, 1641921, 1660351, 1679703, 1700162, 1730350, 1748319, 1766725, 1786077, 1811747, 1830177, 1849529, 1868007, 1886437, 1904867, 1923758, 1942212, 1961103, 1979557, 1997987, 2016878, 2035332, 2054684, 2073162, 2091592, 2109561, 2131925, 2151277, 2174793, 2194145, 2228001, 2247353, 2272969, 2292321, 2330969, 2350806, 2374589, 2394426]"
"('Description.java', 'org.junit.runner.Description', 'methodAndClassNamePatternGroupOrDefault', '([\\s\\S]*)\\((.*)\\)', 'runScriptThatDoesExist(com.github.olivergondza.dumpling.cli.GroovyCommandTest)')",[1078]
"('FilterBuilder.java', 'org.reflections.util.FilterBuilder$Exclude', 'apply', 'java.lang.Object', 'java.lang.Thread')","[59123, 71269, 71719, 77831, 90615, 91089, 104091, 116237, 116687, 122799, 135583, 136057, 144902, 157048, 157498, 163610, 176394, 176868, 184279, 196425, 196875, 202987, 215771, 216245, 223656, 235802, 236252, 241947, 253774, 254212, 260363, 273147, 273621, 280041, 293463, 293961, 300133, 312917, 313391, 319811, 333233, 333731, 339994, 352778, 353252, 359672, 373094, 373592, 379855, 392639, 393113, 399533, 412955, 413453, 419625, 432409, 432883, 439303, 452725, 453223, 468325, 480471, 480921, 487033, 499817, 500291, 507702, 519848, 520298, 526410, 539194, 539668, 547079, 559225, 559675, 565787, 578571, 579045, 586456, 598602, 599052, 605164, 617948, 618422, 625833, 637979, 638429, 644541, 657325, 657799, 665210, 677356, 677806, 683501, 695328, 695766, 703029, 718365, 718935, 726309, 741645, 742215, 749728, 765383, 765965, 773354, 788690, 789260, 798701, 814037, 814607, 821981, 837317, 837887, 845261, 860597, 861167, 868541, 883877, 884447, 891821, 907157, 907727, 915240, 930895, 931477, 939005, 954660, 955242, 976193, 991529, 992099, 999473, 1014809, 1015379, 1022753, 1038089, 1038659, 1046033, 1061369, 1061939, 1069313, 1084649, 1085219, 1092593, 1107929, 1108499, 1115873, 1131209, 1131779, 1139292, 1154947, 1155529, 1165025, 1180361, 1180931, 1188305, 1203641, 1204211, 1211585, 1226921, 1227491, 1233475, 1245621, 1246071, 1251905, 1264051, 1264501, 1270335, 1282481, 1282931, 1288765, 1300911, 1301361, 1307195, 1319341, 1319791, 1325625, 1337771, 1338221, 1344333, 1357117, 1357591, 1365002, 1377148, 1377598, 1383710, 1396494, 1396968, 1404379, 1416525, 1416975, 1422670, 1434497, 1434935, 1440808, 1452954, 1453404, 1459516, 1472300, 1472774, 1485692, 1497838, 1498288, 1504400, 1517184, 1517658, 1535573, 1547719, 1548169, 1554281, 1567065, 1567539, 1573403, 1585549, 1585999, 1591833, 1603979, 1604429, 1610541, 1623325, 1623799, 1629663, 1641809, 1642259, 1648093, 1660239, 1660689, 1666801, 1679585, 1680059, 1687904, 1700050, 1700500, 1718092, 1730238, 1730688, 1736383, 1748210, 1748648, 1754467, 1766613, 1767063, 1773175, 1785959, 1786433, 1799489, 1811635, 1812085, 1817919, 1830065, 1830515, 1836627, 1849411, 1849885, 1855749, 1867895, 1868345, 1874179, 1886325, 1886775, 1892609, 1904755, 1905205, 1911178, 1923643, 1924105, 1929954, 1942100, 1942550, 1948523, 1960988, 1961450, 1967299, 1979445, 1979895, 1985729, 1997875, 1998325, 2004298, 2016763, 2017225, 2023074, 2035220, 2035670, 2041782, 2054566, 2055040, 2060904, 2073050, 2073500, 2079334, 2091480, 2091930, 2097625, 2109452, 2109890, 2119667, 2131813, 2132263, 2138375, 2151159, 2151633, 2162535, 2174681, 2175131, 2181243, 2194027, 2194501, 2215743, 2227889, 2228339, 2234451, 2247235, 2247709, 2260711, 2272857, 2273307, 2279419, 2292203, 2292677, 2318389, 2330854, 2331316, 2337582, 2350685, 2351171, 2362009, 2374474, 2374936, 2381202, 2394305, 2394791]"
"('FilterBuilder.java', 'org.reflections.util.FilterBuilder$Exclude', 'apply', 'java.lang.Object', 'com.github.olivergondza.dumpling.model.ProcessRuntime')","[62171, 63237, 81039, 82161, 107139, 108205, 126007, 127129, 147950, 149016, 166818, 167940, 187327, 188393, 206195, 207317, 226704, 227770, 244915, 245953, 263571, 264693, 283409, 284587, 303341, 304463, 323179, 324357, 343202, 344324, 363040, 364218, 383063, 384185, 402901, 404079, 422833, 423955, 442671, 443849, 471373, 472439, 490241, 491363, 510750, 511816, 529618, 530740, 550127, 551193, 568995, 570117, 589504, 590570, 608372, 609494, 628881, 629947, 647749, 648871, 668258, 669324, 686469, 687507, 706877, 708223, 730157, 731503, 753656, 755030, 777202, 778548, 802549, 803895, 825829, 827175, 849109, 850455, 872389, 873735, 895669, 897015, 919168, 920542, 942933, 944307, 980041, 981387, 1003321, 1004667, 1026601, 1027947, 1049881, 1051227, 1073161, 1074507, 1096441, 1097787, 1119721, 1121067, 1143220, 1144594, 1168873, 1170219, 1192153, 1193499, 1215433, 1216779, 1236523, 1237589, 1254953, 1256019, 1273383, 1274449, 1291813, 1292879, 1310243, 1311309, 1328673, 1329739, 1347541, 1348663, 1368050, 1369116, 1386918, 1388040, 1407427, 1408493, 1425638, 1426676, 1443856, 1444922, 1462724, 1463846, 1488740, 1489806, 1507608, 1508730, 1538621, 1539687, 1557489, 1558611, 1576451, 1577517, 1594881, 1595947, 1613749, 1614871, 1632711, 1633777, 1651141, 1652207, 1670009, 1671131, 1690952, 1692018, 1721140, 1722206, 1739351, 1740389, 1757515, 1758581, 1776383, 1777505, 1802537, 1803603, 1820967, 1822033, 1839835, 1840957, 1858797, 1859863, 1877227, 1878293, 1895657, 1896723, 1914306, 1915400, 1933002, 1934068, 1951651, 1952745, 1970347, 1971413, 1988777, 1989843, 2007426, 2008520, 2026122, 2027188, 2044990, 2046112, 2063952, 2065018, 2082382, 2083448, 2100593, 2101631, 2122715, 2123781, 2141583, 2142705, 2165583, 2166649, 2184451, 2185573, 2218791, 2219857, 2237659, 2238781, 2263759, 2264825, 2282627, 2283749, 2321517, 2322611, 2340870, 2342020, 2365137, 2366231, 2384490, 2385640]"
"('ThreadDumpFactory.java', 'com.github.olivergondza.dumpling.factory.ThreadDumpFactory', 'initHeader', '#\\d+', '#18')","[374285, 374313]"
"('FilterBuilder.java', 'org.reflections.util.FilterBuilder$Include', 'apply', 'com\\.github\\.olivergondza\\.dumpling.*', 'com.github.olivergondza.dumpling.model.jmx.JmxRuntime.class')","[62969, 81879, 107937, 126847, 148748, 167658, 188125, 207035, 227502, 245692, 264411, 284291, 304181, 324061, 344042, 363922, 383903, 403783, 423673, 443553, 472171, 491081, 511548, 530458, 550925, 569835, 590302, 609212, 629679, 648589, 669056, 687246, 707885, 731165, 754685, 778210, 803557, 826837, 850117, 873397, 896677, 920197, 943962, 981049, 1004329, 1027609, 1050889, 1074169, 1097449, 1120729, 1144249, 1169881, 1193161, 1216441, 1237321, 1255751, 1274181, 1292611, 1311041, 1329471, 1348381, 1368848, 1387758, 1408225, 1426415, 1444654, 1463564, 1489538, 1508448, 1539419, 1558329, 1577249, 1595679, 1614589, 1633509, 1651939, 1670849, 1691750, 1721938, 1740128, 1758313, 1777223, 1803335, 1821765, 1840675, 1859595, 1878025, 1896455, 1915125, 1933800, 1952470, 1971145, 1989575, 2008245, 2026920, 2045830, 2064750, 2083180, 2101370, 2123513, 2142423, 2166381, 2185291, 2219589, 2238499, 2264557, 2283467, 2322336, 2341731, 2365956, 2385351]"
"('FilterBuilder.java', 'org.reflections.util.FilterBuilder$Exclude', 'apply', 'java.lang.Object', 'com.github.olivergondza.dumpling.query.command.blocking-tree.usage')","[66745, 85853, 111713, 130821, 152524, 171632, 191901, 211009, 231278, 249369, 268385, 288463, 308155, 328233, 348016, 368094, 387877, 407955, 427647, 447725, 475947, 495055, 515324, 534432, 554701, 573809, 594078, 613186, 633455, 652563, 672832, 690923, 712651, 735931, 759550, 782976, 808323, 831603, 854883, 878163, 901443, 925062, 948827, 985815, 1009095, 1032375, 1055655, 1078935, 1102215, 1125495, 1149114, 1174647, 1197927, 1221207, 1241097, 1259527, 1277957, 1296387, 1314817, 1333247, 1352355, 1372624, 1391732, 1412001, 1430092, 1448430, 1467538, 1493314, 1512422, 1543195, 1562303, 1581025, 1599455, 1618563, 1637285, 1655715, 1674823, 1695526, 1725714, 1743805, 1762089, 1781197, 1807111, 1825541, 1844649, 1863371, 1881801, 1900231, 1919000, 1937576, 1956345, 1974921, 1993351, 2012120, 2030696, 2049804, 2068526, 2086956, 2105047, 2127289, 2146397, 2170157, 2189265, 2223365, 2242473, 2268333, 2287441, 2326211, 2345804, 2369831, 2389424]"
"('ThreadDumpFactory.java', 'com.github.olivergondza.dumpling.factory.ThreadDumpFactory', 'initHeader', '#\\d+', '[0x00007f0d23b75000]')","[25066, 25100]"
"('FilterBuilder.java', 'org.reflections.util.FilterBuilder$Include', 'apply', 'com\\.github\\.olivergondza\\.dumpling.*', 'com/github/olivergondza/dumpling/query/Deadlocks$Result.class')","[67852, 87018, 112820, 131986, 153631, 172797, 193008, 212174, 232385, 250447, 269550, 289686, 309320, 329456, 349181, 369317, 389042, 409178, 428812, 448948, 477054, 496220, 516431, 535597, 555808, 574974, 595185, 614351, 634562, 653728, 673939, 692001, 714048, 737328, 760976, 784373, 809720, 833000, 856280, 879560, 902840, 926488, 950253, 987212, 1010492, 1033772, 1057052, 1080332, 1103612, 1126892, 1150540, 1176044, 1199324, 1222604, 1242204, 1260634, 1279064, 1297494, 1315924, 1334354, 1353520, 1373731, 1392897, 1413108, 1431170, 1449537, 1468703, 1494421, 1513587, 1544302, 1563468, 1582132, 1600562, 1619728, 1638392, 1656822, 1675988, 1696633, 1726821, 1744883, 1763196, 1782362, 1808218, 1826648, 1845814, 1864478, 1882908, 1901338, 1920136, 1938683, 1957481, 1976028, 1994458, 2013256, 2031803, 2050969, 2069633, 2088063, 2106125, 2128396, 2147562, 2171264, 2190430, 2224472, 2243638, 2269440, 2288606, 2327347, 2346998, 2370967, 2390618]"
"('FilterBuilder.java', 'org.reflections.util.FilterBuilder$Include', 'apply', 'com\\.github\\.olivergondza\\.dumpling.*', 'com/github/olivergondza/dumpling/model/jvm/JvmRuntime.class')","[64306, 83286, 109274, 128254, 150085, 169065, 189462, 208442, 228839, 246994, 265818, 285768, 305588, 325538, 345449, 365399, 385310, 405260, 425080, 445030, 473508, 492488, 512885, 531865, 552262, 571242, 591639, 610619, 631016, 649996, 670393, 688548, 709572, 732852, 756407, 779897, 805244, 828524, 851804, 875084, 898364, 921919, 945684, 982736, 1006016, 1029296, 1052576, 1075856, 1099136, 1122416, 1145971, 1171568, 1194848, 1218128, 1238658, 1257088, 1275518, 1293948, 1312378, 1330808, 1349788, 1370185, 1389165, 1409562, 1427717, 1445991, 1464971, 1490875, 1509855, 1540756, 1559736, 1578586, 1597016, 1615996, 1634846, 1653276, 1672256, 1693087, 1723275, 1741430, 1759650, 1778630, 1804672, 1823102, 1842082, 1860932, 1879362, 1897792, 1916497, 1935137, 1953842, 1972482, 1990912, 2009617, 2028257, 2047237, 2066087, 2084517, 2102672, 2124850, 2143830, 2167718, 2186698, 2220926, 2239906, 2265894, 2284874, 2323708, 2343173, 2367328, 2386793]"
"('FilterBuilder.java', 'org.reflections.util.FilterBuilder$Include', 'apply', 'com\\.github\\.olivergondza\\.dumpling.*', 'com/github/olivergondza/dumpling/cli/GrepCommand.class')","[59808, 78552, 104776, 123520, 145587, 164331, 184964, 203708, 224341, 242614, 261084, 280798, 300854, 320568, 340715, 360429, 380576, 400290, 420346, 440060, 469010, 487754, 508387, 527131, 547764, 566508, 587141, 605885, 626518, 645262, 665895, 684168, 703894, 727174, 750611, 774219, 799566, 822846, 846126, 869406, 892686, 916123, 939888, 977058, 1000338, 1023618, 1046898, 1070178, 1093458, 1116738, 1140175, 1165890, 1189170, 1212450, 1234160, 1252590, 1271020, 1289450, 1307880, 1326310, 1345054, 1365687, 1384431, 1405064, 1423337, 1441493, 1460237, 1486377, 1505121, 1536258, 1555002, 1574088, 1592518, 1611262, 1630348, 1648778, 1667522, 1688589, 1718777, 1737050, 1755152, 1773896, 1800174, 1818604, 1837348, 1856434, 1874864, 1893294, 1911881, 1930639, 1949226, 1967984, 1986414, 2005001, 2023759, 2042503, 2061589, 2080019, 2098292, 2120352, 2139096, 2163220, 2181964, 2216428, 2235172, 2261396, 2280140, 2319092, 2338321, 2362712, 2381941]"
"('Scanner.java', 'java.util.Scanner', 'getCompleteTokenInBuffer', '(?s).*', '""process reaper"" daemon prio=10 tid=0x00007fd6b8029000 nid=0xdd9 waiting on condition [0x00007fd6e00ee000]\n   java.lang.Thread.State: TIMED_WAITING (parking)\n\tat sun.misc.Unsafe.park(Native Method)\n\t- parking to wait for  <0x00000007070054d0> (a java.util.concurrent.SynchronousQueue$TransferStack)\n\tat java.util.concurrent.locks.LockSupport.parkNanos(LockSupport.java:226)\n\tat java.util.concurrent.SynchronousQueue$TransferStack.awaitFulfill(SynchronousQueue.java:460)\n\tat java.util.concurrent.SynchronousQueue$TransferStack.transfer(SynchronousQueue.java:359)\n\tat java.util.concurrent.SynchronousQueue.poll(SynchronousQueue.java:942)\n\tat java.util.concurrent.ThreadPoolExecutor.getTask(ThreadPoolExecutor.java:1068)\n\tat java.util.concurrent.ThreadPoolExecutor.runWorker(ThreadPoolExecutor.java:1130)\n\tat java.util.concurrent.ThreadPoolExecutor$Worker.run(ThreadPoolExecutor.java:615)\n\tat java.lang.Thread.run(Thread.java:745)\n\n   Locked ownable synchronizers:\n\t- None\n\n""process reaper"" daemon prio=10 tid=0x00007fd6b800d000 nid=0xdc9 runnable [0x00007fd6f804f000]\n   java.lang.Thread.State: RUNNABLE\n\tat java.lang.UNIXProcess.waitForProcessExit(Native Method)\n\tat java.lang.UNIXProcess.access$500(UNIXProcess.java:55)\n\tat java.lang.UNIXProcess$4.run(UNIXProcess.java:228)\n\tat java.util.concurrent.ThreadPoolExecutor.runWorker(ThreadPoolExecutor.java:1145)\n\tat java.util.concurrent.ThreadPoolExecutor$Worker.run(ThreadPoolExecutor.java:615)\n\tat java.lang.Thread.run(Thread.java:745)\n\n   Locked ownable synchronizers:\n\t- <0x0000000707005618> (a java.util.concurrent.ThreadPoolExecutor$Worker)\n\n""pool-1-thread-1"" daemon prio=10 tid=0x00007fd6fc43d800 nid=0xdc7 runnable [0x00007fd6f8152000]\n   java.lang.Thread.State: RUNNABLE\n\tat java.io.FileInputStream.readBytes(Native Method)\n\tat java.io.FileInputStream.read(FileInputStream.java:272)\n\tat java.io.BufferedInputStream.read1(BufferedInputStream.java:273)\n\tat java.io.BufferedInputStream.read(BufferedInputStream.java:334)\n\t- locked <0x00000007b1590d30> (a java.lang.UNIXProcess$ProcessPipeInputStr')","[962361, 962857]"
"('FilterBuilder.java', 'org.reflections.util.FilterBuilder$Include', 'apply', 'com\\.github\\.olivergondza\\.dumpling.*', 'com.github.olivergondza.dumpling.query.TopContenders.class')","[67469, 86615, 112437, 131583, 153248, 172394, 192625, 211771, 232002, 250074, 269147, 289263, 308917, 329033, 348778, 368894, 388639, 408755, 428409, 448525, 476671, 495817, 516048, 535194, 555425, 574571, 594802, 613948, 634179, 653325, 673556, 691628, 713565, 736845, 760483, 783890, 809237, 832517, 855797, 879077, 902357, 925995, 949760, 986729, 1010009, 1033289, 1056569, 1079849, 1103129, 1126409, 1150047, 1175561, 1198841, 1222121, 1241821, 1260251, 1278681, 1297111, 1315541, 1333971, 1353117, 1373348, 1392494, 1412725, 1430797, 1449154, 1468300, 1494038, 1513184, 1543919, 1563065, 1581749, 1600179, 1619325, 1638009, 1656439, 1675585, 1696250, 1726438, 1744510, 1762813, 1781959, 1807835, 1826265, 1845411, 1864095, 1882525, 1900955, 1919743, 1938300, 1957088, 1975645, 1994075, 2012863, 2031420, 2050566, 2069250, 2087680, 2105752, 2128013, 2147159, 2170881, 2190027, 2224089, 2243235, 2269057, 2288203, 2326954, 2346585, 2370574, 2390205]"
"('ThreadDumpFactory.java', 'com.github.olivergondza.dumpling.factory.ThreadDumpFactory', 'initHeader', '#\\d+', '[0x00002ad46b06b000]')","[92878, 92913, 1474541, 1474575, 1703469, 1703559, 1788222, 1788257, 2205088, 2205114, 2249498, 2249533, 2294466, 2294501, 2301406, 2301432]"
"('FilterBuilder.java', 'org.reflections.util.FilterBuilder$Exclude', 'apply', 'java.lang.Object', 'com.github.olivergondza.dumpling.factory.ThreadDumpFactoryVendorTest.parkedWithBlocker.groovy')","[57113, 75715, 102081, 120683, 142892, 161494, 182269, 200871, 221646, 239990, 258247, 277819, 298017, 317589, 337878, 357450, 377739, 397311, 417509, 437081, 466315, 484917, 505692, 524294, 545069, 563671, 584446, 603048, 623823, 642425, 663200, 681544, 700489, 723769, 747135, 770814, 796161, 819441, 842721, 866001, 889281, 912647, 936412, 973653, 996933, 1020213, 1043493, 1066773, 1090053, 1113333, 1136699, 1162485, 1185765, 1209045, 1231465, 1249895, 1268325, 1286755, 1305185, 1323615, 1342217, 1362992, 1381594, 1402369, 1420713, 1438798, 1457400, 1483682, 1502284, 1533563, 1552165, 1571393, 1589823, 1608425, 1627653, 1646083, 1664685, 1685894, 1716082, 1734426, 1752457, 1771059, 1797479, 1815909, 1834511, 1853739, 1872169, 1890599, 1909115, 1927944, 1946460, 1965289, 1983719, 2002235, 2021064, 2039666, 2058894, 2077324, 2095668, 2117657, 2136259, 2160525, 2179127, 2213733, 2232335, 2258701, 2277303, 2316326, 2335413, 2359946, 2379033]"
"('FilterBuilder.java', 'org.reflections.util.FilterBuilder$Include', 'apply', 'com\\.github\\.olivergondza\\.dumpling.*', 'com.github.olivergondza.dumpling.factory.ThreadDumpFactoryVendorTest.waiting.groovy')","[57411, 76029, 102379, 120997, 143190, 161808, 182567, 201185, 221944, 240280, 258561, 278149, 298331, 317919, 338192, 357780, 378053, 397641, 417823, 437411, 466613, 485231, 505990, 524608, 545367, 563985, 584744, 603362, 624121, 642739, 663498, 681834, 700867, 724147, 747521, 771192, 796539, 819819, 843099, 866379, 889659, 913033, 936798, 974031, 997311, 1020591, 1043871, 1067151, 1090431, 1113711, 1137085, 1162863, 1186143, 1209423, 1231763, 1250193, 1268623, 1287053, 1305483, 1323913, 1342531, 1363290, 1381908, 1402667, 1421003, 1439096, 1457714, 1483980, 1502598, 1533861, 1552479, 1571691, 1590121, 1608739, 1627951, 1646381, 1664999, 1686192, 1716380, 1734716, 1752755, 1771373, 1797777, 1816207, 1834825, 1854037, 1872467, 1890897, 1909421, 1928242, 1946766, 1965587, 1984017, 2002541, 2021362, 2039980, 2059192, 2077622, 2095958, 2117955, 2136573, 2160823, 2179441, 2214031, 2232649, 2258999, 2277617, 2316632, 2335735, 2360252, 2379355]"
"('FilterBuilder.java', 'org.reflections.util.FilterBuilder$Include', 'apply', 'com\\.github\\.olivergondza\\.dumpling.*', 'com/github/olivergondza/dumpling/cli/CliCommandOptionHandler.class')","[60230, 78996, 105198, 123964, 146009, 164775, 185386, 204152, 224763, 243025, 261528, 281264, 301298, 321034, 341159, 360895, 381020, 400756, 420790, 440526, 469432, 488198, 508809, 527575, 548186, 566952, 587563, 606329, 626940, 645706, 666317, 684579, 704426, 727706, 751154, 774751, 800098, 823378, 846658, 869938, 893218, 916666, 940431, 977590, 1000870, 1024150, 1047430, 1070710, 1093990, 1117270, 1140718, 1166422, 1189702, 1212982, 1234582, 1253012, 1271442, 1289872, 1308302, 1326732, 1345498, 1366109, 1384875, 1405486, 1423748, 1441915, 1460681, 1486799, 1505565, 1536680, 1555446, 1574510, 1592940, 1611706, 1630770, 1649200, 1667966, 1689011, 1719199, 1737461, 1755574, 1774340, 1800596, 1819026, 1837792, 1856856, 1875286, 1893716, 1912314, 1931061, 1949659, 1968406, 1986836, 2005434, 2024181, 2042947, 2062011, 2080441, 2098703, 2120774, 2139540, 2163642, 2182408, 2216850, 2235616, 2261818, 2280584, 2319525, 2338776, 2363145, 2382396]"
"('Scanner.java', 'java.util.Scanner', 'getCompleteTokenInBuffer', '(?s).*', '""RMI TCP Accept-0"" daemon prio=10 tid=0x7fd69400b800 nid=4159\n   java.lang.Thread.State: RUNNABLE\n\tat java.net.PlainSocketImpl.socketAccept(Native Method)\n\tat java.net.AbstractPlainSocketImpl.accept(AbstractPlainSocketImpl.java:398)\n\tat java.net.ServerSocket.implAccept(ServerSocket.java:530)\n\tat java.net.ServerSocket.accept(ServerSocket.java:498)\n\tat sun.management.jmxremote.LocalRMIServerSocketFactory$1.accept(LocalRMIServerSocketFactory.java:52)\n\tat sun.rmi.transport.tcp.TCPTransport$AcceptLoop.executeAcceptLoop(TCPTransport.java:399)\n\tat sun.rmi.transport.tcp.TCPTransport$AcceptLoop.run(TCPTransport.java:371)\n\tat java.lang.Thread.run(Thread.java:745)\n\n""Attach Listener"" daemon prio=10 tid=0x7fd6cc001000 nid=4158\n   java.lang.Thread.State: RUNNABLE\n\n""JMX client heartbeat 2"" daemon prio=10 tid=0x7fd6b8106800 nid=4153\n   java.lang.Thread.State: TIMED_WAITING (sleeping)\n\tat java.lang.Thread.sleep(Native Method)\n\tat com.sun.jmx.remote.internal.ClientCommunicatorAdmin$Checker.run(ClientCommunicatorAdmin.java:174)\n\tat java.lang.Thread.run(Thread.java:745)\n\n""GC Daemon"" daemon prio=10 tid=0x7fd6b8101000 nid=4150\n   java.lang.Thread.State: TIMED_WAITING (on object monitor)\n\tat java.lang.Object.wait(Native Method)\n\t- waiting on <0x707204370> (a sun.misc.GC$LatencyLock)\n\tat sun.misc.GC$Daemon.run(GC.java:117)\n\n""RMI RenewClean-[127.0.0.1:40979]"" daemon prio=10 tid=0x7fd6b8100800 nid=4149\n   java.lang.Thread.State: TIMED_WAITING (on object monitor)\n\tat java.lang.Object.wait(Native Method)\n\t- waiting on <0x70720c350> (a java.lang.ref.ReferenceQueue$Lock)\n\tat java.lang.ref.ReferenceQueue.remove(ReferenceQueue.java:135)\n\tat sun.rmi.transport.DGCClient$EndpointEntry$RenewCleanThread.run(DGCClient.java:535)\n\tat java.lang.Thread.run(Thread.java:745)\n\n""RMI Scheduler(0)"" daemon prio=10 tid=0x7fd6b80ff800 nid=4148\n   java.lang.Thread.State: TIMED_WAITING (parking)\n\tat sun.misc.Unsafe.park(Native Method)\n\t- parking to wait for <0x7072043e8> (a java.util.concurrent.locks.AbstractQueuedSynchronizer$ConditionObject)\n\tat java.util.concurr')","[1528437, 1528500, 1528563, 1528626, 1528689]"
"('Scanner.java', 'java.util.Scanner', 'getCompleteTokenInBuffer', '(?s).*', '""JMX client heartbeat 3"" daemon prio=10 tid=0x00007fd6b82e4800 nid=0x1043 waiting on condition [0x00007fd68fcfb000]\n   java.lang.Thread.State: TIMED_WAITING (sleeping)\n\tat java.lang.Thread.sleep(Native Method)\n\tat com.sun.jmx.remote.internal.ClientCommunicatorAdmin$Checker.run(ClientCommunicatorAdmin.java:174)\n\tat java.lang.Thread.run(Thread.java:745)\n\n   Locked ownable synchronizers:\n\t- None\n\n""JMX server connection timeout 23"" daemon prio=10 tid=0x00007fd67c00c000 nid=0x1042 in Object.wait() [0x00007fd68fdfc000]\n   java.lang.Thread.State: TIMED_WAITING (on object monitor)\n\tat java.lang.Object.wait(Native Method)\n\t- waiting on <0x000000070775e830> (a [I)\n\tat com.sun.jmx.remote.internal.ServerCommunicatorAdmin$Timeout.run(ServerCommunicatorAdmin.java:168)\n\t- locked <0x000000070775e830> (a [I)\n\tat java.lang.Thread.run(Thread.java:745)\n\n   Locked ownable synchronizers:\n\t- None\n\n""RMI TCP Connection(1)-127.0.0.1"" daemon prio=10 tid=0x00007fd688001800 nid=0x1041 runnable [0x00007fd68fefc000]\n   java.lang.Thread.Sta')","[958210, 958693]"
"('FilterBuilder.java', 'org.reflections.util.FilterBuilder$Include', 'apply', 'com\\.github\\.olivergondza\\.dumpling.*', 'com.github.olivergondza.dumpling.cli.AbstractCliTest.class')","[54617, 73087, 99585, 118055, 140396, 158866, 179773, 198243, 219150, 237560, 255619, 275059, 295389, 314829, 335250, 354690, 375111, 394551, 414881, 434321, 463819, 482289, 503196, 521666, 542573, 561043, 581950, 600420, 621327, 639797, 660704, 679114, 697333, 720613, 743913, 767658, 793005, 816285, 839565, 862845, 886125, 909425, 933190, 970497, 993777, 1017057, 1040337, 1063617, 1086897, 1110177, 1133477, 1159329, 1182609, 1205889, 1228969, 1247399, 1265829, 1284259, 1302689, 1321119, 1339589, 1360496, 1378966, 1399873, 1418283, 1436302, 1454772, 1481186, 1499656, 1531067, 1549537, 1568897, 1587327, 1605797, 1625157, 1643587, 1662057, 1683398, 1713586, 1731996, 1749961, 1768431, 1794983, 1813413, 1831883, 1851243, 1869673, 1888103, 1906553, 1925448, 1943898, 1962793, 1981223, 1999673, 2018568, 2037038, 2056398, 2074828, 2093238, 2115161, 2133631, 2158029, 2176499, 2211237, 2229707, 2256205, 2274675, 2313764, 2332719, 2357384, 2376339]"
"('FilterBuilder.java', 'org.reflections.util.FilterBuilder$Include', 'apply', 'com\\.github\\.olivergondza\\.dumpling.*', 'com.github.olivergondza.dumpling.factory.PidRuntimeFactory$1.class')","[68345, 87537, 113313, 132505, 154124, 173316, 193501, 212693, 232878, 250927, 270069, 290231, 309839, 330001, 349700, 369862, 389561, 409723, 429331, 449493, 477547, 496739, 516924, 536116, 556301, 575493, 595678, 614870, 635055, 654247, 674432, 692481, 714671, 737951, 761612, 784996, 810343, 833623, 856903, 880183, 903463, 927124, 950889, 987835, 1011115, 1034395, 1057675, 1080955, 1104235, 1127515, 1151176, 1176667, 1199947, 1223227, 1242697, 1261127, 1279557, 1297987, 1316417, 1334847, 1354039, 1374224, 1393416, 1413601, 1431650, 1450030, 1469222, 1494914, 1514106, 1544795, 1563987, 1582625, 1601055, 1620247, 1638885, 1657315, 1676507, 1697126, 1727314, 1745363, 1763689, 1782881, 1808711, 1827141, 1846333, 1864971, 1883401, 1901831, 1920642, 1939176, 1957987, 1976521, 1994951, 2013762, 2032296, 2051488, 2070126, 2088556, 2106605, 2128889, 2148081, 2171757, 2190949, 2224965, 2244157, 2269933, 2289125, 2327853, 2347530, 2371473, 2391150]"
"('Scanner.java', 'java.util.Scanner', 'getCompleteTokenInBuffer', '(?s).*', '""Reference Handler"" daemon prio=10 tid=0x00007feb6406c000 nid=0xe39 in Object.wait() [0x00007feb5e478000]\n   java.lang.Thread.State: WAITING (on object monitor)\n\tat java.lang.Object.wait(Native Method)\n\t- waiting on <0x00000007b0f20088> (a java.lang.ref.Reference$Lock)\n\tat java.lang.Object.wait(Object.java:503)\n\tat java.lang.ref.Reference$ReferenceHandler.run(Reference.java:133)\n\t- locked <0x00000007b0f20088> (a java.lang.ref.Reference$Lock)\n\n   Locked ownable synchronizers:\n\t- None\n\n""main"" prio=10 tid=0x00007feb64007800 nid=0xe31 waiting on condition [0x00007feb6a7c1000]\n   java.lang.Thread.State: TIMED_WAITING (sleeping)\n\tat java.lang.Thread.sleep(Native Method)\n\tat sun.reflect.NativeMethodAccessorImpl.invoke0(Native Method)\n\tat sun.reflect.NativeMethodAccessorImpl.invoke(NativeMethodAccessorImpl.java:57)\n\tat sun.reflect.DelegatingMethodAccessorImpl.invoke(DelegatingMethodAccessorImpl.java:43)\n\tat java.lang.reflect.Method.invoke(Method.java:606)\n\tat org.codehaus.groovy.reflection.CachedMethod.invoke(CachedM')",[14392]
"('Scanner.java', 'java.util.Scanner', 'getCompleteTokenInBuffer', '(?s).*', '""Finalizer"" daemon prio=10 tid=0x00007f879006e000 nid=0xeeb in Object.wait() [0x00007f878d659000]\n   java.lang.Thread.State: WAITING (on object monitor)\n\tat java.lang.Object.wait(Native Method)\n\t- waiting on <0x00000007b0f08790> (a java.lang.ref.ReferenceQueue$Lock)\n\tat java.lang.ref.ReferenceQueue.remove(ReferenceQueue.java:135)\n\t- locked <0x00000007b0f08790> (a java.lang.ref.ReferenceQueue$Lock)\n\tat java.lang.ref.ReferenceQueue.remove(ReferenceQueue.java:151)\n\tat java.lang.ref.Finalizer$FinalizerThread.run(Finalizer.java:209)\n\n   Locked ownable synchronizers:\n\t- None\n\n""Reference Handler"" daemon prio=10 tid=0x00007f879006c000 nid=0xeea in Object.wait() [0x00007f878d75a000]\n   java.lang.Thread.State: WAITING (on object monitor)\n\tat java.lang.Object.wait(Native Method)\n\t- waiting on <0x00000007b0f14078> (a java.lang.ref.Reference$Lock)\n\tat java.lang.Object.wait(Object.java:503)\n\tat java.lang.ref.Reference$ReferenceHandler.run(Reference.java:133)\n\t- locked <0x00000007b0f14078> (a java.lang.ref.Reference$Lock)\n\n')",[27650]
"('Scanner.java', 'java.util.Scanner', 'getCompleteTokenInBuffer', '(?s).*', '""main"" prio=10 tid=0x00007fd6fc008800 nid=0xdb8 waiting on condition [0x00007fd7055bb000]\n   java.lang.Thread.State: WAITING (parking)\n\tat sun.misc.Unsafe.park(Native Method)\n\t- parking to wait for  <0x00000007b2049ad8> (a java.util.concurrent.FutureTask)\n\tat java.util.concurrent.locks.LockSupport.park(LockSupport.java:186)\n\tat java.util.concurrent.FutureTask.awaitDone(FutureTask.java:425)\n\tat java.util.concurrent.FutureTask.get(FutureTask.java:187)\n\tat org.apache.maven.surefire.junitcore.pc.SharedThreadPoolStrategy.finished(SharedThreadPoolStrategy.java:60)\n\tat org.apache.maven.surefire.junitcore.pc.Scheduler.finished(Scheduler.java:372)\n\tat org.junit.runners.ParentRunner.runChildren(ParentRunner.java:295)\n\tat org.junit.runners.ParentRunner.access$000(ParentRunner.java:58)\n\tat org.junit.runners.ParentRunner$2.evaluate(ParentRunner.java:268)\n\tat org.junit.runners.ParentRunner.run(ParentRunner.java:363)\n\tat org.junit.runners.Suite.runChild(Suite.java:128)\n\tat org.junit.runners.Suite.runChild(Suite.java:27)\n\tat org.junit.runners.ParentRunner$3.run(ParentRunner.java:290)\n\tat org.apache.maven.surefire.junitcore.pc.Scheduler$1.run(Scheduler.java:393)\n\tat org.apache.maven.surefire.junitcore.pc.InvokerStrategy.schedule(InvokerStrategy.java:54)\n\tat org.apache.maven.surefire.junitcore.pc.Scheduler.schedule(Scheduler.java:352)\n\tat org.junit.runners.ParentRunner.runChildren(ParentRunner.java:288)\n\tat org.junit.runners.ParentRunner.access$000(ParentRunner.java:58)\n\tat org.junit.runners.ParentRunner$2.evaluate(ParentRunner.java:268)\n\tat org.junit.runners.ParentRunner.run(ParentRunner.java:363)\n\tat org.junit.runners.Suite.runChild(Suite.java:128)\n\tat org.junit.runners.Suite.runChild(Suite.java:27)\n\tat org.junit.runners.ParentRunner$3.run(ParentRunner.java:290)\n\tat org.apache.maven.surefire.junitcore.pc.Scheduler$1.run(Scheduler.java:393)\n\tat org.apache.maven.surefire.junitcore.pc.InvokerStrategy.schedule(InvokerStrategy.java:54)\n\tat org.apache.maven.surefire.junitcore.pc.Scheduler.schedule(Scheduler.java:352)\n\tat org.junit.runners.ParentRunner.runChildren(ParentRunner.java:288)\n\tat org.junit.runners.ParentRunner.access$000(ParentRunner.java:58)\n\tat org.junit.runners.ParentRunner$2.evaluate(ParentRunner.java:268)\n\tat org.junit.runners.ParentRunner.run(ParentRunner.java:363)\n\tat org.apache.maven.surefire.junitcore.pc.ParallelComputerBuilder$PC$1.run(ParallelComputerBuilder.java:554)\n\tat org.apache.maven.surefire.junitcore.JUnitCore.run(JUnitCore.java:55)\n\tat org.apache.maven.surefire.junitcore.JUnitCoreWrapper.createRequestAndRun(JUnitCoreWrapper.java:137)\n\tat org.apache.maven.surefire.junitcore.JUnitCoreWrapper.executeEager(JUnitCoreWrapper.java:107)\n\tat org.apache.maven.surefire.junitcore.JUnitCoreWrapper.execute(JUnitCoreWrapper.java:83)\n\tat org.apache.maven.surefire.junitcore.JUnitCoreWrapper.execute(JUnitCoreWrapper.java:75)\n\tat org.apache.maven.surefire.junitcore.JUnitCoreProvider.invoke(JUnitCoreProvider.java:161)\n\tat org.apache.maven.surefire.booter.ForkedBooter.invokeProviderInSameClassLoader(ForkedBooter.java:290)\n\tat org.apache.maven.surefire.booter.ForkedBooter.runSuitesInProcess(ForkedBooter.java:242)\n\tat org.apache.maven.surefire.booter.ForkedBooter.main(ForkedBooter.java:121)\n\n   Locked ownable synchronizers:\n\t- None\n\n""VM Thread"" prio=10 tid=0x00007fd6fc12f800 nid=0xdbd runnable \n\n""GC task thread#0 (ParallelGC)"" prio=10 tid=0x00007fd6fc01e800 nid=0xdb9 runnable \n\n""GC task thread#1 (ParallelGC)"" prio=10 tid=0x00007fd6fc020800 nid=0xdba runnable \n\n""GC task thread#2 (ParallelGC)"" prio=10 tid=0x00007fd6fc022000 nid=0xdbb runnable \n\n""GC task thread#3 (ParallelGC)"" prio=10 tid=0x00007fd6fc024000 nid=0xdbc runnable \n\n""VM Periodic Task Thread"" prio=10 tid=0x00007fd6fc2fe000 nid=0xdc4 waiting on condition \n\nJNI global references: 225\n\n')","[1526366, 1526763, 1526935, 1527107, 1527279, 1527451, 1527623, 1527945]"
"('Description.java', 'org.junit.runner.Description', 'methodAndClassNamePatternGroupOrDefault', '([\\s\\S]*)\\((.*)\\)', 'groovyToSet(com.github.olivergondza.dumpling.cli.GroovyRuntimeTest)')",[968]
"('ThreadDumpFactory.java', 'com.github.olivergondza.dumpling.factory.ThreadDumpFactory', 'initHeader', '#\\d+', '[0x00007fd6f804f000]')","[458103, 458142, 963012, 963063, 1523229, 1523266]"
"('ThreadDumpFactory.java', 'com.github.olivergondza.dumpling.factory.ThreadDumpFactory', 'initHeader', '#\\d+', 'Object.wait()')","[3492, 3526, 3750, 3784, 5554, 5588, 7169, 7203, 7492, 7526, 7767, 7801, 10947, 10981, 11225, 11259, 14238, 14272, 14496, 14530, 17633, 17667, 17892, 17926, 20925, 20959, 21183, 21217, 23063, 23097, 24395, 24429, 24653, 24687, 27754, 27788, 28013, 28047, 28294, 28328, 31155, 31189, 31414, 31448, 31689, 31723, 34508, 34542, 34766, 34800, 37913, 37947, 38173, 38207, 41058, 41092, 41317, 41351, 41591, 41625, 43353, 43387, 44973, 45007, 45297, 45331, 45572, 45606, 48773, 48807, 49032, 49066, 52170, 52204, 52429, 52463, 52707, 52741, 454827, 454866, 455372, 455411, 456712, 456751, 457022, 457061, 460790, 460829, 461149, 461188, 956259, 956310, 957122, 957173, 957985, 958036, 958848, 958899, 959537, 959588, 961237, 961288, 961631, 961682, 966742, 966793, 967173, 967224, 1518825, 1518862, 1519464, 1519501, 1520101, 1520138, 1520622, 1520659, 1521902, 1521939, 1522198, 1522235, 1525812, 1525849, 1526157, 1526194, 2112897, 2112923, 2113096, 2113122, 2155387, 2155422, 2155649, 2155684, 2198255, 2198290, 2198517, 2198552, 2202537, 2202563, 2202736, 2202762]"
"('FilterBuilder.java', 'org.reflections.util.FilterBuilder$Include', 'apply', 'com\\.github\\.olivergondza\\.dumpling.*', 'com/github/olivergondza/dumpling/cli/Main$ProcessRuntimeOptionHandler$UnknownRuntimeKind.class')","[60836, 79634, 105804, 124602, 146615, 165413, 185992, 204790, 225369, 243615, 262166, 281934, 301936, 321704, 341797, 361565, 381658, 401426, 421428, 441196, 470038, 488836, 509415, 528213, 548792, 567590, 588169, 606967, 627546, 646344, 666923, 685169, 705192, 728472, 751936, 775517, 800864, 824144, 847424, 870704, 893984, 917448, 941213, 978356, 1001636, 1024916, 1048196, 1071476, 1094756, 1118036, 1141500, 1167188, 1190468, 1213748, 1235188, 1253618, 1272048, 1290478, 1308908, 1327338, 1346136, 1366715, 1385513, 1406092, 1424338, 1442521, 1461319, 1487405, 1506203, 1537286, 1556084, 1575116, 1593546, 1612344, 1631376, 1649806, 1668604, 1689617, 1719805, 1738051, 1756180, 1774978, 1801202, 1819632, 1838430, 1857462, 1875892, 1894322, 1912936, 1931667, 1950281, 1969012, 1987442, 2006056, 2024787, 2043585, 2062617, 2081047, 2099293, 2121380, 2140178, 2164248, 2183046, 2217456, 2236254, 2262424, 2281222, 2320147, 2339430, 2363767, 2383050]"
"('FilterBuilder.java', 'org.reflections.util.FilterBuilder$Include', 'apply', 'com\\.github\\.olivergondza\\.dumpling.*', 'com.github.olivergondza.dumpling.TestThread.class')","[71793, 91167, 116761, 136135, 157572, 176946, 196949, 216323, 236326, 254284, 273699, 294043, 313469, 333813, 353330, 373674, 393191, 413535, 432961, 453305, 480995, 500369, 520372, 539746, 559749, 579123, 599126, 618500, 638503, 657877, 677880, 695838, 719029, 742309, 766061, 789354, 814701, 837981, 861261, 884541, 907821, 931573, 955338, 992193, 1015473, 1038753, 1062033, 1085313, 1108593, 1131873, 1155625, 1181025, 1204305, 1227585, 1246145, 1264575, 1283005, 1301435, 1319865, 1338295, 1357669, 1377672, 1397046, 1417049, 1435007, 1453478, 1472852, 1498362, 1517736, 1548243, 1567617, 1586073, 1604503, 1623877, 1642333, 1660763, 1680137, 1700574, 1730762, 1748720, 1767137, 1786511, 1812159, 1830589, 1849963, 1868419, 1886849, 1905279, 1924181, 1942624, 1961526, 1979969, 1998399, 2017301, 2035744, 2055118, 2073574, 2092004, 2109962, 2132337, 2151711, 2175205, 2194579, 2228413, 2247787, 2273381, 2292755, 2331392, 2351251, 2375012, 2394871]"
"('FilterBuilder.java', 'org.reflections.util.FilterBuilder$Include', 'apply', 'com\\.github\\.olivergondza\\.dumpling.*', 'com.github.olivergondza.dumpling.model.ProcessThread$2.class')","[65985, 85053, 110953, 130021, 151764, 170832, 191141, 210209, 230518, 248629, 267585, 287623, 307355, 327393, 347216, 367254, 387077, 407115, 426847, 446885, 475187, 494255, 514564, 533632, 553941, 573009, 593318, 612386, 632695, 651763, 672072, 690183, 711691, 734971, 758570, 782016, 807363, 830643, 853923, 877203, 900483, 924082, 947847, 984855, 1008135, 1031415, 1054695, 1077975, 1101255, 1124535, 1148134, 1173687, 1196967, 1220247, 1240337, 1258767, 1277197, 1295627, 1314057, 1332487, 1351555, 1371864, 1390932, 1411241, 1429352, 1447670, 1466738, 1492554, 1511622, 1542435, 1561503, 1580265, 1598695, 1617763, 1636525, 1654955, 1674023, 1694766, 1724954, 1743065, 1761329, 1780397, 1806351, 1824781, 1843849, 1862611, 1881041, 1899471, 1918220, 1936816, 1955565, 1974161, 1992591, 2011340, 2029936, 2049004, 2067766, 2086196, 2104307, 2126529, 2145597, 2169397, 2188465, 2222605, 2241673, 2267573, 2286641, 2325431, 2344984, 2369051, 2388604]"
"('Scanner.java', 'java.util.Scanner', 'getCompleteTokenInBuffer', '(?s).*', '""main"" prio=10 tid=0x7fd6fc008800 nid=3512\n   java.lang.Thread.State: WAITING (parking)\n\tat sun.misc.Unsafe.park(Native Method)\n\t- parking to wait for <0x7b2049ad8> (a java.util.concurrent.FutureTask)\n\tat java.util.concurrent.locks.LockSupport.park(LockSupport.java:186)\n\tat java.util.concurrent.FutureTask.awaitDone(FutureTask.java:425)\n\tat java.util.concurrent.FutureTask.get(FutureTask.java:187)\n\tat org.apache.maven.surefire.junitcore.pc.SharedThreadPoolStrategy.finished(SharedThreadPoolStrategy.java:60)\n\tat org.apache.maven.surefire.junitcore.pc.Scheduler.finished(Scheduler.java:372)\n\tat org.junit.runners.ParentRunner.runChildren(ParentRunner.java:295)\n\tat org.junit.runners.ParentRunner.access$000(ParentRunner.java:58)\n\tat org.junit.runners.ParentRunner$2.evaluate(ParentRunner.java:268)\n\tat org.junit.runners.ParentRunner.run(ParentRunner.java:363)\n\tat org.junit.runners.Suite.runChild(Suite.java:128)\n\tat org.junit.runners.Suite.runChild(Suite.java:27)\n\tat org.junit.runners.ParentRunner$3.run(ParentRunner.java:290)\n\tat org.apache.maven.surefire.junitcore.pc.Scheduler$1.run(Scheduler.java:393)\n\tat org.apache.maven.surefire.junitcore.pc.InvokerStrategy.schedule(InvokerStrategy.java:54)\n\tat org.apache.maven.surefire.junitcore.pc.Scheduler.schedule(Scheduler.java:352)\n\tat org.junit.runners.ParentRunner.runChildren(ParentRunner.java:288)\n\tat org.junit.runners.ParentRunner.access$000(ParentRunner.java:58)\n\tat org.junit.runners.ParentRunner$2.evaluate(ParentRunner.java:268)\n\tat org.junit.runners.ParentRunner.run(ParentRunner.java:363)\n\tat org.junit.runners.Suite.runChild(Suite.java:128)\n\tat org.junit.runners.Suite.runChild(Suite.java:27)\n\tat org.junit.runners.ParentRunner$3.run(ParentRunner.java:290)\n\tat org.apache.maven.surefire.junitcore.pc.Scheduler$1.run(Scheduler.java:393)\n\tat org.apache.maven.surefire.junitcore.pc.InvokerStrategy.schedule(InvokerStrategy.java:54)\n\tat org.apache.maven.surefire.junitcore.pc.Scheduler.schedule(Scheduler.java:352)\n\tat org.junit.runners.ParentRunner.runChildren(ParentRunner.java:288)\n\tat org.junit.runners.ParentRunner.access$000(ParentRunner.java:58)\n\tat org.junit.runners.ParentRunner$2.evaluate(ParentRunner.java:268)\n\tat org.junit.runners.ParentRunner.run(ParentRunner.java:363)\n\tat org.apache.maven.surefire.junitcore.pc.ParallelComputerBuilder$PC$1.run(ParallelComputerBuilder.java:554)\n\tat org.apache.maven.surefire.junitcore.JUnitCore.run(JUnitCore.java:55)\n\tat org.apache.maven.surefire.junitcore.JUnitCoreWrapper.createRequestAndRun(JUnitCoreWrapper.java:137)\n\tat org.apache.maven.surefire.junitcore.JUnitCoreWrapper.executeEager(JUnitCoreWrapper.java:107)\n\tat org.apache.maven.surefire.junitcore.JUnitCoreWrapper.execute(JUnitCoreWrapper.java:83)\n\tat org.apache.maven.surefire.junitcore.JUnitCoreWrapper.execute(JUnitCoreWrapper.java:75)\n\tat org.apache.maven.surefire.junitcore.JUnitCoreProvider.invoke(JUnitCoreProvider.java:161)\n\tat org.apache.maven.surefire.booter.ForkedBooter.invokeProviderInSameClassLoader(ForkedBooter.java:290)\n\tat org.apache.maven.surefire.booter.ForkedBooter.runSuitesInProcess(ForkedBooter.java:242)\n\tat org.apache.maven.surefire.booter.ForkedBooter.main(ForkedBooter.java:121)\n\n""VM Thread"" prio=10 tid=0x7fd6fc12f800 nid=3517\n   java.lang.Thread.State: UNKNOWN\n\n""GC task thread#0 (ParallelGC)"" prio=10 tid=0x7fd6fc01e800 nid=3513\n   java.lang.Thread.State: UNKNOWN\n\n""GC task thread#1 (ParallelGC)"" prio=10 tid=0x7fd6fc020800 nid=3514\n   java.lang.Thread.State: UNKNOWN\n\n""GC task thread#2 (ParallelGC)"" prio=10 tid=0x7fd6fc022000 nid=3515\n   java.lang.Thread.State: UNKNOWN\n\n""GC task thread#3 (ParallelGC)"" prio=10 tid=0x7fd6fc024000 nid=3516\n   java.lang.Thread.State: UNKNOWN\n\n""VM Periodic Task Thread"" prio=10 tid=0x7fd6fc2fe000 nid=3524\n   java.lang.Thread.State: UNKNOWN\n\n')","[1529787, 1529874, 1529961, 1530048, 1530135, 1530222, 1530309]"
"('FilterBuilder.java', 'org.reflections.util.FilterBuilder$Include', 'apply', 'com\\.github\\.olivergondza\\.dumpling.*', 'com/github/olivergondza/dumpling/model/jmx/JmxThreadSet.class')","[62818, 81720, 107786, 126688, 148597, 167499, 187974, 206876, 227351, 245545, 264252, 284124, 304022, 323894, 343883, 363755, 383744, 403616, 423514, 443386, 472020, 490922, 511397, 530299, 550774, 569676, 590151, 609053, 629528, 648430, 668905, 687099, 707694, 730974, 754490, 778019, 803366, 826646, 849926, 873206, 896486, 920002, 943767, 980858, 1004138, 1027418, 1050698, 1073978, 1097258, 1120538, 1144054, 1169690, 1192970, 1216250, 1237170, 1255600, 1274030, 1292460, 1310890, 1329320, 1348222, 1368697, 1387599, 1408074, 1426268, 1444503, 1463405, 1489387, 1508289, 1539268, 1558170, 1577098, 1595528, 1614430, 1633358, 1651788, 1670690, 1691599, 1721787, 1739981, 1758162, 1777064, 1803184, 1821614, 1840516, 1859444, 1877874, 1896304, 1914970, 1933649, 1952315, 1970994, 1989424, 2008090, 2026769, 2045671, 2064599, 2083029, 2101223, 2123362, 2142264, 2166230, 2185132, 2219438, 2238340, 2264406, 2283308, 2322181, 2341568, 2365801, 2385188]"
"('FilterBuilder.java', 'org.reflections.util.FilterBuilder$Include', 'apply', 'com\\.github\\.olivergondza\\.dumpling.*', 'com.github.olivergondza.dumpling.model.dump.ThreadDumpThread$Builder.class')","[63083, 81999, 108051, 126967, 148862, 167778, 188239, 207155, 227616, 245803, 264531, 284417, 304301, 324187, 344162, 364048, 384023, 403909, 423793, 443679, 472285, 491201, 511662, 530578, 551039, 569955, 590416, 609332, 629793, 648709, 669170, 687357, 708029, 731309, 754832, 778354, 803701, 826981, 850261, 873541, 896821, 920344, 944109, 981193, 1004473, 1027753, 1051033, 1074313, 1097593, 1120873, 1144396, 1170025, 1193305, 1216585, 1237435, 1255865, 1274295, 1292725, 1311155, 1329585, 1348501, 1368962, 1387878, 1408339, 1426526, 1444768, 1463684, 1489652, 1508568, 1539533, 1558449, 1577363, 1595793, 1614709, 1633623, 1652053, 1670969, 1691864, 1722052, 1740239, 1758427, 1777343, 1803449, 1821879, 1840795, 1859709, 1878139, 1896569, 1915242, 1933914, 1952587, 1971259, 1989689, 2008362, 2027034, 2045950, 2064864, 2083294, 2101481, 2123627, 2142543, 2166495, 2185411, 2219703, 2238619, 2264671, 2283587, 2322453, 2341854, 2366073, 2385474]"
"('FilterBuilder.java', 'org.reflections.util.FilterBuilder$Include', 'apply', 'com\\.github\\.olivergondza\\.dumpling.*', 'com.github.olivergondza.dumpling.model.jvm.JvmThread.class')","[64685, 83685, 109653, 128653, 150464, 169464, 189841, 208841, 229218, 247363, 266217, 286187, 305987, 325957, 345848, 365818, 385709, 405679, 425479, 445449, 473887, 492887, 513264, 532264, 552641, 571641, 592018, 611018, 631395, 650395, 670772, 688917, 710051, 733331, 756896, 780376, 805723, 829003, 852283, 875563, 898843, 922408, 946173, 983215, 1006495, 1029775, 1053055, 1076335, 1099615, 1122895, 1146460, 1172047, 1195327, 1218607, 1239037, 1257467, 1275897, 1294327, 1312757, 1331187, 1350187, 1370564, 1389564, 1409941, 1428086, 1446370, 1465370, 1491254, 1510254, 1541135, 1560135, 1578965, 1597395, 1616395, 1635225, 1653655, 1672655, 1693466, 1723654, 1741799, 1760029, 1779029, 1805051, 1823481, 1842481, 1861311, 1879741, 1898171, 1916886, 1935516, 1954231, 1972861, 1991291, 2010006, 2028636, 2047636, 2066466, 2084896, 2103041, 2125229, 2144229, 2168097, 2187097, 2221305, 2240305, 2266273, 2285273, 2324097, 2343582, 2367717, 2387202]"
"('Scanner.java', 'java.util.Scanner', 'getCompleteTokenInBuffer', '(?s).*', '3859\n')",[29498]
"('ThreadDumpFactory.java', 'com.github.olivergondza.dumpling.factory.ThreadDumpFactory', 'initHeader', '#\\d+', '[0x00007f8b3881e000]')","[43422, 43456]"
"('FilterBuilder.java', 'org.reflections.util.FilterBuilder$Exclude', 'apply', 'java.lang.Object', 'com.github.olivergondza.dumpling.model.mxbean.MXBeanThread')","[62667, 64725, 81561, 83727, 107635, 109693, 126529, 128695, 148446, 150504, 167340, 169506, 187823, 189881, 206717, 208883, 227200, 229258, 245398, 247402, 264093, 266259, 283957, 286231, 303863, 306029, 323727, 326001, 343724, 345890, 363588, 365862, 383585, 385751, 403449, 405723, 423355, 425521, 443219, 445493, 471869, 473927, 490763, 492929, 511246, 513304, 530140, 532306, 550623, 552681, 569517, 571683, 590000, 592058, 608894, 611060, 629377, 631435, 648271, 650437, 668754, 670812, 686952, 688956, 707503, 710101, 730783, 733381, 754295, 756947, 777828, 780426, 803175, 805773, 826455, 829053, 849735, 852333, 873015, 875613, 896295, 898893, 919807, 922459, 943572, 946224, 980667, 983265, 1003947, 1006545, 1027227, 1029825, 1050507, 1053105, 1073787, 1076385, 1097067, 1099665, 1120347, 1122945, 1143859, 1146511, 1169499, 1172097, 1192779, 1195377, 1216059, 1218657, 1237019, 1239077, 1255449, 1257507, 1273879, 1275937, 1292309, 1294367, 1310739, 1312797, 1329169, 1331227, 1348063, 1350229, 1368546, 1370604, 1387440, 1389606, 1407923, 1409981, 1426121, 1428125, 1444352, 1446410, 1463246, 1465412, 1489236, 1491294, 1508130, 1510296, 1539117, 1541175, 1558011, 1560177, 1576947, 1579005, 1595377, 1597435, 1614271, 1616437, 1633207, 1635265, 1651637, 1653695, 1670531, 1672697, 1691448, 1693506, 1721636, 1723694, 1739834, 1741838, 1758011, 1760069, 1776905, 1779071, 1803033, 1805091, 1821463, 1823521, 1840357, 1842523, 1859293, 1861351, 1877723, 1879781, 1896153, 1898211, 1914815, 1916927, 1933498, 1935556, 1952160, 1954272, 1970843, 1972901, 1989273, 1991331, 2007935, 2010047, 2026618, 2028676, 2045512, 2047678, 2064448, 2066506, 2082878, 2084936, 2101076, 2103080, 2123211, 2125269, 2142105, 2144271, 2166079, 2168137, 2184973, 2187139, 2219287, 2221345, 2238181, 2240347, 2264255, 2266313, 2283149, 2285315, 2322026, 2324138, 2341405, 2343625, 2365646, 2367758, 2385025, 2387245]"
"('ThreadDumpFactory.java', 'com.github.olivergondza.dumpling.factory.ThreadDumpFactory', 'initHeader', '#\\d+', '[0x00007fd6b07d1000]')","[454237, 454276, 957225, 957276, 1518900, 1518937]"
"('Description.java', 'org.junit.runner.Description', 'methodAndClassNamePatternGroupOrDefault', '([\\s\\S]*)\\((.*)\\)', 'noSuchCommand(com.github.olivergondza.dumpling.cli.MainTest)')",[1452]
"('Scanner.java', 'java.util.Scanner', 'getCompleteTokenInBuffer', '(?s).*', '""main"" prio=10 tid=0x00007fae5c007800 nid=0xf14 in Object.wait() [0x00007fae64e62000]\n   java.lang.Thread.State: WAITING (on object monitor)\n\tat java.lang.Object.wait(Native Method)\n\t- waiting on <0x00000007ae8ac9f8> (a java.lang.Double)\n\tat java.lang.Object.wait(Object.java:503)\n\tat java_lang_Object$wait.call(Unknown Source)\n\tat org.codehaus.groovy.runtime.callsite.CallSiteArray.defaultCall(CallSiteArray.java:45)\n\tat org.codehaus.groovy.runtime.callsite.AbstractCallSite.call(AbstractCallSite.java:108)\n\tat org.codehaus.groovy.runtime.callsite.AbstractCallSite.call(AbstractCallSite.java:112)\n\tat dumpling-script.run(dumpling-script:21)\n\t- locked <0x00000007ae8deb40> (a java.lang.Integer)\n\t- locked <0x00000007ae8ac9f8> (a java.lang.Double)\n\tat groovy.lang.GroovyShell.runScriptOrMainOrTestOrRunnable(GroovyShell.java:258)\n\tat groovy.lang.GroovyShell.run(GroovyShell.java:550)\n\tat com.github.olivergondza.dumpling.cli.GroovyCommand.run(GroovyCommand.java:94)\n\tat com.github.olivergondza.dumpling.cli.Main.run(Main.java:75)\n\tat com.github.olivergondza.dumpling.cli.Main.main(Main.java:58)\n\n   Locked ownable synchronizers:\n\t- None\n\n""VM Thread"" prio=10 tid=0x00007fae5c067800 nid=0xf19 runnable \n\n""GC task thread#0 (ParallelGC)"" prio=10 tid=0x00007fae5c01d800 nid=0xf15 runnable \n\n""GC task thread#1 (ParallelGC)"" prio=10 tid=0x00007fae5c01f800 nid=0xf16 runnable \n\n""GC task thread#2 (ParallelGC)"" prio=10 tid=0x00007fae5c021000 nid=0xf17 runnable \n\n""GC task thread#3 (ParallelGC)"" prio=10 tid=0x00007fae5c023000 nid=0xf18 runnable \n\n""VM Periodic Task Thread"" prio=10 tid=0x00007fae5c0a1800 nid=0xf20 waiting on condition \n\nJNI global references: 264\n\n')","[31585, 31860, 31997, 32134, 32271, 32408, 32545, 32820]"
"('FilterBuilder.java', 'org.reflections.util.FilterBuilder$Include', 'apply', 'com\\.github\\.olivergondza\\.dumpling.*', 'com.github.olivergondza.dumpling.factory.ThreadDumpFactoryVendorTest.parkedTimedWithBlocker.groovy')","[57859, 76501, 102827, 121469, 143638, 162280, 183015, 201657, 222392, 240716, 259033, 278645, 298803, 318415, 338664, 358276, 378525, 398137, 418295, 437907, 467061, 485703, 506438, 525080, 545815, 564457, 585192, 603834, 624569, 643211, 663946, 682270, 701435, 724715, 748101, 771760, 797107, 820387, 843667, 866947, 890227, 913613, 937378, 974599, 997879, 1021159, 1044439, 1067719, 1090999, 1114279, 1137665, 1163431, 1186711, 1209991, 1232211, 1250641, 1269071, 1287501, 1305931, 1324361, 1343003, 1363738, 1382380, 1403115, 1421439, 1439544, 1458186, 1484428, 1503070, 1534309, 1552951, 1572139, 1590569, 1609211, 1628399, 1646829, 1665471, 1686640, 1716828, 1735152, 1753203, 1771845, 1798225, 1816655, 1835297, 1854485, 1872915, 1891345, 1909881, 1928690, 1947226, 1966035, 1984465, 2003001, 2021810, 2040452, 2059640, 2078070, 2096394, 2118403, 2137045, 2161271, 2179913, 2214479, 2233121, 2259447, 2278089, 2317092, 2336219, 2360712, 2379839]"
"('FilterBuilder.java', 'org.reflections.util.FilterBuilder$Include', 'apply', 'com\\.github\\.olivergondza\\.dumpling.*', 'com/github/olivergondza/dumpling/factory/ThreadDumpFactoryVendorTest/waitingTimed.groovy')","[56254, 74810, 101222, 119778, 142033, 160589, 181410, 199966, 220787, 239154, 257342, 276868, 297112, 316638, 336973, 356499, 376834, 396360, 416604, 436130, 465456, 484012, 504833, 523389, 544210, 562766, 583587, 602143, 622964, 641520, 662341, 680708, 699400, 722680, 746023, 769725, 795072, 818352, 841632, 864912, 888192, 911535, 935300, 972564, 995844, 1019124, 1042404, 1065684, 1088964, 1112244, 1135587, 1161396, 1184676, 1207956, 1230606, 1249036, 1267466, 1285896, 1304326, 1322756, 1341312, 1362133, 1380689, 1401510, 1419877, 1437939, 1456495, 1482823, 1501379, 1532704, 1551260, 1570534, 1588964, 1607520, 1626794, 1645224, 1663780, 1685035, 1715223, 1733590, 1751598, 1770154, 1796620, 1815050, 1833606, 1852880, 1871310, 1889740, 1908233, 1927085, 1945578, 1964430, 1982860, 2001353, 2020205, 2038761, 2058035, 2076465, 2094832, 2116798, 2135354, 2159666, 2178222, 2212874, 2231430, 2257842, 2276398, 2315444, 2334485, 2359064, 2378105]"
"('Scanner.java', 'java.util.Scanner', 'getCompleteTokenInBuffer', '(?s).*', '""b"" prio=10 tid=0x00007f4160310000 nid=0x7cd6 waiting on condition [0x00007f414e18b000]\n   java.lang.Thread.State: TIMED_WAITING (sleeping)\n\tat java.lang.Thread.sleep(Native Method)\n\tat com.github.olivergondza.dumpling.Util.pause(Util.java:48)\n\tat com.github.olivergondza.dumpling.query.BlockingTreeTest$5.run(BlockingTreeTest.java:79)\n\t- locked <0x00000007d75115b0> (a com.github.olivergondza.dumpling.query.BlockingTreeTest$5)\n\n""ba"" prio=10 tid=0x00007f4160311800 nid=0x7cd7 waiting for monitor entry [0x00007f414e08a000]\n   java.lang.Thread.State: BLOCKED (on object monitor)\n\tat com.github.olivergondza.dumpling.query.BlockingTreeTest$6.run(BlockingTreeTest.java:90)\n\t- waiting to lock <0x00000007d75115b0> (a com.github.olivergondza.dumpling.query.BlockingTreeTest$5)\n\t- locked <0x00000007d75116e8> (a com.github.olivergondza.dumpling.query.BlockingTreeTest$6)\n\n""c"" prio=10 tid=0x00007f41602f8001 nid=0x7cd3 waiting on condition [0x00007f414e58f001]\n   java.lang.Thread.State: TIMED_WAITING (sleeping)\n\tat java.lang.Thr')","[2308099, 2308351, 2310144, 2310396, 2312189, 2312441, 2353474, 2353816, 2355809, 2356061, 2397094, 2397436]"
"('Scanner.java', 'java.util.Scanner', 'getCompleteTokenInBuffer', '(?s).*', '""Reference Handler"" daemon prio=10 tid=0x00007ff5a013f800 nid=0x11d0 in Object.wait() [0x00007ff5a471a000]\n   java.lang.Thread.State: WAITING (on object monitor)\n\tat java.lang.Object.wait(Native Method)\n\t- waiting on <0x00000007d7005148> (a java.lang.ref.Reference$Lock)\n\tat java.lang.Object.wait(Object.java:503)\n\tat java.lang.ref.Reference$ReferenceHandler.run(Reference.java:133)\n\t- locked <0x00000007d7005148> (a java.lang.ref.Reference$Lock)\n\n""main"" prio=10 tid=0x00007ff5a0008800 nid=0x11ca waiting on condition [0x00007ff5a97f9000]\n   java.lang.Thread.State: TIMED_WAITING (sleeping)\n\tat java.lang.Thread.sleep(Native Method)\n\tat com.github.olivergondza.dumpling.cli.AbstractCliTest.pause(AbstractCliTest.java:54)\n\tat com.github.olivergondza.dumpling.query.TopContendersTest.contenders(TopContendersTest.java:95)\n\tat sun.reflect.NativeMethodAccessorImpl.invoke0(Native Method)\n\tat sun.reflect.NativeMethodAccessorImpl.invoke(NativeMethodAccessorImpl.java:57)\n\tat sun.reflect.DelegatingMethodAccessorImpl.invoke(Delega')","[2113016, 2155542, 2198410, 2202656]"
"('Scanner.java', 'java.util.Scanner', 'getCompleteTokenInBuffer', '(?s).*', '""pool-1-thread-1"" daemon prio=10 tid=0x7fd6fc43d800 nid=3527\n   java.lang.Thread.State: RUNNABLE\n\tat java.io.FileInputStream.readBytes(Native Method)\n\tat java.io.FileInputStream.read(FileInputStream.java:272)\n\tat java.io.BufferedInputStream.read1(BufferedInputStream.java:273)\n\tat java.io.BufferedInputStream.read(BufferedInputStream.java:334)\n\t- locked <0x7b78ec540> (a java.lang.UNIXProcess$ProcessPipeInputStream)\n\tat sun.nio.cs.StreamDecoder.readBytes(StreamDecoder.java:283)\n\tat sun.nio.cs.StreamDecoder.implRead(StreamDecoder.java:325)\n\tat sun.nio.cs.StreamDecoder.read(StreamDecoder.java:177)\n\t- locked <0x7b78f0810> (a java.io.InputStreamReader)\n\tat java.io.InputStreamReader.read(InputStreamReader.java:184)\n\tat java.io.Reader.read(Reader.java:100)\n\tat java.util.Scanner.readInput(Scanner.java:849)\n\tat java.util.Scanner.hasNext(Scanner.java:1384)\n\tat com.github.olivergondza.dumpling.factory.ThreadDumpFactory.fromStream(ThreadDumpFactory.java:118)\n\tat com.github.olivergondza.dumpling.factory.PidRuntimeFactory.createRuntime(PidRuntimeFactory.java:191)\n\tat com.github.olivergondza.dumpling.factory.PidRuntimeFactory.fromProcess(PidRuntimeFactory.java:85)\n\tat com.github.olivergondza.dumpling.factory.PidRuntimeFactory.fromProcess(PidRuntimeFactory.java:101)\n\tat com.github.olivergondza.dumpling.cli.Factories$Pid.createRuntime(Factories.java:114)\n\tat com.github.olivergondza.dumpling.cli.Factories$Pid.createRuntime(Factories.java:98)\n\tat com.github.olivergondza.dumpling.cli.Main$ProcessRuntimeOptionHandler.parseArguments(Main.java:137)\n\tat org.kohsuke.args4j.CmdLineParser.parseArgument(CmdLineParser.java:520)\n\tat com.github.olivergondza.dumpling.cli.CliCommandOptionHandler.parseArguments(CliCommandOptionHandler.java:63)\n\tat org.kohsuke.args4j.CmdLineParser.parseArgument(CmdLineParser.java:520)\n\tat com.github.olivergondza.dumpling.cli.Main.run(Main.java:73)\n\tat com.github.olivergondza.dumpling.cli.AbstractCliTest.run(AbstractCliTest.java:51)\n\tat com.github.olivergondza.dumpling.cli.ProcessRuntimeOptionHandlerTest.inferSourcePid(ProcessRuntimeOptionHandlerTest.java:52)\n\tat sun.reflect.NativeMethodAccessorImpl.invoke0(Native Method)\n\tat sun.reflect.NativeMethodAccessorImpl.invoke(NativeMethodAccessorImpl.java:57)\n\tat sun.reflect.DelegatingMethodAccessorImpl.invoke(DelegatingMethodAccessorImpl.java:43)\n\tat java.lang.reflect.Method.invoke(Method.java:606)\n\tat org.junit.runners.model.FrameworkMethod$1.runReflectiveCall(FrameworkMethod.java:50)\n\tat org.junit.internal.runners.model.ReflectiveCallable.run(ReflectiveCallable.java:12)\n\tat org.junit.runners.model.FrameworkMethod.invokeExplosively(FrameworkMethod.java:47)\n\tat org.junit.internal.runners.statements.InvokeMethod.evaluate(InvokeMethod.java:17)\n\tat org.junit.runners.ParentRunner.runLeaf(ParentRunner.java:325)\n\tat org.junit.runners.BlockJUnit4ClassRunner.runChild(BlockJUnit4ClassRunner.java:78)\n\tat org.junit.runners.BlockJUnit4ClassRunner.runChild(BlockJUnit4ClassRunner.java:57)\n\tat org.junit.runners.ParentRunner$3.run(ParentRunner.java:290)\n\tat org.apache.maven.surefire.junitcore.pc.Scheduler$1.run(Scheduler.java:393)\n\tat java.util.concurrent.Executors$RunnableAdapter.call(Executors.java:471)\n\tat java.util.concurrent.FutureTask.run(FutureTask.java:262)\n\tat java.util.concurrent.ThreadPoolExecutor.runWorker(ThreadPoolExecutor.java:1145)\n\tat java.util.concurrent.ThreadPoolExecutor$Worker.run(ThreadPoolExecutor.java:615)\n\tat java.lang.Thread.run(Thread.java:745)\n\n   Locked ownable synchronizers:\n\t- <0x707005858> (a java.util.concurrent.ThreadPoolExecutor$Worker)\n\n\n""surefire-forkedjvm-command-thread"" daemon prio=10 tid=0x7fd6fc311800 nid=3526\n   java.lang.Thread.State: RUNNABLE\n\tat java.io.FileInputStream.readBytes(Native Method)\n\tat java.io.FileInputStream.read(FileInputStream.java:272)\n\tat java.io.BufferedInputStream.fill(BufferedInputStream.java:235)\n\tat java.io.BufferedInputStream.read(BufferedInputStream.java:254)\n\t- locked <0x707069ca8> (a java.io.BufferedInputStream)\n\tat java.io.DataInputStream.readInt(DataInputStream.java:387)\n\tat org.apache.maven.surefire.booter.MasterProcessComm')",[1528940]
"('Description.java', 'org.junit.runner.Description', 'methodAndClassNamePatternGroupOrDefault', '([\\s\\S]*)\\((.*)\\)', 'com.github.olivergondza.dumpling.query.DeadlocksTest')","[2306824, 2306851]"
"('FilterBuilder.java', 'org.reflections.util.FilterBuilder$Include', 'apply', 'com\\.github\\.olivergondza\\.dumpling.*', 'com/github/olivergondza/dumpling/groovy/GroovyApiEntryPoint$1.class')","[69562, 88818, 114530, 133786, 155341, 174597, 194718, 213974, 234095, 252112, 271350, 291576, 311120, 331346, 350981, 371207, 390842, 411068, 430612, 450838, 478764, 498020, 518141, 537397, 557518, 576774, 596895, 616151, 636272, 655528, 675649, 693666, 716208, 739488, 763181, 786533, 811880, 835160, 858440, 881720, 905000, 928693, 952458, 989372, 1012652, 1035932, 1059212, 1082492, 1105772, 1129052, 1152745, 1178204, 1201484, 1224764, 1243914, 1262344, 1280774, 1299204, 1317634, 1336064, 1355320, 1375441, 1394697, 1414818, 1432835, 1451247, 1470503, 1496131, 1515387, 1546012, 1565268, 1583842, 1602272, 1621528, 1640102, 1658532, 1677788, 1698343, 1728531, 1746548, 1764906, 1784162, 1809928, 1828358, 1847614, 1866188, 1884618, 1903048, 1921891, 1940393, 1959236, 1977738, 1996168, 2015011, 2033513, 2052769, 2071343, 2089773, 2107790, 2130106, 2149362, 2172974, 2192230, 2226182, 2245438, 2271150, 2290406, 2329102, 2348843, 2372722, 2392463]"
"('ThreadDumpFactory.java', 'com.github.olivergondza.dumpling.factory.ThreadDumpFactory', 'initHeader', '#\\d+', '[0x00007fd6f8360000]')","[459074, 459113, 964385, 964436, 1524162, 1524199]"
"('ThreadDumpFactory.java', 'com.github.olivergondza.dumpling.factory.ThreadDumpFactory', 'initHeader', '#\\d+', '[0x00007fd6b08d2000]')","[456481, 456520, 960946, 960997, 1521681, 1521718]"
"('FilterBuilder.java', 'org.reflections.util.FilterBuilder$Include', 'apply', 'com\\.github\\.olivergondza\\.dumpling.*', 'com.github.olivergondza.dumpling.cli.command.grep.usage')","[61255, 80075, 106223, 125043, 147034, 165854, 186411, 205231, 225788, 244023, 262607, 282397, 302377, 322167, 342238, 362028, 382099, 401889, 421869, 441659, 470457, 489277, 509834, 528654, 549211, 568031, 588588, 607408, 627965, 646785, 667342, 685577, 705721, 729001, 752476, 776046, 801393, 824673, 847953, 871233, 894513, 917988, 941753, 978885, 1002165, 1025445, 1048725, 1072005, 1095285, 1118565, 1142040, 1167717, 1190997, 1214277, 1235607, 1254037, 1272467, 1290897, 1309327, 1327757, 1346577, 1367134, 1385954, 1406511, 1424746, 1442940, 1461760, 1487824, 1506644, 1537705, 1556525, 1575535, 1593965, 1612785, 1631795, 1650225, 1669045, 1690036, 1720224, 1738459, 1756599, 1775419, 1801621, 1820051, 1838871, 1857881, 1876311, 1894741, 1913366, 1932086, 1950711, 1969431, 1987861, 2006486, 2025206, 2044026, 2063036, 2081466, 2099701, 2121799, 2140619, 2164667, 2183487, 2217875, 2236695, 2262843, 2281663, 2320577, 2339882, 2364197, 2383502]"
"('FilterBuilder.java', 'org.reflections.util.FilterBuilder$Include', 'apply', 'com\\.github\\.olivergondza\\.dumpling.*', 'com/github/olivergondza/dumpling/cli/GroovyCommand.class')","[58892, 77588, 103860, 122556, 144671, 163367, 184048, 202744, 223425, 241722, 260120, 279786, 299890, 319556, 339751, 359417, 379612, 399278, 419382, 439048, 468094, 486790, 507471, 526167, 546848, 565544, 586225, 604921, 625602, 644298, 664979, 683276, 702738, 726018, 749431, 773063, 798410, 821690, 844970, 868250, 891530, 914943, 938708, 975902, 999182, 1022462, 1045742, 1069022, 1092302, 1115582, 1138995, 1164734, 1188014, 1211294, 1233244, 1251674, 1270104, 1288534, 1306964, 1325394, 1344090, 1364771, 1383467, 1404148, 1422445, 1440577, 1459273, 1485461, 1504157, 1535342, 1554038, 1573172, 1591602, 1610298, 1629432, 1647862, 1666558, 1687673, 1717861, 1736158, 1754236, 1772932, 1799258, 1817688, 1836384, 1855518, 1873948, 1892378, 1910941, 1929723, 1948286, 1967068, 1985498, 2004061, 2022843, 2041539, 2060673, 2079103, 2097400, 2119436, 2138132, 2162304, 2181000, 2215512, 2234208, 2260480, 2279176, 2318152, 2337333, 2361772, 2380953]"
"('FilterBuilder.java', 'org.reflections.util.FilterBuilder$Include', 'apply', 'com\\.github\\.olivergondza\\.dumpling.*', 'com.github.olivergondza.dumpling.TestThread.jmxremote.access')","[71343, 90693, 116311, 135661, 157122, 176472, 196499, 215849, 235876, 253846, 273225, 293545, 312995, 333315, 352856, 373176, 392717, 413037, 432487, 452807, 480545, 499895, 519922, 539272, 559299, 578649, 598676, 618026, 638053, 657403, 677430, 695400, 718459, 741739, 765479, 788784, 814131, 837411, 860691, 883971, 907251, 930991, 954756, 991623, 1014903, 1038183, 1061463, 1084743, 1108023, 1131303, 1155043, 1180455, 1203735, 1227015, 1245695, 1264125, 1282555, 1300985, 1319415, 1337845, 1357195, 1377222, 1396572, 1416599, 1434569, 1453028, 1472378, 1497912, 1517262, 1547793, 1567143, 1585623, 1604053, 1623403, 1641883, 1660313, 1679663, 1700124, 1730312, 1748282, 1766687, 1786037, 1811709, 1830139, 1849489, 1867969, 1886399, 1904829, 1923719, 1942174, 1961064, 1979519, 1997949, 2016839, 2035294, 2054644, 2073124, 2091554, 2109524, 2131887, 2151237, 2174755, 2194105, 2227963, 2247313, 2272931, 2292281, 2330930, 2350765, 2374550, 2394385]"
"('FilterBuilder.java', 'org.reflections.util.FilterBuilder$Include', 'apply', 'com\\.github\\.olivergondza\\.dumpling.*', 'com/github/olivergondza/dumpling/factory/ThreadDumpFactoryVendorTest/waiting.groovy')","[57374, 75990, 102342, 120958, 143153, 161769, 182530, 201146, 221907, 240244, 258522, 278108, 298292, 317878, 338153, 357739, 378014, 397600, 417784, 437370, 466576, 485192, 505953, 524569, 545330, 563946, 584707, 603323, 624084, 642700, 663461, 681798, 700820, 724100, 747473, 771145, 796492, 819772, 843052, 866332, 889612, 912985, 936750, 973984, 997264, 1020544, 1043824, 1067104, 1090384, 1113664, 1137037, 1162816, 1186096, 1209376, 1231726, 1250156, 1268586, 1287016, 1305446, 1323876, 1342492, 1363253, 1381869, 1402630, 1420967, 1439059, 1457675, 1483943, 1502559, 1533824, 1552440, 1571654, 1590084, 1608700, 1627914, 1646344, 1664960, 1686155, 1716343, 1734680, 1752718, 1771334, 1797740, 1816170, 1834786, 1854000, 1872430, 1890860, 1909383, 1928205, 1946728, 1965550, 1983980, 2002503, 2021325, 2039941, 2059155, 2077585, 2095922, 2117918, 2136534, 2160786, 2179402, 2213994, 2232610, 2258962, 2277578, 2316594, 2335695, 2360214, 2379315]"
"('FilterBuilder.java', 'org.reflections.util.FilterBuilder$Exclude', 'apply', 'java.lang.Object', 'com.github.olivergondza.dumpling.cli.AbstractCliTest')","[53973, 54087, 54201, 54315, 54429, 54543, 54771, 54885, 55113, 55381, 55495, 55723, 72409, 72529, 72649, 72769, 72889, 73009, 73249, 73369, 73609, 73891, 74011, 74251, 98941, 99055, 99169, 99283, 99397, 99511, 99739, 99853, 100081, 100349, 100463, 100691, 117377, 117497, 117617, 117737, 117857, 117977, 118217, 118337, 118577, 118859, 118979, 119219, 139752, 139866, 139980, 140094, 140208, 140322, 140550, 140664, 140892, 141160, 141274, 141502, 158188, 158308, 158428, 158548, 158668, 158788, 159028, 159148, 159388, 159670, 159790, 160030, 179129, 179243, 179357, 179471, 179585, 179699, 179927, 180041, 180269, 180537, 180651, 180879, 197565, 197685, 197805, 197925, 198045, 198165, 198405, 198525, 198765, 199047, 199167, 199407, 218506, 218620, 218734, 218848, 218962, 219076, 219304, 219418, 219646, 219914, 220028, 220256, 236933, 237044, 237155, 237266, 237377, 237488, 237710, 237821, 238043, 238304, 238415, 238637, 254941, 255061, 255181, 255301, 255421, 255541, 255781, 255901, 256141, 256423, 256543, 256783, 274347, 274473, 274599, 274725, 274851, 274977, 275229, 275355, 275607, 275903, 276029, 276281, 294711, 294831, 294951, 295071, 295191, 295311, 295551, 295671, 295911, 296193, 296313, 296553, 314117, 314243, 314369, 314495, 314621, 314747, 314999, 315125, 315377, 315673, 315799, 316051, 334572, 334692, 334812, 334932, 335052, 335172, 335412, 335532, 335772, 336054, 336174, 336414, 353978, 354104, 354230, 354356, 354482, 354608, 354860, 354986, 355238, 355534, 355660, 355912, 374433, 374553, 374673, 374793, 374913, 375033, 375273, 375393, 375633, 375915, 376035, 376275, 393839, 393965, 394091, 394217, 394343, 394469, 394721, 394847, 395099, 395395, 395521, 395773, 414203, 414323, 414443, 414563, 414683, 414803, 415043, 415163, 415403, 415685, 415805, 416045, 433609, 433735, 433861, 433987, 434113, 434239, 434491, 434617, 434869, 435165, 435291, 435543, 463175, 463289, 463403, 463517, 463631, 463745, 463973, 464087, 464315, 464583, 464697, 464925, 481611, 481731, 481851, 481971, 482091, 482211, 482451, 482571, 482811, 483093, 483213, 483453, 502552, 502666, 502780, 502894, 503008, 503122, 503350, 503464, 503692, 503960, 504074, 504302, 520988, 521108, 521228, 521348, 521468, 521588, 521828, 521948, 522188, 522470, 522590, 522830, 541929, 542043, 542157, 542271, 542385, 542499, 542727, 542841, 543069, 543337, 543451, 543679, 560365, 560485, 560605, 560725, 560845, 560965, 561205, 561325, 561565, 561847, 561967, 562207, 581306, 581420, 581534, 581648, 581762, 581876, 582104, 582218, 582446, 582714, 582828, 583056, 599742, 599862, 599982, 600102, 600222, 600342, 600582, 600702, 600942, 601224, 601344, 601584, 620683, 620797, 620911, 621025, 621139, 621253, 621481, 621595, 621823, 622091, 622205, 622433, 639119, 639239, 639359, 639479, 639599, 639719, 639959, 640079, 640319, 640601, 640721, 640961, 660060, 660174, 660288, 660402, 660516, 660630, 660858, 660972, 661200, 661468, 661582, 661810, 678487, 678598, 678709, 678820, 678931, 679042, 679264, 679375, 679597, 679858, 679969, 680191, 696519, 696663, 696807, 696951, 697095, 697239, 697527, 697671, 697959, 698297, 698441, 698729, 719799, 719943, 720087, 720231, 720375, 720519, 720807, 720951, 721239, 721577, 721721, 722009, 743082, 743229, 743376, 743523, 743670, 743817, 744111, 744258, 744552, 744897, 745044, 745338, 766844, 766988, 767132, 767276, 767420, 767564, 767852, 767996, 768284, 768622, 768766, 769054, 792191, 792335, 792479, 792623, 792767, 792911, 793199, 793343, 793631, 793969, 794113, 794401, 815471, 815615, 815759, 815903, 816047, 816191, 816479, 816623, 816911, 817249, 817393, 817681, 838751, 838895, 839039, 839183, 839327, 839471, 839759, 839903, 840191, 840529, 840673, 840961, 862031, 862175, 862319, 862463, 862607, 862751, 863039, 863183, 863471, 863809, 863953, 864241, 885311, 885455, 885599, 885743, 885887, 886031, 886319, 886463, 886751, 887089, 887233, 887521, 908594, 908741, 908888, 909035, 909182, 909329, 909623, 909770, 910064, 910409, 910556, 910850, 932359, 932506, 932653, 932800, 932947, 933094, 933388, 933535, 933829, 934174, 934321, 934615, 969683, 969827, 969971, 970115, 970259, 970403, 970691, 970835, 971123, 971461, 971605, 971893, 992963, 993107, 993251, 993395, 993539, 993683, 993971, 994115, 994403, 994741, 994885, 995173, 1016243, 1016387, 1016531, 1016675, 1016819, 1016963, 1017251, 1017395, 1017683, 1018021, 1018165, 1018453, 1039523, 1039667, 1039811, 1039955, 1040099, 1040243, 1040531, 1040675, 1040963, 1041301, 1041445, 1041733, 1062803, 1062947, 1063091, 1063235, 1063379, 1063523, 1063811, 1063955, 1064243, 1064581, 1064725, 1065013, 1086083, 1086227, 1086371, 1086515, 1086659, 1086803, 1087091, 1087235, 1087523, 1087861, 1088005, 1088293, 1109363, 1109507, 1109651, 1109795, 1109939, 1110083, 1110371, 1110515, 1110803, 1111141, 1111285, 1111573, 1132646, 1132793, 1132940, 1133087, 1133234, 1133381, 1133675, 1133822, 1134116, 1134461, 1134608, 1134902, 1158515, 1158659, 1158803, 1158947, 1159091, 1159235, 1159523, 1159667, 1159955, 1160293, 1160437, 1160725, 1181795, 1181939, 1182083, 1182227, 1182371, 1182515, 1182803, 1182947, 1183235, 1183573, 1183717, 1184005, 1205075, 1205219, 1205363, 1205507, 1205651, 1205795, 1206083, 1206227, 1206515, 1206853, 1206997, 1207285, 1228325, 1228439, 1228553, 1228667, 1228781, 1228895, 1229123, 1229237, 1229465, 1229733, 1229847, 1230075, 1246755, 1246869, 1246983, 1247097, 1247211, 1247325, 1247553, 1247667, 1247895, 1248163, 1248277, 1248505, 1265185, 1265299, 1265413, 1265527, 1265641, 1265755, 1265983, 1266097, 1266325, 1266593, 1266707, 1266935, 1283615, 1283729, 1283843, 1283957, 1284071, 1284185, 1284413, 1284527, 1284755, 1285023, 1285137, 1285365, 1302045, 1302159, 1302273, 1302387, 1302501, 1302615, 1302843, 1302957, 1303185, 1303453, 1303567, 1303795, 1320475, 1320589, 1320703, 1320817, 1320931, 1321045, 1321273, 1321387, 1321615, 1321883, 1321997, 1322225, 1338911, 1339031, 1339151, 1339271, 1339391, 1339511, 1339751, 1339871, 1340111, 1340393, 1340513, 1340753, 1359852, 1359966, 1360080, 1360194, 1360308, 1360422, 1360650, 1360764, 1360992, 1361260, 1361374, 1361602, 1378288, 1378408, 1378528, 1378648, 1378768, 1378888, 1379128, 1379248, 1379488, 1379770, 1379890, 1380130, 1399229, 1399343, 1399457, 1399571, 1399685, 1399799, 1400027, 1400141, 1400369, 1400637, 1400751, 1400979, 1417656, 1417767, 1417878, 1417989, 1418100, 1418211, 1418433, 1418544, 1418766, 1419027, 1419138, 1419360, 1435658, 1435772, 1435886, 1436000, 1436114, 1436228, 1436456, 1436570, 1436798, 1437066, 1437180, 1437408, 1454094, 1454214, 1454334, 1454454, 1454574, 1454694, 1454934, 1455054, 1455294, 1455576, 1455696, 1455936, 1480542, 1480656, 1480770, 1480884, 1480998, 1481112, 1481340, 1481454, 1481682, 1481950, 1482064, 1482292, 1498978, 1499098, 1499218, 1499338, 1499458, 1499578, 1499818, 1499938, 1500178, 1500460, 1500580, 1500820, 1530423, 1530537, 1530651, 1530765, 1530879, 1530993, 1531221, 1531335, 1531563, 1531831, 1531945, 1532173, 1548859, 1548979, 1549099, 1549219, 1549339, 1549459, 1549699, 1549819, 1550059, 1550341, 1550461, 1550701, 1568253, 1568367, 1568481, 1568595, 1568709, 1568823, 1569051, 1569165, 1569393, 1569661, 1569775, 1570003, 1586683, 1586797, 1586911, 1587025, 1587139, 1587253, 1587481, 1587595, 1587823, 1588091, 1588205, 1588433, 1605119, 1605239, 1605359, 1605479, 1605599, 1605719, 1605959, 1606079, 1606319, 1606601, 1606721, 1606961, 1624513, 1624627, 1624741, 1624855, 1624969, 1625083, 1625311, 1625425, 1625653, 1625921, 1626035, 1626263, 1642943, 1643057, 1643171, 1643285, 1643399, 1643513, 1643741, 1643855, 1644083, 1644351, 1644465, 1644693, 1661379, 1661499, 1661619, 1661739, 1661859, 1661979, 1662219, 1662339, 1662579, 1662861, 1662981, 1663221, 1682754, 1682868, 1682982, 1683096, 1683210, 1683324, 1683552, 1683666, 1683894, 1684162, 1684276, 1684504, 1712942, 1713056, 1713170, 1713284, 1713398, 1713512, 1713740, 1713854, 1714082, 1714350, 1714464, 1714692, 1731369, 1731480, 1731591, 1731702, 1731813, 1731924, 1732146, 1732257, 1732479, 1732740, 1732851, 1733073, 1749317, 1749431, 1749545, 1749659, 1749773, 1749887, 1750115, 1750229, 1750457, 1750725, 1750839, 1751067, 1767753, 1767873, 1767993, 1768113, 1768233, 1768353, 1768593, 1768713, 1768953, 1769235, 1769355, 1769595, 1794339, 1794453, 1794567, 1794681, 1794795, 1794909, 1795137, 1795251, 1795479, 1795747, 1795861, 1796089, 1812769, 1812883, 1812997, 1813111, 1813225, 1813339, 1813567, 1813681, 1813909, 1814177, 1814291, 1814519, 1831205, 1831325, 1831445, 1831565, 1831685, 1831805, 1832045, 1832165, 1832405, 1832687, 1832807, 1833047, 1850599, 1850713, 1850827, 1850941, 1851055, 1851169, 1851397, 1851511, 1851739, 1852007, 1852121, 1852349, 1869029, 1869143, 1869257, 1869371, 1869485, 1869599, 1869827, 1869941, 1870169, 1870437, 1870551, 1870779, 1887459, 1887573, 1887687, 1887801, 1887915, 1888029, 1888257, 1888371, 1888599, 1888867, 1888981, 1889209, 1905892, 1906009, 1906126, 1906243, 1906360, 1906477, 1906711, 1906828, 1907062, 1907337, 1907454, 1907688, 1924804, 1924918, 1925032, 1925146, 1925260, 1925374, 1925602, 1925716, 1925944, 1926212, 1926326, 1926554, 1943237, 1943354, 1943471, 1943588, 1943705, 1943822, 1944056, 1944173, 1944407, 1944682, 1944799, 1945033, 1962149, 1962263, 1962377, 1962491, 1962605, 1962719, 1962947, 1963061, 1963289, 1963557, 1963671, 1963899, 1980579, 1980693, 1980807, 1980921, 1981035, 1981149, 1981377, 1981491, 1981719, 1981987, 1982101, 1982329, 1999012, 1999129, 1999246, 1999363, 1999480, 1999597, 1999831, 1999948, 2000182, 2000457, 2000574, 2000808, 2017924, 2018038, 2018152, 2018266, 2018380, 2018494, 2018722, 2018836, 2019064, 2019332, 2019446, 2019674, 2036360, 2036480, 2036600, 2036720, 2036840, 2036960, 2037200, 2037320, 2037560, 2037842, 2037962, 2038202, 2055754, 2055868, 2055982, 2056096, 2056210, 2056324, 2056552, 2056666, 2056894, 2057162, 2057276, 2057504, 2074184, 2074298, 2074412, 2074526, 2074640, 2074754, 2074982, 2075096, 2075324, 2075592, 2075706, 2075934, 2092611, 2092722, 2092833, 2092944, 2093055, 2093166, 2093388, 2093499, 2093721, 2093982, 2094093, 2094315, 2114517, 2114631, 2114745, 2114859, 2114973, 2115087, 2115315, 2115429, 2115657, 2115925, 2116039, 2116267, 2132953, 2133073, 2133193, 2133313, 2133433, 2133553, 2133793, 2133913, 2134153, 2134435, 2134555, 2134795, 2157385, 2157499, 2157613, 2157727, 2157841, 2157955, 2158183, 2158297, 2158525, 2158793, 2158907, 2159135, 2175821, 2175941, 2176061, 2176181, 2176301, 2176421, 2176661, 2176781, 2177021, 2177303, 2177423, 2177663, 2210593, 2210707, 2210821, 2210935, 2211049, 2211163, 2211391, 2211505, 2211733, 2212001, 2212115, 2212343, 2229029, 2229149, 2229269, 2229389, 2229509, 2229629, 2229869, 2229989, 2230229, 2230511, 2230631, 2230871, 2255561, 2255675, 2255789, 2255903, 2256017, 2256131, 2256359, 2256473, 2256701, 2256969, 2257083, 2257311, 2273997, 2274117, 2274237, 2274357, 2274477, 2274597, 2274837, 2274957, 2275197, 2275479, 2275599, 2275839, 2313103, 2313220, 2313337, 2313454, 2313571, 2313688, 2313922, 2314039, 2314273, 2314548, 2314665, 2314899, 2332024, 2332147, 2332270, 2332393, 2332516, 2332639, 2332885, 2333008, 2333254, 2333543, 2333666, 2333912, 2356723, 2356840, 2356957, 2357074, 2357191, 2357308, 2357542, 2357659, 2357893, 2358168, 2358285, 2358519, 2375644, 2375767, 2375890, 2376013, 2376136, 2376259, 2376505, 2376628, 2376874, 2377163, 2377286, 2377532]"
"('Scanner.java', 'java.util.Scanner', 'getCompleteTokenInBuffer', '(?s).*', '2018-01-11 20:21:58\nFull thread dump Java HotSpot(TM) 64-Bit Server VM (24.80-b11 mixed mode):\n\n""Attach Listener"" daemon prio=10 tid=0x00007f2a08001000 nid=0xea0 waiting on condition [0x0000000000000000]\n   java.lang.Thread.State: RUNNABLE\n\n   Locked ownable synchronizers:\n\t- None\n\n""Service Thread"" daemon prio=10 tid=0x00007f2a3009e800 nid=0xe8e runnable [0x0000000000000000]\n   java.lang.Thread.State: RUNNABLE\n\n   Locked ownable synchronizers:\n\t- None\n\n""C2 CompilerThread1"" daemon prio=10 tid=0x00007f2a3009c800 nid=0xe8d waiting on condition [0x0000000000000000]\n   java.lang.Thread.State: RUNNABLE\n\n   Locked ownable synchronizers:\n\t- None\n\n""C2 CompilerThread0"" daemon prio=10 tid=0x00007f2a30099800 nid=0xe8c waiting on condition [0x0000000000000000]\n   java.lang.Thread.State: RUNNABLE\n\n   Locked ownable synchronizers:\n\t- None\n\n""Signal Dispatcher"" daemon prio=10 tid=0x00007f2a30097000 nid=0xe8b runnable [0x0000000000000000]\n   java.lang.Thread.State: RUNNABLE\n\n   Locked ownable synchronizers:\n\t- None\n\n""Finalizer')","[16042, 16108, 16450, 16654, 16996, 17338]"
"('ThreadDumpFactory.java', 'com.github.olivergondza.dumpling.factory.ThreadDumpFactory', 'initHeader', '#\\d+', '[0x00007f878d659000]')","[27823, 27857]"
"('FilterBuilder.java', 'org.reflections.util.FilterBuilder$Include', 'apply', 'com\\.github\\.olivergondza\\.dumpling.*', 'com/github/olivergondza/dumpling/groovy/InterpretterConfig.class')","[61752, 80598, 106720, 125566, 147531, 166377, 186908, 205754, 226285, 244507, 263130, 282946, 302900, 322716, 342761, 362577, 382622, 402438, 422392, 442208, 470954, 489800, 510331, 529177, 549708, 568554, 589085, 607931, 628462, 647308, 667839, 686061, 706348, 729628, 753116, 776673, 802020, 825300, 848580, 871860, 895140, 918628, 942393, 979512, 1002792, 1026072, 1049352, 1072632, 1095912, 1119192, 1142680, 1168344, 1191624, 1214904, 1236104, 1254534, 1272964, 1291394, 1309824, 1328254, 1347100, 1367631, 1386477, 1407008, 1425230, 1443437, 1462283, 1488321, 1507167, 1538202, 1557048, 1576032, 1594462, 1613308, 1632292, 1650722, 1669568, 1690533, 1720721, 1738943, 1757096, 1775942, 1802118, 1820548, 1839394, 1858378, 1876808, 1895238, 1913876, 1932583, 1951221, 1969928, 1988358, 2006996, 2025703, 2044549, 2063533, 2081963, 2100185, 2122296, 2141142, 2165164, 2184010, 2218372, 2237218, 2263340, 2282186, 2321087, 2340418, 2364707, 2384038]"
"('FilterBuilder.java', 'org.reflections.util.FilterBuilder$Include', 'apply', 'com\\.github\\.olivergondza\\.dumpling.*', 'com.github.olivergondza.dumpling.cli.Main$ProcessRuntimeOptionHandler.class')","[59465, 78191, 104433, 123159, 145244, 163970, 184621, 203347, 223998, 242280, 260723, 280419, 300493, 320189, 340354, 360050, 380215, 399911, 419985, 439681, 468667, 487393, 508044, 526770, 547421, 566147, 586798, 605524, 626175, 644901, 665552, 683834, 703461, 726741, 750169, 773786, 799133, 822413, 845693, 868973, 892253, 915681, 939446, 976625, 999905, 1023185, 1046465, 1069745, 1093025, 1116305, 1139733, 1165457, 1188737, 1212017, 1233817, 1252247, 1270677, 1289107, 1307537, 1325967, 1344693, 1365344, 1384070, 1404721, 1423003, 1441150, 1459876, 1486034, 1504760, 1535915, 1554641, 1573745, 1592175, 1610901, 1630005, 1648435, 1667161, 1688246, 1718434, 1736716, 1754809, 1773535, 1799831, 1818261, 1836987, 1856091, 1874521, 1892951, 1911529, 1930296, 1948874, 1967641, 1986071, 2004649, 2023416, 2042142, 2061246, 2079676, 2097958, 2120009, 2138735, 2162877, 2181603, 2216085, 2234811, 2261053, 2279779, 2318740, 2337951, 2362360, 2381571]"
"('FilterBuilder.java', 'org.reflections.util.FilterBuilder$Exclude', 'apply', 'java.lang.Object', 'java.lang.RuntimeException')","[60193, 68499, 68955, 69069, 78957, 87699, 88179, 88299, 105161, 113467, 113923, 114037, 123925, 132667, 133147, 133267, 145972, 154278, 154734, 154848, 164736, 173478, 173958, 174078, 185349, 193655, 194111, 194225, 204113, 212855, 213335, 213455, 224726, 233032, 233488, 233602, 242989, 251077, 251521, 251632, 261489, 270231, 270711, 270831, 281223, 290401, 290905, 291031, 301259, 310001, 310481, 310601, 320993, 330171, 330675, 330801, 341120, 349862, 350342, 350462, 360854, 370032, 370536, 370662, 380981, 389723, 390203, 390323, 400715, 409893, 410397, 410523, 420751, 429493, 429973, 430093, 440485, 449663, 450167, 450293, 469395, 477701, 478157, 478271, 488159, 496901, 497381, 497501, 508772, 517078, 517534, 517648, 527536, 536278, 536758, 536878, 548149, 556455, 556911, 557025, 566913, 575655, 576135, 576255, 587526, 595832, 596288, 596402, 606290, 615032, 615512, 615632, 626903, 635209, 635665, 635779, 645667, 654409, 654889, 655009, 666280, 674586, 675042, 675156, 684543, 692631, 693075, 693186, 704379, 714865, 715441, 715585, 727659, 738145, 738721, 738865, 751106, 761810, 762398, 762545, 774704, 785190, 785766, 785910, 800051, 810537, 811113, 811257, 823331, 833817, 834393, 834537, 846611, 857097, 857673, 857817, 869891, 880377, 880953, 881097, 893171, 903657, 904233, 904377, 916618, 927322, 927910, 928057, 940383, 951087, 951675, 951822, 977543, 988029, 988605, 988749, 1000823, 1011309, 1011885, 1012029, 1024103, 1034589, 1035165, 1035309, 1047383, 1057869, 1058445, 1058589, 1070663, 1081149, 1081725, 1081869, 1093943, 1104429, 1105005, 1105149, 1117223, 1127709, 1128285, 1128429, 1140670, 1151374, 1151962, 1152109, 1166375, 1176861, 1177437, 1177581, 1189655, 1200141, 1200717, 1200861, 1212935, 1223421, 1223997, 1224141, 1234545, 1242851, 1243307, 1243421, 1252975, 1261281, 1261737, 1261851, 1271405, 1279711, 1280167, 1280281, 1289835, 1298141, 1298597, 1298711, 1308265, 1316571, 1317027, 1317141, 1326695, 1335001, 1335457, 1335571, 1345459, 1354201, 1354681, 1354801, 1366072, 1374378, 1374834, 1374948, 1384836, 1393578, 1394058, 1394178, 1405449, 1413755, 1414211, 1414325, 1423712, 1431800, 1432244, 1432355, 1441878, 1450184, 1450640, 1450754, 1460642, 1469384, 1469864, 1469984, 1486762, 1495068, 1495524, 1495638, 1505526, 1514268, 1514748, 1514868, 1536643, 1544949, 1545405, 1545519, 1555407, 1564149, 1564629, 1564749, 1574473, 1582779, 1583235, 1583349, 1592903, 1601209, 1601665, 1601779, 1611667, 1620409, 1620889, 1621009, 1630733, 1639039, 1639495, 1639609, 1649163, 1657469, 1657925, 1658039, 1667927, 1676669, 1677149, 1677269, 1688974, 1697280, 1697736, 1697850, 1719162, 1727468, 1727924, 1728038, 1737425, 1745513, 1745957, 1746068, 1755537, 1763843, 1764299, 1764413, 1774301, 1783043, 1783523, 1783643, 1800559, 1808865, 1809321, 1809435, 1818989, 1827295, 1827751, 1827865, 1837753, 1846495, 1846975, 1847095, 1856819, 1865125, 1865581, 1865695, 1875249, 1883555, 1884011, 1884125, 1893679, 1901985, 1902441, 1902555, 1912276, 1920800, 1921268, 1921385, 1931024, 1939330, 1939786, 1939900, 1949621, 1958145, 1958613, 1958730, 1968369, 1976675, 1977131, 1977245, 1986799, 1995105, 1995561, 1995675, 2005396, 2013920, 2014388, 2014505, 2024144, 2032450, 2032906, 2033020, 2042908, 2051650, 2052130, 2052250, 2061974, 2070280, 2070736, 2070850, 2080404, 2088710, 2089166, 2089280, 2098667, 2106755, 2107199, 2107310, 2120737, 2129043, 2129499, 2129613, 2139501, 2148243, 2148723, 2148843, 2163605, 2171911, 2172367, 2172481, 2182369, 2191111, 2191591, 2191711, 2216813, 2225119, 2225575, 2225689, 2235577, 2244319, 2244799, 2244919, 2261781, 2270087, 2270543, 2270657, 2280545, 2289287, 2289767, 2289887, 2319487, 2328011, 2328479, 2328596, 2338736, 2347696, 2348188, 2348311, 2363107, 2371631, 2372099, 2372216, 2382356, 2391316, 2391808, 2391931]"
"('FilterBuilder.java', 'org.reflections.util.FilterBuilder$Include', 'apply', 'com\\.github\\.olivergondza\\.dumpling.*', 'com/github/olivergondza/dumpling/query/TopContendersTest.class')","[54124, 72568, 99092, 117536, 139903, 158347, 179280, 197724, 218657, 237080, 255100, 274514, 294870, 314284, 334731, 354145, 374592, 394006, 414362, 433776, 463326, 481770, 502703, 521147, 542080, 560524, 581457, 599901, 620834, 639278, 660211, 678634, 696710, 719990, 743277, 767035, 792382, 815662, 838942, 862222, 885502, 908789, 932554, 969874, 993154, 1016434, 1039714, 1062994, 1086274, 1109554, 1132841, 1158706, 1181986, 1205266, 1228476, 1246906, 1265336, 1283766, 1302196, 1320626, 1339070, 1360003, 1378447, 1399380, 1417803, 1435809, 1454253, 1480693, 1499137, 1530574, 1549018, 1568404, 1586834, 1605278, 1624664, 1643094, 1661538, 1682905, 1713093, 1731516, 1749468, 1767912, 1794490, 1812920, 1831364, 1850750, 1869180, 1887610, 1906047, 1924955, 1943392, 1962300, 1980730, 1999167, 2018075, 2036519, 2055905, 2074335, 2092758, 2114668, 2133112, 2157536, 2175980, 2210744, 2229188, 2255712, 2274156, 2313258, 2332187, 2356878, 2375807]"
"('Description.java', 'org.junit.runner.Description', 'methodAndClassNamePatternGroupOrDefault', '([\\s\\S]*)\\((.*)\\)', 'failTheScript(com.github.olivergondza.dumpling.cli.GroovyRuntimeTest)')",[1034]
"('Description.java', 'org.junit.runner.Description', 'methodAndClassNamePatternGroupOrDefault', '([\\s\\S]*)\\((.*)\\)', 'com.github.olivergondza.dumpling.query.TopContendersTest')","[2204070, 2204097]"
"('ThreadDumpFactory.java', 'com.github.olivergondza.dumpling.factory.ThreadDumpFactory', 'initHeader', '#\\d+', '[0x00007fd8053d2000]')","[38242, 38276]"
"('Scanner.java', 'java.util.Scanner', 'getCompleteTokenInBuffer', '(?s).*', '""owning_thread"" prio=10 tid=0x00002b6ff883a800 nid=0x5fb0 runnable [0x00002b6fe4a08000]\n   java.lang.Thread.State: RUNNABLE\n\tat hudson.model.Label.toString(Label.java:512)\n\tat org.jvnet.localizer.Localizable.<init>(Localizable.java:30)\n\tat hudson.model.Messages._Node_LabelMissing(Messages.java:3581)\n\tat hudson.model.Node.canTake(Node.java:332)\n\tat hudson.model.Queue$JobOffer.canTake(Queue.java:272)\n\tat hudson.model.Queue.maintain(Queue.java:1106)\n\t- locked <0x00000004063a9378> (a hudson.model.Queue)\n\tat hudson.model.Queue.pop(Queue.java:935)\n\t- locked <0x00000004063a9378> (a hudson.model.Queue)\n\tat hudson.model.Executor.grabJob(Executor.java:297)\n\tat hudson.model.Executor.run(Executor.java:211)\n\t- locked <0x00000004063a9378> (a hudson.model.Queue)\n\n""VM Thread"" prio=10 tid=0x00007f08ac13b800 nid=0x601e runnable \n\n""GC task thread#0 (ParallelGC)"" prio=10 tid=0x00007f08ac01e800 nid=0x6017 runnable \n\n""GC task thread#1 (ParallelGC)"" prio=10 tid=0x00007f08ac020800 nid=0x6018 runnable \n\n""GC task thread#2 (ParallelGC)')","[177976, 178173, 178299, 178425, 217353, 217550, 217676, 217802, 501399, 501596, 501722, 501848, 540776, 540973, 541099, 541225, 580153, 580350, 580476, 580602, 619530, 619727, 619853, 619979, 658907, 659104, 659230, 659356, 790657, 790919, 791084, 791249, 1156954, 1157221, 1157389, 1157557, 1358699, 1358896, 1359022, 1359148, 1398076, 1398273, 1398399, 1398525, 1681167, 1681364, 1681490, 1681616]"
"('FilterBuilder.java', 'org.reflections.util.FilterBuilder$Include', 'apply', 'com\\.github\\.olivergondza\\.dumpling.*', 'com/github/olivergondza/dumpling/cli/GroovyshCommand$1.class')","[59046, 77750, 104014, 122718, 144825, 163529, 184202, 202906, 223579, 241872, 260282, 279956, 300052, 319726, 339913, 359587, 379774, 399448, 419544, 439218, 468248, 486952, 507625, 526329, 547002, 565706, 586379, 605083, 625756, 644460, 665133, 683426, 702932, 726212, 749629, 773257, 798604, 821884, 845164, 868444, 891724, 915141, 938906, 976096, 999376, 1022656, 1045936, 1069216, 1092496, 1115776, 1139193, 1164928, 1188208, 1211488, 1233398, 1251828, 1270258, 1288688, 1307118, 1325548, 1344252, 1364925, 1383629, 1404302, 1422595, 1440731, 1459435, 1485615, 1504319, 1535496, 1554200, 1573326, 1591756, 1610460, 1629586, 1648016, 1666720, 1687827, 1718015, 1736308, 1754390, 1773094, 1799412, 1817842, 1836546, 1855672, 1874102, 1892532, 1911099, 1929877, 1948444, 1967222, 1985652, 2004219, 2022997, 2041701, 2060827, 2079257, 2097550, 2119590, 2138294, 2162458, 2181162, 2215666, 2234370, 2260634, 2279338, 2318310, 2337499, 2361930, 2381119]"
"('FilterBuilder.java', 'org.reflections.util.FilterBuilder$Include', 'apply', 'com\\.github\\.olivergondza\\.dumpling.*', 'com.github.olivergondza.dumpling.factory.ThreadDumpFactoryVendorTest.parkedWithBlocker.groovy')","[57075, 75675, 102043, 120643, 142854, 161454, 182231, 200831, 221608, 239953, 258207, 277777, 297977, 317547, 337838, 357408, 377699, 397269, 417469, 437039, 466277, 484877, 505654, 524254, 545031, 563631, 584408, 603008, 623785, 642385, 663162, 681507, 700441, 723721, 747086, 770766, 796113, 819393, 842673, 865953, 889233, 912598, 936363, 973605, 996885, 1020165, 1043445, 1066725, 1090005, 1113285, 1136650, 1162437, 1185717, 1208997, 1231427, 1249857, 1268287, 1286717, 1305147, 1323577, 1342177, 1362954, 1381554, 1402331, 1420676, 1438760, 1457360, 1483644, 1502244, 1533525, 1552125, 1571355, 1589785, 1608385, 1627615, 1646045, 1664645, 1685856, 1716044, 1734389, 1752419, 1771019, 1797441, 1815871, 1834471, 1853701, 1872131, 1890561, 1909076, 1927906, 1946421, 1965251, 1983681, 2002196, 2021026, 2039626, 2058856, 2077286, 2095631, 2117619, 2136219, 2160487, 2179087, 2213695, 2232295, 2258663, 2277263, 2316287, 2335372, 2359907, 2378992]"
"('Scanner.java', 'java.util.Scanner', 'getCompleteTokenInBuffer', '(?s).*', '""Finalizer"" daemon prio=10 tid=0x00007f0d1c06e000 nid=0xecb in Object.wait() [0x00007f0d0b6f5000]\n   java.lang.Thread.State: WAITING (on object monitor)\n\tat java.lang.Object.wait(Native Method)\n\t- waiting on <0x00000007b0f08790> (a java.lang.ref.ReferenceQueue$Lock)\n\tat java.lang.ref.ReferenceQueue.remove(ReferenceQueue.java:135)\n\t- locked <0x00000007b0f08790> (a java.lang.ref.ReferenceQueue$Lock)\n\tat java.lang.ref.ReferenceQueue.remove(ReferenceQueue.java:151)\n\tat java.lang.ref.Finalizer$FinalizerThread.run(Finalizer.java:209)\n\n   Locked ownable synchronizers:\n\t- None\n\n""Reference Handler"" daemon prio=10 tid=0x00007f0d1c06c000 nid=0xeca in Object.wait() [0x00007f0d0b7f6000]\n   java.lang.Thread.State: WAITING (on object monitor)\n\tat java.lang.Object.wait(Native Method)\n\t- waiting on <0x00000007b0f14078> (a java.lang.ref.Reference$Lock)\n\tat java.lang.Object.wait(Object.java:503)\n\tat java.lang.ref.Reference$ReferenceHandler.run(Reference.java:133)\n\t- locked <0x00000007b0f14078> (a java.lang.ref.Reference$Lock)\n\n')",[24291]
"('Scanner.java', 'java.util.Scanner', 'getCompleteTokenInBuffer', '(?s).*', '2018-01-11 20:22:13\nFull thread dump Java HotSpot(TM) 64-Bit Server VM (24.80-b11 mixed mode):\n\n""Attach Listener"" daemon prio=10 tid=0x00007f4510001000 nid=0xf7e waiting on condition [0x0000000000000000]\n   java.lang.Thread.State: RUNNABLE\n\n   Locked ownable synchronizers:\n\t- None\n\n""Service Thread"" daemon prio=10 tid=0x00007f454409e800 nid=0xf41 runnable [0x0000000000000000]\n   java.lang.Thread.State: RUNNABLE\n\n   Locked ownable synchronizers:\n\t- None\n\n""C2 CompilerThread1"" daemon prio=10 tid=0x00007f454409c000 nid=0xf40 waiting on condition [0x0000000000000000]\n   java.lang.Thread.State: RUNNABLE\n\n   Locked ownable synchronizers:\n\t- None\n\n""C2 CompilerThread0"" daemon prio=10 tid=0x00007f4544099800 nid=0xf3f waiting on condition [0x0000000000000000]\n   java.lang.Thread.State: RUNNABLE\n\n   Locked ownable synchronizers:\n\t- None\n\n""Signal Dispatcher"" daemon prio=10 tid=0x00007f4544097000 nid=0xf3e runnable [0x0000000000000000]\n   java.lang.Thread.State: RUNNABLE\n\n   Locked ownable synchronizers:\n\t- None\n\n""Finalizer')","[32917, 32983, 33325, 33529, 33871, 34213]"
"('FilterBuilder.java', 'org.reflections.util.FilterBuilder$Include', 'apply', 'com\\.github\\.olivergondza\\.dumpling.*', 'com/github/olivergondza/dumpling/DisposeRule$2.class')","[70884, 90210, 115852, 135178, 156663, 175989, 196040, 215366, 235417, 253399, 272742, 293038, 312512, 332808, 352373, 372669, 392234, 412530, 432004, 452300, 480086, 499412, 519463, 538789, 558840, 578166, 598217, 617543, 637594, 656920, 676971, 694953, 717880, 741160, 764888, 788205, 813552, 836832, 860112, 883392, 906672, 930400, 954165, 991044, 1014324, 1037604, 1060884, 1084164, 1107444, 1130724, 1154452, 1179876, 1203156, 1226436, 1245236, 1263666, 1282096, 1300526, 1318956, 1337386, 1356712, 1376763, 1396089, 1416140, 1434122, 1452569, 1471895, 1497453, 1516779, 1547334, 1566660, 1585164, 1603594, 1622920, 1641424, 1659854, 1679180, 1699665, 1729853, 1747835, 1766228, 1785554, 1811250, 1829680, 1849006, 1867510, 1885940, 1904370, 1923248, 1941715, 1960593, 1979060, 1997490, 2016368, 2034835, 2054161, 2072665, 2091095, 2109077, 2131428, 2150754, 2174296, 2193622, 2227504, 2246830, 2272472, 2291798, 2330459, 2350270, 2374079, 2393890]"
"('ThreadDumpFactory.java', 'com.github.olivergondza.dumpling.factory.ThreadDumpFactory', 'initHeader', '#\\d+', '[0x00007f8799aa1000]')","[28363, 28397]"
"('ThreadDumpFactory.java', 'com.github.olivergondza.dumpling.factory.ThreadDumpFactory', 'initHeader', '#\\d+', '[0x00007fae64e62000]')","[31758, 31792]"
"('FilterBuilder.java', 'org.reflections.util.FilterBuilder$Include', 'apply', 'com\\.github\\.olivergondza\\.dumpling.*', 'com.github.olivergondza.dumpling.model.ProcessThread$4.class')","[65181, 84207, 110149, 129175, 150960, 169986, 190337, 209363, 229714, 247846, 266739, 286735, 306509, 326505, 346370, 366366, 386231, 406227, 426001, 445997, 474383, 493409, 513760, 532786, 553137, 572163, 592514, 611540, 631891, 650917, 671268, 689400, 710677, 733957, 757535, 781002, 806349, 829629, 852909, 876189, 899469, 923047, 946812, 983841, 1007121, 1030401, 1053681, 1076961, 1100241, 1123521, 1147099, 1172673, 1195953, 1219233, 1239533, 1257963, 1276393, 1294823, 1313253, 1331683, 1350709, 1371060, 1390086, 1410437, 1428569, 1446866, 1465892, 1491750, 1510776, 1541631, 1560657, 1579461, 1597891, 1616917, 1635721, 1654151, 1673177, 1693962, 1724150, 1742282, 1760525, 1779551, 1805547, 1823977, 1843003, 1861807, 1880237, 1898667, 1917395, 1936012, 1954740, 1973357, 1991787, 2010515, 2029132, 2048158, 2066962, 2085392, 2103524, 2125725, 2144751, 2168593, 2187619, 2221801, 2240827, 2266769, 2285795, 2324606, 2344117, 2368226, 2387737]"
"('FilterBuilder.java', 'org.reflections.util.FilterBuilder$Include', 'apply', 'com\\.github\\.olivergondza\\.dumpling.*', 'com.github.olivergondza.dumpling.model.ProcessThread$7.class')","[62359, 81237, 107327, 126205, 148138, 167016, 187515, 206393, 226892, 245098, 263769, 283617, 303539, 323387, 343400, 363248, 383261, 403109, 423031, 442879, 471561, 490439, 510938, 529816, 550315, 569193, 589692, 608570, 629069, 647947, 668446, 686652, 707115, 730395, 753899, 777440, 802787, 826067, 849347, 872627, 895907, 919411, 943176, 980279, 1003559, 1026839, 1050119, 1073399, 1096679, 1119959, 1143463, 1169111, 1192391, 1215671, 1236711, 1255141, 1273571, 1292001, 1310431, 1328861, 1347739, 1368238, 1387116, 1407615, 1425821, 1444044, 1462922, 1488928, 1507806, 1538809, 1557687, 1576639, 1595069, 1613947, 1632899, 1651329, 1670207, 1691140, 1721328, 1739534, 1757703, 1776581, 1802725, 1821155, 1840033, 1858985, 1877415, 1895845, 1914499, 1933190, 1951844, 1970535, 1988965, 2007619, 2026310, 2045188, 2064140, 2082570, 2100776, 2122903, 2141781, 2165771, 2184649, 2218979, 2237857, 2263947, 2282825, 2321710, 2341073, 2365330, 2384693]"
"('ThreadDumpFactory.java', 'com.github.olivergondza.dumpling.factory.ThreadDumpFactory', 'initHeader', '#\\d+', '[0x00007f8b3993c000]')","[45042, 45076]"
"('Scanner.java', 'java.util.Scanner', 'getCompleteTokenInBuffer', '(?s).*', '4032\n')",[42746]
"('FilterBuilder.java', 'org.reflections.util.FilterBuilder$Include', 'apply', 'com\\.github\\.olivergondza\\.dumpling.*', 'com.github.olivergondza.dumpling.model.dump.ThreadDumpRuntime.class')","[63197, 82119, 108165, 127087, 148976, 167898, 188353, 207275, 227730, 245914, 264651, 284543, 304421, 324313, 344282, 364174, 384143, 404035, 423913, 443805, 472399, 491321, 511776, 530698, 551153, 570075, 590530, 609452, 629907, 648829, 669284, 687468, 708173, 731453, 754979, 778498, 803845, 827125, 850405, 873685, 896965, 920491, 944256, 981337, 1004617, 1027897, 1051177, 1074457, 1097737, 1121017, 1144543, 1170169, 1193449, 1216729, 1237549, 1255979, 1274409, 1292839, 1311269, 1329699, 1348621, 1369076, 1387998, 1408453, 1426637, 1444882, 1463804, 1489766, 1508688, 1539647, 1558569, 1577477, 1595907, 1614829, 1633737, 1652167, 1671089, 1691978, 1722166, 1740350, 1758541, 1777463, 1803563, 1821993, 1840915, 1859823, 1878253, 1896683, 1915359, 1934028, 1952704, 1971373, 1989803, 2008479, 2027148, 2046070, 2064978, 2083408, 2101592, 2123741, 2142663, 2166609, 2185531, 2219817, 2238739, 2264785, 2283707, 2322570, 2341977, 2366190, 2385597]"
"('Scanner.java', 'java.util.Scanner', 'getCompleteTokenInBuffer', '(?s).*', '""Reference Handler"" daemon prio=10 tid=0x00007f2c4806c000 nid=0xdd0 in Object.wait() [0x00007f2c3cae8000]\n   java.lang.Thread.State: WAITING (on object monitor)\n\tat java.lang.Object.wait(Native Method)\n\t- waiting on <0x00000007b0f10068> (a java.lang.ref.Reference$Lock)\n\tat java.lang.Object.wait(Object.java:503)\n\tat java.lang.ref.Reference$ReferenceHandler.run(Reference.java:133)\n\t- locked <0x00000007b0f10068> (a java.lang.ref.Reference$Lock)\n\n   Locked ownable synchronizers:\n\t- None\n\n""main"" prio=10 tid=0x00007f2c48007800 nid=0xdca runnable [0x00007f2c50dfc000]\n   java.lang.Thread.State: RUNNABLE\n\tat org.codehaus.groovy.runtime.ArrayUtil.createArray(ArrayUtil.java:66)\n\tat org.codehaus.groovy.runtime.callsite.AbstractCallSite.call(AbstractCallSite.java:120)\n\tat dumpling-script.run(dumpling-script:21)\n\tat groovy.lang.GroovyShell.runScriptOrMainOrTestOrRunnable(GroovyShell.java:258)\n\tat groovy.lang.GroovyShell.run(GroovyShell.java:550)\n\tat com.github.olivergondza.dumpling.cli.GroovyCommand.run(GroovyCommand.java:')",[3646]
"('FilterBuilder.java', 'org.reflections.util.FilterBuilder$Include', 'apply', 'com\\.github\\.olivergondza\\.dumpling.*', 'com/github/olivergondza/dumpling/query/SingleThreadSetQuery$Result.class')","[66216, 85296, 111184, 130264, 151995, 171075, 191372, 210452, 230749, 248854, 267828, 287878, 307598, 327648, 347459, 367509, 387320, 407370, 427090, 447140, 475418, 494498, 514795, 533875, 554172, 573252, 593549, 612629, 632926, 652006, 672303, 690408, 711982, 735262, 758867, 782307, 807654, 830934, 854214, 877494, 900774, 924379, 948144, 985146, 1008426, 1031706, 1054986, 1078266, 1101546, 1124826, 1148431, 1173978, 1197258, 1220538, 1240568, 1258998, 1277428, 1295858, 1314288, 1332718, 1351798, 1372095, 1391175, 1411472, 1429577, 1447901, 1466981, 1492785, 1511865, 1542666, 1561746, 1580496, 1598926, 1618006, 1636756, 1655186, 1674266, 1694997, 1725185, 1743290, 1761560, 1780640, 1806582, 1825012, 1844092, 1862842, 1881272, 1899702, 1918457, 1937047, 1955802, 1974392, 1992822, 2011577, 2030167, 2049247, 2067997, 2086427, 2104532, 2126760, 2145840, 2169628, 2188708, 2222836, 2241916, 2267804, 2286884, 2325668, 2345233, 2369288, 2388853]"
"('FilterBuilder.java', 'org.reflections.util.FilterBuilder$Include', 'apply', 'com\\.github\\.olivergondza\\.dumpling.*', 'com/github/olivergondza/dumpling/factory/ThreadDumpFactoryVendorTest/threadNameWithLinebreak.groovy')","[56366, 74928, 101334, 119896, 142145, 160707, 181522, 200084, 220899, 239263, 257460, 276992, 297230, 316762, 337091, 356623, 376952, 396484, 416722, 436254, 465568, 484130, 504945, 523507, 544322, 562884, 583699, 602261, 623076, 641638, 662453, 680817, 699542, 722822, 746168, 769867, 795214, 818494, 841774, 865054, 888334, 911680, 935445, 972706, 995986, 1019266, 1042546, 1065826, 1089106, 1112386, 1135732, 1161538, 1184818, 1208098, 1230718, 1249148, 1267578, 1286008, 1304438, 1322868, 1341430, 1362245, 1380807, 1401622, 1419986, 1438051, 1456613, 1482935, 1501497, 1532816, 1551378, 1570646, 1589076, 1607638, 1626906, 1645336, 1663898, 1685147, 1715335, 1733699, 1751710, 1770272, 1796732, 1815162, 1833724, 1852992, 1871422, 1889852, 1908348, 1927197, 1945693, 1964542, 1982972, 2001468, 2020317, 2038879, 2058147, 2076577, 2094941, 2116910, 2135472, 2159778, 2178340, 2212986, 2231548, 2257954, 2276516, 2315559, 2334606, 2359179, 2378226]"
"('FilterBuilder.java', 'org.reflections.util.FilterBuilder$Include', 'apply', 'com\\.github\\.olivergondza\\.dumpling.*', 'com.github.olivergondza.dumpling.query.Deadlocks$Result.class')","[67889, 87057, 112857, 132025, 153668, 172836, 193045, 212213, 232422, 250483, 269589, 289727, 309359, 329497, 349220, 369358, 389081, 409219, 428851, 448989, 477091, 496259, 516468, 535636, 555845, 575013, 595222, 614390, 634599, 653767, 673976, 692037, 714095, 737375, 761024, 784420, 809767, 833047, 856327, 879607, 902887, 926536, 950301, 987259, 1010539, 1033819, 1057099, 1080379, 1103659, 1126939, 1150588, 1176091, 1199371, 1222651, 1242241, 1260671, 1279101, 1297531, 1315961, 1334391, 1353559, 1373768, 1392936, 1413145, 1431206, 1449574, 1468742, 1494458, 1513626, 1544339, 1563507, 1582169, 1600599, 1619767, 1638429, 1656859, 1676027, 1696670, 1726858, 1744919, 1763233, 1782401, 1808255, 1826685, 1845853, 1864515, 1882945, 1901375, 1920174, 1938720, 1957519, 1976065, 1994495, 2013294, 2031840, 2051008, 2069670, 2088100, 2106161, 2128433, 2147601, 2171301, 2190469, 2224509, 2243677, 2269477, 2288645, 2327385, 2347038, 2371005, 2390658]"
"('FilterBuilder.java', 'org.reflections.util.FilterBuilder$Include', 'apply', 'com\\.github\\.olivergondza\\.dumpling.*', 'com.github.olivergondza.dumpling.cli.Main$ProcessRuntimeOptionHandler$UnknownRuntimeKind.class')","[60873, 79673, 105841, 124641, 146652, 165452, 186029, 204829, 225406, 243651, 262205, 281975, 301975, 321745, 341836, 361606, 381697, 401467, 421467, 441237, 470075, 488875, 509452, 528252, 548829, 567629, 588206, 607006, 627583, 646383, 666960, 685205, 705239, 728519, 751984, 775564, 800911, 824191, 847471, 870751, 894031, 917496, 941261, 978403, 1001683, 1024963, 1048243, 1071523, 1094803, 1118083, 1141548, 1167235, 1190515, 1213795, 1235225, 1253655, 1272085, 1290515, 1308945, 1327375, 1346175, 1366752, 1385552, 1406129, 1424374, 1442558, 1461358, 1487442, 1506242, 1537323, 1556123, 1575153, 1593583, 1612383, 1631413, 1649843, 1668643, 1689654, 1719842, 1738087, 1756217, 1775017, 1801239, 1819669, 1838469, 1857499, 1875929, 1894359, 1912974, 1931704, 1950319, 1969049, 1987479, 2006094, 2024824, 2043624, 2062654, 2081084, 2099329, 2121417, 2140217, 2164285, 2183085, 2217493, 2236293, 2262461, 2281261, 2320185, 2339470, 2363805, 2383090]"
"('FilterBuilder.java', 'org.reflections.util.FilterBuilder$Include', 'apply', 'com\\.github\\.olivergondza\\.dumpling.*', 'com/github/olivergondza/dumpling/query/BlockingTree.class')","[67010, 86132, 111978, 131100, 152789, 171911, 192166, 211288, 231543, 249627, 268664, 288756, 308434, 328526, 348295, 368387, 388156, 408248, 427926, 448018, 476212, 495334, 515589, 534711, 554966, 574088, 594343, 613465, 633720, 652842, 673097, 691181, 712986, 736266, 759892, 783311, 808658, 831938, 855218, 878498, 901778, 925404, 949169, 986150, 1009430, 1032710, 1055990, 1079270, 1102550, 1125830, 1149456, 1174982, 1198262, 1221542, 1241362, 1259792, 1278222, 1296652, 1315082, 1333512, 1352634, 1372889, 1392011, 1412266, 1430350, 1448695, 1467817, 1493579, 1512701, 1543460, 1562582, 1581290, 1599720, 1618842, 1637550, 1655980, 1675102, 1695791, 1725979, 1744063, 1762354, 1781476, 1807376, 1825806, 1844928, 1863636, 1882066, 1900496, 1919272, 1937841, 1956617, 1975186, 1993616, 2012392, 2030961, 2050083, 2068791, 2087221, 2105305, 2127554, 2146676, 2170422, 2189544, 2223630, 2242752, 2268598, 2287720, 2326483, 2346090, 2370103, 2389710]"
"('FilterBuilder.java', 'org.reflections.util.FilterBuilder$Include', 'apply', 'com\\.github\\.olivergondza\\.dumpling.*', 'com.github.olivergondza.dumpling.query.TopContendersCommand.class')","[58199, 76859, 103167, 121827, 143978, 162638, 183355, 202015, 222732, 241047, 259391, 279021, 299161, 318791, 339022, 358652, 378883, 398513, 418653, 438283, 467401, 486061, 506778, 525438, 546155, 564815, 585532, 604192, 624909, 643569, 664286, 682601, 701865, 725145, 748540, 772190, 797537, 820817, 844097, 867377, 890657, 914052, 937817, 975029, 998309, 1021589, 1044869, 1068149, 1091429, 1114709, 1138104, 1163861, 1187141, 1210421, 1232551, 1250981, 1269411, 1287841, 1306271, 1324701, 1343361, 1364078, 1382738, 1403455, 1421770, 1439884, 1458544, 1484768, 1503428, 1534649, 1553309, 1572479, 1590909, 1609569, 1628739, 1647169, 1665829, 1686980, 1717168, 1735483, 1753543, 1772203, 1798565, 1816995, 1835655, 1854825, 1873255, 1891685, 1910230, 1929030, 1947575, 1966375, 1984805, 2003350, 2022150, 2040810, 2059980, 2078410, 2096725, 2118743, 2137403, 2161611, 2180271, 2214819, 2233479, 2259787, 2278447, 2317441, 2336586, 2361061, 2380206]"
"('FilterBuilder.java', 'org.reflections.util.FilterBuilder$Include', 'apply', 'com\\.github\\.olivergondza\\.dumpling.*', 'com/github/olivergondza/dumpling/model/ProcessThread$6.class')","[64152, 83124, 109120, 128092, 149931, 168903, 189308, 208280, 228685, 246844, 265656, 285598, 305426, 325368, 345287, 365229, 385148, 405090, 424918, 444860, 473354, 492326, 512731, 531703, 552108, 571080, 591485, 610457, 630862, 649834, 670239, 688398, 709378, 732658, 756209, 779703, 805050, 828330, 851610, 874890, 898170, 921721, 945486, 982542, 1005822, 1029102, 1052382, 1075662, 1098942, 1122222, 1145773, 1171374, 1194654, 1217934, 1238504, 1256934, 1275364, 1293794, 1312224, 1330654, 1349626, 1370031, 1389003, 1409408, 1427567, 1445837, 1464809, 1490721, 1509693, 1540602, 1559574, 1578432, 1596862, 1615834, 1634692, 1653122, 1672094, 1692933, 1723121, 1741280, 1759496, 1778468, 1804518, 1822948, 1841920, 1860778, 1879208, 1897638, 1916339, 1934983, 1953684, 1972328, 1990758, 2009459, 2028103, 2047075, 2065933, 2084363, 2102522, 2124696, 2143668, 2167564, 2186536, 2220772, 2239744, 2265740, 2284712, 2323550, 2343007, 2367170, 2386627]"
"('FilterBuilder.java', 'org.reflections.util.FilterBuilder$Include', 'apply', 'com\\.github\\.olivergondza\\.dumpling.*', 'com/github/olivergondza/dumpling/TestThread$1.class')","[71192, 90534, 116160, 135502, 156971, 176313, 196348, 215690, 235725, 253699, 273066, 293378, 312836, 333148, 352697, 373009, 392558, 412870, 432328, 452640, 480394, 499736, 519771, 539113, 559148, 578490, 598525, 617867, 637902, 657244, 677279, 695253, 718268, 741548, 765284, 788593, 813940, 837220, 860500, 883780, 907060, 930796, 954561, 991432, 1014712, 1037992, 1061272, 1084552, 1107832, 1131112, 1154848, 1180264, 1203544, 1226824, 1245544, 1263974, 1282404, 1300834, 1319264, 1337694, 1357036, 1377071, 1396413, 1416448, 1434422, 1452877, 1472219, 1497761, 1517103, 1547642, 1566984, 1585472, 1603902, 1623244, 1641732, 1660162, 1679504, 1699973, 1730161, 1748135, 1766536, 1785878, 1811558, 1829988, 1849330, 1867818, 1886248, 1904678, 1923564, 1942023, 1960909, 1979368, 1997798, 2016684, 2035143, 2054485, 2072973, 2091403, 2109377, 2131736, 2151078, 2174604, 2193946, 2227812, 2247154, 2272780, 2292122, 2330775, 2350602, 2374395, 2394222]"
"('FilterBuilder.java', 'org.reflections.util.FilterBuilder$Include', 'apply', 'com\\.github\\.olivergondza\\.dumpling.*', 'com/github/olivergondza/dumpling/query/BlockingTree$Result.class')","[67164, 86294, 112132, 131262, 152943, 172073, 192320, 211450, 231697, 249777, 268826, 288926, 308596, 328696, 348457, 368557, 388318, 408418, 428088, 448188, 476366, 495496, 515743, 534873, 555120, 574250, 594497, 613627, 633874, 653004, 673251, 691331, 713180, 736460, 760090, 783505, 808852, 832132, 855412, 878692, 901972, 925602, 949367, 986344, 1009624, 1032904, 1056184, 1079464, 1102744, 1126024, 1149654, 1175176, 1198456, 1221736, 1241516, 1259946, 1278376, 1296806, 1315236, 1333666, 1352796, 1373043, 1392173, 1412420, 1430500, 1448849, 1467979, 1493733, 1512863, 1543614, 1562744, 1581444, 1599874, 1619004, 1637704, 1656134, 1675264, 1695945, 1726133, 1744213, 1762508, 1781638, 1807530, 1825960, 1845090, 1863790, 1882220, 1900650, 1919430, 1937995, 1956775, 1975340, 1993770, 2012550, 2031115, 2050245, 2068945, 2087375, 2105455, 2127708, 2146838, 2170576, 2189706, 2223784, 2242914, 2268752, 2287882, 2326641, 2346256, 2370261, 2389876]"
"('ThreadDumpFactory.java', 'com.github.olivergondza.dumpling.factory.ThreadDumpFactory', 'initHeader', '#\\d+', 'entry')","[47441, 47475, 49432, 49466, 92219, 92254, 92807, 92842, 93418, 93453, 177815, 177850, 217192, 217227, 501238, 501273, 540615, 540650, 579992, 580027, 619369, 619404, 658746, 658781, 790444, 790492, 1156737, 1156786, 1358538, 1358573, 1397915, 1397950, 1473895, 1473929, 1474472, 1474506, 1475072, 1475106, 1681006, 1681041, 1702095, 1702185, 1703288, 1703378, 1704504, 1704594, 1787563, 1787598, 1788151, 1788186, 1788762, 1788797, 2111023, 2111049, 2111330, 2111356, 2111636, 2111662, 2152919, 2152954, 2153325, 2153360, 2153730, 2153765, 2195787, 2195822, 2196193, 2196228, 2196598, 2196633, 2200663, 2200689, 2200970, 2200996, 2201276, 2201302, 2204546, 2204572, 2205035, 2205061, 2205547, 2205573, 2248839, 2248874, 2249427, 2249462, 2250038, 2250073, 2293807, 2293842, 2294395, 2294430, 2295006, 2295041, 2300864, 2300890, 2301353, 2301379, 2301865, 2301891, 2307372, 2307398, 2307676, 2307702, 2307980, 2308006, 2308537, 2308563, 2309417, 2309443, 2309721, 2309747, 2310025, 2310051, 2310582, 2310608, 2311462, 2311488, 2311766, 2311792, 2312070, 2312096, 2312627, 2312653, 2352487, 2352523, 2352901, 2352937, 2353315, 2353351, 2354072, 2354108, 2355082, 2355108, 2355386, 2355412, 2355690, 2355716, 2356247, 2356273, 2396107, 2396143, 2396521, 2396557, 2396935, 2396971, 2397692, 2397728]"
"('FilterBuilder.java', 'org.reflections.util.FilterBuilder$Include', 'apply', 'com\\.github\\.olivergondza\\.dumpling.*', 'com/github/olivergondza/dumpling/factory/IllegalRuntimeStateException.class')","[68422, 87618, 113390, 132586, 154201, 173397, 193578, 212774, 232955, 251002, 270150, 290316, 309920, 330086, 349781, 369947, 389642, 409808, 429412, 449578, 477624, 496820, 517001, 536197, 556378, 575574, 595755, 614951, 635132, 654328, 674509, 692556, 714768, 738048, 761711, 785093, 810440, 833720, 857000, 880280, 903560, 927223, 950988, 987932, 1011212, 1034492, 1057772, 1081052, 1104332, 1127612, 1151275, 1176764, 1200044, 1223324, 1242774, 1261204, 1279634, 1298064, 1316494, 1334924, 1354120, 1374301, 1393497, 1413678, 1431725, 1450107, 1469303, 1494991, 1514187, 1544872, 1564068, 1582702, 1601132, 1620328, 1638962, 1657392, 1676588, 1697203, 1727391, 1745438, 1763766, 1782962, 1808788, 1827218, 1846414, 1865048, 1883478, 1901908, 1920721, 1939253, 1958066, 1976598, 1995028, 2013841, 2032373, 2051569, 2070203, 2088633, 2106680, 2128966, 2148162, 2171834, 2191030, 2225042, 2244238, 2270010, 2289206, 2327932, 2347613, 2371552, 2391233]"
"('FilterBuilder.java', 'org.reflections.util.FilterBuilder$Include', 'apply', 'com\\.github\\.olivergondza\\.dumpling.*', 'com.github.olivergondza.dumpling.DisposeRule$2.class')","[70921, 90249, 115889, 135217, 156700, 176028, 196077, 215405, 235454, 253435, 272781, 293079, 312551, 332849, 352412, 372710, 392273, 412571, 432043, 452341, 480123, 499451, 519500, 538828, 558877, 578205, 598254, 617582, 637631, 656959, 677008, 694989, 717927, 741207, 764936, 788252, 813599, 836879, 860159, 883439, 906719, 930448, 954213, 991091, 1014371, 1037651, 1060931, 1084211, 1107491, 1130771, 1154500, 1179923, 1203203, 1226483, 1245273, 1263703, 1282133, 1300563, 1318993, 1337423, 1356751, 1376800, 1396128, 1416177, 1434158, 1452606, 1471934, 1497490, 1516818, 1547371, 1566699, 1585201, 1603631, 1622959, 1641461, 1659891, 1679219, 1699702, 1729890, 1747871, 1766265, 1785593, 1811287, 1829717, 1849045, 1867547, 1885977, 1904407, 1923286, 1941752, 1960631, 1979097, 1997527, 2016406, 2034872, 2054200, 2072702, 2091132, 2109113, 2131465, 2150793, 2174333, 2193661, 2227541, 2246869, 2272509, 2291837, 2330497, 2350310, 2374117, 2393930]"
"('ThreadDumpFactory.java', 'com.github.olivergondza.dumpling.factory.ThreadDumpFactory', 'initHeader', '#\\d+', '[0x00007f4549d9c000]')","[35177, 35211]"
"('FilterBuilder.java', 'org.reflections.util.FilterBuilder$Exclude', 'apply', 'java.lang.Object', 'java.lang.Enum')","[62553, 65107, 81441, 84129, 107521, 110075, 126409, 129097, 148332, 150886, 167220, 169908, 187709, 190263, 206597, 209285, 227086, 229640, 245287, 247774, 263973, 266661, 283831, 286653, 303743, 306431, 323601, 326423, 343604, 346292, 363462, 366284, 383465, 386153, 403323, 406145, 423235, 425923, 443093, 445915, 471755, 474309, 490643, 493331, 511132, 513686, 530020, 532708, 550509, 553063, 569397, 572085, 589886, 592440, 608774, 611462, 629263, 631817, 648151, 650839, 668640, 671194, 686841, 689328, 707359, 710583, 730639, 733863, 754148, 757439, 777684, 780908, 803031, 806255, 826311, 829535, 849591, 852815, 872871, 876095, 896151, 899375, 919660, 922951, 943425, 946716, 980523, 983747, 1003803, 1007027, 1027083, 1030307, 1050363, 1053587, 1073643, 1076867, 1096923, 1100147, 1120203, 1123427, 1143712, 1147003, 1169355, 1172579, 1192635, 1195859, 1215915, 1219139, 1236905, 1239459, 1255335, 1257889, 1273765, 1276319, 1292195, 1294749, 1310625, 1313179, 1329055, 1331609, 1347943, 1350631, 1368432, 1370986, 1387320, 1390008, 1407809, 1410363, 1426010, 1428497, 1444238, 1446792, 1463126, 1465814, 1489122, 1491676, 1508010, 1510698, 1539003, 1541557, 1557891, 1560579, 1576833, 1579387, 1595263, 1597817, 1614151, 1616839, 1633093, 1635647, 1651523, 1654077, 1670411, 1673099, 1691334, 1693888, 1721522, 1724076, 1739723, 1742210, 1757897, 1760451, 1776785, 1779473, 1802919, 1805473, 1821349, 1823903, 1840237, 1842925, 1859179, 1861733, 1877609, 1880163, 1896039, 1898593, 1914698, 1917319, 1933384, 1935938, 1952043, 1954664, 1970729, 1973283, 1989159, 1991713, 2007818, 2010439, 2026504, 2029058, 2045392, 2048080, 2064334, 2066888, 2082764, 2085318, 2100965, 2103452, 2123097, 2125651, 2141985, 2144673, 2165965, 2168519, 2184853, 2187541, 2219173, 2221727, 2238061, 2240749, 2264141, 2266695, 2283029, 2285717, 2321909, 2324530, 2341282, 2344037, 2365529, 2368150, 2384902, 2387657]"
"('FilterBuilder.java', 'org.reflections.util.FilterBuilder$Include', 'apply', 'com\\.github\\.olivergondza\\.dumpling.*', 'com/github/olivergondza/dumpling/factory/ThreadDumpFactoryVendorTest/ignoreWaitLock.groovy')","[56702, 75282, 101670, 120250, 142481, 161061, 181858, 200438, 221235, 239590, 257814, 277364, 297584, 317134, 337445, 356995, 377306, 396856, 417076, 436626, 465904, 484484, 505281, 523861, 544658, 563238, 584035, 602615, 623412, 641992, 662789, 681144, 699968, 723248, 746603, 770293, 795640, 818920, 842200, 865480, 888760, 912115, 935880, 973132, 996412, 1019692, 1042972, 1066252, 1089532, 1112812, 1136167, 1161964, 1185244, 1208524, 1231054, 1249484, 1267914, 1286344, 1304774, 1323204, 1341784, 1362581, 1381161, 1401958, 1420313, 1438387, 1456967, 1483271, 1501851, 1533152, 1551732, 1570982, 1589412, 1607992, 1627242, 1645672, 1664252, 1685483, 1715671, 1734026, 1752046, 1770626, 1797068, 1815498, 1834078, 1853328, 1871758, 1890188, 1908693, 1927533, 1946038, 1964878, 1983308, 2001813, 2020653, 2039233, 2058483, 2076913, 2095268, 2117246, 2135826, 2160114, 2178694, 2213322, 2231902, 2258290, 2276870, 2315904, 2334969, 2359524, 2378589]"
"('FilterBuilder.java', 'org.reflections.util.FilterBuilder$Include', 'apply', 'com\\.github\\.olivergondza\\.dumpling.*', 'com/github/olivergondza/dumpling/cli/AbstractCliTest.class')","[54580, 73048, 99548, 118016, 140359, 158827, 179736, 198204, 219113, 237524, 255580, 275018, 295350, 314788, 335211, 354649, 375072, 394510, 414842, 434280, 463782, 482250, 503159, 521627, 542536, 561004, 581913, 600381, 621290, 639758, 660667, 679078, 697286, 720566, 743865, 767611, 792958, 816238, 839518, 862798, 886078, 909377, 933142, 970450, 993730, 1017010, 1040290, 1063570, 1086850, 1110130, 1133429, 1159282, 1182562, 1205842, 1228932, 1247362, 1265792, 1284222, 1302652, 1321082, 1339550, 1360459, 1378927, 1399836, 1418247, 1436265, 1454733, 1481149, 1499617, 1531030, 1549498, 1568860, 1587290, 1605758, 1625120, 1643550, 1662018, 1683361, 1713549, 1731960, 1749924, 1768392, 1794946, 1813376, 1831844, 1851206, 1869636, 1888066, 1906515, 1925411, 1943860, 1962756, 1981186, 1999635, 2018531, 2036999, 2056361, 2074791, 2093202, 2115124, 2133592, 2157992, 2176460, 2211200, 2229668, 2256168, 2274636, 2313726, 2332679, 2357346, 2376299]"
"('Description.java', 'org.junit.runner.Description', 'methodAndClassNamePatternGroupOrDefault', '([\\s\\S]*)\\((.*)\\)', 'com.github.olivergondza.dumpling.factory.ThreadDumpFactoryVendorTest')","[2398291, 2398313]"
"('ThreadDumpFactory.java', 'com.github.olivergondza.dumpling.factory.ThreadDumpFactory', 'initHeader', '#\\d+', '[0x00007fd700114000]')","[461228, 461267, 967276, 967327, 1526232, 1526269]"
"('Description.java', 'org.junit.runner.Description', 'methodAndClassNamePatternGroupOrDefault', '([\\s\\S]*)\\((.*)\\)', 'filter(com.github.olivergondza.dumpling.cli.GroovyRuntimeTest)')",[660]
"('FilterBuilder.java', 'org.reflections.util.FilterBuilder$Exclude', 'apply', 'java.lang.Object', 'com.github.olivergondza.dumpling.factory.ThreadDumpFactoryVendorTest.parkedTimedWithBlocker.groovy')","[57897, 76541, 102865, 121509, 143676, 162320, 183053, 201697, 222430, 240753, 259073, 278687, 298843, 318457, 338704, 358318, 378565, 398179, 418335, 437949, 467099, 485743, 506476, 525120, 545853, 564497, 585230, 603874, 624607, 643251, 663984, 682307, 701483, 724763, 748150, 771808, 797155, 820435, 843715, 866995, 890275, 913662, 937427, 974647, 997927, 1021207, 1044487, 1067767, 1091047, 1114327, 1137714, 1163479, 1186759, 1210039, 1232249, 1250679, 1269109, 1287539, 1305969, 1324399, 1343043, 1363776, 1382420, 1403153, 1421476, 1439582, 1458226, 1484466, 1503110, 1534347, 1552991, 1572177, 1590607, 1609251, 1628437, 1646867, 1665511, 1686678, 1716866, 1735189, 1753241, 1771885, 1798263, 1816693, 1835337, 1854523, 1872953, 1891383, 1909920, 1928728, 1947265, 1966073, 1984503, 2003040, 2021848, 2040492, 2059678, 2078108, 2096431, 2118441, 2137085, 2161309, 2179953, 2214517, 2233161, 2259485, 2278129, 2317131, 2336260, 2360751, 2379880]"
"('ThreadDumpFactory.java', 'com.github.olivergondza.dumpling.factory.ThreadDumpFactory', 'initHeader', '#\\d+', '[0x00007fd68fefc000]')","[455134, 455173, 959239, 959290, 1520394, 1520431]"
"('Scanner.java', 'java.util.Scanner', 'getCompleteTokenInBuffer', '(?s).*', '""Service Thread"" daemon prio=10 tid=0x00007f0d1c09e800 nid=0xecf runnable [0x0000000000000000]\n   java.lang.Thread.State: RUNNABLE\n\n   Locked ownable synchronizers:\n\t- None\n\n""C2 CompilerThread1"" daemon prio=10 tid=0x00007f0d1c09c800 nid=0xece waiting on condition [0x0000000000000000]\n   java.lang.Thread.State: RUNNABLE\n\n   Locked ownable synchronizers:\n\t- None\n\n""C2 CompilerThread0"" daemon prio=10 tid=0x00007f0d1c099800 nid=0xecd waiting on condition [0x0000000000000000]\n   java.lang.Thread.State: RUNNABLE\n\n   Locked ownable synchronizers:\n\t- None\n\n""Signal Dispatcher"" daemon prio=10 tid=0x00007f0d1c097000 nid=0xecc runnable [0x0000000000000000]\n   java.lang.Thread.State: RUNNABLE\n\n   Locked ownable synchronizers:\n\t- None\n\n""Finalizer"" daemon prio=10 tid=0x00007f0d1c06e000 nid=0xecb in Object.wait() [0x00007f0d0b6f5000]\n   java.lang.Thread.State: WAITING (on object monitor)\n\tat java.lang.Object.wait(Native Method)\n\t- waiting on <0x00000007b0f08790> (a java.lang.ref.ReferenceQueue$Lock)\n\tat java.lang.ref.Referenc')","[23227, 23426, 23763, 24100]"
"('Scanner.java', 'java.util.Scanner', 'getCompleteTokenInBuffer', '(?s).*', 'JNI global references: 255\n\n')",[15945]
"('Scanner.java', 'java.util.Scanner', 'getCompleteTokenInBuffer', '(?s).*', '""Reference Handler"" daemon prio=10 tid=0x00007f2a3006c000 nid=0xe89 in Object.wait() [0x00007f2a2d457000]\n   java.lang.Thread.State: WAITING (on object monitor)\n\tat java.lang.Object.wait(Native Method)\n\t- waiting on <0x00000007b0f10068> (a java.lang.ref.Reference$Lock)\n\tat java.lang.Object.wait(Object.java:503)\n\tat java.lang.ref.Reference$ReferenceHandler.run(Reference.java:133)\n\t- locked <0x00000007b0f10068> (a java.lang.ref.Reference$Lock)\n\n   Locked ownable synchronizers:\n\t- None\n\n""main"" prio=10 tid=0x00007f2a30007800 nid=0xe83 runnable [0x00007f2a397b3000]\n   java.lang.Thread.State: TIMED_WAITING (parking)\n\tat sun.misc.Unsafe.park(Native Method)\n\tat java.util.concurrent.locks.LockSupport.parkNanos(LockSupport.java:349)\n\tat sun.reflect.GeneratedMethodAccessor2.invoke(Unknown Source)\n\tat sun.reflect.DelegatingMethodAccessorImpl.invoke(DelegatingMethodAccessorImpl.java:43)\n\tat java.lang.reflect.Method.invoke(Method.java:606)\n\tat org.codehaus.groovy.reflection.CachedMethod.invoke(CachedMethod.java:90)\n\tat gro')",[17788]
"('Scanner.java', 'java.util.Scanner', 'getCompleteTokenInBuffer', '(?s).*', '""Reference Handler"" daemon prio=10 tid=0x00007fe0a006c000 nid=0xfa7 in Object.wait() [0x00007fe0a4244000]\n   java.lang.Thread.State: WAITING (on object monitor)\n\tat java.lang.Object.wait(Native Method)\n\t- waiting on <0x00000007b0f10068> (a java.lang.ref.Reference$Lock)\n\tat java.lang.Object.wait(Object.java:503)\n\tat java.lang.ref.Reference$ReferenceHandler.run(Reference.java:133)\n\t- locked <0x00000007b0f10068> (a java.lang.ref.Reference$Lock)\n\n   Locked ownable synchronizers:\n\t- None\n\n""main"" prio=10 tid=0x00007fe0a0007800 nid=0xfa1 in Object.wait() [0x00007fe0a9587000]\n   java.lang.Thread.State: WAITING (on object monitor)\n\tat java.lang.Object.wait(Native Method)\n\t- waiting on <0x00000007ae5a89f8> (a java.lang.Object)\n\tat java.lang.Object.wait(Object.java:503)\n\tat java_lang_Object$wait.call(Unknown Source)\n\tat org.codehaus.groovy.runtime.callsite.CallSiteArray.defaultCall(CallSiteArray.java:45)\n\tat org.codehaus.groovy.runtime.callsite.AbstractCallSite.call(AbstractCallSite.java:108)\n\tat org.codehaus.groovy.run')",[41213]
"('Scanner.java', 'java.util.Scanner', 'getCompleteTokenInBuffer', '(?s).*', '""Finalizer"" daemon prio=10 tid=0x00007f454406e000 nid=0xf3d in Object.wait() [0x00007f453d93c000]\n   java.lang.Thread.State: WAITING (on object monitor)\n\tat java.lang.Object.wait(Native Method)\n\t- waiting on <0x00000007b0f08778> (a java.lang.ref.ReferenceQueue$Lock)\n\tat java.lang.ref.ReferenceQueue.remove(ReferenceQueue.java:135)\n\t- locked <0x00000007b0f08778> (a java.lang.ref.ReferenceQueue$Lock)\n\tat java.lang.ref.ReferenceQueue.remove(ReferenceQueue.java:151)\n\tat java.lang.ref.Finalizer$FinalizerThread.run(Finalizer.java:209)\n\n   Locked ownable synchronizers:\n\t- None\n\n""Reference Handler"" daemon prio=10 tid=0x00007f454406c000 nid=0xf3c in Object.wait() [0x00007f453da3d000]\n   java.lang.Thread.State: WAITING (on object monitor)\n\tat java.lang.Object.wait(Native Method)\n\t- waiting on <0x00000007b0f14078> (a java.lang.ref.Reference$Lock)\n\tat java.lang.Object.wait(Object.java:503)\n\tat java.lang.ref.Reference$ReferenceHandler.run(Reference.java:133)\n\t- locked <0x00000007b0f14078> (a java.lang.ref.Reference$Lock)\n\n')",[34404]
"('Description.java', 'org.junit.runner.Description', 'methodAndClassNamePatternGroupOrDefault', '([\\s\\S]*)\\((.*)\\)', 'cli(com.github.olivergondza.dumpling.cli.GrepCommandTest)')",[528]
"('Description.java', 'org.junit.runner.Description', 'methodAndClassNamePatternGroupOrDefault', '([\\s\\S]*)\\((.*)\\)', 'hasHelp(com.github.olivergondza.dumpling.cli.GroovyCommandTest)')",[1210]
"('Description.java', 'org.junit.runner.Description', 'methodAndClassNamePatternGroupOrDefault', '([\\s\\S]*)\\((.*)\\)', 'cli(com.github.olivergondza.dumpling.cli.ThreaddumpCommandTest)')",[352]
"('FilterBuilder.java', 'org.reflections.util.FilterBuilder$Include', 'apply', 'com\\.github\\.olivergondza\\.dumpling.*', 'com.github.olivergondza.dumpling.cli.GroovyRuntimeTest$2.class')","[54503, 72967, 99471, 117935, 140282, 158746, 179659, 198123, 219036, 237449, 255499, 274933, 295269, 314703, 335130, 354564, 374991, 394425, 414761, 434195, 463705, 482169, 503082, 521546, 542459, 560923, 581836, 600300, 621213, 639677, 660590, 679003, 697189, 720469, 743766, 767514, 792861, 816141, 839421, 862701, 885981, 909278, 933043, 970353, 993633, 1016913, 1040193, 1063473, 1086753, 1110033, 1133330, 1159185, 1182465, 1205745, 1228855, 1247285, 1265715, 1284145, 1302575, 1321005, 1339469, 1360382, 1378846, 1399759, 1418172, 1436188, 1454652, 1481072, 1499536, 1530953, 1549417, 1568783, 1587213, 1605677, 1625043, 1643473, 1661937, 1683284, 1713472, 1731885, 1749847, 1768311, 1794869, 1813299, 1831763, 1851129, 1869559, 1887989, 1906436, 1925334, 1943781, 1962679, 1981109, 1999556, 2018454, 2036918, 2056284, 2074714, 2093127, 2115047, 2133511, 2157915, 2176379, 2211123, 2229587, 2256091, 2274555, 2313647, 2332596, 2357267, 2376216]"
"('Scanner.java', 'java.util.Scanner', 'getCompleteTokenInBuffer', '(?s).*', '2018-01-11 20:22:10\nFull thread dump Java HotSpot(TM) 64-Bit Server VM (24.80-b11 mixed mode):\n\n""Attach Listener"" daemon prio=10 tid=0x00007fae2c001000 nid=0xf31 waiting on condition [0x0000000000000000]\n   java.lang.Thread.State: RUNNABLE\n\n   Locked ownable synchronizers:\n\t- None\n\n""Service Thread"" daemon prio=10 tid=0x00007fae5c096800 nid=0xf1f runnable [0x0000000000000000]\n   java.lang.Thread.State: RUNNABLE\n\n   Locked ownable synchronizers:\n\t- None\n\n""C2 CompilerThread1"" daemon prio=10 tid=0x00007fae5c094800 nid=0xf1e waiting on condition [0x0000000000000000]\n   java.lang.Thread.State: RUNNABLE\n\n   Locked ownable synchronizers:\n\t- None\n\n""C2 CompilerThread0"" daemon prio=10 tid=0x00007fae5c091800 nid=0xf1d waiting on condition [0x0000000000000000]\n   java.lang.Thread.State: RUNNABLE\n\n   Locked ownable synchronizers:\n\t- None\n\n""Signal Dispatcher"" daemon prio=10 tid=0x00007fae5c08f000 nid=0xf1c runnable [0x0000000000000000]\n   java.lang.Thread.State: RUNNABLE\n\n   Locked ownable synchronizers:\n\t- None\n\n""Finalizer')","[29564, 29630, 29972, 30176, 30518, 30860]"
"('Scanner.java', 'java.util.Scanner', 'getCompleteTokenInBuffer', '(?s).*', '2018-01-11 20:22:19\nFull thread dump Java HotSpot(TM) 64-Bit Server VM (24.80-b11 mixed mode):\n\n""Attach Listener"" daemon prio=10 tid=0x00007fe070001000 nid=0xfbc waiting on condition [0x0000000000000000]\n   java.lang.Thread.State: RUNNABLE\n\n   Locked ownable synchronizers:\n\t- None\n\n""Service Thread"" daemon prio=10 tid=0x00007fe0a0096800 nid=0xfac runnable [0x0000000000000000]\n   java.lang.Thread.State: RUNNABLE\n\n   Locked ownable synchronizers:\n\t- None\n\n""C2 CompilerThread1"" daemon prio=10 tid=0x00007fe0a0094800 nid=0xfab waiting on condition [0x0000000000000000]\n   java.lang.Thread.State: RUNNABLE\n\n   Locked ownable synchronizers:\n\t- None\n\n""C2 CompilerThread0"" daemon prio=10 tid=0x00007fe0a0091800 nid=0xfaa waiting on condition [0x0000000000000000]\n   java.lang.Thread.State: RUNNABLE\n\n   Locked ownable synchronizers:\n\t- None\n\n""Signal Dispatcher"" daemon prio=10 tid=0x00007fe0a008f000 nid=0xfa9 runnable [0x0000000000000000]\n   java.lang.Thread.State: RUNNABLE\n\n   Locked ownable synchronizers:\n\t- None\n\n""Finalizer')","[39467, 39533, 39875, 40079, 40421, 40763]"
"('ThreadDumpFactory.java', 'com.github.olivergondza.dumpling.factory.ThreadDumpFactory', 'initHeader', '#\\d+', '[0x00002ad3ed318000]')","[93489, 93524, 1475141, 1475175, 1704685, 1704775, 1788833, 1788868, 2205600, 2205626, 2250109, 2250144, 2295077, 2295112, 2301918, 2301944]"
"('FilterBuilder.java', 'org.reflections.util.FilterBuilder$Include', 'apply', 'com\\.github\\.olivergondza\\.dumpling.*', 'com/github/olivergondza/dumpling/query/Deadlocks.class')","[67278, 86414, 112246, 131382, 153057, 172193, 192434, 211570, 231811, 249888, 268946, 289052, 308716, 328822, 348577, 368683, 388438, 408544, 428208, 448314, 476480, 495616, 515857, 534993, 555234, 574370, 594611, 613747, 633988, 653124, 673365, 691442, 713324, 736604, 760237, 783649, 808996, 832276, 855556, 878836, 902116, 925749, 949514, 986488, 1009768, 1033048, 1056328, 1079608, 1102888, 1126168, 1149801, 1175320, 1198600, 1221880, 1241630, 1260060, 1278490, 1296920, 1315350, 1333780, 1352916, 1373157, 1392293, 1412534, 1430611, 1448963, 1468099, 1493847, 1512983, 1543728, 1562864, 1581558, 1599988, 1619124, 1637818, 1656248, 1675384, 1696059, 1726247, 1744324, 1762622, 1781758, 1807644, 1826074, 1845210, 1863904, 1882334, 1900764, 1919547, 1938109, 1956892, 1975454, 1993884, 2012667, 2031229, 2050365, 2069059, 2087489, 2105566, 2127822, 2146958, 2170690, 2189826, 2223898, 2243034, 2268866, 2288002, 2326758, 2346379, 2370378, 2389999]"
"('ThreadDumpFactory.java', 'com.github.olivergondza.dumpling.factory.ThreadDumpFactory', 'initHeader', '#\\d+', '[0x00007fd811733000]')","[38435, 38469]"
"('FilterBuilder.java', 'org.reflections.util.FilterBuilder$Exclude', 'apply', 'java.lang.Object', 'org.junit.runners.model.Statement')","[58011, 72289, 76661, 91689, 102979, 117257, 121629, 136657, 143790, 158068, 162440, 177468, 183167, 197445, 201817, 216845, 222544, 236822, 240864, 254767, 259193, 274221, 278813, 294591, 298963, 313991, 318583, 334361, 338824, 353852, 358444, 374222, 378685, 393713, 398305, 414083, 418455, 433483, 438075, 453853, 467213, 481491, 485863, 500891, 506590, 520868, 525240, 540268, 545967, 560245, 564617, 579645, 585344, 599622, 603994, 619022, 624721, 638999, 643371, 658399, 664098, 678376, 682418, 696321, 701627, 719655, 724907, 742935, 748297, 766700, 771952, 789980, 797299, 815327, 820579, 838607, 843859, 861887, 867139, 885167, 890419, 908447, 913809, 932212, 937574, 955977, 974791, 992819, 998071, 1016099, 1021351, 1039379, 1044631, 1062659, 1067911, 1085939, 1091191, 1109219, 1114471, 1132499, 1137861, 1156264, 1163623, 1181651, 1186903, 1204931, 1210183, 1228211, 1232363, 1246641, 1250793, 1265071, 1269223, 1283501, 1287653, 1301931, 1306083, 1320361, 1324513, 1338791, 1343163, 1358191, 1363890, 1378168, 1382540, 1397568, 1403267, 1417545, 1421587, 1435490, 1439696, 1453974, 1458346, 1473374, 1484580, 1498858, 1503230, 1518258, 1534461, 1548739, 1553111, 1568139, 1572291, 1586569, 1590721, 1604999, 1609371, 1624399, 1628551, 1642829, 1646981, 1661259, 1665631, 1680659, 1686792, 1701070, 1716980, 1731258, 1735300, 1749203, 1753355, 1767633, 1772005, 1787033, 1798377, 1812655, 1816807, 1831085, 1835457, 1850485, 1854637, 1868915, 1873067, 1887345, 1891497, 1905775, 1910037, 1924690, 1928842, 1943120, 1947382, 1962035, 1966187, 1980465, 1984617, 1998895, 2003157, 2017810, 2021962, 2036240, 2040612, 2055640, 2059792, 2074070, 2078222, 2092500, 2096542, 2110445, 2118555, 2132833, 2137205, 2152233, 2161423, 2175701, 2180073, 2195101, 2214631, 2228909, 2233281, 2248309, 2259599, 2273877, 2278249, 2293277, 2317248, 2331901, 2336383, 2351786, 2360868, 2375521, 2380003, 2395406]"
"('FilterBuilder.java', 'org.reflections.util.FilterBuilder$Include', 'apply', 'com\\.github\\.olivergondza\\.dumpling.*', 'com/github/olivergondza/dumpling/groovy/GroovyApi.class')","[69676, 88938, 114644, 133906, 155455, 174717, 194832, 214094, 234209, 252223, 271470, 291702, 311240, 331472, 351101, 371333, 390962, 411194, 430732, 450964, 478878, 498140, 518255, 537517, 557632, 576894, 597009, 616271, 636386, 655648, 675763, 693777, 716352, 739632, 763328, 786677, 812024, 835304, 858584, 881864, 905144, 928840, 952605, 989516, 1012796, 1036076, 1059356, 1082636, 1105916, 1129196, 1152892, 1178348, 1201628, 1224908, 1244028, 1262458, 1280888, 1299318, 1317748, 1336178, 1355440, 1375555, 1394817, 1414932, 1432946, 1451361, 1470623, 1496245, 1515507, 1546126, 1565388, 1583956, 1602386, 1621648, 1640216, 1658646, 1677908, 1698457, 1728645, 1746659, 1765020, 1784282, 1810042, 1828472, 1847734, 1866302, 1884732, 1903162, 1922008, 1940507, 1959353, 1977852, 1996282, 2015128, 2033627, 2052889, 2071457, 2089887, 2107901, 2130220, 2149482, 2173088, 2192350, 2226296, 2245558, 2271264, 2290526, 2329219, 2348966, 2372839, 2392586]"
"('Scanner.java', 'java.util.Scanner', 'getCompleteTokenInBuffer', '(?s).*', '""surefire-forkedjvm-command-thread"" daemon prio=10 tid=0x00007fd6fc311800 nid=0xdc6 runnable [0x00007fd6f825f000]\n   java.lang.Thread.State: RUNNABLE\n\tat java.io.FileInputStream.readBytes(Native Method)\n\tat java.io.FileInputStream.read(FileInputStream.java:272)\n\tat java.io.BufferedInputStream.fill(BufferedInputStream.java:235)\n\tat java.io.BufferedInputStream.read(BufferedInputStream.java:254)\n\t- locked <0x0000000707069ca8> (a java.io.BufferedInputStream)\n\tat java.io.DataInputStream.readInt(DataInputStream.java:387)\n\tat org.apache.maven.surefire.booter.MasterProcessCommand.decode(MasterProcessCommand.java:117)\n\tat org.apache.maven.surefire.booter.CommandReader$CommandRunnable.run(CommandReader.java:360)\n\tat java.lang.Thread.run(Thread.java:745)\n\n   Locked ownable synchronizers:\n\t- None\n\n""last-ditch-daemon-shutdown-thread-30sec"" daemon prio=10 tid=0x00007fd6fc30c800 nid=0xdc5 waiting on condition [0x00007fd6f8360000]\n   java.lang.Thread.State: TIMED_WAITING (parking)\n\tat sun.misc.Unsafe.park(Native Method)\n\t- parking to wait for  <0x0000000707069d68> (a java.util.concurrent.locks.AbstractQueuedSynchronizer$ConditionObject)\n\tat java.util.concurrent.locks.LockSupport.parkNanos(LockSupport.java:226)\n\tat java.util.concurrent.locks.AbstractQueuedSynchronizer$ConditionObject.awaitNanos(AbstractQueuedSynchronizer.java:2082)\n\tat java.util.concurrent.ScheduledThreadPoolExecutor$DelayedWorkQueue.take(ScheduledThreadPoolExecutor.java:1090)\n\tat java.util.concurrent.ScheduledThreadPoolExecutor$DelayedWorkQueue.take(ScheduledThreadPoolExecutor.java:807)\n\tat java.util.concurrent.ThreadPoolExecutor.getTask(ThreadPoolExecutor.java:1068)\n\tat java.util.concurrent.ThreadPoolExecutor.runWorker(ThreadPoolExecutor.java:1130)\n\tat java.util.concurrent.ThreadPoolExecutor$Worker.run(ThreadPoolExecutor.java:615)\n\tat java.lang.Thread.run(Thread.java:745)\n\n   Locked ownable synchronizers:\n\t- None\n\n""Service Thread"" daemon prio=10 tid=0x00007fd6fc2f3000 nid=0xdc3 runnable [0x0000000000000000]\n   java.lang.Thread.State: RUNNABLE\n\n   Locked ownable synchronizers:\n\t- None\n\n""C2 CompilerThread1"" daemon prio=10 tid=0x00007fd6fc2f1000 nid=0xdc2 waiting on condition [0x0000000000000000]\n   java.lang.Thread.State: RUNNABLE\n\n   Locked ownable synchronizers:\n\t- None\n\n""C2 CompilerThread0"" daemon prio=10 tid=0x00007fd6fc2ec800 nid=0xdc1 waiting on condition [0x0000000000000000]\n   java.lang.Thread.State: RUNNABLE\n\n   Locked ownable synchronizers:\n\t- None\n\n""Signal Dispatcher"" daemon prio=10 tid=0x00007fd6fc157000 nid=0xdc0 runnable [0x0000000000000000]\n   java.lang.Thread.State: RUNNABLE\n\n   Locked ownable synchronizers:\n\t- None\n\n""Finalizer"" daemon prio=10 tid=0x00007fd6fc136000 nid=0xdbf in Object.wait() [0x00007fd6f8ffe000]\n   java.lang.Thread.State: WAITING (on object monitor)\n\tat java.lang.Object.wait(Native Method)\n\t- waiting on <0x000000070706a0a8> (a java.lang.ref.ReferenceQueue$Lock)\n\tat java.lang.ref.ReferenceQueue.remove(ReferenceQueue.java:135)\n\t- locked <0x000000070706a0a8> (a java.lang.ref.ReferenceQueue$Lock)\n\tat java.lang.ref.ReferenceQueue.remove(ReferenceQueue.java:151)\n\tat java.lang.ref.Finalizer$FinalizerThread.run(Finalizer.java:209)\n\n   Locked ownable synchronizers:\n\t- None\n\n""Reference Handler"" daemon prio=10 tid=0x00007fd6fc134000 nid=0xdbe in Object.wait() [0x00007fd700114000]\n   java.lang.Thread.State: WAITING (on object monitor)\n\tat java.lang.Object.wait(Native Method)\n\t- waiting on <0x000000070706a150> (a java.lang.ref.Reference$Lock)\n\tat java.lang.Object.wait(Object.java:503)\n\tat java.lang.ref.Reference$ReferenceHandler.run(Reference.java:133)\n\t- locked <0x000000070706a150> (a java.lang.ref.Reference$Lock)\n\n   Locked ownable synchronizers:\n\t- None\n\n""main"" prio=10 tid=0x00007fd6fc008800 nid=0xdb8 waiting on condition [0x00007fd7055bb000]\n   java.lang.Thread.State: WAITING (parking)\n\tat sun.misc.Unsafe.park(Native Method)\n\t- parking to wait for  <0x00000007072210a0> (a java.util.concurrent.FutureTask)\n\tat java.util.concurrent.locks.LockSupport.park(LockSupport.java:186)\n\tat java.util.concurrent.FutureTask.awaitDone(FutureTask.java:425)\n\tat jav')","[458517, 458797, 459235, 459515, 459953, 460391, 460671, 461030]"
"('FilterBuilder.java', 'org.reflections.util.FilterBuilder$Include', 'apply', 'com\\.github\\.olivergondza\\.dumpling.*', 'com.github.olivergondza.dumpling.model.jmx.JmxThread.class')","[62627, 81519, 107595, 126487, 148406, 167298, 187783, 206675, 227160, 245359, 264051, 283913, 303821, 323683, 343682, 363544, 383543, 403405, 423313, 443175, 471829, 490721, 511206, 530098, 550583, 569475, 589960, 608852, 629337, 648229, 668714, 686913, 707453, 730733, 754244, 777778, 803125, 826405, 849685, 872965, 896245, 919756, 943521, 980617, 1003897, 1027177, 1050457, 1073737, 1097017, 1120297, 1143808, 1169449, 1192729, 1216009, 1236979, 1255409, 1273839, 1292269, 1310699, 1329129, 1348021, 1368506, 1387398, 1407883, 1426082, 1444312, 1463204, 1489196, 1508088, 1539077, 1557969, 1576907, 1595337, 1614229, 1633167, 1651597, 1670489, 1691408, 1721596, 1739795, 1757971, 1776863, 1802993, 1821423, 1840315, 1859253, 1877683, 1896113, 1914774, 1933458, 1952119, 1970803, 1989233, 2007894, 2026578, 2045470, 2064408, 2082838, 2101037, 2123171, 2142063, 2166039, 2184931, 2219247, 2238139, 2264215, 2283107, 2321985, 2341362, 2365605, 2384982]"
"('FilterBuilder.java', 'org.reflections.util.FilterBuilder$Include', 'apply', 'com\\.github\\.olivergondza\\.dumpling.*', 'com.github.olivergondza.dumpling.model.dump.ThreadDumpThreadSet.class')","[63425, 82359, 108393, 127327, 149204, 168138, 188581, 207515, 227958, 246136, 264891, 284795, 304661, 324565, 344522, 364426, 384383, 404287, 424153, 444057, 472627, 491561, 512004, 530938, 551381, 570315, 590758, 609692, 630135, 649069, 669512, 687690, 708461, 731741, 755273, 778786, 804133, 827413, 850693, 873973, 897253, 920785, 944550, 981625, 1004905, 1028185, 1051465, 1074745, 1098025, 1121305, 1144837, 1170457, 1193737, 1217017, 1237777, 1256207, 1274637, 1293067, 1311497, 1329927, 1348861, 1369304, 1388238, 1408681, 1426859, 1445110, 1464044, 1489994, 1508928, 1539875, 1558809, 1577705, 1596135, 1615069, 1633965, 1652395, 1671329, 1692206, 1722394, 1740572, 1758769, 1777703, 1803791, 1822221, 1841155, 1860051, 1878481, 1896911, 1915593, 1934256, 1952938, 1971601, 1990031, 2008713, 2027376, 2046310, 2065206, 2083636, 2101814, 2123969, 2142903, 2166837, 2185771, 2220045, 2238979, 2265013, 2283947, 2322804, 2342223, 2366424, 2385843]"
"('FilterBuilder.java', 'org.reflections.util.FilterBuilder$Include', 'apply', 'com\\.github\\.olivergondza\\.dumpling.*', 'com/github/olivergondza/dumpling/model/mxbean/MXBeanThread$Builder.class')","[61980, 80838, 106948, 125806, 147759, 166617, 187136, 205994, 226513, 244729, 263370, 283198, 303140, 322968, 343001, 362829, 382862, 402690, 422632, 442460, 471182, 490040, 510559, 529417, 549936, 568794, 589313, 608171, 628690, 647548, 668067, 686283, 706636, 729916, 753410, 776961, 802308, 825588, 848868, 872148, 895428, 918922, 942687, 979800, 1003080, 1026360, 1049640, 1072920, 1096200, 1119480, 1142974, 1168632, 1191912, 1215192, 1236332, 1254762, 1273192, 1291622, 1310052, 1328482, 1347340, 1367859, 1386717, 1407236, 1425452, 1443665, 1462523, 1488549, 1507407, 1538430, 1557288, 1576260, 1594690, 1613548, 1632520, 1650950, 1669808, 1690761, 1720949, 1739165, 1757324, 1776182, 1802346, 1820776, 1839634, 1858606, 1877036, 1895466, 1914110, 1932811, 1951455, 1970156, 1988586, 2007230, 2025931, 2044789, 2063761, 2082191, 2100407, 2122524, 2141382, 2165392, 2184250, 2218600, 2237458, 2263568, 2282426, 2321321, 2340664, 2364941, 2384284]"
"('FilterBuilder.java', 'org.reflections.util.FilterBuilder$Include', 'apply', 'com\\.github\\.olivergondza\\.dumpling.*', 'com/github/olivergondza/dumpling/cli/HelpCommand.class')","[60950, 79754, 105918, 124722, 146729, 165533, 186106, 204910, 225483, 243726, 262286, 282060, 302056, 321830, 341917, 361691, 381778, 401552, 421548, 441322, 470152, 488956, 509529, 528333, 548906, 567710, 588283, 607087, 627660, 646464, 667037, 685280, 705336, 728616, 752083, 775661, 801008, 824288, 847568, 870848, 894128, 917595, 941360, 978500, 1001780, 1025060, 1048340, 1071620, 1094900, 1118180, 1141647, 1167332, 1190612, 1213892, 1235302, 1253732, 1272162, 1290592, 1309022, 1327452, 1346256, 1366829, 1385633, 1406206, 1424449, 1442635, 1461439, 1487519, 1506323, 1537400, 1556204, 1575230, 1593660, 1612464, 1631490, 1649920, 1668724, 1689731, 1719919, 1738162, 1756294, 1775098, 1801316, 1819746, 1838550, 1857576, 1876006, 1894436, 1913053, 1931781, 1950398, 1969126, 1987556, 2006173, 2024901, 2043705, 2062731, 2081161, 2099404, 2121494, 2140298, 2164362, 2183166, 2217570, 2236374, 2262538, 2281342, 2320264, 2339553, 2363884, 2383173]"
"('Description.java', 'org.junit.runner.Description', 'methodAndClassNamePatternGroupOrDefault', '([\\s\\S]*)\\((.*)\\)', 'help(com.github.olivergondza.dumpling.cli.GroovyRuntimeTest)')",[770]
"('Scanner.java', 'java.util.Scanner', 'getCompleteTokenInBuffer', '(?s).*', '""Reference Handler"" daemon prio=10 tid=0x00007f106c06c000 nid=0x1007 in Object.wait() [0x00007f10689f8000]\n   java.lang.Thread.State: WAITING (on object monitor)\n\tat java.lang.Object.wait(Native Method)\n\t- waiting on <0x00000007b0f100d0> (a java.lang.ref.Reference$Lock)\n\tat java.lang.Object.wait(Object.java:503)\n\tat java.lang.ref.Reference$ReferenceHandler.run(Reference.java:133)\n\t- locked <0x00000007b0f100d0> (a java.lang.ref.Reference$Lock)\n\n   Locked ownable synchronizers:\n\t- None\n\n""main"" prio=10 tid=0x00007f106c007800 nid=0x1001 in Object.wait() [0x00007f1074dce000]\n   java.lang.Thread.State: TIMED_WAITING (on object monitor)\n\tat java.lang.Object.wait(Native Method)\n\t- waiting on <0x00000007ae5a9918> (a java.lang.Object)\n\tat sun.reflect.NativeMethodAccessorImpl.invoke0(Native Method)\n\tat sun.reflect.NativeMethodAccessorImpl.invoke(NativeMethodAccessorImpl.java:57)\n\tat sun.reflect.DelegatingMethodAccessorImpl.invoke(DelegatingMethodAccessorImpl.java:43)\n\tat java.lang.reflect.Method.invoke(Method.java:606)\n')",[52325]
"('Description.java', 'org.junit.runner.Description', 'methodAndClassNamePatternGroupOrDefault', '([\\s\\S]*)\\((.*)\\)', 'infer2ArgForm(com.github.olivergondza.dumpling.cli.ProcessRuntimeOptionHandlerTest)')",[1298]
"('Scanner.java', 'java.util.Scanner', 'getCompleteTokenInBuffer', '(?s).*', '2018-01-11 20:22:39\nFull thread dump Java HotSpot(TM) 64-Bit Server VM (24.80-b11 mixed mode):\n\n""JMX client heartbeat 5"" daemon prio=10 tid=0x00007fd6b80b3800 nid=0x10c4 waiting on condition [0x00007fd68f9f8000]\n   java.lang.Thread.State: TIMED_WAITING (sleeping)\n\tat java.lang.Thread.sleep(Native Method)\n\tat com.sun.jmx.remote.internal.ClientCommunicatorAdmin$Checker.run(ClientComm')",[1518300]
"('ThreadDumpFactory.java', 'com.github.olivergondza.dumpling.factory.ThreadDumpFactory', 'initHeader', '#\\d+', '[0x00007f0d0a603000]')","[23132, 23166]"
"('FilterBuilder.java', 'org.reflections.util.FilterBuilder$Include', 'apply', 'com\\.github\\.olivergondza\\.dumpling.*', 'com/github/olivergondza/dumpling/TestThread/logging.properties')","[71418, 90772, 116386, 135740, 157197, 176551, 196574, 215928, 235951, 253919, 273304, 293628, 313074, 333398, 352935, 373259, 392796, 413120, 432566, 452890, 480620, 499974, 519997, 539351, 559374, 578728, 598751, 618105, 638128, 657482, 677505, 695473, 718554, 741834, 765576, 788879, 814226, 837506, 860786, 884066, 907346, 931088, 954853, 991718, 1014998, 1038278, 1061558, 1084838, 1108118, 1131398, 1155140, 1180550, 1203830, 1227110, 1245770, 1264200, 1282630, 1301060, 1319490, 1337920, 1357274, 1377297, 1396651, 1416674, 1434642, 1453103, 1472457, 1497987, 1517341, 1547868, 1567222, 1585698, 1604128, 1623482, 1641958, 1660388, 1679742, 1700199, 1730387, 1748355, 1766762, 1786116, 1811784, 1830214, 1849568, 1868044, 1886474, 1904904, 1923796, 1942249, 1961141, 1979594, 1998024, 2016916, 2035369, 2054723, 2073199, 2091629, 2109597, 2131962, 2151316, 2174830, 2194184, 2228038, 2247392, 2273006, 2292360, 2331007, 2350846, 2374627, 2394466]"
"('FilterBuilder.java', 'org.reflections.util.FilterBuilder$Exclude', 'apply', 'java.lang.Object', 'com.github.olivergondza.dumpling.model.mxbean.MXBeanThreadSet')","[62895, 64611, 81801, 83607, 107863, 109579, 126769, 128575, 148674, 150390, 167580, 169386, 188051, 189767, 206957, 208763, 227428, 229144, 245620, 247291, 264333, 266139, 284209, 286105, 304103, 305909, 323979, 325875, 343964, 345770, 363840, 365736, 383825, 385631, 403701, 405597, 423595, 425401, 443471, 445367, 472097, 473813, 491003, 492809, 511474, 513190, 530380, 532186, 550851, 552567, 569757, 571563, 590228, 591944, 609134, 610940, 629605, 631321, 648511, 650317, 668982, 670698, 687174, 688845, 707791, 709957, 731071, 733237, 754589, 756800, 778116, 780282, 803463, 805629, 826743, 828909, 850023, 852189, 873303, 875469, 896583, 898749, 920101, 922312, 943866, 946077, 980955, 983121, 1004235, 1006401, 1027515, 1029681, 1050795, 1052961, 1074075, 1076241, 1097355, 1099521, 1120635, 1122801, 1144153, 1146364, 1169787, 1171953, 1193067, 1195233, 1216347, 1218513, 1237247, 1238963, 1255677, 1257393, 1274107, 1275823, 1292537, 1294253, 1310967, 1312683, 1329397, 1331113, 1348303, 1350109, 1368774, 1370490, 1387680, 1389486, 1408151, 1409867, 1426343, 1428014, 1444580, 1446296, 1463486, 1465292, 1489464, 1491180, 1508370, 1510176, 1539345, 1541061, 1558251, 1560057, 1577175, 1578891, 1595605, 1597321, 1614511, 1616317, 1633435, 1635151, 1651865, 1653581, 1670771, 1672577, 1691676, 1693392, 1721864, 1723580, 1740056, 1741727, 1758239, 1759955, 1777145, 1778951, 1803261, 1804977, 1821691, 1823407, 1840597, 1842403, 1859521, 1861237, 1877951, 1879667, 1896381, 1898097, 1915049, 1916810, 1933726, 1935442, 1952394, 1954155, 1971071, 1972787, 1989501, 1991217, 2008169, 2009930, 2026846, 2028562, 2045752, 2047558, 2064676, 2066392, 2083106, 2084822, 2101298, 2102969, 2123439, 2125155, 2142345, 2144151, 2166307, 2168023, 2185213, 2187019, 2219515, 2221231, 2238421, 2240227, 2264483, 2266199, 2283389, 2285195, 2322260, 2324021, 2341651, 2343502, 2365880, 2367641, 2385271, 2387122]"
"('FilterBuilder.java', 'org.reflections.util.FilterBuilder$Include', 'apply', 'com\\.github\\.olivergondza\\.dumpling.*', 'jstack/deadlock.log')","[70508, 89814, 115476, 134782, 156287, 175593, 195664, 214970, 235041, 253033, 272346, 292622, 312116, 332392, 351977, 372253, 391838, 412114, 431608, 451884, 479710, 499016, 519087, 538393, 558464, 577770, 597841, 617147, 637218, 656524, 676595, 694587, 717404, 740684, 764402, 787729, 813076, 836356, 859636, 882916, 906196, 929914, 953679, 990568, 1013848, 1037128, 1060408, 1083688, 1106968, 1130248, 1153966, 1179400, 1202680, 1225960, 1244860, 1263290, 1281720, 1300150, 1318580, 1337010, 1356316, 1376387, 1395693, 1415764, 1433756, 1452193, 1471499, 1497077, 1516383, 1546958, 1566264, 1584788, 1603218, 1622524, 1641048, 1659478, 1678784, 1699289, 1729477, 1747469, 1765852, 1785158, 1810874, 1829304, 1848610, 1867134, 1885564, 1903994, 1922862, 1941339, 1960207, 1978684, 1997114, 2015982, 2034459, 2053765, 2072289, 2090719, 2108711, 2131052, 2150358, 2173920, 2193226, 2227128, 2246434, 2272096, 2291402, 2330073, 2349864, 2373693, 2393484]"
"('FilterBuilder.java', 'org.reflections.util.FilterBuilder$Exclude', 'apply', 'java.lang.Object', 'com.github.olivergondza.dumpling.factory.ThreadDumpFactoryVendorTest.reacquireMonitorAfterWait.groovy')","[57337, 75951, 102305, 120919, 143116, 161730, 182493, 201107, 221870, 240208, 258483, 278067, 298253, 317837, 338114, 357698, 377975, 397559, 417745, 437329, 466539, 485153, 505916, 524530, 545293, 563907, 584670, 603284, 624047, 642661, 663424, 681762, 700773, 724053, 747425, 771098, 796445, 819725, 843005, 866285, 889565, 912937, 936702, 973937, 997217, 1020497, 1043777, 1067057, 1090337, 1113617, 1136989, 1162769, 1186049, 1209329, 1231689, 1250119, 1268549, 1286979, 1305409, 1323839, 1342453, 1363216, 1381830, 1402593, 1420931, 1439022, 1457636, 1483906, 1502520, 1533787, 1552401, 1571617, 1590047, 1608661, 1627877, 1646307, 1664921, 1686118, 1716306, 1734644, 1752681, 1771295, 1797703, 1816133, 1834747, 1853963, 1872393, 1890823, 1909345, 1928168, 1946690, 1965513, 1983943, 2002465, 2021288, 2039902, 2059118, 2077548, 2095886, 2117881, 2136495, 2160749, 2179363, 2213957, 2232571, 2258925, 2277539, 2316556, 2335655, 2360176, 2379275]"
"('FilterBuilder.java', 'org.reflections.util.FilterBuilder$Include', 'apply', 'com\\.github\\.olivergondza\\.dumpling.*', 'jstack.producer-consumer.log')","[70397, 89697, 115365, 134665, 156176, 175476, 195553, 214853, 234930, 252925, 272229, 292499, 311999, 332269, 351860, 372130, 391721, 411991, 431491, 451761, 479599, 498899, 518976, 538276, 558353, 577653, 597730, 617030, 637107, 656407, 676484, 694479, 717263, 740543, 764258, 787588, 812935, 836215, 859495, 882775, 906055, 929770, 953535, 990427, 1013707, 1036987, 1060267, 1083547, 1106827, 1130107, 1153822, 1179259, 1202539, 1225819, 1244749, 1263179, 1281609, 1300039, 1318469, 1336899, 1356199, 1376276, 1395576, 1415653, 1433648, 1452082, 1471382, 1496966, 1516266, 1546847, 1566147, 1584677, 1603107, 1622407, 1640937, 1659367, 1678667, 1699178, 1729366, 1747361, 1765741, 1785041, 1810763, 1829193, 1848493, 1867023, 1885453, 1903883, 1922748, 1941228, 1960093, 1978573, 1997003, 2015868, 2034348, 2053648, 2072178, 2090608, 2108603, 2130941, 2150241, 2173809, 2193109, 2227017, 2246317, 2271985, 2291285, 2329959, 2349744, 2373579, 2393364]"
"('FilterBuilder.java', 'org.reflections.util.FilterBuilder$Include', 'apply', 'com\\.github\\.olivergondza\\.dumpling.*', 'com/github/olivergondza/dumpling/query/DeadlocksCommand.class')","[58316, 76982, 103284, 121950, 144095, 162761, 183472, 202138, 222849, 241161, 259514, 279150, 299284, 318920, 339145, 358781, 379006, 398642, 418776, 438412, 467518, 486184, 506895, 525561, 546272, 564938, 585649, 604315, 625026, 643692, 664403, 682715, 702012, 725292, 748690, 772337, 797684, 820964, 844244, 867524, 890804, 914202, 937967, 975176, 998456, 1021736, 1045016, 1068296, 1091576, 1114856, 1138254, 1164008, 1187288, 1210568, 1232668, 1251098, 1269528, 1287958, 1306388, 1324818, 1343484, 1364195, 1382861, 1403572, 1421884, 1440001, 1458667, 1484885, 1503551, 1534766, 1553432, 1572596, 1591026, 1609692, 1628856, 1647286, 1665952, 1687097, 1717285, 1735597, 1753660, 1772326, 1798682, 1817112, 1835778, 1854942, 1873372, 1891802, 1910350, 1929147, 1947695, 1966492, 1984922, 2003470, 2022267, 2040933, 2060097, 2078527, 2096839, 2118860, 2137526, 2161728, 2180394, 2214936, 2233602, 2259904, 2278570, 2317561, 2336712, 2361181, 2380332]"
"('FilterBuilder.java', 'org.reflections.util.FilterBuilder$Include', 'apply', 'com\\.github\\.olivergondza\\.dumpling.*', 'com.github.olivergondza.dumpling.query.DeadlocksTest.class')","[54047, 72487, 99015, 117455, 139826, 158266, 179203, 197643, 218580, 237005, 255019, 274429, 294789, 314199, 334650, 354060, 374511, 393921, 414281, 433691, 463249, 481689, 502626, 521066, 542003, 560443, 581380, 599820, 620757, 639197, 660134, 678559, 696613, 719893, 743178, 766938, 792285, 815565, 838845, 862125, 885405, 908690, 932455, 969777, 993057, 1016337, 1039617, 1062897, 1086177, 1109457, 1132742, 1158609, 1181889, 1205169, 1228399, 1246829, 1265259, 1283689, 1302119, 1320549, 1338989, 1359926, 1378366, 1399303, 1417728, 1435732, 1454172, 1480616, 1499056, 1530497, 1548937, 1568327, 1586757, 1605197, 1624587, 1643017, 1661457, 1682828, 1713016, 1731441, 1749391, 1767831, 1794413, 1812843, 1831283, 1850673, 1869103, 1887533, 1905968, 1924878, 1943313, 1962223, 1980653, 1999088, 2017998, 2036438, 2055828, 2074258, 2092683, 2114591, 2133031, 2157459, 2175899, 2210667, 2229107, 2255635, 2274075, 2313179, 2332104, 2356799, 2375724]"
"('ThreadDumpFactory.java', 'com.github.olivergondza.dumpling.factory.ThreadDumpFactory', 'initHeader', '#\\d+', '[0x00007f414e08a000]')","[2308590, 2308616, 2310635, 2310661, 2312680, 2312706, 2354145, 2354181, 2356300, 2356326, 2397765, 2397801]"
"('FilterBuilder.java', 'org.reflections.util.FilterBuilder$Include', 'apply', 'com\\.github\\.olivergondza\\.dumpling.*', 'com/github/olivergondza/dumpling/cli/command.groovy.usage')","[59696, 78434, 104664, 123402, 145475, 164213, 184852, 203590, 224229, 242505, 260966, 280674, 300736, 320444, 340597, 360305, 380458, 400166, 420228, 439936, 468898, 487636, 508275, 527013, 547652, 566390, 587029, 605767, 626406, 645144, 665783, 684059, 703752, 727032, 750466, 774077, 799424, 822704, 845984, 869264, 892544, 915978, 939743, 976916, 1000196, 1023476, 1046756, 1070036, 1093316, 1116596, 1140030, 1165748, 1189028, 1212308, 1234048, 1252478, 1270908, 1289338, 1307768, 1326198, 1344936, 1365575, 1384313, 1404952, 1423228, 1441381, 1460119, 1486265, 1505003, 1536146, 1554884, 1573976, 1592406, 1611144, 1630236, 1648666, 1667404, 1688477, 1718665, 1736941, 1755040, 1773778, 1800062, 1818492, 1837230, 1856322, 1874752, 1893182, 1911766, 1930527, 1949111, 1967872, 1986302, 2004886, 2023647, 2042385, 2061477, 2079907, 2098183, 2120240, 2138978, 2163108, 2181846, 2216316, 2235054, 2261284, 2280022, 2318977, 2338200, 2362597, 2381820]"
"('FilterBuilder.java', 'org.reflections.util.FilterBuilder$Include', 'apply', 'com\\.github\\.olivergondza\\.dumpling.*', 'com.github.olivergondza.dumpling.cli.HelpCommand.class')","[60987, 79793, 105955, 124761, 146766, 165572, 186143, 204949, 225520, 243762, 262325, 282101, 302095, 321871, 341956, 361732, 381817, 401593, 421587, 441363, 470189, 488995, 509566, 528372, 548943, 567749, 588320, 607126, 627697, 646503, 667074, 685316, 705383, 728663, 752131, 775708, 801055, 824335, 847615, 870895, 894175, 917643, 941408, 978547, 1001827, 1025107, 1048387, 1071667, 1094947, 1118227, 1141695, 1167379, 1190659, 1213939, 1235339, 1253769, 1272199, 1290629, 1309059, 1327489, 1346295, 1366866, 1385672, 1406243, 1424485, 1442672, 1461478, 1487556, 1506362, 1537437, 1556243, 1575267, 1593697, 1612503, 1631527, 1649957, 1668763, 1689768, 1719956, 1738198, 1756331, 1775137, 1801353, 1819783, 1838589, 1857613, 1876043, 1894473, 1913091, 1931818, 1950436, 1969163, 1987593, 2006211, 2024938, 2043744, 2062768, 2081198, 2099440, 2121531, 2140337, 2164399, 2183205, 2217607, 2236413, 2262575, 2281381, 2320302, 2339593, 2363922, 2383213]"
"('FilterBuilder.java', 'org.reflections.util.FilterBuilder$Include', 'apply', 'com\\.github\\.olivergondza\\.dumpling.*', 'com.github.olivergondza.dumpling.cli.GroovyRuntimeTest$1.class')","[55341, 73849, 100309, 118817, 141120, 159628, 180497, 199005, 219874, 238265, 256381, 275859, 296151, 315629, 336012, 355490, 375873, 395351, 415643, 435121, 464543, 483051, 503920, 522428, 543297, 561805, 582674, 601182, 622051, 640559, 661428, 679819, 698247, 721527, 744846, 768572, 793919, 817199, 840479, 863759, 887039, 910358, 934123, 971411, 994691, 1017971, 1041251, 1064531, 1087811, 1111091, 1134410, 1160243, 1183523, 1206803, 1229693, 1248123, 1266553, 1284983, 1303413, 1321843, 1340351, 1361220, 1379728, 1400597, 1418988, 1437026, 1455534, 1481910, 1500418, 1531791, 1550299, 1569621, 1588051, 1606559, 1625881, 1644311, 1662819, 1684122, 1714310, 1732701, 1750685, 1769193, 1795707, 1814137, 1832645, 1851967, 1870397, 1888827, 1907296, 1926172, 1944641, 1963517, 1981947, 2000416, 2019292, 2037800, 2057122, 2075552, 2093943, 2115885, 2134393, 2158753, 2177261, 2211961, 2230469, 2256929, 2275437, 2314507, 2333500, 2358127, 2377120]"
"('FilterBuilder.java', 'org.reflections.util.FilterBuilder$Include', 'apply', 'com\\.github\\.olivergondza\\.dumpling.*', 'com.github.olivergondza.dumpling.query.DeadlocksCommand.class')","[58353, 77021, 103321, 121989, 144132, 162800, 183509, 202177, 222886, 241197, 259553, 279191, 299323, 318961, 339184, 358822, 379045, 398683, 418815, 438453, 467555, 486223, 506932, 525600, 546309, 564977, 585686, 604354, 625063, 643731, 664440, 682751, 702059, 725339, 748738, 772384, 797731, 821011, 844291, 867571, 890851, 914250, 938015, 975223, 998503, 1021783, 1045063, 1068343, 1091623, 1114903, 1138302, 1164055, 1187335, 1210615, 1232705, 1251135, 1269565, 1287995, 1306425, 1324855, 1343523, 1364232, 1382900, 1403609, 1421920, 1440038, 1458706, 1484922, 1503590, 1534803, 1553471, 1572633, 1591063, 1609731, 1628893, 1647323, 1665991, 1687134, 1717322, 1735633, 1753697, 1772365, 1798719, 1817149, 1835817, 1854979, 1873409, 1891839, 1910388, 1929184, 1947733, 1966529, 1984959, 2003508, 2022304, 2040972, 2060134, 2078564, 2096875, 2118897, 2137565, 2161765, 2180433, 2214973, 2233641, 2259941, 2278609, 2317599, 2336752, 2361219, 2380372]"
"('Scanner.java', 'java.util.Scanner', 'getCompleteTokenInBuffer', '(?s).*', '""blocked_thread"" prio=10 tid=0x00002ad39c16b800 nid=0x7e29 waiting for monitor entry [0x00002ad3cf8f7000]\n   java.lang.Thread.State: BLOCKED (on object monitor)\n\tat hudson.model.Queue.getItem(Queue.java:719)\n\t- waiting to lock <0x00000004063a9378> (a hudson.model.Queue)\n\tat hudson.model.AbstractProject.getQueueItem(AbstractProject.java:927)\n\tat hudson.matrix.DefaultMatrixExecutionStrategyImpl.waitForCompletion(DefaultMatrixExecutionStrategyImpl.java:220)\n\tat hudson.matrix.DefaultMatrixExecutionStrategyImpl.run(DefaultMatrixExecutionStrategyImpl.java:163)\n\tat hudson.matrix.MatrixBuild$MatrixBuildExecution.doRun(MatrixBuild.java:340)\n\tat hudson.model.AbstractBuild$AbstractBuildExecution.run(AbstractBuild.java:499)\n\tat hudson.model.Run.execute(Run.java:1502)\n\tat hudson.matrix.MatrixBuild.run(MatrixBuild.java:289)\n\tat hudson.model.ResourceController.execute(ResourceController.java:88)\n\tat hudson.model.Executor.run(Executor.java:236)\n\tat hudson.model.OneOffExecutor.run(OneOffExecutor.java:66)\n\n""owning_thread"" prio')","[177566, 216943, 500989, 540366, 579743, 619120, 658497, 790104, 1156390, 1358289, 1397666, 1680757]"
"('Scanner.java', 'java.util.Scanner', 'getCompleteTokenInBuffer', '(?s).*', '""Finalizer"" daemon prio=10 tid=0x00007f2c4806e000 nid=0xdd1 in Object.wait() [0x00007f2c3c9e7000]\n   java.lang.Thread.State: WAITING (on object monitor)\n\tat java.lang.Object.wait(Native Method)\n\t- waiting on <0x00000007b0f00790> (a java.lang.ref.ReferenceQueue$Lock)\n\tat java.lang.ref.ReferenceQueue.remove(ReferenceQueue.java:135)\n\t- locked <0x00000007b0f00790> (a java.lang.ref.ReferenceQueue$Lock)\n\tat java.lang.ref.ReferenceQueue.remove(ReferenceQueue.java:151)\n\tat java.lang.ref.Finalizer$FinalizerThread.run(Finalizer.java:209)\n\n   Locked ownable synchronizers:\n\t- None\n\n""Reference Handler"" daemon prio=10 tid=0x00007f2c4806c000 nid=0xdd0 in Object.wait() [0x00007f2c3cae8000]\n   java.lang.Thread.State: WAITING (on object monitor)\n\tat java.lang.Object.wait(Native Method)\n\t- waiting on <0x00000007b0f10068> (a java.lang.ref.Reference$Lock)\n\tat java.lang.Object.wait(Object.java:503)\n\tat java.lang.ref.Reference$ReferenceHandler.run(Reference.java:133)\n\t- locked <0x00000007b0f10068> (a java.lang.ref.Reference$Lock)\n\n')",[3388]
"('Scanner.java', 'java.util.Scanner', 'getCompleteTokenInBuffer', '(?s).*', '2018-01-11 20:22:32\nFull thread dump Java HotSpot(TM) 64-Bit Server VM (24.80-b11 mixed mode):\n\n""sleepingThreadWithLock"" daemon prio=10 tid=0x00007fd6b82d2000 nid=0x1044 waiting on condition [0x00007fd6b07d1000]\n   java.lang.Thread.State: TIMED_WAITING (sleeping)\n\tat java.lang.Thread.sleep(Native Method)\n\tat com.github.olivergondza.dumpling.Util.pause(Util.java:113)\n\tat com.github.olivergondza.dumpling.TestThread$2.run(TestThread.java:101)\n\n   Locked ownable synchronizers:\n\t- <0x00000007aff4c820> (a java.util.concurrent.locks.ReentrantLock$NonfairSync)\n\n""JMX client heartbeat 3"" daemon prio=10 tid=0x00007fd6b82e4800 nid=0x1043 waiting on condition [0x00007fd68fcfb000]\n   java.lang.Thread.State: TIMED_WAITING (sleeping)\n\tat java.lang.Thread.sleep(Native Method)\n\tat com.sun.jmx.remote.internal.ClientCommunicatorAdmin$Checker.run(ClientCommunicatorAdmin.java:174)\n\tat java.lang.Thread.run(Thread.java:745)\n\n   Locked ownable synchronizers:\n\t- None\n\n""JMX server connection timeout 23"" daemon prio=10 tid=0x00007fd67c0')","[453960, 454335]"
"('FilterBuilder.java', 'org.reflections.util.FilterBuilder$Include', 'apply', 'com\\.github\\.olivergondza\\.dumpling.*', 'com/github/olivergondza/dumpling/cli/Factories$Pid.class')","[60344, 79116, 105312, 124084, 146123, 164895, 185500, 204272, 224877, 243136, 261648, 281390, 301418, 321160, 341279, 361021, 381140, 400882, 420910, 440652, 469546, 488318, 508923, 527695, 548300, 567072, 587677, 606449, 627054, 645826, 666431, 684690, 704570, 727850, 751301, 774895, 800242, 823522, 846802, 870082, 893362, 916813, 940578, 977734, 1001014, 1024294, 1047574, 1070854, 1094134, 1117414, 1140865, 1166566, 1189846, 1213126, 1234696, 1253126, 1271556, 1289986, 1308416, 1326846, 1345618, 1366223, 1384995, 1405600, 1423859, 1442029, 1460801, 1486913, 1505685, 1536794, 1555566, 1574624, 1593054, 1611826, 1630884, 1649314, 1668086, 1689125, 1719313, 1737572, 1755688, 1774460, 1800710, 1819140, 1837912, 1856970, 1875400, 1893830, 1912431, 1931175, 1949776, 1968520, 1986950, 2005551, 2024295, 2043067, 2062125, 2080555, 2098814, 2120888, 2139660, 2163756, 2182528, 2216964, 2235736, 2261932, 2280704, 2319642, 2338899, 2363262, 2382519]"
"('FilterBuilder.java', 'org.reflections.util.FilterBuilder$Include', 'apply', 'com\\.github\\.olivergondza\\.dumpling.*', 'com.github.olivergondza.dumpling.TestThread$JMXProcess.class')","[72021, 91407, 116989, 136375, 157800, 177186, 197177, 216563, 236554, 254506, 273939, 294295, 313709, 334065, 353570, 373926, 393431, 413787, 433201, 453557, 481223, 500609, 520600, 539986, 559977, 579363, 599354, 618740, 638731, 658117, 678108, 696060, 719317, 742597, 766355, 789642, 814989, 838269, 861549, 884829, 908109, 931867, 955632, 992481, 1015761, 1039041, 1062321, 1085601, 1108881, 1132161, 1155919, 1181313, 1204593, 1227873, 1246373, 1264803, 1283233, 1301663, 1320093, 1338523, 1357909, 1377900, 1397286, 1417277, 1435229, 1453706, 1473092, 1498590, 1517976, 1548471, 1567857, 1586301, 1604731, 1624117, 1642561, 1660991, 1680377, 1700802, 1730990, 1748942, 1767365, 1786751, 1812387, 1830817, 1850203, 1868647, 1887077, 1905507, 1924415, 1942852, 1961760, 1980197, 1998627, 2017535, 2035972, 2055358, 2073802, 2092232, 2110184, 2132565, 2151951, 2175433, 2194819, 2228641, 2248027, 2273609, 2292995, 2331626, 2351497, 2375246, 2395117]"
"('ThreadDumpFactory.java', 'com.github.olivergondza.dumpling.factory.ThreadDumpFactory', 'initHeader', '#\\d+', '[0x00007fd68f8f7000]')","[956362, 956413]"
"('Scanner.java', 'java.util.Scanner', 'getCompleteTokenInBuffer', '(?s).*', '""Reference Handler"" daemon prio=10 tid=0x00007fae5c06c000 nid=0xf1a in Object.wait() [0x00007fae58af9000]\n   java.lang.Thread.State: WAITING (on object monitor)\n\tat java.lang.Object.wait(Native Method)\n\t- waiting on <0x00000007b0f102c8> (a java.lang.ref.Reference$Lock)\n\tat java.lang.Object.wait(Object.java:503)\n\tat java.lang.ref.Reference$ReferenceHandler.run(Reference.java:133)\n\t- locked <0x00000007b0f102c8> (a java.lang.ref.Reference$Lock)\n\n   Locked ownable synchronizers:\n\t- None\n\n""main"" prio=10 tid=0x00007fae5c007800 nid=0xf14 in Object.wait() [0x00007fae64e62000]\n   java.lang.Thread.State: WAITING (on object monitor)\n\tat java.lang.Object.wait(Native Method)\n\t- waiting on <0x00000007ae8ac9f8> (a java.lang.Double)\n\tat java.lang.Object.wait(Object.java:503)\n\tat java_lang_Object$wait.call(Unknown Source)\n\tat org.codehaus.groovy.runtime.callsite.CallSiteArray.defaultCall(CallSiteArray.java:45)\n\tat org.codehaus.groovy.runtime.callsite.AbstractCallSite.call(AbstractCallSite.java:108)\n\tat org.codehaus.groovy.run')",[31310]
"('FilterBuilder.java', 'org.reflections.util.FilterBuilder$Exclude', 'apply', 'java.lang.Object', 'java.lang.Object')","[54657, 54999, 55227, 55837, 56065, 58125, 58239, 58393, 58547, 58701, 58855, 58969, 59237, 59391, 59619, 59885, 60039, 60421, 60687, 61027, 61181, 61407, 61561, 61675, 62399, 63693, 63847, 64001, 64115, 64229, 64993, 65221, 65375, 65757, 66025, 66293, 66407, 66633, 67087, 67355, 67509, 67663, 68043, 68157, 68271, 68385, 68613, 68727, 68841, 69183, 69297, 69411, 69525, 69639, 69753, 69867, 70249, 70807, 70961, 71115, 71833, 71947, 72175, 73129, 73489, 73729, 74371, 74611, 76781, 76901, 77063, 77225, 77387, 77549, 77669, 77951, 78113, 78353, 78633, 78795, 79197, 79477, 79835, 79997, 80235, 80397, 80517, 81279, 82641, 82803, 82965, 83085, 83205, 84009, 84249, 84411, 84813, 85095, 85377, 85497, 85735, 86213, 86495, 86657, 86819, 87219, 87339, 87459, 87579, 87819, 87939, 88059, 88419, 88539, 88659, 88779, 88899, 89019, 89139, 89541, 90129, 90291, 90453, 91209, 91329, 91569, 99625, 99967, 100195, 100805, 101033, 103093, 103207, 103361, 103515, 103669, 103823, 103937, 104205, 104359, 104587, 104853, 105007, 105389, 105655, 105995, 106149, 106375, 106529, 106643, 107367, 108661, 108815, 108969, 109083, 109197, 109961, 110189, 110343, 110725, 110993, 111261, 111375, 111601, 112055, 112323, 112477, 112631, 113011, 113125, 113239, 113353, 113581, 113695, 113809, 114151, 114265, 114379, 114493, 114607, 114721, 114835, 115217, 115775, 115929, 116083, 116801, 116915, 117143, 118097, 118457, 118697, 119339, 119579, 121749, 121869, 122031, 122193, 122355, 122517, 122637, 122919, 123081, 123321, 123601, 123763, 124165, 124445, 124803, 124965, 125203, 125365, 125485, 126247, 127609, 127771, 127933, 128053, 128173, 128977, 129217, 129379, 129781, 130063, 130345, 130465, 130703, 131181, 131463, 131625, 131787, 132187, 132307, 132427, 132547, 132787, 132907, 133027, 133387, 133507, 133627, 133747, 133867, 133987, 134107, 134509, 135097, 135259, 135421, 136177, 136297, 136537, 140436, 140778, 141006, 141616, 141844, 143904, 144018, 144172, 144326, 144480, 144634, 144748, 145016, 145170, 145398, 145664, 145818, 146200, 146466, 146806, 146960, 147186, 147340, 147454, 148178, 149472, 149626, 149780, 149894, 150008, 150772, 151000, 151154, 151536, 151804, 152072, 152186, 152412, 152866, 153134, 153288, 153442, 153822, 153936, 154050, 154164, 154392, 154506, 154620, 154962, 155076, 155190, 155304, 155418, 155532, 155646, 156028, 156586, 156740, 156894, 157612, 157726, 157954, 158908, 159268, 159508, 160150, 160390, 162560, 162680, 162842, 163004, 163166, 163328, 163448, 163730, 163892, 164132, 164412, 164574, 164976, 165256, 165614, 165776, 166014, 166176, 166296, 167058, 168420, 168582, 168744, 168864, 168984, 169788, 170028, 170190, 170592, 170874, 171156, 171276, 171514, 171992, 172274, 172436, 172598, 172998, 173118, 173238, 173358, 173598, 173718, 173838, 174198, 174318, 174438, 174558, 174678, 174798, 174918, 175320, 175908, 176070, 176232, 176988, 177108, 177348, 179813, 180155, 180383, 180993, 181221, 183281, 183395, 183549, 183703, 183857, 184011, 184125, 184393, 184547, 184775, 185041, 185195, 185577, 185843, 186183, 186337, 186563, 186717, 186831, 187555, 188849, 189003, 189157, 189271, 189385, 190149, 190377, 190531, 190913, 191181, 191449, 191563, 191789, 192243, 192511, 192665, 192819, 193199, 193313, 193427, 193541, 193769, 193883, 193997, 194339, 194453, 194567, 194681, 194795, 194909, 195023, 195405, 195963, 196117, 196271, 196989, 197103, 197331, 198285, 198645, 198885, 199527, 199767, 201937, 202057, 202219, 202381, 202543, 202705, 202825, 203107, 203269, 203509, 203789, 203951, 204353, 204633, 204991, 205153, 205391, 205553, 205673, 206435, 207797, 207959, 208121, 208241, 208361, 209165, 209405, 209567, 209969, 210251, 210533, 210653, 210891, 211369, 211651, 211813, 211975, 212375, 212495, 212615, 212735, 212975, 213095, 213215, 213575, 213695, 213815, 213935, 214055, 214175, 214295, 214697, 215285, 215447, 215609, 216365, 216485, 216725, 219190, 219532, 219760, 220370, 220598, 222658, 222772, 222926, 223080, 223234, 223388, 223502, 223770, 223924, 224152, 224418, 224572, 224954, 225220, 225560, 225714, 225940, 226094, 226208, 226932, 228226, 228380, 228534, 228648, 228762, 229526, 229754, 229908, 230290, 230558, 230826, 230940, 231166, 231620, 231888, 232042, 232196, 232576, 232690, 232804, 232918, 233146, 233260, 233374, 233716, 233830, 233944, 234058, 234172, 234286, 234400, 234782, 235340, 235494, 235648, 236366, 236480, 236708, 237599, 237932, 238154, 238748, 238970, 240975, 241086, 241236, 241386, 241536, 241686, 241797, 242058, 242208, 242430, 242689, 242839, 243211, 243470, 243801, 243951, 244171, 244321, 244432, 245137, 246397, 246547, 246697, 246808, 246919, 247663, 247885, 248035, 248407, 248668, 248929, 249040, 249260, 249702, 249963, 250113, 250263, 250633, 250744, 250855, 250966, 251188, 251299, 251410, 251743, 251854, 251965, 252076, 252187, 252298, 252409, 252781, 253324, 253474, 253624, 254323, 254434, 254656, 255661, 256021, 256261, 256903, 257143, 259313, 259433, 259595, 259757, 259919, 260081, 260201, 260483, 260645, 260885, 261165, 261327, 261729, 262009, 262367, 262529, 262767, 262929, 263049, 263811, 265173, 265335, 265497, 265617, 265737, 266541, 266781, 266943, 267345, 267627, 267909, 268029, 268267, 268745, 269027, 269189, 269351, 269751, 269871, 269991, 270111, 270351, 270471, 270591, 270951, 271071, 271191, 271311, 271431, 271551, 271671, 272073, 272661, 272823, 272985, 273741, 273861, 274101, 275103, 275481, 275733, 276407, 276659, 278939, 279065, 279235, 279405, 279575, 279745, 279871, 280167, 280337, 280589, 280883, 281053, 281475, 281769, 282145, 282315, 282565, 282735, 282861, 283661, 285091, 285261, 285431, 285557, 285683, 286527, 286779, 286949, 287371, 287667, 287963, 288089, 288339, 288841, 289137, 289307, 289477, 289897, 290023, 290149, 290275, 290527, 290653, 290779, 291157, 291283, 291409, 291535, 291661, 291787, 291913, 292335, 292953, 293123, 293293, 294087, 294213, 294465, 295431, 295791, 296031, 296673, 296913, 299083, 299203, 299365, 299527, 299689, 299851, 299971, 300253, 300415, 300655, 300935, 301097, 301499, 301779, 302137, 302299, 302537, 302699, 302819, 303581, 304943, 305105, 305267, 305387, 305507, 306311, 306551, 306713, 307115, 307397, 307679, 307799, 308037, 308515, 308797, 308959, 309121, 309521, 309641, 309761, 309881, 310121, 310241, 310361, 310721, 310841, 310961, 311081, 311201, 311321, 311441, 311843, 312431, 312593, 312755, 313511, 313631, 313871, 314873, 315251, 315503, 316177, 316429, 318709, 318835, 319005, 319175, 319345, 319515, 319641, 319937, 320107, 320359, 320653, 320823, 321245, 321539, 321915, 322085, 322335, 322505, 322631, 323431, 324861, 325031, 325201, 325327, 325453, 326297, 326549, 326719, 327141, 327437, 327733, 327859, 328109, 328611, 328907, 329077, 329247, 329667, 329793, 329919, 330045, 330297, 330423, 330549, 330927, 331053, 331179, 331305, 331431, 331557, 331683, 332105, 332723, 332893, 333063, 333857, 333983, 334235, 335292, 335652, 335892, 336534, 336774, 338944, 339064, 339226, 339388, 339550, 339712, 339832, 340114, 340276, 340516, 340796, 340958, 341360, 341640, 341998, 342160, 342398, 342560, 342680, 343442, 344804, 344966, 345128, 345248, 345368, 346172, 346412, 346574, 346976, 347258, 347540, 347660, 347898, 348376, 348658, 348820, 348982, 349382, 349502, 349622, 349742, 349982, 350102, 350222, 350582, 350702, 350822, 350942, 351062, 351182, 351302, 351704, 352292, 352454, 352616, 353372, 353492, 353732, 354734, 355112, 355364, 356038, 356290, 358570, 358696, 358866, 359036, 359206, 359376, 359502, 359798, 359968, 360220, 360514, 360684, 361106, 361400, 361776, 361946, 362196, 362366, 362492, 363292, 364722, 364892, 365062, 365188, 365314, 366158, 366410, 366580, 367002, 367298, 367594, 367720, 367970, 368472, 368768, 368938, 369108, 369528, 369654, 369780, 369906, 370158, 370284, 370410, 370788, 370914, 371040, 371166, 371292, 371418, 371544, 371966, 372584, 372754, 372924, 373718, 373844, 374096, 375153, 375513, 375753, 376395, 376635, 378805, 378925, 379087, 379249, 379411, 379573, 379693, 379975, 380137, 380377, 380657, 380819, 381221, 381501, 381859, 382021, 382259, 382421, 382541, 383303, 384665, 384827, 384989, 385109, 385229, 386033, 386273, 386435, 386837, 387119, 387401, 387521, 387759, 388237, 388519, 388681, 388843, 389243, 389363, 389483, 389603, 389843, 389963, 390083, 390443, 390563, 390683, 390803, 390923, 391043, 391163, 391565, 392153, 392315, 392477, 393233, 393353, 393593, 394595, 394973, 395225, 395899, 396151, 398431, 398557, 398727, 398897, 399067, 399237, 399363, 399659, 399829, 400081, 400375, 400545, 400967, 401261, 401637, 401807, 402057, 402227, 402353, 403153, 404583, 404753, 404923, 405049, 405175, 406019, 406271, 406441, 406863, 407159, 407455, 407581, 407831, 408333, 408629, 408799, 408969, 409389, 409515, 409641, 409767, 410019, 410145, 410271, 410649, 410775, 410901, 411027, 411153, 411279, 411405, 411827, 412445, 412615, 412785, 413579, 413705, 413957, 414923, 415283, 415523, 416165, 416405, 418575, 418695, 418857, 419019, 419181, 419343, 419463, 419745, 419907, 420147, 420427, 420589, 420991, 421271, 421629, 421791, 422029, 422191, 422311, 423073, 424435, 424597, 424759, 424879, 424999, 425803, 426043, 426205, 426607, 426889, 427171, 427291, 427529, 428007, 428289, 428451, 428613, 429013, 429133, 429253, 429373, 429613, 429733, 429853, 430213, 430333, 430453, 430573, 430693, 430813, 430933, 431335, 431923, 432085, 432247, 433003, 433123, 433363, 434365, 434743, 434995, 435669, 435921, 438201, 438327, 438497, 438667, 438837, 439007, 439133, 439429, 439599, 439851, 440145, 440315, 440737, 441031, 441407, 441577, 441827, 441997, 442123, 442923, 444353, 444523, 444693, 444819, 444945, 445789, 446041, 446211, 446633, 446929, 447225, 447351, 447601, 448103, 448399, 448569, 448739, 449159, 449285, 449411, 449537, 449789, 449915, 450041, 450419, 450545, 450671, 450797, 450923, 451049, 451175, 451597, 452215, 452385, 452555, 453349, 453475, 453727, 463859, 464201, 464429, 465039, 465267, 467327, 467441, 467595, 467749, 467903, 468057, 468171, 468439, 468593, 468821, 469087, 469241, 469623, 469889, 470229, 470383, 470609, 470763, 470877, 471601, 472895, 473049, 473203, 473317, 473431, 474195, 474423, 474577, 474959, 475227, 475495, 475609, 475835, 476289, 476557, 476711, 476865, 477245, 477359, 477473, 477587, 477815, 477929, 478043, 478385, 478499, 478613, 478727, 478841, 478955, 479069, 479451, 480009, 480163, 480317, 481035, 481149, 481377, 482331, 482691, 482931, 483573, 483813, 485983, 486103, 486265, 486427, 486589, 486751, 486871, 487153, 487315, 487555, 487835, 487997, 488399, 488679, 489037, 489199, 489437, 489599, 489719, 490481, 491843, 492005, 492167, 492287, 492407, 493211, 493451, 493613, 494015, 494297, 494579, 494699, 494937, 495415, 495697, 495859, 496021, 496421, 496541, 496661, 496781, 497021, 497141, 497261, 497621, 497741, 497861, 497981, 498101, 498221, 498341, 498743, 499331, 499493, 499655, 500411, 500531, 500771, 503236, 503578, 503806, 504416, 504644, 506704, 506818, 506972, 507126, 507280, 507434, 507548, 507816, 507970, 508198, 508464, 508618, 509000, 509266, 509606, 509760, 509986, 510140, 510254, 510978, 512272, 512426, 512580, 512694, 512808, 513572, 513800, 513954, 514336, 514604, 514872, 514986, 515212, 515666, 515934, 516088, 516242, 516622, 516736, 516850, 516964, 517192, 517306, 517420, 517762, 517876, 517990, 518104, 518218, 518332, 518446, 518828, 519386, 519540, 519694, 520412, 520526, 520754, 521708, 522068, 522308, 522950, 523190, 525360, 525480, 525642, 525804, 525966, 526128, 526248, 526530, 526692, 526932, 527212, 527374, 527776, 528056, 528414, 528576, 528814, 528976, 529096, 529858, 531220, 531382, 531544, 531664, 531784, 532588, 532828, 532990, 533392, 533674, 533956, 534076, 534314, 534792, 535074, 535236, 535398, 535798, 535918, 536038, 536158, 536398, 536518, 536638, 536998, 537118, 537238, 537358, 537478, 537598, 537718, 538120, 538708, 538870, 539032, 539788, 539908, 540148, 542613, 542955, 543183, 543793, 544021, 546081, 546195, 546349, 546503, 546657, 546811, 546925, 547193, 547347, 547575, 547841, 547995, 548377, 548643, 548983, 549137, 549363, 549517, 549631, 550355, 551649, 551803, 551957, 552071, 552185, 552949, 553177, 553331, 553713, 553981, 554249, 554363, 554589, 555043, 555311, 555465, 555619, 555999, 556113, 556227, 556341, 556569, 556683, 556797, 557139, 557253, 557367, 557481, 557595, 557709, 557823, 558205, 558763, 558917, 559071, 559789, 559903, 560131, 561085, 561445, 561685, 562327, 562567, 564737, 564857, 565019, 565181, 565343, 565505, 565625, 565907, 566069, 566309, 566589, 566751, 567153, 567433, 567791, 567953, 568191, 568353, 568473, 569235, 570597, 570759, 570921, 571041, 571161, 571965, 572205, 572367, 572769, 573051, 573333, 573453, 573691, 574169, 574451, 574613, 574775, 575175, 575295, 575415, 575535, 575775, 575895, 576015, 576375, 576495, 576615, 576735, 576855, 576975, 577095, 577497, 578085, 578247, 578409, 579165, 579285, 579525, 581990, 582332, 582560, 583170, 583398, 585458, 585572, 585726, 585880, 586034, 586188, 586302, 586570, 586724, 586952, 587218, 587372, 587754, 588020, 588360, 588514, 588740, 588894, 589008, 589732, 591026, 591180, 591334, 591448, 591562, 592326, 592554, 592708, 593090, 593358, 593626, 593740, 593966, 594420, 594688, 594842, 594996, 595376, 595490, 595604, 595718, 595946, 596060, 596174, 596516, 596630, 596744, 596858, 596972, 597086, 597200, 597582, 598140, 598294, 598448, 599166, 599280, 599508, 600462, 600822, 601062, 601704, 601944, 604114, 604234, 604396, 604558, 604720, 604882, 605002, 605284, 605446, 605686, 605966, 606128, 606530, 606810, 607168, 607330, 607568, 607730, 607850, 608612, 609974, 610136, 610298, 610418, 610538, 611342, 611582, 611744, 612146, 612428, 612710, 612830, 613068, 613546, 613828, 613990, 614152, 614552, 614672, 614792, 614912, 615152, 615272, 615392, 615752, 615872, 615992, 616112, 616232, 616352, 616472, 616874, 617462, 617624, 617786, 618542, 618662, 618902, 621367, 621709, 621937, 622547, 622775, 624835, 624949, 625103, 625257, 625411, 625565, 625679, 625947, 626101, 626329, 626595, 626749, 627131, 627397, 627737, 627891, 628117, 628271, 628385, 629109, 630403, 630557, 630711, 630825, 630939, 631703, 631931, 632085, 632467, 632735, 633003, 633117, 633343, 633797, 634065, 634219, 634373, 634753, 634867, 634981, 635095, 635323, 635437, 635551, 635893, 636007, 636121, 636235, 636349, 636463, 636577, 636959, 637517, 637671, 637825, 638543, 638657, 638885, 639839, 640199, 640439, 641081, 641321, 643491, 643611, 643773, 643935, 644097, 644259, 644379, 644661, 644823, 645063, 645343, 645505, 645907, 646187, 646545, 646707, 646945, 647107, 647227, 647989, 649351, 649513, 649675, 649795, 649915, 650719, 650959, 651121, 651523, 651805, 652087, 652207, 652445, 652923, 653205, 653367, 653529, 653929, 654049, 654169, 654289, 654529, 654649, 654769, 655129, 655249, 655369, 655489, 655609, 655729, 655849, 656251, 656839, 657001, 657163, 657919, 658039, 658279, 660744, 661086, 661314, 661924, 662152, 664212, 664326, 664480, 664634, 664788, 664942, 665056, 665324, 665478, 665706, 665972, 666126, 666508, 666774, 667114, 667268, 667494, 667648, 667762, 668486, 669780, 669934, 670088, 670202, 670316, 671080, 671308, 671462, 671844, 672112, 672380, 672494, 672720, 673174, 673442, 673596, 673750, 674130, 674244, 674358, 674472, 674700, 674814, 674928, 675270, 675384, 675498, 675612, 675726, 675840, 675954, 676336, 676894, 677048, 677202, 677920, 678034, 678262, 679153, 679486, 679708, 680302, 680524, 682529, 682640, 682790, 682940, 683090, 683240, 683351, 683612, 683762, 683984, 684243, 684393, 684765, 685024, 685355, 685505, 685725, 685875, 685986, 686691, 687951, 688101, 688251, 688362, 688473, 689217, 689439, 689589, 689961, 690222, 690483, 690594, 690814, 691256, 691517, 691667, 691817, 692187, 692298, 692409, 692520, 692742, 692853, 692964, 693297, 693408, 693519, 693630, 693741, 693852, 693963, 694335, 694878, 695028, 695178, 695877, 695988, 696210, 697383, 697815, 698103, 698873, 699161, 701771, 701915, 702109, 702303, 702497, 702691, 702835, 703173, 703367, 703655, 703991, 704185, 704667, 705003, 705433, 705627, 705913, 706107, 706251, 707165, 708799, 708993, 709187, 709331, 709475, 710439, 710727, 710921, 711403, 711741, 712079, 712223, 712509, 713083, 713421, 713615, 713809, 714289, 714433, 714577, 714721, 715009, 715153, 715297, 715729, 715873, 716017, 716161, 716305, 716449, 716593, 717075, 717783, 717977, 718171, 719079, 719223, 719511, 720663, 721095, 721383, 722153, 722441, 725051, 725195, 725389, 725583, 725777, 725971, 726115, 726453, 726647, 726935, 727271, 727465, 727947, 728283, 728713, 728907, 729193, 729387, 729531, 730445, 732079, 732273, 732467, 732611, 732755, 733719, 734007, 734201, 734683, 735021, 735359, 735503, 735789, 736363, 736701, 736895, 737089, 737569, 737713, 737857, 738001, 738289, 738433, 738577, 739009, 739153, 739297, 739441, 739585, 739729, 739873, 740355, 741063, 741257, 741451, 742359, 742503, 742791, 743964, 744405, 744699, 745485, 745779, 748444, 748591, 748789, 748987, 749185, 749383, 749530, 749875, 750073, 750367, 750710, 750908, 751400, 751743, 752182, 752380, 752672, 752870, 753017, 753950, 755618, 755816, 756014, 756161, 756308, 757292, 757586, 757784, 758276, 758621, 758966, 759113, 759405, 759991, 760336, 760534, 760732, 761222, 761369, 761516, 761663, 761957, 762104, 762251, 762692, 762839, 762986, 763133, 763280, 763427, 763574, 764066, 764789, 764987, 765185, 766112, 766259, 766553, 767708, 768140, 768428, 769198, 769486, 772096, 772240, 772434, 772628, 772822, 773016, 773160, 773498, 773692, 773980, 774316, 774510, 774992, 775328, 775758, 775952, 776238, 776432, 776576, 777490, 779124, 779318, 779512, 779656, 779800, 780764, 781052, 781246, 781728, 782066, 782404, 782548, 782834, 783408, 783746, 783940, 784134, 784614, 784758, 784902, 785046, 785334, 785478, 785622, 786054, 786198, 786342, 786486, 786630, 786774, 786918, 787400, 788108, 788302, 788496, 789404, 789548, 789836, 793055, 793487, 793775, 794545, 794833, 797443, 797587, 797781, 797975, 798169, 798363, 798507, 798845, 799039, 799327, 799663, 799857, 800339, 800675, 801105, 801299, 801585, 801779, 801923, 802837, 804471, 804665, 804859, 805003, 805147, 806111, 806399, 806593, 807075, 807413, 807751, 807895, 808181, 808755, 809093, 809287, 809481, 809961, 810105, 810249, 810393, 810681, 810825, 810969, 811401, 811545, 811689, 811833, 811977, 812121, 812265, 812747, 813455, 813649, 813843, 814751, 814895, 815183, 816335, 816767, 817055, 817825, 818113, 820723, 820867, 821061, 821255, 821449, 821643, 821787, 822125, 822319, 822607, 822943, 823137, 823619, 823955, 824385, 824579, 824865, 825059, 825203, 826117, 827751, 827945, 828139, 828283, 828427, 829391, 829679, 829873, 830355, 830693, 831031, 831175, 831461, 832035, 832373, 832567, 832761, 833241, 833385, 833529, 833673, 833961, 834105, 834249, 834681, 834825, 834969, 835113, 835257, 835401, 835545, 836027, 836735, 836929, 837123, 838031, 838175, 838463, 839615, 840047, 840335, 841105, 841393, 844003, 844147, 844341, 844535, 844729, 844923, 845067, 845405, 845599, 845887, 846223, 846417, 846899, 847235, 847665, 847859, 848145, 848339, 848483, 849397, 851031, 851225, 851419, 851563, 851707, 852671, 852959, 853153, 853635, 853973, 854311, 854455, 854741, 855315, 855653, 855847, 856041, 856521, 856665, 856809, 856953, 857241, 857385, 857529, 857961, 858105, 858249, 858393, 858537, 858681, 858825, 859307, 860015, 860209, 860403, 861311, 861455, 861743, 862895, 863327, 863615, 864385, 864673, 867283, 867427, 867621, 867815, 868009, 868203, 868347, 868685, 868879, 869167, 869503, 869697, 870179, 870515, 870945, 871139, 871425, 871619, 871763, 872677, 874311, 874505, 874699, 874843, 874987, 875951, 876239, 876433, 876915, 877253, 877591, 877735, 878021, 878595, 878933, 879127, 879321, 879801, 879945, 880089, 880233, 880521, 880665, 880809, 881241, 881385, 881529, 881673, 881817, 881961, 882105, 882587, 883295, 883489, 883683, 884591, 884735, 885023, 886175, 886607, 886895, 887665, 887953, 890563, 890707, 890901, 891095, 891289, 891483, 891627, 891965, 892159, 892447, 892783, 892977, 893459, 893795, 894225, 894419, 894705, 894899, 895043, 895957, 897591, 897785, 897979, 898123, 898267, 899231, 899519, 899713, 900195, 900533, 900871, 901015, 901301, 901875, 902213, 902407, 902601, 903081, 903225, 903369, 903513, 903801, 903945, 904089, 904521, 904665, 904809, 904953, 905097, 905241, 905385, 905867, 906575, 906769, 906963, 907871, 908015, 908303, 909476, 909917, 910211, 910997, 911291, 913956, 914103, 914301, 914499, 914697, 914895, 915042, 915387, 915585, 915879, 916222, 916420, 916912, 917255, 917694, 917892, 918184, 918382, 918529, 919462, 921130, 921328, 921526, 921673, 921820, 922804, 923098, 923296, 923788, 924133, 924478, 924625, 924917, 925503, 925848, 926046, 926244, 926734, 926881, 927028, 927175, 927469, 927616, 927763, 928204, 928351, 928498, 928645, 928792, 928939, 929086, 929578, 930301, 930499, 930697, 931624, 931771, 932065, 933241, 933682, 933976, 934762, 935056, 937721, 937868, 938066, 938264, 938462, 938660, 938807, 939152, 939350, 939644, 939987, 940185, 940677, 941020, 941459, 941657, 941949, 942147, 942294, 943227, 944895, 945093, 945291, 945438, 945585, 946569, 946863, 947061, 947553, 947898, 948243, 948390, 948682, 949268, 949613, 949811, 950009, 950499, 950646, 950793, 950940, 951234, 951381, 951528, 951969, 952116, 952263, 952410, 952557, 952704, 952851, 953343, 954066, 954264, 954462, 955389, 955536, 955830, 970547, 970979, 971267, 972037, 972325, 974935, 975079, 975273, 975467, 975661, 975855, 975999, 976337, 976531, 976819, 977155, 977349, 977831, 978167, 978597, 978791, 979077, 979271, 979415, 980329, 981963, 982157, 982351, 982495, 982639, 983603, 983891, 984085, 984567, 984905, 985243, 985387, 985673, 986247, 986585, 986779, 986973, 987453, 987597, 987741, 987885, 988173, 988317, 988461, 988893, 989037, 989181, 989325, 989469, 989613, 989757, 990239, 990947, 991141, 991335, 992243, 992387, 992675, 993827, 994259, 994547, 995317, 995605, 998215, 998359, 998553, 998747, 998941, 999135, 999279, 999617, 999811, 1000099, 1000435, 1000629, 1001111, 1001447, 1001877, 1002071, 1002357, 1002551, 1002695, 1003609, 1005243, 1005437, 1005631, 1005775, 1005919, 1006883, 1007171, 1007365, 1007847, 1008185, 1008523, 1008667, 1008953, 1009527, 1009865, 1010059, 1010253, 1010733, 1010877, 1011021, 1011165, 1011453, 1011597, 1011741, 1012173, 1012317, 1012461, 1012605, 1012749, 1012893, 1013037, 1013519, 1014227, 1014421, 1014615, 1015523, 1015667, 1015955, 1017107, 1017539, 1017827, 1018597, 1018885, 1021495, 1021639, 1021833, 1022027, 1022221, 1022415, 1022559, 1022897, 1023091, 1023379, 1023715, 1023909, 1024391, 1024727, 1025157, 1025351, 1025637, 1025831, 1025975, 1026889, 1028523, 1028717, 1028911, 1029055, 1029199, 1030163, 1030451, 1030645, 1031127, 1031465, 1031803, 1031947, 1032233, 1032807, 1033145, 1033339, 1033533, 1034013, 1034157, 1034301, 1034445, 1034733, 1034877, 1035021, 1035453, 1035597, 1035741, 1035885, 1036029, 1036173, 1036317, 1036799, 1037507, 1037701, 1037895, 1038803, 1038947, 1039235, 1040387, 1040819, 1041107, 1041877, 1042165, 1044775, 1044919, 1045113, 1045307, 1045501, 1045695, 1045839, 1046177, 1046371, 1046659, 1046995, 1047189, 1047671, 1048007, 1048437, 1048631, 1048917, 1049111, 1049255, 1050169, 1051803, 1051997, 1052191, 1052335, 1052479, 1053443, 1053731, 1053925, 1054407, 1054745, 1055083, 1055227, 1055513, 1056087, 1056425, 1056619, 1056813, 1057293, 1057437, 1057581, 1057725, 1058013, 1058157, 1058301, 1058733, 1058877, 1059021, 1059165, 1059309, 1059453, 1059597, 1060079, 1060787, 1060981, 1061175, 1062083, 1062227, 1062515, 1063667, 1064099, 1064387, 1065157, 1065445, 1068055, 1068199, 1068393, 1068587, 1068781, 1068975, 1069119, 1069457, 1069651, 1069939, 1070275, 1070469, 1070951, 1071287, 1071717, 1071911, 1072197, 1072391, 1072535, 1073449, 1075083, 1075277, 1075471, 1075615, 1075759, 1076723, 1077011, 1077205, 1077687, 1078025, 1078363, 1078507, 1078793, 1079367, 1079705, 1079899, 1080093, 1080573, 1080717, 1080861, 1081005, 1081293, 1081437, 1081581, 1082013, 1082157, 1082301, 1082445, 1082589, 1082733, 1082877, 1083359, 1084067, 1084261, 1084455, 1085363, 1085507, 1085795, 1086947, 1087379, 1087667, 1088437, 1088725, 1091335, 1091479, 1091673, 1091867, 1092061, 1092255, 1092399, 1092737, 1092931, 1093219, 1093555, 1093749, 1094231, 1094567, 1094997, 1095191, 1095477, 1095671, 1095815, 1096729, 1098363, 1098557, 1098751, 1098895, 1099039, 1100003, 1100291, 1100485, 1100967, 1101305, 1101643, 1101787, 1102073, 1102647, 1102985, 1103179, 1103373, 1103853, 1103997, 1104141, 1104285, 1104573, 1104717, 1104861, 1105293, 1105437, 1105581, 1105725, 1105869, 1106013, 1106157, 1106639, 1107347, 1107541, 1107735, 1108643, 1108787, 1109075, 1110227, 1110659, 1110947, 1111717, 1112005, 1114615, 1114759, 1114953, 1115147, 1115341, 1115535, 1115679, 1116017, 1116211, 1116499, 1116835, 1117029, 1117511, 1117847, 1118277, 1118471, 1118757, 1118951, 1119095, 1120009, 1121643, 1121837, 1122031, 1122175, 1122319, 1123283, 1123571, 1123765, 1124247, 1124585, 1124923, 1125067, 1125353, 1125927, 1126265, 1126459, 1126653, 1127133, 1127277, 1127421, 1127565, 1127853, 1127997, 1128141, 1128573, 1128717, 1128861, 1129005, 1129149, 1129293, 1129437, 1129919, 1130627, 1130821, 1131015, 1131923, 1132067, 1132355, 1133528, 1133969, 1134263, 1135049, 1135343, 1138008, 1138155, 1138353, 1138551, 1138749, 1138947, 1139094, 1139439, 1139637, 1139931, 1140274, 1140472, 1140964, 1141307, 1141746, 1141944, 1142236, 1142434, 1142581, 1143514, 1145182, 1145380, 1145578, 1145725, 1145872, 1146856, 1147150, 1147348, 1147840, 1148185, 1148530, 1148677, 1148969, 1149555, 1149900, 1150098, 1150296, 1150786, 1150933, 1151080, 1151227, 1151521, 1151668, 1151815, 1152256, 1152403, 1152550, 1152697, 1152844, 1152991, 1153138, 1153630, 1154353, 1154551, 1154749, 1155676, 1155823, 1156117, 1159379, 1159811, 1160099, 1160869, 1161157, 1163767, 1163911, 1164105, 1164299, 1164493, 1164687, 1164831, 1165169, 1165363, 1165651, 1165987, 1166181, 1166663, 1166999, 1167429, 1167623, 1167909, 1168103, 1168247, 1169161, 1170795, 1170989, 1171183, 1171327, 1171471, 1172435, 1172723, 1172917, 1173399, 1173737, 1174075, 1174219, 1174505, 1175079, 1175417, 1175611, 1175805, 1176285, 1176429, 1176573, 1176717, 1177005, 1177149, 1177293, 1177725, 1177869, 1178013, 1178157, 1178301, 1178445, 1178589, 1179071, 1179779, 1179973, 1180167, 1181075, 1181219, 1181507, 1182659, 1183091, 1183379, 1184149, 1184437, 1187047, 1187191, 1187385, 1187579, 1187773, 1187967, 1188111, 1188449, 1188643, 1188931, 1189267, 1189461, 1189943, 1190279, 1190709, 1190903, 1191189, 1191383, 1191527, 1192441, 1194075, 1194269, 1194463, 1194607, 1194751, 1195715, 1196003, 1196197, 1196679, 1197017, 1197355, 1197499, 1197785, 1198359, 1198697, 1198891, 1199085, 1199565, 1199709, 1199853, 1199997, 1200285, 1200429, 1200573, 1201005, 1201149, 1201293, 1201437, 1201581, 1201725, 1201869, 1202351, 1203059, 1203253, 1203447, 1204355, 1204499, 1204787, 1205939, 1206371, 1206659, 1207429, 1207717, 1210327, 1210471, 1210665, 1210859, 1211053, 1211247, 1211391, 1211729, 1211923, 1212211, 1212547, 1212741, 1213223, 1213559, 1213989, 1214183, 1214469, 1214663, 1214807, 1215721, 1217355, 1217549, 1217743, 1217887, 1218031, 1218995, 1219283, 1219477, 1219959, 1220297, 1220635, 1220779, 1221065, 1221639, 1221977, 1222171, 1222365, 1222845, 1222989, 1223133, 1223277, 1223565, 1223709, 1223853, 1224285, 1224429, 1224573, 1224717, 1224861, 1225005, 1225149, 1225631, 1226339, 1226533, 1226727, 1227635, 1227779, 1228067, 1229009, 1229351, 1229579, 1230189, 1230417, 1232477, 1232591, 1232745, 1232899, 1233053, 1233207, 1233321, 1233589, 1233743, 1233971, 1234237, 1234391, 1234773, 1235039, 1235379, 1235533, 1235759, 1235913, 1236027, 1236751, 1238045, 1238199, 1238353, 1238467, 1238581, 1239345, 1239573, 1239727, 1240109, 1240377, 1240645, 1240759, 1240985, 1241439, 1241707, 1241861, 1242015, 1242395, 1242509, 1242623, 1242737, 1242965, 1243079, 1243193, 1243535, 1243649, 1243763, 1243877, 1243991, 1244105, 1244219, 1244601, 1245159, 1245313, 1245467, 1246185, 1246299, 1246527, 1247439, 1247781, 1248009, 1248619, 1248847, 1250907, 1251021, 1251175, 1251329, 1251483, 1251637, 1251751, 1252019, 1252173, 1252401, 1252667, 1252821, 1253203, 1253469, 1253809, 1253963, 1254189, 1254343, 1254457, 1255181, 1256475, 1256629, 1256783, 1256897, 1257011, 1257775, 1258003, 1258157, 1258539, 1258807, 1259075, 1259189, 1259415, 1259869, 1260137, 1260291, 1260445, 1260825, 1260939, 1261053, 1261167, 1261395, 1261509, 1261623, 1261965, 1262079, 1262193, 1262307, 1262421, 1262535, 1262649, 1263031, 1263589, 1263743, 1263897, 1264615, 1264729, 1264957, 1265869, 1266211, 1266439, 1267049, 1267277, 1269337, 1269451, 1269605, 1269759, 1269913, 1270067, 1270181, 1270449, 1270603, 1270831, 1271097, 1271251, 1271633, 1271899, 1272239, 1272393, 1272619, 1272773, 1272887, 1273611, 1274905, 1275059, 1275213, 1275327, 1275441, 1276205, 1276433, 1276587, 1276969, 1277237, 1277505, 1277619, 1277845, 1278299, 1278567, 1278721, 1278875, 1279255, 1279369, 1279483, 1279597, 1279825, 1279939, 1280053, 1280395, 1280509, 1280623, 1280737, 1280851, 1280965, 1281079, 1281461, 1282019, 1282173, 1282327, 1283045, 1283159, 1283387, 1284299, 1284641, 1284869, 1285479, 1285707, 1287767, 1287881, 1288035, 1288189, 1288343, 1288497, 1288611, 1288879, 1289033, 1289261, 1289527, 1289681, 1290063, 1290329, 1290669, 1290823, 1291049, 1291203, 1291317, 1292041, 1293335, 1293489, 1293643, 1293757, 1293871, 1294635, 1294863, 1295017, 1295399, 1295667, 1295935, 1296049, 1296275, 1296729, 1296997, 1297151, 1297305, 1297685, 1297799, 1297913, 1298027, 1298255, 1298369, 1298483, 1298825, 1298939, 1299053, 1299167, 1299281, 1299395, 1299509, 1299891, 1300449, 1300603, 1300757, 1301475, 1301589, 1301817, 1302729, 1303071, 1303299, 1303909, 1304137, 1306197, 1306311, 1306465, 1306619, 1306773, 1306927, 1307041, 1307309, 1307463, 1307691, 1307957, 1308111, 1308493, 1308759, 1309099, 1309253, 1309479, 1309633, 1309747, 1310471, 1311765, 1311919, 1312073, 1312187, 1312301, 1313065, 1313293, 1313447, 1313829, 1314097, 1314365, 1314479, 1314705, 1315159, 1315427, 1315581, 1315735, 1316115, 1316229, 1316343, 1316457, 1316685, 1316799, 1316913, 1317255, 1317369, 1317483, 1317597, 1317711, 1317825, 1317939, 1318321, 1318879, 1319033, 1319187, 1319905, 1320019, 1320247, 1321159, 1321501, 1321729, 1322339, 1322567, 1324627, 1324741, 1324895, 1325049, 1325203, 1325357, 1325471, 1325739, 1325893, 1326121, 1326387, 1326541, 1326923, 1327189, 1327529, 1327683, 1327909, 1328063, 1328177, 1328901, 1330195, 1330349, 1330503, 1330617, 1330731, 1331495, 1331723, 1331877, 1332259, 1332527, 1332795, 1332909, 1333135, 1333589, 1333857, 1334011, 1334165, 1334545, 1334659, 1334773, 1334887, 1335115, 1335229, 1335343, 1335685, 1335799, 1335913, 1336027, 1336141, 1336255, 1336369, 1336751, 1337309, 1337463, 1337617, 1338335, 1338449, 1338677, 1339631, 1339991, 1340231, 1340873, 1341113, 1343283, 1343403, 1343565, 1343727, 1343889, 1344051, 1344171, 1344453, 1344615, 1344855, 1345135, 1345297, 1345699, 1345979, 1346337, 1346499, 1346737, 1346899, 1347019, 1347781, 1349143, 1349305, 1349467, 1349587, 1349707, 1350511, 1350751, 1350913, 1351315, 1351597, 1351879, 1351999, 1352237, 1352715, 1352997, 1353159, 1353321, 1353721, 1353841, 1353961, 1354081, 1354321, 1354441, 1354561, 1354921, 1355041, 1355161, 1355281, 1355401, 1355521, 1355641, 1356043, 1356631, 1356793, 1356955, 1357711, 1357831, 1358071, 1360536, 1360878, 1361106, 1361716, 1361944, 1364004, 1364118, 1364272, 1364426, 1364580, 1364734, 1364848, 1365116, 1365270, 1365498, 1365764, 1365918, 1366300, 1366566, 1366906, 1367060, 1367286, 1367440, 1367554, 1368278, 1369572, 1369726, 1369880, 1369994, 1370108, 1370872, 1371100, 1371254, 1371636, 1371904, 1372172, 1372286, 1372512, 1372966, 1373234, 1373388, 1373542, 1373922, 1374036, 1374150, 1374264, 1374492, 1374606, 1374720, 1375062, 1375176, 1375290, 1375404, 1375518, 1375632, 1375746, 1376128, 1376686, 1376840, 1376994, 1377712, 1377826, 1378054, 1379008, 1379368, 1379608, 1380250, 1380490, 1382660, 1382780, 1382942, 1383104, 1383266, 1383428, 1383548, 1383830, 1383992, 1384232, 1384512, 1384674, 1385076, 1385356, 1385714, 1385876, 1386114, 1386276, 1386396, 1387158, 1388520, 1388682, 1388844, 1388964, 1389084, 1389888, 1390128, 1390290, 1390692, 1390974, 1391256, 1391376, 1391614, 1392092, 1392374, 1392536, 1392698, 1393098, 1393218, 1393338, 1393458, 1393698, 1393818, 1393938, 1394298, 1394418, 1394538, 1394658, 1394778, 1394898, 1395018, 1395420, 1396008, 1396170, 1396332, 1397088, 1397208, 1397448, 1399913, 1400255, 1400483, 1401093, 1401321, 1403381, 1403495, 1403649, 1403803, 1403957, 1404111, 1404225, 1404493, 1404647, 1404875, 1405141, 1405295, 1405677, 1405943, 1406283, 1406437, 1406663, 1406817, 1406931, 1407655, 1408949, 1409103, 1409257, 1409371, 1409485, 1410249, 1410477, 1410631, 1411013, 1411281, 1411549, 1411663, 1411889, 1412343, 1412611, 1412765, 1412919, 1413299, 1413413, 1413527, 1413641, 1413869, 1413983, 1414097, 1414439, 1414553, 1414667, 1414781, 1414895, 1415009, 1415123, 1415505, 1416063, 1416217, 1416371, 1417089, 1417203, 1417431, 1418322, 1418655, 1418877, 1419471, 1419693, 1421698, 1421809, 1421959, 1422109, 1422259, 1422409, 1422520, 1422781, 1422931, 1423153, 1423412, 1423562, 1423934, 1424193, 1424524, 1424674, 1424894, 1425044, 1425155, 1425860, 1427120, 1427270, 1427420, 1427531, 1427642, 1428386, 1428608, 1428758, 1429130, 1429391, 1429652, 1429763, 1429983, 1430425, 1430686, 1430836, 1430986, 1431356, 1431467, 1431578, 1431689, 1431911, 1432022, 1432133, 1432466, 1432577, 1432688, 1432799, 1432910, 1433021, 1433132, 1433504, 1434047, 1434197, 1434347, 1435046, 1435157, 1435379, 1436342, 1436684, 1436912, 1437522, 1437750, 1439810, 1439924, 1440078, 1440232, 1440386, 1440540, 1440654, 1440922, 1441076, 1441304, 1441570, 1441724, 1442106, 1442372, 1442712, 1442866, 1443092, 1443246, 1443360, 1444084, 1445378, 1445532, 1445686, 1445800, 1445914, 1446678, 1446906, 1447060, 1447442, 1447710, 1447978, 1448092, 1448318, 1448772, 1449040, 1449194, 1449348, 1449728, 1449842, 1449956, 1450070, 1450298, 1450412, 1450526, 1450868, 1450982, 1451096, 1451210, 1451324, 1451438, 1451552, 1451934, 1452492, 1452646, 1452800, 1453518, 1453632, 1453860, 1454814, 1455174, 1455414, 1456056, 1456296, 1458466, 1458586, 1458748, 1458910, 1459072, 1459234, 1459354, 1459636, 1459798, 1460038, 1460318, 1460480, 1460882, 1461162, 1461520, 1461682, 1461920, 1462082, 1462202, 1462964, 1464326, 1464488, 1464650, 1464770, 1464890, 1465694, 1465934, 1466096, 1466498, 1466780, 1467062, 1467182, 1467420, 1467898, 1468180, 1468342, 1468504, 1468904, 1469024, 1469144, 1469264, 1469504, 1469624, 1469744, 1470104, 1470224, 1470344, 1470464, 1470584, 1470704, 1470824, 1471226, 1471814, 1471976, 1472138, 1472894, 1473014, 1473254, 1481226, 1481568, 1481796, 1482406, 1482634, 1484694, 1484808, 1484962, 1485116, 1485270, 1485424, 1485538, 1485806, 1485960, 1486188, 1486454, 1486608, 1486990, 1487256, 1487596, 1487750, 1487976, 1488130, 1488244, 1488968, 1490262, 1490416, 1490570, 1490684, 1490798, 1491562, 1491790, 1491944, 1492326, 1492594, 1492862, 1492976, 1493202, 1493656, 1493924, 1494078, 1494232, 1494612, 1494726, 1494840, 1494954, 1495182, 1495296, 1495410, 1495752, 1495866, 1495980, 1496094, 1496208, 1496322, 1496436, 1496818, 1497376, 1497530, 1497684, 1498402, 1498516, 1498744, 1499698, 1500058, 1500298, 1500940, 1501180, 1503350, 1503470, 1503632, 1503794, 1503956, 1504118, 1504238, 1504520, 1504682, 1504922, 1505202, 1505364, 1505766, 1506046, 1506404, 1506566, 1506804, 1506966, 1507086, 1507848, 1509210, 1509372, 1509534, 1509654, 1509774, 1510578, 1510818, 1510980, 1511382, 1511664, 1511946, 1512066, 1512304, 1512782, 1513064, 1513226, 1513388, 1513788, 1513908, 1514028, 1514148, 1514388, 1514508, 1514628, 1514988, 1515108, 1515228, 1515348, 1515468, 1515588, 1515708, 1516110, 1516698, 1516860, 1517022, 1517778, 1517898, 1518138, 1531107, 1531449, 1531677, 1532287, 1532515, 1534575, 1534689, 1534843, 1534997, 1535151, 1535305, 1535419, 1535687, 1535841, 1536069, 1536335, 1536489, 1536871, 1537137, 1537477, 1537631, 1537857, 1538011, 1538125, 1538849, 1540143, 1540297, 1540451, 1540565, 1540679, 1541443, 1541671, 1541825, 1542207, 1542475, 1542743, 1542857, 1543083, 1543537, 1543805, 1543959, 1544113, 1544493, 1544607, 1544721, 1544835, 1545063, 1545177, 1545291, 1545633, 1545747, 1545861, 1545975, 1546089, 1546203, 1546317, 1546699, 1547257, 1547411, 1547565, 1548283, 1548397, 1548625, 1549579, 1549939, 1550179, 1550821, 1551061, 1553231, 1553351, 1553513, 1553675, 1553837, 1553999, 1554119, 1554401, 1554563, 1554803, 1555083, 1555245, 1555647, 1555927, 1556285, 1556447, 1556685, 1556847, 1556967, 1557729, 1559091, 1559253, 1559415, 1559535, 1559655, 1560459, 1560699, 1560861, 1561263, 1561545, 1561827, 1561947, 1562185, 1562663, 1562945, 1563107, 1563269, 1563669, 1563789, 1563909, 1564029, 1564269, 1564389, 1564509, 1564869, 1564989, 1565109, 1565229, 1565349, 1565469, 1565589, 1565991, 1566579, 1566741, 1566903, 1567659, 1567779, 1568019, 1568937, 1569279, 1569507, 1570117, 1570345, 1572405, 1572519, 1572673, 1572827, 1572981, 1573135, 1573249, 1573517, 1573671, 1573899, 1574165, 1574319, 1574701, 1574967, 1575307, 1575461, 1575687, 1575841, 1575955, 1576679, 1577973, 1578127, 1578281, 1578395, 1578509, 1579273, 1579501, 1579655, 1580037, 1580305, 1580573, 1580687, 1580913, 1581367, 1581635, 1581789, 1581943, 1582323, 1582437, 1582551, 1582665, 1582893, 1583007, 1583121, 1583463, 1583577, 1583691, 1583805, 1583919, 1584033, 1584147, 1584529, 1585087, 1585241, 1585395, 1586113, 1586227, 1586455, 1587367, 1587709, 1587937, 1588547, 1588775, 1590835, 1590949, 1591103, 1591257, 1591411, 1591565, 1591679, 1591947, 1592101, 1592329, 1592595, 1592749, 1593131, 1593397, 1593737, 1593891, 1594117, 1594271, 1594385, 1595109, 1596403, 1596557, 1596711, 1596825, 1596939, 1597703, 1597931, 1598085, 1598467, 1598735, 1599003, 1599117, 1599343, 1599797, 1600065, 1600219, 1600373, 1600753, 1600867, 1600981, 1601095, 1601323, 1601437, 1601551, 1601893, 1602007, 1602121, 1602235, 1602349, 1602463, 1602577, 1602959, 1603517, 1603671, 1603825, 1604543, 1604657, 1604885, 1605839, 1606199, 1606439, 1607081, 1607321, 1609491, 1609611, 1609773, 1609935, 1610097, 1610259, 1610379, 1610661, 1610823, 1611063, 1611343, 1611505, 1611907, 1612187, 1612545, 1612707, 1612945, 1613107, 1613227, 1613989, 1615351, 1615513, 1615675, 1615795, 1615915, 1616719, 1616959, 1617121, 1617523, 1617805, 1618087, 1618207, 1618445, 1618923, 1619205, 1619367, 1619529, 1619929, 1620049, 1620169, 1620289, 1620529, 1620649, 1620769, 1621129, 1621249, 1621369, 1621489, 1621609, 1621729, 1621849, 1622251, 1622839, 1623001, 1623163, 1623919, 1624039, 1624279, 1625197, 1625539, 1625767, 1626377, 1626605, 1628665, 1628779, 1628933, 1629087, 1629241, 1629395, 1629509, 1629777, 1629931, 1630159, 1630425, 1630579, 1630961, 1631227, 1631567, 1631721, 1631947, 1632101, 1632215, 1632939, 1634233, 1634387, 1634541, 1634655, 1634769, 1635533, 1635761, 1635915, 1636297, 1636565, 1636833, 1636947, 1637173, 1637627, 1637895, 1638049, 1638203, 1638583, 1638697, 1638811, 1638925, 1639153, 1639267, 1639381, 1639723, 1639837, 1639951, 1640065, 1640179, 1640293, 1640407, 1640789, 1641347, 1641501, 1641655, 1642373, 1642487, 1642715, 1643627, 1643969, 1644197, 1644807, 1645035, 1647095, 1647209, 1647363, 1647517, 1647671, 1647825, 1647939, 1648207, 1648361, 1648589, 1648855, 1649009, 1649391, 1649657, 1649997, 1650151, 1650377, 1650531, 1650645, 1651369, 1652663, 1652817, 1652971, 1653085, 1653199, 1653963, 1654191, 1654345, 1654727, 1654995, 1655263, 1655377, 1655603, 1656057, 1656325, 1656479, 1656633, 1657013, 1657127, 1657241, 1657355, 1657583, 1657697, 1657811, 1658153, 1658267, 1658381, 1658495, 1658609, 1658723, 1658837, 1659219, 1659777, 1659931, 1660085, 1660803, 1660917, 1661145, 1662099, 1662459, 1662699, 1663341, 1663581, 1665751, 1665871, 1666033, 1666195, 1666357, 1666519, 1666639, 1666921, 1667083, 1667323, 1667603, 1667765, 1668167, 1668447, 1668805, 1668967, 1669205, 1669367, 1669487, 1670249, 1671611, 1671773, 1671935, 1672055, 1672175, 1672979, 1673219, 1673381, 1673783, 1674065, 1674347, 1674467, 1674705, 1675183, 1675465, 1675627, 1675789, 1676189, 1676309, 1676429, 1676549, 1676789, 1676909, 1677029, 1677389, 1677509, 1677629, 1677749, 1677869, 1677989, 1678109, 1678511, 1679099, 1679261, 1679423, 1680179, 1680299, 1680539, 1683438, 1683780, 1684008, 1684618, 1684846, 1686906, 1687020, 1687174, 1687328, 1687482, 1687636, 1687750, 1688018, 1688172, 1688400, 1688666, 1688820, 1689202, 1689468, 1689808, 1689962, 1690188, 1690342, 1690456, 1691180, 1692474, 1692628, 1692782, 1692896, 1693010, 1693774, 1694002, 1694156, 1694538, 1694806, 1695074, 1695188, 1695414, 1695868, 1696136, 1696290, 1696444, 1696824, 1696938, 1697052, 1697166, 1697394, 1697508, 1697622, 1697964, 1698078, 1698192, 1698306, 1698420, 1698534, 1698648, 1699030, 1699588, 1699742, 1699896, 1700614, 1700728, 1700956, 1713626, 1713968, 1714196, 1714806, 1715034, 1717094, 1717208, 1717362, 1717516, 1717670, 1717824, 1717938, 1718206, 1718360, 1718588, 1718854, 1719008, 1719390, 1719656, 1719996, 1720150, 1720376, 1720530, 1720644, 1721368, 1722662, 1722816, 1722970, 1723084, 1723198, 1723962, 1724190, 1724344, 1724726, 1724994, 1725262, 1725376, 1725602, 1726056, 1726324, 1726478, 1726632, 1727012, 1727126, 1727240, 1727354, 1727582, 1727696, 1727810, 1728152, 1728266, 1728380, 1728494, 1728608, 1728722, 1728836, 1729218, 1729776, 1729930, 1730084, 1730802, 1730916, 1731144, 1732035, 1732368, 1732590, 1733184, 1733406, 1735411, 1735522, 1735672, 1735822, 1735972, 1736122, 1736233, 1736494, 1736644, 1736866, 1737125, 1737275, 1737647, 1737906, 1738237, 1738387, 1738607, 1738757, 1738868, 1739573, 1740833, 1740983, 1741133, 1741244, 1741355, 1742099, 1742321, 1742471, 1742843, 1743104, 1743365, 1743476, 1743696, 1744138, 1744399, 1744549, 1744699, 1745069, 1745180, 1745291, 1745402, 1745624, 1745735, 1745846, 1746179, 1746290, 1746401, 1746512, 1746623, 1746734, 1746845, 1747217, 1747760, 1747910, 1748060, 1748759, 1748870, 1749092, 1750001, 1750343, 1750571, 1751181, 1751409, 1753469, 1753583, 1753737, 1753891, 1754045, 1754199, 1754313, 1754581, 1754735, 1754963, 1755229, 1755383, 1755765, 1756031, 1756371, 1756525, 1756751, 1756905, 1757019, 1757743, 1759037, 1759191, 1759345, 1759459, 1759573, 1760337, 1760565, 1760719, 1761101, 1761369, 1761637, 1761751, 1761977, 1762431, 1762699, 1762853, 1763007, 1763387, 1763501, 1763615, 1763729, 1763957, 1764071, 1764185, 1764527, 1764641, 1764755, 1764869, 1764983, 1765097, 1765211, 1765593, 1766151, 1766305, 1766459, 1767177, 1767291, 1767519, 1768473, 1768833, 1769073, 1769715, 1769955, 1772125, 1772245, 1772407, 1772569, 1772731, 1772893, 1773013, 1773295, 1773457, 1773697, 1773977, 1774139, 1774541, 1774821, 1775179, 1775341, 1775579, 1775741, 1775861, 1776623, 1777985, 1778147, 1778309, 1778429, 1778549, 1779353, 1779593, 1779755, 1780157, 1780439, 1780721, 1780841, 1781079, 1781557, 1781839, 1782001, 1782163, 1782563, 1782683, 1782803, 1782923, 1783163, 1783283, 1783403, 1783763, 1783883, 1784003, 1784123, 1784243, 1784363, 1784483, 1784885, 1785473, 1785635, 1785797, 1786553, 1786673, 1786913, 1795023, 1795365, 1795593, 1796203, 1796431, 1798491, 1798605, 1798759, 1798913, 1799067, 1799221, 1799335, 1799603, 1799757, 1799985, 1800251, 1800405, 1800787, 1801053, 1801393, 1801547, 1801773, 1801927, 1802041, 1802765, 1804059, 1804213, 1804367, 1804481, 1804595, 1805359, 1805587, 1805741, 1806123, 1806391, 1806659, 1806773, 1806999, 1807453, 1807721, 1807875, 1808029, 1808409, 1808523, 1808637, 1808751, 1808979, 1809093, 1809207, 1809549, 1809663, 1809777, 1809891, 1810005, 1810119, 1810233, 1810615, 1811173, 1811327, 1811481, 1812199, 1812313, 1812541, 1813453, 1813795, 1814023, 1814633, 1814861, 1816921, 1817035, 1817189, 1817343, 1817497, 1817651, 1817765, 1818033, 1818187, 1818415, 1818681, 1818835, 1819217, 1819483, 1819823, 1819977, 1820203, 1820357, 1820471, 1821195, 1822489, 1822643, 1822797, 1822911, 1823025, 1823789, 1824017, 1824171, 1824553, 1824821, 1825089, 1825203, 1825429, 1825883, 1826151, 1826305, 1826459, 1826839, 1826953, 1827067, 1827181, 1827409, 1827523, 1827637, 1827979, 1828093, 1828207, 1828321, 1828435, 1828549, 1828663, 1829045, 1829603, 1829757, 1829911, 1830629, 1830743, 1830971, 1831925, 1832285, 1832525, 1833167, 1833407, 1835577, 1835697, 1835859, 1836021, 1836183, 1836345, 1836465, 1836747, 1836909, 1837149, 1837429, 1837591, 1837993, 1838273, 1838631, 1838793, 1839031, 1839193, 1839313, 1840075, 1841437, 1841599, 1841761, 1841881, 1842001, 1842805, 1843045, 1843207, 1843609, 1843891, 1844173, 1844293, 1844531, 1845009, 1845291, 1845453, 1845615, 1846015, 1846135, 1846255, 1846375, 1846615, 1846735, 1846855, 1847215, 1847335, 1847455, 1847575, 1847695, 1847815, 1847935, 1848337, 1848925, 1849087, 1849249, 1850005, 1850125, 1850365, 1851283, 1851625, 1851853, 1852463, 1852691, 1854751, 1854865, 1855019, 1855173, 1855327, 1855481, 1855595, 1855863, 1856017, 1856245, 1856511, 1856665, 1857047, 1857313, 1857653, 1857807, 1858033, 1858187, 1858301, 1859025, 1860319, 1860473, 1860627, 1860741, 1860855, 1861619, 1861847, 1862001, 1862383, 1862651, 1862919, 1863033, 1863259, 1863713, 1863981, 1864135, 1864289, 1864669, 1864783, 1864897, 1865011, 1865239, 1865353, 1865467, 1865809, 1865923, 1866037, 1866151, 1866265, 1866379, 1866493, 1866875, 1867433, 1867587, 1867741, 1868459, 1868573, 1868801, 1869713, 1870055, 1870283, 1870893, 1871121, 1873181, 1873295, 1873449, 1873603, 1873757, 1873911, 1874025, 1874293, 1874447, 1874675, 1874941, 1875095, 1875477, 1875743, 1876083, 1876237, 1876463, 1876617, 1876731, 1877455, 1878749, 1878903, 1879057, 1879171, 1879285, 1880049, 1880277, 1880431, 1880813, 1881081, 1881349, 1881463, 1881689, 1882143, 1882411, 1882565, 1882719, 1883099, 1883213, 1883327, 1883441, 1883669, 1883783, 1883897, 1884239, 1884353, 1884467, 1884581, 1884695, 1884809, 1884923, 1885305, 1885863, 1886017, 1886171, 1886889, 1887003, 1887231, 1888143, 1888485, 1888713, 1889323, 1889551, 1891611, 1891725, 1891879, 1892033, 1892187, 1892341, 1892455, 1892723, 1892877, 1893105, 1893371, 1893525, 1893907, 1894173, 1894513, 1894667, 1894893, 1895047, 1895161, 1895885, 1897179, 1897333, 1897487, 1897601, 1897715, 1898479, 1898707, 1898861, 1899243, 1899511, 1899779, 1899893, 1900119, 1900573, 1900841, 1900995, 1901149, 1901529, 1901643, 1901757, 1901871, 1902099, 1902213, 1902327, 1902669, 1902783, 1902897, 1903011, 1903125, 1903239, 1903353, 1903735, 1904293, 1904447, 1904601, 1905319, 1905433, 1905661, 1906594, 1906945, 1907179, 1907805, 1908039, 1910154, 1910271, 1910429, 1910587, 1910745, 1910903, 1911020, 1911295, 1911453, 1911687, 1911960, 1912118, 1912510, 1912783, 1913132, 1913290, 1913522, 1913680, 1913797, 1914540, 1915868, 1916026, 1916184, 1916301, 1916418, 1917202, 1917436, 1917594, 1917986, 1918261, 1918536, 1918653, 1918885, 1919351, 1919626, 1919784, 1919942, 1920332, 1920449, 1920566, 1920683, 1920917, 1921034, 1921151, 1921502, 1921619, 1921736, 1921853, 1921970, 1922087, 1922204, 1922596, 1923169, 1923327, 1923485, 1924222, 1924339, 1924573, 1925488, 1925830, 1926058, 1926668, 1926896, 1928956, 1929070, 1929224, 1929378, 1929532, 1929686, 1929800, 1930068, 1930222, 1930450, 1930716, 1930870, 1931252, 1931518, 1931858, 1932012, 1932238, 1932392, 1932506, 1933230, 1934524, 1934678, 1934832, 1934946, 1935060, 1935824, 1936052, 1936206, 1936588, 1936856, 1937124, 1937238, 1937464, 1937918, 1938186, 1938340, 1938494, 1938874, 1938988, 1939102, 1939216, 1939444, 1939558, 1939672, 1940014, 1940128, 1940242, 1940356, 1940470, 1940584, 1940698, 1941080, 1941638, 1941792, 1941946, 1942664, 1942778, 1943006, 1943939, 1944290, 1944524, 1945150, 1945384, 1947499, 1947616, 1947774, 1947932, 1948090, 1948248, 1948365, 1948640, 1948798, 1949032, 1949305, 1949463, 1949855, 1950128, 1950477, 1950635, 1950867, 1951025, 1951142, 1951885, 1953213, 1953371, 1953529, 1953646, 1953763, 1954547, 1954781, 1954939, 1955331, 1955606, 1955881, 1955998, 1956230, 1956696, 1956971, 1957129, 1957287, 1957677, 1957794, 1957911, 1958028, 1958262, 1958379, 1958496, 1958847, 1958964, 1959081, 1959198, 1959315, 1959432, 1959549, 1959941, 1960514, 1960672, 1960830, 1961567, 1961684, 1961918, 1962833, 1963175, 1963403, 1964013, 1964241, 1966301, 1966415, 1966569, 1966723, 1966877, 1967031, 1967145, 1967413, 1967567, 1967795, 1968061, 1968215, 1968597, 1968863, 1969203, 1969357, 1969583, 1969737, 1969851, 1970575, 1971869, 1972023, 1972177, 1972291, 1972405, 1973169, 1973397, 1973551, 1973933, 1974201, 1974469, 1974583, 1974809, 1975263, 1975531, 1975685, 1975839, 1976219, 1976333, 1976447, 1976561, 1976789, 1976903, 1977017, 1977359, 1977473, 1977587, 1977701, 1977815, 1977929, 1978043, 1978425, 1978983, 1979137, 1979291, 1980009, 1980123, 1980351, 1981263, 1981605, 1981833, 1982443, 1982671, 1984731, 1984845, 1984999, 1985153, 1985307, 1985461, 1985575, 1985843, 1985997, 1986225, 1986491, 1986645, 1987027, 1987293, 1987633, 1987787, 1988013, 1988167, 1988281, 1989005, 1990299, 1990453, 1990607, 1990721, 1990835, 1991599, 1991827, 1991981, 1992363, 1992631, 1992899, 1993013, 1993239, 1993693, 1993961, 1994115, 1994269, 1994649, 1994763, 1994877, 1994991, 1995219, 1995333, 1995447, 1995789, 1995903, 1996017, 1996131, 1996245, 1996359, 1996473, 1996855, 1997413, 1997567, 1997721, 1998439, 1998553, 1998781, 1999714, 2000065, 2000299, 2000925, 2001159, 2003274, 2003391, 2003549, 2003707, 2003865, 2004023, 2004140, 2004415, 2004573, 2004807, 2005080, 2005238, 2005630, 2005903, 2006252, 2006410, 2006642, 2006800, 2006917, 2007660, 2008988, 2009146, 2009304, 2009421, 2009538, 2010322, 2010556, 2010714, 2011106, 2011381, 2011656, 2011773, 2012005, 2012471, 2012746, 2012904, 2013062, 2013452, 2013569, 2013686, 2013803, 2014037, 2014154, 2014271, 2014622, 2014739, 2014856, 2014973, 2015090, 2015207, 2015324, 2015716, 2016289, 2016447, 2016605, 2017342, 2017459, 2017693, 2018608, 2018950, 2019178, 2019788, 2020016, 2022076, 2022190, 2022344, 2022498, 2022652, 2022806, 2022920, 2023188, 2023342, 2023570, 2023836, 2023990, 2024372, 2024638, 2024978, 2025132, 2025358, 2025512, 2025626, 2026350, 2027644, 2027798, 2027952, 2028066, 2028180, 2028944, 2029172, 2029326, 2029708, 2029976, 2030244, 2030358, 2030584, 2031038, 2031306, 2031460, 2031614, 2031994, 2032108, 2032222, 2032336, 2032564, 2032678, 2032792, 2033134, 2033248, 2033362, 2033476, 2033590, 2033704, 2033818, 2034200, 2034758, 2034912, 2035066, 2035784, 2035898, 2036126, 2037080, 2037440, 2037680, 2038322, 2038562, 2040732, 2040852, 2041014, 2041176, 2041338, 2041500, 2041620, 2041902, 2042064, 2042304, 2042584, 2042746, 2043148, 2043428, 2043786, 2043948, 2044186, 2044348, 2044468, 2045230, 2046592, 2046754, 2046916, 2047036, 2047156, 2047960, 2048200, 2048362, 2048764, 2049046, 2049328, 2049448, 2049686, 2050164, 2050446, 2050608, 2050770, 2051170, 2051290, 2051410, 2051530, 2051770, 2051890, 2052010, 2052370, 2052490, 2052610, 2052730, 2052850, 2052970, 2053090, 2053492, 2054080, 2054242, 2054404, 2055160, 2055280, 2055520, 2056438, 2056780, 2057008, 2057618, 2057846, 2059906, 2060020, 2060174, 2060328, 2060482, 2060636, 2060750, 2061018, 2061172, 2061400, 2061666, 2061820, 2062202, 2062468, 2062808, 2062962, 2063188, 2063342, 2063456, 2064180, 2065474, 2065628, 2065782, 2065896, 2066010, 2066774, 2067002, 2067156, 2067538, 2067806, 2068074, 2068188, 2068414, 2068868, 2069136, 2069290, 2069444, 2069824, 2069938, 2070052, 2070166, 2070394, 2070508, 2070622, 2070964, 2071078, 2071192, 2071306, 2071420, 2071534, 2071648, 2072030, 2072588, 2072742, 2072896, 2073614, 2073728, 2073956, 2074868, 2075210, 2075438, 2076048, 2076276, 2078336, 2078450, 2078604, 2078758, 2078912, 2079066, 2079180, 2079448, 2079602, 2079830, 2080096, 2080250, 2080632, 2080898, 2081238, 2081392, 2081618, 2081772, 2081886, 2082610, 2083904, 2084058, 2084212, 2084326, 2084440, 2085204, 2085432, 2085586, 2085968, 2086236, 2086504, 2086618, 2086844, 2087298, 2087566, 2087720, 2087874, 2088254, 2088368, 2088482, 2088596, 2088824, 2088938, 2089052, 2089394, 2089508, 2089622, 2089736, 2089850, 2089964, 2090078, 2090460, 2091018, 2091172, 2091326, 2092044, 2092158, 2092386, 2093277, 2093610, 2093832, 2094426, 2094648, 2096653, 2096764, 2096914, 2097064, 2097214, 2097364, 2097475, 2097736, 2097886, 2098108, 2098367, 2098517, 2098889, 2099148, 2099479, 2099629, 2099849, 2099999, 2100110, 2100815, 2102075, 2102225, 2102375, 2102486, 2102597, 2103341, 2103563, 2103713, 2104085, 2104346, 2104607, 2104718, 2104938, 2105380, 2105641, 2105791, 2105941, 2106311, 2106422, 2106533, 2106644, 2106866, 2106977, 2107088, 2107421, 2107532, 2107643, 2107754, 2107865, 2107976, 2108087, 2108459, 2109002, 2109152, 2109302, 2110001, 2110112, 2110334, 2115201, 2115543, 2115771, 2116381, 2116609, 2118669, 2118783, 2118937, 2119091, 2119245, 2119399, 2119513, 2119781, 2119935, 2120163, 2120429, 2120583, 2120965, 2121231, 2121571, 2121725, 2121951, 2122105, 2122219, 2122943, 2124237, 2124391, 2124545, 2124659, 2124773, 2125537, 2125765, 2125919, 2126301, 2126569, 2126837, 2126951, 2127177, 2127631, 2127899, 2128053, 2128207, 2128587, 2128701, 2128815, 2128929, 2129157, 2129271, 2129385, 2129727, 2129841, 2129955, 2130069, 2130183, 2130297, 2130411, 2130793, 2131351, 2131505, 2131659, 2132377, 2132491, 2132719, 2133673, 2134033, 2134273, 2134915, 2135155, 2137325, 2137445, 2137607, 2137769, 2137931, 2138093, 2138213, 2138495, 2138657, 2138897, 2139177, 2139339, 2139741, 2140021, 2140379, 2140541, 2140779, 2140941, 2141061, 2141823, 2143185, 2143347, 2143509, 2143629, 2143749, 2144553, 2144793, 2144955, 2145357, 2145639, 2145921, 2146041, 2146279, 2146757, 2147039, 2147201, 2147363, 2147763, 2147883, 2148003, 2148123, 2148363, 2148483, 2148603, 2148963, 2149083, 2149203, 2149323, 2149443, 2149563, 2149683, 2150085, 2150673, 2150835, 2150997, 2151753, 2151873, 2152113, 2158069, 2158411, 2158639, 2159249, 2159477, 2161537, 2161651, 2161805, 2161959, 2162113, 2162267, 2162381, 2162649, 2162803, 2163031, 2163297, 2163451, 2163833, 2164099, 2164439, 2164593, 2164819, 2164973, 2165087, 2165811, 2167105, 2167259, 2167413, 2167527, 2167641, 2168405, 2168633, 2168787, 2169169, 2169437, 2169705, 2169819, 2170045, 2170499, 2170767, 2170921, 2171075, 2171455, 2171569, 2171683, 2171797, 2172025, 2172139, 2172253, 2172595, 2172709, 2172823, 2172937, 2173051, 2173165, 2173279, 2173661, 2174219, 2174373, 2174527, 2175245, 2175359, 2175587, 2176541, 2176901, 2177141, 2177783, 2178023, 2180193, 2180313, 2180475, 2180637, 2180799, 2180961, 2181081, 2181363, 2181525, 2181765, 2182045, 2182207, 2182609, 2182889, 2183247, 2183409, 2183647, 2183809, 2183929, 2184691, 2186053, 2186215, 2186377, 2186497, 2186617, 2187421, 2187661, 2187823, 2188225, 2188507, 2188789, 2188909, 2189147, 2189625, 2189907, 2190069, 2190231, 2190631, 2190751, 2190871, 2190991, 2191231, 2191351, 2191471, 2191831, 2191951, 2192071, 2192191, 2192311, 2192431, 2192551, 2192953, 2193541, 2193703, 2193865, 2194621, 2194741, 2194981, 2211277, 2211619, 2211847, 2212457, 2212685, 2214745, 2214859, 2215013, 2215167, 2215321, 2215475, 2215589, 2215857, 2216011, 2216239, 2216505, 2216659, 2217041, 2217307, 2217647, 2217801, 2218027, 2218181, 2218295, 2219019, 2220313, 2220467, 2220621, 2220735, 2220849, 2221613, 2221841, 2221995, 2222377, 2222645, 2222913, 2223027, 2223253, 2223707, 2223975, 2224129, 2224283, 2224663, 2224777, 2224891, 2225005, 2225233, 2225347, 2225461, 2225803, 2225917, 2226031, 2226145, 2226259, 2226373, 2226487, 2226869, 2227427, 2227581, 2227735, 2228453, 2228567, 2228795, 2229749, 2230109, 2230349, 2230991, 2231231, 2233401, 2233521, 2233683, 2233845, 2234007, 2234169, 2234289, 2234571, 2234733, 2234973, 2235253, 2235415, 2235817, 2236097, 2236455, 2236617, 2236855, 2237017, 2237137, 2237899, 2239261, 2239423, 2239585, 2239705, 2239825, 2240629, 2240869, 2241031, 2241433, 2241715, 2241997, 2242117, 2242355, 2242833, 2243115, 2243277, 2243439, 2243839, 2243959, 2244079, 2244199, 2244439, 2244559, 2244679, 2245039, 2245159, 2245279, 2245399, 2245519, 2245639, 2245759, 2246161, 2246749, 2246911, 2247073, 2247829, 2247949, 2248189, 2256245, 2256587, 2256815, 2257425, 2257653, 2259713, 2259827, 2259981, 2260135, 2260289, 2260443, 2260557, 2260825, 2260979, 2261207, 2261473, 2261627, 2262009, 2262275, 2262615, 2262769, 2262995, 2263149, 2263263, 2263987, 2265281, 2265435, 2265589, 2265703, 2265817, 2266581, 2266809, 2266963, 2267345, 2267613, 2267881, 2267995, 2268221, 2268675, 2268943, 2269097, 2269251, 2269631, 2269745, 2269859, 2269973, 2270201, 2270315, 2270429, 2270771, 2270885, 2270999, 2271113, 2271227, 2271341, 2271455, 2271837, 2272395, 2272549, 2272703, 2273421, 2273535, 2273763, 2274717, 2275077, 2275317, 2275959, 2276199, 2278369, 2278489, 2278651, 2278813, 2278975, 2279137, 2279257, 2279539, 2279701, 2279941, 2280221, 2280383, 2280785, 2281065, 2281423, 2281585, 2281823, 2281985, 2282105, 2282867, 2284229, 2284391, 2284553, 2284673, 2284793, 2285597, 2285837, 2285999, 2286401, 2286683, 2286965, 2287085, 2287323, 2287801, 2288083, 2288245, 2288407, 2288807, 2288927, 2289047, 2289167, 2289407, 2289527, 2289647, 2290007, 2290127, 2290247, 2290367, 2290487, 2290607, 2290727, 2291129, 2291717, 2291879, 2292041, 2292797, 2292917, 2293157, 2313805, 2314156, 2314390, 2315016, 2315250, 2317365, 2317482, 2317640, 2317798, 2317956, 2318114, 2318231, 2318506, 2318664, 2318898, 2319171, 2319329, 2319721, 2319994, 2320343, 2320501, 2320733, 2320891, 2321008, 2321751, 2323079, 2323237, 2323395, 2323512, 2323629, 2324413, 2324647, 2324805, 2325197, 2325472, 2325747, 2325864, 2326096, 2326562, 2326837, 2326995, 2327153, 2327543, 2327660, 2327777, 2327894, 2328128, 2328245, 2328362, 2328713, 2328830, 2328947, 2329064, 2329181, 2329298, 2329415, 2329807, 2330380, 2330538, 2330696, 2331433, 2331550, 2331784, 2332762, 2333131, 2333377, 2334035, 2334281, 2336506, 2336629, 2336795, 2336961, 2337127, 2337293, 2337416, 2337705, 2337871, 2338117, 2338404, 2338570, 2338982, 2339269, 2339636, 2339802, 2340046, 2340212, 2340335, 2341116, 2342512, 2342678, 2342844, 2342967, 2343090, 2343914, 2344160, 2344326, 2344738, 2345027, 2345316, 2345439, 2345683, 2346173, 2346462, 2346628, 2346794, 2347204, 2347327, 2347450, 2347573, 2347819, 2347942, 2348065, 2348434, 2348557, 2348680, 2348803, 2348926, 2349049, 2349172, 2349584, 2350187, 2350353, 2350519, 2351294, 2351417, 2351663, 2357425, 2357776, 2358010, 2358636, 2358870, 2360985, 2361102, 2361260, 2361418, 2361576, 2361734, 2361851, 2362126, 2362284, 2362518, 2362791, 2362949, 2363341, 2363614, 2363963, 2364121, 2364353, 2364511, 2364628, 2365371, 2366699, 2366857, 2367015, 2367132, 2367249, 2368033, 2368267, 2368425, 2368817, 2369092, 2369367, 2369484, 2369716, 2370182, 2370457, 2370615, 2370773, 2371163, 2371280, 2371397, 2371514, 2371748, 2371865, 2371982, 2372333, 2372450, 2372567, 2372684, 2372801, 2372918, 2373035, 2373427, 2374000, 2374158, 2374316, 2375053, 2375170, 2375404, 2376382, 2376751, 2376997, 2377655, 2377901, 2380126, 2380249, 2380415, 2380581, 2380747, 2380913, 2381036, 2381325, 2381491, 2381737, 2382024, 2382190, 2382602, 2382889, 2383256, 2383422, 2383666, 2383832, 2383955, 2384736, 2386132, 2386298, 2386464, 2386587, 2386710, 2387534, 2387780, 2387946, 2388358, 2388647, 2388936, 2389059, 2389303, 2389793, 2390082, 2390248, 2390414, 2390824, 2390947, 2391070, 2391193, 2391439, 2391562, 2391685, 2392054, 2392177, 2392300, 2392423, 2392546, 2392669, 2392792, 2393204, 2393807, 2393973, 2394139, 2394914, 2395037, 2395283]"
"('Description.java', 'org.junit.runner.Description', 'methodAndClassNamePatternGroupOrDefault', '([\\s\\S]*)\\((.*)\\)', 'hasHelp(com.github.olivergondza.dumpling.cli.GroovyshCommandTest)')",[1364]
"('FilterBuilder.java', 'org.reflections.util.FilterBuilder$Include', 'apply', 'com\\.github\\.olivergondza\\.dumpling.*', 'com/github/olivergondza/dumpling/model/ThreadLock.class')","[65834, 84894, 110802, 129862, 151613, 170673, 190990, 210050, 230367, 248482, 267426, 287456, 307196, 327226, 347057, 367087, 386918, 406948, 426688, 446718, 475036, 494096, 514413, 533473, 553790, 572850, 593167, 612227, 632544, 651604, 671921, 690036, 711500, 734780, 758375, 781825, 807172, 830452, 853732, 877012, 900292, 923887, 947652, 984664, 1007944, 1031224, 1054504, 1077784, 1101064, 1124344, 1147939, 1173496, 1196776, 1220056, 1240186, 1258616, 1277046, 1295476, 1313906, 1332336, 1351396, 1371713, 1390773, 1411090, 1429205, 1447519, 1466579, 1492403, 1511463, 1542284, 1561344, 1580114, 1598544, 1617604, 1636374, 1654804, 1673864, 1694615, 1724803, 1742918, 1761178, 1780238, 1806200, 1824630, 1843690, 1862460, 1880890, 1899320, 1918065, 1936665, 1955410, 1974010, 1992440, 2011185, 2029785, 2048845, 2067615, 2086045, 2104160, 2126378, 2145438, 2169246, 2188306, 2222454, 2241514, 2267422, 2286482, 2325276, 2344821, 2368896, 2388441]"
"('Scanner.java', 'java.util.Scanner', 'getCompleteTokenInBuffer', '(?s).*', '2018-01-11 20:22:22\nFull thread dump Java HotSpot(TM) 64-Bit Server VM (24.80-b11 mixed mode):\n\n""Attach Listener"" daemon prio=10 tid=0x00007f8b0c001000 nid=0xfdd waiting on condition [0x0000000000000000]\n   java.lang.Thread.State: RUNNABLE\n\n   Locked ownable synchronizers:\n\t- None\n\n""thread\nname"" prio=10 tid=0x00007f8b40552800 nid=0xfce in Object.wait() [0x00007f8b3881e000]\n   java.lang.Thread.State: WAITING (on object monitor)\n\tat java.lang.Object.wait(Native Method)\n\t- waiting on <0x00000007aec550e8> (a java.lang.Object)\n\tat java.lang.Object.wait(Object.java:503)\n\tat java_lang_Object$wait.call(Unknown Source)\n\tat dumpling-script.pauseHere(dumpling-script:10)\n\t- locked <0x00000007aec550e8> (a java.lang.Object)\n\tat sun.reflect.NativeMethodAccessorImpl.invoke0(Native Method)\n\tat sun.reflect.NativeMethodAccessorImpl.invoke(NativeMethodAccessorImpl.java:57)\n\tat sun.reflect.DelegatingMethodAccessorImpl.invoke(DelegatingMethodAccessorImpl.java:43)\n\tat java.lang.reflect.Method.invoke(Method.java:606)\n\tat org.codehau')","[42801, 42856]"
"('ThreadDumpFactory.java', 'com.github.olivergondza.dumpling.factory.ThreadDumpFactory', 'initHeader', '#\\d+', '[0x00007f453d93c000]')","[34577, 34611]"
"('Description.java', 'org.junit.runner.Description', 'methodAndClassNamePatternGroupOrDefault', '([\\s\\S]*)\\((.*)\\)', 'cliNoSuchFile(com.github.olivergondza.dumpling.cli.SourceTest)')",[418]
"('FilterBuilder.java', 'org.reflections.util.FilterBuilder$Include', 'apply', 'com\\.github\\.olivergondza\\.dumpling.*', 'com/github/olivergondza/dumpling/model/mxbean/MXBeanThreadSet.class')","[62208, 81078, 107176, 126046, 147987, 166857, 187364, 206234, 226741, 244951, 263610, 283450, 303380, 323220, 343241, 363081, 383102, 402942, 422872, 442712, 471410, 490280, 510787, 529657, 550164, 569034, 589541, 608411, 628918, 647788, 668295, 686505, 706924, 730204, 753704, 777249, 802596, 825876, 849156, 872436, 895716, 919216, 942981, 980088, 1003368, 1026648, 1049928, 1073208, 1096488, 1119768, 1143268, 1168920, 1192200, 1215480, 1236560, 1254990, 1273420, 1291850, 1310280, 1328710, 1347580, 1368087, 1386957, 1407464, 1425674, 1443893, 1462763, 1488777, 1507647, 1538658, 1557528, 1576488, 1594918, 1613788, 1632748, 1651178, 1670048, 1690989, 1721177, 1739387, 1757552, 1776422, 1802574, 1821004, 1839874, 1858834, 1877264, 1895694, 1914344, 1933039, 1951689, 1970384, 1988814, 2007464, 2026159, 2045029, 2063989, 2082419, 2100629, 2122752, 2141622, 2165620, 2184490, 2218828, 2237698, 2263796, 2282666, 2321555, 2340910, 2365175, 2384530]"
"('Description.java', 'org.junit.runner.Description', 'methodAndClassNamePatternGroupOrDefault', '([\\s\\S]*)\\((.*)\\)', 'groovyGrepWithArg(com.github.olivergondza.dumpling.cli.GroovyRuntimeTest)')",[836]
"('Description.java', 'org.junit.runner.Description', 'methodAndClassNamePatternGroupOrDefault', '([\\s\\S]*)\\((.*)\\)', 'threadNameWithQuotes(com.github.olivergondza.dumpling.factory.ThreadDumpFactoryVendorTest)')",[44]
"('Description.java', 'org.junit.runner.Description', 'methodAndClassNamePatternGroupOrDefault', '([\\s\\S]*)\\((.*)\\)', 'cliArguments(com.github.olivergondza.dumpling.cli.GroovyRuntimeTest)')",[748]
"('Scanner.java', 'java.util.Scanner', 'getCompleteTokenInBuffer', '(?s).*', '""Reference Handler"" daemon prio=10 tid=0x00007fd6fc134000 nid=0xdbe in Object.wait() [0x00007fd700114000]\n   java.lang.Thread.State: WAITING (on object monitor)\n\tat java.lang.Object.wait(Native Method)\n\t- waiting on <0x000000070706a150> (a java.lang.ref.Reference$Lock)\n\tat java.lang.Object.wait(Object.java:503)\n\tat java.lang.ref.Reference$ReferenceHandler.run(Reference.java:133)\n\t- locked <0x000000070706a150> (a java.lang.ref.Reference$Lock)\n\n   Locked ownable synchronizers:\n\t- None\n\n""main"" prio=10 tid=0x00007fd6fc008800 nid=0xdb8 waiting on condition [0x00007fd7055bb000]\n   java.lang.Thread.State: WAITING (parking)\n\tat sun.misc.Unsafe.park(Native Method)\n\t- parking to wait for  <0x0000000707d7de60> (a java.util.concurrent.FutureTask)\n\tat java.util.concurrent.locks.LockSupport.park(LockSupport.java:186)\n\tat java.util.concurrent.FutureTask.awaitDone(FutureTask.java:425)\n\tat java.util.concurrent.FutureTask.get(FutureTask.java:187)\n\tat org.apache.maven.surefire.junitcore.pc.SharedThreadPoolStrategy.finished(SharedThreadPoolStrategy.java:60)\n\tat org.apache.maven.surefire.junitcore.pc.Scheduler.finished(Scheduler.java:372)\n\tat org.junit.runners.ParentRunner.runChildren(ParentRunner.java:295)\n\tat org.junit.runners.ParentRunner.access$000(ParentRunner.java:58)\n\tat org.junit.runners.ParentRunner$2.evaluate(ParentRunner.java:268)\n\tat org.junit.runners.ParentRunner.run(ParentRunner.java:363)\n\tat org.junit.runners.Suite.runChild(Suite.java:128)\n\tat org.junit.runners.Suite.runChild(Suite.java:27)\n\tat org.junit.runners.ParentRunner$3.run(ParentRunner.java:290)\n\tat org.apache.maven.surefire.junitcore.pc.Scheduler$1.run(Scheduler.java:393)\n\tat org.apache.maven.surefire.junitcore.pc.InvokerStrategy.schedule(InvokerStrategy.java:54)\n\tat org.apache.maven.surefire.junitcore.pc.Scheduler.schedule(Scheduler.java:352)\n\tat org.junit.runners.ParentRunner.runChildren(ParentRunner.java:288)\n\tat org.junit.runners.ParentRunner.access$000(ParentRunner.java:58)\n\tat org.junit.runners.ParentRunner$2.evaluate(ParentRunner.java:268)\n\tat org.junit.runners.ParentRunner.run(ParentRunner.java:363)\n\tat org.junit.runners.Suite.runChild(Suite.java:128)\n\tat org.junit.runners.Suite.runChild(Suite.java:27)\n\tat org.junit.runners.ParentRunner$3.run(ParentRunner.java:290)\n\tat org.apache.maven.surefire.junitcore.pc.Scheduler$1.run(Scheduler.java:393)\n\tat org.apache.maven.surefire.junitcore.pc.InvokerStrategy.schedule(InvokerStrategy.java:54)\n\tat org.apache.maven.surefire.junitcore.pc.Scheduler.schedule(Scheduler.java:352)\n\tat org.junit.runners.ParentRunner.runChildren(ParentRunner.java:288)\n\tat org.junit.runners.ParentRunner.access$000(ParentRunner.java:58)\n\tat org.junit.runners.ParentRunner$2.evaluate(ParentRunner.java:268)\n\tat org.junit.runners.ParentRunner.run(ParentRunner.java:363)\n\tat org.apache.maven.surefire.junitcore.pc.ParallelComputerBuilder$PC$1.run(ParallelComputerBuilder.java:554)\n\tat org.apache.maven.surefire.junitcore.JUnitCore.run(JUnitCore.java:55)\n\tat org.apache.maven.surefire.junitcore.JUnitCoreWrapper.createRequestAndRun(JUnitCoreWrapper.java:137)\n\tat org.apache.maven.surefire.junitcore.JUnitCoreWrapper.executeEager(JUnitCoreWrapper.java:107)\n\tat org.apache.maven.surefire.junitcore.JUnitCoreWrapper.execute(JUnitCoreWrapper.java:83)\n\tat org.apache.maven.surefire.junitcore.JUnitCoreWrapper.execute(JUnitCoreWrapper.java:75)\n\tat org.apache.maven.surefire.junitcore.JUnitCoreProvider.invoke(JUnitCoreProvider.java:161)\n\tat org.apache.maven.surefire.booter.ForkedBooter.invokeProviderInSameClassLoader(ForkedBooter.java:290)\n\tat org.apache.maven.surefire.booter.ForkedBooter.runSuitesInProcess(ForkedBooter.java:242)\n\tat org.apache.maven.surefire.booter.ForkedBooter.main(ForkedBooter.java:121)\n\n   Locked ownable synchronizers:\n\t- None\n\n""VM Thread"" prio=10 tid=0x00007fd6fc12f800 nid=0xdbd runnable \n\n""GC task thread#0 (ParallelGC)"" prio=10 tid=0x00007fd6fc01e800 nid=0xdb9 runnable \n\n""GC task thread#1 (ParallelGC)"" prio=10 tid=0x00007fd6fc020800 nid=0xdba runnable \n\n""GC task thread#2 (ParallelGC)"" prio=10 tid=0x00007fd6fc022000 nid=0xdbb runnable \n\n""GC task thread#3 (ParallelGC)"" prio=10 tid=0x00007fd6fc024000 nid=0xdbc runnable \n\n""VM Periodic Task Thread"" prio=10 tid=0x00007fd6fc2fe000 nid=0xdc4 waiting on condition \n\nJNI global references: 303\n\n')","[967018, 967449, 967983, 968208, 968433, 968658, 968883, 969108, 969539]"
"('ThreadDumpFactory.java', 'com.github.olivergondza.dumpling.factory.ThreadDumpFactory', 'initHeader', '#\\d+', '[0x00007fd6b01c4000]')","[455689, 455728, 959938, 959989, 1520925, 1520962]"
"('Description.java', 'org.junit.runner.Description', 'methodAndClassNamePatternGroupOrDefault', '([\\s\\S]*)\\((.*)\\)', 'stateFilter(com.github.olivergondza.dumpling.cli.GroovyRuntimeTest)')",[924]
"('Scanner.java', 'java.util.Scanner', 'getCompleteTokenInBuffer', '(?s).*', '""main"" prio=10 tid=0x00007feb64007800 nid=0xe31 waiting on condition [0x00007feb6a7c1000]\n   java.lang.Thread.State: TIMED_WAITING (sleeping)\n\tat java.lang.Thread.sleep(Native Method)\n\tat sun.reflect.NativeMethodAccessorImpl.invoke0(Native Method)\n\tat sun.reflect.NativeMethodAccessorImpl.invoke(NativeMethodAccessorImpl.java:57)\n\tat sun.reflect.DelegatingMethodAccessorImpl.invoke(DelegatingMethodAccessorImpl.java:43)\n\tat java.lang.reflect.Method.invoke(Method.java:606)\n\tat org.codehaus.groovy.reflection.CachedMethod.invoke(CachedMethod.java:90)\n\tat groovy.lang.MetaMethod.doMethodInvoke(MetaMethod.java:233)\n\tat org.codehaus.groovy.runtime.callsite.StaticMetaMethodSite$StaticMetaMethodSiteNoUnwrap.invoke(StaticMetaMethodSite.java:130)\n\tat org.codehaus.groovy.runtime.callsite.StaticMetaMethodSite.call(StaticMetaMethodSite.java:88)\n\tat org.codehaus.groovy.runtime.callsite.CallSiteArray.defaultCall(CallSiteArray.java:45)\n\tat org.codehaus.groovy.runtime.callsite.AbstractCallSite.call(AbstractCallSite.java:108)\n\tat org.codehaus.groovy.runtime.callsite.AbstractCallSite.call(AbstractCallSite.java:116)\n\tat dumpling-script.run(dumpling-script:16)\n\tat groovy.lang.GroovyShell.runScriptOrMainOrTestOrRunnable(GroovyShell.java:258)\n\tat groovy.lang.GroovyShell.run(GroovyShell.java:550)\n\tat com.github.olivergondza.dumpling.cli.GroovyCommand.run(GroovyCommand.java:94)\n\tat com.github.olivergondza.dumpling.cli.Main.run(Main.java:75)\n\tat com.github.olivergondza.dumpling.cli.Main.main(Main.java:58)\n\n   Locked ownable synchronizers:\n\t- None\n\n""VM Thread"" prio=10 tid=0x00007feb64067800 nid=0xe38 runnable \n\n""GC task thread#0 (ParallelGC)"" prio=10 tid=0x00007feb6401d800 nid=0xe32 runnable \n\n""GC task thread#1 (ParallelGC)"" prio=10 tid=0x00007feb6401f800 nid=0xe33 runnable \n\n""GC task thread#2 (ParallelGC)"" prio=10 tid=0x00007feb64021000 nid=0xe34 runnable \n\n""GC task thread#3 (ParallelGC)"" prio=10 tid=0x00007feb64023000 nid=0xe35 runnable \n\n""VM Periodic Task Thread"" prio=10 tid=0x00007feb640a1000 nid=0xe42 waiting on condition \n\nJNI global refe')","[14668, 15013, 15151, 15289, 15427, 15565, 15703]"
"('Scanner.java', 'java.util.Scanner', 'getCompleteTokenInBuffer', '(?s).*', '""Handling GET /hudson/job/some_job/ : ajp-127.0.0.1-8009-133"" daemon prio=10 tid=0x00002ad443486800 nid=0x4745 waiting for monitor entry [0x00002ad476030000]\n   java.lang.Thread.State: BLOCKED (on object monitor)\n\tat hudson.model.AbstractProject.getActions(AbstractProject.java:1034)\n\t- waiting to lock <0x000000049c5f7990> (a hudson.model.FreeStyleProject)\n\tat sun.reflect.GeneratedMethodAccessor718.invoke(Unknown Source)\n\tat sun.reflect.DelegatingMethodAccessorImpl.invoke(DelegatingMethodAccessorImpl.java:25)\n\tat java.lang.reflect.Method.invoke(Method.java:597)\n\tat org.apache.commons.jexl.util.PropertyExecutor.execute(PropertyExecutor.java:125)\n\tat org.apache.commons.jexl.util.introspection.UberspectImpl$VelGetterImpl.invoke(UberspectImpl.java:314)\n\tat org.apache.commons.jexl.parser.ASTArrayAccess.evaluateExpr(ASTArrayAccess.java:185)\n\tat org.apache.commons.jexl.parser.ASTIdentifier.execute(ASTIdentifier.java:75)\n\tat org.apache.commons.jexl.parser.ASTReference.execute(ASTReference.java:83)\n\tat org.apache.commons.jexl.parser.ASTReference.value(ASTReference.java:57)\n\tat org.apache.commons.jexl.parser.ASTExpression.value(ASTExpression.java:54)\n\tat org.apache.commons.jexl.parser.ASTElvisNode.value(ASTElvisNode.java:40)\n\tat org.apache.commons.jexl.parser.ASTExpression.value(ASTExpression.java:54)\n\tat org.apache.commons.jexl.parser.ASTExpressionExpression.value(ASTExpressionExpression.java:56)\n\tat org.apache.commons.jexl.ExpressionImpl.evaluate(ExpressionImpl.java:80)\n\tat hudson.ExpressionFactory2$JexlExpression.evaluate(ExpressionFactory2.java:72)\n\tat org.apache.commons.jelly.expression.ExpressionSupport.evaluateRecurse(ExpressionSupport.java:61)\n\tat org.apache.commons.jelly.expression.ExpressionSupport.evaluateAsIterator(ExpressionSupport.java:94)\n\tat org.apache.commons.jelly.tags.core.ForEachTag.doTag(ForEachTag.java:89)\n\tat org.apache.commons.jelly.impl.TagScript.run(TagScript.java:269)\n\tat org.apache.commons.jelly.impl.ScriptBlock.run(ScriptBlock.java:95)\n\tat org.apache.commons.jelly.tags.core.CoreTagLibrary$2.run(CoreTagLibrary.java:105)\n\tat org.kohsuke.stapler.jelly.CallTagLibScript.run(CallTagLibScript.java:119)\n\tat org.apache.commons.jelly.tags.core.CoreTagLibrary$2.run(CoreTagLibrary.java:105)\n\tat org.kohsuke.stapler.jelly.JellyViewScript.run(JellyViewScript.java:81)\n\tat org.kohsuke.stapler.jelly.IncludeTag.doTag(IncludeTag.java:146)\n\tat org.apache.commons.jelly.impl.TagScript.run(TagScript.java:269)\n\tat org.apache.commons.jelly.impl.ScriptBlock.run(ScriptBlock.java:95)\n\tat org.kohsuke.stapler.jelly.CallTagLibScript$1.run(CallTagLibScript.java:98)\n\tat org.apache.commons.jelly.tags.define.InvokeBodyTag.doTag(InvokeBodyTag.java:91)\n\tat org.apache.commons.jelly.impl.TagScript.run(TagScript.java:269)\n\tat org.kohsuke.stapler.jelly.ReallyStaticTagLibrary$1.run(ReallyStaticTagLibrary.java:99)\n\tat org.apache.commons.jelly.tags.core.CoreTagLibrary$2.run(CoreTagLibrary.java:105)\n\tat org.kohsuke.stapler.jelly.CallTagLibScript.run(CallTagLibScript.java:119)\n\tat org.apache.commons.jelly.impl.ScriptBlock.run(ScriptBlock.java:95)\n\tat org.kohsuke.stapler.jelly.CallTagLibScript$1.run(CallTagLibScript.java:98)\n\tat org.apache.commons.jelly.tags.define.InvokeBodyTag.doTag(InvokeBodyTag.java:91)\n\tat org.apache.commons.jelly.impl.TagScript.run(TagScript.java:269)\n\tat org.apache.commons.jelly.tags.core.CoreTagLibrary$1.run(CoreTagLibrary.java:98)\n\tat org.apache.commons.jelly.tags.core.CoreTagLibrary$2.run(CoreTagLibrary.java:105)\n\tat org.kohsuke.stapler.jelly.CallTagLibScript.run(CallTagLibScript.java:119)\n\tat org.apache.commons.jelly.impl.ScriptBlock.run(ScriptBlock.java:95)\n\tat org.apache.commons.jelly.tags.core.CoreTagLibrary$2.run(CoreTagLibrary.java:105)\n\tat org.kohsuke.stapler.jelly.JellyViewScript.run(JellyViewScript.java:81)\n\tat org.kohsuke.stapler.jelly.IncludeTag.doTag(IncludeTag.java:146)\n\tat org.apache.commons.jelly.impl.TagScript.run(TagScript.java:269)\n\tat org.apache.commons.jelly.impl.ScriptBlock.run(ScriptBlock.java:95)\n\tat org.kohsuke.stapler.jelly.CallTagLibScript$1.run(CallTagLibScript.java:98)\n\tat org.apache.commons.jelly.tags.define.InvokeBodyTag.doTag(InvokeBodyTag.java:91)\n\tat org.apache.commons.jelly.impl.TagScript.run(TagScript.java:269)\n\tat org.apache.commons.jelly.impl.ScriptBlock.run(ScriptBlock.java:95)\n\tat org.kohsuke.stapler.jelly.ReallyStaticTagLibrary$1.run(ReallyStaticTagLibrary.java:99)\n\tat org.kohsuke.stapler.jelly.ReallyStaticTagLibrary$1.run(ReallyStaticTagLibrary.java:99)\n\tat org.apache.commons.jelly.impl.ScriptBlock.run(ScriptBlock.java:95)\n\tat org.kohsuke.stapler.jelly.ReallyStaticTagLibrary$1.run(ReallyStaticTagLibrary.java:99)\n\tat org.kohsuke.stapler.jelly.ReallyStaticTagLibrary$1.run(ReallyStaticTagLibrary.java:99)\n\tat org.apache.commons.jelly.impl.ScriptBlock.run(ScriptBlock.java:95)\n\tat org.kohsuke.stapler.jelly.ReallyStaticTagLibrary$1.run(ReallyStaticTagLibrary.java:99)\n\tat org.apache.commons.jelly.impl.ScriptBlock.run(ScriptBlock.java:95)\n\tat org.kohsuke.stapler.jelly.ReallyStaticTagLibrary$1.run(ReallyStaticTagLibrary.java:99)\n\tat org.apache.commons.jelly.impl.ScriptBlock.run(ScriptBlock.java:95)\n\tat org.apache.commons.jelly.tags.core.CoreTagLibrary$2.run(CoreTagLibrary.java:105)\n\tat org.kohsuke.stapler.jelly.CallTagLibScript.run(CallTagLibScript.java:119)\n\tat org.apache.commons.jelly.tags.core.CoreTagLibrary$2.run(CoreTagLibrary.java:105)\n\tat org.kohsuke.stapler.jelly.JellyViewScript.run(JellyViewScript.java:81)\n\tat org.kohsuke.stapler.jelly.DefaultScriptInvoker.invokeScript(DefaultScriptInvoker.java:63)\n\tat org.kohsuke.stapler.jelly.DefaultScriptInvoker.invokeScript(DefaultScriptInvoker.java:53)\n\tat org.kohsuke.stapler.jelly.JellyClassTearOff.serveIndexJelly(JellyClassTearOff.java:107)\n\tat org.kohsuke.stapler.jelly.JellyFacet.handleIndexRequest(JellyFacet.java:127)\n\tat org.kohsuke.stapler.Stapler.tryInvoke(Stapler.java:563)\n\tat org.kohsuke.stapler.Stapler.invoke(Stapler.java:659)\n\tat org.kohsuke.stapler.MetaClass$6.doDispatch(MetaClass.java:241)\n\tat org.kohsuke.stapler.NameBasedDispatcher.dispatch(NameBasedDispatcher.java:53)\n\tat org.kohsuke.stapler.Stapler.tryInvoke(Stapler.java:574)\n\tat org.kohsuke.stapler.Stapler.invoke(Stapler.java:659)\n\tat org.kohsuke.stapler.Stapler.invoke(Stapler.java:488)\n\tat org.kohsuke.stapler.Stapler.service(Stapler.java:162)\n\tat javax.servlet.http.HttpServlet.service(HttpServlet.java:717)\n\tat org.apache.catalina.core.ApplicationFilterChain.internalDoFilter(ApplicationFilterChain.java:290)\n\tat org.apache.catalina.core.ApplicationFilterChain.doFilter(ApplicationFilterChain.java:206)\n\tat hudson.util.PluginServletFilter$1.doFilter(PluginServletFilter.java:95)\n\tat hudson.plugins.audit_trail.AuditTrailFilter.doFilter(AuditTrailFilter.java:66)\n\tat hudson.util.PluginServletFilter$1.doFilter(PluginServletFilter.java:98)\n\tat hudson.util.PluginServletFilter.doFilter(PluginServletFilter.java:87)\n\tat org.apache.catalina.core.ApplicationFilterChain.internalDoFilter(ApplicationFilterChain.java:235)\n\tat org.apache.catalina.core.ApplicationFilterChain.doFilter(ApplicationFilterChain.java:206)\n\tat hudson.security.csrf.CrumbFilter.doFilter(CrumbFilter.java:47)\n\tat org.apache.catalina.core.ApplicationFilterChain.internalDoFilter(ApplicationFilterChain.java:235)\n\tat org.apache.catalina.core.ApplicationFilterChain.doFilter(ApplicationFilterChain.java:206)\n\tat org.jenkinsci.plugins.reverse_proxy_auth.ReverseProxySecurityRealm$1.doFilter(ReverseProxySecurityRealm.java:142)\n\tat hudson.security.HudsonFilter.doFilter(HudsonFilter.java:164)\n\tat org.apache.catalina.core.ApplicationFilterChain.internalDoFilter(ApplicationFilterChain.java:235)\n\tat org.apache.catalina.core.ApplicationFilterChain.doFilter(ApplicationFilterChain.java:206)\n\tat org.kohsuke.stapler.compression.CompressionFilter.doFilter(CompressionFilter.java:50)\n\tat org.apache.catalina.core.ApplicationFilterChain.internalDoFilter(ApplicationFilterChain.java:235)\n\tat org.apache.catalina.core.ApplicationFilterChain.doFilter(ApplicationFilterChain.java:206)\n\tat hudson.util.CharacterEncodingFilter.doFilter(CharacterEncodingFilter.java:81)\n\tat org.apache.catalina.core.ApplicationFilterChain.internalDoFilter(ApplicationFilterChain.java:235)\n\tat org.apache.catalina.core.ApplicationFilterChain.doFilter(ApplicationFilterChain.java:206)\n\tat org.jboss.web.tomcat.filters.ReplyHeaderFilter.doFilter(ReplyHeaderFilter.java:96)\n\tat org.apache.catalina.core.ApplicationFilterChain.internalDoFilter(ApplicationFilterChain.java:235)\n\tat org.apache.catalina.core.ApplicationFilterChain.doFilter(ApplicationFilterChain.java:206)\n\tat org.apache.catalina.core.StandardWrapperValve.invoke(StandardWrapperValve.java:235)\n\tat org.apache.catalina.core.StandardContextValve.invoke(StandardContextValve.java:191)\n\tat org.jboss.web.tomcat.security.SecurityAssociationValve.invoke(SecurityAssociationValve.java:183)\n\tat org.apache.catalina.authenticator.AuthenticatorBase.invoke(AuthenticatorBase.java:442)\n\tat org.jboss.web.tomcat.security.JaccContextValve.invoke(JaccContextValve.java:95)\n\tat org.jboss.web.tomcat.security.SecurityContextEstablishmentValve.process(SecurityContextEstablishmentValve.java:126)\n\tat org.jboss.web.tomcat.security.SecurityContextEstablishmentValve.invoke(SecurityContextEstablishmentValve.java:70)\n\tat org.apache.catalina.core.StandardHostValve.invoke(StandardHostValve.java:127)\n\tat org.apache.catalina.valves.ErrorReportValve.invoke(ErrorReportValve.java:102)\n\tat org.jboss.web.tomcat.service.jca.CachedConnectionValve.invoke(CachedConnectionValve.java:158)\n\tat org.apache.catalina.core.StandardEngineValve.invoke(StandardEngineValve.java:109)\n\tat org.jboss.web.tomcat.service.request.ActiveRequestResponseCacheValve.internalProcess(ActiveRequestResponseCacheValve.java:74)\n\tat org.jboss.web.tomcat.service.request.ActiveRequestResponseCacheValve.invoke(ActiveRequestResponseCacheValve.java:47)\n\tat org.apache.catalina.connector.CoyoteAdapter.service(CoyoteAdapter.java:330)\n\tat org.apache.coyote.ajp.AjpProcessor.process(AjpProcessor.java:437)\n\tat org.apache.coyote.ajp.AjpProtocol$AjpConnectionHandler.process(AjpProtocol.java:385)\n\tat org.apache.tomcat.util.net.JIoEndpoint$Worker.run(JIoEndpoint.java:451)\n\tat java.lang.Thread.run(Thread.java:662)\n\n""Handling POST /hudson/view/some_view/configSubmit : ajp-127.0.0.1-8009-107"" daemon prio=10 tid=0x00002ad440c4e000 nid=0x463e waiting for monitor entry [0x00002ad46b06b000]\n   java.lang.Thread.State: BLOCKED (on object monitor)\n\tat jenkins.model.Jenkins.save(Jenkins.java:2552)\n\t- waiting to lock <0x0000000404325338> (a hudson.model.Hudson)\n\tat hudson.plugins.nested_view.NestedView.save(NestedView.java:164)\n\tat hudson.model.View.save(View.java:319)\n\tat hudson.model.View.doConfigSubmit(View.java:902)\n\t- locked <0x000000040dce6960> (a hudson.model.ListView)\n\tat sun.reflect.NativeMethodAccessorImpl.invoke0(Native Method)\n\tat sun.reflect.NativeMethodAccessorImpl.invoke(NativeMethodAccessorImpl.java:39)\n\tat sun.reflect.DelegatingMethodAccessorImpl.invoke(DelegatingMethodAccessorImpl.java:25)\n\tat java.lang.reflect.Method.invoke(Method.java:597)\n\tat org.kohsuke.stapler.Function$InstanceFunction.invoke(Function.java:288)\n\tat org.kohsuke.stapler.interceptor.RequirePOST$Processor.invoke(RequirePOST.java:29)\n\tat org.kohsuke.stapler.Function$InterceptedFunction.invoke(Function.java:389)\n\tat org.kohsuke.stapler.Function.bindAndInvoke(Function.java:151)\n\tat org.kohsuke.stapler.Function.bindAndInvokeAndServeResponse(Function.java:90)\n\tat org.kohsuke.stapler.MetaClass$1.doDispatch(MetaClass.java:111)\n\tat org.kohsuke.stapler.NameBasedDispatcher.dispatch(NameBasedDispatcher.java:53)\n\tat org.kohsuke.stapler.Stapler.tryInvoke(Stapler.java:574)\n\tat org.kohsuke.stapler.Stapler.invoke(Stapler.java:659)\n\tat org.kohsuke.stapler.MetaClass$6.doDispatch(MetaClass.java:241)\n\tat org.kohsuke.stapler.NameBasedDispatcher.dispatch(NameBasedDispatcher.java:53)\n\tat org.kohsuke.stapler.Stapler.tryInvoke(Stapler.java:574)\n\tat org.kohsuke.stapler.Stapler.invoke(Stapler.java:659)\n\tat org.kohsuke.stapler.MetaClass$6.doDispatch(MetaClass.java:241)\n\tat org.kohsuke.stapler.NameBasedDispatcher.dispatch(NameBasedDispatcher.java:53)\n\tat org.kohsuke.stapler.Stapler.tryInvoke(Stapler.java:574)\n\tat org.kohsuke.stapler.Stapler.invoke(Stapler.java:659)\n\tat org.kohsuke.stapler.Stapler.invoke(Stapler.java:488)\n\tat org.kohsuke.stapler.Stapler.service(Stapler.java:162)\n\tat javax.servlet.http.HttpServlet.service(HttpServlet.java:717)\n\tat org.apache.catalina.core.ApplicationFilterChain.internalDoFilter(ApplicationFilterChain.java:290)\n\tat org.apache.catalina.core.ApplicationFilterChain.doFilter(ApplicationFilterChain.java:206)\n\tat hudson.util.PluginServletFilter$1.doFilter(PluginServletFilter.java:95)\n\tat hudson.plugins.audit_trail.AuditTrailFilter.doFilter(AuditTrailFilter.java:66)\n\tat hudson.util.PluginServletFilter$1.doFilter(PluginServletFilter.java:98)\n\tat hudson.util.PluginServletFilter.doFilter(PluginServletFilter.java:87)\n\tat org.apache.catalina.core.ApplicationFilterChain.internalDoFilter(ApplicationFilterChain.java:235)\n\tat org.apache.catalina.core.ApplicationFilterChain.doFilter(ApplicationFilterChain.java:206)\n\tat hudson.security.csrf.CrumbFilter.doFilter(CrumbFilter.java:47)\n\tat org.apache.catalina.core.ApplicationFilterChain.internalDoFilter(ApplicationFilterChain.java:235)\n\tat org.apache.catalina.core.ApplicationFilterChain.doFilter(ApplicationFilterChain.java:206)\n\tat org.jenkinsci.plugins.reverse_proxy_auth.ReverseProxySecurityRealm$1.doFilter(ReverseProxySecurityRealm.java:142)\n\tat hudson.security.HudsonFilter.doFilter(HudsonFilter.java:164)\n\tat org.apache.catalina.core.ApplicationFilterChain.internalDoFilter(ApplicationFilterChain.java:235)\n\tat org.apache.catalina.core.ApplicationFilterChain.doFilter(ApplicationFilterChain.java:206)\n\tat org.kohsuke.stapler.compression.CompressionFilter.doFilter(CompressionFilter.java:50)\n\tat org.apache.catalina.core.ApplicationFilterChain.internalDoFilter(ApplicationFilterChain.java:235)\n\tat org.apache.catalina.core.ApplicationFilterChain.doFilter(ApplicationFilterChain.java:206)\n\tat hudson.util.CharacterEncodingFilter.doFilter(CharacterEncodingFilter.java:81)\n\tat org.apache.catalina.core.ApplicationFilterChain.internalDoFilter(ApplicationFilterChain.java:235)\n\tat org.apache.catalina.core.ApplicationFilterChain.doFilter(ApplicationFilterChain.java:206)\n\tat org.jboss.web.tomcat.filters.ReplyHeaderFilter.doFilter(ReplyHeaderFilter.java:96)\n\tat org.apache.catalina.core.ApplicationFilterChain.internalDoFilter(ApplicationFilterChain.java:235)\n\tat org.apache.catalina.core.ApplicationFilterChain.doFilter(ApplicationFilterChain.java:206)\n\tat org.apache.catalina.core.StandardWrapperValve.invoke(StandardWrapperValve.java:235)\n\tat org.apache.catalina.core.StandardContextValve.invoke(StandardContextValve.java:191)\n\tat org.jboss.web.tomcat.security.SecurityAssociationValve.invoke(SecurityAssociationValve.java:183)\n\tat org.apache.catalina.authenticator.AuthenticatorBase.invoke(AuthenticatorBase.java:442)\n\tat org.jboss.web.tomcat.security.JaccContextValve.invoke(JaccContextValve.java:95)\n\tat org.jboss.web.tomcat.security.SecurityContextEstablishmentValve.process(SecurityContextEstablishmentValve.java:126)\n\tat org.jboss.web.tomcat.security.SecurityContextEstablishmentValve.invoke(SecurityContextEstablishmentValve.java:70)\n\tat org.apache.catalina.core.StandardHostValve.invoke(StandardHostValve.java:127)\n\tat org.apache.catalina.valves.ErrorReportValve.invoke(ErrorReportValve.java:102)\n\tat org.jboss.web.tomcat.service.jca.CachedConnectionValve.invoke(CachedConnectionValve.java:158)\n\tat org.apache.catalina.core.StandardEngineValve.invoke(StandardEngineValve.java:109)\n\tat org.jboss.web.tomcat.service.request.ActiveRequestResponseCacheValve.internalProcess(ActiveRequestResponseCacheValve.java:74)\n\tat org.jboss.web.tomcat.service.request.ActiveRequestResponseCacheValve.invoke(ActiveRequestResponseCacheValve.java:47)\n\tat org.apache.catalina.connector.CoyoteAdapter.service(CoyoteAdapter.java:330)\n\tat org.apache.coyote.ajp.AjpProcessor.process(AjpProcessor.java:437)\n\tat org.apache.coyote.ajp.AjpProtocol$AjpConnectionHandler.process(AjpProtocol.java:385)\n\tat org.apache.tomcat.util.net.JIoEndpoint$Worker.run(JIoEndpoint.java:451)\n\tat java.lang.Thread.run(Thread.java:662)\n\n""Handling POST /hudson/job/some_other_job/doRename : ajp-127.0.0.1-8009-24"" daemon prio=10 tid=0x000000005851b800 nid=0x6ac8 ')","[91970, 92558, 1473653, 1474230, 1701461, 1702654, 1787314, 1787902, 2204360, 2204849, 2248590, 2249178, 2293558, 2294146, 2300678, 2301167]"
"('FilterBuilder.java', 'org.reflections.util.FilterBuilder$Include', 'apply', 'com\\.github\\.olivergondza\\.dumpling.*', 'com.github.olivergondza.dumpling.cli.CliRuntimeFactory.class')","[58815, 77507, 103783, 122475, 144594, 163286, 183971, 202663, 223348, 241647, 260039, 279701, 299809, 319471, 339670, 359332, 379531, 399193, 419301, 438963, 468017, 486709, 507394, 526086, 546771, 565463, 586148, 604840, 625525, 644217, 664902, 683201, 702641, 725921, 749332, 772966, 798313, 821593, 844873, 868153, 891433, 914844, 938609, 975805, 999085, 1022365, 1045645, 1068925, 1092205, 1115485, 1138896, 1164637, 1187917, 1211197, 1233167, 1251597, 1270027, 1288457, 1306887, 1325317, 1344009, 1364694, 1383386, 1404071, 1422370, 1440500, 1459192, 1485384, 1504076, 1535265, 1553957, 1573095, 1591525, 1610217, 1629355, 1647785, 1666477, 1687596, 1717784, 1736083, 1754159, 1772851, 1799181, 1817611, 1836303, 1855441, 1873871, 1892301, 1910862, 1929646, 1948207, 1966991, 1985421, 2003982, 2022766, 2041458, 2060596, 2079026, 2097325, 2119359, 2138051, 2162227, 2180919, 2215435, 2234127, 2260403, 2279095, 2318073, 2337250, 2361693, 2380870]"
"('FilterBuilder.java', 'org.reflections.util.FilterBuilder$Include', 'apply', 'com\\.github\\.olivergondza\\.dumpling.*', 'com/github/olivergondza/dumpling/model/jmx/JmxRuntime.class')","[62932, 81840, 107900, 126808, 148711, 167619, 188088, 206996, 227465, 245656, 264372, 284250, 304142, 324020, 344003, 363881, 383864, 403742, 423634, 443512, 472134, 491042, 511511, 530419, 550888, 569796, 590265, 609173, 629642, 648550, 669019, 687210, 707838, 731118, 754637, 778163, 803510, 826790, 850070, 873350, 896630, 920149, 943914, 981002, 1004282, 1027562, 1050842, 1074122, 1097402, 1120682, 1144201, 1169834, 1193114, 1216394, 1237284, 1255714, 1274144, 1292574, 1311004, 1329434, 1348342, 1368811, 1387719, 1408188, 1426379, 1444617, 1463525, 1489501, 1508409, 1539382, 1558290, 1577212, 1595642, 1614550, 1633472, 1651902, 1670810, 1691713, 1721901, 1740092, 1758276, 1777184, 1803298, 1821728, 1840636, 1859558, 1877988, 1896418, 1915087, 1933763, 1952432, 1971108, 1989538, 2008207, 2026883, 2045791, 2064713, 2083143, 2101334, 2123476, 2142384, 2166344, 2185252, 2219552, 2238460, 2264520, 2283428, 2322298, 2341691, 2365918, 2385311]"
"('ThreadDumpFactory.java', 'com.github.olivergondza.dumpling.factory.ThreadDumpFactory', 'initHeader', '#\\d+', 'waiting')","[2002, 2036, 2548, 2582, 2890, 2924, 4706, 4740, 5093, 5127, 6062, 6096, 6454, 6488, 8658, 8692, 9064, 9098, 9413, 9447, 9973, 10007, 10322, 10356, 11428, 11462, 12447, 12481, 13294, 13328, 13636, 13670, 14703, 14737, 15738, 15772, 16143, 16177, 16689, 16723, 17031, 17065, 18996, 19030, 19435, 19469, 19981, 20015, 20323, 20357, 21372, 21406, 22275, 22309, 22666, 22700, 23461, 23495, 23798, 23832, 24859, 24893, 25857, 25891, 26264, 26298, 26810, 26844, 27152, 27186, 29221, 29255, 29665, 29699, 30211, 30245, 30553, 30587, 32580, 32614, 33018, 33052, 33564, 33598, 33906, 33940, 34970, 35004, 35987, 36021, 36423, 36457, 36969, 37003, 37311, 37345, 39161, 39195, 39568, 39602, 40114, 40148, 40456, 40490, 42476, 42510, 42891, 42925, 43863, 43897, 44256, 44290, 46463, 46497, 46895, 46929, 47234, 47268, 47843, 47877, 48176, 48210, 49225, 49259, 50253, 50287, 50682, 50716, 51228, 51262, 51570, 51604, 53616, 53650, 92006, 92041, 92594, 92629, 93205, 93240, 98394, 98429, 177602, 177637, 178797, 178832, 216979, 217014, 218174, 218209, 454000, 454039, 454375, 454414, 455848, 455887, 456244, 456283, 457248, 457287, 457636, 457675, 458837, 458876, 459555, 459594, 459993, 460032, 461406, 461445, 462711, 462750, 501025, 501060, 502220, 502255, 540402, 540437, 541597, 541632, 579779, 579814, 580974, 581009, 619156, 619191, 620351, 620386, 658533, 658568, 659728, 659763, 790153, 790201, 791751, 791799, 956536, 956587, 957399, 957450, 958262, 958313, 960133, 960184, 960637, 960688, 961917, 961968, 962413, 962464, 964076, 964127, 965060, 965111, 965655, 965706, 967501, 967552, 969160, 969211, 1156440, 1156489, 1158069, 1158118, 1358325, 1358360, 1359520, 1359555, 1397702, 1397737, 1398897, 1398932, 1473688, 1473722, 1474265, 1474299, 1474865, 1474899, 1480001, 1480035, 1518393, 1518430, 1519032, 1519069, 1519671, 1519708, 1521078, 1521115, 1521456, 1521493, 1522414, 1522451, 1522784, 1522821, 1523937, 1523974, 1524627, 1524664, 1525047, 1525084, 1526404, 1526441, 1527661, 1527698, 1680793, 1680828, 1681988, 1682023, 1701552, 1701642, 1702745, 1702835, 1703961, 1704051, 1712065, 1712155, 1787350, 1787385, 1787938, 1787973, 1788549, 1788584, 1793738, 1793773, 2110610, 2110636, 2110864, 2110890, 2111171, 2111197, 2111477, 2111503, 2111783, 2111809, 2112185, 2112211, 2112440, 2112466, 2113276, 2113302, 2114197, 2114223, 2152371, 2152406, 2152706, 2152741, 2153112, 2153147, 2153517, 2153552, 2153922, 2153957, 2154450, 2154485, 2154786, 2154821, 2155874, 2155909, 2157011, 2157046, 2195239, 2195274, 2195574, 2195609, 2195980, 2196015, 2196385, 2196420, 2196790, 2196825, 2197318, 2197353, 2197654, 2197689, 2198742, 2198777, 2199879, 2199914, 2200250, 2200276, 2200504, 2200530, 2200811, 2200837, 2201117, 2201143, 2201423, 2201449, 2201825, 2201851, 2202080, 2202106, 2202916, 2202942, 2203837, 2203863, 2204387, 2204413, 2204876, 2204902, 2205388, 2205414, 2210100, 2210126, 2248626, 2248661, 2249214, 2249249, 2249825, 2249860, 2255014, 2255049, 2293594, 2293629, 2294182, 2294217, 2294793, 2294828, 2299982, 2300017, 2300705, 2300731, 2301194, 2301220, 2301706, 2301732, 2306418, 2306444, 2306960, 2306986, 2307213, 2307239, 2307517, 2307543, 2307821, 2307847, 2308126, 2308152, 2308378, 2308404, 2308677, 2308703, 2309005, 2309031, 2309258, 2309284, 2309562, 2309588, 2309866, 2309892, 2310171, 2310197, 2310423, 2310449, 2310722, 2310748, 2311050, 2311076, 2311303, 2311329, 2311607, 2311633, 2311911, 2311937, 2312216, 2312242, 2312468, 2312494, 2312767, 2312793, 2351925, 2351961, 2352268, 2352304, 2352682, 2352718, 2353096, 2353132, 2353511, 2353547, 2353853, 2353889, 2354262, 2354298, 2354670, 2354696, 2354923, 2354949, 2355227, 2355253, 2355531, 2355557, 2355836, 2355862, 2356088, 2356114, 2356387, 2356413, 2395545, 2395581, 2395888, 2395924, 2396302, 2396338, 2396716, 2396752, 2397131, 2397167, 2397473, 2397509, 2397882, 2397918]"
"('FilterBuilder.java', 'org.reflections.util.FilterBuilder$Include', 'apply', 'com\\.github\\.olivergondza\\.dumpling.*', 'com/github/olivergondza/dumpling/query/BlockingTree$Tree.class')","[66782, 85892, 111750, 130860, 152561, 171671, 191938, 211048, 231315, 249405, 268424, 288504, 308194, 328274, 348055, 368135, 387916, 407996, 427686, 447766, 475984, 495094, 515361, 534471, 554738, 573848, 594115, 613225, 633492, 652602, 672869, 690959, 712698, 735978, 759598, 783023, 808370, 831650, 854930, 878210, 901490, 925110, 948875, 985862, 1009142, 1032422, 1055702, 1078982, 1102262, 1125542, 1149162, 1174694, 1197974, 1221254, 1241134, 1259564, 1277994, 1296424, 1314854, 1333284, 1352394, 1372661, 1391771, 1412038, 1430128, 1448467, 1467577, 1493351, 1512461, 1543232, 1562342, 1581062, 1599492, 1618602, 1637322, 1655752, 1674862, 1695563, 1725751, 1743841, 1762126, 1781236, 1807148, 1825578, 1844688, 1863408, 1881838, 1900268, 1919038, 1937613, 1956383, 1974958, 1993388, 2012158, 2030733, 2049843, 2068563, 2086993, 2105083, 2127326, 2146436, 2170194, 2189304, 2223402, 2242512, 2268370, 2287480, 2326249, 2345844, 2369869, 2389464]"
"('Scanner.java', 'java.util.Scanner', 'getCompleteTokenInBuffer', '(?s).*', '""owning_thread"" prio=10 tid=0x2b6ff883a800 nid=24496\n   java.lang.Thread.State: RUNNABLE\n\tat hudson.model.Label.toString(Label.java:512)\n\tat org.jvnet.localizer.Localizable.<init>(Localizable.java:30)\n\tat hudson.model.Messages._Node_LabelMissing(Messages.java:3581)\n\tat hudson.model.Node.canTake(Node.java:332)\n\tat hudson.model.Queue$JobOffer.canTake(Queue.java:272)\n\tat hudson.model.Queue.maintain(Queue.java:1106)\n\t- locked <0x4063a9378> (a hudson.model.Queue)\n\tat hudson.model.Queue.pop(Queue.java:935)\n\t- locked <0x4063a9378> (a hudson.model.Queue)\n\tat hudson.model.Executor.grabJob(Executor.java:297)\n\tat hudson.model.Executor.run(Executor.java:211)\n\t- locked <0x4063a9378> (a hudson.model.Queue)\n\n""VM Thread"" prio=10 tid=0x7f08ac13b800 nid=24606\n   java.lang.Thread.State: UNKNOWN\n\n""GC task thread#0 (ParallelGC)"" prio=10 tid=0x7f08ac01e800 nid=24599\n   java.lang.Thread.State: UNKNOWN\n\n""GC task thread#1 (ParallelGC)"" prio=10 tid=0x7f08ac020800 nid=24600\n   java.lang.Thread.State: UNKNOWN\n\n""GC task thread#2 (Paralle')","[1682337, 1682386, 1682435, 1682484]"
"('FilterBuilder.java', 'org.reflections.util.FilterBuilder$Include', 'apply', 'com\\.github\\.olivergondza\\.dumpling.*', 'com/github/olivergondza/dumpling/factory/JmxRuntimeFactory$RemoteConnector.class')","[68194, 87378, 113162, 132346, 153973, 173157, 193350, 212534, 232727, 250780, 269910, 290064, 309680, 329834, 349541, 369695, 389402, 409556, 429172, 449326, 477396, 496580, 516773, 535957, 556150, 575334, 595527, 614711, 634904, 654088, 674281, 692334, 714480, 737760, 761417, 784805, 810152, 833432, 856712, 879992, 903272, 926929, 950694, 987644, 1010924, 1034204, 1057484, 1080764, 1104044, 1127324, 1150981, 1176476, 1199756, 1223036, 1242546, 1260976, 1279406, 1297836, 1316266, 1334696, 1353880, 1374073, 1393257, 1413450, 1431503, 1449879, 1469063, 1494763, 1513947, 1544644, 1563828, 1582474, 1600904, 1620088, 1638734, 1657164, 1676348, 1696975, 1727163, 1745216, 1763538, 1782722, 1808560, 1826990, 1846174, 1864820, 1883250, 1901680, 1920487, 1939025, 1957832, 1976370, 1994800, 2013607, 2032145, 2051329, 2069975, 2088405, 2106458, 2128738, 2147922, 2171606, 2190790, 2224814, 2243998, 2269782, 2288966, 2327698, 2347367, 2371318, 2390987]"
"('FilterBuilder.java', 'org.reflections.util.FilterBuilder$Include', 'apply', 'com\\.github\\.olivergondza\\.dumpling.*', 'com/github/olivergondza/dumpling/model/dump/ThreadDumpRuntime.class')","[63160, 82080, 108128, 127048, 148939, 167859, 188316, 207236, 227693, 245878, 264612, 284502, 304382, 324272, 344243, 364133, 384104, 403994, 423874, 443764, 472362, 491282, 511739, 530659, 551116, 570036, 590493, 609413, 629870, 648790, 669247, 687432, 708126, 731406, 754931, 778451, 803798, 827078, 850358, 873638, 896918, 920443, 944208, 981290, 1004570, 1027850, 1051130, 1074410, 1097690, 1120970, 1144495, 1170122, 1193402, 1216682, 1237512, 1255942, 1274372, 1292802, 1311232, 1329662, 1348582, 1369039, 1387959, 1408416, 1426601, 1444845, 1463765, 1489729, 1508649, 1539610, 1558530, 1577440, 1595870, 1614790, 1633700, 1652130, 1671050, 1691941, 1722129, 1740314, 1758504, 1777424, 1803526, 1821956, 1840876, 1859786, 1878216, 1896646, 1915321, 1933991, 1952666, 1971336, 1989766, 2008441, 2027111, 2046031, 2064941, 2083371, 2101556, 2123704, 2142624, 2166572, 2185492, 2219780, 2238700, 2264748, 2283668, 2322532, 2341937, 2366152, 2385557]"
"('Scanner.java', 'java.util.Scanner', 'getCompleteTokenInBuffer', '(?s).*', '2018-01-11 20:22:37\nFull thread dump Java HotSpot(TM) 64-Bit Server VM (24.80-b11 mixed mode):\n\n""remotely-observed-thread"" daemon prio=10 tid=0x00007fd6b80b7000 nid=0x10da in Object.wait() [0x00007fd68f8f7000]\n   java.lang.Thread.State: WAITING (on object monitor)\n\tat java.lang.Object.wait(Native Method)\n\t- waiting on <0x00000007af6d4360> (a com.github.olivergondza.dumpling.TestThr')",[956033]
"('FilterBuilder.java', 'org.reflections.util.FilterBuilder$Include', 'apply', 'com\\.github\\.olivergondza\\.dumpling.*', 'com/github/olivergondza/dumpling/query/command.blocking-tree.usage')","[66670, 85774, 111638, 130742, 152449, 171553, 191826, 210930, 231203, 249296, 268306, 288380, 308076, 328150, 347937, 368011, 387798, 407872, 427568, 447642, 475872, 494976, 515249, 534353, 554626, 573730, 594003, 613107, 633380, 652484, 672757, 690850, 712556, 735836, 759453, 782881, 808228, 831508, 854788, 878068, 901348, 924965, 948730, 985720, 1009000, 1032280, 1055560, 1078840, 1102120, 1125400, 1149017, 1174552, 1197832, 1221112, 1241022, 1259452, 1277882, 1296312, 1314742, 1333172, 1352276, 1372549, 1391653, 1411926, 1430019, 1448355, 1467459, 1493239, 1512343, 1543120, 1562224, 1580950, 1599380, 1618484, 1637210, 1655640, 1674744, 1695451, 1725639, 1743732, 1762014, 1781118, 1807036, 1825466, 1844570, 1863296, 1881726, 1900156, 1918923, 1937501, 1956268, 1974846, 1993276, 2012043, 2030621, 2049725, 2068451, 2086881, 2104974, 2127214, 2146318, 2170082, 2189186, 2223290, 2242394, 2268258, 2287362, 2326134, 2345723, 2369754, 2389343]"
"('FilterBuilder.java', 'org.reflections.util.FilterBuilder$Include', 'apply', 'com\\.github\\.olivergondza\\.dumpling.*', 'com.github.olivergondza.dumpling.query.BlockingTree.class')","[67047, 86171, 112015, 131139, 152826, 171950, 192203, 211327, 231580, 249663, 268703, 288797, 308473, 328567, 348334, 368428, 388195, 408289, 427965, 448059, 476249, 495373, 515626, 534750, 555003, 574127, 594380, 613504, 633757, 652881, 673134, 691217, 713033, 736313, 759940, 783358, 808705, 831985, 855265, 878545, 901825, 925452, 949217, 986197, 1009477, 1032757, 1056037, 1079317, 1102597, 1125877, 1149504, 1175029, 1198309, 1221589, 1241399, 1259829, 1278259, 1296689, 1315119, 1333549, 1352673, 1372926, 1392050, 1412303, 1430386, 1448732, 1467856, 1493616, 1512740, 1543497, 1562621, 1581327, 1599757, 1618881, 1637587, 1656017, 1675141, 1695828, 1726016, 1744099, 1762391, 1781515, 1807413, 1825843, 1844967, 1863673, 1882103, 1900533, 1919310, 1937878, 1956655, 1975223, 1993653, 2012430, 2030998, 2050122, 2068828, 2087258, 2105341, 2127591, 2146715, 2170459, 2189583, 2223667, 2242791, 2268635, 2287759, 2326521, 2346130, 2370141, 2389750]"
"('Scanner.java', 'java.util.Scanner', 'getCompleteTokenInBuffer', '(?s).*', '""Finalizer"" daemon prio=10 tid=0x00007fd80806e000 nid=0xf89 in Object.wait() [0x00007fd8052d1000]\n   java.lang.Thread.State: WAITING (on object monitor)\n\tat java.lang.Object.wait(Native Method)\n\t- waiting on <0x00000007b0f10268> (a java.lang.ref.ReferenceQueue$Lock)\n\tat java.lang.ref.ReferenceQueue.remove(ReferenceQueue.java:135)\n\t- locked <0x00000007b0f10268> (a java.lang.ref.ReferenceQueue$Lock)\n\tat java.lang.ref.ReferenceQueue.remove(ReferenceQueue.java:151)\n\tat java.lang.ref.Finalizer$FinalizerThread.run(Finalizer.java:209)\n\n   Locked ownable synchronizers:\n\t- None\n\n""Reference Handler"" daemon prio=10 tid=0x00007fd80806c000 nid=0xf88 in Object.wait() [0x00007fd8053d2000]\n   java.lang.Thread.State: WAITING (on object monitor)\n\tat java.lang.Object.wait(Native Method)\n\t- waiting on <0x00000007b0f08578> (a java.lang.ref.Reference$Lock)\n\tat java.lang.Object.wait(Object.java:503)\n\tat java.lang.ref.Reference$ReferenceHandler.run(Reference.java:133)\n\t- locked <0x00000007b0f08578> (a java.lang.ref.Reference$Lock)\n\n')",[37809]
"('FilterBuilder.java', 'org.reflections.util.FilterBuilder$Include', 'apply', 'com\\.github\\.olivergondza\\.dumpling.*', 'com/github/olivergondza/dumpling/query/DeadlocksTest.class')","[54010, 72448, 98978, 117416, 139789, 158227, 179166, 197604, 218543, 236969, 254980, 274388, 294750, 314158, 334611, 354019, 374472, 393880, 414242, 433650, 463212, 481650, 502589, 521027, 541966, 560404, 581343, 599781, 620720, 639158, 660097, 678523, 696566, 719846, 743130, 766891, 792238, 815518, 838798, 862078, 885358, 908642, 932407, 969730, 993010, 1016290, 1039570, 1062850, 1086130, 1109410, 1132694, 1158562, 1181842, 1205122, 1228362, 1246792, 1265222, 1283652, 1302082, 1320512, 1338950, 1359889, 1378327, 1399266, 1417692, 1435695, 1454133, 1480579, 1499017, 1530460, 1548898, 1568290, 1586720, 1605158, 1624550, 1642980, 1661418, 1682791, 1712979, 1731405, 1749354, 1767792, 1794376, 1812806, 1831244, 1850636, 1869066, 1887496, 1905930, 1924841, 1943275, 1962186, 1980616, 1999050, 2017961, 2036399, 2055791, 2074221, 2092647, 2114554, 2132992, 2157422, 2175860, 2210630, 2229068, 2255598, 2274036, 2313141, 2332064, 2356761, 2375684]"
"('FilterBuilder.java', 'org.reflections.util.FilterBuilder$Include', 'apply', 'com\\.github\\.olivergondza\\.dumpling.*', 'com/github/olivergondza/dumpling/model/ProcessThread$Builder.class')","[64762, 83766, 109730, 128734, 150541, 169545, 189918, 208922, 229295, 247438, 266298, 286272, 306068, 326042, 345929, 365903, 385790, 405764, 425560, 445534, 473964, 492968, 513341, 532345, 552718, 571722, 592095, 611099, 631472, 650476, 670849, 688992, 710148, 733428, 756995, 780473, 805820, 829100, 852380, 875660, 898940, 922507, 946272, 983312, 1006592, 1029872, 1053152, 1076432, 1099712, 1122992, 1146559, 1172144, 1195424, 1218704, 1239114, 1257544, 1275974, 1294404, 1312834, 1331264, 1350268, 1370641, 1389645, 1410018, 1428161, 1446447, 1465451, 1491331, 1510335, 1541212, 1560216, 1579042, 1597472, 1616476, 1635302, 1653732, 1672736, 1693543, 1723731, 1741874, 1760106, 1779110, 1805128, 1823558, 1842562, 1861388, 1879818, 1898248, 1916965, 1935593, 1954310, 1972938, 1991368, 2010085, 2028713, 2047717, 2066543, 2084973, 2103116, 2125306, 2144310, 2168174, 2187178, 2221382, 2240386, 2266350, 2285354, 2324176, 2343665, 2367796, 2387285]"
"('FilterBuilder.java', 'org.reflections.util.FilterBuilder$Include', 'apply', 'com\\.github\\.olivergondza\\.dumpling.*', 'com.github.olivergondza.dumpling.model.ProcessRuntime.class')","[65449, 84489, 110417, 129457, 151228, 170268, 190605, 209645, 229982, 248107, 267021, 287031, 306791, 326801, 346652, 366662, 386513, 406523, 426283, 446293, 474651, 493691, 514028, 533068, 553405, 572445, 592782, 611822, 632159, 651199, 671536, 689661, 711015, 734295, 757880, 781340, 806687, 829967, 853247, 876527, 899807, 923392, 947157, 984179, 1007459, 1030739, 1054019, 1077299, 1100579, 1123859, 1147444, 1173011, 1196291, 1219571, 1239801, 1258231, 1276661, 1295091, 1313521, 1331951, 1350991, 1371328, 1390368, 1410705, 1428830, 1447134, 1466174, 1492018, 1511058, 1541899, 1560939, 1579729, 1598159, 1617199, 1635989, 1654419, 1673459, 1694230, 1724418, 1742543, 1760793, 1779833, 1805815, 1824245, 1843285, 1862075, 1880505, 1898935, 1917670, 1936280, 1955015, 1973625, 1992055, 2010790, 2029400, 2048440, 2067230, 2085660, 2103785, 2125993, 2145033, 2168861, 2187901, 2222069, 2241109, 2267037, 2286077, 2324881, 2344406, 2368501, 2388026]"
"('FilterBuilder.java', 'org.reflections.util.FilterBuilder$Include', 'apply', 'com\\.github\\.olivergondza\\.dumpling.*', 'com.github.olivergondza.dumpling.cli.GroovyRuntimeTest.class')","[54959, 73447, 99927, 118415, 140738, 159226, 180115, 198603, 219492, 237893, 255979, 275437, 295749, 315207, 335610, 355068, 375471, 394929, 415241, 434699, 464161, 482649, 503538, 522026, 542915, 561403, 582292, 600780, 621669, 640157, 661046, 679447, 697765, 721045, 744354, 768090, 793437, 816717, 839997, 863277, 886557, 909866, 933631, 970929, 994209, 1017489, 1040769, 1064049, 1087329, 1110609, 1133918, 1159761, 1183041, 1206321, 1229311, 1247741, 1266171, 1284601, 1303031, 1321461, 1339949, 1360838, 1379326, 1400215, 1418616, 1436644, 1455132, 1481528, 1500016, 1531409, 1549897, 1569239, 1587669, 1606157, 1625499, 1643929, 1662417, 1683740, 1713928, 1732329, 1750303, 1768791, 1795325, 1813755, 1832243, 1851585, 1870015, 1888445, 1906904, 1925790, 1944249, 1963135, 1981565, 2000024, 2018910, 2037398, 2056740, 2075170, 2093571, 2115503, 2133991, 2158371, 2176859, 2211579, 2230067, 2256547, 2275035, 2314115, 2333088, 2357735, 2376708]"
"('ThreadDumpFactory.java', 'com.github.olivergondza.dumpling.factory.ThreadDumpFactory', 'initHeader', '#\\d+', '[0x00007f2c3cae8000]')","[3819, 3853]"
"('FilterBuilder.java', 'org.reflections.util.FilterBuilder$Include', 'apply', 'com\\.github\\.olivergondza\\.dumpling.*', 'com/github/olivergondza/dumpling/model/ModelObject$Mode.class')","[62476, 81360, 107444, 126328, 148255, 167139, 187632, 206516, 227009, 245212, 263892, 283746, 303662, 323516, 343523, 363377, 383384, 403238, 423154, 443008, 471678, 490562, 511055, 529939, 550432, 569316, 589809, 608693, 629186, 648070, 668563, 686766, 707262, 730542, 754049, 777587, 802934, 826214, 849494, 872774, 896054, 919561, 943326, 980426, 1003706, 1026986, 1050266, 1073546, 1096826, 1120106, 1143613, 1169258, 1192538, 1215818, 1236828, 1255258, 1273688, 1292118, 1310548, 1328978, 1347862, 1368355, 1387239, 1407732, 1425935, 1444161, 1463045, 1489045, 1507929, 1538926, 1557810, 1576756, 1595186, 1614070, 1633016, 1651446, 1670330, 1691257, 1721445, 1739648, 1757820, 1776704, 1802842, 1821272, 1840156, 1859102, 1877532, 1895962, 1914619, 1933307, 1951964, 1970652, 1989082, 2007739, 2026427, 2045311, 2064257, 2082687, 2100890, 2123020, 2141904, 2165888, 2184772, 2219096, 2237980, 2264064, 2282948, 2321830, 2341199, 2365450, 2384819]"
"('FilterBuilder.java', 'org.reflections.util.FilterBuilder$Include', 'apply', 'com\\.github\\.olivergondza\\.dumpling.*', 'com/github/olivergondza/dumpling/query/command.deadlocks.usage')","[67740, 86900, 112708, 131868, 153519, 172679, 192896, 212056, 232273, 250338, 269432, 289562, 309202, 329332, 349063, 369193, 388924, 409054, 428694, 448824, 476942, 496102, 516319, 535479, 555696, 574856, 595073, 614233, 634450, 653610, 673827, 691892, 713906, 737186, 760831, 784231, 809578, 832858, 856138, 879418, 902698, 926343, 950108, 987070, 1010350, 1033630, 1056910, 1080190, 1103470, 1126750, 1150395, 1175902, 1199182, 1222462, 1242092, 1260522, 1278952, 1297382, 1315812, 1334242, 1353402, 1373619, 1392779, 1412996, 1431061, 1449425, 1468585, 1494309, 1513469, 1544190, 1563350, 1582020, 1600450, 1619610, 1638280, 1656710, 1675870, 1696521, 1726709, 1744774, 1763084, 1782244, 1808106, 1826536, 1845696, 1864366, 1882796, 1901226, 1920021, 1938571, 1957366, 1975916, 1994346, 2013141, 2031691, 2050851, 2069521, 2087951, 2106016, 2128284, 2147444, 2171152, 2190312, 2224360, 2243520, 2269328, 2288488, 2327232, 2346877, 2370852, 2390497]"
"('FilterBuilder.java', 'org.reflections.util.FilterBuilder$Exclude', 'apply', 'java.lang.Object', 'com.github.olivergondza.dumpling.factory.PidRuntimeFactory')","[55951, 74491, 100919, 119459, 141730, 160270, 181107, 199647, 220484, 238859, 257023, 276533, 296793, 316303, 336654, 356164, 376515, 396025, 416285, 435795, 465153, 483693, 504530, 523070, 543907, 562447, 583284, 601824, 622661, 641201, 662038, 680413, 699017, 722297, 745632, 769342, 794689, 817969, 841249, 864529, 887809, 911144, 934909, 972181, 995461, 1018741, 1042021, 1065301, 1088581, 1111861, 1135196, 1161013, 1184293, 1207573, 1230303, 1248733, 1267163, 1285593, 1304023, 1322453, 1340993, 1361830, 1380370, 1401207, 1419582, 1437636, 1456176, 1482520, 1501060, 1532401, 1550941, 1570231, 1588661, 1607201, 1626491, 1644921, 1663461, 1684732, 1714920, 1733295, 1751295, 1769835, 1796317, 1814747, 1833287, 1852577, 1871007, 1889437, 1907922, 1926782, 1945267, 1964127, 1982557, 2001042, 2019902, 2038442, 2057732, 2076162, 2094537, 2116495, 2135035, 2159363, 2177903, 2212571, 2231111, 2257539, 2276079, 2315133, 2334158, 2358753, 2377778]"
"('ThreadDumpFactory.java', 'com.github.olivergondza.dumpling.factory.ThreadDumpFactory', 'initHeader', '#\\d+', '[0x00007ff5a97f9000]')","[2113435, 2113461, 2156087, 2156122, 2198955, 2198990, 2203075, 2203101]"
"('FilterBuilder.java', 'org.reflections.util.FilterBuilder$Include', 'apply', 'com\\.github\\.olivergondza\\.dumpling.*', 'com.github.olivergondza.dumpling.model.ProcessThread$5.class')","[63653, 82599, 108621, 127567, 149432, 168378, 188809, 207755, 228186, 246358, 265131, 285047, 304901, 324817, 344762, 364678, 384623, 404539, 424393, 444309, 472855, 491801, 512232, 531178, 551609, 570555, 590986, 609932, 630363, 649309, 669740, 687912, 708749, 732029, 755567, 779074, 804421, 827701, 850981, 874261, 897541, 921079, 944844, 981913, 1005193, 1028473, 1051753, 1075033, 1098313, 1121593, 1145131, 1170745, 1194025, 1217305, 1238005, 1256435, 1274865, 1293295, 1311725, 1330155, 1349101, 1369532, 1388478, 1408909, 1427081, 1445338, 1464284, 1490222, 1509168, 1540103, 1559049, 1577933, 1596363, 1615309, 1634193, 1652623, 1671569, 1692434, 1722622, 1740794, 1758997, 1777943, 1804019, 1822449, 1841395, 1860279, 1878709, 1897139, 1915827, 1934484, 1953172, 1971829, 1990259, 2008947, 2027604, 2046550, 2065434, 2083864, 2102036, 2124197, 2143143, 2167065, 2186011, 2220273, 2239219, 2265241, 2284187, 2323038, 2342469, 2366658, 2386089]"
"('FilterBuilder.java', 'org.reflections.util.FilterBuilder$Include', 'apply', 'com\\.github\\.olivergondza\\.dumpling.*', 'com/github/olivergondza/dumpling/model/jmx/JmxThread$Builder.class')","[62704, 81600, 107672, 126568, 148483, 167379, 187860, 206756, 227237, 245434, 264132, 283998, 303902, 323768, 343763, 363629, 383624, 403490, 423394, 443260, 471906, 490802, 511283, 530179, 550660, 569556, 590037, 608933, 629414, 648310, 668791, 686988, 707550, 730830, 754343, 777875, 803222, 826502, 849782, 873062, 896342, 919855, 943620, 980714, 1003994, 1027274, 1050554, 1073834, 1097114, 1120394, 1143907, 1169546, 1192826, 1216106, 1237056, 1255486, 1273916, 1292346, 1310776, 1329206, 1348102, 1368583, 1387479, 1407960, 1426157, 1444389, 1463285, 1489273, 1508169, 1539154, 1558050, 1576984, 1595414, 1614310, 1633244, 1651674, 1670570, 1691485, 1721673, 1739870, 1758048, 1776944, 1803070, 1821500, 1840396, 1859330, 1877760, 1896190, 1914853, 1933535, 1952198, 1970880, 1989310, 2007973, 2026655, 2045551, 2064485, 2082915, 2101112, 2123248, 2142144, 2166116, 2185012, 2219324, 2238220, 2264292, 2283188, 2322064, 2341445, 2365684, 2385065]"
"('Scanner.java', 'java.util.Scanner', 'getCompleteTokenInBuffer', '(?s).*', '2014-06-30 20:54:52\nFull thread dump OpenJDK 64-Bit Server VM (24.60-b09 mixed mode):\n\n""blocked_thread"" prio=10 tid=0x00002ad39c16b800 nid=0x7e29 waiting for monitor entry [0x00002ad3cf8f7000]\n   java.lang.Thread.State: BLOCKED (on object monitor)\n\tat hudson.model.Queue.getItem(Queue.java:719)\n\t- waiting to lock <0x00000004063a9378> (a hudson.model.Queue)\n\tat hudson.model.AbstractProject.getQueueItem(AbstractProject.java:927)\n\tat hudson.matrix.DefaultMatrixExecutionStrategyImpl.waitForCompletion(DefaultMatrixExecutionStrategyImpl.java:220)\n\tat hudson.matrix.DefaultMatrixExecutionStrategyImpl.run(DefaultMatrixExecutionStrategyImpl.java:163)\n\tat hudson.matrix.MatrixBuild$MatrixBuildExecution.doRun(MatrixBuild.java:340)\n\tat hudson.model.AbstractBuild$AbstractBuildExecution.run(AbstractBuild.java:499)\n\tat hudson.model.Run.execute(Run.java:1502)\n\tat hudson.matrix.MatrixBuild.run(MatrixBuild.java:289)\n\tat hudson.model.ResourceController.execute(ResourceController.java:88)\n\tat hudson.model.Executor.run(Executor.java')","[177517, 216894, 500940, 540317, 579694, 619071, 658448, 790042, 1156327, 1358240, 1397617, 1680708]"
"('FilterBuilder.java', 'org.reflections.util.FilterBuilder$Include', 'apply', 'com\\.github\\.olivergondza\\.dumpling.*', 'com/github/olivergondza/dumpling/model/ProcessThread$7.class')","[62322, 81198, 107290, 126166, 148101, 166977, 187478, 206354, 226855, 245062, 263730, 283576, 303500, 323346, 343361, 363207, 383222, 403068, 422992, 442838, 471524, 490400, 510901, 529777, 550278, 569154, 589655, 608531, 629032, 647908, 668409, 686616, 707068, 730348, 753851, 777393, 802740, 826020, 849300, 872580, 895860, 919363, 943128, 980232, 1003512, 1026792, 1050072, 1073352, 1096632, 1119912, 1143415, 1169064, 1192344, 1215624, 1236674, 1255104, 1273534, 1291964, 1310394, 1328824, 1347700, 1368201, 1387077, 1407578, 1425785, 1444007, 1462883, 1488891, 1507767, 1538772, 1557648, 1576602, 1595032, 1613908, 1632862, 1651292, 1670168, 1691103, 1721291, 1739498, 1757666, 1776542, 1802688, 1821118, 1839994, 1858948, 1877378, 1895808, 1914461, 1933153, 1951806, 1970498, 1988928, 2007581, 2026273, 2045149, 2064103, 2082533, 2100740, 2122866, 2141742, 2165734, 2184610, 2218942, 2237818, 2263910, 2282786, 2321672, 2341033, 2365292, 2384653]"
"('Scanner.java', 'java.util.Scanner', 'getCompleteTokenInBuffer', '(?s).*', '3779\n')",[22525]
"('ThreadDumpFactory.java', 'com.github.olivergondza.dumpling.factory.ThreadDumpFactory', 'initHeader', '#\\d+', '[0x00007f0d0b7f6000]')","[24722, 24756]"
"('ThreadDumpFactory.java', 'com.github.olivergondza.dumpling.factory.ThreadDumpFactory', 'initHeader', '#\\d+', '[0x00002ad476030000]')","[92290, 92325, 1473964, 1473998, 1702276, 1702366, 1787634, 1787669, 2204599, 2204625, 2248910, 2248945, 2293878, 2293913, 2300917, 2300943]"
"('FilterBuilder.java', 'org.reflections.util.FilterBuilder$Include', 'apply', 'com\\.github\\.olivergondza\\.dumpling.*', 'com/github/olivergondza/dumpling/TestThread/jmxremote.access')","[71306, 90654, 116274, 135622, 157085, 176433, 196462, 215810, 235839, 253810, 273186, 293504, 312956, 333274, 352817, 373135, 392678, 412996, 432448, 452766, 480508, 499856, 519885, 539233, 559262, 578610, 598639, 617987, 638016, 657364, 677393, 695364, 718412, 741692, 765431, 788737, 814084, 837364, 860644, 883924, 907204, 930943, 954708, 991576, 1014856, 1038136, 1061416, 1084696, 1107976, 1131256, 1154995, 1180408, 1203688, 1226968, 1245658, 1264088, 1282518, 1300948, 1319378, 1337808, 1357156, 1377185, 1396533, 1416562, 1434533, 1452991, 1472339, 1497875, 1517223, 1547756, 1567104, 1585586, 1604016, 1623364, 1641846, 1660276, 1679624, 1700087, 1730275, 1748246, 1766650, 1785998, 1811672, 1830102, 1849450, 1867932, 1886362, 1904792, 1923681, 1942137, 1961026, 1979482, 1997912, 2016801, 2035257, 2054605, 2073087, 2091517, 2109488, 2131850, 2151198, 2174718, 2194066, 2227926, 2247274, 2272894, 2292242, 2330892, 2350725, 2374512, 2394345]"
"('FilterBuilder.java', 'org.reflections.util.FilterBuilder$Include', 'apply', 'com\\.github\\.olivergondza\\.dumpling.*', 'com/github/olivergondza/dumpling/model/jvm/JvmThreadSet.class')","[64534, 83526, 109502, 128494, 150313, 169305, 189690, 208682, 229067, 247216, 266058, 286020, 305828, 325790, 345689, 365651, 385550, 405512, 425320, 445282, 473736, 492728, 513113, 532105, 552490, 571482, 591867, 610859, 631244, 650236, 670621, 688770, 709860, 733140, 756701, 780185, 805532, 828812, 852092, 875372, 898652, 922213, 945978, 983024, 1006304, 1029584, 1052864, 1076144, 1099424, 1122704, 1146265, 1171856, 1195136, 1218416, 1238886, 1257316, 1275746, 1294176, 1312606, 1331036, 1350028, 1370413, 1389405, 1409790, 1427939, 1446219, 1465211, 1491103, 1510095, 1540984, 1559976, 1578814, 1597244, 1616236, 1635074, 1653504, 1672496, 1693315, 1723503, 1741652, 1759878, 1778870, 1804900, 1823330, 1842322, 1861160, 1879590, 1898020, 1916731, 1935365, 1954076, 1972710, 1991140, 2009851, 2028485, 2047477, 2066315, 2084745, 2102894, 2125078, 2144070, 2167946, 2186938, 2221154, 2240146, 2266122, 2285114, 2323942, 2343419, 2367562, 2387039]"
"('Description.java', 'org.junit.runner.Description', 'methodAndClassNamePatternGroupOrDefault', '([\\s\\S]*)\\((.*)\\)', 'notEnoughArguments(com.github.olivergondza.dumpling.cli.MainTest)')",[1474]
"('FilterBuilder.java', 'org.reflections.util.FilterBuilder$Include', 'apply', 'com\\.github\\.olivergondza\\.dumpling.*', 'com/github/olivergondza/dumpling/cli/GroovyRuntimeTest$1.class')","[55304, 73810, 100272, 118778, 141083, 159589, 180460, 198966, 219837, 238229, 256342, 275818, 296112, 315588, 335973, 355449, 375834, 395310, 415604, 435080, 464506, 483012, 503883, 522389, 543260, 561766, 582637, 601143, 622014, 640520, 661391, 679783, 698200, 721480, 744798, 768525, 793872, 817152, 840432, 863712, 886992, 910310, 934075, 971364, 994644, 1017924, 1041204, 1064484, 1087764, 1111044, 1134362, 1160196, 1183476, 1206756, 1229656, 1248086, 1266516, 1284946, 1303376, 1321806, 1340312, 1361183, 1379689, 1400560, 1418952, 1436989, 1455495, 1481873, 1500379, 1531754, 1550260, 1569584, 1588014, 1606520, 1625844, 1644274, 1662780, 1684085, 1714273, 1732665, 1750648, 1769154, 1795670, 1814100, 1832606, 1851930, 1870360, 1888790, 1907258, 1926135, 1944603, 1963480, 1981910, 2000378, 2019255, 2037761, 2057085, 2075515, 2093907, 2115848, 2134354, 2158716, 2177222, 2211924, 2230430, 2256892, 2275398, 2314469, 2333460, 2358089, 2377080]"
"('FilterBuilder.java', 'org.reflections.util.FilterBuilder$Include', 'apply', 'com\\.github\\.olivergondza\\.dumpling.*', 'com.github.olivergondza.dumpling.DisposeRule$Disposable.class')","[72135, 91527, 117103, 136495, 157914, 177306, 197291, 216683, 236668, 254617, 274059, 294421, 313829, 334191, 353690, 374052, 393551, 413913, 433321, 453683, 481337, 500729, 520714, 540106, 560091, 579483, 599468, 618860, 638845, 658237, 678222, 696171, 719461, 742741, 766502, 789786, 815133, 838413, 861693, 884973, 908253, 932014, 955779, 992625, 1015905, 1039185, 1062465, 1085745, 1109025, 1132305, 1156066, 1181457, 1204737, 1228017, 1246487, 1264917, 1283347, 1301777, 1320207, 1338637, 1358029, 1378014, 1397406, 1417391, 1435340, 1453820, 1473212, 1498704, 1518096, 1548585, 1567977, 1586415, 1604845, 1624237, 1642675, 1661105, 1680497, 1700916, 1731104, 1749053, 1767479, 1786871, 1812501, 1830931, 1850323, 1868761, 1887191, 1905621, 1924532, 1942966, 1961877, 1980311, 1998741, 2017652, 2036086, 2055478, 2073916, 2092346, 2110295, 2132679, 2152071, 2175547, 2194939, 2228755, 2248147, 2273723, 2293115, 2331743, 2351620, 2375363, 2395240]"
"('FilterBuilder.java', 'org.reflections.util.FilterBuilder$Include', 'apply', 'com\\.github\\.olivergondza\\.dumpling.*', 'com.github.olivergondza.dumpling.factory.IllegalRuntimeStateException.class')","[68459, 87657, 113427, 132625, 154238, 173436, 193615, 212813, 232992, 251038, 270189, 290357, 309959, 330127, 349820, 369988, 389681, 409849, 429451, 449619, 477661, 496859, 517038, 536236, 556415, 575613, 595792, 614990, 635169, 654367, 674546, 692592, 714815, 738095, 761759, 785140, 810487, 833767, 857047, 880327, 903607, 927271, 951036, 987979, 1011259, 1034539, 1057819, 1081099, 1104379, 1127659, 1151323, 1176811, 1200091, 1223371, 1242811, 1261241, 1279671, 1298101, 1316531, 1334961, 1354159, 1374338, 1393536, 1413715, 1431761, 1450144, 1469342, 1495028, 1514226, 1544909, 1564107, 1582739, 1601169, 1620367, 1638999, 1657429, 1676627, 1697240, 1727428, 1745474, 1763803, 1783001, 1808825, 1827255, 1846453, 1865085, 1883515, 1901945, 1920759, 1939290, 1958104, 1976635, 1995065, 2013879, 2032410, 2051608, 2070240, 2088670, 2106716, 2129003, 2148201, 2171871, 2191069, 2225079, 2244277, 2270047, 2289245, 2327970, 2347653, 2371590, 2391273]"
"('Scanner.java', 'java.util.Scanner', 'getCompleteTokenInBuffer', '(?s).*', '""process reaper"" daemon prio=10 tid=0x00007fd6b8029000 nid=0xdd9 waiting on condition [0x00007fd6e00ee000]\n   java.lang.Thread.State: TIMED_WAITING (parking)\n\tat sun.misc.Unsafe.park(Native Method)\n\t- parking to wait for  <0x00000007070054d0> (a java.util.concurrent.SynchronousQueue$TransferStack)\n\tat java.util.concurrent.locks.LockSupport.parkNanos(LockSupport.java:226)\n\tat java.util.concurrent.SynchronousQueue$TransferStack.awaitFulfill(SynchronousQueue.java:460)\n\tat java.util.concurrent.SynchronousQueue$TransferStack.transfer(SynchronousQueue.java:359)\n\tat java.util.concurrent.SynchronousQueue.poll(SynchronousQueue.java:942)\n\tat java.util.concurrent.ThreadPoolExecutor.getTask(ThreadPoolExecutor.java:1068)\n\tat java.util.concurrent.ThreadPoolExecutor.runWorker(ThreadPoolExecutor.java:1130)\n\tat java.util.concurrent.ThreadPoolExecutor$Worker.run(ThreadPoolExecutor.java:615)\n\tat java.lang.Thread.run(Thread.java:745)\n\n   Locked ownable synchronizers:\n\t- None\n\n""process reaper"" daemon prio=10 tid=0x00007fd6b800d000 nid=0xdc9 runnable [0x00007fd6f804f000]\n   java.lang.Thread.State: RUNNABLE\n\tat java.lang.UNIXProcess.waitForProcessExit(Native Method)\n\tat java.lang.UNIXProcess.access$500(UNIXProcess.java:55)\n\tat java.lang.UNIXProcess$4.run(UNIXProcess.java:228)\n\tat java.util.concurrent.ThreadPoolExecutor.runWorker(ThreadPoolExecutor.java:1145)\n\tat java.util.concurrent.ThreadPoolExecutor$Worker.run(ThreadPoolExecutor.java:615)\n\tat java.lang.Thread.run(Thread.java:745)\n\n   Locked ownable synchronizers:\n\t- <0x0000000707005618> (a java.util.concurrent.ThreadPoolExecutor$Worker)\n\n""pool-1-thread-1"" daemon prio=10 tid=0x00007fd6fc43d800 nid=0xdc7 runnable [0x00007fd6f8153000]\n   java.lang.Thread.State: RUNNABLE\n\tat java.io.FileInputStream.readBytes(Native Method)\n\tat java.io.FileInputStream.read(FileInputStream.java:272)\n\tat java.io.BufferedInputStream.read1(BufferedInputStream.java:273)\n\tat java.io.BufferedInputStream.read(BufferedInputStream.java:334)\n\t- locked <0x00000007b2d59138> (a java.lang.UNIXProcess$ProcessPipeInputStr')","[457596, 457984]"
"('Scanner.java', 'java.util.Scanner', 'getCompleteTokenInBuffer', '(?s).*', '2018-01-11 20:22:16\nFull thread dump Java HotSpot(TM) 64-Bit Server VM (24.80-b11 mixed mode):\n\n""Attach Listener"" daemon prio=10 tid=0x00007fd7e0001000 nid=0xf9d waiting on condition [0x0000000000000000]\n   java.lang.Thread.State: RUNNABLE\n\n   Locked ownable synchronizers:\n\t- None\n\n""Service Thread"" daemon prio=10 tid=0x00007fd808096800 nid=0xf8d runnable [0x0000000000000000]\n   java.lang.Thread.State: RUNNABLE\n\n   Locked ownable synchronizers:\n\t- None\n\n""C2 CompilerThread1"" daemon prio=10 tid=0x00007fd808094800 nid=0xf8c waiting on condition [0x0000000000000000]\n   java.lang.Thread.State: RUNNABLE\n\n   Locked ownable synchronizers:\n\t- None\n\n""C2 CompilerThread0"" daemon prio=10 tid=0x00007fd808091800 nid=0xf8b waiting on condition [0x0000000000000000]\n   java.lang.Thread.State: RUNNABLE\n\n   Locked ownable synchronizers:\n\t- None\n\n""Signal Dispatcher"" daemon prio=10 tid=0x00007fd80808f000 nid=0xf8a runnable [0x0000000000000000]\n   java.lang.Thread.State: RUNNABLE\n\n   Locked ownable synchronizers:\n\t- None\n\n""Finalizer')","[36322, 36388, 36730, 36934, 37276, 37618]"
"('ThreadDumpFactory.java', 'com.github.olivergondza.dumpling.factory.ThreadDumpFactory', 'initHeader', '#\\d+', '[0x00007f8b39a3d000]')","[45366, 45400]"
"('FilterBuilder.java', 'org.reflections.util.FilterBuilder$Include', 'apply', 'com\\.github\\.olivergondza\\.dumpling.*', 'com/github/olivergondza/dumpling/model/ProcessThread$5.class')","[63616, 82560, 108584, 127528, 149395, 168339, 188772, 207716, 228149, 246322, 265092, 285006, 304862, 324776, 344723, 364637, 384584, 404498, 424354, 444268, 472818, 491762, 512195, 531139, 551572, 570516, 590949, 609893, 630326, 649270, 669703, 687876, 708702, 731982, 755519, 779027, 804374, 827654, 850934, 874214, 897494, 921031, 944796, 981866, 1005146, 1028426, 1051706, 1074986, 1098266, 1121546, 1145083, 1170698, 1193978, 1217258, 1237968, 1256398, 1274828, 1293258, 1311688, 1330118, 1349062, 1369495, 1388439, 1408872, 1427045, 1445301, 1464245, 1490185, 1509129, 1540066, 1559010, 1577896, 1596326, 1615270, 1634156, 1652586, 1671530, 1692397, 1722585, 1740758, 1758960, 1777904, 1803982, 1822412, 1841356, 1860242, 1878672, 1897102, 1915789, 1934447, 1953134, 1971792, 1990222, 2008909, 2027567, 2046511, 2065397, 2083827, 2102000, 2124160, 2143104, 2167028, 2185972, 2220236, 2239180, 2265204, 2284148, 2323000, 2342429, 2366620, 2386049]"
"('ThreadDumpFactory.java', 'com.github.olivergondza.dumpling.factory.ThreadDumpFactory', 'initHeader', '#\\d+', '[0x00007fd881b73000]')","[47510, 47544]"
"('Scanner.java', 'java.util.Scanner', 'getCompleteTokenInBuffer', '(?s).*', '""process reaper"" daemon prio=10 tid=0x7fd6b800d000 nid=3529\n   java.lang.Thread.State: RUNNABLE\n\tat java.lang.UNIXProcess.waitForProcessExit(Native Method)\n\tat java.lang.UNIXProcess.access$500(UNIXProcess.java:55)\n\tat java.lang.UNIXProcess$4.run(UNIXProcess.java:228)\n\tat java.util.concurrent.ThreadPoolExecutor.runWorker(ThreadPoolExecutor.java:1145)\n\tat java.util.concurrent.ThreadPoolExecutor$Worker.run(ThreadPoolExecutor.java:615)\n\tat java.lang.Thread.run(Thread.java:745)\n\n   Locked ownable synchronizers:\n\t- <0x707005618> (a java.util.concurrent.ThreadPoolExecutor$Worker)\n\n\n""pool-1-thread-1"" daemon prio=10 tid=0x7fd6fc43d800 nid=3527\n   java.lang.Thread.State: RUNNABLE\n\tat java.io.FileInputStream.readBytes(Native Method)\n\tat java.io.FileInputStream.read(FileInputStream.java:272)\n\tat java.io.BufferedInputStream.read1(BufferedInputStream.java:273)\n\tat java.io.BufferedInputStream.read(BufferedInputStream.java:334)\n\t- locked <0x7b78ec540> (a java.lang.UNIXProcess$ProcessPipeInputStream)\n\tat sun.nio.cs.StreamDecoder.readBytes(StreamDecoder.java:283)\n\tat sun.nio.cs.StreamDecoder.implRead(StreamDecoder.java:325)\n\tat sun.nio.cs.StreamDecoder.read(StreamDecoder.java:177)\n\t- locked <0x7b78f0810> (a java.io.InputStreamReader)\n\tat java.io.InputStreamReader.read(InputStreamReader.java:184)\n\tat java.io.Reader.read(Reader.java:100)\n\tat java.util.Scanner.readInput(Scanner.java:849)\n\tat java.util.Scanner.hasNext(Scanner.java:1384)\n\tat com.github.olivergondza.dumpling.factory.ThreadDumpFactory.fromStream(ThreadDumpFactory.java:118)\n\tat com.github.olivergondza.dumpling.factory.PidRuntimeFactory.createRuntime(PidRuntimeFactory.java:191)\n\tat com.github.olivergondza.dumpling.factory.PidRuntimeFactory.fromProcess(PidRuntimeFactory.java:85)\n\tat com.github.olivergondza.dumpling.factory.PidRuntimeFactory.fromProcess(PidRuntimeFactory.java:101)\n\tat com.github.olivergondza.dumpling.cli.Factories$Pid.createRuntime(Factories.java:114)\n\tat com.github.olivergondza.dumpling.cli.Factories$Pid.createRuntime(Factories.java:98)\n\tat com.github.olive')",[1528856]
"('Scanner.java', 'java.util.Scanner', 'getCompleteTokenInBuffer', '(?s).*', '""main"" prio=10 tid=0x00007fe0a0007800 nid=0xfa1 in Object.wait() [0x00007fe0a9587000]\n   java.lang.Thread.State: WAITING (on object monitor)\n\tat java.lang.Object.wait(Native Method)\n\t- waiting on <0x00000007ae5a89f8> (a java.lang.Object)\n\tat java.lang.Object.wait(Object.java:503)\n\tat java_lang_Object$wait.call(Unknown Source)\n\tat org.codehaus.groovy.runtime.callsite.CallSiteArray.defaultCall(CallSiteArray.java:45)\n\tat org.codehaus.groovy.runtime.callsite.AbstractCallSite.call(AbstractCallSite.java:108)\n\tat org.codehaus.groovy.runtime.callsite.AbstractCallSite.call(AbstractCallSite.java:112)\n\tat dumpling-script.run(dumpling-script:18)\n\t- locked <0x00000007ae5a89f8> (a java.lang.Object)\n\tat groovy.lang.GroovyShell.runScriptOrMainOrTestOrRunnable(GroovyShell.java:258)\n\tat groovy.lang.GroovyShell.run(GroovyShell.java:550)\n\tat com.github.olivergondza.dumpling.cli.GroovyCommand.run(GroovyCommand.java:94)\n\tat com.github.olivergondza.dumpling.cli.Main.run(Main.java:75)\n\tat com.github.olivergondza.dumpling.cli.Main.main(Main.java:58)\n\n   Locked ownable synchronizers:\n\t- None\n\n""VM Thread"" prio=10 tid=0x00007fe0a0067800 nid=0xfa6 runnable \n\n""GC task thread#0 (ParallelGC)"" prio=10 tid=0x00007fe0a001d800 nid=0xfa2 runnable \n\n""GC task thread#1 (ParallelGC)"" prio=10 tid=0x00007fe0a001f800 nid=0xfa3 runnable \n\n""GC task thread#2 (ParallelGC)"" prio=10 tid=0x00007fe0a0021000 nid=0xfa4 runnable \n\n""GC task thread#3 (ParallelGC)"" prio=10 tid=0x00007fe0a0023000 nid=0xfa5 runnable \n\n""VM Periodic Task Thread"" prio=10 tid=0x00007fe0a00a1000 nid=0xfad waiting on condition \n\nJNI global references: 262\n\n')","[41487, 41761, 41897, 42033, 42169, 42305, 42441, 42715]"
"('FilterBuilder.java', 'org.reflections.util.FilterBuilder$Exclude', 'apply', 'java.lang.Object', 'com.github.olivergondza.dumpling.query.SingleThreadSetQuery')","[67127, 67395, 67549, 86255, 86537, 86699, 112095, 112363, 112517, 131223, 131505, 131667, 152906, 153174, 153328, 172034, 172316, 172478, 192283, 192551, 192705, 211411, 211693, 211855, 231660, 231928, 232082, 249741, 250002, 250152, 268787, 269069, 269231, 288885, 289181, 289351, 308557, 308839, 309001, 328655, 328951, 329121, 348418, 348700, 348862, 368516, 368812, 368982, 388279, 388561, 388723, 408377, 408673, 408843, 428049, 428331, 428493, 448147, 448443, 448613, 476329, 476597, 476751, 495457, 495739, 495901, 515706, 515974, 516128, 534834, 535116, 535278, 555083, 555351, 555505, 574211, 574493, 574655, 594460, 594728, 594882, 613588, 613870, 614032, 633837, 634105, 634259, 652965, 653247, 653409, 673214, 673482, 673636, 691295, 691556, 691706, 713133, 713471, 713665, 736413, 736751, 736945, 760042, 760387, 760585, 783458, 783796, 783990, 808805, 809143, 809337, 832085, 832423, 832617, 855365, 855703, 855897, 878645, 878983, 879177, 901925, 902263, 902457, 925554, 925899, 926097, 949319, 949664, 949862, 986297, 986635, 986829, 1009577, 1009915, 1010109, 1032857, 1033195, 1033389, 1056137, 1056475, 1056669, 1079417, 1079755, 1079949, 1102697, 1103035, 1103229, 1125977, 1126315, 1126509, 1149606, 1149951, 1150149, 1175129, 1175467, 1175661, 1198409, 1198747, 1198941, 1221689, 1222027, 1222221, 1241479, 1241747, 1241901, 1259909, 1260177, 1260331, 1278339, 1278607, 1278761, 1296769, 1297037, 1297191, 1315199, 1315467, 1315621, 1333629, 1333897, 1334051, 1352757, 1353039, 1353201, 1373006, 1373274, 1373428, 1392134, 1392416, 1392578, 1412383, 1412651, 1412805, 1430464, 1430725, 1430875, 1448812, 1449080, 1449234, 1467940, 1468222, 1468384, 1493696, 1493964, 1494118, 1512824, 1513106, 1513268, 1543577, 1543845, 1543999, 1562705, 1562987, 1563149, 1581407, 1581675, 1581829, 1599837, 1600105, 1600259, 1618965, 1619247, 1619409, 1637667, 1637935, 1638089, 1656097, 1656365, 1656519, 1675225, 1675507, 1675669, 1695908, 1696176, 1696330, 1726096, 1726364, 1726518, 1744177, 1744438, 1744588, 1762471, 1762739, 1762893, 1781599, 1781881, 1782043, 1807493, 1807761, 1807915, 1825923, 1826191, 1826345, 1845051, 1845333, 1845495, 1863753, 1864021, 1864175, 1882183, 1882451, 1882605, 1900613, 1900881, 1901035, 1919392, 1919667, 1919825, 1937958, 1938226, 1938380, 1956737, 1957012, 1957170, 1975303, 1975571, 1975725, 1993733, 1994001, 1994155, 2012512, 2012787, 2012945, 2031078, 2031346, 2031500, 2050206, 2050488, 2050650, 2068908, 2069176, 2069330, 2087338, 2087606, 2087760, 2105419, 2105680, 2105830, 2127671, 2127939, 2128093, 2146799, 2147081, 2147243, 2170539, 2170807, 2170961, 2189667, 2189949, 2190111, 2223747, 2224015, 2224169, 2242875, 2243157, 2243319, 2268715, 2268983, 2269137, 2287843, 2288125, 2288287, 2326603, 2326878, 2327036, 2346216, 2346505, 2346671, 2370223, 2370498, 2370656, 2389836, 2390125, 2390291]"
"('ThreadDumpFactory.java', 'com.github.olivergondza.dumpling.factory.ThreadDumpFactory', 'initHeader', '#\\d+', '[0x00007fe387efd000]')","[11294, 11328]"
"('FilterBuilder.java', 'org.reflections.util.FilterBuilder$Exclude', 'apply', 'java.lang.Object', 'org.hamcrest.TypeSafeMatcher')","[55609, 74131, 100577, 119099, 141388, 159910, 180765, 199287, 220142, 238526, 256663, 276155, 296433, 315925, 336294, 355786, 376155, 395647, 415925, 435417, 464811, 483333, 504188, 522710, 543565, 562087, 582942, 601464, 622319, 640841, 661696, 680080, 698585, 721865, 745191, 768910, 794257, 817537, 840817, 864097, 887377, 910703, 934468, 971749, 995029, 1018309, 1041589, 1064869, 1088149, 1111429, 1134755, 1160581, 1183861, 1207141, 1229961, 1248391, 1266821, 1285251, 1303681, 1322111, 1340633, 1361488, 1380010, 1400865, 1419249, 1437294, 1455816, 1482178, 1500700, 1532059, 1550581, 1569889, 1588319, 1606841, 1626149, 1644579, 1663101, 1684390, 1714578, 1732962, 1750953, 1769475, 1795975, 1814405, 1832927, 1852235, 1870665, 1889095, 1907571, 1926440, 1944916, 1963785, 1982215, 2000691, 2019560, 2038082, 2057390, 2075820, 2094204, 2116153, 2134675, 2159021, 2177543, 2212229, 2230751, 2257197, 2275719, 2314782, 2333789, 2358402, 2377409]"
"('FilterBuilder.java', 'org.reflections.util.FilterBuilder$Include', 'apply', 'com\\.github\\.olivergondza\\.dumpling.*', 'com.github.olivergondza.dumpling.factory.ThreadDumpFactoryVendorTest.ignoreWaitLock.groovy')","[56739, 75321, 101707, 120289, 142518, 161100, 181895, 200477, 221272, 239626, 257853, 277405, 297623, 317175, 337484, 357036, 377345, 396897, 417115, 436667, 465941, 484523, 505318, 523900, 544695, 563277, 584072, 602654, 623449, 642031, 662826, 681180, 700015, 723295, 746651, 770340, 795687, 818967, 842247, 865527, 888807, 912163, 935928, 973179, 996459, 1019739, 1043019, 1066299, 1089579, 1112859, 1136215, 1162011, 1185291, 1208571, 1231091, 1249521, 1267951, 1286381, 1304811, 1323241, 1341823, 1362618, 1381200, 1401995, 1420349, 1438424, 1457006, 1483308, 1501890, 1533189, 1551771, 1571019, 1589449, 1608031, 1627279, 1645709, 1664291, 1685520, 1715708, 1734062, 1752083, 1770665, 1797105, 1815535, 1834117, 1853365, 1871795, 1890225, 1908731, 1927570, 1946076, 1964915, 1983345, 2001851, 2020690, 2039272, 2058520, 2076950, 2095304, 2117283, 2135865, 2160151, 2178733, 2213359, 2231941, 2258327, 2276909, 2315942, 2335009, 2359562, 2378629]"
"('Description.java', 'org.junit.runner.Description', 'methodAndClassNamePatternGroupOrDefault', '([\\s\\S]*)\\((.*)\\)', 'porcelain(com.github.olivergondza.dumpling.cli.GrepCommandTest)')",[550]
"('Scanner.java', 'java.util.Scanner', 'getCompleteTokenInBuffer', '(?s).*', '""VM Periodic Task Thread"" prio=10 tid=0x00007f0d1c0a9000 nid=0xed0 waiting on condition \n\nJNI global references: 198\n\n')","[25822, 26066]"
"('Scanner.java', 'java.util.Scanner', 'getCompleteTokenInBuffer', '(?s).*', '""RMI Scheduler(0)"" daemon prio=10 tid=0x7fd6b80ff800 nid=4148\n   java.lang.Thread.State: TIMED_WAITING (parking)\n\tat sun.misc.Unsafe.park(Native Method)\n\t- parking to wait for <0x7072043e8> (a java.util.concurrent.locks.AbstractQueuedSynchronizer$ConditionObject)\n\tat java.util.concurrent.locks.LockSupport.parkNanos(LockSupport.java:226)\n\tat java.util.concurrent.locks.AbstractQueuedSynchronizer$ConditionObject.awaitNanos(AbstractQueuedSynchronizer.java:2082)\n\tat java.util.concurrent.ScheduledThreadPoolExecutor$DelayedWorkQueue.take(ScheduledThreadPoolExecutor.java:1090)\n\tat java.util.concurrent.ScheduledThreadPoolExecutor$DelayedWorkQueue.take(ScheduledThreadPoolExecutor.java:807)\n\tat java.util.concurrent.ThreadPoolExecutor.getTask(ThreadPoolExecutor.java:1068)\n\tat java.util.concurrent.ThreadPoolExecutor.runWorker(ThreadPoolExecutor.java:1130)\n\tat java.util.concurrent.ThreadPoolExecutor$Worker.run(ThreadPoolExecutor.java:615)\n\tat java.lang.Thread.run(Thread.java:745)\n\n""process reaper"" daemon prio=10 tid=0x7fd6b8029000 nid=3545\n   java.lang.Thread.State: TIMED_WAITING (parking)\n\tat sun.misc.Unsafe.park(Native Method)\n\t- parking to wait for <0x7070054d0> (a java.util.concurrent.SynchronousQueue$TransferStack)\n\tat java.util.concurrent.locks.LockSupport.parkNanos(LockSupport.java:226)\n\tat java.util.concurrent.SynchronousQueue$TransferStack.awaitFulfill(SynchronousQueue.java:460)\n\tat java.util.concurrent.SynchronousQueue$TransferStack.transfer(SynchronousQueue.java:359)\n\tat java.util.concurrent.SynchronousQueue.poll(SynchronousQueue.java:942)\n\tat java.util.concurrent.ThreadPoolExecutor.getTask(ThreadPoolExecutor.java:1068)\n\tat java.util.concurrent.ThreadPoolExecutor.runWorker(ThreadPoolExecutor.java:1130)\n\tat java.util.concurrent.ThreadPoolExecutor$Worker.run(ThreadPoolExecutor.java:615)\n\tat java.lang.Thread.run(Thread.java:745)\n\n""process reaper"" daemon prio=10 tid=0x7fd6b800d000 nid=3529\n   java.lang.Thread.State: RUNNABLE\n\tat java.lang.UNIXProcess.waitForProcessExit(Native Method)\n\tat java.lang.UNIXProcess.access$500')","[1528743, 1528797]"
"('FilterBuilder.java', 'org.reflections.util.FilterBuilder$Include', 'apply', 'com\\.github\\.olivergondza\\.dumpling.*', 'com.github.olivergondza.dumpling.factory.JmxRuntimeFactory$1.class')","[68117, 87297, 113085, 132265, 153896, 173076, 193273, 212453, 232650, 250705, 269829, 289979, 309599, 329749, 349460, 369610, 389321, 409471, 429091, 449241, 477319, 496499, 516696, 535876, 556073, 575253, 595450, 614630, 634827, 654007, 674204, 692259, 714383, 737663, 761318, 784708, 810055, 833335, 856615, 879895, 903175, 926830, 950595, 987547, 1010827, 1034107, 1057387, 1080667, 1103947, 1127227, 1150882, 1176379, 1199659, 1222939, 1242469, 1260899, 1279329, 1297759, 1316189, 1334619, 1353799, 1373996, 1393176, 1413373, 1431428, 1449802, 1468982, 1494686, 1513866, 1544567, 1563747, 1582397, 1600827, 1620007, 1638657, 1657087, 1676267, 1696898, 1727086, 1745141, 1763461, 1782641, 1808483, 1826913, 1846093, 1864743, 1883173, 1901603, 1920408, 1938948, 1957753, 1976293, 1994723, 2013528, 2032068, 2051248, 2069898, 2088328, 2106383, 2128661, 2147841, 2171529, 2190709, 2224737, 2243917, 2269705, 2288885, 2327619, 2347284, 2371239, 2390904]"
"('FilterBuilder.java', 'org.reflections.util.FilterBuilder$Include', 'apply', 'com\\.github\\.olivergondza\\.dumpling.*', 'com.github.olivergondza.dumpling.model.jmx.JmxThread$Builder.class')","[62741, 81639, 107709, 126607, 148520, 167418, 187897, 206795, 227274, 245470, 264171, 284039, 303941, 323809, 343802, 363670, 383663, 403531, 423433, 443301, 471943, 490841, 511320, 530218, 550697, 569595, 590074, 608972, 629451, 648349, 668828, 687024, 707597, 730877, 754391, 777922, 803269, 826549, 849829, 873109, 896389, 919903, 943668, 980761, 1004041, 1027321, 1050601, 1073881, 1097161, 1120441, 1143955, 1169593, 1192873, 1216153, 1237093, 1255523, 1273953, 1292383, 1310813, 1329243, 1348141, 1368620, 1387518, 1407997, 1426193, 1444426, 1463324, 1489310, 1508208, 1539191, 1558089, 1577021, 1595451, 1614349, 1633281, 1651711, 1670609, 1691522, 1721710, 1739906, 1758085, 1776983, 1803107, 1821537, 1840435, 1859367, 1877797, 1896227, 1914891, 1933572, 1952236, 1970917, 1989347, 2008011, 2026692, 2045590, 2064522, 2082952, 2101148, 2123285, 2142183, 2166153, 2185051, 2219361, 2238259, 2264329, 2283227, 2322102, 2341485, 2365722, 2385105]"
"('FilterBuilder.java', 'org.reflections.util.FilterBuilder$Include', 'apply', 'com\\.github\\.olivergondza\\.dumpling.*', 'com/github/olivergondza/dumpling/cli/Main.class')","[59314, 78032, 104282, 123000, 145093, 163811, 184470, 203188, 223847, 242133, 260564, 280252, 300334, 320022, 340195, 359883, 380056, 399744, 419826, 439514, 468516, 487234, 507893, 526611, 547270, 565988, 586647, 605365, 626024, 644742, 665401, 683687, 703270, 726550, 749974, 773595, 798942, 822222, 845502, 868782, 892062, 915486, 939251, 976434, 999714, 1022994, 1046274, 1069554, 1092834, 1116114, 1139538, 1165266, 1188546, 1211826, 1233666, 1252096, 1270526, 1288956, 1307386, 1325816, 1344534, 1365193, 1383911, 1404570, 1422856, 1440999, 1459717, 1485883, 1504601, 1535764, 1554482, 1573594, 1592024, 1610742, 1629854, 1648284, 1667002, 1688095, 1718283, 1736569, 1754658, 1773376, 1799680, 1818110, 1836828, 1855940, 1874370, 1892800, 1911374, 1930145, 1948719, 1967490, 1985920, 2004494, 2023265, 2041983, 2061095, 2079525, 2097811, 2119858, 2138576, 2162726, 2181444, 2215934, 2234652, 2260902, 2279620, 2318585, 2337788, 2362205, 2381408]"
"('FilterBuilder.java', 'org.reflections.util.FilterBuilder$Include', 'apply', 'com\\.github\\.olivergondza\\.dumpling.*', 'com.github.olivergondza.dumpling.TestThread.logging.properties')","[71455, 90811, 116423, 135779, 157234, 176590, 196611, 215967, 235988, 253955, 273343, 293669, 313113, 333439, 352974, 373300, 392835, 413161, 432605, 452931, 480657, 500013, 520034, 539390, 559411, 578767, 598788, 618144, 638165, 657521, 677542, 695509, 718601, 741881, 765624, 788926, 814273, 837553, 860833, 884113, 907393, 931136, 954901, 991765, 1015045, 1038325, 1061605, 1084885, 1108165, 1131445, 1155188, 1180597, 1203877, 1227157, 1245807, 1264237, 1282667, 1301097, 1319527, 1337957, 1357313, 1377334, 1396690, 1416711, 1434678, 1453140, 1472496, 1498024, 1517380, 1547905, 1567261, 1585735, 1604165, 1623521, 1641995, 1660425, 1679781, 1700236, 1730424, 1748391, 1766799, 1786155, 1811821, 1830251, 1849607, 1868081, 1886511, 1904941, 1923834, 1942286, 1961179, 1979631, 1998061, 2016954, 2035406, 2054762, 2073236, 2091666, 2109633, 2131999, 2151355, 2174867, 2194223, 2228075, 2247431, 2273043, 2292399, 2331045, 2350886, 2374665, 2394506]"
"('FilterBuilder.java', 'org.reflections.util.FilterBuilder$Include', 'apply', 'com\\.github\\.olivergondza\\.dumpling.*', 'com/github/olivergondza/dumpling/groovy/GroovyApiEntryPoint.class')","[70058, 89340, 115026, 134308, 155837, 175119, 195214, 214496, 234591, 252595, 271872, 292124, 311642, 331894, 351503, 371755, 391364, 411616, 431134, 451386, 479260, 498542, 518637, 537919, 558014, 577296, 597391, 616673, 636768, 656050, 676145, 694149, 716834, 740114, 763820, 787159, 812506, 835786, 859066, 882346, 905626, 929332, 953097, 989998, 1013278, 1036558, 1059838, 1083118, 1106398, 1129678, 1153384, 1178830, 1202110, 1225390, 1244410, 1262840, 1281270, 1299700, 1318130, 1336560, 1355842, 1375937, 1395219, 1415314, 1433318, 1451743, 1471025, 1496627, 1515909, 1546508, 1565790, 1584338, 1602768, 1622050, 1640598, 1659028, 1678310, 1698839, 1729027, 1747031, 1765402, 1784684, 1810424, 1828854, 1848136, 1866684, 1885114, 1903544, 1922400, 1940889, 1959745, 1978234, 1996664, 2015520, 2034009, 2053291, 2071839, 2090269, 2108273, 2130602, 2149884, 2173470, 2192752, 2226678, 2245960, 2271646, 2290928, 2329611, 2349378, 2373231, 2392998]"
"('FilterBuilder.java', 'org.reflections.util.FilterBuilder$Include', 'apply', 'com\\.github\\.olivergondza\\.dumpling.*', 'com.github.olivergondza.dumpling.cli.GroovyRuntimeTest$3.class')","[55187, 73687, 100155, 118655, 140966, 159466, 180343, 198843, 219720, 238115, 256219, 275689, 295989, 315459, 335850, 355320, 375711, 395181, 415481, 434951, 464389, 482889, 503766, 522266, 543143, 561643, 582520, 601020, 621897, 640397, 661274, 679669, 698053, 721333, 744648, 768378, 793725, 817005, 840285, 863565, 886845, 910160, 933925, 971217, 994497, 1017777, 1041057, 1064337, 1087617, 1110897, 1134212, 1160049, 1183329, 1206609, 1229539, 1247969, 1266399, 1284829, 1303259, 1321689, 1340189, 1361066, 1379566, 1400443, 1418838, 1436872, 1455372, 1481756, 1500256, 1531637, 1550137, 1569467, 1587897, 1606397, 1625727, 1644157, 1662657, 1683968, 1714156, 1732551, 1750531, 1769031, 1795553, 1813983, 1832483, 1851813, 1870243, 1888673, 1907138, 1926018, 1944483, 1963363, 1981793, 2000258, 2019138, 2037638, 2056968, 2075398, 2093793, 2115731, 2134231, 2158599, 2177099, 2211807, 2230307, 2256775, 2275275, 2314349, 2333334, 2357969, 2376954]"
"('Description.java', 'org.junit.runner.Description', 'methodAndClassNamePatternGroupOrDefault', '([\\s\\S]*)\\((.*)\\)', 'com.github.olivergondza.dumpling.cli.SourceTest')","[463034, 463061]"
"('Description.java', 'org.junit.runner.Description', 'methodAndClassNamePatternGroupOrDefault', '([\\s\\S]*)\\((.*)\\)', 'parkedTimedWithBlocker(com.github.olivergondza.dumpling.factory.ThreadDumpFactoryVendorTest)')",[22]
"('Description.java', 'org.junit.runner.Description', 'methodAndClassNamePatternGroupOrDefault', '([\\s\\S]*)\\((.*)\\)', 'toStringNoTraces(com.github.olivergondza.dumpling.query.TopContendersTest)')",[1562]
"('FilterBuilder.java', 'org.reflections.util.FilterBuilder$Exclude', 'apply', 'java.lang.Object', 'com.github.olivergondza.dumpling.factory.ThreadDumpFactoryVendorTest.sleeping.groovy')","[56889, 75479, 101857, 120447, 142668, 161258, 182045, 200635, 221422, 239772, 258011, 277571, 297781, 317341, 337642, 357202, 377503, 397063, 417273, 436833, 466091, 484681, 505468, 524058, 544845, 563435, 584222, 602812, 623599, 642189, 662976, 681326, 700205, 723485, 746845, 770530, 795877, 819157, 842437, 865717, 888997, 912357, 936122, 973369, 996649, 1019929, 1043209, 1066489, 1089769, 1113049, 1136409, 1162201, 1185481, 1208761, 1231241, 1249671, 1268101, 1286531, 1304961, 1323391, 1341981, 1362768, 1381358, 1402145, 1420495, 1438574, 1457164, 1483458, 1502048, 1533339, 1551929, 1571169, 1589599, 1608189, 1627429, 1645859, 1664449, 1685670, 1715858, 1734208, 1752233, 1770823, 1797255, 1815685, 1834275, 1853515, 1871945, 1890375, 1908885, 1927720, 1946230, 1965065, 1983495, 2002005, 2020840, 2039430, 2058670, 2077100, 2095450, 2117433, 2136023, 2160301, 2178891, 2213509, 2232099, 2258477, 2277067, 2316096, 2335171, 2359716, 2378791]"
"('FilterBuilder.java', 'org.reflections.util.FilterBuilder$Exclude', 'apply', 'java.lang.Object', 'com.github.olivergondza.dumpling.groovy.GroovyInterpretterConfig')","[61829, 80679, 106797, 125647, 147608, 166458, 186985, 205835, 226362, 244582, 263211, 283031, 302981, 322801, 342842, 362662, 382703, 402523, 422473, 442293, 471031, 489881, 510408, 529258, 549785, 568635, 589162, 608012, 628539, 647389, 667916, 686136, 706445, 729725, 753215, 776770, 802117, 825397, 848677, 871957, 895237, 918727, 942492, 979609, 1002889, 1026169, 1049449, 1072729, 1096009, 1119289, 1142779, 1168441, 1191721, 1215001, 1236181, 1254611, 1273041, 1291471, 1309901, 1328331, 1347181, 1367708, 1386558, 1407085, 1425305, 1443514, 1462364, 1488398, 1507248, 1538279, 1557129, 1576109, 1594539, 1613389, 1632369, 1650799, 1669649, 1690610, 1720798, 1739018, 1757173, 1776023, 1802195, 1820625, 1839475, 1858455, 1876885, 1895315, 1913955, 1932660, 1951300, 1970005, 1988435, 2007075, 2025780, 2044630, 2063610, 2082040, 2100260, 2122373, 2141223, 2165241, 2184091, 2218449, 2237299, 2263417, 2282267, 2321166, 2340501, 2364786, 2384121]"
"('Scanner.java', 'java.util.Scanner', 'getCompleteTokenInBuffer', '(?s).*', '""main"" prio=10 tid=0x00007f8650007800 nid=0xea4 waiting on condition [0x00007f8657334000]\n   java.lang.Thread.State: WAITING (parking)\n\tat sun.misc.Unsafe.park(Native Method)\n\tat java.util.concurrent.locks.LockSupport.park(LockSupport.java:315)\n\tat java_util_concurrent_locks_LockSupport$park.call(Unknown Source)\n\tat org.codehaus.groovy.runtime.callsite.CallSiteArray.defaultCall(CallSiteArray.java:45)\n\tat org.codehaus.groovy.runtime.callsite.AbstractCallSite.call(AbstractCallSite.java:108)\n\tat org.codehaus.groovy.runtime.callsite.AbstractCallSite.call(AbstractCallSite.java:112)\n\tat dumpling-script.run(dumpling-script:19)\n\tat groovy.lang.GroovyShell.runScriptOrMainOrTestOrRunnable(GroovyShell.java:258)\n\tat groovy.lang.GroovyShell.run(GroovyShell.java:550)\n\tat com.github.olivergondza.dumpling.cli.GroovyCommand.run(GroovyCommand.java:94)\n\tat com.github.olivergondza.dumpling.cli.Main.run(Main.java:75)\n\tat com.github.olivergondza.dumpling.cli.Main.main(Main.java:58)\n\n   Locked ownable synchronizers:\n\t- None\n\n""VM Th')",[21337]
"('FilterBuilder.java', 'org.reflections.util.FilterBuilder$Include', 'apply', 'com\\.github\\.olivergondza\\.dumpling.*', 'com/github/olivergondza/dumpling/factory/JvmRuntimeFactory.class')","[69334, 88578, 114302, 133546, 155113, 174357, 194490, 213734, 233867, 251890, 271110, 291324, 310880, 331094, 350741, 370955, 390602, 410816, 430372, 450586, 478536, 497780, 517913, 537157, 557290, 576534, 596667, 615911, 636044, 655288, 675421, 693444, 715920, 739200, 762887, 786245, 811592, 834872, 858152, 881432, 904712, 928399, 952164, 989084, 1012364, 1035644, 1058924, 1082204, 1105484, 1128764, 1152451, 1177916, 1201196, 1224476, 1243686, 1262116, 1280546, 1298976, 1317406, 1335836, 1355080, 1375213, 1394457, 1414590, 1432613, 1451019, 1470263, 1495903, 1515147, 1545784, 1565028, 1583614, 1602044, 1621288, 1639874, 1658304, 1677548, 1698115, 1728303, 1746326, 1764678, 1783922, 1809700, 1828130, 1847374, 1865960, 1884390, 1902820, 1921657, 1940165, 1959002, 1977510, 1995940, 2014777, 2033285, 2052529, 2071115, 2089545, 2107568, 2129878, 2149122, 2172746, 2191990, 2225954, 2245198, 2270922, 2290166, 2328868, 2348597, 2372488, 2392217]"
"('Scanner.java', 'java.util.Scanner', 'getCompleteTokenInBuffer', '(?s).*', '2018-01-11 20:21:45\nFull thread dump Java HotSpot(TM) 64-Bit Server VM (24.80-b11 mixed mode):\n\n""Attach Listener"" daemon prio=10 tid=0x00007f2c10001000 nid=0xde7 waiting on condition [0x0000000000000000]\n   java.lang.Thread.State: RUNNABLE\n\n   Locked ownable synchronizers:\n\t- None\n\n""Service Thread"" daemon prio=10 tid=0x00007f2c48096800 nid=0xdd5 runnable [0x0000000000000000]\n   java.lang.Thread.State: RUNNABLE\n\n   Locked ownable synchronizers:\n\t- None\n\n""C2 CompilerThread1"" daemon prio=10 tid=0x00007f2c48094000 nid=0xdd4 waiting on condition [0x0000000000000000]\n   java.lang.Thread.State: RUNNABLE\n\n   Locked ownable synchronizers:\n\t- None\n\n""C2 CompilerThread0"" daemon prio=10 tid=0x00007f2c48091800 nid=0xdd3 waiting on condition [0x0000000000000000]\n   java.lang.Thread.State: RUNNABLE\n\n   Locked ownable synchronizers:\n\t- None\n\n""Signal Dispatcher"" daemon prio=10 tid=0x00007f2c4808f000 nid=0xdd2 runnable [0x0000000000000000]\n   java.lang.Thread.State: RUNNABLE\n\n   Locked ownable synchronizers:\n\t- None\n\n""Finalizer')","[1901, 1967, 2309, 2513, 2855, 3197]"
"('FilterBuilder.java', 'org.reflections.util.FilterBuilder$Exclude', 'apply', 'java.lang.Object', 'com.github.olivergondza.dumpling.factory.ThreadDumpFactoryVendorTest.threadNameWithLinebreak.groovy')","[56441, 75007, 101409, 119975, 142220, 160786, 181597, 200163, 220974, 239336, 257539, 277075, 297309, 316845, 337170, 356706, 377031, 396567, 416801, 436337, 465643, 484209, 505020, 523586, 544397, 562963, 583774, 602340, 623151, 641717, 662528, 680890, 699637, 722917, 746265, 769962, 795309, 818589, 841869, 865149, 888429, 911777, 935542, 972801, 996081, 1019361, 1042641, 1065921, 1089201, 1112481, 1135829, 1161633, 1184913, 1208193, 1230793, 1249223, 1267653, 1286083, 1304513, 1322943, 1341509, 1362320, 1380886, 1401697, 1420059, 1438126, 1456692, 1483010, 1501576, 1532891, 1551457, 1570721, 1589151, 1607717, 1626981, 1645411, 1663977, 1685222, 1715410, 1733772, 1751785, 1770351, 1796807, 1815237, 1833803, 1853067, 1871497, 1889927, 1908425, 1927272, 1945770, 1964617, 1983047, 2001545, 2020392, 2038958, 2058222, 2076652, 2095014, 2116985, 2135551, 2159853, 2178419, 2213061, 2231627, 2258029, 2276595, 2315636, 2334687, 2359256, 2378307]"
"('FilterBuilder.java', 'org.reflections.util.FilterBuilder$Exclude', 'apply', 'java.lang.Object', 'com.github.olivergondza.dumpling.model.mxbean.MXBeanRuntime')","[63009, 64383, 81921, 83367, 107977, 109351, 126889, 128335, 148788, 150162, 167700, 169146, 188165, 189539, 207077, 208523, 227542, 228916, 245731, 247069, 264453, 265899, 284335, 285853, 304223, 305669, 324105, 325623, 344084, 345530, 363966, 365484, 383945, 385391, 403827, 405345, 423715, 425161, 443597, 445115, 472211, 473585, 491123, 492569, 511588, 512962, 530500, 531946, 550965, 552339, 569877, 571323, 590342, 591716, 609254, 610700, 629719, 631093, 648631, 650077, 669096, 670470, 687285, 688623, 707935, 709669, 731215, 732949, 754736, 756506, 778260, 779994, 803607, 805341, 826887, 828621, 850167, 851901, 873447, 875181, 896727, 898461, 920248, 922018, 944013, 945783, 981099, 982833, 1004379, 1006113, 1027659, 1029393, 1050939, 1052673, 1074219, 1075953, 1097499, 1099233, 1120779, 1122513, 1144300, 1146070, 1169931, 1171665, 1193211, 1194945, 1216491, 1218225, 1237361, 1238735, 1255791, 1257165, 1274221, 1275595, 1292651, 1294025, 1311081, 1312455, 1329511, 1330885, 1348423, 1349869, 1368888, 1370262, 1387800, 1389246, 1408265, 1409639, 1426454, 1427792, 1444694, 1446068, 1463606, 1465052, 1489578, 1490952, 1508490, 1509936, 1539459, 1540833, 1558371, 1559817, 1577289, 1578663, 1595719, 1597093, 1614631, 1616077, 1633549, 1634923, 1651979, 1653353, 1670891, 1672337, 1691790, 1693164, 1721978, 1723352, 1740167, 1741505, 1758353, 1759727, 1777265, 1778711, 1803375, 1804749, 1821805, 1823179, 1840717, 1842163, 1859635, 1861009, 1878065, 1879439, 1896495, 1897869, 1915166, 1916576, 1933840, 1935214, 1952511, 1953921, 1971185, 1972559, 1989615, 1990989, 2008286, 2009696, 2026960, 2028334, 2045872, 2047318, 2064790, 2066164, 2083220, 2084594, 2101409, 2102747, 2123553, 2124927, 2142465, 2143911, 2166421, 2167795, 2185333, 2186779, 2219629, 2221003, 2238541, 2239987, 2264597, 2265971, 2283509, 2284955, 2322377, 2323787, 2341774, 2343256, 2365997, 2367407, 2385394, 2386876]"
"('Description.java', 'org.junit.runner.Description', 'methodAndClassNamePatternGroupOrDefault', '([\\s\\S]*)\\((.*)\\)', 'inferSourcePid(com.github.olivergondza.dumpling.cli.ProcessRuntimeOptionHandlerTest)')",[1254]
"('FilterBuilder.java', 'org.reflections.util.FilterBuilder$Include', 'apply', 'com\\.github\\.olivergondza\\.dumpling.*', 'com.github.olivergondza.dumpling.query.TopContenders$Result$1.class')","[67623, 86777, 112591, 131745, 153402, 172556, 192779, 211933, 232156, 250224, 269309, 289433, 309079, 329203, 348940, 369064, 388801, 408925, 428571, 448695, 476825, 495979, 516202, 535356, 555579, 574733, 594956, 614110, 634333, 653487, 673710, 691778, 713759, 737039, 760681, 784084, 809431, 832711, 855991, 879271, 902551, 926193, 949958, 986923, 1010203, 1033483, 1056763, 1080043, 1103323, 1126603, 1150245, 1175755, 1199035, 1222315, 1241975, 1260405, 1278835, 1297265, 1315695, 1334125, 1353279, 1373502, 1392656, 1412879, 1430947, 1449308, 1468462, 1494192, 1513346, 1544073, 1563227, 1581903, 1600333, 1619487, 1638163, 1656593, 1675747, 1696404, 1726592, 1744660, 1762967, 1782121, 1807989, 1826419, 1845573, 1864249, 1882679, 1901109, 1919901, 1938454, 1957246, 1975799, 1994229, 2013021, 2031574, 2050728, 2069404, 2087834, 2105902, 2128167, 2147321, 2171035, 2190189, 2224243, 2243397, 2269211, 2288365, 2327112, 2346751, 2370732, 2390371]"
"('Scanner.java', 'java.util.Scanner', 'getCompleteTokenInBuffer', '(?s).*', '3714\n')",[15976]
"('Description.java', 'org.junit.runner.Description', 'methodAndClassNamePatternGroupOrDefault', '([\\s\\S]*)\\((.*)\\)', 'load(com.github.olivergondza.dumpling.cli.GroovyshCommandTest)')",[1342]
"('Scanner.java', 'java.util.Scanner', 'getCompleteTokenInBuffer', '(?s).*', '""Reference Handler"" daemon prio=10 tid=0x00007f0d1c06c000 nid=0xeca in Object.wait() [0x00007f0d0b7f6000]\n   java.lang.Thread.State: WAITING (on object monitor)\n\tat java.lang.Object.wait(Native Method)\n\t- waiting on <0x00000007b0f14078> (a java.lang.ref.Reference$Lock)\n\tat java.lang.Object.wait(Object.java:503)\n\tat java.lang.ref.Reference$ReferenceHandler.run(Reference.java:133)\n\t- locked <0x00000007b0f14078> (a java.lang.ref.Reference$Lock)\n\n   Locked ownable synchronizers:\n\t- None\n\n""main"" prio=10 tid=0x00007f0d1c007800 nid=0xec4 waiting on condition [0x00007f0d23b75000]\n   java.lang.Thread.State: TIMED_WAITING (sleeping)\n\tat java.lang.Thread.sleep(Native Method)\n\tat sun.reflect.NativeMethodAccessorImpl.invoke0(Native Method)\n\tat sun.reflect.NativeMethodAccessorImpl.invoke(NativeMethodAccessorImpl.java:57)\n\tat sun.reflect.DelegatingMethodAccessorImpl.invoke(DelegatingMethodAccessorImpl.java:43)\n\tat java.lang.reflect.Method.invoke(Method.java:606)\n\tat org.codehaus.groovy.reflection.CachedMethod.invoke(CachedM')",[24549]
"('Description.java', 'org.junit.runner.Description', 'methodAndClassNamePatternGroupOrDefault', '([\\s\\S]*)\\((.*)\\)', 'groovyPlus(com.github.olivergondza.dumpling.cli.GroovyRuntimeTest)')",[880]
"('FilterBuilder.java', 'org.reflections.util.FilterBuilder$Include', 'apply', 'com\\.github\\.olivergondza\\.dumpling.*', 'com/github/olivergondza/dumpling/model/ProcessThread$1.class')","[65680, 84732, 110648, 129700, 151459, 170511, 190836, 209888, 230213, 248332, 267264, 287286, 307034, 327056, 346895, 366917, 386756, 406778, 426526, 446548, 474882, 493934, 514259, 533311, 553636, 572688, 593013, 612065, 632390, 651442, 671767, 689886, 711306, 734586, 758177, 781631, 806978, 830258, 853538, 876818, 900098, 923689, 947454, 984470, 1007750, 1031030, 1054310, 1077590, 1100870, 1124150, 1147741, 1173302, 1196582, 1219862, 1240032, 1258462, 1276892, 1295322, 1313752, 1332182, 1351234, 1371559, 1390611, 1410936, 1429055, 1447365, 1466417, 1492249, 1511301, 1542130, 1561182, 1579960, 1598390, 1617442, 1636220, 1654650, 1673702, 1694461, 1724649, 1742768, 1761024, 1780076, 1806046, 1824476, 1843528, 1862306, 1880736, 1899166, 1917907, 1936511, 1955252, 1973856, 1992286, 2011027, 2029631, 2048683, 2067461, 2085891, 2104010, 2126224, 2145276, 2169092, 2188144, 2222300, 2241352, 2267268, 2286320, 2325118, 2344655, 2368738, 2388275]"
"('FilterBuilder.java', 'org.reflections.util.FilterBuilder$Exclude', 'apply', 'java.lang.Object', 'com.github.olivergondza.dumpling.model.mxbean.MXBeanThread$Builder')","[62781, 64497, 81681, 83487, 107749, 109465, 126649, 128455, 148560, 150276, 167460, 169266, 187937, 189653, 206837, 208643, 227314, 229030, 245509, 247180, 264213, 266019, 284083, 285979, 303983, 305789, 323853, 325749, 343844, 345650, 363714, 365610, 383705, 385511, 403575, 405471, 423475, 425281, 443345, 445241, 471983, 473699, 490883, 492689, 511360, 513076, 530260, 532066, 550737, 552453, 569637, 571443, 590114, 591830, 609014, 610820, 629491, 631207, 648391, 650197, 668868, 670584, 687063, 688734, 707647, 709813, 730927, 733093, 754442, 756653, 777972, 780138, 803319, 805485, 826599, 828765, 849879, 852045, 873159, 875325, 896439, 898605, 919954, 922165, 943719, 945930, 980811, 982977, 1004091, 1006257, 1027371, 1029537, 1050651, 1052817, 1073931, 1076097, 1097211, 1099377, 1120491, 1122657, 1144006, 1146217, 1169643, 1171809, 1192923, 1195089, 1216203, 1218369, 1237133, 1238849, 1255563, 1257279, 1273993, 1275709, 1292423, 1294139, 1310853, 1312569, 1329283, 1330999, 1348183, 1349989, 1368660, 1370376, 1387560, 1389366, 1408037, 1409753, 1426232, 1427903, 1444466, 1446182, 1463366, 1465172, 1489350, 1491066, 1508250, 1510056, 1539231, 1540947, 1558131, 1559937, 1577061, 1578777, 1595491, 1597207, 1614391, 1616197, 1633321, 1635037, 1651751, 1653467, 1670651, 1672457, 1691562, 1693278, 1721750, 1723466, 1739945, 1741616, 1758125, 1759841, 1777025, 1778831, 1803147, 1804863, 1821577, 1823293, 1840477, 1842283, 1859407, 1861123, 1877837, 1879553, 1896267, 1897983, 1914932, 1916693, 1933612, 1935328, 1952277, 1954038, 1970957, 1972673, 1989387, 1991103, 2008052, 2009813, 2026732, 2028448, 2045632, 2047438, 2064562, 2066278, 2082992, 2084708, 2101187, 2102858, 2123325, 2125041, 2142225, 2144031, 2166193, 2167909, 2185093, 2186899, 2219401, 2221117, 2238301, 2240107, 2264369, 2266085, 2283269, 2285075, 2322143, 2323904, 2341528, 2343379, 2365763, 2367524, 2385148, 2386999]"
"('ThreadDumpFactory.java', 'com.github.olivergondza.dumpling.factory.ThreadDumpFactory', 'initHeader', '#\\d+', '[0x00007fd68f9f8000]')","[956845, 956896, 1518618, 1518655]"
"('Scanner.java', 'java.util.Scanner', 'getCompleteTokenInBuffer', '(?s).*', '""GC task thread#2 (ParallelGC)"" prio=10 tid=0x00007f2c48021000 nid=0xdcd runnable \n\n""GC task thread#3 (ParallelGC)"" prio=10 tid=0x00007f2c48023000 nid=0xdce runnable \n\n""VM Periodic Task Thread"" prio=10 tid=0x00007f2c480a1800 nid=0xdd6 waiting on condition \n\nJNI global references: 268\n\n')","[4451, 4561, 4671, 4919]"
"('FilterBuilder.java', 'org.reflections.util.FilterBuilder$Include', 'apply', 'com\\.github\\.olivergondza\\.dumpling.*', 'com/github/olivergondza/dumpling/cli/CliRuntimeFactory.class')","[58778, 77468, 103746, 122436, 144557, 163247, 183934, 202624, 223311, 241611, 260000, 279660, 299770, 319430, 339631, 359291, 379492, 399152, 419262, 438922, 467980, 486670, 507357, 526047, 546734, 565424, 586111, 604801, 625488, 644178, 664865, 683165, 702594, 725874, 749284, 772919, 798266, 821546, 844826, 868106, 891386, 914796, 938561, 975758, 999038, 1022318, 1045598, 1068878, 1092158, 1115438, 1138848, 1164590, 1187870, 1211150, 1233130, 1251560, 1269990, 1288420, 1306850, 1325280, 1343970, 1364657, 1383347, 1404034, 1422334, 1440463, 1459153, 1485347, 1504037, 1535228, 1553918, 1573058, 1591488, 1610178, 1629318, 1647748, 1666438, 1687559, 1717747, 1736047, 1754122, 1772812, 1799144, 1817574, 1836264, 1855404, 1873834, 1892264, 1910824, 1929609, 1948169, 1966954, 1985384, 2003944, 2022729, 2041419, 2060559, 2078989, 2097289, 2119322, 2138012, 2162190, 2180880, 2215398, 2234088, 2260366, 2279056, 2318035, 2337210, 2361655, 2380830]"
"('FilterBuilder.java', 'org.reflections.util.FilterBuilder$Include', 'apply', 'com\\.github\\.olivergondza\\.dumpling.*', 'jstack/blocking-tree.log')","[70582, 89892, 115550, 134860, 156361, 175671, 195738, 215048, 235115, 253105, 272424, 292704, 312194, 332474, 352055, 372335, 391916, 412196, 431686, 451966, 479784, 499094, 519161, 538471, 558538, 577848, 597915, 617225, 637292, 656602, 676669, 694659, 717498, 740778, 764498, 787823, 813170, 836450, 859730, 883010, 906290, 930010, 953775, 990662, 1013942, 1037222, 1060502, 1083782, 1107062, 1130342, 1154062, 1179494, 1202774, 1226054, 1244934, 1263364, 1281794, 1300224, 1318654, 1337084, 1356394, 1376461, 1395771, 1415838, 1433828, 1452267, 1471577, 1497151, 1516461, 1547032, 1566342, 1584862, 1603292, 1622602, 1641122, 1659552, 1678862, 1699363, 1729551, 1747541, 1765926, 1785236, 1810948, 1829378, 1848688, 1867208, 1885638, 1904068, 1922938, 1941413, 1960283, 1978758, 1997188, 2016058, 2034533, 2053843, 2072363, 2090793, 2108783, 2131126, 2150436, 2173994, 2193304, 2227202, 2246512, 2272170, 2291480, 2330149, 2349944, 2373769, 2393564]"
"('ThreadDumpFactory.java', 'com.github.olivergondza.dumpling.factory.ThreadDumpFactory', 'initHeader', '#\\d+', '[0x00007ff59ccf8000]')","[2111689, 2111715, 2153801, 2153836, 2196669, 2196704, 2201329, 2201355]"
"('Scanner.java', 'java.util.Scanner', 'getCompleteTokenInBuffer', '(?s).*', '""pool-1-thread-1"" daemon prio=10 tid=0x00007fd6fc43d800 nid=0xdc7 runnable [0x00007fd6f8153000]\n   java.lang.Thread.State: RUNNABLE\n\tat java.io.FileInputStream.readBytes(Native Method)\n\tat java.io.FileInputStream.read(FileInputStream.java:272)\n\tat java.io.BufferedInputStream.read1(BufferedInputStream.java:273)\n\tat java.io.BufferedInputStream.read(BufferedInputStream.java:334)\n\t- locked <0x00000007b78ec540> (a java.lang.UNIXProcess$ProcessPipeInputStream)\n\tat sun.nio.cs.StreamDecoder.readBytes(StreamDecoder.java:283)\n\tat sun.nio.cs.StreamDecoder.implRead(StreamDecoder.java:325)\n\tat sun.nio.cs.StreamDecoder.read(StreamDecoder.java:177)\n\t- locked <0x00000007b78f0810> (a java.io.InputStreamReader)\n\tat java.io.InputStreamReader.read(InputStreamReader.java:184)\n\tat java.io.Reader.read(Reader.java:100)\n\tat java.util.Scanner.readInput(Scanner.java:849)\n\tat java.util.Scanner.hasNext(Scanner.java:1384)\n\tat com.github.olivergondza.dumpling.factory.ThreadDumpFactory.fromStream(ThreadDumpFactory.java:118)\n\tat com.github.olivergondza.dumpling.factory.PidRuntimeFactory.createRuntime(PidRuntimeFactory.java:191)\n\tat com.github.olivergondza.dumpling.factory.PidRuntimeFactory.fromProcess(PidRuntimeFactory.java:85)\n\tat com.github.olivergondza.dumpling.factory.PidRuntimeFactory.fromProcess(PidRuntimeFactory.java:101)\n\tat com.github.olivergondza.dumpling.cli.Factories$Pid.createRuntime(Factories.java:114)\n\tat com.github.olivergondza.dumpling.cli.Factories$Pid.createRuntime(Factories.java:98)\n\tat com.github.olivergondza.dumpling.cli.Main$ProcessRuntimeOptionHandler.parseArguments(Main.java:137)\n\tat org.kohsuke.args4j.CmdLineParser.parseArgument(CmdLineParser.java:520)\n\tat com.github.olivergondza.dumpling.cli.CliCommandOptionHandler.parseArguments(CliCommandOptionHandler.java:63)\n\tat org.kohsuke.args4j.CmdLineParser.parseArgument(CmdLineParser.java:520)\n\tat com.github.olivergondza.dumpling.cli.Main.run(Main.java:73)\n\tat com.github.olivergondza.dumpling.cli.AbstractCliTest.run(AbstractCliTest.java:51)\n\tat com.github.olivergondza.dumpling.cli.ProcessRuntimeOptionHandlerTest.inferSourcePid(ProcessRuntimeOptionHandlerTest.java:52)\n\tat sun.reflect.NativeMethodAccessorImpl.invoke0(Native Method)\n\tat sun.reflect.NativeMethodAccessorImpl.invoke(NativeMethodAccessorImpl.java:57)\n\tat sun.reflect.DelegatingMethodAccessorImpl.invoke(DelegatingMethodAccessorImpl.java:43)\n\tat java.lang.reflect.Method.invoke(Method.java:606)\n\tat org.junit.runners.model.FrameworkMethod$1.runReflectiveCall(FrameworkMethod.java:50)\n\tat org.junit.internal.runners.model.ReflectiveCallable.run(ReflectiveCallable.java:12)\n\tat org.junit.runners.model.FrameworkMethod.invokeExplosively(FrameworkMethod.java:47)\n\tat org.junit.internal.runners.statements.InvokeMethod.evaluate(InvokeMethod.java:17)\n\tat org.junit.runners.ParentRunner.runLeaf(ParentRunner.java:325)\n\tat org.junit.runners.BlockJUnit4ClassRunner.runChild(BlockJUnit4ClassRunner.java:78)\n\tat org.junit.runners.BlockJUnit4ClassRunner.runChild(BlockJUnit4ClassRunner.java:57)\n\tat org.junit.runners.ParentRunner$3.run(ParentRunner.java:290)\n\tat org.apache.maven.surefire.junitcore.pc.Scheduler$1.run(Scheduler.java:393)\n\tat java.util.concurrent.Executors$RunnableAdapter.call(Executors.java:471)\n\tat java.util.concurrent.FutureTask.run(FutureTask.java:262)\n\tat java.util.concurrent.ThreadPoolExecutor.runWorker(ThreadPoolExecutor.java:1145)\n\tat java.util.concurrent.ThreadPoolExecutor$Worker.run(ThreadPoolExecutor.java:615)\n\tat java.lang.Thread.run(Thread.java:745)\n\n   Locked ownable synchronizers:\n\t- <0x0000000707005858> (a java.util.concurrent.ThreadPoolExecutor$Worker)\n\n""surefire-forkedjvm-command-thread"" daemon prio=10 tid=0x00007fd6fc311800 nid=0xdc6 runnable [0x00007fd6f825f000]\n   java.lang.Thread.State: RUNNABLE\n\tat java.io.FileInputStream.readBytes(Native Method)\n\tat java.io.FileInputStream.read(FileInputStream.java:272)\n\tat java.io.BufferedInputStream.fill(BufferedInputStream.java:235)\n\tat java.io.BufferedInputStream.read(BufferedInputStream.java:254)\n\t- locked <0x0000000707069ca8> (a java.io.BufferedInputStream)\n\tat java.io.DataInp')",[1523359]
"('ThreadDumpFactory.java', 'com.github.olivergondza.dumpling.factory.ThreadDumpFactory', 'initHeader', '#\\d+', '[0x00007fd68faf9000]')","[957708, 957759, 1519257, 1519294]"
"('FilterBuilder.java', 'org.reflections.util.FilterBuilder$Include', 'apply', 'com\\.github\\.olivergondza\\.dumpling.*', 'com/github/olivergondza/dumpling/TestThread/jmxremote.password')","[71530, 90890, 116498, 135858, 157309, 176669, 196686, 216046, 236063, 254028, 273422, 293752, 313192, 333522, 353053, 373383, 392914, 413244, 432684, 453014, 480732, 500092, 520109, 539469, 559486, 578846, 598863, 618223, 638240, 657600, 677617, 695582, 718696, 741976, 765721, 789021, 814368, 837648, 860928, 884208, 907488, 931233, 954998, 991860, 1015140, 1038420, 1061700, 1084980, 1108260, 1131540, 1155285, 1180692, 1203972, 1227252, 1245882, 1264312, 1282742, 1301172, 1319602, 1338032, 1357392, 1377409, 1396769, 1416786, 1434751, 1453215, 1472575, 1498099, 1517459, 1547980, 1567340, 1585810, 1604240, 1623600, 1642070, 1660500, 1679860, 1700311, 1730499, 1748464, 1766874, 1786234, 1811896, 1830326, 1849686, 1868156, 1886586, 1905016, 1923911, 1942361, 1961256, 1979706, 1998136, 2017031, 2035481, 2054841, 2073311, 2091741, 2109706, 2132074, 2151434, 2174942, 2194302, 2228150, 2247510, 2273118, 2292478, 2331122, 2350967, 2374742, 2394587]"
"('FilterBuilder.java', 'org.reflections.util.FilterBuilder$Exclude', 'apply', 'java.lang.Object', 'com.github.olivergondza.dumpling.model.ProcessThread$Predicate')","[62439, 63733, 63887, 64269, 65261, 65797, 66065, 81321, 82683, 82845, 83247, 84291, 84855, 85137, 107407, 108701, 108855, 109237, 110229, 110765, 111033, 126289, 127651, 127813, 128215, 129259, 129823, 130105, 148218, 149512, 149666, 150048, 151040, 151576, 151844, 167100, 168462, 168624, 169026, 170070, 170634, 170916, 187595, 188889, 189043, 189425, 190417, 190953, 191221, 206477, 207839, 208001, 208403, 209447, 210011, 210293, 226972, 228266, 228420, 228802, 229794, 230330, 230598, 245176, 246436, 246586, 246958, 247924, 248446, 248707, 263853, 265215, 265377, 265779, 266823, 267387, 267669, 283705, 285135, 285305, 285727, 286823, 287415, 287711, 303623, 304985, 305147, 305549, 306593, 307157, 307439, 323475, 324905, 325075, 325497, 326593, 327185, 327481, 343484, 344846, 345008, 345410, 346454, 347018, 347300, 363336, 364766, 364936, 365358, 366454, 367046, 367342, 383345, 384707, 384869, 385271, 386315, 386879, 387161, 403197, 404627, 404797, 405219, 406315, 406907, 407203, 423115, 424477, 424639, 425041, 426085, 426649, 426931, 442967, 444397, 444567, 444989, 446085, 446677, 446973, 471641, 472935, 473089, 473471, 474463, 474999, 475267, 490523, 491885, 492047, 492449, 493493, 494057, 494339, 511018, 512312, 512466, 512848, 513840, 514376, 514644, 529900, 531262, 531424, 531826, 532870, 533434, 533716, 550395, 551689, 551843, 552225, 553217, 553753, 554021, 569277, 570639, 570801, 571203, 572247, 572811, 573093, 589772, 591066, 591220, 591602, 592594, 593130, 593398, 608654, 610016, 610178, 610580, 611624, 612188, 612470, 629149, 630443, 630597, 630979, 631971, 632507, 632775, 648031, 649393, 649555, 649957, 651001, 651565, 651847, 668526, 669820, 669974, 670356, 671348, 671884, 672152, 686730, 687990, 688140, 688512, 689478, 690000, 690261, 707215, 708849, 709043, 709525, 710777, 711453, 711791, 730495, 732129, 732323, 732805, 734057, 734733, 735071, 754001, 755669, 755867, 756359, 757637, 758327, 758672, 777540, 779174, 779368, 779850, 781102, 781778, 782116, 802887, 804521, 804715, 805197, 806449, 807125, 807463, 826167, 827801, 827995, 828477, 829729, 830405, 830743, 849447, 851081, 851275, 851757, 853009, 853685, 854023, 872727, 874361, 874555, 875037, 876289, 876965, 877303, 896007, 897641, 897835, 898317, 899569, 900245, 900583, 919513, 921181, 921379, 921871, 923149, 923839, 924184, 943278, 944946, 945144, 945636, 946914, 947604, 947949, 980379, 982013, 982207, 982689, 983941, 984617, 984955, 1003659, 1005293, 1005487, 1005969, 1007221, 1007897, 1008235, 1026939, 1028573, 1028767, 1029249, 1030501, 1031177, 1031515, 1050219, 1051853, 1052047, 1052529, 1053781, 1054457, 1054795, 1073499, 1075133, 1075327, 1075809, 1077061, 1077737, 1078075, 1096779, 1098413, 1098607, 1099089, 1100341, 1101017, 1101355, 1120059, 1121693, 1121887, 1122369, 1123621, 1124297, 1124635, 1143565, 1145233, 1145431, 1145923, 1147201, 1147891, 1148236, 1169211, 1170845, 1171039, 1171521, 1172773, 1173449, 1173787, 1192491, 1194125, 1194319, 1194801, 1196053, 1196729, 1197067, 1215771, 1217405, 1217599, 1218081, 1219333, 1220009, 1220347, 1236791, 1238085, 1238239, 1238621, 1239613, 1240149, 1240417, 1255221, 1256515, 1256669, 1257051, 1258043, 1258579, 1258847, 1273651, 1274945, 1275099, 1275481, 1276473, 1277009, 1277277, 1292081, 1293375, 1293529, 1293911, 1294903, 1295439, 1295707, 1310511, 1311805, 1311959, 1312341, 1313333, 1313869, 1314137, 1328941, 1330235, 1330389, 1330771, 1331763, 1332299, 1332567, 1347823, 1349185, 1349347, 1349749, 1350793, 1351357, 1351639, 1368318, 1369612, 1369766, 1370148, 1371140, 1371676, 1371944, 1387200, 1388562, 1388724, 1389126, 1390170, 1390734, 1391016, 1407695, 1408989, 1409143, 1409525, 1410517, 1411053, 1411321, 1425899, 1427159, 1427309, 1427681, 1428647, 1429169, 1429430, 1444124, 1445418, 1445572, 1445954, 1446946, 1447482, 1447750, 1463006, 1464368, 1464530, 1464932, 1465976, 1466540, 1466822, 1489008, 1490302, 1490456, 1490838, 1491830, 1492366, 1492634, 1507890, 1509252, 1509414, 1509816, 1510860, 1511424, 1511706, 1538889, 1540183, 1540337, 1540719, 1541711, 1542247, 1542515, 1557771, 1559133, 1559295, 1559697, 1560741, 1561305, 1561587, 1576719, 1578013, 1578167, 1578549, 1579541, 1580077, 1580345, 1595149, 1596443, 1596597, 1596979, 1597971, 1598507, 1598775, 1614031, 1615393, 1615555, 1615957, 1617001, 1617565, 1617847, 1632979, 1634273, 1634427, 1634809, 1635801, 1636337, 1636605, 1651409, 1652703, 1652857, 1653239, 1654231, 1654767, 1655035, 1670291, 1671653, 1671815, 1672217, 1673261, 1673825, 1674107, 1691220, 1692514, 1692668, 1693050, 1694042, 1694578, 1694846, 1721408, 1722702, 1722856, 1723238, 1724230, 1724766, 1725034, 1739612, 1740872, 1741022, 1741394, 1742360, 1742882, 1743143, 1757783, 1759077, 1759231, 1759613, 1760605, 1761141, 1761409, 1776665, 1778027, 1778189, 1778591, 1779635, 1780199, 1780481, 1802805, 1804099, 1804253, 1804635, 1805627, 1806163, 1806431, 1821235, 1822529, 1822683, 1823065, 1824057, 1824593, 1824861, 1840117, 1841479, 1841641, 1842043, 1843087, 1843651, 1843933, 1859065, 1860359, 1860513, 1860895, 1861887, 1862423, 1862691, 1877495, 1878789, 1878943, 1879325, 1880317, 1880853, 1881121, 1895925, 1897219, 1897373, 1897755, 1898747, 1899283, 1899551, 1914581, 1915909, 1916067, 1916459, 1917477, 1918027, 1918302, 1933270, 1934564, 1934718, 1935100, 1936092, 1936628, 1936896, 1951926, 1953254, 1953412, 1953804, 1954822, 1955372, 1955647, 1970615, 1971909, 1972063, 1972445, 1973437, 1973973, 1974241, 1989045, 1990339, 1990493, 1990875, 1991867, 1992403, 1992671, 2007701, 2009029, 2009187, 2009579, 2010597, 2011147, 2011422, 2026390, 2027684, 2027838, 2028220, 2029212, 2029748, 2030016, 2045272, 2046634, 2046796, 2047198, 2048242, 2048806, 2049088, 2064220, 2065514, 2065668, 2066050, 2067042, 2067578, 2067846, 2082650, 2083944, 2084098, 2084480, 2085472, 2086008, 2086276, 2100854, 2102114, 2102264, 2102636, 2103602, 2104124, 2104385, 2122983, 2124277, 2124431, 2124813, 2125805, 2126341, 2126609, 2141865, 2143227, 2143389, 2143791, 2144835, 2145399, 2145681, 2165851, 2167145, 2167299, 2167681, 2168673, 2169209, 2169477, 2184733, 2186095, 2186257, 2186659, 2187703, 2188267, 2188549, 2219059, 2220353, 2220507, 2220889, 2221881, 2222417, 2222685, 2237941, 2239303, 2239465, 2239867, 2240911, 2241475, 2241757, 2264027, 2265321, 2265475, 2265857, 2266849, 2267385, 2267653, 2282909, 2284271, 2284433, 2284835, 2285879, 2286443, 2286725, 2321792, 2323120, 2323278, 2323670, 2324688, 2325238, 2325513, 2341159, 2342555, 2342721, 2343133, 2344203, 2344781, 2345070, 2365412, 2366740, 2366898, 2367290, 2368308, 2368858, 2369133, 2384779, 2386175, 2386341, 2386753, 2387823, 2388401, 2388690]"
"('Scanner.java', 'java.util.Scanner', 'getCompleteTokenInBuffer', '(?s).*', '""Reference Handler"" daemon prio=10 tid=0x00007fd89406c000 nid=0xfe7 in Object.wait() [0x00007fd882d89000]\n   java.lang.Thread.State: WAITING (on object monitor)\n\tat java.lang.Object.wait(Native Method)\n\t- waiting on <0x00000007b0f10260> (a java.lang.ref.Reference$Lock)\n\tat java.lang.Object.wait(Object.java:503)\n\tat java.lang.ref.Reference$ReferenceHandler.run(Reference.java:133)\n\t- locked <0x00000007b0f10260> (a java.lang.ref.Reference$Lock)\n\n   Locked ownable synchronizers:\n\t- None\n\n""main"" prio=10 tid=0x00007fd894007800 nid=0xfe1 waiting for monitor entry [0x00007fd89aff6000]\n   java.lang.Thread.State: BLOCKED (on object monitor)\n\tat dumpling-script.run(dumpling-script:36)\n\t- waiting to lock <0x00000007ae995608> (a java.lang.Object)\n\t- locked <0x00000007ae995668> (a java.lang.Object)\n\tat groovy.lang.GroovyShell.runScriptOrMainOrTestOrRunnable(GroovyShell.java:258)\n\tat groovy.lang.GroovyShell.run(GroovyShell.java:550)\n\tat com.github.olivergondza.dumpling.cli.GroovyCommand.run(GroovyCommand.java:94)\n\tat com.gi')",[48928]
"('Description.java', 'org.junit.runner.Description', 'methodAndClassNamePatternGroupOrDefault', '([\\s\\S]*)\\((.*)\\)', 'waiting(com.github.olivergondza.dumpling.factory.ThreadDumpFactoryVendorTest)')",[264]
"('Scanner.java', 'java.util.Scanner', 'getCompleteTokenInBuffer', '(?s).*', '""Signal Dispatcher"" daemon prio=10 tid=0x00007fe39008f000 nid=0xe13 runnable [0x0000000000000000]\n   java.lang.Thread.State: RUNNABLE\n\n   Locked ownable synchronizers:\n\t- None\n\n""Finalizer"" daemon prio=10 tid=0x00007fe39006e000 nid=0xe12 in Object.wait() [0x00007fe387dfc000]\n   java.lang.Thread.State: WAITING (on object monitor)\n\tat java.lang.Object.wait(Native Method)\n\t- waiting on <0x00000007b0f08580> (a java.lang.ref.ReferenceQueue$Lock)\n\tat java.lang.ref.ReferenceQueue.remove(ReferenceQueue.java:135)\n\t- locked <0x00000007b0f08580> (a java.lang.ref.ReferenceQueue$Lock)\n\tat java.lang.ref.ReferenceQueue.remove(ReferenceQueue.java:151)\n\tat java.lang.ref.Finalizer$FinalizerThread.run(Finalizer.java:209)\n\n   Locked ownable synchronizers:\n\t- None\n\n""Reference Handler"" daemon prio=10 tid=0x00007fe39006c000 nid=0xe11 in Object.wait() [0x00007fe387efd000]\n   java.lang.Thread.State: WAITING (on object monitor)\n\tat java.lang.Object.wait(Native Method)\n\t- waiting on <0x00000007b0f10260> (a java.lang.ref.Reference$Lock)\n\tat java.lang.Object.wait(Object.java:503)\n\tat java.lang.ref.Reference$ReferenceHandler.run(Reference.java:133)\n\t- locked <0x00000007b0f10260> (a java.lang.ref.Reference$Lock)\n\n   Locked ownable synchronizers:\n\t- None\n\n""main"" prio=10 tid=0x00007fe390007800 nid=0xe0b waiting on condition [0x00007fe3983ad000]\n   java.lang.Thread.State: WAITING (parking)\n\tat sun.misc.Unsafe.park(Native Method)\n\t- parking to wait for  <0x00000007aea71350> (a java.util.concurrent.locks.ReentrantLock$NonfairSync)\n\tat java.util.concurrent.locks.LockSupport.park(LockSupport.java:186)\n\tat java.util.concurrent.locks.AbstractQueuedSynchronizer.parkAndCheckInterrupt(AbstractQueuedSynchronizer.java:834)\n\tat java.util.concurrent.locks.AbstractQueuedSynchronizer.acquireQueued(AbstractQueuedSynchronizer.java:867)\n\tat java.util.concurrent.locks.AbstractQueuedSynchronizer.acquire(AbstractQueuedSynchronizer.java:1197)\n\tat java.util.concurrent.locks.ReentrantLock$NonfairSync.lock(ReentrantLock.java:214)\n\tat java.util.concurrent.locks.ReentrantLo')","[10634, 10843, 11121]"
"('Scanner.java', 'java.util.Scanner', 'getCompleteTokenInBuffer', '(?s).*', '2014-07-15 20:01:56\nFull thread dump OpenJDK 64-Bit Server VM (24.60-b09 mixed mode):\n\n""Attach Listener"" daemon prio=10 tid=0x00007ff56c001000 nid=0x11ed waiting on condition [0x0000000000000000]\n   java.lang.Thread.State: RUNNABLE\n\n""consumerC"" prio=10 tid=0x00007ff5a02ef000 nid=0x11da waiting for monitor entry [0x00007ff59caf6000]\n   java.lang.Thread.State: BLOCKED (on object monitor)\n\tat com.github.olivergondza.dumpling.query.TopContendersTest$1Consumer.run(TopContendersTest.java:84)\n\t- waiting to lock <0x00000007d74de4c0> (a java.lang.Object)\n\n""consumerB"" prio=10 tid=0x00007ff5a02ee000 nid=0x11d9 waiting for monitor entry [0x00007ff59cbf7000]\n   java.lang.Thread.State: BLOCKED (on object monitor)\n\tat com.github.olivergondza.dumpling.query.TopContendersTest$1Consumer.run(TopContendersTest.java:84)\n\t- waiting to lock <0x00000007d74de4c0> (a java.lang.Object)\n\n""consumerA"" prio=10 tid=0x00007ff5a02e2800 nid=0x11d8 waiting for monitor entry [0x00007ff59ccf8000]\n   java.lang.Thread.State: BLOCKED (on object moni')","[2110541, 2110583, 2110837, 2111144, 2152284, 2152335, 2152670, 2153076, 2195152, 2195203, 2195538, 2195944, 2200181, 2200223, 2200477, 2200784]"
"('FilterBuilder.java', 'org.reflections.util.FilterBuilder$Exclude', 'apply', 'java.lang.Object', 'com.github.olivergondza.dumpling.cli.command.threaddump.usage')","[60573, 79357, 105541, 124325, 146352, 165136, 185729, 204513, 225106, 243359, 261889, 281643, 301659, 321413, 341520, 361274, 381381, 401135, 421151, 440905, 469775, 488559, 509152, 527936, 548529, 567313, 587906, 606690, 627283, 646067, 666660, 684913, 704859, 728139, 751596, 775184, 800531, 823811, 847091, 870371, 893651, 917108, 940873, 978023, 1001303, 1024583, 1047863, 1071143, 1094423, 1117703, 1141160, 1166855, 1190135, 1213415, 1234925, 1253355, 1271785, 1290215, 1308645, 1327075, 1345859, 1366452, 1385236, 1405829, 1424082, 1442258, 1461042, 1487142, 1505926, 1537023, 1555807, 1574853, 1593283, 1612067, 1631113, 1649543, 1668327, 1689354, 1719542, 1737795, 1755917, 1774701, 1800939, 1819369, 1838153, 1857199, 1875629, 1894059, 1912666, 1931404, 1950011, 1968749, 1987179, 2005786, 2024524, 2043308, 2062354, 2080784, 2099037, 2121117, 2139901, 2163985, 2182769, 2217193, 2235977, 2262161, 2280945, 2319877, 2339146, 2363497, 2382766]"
"('FilterBuilder.java', 'org.reflections.util.FilterBuilder$Include', 'apply', 'com\\.github\\.olivergondza\\.dumpling.*', 'com.github.olivergondza.dumpling.model.mxbean.MXBeanRuntime.class')","[62131, 80997, 107099, 125965, 147910, 166776, 187287, 206153, 226664, 244876, 263529, 283365, 303299, 323135, 343160, 362996, 383021, 402857, 422791, 442627, 471333, 490199, 510710, 529576, 550087, 568953, 589464, 608330, 628841, 647707, 668218, 686430, 706827, 730107, 753605, 777152, 802499, 825779, 849059, 872339, 895619, 919117, 942882, 979991, 1003271, 1026551, 1049831, 1073111, 1096391, 1119671, 1143169, 1168823, 1192103, 1215383, 1236483, 1254913, 1273343, 1291773, 1310203, 1328633, 1347499, 1368010, 1386876, 1407387, 1425599, 1443816, 1462682, 1488700, 1507566, 1538581, 1557447, 1576411, 1594841, 1613707, 1632671, 1651101, 1669967, 1690912, 1721100, 1739312, 1757475, 1776341, 1802497, 1820927, 1839793, 1858757, 1877187, 1895617, 1914265, 1932962, 1951610, 1970307, 1988737, 2007385, 2026082, 2044948, 2063912, 2082342, 2100554, 2122675, 2141541, 2165543, 2184409, 2218751, 2237617, 2263719, 2282585, 2321476, 2340827, 2365096, 2384447]"
"('Description.java', 'org.junit.runner.Description', 'methodAndClassNamePatternGroupOrDefault', '([\\s\\S]*)\\((.*)\\)', 'cliQuery(com.github.olivergondza.dumpling.query.BlockingTreeTest)')",[1782]
"('Scanner.java', 'java.util.Scanner', 'getCompleteTokenInBuffer', '(?s).*', '2018-01-11 20:22:39\nFull thread dump Java HotSpot(TM) 64-Bit Server VM (24.80-b11 mixed mode):\n\n""JMX client heartbeat 5"" daemon prio=10 tid=0x7fd6b80b3800 nid=4292\n   java.lang.Thread.State: TIMED_WAITING (sleeping)\n\tat java.lang.Thread.sleep(Native Method)\n\tat com.sun.jmx.remote.internal.ClientCommunicatorAdmin$Checker.run(ClientCommunicatorAdmin.java:174)\n\tat java.lang.Thread.run(Thread.java:745)\n\n""RMI RenewClean-[127.0.0.1:34338]"" daemon prio=10 tid=0x7fd6b80b9000 nid=4289\n   java.lang.Thread.State: TIMED_WAITING (on object monitor)\n\tat java.lang.Object.wait(Native Method)\n\t- waiting on <0x707efbcf0> (a java.lang.ref.ReferenceQueue$Lock)\n\tat java.lang.ref.ReferenceQueue.remove(ReferenceQueue.java:135)\n\tat sun.rmi.transport.DGCClient$EndpointEntry$RenewCleanThread.run(DGCClient.java:535)\n\tat java.lang.Thread.run(Thread.java:745)\n\n""JMX client heartbeat 4"" daemon prio=10 tid=0x7fd6b80aa800 nid=4268\n   java.lang.Thread.State: TIMED_WAITING (sleeping)\n\tat java.lang.Thread.sleep(Native Method)\n\tat com.sun.jmx.re')","[1527990, 1528035, 1528080]"
"('FilterBuilder.java', 'org.reflections.util.FilterBuilder$Exclude', 'apply', 'java.lang.Object', 'com.github.olivergondza.dumpling.factory.ThreadDumpFactoryVendorTest.ignoreWaitLock.groovy')","[56777, 75361, 101745, 120329, 142556, 161140, 181933, 200517, 221310, 239663, 257893, 277447, 297663, 317217, 337524, 357078, 377385, 396939, 417155, 436709, 465979, 484563, 505356, 523940, 544733, 563317, 584110, 602694, 623487, 642071, 662864, 681217, 700063, 723343, 746700, 770388, 795735, 819015, 842295, 865575, 888855, 912212, 935977, 973227, 996507, 1019787, 1043067, 1066347, 1089627, 1112907, 1136264, 1162059, 1185339, 1208619, 1231129, 1249559, 1267989, 1286419, 1304849, 1323279, 1341863, 1362656, 1381240, 1402033, 1420386, 1438462, 1457046, 1483346, 1501930, 1533227, 1551811, 1571057, 1589487, 1608071, 1627317, 1645747, 1664331, 1685558, 1715746, 1734099, 1752121, 1770705, 1797143, 1815573, 1834157, 1853403, 1871833, 1890263, 1908770, 1927608, 1946115, 1964953, 1983383, 2001890, 2020728, 2039312, 2058558, 2076988, 2095341, 2117321, 2135905, 2160189, 2178773, 2213397, 2231981, 2258365, 2276949, 2315981, 2335050, 2359601, 2378670]"
"('Scanner.java', 'java.util.Scanner', 'getCompleteTokenInBuffer', '(?s).*', '""JMX client heartbeat 4"" daemon prio=10 tid=0x00007fd6b80aa800 nid=0x10ac waiting on condition [0x00007fd68faf9000]\n   java.lang.Thread.State: TIMED_WAITING (sleeping)\n\tat java.lang.Thread.sleep(Native Method)\n\tat com.sun.jmx.remote.internal.ClientCommunicatorAdmin$Checker.run(ClientCommunicatorAdmin.java:174)\n\tat java.lang.Thread.run(Thread.java:745)\n\n   Locked ownable synchronizers:\n\t- None\n\n""JMX server connection timeout 27"" daemon prio=10 tid=0x00007fd67c00d000 nid=0x10ab in Object.wait() [0x00007fd68fbfa000]\n   java.lang.Thread.State: TIMED_WAITING (on object monitor)\n\tat java.lang.Object.wait(Native Method)\n\t- waiting on <0x00000007c1400870> (a [I)\n\tat com.sun.jmx.remote.internal.ServerCommunicatorAdmin$Timeout.run(ServerCommunicatorAdmin.java:168)\n\t- locked <0x00000007c1400870> (a [I)\n\tat java.lang.Thread.run(Thread.java:745)\n\n   Locked ownable synchronizers:\n\t- None\n\n""JMX client heartbeat 3"" daemon prio=10 tid=0x00007fd6b82e4800 nid=0x1043 waiting on condition [0x00007fd68fcfb000]\n   java.lang.Thread.')","[957347, 957830]"
"('ThreadDumpFactory.java', 'com.github.olivergondza.dumpling.factory.ThreadDumpFactory', 'initHeader', '#\\d+', '[0x00007fd882c88000]')","[48842, 48876]"
"('Description.java', 'org.junit.runner.Description', 'methodAndClassNamePatternGroupOrDefault', '([\\s\\S]*)\\((.*)\\)', 'monitorDeadlock(com.github.olivergondza.dumpling.factory.ThreadDumpFactoryVendorTest)')",[308]
"('FilterBuilder.java', 'org.reflections.util.FilterBuilder$Exclude', 'apply', 'java.lang.Object', 'com.github.olivergondza.dumpling.groovy.GroovyApi')","[70021, 70135, 89301, 89421, 114989, 115103, 134269, 134389, 155800, 155914, 175080, 175200, 195177, 195291, 214457, 214577, 234554, 234668, 252559, 252670, 271833, 271953, 292083, 292209, 311603, 311723, 331853, 331979, 351464, 351584, 371714, 371840, 391325, 391445, 411575, 411701, 431095, 431215, 451345, 451471, 479223, 479337, 498503, 498623, 518600, 518714, 537880, 538000, 557977, 558091, 577257, 577377, 597354, 597468, 616634, 616754, 636731, 636845, 656011, 656131, 676108, 676222, 694113, 694224, 716787, 716931, 740067, 740211, 763772, 763919, 787112, 787256, 812459, 812603, 835739, 835883, 859019, 859163, 882299, 882443, 905579, 905723, 929284, 929431, 953049, 953196, 989951, 990095, 1013231, 1013375, 1036511, 1036655, 1059791, 1059935, 1083071, 1083215, 1106351, 1106495, 1129631, 1129775, 1153336, 1153483, 1178783, 1178927, 1202063, 1202207, 1225343, 1225487, 1244373, 1244487, 1262803, 1262917, 1281233, 1281347, 1299663, 1299777, 1318093, 1318207, 1336523, 1336637, 1355803, 1355923, 1375900, 1376014, 1395180, 1395300, 1415277, 1415391, 1433282, 1433393, 1451706, 1451820, 1470986, 1471106, 1496590, 1496704, 1515870, 1515990, 1546471, 1546585, 1565751, 1565871, 1584301, 1584415, 1602731, 1602845, 1622011, 1622131, 1640561, 1640675, 1658991, 1659105, 1678271, 1678391, 1698802, 1698916, 1728990, 1729104, 1746995, 1747106, 1765365, 1765479, 1784645, 1784765, 1810387, 1810501, 1828817, 1828931, 1848097, 1848217, 1866647, 1866761, 1885077, 1885191, 1903507, 1903621, 1922362, 1922479, 1940852, 1940966, 1959707, 1959824, 1978197, 1978311, 1996627, 1996741, 2015482, 2015599, 2033972, 2034086, 2053252, 2053372, 2071802, 2071916, 2090232, 2090346, 2108237, 2108348, 2130565, 2130679, 2149845, 2149965, 2173433, 2173547, 2192713, 2192833, 2226641, 2226755, 2245921, 2246041, 2271609, 2271723, 2290889, 2291009, 2329573, 2329690, 2349338, 2349461, 2373193, 2373310, 2392958, 2393081]"
"('FilterBuilder.java', 'org.reflections.util.FilterBuilder$Include', 'apply', 'com\\.github\\.olivergondza\\.dumpling.*', 'com.github.olivergondza.dumpling.cli.CliCommand.class')","[61141, 79955, 106109, 124923, 146920, 165734, 186297, 205111, 225674, 243912, 262487, 282271, 302257, 322041, 342118, 361902, 381979, 401763, 421749, 441533, 470343, 489157, 509720, 528534, 549097, 567911, 588474, 607288, 627851, 646665, 667228, 685466, 705577, 728857, 752329, 775902, 801249, 824529, 847809, 871089, 894369, 917841, 941606, 978741, 1002021, 1025301, 1048581, 1071861, 1095141, 1118421, 1141893, 1167573, 1190853, 1214133, 1235493, 1253923, 1272353, 1290783, 1309213, 1327643, 1346457, 1367020, 1385834, 1406397, 1424635, 1442826, 1461640, 1487710, 1506524, 1537591, 1556405, 1575421, 1593851, 1612665, 1631681, 1650111, 1668925, 1689922, 1720110, 1738348, 1756485, 1775299, 1801507, 1819937, 1838751, 1857767, 1876197, 1894627, 1913249, 1931972, 1950594, 1969317, 1987747, 2006369, 2025092, 2043906, 2062922, 2081352, 2099590, 2121685, 2140499, 2164553, 2183367, 2217761, 2236575, 2262729, 2281543, 2320460, 2339759, 2364080, 2383379]"
"('Scanner.java', 'java.util.Scanner', 'getCompleteTokenInBuffer', '(?s).*', '""Reference Handler"" daemon prio=10 tid=0x00007fd80806c000 nid=0xf88 in Object.wait() [0x00007fd8053d2000]\n   java.lang.Thread.State: WAITING (on object monitor)\n\tat java.lang.Object.wait(Native Method)\n\t- waiting on <0x00000007b0f08578> (a java.lang.ref.Reference$Lock)\n\tat java.lang.Object.wait(Object.java:503)\n\tat java.lang.ref.Reference$ReferenceHandler.run(Reference.java:133)\n\t- locked <0x00000007b0f08578> (a java.lang.ref.Reference$Lock)\n\n   Locked ownable synchronizers:\n\t- None\n\n""main"" prio=10 tid=0x00007fd808007800 nid=0xf82 runnable [0x00007fd811733000]\n   java.lang.Thread.State: RUNNABLE\n\tat dumpling-script.run(dumpling-script:16)\n\tat groovy.lang.GroovyShell.runScriptOrMainOrTestOrRunnable(GroovyShell.java:258)\n\tat groovy.lang.GroovyShell.run(GroovyShell.java:550)\n\tat com.github.olivergondza.dumpling.cli.GroovyCommand.run(GroovyCommand.java:94)\n\tat com.github.olivergondza.dumpling.cli.Main.run(Main.java:75)\n\tat com.github.olivergondza.dumpling.cli.Main.main(Main.java:58)\n\n   Locked ownable synchronize')",[38069]
"('Scanner.java', 'java.util.Scanner', 'getCompleteTokenInBuffer', '(?s).*', '""c"" prio=10 tid=0x00007f41602f8001 nid=0x7cd3 waiting on condition [0x00007f414e58f001]\n   java.lang.Thread.State: TIMED_WAITING (sleeping)\n\tat java.lang.Thread.sleep(Native Method)\n\tat com.github.olivergondza.dumpling.Util.pause(Util.java:48)\n\tat com.github.olivergondza.dumpling.query.BlockingTreeTest$1.run(BlockingTreeTest.java:37)\n\t- locked <0x00000007d750e1e1> (a com.github.olivergondza.dumpling.query.BlockingTreeTest$1)\n\nJNI global references: 171\n\n')","[2308650, 2308896, 2310695, 2310941, 2312740, 2312986, 2354225, 2354561, 2356360, 2356606, 2397845, 2398181]"
"('Scanner.java', 'java.util.Scanner', 'getCompleteTokenInBuffer', '(?s).*', '""VM Thread"" prio=10 tid=0x00007f8650067800 nid=0xea9 runnable \n\n""GC task thread#0 (ParallelGC)"" prio=10 tid=0x00007f865001d800 nid=0xea5 runnable \n\n""GC task thread#1 (ParallelGC)"" prio=10 tid=0x00007f865001f800 nid=0xea6 runnable \n\n""GC task thread#2 (ParallelGC)"" prio=10 tid=0x00007f8650021000 nid=0xea7 runnable \n\n""GC task thread#3 (ParallelGC)"" prio=10 tid=0x00007f8650023000 nid=0xea8 runnable \n\n""VM Periodic Task Thread"" prio=10 tid=0x00007f86500a1800 nid=0xeb1 waiting on condition \n\nJNI global references: 263\n\n')","[21660, 21776, 21892, 22008, 22124, 22240, 22494]"
"('FilterBuilder.java', 'org.reflections.util.FilterBuilder$Include', 'apply', 'com\\.github\\.olivergondza\\.dumpling.*', 'com/github/olivergondza/dumpling/cli/command.threaddump.usage')","[60498, 79278, 105466, 124246, 146277, 165057, 185654, 204434, 225031, 243286, 261810, 281560, 301580, 321330, 341441, 361191, 381302, 401052, 421072, 440822, 469700, 488480, 509077, 527857, 548454, 567234, 587831, 606611, 627208, 645988, 666585, 684840, 704764, 728044, 751499, 775089, 800436, 823716, 846996, 870276, 893556, 917011, 940776, 977928, 1001208, 1024488, 1047768, 1071048, 1094328, 1117608, 1141063, 1166760, 1190040, 1213320, 1234850, 1253280, 1271710, 1290140, 1308570, 1327000, 1345780, 1366377, 1385157, 1405754, 1424009, 1442183, 1460963, 1487067, 1505847, 1536948, 1555728, 1574778, 1593208, 1611988, 1631038, 1649468, 1668248, 1689279, 1719467, 1737722, 1755842, 1774622, 1800864, 1819294, 1838074, 1857124, 1875554, 1893984, 1912589, 1931329, 1949934, 1968674, 1987104, 2005709, 2024449, 2043229, 2062279, 2080709, 2098964, 2121042, 2139822, 2163910, 2182690, 2217118, 2235898, 2262086, 2280866, 2319800, 2339065, 2363420, 2382685]"
"('Description.java', 'org.junit.runner.Description', 'methodAndClassNamePatternGroupOrDefault', '([\\s\\S]*)\\((.*)\\)', 'runtimeKindHelp(com.github.olivergondza.dumpling.cli.MainTest)')",[1430]
"('FilterBuilder.java', 'org.reflections.util.FilterBuilder$Include', 'apply', 'com\\.github\\.olivergondza\\.dumpling.*', 'com/github/olivergondza/dumpling/TestThread$JMXProcess.class')","[71984, 91368, 116952, 136336, 157763, 177147, 197140, 216524, 236517, 254470, 273900, 294254, 313670, 334024, 353531, 373885, 393392, 413746, 433162, 453516, 481186, 500570, 520563, 539947, 559940, 579324, 599317, 618701, 638694, 658078, 678071, 696024, 719270, 742550, 766307, 789595, 814942, 838222, 861502, 884782, 908062, 931819, 955584, 992434, 1015714, 1038994, 1062274, 1085554, 1108834, 1132114, 1155871, 1181266, 1204546, 1227826, 1246336, 1264766, 1283196, 1301626, 1320056, 1338486, 1357870, 1377863, 1397247, 1417240, 1435193, 1453669, 1473053, 1498553, 1517937, 1548434, 1567818, 1586264, 1604694, 1624078, 1642524, 1660954, 1680338, 1700765, 1730953, 1748906, 1767328, 1786712, 1812350, 1830780, 1850164, 1868610, 1887040, 1905470, 1924377, 1942815, 1961722, 1980160, 1998590, 2017497, 2035935, 2055319, 2073765, 2092195, 2110148, 2132528, 2151912, 2175396, 2194780, 2228604, 2247988, 2273572, 2292956, 2331588, 2351457, 2375208, 2395077]"
"('FilterBuilder.java', 'org.reflections.util.FilterBuilder$Include', 'apply', 'com\\.github\\.olivergondza\\.dumpling.*', 'com.github.olivergondza.dumpling.cli.CommandFailedException.class')","[60153, 78915, 105121, 123883, 145932, 164694, 185309, 204071, 224686, 242950, 261447, 281179, 301217, 320949, 341078, 360810, 380939, 400671, 420709, 440441, 469355, 488117, 508732, 527494, 548109, 566871, 587486, 606248, 626863, 645625, 666240, 684504, 704329, 727609, 751055, 774654, 800001, 823281, 846561, 869841, 893121, 916567, 940332, 977493, 1000773, 1024053, 1047333, 1070613, 1093893, 1117173, 1140619, 1166325, 1189605, 1212885, 1234505, 1252935, 1271365, 1289795, 1308225, 1326655, 1345417, 1366032, 1384794, 1405409, 1423673, 1441838, 1460600, 1486722, 1505484, 1536603, 1555365, 1574433, 1592863, 1611625, 1630693, 1649123, 1667885, 1688934, 1719122, 1737386, 1755497, 1774259, 1800519, 1818949, 1837711, 1856779, 1875209, 1893639, 1912235, 1930984, 1949580, 1968329, 1986759, 2005355, 2024104, 2042866, 2061934, 2080364, 2098628, 2120697, 2139459, 2163565, 2182327, 2216773, 2235535, 2261741, 2280503, 2319446, 2338693, 2363066, 2382313]"
"('FilterBuilder.java', 'org.reflections.util.FilterBuilder$Include', 'apply', 'com\\.github\\.olivergondza\\.dumpling.*', 'com.github.olivergondza.dumpling.model.mxbean.MXBeanThread$Builder.class')","[62017, 80877, 106985, 125845, 147796, 166656, 187173, 206033, 226550, 244765, 263409, 283239, 303179, 323009, 343040, 362870, 382901, 402731, 422671, 442501, 471219, 490079, 510596, 529456, 549973, 568833, 589350, 608210, 628727, 647587, 668104, 686319, 706683, 729963, 753458, 777008, 802355, 825635, 848915, 872195, 895475, 918970, 942735, 979847, 1003127, 1026407, 1049687, 1072967, 1096247, 1119527, 1143022, 1168679, 1191959, 1215239, 1236369, 1254799, 1273229, 1291659, 1310089, 1328519, 1347379, 1367896, 1386756, 1407273, 1425488, 1443702, 1462562, 1488586, 1507446, 1538467, 1557327, 1576297, 1594727, 1613587, 1632557, 1650987, 1669847, 1690798, 1720986, 1739201, 1757361, 1776221, 1802383, 1820813, 1839673, 1858643, 1877073, 1895503, 1914148, 1932848, 1951493, 1970193, 1988623, 2007268, 2025968, 2044828, 2063798, 2082228, 2100443, 2122561, 2141421, 2165429, 2184289, 2218637, 2237497, 2263605, 2282465, 2321359, 2340704, 2364979, 2384324]"
"('FilterBuilder.java', 'org.reflections.util.FilterBuilder$Include', 'apply', 'com\\.github\\.olivergondza\\.dumpling.*', 'com/github/olivergondza/dumpling/model/mxbean/MXBeanRuntime.class')","[62094, 80958, 107062, 125926, 147873, 166737, 187250, 206114, 226627, 244840, 263490, 283324, 303260, 323094, 343121, 362955, 382982, 402816, 422752, 442586, 471296, 490160, 510673, 529537, 550050, 568914, 589427, 608291, 628804, 647668, 668181, 686394, 706780, 730060, 753557, 777105, 802452, 825732, 849012, 872292, 895572, 919069, 942834, 979944, 1003224, 1026504, 1049784, 1073064, 1096344, 1119624, 1143121, 1168776, 1192056, 1215336, 1236446, 1254876, 1273306, 1291736, 1310166, 1328596, 1347460, 1367973, 1386837, 1407350, 1425563, 1443779, 1462643, 1488663, 1507527, 1538544, 1557408, 1576374, 1594804, 1613668, 1632634, 1651064, 1669928, 1690875, 1721063, 1739276, 1757438, 1776302, 1802460, 1820890, 1839754, 1858720, 1877150, 1895580, 1914227, 1932925, 1951572, 1970270, 1988700, 2007347, 2026045, 2044909, 2063875, 2082305, 2100518, 2122638, 2141502, 2165506, 2184370, 2218714, 2237578, 2263682, 2282546, 2321438, 2340787, 2365058, 2384407]"
"('ThreadDumpFactory.java', 'com.github.olivergondza.dumpling.factory.ThreadDumpFactory', 'initHeader', '#\\d+', '[0x00007f2a2d457000]')","[17961, 17995]"
"('FilterBuilder.java', 'org.reflections.util.FilterBuilder$Include', 'apply', 'com\\.github\\.olivergondza\\.dumpling.*', 'com.github.olivergondza.dumpling.query.BlockingTree$Tree.class')","[66819, 85931, 111787, 130899, 152598, 171710, 191975, 211087, 231352, 249441, 268463, 288545, 308233, 328315, 348094, 368176, 387955, 408037, 427725, 447807, 476021, 495133, 515398, 534510, 554775, 573887, 594152, 613264, 633529, 652641, 672906, 690995, 712745, 736025, 759646, 783070, 808417, 831697, 854977, 878257, 901537, 925158, 948923, 985909, 1009189, 1032469, 1055749, 1079029, 1102309, 1125589, 1149210, 1174741, 1198021, 1221301, 1241171, 1259601, 1278031, 1296461, 1314891, 1333321, 1352433, 1372698, 1391810, 1412075, 1430164, 1448504, 1467616, 1493388, 1512500, 1543269, 1562381, 1581099, 1599529, 1618641, 1637359, 1655789, 1674901, 1695600, 1725788, 1743877, 1762163, 1781275, 1807185, 1825615, 1844727, 1863445, 1881875, 1900305, 1919076, 1937650, 1956421, 1974995, 1993425, 2012196, 2030770, 2049882, 2068600, 2087030, 2105119, 2127363, 2146475, 2170231, 2189343, 2223439, 2242551, 2268407, 2287519, 2326287, 2345884, 2369907, 2389504]"
"('FilterBuilder.java', 'org.reflections.util.FilterBuilder$Include', 'apply', 'com\\.github\\.olivergondza\\.dumpling.*', 'com.github.olivergondza.dumpling.model.ProcessThread$1.class')","[65717, 84771, 110685, 129739, 151496, 170550, 190873, 209927, 230250, 248368, 267303, 287327, 307073, 327097, 346934, 366958, 386795, 406819, 426565, 446589, 474919, 493973, 514296, 533350, 553673, 572727, 593050, 612104, 632427, 651481, 671804, 689922, 711353, 734633, 758225, 781678, 807025, 830305, 853585, 876865, 900145, 923737, 947502, 984517, 1007797, 1031077, 1054357, 1077637, 1100917, 1124197, 1147789, 1173349, 1196629, 1219909, 1240069, 1258499, 1276929, 1295359, 1313789, 1332219, 1351273, 1371596, 1390650, 1410973, 1429091, 1447402, 1466456, 1492286, 1511340, 1542167, 1561221, 1579997, 1598427, 1617481, 1636257, 1654687, 1673741, 1694498, 1724686, 1742804, 1761061, 1780115, 1806083, 1824513, 1843567, 1862343, 1880773, 1899203, 1917945, 1936548, 1955290, 1973893, 1992323, 2011065, 2029668, 2048722, 2067498, 2085928, 2104046, 2126261, 2145315, 2169129, 2188183, 2222337, 2241391, 2267305, 2286359, 2325156, 2344695, 2368776, 2388315]"
"('FilterBuilder.java', 'org.reflections.util.FilterBuilder$Include', 'apply', 'com\\.github\\.olivergondza\\.dumpling.*', 'com/github/olivergondza/dumpling/cli/Factories$ThreadDump.class')","[61598, 80436, 106566, 125404, 147377, 166215, 186754, 205592, 226131, 244357, 262968, 282776, 302738, 322546, 342599, 362407, 382460, 402268, 422230, 442038, 470800, 489638, 510177, 529015, 549554, 568392, 588931, 607769, 628308, 647146, 667685, 685911, 706154, 729434, 752918, 776479, 801826, 825106, 848386, 871666, 894946, 918430, 942195, 979318, 1002598, 1025878, 1049158, 1072438, 1095718, 1118998, 1142482, 1168150, 1191430, 1214710, 1235950, 1254380, 1272810, 1291240, 1309670, 1328100, 1346938, 1367477, 1386315, 1406854, 1425080, 1443283, 1462121, 1488167, 1507005, 1538048, 1556886, 1575878, 1594308, 1613146, 1632138, 1650568, 1669406, 1690379, 1720567, 1738793, 1756942, 1775780, 1801964, 1820394, 1839232, 1858224, 1876654, 1895084, 1913718, 1932429, 1951063, 1969774, 1988204, 2006838, 2025549, 2044387, 2063379, 2081809, 2100035, 2122142, 2140980, 2165010, 2183848, 2218218, 2237056, 2263186, 2282024, 2320929, 2340252, 2364549, 2383872]"
"('Description.java', 'org.junit.runner.Description', 'methodAndClassNamePatternGroupOrDefault', '([\\s\\S]*)\\((.*)\\)', 'hasHelp(com.github.olivergondza.dumpling.cli.GrepCommandTest)')",[572]
"('FilterBuilder.java', 'org.reflections.util.FilterBuilder$Include', 'apply', 'com\\.github\\.olivergondza\\.dumpling.*', 'com.github.olivergondza.dumpling.factory.ThreadDumpFactoryVendorTest.busyWaiting.groovy')","[56963, 75557, 101931, 120525, 142742, 161336, 182119, 200713, 221496, 239844, 258089, 277653, 297859, 317423, 337720, 357284, 377581, 397145, 417351, 436915, 466165, 484759, 505542, 524136, 544919, 563513, 584296, 602890, 623673, 642267, 663050, 681398, 700299, 723579, 746941, 770624, 795971, 819251, 842531, 865811, 889091, 912453, 936218, 973463, 996743, 1020023, 1043303, 1066583, 1089863, 1113143, 1136505, 1162295, 1185575, 1208855, 1231315, 1249745, 1268175, 1286605, 1305035, 1323465, 1342059, 1362842, 1381436, 1402219, 1420567, 1438648, 1457242, 1483532, 1502126, 1533413, 1552007, 1571243, 1589673, 1608267, 1627503, 1645933, 1664527, 1685744, 1715932, 1734280, 1752307, 1770901, 1797329, 1815759, 1834353, 1853589, 1872019, 1890449, 1908961, 1927794, 1946306, 1965139, 1983569, 2002081, 2020914, 2039508, 2058744, 2077174, 2095522, 2117507, 2136101, 2160375, 2178969, 2213583, 2232177, 2258551, 2277145, 2316172, 2335251, 2359792, 2378871]"
"('FilterBuilder.java', 'org.reflections.util.FilterBuilder$Include', 'apply', 'com\\.github\\.olivergondza\\.dumpling.*', 'jstack/producer-consumer.log')","[70360, 89658, 115328, 134626, 156139, 175437, 195516, 214814, 234893, 252889, 272190, 292458, 311960, 332228, 351821, 372089, 391682, 411950, 431452, 451720, 479562, 498860, 518939, 538237, 558316, 577614, 597693, 616991, 637070, 656368, 676447, 694443, 717216, 740496, 764210, 787541, 812888, 836168, 859448, 882728, 906008, 929722, 953487, 990380, 1013660, 1036940, 1060220, 1083500, 1106780, 1130060, 1153774, 1179212, 1202492, 1225772, 1244712, 1263142, 1281572, 1300002, 1318432, 1336862, 1356160, 1376239, 1395537, 1415616, 1433612, 1452045, 1471343, 1496929, 1516227, 1546810, 1566108, 1584640, 1603070, 1622368, 1640900, 1659330, 1678628, 1699141, 1729329, 1747325, 1765704, 1785002, 1810726, 1829156, 1848454, 1866986, 1885416, 1903846, 1922710, 1941191, 1960055, 1978536, 1996966, 2015830, 2034311, 2053609, 2072141, 2090571, 2108567, 2130904, 2150202, 2173772, 2193070, 2226980, 2246278, 2271948, 2291246, 2329921, 2349704, 2373541, 2393324]"
"('Description.java', 'org.junit.runner.Description', 'methodAndClassNamePatternGroupOrDefault', '([\\s\\S]*)\\((.*)\\)', 'synchronizerDeadlock(com.github.olivergondza.dumpling.factory.ThreadDumpFactoryVendorTest)')",[66]
"('FilterBuilder.java', 'org.reflections.util.FilterBuilder$Exclude', 'apply', 'java.lang.Object', 'org.kohsuke.args4j.CmdLineException')","[60913, 79715, 105881, 124683, 146692, 165494, 186069, 204871, 225446, 243690, 262247, 282019, 302017, 321789, 341878, 361650, 381739, 401511, 421509, 441281, 470115, 488917, 509492, 528294, 548869, 567671, 588246, 607048, 627623, 646425, 667000, 685244, 705289, 728569, 752035, 775614, 800961, 824241, 847521, 870801, 894081, 917547, 941312, 978453, 1001733, 1025013, 1048293, 1071573, 1094853, 1118133, 1141599, 1167285, 1190565, 1213845, 1235265, 1253695, 1272125, 1290555, 1308985, 1327415, 1346217, 1366792, 1385594, 1406169, 1424413, 1442598, 1461400, 1487482, 1506284, 1537363, 1556165, 1575193, 1593623, 1612425, 1631453, 1649883, 1668685, 1689694, 1719882, 1738126, 1756257, 1775059, 1801279, 1819709, 1838511, 1857539, 1875969, 1894399, 1913015, 1931744, 1950360, 1969089, 1987519, 2006135, 2024864, 2043666, 2062694, 2081124, 2099368, 2121457, 2140259, 2164325, 2183127, 2217533, 2236335, 2262501, 2281303, 2320226, 2339513, 2363846, 2383133]"
"('ThreadDumpFactory.java', 'com.github.olivergondza.dumpling.factory.ThreadDumpFactory', 'initHeader', '#\\d+', '[0x00007fd68fdfc000]')","[454906, 454945, 958951, 959002, 1520176, 1520213]"
"('ThreadDumpFactory.java', 'com.github.olivergondza.dumpling.factory.ThreadDumpFactory', 'initHeader', '#\\d+', '[0x00007fd6f8153000]')","[458356, 458395, 1523472, 1523509]"
"('Scanner.java', 'java.util.Scanner', 'getCompleteTokenInBuffer', '(?s).*', '4064\n')",[46734]
"('FilterBuilder.java', 'org.reflections.util.FilterBuilder$Include', 'apply', 'com\\.github\\.olivergondza\\.dumpling.*', 'com.github.olivergondza.dumpling.factory.MXBeanFactoryUtils.class')","[68003, 87177, 112971, 132145, 153782, 172956, 193159, 212333, 232536, 250594, 269709, 289853, 309479, 329623, 349340, 369484, 389201, 409345, 428971, 449115, 477205, 496379, 516582, 535756, 555959, 575133, 595336, 614510, 634713, 653887, 674090, 692148, 714239, 737519, 761171, 784564, 809911, 833191, 856471, 879751, 903031, 926683, 950448, 987403, 1010683, 1033963, 1057243, 1080523, 1103803, 1127083, 1150735, 1176235, 1199515, 1222795, 1242355, 1260785, 1279215, 1297645, 1316075, 1334505, 1353679, 1373882, 1393056, 1413259, 1431317, 1449688, 1468862, 1494572, 1513746, 1544453, 1563627, 1582283, 1600713, 1619887, 1638543, 1656973, 1676147, 1696784, 1726972, 1745030, 1763347, 1782521, 1808369, 1826799, 1845973, 1864629, 1883059, 1901489, 1920291, 1938834, 1957636, 1976179, 1994609, 2013411, 2031954, 2051128, 2069784, 2088214, 2106272, 2128547, 2147721, 2171415, 2190589, 2224623, 2243797, 2269591, 2288765, 2327502, 2347161, 2371122, 2390781]"
"('FilterBuilder.java', 'org.reflections.util.FilterBuilder$Exclude', 'apply', 'java.lang.Object', 'org.junit.rules.TestRule')","[71155, 90495, 116123, 135463, 156934, 176274, 196311, 215651, 235688, 253663, 273027, 293337, 312797, 333107, 352658, 372968, 392519, 412829, 432289, 452599, 480357, 499697, 519734, 539074, 559111, 578451, 598488, 617828, 637865, 657205, 677242, 695217, 718221, 741501, 765236, 788546, 813893, 837173, 860453, 883733, 907013, 930748, 954513, 991385, 1014665, 1037945, 1061225, 1084505, 1107785, 1131065, 1154800, 1180217, 1203497, 1226777, 1245507, 1263937, 1282367, 1300797, 1319227, 1337657, 1356997, 1377034, 1396374, 1416411, 1434386, 1452840, 1472180, 1497724, 1517064, 1547605, 1566945, 1585435, 1603865, 1623205, 1641695, 1660125, 1679465, 1699936, 1730124, 1748099, 1766499, 1785839, 1811521, 1829951, 1849291, 1867781, 1886211, 1904641, 1923526, 1941986, 1960871, 1979331, 1997761, 2016646, 2035106, 2054446, 2072936, 2091366, 2109341, 2131699, 2151039, 2174567, 2193907, 2227775, 2247115, 2272743, 2292083, 2330737, 2350562, 2374357, 2394182]"
"('ThreadDumpFactory.java', 'com.github.olivergondza.dumpling.factory.ThreadDumpFactory', 'initHeader', '#\\d+', '[0x00007f414e18b000]')","[2308285, 2308311, 2310330, 2310356, 2312375, 2312401, 2353730, 2353766, 2355995, 2356021, 2397350, 2397386]"
"('Description.java', 'org.junit.runner.Description', 'methodAndClassNamePatternGroupOrDefault', '([\\s\\S]*)\\((.*)\\)', 'cliQuery(com.github.olivergondza.dumpling.query.TopContendersTest)')",[1584]
"('Description.java', 'org.junit.runner.Description', 'methodAndClassNamePatternGroupOrDefault', '([\\s\\S]*)\\((.*)\\)', 'loadSymbolsFromOtherDumplingPackages(com.github.olivergondza.dumpling.cli.GroovyRuntimeTest)')",[726]
"('ThreadDumpFactory.java', 'com.github.olivergondza.dumpling.factory.ThreadDumpFactory', 'initHeader', '#\\d+', '[0x00007ff59cdf9000]')","[2111942, 2111968, 2154135, 2154170, 2197003, 2197038, 2201582, 2201608]"
"('FilterBuilder.java', 'org.reflections.util.FilterBuilder$Include', 'apply', 'com\\.github\\.olivergondza\\.dumpling.*', 'com.github.olivergondza.dumpling.groovy.InterpretterConfig.class')","[61789, 80637, 106757, 125605, 147568, 166416, 186945, 205793, 226322, 244543, 263169, 282987, 302939, 322757, 342800, 362618, 382661, 402479, 422431, 442249, 470991, 489839, 510368, 529216, 549745, 568593, 589122, 607970, 628499, 647347, 667876, 686097, 706395, 729675, 753164, 776720, 802067, 825347, 848627, 871907, 895187, 918676, 942441, 979559, 1002839, 1026119, 1049399, 1072679, 1095959, 1119239, 1142728, 1168391, 1191671, 1214951, 1236141, 1254571, 1273001, 1291431, 1309861, 1328291, 1347139, 1367668, 1386516, 1407045, 1425266, 1443474, 1462322, 1488358, 1507206, 1538239, 1557087, 1576069, 1594499, 1613347, 1632329, 1650759, 1669607, 1690570, 1720758, 1738979, 1757133, 1775981, 1802155, 1820585, 1839433, 1858415, 1876845, 1895275, 1913914, 1932620, 1951259, 1969965, 1988395, 2007034, 2025740, 2044588, 2063570, 2082000, 2100221, 2122333, 2141181, 2165201, 2184049, 2218409, 2237257, 2263377, 2282225, 2321125, 2340458, 2364745, 2384078]"
"('Scanner.java', 'java.util.Scanner', 'getCompleteTokenInBuffer', '(?s).*', '4096\n')",[50515]
"('FilterBuilder.java', 'org.reflections.util.FilterBuilder$Include', 'apply', 'com\\.github\\.olivergondza\\.dumpling.*', 'com/github/olivergondza/dumpling/query/TopContenders$Result$1.class')","[67586, 86738, 112554, 131706, 153365, 172517, 192742, 211894, 232119, 250188, 269270, 289392, 309040, 329162, 348901, 369023, 388762, 408884, 428532, 448654, 476788, 495940, 516165, 535317, 555542, 574694, 594919, 614071, 634296, 653448, 673673, 691742, 713712, 736992, 760633, 784037, 809384, 832664, 855944, 879224, 902504, 926145, 949910, 986876, 1010156, 1033436, 1056716, 1079996, 1103276, 1126556, 1150197, 1175708, 1198988, 1222268, 1241938, 1260368, 1278798, 1297228, 1315658, 1334088, 1353240, 1373465, 1392617, 1412842, 1430911, 1449271, 1468423, 1494155, 1513307, 1544036, 1563188, 1581866, 1600296, 1619448, 1638126, 1656556, 1675708, 1696367, 1726555, 1744624, 1762930, 1782082, 1807952, 1826382, 1845534, 1864212, 1882642, 1901072, 1919863, 1938417, 1957208, 1975762, 1994192, 2012983, 2031537, 2050689, 2069367, 2087797, 2105866, 2128130, 2147282, 2170998, 2190150, 2224206, 2243358, 2269174, 2288326, 2327074, 2346711, 2370694, 2390331]"
"('Scanner.java', 'java.util.Scanner', 'getCompleteTokenInBuffer', '(?s).*', '""surefire-forkedjvm-command-thread"" daemon prio=10 tid=0x7fd6fc311800 nid=3526\n   java.lang.Thread.State: RUNNABLE\n\tat java.io.FileInputStream.readBytes(Native Method)\n\tat java.io.FileInputStream.read(FileInputStream.java:272)\n\tat java.io.BufferedInputStream.fill(BufferedInputStream.java:235)\n\tat java.io.BufferedInputStream.read(BufferedInputStream.java:254)\n\t- locked <0x707069ca8> (a java.io.BufferedInputStream)\n\tat java.io.DataInputStream.readInt(DataInputStream.java:387)\n\tat org.apache.maven.surefire.booter.MasterProcessCommand.decode(MasterProcessCommand.java:117)\n\tat org.apache.maven.surefire.booter.CommandReader$CommandRunnable.run(CommandReader.java:360)\n\tat java.lang.Thread.run(Thread.java:745)\n\n""last-ditch-daemon-shutdown-thread-30sec"" daemon prio=10 tid=0x7fd6fc30c800 nid=3525\n   java.lang.Thread.State: TIMED_WAITING (parking)\n\tat sun.misc.Unsafe.park(Native Method)\n\t- parking to wait for <0x707069d68> (a java.util.concurrent.locks.AbstractQueuedSynchronizer$ConditionObject)\n\tat java.util.concurrent.locks.LockSupport.parkNanos(LockSupport.java:226)\n\tat java.util.concurrent.locks.AbstractQueuedSynchronizer$ConditionObject.awaitNanos(AbstractQueuedSynchronizer.java:2082)\n\tat java.util.concurrent.ScheduledThreadPoolExecutor$DelayedWorkQueue.take(ScheduledThreadPoolExecutor.java:1090)\n\tat java.util.concurrent.ScheduledThreadPoolExecutor$DelayedWorkQueue.take(ScheduledThreadPoolExecutor.java:807)\n\tat java.util.concurrent.ThreadPoolExecutor.getTask(ThreadPoolExecutor.java:1068)\n\tat java.util.concurrent.ThreadPoolExecutor.runWorker(ThreadPoolExecutor.java:1130)\n\tat java.util.concurrent.ThreadPoolExecutor$Worker.run(ThreadPoolExecutor.java:615)\n\tat java.lang.Thread.run(Thread.java:745)\n\n""Service Thread"" daemon prio=10 tid=0x7fd6fc2f3000 nid=3523\n   java.lang.Thread.State: RUNNABLE\n\n""C2 CompilerThread1"" daemon prio=10 tid=0x7fd6fc2f1000 nid=3522\n   java.lang.Thread.State: RUNNABLE\n\n""C2 CompilerThread0"" daemon prio=10 tid=0x7fd6fc2ec800 nid=3521\n   java.lang.Thread.State: RUNNABLE\n\n""Signal Dispatcher"" daemon prio=10 tid=0x7fd6fc157000 nid=3520\n   java.lang.Thread.State: RUNNABLE\n\n""Finalizer"" daemon prio=10 tid=0x7fd6fc136000 nid=3519\n   java.lang.Thread.State: WAITING (on object monitor)\n\tat java.lang.Object.wait(Native Method)\n\t- waiting on <0x70706a0a8> (a java.lang.ref.ReferenceQueue$Lock)\n\tat java.lang.ref.ReferenceQueue.remove(ReferenceQueue.java:135)\n\tat java.lang.ref.ReferenceQueue.remove(ReferenceQueue.java:151)\n\tat java.lang.ref.Finalizer$FinalizerThread.run(Finalizer.java:209)\n\n""Reference Handler"" daemon prio=10 tid=0x7fd6fc134000 nid=3518\n   java.lang.Thread.State: WAITING (on object monitor)\n\tat java.lang.Object.wait(Native Method)\n\t- waiting on <0x70706a150> (a java.lang.ref.Reference$Lock)\n\tat java.lang.Object.wait(Object.java:503)\n\tat java.lang.ref.Reference$ReferenceHandler.run(Reference.java:133)\n\n""main"" prio=10 tid=0x7fd6fc008800 nid=3512\n   java.lang.Thread.State: WAITING (parking)\n\tat sun.misc.Unsafe.park(Native Method)\n\t- parking to wait for <0x7b2049ad8> (a java.util.concurrent.FutureTask)\n\tat java.util.concurrent.locks.LockSupport.park(LockSupport.java:186)\n\tat java.util.concurrent.FutureTask.awaitDone(FutureTask.java:425)\n\tat java.util.concurrent.FutureTask.get(FutureTask.java:187)\n\tat org.apache.maven.surefire.junitcore.pc.SharedThreadPoolStrategy.finished(SharedThreadPoolStrategy.java:60)\n\tat org.apache.maven.surefire.junitcore.pc.Scheduler.finished(Scheduler.java:372)\n\tat org.junit.runners.ParentRunner.runChildren(ParentRunner.java:295)\n\tat org.junit.runners.ParentRunner.access$000(ParentRunner.java:58)\n\tat org.junit.runners.ParentRunner$2.evaluate(ParentRunner.java:268)\n\tat org.junit.runners.ParentRunner.run(ParentRunner.java:363)\n\tat org.junit.runners.Suite.runChild(Suite.java:128)\n\tat org.junit.runners.Suite.runChild(Suite.java:27)\n\tat org.junit.runners.ParentRunner$3.run(ParentRunner.java:290)\n\tat org.apache.maven.surefire.junitcore.pc.Scheduler$1.run(Scheduler.java:393)\n\tat org.apache.maven.surefire.junitcore.pc.InvokerStrategy.schedule(InvokerStrategy.java:54)\n\tat org.apache.maven.surefir')","[1529035, 1529130, 1529225, 1529320, 1529415, 1529510, 1529605, 1529700]"
"('Description.java', 'org.junit.runner.Description', 'methodAndClassNamePatternGroupOrDefault', '([\\s\\S]*)\\((.*)\\)', 'cliQueryTraces(com.github.olivergondza.dumpling.query.BlockingTreeTest)')",[1804]
"('FilterBuilder.java', 'org.reflections.util.FilterBuilder$Include', 'apply', 'com\\.github\\.olivergondza\\.dumpling.*', 'com/github/olivergondza/dumpling/cli/GroovyRuntimeTest$2.class')","[54466, 72928, 99434, 117896, 140245, 158707, 179622, 198084, 218999, 237413, 255460, 274892, 295230, 314662, 335091, 354523, 374952, 394384, 414722, 434154, 463668, 482130, 503045, 521507, 542422, 560884, 581799, 600261, 621176, 639638, 660553, 678967, 697142, 720422, 743718, 767467, 792814, 816094, 839374, 862654, 885934, 909230, 932995, 970306, 993586, 1016866, 1040146, 1063426, 1086706, 1109986, 1133282, 1159138, 1182418, 1205698, 1228818, 1247248, 1265678, 1284108, 1302538, 1320968, 1339430, 1360345, 1378807, 1399722, 1418136, 1436151, 1454613, 1481035, 1499497, 1530916, 1549378, 1568746, 1587176, 1605638, 1625006, 1643436, 1661898, 1683247, 1713435, 1731849, 1749810, 1768272, 1794832, 1813262, 1831724, 1851092, 1869522, 1887952, 1906398, 1925297, 1943743, 1962642, 1981072, 1999518, 2018417, 2036879, 2056247, 2074677, 2093091, 2115010, 2133472, 2157878, 2176340, 2211086, 2229548, 2256054, 2274516, 2313609, 2332556, 2357229, 2376176]"
"('Description.java', 'org.junit.runner.Description', 'methodAndClassNamePatternGroupOrDefault', '([\\s\\S]*)\\((.*)\\)', 'inferNonsense(com.github.olivergondza.dumpling.cli.ProcessRuntimeOptionHandlerTest)')",[1276]
"('FilterBuilder.java', 'org.reflections.util.FilterBuilder$Include', 'apply', 'com\\.github\\.olivergondza\\.dumpling.*', 'com/github/olivergondza/dumpling/model/ThreadSet.class')","[65526, 84570, 110494, 129538, 151305, 170349, 190682, 209726, 230059, 248182, 267102, 287116, 306872, 326886, 346733, 366747, 386594, 406608, 426364, 446378, 474728, 493772, 514105, 533149, 553482, 572526, 592859, 611903, 632236, 651280, 671613, 689736, 711112, 734392, 757979, 781437, 806784, 830064, 853344, 876624, 899904, 923491, 947256, 984276, 1007556, 1030836, 1054116, 1077396, 1100676, 1123956, 1147543, 1173108, 1196388, 1219668, 1239878, 1258308, 1276738, 1295168, 1313598, 1332028, 1351072, 1371405, 1390449, 1410782, 1428905, 1447211, 1466255, 1492095, 1511139, 1541976, 1561020, 1579806, 1598236, 1617280, 1636066, 1654496, 1673540, 1694307, 1724495, 1742618, 1760870, 1779914, 1805892, 1824322, 1843366, 1862152, 1880582, 1899012, 1917749, 1936357, 1955094, 1973702, 1992132, 2010869, 2029477, 2048521, 2067307, 2085737, 2103860, 2126070, 2145114, 2168938, 2187982, 2222146, 2241190, 2267114, 2286158, 2324960, 2344489, 2368580, 2388109]"
"('FilterBuilder.java', 'org.reflections.util.FilterBuilder$Include', 'apply', 'com\\.github\\.olivergondza\\.dumpling.*', 'com.github.olivergondza.dumpling.groovy.GroovyApiEntryPoint$LoadCommand.class')","[69981, 89259, 114949, 134227, 155760, 175038, 195137, 214415, 234514, 252520, 271791, 292039, 311561, 331809, 351422, 371670, 391283, 411531, 431053, 451301, 479183, 498461, 518560, 537838, 557937, 577215, 597314, 616592, 636691, 655969, 676068, 694074, 716737, 740017, 763721, 787062, 812409, 835689, 858969, 882249, 905529, 929233, 952998, 989901, 1013181, 1036461, 1059741, 1083021, 1106301, 1129581, 1153285, 1178733, 1202013, 1225293, 1244333, 1262763, 1281193, 1299623, 1318053, 1336483, 1355761, 1375860, 1395138, 1415237, 1433243, 1451666, 1470944, 1496550, 1515828, 1546431, 1565709, 1584261, 1602691, 1621969, 1640521, 1658951, 1678229, 1698762, 1728950, 1746956, 1765325, 1784603, 1810347, 1828777, 1848055, 1866607, 1885037, 1903467, 1922321, 1940812, 1959666, 1978157, 1996587, 2015441, 2033932, 2053210, 2071762, 2090192, 2108198, 2130525, 2149803, 2173393, 2192671, 2226601, 2245879, 2271569, 2290847, 2329532, 2349295, 2373152, 2392915]"
"('FilterBuilder.java', 'org.reflections.util.FilterBuilder$Include', 'apply', 'com\\.github\\.olivergondza\\.dumpling.*', 'com.github.olivergondza.dumpling.groovy.GroovyApiEntryPoint.class')","[70095, 89379, 115063, 134347, 155874, 175158, 195251, 214535, 234628, 252631, 271911, 292165, 311681, 331935, 351542, 371796, 391403, 411657, 431173, 451427, 479297, 498581, 518674, 537958, 558051, 577335, 597428, 616712, 636805, 656089, 676182, 694185, 716881, 740161, 763868, 787206, 812553, 835833, 859113, 882393, 905673, 929380, 953145, 990045, 1013325, 1036605, 1059885, 1083165, 1106445, 1129725, 1153432, 1178877, 1202157, 1225437, 1244447, 1262877, 1281307, 1299737, 1318167, 1336597, 1355881, 1375974, 1395258, 1415351, 1433354, 1451780, 1471064, 1496664, 1515948, 1546545, 1565829, 1584375, 1602805, 1622089, 1640635, 1659065, 1678349, 1698876, 1729064, 1747067, 1765439, 1784723, 1810461, 1828891, 1848175, 1866721, 1885151, 1903581, 1922438, 1940926, 1959783, 1978271, 1996701, 2015558, 2034046, 2053330, 2071876, 2090306, 2108309, 2130639, 2149923, 2173507, 2192791, 2226715, 2245999, 2271683, 2290967, 2329649, 2349418, 2373269, 2393038]"
"('FilterBuilder.java', 'org.reflections.util.FilterBuilder$Include', 'apply', 'com\\.github\\.olivergondza\\.dumpling.*', 'com.github.olivergondza.dumpling.cli.GroovyCommand.class')","[58929, 77627, 103897, 122595, 144708, 163406, 184085, 202783, 223462, 241758, 260159, 279827, 299929, 319597, 339790, 359458, 379651, 399319, 419421, 439089, 468131, 486829, 507508, 526206, 546885, 565583, 586262, 604960, 625639, 644337, 665016, 683312, 702785, 726065, 749479, 773110, 798457, 821737, 845017, 868297, 891577, 914991, 938756, 975949, 999229, 1022509, 1045789, 1069069, 1092349, 1115629, 1139043, 1164781, 1188061, 1211341, 1233281, 1251711, 1270141, 1288571, 1307001, 1325431, 1344129, 1364808, 1383506, 1404185, 1422481, 1440614, 1459312, 1485498, 1504196, 1535379, 1554077, 1573209, 1591639, 1610337, 1629469, 1647899, 1666597, 1687710, 1717898, 1736194, 1754273, 1772971, 1799295, 1817725, 1836423, 1855555, 1873985, 1892415, 1910979, 1929760, 1948324, 1967105, 1985535, 2004099, 2022880, 2041578, 2060710, 2079140, 2097436, 2119473, 2138171, 2162341, 2181039, 2215549, 2234247, 2260517, 2279215, 2318190, 2337373, 2361810, 2380993]"
"('FilterBuilder.java', 'org.reflections.util.FilterBuilder$Include', 'apply', 'com\\.github\\.olivergondza\\.dumpling.*', 'com/github/olivergondza/dumpling/factory/ThreadDumpFactoryVendorTest$Runner$1.class')","[55874, 74410, 100842, 119378, 141653, 160189, 181030, 199566, 220407, 238784, 256942, 276448, 296712, 316218, 336573, 356079, 376434, 395940, 416204, 435710, 465076, 483612, 504453, 522989, 543830, 562366, 583207, 601743, 622584, 641120, 661961, 680338, 698920, 722200, 745533, 769245, 794592, 817872, 841152, 864432, 887712, 911045, 934810, 972084, 995364, 1018644, 1041924, 1065204, 1088484, 1111764, 1135097, 1160916, 1184196, 1207476, 1230226, 1248656, 1267086, 1285516, 1303946, 1322376, 1340912, 1361753, 1380289, 1401130, 1419507, 1437559, 1456095, 1482443, 1500979, 1532324, 1550860, 1570154, 1588584, 1607120, 1626414, 1644844, 1663380, 1684655, 1714843, 1733220, 1751218, 1769754, 1796240, 1814670, 1833206, 1852500, 1870930, 1889360, 1907843, 1926705, 1945188, 1964050, 1982480, 2000963, 2019825, 2038361, 2057655, 2076085, 2094462, 2116418, 2134954, 2159286, 2177822, 2212494, 2231030, 2257462, 2275998, 2315054, 2334075, 2358674, 2377695]"
"('FilterBuilder.java', 'org.reflections.util.FilterBuilder$Include', 'apply', 'com\\.github\\.olivergondza\\.dumpling.*', 'com.github.olivergondza.dumpling.factory.PidRuntimeFactory.class')","[69143, 88377, 114111, 133345, 154922, 174156, 194299, 213533, 233676, 251704, 270909, 291113, 310679, 330883, 350540, 370744, 390401, 410605, 430171, 450375, 478345, 497579, 517722, 536956, 557099, 576333, 596476, 615710, 635853, 655087, 675230, 693258, 715679, 738959, 762641, 786004, 811351, 834631, 857911, 881191, 904471, 928153, 951918, 988843, 1012123, 1035403, 1058683, 1081963, 1105243, 1128523, 1152205, 1177675, 1200955, 1224235, 1243495, 1261925, 1280355, 1298785, 1317215, 1335645, 1354879, 1375022, 1394256, 1414399, 1432427, 1450828, 1470062, 1495712, 1514946, 1545593, 1564827, 1583423, 1601853, 1621087, 1639683, 1658113, 1677347, 1697924, 1728112, 1746140, 1764487, 1783721, 1809509, 1827939, 1847173, 1865769, 1884199, 1902629, 1921461, 1939974, 1958806, 1977319, 1995749, 2014581, 2033094, 2052328, 2070924, 2089354, 2107382, 2129687, 2148921, 2172555, 2191789, 2225763, 2244997, 2270731, 2289965, 2328672, 2348391, 2372292, 2392011]"
"('Scanner.java', 'java.util.Scanner', 'getCompleteTokenInBuffer', '(?s).*', '""remotely-observed-thread"" #18\n   java.lang.Thread.State: WAITING (on object monitor)\n\tat java.lang.Object.wait(Native Method)\n\t- waiting on <0x18c50a5f> (a com.github.olivergondza.dumpling.TestThread$1)\n\tat java.lang.Object.wait(Object.java:503)\n\tat com.github.olivergondza.dumpling.TestThread$1.run(TestThread.java:76)\n\n')",[374256]
"('FilterBuilder.java', 'org.reflections.util.FilterBuilder$Include', 'apply', 'com\\.github\\.olivergondza\\.dumpling.*', 'com.github.olivergondza.dumpling.cli.GroovyshCommand$1.class')","[59083, 77789, 104051, 122757, 144862, 163568, 184239, 202945, 223616, 241908, 260321, 279997, 300091, 319767, 339952, 359628, 379813, 399489, 419583, 439259, 468285, 486991, 507662, 526368, 547039, 565745, 586416, 605122, 625793, 644499, 665170, 683462, 702979, 726259, 749677, 773304, 798651, 821931, 845211, 868491, 891771, 915189, 938954, 976143, 999423, 1022703, 1045983, 1069263, 1092543, 1115823, 1139241, 1164975, 1188255, 1211535, 1233435, 1251865, 1270295, 1288725, 1307155, 1325585, 1344291, 1364962, 1383668, 1404339, 1422631, 1440768, 1459474, 1485652, 1504358, 1535533, 1554239, 1573363, 1591793, 1610499, 1629623, 1648053, 1666759, 1687864, 1718052, 1736344, 1754427, 1773133, 1799449, 1817879, 1836585, 1855709, 1874139, 1892569, 1911137, 1929914, 1948482, 1967259, 1985689, 2004257, 2023034, 2041740, 2060864, 2079294, 2097586, 2119627, 2138333, 2162495, 2181201, 2215703, 2234409, 2260671, 2279377, 2318348, 2337539, 2361968, 2381159]"
"('Scanner.java', 'java.util.Scanner', 'getCompleteTokenInBuffer', '(?s).*', '""main"" prio=10 tid=0x00007f4544007800 nid=0xf36 waiting on condition [0x00007f4549d9c000]\n   java.lang.Thread.State: WAITING (parking)\n\tat sun.misc.Unsafe.park(Native Method)\n\t- parking to wait for  <0x00000007ae60aab0> (a java.lang.Object)\n\tat java.util.concurrent.locks.LockSupport.park(LockSupport.java:186)\n\tat java_util_concurrent_locks_LockSupport$park.call(Unknown Source)\n\tat org.codehaus.groovy.runtime.callsite.CallSiteArray.defaultCall(CallSiteArray.java:45)\n\tat org.codehaus.groovy.runtime.callsite.AbstractCallSite.call(AbstractCallSite.java:108)\n\tat org.codehaus.groovy.runtime.callsite.AbstractCallSite.call(AbstractCallSite.java:116)\n\tat dumpling-script.run(dumpling-script:21)\n\tat groovy.lang.GroovyShell.runScriptOrMainOrTestOrRunnable(GroovyShell.java:258)\n\tat groovy.lang.GroovyShell.run(GroovyShell.java:550)\n\tat com.github.olivergondza.dumpling.cli.GroovyCommand.run(GroovyCommand.java:94)\n\tat com.github.olivergondza.dumpling.cli.Main.run(Main.java:75)\n\tat com.github.olivergondza.dumpling.cli.Main.main(Main.java:58)\n\n   Locked ownable synchronizers:\n\t- None\n\n""VM Thread"" prio=10 tid=0x00007f4544067800 nid=0xf3b runnable \n\n""GC task thread#0 (ParallelGC)"" prio=10 tid=0x00007f454401d800 nid=0xf37 runnable \n\n""GC task thread#1 (ParallelGC)"" prio=10 tid=0x00007f454401f800 nid=0xf38 runnable \n\n""GC task thread#2 (ParallelGC)"" prio=10 tid=0x00007f4544021000 nid=0xf39 runnable \n\n""GC task thread#3 (ParallelGC)"" prio=10 tid=0x00007f4544023000 nid=0xf3a runnable \n\n""VM Periodic Task Thread"" prio=10 tid=0x00007f45440a9800 nid=0xf42 waiting on condition \n\nJNI global references: 263\n\n')","[34935, 35277, 35412, 35547, 35682, 35817, 35952, 36225]"
"('Scanner.java', 'java.util.Scanner', 'getCompleteTokenInBuffer', '(?s).*', '""Handling POST /hudson/job/some_other_job/doRename : ajp-127.0.0.1-8009-24"" daemon prio=10 tid=0x5851b800 nid=27336\n   java.lang.Thread.State: BLOCKED (on object monitor)\n\tat hudson.model.ListView.onJobRenamed(ListView.java:250)\n\t- waiting to lock <0x40dce6960> (a hudson.model.ListView)\n\tat hudson.plugins.nested_view.NestedView.onJobRenamed(NestedView.java:124)\n\t- locked <0x40dce0d68> (a hudson.plugins.nested_view.NestedView)\n\tat jenkins.model.Jenkins.onRenamed(Jenkins.java:2355)\n\tat jenkins.model.Jenkins.onRenamed(Jenkins.java:304)\n\tat hudson.model.AbstractItem.callOnRenamed(AbstractItem.java:308)\n\tat hudson.model.AbstractItem.renameTo(AbstractItem.java:294)\n\t- locked <0x49c5f7990> (a hudson.model.FreeStyleProject)\n\t- locked <0x404325338> (a hudson.model.Hudson)\n\tat hudson.model.Job.renameTo(Job.java:507)\n\tat hudson.model.Job.doDoRename(Job.java:1226)\n\tat sun.reflect.GeneratedMethodAccessor1831.invoke(Unknown Source)\n\tat sun.reflect.DelegatingMethodAccessorImpl.invoke(DelegatingMethodAccessorImpl.java:25)\n\tat java.lang.reflect.Method.invoke(Method.java:597)\n\tat org.kohsuke.stapler.Function$InstanceFunction.invoke(Function.java:288)\n\tat org.kohsuke.stapler.interceptor.RequirePOST$Processor.invoke(RequirePOST.java:29)\n\tat org.kohsuke.stapler.Function$InterceptedFunction.invoke(Function.java:389)\n\tat org.kohsuke.stapler.Function.bindAndInvoke(Function.java:151)\n\tat org.kohsuke.stapler.Function.bindAndInvokeAndServeResponse(Function.java:90)\n\tat org.kohsuke.stapler.MetaClass$1.doDispatch(MetaClass.java:111)\n\tat org.kohsuke.stapler.NameBasedDispatcher.dispatch(NameBasedDispatcher.java:53)\n\tat org.kohsuke.stapler.Stapler.tryInvoke(Stapler.java:574)\n\tat org.kohsuke.stapler.Stapler.invoke(Stapler.java:659)\n\tat org.kohsuke.stapler.MetaClass$6.doDispatch(MetaClass.java:241)\n\tat org.kohsuke.stapler.NameBasedDispatcher.dispatch(NameBasedDispatcher.java:53)\n\tat org.kohsuke.stapler.Stapler.tryInvoke(Stapler.java:574)\n\tat org.kohsuke.stapler.Stapler.invoke(Stapler.java:659)\n\tat org.kohsuke.stapler.Stapler.invoke(Stapler.java:488)\n\tat org.kohsuke.stapler.Stapler.service(Stapler.java:162)\n\tat javax.servlet.http.HttpServlet.service(HttpServlet.java:717)\n\tat org.apache.catalina.core.ApplicationFilterChain.internalDoFilter(ApplicationFilterChain.java:290)\n\tat org.apache.catalina.core.ApplicationFilterChain.doFilter(ApplicationFilterChain.java:206)\n\tat hudson.util.PluginServletFilter$1.doFilter(PluginServletFilter.java:95)\n\tat hudson.plugins.audit_trail.AuditTrailFilter.doFilter(AuditTrailFilter.java:66)\n\tat hudson.util.PluginServletFilter$1.doFilter(PluginServletFilter.java:98)\n\tat hudson.util.PluginServletFilter.doFilter(PluginServletFilter.java:87)\n\tat org.apache.catalina.core.ApplicationFilterChain.internalDoFilter(ApplicationFilterChain.java:235)\n\tat org.apache.catalina.core.ApplicationFilterChain.doFilter(ApplicationFilterChain.java:206)\n\tat hudson.security.csrf.CrumbFilter.doFilter(CrumbFilter.java:47)\n\tat org.apache.catalina.core.ApplicationFilterChain.internalDoFilter(ApplicationFilterChain.java:235)\n\tat org.apache.catalina.core.ApplicationFilterChain.doFilter(ApplicationFilterChain.java:206)\n\tat org.jenkinsci.plugins.reverse_proxy_auth.ReverseProxySecurityRealm$1.doFilter(ReverseProxySecurityRealm.java:142)\n\tat hudson.security.HudsonFilter.doFilter(HudsonFilter.java:164)\n\tat org.apache.catalina.core.ApplicationFilterChain.internalDoFilter(ApplicationFilterChain.java:235)\n\tat org.apache.catalina.core.ApplicationFilterChain.doFilter(ApplicationFilterChain.java:206)\n\tat org.kohsuke.stapler.compression.CompressionFilter.doFilter(CompressionFilter.java:50)\n\tat org.apache.catalina.core.ApplicationFilterChain.internalDoFilter(ApplicationFilterChain.java:235)\n\tat org.apache.catalina.core.ApplicationFilterChain.doFilter(ApplicationFilterChain.java:206)\n\tat hudson.util.CharacterEncodingFilter.doFilter(CharacterEncodingFilter.java:81)\n\tat org.apache.catalina.core.ApplicationFilterChain.internalDoFilter(ApplicationFilterChain.java:235)\n\tat org.apache.catalina.core.ApplicationFilterChain.doFilter(ApplicationFilterChain.java:206)\n\tat org.jboss.web.tomcat.filters.ReplyHeaderFilter.doFilter(ReplyHeaderFilter.java:96)\n\tat org.apache.catalina.core.ApplicationFilterChain.internalDoFilter(ApplicationFilterChain.java:235)\n\tat org.apache.catalina.core.ApplicationFilterChain.doFilter(ApplicationFilterChain.java:206)\n\tat org.apache.catalina.core.StandardWrapperValve.invoke(StandardWrapperValve.java:235)\n\tat org.apache.catalina.core.StandardContextValve.invoke(StandardContextValve.java:191)\n\tat org.jboss.web.tomcat.security.SecurityAssociationValve.invoke(SecurityAssociationValve.java:183)\n\tat org.apache.catalina.authenticator.AuthenticatorBase.invoke(AuthenticatorBase.java:442)\n\tat org.jboss.web.tomcat.security.JaccContextValve.invoke(JaccContextValve.java:95)\n\tat org.jboss.web.tomcat.security.SecurityContextEstablishmentValve.process(SecurityContextEstablishmentValve.java:126)\n\tat org.jboss.web.tomcat.security.SecurityContextEstablishmentValve.invoke(SecurityContextEstablishmentValve.java:70)\n\tat org.apache.catalina.core.StandardHostValve.invoke(StandardHostValve.java:127)\n\tat org.apache.catalina.valves.ErrorReportValve.invoke(ErrorReportValve.java:102)\n\tat org.jboss.web.tomcat.service.jca.CachedConnectionValve.invoke(CachedConnectionValve.java:158)\n\tat org.apache.catalina.core.StandardEngineValve.invoke(StandardEngineValve.java:109)\n\tat org.jboss.web.tomcat.service.request.ActiveRequestResponseCacheValve.internalProcess(ActiveRequestResponseCacheValve.java:74)\n\tat org.jboss.web.tomcat.service.request.ActiveRequestResponseCacheValve.invoke(ActiveRequestResponseCacheValve.java:47)\n\tat org.apache.catalina.connector.CoyoteAdapter.service(CoyoteAdapter.java:330)\n\tat org.apache.coyote.ajp.AjpProcessor.process(AjpProcessor.java:437)\n\tat org.apache.coyote.ajp.AjpProtocol$AjpConnectionHandler.process(AjpProtocol.java:385)\n\tat org.apache.tomcat.util.net.JIoEndpoint$Worker.run(JIoEndpoint.java:451)\n\tat java.lang.Thread.run(Thread.java:662)\n\n""VM Thread"" prio=10 tid=0x57f84000 nid=26700\n   java.lang.Thread.State: UNKNOWN\n\n""GC task thread#0 (ParallelGC)"" prio=10 tid=0x57f1e800 nid=26687\n   java.lang.Thread.State: UNKNOWN\n\n""GC task thread#1 (ParallelGC)"" prio=10 tid=0x57f20800 nid=26688\n   java.lang.Thread.State: UNKNOWN\n\n""GC task thread#2 (ParallelGC)"" prio=10 tid=0x57f22000 nid=26689\n   java.lang.Thread.State: UNKNOWN\n\n""GC task thread#3 (ParallelGC)"" prio=10 tid=0x57f24000 nid=26690\n   java.lang.Thread.State: UNKNOWN\n\n""GC task thread#4 (ParallelGC)"" prio=10 tid=0x57f26000 nid=26691\n   java.lang.Thread.State: UNKNOWN\n\n""GC task thread#5 (ParallelGC)"" prio=10 tid=0x57f27800 nid=26692\n   java.lang.Thread.State: UNKNOWN\n\n""GC task thread#6 (ParallelGC)"" prio=10 tid=0x57f29800 nid=26693\n   java.lang.Thread.State: UNKNOWN\n\n""GC task thread#7 (ParallelGC)"" prio=10 tid=0x57f2b800 nid=26694\n   java.lang.Thread.State: UNKNOWN\n\n""GC task thread#8 (ParallelGC)"" prio=10 tid=0x57f2d000 nid=26695\n   java.lang.Thread.State: UNKNOWN\n\n""GC task thread#9 (ParallelGC)"" prio=10 tid=0x57f2f000 nid=26696\n   java.lang.Thread.State: UNKNOWN\n\n""GC task thread#10 (ParallelGC)"" prio=10 tid=0x57f31000 nid=26697\n   java.lang.Thread.State: UNKNOWN\n\n""GC task thread#11 (ParallelGC)"" prio=10 tid=0x57f32800 nid=26698\n   java.lang.Thread.State: UNKNOWN\n\n""GC task thread#12 (ParallelGC)"" prio=10 tid=0x57f34800 nid=26699\n   java.lang.Thread.State: UNKNOWN\n\n""VM Periodic Task Thread"" prio=10 tid=0x2ad3c4104800 nid=26710\n   java.lang.Thread.State: UNKNOWN\n\n')","[137328, 137482, 137636, 137790, 137944, 138098, 138252, 138406, 138560, 138714, 138868, 139022, 139176, 139330, 139484, 139638]"
"('FilterBuilder.java', 'org.reflections.util.FilterBuilder$Include', 'apply', 'com\\.github\\.olivergondza\\.dumpling.*', 'com/github/olivergondza/dumpling/factory/ThreadDumpFactoryVendorTest/parkedWithBlocker.groovy')","[57038, 75636, 102006, 120604, 142817, 161415, 182194, 200792, 221571, 239917, 258168, 277736, 297938, 317506, 337799, 357367, 377660, 397228, 417430, 436998, 466240, 484838, 505617, 524215, 544994, 563592, 584371, 602969, 623748, 642346, 663125, 681471, 700394, 723674, 747038, 770719, 796066, 819346, 842626, 865906, 889186, 912550, 936315, 973558, 996838, 1020118, 1043398, 1066678, 1089958, 1113238, 1136602, 1162390, 1185670, 1208950, 1231390, 1249820, 1268250, 1286680, 1305110, 1323540, 1342138, 1362917, 1381515, 1402294, 1420640, 1438723, 1457321, 1483607, 1502205, 1533488, 1552086, 1571318, 1589748, 1608346, 1627578, 1646008, 1664606, 1685819, 1716007, 1734353, 1752382, 1770980, 1797404, 1815834, 1834432, 1853664, 1872094, 1890524, 1909038, 1927869, 1946383, 1965214, 1983644, 2002158, 2020989, 2039587, 2058819, 2077249, 2095595, 2117582, 2136180, 2160450, 2179048, 2213658, 2232256, 2258626, 2277224, 2316249, 2335332, 2359869, 2378952]"
"('ThreadDumpFactory.java', 'com.github.olivergondza.dumpling.factory.ThreadDumpFactory', 'initHeader', '#\\d+', '[0x00007f863efcd000]')","[20994, 21028]"
"('FilterBuilder.java', 'org.reflections.util.FilterBuilder$Exclude', 'apply', 'java.lang.Object', 'com.github.olivergondza.dumpling.query.command.top-contenders.usage')","[66519, 85615, 111487, 130583, 152298, 171394, 191675, 210771, 231052, 249149, 268147, 288213, 307917, 327983, 347778, 367844, 387639, 407705, 427409, 447475, 475721, 494817, 515098, 534194, 554475, 573571, 593852, 612948, 633229, 652325, 672606, 690703, 712365, 735645, 759258, 782690, 808037, 831317, 854597, 877877, 901157, 924770, 948535, 985529, 1008809, 1032089, 1055369, 1078649, 1101929, 1125209, 1148822, 1174361, 1197641, 1220921, 1240871, 1259301, 1277731, 1296161, 1314591, 1333021, 1352117, 1372398, 1391494, 1411775, 1429872, 1448204, 1467300, 1493088, 1512184, 1542969, 1562065, 1580799, 1599229, 1618325, 1637059, 1655489, 1674585, 1695300, 1725488, 1743585, 1761863, 1780959, 1806885, 1825315, 1844411, 1863145, 1881575, 1900005, 1918768, 1937350, 1956113, 1974695, 1993125, 2011888, 2030470, 2049566, 2068300, 2086730, 2104827, 2127063, 2146159, 2169931, 2189027, 2223139, 2242235, 2268107, 2287203, 2325979, 2345560, 2369599, 2389180]"
"('FilterBuilder.java', 'org.reflections.util.FilterBuilder$Include', 'apply', 'com\\.github\\.olivergondza\\.dumpling.*', 'com.github.olivergondza.dumpling.query.BlockingTreeTest.class')","[53933, 72367, 98901, 117335, 139712, 158146, 179089, 197523, 218466, 236894, 254899, 274303, 294669, 314073, 334530, 353934, 374391, 393795, 414161, 433565, 463135, 481569, 502512, 520946, 541889, 560323, 581266, 599700, 620643, 639077, 660020, 678448, 696469, 719749, 743031, 766794, 792141, 815421, 838701, 861981, 885261, 908543, 932308, 969633, 992913, 1016193, 1039473, 1062753, 1086033, 1109313, 1132595, 1158465, 1181745, 1205025, 1228285, 1246715, 1265145, 1283575, 1302005, 1320435, 1338869, 1359812, 1378246, 1399189, 1417617, 1435618, 1454052, 1480502, 1498936, 1530383, 1548817, 1568213, 1586643, 1605077, 1624473, 1642903, 1661337, 1682714, 1712902, 1731330, 1749277, 1767711, 1794299, 1812729, 1831163, 1850559, 1868989, 1887419, 1905851, 1924764, 1943196, 1962109, 1980539, 1998971, 2017884, 2036318, 2055714, 2074144, 2092572, 2114477, 2132911, 2157345, 2175779, 2210553, 2228987, 2255521, 2273955, 2313062, 2331981, 2356682, 2375601]"
"('Description.java', 'org.junit.runner.Description', 'methodAndClassNamePatternGroupOrDefault', '([\\s\\S]*)\\((.*)\\)', 'toStringWithTraces(com.github.olivergondza.dumpling.query.TopContendersTest)')",[1628]
"('FilterBuilder.java', 'org.reflections.util.FilterBuilder$Include', 'apply', 'com\\.github\\.olivergondza\\.dumpling.*', 'com.github.olivergondza.dumpling.model.dump.ThreadDumpThread.class')","[63311, 82239, 108279, 127207, 149090, 168018, 188467, 207395, 227844, 246025, 264771, 284669, 304541, 324439, 344402, 364300, 384263, 404161, 424033, 443931, 472513, 491441, 511890, 530818, 551267, 570195, 590644, 609572, 630021, 648949, 669398, 687579, 708317, 731597, 755126, 778642, 803989, 827269, 850549, 873829, 897109, 920638, 944403, 981481, 1004761, 1028041, 1051321, 1074601, 1097881, 1121161, 1144690, 1170313, 1193593, 1216873, 1237663, 1256093, 1274523, 1292953, 1311383, 1329813, 1348741, 1369190, 1388118, 1408567, 1426748, 1444996, 1463924, 1489880, 1508808, 1539761, 1558689, 1577591, 1596021, 1614949, 1633851, 1652281, 1671209, 1692092, 1722280, 1740461, 1758655, 1777583, 1803677, 1822107, 1841035, 1859937, 1878367, 1896797, 1915476, 1934142, 1952821, 1971487, 1989917, 2008596, 2027262, 2046190, 2065092, 2083522, 2101703, 2123855, 2142783, 2166723, 2185651, 2219931, 2238859, 2264899, 2283827, 2322687, 2342100, 2366307, 2385720]"
"('FilterBuilder.java', 'org.reflections.util.FilterBuilder$Include', 'apply', 'com\\.github\\.olivergondza\\.dumpling.*', 'com.github.olivergondza.dumpling.model.jvm.JvmRuntime.class')","[64343, 83325, 109311, 128293, 150122, 169104, 189499, 208481, 228876, 247030, 265857, 285809, 305627, 325579, 345488, 365440, 385349, 405301, 425119, 445071, 473545, 492527, 512922, 531904, 552299, 571281, 591676, 610658, 631053, 650035, 670430, 688584, 709619, 732899, 756455, 779944, 805291, 828571, 851851, 875131, 898411, 921967, 945732, 982783, 1006063, 1029343, 1052623, 1075903, 1099183, 1122463, 1146019, 1171615, 1194895, 1218175, 1238695, 1257125, 1275555, 1293985, 1312415, 1330845, 1349827, 1370222, 1389204, 1409599, 1427753, 1446028, 1465010, 1490912, 1509894, 1540793, 1559775, 1578623, 1597053, 1616035, 1634883, 1653313, 1672295, 1693124, 1723312, 1741466, 1759687, 1778669, 1804709, 1823139, 1842121, 1860969, 1879399, 1897829, 1916535, 1935174, 1953880, 1972519, 1990949, 2009655, 2028294, 2047276, 2066124, 2084554, 2102708, 2124887, 2143869, 2167755, 2186737, 2220963, 2239945, 2265931, 2284913, 2323746, 2343213, 2367366, 2386833]"
"('FilterBuilder.java', 'org.reflections.util.FilterBuilder$Include', 'apply', 'com\\.github\\.olivergondza\\.dumpling.*', 'com.github.olivergondza.dumpling.query.command.top-contenders.usage')","[66481, 85575, 111449, 130543, 152260, 171354, 191637, 210731, 231014, 249112, 268107, 288171, 307877, 327941, 347738, 367802, 387599, 407663, 427369, 447433, 475683, 494777, 515060, 534154, 554437, 573531, 593814, 612908, 633191, 652285, 672568, 690666, 712317, 735597, 759209, 782642, 807989, 831269, 854549, 877829, 901109, 924721, 948486, 985481, 1008761, 1032041, 1055321, 1078601, 1101881, 1125161, 1148773, 1174313, 1197593, 1220873, 1240833, 1259263, 1277693, 1296123, 1314553, 1332983, 1352077, 1372360, 1391454, 1411737, 1429835, 1448166, 1467260, 1493050, 1512144, 1542931, 1562025, 1580761, 1599191, 1618285, 1637021, 1655451, 1674545, 1695262, 1725450, 1743548, 1761825, 1780919, 1806847, 1825277, 1844371, 1863107, 1881537, 1899967, 1918729, 1937312, 1956074, 1974657, 1993087, 2011849, 2030432, 2049526, 2068262, 2086692, 2104790, 2127025, 2146119, 2169893, 2188987, 2223101, 2242195, 2268069, 2287163, 2325940, 2345519, 2369560, 2389139]"
"('ThreadDumpFactory.java', 'com.github.olivergondza.dumpling.factory.ThreadDumpFactory', 'initHeader', '#\\d+', '[0x00007fd6b0bd5000]')","[457485, 457524, 962226, 962277, 1522639, 1522676]"
"('Scanner.java', 'java.util.Scanner', 'getCompleteTokenInBuffer', '(?s).*', '""RMI TCP Connection(1)-127.0.0.1"" daemon prio=10 tid=0x00007fd688001800 nid=0x1041 runnable [0x00007fd68fefc000]\n   java.lang.Thread.State: RUNNABLE\n\tat java.net.SocketInputStream.socketRead0(Native Method)\n\tat java.net.SocketInputStream.read(SocketInputStream.java:152)\n\tat java.net.SocketInputStream.read(SocketInputStream.java:122)\n\tat java.io.BufferedInputStream.fill(BufferedInputStream.java:235)\n\tat java.io.BufferedInputStream.read(BufferedInputStream.java:254)\n\t- locked <0x00000007077e3ab0> (a java.io.BufferedInputStream)\n\tat java.io.FilterInputStream.read(FilterInputStream.java:83)\n\tat sun.rmi.transport.tcp.TCPTransport.handleMessages(TCPTransport.java:549)\n\tat sun.rmi.transport.tcp.TCPTransport$ConnectionHandler.run0(TCPTransport.java:828)\n\tat sun.rmi.transport.tcp.TCPTransport$ConnectionHandler.access$400(TCPTransport.java:619)\n\tat sun.rmi.transport.tcp.TCPTransport$ConnectionHandler$1.run(TCPTransport.java:684)\n\tat sun.rmi.transport.tcp.TCPTransport$ConnectionHandler$1.run(TCPTransport.java:681)\n\tat java.security.AccessController.doPrivileged(Native Method)\n\tat sun.rmi.transport.tcp.TCPTransport$ConnectionHandler.run(TCPTransport.java:681)\n\tat java.util.concurrent.ThreadPoolExecutor.runWorker(ThreadPoolExecutor.java:1145)\n\tat java.util.concurrent.ThreadPoolExecutor$Worker.run(ThreadPoolExecutor.java:615)\n\tat java.lang.Thread.run(Thread.java:745)\n\n   Locked ownable synchronizers:\n\t- <0x00000007076de1c0> (a java.util.concurrent.ThreadPoolExecutor$Worker)\n\n""RMI RenewClean-[127.0.1.1:43573]"" daemon prio=10 tid=0x00007fd6b82cf000 nid=0x1040 in Object.wait() [0x00007fd68fffe000]\n   java.lang.Thread.State: TIMED_WAITING (on object monitor)\n\tat java.lang.Object.wait(Native Method)\n\t- waiting on <0x0000000707761e70> (a java.lang.ref.ReferenceQueue$Lock)\n\tat java.lang.ref.ReferenceQueue.remove(ReferenceQueue.java:135)\n\t- locked <0x0000000707761e70> (a java.lang.ref.ReferenceQueue$Lock)\n\tat sun.rmi.transport.DGCClient$EndpointEntry$RenewCleanThread.run(DGCClient.java:535)\n\tat java.lang.Thread.run(Thread.java:745)\n\n ')","[959084, 1520281]"
"('FilterBuilder.java', 'org.reflections.util.FilterBuilder$Include', 'apply', 'com\\.github\\.olivergondza\\.dumpling.*', 'com/github/olivergondza/dumpling/cli/ProcessRuntimeOptionHandlerTest.class')","[54694, 73168, 99662, 118136, 140473, 158947, 179850, 198324, 219227, 237635, 255700, 275144, 295470, 314914, 335331, 354775, 375192, 394636, 414962, 434406, 463896, 482370, 503273, 521747, 542650, 561124, 582027, 600501, 621404, 639878, 660781, 679189, 697430, 720710, 744012, 767755, 793102, 816382, 839662, 862942, 886222, 909524, 933289, 970594, 993874, 1017154, 1040434, 1063714, 1086994, 1110274, 1133576, 1159426, 1182706, 1205986, 1229046, 1247476, 1265906, 1284336, 1302766, 1321196, 1339670, 1360573, 1379047, 1399950, 1418358, 1436379, 1454853, 1481263, 1499737, 1531144, 1549618, 1568974, 1587404, 1605878, 1625234, 1643664, 1662138, 1683475, 1713663, 1732071, 1750038, 1768512, 1795060, 1813490, 1831964, 1851320, 1869750, 1888180, 1906632, 1925525, 1943977, 1962870, 1981300, 1999752, 2018645, 2037119, 2056475, 2074905, 2093313, 2115238, 2133712, 2158106, 2176580, 2211314, 2229788, 2256282, 2274756, 2313843, 2332802, 2357463, 2376422]"
"('FilterBuilder.java', 'org.reflections.util.FilterBuilder$Exclude', 'apply', 'java.lang.Object', 'java.lang.Process')","[72061, 91449, 117029, 136417, 157840, 177228, 197217, 216605, 236594, 254545, 273981, 294339, 313751, 334109, 353612, 373970, 393473, 413831, 433243, 453601, 481263, 500651, 520640, 540028, 560017, 579405, 599394, 618782, 638771, 658159, 678148, 696099, 719367, 742647, 766406, 789692, 815039, 838319, 861599, 884879, 908159, 931918, 955683, 992531, 1015811, 1039091, 1062371, 1085651, 1108931, 1132211, 1155970, 1181363, 1204643, 1227923, 1246413, 1264843, 1283273, 1301703, 1320133, 1338563, 1357951, 1377940, 1397328, 1417317, 1435268, 1453746, 1473134, 1498630, 1518018, 1548511, 1567899, 1586341, 1604771, 1624159, 1642601, 1661031, 1680419, 1700842, 1731030, 1748981, 1767405, 1786793, 1812427, 1830857, 1850245, 1868687, 1887117, 1905547, 1924456, 1942892, 1961801, 1980237, 1998667, 2017576, 2036012, 2055400, 2073842, 2092272, 2110223, 2132605, 2151993, 2175473, 2194861, 2228681, 2248069, 2273649, 2293037, 2331667, 2351540, 2375287, 2395160]"
"('ThreadDumpFactory.java', 'com.github.olivergondza.dumpling.factory.ThreadDumpFactory', 'initHeader', '#\\d+', '[0x00007feb5e478000]')","[14565, 14599]"
"('Scanner.java', 'java.util.Scanner', 'getCompleteTokenInBuffer', '(?s).*', '""main"" prio=10 tid=0x00007f0d1c007800 nid=0xec4 waiting on condition [0x00007f0d23b75000]\n   java.lang.Thread.State: TIMED_WAITING (sleeping)\n\tat java.lang.Thread.sleep(Native Method)\n\tat sun.reflect.NativeMethodAccessorImpl.invoke0(Native Method)\n\tat sun.reflect.NativeMethodAccessorImpl.invoke(NativeMethodAccessorImpl.java:57)\n\tat sun.reflect.DelegatingMethodAccessorImpl.invoke(DelegatingMethodAccessorImpl.java:43)\n\tat java.lang.reflect.Method.invoke(Method.java:606)\n\tat org.codehaus.groovy.reflection.CachedMethod.invoke(CachedMethod.java:90)\n\tat groovy.lang.MetaMethod.doMethodInvoke(MetaMethod.java:233)\n\tat org.codehaus.groovy.runtime.callsite.StaticMetaMethodSite$StaticMetaMethodSiteNoUnwrap.invoke(StaticMetaMethodSite.java:130)\n\tat org.codehaus.groovy.runtime.callsite.StaticMetaMethodSite.call(StaticMetaMethodSite.java:88)\n\tat org.codehaus.groovy.runtime.callsite.CallSiteArray.defaultCall(CallSiteArray.java:45)\n\tat org.codehaus.groovy.runtime.callsite.AbstractCallSite.call(AbstractCallSite.java:108)\n\tat org.codehaus.groovy.runtime.callsite.AbstractCallSite.call(AbstractCallSite.java:116)\n\tat dumpling-script.run(dumpling-script:43)\n\t- locked <0x00000007ae981058> (a java.lang.Object)\n\tat groovy.lang.GroovyShell.runScriptOrMainOrTestOrRunnable(GroovyShell.java:258)\n\tat groovy.lang.GroovyShell.run(GroovyShell.java:550)\n\tat com.github.olivergondza.dumpling.cli.GroovyCommand.run(GroovyCommand.java:94)\n\tat com.github.olivergondza.dumpling.cli.Main.run(Main.java:75)\n\tat com.github.olivergondza.dumpling.cli.Main.main(Main.java:58)\n\n   Locked ownable synchronizers:\n\t- None\n\n""VM Thread"" prio=10 tid=0x00007f0d1c067800 nid=0xec9 runnable \n\n""GC task thread#0 (ParallelGC)"" prio=10 tid=0x00007f0d1c01d800 nid=0xec5 runnable \n\n""GC task thread#1 (ParallelGC)"" prio=10 tid=0x00007f0d1c01f800 nid=0xec6 runnable \n\n""GC task thread#2 (ParallelGC)"" prio=10 tid=0x00007f0d1c021000 nid=0xec7 runnable \n\n""GC task thread#3 (ParallelGC)"" prio=10 tid=0x00007f0d1c023000 nid=0xec8 runnable \n\n""VM Periodic Task Thread"" prio=10 tid=0x00007f0d1c0a9')","[24824, 25168, 25305, 25442, 25579, 25716]"
"('ThreadDumpFactory.java', 'com.github.olivergondza.dumpling.factory.ThreadDumpFactory', 'initHeader', '#\\d+', 'runnable')","[2344, 2378, 3232, 3266, 3941, 3975, 4132, 4166, 4254, 4288, 4376, 4410, 4486, 4520, 4596, 4630, 5808, 5842, 6846, 6880, 7973, 8007, 8110, 8144, 8247, 8281, 8384, 8418, 8521, 8555, 9762, 9796, 10669, 10703, 11769, 11803, 11903, 11937, 12037, 12071, 12171, 12205, 12309, 12343, 12886, 12920, 13090, 13124, 13978, 14012, 15048, 15082, 15186, 15220, 15324, 15358, 15462, 15496, 15600, 15634, 16485, 16519, 17373, 17407, 18099, 18133, 18306, 18340, 18444, 18478, 18582, 18616, 18720, 18754, 18858, 18892, 19777, 19811, 20665, 20699, 21695, 21729, 21811, 21845, 21927, 21961, 22043, 22077, 22159, 22193, 23262, 23296, 24135, 24169, 25203, 25237, 25340, 25374, 25477, 25511, 25614, 25648, 25751, 25785, 26606, 26640, 27494, 27528, 28506, 28540, 28649, 28683, 28792, 28826, 28935, 28969, 29078, 29112, 30007, 30041, 30895, 30929, 31895, 31929, 32032, 32066, 32169, 32203, 32306, 32340, 32443, 32477, 33360, 33394, 34248, 34282, 35312, 35346, 35447, 35481, 35582, 35616, 35717, 35751, 35852, 35886, 36765, 36799, 37653, 37687, 38366, 38400, 38559, 38593, 38683, 38717, 38807, 38841, 38931, 38965, 39055, 39089, 39910, 39944, 40798, 40832, 41796, 41830, 41932, 41966, 42068, 42102, 42204, 42238, 42340, 42374, 43608, 43642, 44649, 44683, 45778, 45812, 45915, 45949, 46052, 46086, 46189, 46223, 46326, 46360, 47642, 47676, 48509, 48543, 49625, 49659, 49749, 49783, 49873, 49907, 49997, 50031, 50125, 50159, 51024, 51058, 51912, 51946, 52916, 52950, 53056, 53090, 53196, 53230, 53336, 53370, 53476, 53510, 93816, 93851, 94143, 94178, 94470, 94505, 94797, 94832, 95124, 95159, 95451, 95486, 95778, 95813, 96105, 96140, 96432, 96467, 96759, 96794, 97086, 97121, 97413, 97448, 97740, 97775, 98067, 98102, 178012, 178047, 178209, 178244, 178335, 178370, 178461, 178496, 178573, 178608, 178685, 178720, 217389, 217424, 217586, 217621, 217712, 217747, 217838, 217873, 217950, 217985, 218062, 218097, 455055, 455094, 455610, 455649, 458024, 458063, 458277, 458316, 458557, 458596, 459275, 459314, 460431, 460470, 461821, 461860, 461999, 462038, 462177, 462216, 462355, 462394, 462533, 462572, 501435, 501470, 501632, 501667, 501758, 501793, 501884, 501919, 501996, 502031, 502108, 502143, 540812, 540847, 541009, 541044, 541135, 541170, 541261, 541296, 541373, 541408, 541485, 541520, 580189, 580224, 580386, 580421, 580512, 580547, 580638, 580673, 580750, 580785, 580862, 580897, 619566, 619601, 619763, 619798, 619889, 619924, 620015, 620050, 620127, 620162, 620239, 620274, 658943, 658978, 659140, 659175, 659266, 659301, 659392, 659427, 659504, 659539, 659616, 659651, 790706, 790754, 790968, 791016, 791133, 791181, 791298, 791346, 791449, 791497, 791600, 791648, 959136, 959187, 959835, 959886, 962909, 962960, 963298, 963349, 963687, 963738, 964671, 964722, 966250, 966301, 968035, 968086, 968260, 968311, 968485, 968536, 968710, 968761, 968935, 968986, 1157004, 1157053, 1157271, 1157320, 1157439, 1157488, 1157607, 1157656, 1157761, 1157810, 1157915, 1157964, 1358735, 1358770, 1358932, 1358967, 1359058, 1359093, 1359184, 1359219, 1359296, 1359331, 1359408, 1359443, 1398112, 1398147, 1398309, 1398344, 1398435, 1398470, 1398561, 1398596, 1398673, 1398708, 1398785, 1398820, 1475465, 1475499, 1475789, 1475823, 1476113, 1476147, 1476437, 1476471, 1476761, 1476795, 1477085, 1477119, 1477409, 1477443, 1477733, 1477767, 1478057, 1478091, 1478381, 1478415, 1478705, 1478739, 1479029, 1479063, 1479353, 1479387, 1479677, 1479711, 1520319, 1520356, 1520850, 1520887, 1523154, 1523191, 1523397, 1523434, 1523667, 1523704, 1524357, 1524394, 1525467, 1525504, 1526801, 1526838, 1526973, 1527010, 1527145, 1527182, 1527317, 1527354, 1527489, 1527526, 1681203, 1681238, 1681400, 1681435, 1681526, 1681561, 1681652, 1681687, 1681764, 1681799, 1681876, 1681911, 1705177, 1705267, 1705669, 1705759, 1706161, 1706251, 1706653, 1706743, 1707145, 1707235, 1707637, 1707727, 1708129, 1708219, 1708621, 1708711, 1709113, 1709203, 1709605, 1709695, 1710097, 1710187, 1710589, 1710679, 1711081, 1711171, 1711573, 1711663, 1789160, 1789195, 1789487, 1789522, 1789814, 1789849, 1790141, 1790176, 1790468, 1790503, 1790795, 1790830, 1791122, 1791157, 1791449, 1791484, 1791776, 1791811, 1792103, 1792138, 1792430, 1792465, 1792757, 1792792, 1793084, 1793119, 1793411, 1793446, 2112036, 2112062, 2112695, 2112721, 2113562, 2113588, 2113689, 2113715, 2113816, 2113842, 2113943, 2113969, 2114070, 2114096, 2154256, 2154291, 2155122, 2155157, 2156241, 2156276, 2156395, 2156430, 2156549, 2156584, 2156703, 2156738, 2156857, 2156892, 2197124, 2197159, 2197990, 2198025, 2199109, 2199144, 2199263, 2199298, 2199417, 2199452, 2199571, 2199606, 2199725, 2199760, 2201676, 2201702, 2202335, 2202361, 2203202, 2203228, 2203329, 2203355, 2203456, 2203482, 2203583, 2203609, 2203710, 2203736, 2205900, 2205926, 2206200, 2206226, 2206500, 2206526, 2206800, 2206826, 2207100, 2207126, 2207400, 2207426, 2207700, 2207726, 2208000, 2208026, 2208300, 2208326, 2208600, 2208626, 2208900, 2208926, 2209200, 2209226, 2209500, 2209526, 2209800, 2209826, 2250436, 2250471, 2250763, 2250798, 2251090, 2251125, 2251417, 2251452, 2251744, 2251779, 2252071, 2252106, 2252398, 2252433, 2252725, 2252760, 2253052, 2253087, 2253379, 2253414, 2253706, 2253741, 2254033, 2254068, 2254360, 2254395, 2254687, 2254722, 2295404, 2295439, 2295731, 2295766, 2296058, 2296093, 2296385, 2296420, 2296712, 2296747, 2297039, 2297074, 2297366, 2297401, 2297693, 2297728, 2298020, 2298055, 2298347, 2298382, 2298674, 2298709, 2299001, 2299036, 2299328, 2299363, 2299655, 2299690, 2302218, 2302244, 2302518, 2302544, 2302818, 2302844, 2303118, 2303144, 2303418, 2303444, 2303718, 2303744, 2304018, 2304044, 2304318, 2304344, 2304618, 2304644, 2304918, 2304944, 2305218, 2305244, 2305518, 2305544, 2305818, 2305844, 2306118, 2306144]"
"('Scanner.java', 'java.util.Scanner', 'getCompleteTokenInBuffer', '(?s).*', '""main"" prio=10 tid=0x00007f8b40007800 nid=0xfc1 in Object.wait() [0x00007f8b45d92000]\n   java.lang.Thread.State: WAITING (on object monitor)\n\tat java.lang.Object.wait(Native Method)\n\t- waiting on <0x00000007aead4618> (a java.lang.Object)\n\tat java.lang.Object.wait(Object.java:503)\n\tat java_lang_Object$wait.call(Unknown Source)\n\tat org.codehaus.groovy.runtime.callsite.CallSiteArray.defaultCall(CallSiteArray.java:45)\n\tat org.codehaus.groovy.runtime.callsite.AbstractCallSite.call(AbstractCallSite.java:108)\n\tat org.codehaus.groovy.runtime.callsite.AbstractCallSite.call(AbstractCallSite.java:112)\n\tat dumpling-script.pauseHere(dumpling-script:10)\n\t- locked <0x00000007aead4618> (a java.lang.Object)\n\tat dumpling-script.run(dumpling-script:22)\n\tat groovy.lang.GroovyShell.runScriptOrMainOrTestOrRunnable(GroovyShell.java:258)\n\tat groovy.lang.GroovyShell.run(GroovyShell.java:550)\n\tat com.github.olivergondza.dumpling.cli.GroovyCommand.run(GroovyCommand.java:94)\n\tat com.github.olivergondza.dumpling.cli.Main.run(Main.java:75)\n\tat com.github.olivergondza.dumpling.cli.Main.main(Main.java:58)\n\n   Locked ownable synchronizers:\n\t- None\n\n""VM Thread"" prio=10 tid=0x00007f8b40067800 nid=0xfc6 runnable \n\n""GC task thread#0 (ParallelGC)"" prio=10 tid=0x00007f8b4001d800 nid=0xfc2 runnable \n\n""GC task thread#1 (ParallelGC)"" prio=10 tid=0x00007f8b4001f800 nid=0xfc3 runnable \n\n""GC task thread#2 (ParallelGC)"" prio=10 tid=0x00007f8b40021000 nid=0xfc4 runnable \n\n""GC task thread#3 (ParallelGC)"" prio=10 tid=0x00007f8b40023000 nid=0xfc5 runnable \n\n""VM Periodic Task Thread"" prio=10 tid=0x00007f8b400a1000 nid=0xfcd waiting on condition \n\nJNI global references: 195\n\n')","[45468, 45743, 45880, 46017, 46154, 46291, 46428, 46703]"
"('FilterBuilder.java', 'org.reflections.util.FilterBuilder$Include', 'apply', 'com\\.github\\.olivergondza\\.dumpling.*', 'com.github.olivergondza.dumpling.factory.JmxRuntimeFactory$LocalConnector.class')","[68687, 87897, 113655, 132865, 154466, 173676, 193843, 213053, 233220, 251260, 270429, 290609, 310199, 330379, 350060, 370240, 389921, 410101, 429691, 449871, 477889, 497099, 517266, 536476, 556643, 575853, 596020, 615230, 635397, 654607, 674774, 692814, 715103, 738383, 762053, 785428, 810775, 834055, 857335, 880615, 903895, 927565, 951330, 988267, 1011547, 1034827, 1058107, 1081387, 1104667, 1127947, 1151617, 1177099, 1200379, 1223659, 1243039, 1261469, 1279899, 1298329, 1316759, 1335189, 1354399, 1374566, 1393776, 1413943, 1431983, 1450372, 1469582, 1495256, 1514466, 1545137, 1564347, 1582967, 1601397, 1620607, 1639227, 1657657, 1676867, 1697468, 1727656, 1745696, 1764031, 1783241, 1809053, 1827483, 1846693, 1865313, 1883743, 1902173, 1920993, 1939518, 1958338, 1976863, 1995293, 2014113, 2032638, 2051848, 2070468, 2088898, 2106938, 2129231, 2148441, 2172099, 2191309, 2225307, 2244517, 2270275, 2289485, 2328204, 2347899, 2371824, 2391519]"
"('Scanner.java', 'java.util.Scanner', 'getCompleteTokenInBuffer', '(?s).*', '2018-01-11 20:22:28\nFull thread dump Java HotSpot(TM) 64-Bit Server VM (24.80-b11 mixed mode):\n\n""Attach Listener"" daemon prio=10 tid=0x00007f103c001000 nid=0x101e waiting on condition [0x0000000000000000]\n   java.lang.Thread.State: RUNNABLE\n\n   Locked ownable synchronizers:\n\t- None\n\n""Service Thread"" daemon prio=10 tid=0x00007f106c096800 nid=0x100d runnable [0x0000000000000000]\n   java.lang.Thread.State: RUNNABLE\n\n   Locked ownable synchronizers:\n\t- None\n\n""C2 CompilerThread1"" daemon prio=10 tid=0x00007f106c094800 nid=0x100c waiting on condition [0x0000000000000000]\n   java.lang.Thread.State: RUNNABLE\n\n   Locked ownable synchronizers:\n\t- None\n\n""C2 CompilerThread0"" daemon prio=10 tid=0x00007f106c091800 nid=0x100b waiting on condition [0x0000000000000000]\n   java.lang.Thread.State: RUNNABLE\n\n   Locked ownable synchronizers:\n\t- None\n\n""Signal Dispatcher"" daemon prio=10 tid=0x00007f106c08f000 nid=0x100a runnable [0x0000000000000000]\n   java.lang.Thread.State: RUNNABLE\n\n   Locked ownable synchronizers:\n\t- None\n\n""Fina')","[50581, 50647, 50989, 51193, 51535, 51877]"
"('Description.java', 'org.junit.runner.Description', 'methodAndClassNamePatternGroupOrDefault', '([\\s\\S]*)\\((.*)\\)', 'loadPidOverJmx(com.github.olivergondza.dumpling.cli.GroovyRuntimeTest)')",[638]
"('FilterBuilder.java', 'org.reflections.util.FilterBuilder$Include', 'apply', 'com\\.github\\.olivergondza\\.dumpling.*', 'com/github/olivergondza/dumpling/groovy/GroovyApi$ApiDoc.class')","[69790, 89058, 114758, 134026, 155569, 174837, 194946, 214214, 234323, 252334, 271590, 291828, 311360, 331598, 351221, 371459, 391082, 411320, 430852, 451090, 478992, 498260, 518369, 537637, 557746, 577014, 597123, 616391, 636500, 655768, 675877, 693888, 716496, 739776, 763475, 786821, 812168, 835448, 858728, 882008, 905288, 928987, 952752, 989660, 1012940, 1036220, 1059500, 1082780, 1106060, 1129340, 1153039, 1178492, 1201772, 1225052, 1244142, 1262572, 1281002, 1299432, 1317862, 1336292, 1355560, 1375669, 1394937, 1415046, 1433057, 1451475, 1470743, 1496359, 1515627, 1546240, 1565508, 1584070, 1602500, 1621768, 1640330, 1658760, 1678028, 1698571, 1728759, 1746770, 1765134, 1784402, 1810156, 1828586, 1847854, 1866416, 1884846, 1903276, 1922125, 1940621, 1959470, 1977966, 1996396, 2015245, 2033741, 2053009, 2071571, 2090001, 2108012, 2130334, 2149602, 2173202, 2192470, 2226410, 2245678, 2271378, 2290646, 2329336, 2349089, 2372956, 2392709]"
"('FilterBuilder.java', 'org.reflections.util.FilterBuilder$Include', 'apply', 'com\\.github\\.olivergondza\\.dumpling.*', 'com.github.olivergondza.dumpling.factory.ThreadDumpFactoryVendorTest$1.class')","[58085, 76739, 103053, 121707, 143864, 162518, 183241, 201895, 222618, 240936, 259271, 278895, 299041, 318665, 338902, 358526, 378763, 398387, 418533, 438157, 467287, 485941, 506664, 525318, 546041, 564695, 585418, 604072, 624795, 643449, 664172, 682490, 701721, 725001, 748393, 772046, 797393, 820673, 843953, 867233, 890513, 913905, 937670, 974885, 998165, 1021445, 1044725, 1068005, 1091285, 1114565, 1137957, 1163717, 1186997, 1210277, 1232437, 1250867, 1269297, 1287727, 1306157, 1324587, 1343241, 1363964, 1382618, 1403341, 1421659, 1439770, 1458424, 1484654, 1503308, 1534535, 1553189, 1572365, 1590795, 1609449, 1628625, 1647055, 1665709, 1686866, 1717054, 1735372, 1753429, 1772083, 1798451, 1816881, 1835535, 1854711, 1873141, 1891571, 1910113, 1928916, 1947458, 1966261, 1984691, 2003233, 2022036, 2040690, 2059866, 2078296, 2096614, 2118629, 2137283, 2161497, 2180151, 2214705, 2233359, 2259673, 2278327, 2317324, 2336463, 2360944, 2380083]"
"('Description.java', 'org.junit.runner.Description', 'methodAndClassNamePatternGroupOrDefault', '([\\s\\S]*)\\((.*)\\)', 'com.github.olivergondza.dumpling.cli.GroovyCommandTest')","[1435517, 1435544]"
"('Scanner.java', 'java.util.Scanner', 'getCompleteTokenInBuffer', '(?s).*', '""a""thread"""" prio=10 tid=0x00007f14ec568000 nid=0xdf8 in Object.wait() [0x00007f14cebce000]\n   java.lang.Thread.State: WAITING (on object monitor)\n\tat java.lang.Object.wait(Native Method)\n\t- waiting on <0x00000007aeb14540> (a java.lang.Object)\n\tat java.lang.Object.wait(Object.java:503)\n\tat java_lang_Object$wait.call(Unknown Source)\n\tat dumpling-script.pauseHere(dumpling-script:10)\n\t- locked <0x00000007aeb14540> (a java.lang.Object)\n\tat sun.reflect.NativeMethodAccessorImpl.invoke0(Native Method)\n\tat sun.reflect.NativeMethodAccessorImpl.invoke(NativeMethodAccessorImpl.java:57)\n\tat sun.reflect.DelegatingMethodAccessorImpl.invoke(DelegatingMethodAccessorImpl.java:43)\n\tat java.lang.reflect.Method.invoke(Method.java:606)\n\tat org.codehaus.groovy.reflection.CachedMethod.invoke(CachedMethod.java:90)\n\tat groovy.lang.MetaMethod.doMethodInvoke(MetaMethod.java:233)\n\tat groovy.lang.MetaClassImpl.invokeMethod(MetaClassImpl.java:1085)\n\tat org.codehaus.groovy.runtime.ScriptBytecodeAdapter.invokeMethodOnCurrentN(ScriptBytecodeAdapter.java:78)\n\tat dumpling-script.this$dist$invoke$3(dumpling-script)\n\tat dumpling-script$1.methodMissing(dumpling-script)\n\tat sun.reflect.NativeMethodAccessorImpl.invoke0(Native Method)\n\tat sun.reflect.NativeMethodAccessorImpl.invoke(NativeMethodAccessorImpl.java:57)\n\tat sun.reflect.DelegatingMethodAccessorImpl.invoke(DelegatingMethodAccessorImpl.java:43)\n\tat java.lang.reflect.Method.invoke(Method.java:606)\n\tat org.codehaus.groovy.reflection.CachedMethod.invoke(CachedMethod.java:90)\n\tat groovy.lang.MetaClassImpl.invokeMissingMethod(MetaClassImpl.java:837)\n\tat groovy.lang.MetaClassImpl.invokePropertyOrMissing(MetaClassImpl.java:1134)\n\tat groovy.lang.MetaClassImpl.invokeMethod(MetaClassImpl.java:1087)\n\tat groovy.lang.MetaClassImpl.invokeMethod(MetaClassImpl.java:909)\n\tat org.codehaus.groovy.runtime.callsite.PogoMetaClassSite.callCurrent(PogoMetaClassSite.java:66)\n\tat org.codehaus.groovy.runtime.callsite.CallSiteArray.defaultCallCurrent(CallSiteArray.java:49)\n\tat org.codehaus.groovy.runtime.callsite.AbstractCallSite.callCurrent(AbstractCallSite.java:133)\n\tat org.codehaus.groovy.runtime.callsite.AbstractCallSite.callCurrent(AbstractCallSite.java:137)\n\tat dumpling-script$1.run(dumpling-script:18)\n\n   Locked ownable synchronizers:\n\t- None\n\n""Service Thread"" daemon prio=10 tid=0x00007f14ec096800 nid=0xdf6 runnable [0x0000000000000000]\n   java.lang.Thread.State: RUNNABLE\n\n   Locked ownable synchronizers:\n\t- None\n\n""C2 CompilerThread1"" daemon prio=10 tid=0x00007f14ec094800 nid=0xdf5 waiting on condition [0x0000000000000000]\n   java.lang.Thread.State: RUNNABLE\n\n   Locked ownable synchronizers:\n\t- None\n\n""C2 CompilerThread0"" daemon prio=10 tid=0x00007f14ec091800 nid=0xdf4 waiting on condition [0x0000000000000000]\n   java.lang.Thread.State: RUNNABLE\n\n   Locked ownable synchronizers:\n\t- None\n\n""Signal Dispatcher"" daemon prio=10 tid=0x00007f14ec08f000 nid=0xdf3 runnable [0x0000000000000000]\n   java.lang.Thread.State: RUNNABLE\n\n   Locked ownable synchronizers:\n\t- None\n\n""Finalizer"" daemon prio=10 tid=0x00007f14ec06e000 nid=0xdf2 in Object.wait() [0x00007f14cfcea000]\n   java.lang.Thread.State: WAITING (on object monitor)\n\tat java.lang.Object.wait(Native Method)\n\t- waiting on <0x00000007b0f08778> (a java.lang.ref.ReferenceQueue$Lock)\n\tat java.lang.ref.ReferenceQueue.remove(ReferenceQueue.java:135)\n\t- locked <0x00000007b0f08778> (a java.lang.ref.ReferenceQueue$Lock)\n\tat java.lang.ref.ReferenceQueue.remove(ReferenceQueue.java:151)\n\tat java.lang.ref.Finalizer$FinalizerThread.run(Finalizer.java:209)\n\n   Locked ownable synchronizers:\n\t- None\n\n""Reference Handler"" daemon prio=10 tid=0x00007f14ec06c000 nid=0xdf1 in Object.wait() [0x00007f14cfdeb000]\n   java.lang.Thread.State: WAITING (on object monitor)\n\tat java.lang.Object.wait(Native Method)\n\t- waiting on <0x00000007b0f20088> (a java.lang.ref.Reference$Lock)\n\tat java.lang.Object.wait(Object.java:503)\n\tat java.lang.ref.Reference$ReferenceHandler.run(Reference.java:133)\n\t- locked <0x00000007b0f20088> (a java.lang.ref.Reference$Lock)\n\n   Locked ownable synchronizers:\n\t- None\n\n""main"" prio=10 tid')","[5450, 5773, 6027, 6419, 6811, 7065, 7388]"
"('FilterBuilder.java', 'org.reflections.util.FilterBuilder$Exclude', 'apply', 'java.lang.Object', 'com.github.olivergondza.dumpling.factory.ThreadDumpFactoryVendorTest.multipleMonitorsOnSingleStackFrame.groovy')","[57561, 76187, 102529, 121155, 143340, 161966, 182717, 201343, 222094, 240426, 258719, 278315, 298489, 318085, 338350, 357946, 378211, 397807, 417981, 437577, 466763, 485389, 506140, 524766, 545517, 564143, 584894, 603520, 624271, 642897, 663648, 681980, 701057, 724337, 747715, 771382, 796729, 820009, 843289, 866569, 889849, 913227, 936992, 974221, 997501, 1020781, 1044061, 1067341, 1090621, 1113901, 1137279, 1163053, 1186333, 1209613, 1231913, 1250343, 1268773, 1287203, 1305633, 1324063, 1342689, 1363440, 1382066, 1402817, 1421149, 1439246, 1457872, 1484130, 1502756, 1534011, 1552637, 1571841, 1590271, 1608897, 1628101, 1646531, 1665157, 1686342, 1716530, 1734862, 1752905, 1771531, 1797927, 1816357, 1834983, 1854187, 1872617, 1891047, 1909575, 1928392, 1946920, 1965737, 1984167, 2002695, 2021512, 2040138, 2059342, 2077772, 2096104, 2118105, 2136731, 2160973, 2179599, 2214181, 2232807, 2259149, 2277775, 2316786, 2335897, 2360406, 2379517]"
"('FilterBuilder.java', 'org.reflections.util.FilterBuilder$Include', 'apply', 'com\\.github\\.olivergondza\\.dumpling.*', 'com/github/olivergondza/dumpling/model/dump/ThreadDumpThread.class')","[63274, 82200, 108242, 127168, 149053, 167979, 188430, 207356, 227807, 245989, 264732, 284628, 304502, 324398, 344363, 364259, 384224, 404120, 423994, 443890, 472476, 491402, 511853, 530779, 551230, 570156, 590607, 609533, 629984, 648910, 669361, 687543, 708270, 731550, 755078, 778595, 803942, 827222, 850502, 873782, 897062, 920590, 944355, 981434, 1004714, 1027994, 1051274, 1074554, 1097834, 1121114, 1144642, 1170266, 1193546, 1216826, 1237626, 1256056, 1274486, 1292916, 1311346, 1329776, 1348702, 1369153, 1388079, 1408530, 1426712, 1444959, 1463885, 1489843, 1508769, 1539724, 1558650, 1577554, 1595984, 1614910, 1633814, 1652244, 1671170, 1692055, 1722243, 1740425, 1758618, 1777544, 1803640, 1822070, 1840996, 1859900, 1878330, 1896760, 1915438, 1934105, 1952783, 1971450, 1989880, 2008558, 2027225, 2046151, 2065055, 2083485, 2101667, 2123818, 2142744, 2166686, 2185612, 2219894, 2238820, 2264862, 2283788, 2322649, 2342060, 2366269, 2385680]"
"('FilterBuilder.java', 'org.reflections.util.FilterBuilder$Exclude', 'apply', 'java.lang.Object', 'com.github.olivergondza.dumpling.model.ProcessThread')","[61943, 63351, 80799, 82281, 106911, 108319, 125767, 127249, 147722, 149130, 166578, 168060, 187099, 188507, 205955, 207437, 226476, 227884, 244693, 246064, 263331, 264813, 283157, 284713, 303101, 304583, 322927, 324483, 342962, 344444, 362788, 364344, 382823, 384305, 402649, 404205, 422593, 424075, 442419, 443975, 471145, 472553, 490001, 491483, 510522, 511930, 529378, 530860, 549899, 551307, 568755, 570237, 589276, 590684, 608132, 609614, 628653, 630061, 647509, 648991, 668030, 669438, 686247, 687618, 706589, 708367, 729869, 731647, 753362, 755177, 776914, 778692, 802261, 804039, 825541, 827319, 848821, 850599, 872101, 873879, 895381, 897159, 918874, 920689, 942639, 944454, 979753, 981531, 1003033, 1004811, 1026313, 1028091, 1049593, 1051371, 1072873, 1074651, 1096153, 1097931, 1119433, 1121211, 1142926, 1144741, 1168585, 1170363, 1191865, 1193643, 1215145, 1216923, 1236295, 1237703, 1254725, 1256133, 1273155, 1274563, 1291585, 1292993, 1310015, 1311423, 1328445, 1329853, 1347301, 1348783, 1367822, 1369230, 1386678, 1388160, 1407199, 1408607, 1425416, 1426787, 1443628, 1445036, 1462484, 1463966, 1488512, 1489920, 1507368, 1508850, 1538393, 1539801, 1557249, 1558731, 1576223, 1577631, 1594653, 1596061, 1613509, 1614991, 1632483, 1633891, 1650913, 1652321, 1669769, 1671251, 1690724, 1692132, 1720912, 1722320, 1739129, 1740500, 1757287, 1758695, 1776143, 1777625, 1802309, 1803717, 1820739, 1822147, 1839595, 1841077, 1858569, 1859977, 1876999, 1878407, 1895429, 1896837, 1914072, 1915517, 1932774, 1934182, 1951417, 1952862, 1970119, 1971527, 1988549, 1989957, 2007192, 2008637, 2025894, 2027302, 2044750, 2046232, 2063724, 2065132, 2082154, 2083562, 2100371, 2101742, 2122487, 2123895, 2141343, 2142825, 2165355, 2166763, 2184211, 2185693, 2218563, 2219971, 2237419, 2238901, 2263531, 2264939, 2282387, 2283869, 2321283, 2322728, 2340624, 2342143, 2364903, 2366348, 2384244, 2385763]"
"('ThreadDumpFactory.java', 'com.github.olivergondza.dumpling.factory.ThreadDumpFactory', 'initHeader', '#\\d+', '#11')","[334424, 334452]"
"('FilterBuilder.java', 'org.reflections.util.FilterBuilder$Include', 'apply', 'com\\.github\\.olivergondza\\.dumpling.*', 'com.github.olivergondza.dumpling.factory.ThreadDumpFactoryVendorTest._init.groovy')","[56179, 74731, 101147, 119699, 141958, 160510, 181335, 199887, 220712, 239081, 257263, 276785, 297033, 316555, 336894, 356416, 376755, 396277, 416525, 436047, 465381, 483933, 504758, 523310, 544135, 562687, 583512, 602064, 622889, 641441, 662266, 680635, 699305, 722585, 745926, 769630, 794977, 818257, 841537, 864817, 888097, 911438, 935203, 972469, 995749, 1019029, 1042309, 1065589, 1088869, 1112149, 1135490, 1161301, 1184581, 1207861, 1230531, 1248961, 1267391, 1285821, 1304251, 1322681, 1341233, 1362058, 1380610, 1401435, 1419804, 1437864, 1456416, 1482748, 1501300, 1532629, 1551181, 1570459, 1588889, 1607441, 1626719, 1645149, 1663701, 1684960, 1715148, 1733517, 1751523, 1770075, 1796545, 1814975, 1833527, 1852805, 1871235, 1889665, 1908156, 1927010, 1945501, 1964355, 1982785, 2001276, 2020130, 2038682, 2057960, 2076390, 2094759, 2116723, 2135275, 2159591, 2178143, 2212799, 2231351, 2257767, 2276319, 2315367, 2334404, 2358987, 2378024]"
"('FilterBuilder.java', 'org.reflections.util.FilterBuilder$Exclude', 'apply', 'java.lang.Object', 'com.github.olivergondza.dumpling.model.ProcessThread$Builder')","[62057, 63123, 80919, 82041, 107025, 108091, 125887, 127009, 147836, 148902, 166698, 167820, 187213, 188279, 206075, 207197, 226590, 227656, 244804, 245842, 263451, 264573, 283283, 284461, 303221, 304343, 323053, 324231, 343082, 344204, 362914, 364092, 382943, 384065, 402775, 403953, 422713, 423835, 442545, 443723, 471259, 472325, 490121, 491243, 510636, 511702, 529498, 530620, 550013, 551079, 568875, 569997, 589390, 590456, 608252, 609374, 628767, 629833, 647629, 648751, 668144, 669210, 686358, 687396, 706733, 708079, 730013, 731359, 753509, 754883, 777058, 778404, 802405, 803751, 825685, 827031, 848965, 850311, 872245, 873591, 895525, 896871, 919021, 920395, 942786, 944160, 979897, 981243, 1003177, 1004523, 1026457, 1027803, 1049737, 1051083, 1073017, 1074363, 1096297, 1097643, 1119577, 1120923, 1143073, 1144447, 1168729, 1170075, 1192009, 1193355, 1215289, 1216635, 1236409, 1237475, 1254839, 1255905, 1273269, 1274335, 1291699, 1292765, 1310129, 1311195, 1328559, 1329625, 1347421, 1348543, 1367936, 1369002, 1386798, 1387920, 1407313, 1408379, 1425527, 1426565, 1443742, 1444808, 1462604, 1463726, 1488626, 1489692, 1507488, 1508610, 1538507, 1539573, 1557369, 1558491, 1576337, 1577403, 1594767, 1595833, 1613629, 1614751, 1632597, 1633663, 1651027, 1652093, 1669889, 1671011, 1690838, 1691904, 1721026, 1722092, 1739240, 1740278, 1757401, 1758467, 1776263, 1777385, 1802423, 1803489, 1820853, 1821919, 1839715, 1840837, 1858683, 1859749, 1877113, 1878179, 1895543, 1896609, 1914189, 1915283, 1932888, 1933954, 1951534, 1952628, 1970233, 1971299, 1988663, 1989729, 2007309, 2008403, 2026008, 2027074, 2044870, 2045992, 2063838, 2064904, 2082268, 2083334, 2100482, 2101520, 2122601, 2123667, 2141463, 2142585, 2165469, 2166535, 2184331, 2185453, 2218677, 2219743, 2237539, 2238661, 2263645, 2264711, 2282507, 2283629, 2321400, 2322494, 2340747, 2341897, 2365020, 2366114, 2384367, 2385517]"
"('Scanner.java', 'java.util.Scanner', 'getCompleteTokenInBuffer', '(?s).*', '""blocked_thread"" prio=10 tid=0x2ad39c16b800 nid=32297\n   java.lang.Thread.State: BLOCKED (on object monitor)\n\tat hudson.model.Queue.getItem(Queue.java:719)\n\t- waiting to lock <0x4063a9378> (a hudson.model.Queue)\n\tat hudson.model.AbstractProject.getQueueItem(AbstractProject.java:927)\n\tat hudson.matrix.DefaultMatrixExecutionStrategyImpl.waitForCompletion(DefaultMatrixExecutionStrategyImpl.java:220)\n\tat hudson.matrix.DefaultMatrixExecutionStrategyImpl.run(DefaultMatrixExecutionStrategyImpl.java:163)\n\tat hudson.matrix.MatrixBuild$MatrixBuildExecution.doRun(MatrixBuild.java:340)\n\tat hudson.model.AbstractBuild$AbstractBuildExecution.run(AbstractBuild.java:499)\n\tat hudson.model.Run.execute(Run.java:1502)\n\tat hudson.matrix.MatrixBuild.run(MatrixBuild.java:289)\n\tat hudson.model.ResourceController.execute(ResourceController.java:88)\n\tat hudson.model.Executor.run(Executor.java:236)\n\tat hudson.model.OneOffExecutor.run(OneOffExecutor.java:66)\n\n""owning_thread"" prio=10 tid=0x2b6ff883a800 nid=24496\n   java.lang.Thread.State:')",[1682288]
"('FilterBuilder.java', 'org.reflections.util.FilterBuilder$Include', 'apply', 'com\\.github\\.olivergondza\\.dumpling.*', 'com.github.olivergondza.dumpling.model.mxbean.MXBeanThread.class')","[61903, 80757, 106871, 125725, 147682, 166536, 187059, 205913, 226436, 244654, 263289, 283113, 303059, 322883, 342920, 362744, 382781, 402605, 422551, 442375, 471105, 489959, 510482, 529336, 549859, 568713, 589236, 608090, 628613, 647467, 667990, 686208, 706539, 729819, 753311, 776864, 802211, 825491, 848771, 872051, 895331, 918823, 942588, 979703, 1002983, 1026263, 1049543, 1072823, 1096103, 1119383, 1142875, 1168535, 1191815, 1215095, 1236255, 1254685, 1273115, 1291545, 1309975, 1328405, 1347259, 1367782, 1386636, 1407159, 1425377, 1443588, 1462442, 1488472, 1507326, 1538353, 1557207, 1576183, 1594613, 1613467, 1632443, 1650873, 1669727, 1690684, 1720872, 1739090, 1757247, 1776101, 1802269, 1820699, 1839553, 1858529, 1876959, 1895389, 1914031, 1932734, 1951376, 1970079, 1988509, 2007151, 2025854, 2044708, 2063684, 2082114, 2100332, 2122447, 2141301, 2165315, 2184169, 2218523, 2237377, 2263491, 2282345, 2321242, 2340581, 2364862, 2384201]"
"('FilterBuilder.java', 'org.reflections.util.FilterBuilder$Include', 'apply', 'com\\.github\\.olivergondza\\.dumpling.*', 'com/github/olivergondza/dumpling/cli/GroovyCommandTest.class')","[54808, 73288, 99776, 118256, 140587, 159067, 179964, 198444, 219341, 237746, 255820, 275270, 295590, 315040, 335451, 354901, 375312, 394762, 415082, 434532, 464010, 482490, 503387, 521867, 542764, 561244, 582141, 600621, 621518, 639998, 660895, 679300, 697574, 720854, 744159, 767899, 793246, 816526, 839806, 863086, 886366, 909671, 933436, 970738, 994018, 1017298, 1040578, 1063858, 1087138, 1110418, 1133723, 1159570, 1182850, 1206130, 1229160, 1247590, 1266020, 1284450, 1302880, 1321310, 1339790, 1360687, 1379167, 1400064, 1418469, 1436493, 1454973, 1481377, 1499857, 1531258, 1549738, 1569088, 1587518, 1605998, 1625348, 1643778, 1662258, 1683589, 1713777, 1732182, 1750152, 1768632, 1795174, 1813604, 1832084, 1851434, 1869864, 1888294, 1906749, 1925639, 1944094, 1962984, 1981414, 1999869, 2018759, 2037239, 2056589, 2075019, 2093424, 2115352, 2133832, 2158220, 2176700, 2211428, 2229908, 2256396, 2274876, 2313960, 2332925, 2357580, 2376545]"
"('ThreadDumpFactory.java', 'com.github.olivergondza.dumpling.factory.ThreadDumpFactory', 'initHeader', '#\\d+', '[0x00007f14cfcea000]')","[7238, 7272]"
"('FilterBuilder.java', 'org.reflections.util.FilterBuilder$Include', 'apply', 'com\\.github\\.olivergondza\\.dumpling.*', 'com/github/olivergondza/dumpling/factory/ThreadDumpFactoryVendorTest/threadNameWithQuotes.groovy')","[56590, 75164, 101558, 120132, 142369, 160943, 181746, 200320, 221123, 239481, 257696, 277240, 297466, 317010, 337327, 356871, 377188, 396732, 416958, 436502, 465792, 484366, 505169, 523743, 544546, 563120, 583923, 602497, 623300, 641874, 662677, 681035, 699826, 723106, 746458, 770151, 795498, 818778, 842058, 865338, 888618, 911970, 935735, 972990, 996270, 1019550, 1042830, 1066110, 1089390, 1112670, 1136022, 1161822, 1185102, 1208382, 1230942, 1249372, 1267802, 1286232, 1304662, 1323092, 1341666, 1362469, 1381043, 1401846, 1420204, 1438275, 1456849, 1483159, 1501733, 1533040, 1551614, 1570870, 1589300, 1607874, 1627130, 1645560, 1664134, 1685371, 1715559, 1733917, 1751934, 1770508, 1796956, 1815386, 1833960, 1853216, 1871646, 1890076, 1908578, 1927421, 1945923, 1964766, 1983196, 2001698, 2020541, 2039115, 2058371, 2076801, 2095159, 2117134, 2135708, 2160002, 2178576, 2213210, 2231784, 2258178, 2276752, 2315789, 2334848, 2359409, 2378468]"
"('Scanner.java', 'java.util.Scanner', 'getCompleteTokenInBuffer', '(?s).*', '""C2 CompilerThread0"" daemon prio=10 tid=0x00007fd894099800 nid=0xfea waiting on condition [0x0000000000000000]\n   java.lang.Thread.State: RUNNABLE\n\n   Locked ownable synchronizers:\n\t- None\n\n""Signal Dispatcher"" daemon prio=10 tid=0x00007fd894097000 nid=0xfe9 runnable [0x0000000000000000]\n   java.lang.Thread.State: RUNNABLE\n\n   Locked ownable synchronizers:\n\t- None\n\n""Finalizer"" daemon prio=10 tid=0x00007fd89406e000 nid=0xfe8 in Object.wait() [0x00007fd882c88000]\n   java.lang.Thread.State: WAITING (on object monitor)\n\tat java.lang.Object.wait(Native Method)\n\t- waiting on <0x00000007b0f08580> (a java.lang.ref.ReferenceQueue$Lock)\n\tat java.lang.ref.ReferenceQueue.remove(ReferenceQueue.java:135)\n\t- locked <0x00000007b0f08580> (a java.lang.ref.ReferenceQueue$Lock)\n\tat java.lang.ref.ReferenceQueue.remove(ReferenceQueue.java:151)\n\tat java.lang.ref.Finalizer$FinalizerThread.run(Finalizer.java:209)\n\n   Locked ownable synchronizers:\n\t- None\n\n""Reference Handler"" daemon prio=10 tid=0x00007fd89406c000 nid=0xfe7 in Object.wa')","[48141, 48474, 48669]"
"('FilterBuilder.java', 'org.reflections.util.FilterBuilder$Include', 'apply', 'com\\.github\\.olivergondza\\.dumpling.*', 'com/github/olivergondza/dumpling/factory/ThreadDumpFactoryVendorTest/sleeping.groovy')","[56814, 75400, 101782, 120368, 142593, 161179, 181970, 200556, 221347, 239699, 257932, 277488, 297702, 317258, 337563, 357119, 377424, 396980, 417194, 436750, 466016, 484602, 505393, 523979, 544770, 563356, 584147, 602733, 623524, 642110, 662901, 681253, 700110, 723390, 746748, 770435, 795782, 819062, 842342, 865622, 888902, 912260, 936025, 973274, 996554, 1019834, 1043114, 1066394, 1089674, 1112954, 1136312, 1162106, 1185386, 1208666, 1231166, 1249596, 1268026, 1286456, 1304886, 1323316, 1341902, 1362693, 1381279, 1402070, 1420422, 1438499, 1457085, 1483383, 1501969, 1533264, 1551850, 1571094, 1589524, 1608110, 1627354, 1645784, 1664370, 1685595, 1715783, 1734135, 1752158, 1770744, 1797180, 1815610, 1834196, 1853440, 1871870, 1890300, 1908808, 1927645, 1946153, 1964990, 1983420, 2001928, 2020765, 2039351, 2058595, 2077025, 2095377, 2117358, 2135944, 2160226, 2178812, 2213434, 2232020, 2258402, 2276988, 2316019, 2335090, 2359639, 2378710]"
"('ThreadDumpFactory.java', 'com.github.olivergondza.dumpling.factory.ThreadDumpFactory', 'initHeader', '#\\d+', '[0x00007fd89aff6000]')","[49501, 49535]"
"('ThreadDumpFactory.java', 'com.github.olivergondza.dumpling.factory.ThreadDumpFactory', 'initHeader', '#\\d+', '[0x00007fe3983ad000]')","[11635, 11669]"
"('Scanner.java', 'java.util.Scanner', 'getCompleteTokenInBuffer', '(?s).*', '2018-01-11 20:21:55\nFull thread dump Java HotSpot(TM) 64-Bit Server VM (24.80-b11 mixed mode):\n\n""Attach Listener"" daemon prio=10 tid=0x00007feb2c001000 nid=0xe7f runnable [0x0000000000000000]\n   java.lang.Thread.State: RUNNABLE\n\n   Locked ownable synchronizers:\n\t- None\n\n""Service Thread"" daemon prio=10 tid=0x00007feb64096800 nid=0xe41 runnable [0x0000000000000000]\n   java.lang.Thread.State: RUNNABLE\n\n   Locked ownable synchronizers:\n\t- None\n\n""C2 CompilerThread1"" daemon prio=10 tid=0x00007feb64094800 nid=0xe40 waiting on condition [0x0000000000000000]\n   java.lang.Thread.State: RUNNABLE\n\n   Locked ownable synchronizers:\n\t- None\n\n""C2 CompilerThread0"" daemon prio=10 tid=0x00007feb64091800 nid=0xe3f waiting on condition [0x0000000000000000]\n   java.lang.Thread.State: RUNNABLE\n\n   Locked ownable synchronizers:\n\t- None\n\n""Signal Dispatcher"" daemon prio=10 tid=0x00007feb6408f000 nid=0xe3e runnable [0x0000000000000000]\n   java.lang.Thread.State: RUNNABLE\n\n   Locked ownable synchronizers:\n\t- None\n\n""Finalizer"" daemon pri')","[12785, 12851, 13055, 13259, 13601, 13943]"
"('Scanner.java', 'java.util.Scanner', 'getCompleteTokenInBuffer', '(?s).*', '""GC task thread#2 (ParallelGC)"" prio=10 tid=0x7f08ac022800 nid=24601\n   java.lang.Thread.State: UNKNOWN\n\n""GC task thread#3 (ParallelGC)"" prio=10 tid=0x7f08ac024000 nid=24602\n   java.lang.Thread.State: UNKNOWN\n\n""VM Periodic Task Thread"" prio=10 tid=0x7f08ac17f000 nid=24621\n   java.lang.Thread.State: UNKNOWN\n\n')","[1682518, 1682552, 1682586]"
"('FilterBuilder.java', 'org.reflections.util.FilterBuilder$Include', 'apply', 'com\\.github\\.olivergondza\\.dumpling.*', 'com/github/olivergondza/dumpling/model/ThreadLock$Monitor.class')","[63924, 82884, 108892, 127852, 149703, 168663, 189080, 208040, 228457, 246622, 265416, 285346, 305186, 325116, 345047, 364977, 384908, 404838, 424678, 444608, 473126, 492086, 512503, 531463, 551880, 570840, 591257, 610217, 630634, 649594, 670011, 688176, 709090, 732370, 755915, 779415, 804762, 828042, 851322, 874602, 897882, 921427, 945192, 982254, 1005534, 1028814, 1052094, 1075374, 1098654, 1121934, 1145479, 1171086, 1194366, 1217646, 1238276, 1256706, 1275136, 1293566, 1311996, 1330426, 1349386, 1369803, 1388763, 1409180, 1427345, 1445609, 1464569, 1490493, 1509453, 1540374, 1559334, 1578204, 1596634, 1615594, 1634464, 1652894, 1671854, 1692705, 1722893, 1741058, 1759268, 1778228, 1804290, 1822720, 1841680, 1860550, 1878980, 1897410, 1916105, 1934755, 1953450, 1972100, 1990530, 2009225, 2027875, 2046835, 2065705, 2084135, 2102300, 2124468, 2143428, 2167336, 2186296, 2220544, 2239504, 2265512, 2284472, 2323316, 2342761, 2366936, 2386381]"
"('Scanner.java', 'java.util.Scanner', 'getCompleteTokenInBuffer', '(?s).*', '""GC Daemon"" daemon prio=10 tid=0x00007fd6b8101000 nid=0x1036 in Object.wait() [0x00007fd6b09d3000]\n   java.lang.Thread.State: TIMED_WAITING (on object monitor)\n\tat java.lang.Object.wait(Native Method)\n\t- waiting on <0x0000000707204370> (a sun.misc.GC$LatencyLock)\n\tat sun.misc.GC$Daemon.run(GC.java:117)\n\t- locked <0x0000000707204370> (a sun.misc.GC$LatencyLock)\n\n   Locked ownable synchronizers:\n\t- None\n\n""RMI RenewClean-[127.0.0.1:40979]"" daemon prio=10 tid=0x00007fd6b8100800 nid=0x1035 in Object.wait() [0x00007fd6b0ad4000]\n   java.lang.Thread.State: TIMED_WAITING (on object monitor)\n\tat java.lang.Object.wait(Native Method)\n\t- waiting on <0x000000070720c350> (a java.lang.ref.ReferenceQueue$Lock)\n\tat java.lang.ref.ReferenceQueue.remove(ReferenceQueue.java:135)\n\t- locked <0x000000070720c350> (a java.lang.ref.ReferenceQueue$Lock)\n\tat sun.rmi.transport.DGCClient$EndpointEntry$RenewCleanThread.run(DGCClient.java:535)\n\tat java.lang.Thread.run(Thread.java:745)\n\n   Locked ownable synchronizers:\n\t- None\n\n""RMI Scheduler(0)"" daemon prio=10 tid=0x00007fd6b80ff800 nid=0x1034 waiting on condition [0x00007fd6b0bd5000]\n   java.lang.Thread.State: TIMED_WAITING (parking)\n\tat sun.misc.Unsafe.park(Native Method)\n\t- parking to wait for  <0x00000007072043e8> (a java.util.concurrent.locks.AbstractQueuedSynchronizer$ConditionObject)\n\tat java.util.concurrent.locks.LockSupport.parkNanos(LockSupport.java:226)\n\tat java.util.concurrent.locks.AbstractQueuedSynchronizer$ConditionObject.awaitNanos(AbstractQueuedSynchronizer.java:2082)\n\tat java.util.concurrent.ScheduledThreadPoolExecutor$DelayedWorkQueue.take(ScheduledThreadPoolExecutor.java:1090)\n\tat java.util.concurrent.ScheduledThreadPoolExecutor$DelayedWorkQueue.take(ScheduledThreadPoolExecutor.java:807)\n\tat java.util.concurrent.ThreadPoolExecutor.getTask(ThreadPoolExecutor.java:1068)\n\tat java.util.concurrent.ThreadPoolExecutor.runWorker(ThreadPoolExecutor.java:1130)\n\tat java.util.concurrent.ThreadPoolExecutor$Worker.run(ThreadPoolExecutor.java:615)\n\tat java.lang.Thread.run(Thread.java:745)\n\n ')","[456593, 456903, 961082, 961476, 1521789, 1522085]"
"('Description.java', 'org.junit.runner.Description', 'methodAndClassNamePatternGroupOrDefault', '([\\s\\S]*)\\((.*)\\)', 'printToOutAndErr(com.github.olivergondza.dumpling.cli.GroovyRuntimeTest)')",[682]
"('FilterBuilder.java', 'org.reflections.util.FilterBuilder$Include', 'apply', 'com\\.github\\.olivergondza\\.dumpling.*', 'com/github/olivergondza/dumpling/query/BlockingTreeTest.class')","[53896, 72328, 98864, 117296, 139675, 158107, 179052, 197484, 218429, 236858, 254860, 274262, 294630, 314032, 334491, 353893, 374352, 393754, 414122, 433524, 463098, 481530, 502475, 520907, 541852, 560284, 581229, 599661, 620606, 639038, 659983, 678412, 696422, 719702, 742983, 766747, 792094, 815374, 838654, 861934, 885214, 908495, 932260, 969586, 992866, 1016146, 1039426, 1062706, 1085986, 1109266, 1132547, 1158418, 1181698, 1204978, 1228248, 1246678, 1265108, 1283538, 1301968, 1320398, 1338830, 1359775, 1378207, 1399152, 1417581, 1435581, 1454013, 1480465, 1498897, 1530346, 1548778, 1568176, 1586606, 1605038, 1624436, 1642866, 1661298, 1682677, 1712865, 1731294, 1749240, 1767672, 1794262, 1812692, 1831124, 1850522, 1868952, 1887382, 1905813, 1924727, 1943158, 1962072, 1980502, 1998933, 2017847, 2036279, 2055677, 2074107, 2092536, 2114440, 2132872, 2157308, 2175740, 2210516, 2228948, 2255484, 2273916, 2313024, 2331941, 2356644, 2375561]"
"('FilterBuilder.java', 'org.reflections.util.FilterBuilder$Exclude', 'apply', 'java.lang.Object', 'com.github.olivergondza.dumpling.factory.ThreadDumpFactoryVendorTest.monitorDeadlock.groovy')","[57225, 75833, 102193, 120801, 143004, 161612, 182381, 200989, 221758, 240099, 258365, 277943, 298135, 317713, 337996, 357574, 377857, 397435, 417627, 437205, 466427, 485035, 505804, 524412, 545181, 563789, 584558, 603166, 623935, 642543, 663312, 681653, 700631, 723911, 747280, 770956, 796303, 819583, 842863, 866143, 889423, 912792, 936557, 973795, 997075, 1020355, 1043635, 1066915, 1090195, 1113475, 1136844, 1162627, 1185907, 1209187, 1231577, 1250007, 1268437, 1286867, 1305297, 1323727, 1342335, 1363104, 1381712, 1402481, 1420822, 1438910, 1457518, 1483794, 1502402, 1533675, 1552283, 1571505, 1589935, 1608543, 1627765, 1646195, 1664803, 1686006, 1716194, 1734535, 1752569, 1771177, 1797591, 1816021, 1834629, 1853851, 1872281, 1890711, 1909230, 1928056, 1946575, 1965401, 1983831, 2002350, 2021176, 2039784, 2059006, 2077436, 2095777, 2117769, 2136377, 2160637, 2179245, 2213845, 2232453, 2258813, 2277421, 2316441, 2335534, 2360061, 2379154]"
"('FilterBuilder.java', 'org.reflections.util.FilterBuilder$Include', 'apply', 'com\\.github\\.olivergondza\\.dumpling.*', 'com/github/olivergondza/dumpling/query/command.top-contenders.usage')","[66444, 85536, 111412, 130504, 152223, 171315, 191600, 210692, 230977, 249076, 268068, 288130, 307838, 327900, 347699, 367761, 387560, 407622, 427330, 447392, 475646, 494738, 515023, 534115, 554400, 573492, 593777, 612869, 633154, 652246, 672531, 690630, 712270, 735550, 759161, 782595, 807942, 831222, 854502, 877782, 901062, 924673, 948438, 985434, 1008714, 1031994, 1055274, 1078554, 1101834, 1125114, 1148725, 1174266, 1197546, 1220826, 1240796, 1259226, 1277656, 1296086, 1314516, 1332946, 1352038, 1372323, 1391415, 1411700, 1429799, 1448129, 1467221, 1493013, 1512105, 1542894, 1561986, 1580724, 1599154, 1618246, 1636984, 1655414, 1674506, 1695225, 1725413, 1743512, 1761788, 1780880, 1806810, 1825240, 1844332, 1863070, 1881500, 1899930, 1918691, 1937275, 1956036, 1974620, 1993050, 2011811, 2030395, 2049487, 2068225, 2086655, 2104754, 2126988, 2146080, 2169856, 2188948, 2223064, 2242156, 2268032, 2287124, 2325902, 2345479, 2369522, 2389099]"
"('FilterBuilder.java', 'org.reflections.util.FilterBuilder$Include', 'apply', 'com\\.github\\.olivergondza\\.dumpling.*', 'com/github/olivergondza/dumpling/cli/CommandFailedException.class')","[60116, 78876, 105084, 123844, 145895, 164655, 185272, 204032, 224649, 242914, 261408, 281138, 301178, 320908, 341039, 360769, 380900, 400630, 420670, 440400, 469318, 488078, 508695, 527455, 548072, 566832, 587449, 606209, 626826, 645586, 666203, 684468, 704282, 727562, 751007, 774607, 799954, 823234, 846514, 869794, 893074, 916519, 940284, 977446, 1000726, 1024006, 1047286, 1070566, 1093846, 1117126, 1140571, 1166278, 1189558, 1212838, 1234468, 1252898, 1271328, 1289758, 1308188, 1326618, 1345378, 1365995, 1384755, 1405372, 1423637, 1441801, 1460561, 1486685, 1505445, 1536566, 1555326, 1574396, 1592826, 1611586, 1630656, 1649086, 1667846, 1688897, 1719085, 1737350, 1755460, 1774220, 1800482, 1818912, 1837672, 1856742, 1875172, 1893602, 1912197, 1930947, 1949542, 1968292, 1986722, 2005317, 2024067, 2042827, 2061897, 2080327, 2098592, 2120660, 2139420, 2163528, 2182288, 2216736, 2235496, 2261704, 2280464, 2319408, 2338653, 2363028, 2382273]"
"('FilterBuilder.java', 'org.reflections.util.FilterBuilder$Include', 'apply', 'com\\.github\\.olivergondza\\.dumpling.*', 'com.github.olivergondza.dumpling.cli.command.groovysh.usage')","[60761, 79555, 105729, 124523, 146540, 165334, 185917, 204711, 225294, 243542, 262087, 281851, 301857, 321621, 341718, 361482, 381579, 401343, 421349, 441113, 469963, 488757, 509340, 528134, 548717, 567511, 588094, 606888, 627471, 646265, 666848, 685096, 705097, 728377, 751839, 775422, 800769, 824049, 847329, 870609, 893889, 917351, 941116, 978261, 1001541, 1024821, 1048101, 1071381, 1094661, 1117941, 1141403, 1167093, 1190373, 1213653, 1235113, 1253543, 1271973, 1290403, 1308833, 1327263, 1346057, 1366640, 1385434, 1406017, 1424265, 1442446, 1461240, 1487330, 1506124, 1537211, 1556005, 1575041, 1593471, 1612265, 1631301, 1649731, 1668525, 1689542, 1719730, 1737978, 1756105, 1774899, 1801127, 1819557, 1838351, 1857387, 1875817, 1894247, 1912859, 1931592, 1950204, 1968937, 1987367, 2005979, 2024712, 2043506, 2062542, 2080972, 2099220, 2121305, 2140099, 2164173, 2182967, 2217381, 2236175, 2262349, 2281143, 2320070, 2339349, 2363690, 2382969]"
"('FilterBuilder.java', 'org.reflections.util.FilterBuilder$Include', 'apply', 'com\\.github\\.olivergondza\\.dumpling.*', 'com/github/olivergondza/dumpling/TestThread$2.class')","[71642, 91008, 116610, 135976, 157421, 176787, 196798, 216164, 236175, 254137, 273540, 293876, 313310, 333646, 353171, 373507, 393032, 413368, 432802, 453138, 480844, 500210, 520221, 539587, 559598, 578964, 598975, 618341, 638352, 657718, 677729, 695691, 718838, 742118, 765866, 789163, 814510, 837790, 861070, 884350, 907630, 931378, 955143, 992002, 1015282, 1038562, 1061842, 1085122, 1108402, 1131682, 1155430, 1180834, 1204114, 1227394, 1245994, 1264424, 1282854, 1301284, 1319714, 1338144, 1357510, 1377521, 1396887, 1416898, 1434860, 1453327, 1472693, 1498211, 1517577, 1548092, 1567458, 1585922, 1604352, 1623718, 1642182, 1660612, 1679978, 1700423, 1730611, 1748573, 1766986, 1786352, 1812008, 1830438, 1849804, 1868268, 1886698, 1905128, 1924026, 1942473, 1961371, 1979818, 1998248, 2017146, 2035593, 2054959, 2073423, 2091853, 2109815, 2132186, 2151552, 2175054, 2194420, 2228262, 2247628, 2273230, 2292596, 2331237, 2351088, 2374857, 2394708]"
"('FilterBuilder.java', 'org.reflections.util.FilterBuilder$Include', 'apply', 'com\\.github\\.olivergondza\\.dumpling.*', 'com.github.olivergondza.dumpling.cli.Main.class')","[59351, 78071, 104319, 123039, 145130, 163850, 184507, 203227, 223884, 242169, 260603, 280293, 300373, 320063, 340234, 359924, 380095, 399785, 419865, 439555, 468553, 487273, 507930, 526650, 547307, 566027, 586684, 605404, 626061, 644781, 665438, 683723, 703317, 726597, 750022, 773642, 798989, 822269, 845549, 868829, 892109, 915534, 939299, 976481, 999761, 1023041, 1046321, 1069601, 1092881, 1116161, 1139586, 1165313, 1188593, 1211873, 1233703, 1252133, 1270563, 1288993, 1307423, 1325853, 1344573, 1365230, 1383950, 1404607, 1422892, 1441036, 1459756, 1485920, 1504640, 1535801, 1554521, 1573631, 1592061, 1610781, 1629891, 1648321, 1667041, 1688132, 1718320, 1736605, 1754695, 1773415, 1799717, 1818147, 1836867, 1855977, 1874407, 1892837, 1911412, 1930182, 1948757, 1967527, 1985957, 2004532, 2023302, 2042022, 2061132, 2079562, 2097847, 2119895, 2138615, 2162763, 2181483, 2215971, 2234691, 2260939, 2279659, 2318623, 2337828, 2362243, 2381448]"
"('Description.java', 'org.junit.runner.Description', 'methodAndClassNamePatternGroupOrDefault', '([\\s\\S]*)\\((.*)\\)', 'toStringNoTraces(com.github.olivergondza.dumpling.query.DeadlocksTest)')",[1650]
"('FilterBuilder.java', 'org.reflections.util.FilterBuilder$Include', 'apply', 'com\\.github\\.olivergondza\\.dumpling.*', 'com.github.olivergondza.dumpling.model.mxbean.MXBeanThreadSet.class')","[62245, 81117, 107213, 126085, 148024, 166896, 187401, 206273, 226778, 244987, 263649, 283491, 303419, 323261, 343280, 363122, 383141, 402983, 422911, 442753, 471447, 490319, 510824, 529696, 550201, 569073, 589578, 608450, 628955, 647827, 668332, 686541, 706971, 730251, 753752, 777296, 802643, 825923, 849203, 872483, 895763, 919264, 943029, 980135, 1003415, 1026695, 1049975, 1073255, 1096535, 1119815, 1143316, 1168967, 1192247, 1215527, 1236597, 1255027, 1273457, 1291887, 1310317, 1328747, 1347619, 1368124, 1386996, 1407501, 1425710, 1443930, 1462802, 1488814, 1507686, 1538695, 1557567, 1576525, 1594955, 1613827, 1632785, 1651215, 1670087, 1691026, 1721214, 1739423, 1757589, 1776461, 1802611, 1821041, 1839913, 1858871, 1877301, 1895731, 1914382, 1933076, 1951727, 1970421, 1988851, 2007502, 2026196, 2045068, 2064026, 2082456, 2100665, 2122789, 2141661, 2165657, 2184529, 2218865, 2237737, 2263833, 2282705, 2321593, 2340950, 2365213, 2384570]"
"('FilterBuilder.java', 'org.reflections.util.FilterBuilder$Include', 'apply', 'com\\.github\\.olivergondza\\.dumpling.*', 'com/github/olivergondza/dumpling/cli/GroovyshCommandTest.class')","[54352, 72808, 99320, 117776, 140131, 158587, 179508, 197964, 218885, 237302, 255340, 274766, 295110, 314536, 334971, 354397, 374832, 394258, 414602, 434028, 463554, 482010, 502931, 521387, 542308, 560764, 581685, 600141, 621062, 639518, 660439, 678856, 696998, 720278, 743571, 767323, 792670, 815950, 839230, 862510, 885790, 909083, 932848, 970162, 993442, 1016722, 1040002, 1063282, 1086562, 1109842, 1133135, 1158994, 1182274, 1205554, 1228704, 1247134, 1265564, 1283994, 1302424, 1320854, 1339310, 1360231, 1378687, 1399608, 1418025, 1436037, 1454493, 1480921, 1499377, 1530802, 1549258, 1568632, 1587062, 1605518, 1624892, 1643322, 1661778, 1683133, 1713321, 1731738, 1749696, 1768152, 1794718, 1813148, 1831604, 1850978, 1869408, 1887838, 1906281, 1925183, 1943626, 1962528, 1980958, 1999401, 2018303, 2036759, 2056133, 2074563, 2092980, 2114896, 2133352, 2157764, 2176220, 2210972, 2229428, 2255940, 2274396, 2313492, 2332433, 2357112, 2376053]"
"('Scanner.java', 'java.util.Scanner', 'getCompleteTokenInBuffer', '(?s).*', '3811\n')",[26097]
"('FilterBuilder.java', 'org.reflections.util.FilterBuilder$Include', 'apply', 'com\\.github\\.olivergondza\\.dumpling.*', 'com/github/olivergondza/dumpling/model/ProcessRuntime.class')","[65412, 84450, 110380, 129418, 151191, 170229, 190568, 209606, 229945, 248071, 266982, 286990, 306752, 326760, 346613, 366621, 386474, 406482, 426244, 446252, 474614, 493652, 513991, 533029, 553368, 572406, 592745, 611783, 632122, 651160, 671499, 689625, 710968, 734248, 757832, 781293, 806640, 829920, 853200, 876480, 899760, 923344, 947109, 984132, 1007412, 1030692, 1053972, 1077252, 1100532, 1123812, 1147396, 1172964, 1196244, 1219524, 1239764, 1258194, 1276624, 1295054, 1313484, 1331914, 1350952, 1371291, 1390329, 1410668, 1428794, 1447097, 1466135, 1491981, 1511019, 1541862, 1560900, 1579692, 1598122, 1617160, 1635952, 1654382, 1673420, 1694193, 1724381, 1742507, 1760756, 1779794, 1805778, 1824208, 1843246, 1862038, 1880468, 1898898, 1917632, 1936243, 1954977, 1973588, 1992018, 2010752, 2029363, 2048401, 2067193, 2085623, 2103749, 2125956, 2144994, 2168824, 2187862, 2222032, 2241070, 2267000, 2286038, 2324843, 2344366, 2368463, 2387986]"
"('FilterBuilder.java', 'org.reflections.util.FilterBuilder$Include', 'apply', 'com\\.github\\.olivergondza\\.dumpling.*', 'com.github.olivergondza.dumpling.factory.ThreadDumpFactoryVendorTest.class')","[55797, 74329, 100765, 119297, 141576, 160108, 180953, 199485, 220330, 238709, 256861, 276363, 296631, 316133, 336492, 355994, 376353, 395855, 416123, 435625, 464999, 483531, 504376, 522908, 543753, 562285, 583130, 601662, 622507, 641039, 661884, 680263, 698823, 722103, 745434, 769148, 794495, 817775, 841055, 864335, 887615, 910946, 934711, 971987, 995267, 1018547, 1041827, 1065107, 1088387, 1111667, 1134998, 1160819, 1184099, 1207379, 1230149, 1248579, 1267009, 1285439, 1303869, 1322299, 1340831, 1361676, 1380208, 1401053, 1419432, 1437482, 1456014, 1482366, 1500898, 1532247, 1550779, 1570077, 1588507, 1607039, 1626337, 1644767, 1663299, 1684578, 1714766, 1733145, 1751141, 1769673, 1796163, 1814593, 1833125, 1852423, 1870853, 1889283, 1907764, 1926628, 1945109, 1963973, 1982403, 2000884, 2019748, 2038280, 2057578, 2076008, 2094387, 2116341, 2134873, 2159209, 2177741, 2212417, 2230949, 2257385, 2275917, 2314975, 2333992, 2358595, 2377612]"
"('Description.java', 'org.junit.runner.Description', 'methodAndClassNamePatternGroupOrDefault', '([\\s\\S]*)\\((.*)\\)', 'factoryWithoutKind(com.github.olivergondza.dumpling.cli.MainTest)')",[1408]
"('Scanner.java', 'java.util.Scanner', 'getCompleteTokenInBuffer', '(?s).*', '3594\n')",[8929]
"('FilterBuilder.java', 'org.reflections.util.FilterBuilder$Include', 'apply', 'com\\.github\\.olivergondza\\.dumpling.*', 'com/github/olivergondza/dumpling/model/ProcessThread$Predicate.class')","[64916, 83928, 109884, 128896, 150695, 169707, 190072, 209084, 229449, 247588, 266460, 286442, 306230, 326212, 346091, 366073, 385952, 405934, 425722, 445704, 474118, 493130, 513495, 532507, 552872, 571884, 592249, 611261, 631626, 650638, 671003, 689142, 710342, 733622, 757193, 780667, 806014, 829294, 852574, 875854, 899134, 922705, 946470, 983506, 1006786, 1030066, 1053346, 1076626, 1099906, 1123186, 1146757, 1172338, 1195618, 1218898, 1239268, 1257698, 1276128, 1294558, 1312988, 1331418, 1350430, 1370795, 1389807, 1410172, 1428311, 1446601, 1465613, 1491485, 1510497, 1541366, 1560378, 1579196, 1597626, 1616638, 1635456, 1653886, 1672898, 1693697, 1723885, 1742024, 1760260, 1779272, 1805282, 1823712, 1842724, 1861542, 1879972, 1898402, 1917123, 1935747, 1954468, 1973092, 1991522, 2010243, 2028867, 2047879, 2066697, 2085127, 2103266, 2125460, 2144472, 2168328, 2187340, 2221536, 2240548, 2266504, 2285516, 2324334, 2343831, 2367954, 2387451]"
"('Description.java', 'org.junit.runner.Description', 'methodAndClassNamePatternGroupOrDefault', '([\\s\\S]*)\\((.*)\\)', 'toStringNoTraces(com.github.olivergondza.dumpling.query.BlockingTreeTest)')",[1738]
"('Scanner.java', 'java.util.Scanner', 'getCompleteTokenInBuffer', '(?s).*', '""surefire-forkedjvm-command-thread"" daemon prio=10 tid=0x00007fd6fc311800 nid=0xdc6 runnable [0x00007fd6f825f000]\n   java.lang.Thread.State: RUNNABLE\n\tat java.io.FileInputStream.readBytes(Native Method)\n\tat java.io.FileInputStream.read(FileInputStream.java:272)\n\tat java.io.BufferedInputStream.fill(BufferedInputStream.java:235)\n\tat java.io.BufferedInputStream.read(BufferedInputStream.java:254)\n\t- locked <0x0000000707069ca8> (a java.io.BufferedInputStream)\n\tat java.io.DataInputStream.readInt(DataInputStream.java:387)\n\tat org.apache.maven.surefire.booter.MasterProcessCommand.decode(MasterProcessCommand.java:117)\n\tat org.apache.maven.surefire.booter.CommandReader$CommandRunnable.run(CommandReader.java:360)\n\tat java.lang.Thread.run(Thread.java:745)\n\n   Locked ownable synchronizers:\n\t- None\n\n""last-ditch-daemon-shutdown-thread-30sec"" daemon prio=10 tid=0x00007fd6fc30c800 nid=0xdc5 waiting on condition [0x00007fd6f8360000]\n   java.lang.Thread.State: TIMED_WAITING (parking)\n\tat sun.misc.Unsafe.park(Native Method)\n\t- parking to wait for  <0x0000000707069d68> (a java.util.concurrent.locks.AbstractQueuedSynchronizer$ConditionObject)\n\tat java.util.concurrent.locks.LockSupport.parkNanos(LockSupport.java:226)\n\tat java.util.concurrent.locks.AbstractQueuedSynchronizer$ConditionObject.awaitNanos(AbstractQueuedSynchronizer.java:2082)\n\tat java.util.concurrent.ScheduledThreadPoolExecutor$DelayedWorkQueue.take(ScheduledThreadPoolExecutor.java:1090)\n\tat java.util.concurrent.ScheduledThreadPoolExecutor$DelayedWorkQueue.take(ScheduledThreadPoolExecutor.java:807)\n\tat java.util.concurrent.ThreadPoolExecutor.getTask(ThreadPoolExecutor.java:1068)\n\tat java.util.concurrent.ThreadPoolExecutor.runWorker(ThreadPoolExecutor.java:1130)\n\tat java.util.concurrent.ThreadPoolExecutor$Worker.run(ThreadPoolExecutor.java:615)\n\tat java.lang.Thread.run(Thread.java:745)\n\n   Locked ownable synchronizers:\n\t- None\n\n""Service Thread"" daemon prio=10 tid=0x00007fd6fc2f3000 nid=0xdc3 runnable [0x0000000000000000]\n   java.lang.Thread.State: RUNNABLE\n\n   Locked ownable synchronizers:\n\t- None\n\n""C2 CompilerThread1"" daemon prio=10 tid=0x00007fd6fc2f1000 nid=0xdc2 waiting on condition [0x0000000000000000]\n   java.lang.Thread.State: RUNNABLE\n\n   Locked ownable synchronizers:\n\t- None\n\n""C2 CompilerThread0"" daemon prio=10 tid=0x00007fd6fc2ec800 nid=0xdc1 waiting on condition [0x0000000000000000]\n   java.lang.Thread.State: RUNNABLE\n\n   Locked ownable synchronizers:\n\t- None\n\n""Signal Dispatcher"" daemon prio=10 tid=0x00007fd6fc157000 nid=0xdc0 runnable [0x0000000000000000]\n   java.lang.Thread.State: RUNNABLE\n\n   Locked ownable synchronizers:\n\t- None\n\n""Finalizer"" daemon prio=10 tid=0x00007fd6fc136000 nid=0xdbf in Object.wait() [0x00007fd6f8ffe000]\n   java.lang.Thread.State: WAITING (on object monitor)\n\tat java.lang.Object.wait(Native Method)\n\t- waiting on <0x000000070706a0a8> (a java.lang.ref.ReferenceQueue$Lock)\n\tat java.lang.ref.ReferenceQueue.remove(ReferenceQueue.java:135)\n\t- locked <0x000000070706a0a8> (a java.lang.ref.ReferenceQueue$Lock)\n\tat java.lang.ref.ReferenceQueue.remove(ReferenceQueue.java:151)\n\tat java.lang.ref.Finalizer$FinalizerThread.run(Finalizer.java:209)\n\n   Locked ownable synchronizers:\n\t- None\n\n""Reference Handler"" daemon prio=10 tid=0x00007fd6fc134000 nid=0xdbe in Object.wait() [0x00007fd700114000]\n   java.lang.Thread.State: WAITING (on object monitor)\n\tat java.lang.Object.wait(Native Method)\n\t- waiting on <0x000000070706a150> (a java.lang.ref.Reference$Lock)\n\tat java.lang.Object.wait(Object.java:503)\n\tat java.lang.ref.Reference$ReferenceHandler.run(Reference.java:133)\n\t- locked <0x000000070706a150> (a java.lang.ref.Reference$Lock)\n\n   Locked ownable synchronizers:\n\t- None\n\n""main"" prio=10 tid=0x00007fd6fc008800 nid=0xdb8 waiting on condition [0x00007fd7055bb000]\n   java.lang.Thread.State: WAITING (parking)\n\tat sun.misc.Unsafe.park(Native Method)\n\t- parking to wait for  <0x00000007b2049ad8> (a java.util.concurrent.FutureTask)\n\tat java.util.concurrent.locks.LockSupport.park(LockSupport.java:186)\n\tat java.util.concurrent.FutureTask.awaitDone(FutureTask.java:425)\n\tat jav')","[1523629, 1523899, 1524319, 1524589, 1525009, 1525429, 1525699, 1526044]"
"('Scanner.java', 'java.util.Scanner', 'getCompleteTokenInBuffer', '(?s).*', '""JMX client heartbeat 5"" daemon prio=10 tid=0x00007fd6b80b3800 nid=0x10c4 waiting on condition [0x00007fd68f9f8000]\n   java.lang.Thread.State: TIMED_WAITING (sleeping)\n\tat java.lang.Thread.sleep(Native Method)\n\tat com.sun.jmx.remote.internal.ClientCommunicatorAdmin$Checker.run(ClientCommunicatorAdmin.java:174)\n\tat java.lang.Thread.run(Thread.java:745)\n\n   Locked ownable synchronizers:\n\t- None\n\n""RMI RenewClean-[127.0.0.1:34338]"" daemon prio=10 tid=0x00007fd6b80b9000 nid=0x10c1 in Object.wait() [0x00007fd6b07d1000]\n   java.lang.Thread.State: TIMED_WAITING (on object monitor)\n\tat java.lang.Object.wait(Native Method)\n\t- waiting on <0x00000007af619940> (a java.lang.ref.ReferenceQueue$Lock)\n\tat java.lang.ref.ReferenceQueue.remove(ReferenceQueue.java:135)\n\t- locked <0x00000007af619940> (a java.lang.ref.ReferenceQueue$Lock)\n\tat sun.rmi.transport.DGCClient$EndpointEntry$RenewCleanThread.run(DGCClient.java:535)\n\tat java.lang.Thread.run(Thread.java:745)\n\n   Locked ownable synchronizers:\n\t- None\n\n""JMX client heartbeat 4""')","[956484, 956967]"
"('ThreadDumpFactory.java', 'com.github.olivergondza.dumpling.factory.ThreadDumpFactory', 'initHeader', '#\\d+', '[0x00007f0d0b6f5000]')","[24464, 24498]"
"('FilterBuilder.java', 'org.reflections.util.FilterBuilder$Exclude', 'apply', 'java.lang.Object', 'com.github.olivergondza.dumpling.factory.ThreadDumpFactoryVendorTest._init.groovy')","[56217, 74771, 101185, 119739, 141996, 160550, 181373, 199927, 220750, 239118, 257303, 276827, 297073, 316597, 336934, 356458, 376795, 396319, 416565, 436089, 465419, 483973, 504796, 523350, 544173, 562727, 583550, 602104, 622927, 641481, 662304, 680672, 699353, 722633, 745975, 769678, 795025, 818305, 841585, 864865, 888145, 911487, 935252, 972517, 995797, 1019077, 1042357, 1065637, 1088917, 1112197, 1135539, 1161349, 1184629, 1207909, 1230569, 1248999, 1267429, 1285859, 1304289, 1322719, 1341273, 1362096, 1380650, 1401473, 1419841, 1437902, 1456456, 1482786, 1501340, 1532667, 1551221, 1570497, 1588927, 1607481, 1626757, 1645187, 1663741, 1684998, 1715186, 1733554, 1751561, 1770115, 1796583, 1815013, 1833567, 1852843, 1871273, 1889703, 1908195, 1927048, 1945540, 1964393, 1982823, 2001315, 2020168, 2038722, 2057998, 2076428, 2094796, 2116761, 2135315, 2159629, 2178183, 2212837, 2231391, 2257805, 2276359, 2315406, 2334445, 2359026, 2378065]"
"('Description.java', 'org.junit.runner.Description', 'methodAndClassNamePatternGroupOrDefault', '([\\s\\S]*)\\((.*)\\)', 'cliQueryTraces(com.github.olivergondza.dumpling.query.TopContendersTest)')",[1606]
"('FilterBuilder.java', 'org.reflections.util.FilterBuilder$Include', 'apply', 'com\\.github\\.olivergondza\\.dumpling.*', 'com.github.olivergondza.dumpling.cli.GroovyshCommandTest.class')","[54389, 72847, 99357, 117815, 140168, 158626, 179545, 198003, 218922, 237338, 255379, 274807, 295149, 314577, 335010, 354438, 374871, 394299, 414641, 434069, 463591, 482049, 502968, 521426, 542345, 560803, 581722, 600180, 621099, 639557, 660476, 678892, 697045, 720325, 743619, 767370, 792717, 815997, 839277, 862557, 885837, 909131, 932896, 970209, 993489, 1016769, 1040049, 1063329, 1086609, 1109889, 1133183, 1159041, 1182321, 1205601, 1228741, 1247171, 1265601, 1284031, 1302461, 1320891, 1339349, 1360268, 1378726, 1399645, 1418061, 1436074, 1454532, 1480958, 1499416, 1530839, 1549297, 1568669, 1587099, 1605557, 1624929, 1643359, 1661817, 1683170, 1713358, 1731774, 1749733, 1768191, 1794755, 1813185, 1831643, 1851015, 1869445, 1887875, 1906319, 1925220, 1943664, 1962565, 1980995, 1999439, 2018340, 2036798, 2056170, 2074600, 2093016, 2114933, 2133391, 2157801, 2176259, 2211009, 2229467, 2255977, 2274435, 2313530, 2332473, 2357150, 2376093]"
"('Description.java', 'org.junit.runner.Description', 'methodAndClassNamePatternGroupOrDefault', '([\\s\\S]*)\\((.*)\\)', 'groovyGrep(com.github.olivergondza.dumpling.cli.GroovyRuntimeTest)')",[858]
"('FilterBuilder.java', 'org.reflections.util.FilterBuilder$Include', 'apply', 'com\\.github\\.olivergondza\\.dumpling.*', 'com.github.olivergondza.dumpling.factory.ThreadDumpFactoryVendorTest.multipleMonitorsOnSingleStackFrame.groovy')","[57523, 76147, 102491, 121115, 143302, 161926, 182679, 201303, 222056, 240389, 258679, 278273, 298449, 318043, 338310, 357904, 378171, 397765, 417941, 437535, 466725, 485349, 506102, 524726, 545479, 564103, 584856, 603480, 624233, 642857, 663610, 681943, 701009, 724289, 747666, 771334, 796681, 819961, 843241, 866521, 889801, 913178, 936943, 974173, 997453, 1020733, 1044013, 1067293, 1090573, 1113853, 1137230, 1163005, 1186285, 1209565, 1231875, 1250305, 1268735, 1287165, 1305595, 1324025, 1342649, 1363402, 1382026, 1402779, 1421112, 1439208, 1457832, 1484092, 1502716, 1533973, 1552597, 1571803, 1590233, 1608857, 1628063, 1646493, 1665117, 1686304, 1716492, 1734825, 1752867, 1771491, 1797889, 1816319, 1834943, 1854149, 1872579, 1891009, 1909536, 1928354, 1946881, 1965699, 1984129, 2002656, 2021474, 2040098, 2059304, 2077734, 2096067, 2118067, 2136691, 2160935, 2179559, 2214143, 2232767, 2259111, 2277735, 2316747, 2335856, 2360367, 2379476]"
"('FilterBuilder.java', 'org.reflections.util.FilterBuilder$Include', 'apply', 'com\\.github\\.olivergondza\\.dumpling.*', 'com/github/olivergondza/dumpling/model/ThreadStatus$1.class')","[65298, 84330, 110266, 129298, 151077, 170109, 190454, 209486, 229831, 247960, 266862, 286864, 306632, 326634, 346493, 366495, 386354, 406356, 426124, 446126, 474500, 493532, 513877, 532909, 553254, 572286, 592631, 611663, 632008, 651040, 671385, 689514, 710824, 734104, 757685, 781149, 806496, 829776, 853056, 876336, 899616, 923197, 946962, 983988, 1007268, 1030548, 1053828, 1077108, 1100388, 1123668, 1147249, 1172820, 1196100, 1219380, 1239650, 1258080, 1276510, 1294940, 1313370, 1331800, 1350832, 1371177, 1390209, 1410554, 1428683, 1446983, 1466015, 1491867, 1510899, 1541748, 1560780, 1579578, 1598008, 1617040, 1635838, 1654268, 1673300, 1694079, 1724267, 1742396, 1760642, 1779674, 1805664, 1824094, 1843126, 1861924, 1880354, 1898784, 1917515, 1936129, 1954860, 1973474, 1991904, 2010635, 2029249, 2048281, 2067079, 2085509, 2103638, 2125842, 2144874, 2168710, 2187742, 2221918, 2240950, 2266886, 2285918, 2324726, 2344243, 2368346, 2387863]"
"('ThreadDumpFactory.java', 'com.github.olivergondza.dumpling.factory.ThreadDumpFactory', 'initHeader', '#\\d+', '[0x00007f8657334000]')","[21579, 21613]"
"('Scanner.java', 'java.util.Scanner', 'getCompleteTokenInBuffer', '(?s).*', '1970-01-01 11:22:33\nFull thread dump Java HotSpot(TM) 64-Bit Server VM (20.14-b01 mixed mode):\n\n""Handling GET /hudson/job/some_job/ : ajp-127.0.0.1-8009-133"" daemon prio=10 tid=0x00002ad443486800 nid=0x4745 waiting for monitor entry [0x00002ad476030000]\n   java.lang.Thread.State: BLOCKED (on object monitor)\n\tat hudson.model.AbstractProject.getActions(AbstractProject.java:1034)\n\t- waiting to lock <0x000000049c5f7990> (a hudson.model.FreeStyleProject)\n\tat sun.reflect.GeneratedMethodAccessor718.invoke(Unknown Source)\n\tat sun.reflect.DelegatingMethodAccessorImpl.invoke(DelegatingMethodAccessorImpl.java:25)\n\tat java.lang.reflect.Method.invoke(Method.java:597)\n\tat org.apache.commons.jexl.util.PropertyExecutor.execute(PropertyExecutor.java:125)\n\tat org.apache.commons.jexl.util.introspection.UberspectImpl$VelGetterImpl.invoke(UberspectImpl.java:314)\n\tat org.apache.commons.jexl.parser.ASTArrayAccess.evaluateExpr(ASTArrayAccess.java:185)\n\tat org.apache.commons.jexl.parser.ASTIdentifier.execute(ASTIdentifier.java:75)\n\ta')","[91737, 1473421, 1701173, 1787081, 2204136, 2248357, 2293325, 2300454]"
"('FilterBuilder.java', 'org.reflections.util.FilterBuilder$Include', 'apply', 'com\\.github\\.olivergondza\\.dumpling.*', 'com/github/olivergondza/dumpling/model/ThreadStatus.class')","[65030, 84048, 109998, 129016, 150809, 169827, 190186, 209204, 229563, 247699, 266580, 286568, 306350, 326338, 346211, 366199, 386072, 406060, 425842, 445830, 474232, 493250, 513609, 532627, 552986, 572004, 592363, 611381, 631740, 650758, 671117, 689253, 710486, 733766, 757340, 780811, 806158, 829438, 852718, 875998, 899278, 922852, 946617, 983650, 1006930, 1030210, 1053490, 1076770, 1100050, 1123330, 1146904, 1172482, 1195762, 1219042, 1239382, 1257812, 1276242, 1294672, 1313102, 1331532, 1350550, 1370909, 1389927, 1410286, 1428422, 1446715, 1465733, 1491599, 1510617, 1541480, 1560498, 1579310, 1597740, 1616758, 1635570, 1654000, 1673018, 1693811, 1723999, 1742135, 1760374, 1779392, 1805396, 1823826, 1842844, 1861656, 1880086, 1898516, 1917240, 1935861, 1954585, 1973206, 1991636, 2010360, 2028981, 2047999, 2066811, 2085241, 2103377, 2125574, 2144592, 2168442, 2187460, 2221650, 2240668, 2266618, 2285636, 2324451, 2343954, 2368071, 2387574]"
"('FilterBuilder.java', 'org.reflections.util.FilterBuilder$Include', 'apply', 'com\\.github\\.olivergondza\\.dumpling.*', 'com/github/olivergondza/dumpling/cli/GroovyshCommand.class')","[61330, 80154, 106298, 125122, 147109, 165933, 186486, 205310, 225863, 244096, 262686, 282480, 302456, 322250, 342317, 362111, 382178, 401972, 421948, 441742, 470532, 489356, 509909, 528733, 549286, 568110, 588663, 607487, 628040, 646864, 667417, 685650, 705816, 729096, 752573, 776141, 801488, 824768, 848048, 871328, 894608, 918085, 941850, 978980, 1002260, 1025540, 1048820, 1072100, 1095380, 1118660, 1142137, 1167812, 1191092, 1214372, 1235682, 1254112, 1272542, 1290972, 1309402, 1327832, 1346656, 1367209, 1386033, 1406586, 1424819, 1443015, 1461839, 1487899, 1506723, 1537780, 1556604, 1575610, 1594040, 1612864, 1631870, 1650300, 1669124, 1690111, 1720299, 1738532, 1756674, 1775498, 1801696, 1820126, 1838950, 1857956, 1876386, 1894816, 1913443, 1932161, 1950788, 1969506, 1987936, 2006563, 2025281, 2044105, 2063111, 2081541, 2099774, 2121874, 2140698, 2164742, 2183566, 2217950, 2236774, 2262918, 2281742, 2320654, 2339963, 2364274, 2383583]"
"('FilterBuilder.java', 'org.reflections.util.FilterBuilder$Include', 'apply', 'com\\.github\\.olivergondza\\.dumpling.*', 'com/github/olivergondza/dumpling/model/ProcessThread$3.class')","[63770, 82722, 108738, 127690, 149549, 168501, 188926, 207878, 228303, 246472, 265254, 285176, 305024, 324946, 344885, 364807, 384746, 404668, 424516, 444438, 472972, 491924, 512349, 531301, 551726, 570678, 591103, 610055, 630480, 649432, 669857, 688026, 708896, 732176, 755717, 779221, 804568, 827848, 851128, 874408, 897688, 921229, 944994, 982060, 1005340, 1028620, 1051900, 1075180, 1098460, 1121740, 1145281, 1170892, 1194172, 1217452, 1238122, 1256552, 1274982, 1293412, 1311842, 1330272, 1349224, 1369649, 1388601, 1409026, 1427195, 1445455, 1464407, 1490339, 1509291, 1540220, 1559172, 1578050, 1596480, 1615432, 1634310, 1652740, 1671692, 1692551, 1722739, 1740908, 1759114, 1778066, 1804136, 1822566, 1841518, 1860396, 1878826, 1897256, 1915947, 1934601, 1953292, 1971946, 1990376, 2009067, 2027721, 2046673, 2065551, 2083981, 2102150, 2124314, 2143266, 2167182, 2186134, 2220390, 2239342, 2265358, 2284310, 2323158, 2342595, 2366778, 2386215]"
"('FilterBuilder.java', 'org.reflections.util.FilterBuilder$Include', 'apply', 'com\\.github\\.olivergondza\\.dumpling.*', 'com.github.olivergondza.dumpling.cli.CliCommandOptionHandler.class')","[60267, 79035, 105235, 124003, 146046, 164814, 185423, 204191, 224800, 243061, 261567, 281305, 301337, 321075, 341198, 360936, 381059, 400797, 420829, 440567, 469469, 488237, 508846, 527614, 548223, 566991, 587600, 606368, 626977, 645745, 666354, 684615, 704473, 727753, 751202, 774798, 800145, 823425, 846705, 869985, 893265, 916714, 940479, 977637, 1000917, 1024197, 1047477, 1070757, 1094037, 1117317, 1140766, 1166469, 1189749, 1213029, 1234619, 1253049, 1271479, 1289909, 1308339, 1326769, 1345537, 1366146, 1384914, 1405523, 1423784, 1441952, 1460720, 1486836, 1505604, 1536717, 1555485, 1574547, 1592977, 1611745, 1630807, 1649237, 1668005, 1689048, 1719236, 1737497, 1755611, 1774379, 1800633, 1819063, 1837831, 1856893, 1875323, 1893753, 1912352, 1931098, 1949697, 1968443, 1986873, 2005472, 2024218, 2042986, 2062048, 2080478, 2098739, 2120811, 2139579, 2163679, 2182447, 2216887, 2235655, 2261855, 2280623, 2319563, 2338816, 2363183, 2382436]"
"('Scanner.java', 'java.util.Scanner', 'getCompleteTokenInBuffer', '(?s).*', '3892\n')",[32851]
"('FilterBuilder.java', 'org.reflections.util.FilterBuilder$Include', 'apply', 'com\\.github\\.olivergondza\\.dumpling.*', 'com/github/olivergondza/dumpling/cli/command.grep.usage')","[61218, 80036, 106186, 125004, 146997, 165815, 186374, 205192, 225751, 243987, 262568, 282356, 302338, 322126, 342199, 361987, 382060, 401848, 421830, 441618, 470420, 489238, 509797, 528615, 549174, 567992, 588551, 607369, 627928, 646746, 667305, 685541, 705674, 728954, 752428, 775999, 801346, 824626, 847906, 871186, 894466, 917940, 941705, 978838, 1002118, 1025398, 1048678, 1071958, 1095238, 1118518, 1141992, 1167670, 1190950, 1214230, 1235570, 1254000, 1272430, 1290860, 1309290, 1327720, 1346538, 1367097, 1385915, 1406474, 1424710, 1442903, 1461721, 1487787, 1506605, 1537668, 1556486, 1575498, 1593928, 1612746, 1631758, 1650188, 1669006, 1689999, 1720187, 1738423, 1756562, 1775380, 1801584, 1820014, 1838832, 1857844, 1876274, 1894704, 1913328, 1932049, 1950673, 1969394, 1987824, 2006448, 2025169, 2043987, 2062999, 2081429, 2099665, 2121762, 2140580, 2164630, 2183448, 2217838, 2236656, 2262806, 2281624, 2320539, 2339842, 2364159, 2383462]"
"('FilterBuilder.java', 'org.reflections.util.FilterBuilder$Include', 'apply', 'com\\.github\\.olivergondza\\.dumpling.*', 'com.github.olivergondza.dumpling.factory.ThreadDumpFactoryVendorTest$Runner$1.class')","[55911, 74449, 100879, 119417, 141690, 160228, 181067, 199605, 220444, 238820, 256981, 276489, 296751, 316259, 336612, 356120, 376473, 395981, 416243, 435751, 465113, 483651, 504490, 523028, 543867, 562405, 583244, 601782, 622621, 641159, 661998, 680374, 698967, 722247, 745581, 769292, 794639, 817919, 841199, 864479, 887759, 911093, 934858, 972131, 995411, 1018691, 1041971, 1065251, 1088531, 1111811, 1135145, 1160963, 1184243, 1207523, 1230263, 1248693, 1267123, 1285553, 1303983, 1322413, 1340951, 1361790, 1380328, 1401167, 1419543, 1437596, 1456134, 1482480, 1501018, 1532361, 1550899, 1570191, 1588621, 1607159, 1626451, 1644881, 1663419, 1684692, 1714880, 1733256, 1751255, 1769793, 1796277, 1814707, 1833245, 1852537, 1870967, 1889397, 1907881, 1926742, 1945226, 1964087, 1982517, 2001001, 2019862, 2038400, 2057692, 2076122, 2094498, 2116455, 2134993, 2159323, 2177861, 2212531, 2231069, 2257499, 2276037, 2315092, 2334115, 2358712, 2377735]"
"('FilterBuilder.java', 'org.reflections.util.FilterBuilder$Exclude', 'apply', 'java.lang.Object', 'org.kohsuke.args4j.spi.OptionHandler')","[59505, 60307, 78233, 79077, 104473, 105275, 123201, 124045, 145284, 146086, 164012, 164856, 184661, 185463, 203389, 204233, 224038, 224840, 242319, 243100, 260765, 261609, 280463, 281349, 300535, 301379, 320233, 321119, 340396, 341240, 360094, 360980, 380257, 381101, 399955, 400841, 420027, 420871, 439725, 440611, 468707, 469509, 487435, 488279, 508084, 508886, 526812, 527656, 547461, 548263, 566189, 567033, 586838, 587640, 605566, 606410, 626215, 627017, 644943, 645787, 665592, 666394, 683873, 684654, 703511, 704523, 726791, 727803, 750220, 751253, 773836, 774848, 799183, 800195, 822463, 823475, 845743, 846755, 869023, 870035, 892303, 893315, 915732, 916765, 939497, 940530, 976675, 977687, 999955, 1000967, 1023235, 1024247, 1046515, 1047527, 1069795, 1070807, 1093075, 1094087, 1116355, 1117367, 1139784, 1140817, 1165507, 1166519, 1188787, 1189799, 1212067, 1213079, 1233857, 1234659, 1252287, 1253089, 1270717, 1271519, 1289147, 1289949, 1307577, 1308379, 1326007, 1326809, 1344735, 1345579, 1365384, 1366186, 1384112, 1384956, 1404761, 1405563, 1423042, 1423823, 1441190, 1441992, 1459918, 1460762, 1486074, 1486876, 1504802, 1505646, 1535955, 1536757, 1554683, 1555527, 1573785, 1574587, 1592215, 1593017, 1610943, 1611787, 1630045, 1630847, 1648475, 1649277, 1667203, 1668047, 1688286, 1689088, 1718474, 1719276, 1736755, 1737536, 1754849, 1755651, 1773577, 1774421, 1799871, 1800673, 1818301, 1819103, 1837029, 1837873, 1856131, 1856933, 1874561, 1875363, 1892991, 1893793, 1911570, 1912393, 1930336, 1931138, 1948915, 1949738, 1967681, 1968483, 1986111, 1986913, 2004690, 2005513, 2023456, 2024258, 2042184, 2043028, 2061286, 2062088, 2079716, 2080518, 2097997, 2098778, 2120049, 2120851, 2138777, 2139621, 2162917, 2163719, 2181645, 2182489, 2216125, 2216927, 2234853, 2235697, 2261093, 2261895, 2279821, 2280665, 2318781, 2319604, 2337994, 2338859, 2362401, 2363224, 2381614, 2382479]"
"('ThreadDumpFactory.java', 'com.github.olivergondza.dumpling.factory.ThreadDumpFactory', 'initHeader', '#\\d+', '[0x00007f414e28c000]')","[2307729, 2307755, 2309774, 2309800, 2311819, 2311845, 2352974, 2353010, 2355439, 2355465, 2396594, 2396630]"
"('FilterBuilder.java', 'org.reflections.util.FilterBuilder$Include', 'apply', 'com\\.github\\.olivergondza\\.dumpling.*', 'com.github.olivergondza.dumpling.factory.JvmRuntimeFactory.class')","[69371, 88617, 114339, 133585, 155150, 174396, 194527, 213773, 233904, 251926, 271149, 291365, 310919, 331135, 350780, 370996, 390641, 410857, 430411, 450627, 478573, 497819, 517950, 537196, 557327, 576573, 596704, 615950, 636081, 655327, 675458, 693480, 715967, 739247, 762935, 786292, 811639, 834919, 858199, 881479, 904759, 928447, 952212, 989131, 1012411, 1035691, 1058971, 1082251, 1105531, 1128811, 1152499, 1177963, 1201243, 1224523, 1243723, 1262153, 1280583, 1299013, 1317443, 1335873, 1355119, 1375250, 1394496, 1414627, 1432649, 1451056, 1470302, 1495940, 1515186, 1545821, 1565067, 1583651, 1602081, 1621327, 1639911, 1658341, 1677587, 1698152, 1728340, 1746362, 1764715, 1783961, 1809737, 1828167, 1847413, 1865997, 1884427, 1902857, 1921695, 1940202, 1959040, 1977547, 1995977, 2014815, 2033322, 2052568, 2071152, 2089582, 2107604, 2129915, 2149161, 2172783, 2192029, 2225991, 2245237, 2270959, 2290205, 2328906, 2348637, 2372526, 2392257]"
"('ThreadDumpFactory.java', 'com.github.olivergondza.dumpling.factory.ThreadDumpFactory', 'initHeader', '#\\d+', '[0x00007fe0a4244000]')","[41386, 41420]"
"('ThreadDumpFactory.java', 'com.github.olivergondza.dumpling.factory.ThreadDumpFactory', 'initHeader', '#\\d+', '[0x00007fd6b0ad4000]')","[457101, 457140, 961734, 961785, 1522273, 1522310]"
"('Scanner.java', 'java.util.Scanner', 'getCompleteTokenInBuffer', '(?s).*', '""JMX server connection timeout 23"" daemon prio=10 tid=0x7fd67c00c000 nid=4162\n   java.lang.Thread.State: TIMED_WAITING (on object monitor)\n\tat java.lang.Object.wait(Native Method)\n\t- waiting on <0x70775e830> (a [I)\n\tat com.sun.jmx.remote.internal.ServerCommunicatorAdmin$Timeout.run(ServerCommunicatorAdmin.java:168)\n\tat java.lang.Thread.run(Thread.java:745)\n\n""RMI TCP Connection(1)-127.0.0.1"" daemon prio=10 tid=0x7fd688001800 nid=4161\n   java.lang.Thread.State: RUNNABLE\n\tat java.net.SocketInputStream.socketRead0(Native Method)\n\tat java.net.SocketInputStream.read(SocketInputStream.java:152)\n\tat java.net.SocketInputStream.read(SocketInputStream.java:122)\n\tat java.io.BufferedInputStream.fill(BufferedInputStream.java:235)\n\tat java.io.BufferedInputStream.read(BufferedInputStream.java:254)\n\t- locked <0x7077e3ab0> (a java.io.BufferedInputStream)\n\tat java.io.FilterInputStream.read(FilterInputStream.java:83)\n\tat sun.rmi.transport.tcp.TCPTransport.handleMessages(TCPTransport.java:549)\n\tat sun.rmi.transport.tcp.TCPTranspo')",[1528254]
"('FilterBuilder.java', 'org.reflections.util.FilterBuilder$Include', 'apply', 'com\\.github\\.olivergondza\\.dumpling.*', 'com/github/olivergondza/dumpling/groovy/GroovyInterpretterConfig.class')","[69448, 88698, 114416, 133666, 155227, 174477, 194604, 213854, 233981, 252001, 271230, 291450, 311000, 331220, 350861, 371081, 390722, 410942, 430492, 450712, 478650, 497900, 518027, 537277, 557404, 576654, 596781, 616031, 636158, 655408, 675535, 693555, 716064, 739344, 763034, 786389, 811736, 835016, 858296, 881576, 904856, 928546, 952311, 989228, 1012508, 1035788, 1059068, 1082348, 1105628, 1128908, 1152598, 1178060, 1201340, 1224620, 1243800, 1262230, 1280660, 1299090, 1317520, 1335950, 1355200, 1375327, 1394577, 1414704, 1432724, 1451133, 1470383, 1496017, 1515267, 1545898, 1565148, 1583728, 1602158, 1621408, 1639988, 1658418, 1677668, 1698229, 1728417, 1746437, 1764792, 1784042, 1809814, 1828244, 1847494, 1866074, 1884504, 1902934, 1921774, 1940279, 1959119, 1977624, 1996054, 2014894, 2033399, 2052649, 2071229, 2089659, 2107679, 2129992, 2149242, 2172860, 2192110, 2226068, 2245318, 2271036, 2290286, 2328985, 2348720, 2372605, 2392340]"
"('FilterBuilder.java', 'org.reflections.util.FilterBuilder$Exclude', 'apply', 'java.lang.Object', 'com.github.olivergondza.dumpling.cli.command.groovysh.usage')","[60799, 79595, 105767, 124563, 146578, 165374, 185955, 204751, 225332, 243579, 262127, 281893, 301897, 321663, 341758, 361524, 381619, 401385, 421389, 441155, 470001, 488797, 509378, 528174, 548755, 567551, 588132, 606928, 627509, 646305, 666886, 685133, 705145, 728425, 751888, 775470, 800817, 824097, 847377, 870657, 893937, 917400, 941165, 978309, 1001589, 1024869, 1048149, 1071429, 1094709, 1117989, 1141452, 1167141, 1190421, 1213701, 1235151, 1253581, 1272011, 1290441, 1308871, 1327301, 1346097, 1366678, 1385474, 1406055, 1424302, 1442484, 1461280, 1487368, 1506164, 1537249, 1556045, 1575079, 1593509, 1612305, 1631339, 1649769, 1668565, 1689580, 1719768, 1738015, 1756143, 1774939, 1801165, 1819595, 1838391, 1857425, 1875855, 1894285, 1912898, 1931630, 1950243, 1968975, 1987405, 2006018, 2024750, 2043546, 2062580, 2081010, 2099257, 2121343, 2140139, 2164211, 2183007, 2217419, 2236215, 2262387, 2281183, 2320109, 2339390, 2363729, 2383010]"
"('Scanner.java', 'java.util.Scanner', 'getCompleteTokenInBuffer', '(?s).*', '3747\n')",[19268]
"('FilterBuilder.java', 'org.reflections.util.FilterBuilder$Include', 'apply', 'com\\.github\\.olivergondza\\.dumpling.*', 'com.github.olivergondza.dumpling.cli.Factories$Pid.class')","[60381, 79155, 105349, 124123, 146160, 164934, 185537, 204311, 224914, 243172, 261687, 281431, 301457, 321201, 341318, 361062, 381179, 400923, 420949, 440693, 469583, 488357, 508960, 527734, 548337, 567111, 587714, 606488, 627091, 645865, 666468, 684726, 704617, 727897, 751349, 774942, 800289, 823569, 846849, 870129, 893409, 916861, 940626, 977781, 1001061, 1024341, 1047621, 1070901, 1094181, 1117461, 1140913, 1166613, 1189893, 1213173, 1234733, 1253163, 1271593, 1290023, 1308453, 1326883, 1345657, 1366260, 1385034, 1405637, 1423895, 1442066, 1460840, 1486950, 1505724, 1536831, 1555605, 1574661, 1593091, 1611865, 1630921, 1649351, 1668125, 1689162, 1719350, 1737608, 1755725, 1774499, 1800747, 1819177, 1837951, 1857007, 1875437, 1893867, 1912469, 1931212, 1949814, 1968557, 1986987, 2005589, 2024332, 2043106, 2062162, 2080592, 2098850, 2120925, 2139699, 2163793, 2182567, 2217001, 2235775, 2261969, 2280743, 2319680, 2338939, 2363300, 2382559]"
"('FilterBuilder.java', 'org.reflections.util.FilterBuilder$Include', 'apply', 'com\\.github\\.olivergondza\\.dumpling.*', 'jstack/contention.log')","[70434, 89736, 115402, 134704, 156213, 175515, 195590, 214892, 234967, 252961, 272268, 292540, 312038, 332310, 351899, 372171, 391760, 412032, 431530, 451802, 479636, 498938, 519013, 538315, 558390, 577692, 597767, 617069, 637144, 656446, 676521, 694515, 717310, 740590, 764306, 787635, 812982, 836262, 859542, 882822, 906102, 929818, 953583, 990474, 1013754, 1037034, 1060314, 1083594, 1106874, 1130154, 1153870, 1179306, 1202586, 1225866, 1244786, 1263216, 1281646, 1300076, 1318506, 1336936, 1356238, 1376313, 1395615, 1415690, 1433684, 1452119, 1471421, 1497003, 1516305, 1546884, 1566186, 1584714, 1603144, 1622446, 1640974, 1659404, 1678706, 1699215, 1729403, 1747397, 1765778, 1785080, 1810800, 1829230, 1848532, 1867060, 1885490, 1903920, 1922786, 1941265, 1960131, 1978610, 1997040, 2015906, 2034385, 2053687, 2072215, 2090645, 2108639, 2130978, 2150280, 2173846, 2193148, 2227054, 2246356, 2272022, 2291324, 2329997, 2349784, 2373617, 2393404]"
"('Scanner.java', 'java.util.Scanner', 'getCompleteTokenInBuffer', '(?s).*', '2018-01-11 20:22:07\nFull thread dump Java HotSpot(TM) 64-Bit Server VM (24.80-b11 mixed mode):\n\n""Attach Listener"" daemon prio=10 tid=0x00007f875c001000 nid=0xf10 waiting on condition [0x0000000000000000]\n   java.lang.Thread.State: RUNNABLE\n\n   Locked ownable synchronizers:\n\t- None\n\n""Service Thread"" daemon prio=10 tid=0x00007f8790096800 nid=0xeef runnable [0x0000000000000000]\n   java.lang.Thread.State: RUNNABLE\n\n   Locked ownable synchronizers:\n\t- None\n\n""C2 CompilerThread1"" daemon prio=10 tid=0x00007f8790094000 nid=0xeee waiting on condition [0x0000000000000000]\n   java.lang.Thread.State: RUNNABLE\n\n   Locked ownable synchronizers:\n\t- None\n\n""C2 CompilerThread0"" daemon prio=10 tid=0x00007f8790091800 nid=0xeed waiting on condition [0x0000000000000000]\n   java.lang.Thread.State: RUNNABLE\n\n   Locked ownable synchronizers:\n\t- None\n\n""Signal Dispatcher"" daemon prio=10 tid=0x00007f879008f000 nid=0xeec runnable [0x0000000000000000]\n   java.lang.Thread.State: RUNNABLE\n\n   Locked ownable synchronizers:\n\t- None\n\n""Finalizer')","[26163, 26229, 26571, 26775, 27117, 27459]"
"('Scanner.java', 'java.util.Scanner', 'getCompleteTokenInBuffer', '(?s).*', '2018-01-11 20:21:51\nFull thread dump Java HotSpot(TM) 64-Bit Server VM (24.80-b11 mixed mode):\n\n""Attach Listener"" daemon prio=10 tid=0x00007fe360001000 nid=0xe2a waiting on condition [0x0000000000000000]\n   java.lang.Thread.State: RUNNABLE\n\n   Locked ownable synchronizers:\n\t- None\n\n""other"" prio=10 tid=0x00007fe39057c800 nid=0xe1a waiting on condition [0x00007fe37fdf6000]\n   java.lang.Thread.State: WAITING (parking)\n\tat sun.misc.Unsafe.park(Native Method)\n\t- parking to wait for  <0x00000007aea713d0> (a java.util.concurrent.locks.ReentrantLock$NonfairSync)\n\tat java.util.concurrent.locks.LockSupport.park(LockSupport.java:186)\n\tat java.util.concurrent.locks.AbstractQueuedSynchronizer.parkAndCheckInterrupt(AbstractQueuedSynchronizer.java:834)\n\tat java.util.concurrent.locks.AbstractQueuedSynchronizer.acquireQueued(AbstractQueuedSynchronizer.java:867)\n\tat java.util.concurrent.locks.AbstractQueuedSynchronizer.acquire(AbstractQueuedSynchronizer.java:1197)\n\tat java.util.concurrent.locks.ReentrantLock$NonfairSync.lock(R')","[8979, 9029]"
"('Description.java', 'org.junit.runner.Description', 'methodAndClassNamePatternGroupOrDefault', '([\\s\\S]*)\\((.*)\\)', 'busyWaiting(com.github.olivergondza.dumpling.factory.ThreadDumpFactoryVendorTest)')",[242]
"('FilterBuilder.java', 'org.reflections.util.FilterBuilder$Include', 'apply', 'com\\.github\\.olivergondza\\.dumpling.*', 'com.github.olivergondza.dumpling.factory.JmxRuntimeFactory.class')","[69257, 88497, 114225, 133465, 155036, 174276, 194413, 213653, 233790, 251815, 271029, 291239, 310799, 331009, 350660, 370870, 390521, 410731, 430291, 450501, 478459, 497699, 517836, 537076, 557213, 576453, 596590, 615830, 635967, 655207, 675344, 693369, 715823, 739103, 762788, 786148, 811495, 834775, 858055, 881335, 904615, 928300, 952065, 988987, 1012267, 1035547, 1058827, 1082107, 1105387, 1128667, 1152352, 1177819, 1201099, 1224379, 1243609, 1262039, 1280469, 1298899, 1317329, 1335759, 1354999, 1375136, 1394376, 1414513, 1432538, 1450942, 1470182, 1495826, 1515066, 1545707, 1564947, 1583537, 1601967, 1621207, 1639797, 1658227, 1677467, 1698038, 1728226, 1746251, 1764601, 1783841, 1809623, 1828053, 1847293, 1865883, 1884313, 1902743, 1921578, 1940088, 1958923, 1977433, 1995863, 2014698, 2033208, 2052448, 2071038, 2089468, 2107493, 2129801, 2149041, 2172669, 2191909, 2225877, 2245117, 2270845, 2290085, 2328789, 2348514, 2372409, 2392134]"
"('Scanner.java', 'java.util.Scanner', 'getCompleteTokenInBuffer', '(?s).*', '""Reference Handler"" daemon prio=10 tid=0x00007f865006c000 nid=0xeaa in Object.wait() [0x00007f863f0ce000]\n   java.lang.Thread.State: WAITING (on object monitor)\n\tat java.lang.Object.wait(Native Method)\n\t- waiting on <0x00000007b0f10068> (a java.lang.ref.Reference$Lock)\n\tat java.lang.Object.wait(Object.java:503)\n\tat java.lang.ref.Reference$ReferenceHandler.run(Reference.java:133)\n\t- locked <0x00000007b0f10068> (a java.lang.ref.Reference$Lock)\n\n   Locked ownable synchronizers:\n\t- None\n\n""main"" prio=10 tid=0x00007f8650007800 nid=0xea4 waiting on condition [0x00007f8657334000]\n   java.lang.Thread.State: WAITING (parking)\n\tat sun.misc.Unsafe.park(Native Method)\n\tat java.util.concurrent.locks.LockSupport.park(LockSupport.java:315)\n\tat java_util_concurrent_locks_LockSupport$park.call(Unknown Source)\n\tat org.codehaus.groovy.runtime.callsite.CallSiteArray.defaultCall(CallSiteArray.java:45)\n\tat org.codehaus.groovy.runtime.callsite.AbstractCallSite.call(AbstractCallSite.java:108)\n\tat org.codehaus.groovy.runtime.callsite.')",[21079]
"('Description.java', 'org.junit.runner.Description', 'methodAndClassNamePatternGroupOrDefault', '([\\s\\S]*)\\((.*)\\)', 'parkedTimed(com.github.olivergondza.dumpling.factory.ThreadDumpFactoryVendorTest)')",[110]
"('FilterBuilder.java', 'org.reflections.util.FilterBuilder$Include', 'apply', 'com\\.github\\.olivergondza\\.dumpling.*', 'com/github/olivergondza/dumpling/factory/ThreadDumpFactoryVendorTest.class')","[55760, 74290, 100728, 119258, 141539, 160069, 180916, 199446, 220293, 238673, 256822, 276322, 296592, 316092, 336453, 355953, 376314, 395814, 416084, 435584, 464962, 483492, 504339, 522869, 543716, 562246, 583093, 601623, 622470, 641000, 661847, 680227, 698776, 722056, 745386, 769101, 794448, 817728, 841008, 864288, 887568, 910898, 934663, 971940, 995220, 1018500, 1041780, 1065060, 1088340, 1111620, 1134950, 1160772, 1184052, 1207332, 1230112, 1248542, 1266972, 1285402, 1303832, 1322262, 1340792, 1361639, 1380169, 1401016, 1419396, 1437445, 1455975, 1482329, 1500859, 1532210, 1550740, 1570040, 1588470, 1607000, 1626300, 1644730, 1663260, 1684541, 1714729, 1733109, 1751104, 1769634, 1796126, 1814556, 1833086, 1852386, 1870816, 1889246, 1907726, 1926591, 1945071, 1963936, 1982366, 2000846, 2019711, 2038241, 2057541, 2075971, 2094351, 2116304, 2134834, 2159172, 2177702, 2212380, 2230910, 2257348, 2275878, 2314937, 2333952, 2358557, 2377572]"
"('Scanner.java', 'java.util.Scanner', 'getCompleteTokenInBuffer', '(?s).*', '""pool-1-thread-1"" daemon prio=10 tid=0x00007fd6fc43d800 nid=0xdc7 runnable [0x00007fd6f8152000]\n   java.lang.Thread.State: RUNNABLE\n\tat java.io.FileInputStream.readBytes(Native Method)\n\tat java.io.FileInputStream.read(FileInputStream.java:272)\n\tat java.io.BufferedInputStream.read1(BufferedInputStream.java:273)\n\tat java.io.BufferedInputStream.read(BufferedInputStream.java:334)\n\t- locked <0x00000007b1590d30> (a java.lang.UNIXProcess$ProcessPipeInputStream)\n\tat sun.nio.cs.StreamDecoder.readBytes(StreamDecoder.java:283)\n\tat sun.nio.cs.StreamDecoder.implRead(StreamDecoder.java:325)\n\tat sun.nio.cs.StreamDecoder.read(StreamDecoder.java:177)\n\t- locked <0x00000007b1595000> (a java.io.InputStreamReader)\n\tat java.io.InputStreamReader.read(InputStreamReader.java:184)\n\tat java.io.Reader.read(Reader.java:100)\n\tat java.util.Scanner.readInput(Scanner.java:849)\n\tat java.util.Scanner.hasNext(Scanner.java:1384)\n\tat com.github.olivergondza.dumpling.factory.ThreadDumpFactory.fromStream(ThreadDumpFactory.java:118)\n\tat com.github.olivergondza.dumpling.factory.PidRuntimeFactory.createRuntime(PidRuntimeFactory.java:191)\n\tat com.github.olivergondza.dumpling.factory.PidRuntimeFactory.fromProcess(PidRuntimeFactory.java:85)\n\tat com.github.olivergondza.dumpling.factory.PidRuntimeFactory.fromProcess(PidRuntimeFactory.java:101)\n\tat com.github.olivergondza.dumpling.groovy.GroovyApiEntryPoint$LoadCommand.process(GroovyApiEntryPoint.java:86)\n\tat com.github.olivergondza.dumpling.groovy.GroovyApiEntryPoint$LoadCommand$process$2.call(Unknown Source)\n\tat org.codehaus.groovy.runtime.callsite.CallSiteArray.defaultCall(CallSiteArray.java:45)\n\tat org.codehaus.groovy.runtime.callsite.AbstractCallSite.call(AbstractCallSite.java:108)\n\tat org.codehaus.groovy.runtime.callsite.AbstractCallSite.call(AbstractCallSite.java:116)\n\tat dumpling-script.run(dumpling-script:1)\n\tat groovy.lang.GroovyShell.runScriptOrMainOrTestOrRunnable(GroovyShell.java:258)\n\tat groovy.lang.GroovyShell.run(GroovyShell.java:550)\n\tat com.github.olivergondza.dumpling.cli.GroovyCommand.run(GroovyCommand.java:94)\n\tat com.github.olivergondza.dumpling.cli.Main.run(Main.java:75)\n\tat com.github.olivergondza.dumpling.cli.AbstractCliTest.run(AbstractCliTest.java:51)\n\tat com.github.olivergondza.dumpling.cli.GroovyRuntimeTest.assertLoadPid(GroovyRuntimeTest.java:162)\n\tat com.github.olivergondza.dumpling.cli.GroovyRuntimeTest.loadPid(GroovyRuntimeTest.java:156)\n\tat sun.reflect.NativeMethodAccessorImpl.invoke0(Native Method)\n\tat sun.reflect.NativeMethodAccessorImpl.invoke(NativeMethodAccessorImpl.java:57)\n\tat sun.reflect.DelegatingMethodAccessorImpl.invoke(DelegatingMethodAccessorImpl.java:43)\n\tat java.lang.reflect.Method.invoke(Method.java:606)\n\tat org.junit.runners.model.FrameworkMethod$1.runReflectiveCall(FrameworkMethod.java:50)\n\tat org.junit.internal.runners.model.ReflectiveCallable.run(ReflectiveCallable.java:12)\n\tat org.junit.runners.model.FrameworkMethod.invokeExplosively(FrameworkMethod.java:47)\n\tat org.junit.experimental.theories.Theories$TheoryAnchor$2.evaluate(Theories.java:274)\n\tat com.github.olivergondza.dumpling.DisposeRule$3.evaluate(DisposeRule.java:71)\n\tat org.junit.rules.RunRules.evaluate(RunRules.java:20)\n\tat org.junit.experimental.theories.Theories$TheoryAnchor$1$1.evaluate(Theories.java:232)\n\tat org.junit.experimental.theories.Theories$TheoryAnchor.runWithCompleteAssignment(Theories.java:218)\n\tat org.junit.experimental.theories.Theories$TheoryAnchor.runWithAssignment(Theories.java:204)\n\tat org.junit.experimental.theories.Theories$TheoryAnchor.runWithIncompleteAssignment(Theories.java:212)\n\tat org.junit.experimental.theories.Theories$TheoryAnchor.runWithAssignment(Theories.java:202)\n\tat org.junit.experimental.theories.Theories$TheoryAnchor.runWithIncompleteAssignment(Theories.java:212)\n\tat org.junit.experimental.theories.Theories$TheoryAnchor.runWithAssignment(Theories.java:202)\n\tat org.junit.experimental.theories.Theories$TheoryAnchor.evaluate(Theories.java:187)\n\tat org.junit.runners.ParentRunner.runLeaf(ParentRunner.java:325)\n\tat org.junit.runners.BlockJUnit4ClassRunner.runChild(BlockJUnit4ClassRunner.java:78)\n\tat org.junit.runners.BlockJUnit4ClassRunner.runChild(BlockJUnit4ClassRunner.java:57)\n\tat org.junit.runners.ParentRunner$3.run(ParentRunner.java:290)\n\tat org.apache.maven.surefire.junitcore.pc.Scheduler$1.run(Scheduler.java:393)\n\tat java.util.concurrent.Executors$RunnableAdapter.call(Executors.java:471)\n\tat java.util.concurrent.FutureTask.run(FutureTask.java:262)\n\tat java.util.concurrent.ThreadPoolExecutor.runWorker(ThreadPoolExecutor.java:1145)\n\tat java.util.concurrent.ThreadPoolExecutor$Worker.run(ThreadPoolExecutor.java:615)\n\tat java.lang.Thread.run(Thread.java:745)\n\n   Locked ownable synchronizers:\n\t- <0x0000000707005858> (a java.util.concurrent.ThreadPoolExecutor$Worker)\n\n""surefire-forkedjvm-command-thread"" daemon prio=10 tid=0x00007fd6fc311800 nid=0xdc6 runnable [0x00007fd6f825f000]\n   java.lang.Thread.State: RUNNABLE\n\tat java.io.FileInputStream.readBytes(Native Method)\n\tat java.io.FileInputStream.read(FileInputStream.java:272)\n\tat java.io.BufferedInputStream.fill(BufferedInputStream.java:235)\n\tat java.io.BufferedInputStream.read(BufferedInputStream.java:254)\n\t- locked <0x0000000707069ca8> (a java.io.BufferedInputStream)\n\tat java.io.DataInputStream.readInt(DataInputStream.java:387)\n\tat org.apache.maven.surefire.booter.MasterProcessCommand.decode(MasterProcessCommand.java:117)\n\tat org.apache.maven.surefire.booter.CommandReader$CommandRunnable.run(CommandReader.java:360)\n\tat java.lang.Thread.run(Thread.java:745)\n\n   Locked ownable synchronizers:\n\t- None\n\n""last-ditch-daemon-shutdown-thread-30sec"" daemon prio=10 tid=0x00007fd6fc30c800 nid=0xdc5 waiting on condition [0x00007fd6f8360000]\n   java.lang.Thread.State: TIMED_WAITING (parking)\n\tat sun.misc.Unsafe.park(Native Method)\n\t- parking to wait for  <0x0000000707069d68> (a java.util.concurrent.locks.AbstractQueuedSynchronizer$ConditionObject)\n\tat java.util.concurrent.locks.LockSupport.parkNanos(LockSupport.java:226)\n\tat java.util.concurrent.locks.AbstractQueuedSynchronizer$ConditionObject.awaitNanos(AbstractQueuedSynchronizer.java:2082)\n\tat java.util.concurrent.ScheduledThreadPoolExecutor$DelayedWorkQueue.take(ScheduledThreadPoolExecutor.java:1090)\n\tat java.util.concurrent.ScheduledThreadPoolExecutor$DelayedWorkQueue.take(ScheduledThreadPoolExecutor.java:807)\n\tat java.util.concurrent.ThreadPoolExecutor.getTask(ThreadPoolExecutor.java:1068)\n\tat java.util.concurrent.ThreadPoolExecutor.runWorker(ThreadPoolExecutor.java:1130)\n\tat java.util.concurrent.ThreadPoolExecutor$Worker.run(ThreadPoolExecutor.java:615)\n\tat java.lang.Thread.run(Thread.java:745)\n\n   Locked ownable synchronizers:\n\t- None\n\n""Service Thread"" daemon prio=10 tid=0x00007fd6fc2f3000 nid=0xdc3 runnable [0x0000000000000000]\n   java.lang.Thread.State: RUNNABLE\n\n   Locked ownable synchronizers:\n\t- None\n\n""C2 CompilerThread1"" daemon prio=10 tid=0x00007fd6fc2f1000 nid=0xdc2 waiting on condition [0x0000000000000000]\n   java.lang.Thread.State: RUNNABLE\n\n   Locked ownable synchronizers:\n\t- None\n\n""C2 CompilerThread0"" daemon prio=10 tid=0x00007fd6fc2ec800 nid=0xdc1 waiting on condition [0x0000000000000000]\n   java.lang.Thread.State: RUNNABLE\n\n   Locked ownable synchronizers:\n\t- None\n\n""Signal Dispatcher"" daemon prio=10 tid=0x00007fd6fc157000 nid=0xdc0 runnable [0x0000000000000000]\n   java.lang.Thread.State: RUNNABLE\n\n   Locked ownable synchronizers:\n\t- None\n\n""Finalizer"" daemon prio=10 tid=0x00007fd6fc136000 nid=0xdbf in Object.wait() [0x00007fd6f8ffe000]\n   java.lang.Thread.State: WAITING (on object monitor)\n\tat java.lang.Object.wait(Native Method)\n\t- waiting on <0x000000070706a0a8> (a java.lang.ref.ReferenceQueue$Lock)\n\tat java.lang.ref.ReferenceQueue.remove(ReferenceQueue.java:135)\n\t- locked <0x000000070706a0a8> (a java.lang.ref.ReferenceQueue$Lock)\n\tat java.lang.ref.ReferenceQueue.remove(ReferenceQueue.java:151)\n\tat java.lang.ref.Finalizer$FinalizerThread.run(Finalizer.java:209)\n\n   Locked ownable synchronizers:\n\t- None\n\n""Reference Handler"" daemon prio=10 tid=0x00007fd6fc134000 nid=0xdbe in Object.wait() [0x00007fd700114000]\n   java.lang.Thread.State: WAITING (on object monitor)\n\tat java.lang.Objec')","[963246, 963635, 964024, 964619, 965008, 965603, 966198, 966587]"
"('FilterBuilder.java', 'org.reflections.util.FilterBuilder$Include', 'apply', 'com\\.github\\.olivergondza\\.dumpling.*', 'com.github.olivergondza.dumpling.factory.ThreadDumpFactoryVendorTest.threadNameWithQuotes.groovy')","[56627, 75203, 101595, 120171, 142406, 160982, 181783, 200359, 221160, 239517, 257735, 277281, 297505, 317051, 337366, 356912, 377227, 396773, 416997, 436543, 465829, 484405, 505206, 523782, 544583, 563159, 583960, 602536, 623337, 641913, 662714, 681071, 699873, 723153, 746506, 770198, 795545, 818825, 842105, 865385, 888665, 912018, 935783, 973037, 996317, 1019597, 1042877, 1066157, 1089437, 1112717, 1136070, 1161869, 1185149, 1208429, 1230979, 1249409, 1267839, 1286269, 1304699, 1323129, 1341705, 1362506, 1381082, 1401883, 1420240, 1438312, 1456888, 1483196, 1501772, 1533077, 1551653, 1570907, 1589337, 1607913, 1627167, 1645597, 1664173, 1685408, 1715596, 1733953, 1751971, 1770547, 1796993, 1815423, 1833999, 1853253, 1871683, 1890113, 1908616, 1927458, 1945961, 1964803, 1983233, 2001736, 2020578, 2039154, 2058408, 2076838, 2095195, 2117171, 2135747, 2160039, 2178615, 2213247, 2231823, 2258215, 2276791, 2315827, 2334888, 2359447, 2378508]"
"('FilterBuilder.java', 'org.reflections.util.FilterBuilder$Include', 'apply', 'com\\.github\\.olivergondza\\.dumpling.*', 'com/github/olivergondza/dumpling/factory/PidRuntimeFactory$1.class')","[68308, 87498, 113276, 132466, 154087, 173277, 193464, 212654, 232841, 250891, 270030, 290190, 309800, 329960, 349661, 369821, 389522, 409682, 429292, 449452, 477510, 496700, 516887, 536077, 556264, 575454, 595641, 614831, 635018, 654208, 674395, 692445, 714624, 737904, 761564, 784949, 810296, 833576, 856856, 880136, 903416, 927076, 950841, 987788, 1011068, 1034348, 1057628, 1080908, 1104188, 1127468, 1151128, 1176620, 1199900, 1223180, 1242660, 1261090, 1279520, 1297950, 1316380, 1334810, 1354000, 1374187, 1393377, 1413564, 1431614, 1449993, 1469183, 1494877, 1514067, 1544758, 1563948, 1582588, 1601018, 1620208, 1638848, 1657278, 1676468, 1697089, 1727277, 1745327, 1763652, 1782842, 1808674, 1827104, 1846294, 1864934, 1883364, 1901794, 1920604, 1939139, 1957949, 1976484, 1994914, 2013724, 2032259, 2051449, 2070089, 2088519, 2106569, 2128852, 2148042, 2171720, 2190910, 2224928, 2244118, 2269896, 2289086, 2327815, 2347490, 2371435, 2391110]"
"('FilterBuilder.java', 'org.reflections.util.FilterBuilder$Include', 'apply', 'com\\.github\\.olivergondza\\.dumpling.*', 'com.github.olivergondza.dumpling.cli.Factories$Jmx.class')","[59999, 78753, 104967, 123721, 145778, 164532, 185155, 203909, 224532, 242800, 261285, 281009, 301055, 320779, 340916, 360640, 380777, 400501, 420547, 440271, 469201, 487955, 508578, 527332, 547955, 566709, 587332, 606086, 626709, 645463, 666086, 684354, 704135, 727415, 750857, 774460, 799807, 823087, 846367, 869647, 892927, 916369, 940134, 977299, 1000579, 1023859, 1047139, 1070419, 1093699, 1116979, 1140421, 1166131, 1189411, 1212691, 1234351, 1252781, 1271211, 1289641, 1308071, 1326501, 1345255, 1365878, 1384632, 1405255, 1423523, 1441684, 1460438, 1486568, 1505322, 1536449, 1555203, 1574279, 1592709, 1611463, 1630539, 1648969, 1667723, 1688780, 1718968, 1737236, 1755343, 1774097, 1800365, 1818795, 1837549, 1856625, 1875055, 1893485, 1912077, 1930830, 1949422, 1968175, 1986605, 2005197, 2023950, 2042704, 2061780, 2080210, 2098478, 2120543, 2139297, 2163411, 2182165, 2216619, 2235373, 2261587, 2280341, 2319288, 2338527, 2362908, 2382147]"
"('Scanner.java', 'java.util.Scanner', 'getCompleteTokenInBuffer', '(?s).*', '2018-01-11 20:22:01\nFull thread dump Java HotSpot(TM) 64-Bit Server VM (24.80-b11 mixed mode):\n\n""Attach Listener"" daemon prio=10 tid=0x00007f8618001000 nid=0xec0 waiting on condition [0x0000000000000000]\n   java.lang.Thread.State: RUNNABLE\n\n   Locked ownable synchronizers:\n\t- None\n\n""Service Thread"" daemon prio=10 tid=0x00007f8650096800 nid=0xeb0 runnable [0x0000000000000000]\n   java.lang.Thread.State: RUNNABLE\n\n   Locked ownable synchronizers:\n\t- None\n\n""C2 CompilerThread1"" daemon prio=10 tid=0x00007f8650094800 nid=0xeaf waiting on condition [0x0000000000000000]\n   java.lang.Thread.State: RUNNABLE\n\n   Locked ownable synchronizers:\n\t- None\n\n""C2 CompilerThread0"" daemon prio=10 tid=0x00007f8650091800 nid=0xeae waiting on condition [0x0000000000000000]\n   java.lang.Thread.State: RUNNABLE\n\n   Locked ownable synchronizers:\n\t- None\n\n""Signal Dispatcher"" daemon prio=10 tid=0x00007f865008f000 nid=0xeac runnable [0x0000000000000000]\n   java.lang.Thread.State: RUNNABLE\n\n   Locked ownable synchronizers:\n\t- None\n\n""Finalizer')","[19334, 19400, 19742, 19946, 20288, 20630]"
"('ThreadDumpFactory.java', 'com.github.olivergondza.dumpling.factory.ThreadDumpFactory', 'initHeader', '#\\d+', '[0x00007fe387dfc000]')","[11016, 11050]"
"('ThreadDumpFactory.java', 'com.github.olivergondza.dumpling.factory.ThreadDumpFactory', 'initHeader', '#\\d+', '[0x00007fd68fcfb000]')","[454612, 454651, 958571, 958622, 1519896, 1519933]"
"('FilterBuilder.java', 'org.reflections.util.FilterBuilder$Include', 'apply', 'com\\.github\\.olivergondza\\.dumpling.*', 'com.github.olivergondza.dumpling.query.BlockingTree$1.class')","[66367, 85455, 111335, 130423, 152146, 171234, 191523, 210611, 230900, 249001, 267987, 288045, 307757, 327815, 347618, 367676, 387479, 407537, 427249, 447307, 475569, 494657, 514946, 534034, 554323, 573411, 593700, 612788, 633077, 652165, 672454, 690555, 712173, 735453, 759062, 782498, 807845, 831125, 854405, 877685, 900965, 924574, 948339, 985337, 1008617, 1031897, 1055177, 1078457, 1101737, 1125017, 1148626, 1174169, 1197449, 1220729, 1240719, 1259149, 1277579, 1296009, 1314439, 1332869, 1351957, 1372246, 1391334, 1411623, 1429724, 1448052, 1467140, 1492936, 1512024, 1542817, 1561905, 1580647, 1599077, 1618165, 1636907, 1655337, 1674425, 1695148, 1725336, 1743437, 1761711, 1780799, 1806733, 1825163, 1844251, 1862993, 1881423, 1899853, 1918612, 1937198, 1955957, 1974543, 1992973, 2011732, 2030318, 2049406, 2068148, 2086578, 2104679, 2126911, 2145999, 2169779, 2188867, 2222987, 2242075, 2267955, 2287043, 2325823, 2345396, 2369443, 2389016]"
"('Description.java', 'org.junit.runner.Description', 'methodAndClassNamePatternGroupOrDefault', '([\\s\\S]*)\\((.*)\\)', 'porcelain(com.github.olivergondza.dumpling.cli.GroovyCommandTest)')",[1188]
"('FilterBuilder.java', 'org.reflections.util.FilterBuilder$Include', 'apply', 'com\\.github\\.olivergondza\\.dumpling.*', 'com.github.olivergondza.dumpling.model.jmx.JmxThreadSet.class')","[62855, 81759, 107823, 126727, 148634, 167538, 188011, 206915, 227388, 245581, 264291, 284165, 304061, 323935, 343922, 363796, 383783, 403657, 423553, 443427, 472057, 490961, 511434, 530338, 550811, 569715, 590188, 609092, 629565, 648469, 668942, 687135, 707741, 731021, 754538, 778066, 803413, 826693, 849973, 873253, 896533, 920050, 943815, 980905, 1004185, 1027465, 1050745, 1074025, 1097305, 1120585, 1144102, 1169737, 1193017, 1216297, 1237207, 1255637, 1274067, 1292497, 1310927, 1329357, 1348261, 1368734, 1387638, 1408111, 1426304, 1444540, 1463444, 1489424, 1508328, 1539305, 1558209, 1577135, 1595565, 1614469, 1633395, 1651825, 1670729, 1691636, 1721824, 1740017, 1758199, 1777103, 1803221, 1821651, 1840555, 1859481, 1877911, 1896341, 1915008, 1933686, 1952353, 1971031, 1989461, 2008128, 2026806, 2045710, 2064636, 2083066, 2101259, 2123399, 2142303, 2166267, 2185171, 2219475, 2238379, 2264443, 2283347, 2322219, 2341608, 2365839, 2385228]"
"('FilterBuilder.java', 'org.reflections.util.FilterBuilder$Include', 'apply', 'com\\.github\\.olivergondza\\.dumpling.*', 'com.github.olivergondza.dumpling.DisposeRule$3.class')","[72249, 91647, 117217, 136615, 158028, 177426, 197405, 216803, 236782, 254728, 274179, 294547, 313949, 334317, 353810, 374178, 393671, 414039, 433441, 453809, 481451, 500849, 520828, 540226, 560205, 579603, 599582, 618980, 638959, 658357, 678336, 696282, 719605, 742885, 766649, 789930, 815277, 838557, 861837, 885117, 908397, 932161, 955926, 992769, 1016049, 1039329, 1062609, 1085889, 1109169, 1132449, 1156213, 1181601, 1204881, 1228161, 1246601, 1265031, 1283461, 1301891, 1320321, 1338751, 1358149, 1378128, 1397526, 1417505, 1435451, 1453934, 1473332, 1498818, 1518216, 1548699, 1568097, 1586529, 1604959, 1624357, 1642789, 1661219, 1680617, 1701030, 1731218, 1749164, 1767593, 1786991, 1812615, 1831045, 1850443, 1868875, 1887305, 1905735, 1924649, 1943080, 1961994, 1980425, 1998855, 2017769, 2036200, 2055598, 2074030, 2092460, 2110406, 2132793, 2152191, 2175661, 2195059, 2228869, 2248267, 2273837, 2293235, 2331860, 2351743, 2375480, 2395363]"
"('FilterBuilder.java', 'org.reflections.util.FilterBuilder$Include', 'apply', 'com\\.github\\.olivergondza\\.dumpling.*', 'com.github.olivergondza.dumpling.model.jvm.JvmThread$Builder.class')","[64457, 83445, 109425, 128413, 150236, 169224, 189613, 208601, 228990, 247141, 265977, 285935, 305747, 325705, 345608, 365566, 385469, 405427, 425239, 445197, 473659, 492647, 513036, 532024, 552413, 571401, 591790, 610778, 631167, 650155, 670544, 688695, 709763, 733043, 756602, 780088, 805435, 828715, 851995, 875275, 898555, 922114, 945879, 982927, 1006207, 1029487, 1052767, 1076047, 1099327, 1122607, 1146166, 1171759, 1195039, 1218319, 1238809, 1257239, 1275669, 1294099, 1312529, 1330959, 1349947, 1370336, 1389324, 1409713, 1427864, 1446142, 1465130, 1491026, 1510014, 1540907, 1559895, 1578737, 1597167, 1616155, 1634997, 1653427, 1672415, 1693238, 1723426, 1741577, 1759801, 1778789, 1804823, 1823253, 1842241, 1861083, 1879513, 1897943, 1916652, 1935288, 1953997, 1972633, 1991063, 2009772, 2028408, 2047396, 2066238, 2084668, 2102819, 2125001, 2143989, 2167869, 2186857, 2221077, 2240065, 2266045, 2285033, 2323863, 2343336, 2367483, 2386956]"
"('ThreadDumpFactory.java', 'com.github.olivergondza.dumpling.factory.ThreadDumpFactory', 'initHeader', '#\\d+', '[0x00007f414e58f000]')","[2307119, 2307145, 2309164, 2309190, 2311209, 2311235, 2352144, 2352180, 2354829, 2354855, 2395764, 2395800]"
"('Description.java', 'org.junit.runner.Description', 'methodAndClassNamePatternGroupOrDefault', '([\\s\\S]*)\\((.*)\\)', 'illegalPid(com.github.olivergondza.dumpling.cli.SourceTest)')",[484]
"('Description.java', 'org.junit.runner.Description', 'methodAndClassNamePatternGroupOrDefault', '([\\s\\S]*)\\((.*)\\)', 'multipleMonitorsOnSingleStackFrame(com.github.olivergondza.dumpling.factory.ThreadDumpFactoryVendorTest)')",[176]
"('Scanner.java', 'java.util.Scanner', 'getCompleteTokenInBuffer', '(?s).*', '2018-01-11 20:22:32\nFull thread dump Java HotSpot(TM) 64-Bit Server VM (24.80-b11 mixed mode):\n\n""sleepingThreadWithLock"" daemon prio=10 tid=0x00007fd6b82d2000 nid=0x1044 waiting on condition [0x00007fd6b07d1000]\n   java.lang.Thread.State: TIMED_WAITING (sleeping)\n\tat java.lang.Thread.sleep(Native Method)\n\tat com.github.olivergondza.dumpling.Util.pause(Util.java:113)\n\tat com.github.olivergondza.dumpling.TestThread$2.run(TestThread.java:101)\n\n   Locked ownable synchronizers:\n\t- <0x00000007aff4c820> (a java.ut')",[453901]
"('ThreadDumpFactory.java', 'com.github.olivergondza.dumpling.factory.ThreadDumpFactory', 'initHeader', '#\\d+', '[0x00007ff59caf6000]')","[2111076, 2111102, 2152990, 2153025, 2195858, 2195893, 2200716, 2200742]"
"('Description.java', 'org.junit.runner.Description', 'methodAndClassNamePatternGroupOrDefault', '([\\s\\S]*)\\((.*)\\)', 'toStringTraces(com.github.olivergondza.dumpling.query.BlockingTreeTest)')",[1760]
"('FilterBuilder.java', 'org.reflections.util.FilterBuilder$Include', 'apply', 'com\\.github\\.olivergondza\\.dumpling.*', 'com.github.olivergondza.dumpling.query.TopContenders$Result.class')","[66933, 86051, 111901, 131019, 152712, 171830, 192089, 211207, 231466, 249552, 268583, 288671, 308353, 328441, 348214, 368302, 388075, 408163, 427845, 447933, 476135, 495253, 515512, 534630, 554889, 574007, 594266, 613384, 633643, 652761, 673020, 691106, 712889, 736169, 759793, 783214, 808561, 831841, 855121, 878401, 901681, 925305, 949070, 986053, 1009333, 1032613, 1055893, 1079173, 1102453, 1125733, 1149357, 1174885, 1198165, 1221445, 1241285, 1259715, 1278145, 1296575, 1315005, 1333435, 1352553, 1372812, 1391930, 1412189, 1430275, 1448618, 1467736, 1493502, 1512620, 1543383, 1562501, 1581213, 1599643, 1618761, 1637473, 1655903, 1675021, 1695714, 1725902, 1743988, 1762277, 1781395, 1807299, 1825729, 1844847, 1863559, 1881989, 1900419, 1919193, 1937764, 1956538, 1975109, 1993539, 2012313, 2030884, 2050002, 2068714, 2087144, 2105230, 2127477, 2146595, 2170345, 2189463, 2223553, 2242671, 2268521, 2287639, 2326404, 2346007, 2370024, 2389627]"
"('FilterBuilder.java', 'org.reflections.util.FilterBuilder$Include', 'apply', 'com\\.github\\.olivergondza\\.dumpling.*', 'com/github/olivergondza/dumpling/model/mxbean/MXBeanThread.class')","[61866, 80718, 106834, 125686, 147645, 166497, 187022, 205874, 226399, 244618, 263250, 283072, 303020, 322842, 342881, 362703, 382742, 402564, 422512, 442334, 471068, 489920, 510445, 529297, 549822, 568674, 589199, 608051, 628576, 647428, 667953, 686172, 706492, 729772, 753263, 776817, 802164, 825444, 848724, 872004, 895284, 918775, 942540, 979656, 1002936, 1026216, 1049496, 1072776, 1096056, 1119336, 1142827, 1168488, 1191768, 1215048, 1236218, 1254648, 1273078, 1291508, 1309938, 1328368, 1347220, 1367745, 1386597, 1407122, 1425341, 1443551, 1462403, 1488435, 1507287, 1538316, 1557168, 1576146, 1594576, 1613428, 1632406, 1650836, 1669688, 1690647, 1720835, 1739054, 1757210, 1776062, 1802232, 1820662, 1839514, 1858492, 1876922, 1895352, 1913993, 1932697, 1951338, 1970042, 1988472, 2007113, 2025817, 2044669, 2063647, 2082077, 2100296, 2122410, 2141262, 2165278, 2184130, 2218486, 2237338, 2263454, 2282306, 2321204, 2340541, 2364824, 2384161]"
"('FilterBuilder.java', 'org.reflections.util.FilterBuilder$Include', 'apply', 'com\\.github\\.olivergondza\\.dumpling.*', 'com.github.olivergondza.dumpling.query.command.deadlocks.usage')","[67777, 86939, 112745, 131907, 153556, 172718, 192933, 212095, 232310, 250374, 269471, 289603, 309241, 329373, 349102, 369234, 388963, 409095, 428733, 448865, 476979, 496141, 516356, 535518, 555733, 574895, 595110, 614272, 634487, 653649, 673864, 691928, 713953, 737233, 760879, 784278, 809625, 832905, 856185, 879465, 902745, 926391, 950156, 987117, 1010397, 1033677, 1056957, 1080237, 1103517, 1126797, 1150443, 1175949, 1199229, 1222509, 1242129, 1260559, 1278989, 1297419, 1315849, 1334279, 1353441, 1373656, 1392818, 1413033, 1431097, 1449462, 1468624, 1494346, 1513508, 1544227, 1563389, 1582057, 1600487, 1619649, 1638317, 1656747, 1675909, 1696558, 1726746, 1744810, 1763121, 1782283, 1808143, 1826573, 1845735, 1864403, 1882833, 1901263, 1920059, 1938608, 1957404, 1975953, 1994383, 2013179, 2031728, 2050890, 2069558, 2087988, 2106052, 2128321, 2147483, 2171189, 2190351, 2224397, 2243559, 2269365, 2288527, 2327270, 2346917, 2370890, 2390537]"
"('FilterBuilder.java', 'org.reflections.util.FilterBuilder$Include', 'apply', 'com\\.github\\.olivergondza\\.dumpling.*', 'com/github/olivergondza/dumpling/factory/JmxRuntimeFactory.class')","[69220, 88458, 114188, 133426, 154999, 174237, 194376, 213614, 233753, 251779, 270990, 291198, 310760, 330968, 350621, 370829, 390482, 410690, 430252, 450460, 478422, 497660, 517799, 537037, 557176, 576414, 596553, 615791, 635930, 655168, 675307, 693333, 715776, 739056, 762740, 786101, 811448, 834728, 858008, 881288, 904568, 928252, 952017, 988940, 1012220, 1035500, 1058780, 1082060, 1105340, 1128620, 1152304, 1177772, 1201052, 1224332, 1243572, 1262002, 1280432, 1298862, 1317292, 1335722, 1354960, 1375099, 1394337, 1414476, 1432502, 1450905, 1470143, 1495789, 1515027, 1545670, 1564908, 1583500, 1601930, 1621168, 1639760, 1658190, 1677428, 1698001, 1728189, 1746215, 1764564, 1783802, 1809586, 1828016, 1847254, 1865846, 1884276, 1902706, 1921540, 1940051, 1958885, 1977396, 1995826, 2014660, 2033171, 2052409, 2071001, 2089431, 2107457, 2129764, 2149002, 2172632, 2191870, 2225840, 2245078, 2270808, 2290046, 2328751, 2348474, 2372371, 2392094]"
"('FilterBuilder.java', 'org.reflections.util.FilterBuilder$Include', 'apply', 'com\\.github\\.olivergondza\\.dumpling.*', 'com/github/olivergondza/dumpling/cli/CliCommand.class')","[61104, 79916, 106072, 124884, 146883, 165695, 186260, 205072, 225637, 243876, 262448, 282230, 302218, 322000, 342079, 361861, 381940, 401722, 421710, 441492, 470306, 489118, 509683, 528495, 549060, 567872, 588437, 607249, 627814, 646626, 667191, 685430, 705530, 728810, 752281, 775855, 801202, 824482, 847762, 871042, 894322, 917793, 941558, 978694, 1001974, 1025254, 1048534, 1071814, 1095094, 1118374, 1141845, 1167526, 1190806, 1214086, 1235456, 1253886, 1272316, 1290746, 1309176, 1327606, 1346418, 1366983, 1385795, 1406360, 1424599, 1442789, 1461601, 1487673, 1506485, 1537554, 1556366, 1575384, 1593814, 1612626, 1631644, 1650074, 1668886, 1689885, 1720073, 1738312, 1756448, 1775260, 1801470, 1819900, 1838712, 1857730, 1876160, 1894590, 1913211, 1931935, 1950556, 1969280, 1987710, 2006331, 2025055, 2043867, 2062885, 2081315, 2099554, 2121648, 2140460, 2164516, 2183328, 2217724, 2236536, 2262692, 2281504, 2320422, 2339719, 2364042, 2383339]"
"('ThreadDumpFactory.java', 'com.github.olivergondza.dumpling.factory.ThreadDumpFactory', 'initHeader', '#\\d+', '[0x00007f2c3c9e7000]')","[3561, 3595]"
"('ThreadDumpFactory.java', 'com.github.olivergondza.dumpling.factory.ThreadDumpFactory', 'initHeader', '#\\d+', '[0x00007fd882d89000]')","[49101, 49135]"
"('FilterBuilder.java', 'org.reflections.util.FilterBuilder$Include', 'apply', 'com\\.github\\.olivergondza\\.dumpling.*', 'com.github.olivergondza.dumpling.groovy.GroovyApiEntryPoint$1.class')","[69599, 88857, 114567, 133825, 155378, 174636, 194755, 214013, 234132, 252148, 271389, 291617, 311159, 331387, 351020, 371248, 390881, 411109, 430651, 450879, 478801, 498059, 518178, 537436, 557555, 576813, 596932, 616190, 636309, 655567, 675686, 693702, 716255, 739535, 763229, 786580, 811927, 835207, 858487, 881767, 905047, 928741, 952506, 989419, 1012699, 1035979, 1059259, 1082539, 1105819, 1129099, 1152793, 1178251, 1201531, 1224811, 1243951, 1262381, 1280811, 1299241, 1317671, 1336101, 1355359, 1375478, 1394736, 1414855, 1432871, 1451284, 1470542, 1496168, 1515426, 1546049, 1565307, 1583879, 1602309, 1621567, 1640139, 1658569, 1677827, 1698380, 1728568, 1746584, 1764943, 1784201, 1809965, 1828395, 1847653, 1866225, 1884655, 1903085, 1921929, 1940430, 1959274, 1977775, 1996205, 2015049, 2033550, 2052808, 2071380, 2089810, 2107826, 2130143, 2149401, 2173011, 2192269, 2226219, 2245477, 2271187, 2290445, 2329140, 2348883, 2372760, 2392503]"
"('FilterBuilder.java', 'org.reflections.util.FilterBuilder$Include', 'apply', 'com\\.github\\.olivergondza\\.dumpling.*', 'com/github/olivergondza/dumpling/model/ModelObject.class')","[64038, 83004, 109006, 127972, 149817, 168783, 189194, 208160, 228571, 246733, 265536, 285472, 305306, 325242, 345167, 365103, 385028, 404964, 424798, 444734, 473240, 492206, 512617, 531583, 551994, 570960, 591371, 610337, 630748, 649714, 670125, 688287, 709234, 732514, 756062, 779559, 804906, 828186, 851466, 874746, 898026, 921574, 945339, 982398, 1005678, 1028958, 1052238, 1075518, 1098798, 1122078, 1145626, 1171230, 1194510, 1217790, 1238390, 1256820, 1275250, 1293680, 1312110, 1330540, 1349506, 1369917, 1388883, 1409294, 1427456, 1445723, 1464689, 1490607, 1509573, 1540488, 1559454, 1578318, 1596748, 1615714, 1634578, 1653008, 1671974, 1692819, 1723007, 1741169, 1759382, 1778348, 1804404, 1822834, 1841800, 1860664, 1879094, 1897524, 1916222, 1934869, 1953567, 1972214, 1990644, 2009342, 2027989, 2046955, 2065819, 2084249, 2102411, 2124582, 2143548, 2167450, 2186416, 2220658, 2239624, 2265626, 2284592, 2323433, 2342884, 2367053, 2386504]"
"('FilterBuilder.java', 'org.reflections.util.FilterBuilder$Include', 'apply', 'com\\.github\\.olivergondza\\.dumpling.*', 'com.github.olivergondza.dumpling.groovy.GroovyApi$ApiDoc.class')","[69827, 89097, 114795, 134065, 155606, 174876, 194983, 214253, 234360, 252370, 271629, 291869, 311399, 331639, 351260, 371500, 391121, 411361, 430891, 451131, 479029, 498299, 518406, 537676, 557783, 577053, 597160, 616430, 636537, 655807, 675914, 693924, 716543, 739823, 763523, 786868, 812215, 835495, 858775, 882055, 905335, 929035, 952800, 989707, 1012987, 1036267, 1059547, 1082827, 1106107, 1129387, 1153087, 1178539, 1201819, 1225099, 1244179, 1262609, 1281039, 1299469, 1317899, 1336329, 1355599, 1375706, 1394976, 1415083, 1433093, 1451512, 1470782, 1496396, 1515666, 1546277, 1565547, 1584107, 1602537, 1621807, 1640367, 1658797, 1678067, 1698608, 1728796, 1746806, 1765171, 1784441, 1810193, 1828623, 1847893, 1866453, 1884883, 1903313, 1922163, 1940658, 1959508, 1978003, 1996433, 2015283, 2033778, 2053048, 2071608, 2090038, 2108048, 2130371, 2149641, 2173239, 2192509, 2226447, 2245717, 2271415, 2290685, 2329374, 2349129, 2372994, 2392749]"
"('ThreadDumpFactory.java', 'com.github.olivergondza.dumpling.factory.ThreadDumpFactory', 'initHeader', '#\\d+', 'on')","[2071, 2105, 2617, 2651, 2959, 2993, 4775, 4809, 5162, 5196, 6131, 6165, 6523, 6557, 8727, 8761, 9133, 9167, 9482, 9516, 10042, 10076, 10391, 10425, 11497, 11531, 12516, 12550, 13363, 13397, 13705, 13739, 14772, 14806, 15807, 15841, 16212, 16246, 16758, 16792, 17100, 17134, 19065, 19099, 19504, 19538, 20050, 20084, 20392, 20426, 21441, 21475, 22344, 22378, 22735, 22769, 23530, 23564, 23867, 23901, 24928, 24962, 25926, 25960, 26333, 26367, 26879, 26913, 27221, 27255, 29290, 29324, 29734, 29768, 30280, 30314, 30622, 30656, 32649, 32683, 33087, 33121, 33633, 33667, 33975, 34009, 35039, 35073, 36056, 36090, 36492, 36526, 37038, 37072, 37380, 37414, 39230, 39264, 39637, 39671, 40183, 40217, 40525, 40559, 42545, 42579, 42960, 42994, 43932, 43966, 44325, 44359, 46532, 46566, 46964, 46998, 47912, 47946, 48245, 48279, 50322, 50356, 50751, 50785, 51297, 51331, 51639, 51673, 53685, 53719, 98465, 98500, 178868, 178903, 218245, 218280, 454079, 454118, 454454, 454493, 455927, 455966, 456323, 456362, 457327, 457366, 457715, 457754, 458916, 458955, 459634, 459673, 460072, 460111, 461485, 461524, 462790, 462829, 502291, 502326, 541668, 541703, 581045, 581080, 620422, 620457, 659799, 659834, 791848, 791896, 956639, 956690, 957502, 957553, 958365, 958416, 960236, 960287, 960740, 960791, 962020, 962071, 962516, 962567, 964179, 964230, 965163, 965214, 965758, 965809, 967604, 967655, 969263, 969314, 1158168, 1158217, 1359591, 1359626, 1398968, 1399003, 1480070, 1480104, 1518468, 1518505, 1519107, 1519144, 1519746, 1519783, 1521153, 1521190, 1521531, 1521568, 1522489, 1522526, 1522859, 1522896, 1524012, 1524049, 1524702, 1524739, 1525122, 1525159, 1526479, 1526516, 1527736, 1527773, 1682059, 1682094, 1712246, 1712336, 1793809, 1793844, 2110663, 2110689, 2111836, 2111862, 2112238, 2112264, 2112493, 2112519, 2113329, 2113355, 2114250, 2114276, 2152442, 2152477, 2153993, 2154028, 2154521, 2154556, 2154857, 2154892, 2155945, 2155980, 2157082, 2157117, 2195310, 2195345, 2196861, 2196896, 2197389, 2197424, 2197725, 2197760, 2198813, 2198848, 2199950, 2199985, 2200303, 2200329, 2201476, 2201502, 2201878, 2201904, 2202133, 2202159, 2202969, 2202995, 2203890, 2203916, 2210153, 2210179, 2255085, 2255120, 2300053, 2300088, 2306471, 2306497, 2307013, 2307039, 2308179, 2308205, 2308730, 2308756, 2309058, 2309084, 2310224, 2310250, 2310775, 2310801, 2311103, 2311129, 2312269, 2312295, 2312820, 2312846, 2351998, 2352034, 2353584, 2353620, 2354335, 2354371, 2354723, 2354749, 2355889, 2355915, 2356440, 2356466, 2395618, 2395654, 2397204, 2397240, 2397955, 2397991]"
"('Scanner.java', 'java.util.Scanner', 'getCompleteTokenInBuffer', '(?s).*', '2018-01-11 20:21:48\nFull thread dump Java HotSpot(TM) 64-Bit Server VM (24.80-b11 mixed mode):\n\n""Attach Listener"" daemon prio=10 tid=0x00007f14b8001000 nid=0xe07 waiting on condition [0x0000000000000000]\n   java.lang.Thread.State: RUNNABLE\n\n   Locked ownable synchronizers:\n\t- None\n\n""a""thread"""" prio=10 tid=0x00007f14ec568000 nid=0xdf8 in Object.wait() [0x00007f14cebce000]\n   java.lang.Thread.State: WAITING (on object monitor)\n\tat java.lang.Object.wait(Native Method)\n\t- waiting on <0x00000007aeb14540> (a java.lang.Object)\n\tat java.lang.Object.wait(Object.java:503)\n\tat java_lang_Object$wait.call(Unknown Source)\n\tat dumpling-script.pauseHere(dumpling-script:10)\n\t- locked <0x00000007aeb14540> (a java.lang.Object)\n\tat sun.reflect.NativeMethodAccessorImpl.invoke0(Native Method)\n\tat sun.reflect.NativeMethodAccessorImpl.invoke(NativeMethodAccessorImpl.java:57)\n\tat sun.reflect.DelegatingMethodAccessorImpl.invoke(DelegatingMethodAccessorImpl.java:43)\n\tat java.lang.reflect.Method.invoke(Method.java:606)\n\tat org.codehaus.')","[5004, 5058]"
"('FilterBuilder.java', 'org.reflections.util.FilterBuilder$Include', 'apply', 'com\\.github\\.olivergondza\\.dumpling.*', 'com.github.olivergondza.dumpling.cli.Main$1.class')","[58661, 77345, 103629, 122313, 144440, 163124, 183817, 202501, 223194, 241497, 259877, 279531, 299647, 319301, 339508, 359162, 379369, 399023, 419139, 438793, 467863, 486547, 507240, 525924, 546617, 565301, 585994, 604678, 625371, 644055, 664748, 683051, 702447, 725727, 749134, 772772, 798119, 821399, 844679, 867959, 891239, 914646, 938411, 975611, 998891, 1022171, 1045451, 1068731, 1092011, 1115291, 1138698, 1164443, 1187723, 1211003, 1233013, 1251443, 1269873, 1288303, 1306733, 1325163, 1343847, 1364540, 1383224, 1403917, 1422220, 1440346, 1459030, 1485230, 1503914, 1535111, 1553795, 1572941, 1591371, 1610055, 1629201, 1647631, 1666315, 1687442, 1717630, 1735933, 1754005, 1772689, 1799027, 1817457, 1836141, 1855287, 1873717, 1892147, 1910704, 1929492, 1948049, 1966837, 1985267, 2003824, 2022612, 2041296, 2060442, 2078872, 2097175, 2119205, 2137889, 2162073, 2180757, 2215281, 2233965, 2260249, 2278933, 2317915, 2337084, 2361535, 2380704]"
"('Description.java', 'org.junit.runner.Description', 'methodAndClassNamePatternGroupOrDefault', '([\\s\\S]*)\\((.*)\\)', 'groovyFindAllWithArg(com.github.olivergondza.dumpling.cli.GroovyRuntimeTest)')",[616]
"('FilterBuilder.java', 'org.reflections.util.FilterBuilder$Exclude', 'apply', 'java.lang.Object', 'java.lang.Iterable')","[65643, 84693, 110611, 129661, 151422, 170472, 190799, 209849, 230176, 248296, 267225, 287245, 306995, 327015, 346856, 366876, 386717, 406737, 426487, 446507, 474845, 493895, 514222, 533272, 553599, 572649, 592976, 612026, 632353, 651403, 671730, 689850, 711259, 734539, 758129, 781584, 806931, 830211, 853491, 876771, 900051, 923641, 947406, 984423, 1007703, 1030983, 1054263, 1077543, 1100823, 1124103, 1147693, 1173255, 1196535, 1219815, 1239995, 1258425, 1276855, 1295285, 1313715, 1332145, 1351195, 1371522, 1390572, 1410899, 1429019, 1447328, 1466378, 1492212, 1511262, 1542093, 1561143, 1579923, 1598353, 1617403, 1636183, 1654613, 1673663, 1694424, 1724612, 1742732, 1760987, 1780037, 1806009, 1824439, 1843489, 1862269, 1880699, 1899129, 1917869, 1936474, 1955214, 1973819, 1992249, 2010989, 2029594, 2048644, 2067424, 2085854, 2103974, 2126187, 2145237, 2169055, 2188105, 2222263, 2241313, 2267231, 2286281, 2325080, 2344615, 2368700, 2388235]"
"('ThreadDumpFactory.java', 'com.github.olivergondza.dumpling.factory.ThreadDumpFactory', 'initHeader', '#\\d+', '[0x0000000000000000]')","[2209, 2243, 2413, 2447, 2755, 2789, 3097, 3131, 3301, 3335, 5300, 5334, 5877, 5911, 6269, 6303, 6661, 6695, 6915, 6949, 9271, 9305, 9831, 9865, 10180, 10214, 10529, 10563, 10738, 10772, 12955, 12989, 13159, 13193, 13501, 13535, 13843, 13877, 14047, 14081, 16350, 16384, 16554, 16588, 16896, 16930, 17238, 17272, 17442, 17476, 19642, 19676, 19846, 19880, 20188, 20222, 20530, 20564, 20734, 20768, 22873, 22907, 23331, 23365, 23668, 23702, 24005, 24039, 24204, 24238, 26471, 26505, 26675, 26709, 27017, 27051, 27359, 27393, 27563, 27597, 29872, 29906, 30076, 30110, 30418, 30452, 30760, 30794, 30964, 30998, 33225, 33259, 33429, 33463, 33771, 33805, 34113, 34147, 34317, 34351, 36630, 36664, 36834, 36868, 37176, 37210, 37518, 37552, 37722, 37756, 39775, 39809, 39979, 40013, 40321, 40355, 40663, 40697, 40867, 40901, 43098, 43132, 43677, 43711, 44070, 44104, 44463, 44497, 44718, 44752, 47102, 47136, 47711, 47745, 48050, 48084, 48383, 48417, 48578, 48612, 50889, 50923, 51093, 51127, 51435, 51469, 51777, 51811, 51981, 52015, 456085, 456124, 459354, 459393, 459792, 459831, 460230, 460269, 460510, 460549, 960442, 960493, 964774, 964825, 965369, 965420, 965964, 966015, 966353, 966404, 1521303, 1521340, 1524432, 1524469, 1524852, 1524889, 1525272, 1525309, 1525542, 1525579, 2110769, 2110795, 2112089, 2112115, 2112344, 2112370, 2112599, 2112625, 2112748, 2112774, 2152584, 2152619, 2154327, 2154362, 2154663, 2154698, 2154999, 2155034, 2155193, 2155228, 2195452, 2195487, 2197195, 2197230, 2197531, 2197566, 2197867, 2197902, 2198061, 2198096, 2200409, 2200435, 2201729, 2201755, 2201984, 2202010, 2202239, 2202265, 2202388, 2202414]"
"('FilterBuilder.java', 'org.reflections.util.FilterBuilder$Include', 'apply', 'com\\.github\\.olivergondza\\.dumpling.*', 'com/github/olivergondza/dumpling/cli/GroovyRuntimeTest$3.class')","[55150, 73648, 100118, 118616, 140929, 159427, 180306, 198804, 219683, 238079, 256180, 275648, 295950, 315418, 335811, 355279, 375672, 395140, 415442, 434910, 464352, 482850, 503729, 522227, 543106, 561604, 582483, 600981, 621860, 640358, 661237, 679633, 698006, 721286, 744600, 768331, 793678, 816958, 840238, 863518, 886798, 910112, 933877, 971170, 994450, 1017730, 1041010, 1064290, 1087570, 1110850, 1134164, 1160002, 1183282, 1206562, 1229502, 1247932, 1266362, 1284792, 1303222, 1321652, 1340150, 1361029, 1379527, 1400406, 1418802, 1436835, 1455333, 1481719, 1500217, 1531600, 1550098, 1569430, 1587860, 1606358, 1625690, 1644120, 1662618, 1683931, 1714119, 1732515, 1750494, 1768992, 1795516, 1813946, 1832444, 1851776, 1870206, 1888636, 1907100, 1925981, 1944445, 1963326, 1981756, 2000220, 2019101, 2037599, 2056931, 2075361, 2093757, 2115694, 2134192, 2158562, 2177060, 2211770, 2230268, 2256738, 2275236, 2314311, 2333294, 2357931, 2376914]"
"('FilterBuilder.java', 'org.reflections.util.FilterBuilder$Include', 'apply', 'com\\.github\\.olivergondza\\.dumpling.*', 'com/github/olivergondza/dumpling/cli/MainTest.class')","[54238, 72688, 99206, 117656, 140017, 158467, 179394, 197844, 218771, 237191, 255220, 274640, 294990, 314410, 334851, 354271, 374712, 394132, 414482, 433902, 463440, 481890, 502817, 521267, 542194, 560644, 581571, 600021, 620948, 639398, 660325, 678745, 696854, 720134, 743424, 767179, 792526, 815806, 839086, 862366, 885646, 908936, 932701, 970018, 993298, 1016578, 1039858, 1063138, 1086418, 1109698, 1132988, 1158850, 1182130, 1205410, 1228590, 1247020, 1265450, 1283880, 1302310, 1320740, 1339190, 1360117, 1378567, 1399494, 1417914, 1435923, 1454373, 1480807, 1499257, 1530688, 1549138, 1568518, 1586948, 1605398, 1624778, 1643208, 1661658, 1683019, 1713207, 1731627, 1749582, 1768032, 1794604, 1813034, 1831484, 1850864, 1869294, 1887724, 1906164, 1925069, 1943509, 1962414, 1980844, 1999284, 2018189, 2036639, 2056019, 2074449, 2092869, 2114782, 2133232, 2157650, 2176100, 2210858, 2229308, 2255826, 2274276, 2313375, 2332310, 2356995, 2375930]"
"('FilterBuilder.java', 'org.reflections.util.FilterBuilder$Include', 'apply', 'com\\.github\\.olivergondza\\.dumpling.*', 'com/github/olivergondza/dumpling/factory/JmxRuntimeFactory$LocalConnector.class')","[68650, 87858, 113618, 132826, 154429, 173637, 193806, 213014, 233183, 251224, 270390, 290568, 310160, 330338, 350021, 370199, 389882, 410060, 429652, 449830, 477852, 497060, 517229, 536437, 556606, 575814, 595983, 615191, 635360, 654568, 674737, 692778, 715056, 738336, 762005, 785381, 810728, 834008, 857288, 880568, 903848, 927517, 951282, 988220, 1011500, 1034780, 1058060, 1081340, 1104620, 1127900, 1151569, 1177052, 1200332, 1223612, 1243002, 1261432, 1279862, 1298292, 1316722, 1335152, 1354360, 1374529, 1393737, 1413906, 1431947, 1450335, 1469543, 1495219, 1514427, 1545100, 1564308, 1582930, 1601360, 1620568, 1639190, 1657620, 1676828, 1697431, 1727619, 1745660, 1763994, 1783202, 1809016, 1827446, 1846654, 1865276, 1883706, 1902136, 1920955, 1939481, 1958300, 1976826, 1995256, 2014075, 2032601, 2051809, 2070431, 2088861, 2106902, 2129194, 2148402, 2172062, 2191270, 2225270, 2244478, 2270238, 2289446, 2328166, 2347859, 2371786, 2391479]"
"('FilterBuilder.java', 'org.reflections.util.FilterBuilder$Include', 'apply', 'com\\.github\\.olivergondza\\.dumpling.*', 'com.github.olivergondza.dumpling.cli.GroovyshCommand.class')","[61367, 80193, 106335, 125161, 147146, 165972, 186523, 205349, 225900, 244132, 262725, 282521, 302495, 322291, 342356, 362152, 382217, 402013, 421987, 441783, 470569, 489395, 509946, 528772, 549323, 568149, 588700, 607526, 628077, 646903, 667454, 685686, 705863, 729143, 752621, 776188, 801535, 824815, 848095, 871375, 894655, 918133, 941898, 979027, 1002307, 1025587, 1048867, 1072147, 1095427, 1118707, 1142185, 1167859, 1191139, 1214419, 1235719, 1254149, 1272579, 1291009, 1309439, 1327869, 1346695, 1367246, 1386072, 1406623, 1424855, 1443052, 1461878, 1487936, 1506762, 1537817, 1556643, 1575647, 1594077, 1612903, 1631907, 1650337, 1669163, 1690148, 1720336, 1738568, 1756711, 1775537, 1801733, 1820163, 1838989, 1857993, 1876423, 1894853, 1913481, 1932198, 1950826, 1969543, 1987973, 2006601, 2025318, 2044144, 2063148, 2081578, 2099810, 2121911, 2140737, 2164779, 2183605, 2217987, 2236813, 2262955, 2281781, 2320692, 2340003, 2364312, 2383623]"
"('FilterBuilder.java', 'org.reflections.util.FilterBuilder$Include', 'apply', 'com\\.github\\.olivergondza\\.dumpling.*', 'com/github/olivergondza/dumpling/model/dump/ThreadDumpThread$Builder.class')","[63046, 81960, 108014, 126928, 148825, 167739, 188202, 207116, 227579, 245767, 264492, 284376, 304262, 324146, 344123, 364007, 383984, 403868, 423754, 443638, 472248, 491162, 511625, 530539, 551002, 569916, 590379, 609293, 629756, 648670, 669133, 687321, 707982, 731262, 754784, 778307, 803654, 826934, 850214, 873494, 896774, 920296, 944061, 981146, 1004426, 1027706, 1050986, 1074266, 1097546, 1120826, 1144348, 1169978, 1193258, 1216538, 1237398, 1255828, 1274258, 1292688, 1311118, 1329548, 1348462, 1368925, 1387839, 1408302, 1426490, 1444731, 1463645, 1489615, 1508529, 1539496, 1558410, 1577326, 1595756, 1614670, 1633586, 1652016, 1670930, 1691827, 1722015, 1740203, 1758390, 1777304, 1803412, 1821842, 1840756, 1859672, 1878102, 1896532, 1915204, 1933877, 1952549, 1971222, 1989652, 2008324, 2026997, 2045911, 2064827, 2083257, 2101445, 2123590, 2142504, 2166458, 2185372, 2219666, 2238580, 2264634, 2283548, 2322415, 2341814, 2366035, 2385434]"
"('ThreadDumpFactory.java', 'com.github.olivergondza.dumpling.factory.ThreadDumpFactory', 'initHeader', '#\\d+', '[0x00007f878d75a000]')","[28082, 28116]"
"('FilterBuilder.java', 'org.reflections.util.FilterBuilder$Include', 'apply', 'com\\.github\\.olivergondza\\.dumpling.*', 'com/github/olivergondza/dumpling/factory/ThreadDumpFactoryVendorTest$Runner$2.class')","[57934, 76580, 102902, 121548, 143713, 162359, 183090, 201736, 222467, 240789, 259112, 278728, 298882, 318498, 338743, 358359, 378604, 398220, 418374, 437990, 467136, 485782, 506513, 525159, 545890, 564536, 585267, 603913, 624644, 643290, 664021, 682343, 701530, 724810, 748198, 771855, 797202, 820482, 843762, 867042, 890322, 913710, 937475, 974694, 997974, 1021254, 1044534, 1067814, 1091094, 1114374, 1137762, 1163526, 1186806, 1210086, 1232286, 1250716, 1269146, 1287576, 1306006, 1324436, 1343082, 1363813, 1382459, 1403190, 1421512, 1439619, 1458265, 1484503, 1503149, 1534384, 1553030, 1572214, 1590644, 1609290, 1628474, 1646904, 1665550, 1686715, 1716903, 1735225, 1753278, 1771924, 1798300, 1816730, 1835376, 1854560, 1872990, 1891420, 1909958, 1928765, 1947303, 1966110, 1984540, 2003078, 2021885, 2040531, 2059715, 2078145, 2096467, 2118478, 2137124, 2161346, 2179992, 2214554, 2233200, 2259522, 2278168, 2317169, 2336300, 2360789, 2379920]"
"('Scanner.java', 'java.util.Scanner', 'getCompleteTokenInBuffer', '(?s).*', '""C2 CompilerThread1"" daemon prio=10 tid=0x00007ff5a0173800 nid=0x11d4 waiting on condition [0x0000000000000000]\n   java.lang.Thread.State: RUNNABLE\n\n""C2 CompilerThread0"" daemon prio=10 tid=0x00007ff5a0170800 nid=0x11d3 waiting on condition [0x0000000000000000]\n   java.lang.Thread.State: RUNNABLE\n\n""Signal Dispatcher"" daemon prio=10 tid=0x00007ff5a016e000 nid=0x11d2 runnable [0x0000000000000000]\n   java.lang.Thread.State: RUNNABLE\n\n""Finalizer"" daemon prio=10 tid=0x00007ff5a0141800 nid=0x11d1 in Object.wait() [0x00007ff5a4619000]\n   java.lang.Thread.State: WAITING (on object monitor)\n\tat java.lang.Object.wait(Native Method)\n\t- waiting on <0x00000007d70055c0> (a java.lang.ref.ReferenceQueue$Lock)\n\tat java.lang.ref.ReferenceQueue.remove(ReferenceQueue.java:135)\n\t- locked <0x00000007d70055c0> (a java.lang.ref.ReferenceQueue$Lock)\n\tat java.lang.ref.ReferenceQueue.remove(ReferenceQueue.java:151)\n\tat java.lang.ref.Finalizer$FinalizerThread.run(Finalizer.java:209)\n\n""Reference Handler"" daemon prio=10 tid=0x00007ff5a013f')","[2112158, 2112413, 2112668, 2112817, 2154414, 2154750, 2155086, 2155280, 2197282, 2197618, 2197954, 2198148, 2201798, 2202053, 2202308, 2202457]"
"('Scanner.java', 'java.util.Scanner', 'getCompleteTokenInBuffer', '(?s).*', '3629\n')",[12719]
"('FilterBuilder.java', 'org.reflections.util.FilterBuilder$Include', 'apply', 'com\\.github\\.olivergondza\\.dumpling.*', 'com/github/olivergondza/dumpling/factory/ThreadDumpFactoryVendorTest$Runner.class')","[55988, 74530, 100956, 119498, 141767, 160309, 181144, 199686, 220521, 238895, 257062, 276574, 296832, 316344, 336693, 356205, 376554, 396066, 416324, 435836, 465190, 483732, 504567, 523109, 543944, 562486, 583321, 601863, 622698, 641240, 662075, 680449, 699064, 722344, 745680, 769389, 794736, 818016, 841296, 864576, 887856, 911192, 934957, 972228, 995508, 1018788, 1042068, 1065348, 1088628, 1111908, 1135244, 1161060, 1184340, 1207620, 1230340, 1248770, 1267200, 1285630, 1304060, 1322490, 1341032, 1361867, 1380409, 1401244, 1419618, 1437673, 1456215, 1482557, 1501099, 1532438, 1550980, 1570268, 1588698, 1607240, 1626528, 1644958, 1663500, 1684769, 1714957, 1733331, 1751332, 1769874, 1796354, 1814784, 1833326, 1852614, 1871044, 1889474, 1907960, 1926819, 1945305, 1964164, 1982594, 2001080, 2019939, 2038481, 2057769, 2076199, 2094573, 2116532, 2135074, 2159400, 2177942, 2212608, 2231150, 2257576, 2276118, 2315171, 2334198, 2358791, 2377818]"
"('Scanner.java', 'java.util.Scanner', 'getCompleteTokenInBuffer', '(?s).*', '""main"" prio=10 tid=0x00007fe390007800 nid=0xe0b waiting on condition [0x00007fe3983ad000]\n   java.lang.Thread.State: WAITING (parking)\n\tat sun.misc.Unsafe.park(Native Method)\n\t- parking to wait for  <0x00000007aea71350> (a java.util.concurrent.locks.ReentrantLock$NonfairSync)\n\tat java.util.concurrent.locks.LockSupport.park(LockSupport.java:186)\n\tat java.util.concurrent.locks.AbstractQueuedSynchronizer.parkAndCheckInterrupt(AbstractQueuedSynchronizer.java:834)\n\tat java.util.concurrent.locks.AbstractQueuedSynchronizer.acquireQueued(AbstractQueuedSynchronizer.java:867)\n\tat java.util.concurrent.locks.AbstractQueuedSynchronizer.acquire(AbstractQueuedSynchronizer.java:1197)\n\tat java.util.concurrent.locks.ReentrantLock$NonfairSync.lock(ReentrantLock.java:214)\n\tat java.util.concurrent.locks.ReentrantLock.lock(ReentrantLock.java:290)\n\tat java_util_concurrent_locks_Lock$lock.call(Unknown Source)\n\tat org.codehaus.groovy.runtime.callsite.CallSiteArray.defaultCall(CallSiteArray.java:45)\n\tat org.codehaus.groovy.runtime.callsite.AbstractCallSite.call(AbstractCallSite.java:108)\n\tat org.codehaus.groovy.runtime.callsite.AbstractCallSite.call(AbstractCallSite.java:112)\n\tat dumpling-script.run(dumpling-script:35)\n\tat groovy.lang.GroovyShell.runScriptOrMainOrTestOrRunnable(GroovyShell.java:258)\n\tat groovy.lang.GroovyShell.run(GroovyShell.java:550)\n\tat com.github.olivergondza.dumpling.cli.GroovyCommand.run(GroovyCommand.java:94)\n\tat com.github.olivergondza.dumpling.cli.Main.run(Main.java:75)\n\tat com.github.olivergondza.dumpling.cli.Main.main(Main.java:58)\n\n   Locked ownable synchronizers:\n\t- <0x00000007aea713d0> (a java.util.concurrent.locks.ReentrantLock$NonfairSync)\n\n""VM Thread"" prio=10 tid=0x00007fe390067800 nid=0xe10 runnable \n\n""GC task thread#0 (ParallelGC)"" prio=10 tid=0x00007fe39001d800 nid=0xe0c runnable \n\n""GC task thread#1 (ParallelGC)"" prio=10 tid=0x00007fe39001f800 nid=0xe0d runnable \n\n""GC task thread#2 (ParallelGC)"" prio=10 tid=0x00007fe390021000 nid=0xe0e runnable \n\n""GC task thread#3 (ParallelGC)"" prio=10 tid=0x00007fe390')","[11393, 11734, 11868, 12002, 12136]"
"('FilterBuilder.java', 'org.reflections.util.FilterBuilder$Include', 'apply', 'com\\.github\\.olivergondza\\.dumpling.*', 'com.github.olivergondza.dumpling.factory.ThreadDumpFactoryVendorTest$Runner$2.class')","[57971, 76619, 102939, 121587, 143750, 162398, 183127, 201775, 222504, 240825, 259151, 278769, 298921, 318539, 338782, 358400, 378643, 398261, 418413, 438031, 467173, 485821, 506550, 525198, 545927, 564575, 585304, 603952, 624681, 643329, 664058, 682379, 701577, 724857, 748246, 771902, 797249, 820529, 843809, 867089, 890369, 913758, 937523, 974741, 998021, 1021301, 1044581, 1067861, 1091141, 1114421, 1137810, 1163573, 1186853, 1210133, 1232323, 1250753, 1269183, 1287613, 1306043, 1324473, 1343121, 1363850, 1382498, 1403227, 1421548, 1439656, 1458304, 1484540, 1503188, 1534421, 1553069, 1572251, 1590681, 1609329, 1628511, 1646941, 1665589, 1686752, 1716940, 1735261, 1753315, 1771963, 1798337, 1816767, 1835415, 1854597, 1873027, 1891457, 1909996, 1928802, 1947341, 1966147, 1984577, 2003116, 2021922, 2040570, 2059752, 2078182, 2096503, 2118515, 2137163, 2161383, 2180031, 2214591, 2233239, 2259559, 2278207, 2317207, 2336340, 2360827, 2379960]"
"('Description.java', 'org.junit.runner.Description', 'methodAndClassNamePatternGroupOrDefault', '([\\s\\S]*)\\((.*)\\)', 'inferSourceFile(com.github.olivergondza.dumpling.cli.ProcessRuntimeOptionHandlerTest)')",[1320]
"('FilterBuilder.java', 'org.reflections.util.FilterBuilder$Include', 'apply', 'com\\.github\\.olivergondza\\.dumpling.*', 'com.github.olivergondza.dumpling.groovy.GroovyApi.class')","[69713, 88977, 114681, 133945, 155492, 174756, 194869, 214133, 234246, 252259, 271509, 291743, 311279, 331513, 351140, 371374, 391001, 411235, 430771, 451005, 478915, 498179, 518292, 537556, 557669, 576933, 597046, 616310, 636423, 655687, 675800, 693813, 716399, 739679, 763376, 786724, 812071, 835351, 858631, 881911, 905191, 928888, 952653, 989563, 1012843, 1036123, 1059403, 1082683, 1105963, 1129243, 1152940, 1178395, 1201675, 1224955, 1244065, 1262495, 1280925, 1299355, 1317785, 1336215, 1355479, 1375592, 1394856, 1414969, 1432982, 1451398, 1470662, 1496282, 1515546, 1546163, 1565427, 1583993, 1602423, 1621687, 1640253, 1658683, 1677947, 1698494, 1728682, 1746695, 1765057, 1784321, 1810079, 1828509, 1847773, 1866339, 1884769, 1903199, 1922046, 1940544, 1959391, 1977889, 1996319, 2015166, 2033664, 2052928, 2071494, 2089924, 2107937, 2130257, 2149521, 2173125, 2192389, 2226333, 2245597, 2271301, 2290565, 2329257, 2349006, 2372877, 2392626]"
"('Description.java', 'org.junit.runner.Description', 'methodAndClassNamePatternGroupOrDefault', '([\\s\\S]*)\\((.*)\\)', 'invokeCommand(com.github.olivergondza.dumpling.cli.SourceTest)')",[506]
"('FilterBuilder.java', 'org.reflections.util.FilterBuilder$Exclude', 'apply', 'java.lang.Object', 'com.github.olivergondza.dumpling.factory.ThreadDumpFactoryVendorTest.threadNameWithQuotes.groovy')","[56665, 75243, 101633, 120211, 142444, 161022, 181821, 200399, 221198, 239554, 257775, 277323, 297545, 317093, 337406, 356954, 377267, 396815, 417037, 436585, 465867, 484445, 505244, 523822, 544621, 563199, 583998, 602576, 623375, 641953, 662752, 681108, 699921, 723201, 746555, 770246, 795593, 818873, 842153, 865433, 888713, 912067, 935832, 973085, 996365, 1019645, 1042925, 1066205, 1089485, 1112765, 1136119, 1161917, 1185197, 1208477, 1231017, 1249447, 1267877, 1286307, 1304737, 1323167, 1341745, 1362544, 1381122, 1401921, 1420277, 1438350, 1456928, 1483234, 1501812, 1533115, 1551693, 1570945, 1589375, 1607953, 1627205, 1645635, 1664213, 1685446, 1715634, 1733990, 1752009, 1770587, 1797031, 1815461, 1834039, 1853291, 1871721, 1890151, 1908655, 1927496, 1946000, 1964841, 1983271, 2001775, 2020616, 2039194, 2058446, 2076876, 2095232, 2117209, 2135787, 2160077, 2178655, 2213285, 2231863, 2258253, 2276831, 2315866, 2334929, 2359486, 2378549]"
"('Description.java', 'org.junit.runner.Description', 'methodAndClassNamePatternGroupOrDefault', '([\\s\\S]*)\\((.*)\\)', 'executeScript(com.github.olivergondza.dumpling.cli.GroovyRuntimeTest)')",[946]
"('Scanner.java', 'java.util.Scanner', 'getCompleteTokenInBuffer', '(?s).*', '""main"" prio=10 tid=0x00007f106c007800 nid=0x1001 in Object.wait() [0x00007f1074dce000]\n   java.lang.Thread.State: TIMED_WAITING (on object monitor)\n\tat java.lang.Object.wait(Native Method)\n\t- waiting on <0x00000007ae5a9918> (a java.lang.Object)\n\tat sun.reflect.NativeMethodAccessorImpl.invoke0(Native Method)\n\tat sun.reflect.NativeMethodAccessorImpl.invoke(NativeMethodAccessorImpl.java:57)\n\tat sun.reflect.DelegatingMethodAccessorImpl.invoke(DelegatingMethodAccessorImpl.java:43)\n\tat java.lang.reflect.Method.invoke(Method.java:606)\n\tat org.codehaus.groovy.runtime.callsite.PojoMetaMethodSite$PojoCachedMethodSiteNoUnwrap.invoke(PojoMetaMethodSite.java:210)\n\tat org.codehaus.groovy.runtime.callsite.PojoMetaMethodSite.call(PojoMetaMethodSite.java:53)\n\tat org.codehaus.groovy.runtime.callsite.CallSiteArray.defaultCall(CallSiteArray.java:45)\n\tat org.codehaus.groovy.runtime.callsite.AbstractCallSite.call(AbstractCallSite.java:108)\n\tat org.codehaus.groovy.runtime.callsite.AbstractCallSite.call(AbstractCallSite.java:116)\n\tat dumpling-script.run(dumpling-script:18)\n\t- locked <0x00000007ae5a9918> (a java.lang.Object)\n\tat groovy.lang.GroovyShell.runScriptOrMainOrTestOrRunnable(GroovyShell.java:258)\n\tat groovy.lang.GroovyShell.run(GroovyShell.java:550)\n\tat com.github.olivergondza.dumpling.cli.GroovyCommand.run(GroovyCommand.java:94)\n\tat com.github.olivergondza.dumpling.cli.Main.run(Main.java:75)\n\tat com.github.olivergondza.dumpling.cli.Main.main(Main.java:58)\n\n   Locked ownable synchronizers:\n\t- None\n\n""VM Thread"" prio=10 tid=0x00007f106c067800 nid=0x1006 runnable \n\n""GC task thread#0 (ParallelGC)"" prio=10 tid=0x00007f106c01d800 nid=0x1002 runnable \n\n""GC task thread#1 (ParallelGC)"" prio=10 tid=0x00007f106c01f800 nid=0x1003 runnable \n\n""GC task thread#2 (ParallelGC)"" prio=10 tid=0x00007f106c021000 nid=0x1004 runnable \n\n""GC task thread#3 (ParallelGC)"" prio=10 tid=0x00007f106c023000 nid=0x1005 runnable \n\n""VM Periodic Task Thread"" prio=10 tid=0x00007f106c0a1800 nid=0x100e waiting on condition \n\nJNI global references: 254\n\n')","[52603, 52881, 53021, 53161, 53301, 53441, 53581, 53859]"
"('Scanner.java', 'java.util.Scanner', 'getCompleteTokenInBuffer', '(?s).*', '""Finalizer"" daemon prio=10 tid=0x00007f2a3006e000 nid=0xe8a in Object.wait() [0x00007f2a2d356000]\n   java.lang.Thread.State: WAITING (on object monitor)\n\tat java.lang.Object.wait(Native Method)\n\t- waiting on <0x00000007b0f08790> (a java.lang.ref.ReferenceQueue$Lock)\n\tat java.lang.ref.ReferenceQueue.remove(ReferenceQueue.java:135)\n\t- locked <0x00000007b0f08790> (a java.lang.ref.ReferenceQueue$Lock)\n\tat java.lang.ref.ReferenceQueue.remove(ReferenceQueue.java:151)\n\tat java.lang.ref.Finalizer$FinalizerThread.run(Finalizer.java:209)\n\n   Locked ownable synchronizers:\n\t- None\n\n""Reference Handler"" daemon prio=10 tid=0x00007f2a3006c000 nid=0xe89 in Object.wait() [0x00007f2a2d457000]\n   java.lang.Thread.State: WAITING (on object monitor)\n\tat java.lang.Object.wait(Native Method)\n\t- waiting on <0x00000007b0f10068> (a java.lang.ref.Reference$Lock)\n\tat java.lang.Object.wait(Object.java:503)\n\tat java.lang.ref.Reference$ReferenceHandler.run(Reference.java:133)\n\t- locked <0x00000007b0f10068> (a java.lang.ref.Reference$Lock)\n\n')",[17529]
"('Description.java', 'org.junit.runner.Description', 'methodAndClassNamePatternGroupOrDefault', '([\\s\\S]*)\\((.*)\\)', 'loadTreaddump(com.github.olivergondza.dumpling.cli.GroovyRuntimeTest)')",[990]
"('FilterBuilder.java', 'org.reflections.util.FilterBuilder$Include', 'apply', 'com\\.github\\.olivergondza\\.dumpling.*', 'com.github.olivergondza.dumpling.factory.ThreadDumpFactoryVendorTest.sleeping.groovy')","[56851, 75439, 101819, 120407, 142630, 161218, 182007, 200595, 221384, 239735, 257971, 277529, 297741, 317299, 337602, 357160, 377463, 397021, 417233, 436791, 466053, 484641, 505430, 524018, 544807, 563395, 584184, 602772, 623561, 642149, 662938, 681289, 700157, 723437, 746796, 770482, 795829, 819109, 842389, 865669, 888949, 912308, 936073, 973321, 996601, 1019881, 1043161, 1066441, 1089721, 1113001, 1136360, 1162153, 1185433, 1208713, 1231203, 1249633, 1268063, 1286493, 1304923, 1323353, 1341941, 1362730, 1381318, 1402107, 1420458, 1438536, 1457124, 1483420, 1502008, 1533301, 1551889, 1571131, 1589561, 1608149, 1627391, 1645821, 1664409, 1685632, 1715820, 1734171, 1752195, 1770783, 1797217, 1815647, 1834235, 1853477, 1871907, 1890337, 1908846, 1927682, 1946191, 1965027, 1983457, 2001966, 2020802, 2039390, 2058632, 2077062, 2095413, 2117395, 2135983, 2160263, 2178851, 2213471, 2232059, 2258439, 2277027, 2316057, 2335130, 2359677, 2378750]"
"('FilterBuilder.java', 'org.reflections.util.FilterBuilder$Include', 'apply', 'com\\.github\\.olivergondza\\.dumpling.*', 'com/github/olivergondza/dumpling/factory/ThreadDumpFactoryVendorTest/parkedTimedWithBlocker.groovy')","[57822, 76462, 102790, 121430, 143601, 162241, 182978, 201618, 222355, 240680, 258994, 278604, 298764, 318374, 338625, 358235, 378486, 398096, 418256, 437866, 467024, 485664, 506401, 525041, 545778, 564418, 585155, 603795, 624532, 643172, 663909, 682234, 701388, 724668, 748053, 771713, 797060, 820340, 843620, 866900, 890180, 913565, 937330, 974552, 997832, 1021112, 1044392, 1067672, 1090952, 1114232, 1137617, 1163384, 1186664, 1209944, 1232174, 1250604, 1269034, 1287464, 1305894, 1324324, 1342964, 1363701, 1382341, 1403078, 1421403, 1439507, 1458147, 1484391, 1503031, 1534272, 1552912, 1572102, 1590532, 1609172, 1628362, 1646792, 1665432, 1686603, 1716791, 1735116, 1753166, 1771806, 1798188, 1816618, 1835258, 1854448, 1872878, 1891308, 1909843, 1928653, 1947188, 1965998, 1984428, 2002963, 2021773, 2040413, 2059603, 2078033, 2096358, 2118366, 2137006, 2161234, 2179874, 2214442, 2233082, 2259410, 2278050, 2317054, 2336179, 2360674, 2379799]"
"('Scanner.java', 'java.util.Scanner', 'getCompleteTokenInBuffer', '(?s).*', '""RMI RenewClean-[127.0.0.1:34338]"" daemon prio=10 tid=0x00007fd6b80b9000 nid=0x10c1 in Object.wait() [0x00007fd6b07d1000]\n   java.lang.Thread.State: TIMED_WAITING (on object monitor)\n\tat java.lang.Object.wait(Native Method)\n\t- waiting on <0x0000000707efbcf0> (a java.lang.ref.ReferenceQueue$Lock)\n\tat java.lang.ref.ReferenceQueue.remove(ReferenceQueue.java:135)\n\t- locked <0x0000000707efbcf0> (a java.lang.ref.ReferenceQueue$Lock)\n\tat sun.rmi.transport.DGCClient$EndpointEntry$RenewCleanThread.run(DGCClient.java:535)\n\tat java.lang.Thread.run(Thread.java:745)\n\n   Locked ownable synchronizers:\n\t- None\n\n""JMX client heartbeat 4"" daemon prio=10 tid=0x00007fd6b80aa800 nid=0x10ac waiting on condition [0x00007fd68faf9000]\n   java.lang.Thread.State: TIMED_WAITING (sleeping)\n\tat java.lang.Thread.sleep(Native Method)\n\tat com.sun.jmx.remote.internal.ClientCommunicatorAdmin$Checker.run(ClientCommunicatorAdmin.java:174)\n\tat java.lang.Thread.run(Thread.java:745)\n\n   Locked ownable synchronizers:\n\t- None\n\n""JMX server connection t')","[1518712, 1518994]"
"('FilterBuilder.java', 'org.reflections.util.FilterBuilder$Include', 'apply', 'com\\.github\\.olivergondza\\.dumpling.*', 'com/github/olivergondza/dumpling/TestThread.class')","[71756, 91128, 116724, 136096, 157535, 176907, 196912, 216284, 236289, 254248, 273660, 294002, 313430, 333772, 353291, 373633, 393152, 413494, 432922, 453264, 480958, 500330, 520335, 539707, 559712, 579084, 599089, 618461, 638466, 657838, 677843, 695802, 718982, 742262, 766013, 789307, 814654, 837934, 861214, 884494, 907774, 931525, 955290, 992146, 1015426, 1038706, 1061986, 1085266, 1108546, 1131826, 1155577, 1180978, 1204258, 1227538, 1246108, 1264538, 1282968, 1301398, 1319828, 1338258, 1357630, 1377635, 1397007, 1417012, 1434971, 1453441, 1472813, 1498325, 1517697, 1548206, 1567578, 1586036, 1604466, 1623838, 1642296, 1660726, 1680098, 1700537, 1730725, 1748684, 1767100, 1786472, 1812122, 1830552, 1849924, 1868382, 1886812, 1905242, 1924143, 1942587, 1961488, 1979932, 1998362, 2017263, 2035707, 2055079, 2073537, 2091967, 2109926, 2132300, 2151672, 2175168, 2194540, 2228376, 2247748, 2273344, 2292716, 2331354, 2351211, 2374974, 2394831]"
"('FilterBuilder.java', 'org.reflections.util.FilterBuilder$Include', 'apply', 'com\\.github\\.olivergondza\\.dumpling.*', 'com.github.olivergondza.dumpling.cli.ThreaddumpCommand.class')","[59197, 77909, 104165, 122877, 144976, 163688, 184353, 203065, 223730, 242019, 260441, 280123, 300211, 319893, 340072, 359754, 379933, 399615, 419703, 439385, 468399, 487111, 507776, 526488, 547153, 565865, 586530, 605242, 625907, 644619, 665284, 683573, 703123, 726403, 749824, 773448, 798795, 822075, 845355, 868635, 891915, 915336, 939101, 976287, 999567, 1022847, 1046127, 1069407, 1092687, 1115967, 1139388, 1165119, 1188399, 1211679, 1233549, 1251979, 1270409, 1288839, 1307269, 1325699, 1344411, 1365076, 1383788, 1404453, 1422742, 1440882, 1459594, 1485766, 1504478, 1535647, 1554359, 1573477, 1591907, 1610619, 1629737, 1648167, 1666879, 1687978, 1718166, 1736455, 1754541, 1773253, 1799563, 1817993, 1836705, 1855823, 1874253, 1892683, 1911254, 1930028, 1948599, 1967373, 1985803, 2004374, 2023148, 2041860, 2060978, 2079408, 2097697, 2119741, 2138453, 2162609, 2181321, 2215817, 2234529, 2260785, 2279497, 2318465, 2337662, 2362085, 2381282]"
"('ThreadDumpFactory.java', 'com.github.olivergondza.dumpling.factory.ThreadDumpFactory', 'initHeader', '#\\d+', '[0x00007f414e38d000]')","[2308033, 2308059, 2310078, 2310104, 2312123, 2312149, 2353388, 2353424, 2355743, 2355769, 2397008, 2397044]"
"('FilterBuilder.java', 'org.reflections.util.FilterBuilder$Include', 'apply', 'com\\.github\\.olivergondza\\.dumpling.*', 'com.github.olivergondza.dumpling.model.ThreadLock$Monitor.class')","[63961, 82923, 108929, 127891, 149740, 168702, 189117, 208079, 228494, 246658, 265455, 285387, 305225, 325157, 345086, 365018, 384947, 404879, 424717, 444649, 473163, 492125, 512540, 531502, 551917, 570879, 591294, 610256, 630671, 649633, 670048, 688212, 709137, 732417, 755963, 779462, 804809, 828089, 851369, 874649, 897929, 921475, 945240, 982301, 1005581, 1028861, 1052141, 1075421, 1098701, 1121981, 1145527, 1171133, 1194413, 1217693, 1238313, 1256743, 1275173, 1293603, 1312033, 1330463, 1349425, 1369840, 1388802, 1409217, 1427381, 1445646, 1464608, 1490530, 1509492, 1540411, 1559373, 1578241, 1596671, 1615633, 1634501, 1652931, 1671893, 1692742, 1722930, 1741094, 1759305, 1778267, 1804327, 1822757, 1841719, 1860587, 1879017, 1897447, 1916143, 1934792, 1953488, 1972137, 1990567, 2009263, 2027912, 2046874, 2065742, 2084172, 2102336, 2124505, 2143467, 2167373, 2186335, 2220581, 2239543, 2265549, 2284511, 2323354, 2342801, 2366974, 2386421]"
"('FilterBuilder.java', 'org.reflections.util.FilterBuilder$Include', 'apply', 'com\\.github\\.olivergondza\\.dumpling.*', 'com/github/olivergondza/dumpling/factory/ThreadDumpFactoryVendorTest$1.class')","[58048, 76700, 103016, 121668, 143827, 162479, 183204, 201856, 222581, 240900, 259232, 278854, 299002, 318624, 338863, 358485, 378724, 398346, 418494, 438116, 467250, 485902, 506627, 525279, 546004, 564656, 585381, 604033, 624758, 643410, 664135, 682454, 701674, 724954, 748345, 771999, 797346, 820626, 843906, 867186, 890466, 913857, 937622, 974838, 998118, 1021398, 1044678, 1067958, 1091238, 1114518, 1137909, 1163670, 1186950, 1210230, 1232400, 1250830, 1269260, 1287690, 1306120, 1324550, 1343202, 1363927, 1382579, 1403304, 1421623, 1439733, 1458385, 1484617, 1503269, 1534498, 1553150, 1572328, 1590758, 1609410, 1628588, 1647018, 1665670, 1686829, 1717017, 1735336, 1753392, 1772044, 1798414, 1816844, 1835496, 1854674, 1873104, 1891534, 1910075, 1928879, 1947420, 1966224, 1984654, 2003195, 2021999, 2040651, 2059829, 2078259, 2096578, 2118592, 2137244, 2161460, 2180112, 2214668, 2233320, 2259636, 2278288, 2317286, 2336423, 2360906, 2380043]"
"('Description.java', 'org.junit.runner.Description', 'methodAndClassNamePatternGroupOrDefault', '([\\s\\S]*)\\((.*)\\)', 'groovyNativeArgsVar(com.github.olivergondza.dumpling.cli.GroovyCommandTest)')",[1122]
"('Scanner.java', 'java.util.Scanner', 'getCompleteTokenInBuffer', '(?s).*', '""JMX client heartbeat 4"" daemon prio=10 tid=0x7fd6b80aa800 nid=4268\n   java.lang.Thread.State: TIMED_WAITING (sleeping)\n\tat java.lang.Thread.sleep(Native Method)\n\tat com.sun.jmx.remote.internal.ClientCommunicatorAdmin$Checker.run(ClientCommunicatorAdmin.java:174)\n\tat java.lang.Thread.run(Thread.java:745)\n\n""JMX server connection timeout 27"" daemon prio=10 tid=0x7fd67c00d000 nid=4267\n   java.lang.Thread.State: TIMED_WAITING (on object monitor)\n\tat java.lang.Object.wait(Native Method)\n\t- waiting on <0x707d97cd0> (a [I)\n\tat com.sun.jmx.remote.internal.ServerCommunicatorAdmin$Timeout.run(ServerCommunicatorAdmin.java:168)\n\tat java.lang.Thread.run(Thread.java:745)\n\n""JMX client heartbeat 3"" daemon prio=10 tid=0x7fd6b82e4800 nid=4163\n   java.lang.Thread.State: TIMED_WAITING (sleeping)\n\tat java.lang.Thread.sleep(Native Method)\n\tat com.sun.jmx.remote.internal.ClientCommunicatorAdmin$Checker.run(ClientCommunicatorAdmin.java:174)\n\tat java.lang.Thread.run(Thread.java:745)\n\n""JMX server connection timeout 23"" daemon prio=10 ')","[1528124, 1528168, 1528212]"
"('ThreadDumpFactory.java', 'com.github.olivergondza.dumpling.factory.ThreadDumpFactory', 'initHeader', '#\\d+', '[0x00007f14cebce000]')","[5623, 5657]"
"('FilterBuilder.java', 'org.reflections.util.FilterBuilder$Include', 'apply', 'com\\.github\\.olivergondza\\.dumpling.*', 'com.github.olivergondza.dumpling.factory.ThreadDumpFactoryVendorTest.reacquireMonitorAfterWait.groovy')","[57299, 75911, 102267, 120879, 143078, 161690, 182455, 201067, 221832, 240171, 258443, 278025, 298213, 317795, 338074, 357656, 377935, 397517, 417705, 437287, 466501, 485113, 505878, 524490, 545255, 563867, 584632, 603244, 624009, 642621, 663386, 681725, 700725, 724005, 747376, 771050, 796397, 819677, 842957, 866237, 889517, 912888, 936653, 973889, 997169, 1020449, 1043729, 1067009, 1090289, 1113569, 1136940, 1162721, 1186001, 1209281, 1231651, 1250081, 1268511, 1286941, 1305371, 1323801, 1342413, 1363178, 1381790, 1402555, 1420894, 1438984, 1457596, 1483868, 1502480, 1533749, 1552361, 1571579, 1590009, 1608621, 1627839, 1646269, 1664881, 1686080, 1716268, 1734607, 1752643, 1771255, 1797665, 1816095, 1834707, 1853925, 1872355, 1890785, 1909306, 1928130, 1946651, 1965475, 1983905, 2002426, 2021250, 2039862, 2059080, 2077510, 2095849, 2117843, 2136455, 2160711, 2179323, 2213919, 2232531, 2258887, 2277499, 2316517, 2335614, 2360137, 2379234]"
"('Description.java', 'org.junit.runner.Description', 'methodAndClassNamePatternGroupOrDefault', '([\\s\\S]*)\\((.*)\\)', 'groovyFindAll(com.github.olivergondza.dumpling.cli.GroovyRuntimeTest)')",[594]
"('FilterBuilder.java', 'org.reflections.util.FilterBuilder$Include', 'apply', 'com\\.github\\.olivergondza\\.dumpling.*', 'com/github/olivergondza/dumpling/query/SingleThreadSetQuery.class')","[66556, 85654, 111524, 130622, 152335, 171433, 191712, 210810, 231089, 249185, 268186, 288254, 307956, 328024, 347817, 367885, 387678, 407746, 427448, 447516, 475758, 494856, 515135, 534233, 554512, 573610, 593889, 612987, 633266, 652364, 672643, 690739, 712412, 735692, 759306, 782737, 808084, 831364, 854644, 877924, 901204, 924818, 948583, 985576, 1008856, 1032136, 1055416, 1078696, 1101976, 1125256, 1148870, 1174408, 1197688, 1220968, 1240908, 1259338, 1277768, 1296198, 1314628, 1333058, 1352156, 1372435, 1391533, 1411812, 1429908, 1448241, 1467339, 1493125, 1512223, 1543006, 1562104, 1580836, 1599266, 1618364, 1637096, 1655526, 1674624, 1695337, 1725525, 1743621, 1761900, 1780998, 1806922, 1825352, 1844450, 1863182, 1881612, 1900042, 1918806, 1937387, 1956151, 1974732, 1993162, 2011926, 2030507, 2049605, 2068337, 2086767, 2104863, 2127100, 2146198, 2169968, 2189066, 2223176, 2242274, 2268144, 2287242, 2326017, 2345600, 2369637, 2389220]"
"('Description.java', 'org.junit.runner.Description', 'methodAndClassNamePatternGroupOrDefault', '([\\s\\S]*)\\((.*)\\)', 'toStringWithTraces(com.github.olivergondza.dumpling.query.DeadlocksTest)')",[1716]
"('FilterBuilder.java', 'org.reflections.util.FilterBuilder$Exclude', 'apply', 'java.lang.Object', 'java.util.Comparator')","[59659, 67703, 78395, 86861, 104627, 112671, 123363, 131829, 145438, 153482, 164174, 172640, 184815, 192859, 203551, 212017, 224192, 232236, 242469, 250302, 260927, 269393, 280633, 289521, 300697, 309163, 320403, 329291, 340558, 349024, 360264, 369152, 380419, 388885, 400125, 409013, 420189, 428655, 439895, 448783, 468861, 476905, 487597, 496063, 508238, 516282, 526974, 535440, 547615, 555659, 566351, 574817, 586992, 595036, 605728, 614194, 626369, 634413, 645105, 653571, 665746, 673790, 684023, 691856, 703705, 713859, 726985, 737139, 750418, 760783, 774030, 784184, 799377, 809531, 822657, 832811, 845937, 856091, 869217, 879371, 892497, 902651, 915930, 926295, 939695, 950060, 976869, 987023, 1000149, 1010303, 1023429, 1033583, 1046709, 1056863, 1069989, 1080143, 1093269, 1103423, 1116549, 1126703, 1139982, 1150347, 1165701, 1175855, 1188981, 1199135, 1212261, 1222415, 1234011, 1242055, 1252441, 1260485, 1270871, 1278915, 1289301, 1297345, 1307731, 1315775, 1326161, 1334205, 1344897, 1353363, 1365538, 1373582, 1384274, 1392740, 1404915, 1412959, 1423192, 1431025, 1441344, 1449388, 1460080, 1468546, 1486228, 1494272, 1504964, 1513430, 1536109, 1544153, 1554845, 1563311, 1573939, 1581983, 1592369, 1600413, 1611105, 1619571, 1630199, 1638243, 1648629, 1656673, 1667365, 1675831, 1688440, 1696484, 1718628, 1726672, 1736905, 1744738, 1755003, 1763047, 1773739, 1782205, 1800025, 1808069, 1818455, 1826499, 1837191, 1845657, 1856285, 1864329, 1874715, 1882759, 1893145, 1901189, 1911728, 1919983, 1930490, 1938534, 1949073, 1957328, 1967835, 1975879, 1986265, 1994309, 2004848, 2013103, 2023610, 2031654, 2042346, 2050812, 2061440, 2069484, 2079870, 2087914, 2098147, 2105980, 2120203, 2128247, 2138939, 2147405, 2163071, 2171115, 2181807, 2190273, 2216279, 2224323, 2235015, 2243481, 2261247, 2269291, 2279983, 2288449, 2318939, 2327194, 2338160, 2346837, 2362559, 2370814, 2381780, 2390457]"
"('FilterBuilder.java', 'org.reflections.util.FilterBuilder$Include', 'apply', 'com\\.github\\.olivergondza\\.dumpling.*', 'com.github.olivergondza.dumpling.factory.PidRuntimeFactory$UnsupportedJdk.class')","[68915, 88137, 113883, 133105, 154694, 173916, 194071, 213293, 233448, 251482, 270669, 290861, 310439, 330631, 350300, 370492, 390161, 410353, 429931, 450123, 478117, 497339, 517494, 536716, 556871, 576093, 596248, 615470, 635625, 654847, 675002, 693036, 715391, 738671, 762347, 785716, 811063, 834343, 857623, 880903, 904183, 927859, 951624, 988555, 1011835, 1035115, 1058395, 1081675, 1104955, 1128235, 1151911, 1177387, 1200667, 1223947, 1243267, 1261697, 1280127, 1298557, 1316987, 1335417, 1354639, 1374794, 1394016, 1414171, 1432205, 1450600, 1469822, 1495484, 1514706, 1545365, 1564587, 1583195, 1601625, 1620847, 1639455, 1657885, 1677107, 1697696, 1727884, 1745918, 1764259, 1783481, 1809281, 1827711, 1846933, 1865541, 1883971, 1902401, 1921227, 1939746, 1958572, 1977091, 1995521, 2014347, 2032866, 2052088, 2070696, 2089126, 2107160, 2129459, 2148681, 2172327, 2191549, 2225535, 2244757, 2270503, 2289725, 2328438, 2348145, 2372058, 2391765]"
"('Description.java', 'org.junit.runner.Description', 'methodAndClassNamePatternGroupOrDefault', '([\\s\\S]*)\\((.*)\\)', 'sleeping(com.github.olivergondza.dumpling.factory.ThreadDumpFactoryVendorTest)')",[88]
"('FilterBuilder.java', 'org.reflections.util.FilterBuilder$Exclude', 'apply', 'java.lang.Object', 'java.lang.annotation.Annotation')","[69907, 89181, 114875, 134149, 155686, 174960, 195063, 214337, 234440, 252448, 271713, 291957, 311483, 331727, 351344, 371588, 391205, 411449, 430975, 451219, 479109, 498383, 518486, 537760, 557863, 577137, 597240, 616514, 636617, 655891, 675994, 694002, 716643, 739923, 763625, 786968, 812315, 835595, 858875, 882155, 905435, 929137, 952902, 989807, 1013087, 1036367, 1059647, 1082927, 1106207, 1129487, 1153189, 1178639, 1201919, 1225199, 1244259, 1262689, 1281119, 1299549, 1317979, 1336409, 1355683, 1375786, 1395060, 1415163, 1433171, 1451592, 1470866, 1496476, 1515750, 1546357, 1565631, 1584187, 1602617, 1621891, 1640447, 1658877, 1678151, 1698688, 1728876, 1746884, 1765251, 1784525, 1810273, 1828703, 1847977, 1866533, 1884963, 1903393, 1922245, 1940738, 1959590, 1978083, 1996513, 2015365, 2033858, 2053132, 2071688, 2090118, 2108126, 2130451, 2149725, 2173319, 2192593, 2226527, 2245801, 2271495, 2290769, 2329456, 2349215, 2373076, 2392835]"
"('FilterBuilder.java', 'org.reflections.util.FilterBuilder$Include', 'apply', 'com\\.github\\.olivergondza\\.dumpling.*', 'com.github.olivergondza.dumpling.model.ProcessThread$Builder.class')","[64799, 83805, 109767, 128773, 150578, 169584, 189955, 208961, 229332, 247474, 266337, 286313, 306107, 326083, 345968, 365944, 385829, 405805, 425599, 445575, 474001, 493007, 513378, 532384, 552755, 571761, 592132, 611138, 631509, 650515, 670886, 689028, 710195, 733475, 757043, 780520, 805867, 829147, 852427, 875707, 898987, 922555, 946320, 983359, 1006639, 1029919, 1053199, 1076479, 1099759, 1123039, 1146607, 1172191, 1195471, 1218751, 1239151, 1257581, 1276011, 1294441, 1312871, 1331301, 1350307, 1370678, 1389684, 1410055, 1428197, 1446484, 1465490, 1491368, 1510374, 1541249, 1560255, 1579079, 1597509, 1616515, 1635339, 1653769, 1672775, 1693580, 1723768, 1741910, 1760143, 1779149, 1805165, 1823595, 1842601, 1861425, 1879855, 1898285, 1917003, 1935630, 1954348, 1972975, 1991405, 2010123, 2028750, 2047756, 2066580, 2085010, 2103152, 2125343, 2144349, 2168211, 2187217, 2221419, 2240425, 2266387, 2285393, 2324214, 2343705, 2367834, 2387325]"
"('ThreadDumpFactory.java', 'com.github.olivergondza.dumpling.factory.ThreadDumpFactory', 'initHeader', '#\\d+', '[0x00007fae58af9000]')","[31483, 31517]"
"('ThreadDumpFactory.java', 'com.github.olivergondza.dumpling.factory.ThreadDumpFactory', 'initHeader', '#\\d+', '[0x00007fd6f8152000]')","[963401, 963452]"
"('FilterBuilder.java', 'org.reflections.util.FilterBuilder$Include', 'apply', 'com\\.github\\.olivergondza\\.dumpling.*', 'com/github/olivergondza/dumpling/model/ProcessThread$2.class')","[65948, 85014, 110916, 129982, 151727, 170793, 191104, 210170, 230481, 248593, 267546, 287582, 307316, 327352, 347177, 367213, 387038, 407074, 426808, 446844, 475150, 494216, 514527, 533593, 553904, 572970, 593281, 612347, 632658, 651724, 672035, 690147, 711644, 734924, 758522, 781969, 807316, 830596, 853876, 877156, 900436, 924034, 947799, 984808, 1008088, 1031368, 1054648, 1077928, 1101208, 1124488, 1148086, 1173640, 1196920, 1220200, 1240300, 1258730, 1277160, 1295590, 1314020, 1332450, 1351516, 1371827, 1390893, 1411204, 1429316, 1447633, 1466699, 1492517, 1511583, 1542398, 1561464, 1580228, 1598658, 1617724, 1636488, 1654918, 1673984, 1694729, 1724917, 1743029, 1761292, 1780358, 1806314, 1824744, 1843810, 1862574, 1881004, 1899434, 1918182, 1936779, 1955527, 1974124, 1992554, 2011302, 2029899, 2048965, 2067729, 2086159, 2104271, 2126492, 2145558, 2169360, 2188426, 2222568, 2241634, 2267536, 2286602, 2325393, 2344944, 2369013, 2388564]"
"('ThreadDumpFactory.java', 'com.github.olivergondza.dumpling.factory.ThreadDumpFactory', 'initHeader', '#\\d+', '[0x00007f14f4053000]')","[7836, 7870]"
"('Scanner.java', 'java.util.Scanner', 'getCompleteTokenInBuffer', '(?s).*', '2014-08-24 09:36:21\nFull thread dump OpenJDK 64-Bit Server VM (24.65-b04 mixed mode):\n\n""a"" prio=10 tid=0x00007f41602f8000 nid=0x7cd2 waiting on condition [0x00007f414e58f000]\n   java.lang.Thread.State: TIMED_WAITING (sleeping)\n\tat java.lang.Thread.sleep(Native Method)\n\tat com.github.olivergondza.dumpling.Util.pause(Util.java:48)\n\tat com.github.olivergondza.dumpling.query.BlockingTreeTest$1.run(BlockingTreeTest.java:37)\n\t- locked <0x00000007d750e1e0> (a com.github.olivergondza.dumpling.query.BlockingTreeTest$1)\n\n""aa"" prio=10 tid=0x00007f416030c000 nid=0x7cd3 waiting for monitor entry [0x00007f414e48e000]\n   java.lang.Thread.State: BLOCKED (on object monitor)\n\tat com.github.olivergondza.dumpling.query.BlockingTreeTest$2.run(BlockingTreeTest.java:48)\n\t- waiting to lock <0x00000007d750e1e0> (a com.github.olivergondza.dumpling.query.BlockingTreeTest$1)\n\t- locked <0x00000007d75111d8> (a com.github.olivergondza.dumpling.query.BlockingTreeTest$2)\n\n""aaa"" prio=10 tid=0x00007f416030e800 nid=0x7cd5 waiting for monitor en')","[2306892, 2306933, 2307186, 2308937, 2308978, 2309231, 2310982, 2311023, 2311276, 2351837, 2351888, 2352231, 2354602, 2354643, 2354896, 2395457, 2395508, 2395851]"
"('FilterBuilder.java', 'org.reflections.util.FilterBuilder$Include', 'apply', 'com\\.github\\.olivergondza\\.dumpling.*', 'com/github/olivergondza/dumpling/query/TopContendersCommand.class')","[58162, 76820, 103130, 121788, 143941, 162599, 183318, 201976, 222695, 241011, 259352, 278980, 299122, 318750, 338983, 358611, 378844, 398472, 418614, 438242, 467364, 486022, 506741, 525399, 546118, 564776, 585495, 604153, 624872, 643530, 664249, 682565, 701818, 725098, 748492, 772143, 797490, 820770, 844050, 867330, 890610, 914004, 937769, 974982, 998262, 1021542, 1044822, 1068102, 1091382, 1114662, 1138056, 1163814, 1187094, 1210374, 1232514, 1250944, 1269374, 1287804, 1306234, 1324664, 1343322, 1364041, 1382699, 1403418, 1421734, 1439847, 1458505, 1484731, 1503389, 1534612, 1553270, 1572442, 1590872, 1609530, 1628702, 1647132, 1665790, 1686943, 1717131, 1735447, 1753506, 1772164, 1798528, 1816958, 1835616, 1854788, 1873218, 1891648, 1910192, 1928993, 1947537, 1966338, 1984768, 2003312, 2022113, 2040771, 2059943, 2078373, 2096689, 2118706, 2137364, 2161574, 2180232, 2214782, 2233440, 2259750, 2278408, 2317403, 2336546, 2361023, 2380166]"
"('ThreadDumpFactory.java', 'com.github.olivergondza.dumpling.factory.ThreadDumpFactory', 'initHeader', '#\\d+', '[0x00007fd8052d1000]')","[37982, 38016]"
"('FilterBuilder.java', 'org.reflections.util.FilterBuilder$Include', 'apply', 'com\\.github\\.olivergondza\\.dumpling.*', 'com.github.olivergondza.dumpling.factory.ThreadDumpFactoryVendorTest$Runner.class')","[56025, 74569, 100993, 119537, 141804, 160348, 181181, 199725, 220558, 238931, 257101, 276615, 296871, 316385, 336732, 356246, 376593, 396107, 416363, 435877, 465227, 483771, 504604, 523148, 543981, 562525, 583358, 601902, 622735, 641279, 662112, 680485, 699111, 722391, 745728, 769436, 794783, 818063, 841343, 864623, 887903, 911240, 935005, 972275, 995555, 1018835, 1042115, 1065395, 1088675, 1111955, 1135292, 1161107, 1184387, 1207667, 1230377, 1248807, 1267237, 1285667, 1304097, 1322527, 1341071, 1361904, 1380448, 1401281, 1419654, 1437710, 1456254, 1482594, 1501138, 1532475, 1551019, 1570305, 1588735, 1607279, 1626565, 1644995, 1663539, 1684806, 1714994, 1733367, 1751369, 1769913, 1796391, 1814821, 1833365, 1852651, 1871081, 1889511, 1907998, 1926856, 1945343, 1964201, 1982631, 2001118, 2019976, 2038520, 2057806, 2076236, 2094609, 2116569, 2135113, 2159437, 2177981, 2212645, 2231189, 2257613, 2276157, 2315209, 2334238, 2358829, 2377858]"
"('FilterBuilder.java', 'org.reflections.util.FilterBuilder$Include', 'apply', 'com\\.github\\.olivergondza\\.dumpling.*', 'com.github.olivergondza.dumpling.groovy.GroovyInterpretterConfig.class')","[69485, 88737, 114453, 133705, 155264, 174516, 194641, 213893, 234018, 252037, 271269, 291491, 311039, 331261, 350900, 371122, 390761, 410983, 430531, 450753, 478687, 497939, 518064, 537316, 557441, 576693, 596818, 616070, 636195, 655447, 675572, 693591, 716111, 739391, 763082, 786436, 811783, 835063, 858343, 881623, 904903, 928594, 952359, 989275, 1012555, 1035835, 1059115, 1082395, 1105675, 1128955, 1152646, 1178107, 1201387, 1224667, 1243837, 1262267, 1280697, 1299127, 1317557, 1335987, 1355239, 1375364, 1394616, 1414741, 1432760, 1451170, 1470422, 1496054, 1515306, 1545935, 1565187, 1583765, 1602195, 1621447, 1640025, 1658455, 1677707, 1698266, 1728454, 1746473, 1764829, 1784081, 1809851, 1828281, 1847533, 1866111, 1884541, 1902971, 1921812, 1940316, 1959157, 1977661, 1996091, 2014932, 2033436, 2052688, 2071266, 2089696, 2107715, 2130029, 2149281, 2172897, 2192149, 2226105, 2245357, 2271073, 2290325, 2329023, 2348760, 2372643, 2392380]"
"('FilterBuilder.java', 'org.reflections.util.FilterBuilder$Include', 'apply', 'com\\.github\\.olivergondza\\.dumpling.*', 'com/github/olivergondza/dumpling/cli/GrepCommandTest.class')","[55036, 73528, 100004, 118496, 140815, 159307, 180192, 198684, 219569, 237968, 256060, 275522, 295830, 315292, 335691, 355153, 375552, 395014, 415322, 434784, 464238, 482730, 503615, 522107, 542992, 561484, 582369, 600861, 621746, 640238, 661123, 679522, 697862, 721142, 744453, 768187, 793534, 816814, 840094, 863374, 886654, 909965, 933730, 971026, 994306, 1017586, 1040866, 1064146, 1087426, 1110706, 1134017, 1159858, 1183138, 1206418, 1229388, 1247818, 1266248, 1284678, 1303108, 1321538, 1340030, 1360915, 1379407, 1400292, 1418691, 1436721, 1455213, 1481605, 1500097, 1531486, 1549978, 1569316, 1587746, 1606238, 1625576, 1644006, 1662498, 1683817, 1714005, 1732404, 1750380, 1768872, 1795402, 1813832, 1832324, 1851662, 1870092, 1888522, 1906983, 1925867, 1944328, 1963212, 1981642, 2000103, 2018987, 2037479, 2056817, 2075247, 2093646, 2115580, 2134072, 2158448, 2176940, 2211656, 2230148, 2256624, 2275116, 2314194, 2333171, 2357814, 2376791]"
"('FilterBuilder.java', 'org.reflections.util.FilterBuilder$Include', 'apply', 'com\\.github\\.olivergondza\\.dumpling.*', 'com.github.olivergondza.dumpling.factory.ThreadDumpFactoryVendorTest.synchronizerDeadlock.groovy')","[56515, 75085, 101483, 120053, 142294, 160864, 181671, 200241, 221048, 239408, 257617, 277157, 297387, 316927, 337248, 356788, 377109, 396649, 416879, 436419, 465717, 484287, 505094, 523664, 544471, 563041, 583848, 602418, 623225, 641795, 662602, 680962, 699731, 723011, 746361, 770056, 795403, 818683, 841963, 865243, 888523, 911873, 935638, 972895, 996175, 1019455, 1042735, 1066015, 1089295, 1112575, 1135925, 1161727, 1185007, 1208287, 1230867, 1249297, 1267727, 1286157, 1304587, 1323017, 1341587, 1362394, 1380964, 1401771, 1420131, 1438200, 1456770, 1483084, 1501654, 1532965, 1551535, 1570795, 1589225, 1607795, 1627055, 1645485, 1664055, 1685296, 1715484, 1733844, 1751859, 1770429, 1796881, 1815311, 1833881, 1853141, 1871571, 1890001, 1908501, 1927346, 1945846, 1964691, 1983121, 2001621, 2020466, 2039036, 2058296, 2076726, 2095086, 2117059, 2135629, 2159927, 2178497, 2213135, 2231705, 2258103, 2276673, 2315712, 2334767, 2359332, 2378387]"
"('FilterBuilder.java', 'org.reflections.util.FilterBuilder$Include', 'apply', 'com\\.github\\.olivergondza\\.dumpling.*', 'com.github.olivergondza.dumpling.cli.HelpCommand$1.class')","[59579, 78311, 104547, 123279, 145358, 164090, 184735, 203467, 224112, 242391, 260843, 280545, 300613, 320315, 340474, 360176, 380335, 400037, 420105, 439807, 468781, 487513, 508158, 526890, 547535, 566267, 586912, 605644, 626289, 645021, 665666, 683945, 703605, 726885, 750316, 773930, 799277, 822557, 845837, 869117, 892397, 915828, 939593, 976769, 1000049, 1023329, 1046609, 1069889, 1093169, 1116449, 1139880, 1165601, 1188881, 1212161, 1233931, 1252361, 1270791, 1289221, 1307651, 1326081, 1344813, 1365458, 1384190, 1404835, 1423114, 1441264, 1459996, 1486148, 1504880, 1536029, 1554761, 1573859, 1592289, 1611021, 1630119, 1648549, 1667281, 1688360, 1718548, 1736827, 1754923, 1773655, 1799945, 1818375, 1837107, 1856205, 1874635, 1893065, 1911646, 1930410, 1948991, 1967755, 1986185, 2004766, 2023530, 2042262, 2061360, 2079790, 2098069, 2120123, 2138855, 2162991, 2181723, 2216199, 2234931, 2261167, 2279899, 2318857, 2338074, 2362477, 2381694]"
"('Description.java', 'org.junit.runner.Description', 'methodAndClassNamePatternGroupOrDefault', '([\\s\\S]*)\\((.*)\\)', 'porcelain(com.github.olivergondza.dumpling.cli.ThreaddumpCommandTest)')",[374]
"('FilterBuilder.java', 'org.reflections.util.FilterBuilder$Include', 'apply', 'com\\.github\\.olivergondza\\.dumpling.*', 'com.github.olivergondza.dumpling.cli.command.groovy.usage')","[59733, 78473, 104701, 123441, 145512, 164252, 184889, 203629, 224266, 242541, 261005, 280715, 300775, 320485, 340636, 360346, 380497, 400207, 420267, 439977, 468935, 487675, 508312, 527052, 547689, 566429, 587066, 605806, 626443, 645183, 665820, 684095, 703799, 727079, 750514, 774124, 799471, 822751, 846031, 869311, 892591, 916026, 939791, 976963, 1000243, 1023523, 1046803, 1070083, 1093363, 1116643, 1140078, 1165795, 1189075, 1212355, 1234085, 1252515, 1270945, 1289375, 1307805, 1326235, 1344975, 1365612, 1384352, 1404989, 1423264, 1441418, 1460158, 1486302, 1505042, 1536183, 1554923, 1574013, 1592443, 1611183, 1630273, 1648703, 1667443, 1688514, 1718702, 1736977, 1755077, 1773817, 1800099, 1818529, 1837269, 1856359, 1874789, 1893219, 1911804, 1930564, 1949149, 1967909, 1986339, 2004924, 2023684, 2042424, 2061514, 2079944, 2098219, 2120277, 2139017, 2163145, 2181885, 2216353, 2235093, 2261321, 2280061, 2319015, 2338240, 2362635, 2381860]"
"('FilterBuilder.java', 'org.reflections.util.FilterBuilder$Include', 'apply', 'com\\.github\\.olivergondza\\.dumpling.*', 'com.github.olivergondza.dumpling.model.jvm.JvmThreadSet.class')","[64571, 83565, 109539, 128533, 150350, 169344, 189727, 208721, 229104, 247252, 266097, 286061, 305867, 325831, 345728, 365692, 385589, 405553, 425359, 445323, 473773, 492767, 513150, 532144, 552527, 571521, 591904, 610898, 631281, 650275, 670658, 688806, 709907, 733187, 756749, 780232, 805579, 828859, 852139, 875419, 898699, 922261, 946026, 983071, 1006351, 1029631, 1052911, 1076191, 1099471, 1122751, 1146313, 1171903, 1195183, 1218463, 1238923, 1257353, 1275783, 1294213, 1312643, 1331073, 1350067, 1370450, 1389444, 1409827, 1427975, 1446256, 1465250, 1491140, 1510134, 1541021, 1560015, 1578851, 1597281, 1616275, 1635111, 1653541, 1672535, 1693352, 1723540, 1741688, 1759915, 1778909, 1804937, 1823367, 1842361, 1861197, 1879627, 1898057, 1916769, 1935402, 1954114, 1972747, 1991177, 2009889, 2028522, 2047516, 2066352, 2084782, 2102930, 2125115, 2144109, 2167983, 2186977, 2221191, 2240185, 2266159, 2285153, 2323980, 2343459, 2367600, 2387079]"
"('FilterBuilder.java', 'org.reflections.util.FilterBuilder$Include', 'apply', 'com\\.github\\.olivergondza\\.dumpling.*', 'com.github.olivergondza.dumpling.cli.SourceTest.class')","[55455, 73969, 100423, 118937, 141234, 159748, 180611, 199125, 219988, 238376, 256501, 275985, 296271, 315755, 336132, 355616, 375993, 395477, 415763, 435247, 464657, 483171, 504034, 522548, 543411, 561925, 582788, 601302, 622165, 640679, 661542, 679930, 698391, 721671, 744993, 768716, 794063, 817343, 840623, 863903, 887183, 910505, 934270, 971555, 994835, 1018115, 1041395, 1064675, 1087955, 1111235, 1134557, 1160387, 1183667, 1206947, 1229807, 1248237, 1266667, 1285097, 1303527, 1321957, 1340471, 1361334, 1379848, 1400711, 1419099, 1437140, 1455654, 1482024, 1500538, 1531905, 1550419, 1569735, 1588165, 1606679, 1625995, 1644425, 1662939, 1684236, 1714424, 1732812, 1750799, 1769313, 1795821, 1814251, 1832765, 1852081, 1870511, 1888941, 1907413, 1926286, 1944758, 1963631, 1982061, 2000533, 2019406, 2037920, 2057236, 2075666, 2094054, 2115999, 2134513, 2158867, 2177381, 2212075, 2230589, 2257043, 2275557, 2314624, 2333623, 2358244, 2377243]"
"('Description.java', 'org.junit.runner.Description', 'methodAndClassNamePatternGroupOrDefault', '([\\s\\S]*)\\((.*)\\)', 'com.github.olivergondza.dumpling.query.BlockingTreeTest')","[2398203, 2398225]"
"('FilterBuilder.java', 'org.reflections.util.FilterBuilder$Exclude', 'apply', 'java.lang.Object', 'java.io.FilenameFilter')","[55267, 73771, 100235, 118739, 141046, 159550, 180423, 198927, 219800, 238193, 256303, 275777, 296073, 315547, 335934, 355408, 375795, 395269, 415565, 435039, 464469, 482973, 503846, 522350, 543223, 561727, 582600, 601104, 621977, 640481, 661354, 679747, 698153, 721433, 744750, 768478, 793825, 817105, 840385, 863665, 886945, 910262, 934027, 971317, 994597, 1017877, 1041157, 1064437, 1087717, 1110997, 1134314, 1160149, 1183429, 1206709, 1229619, 1248049, 1266479, 1284909, 1303339, 1321769, 1340273, 1361146, 1379650, 1400523, 1418916, 1436952, 1455456, 1481836, 1500340, 1531717, 1550221, 1569547, 1587977, 1606481, 1625807, 1644237, 1662741, 1684048, 1714236, 1732629, 1750611, 1769115, 1795633, 1814063, 1832567, 1851893, 1870323, 1888753, 1907220, 1926098, 1944565, 1963443, 1981873, 2000340, 2019218, 2037722, 2057048, 2075478, 2093871, 2115811, 2134315, 2158679, 2177183, 2211887, 2230391, 2256855, 2275359, 2314431, 2333420, 2358051, 2377040]"
"('FilterBuilder.java', 'org.reflections.util.FilterBuilder$Include', 'apply', 'com\\.github\\.olivergondza\\.dumpling.*', 'com.github.olivergondza.dumpling.model.ThreadSet.class')","[65563, 84609, 110531, 129577, 151342, 170388, 190719, 209765, 230096, 248218, 267141, 287157, 306911, 326927, 346772, 366788, 386633, 406649, 426403, 446419, 474765, 493811, 514142, 533188, 553519, 572565, 592896, 611942, 632273, 651319, 671650, 689772, 711159, 734439, 758027, 781484, 806831, 830111, 853391, 876671, 899951, 923539, 947304, 984323, 1007603, 1030883, 1054163, 1077443, 1100723, 1124003, 1147591, 1173155, 1196435, 1219715, 1239915, 1258345, 1276775, 1295205, 1313635, 1332065, 1351111, 1371442, 1390488, 1410819, 1428941, 1447248, 1466294, 1492132, 1511178, 1542013, 1561059, 1579843, 1598273, 1617319, 1636103, 1654533, 1673579, 1694344, 1724532, 1742654, 1760907, 1779953, 1805929, 1824359, 1843405, 1862189, 1880619, 1899049, 1917787, 1936394, 1955132, 1973739, 1992169, 2010907, 2029514, 2048560, 2067344, 2085774, 2103896, 2126107, 2145153, 2168975, 2188021, 2222183, 2241229, 2267151, 2286197, 2324998, 2344529, 2368618, 2388149]"
"('FilterBuilder.java', 'org.reflections.util.FilterBuilder$Include', 'apply', 'com\\.github\\.olivergondza\\.dumpling.*', 'com/github/olivergondza/dumpling/DisposeRule$3.class')","[72212, 91608, 117180, 136576, 157991, 177387, 197368, 216764, 236745, 254692, 274140, 294506, 313910, 334276, 353771, 374137, 393632, 413998, 433402, 453768, 481414, 500810, 520791, 540187, 560168, 579564, 599545, 618941, 638922, 658318, 678299, 696246, 719558, 742838, 766601, 789883, 815230, 838510, 861790, 885070, 908350, 932113, 955878, 992722, 1016002, 1039282, 1062562, 1085842, 1109122, 1132402, 1156165, 1181554, 1204834, 1228114, 1246564, 1264994, 1283424, 1301854, 1320284, 1338714, 1358110, 1378091, 1397487, 1417468, 1435415, 1453897, 1473293, 1498781, 1518177, 1548662, 1568058, 1586492, 1604922, 1624318, 1642752, 1661182, 1680578, 1700993, 1731181, 1749128, 1767556, 1786952, 1812578, 1831008, 1850404, 1868838, 1887268, 1905698, 1924611, 1943043, 1961956, 1980388, 1998818, 2017731, 2036163, 2055559, 2073993, 2092423, 2110370, 2132756, 2152152, 2175624, 2195020, 2228832, 2248228, 2273800, 2293196, 2331822, 2351703, 2375442, 2395323]"
"('FilterBuilder.java', 'org.reflections.util.FilterBuilder$Include', 'apply', 'com\\.github\\.olivergondza\\.dumpling.*', 'com/github/olivergondza/dumpling/query/TopContenders.class')","[67432, 86576, 112400, 131544, 153211, 172355, 192588, 211732, 231965, 250038, 269108, 289222, 308878, 328992, 348739, 368853, 388600, 408714, 428370, 448484, 476634, 495778, 516011, 535155, 555388, 574532, 594765, 613909, 634142, 653286, 673519, 691592, 713518, 736798, 760435, 783843, 809190, 832470, 855750, 879030, 902310, 925947, 949712, 986682, 1009962, 1033242, 1056522, 1079802, 1103082, 1126362, 1149999, 1175514, 1198794, 1222074, 1241784, 1260214, 1278644, 1297074, 1315504, 1333934, 1353078, 1373311, 1392455, 1412688, 1430761, 1449117, 1468261, 1494001, 1513145, 1543882, 1563026, 1581712, 1600142, 1619286, 1637972, 1656402, 1675546, 1696213, 1726401, 1744474, 1762776, 1781920, 1807798, 1826228, 1845372, 1864058, 1882488, 1900918, 1919705, 1938263, 1957050, 1975608, 1994038, 2012825, 2031383, 2050527, 2069213, 2087643, 2105716, 2127976, 2147120, 2170844, 2189988, 2224052, 2243196, 2269020, 2288164, 2326916, 2346545, 2370536, 2390165]"
"('Scanner.java', 'java.util.Scanner', 'getCompleteTokenInBuffer', '(?s).*', '""thread\nname"" prio=10 tid=0x00007f8b40552800 nid=0xfce in Object.wait() [0x00007f8b3881e000]\n   java.lang.Thread.State: WAITING (on object monitor)\n\tat java.lang.Object.wait(Native Method)\n\t- waiting on <0x00000007aec550e8> (a java.lang.Object)\n\tat java.lang.Object.wait(Object.java:503)\n\tat java_lang_Object$wait.call(Unknown Source)\n\tat dumpling-script.pauseHere(dumpling-script:10)\n\t- locked <0x00000007aec550e8> (a java.lang.Object)\n\tat sun.reflect.NativeMethodAccessorImpl.invoke0(Native Method)\n\tat sun.reflect.NativeMethodAccessorImpl.invoke(NativeMethodAccessorImpl.java:57)\n\tat sun.reflect.DelegatingMethodAccessorImpl.invoke(DelegatingMethodAccessorImpl.java:43)\n\tat java.lang.reflect.Method.invoke(Method.java:606)\n\tat org.codehaus.groovy.reflection.CachedMethod.invoke(CachedMethod.java:90)\n\tat groovy.lang.MetaMethod.doMethodInvoke(MetaMethod.java:233)\n\tat groovy.lang.MetaClassImpl.invokeMethod(MetaClassImpl.java:1085)\n\tat org.codehaus.groovy.runtime.ScriptBytecodeAdapter.invokeMethodOnCurrentN(ScriptBytecodeAdapter.java:78)\n\tat dumpling-script.this$dist$invoke$3(dumpling-script)\n\tat dumpling-script$1.methodMissing(dumpling-script)\n\tat sun.reflect.NativeMethodAccessorImpl.invoke0(Native Method)\n\tat sun.reflect.NativeMethodAccessorImpl.invoke(NativeMethodAccessorImpl.java:57)\n\tat sun.reflect.DelegatingMethodAccessorImpl.invoke(DelegatingMethodAccessorImpl.java:43)\n\tat java.lang.reflect.Method.invoke(Method.java:606)\n\tat org.codehaus.groovy.reflection.CachedMethod.invoke(CachedMethod.java:90)\n\tat groovy.lang.MetaClassImpl.invokeMissingMethod(MetaClassImpl.java:837)\n\tat groovy.lang.MetaClassImpl.invokePropertyOrMissing(MetaClassImpl.java:1134)\n\tat groovy.lang.MetaClassImpl.invokeMethod(MetaClassImpl.java:1087)\n\tat groovy.lang.MetaClassImpl.invokeMethod(MetaClassImpl.java:909)\n\tat org.codehaus.groovy.runtime.callsite.PogoMetaClassSite.callCurrent(PogoMetaClassSite.java:66)\n\tat org.codehaus.groovy.runtime.callsite.CallSiteArray.defaultCallCurrent(CallSiteArray.java:49)\n\tat org.codehaus.groovy.runtime.callsite.AbstractCallSite.callCurrent(AbstractCallSite.java:133)\n\tat org.codehaus.groovy.runtime.callsite.AbstractCallSite.callCurrent(AbstractCallSite.java:137)\n\tat dumpling-script$1.run(dumpling-script:18)\n\n   Locked ownable synchronizers:\n\t- None\n\n""Service Thread"" daemon prio=10 tid=0x00007f8b40096800 nid=0xfcc runnable [0x0000000000000000]\n   java.lang.Thread.State: RUNNABLE\n\n   Locked ownable synchronizers:\n\t- None\n\n""C2 CompilerThread1"" daemon prio=10 tid=0x00007f8b40094800 nid=0xfcb waiting on condition [0x0000000000000000]\n   java.lang.Thread.State: RUNNABLE\n\n   Locked ownable synchronizers:\n\t- None\n\n""C2 CompilerThread0"" daemon prio=10 tid=0x00007f8b40091800 nid=0xfca waiting on condition [0x0000000000000000]\n   java.lang.Thread.State: RUNNABLE\n\n   Locked ownable synchronizers:\n\t- None\n\n""Signal Dispatcher"" daemon prio=10 tid=0x00007f8b4008f000 nid=0xfc9 runnable [0x0000000000000000]\n   java.lang.Thread.State: RUNNABLE\n\n   Locked ownable synchronizers:\n\t- None\n\n""Finalizer"" daemon prio=10 tid=0x00007f8b4006e000 nid=0xfc8 in Object.wait() [0x00007f8b3993c000]\n   java.lang.Thread.State: WAITING (on object monitor)\n\tat java.lang.Object.wait(Native Method)\n\t- waiting on <0x00000007b0f08580> (a java.lang.ref.ReferenceQueue$Lock)\n\tat java.lang.ref.ReferenceQueue.remove(ReferenceQueue.java:135)\n\t- locked <0x00000007b0f08580> (a java.lang.ref.ReferenceQueue$Lock)\n\tat java.lang.ref.ReferenceQueue.remove(ReferenceQueue.java:151)\n\tat java.lang.ref.Finalizer$FinalizerThread.run(Finalizer.java:209)\n\n   Locked ownable synchronizers:\n\t- None\n\n""Reference Handler"" daemon prio=10 tid=0x00007f8b4006c000 nid=0xfc7 in Object.wait() [0x00007f8b39a3d000]\n   java.lang.Thread.State: WAITING (on object monitor)\n\tat java.lang.Object.wait(Native Method)\n\t- waiting on <0x00000007b0f10260> (a java.lang.ref.Reference$Lock)\n\tat java.lang.Object.wait(Object.java:503)\n\tat java.lang.ref.Reference$ReferenceHandler.run(Reference.java:133)\n\t- locked <0x00000007b0f10260> (a java.lang.ref.Reference$Lock)\n\n   Locked ownable synchronizers:\n\t- None\n\n""main"" prio=10 t')","[43249, 43573, 43828, 44221, 44614, 44869, 45193]"
"('FilterBuilder.java', 'org.reflections.util.FilterBuilder$Include', 'apply', 'com\\.github\\.olivergondza\\.dumpling.*', 'jstack.blocking-chain.log')","[70693, 90009, 115661, 134977, 156472, 175788, 195849, 215165, 235226, 253213, 272541, 292827, 312311, 332597, 352172, 372458, 392033, 412319, 431803, 452089, 479895, 499211, 519272, 538588, 558649, 577965, 598026, 617342, 637403, 656719, 676780, 694767, 717639, 740919, 764642, 787964, 813311, 836591, 859871, 883151, 906431, 930154, 953919, 990803, 1014083, 1037363, 1060643, 1083923, 1107203, 1130483, 1154206, 1179635, 1202915, 1226195, 1245045, 1263475, 1281905, 1300335, 1318765, 1337195, 1356511, 1376572, 1395888, 1415949, 1433936, 1452378, 1471694, 1497262, 1516578, 1547143, 1566459, 1584973, 1603403, 1622719, 1641233, 1659663, 1678979, 1699474, 1729662, 1747649, 1766037, 1785353, 1811059, 1829489, 1848805, 1867319, 1885749, 1904179, 1923052, 1941524, 1960397, 1978869, 1997299, 2016172, 2034644, 2053960, 2072474, 2090904, 2108891, 2131237, 2150553, 2174105, 2193421, 2227313, 2246629, 2272281, 2291597, 2330263, 2350064, 2373883, 2393684]"
"('FilterBuilder.java', 'org.reflections.util.FilterBuilder$Include', 'apply', 'com\\.github\\.olivergondza\\.dumpling.*', 'com.github.olivergondza.dumpling.query.Deadlocks.class')","[67315, 86453, 112283, 131421, 153094, 172232, 192471, 211609, 231848, 249924, 268985, 289093, 308755, 328863, 348616, 368724, 388477, 408585, 428247, 448355, 476517, 495655, 515894, 535032, 555271, 574409, 594648, 613786, 634025, 653163, 673402, 691478, 713371, 736651, 760285, 783696, 809043, 832323, 855603, 878883, 902163, 925797, 949562, 986535, 1009815, 1033095, 1056375, 1079655, 1102935, 1126215, 1149849, 1175367, 1198647, 1221927, 1241667, 1260097, 1278527, 1296957, 1315387, 1333817, 1352955, 1373194, 1392332, 1412571, 1430647, 1449000, 1468138, 1493884, 1513022, 1543765, 1562903, 1581595, 1600025, 1619163, 1637855, 1656285, 1675423, 1696096, 1726284, 1744360, 1762659, 1781797, 1807681, 1826111, 1845249, 1863941, 1882371, 1900801, 1919585, 1938146, 1956930, 1975491, 1993921, 2012705, 2031266, 2050404, 2069096, 2087526, 2105602, 2127859, 2146997, 2170727, 2189865, 2223935, 2243073, 2268903, 2288041, 2326796, 2346419, 2370416, 2390039]"
"('FilterBuilder.java', 'org.reflections.util.FilterBuilder$Include', 'apply', 'com\\.github\\.olivergondza\\.dumpling.*', 'com.github.olivergondza.dumpling.query.SingleThreadSetQuery.class')","[66593, 85693, 111561, 130661, 152372, 171472, 191749, 210849, 231126, 249221, 268225, 288295, 307995, 328065, 347856, 367926, 387717, 407787, 427487, 447557, 475795, 494895, 515172, 534272, 554549, 573649, 593926, 613026, 633303, 652403, 672680, 690775, 712459, 735739, 759354, 782784, 808131, 831411, 854691, 877971, 901251, 924866, 948631, 985623, 1008903, 1032183, 1055463, 1078743, 1102023, 1125303, 1148918, 1174455, 1197735, 1221015, 1240945, 1259375, 1277805, 1296235, 1314665, 1333095, 1352195, 1372472, 1391572, 1411849, 1429944, 1448278, 1467378, 1493162, 1512262, 1543043, 1562143, 1580873, 1599303, 1618403, 1637133, 1655563, 1674663, 1695374, 1725562, 1743657, 1761937, 1781037, 1806959, 1825389, 1844489, 1863219, 1881649, 1900079, 1918844, 1937424, 1956189, 1974769, 1993199, 2011964, 2030544, 2049644, 2068374, 2086804, 2104899, 2127137, 2146237, 2170005, 2189105, 2223213, 2242313, 2268181, 2287281, 2326055, 2345640, 2369675, 2389260]"
"('FilterBuilder.java', 'org.reflections.util.FilterBuilder$Include', 'apply', 'com\\.github\\.olivergondza\\.dumpling.*', 'com/github/olivergondza/dumpling/cli/ThreaddumpCommandTest.class')","[55646, 74170, 100614, 119138, 141425, 159949, 180802, 199326, 220179, 238562, 256702, 276196, 296472, 315966, 336333, 355827, 376194, 395688, 415964, 435458, 464848, 483372, 504225, 522749, 543602, 562126, 582979, 601503, 622356, 640880, 661733, 680116, 698632, 721912, 745239, 768957, 794304, 817584, 840864, 864144, 887424, 910751, 934516, 971796, 995076, 1018356, 1041636, 1064916, 1088196, 1111476, 1134803, 1160628, 1183908, 1207188, 1229998, 1248428, 1266858, 1285288, 1303718, 1322148, 1340672, 1361525, 1380049, 1400902, 1419285, 1437331, 1455855, 1482215, 1500739, 1532096, 1550620, 1569926, 1588356, 1606880, 1626186, 1644616, 1663140, 1684427, 1714615, 1732998, 1750990, 1769514, 1796012, 1814442, 1832966, 1852272, 1870702, 1889132, 1907609, 1926477, 1944954, 1963822, 1982252, 2000729, 2019597, 2038121, 2057427, 2075857, 2094240, 2116190, 2134714, 2159058, 2177582, 2212266, 2230790, 2257234, 2275758, 2314820, 2333829, 2358440, 2377449]"
"('FilterBuilder.java', 'org.reflections.util.FilterBuilder$Include', 'apply', 'com\\.github\\.olivergondza\\.dumpling.*', 'jstack.blocking-tree.log')","[70619, 89931, 115587, 134899, 156398, 175710, 195775, 215087, 235152, 253141, 272463, 292745, 312233, 332515, 352094, 372376, 391955, 412237, 431725, 452007, 479821, 499133, 519198, 538510, 558575, 577887, 597952, 617264, 637329, 656641, 676706, 694695, 717545, 740825, 764546, 787870, 813217, 836497, 859777, 883057, 906337, 930058, 953823, 990709, 1013989, 1037269, 1060549, 1083829, 1107109, 1130389, 1154110, 1179541, 1202821, 1226101, 1244971, 1263401, 1281831, 1300261, 1318691, 1337121, 1356433, 1376498, 1395810, 1415875, 1433864, 1452304, 1471616, 1497188, 1516500, 1547069, 1566381, 1584899, 1603329, 1622641, 1641159, 1659589, 1678901, 1699400, 1729588, 1747577, 1765963, 1785275, 1810985, 1829415, 1848727, 1867245, 1885675, 1904105, 1922976, 1941450, 1960321, 1978795, 1997225, 2016096, 2034570, 2053882, 2072400, 2090830, 2108819, 2131163, 2150475, 2174031, 2193343, 2227239, 2246551, 2272207, 2291519, 2330187, 2349984, 2373807, 2393604]"
"('Scanner.java', 'java.util.Scanner', 'getCompleteTokenInBuffer', '(?s).*', '""Reference Handler"" daemon prio=10 tid=0x00007f879006c000 nid=0xeea in Object.wait() [0x00007f878d75a000]\n   java.lang.Thread.State: WAITING (on object monitor)\n\tat java.lang.Object.wait(Native Method)\n\t- waiting on <0x00000007b0f14078> (a java.lang.ref.Reference$Lock)\n\tat java.lang.Object.wait(Object.java:503)\n\tat java.lang.ref.Reference$ReferenceHandler.run(Reference.java:133)\n\t- locked <0x00000007b0f14078> (a java.lang.ref.Reference$Lock)\n\n   Locked ownable synchronizers:\n\t- None\n\n""main"" prio=10 tid=0x00007f8790007800 nid=0xee4 in Object.wait() [0x00007f8799aa1000]\n   java.lang.Thread.State: WAITING (on object monitor)\n\tat java.lang.Object.wait(Native Method)\n\t- waiting on <0x00000007ae938e60> (a java.lang.Object)\n\tat java.lang.Object.wait(Object.java:503)\n\tat java_lang_Object$wait.call(Unknown Source)\n\tat org.codehaus.groovy.runtime.callsite.CallSiteArray.defaultCall(CallSiteArray.java:45)\n\tat org.codehaus.groovy.runtime.callsite.AbstractCallSite.call(AbstractCallSite.java:108)\n\tat org.codehaus.groovy.run')",[27909]
"('FilterBuilder.java', 'org.reflections.util.FilterBuilder$Include', 'apply', 'com\\.github\\.olivergondza\\.dumpling.*', 'com.github.olivergondza.dumpling.model.ThreadStatus.class')","[65067, 84087, 110035, 129055, 150846, 169866, 190223, 209243, 229600, 247735, 266619, 286609, 306389, 326379, 346250, 366240, 386111, 406101, 425881, 445871, 474269, 493289, 513646, 532666, 553023, 572043, 592400, 611420, 631777, 650797, 671154, 689289, 710533, 733813, 757388, 780858, 806205, 829485, 852765, 876045, 899325, 922900, 946665, 983697, 1006977, 1030257, 1053537, 1076817, 1100097, 1123377, 1146952, 1172529, 1195809, 1219089, 1239419, 1257849, 1276279, 1294709, 1313139, 1331569, 1350589, 1370946, 1389966, 1410323, 1428458, 1446752, 1465772, 1491636, 1510656, 1541517, 1560537, 1579347, 1597777, 1616797, 1635607, 1654037, 1673057, 1693848, 1724036, 1742171, 1760411, 1779431, 1805433, 1823863, 1842883, 1861693, 1880123, 1898553, 1917278, 1935898, 1954623, 1973243, 1991673, 2010398, 2029018, 2048038, 2066848, 2085278, 2103413, 2125611, 2144631, 2168479, 2187499, 2221687, 2240707, 2266655, 2285675, 2324489, 2343994, 2368109, 2387614]"
"('FilterBuilder.java', 'org.reflections.util.FilterBuilder$Include', 'apply', 'com\\.github\\.olivergondza\\.dumpling.*', 'com.github.olivergondza.dumpling.Util.class')","[71907, 91287, 116875, 136255, 157686, 177066, 197063, 216443, 236440, 254395, 273819, 294169, 313589, 333939, 353450, 373800, 393311, 413661, 433081, 453431, 481109, 500489, 520486, 539866, 559863, 579243, 599240, 618620, 638617, 657997, 677994, 695949, 719173, 742453, 766208, 789498, 814845, 838125, 861405, 884685, 907965, 931720, 955485, 992337, 1015617, 1038897, 1062177, 1085457, 1108737, 1132017, 1155772, 1181169, 1204449, 1227729, 1246259, 1264689, 1283119, 1301549, 1319979, 1338409, 1357789, 1377786, 1397166, 1417163, 1435118, 1453592, 1472972, 1498476, 1517856, 1548357, 1567737, 1586187, 1604617, 1623997, 1642447, 1660877, 1680257, 1700688, 1730876, 1748831, 1767251, 1786631, 1812273, 1830703, 1850083, 1868533, 1886963, 1905393, 1924298, 1942738, 1961643, 1980083, 1998513, 2017418, 2035858, 2055238, 2073688, 2092118, 2110073, 2132451, 2151831, 2175319, 2194699, 2228527, 2247907, 2273495, 2292875, 2331509, 2351374, 2375129, 2394994]"
"('ThreadDumpFactory.java', 'com.github.olivergondza.dumpling.factory.ThreadDumpFactory', 'initHeader', '#\\d+', 'in')","[3423, 3457, 3681, 3715, 5485, 5519, 7100, 7134, 7423, 7457, 7698, 7732, 10878, 10912, 11156, 11190, 14169, 14203, 14427, 14461, 17564, 17598, 17823, 17857, 20856, 20890, 21114, 21148, 22994, 23028, 24326, 24360, 24584, 24618, 27685, 27719, 27944, 27978, 28225, 28259, 31086, 31120, 31345, 31379, 31620, 31654, 34439, 34473, 34697, 34731, 37844, 37878, 38104, 38138, 40989, 41023, 41248, 41282, 41522, 41556, 43284, 43318, 44904, 44938, 45228, 45262, 45503, 45537, 48704, 48738, 48963, 48997, 52101, 52135, 52360, 52394, 52638, 52672, 454748, 454787, 455293, 455332, 456633, 456672, 456943, 456982, 460711, 460750, 461070, 461109, 956156, 956207, 957019, 957070, 957882, 957933, 958745, 958796, 959434, 959485, 961134, 961185, 961528, 961579, 966639, 966690, 967070, 967121, 1518750, 1518787, 1519389, 1519426, 1520026, 1520063, 1520547, 1520584, 1521827, 1521864, 1522123, 1522160, 1525737, 1525774, 1526082, 1526119, 2112844, 2112870, 2113043, 2113069, 2155316, 2155351, 2155578, 2155613, 2198184, 2198219, 2198446, 2198481, 2202484, 2202510, 2202683, 2202709]"
"('FilterBuilder.java', 'org.reflections.util.FilterBuilder$Include', 'apply', 'com\\.github\\.olivergondza\\.dumpling.*', 'com/github/olivergondza/dumpling/cli/command.groovysh.usage')","[60724, 79516, 105692, 124484, 146503, 165295, 185880, 204672, 225257, 243506, 262048, 281810, 301818, 321580, 341679, 361441, 381540, 401302, 421310, 441072, 469926, 488718, 509303, 528095, 548680, 567472, 588057, 606849, 627434, 646226, 666811, 685060, 705050, 728330, 751791, 775375, 800722, 824002, 847282, 870562, 893842, 917303, 941068, 978214, 1001494, 1024774, 1048054, 1071334, 1094614, 1117894, 1141355, 1167046, 1190326, 1213606, 1235076, 1253506, 1271936, 1290366, 1308796, 1327226, 1346018, 1366603, 1385395, 1405980, 1424229, 1442409, 1461201, 1487293, 1506085, 1537174, 1555966, 1575004, 1593434, 1612226, 1631264, 1649694, 1668486, 1689505, 1719693, 1737942, 1756068, 1774860, 1801090, 1819520, 1838312, 1857350, 1875780, 1894210, 1912821, 1931555, 1950166, 1968900, 1987330, 2005941, 2024675, 2043467, 2062505, 2080935, 2099184, 2121268, 2140060, 2164136, 2182928, 2217344, 2236136, 2262312, 2281104, 2320032, 2339309, 2363652, 2382929]"
"('Scanner.java', 'java.util.Scanner', 'getCompleteTokenInBuffer', '(?s).*', '""pool-1-thread-1"" daemon prio=10 tid=0x00007fd6fc43d800 nid=0xdc7 runnable [0x00007fd6f8153000]\n   java.lang.Thread.State: RUNNABLE\n\tat java.io.FileInputStream.readBytes(Native Method)\n\tat java.io.FileInputStream.read(FileInputStream.java:272)\n\tat java.io.BufferedInputStream.read1(BufferedInputStream.java:273)\n\tat java.io.BufferedInputStream.read(BufferedInputStream.java:334)\n\t- locked <0x00000007b2d59138> (a java.lang.UNIXProcess$ProcessPipeInputStream)\n\tat sun.nio.cs.StreamDecoder.readBytes(StreamDecoder.java:283)\n\tat sun.nio.cs.StreamDecoder.implRead(StreamDecoder.java:325)\n\tat sun.nio.cs.StreamDecoder.read(StreamDecoder.java:177)\n\t- locked <0x00000007b2d5d408> (a java.io.InputStreamReader)\n\tat java.io.InputStreamReader.read(InputStreamReader.java:184)\n\tat java.io.Reader.read(Reader.java:100)\n\tat java.util.Scanner.readInput(Scanner.java:849)\n\tat java.util.Scanner.hasNext(Scanner.java:1384)\n\tat com.github.olivergondza.dumpling.factory.ThreadDumpFactory.fromStream(ThreadDumpFactory.java:118)\n\tat com.github.olivergondza.dumpling.factory.PidRuntimeFactory.createRuntime(PidRuntimeFactory.java:191)\n\tat com.github.olivergondza.dumpling.factory.PidRuntimeFactory.fromProcess(PidRuntimeFactory.java:85)\n\tat com.github.olivergondza.dumpling.factory.PidRuntimeFactory.fromProcess(PidRuntimeFactory.java:101)\n\tat com.github.olivergondza.dumpling.cli.Factories$Pid.createRuntime(Factories.java:114)\n\tat com.github.olivergondza.dumpling.cli.Factories$Pid.createRuntime(Factories.java:98)\n\tat com.github.olivergondza.dumpling.cli.Main$ProcessRuntimeOptionHandler.parseArguments(Main.java:137)\n\tat org.kohsuke.args4j.CmdLineParser.parseArgument(CmdLineParser.java:520)\n\tat com.github.olivergondza.dumpling.cli.CliCommandOptionHandler.parseArguments(CliCommandOptionHandler.java:63)\n\tat org.kohsuke.args4j.CmdLineParser.parseArgument(CmdLineParser.java:520)\n\tat com.github.olivergondza.dumpling.cli.Main.run(Main.java:73)\n\tat com.github.olivergondza.dumpling.cli.AbstractCliTest.run(AbstractCliTest.java:51)\n\tat com.github.olivergondza.dumpling.cli.SourceTest.invokeCommand(SourceTest.java:114)\n\tat sun.reflect.NativeMethodAccessorImpl.invoke0(Native Method)\n\tat sun.reflect.NativeMethodAccessorImpl.invoke(NativeMethodAccessorImpl.java:57)\n\tat sun.reflect.DelegatingMethodAccessorImpl.invoke(DelegatingMethodAccessorImpl.java:43)\n\tat java.lang.reflect.Method.invoke(Method.java:606)\n\tat org.junit.runners.model.FrameworkMethod$1.runReflectiveCall(FrameworkMethod.java:50)\n\tat org.junit.internal.runners.model.ReflectiveCallable.run(ReflectiveCallable.java:12)\n\tat org.junit.runners.model.FrameworkMethod.invokeExplosively(FrameworkMethod.java:47)\n\tat org.junit.internal.runners.statements.InvokeMethod.evaluate(InvokeMethod.java:17)\n\tat com.github.olivergondza.dumpling.DisposeRule$3.evaluate(DisposeRule.java:71)\n\tat org.junit.rules.RunRules.evaluate(RunRules.java:20)\n\tat org.junit.runners.ParentRunner.runLeaf(ParentRunner.java:325)\n\tat org.junit.runners.BlockJUnit4ClassRunner.runChild(BlockJUnit4ClassRunner.java:78)\n\tat org.junit.runners.BlockJUnit4ClassRunner.runChild(BlockJUnit4ClassRunner.java:57)\n\tat org.junit.runners.ParentRunner$3.run(ParentRunner.java:290)\n\tat org.apache.maven.surefire.junitcore.pc.Scheduler$1.run(Scheduler.java:393)\n\tat java.util.concurrent.Executors$RunnableAdapter.call(Executors.java:471)\n\tat java.util.concurrent.FutureTask.run(FutureTask.java:262)\n\tat java.util.concurrent.ThreadPoolExecutor.runWorker(ThreadPoolExecutor.java:1145)\n\tat java.util.concurrent.ThreadPoolExecutor$Worker.run(ThreadPoolExecutor.java:615)\n\tat java.lang.Thread.run(Thread.java:745)\n\n   Locked ownable synchronizers:\n\t- <0x0000000707005858> (a java.util.concurrent.ThreadPoolExecutor$Worker)\n\n""surefire-forkedjvm-command-thread"" daemon prio=10 tid=0x00007fd6fc311800 nid=0xdc6 runnable [0x00007fd6f825f000]\n   java.lang.Thread.State: RUNNABLE\n\tat java.io.FileInputStream.readBytes(Native Method)\n\tat java.io.FileInputStream.read(FileInputStream.java:272)\n\tat java.io.BufferedInputStream.fill(BufferedInputStream.java:235)\n\tat java.io.BufferedInputStream.read(BufferedInputStre')",[458237]
"('FilterBuilder.java', 'org.reflections.util.FilterBuilder$Include', 'apply', 'com\\.github\\.olivergondza\\.dumpling.*', 'com/github/olivergondza/dumpling/factory/ThreadDumpFactoryVendorTest/parkedTimed.groovy')","[57710, 76344, 102678, 121312, 143489, 162123, 182866, 201500, 222243, 240571, 258876, 278480, 298646, 318250, 338507, 358111, 378368, 397972, 418138, 437742, 466912, 485546, 506289, 524923, 545666, 564300, 585043, 603677, 624420, 643054, 663797, 682125, 701246, 724526, 747908, 771571, 796918, 820198, 843478, 866758, 890038, 913420, 937185, 974410, 997690, 1020970, 1044250, 1067530, 1090810, 1114090, 1137472, 1163242, 1186522, 1209802, 1232062, 1250492, 1268922, 1287352, 1305782, 1324212, 1342846, 1363589, 1382223, 1402966, 1421294, 1439395, 1458029, 1484279, 1502913, 1534160, 1552794, 1571990, 1590420, 1609054, 1628250, 1646680, 1665314, 1686491, 1716679, 1735007, 1753054, 1771688, 1798076, 1816506, 1835140, 1854336, 1872766, 1891196, 1909728, 1928541, 1947073, 1965886, 1984316, 2002848, 2021661, 2040295, 2059491, 2077921, 2096249, 2118254, 2136888, 2161122, 2179756, 2214330, 2232964, 2259298, 2277932, 2316939, 2336058, 2360559, 2379678]"
"('FilterBuilder.java', 'org.reflections.util.FilterBuilder$Include', 'apply', 'com\\.github\\.olivergondza\\.dumpling.*', 'com.github.olivergondza.dumpling.model.ProcessThread$Predicate.class')","[64953, 83967, 109921, 128935, 150732, 169746, 190109, 209123, 229486, 247624, 266499, 286483, 306269, 326253, 346130, 366114, 385991, 405975, 425761, 445745, 474155, 493169, 513532, 532546, 552909, 571923, 592286, 611300, 631663, 650677, 671040, 689178, 710389, 733669, 757241, 780714, 806061, 829341, 852621, 875901, 899181, 922753, 946518, 983553, 1006833, 1030113, 1053393, 1076673, 1099953, 1123233, 1146805, 1172385, 1195665, 1218945, 1239305, 1257735, 1276165, 1294595, 1313025, 1331455, 1350469, 1370832, 1389846, 1410209, 1428347, 1446638, 1465652, 1491522, 1510536, 1541403, 1560417, 1579233, 1597663, 1616677, 1635493, 1653923, 1672937, 1693734, 1723922, 1742060, 1760297, 1779311, 1805319, 1823749, 1842763, 1861579, 1880009, 1898439, 1917161, 1935784, 1954506, 1973129, 1991559, 2010281, 2028904, 2047918, 2066734, 2085164, 2103302, 2125497, 2144511, 2168365, 2187379, 2221573, 2240587, 2266541, 2285555, 2324372, 2343871, 2367992, 2387491]"
"('ThreadDumpFactory.java', 'com.github.olivergondza.dumpling.factory.ThreadDumpFactory', 'initHeader', '#\\d+', '[0x00007fe37fdf6000]')","[9620, 9654]"
"('Scanner.java', 'java.util.Scanner', 'getCompleteTokenInBuffer', '(?s).*', '""Finalizer"" daemon prio=10 tid=0x00007f106c06e000 nid=0x1008 in Object.wait() [0x00007f10688f7000]\n   java.lang.Thread.State: WAITING (on object monitor)\n\tat java.lang.Object.wait(Native Method)\n\t- waiting on <0x00000007b0f08728> (a java.lang.ref.ReferenceQueue$Lock)\n\tat java.lang.ref.ReferenceQueue.remove(ReferenceQueue.java:135)\n\t- locked <0x00000007b0f08728> (a java.lang.ref.ReferenceQueue$Lock)\n\tat java.lang.ref.ReferenceQueue.remove(ReferenceQueue.java:151)\n\tat java.lang.ref.Finalizer$FinalizerThread.run(Finalizer.java:209)\n\n   Locked ownable synchronizers:\n\t- None\n\n""Reference Handler"" daemon prio=10 tid=0x00007f106c06c000 nid=0x1007 in Object.wait() [0x00007f10689f8000]\n   java.lang.Thread.State: WAITING (on object monitor)\n\tat java.lang.Object.wait(Native Method)\n\t- waiting on <0x00000007b0f100d0> (a java.lang.ref.Reference$Lock)\n\tat java.lang.Object.wait(Object.java:503)\n\tat java.lang.ref.Reference$ReferenceHandler.run(Reference.java:133)\n\t- locked <0x00000007b0f100d0> (a java.lang.ref.Reference$Lock)')",[52066]
"('FilterBuilder.java', 'org.reflections.util.FilterBuilder$Include', 'apply', 'com\\.github\\.olivergondza\\.dumpling.*', 'jstack.contention.log')","[70471, 89775, 115439, 134743, 156250, 175554, 195627, 214931, 235004, 252997, 272307, 292581, 312077, 332351, 351938, 372212, 391799, 412073, 431569, 451843, 479673, 498977, 519050, 538354, 558427, 577731, 597804, 617108, 637181, 656485, 676558, 694551, 717357, 740637, 764354, 787682, 813029, 836309, 859589, 882869, 906149, 929866, 953631, 990521, 1013801, 1037081, 1060361, 1083641, 1106921, 1130201, 1153918, 1179353, 1202633, 1225913, 1244823, 1263253, 1281683, 1300113, 1318543, 1336973, 1356277, 1376350, 1395654, 1415727, 1433720, 1452156, 1471460, 1497040, 1516344, 1546921, 1566225, 1584751, 1603181, 1622485, 1641011, 1659441, 1678745, 1699252, 1729440, 1747433, 1765815, 1785119, 1810837, 1829267, 1848571, 1867097, 1885527, 1903957, 1922824, 1941302, 1960169, 1978647, 1997077, 2015944, 2034422, 2053726, 2072252, 2090682, 2108675, 2131015, 2150319, 2173883, 2193187, 2227091, 2246395, 2272059, 2291363, 2330035, 2349824, 2373655, 2393444]"
"('FilterBuilder.java', 'org.reflections.util.FilterBuilder$Include', 'apply', 'com\\.github\\.olivergondza\\.dumpling.*', 'com/github/olivergondza/dumpling/cli/Factories.class')","[61484, 80316, 106452, 125284, 147263, 166095, 186640, 205472, 226017, 244246, 262848, 282650, 302618, 322420, 342479, 362281, 382340, 402142, 422110, 441912, 470686, 489518, 510063, 528895, 549440, 568272, 588817, 607649, 628194, 647026, 667571, 685800, 706010, 729290, 752771, 776335, 801682, 824962, 848242, 871522, 894802, 918283, 942048, 979174, 1002454, 1025734, 1049014, 1072294, 1095574, 1118854, 1142335, 1168006, 1191286, 1214566, 1235836, 1254266, 1272696, 1291126, 1309556, 1327986, 1346818, 1367363, 1386195, 1406740, 1424969, 1443169, 1462001, 1488053, 1506885, 1537934, 1556766, 1575764, 1594194, 1613026, 1632024, 1650454, 1669286, 1690265, 1720453, 1738682, 1756828, 1775660, 1801850, 1820280, 1839112, 1858110, 1876540, 1894970, 1913601, 1932315, 1950946, 1969660, 1988090, 2006721, 2025435, 2044267, 2063265, 2081695, 2099924, 2122028, 2140860, 2164896, 2183728, 2218104, 2236936, 2263072, 2281904, 2320812, 2340129, 2364432, 2383749]"
"('Scanner.java', 'java.util.Scanner', 'getCompleteTokenInBuffer', '(?s).*', '""main"" prio=10 tid=0x00007fd808007800 nid=0xf82 runnable [0x00007fd811733000]\n   java.lang.Thread.State: RUNNABLE\n\tat dumpling-script.run(dumpling-script:16)\n\tat groovy.lang.GroovyShell.runScriptOrMainOrTestOrRunnable(GroovyShell.java:258)\n\tat groovy.lang.GroovyShell.run(GroovyShell.java:550)\n\tat com.github.olivergondza.dumpling.cli.GroovyCommand.run(GroovyCommand.java:94)\n\tat com.github.olivergondza.dumpling.cli.Main.run(Main.java:75)\n\tat com.github.olivergondza.dumpling.cli.Main.main(Main.java:58)\n\n   Locked ownable synchronizers:\n\t- None\n\n""VM Thread"" prio=10 tid=0x00007fd808067800 nid=0xf87 runnable \n\n""GC task thread#0 (ParallelGC)"" prio=10 tid=0x00007fd80801d800 nid=0xf83 runnable \n\n""GC task thread#1 (ParallelGC)"" prio=10 tid=0x00007fd80801f800 nid=0xf84 runnable \n\n""GC task thread#2 (ParallelGC)"" prio=10 tid=0x00007fd808021000 nid=0xf85 runnable \n\n""GC task thread#3 (ParallelGC)"" prio=10 tid=0x00007fd808023000 nid=0xf86 runnable \n\n""VM Periodic Task Thread"" prio=10 tid=0x00007fd8080a1800 nid=0xf8e waiting o')","[38331, 38524, 38648, 38772, 38896, 39020]"
"('FilterBuilder.java', 'org.reflections.util.FilterBuilder$Include', 'apply', 'com\\.github\\.olivergondza\\.dumpling.*', 'com/github/olivergondza/dumpling/factory/JmxRuntimeFactory$1.class')","[68080, 87258, 113048, 132226, 153859, 173037, 193236, 212414, 232613, 250669, 269790, 289938, 309560, 329708, 349421, 369569, 389282, 409430, 429052, 449200, 477282, 496460, 516659, 535837, 556036, 575214, 595413, 614591, 634790, 653968, 674167, 692223, 714336, 737616, 761270, 784661, 810008, 833288, 856568, 879848, 903128, 926782, 950547, 987500, 1010780, 1034060, 1057340, 1080620, 1103900, 1127180, 1150834, 1176332, 1199612, 1222892, 1242432, 1260862, 1279292, 1297722, 1316152, 1334582, 1353760, 1373959, 1393137, 1413336, 1431392, 1449765, 1468943, 1494649, 1513827, 1544530, 1563708, 1582360, 1600790, 1619968, 1638620, 1657050, 1676228, 1696861, 1727049, 1745105, 1763424, 1782602, 1808446, 1826876, 1846054, 1864706, 1883136, 1901566, 1920370, 1938911, 1957715, 1976256, 1994686, 2013490, 2032031, 2051209, 2069861, 2088291, 2106347, 2128624, 2147802, 2171492, 2190670, 2224700, 2243878, 2269668, 2288846, 2327581, 2347244, 2371201, 2390864]"
"('Description.java', 'org.junit.runner.Description', 'methodAndClassNamePatternGroupOrDefault', '([\\s\\S]*)\\((.*)\\)', 'jmxLocalConnectViaCli(com.github.olivergondza.dumpling.cli.SourceTest)')",[462]
"('ThreadDumpFactory.java', 'com.github.olivergondza.dumpling.factory.ThreadDumpFactory', 'initHeader', '#\\d+', '[0x00007fd6f825f000]')","[458636, 458675, 963790, 963841, 1523742, 1523779]"
"('Scanner.java', 'java.util.Scanner', 'getCompleteTokenInBuffer', '(?s).*', '2014-06-30 20:54:52\nFull thread dump OpenJDK 64-Bit Server VM (24.60-b09 mixed mode):\n\n""blocked_thread"" prio=10 tid=0x2ad39c16b800 nid=32297\n   java.lang.Thread.State: BLOCKED (on object monitor)\n\tat hudson.model.Queue.getItem(Queue.java:719)\n\t- waiting to lock <0x4063a9378> (a hudson.model.Queue)\n\tat hudson.model.AbstractProject.getQueueItem(AbstractProject.java:927)\n\tat hudson.matrix.DefaultMatrixExecutionStrategyImpl.waitForCompletion(DefaultMatrixExecutionStrategyImpl.java:220)\n\tat hudson.matrix.DefaultMatrixExecutionStrategyImpl.run(DefaultMatrixExecutionStrategyImpl.java:163)\n\tat hudson.matrix.MatrixBuild$MatrixBuildExecution.doRun(MatrixBuild.java:340)\n\tat hudson.model.AbstractBuild$AbstractBuildExecution.run(AbstractBuild.java:499)\n\tat hudson.model.Run.execute(Run.java:1502)\n\tat hudson.matrix.MatrixBuild.run(MatrixBuild.java:289)\n\tat hudson.model.ResourceController.execute(ResourceController.java:88)\n\tat hudson.model.Executor.run(Executor.java:236)\n\tat hudson.model.OneOffExecutor.run(OneOffExecutor.ja')",[1682247]
"('Scanner.java', 'java.util.Scanner', 'getCompleteTokenInBuffer', '(?s).*', '""Handling POST /hudson/job/some_other_job/doRename : ajp-127.0.0.1-8009-24"" daemon prio=10 tid=0x000000005851b800 nid=0x6ac8 waiting for monitor entry [0x00002ad3ed318000]\n   java.lang.Thread.State: BLOCKED (on object monitor)\n\tat hudson.model.ListView.onJobRenamed(ListView.java:250)\n\t- waiting to lock <0x000000040dce6960> (a hudson.model.ListView)\n\tat hudson.plugins.nested_view.NestedView.onJobRenamed(NestedView.java:124)\n\t- locked <0x000000040dce0d68> (a hudson.plugins.nested_view.NestedView)\n\tat jenkins.model.Jenkins.onRenamed(Jenkins.java:2355)\n\tat jenkins.model.Jenkins.onRenamed(Jenkins.java:304)\n\tat hudson.model.AbstractItem.callOnRenamed(AbstractItem.java:308)\n\tat hudson.model.AbstractItem.renameTo(AbstractItem.java:294)\n\t- locked <0x000000049c5f7990> (a hudson.model.FreeStyleProject)\n\t- locked <0x0000000404325338> (a hudson.model.Hudson)\n\tat hudson.model.Job.renameTo(Job.java:507)\n\tat hudson.model.Job.doDoRename(Job.java:1226)\n\tat sun.reflect.GeneratedMethodAccessor1831.invoke(Unknown Source)\n\tat sun.reflect.DelegatingMethodAccessorImpl.invoke(DelegatingMethodAccessorImpl.java:25)\n\tat java.lang.reflect.Method.invoke(Method.java:597)\n\tat org.kohsuke.stapler.Function$InstanceFunction.invoke(Function.java:288)\n\tat org.kohsuke.stapler.interceptor.RequirePOST$Processor.invoke(RequirePOST.java:29)\n\tat org.kohsuke.stapler.Function$InterceptedFunction.invoke(Function.java:389)\n\tat org.kohsuke.stapler.Function.bindAndInvoke(Function.java:151)\n\tat org.kohsuke.stapler.Function.bindAndInvokeAndServeResponse(Function.java:90)\n\tat org.kohsuke.stapler.MetaClass$1.doDispatch(MetaClass.java:111)\n\tat org.kohsuke.stapler.NameBasedDispatcher.dispatch(NameBasedDispatcher.java:53)\n\tat org.kohsuke.stapler.Stapler.tryInvoke(Stapler.java:574)\n\tat org.kohsuke.stapler.Stapler.invoke(Stapler.java:659)\n\tat org.kohsuke.stapler.MetaClass$6.doDispatch(MetaClass.java:241)\n\tat org.kohsuke.stapler.NameBasedDispatcher.dispatch(NameBasedDispatcher.java:53)\n\tat org.kohsuke.stapler.Stapler.tryInvoke(Stapler.java:574)\n\tat org.kohsuke.stapler.Stapler.invoke(Stapler.java:659)\n\tat org.kohsuke.stapler.Stapler.invoke(Stapler.java:488)\n\tat org.kohsuke.stapler.Stapler.service(Stapler.java:162)\n\tat javax.servlet.http.HttpServlet.service(HttpServlet.java:717)\n\tat org.apache.catalina.core.ApplicationFilterChain.internalDoFilter(ApplicationFilterChain.java:290)\n\tat org.apache.catalina.core.ApplicationFilterChain.doFilter(ApplicationFilterChain.java:206)\n\tat hudson.util.PluginServletFilter$1.doFilter(PluginServletFilter.java:95)\n\tat hudson.plugins.audit_trail.AuditTrailFilter.doFilter(AuditTrailFilter.java:66)\n\tat hudson.util.PluginServletFilter$1.doFilter(PluginServletFilter.java:98)\n\tat hudson.util.PluginServletFilter.doFilter(PluginServletFilter.java:87)\n\tat org.apache.catalina.core.ApplicationFilterChain.internalDoFilter(ApplicationFilterChain.java:235)\n\tat org.apache.catalina.core.ApplicationFilterChain.doFilter(ApplicationFilterChain.java:206)\n\tat hudson.security.csrf.CrumbFilter.doFilter(CrumbFilter.java:47)\n\tat org.apache.catalina.core.ApplicationFilterChain.internalDoFilter(ApplicationFilterChain.java:235)\n\tat org.apache.catalina.core.ApplicationFilterChain.doFilter(ApplicationFilterChain.java:206)\n\tat org.jenkinsci.plugins.reverse_proxy_auth.ReverseProxySecurityRealm$1.doFilter(ReverseProxySecurityRealm.java:142)\n\tat hudson.security.HudsonFilter.doFilter(HudsonFilter.java:164)\n\tat org.apache.catalina.core.ApplicationFilterChain.internalDoFilter(ApplicationFilterChain.java:235)\n\tat org.apache.catalina.core.ApplicationFilterChain.doFilter(ApplicationFilterChain.java:206)\n\tat org.kohsuke.stapler.compression.CompressionFilter.doFilter(CompressionFilter.java:50)\n\tat org.apache.catalina.core.ApplicationFilterChain.internalDoFilter(ApplicationFilterChain.java:235)\n\tat org.apache.catalina.core.ApplicationFilterChain.doFilter(ApplicationFilterChain.java:206)\n\tat hudson.util.CharacterEncodingFilter.doFilter(CharacterEncodingFilter.java:81)\n\tat org.apache.catalina.core.ApplicationFilterChain.internalDoFilter(ApplicationFilterChain.java:235)\n\tat org.apache.catalina.core.ApplicationFilterChain.doFilter(ApplicationFilterChain.java:206)\n\tat org.jboss.web.tomcat.filters.ReplyHeaderFilter.doFilter(ReplyHeaderFilter.java:96)\n\tat org.apache.catalina.core.ApplicationFilterChain.internalDoFilter(ApplicationFilterChain.java:235)\n\tat org.apache.catalina.core.ApplicationFilterChain.doFilter(ApplicationFilterChain.java:206)\n\tat org.apache.catalina.core.StandardWrapperValve.invoke(StandardWrapperValve.java:235)\n\tat org.apache.catalina.core.StandardContextValve.invoke(StandardContextValve.java:191)\n\tat org.jboss.web.tomcat.security.SecurityAssociationValve.invoke(SecurityAssociationValve.java:183)\n\tat org.apache.catalina.authenticator.AuthenticatorBase.invoke(AuthenticatorBase.java:442)\n\tat org.jboss.web.tomcat.security.JaccContextValve.invoke(JaccContextValve.java:95)\n\tat org.jboss.web.tomcat.security.SecurityContextEstablishmentValve.process(SecurityContextEstablishmentValve.java:126)\n\tat org.jboss.web.tomcat.security.SecurityContextEstablishmentValve.invoke(SecurityContextEstablishmentValve.java:70)\n\tat org.apache.catalina.core.StandardHostValve.invoke(StandardHostValve.java:127)\n\tat org.apache.catalina.valves.ErrorReportValve.invoke(ErrorReportValve.java:102)\n\tat org.jboss.web.tomcat.service.jca.CachedConnectionValve.invoke(CachedConnectionValve.java:158)\n\tat org.apache.catalina.core.StandardEngineValve.invoke(StandardEngineValve.java:109)\n\tat org.jboss.web.tomcat.service.request.ActiveRequestResponseCacheValve.internalProcess(ActiveRequestResponseCacheValve.java:74)\n\tat org.jboss.web.tomcat.service.request.ActiveRequestResponseCacheValve.invoke(ActiveRequestResponseCacheValve.java:47)\n\tat org.apache.catalina.connector.CoyoteAdapter.service(CoyoteAdapter.java:330)\n\tat org.apache.coyote.ajp.AjpProcessor.process(AjpProcessor.java:437)\n\tat org.apache.coyote.ajp.AjpProtocol$AjpConnectionHandler.process(AjpProtocol.java:385)\n\tat org.apache.tomcat.util.net.JIoEndpoint$Worker.run(JIoEndpoint.java:451)\n\tat java.lang.Thread.run(Thread.java:662)\n\n""VM Thread"" prio=10 tid=0x0000000057f84000 nid=0x684c runnable \n\n""GC task thread#0 (ParallelGC)"" prio=10 tid=0x0000000057f1e800 nid=0x683f runnable \n\n""GC task thread#1 (ParallelGC)"" prio=10 tid=0x0000000057f20800 nid=0x6840 runnable \n\n""GC task thread#2 (ParallelGC)"" prio=10 tid=0x0000000057f22000 nid=0x6841 runnable \n\n""GC task thread#3 (ParallelGC)"" prio=10 tid=0x0000000057f24000 nid=0x6842 runnable \n\n""GC task thread#4 (ParallelGC)"" prio=10 tid=0x0000000057f26000 nid=0x6843 runnable \n\n""GC task thread#5 (ParallelGC)"" prio=10 tid=0x0000000057f27800 nid=0x6844 runnable \n\n""GC task thread#6 (ParallelGC)"" prio=10 tid=0x0000000057f29800 nid=0x6845 runnable \n\n""GC task thread#7 (ParallelGC)"" prio=10 tid=0x0000000057f2b800 nid=0x6846 runnable \n\n""GC task thread#8 (ParallelGC)"" prio=10 tid=0x0000000057f2d000 nid=0x6847 runnable \n\n""GC task thread#9 (ParallelGC)"" prio=10 tid=0x0000000057f2f000 nid=0x6848 runnable \n\n""GC task thread#10 (ParallelGC)"" prio=10 tid=0x0000000057f31000 nid=0x6849 runnable \n\n""GC task thread#11 (ParallelGC)"" prio=10 tid=0x0000000057f32800 nid=0x684a runnable \n\n""GC task thread#12 (ParallelGC)"" prio=10 tid=0x0000000057f34800 nid=0x684b runnable \n\n""VM Periodic Task Thread"" prio=10 tid=0x00002ad3c4104800 nid=0x6856 waiting on condition \n\nJNI global references: 39297\n\n\nFound one Java-level deadlock:\n=============================\n""Handling GET /hudson/job/some_job/ : ajp-127.0.0.1-8009-133"":\n  waiting to lock monitor 0x000000005e85c920 (object 0x000000049c5f7990, a hudson.model.FreeStyleProject),\n  which is held by ""Handling POST /hudson/job/some_other_job/doRename : ajp-127.0.0.1-8009-24""\n""Handling POST /hudson/job/some_other_job/doRename : ajp-127.0.0.1-8009-24"":\n  waiting to lock monitor 0x00002ad440fc9760 (object 0x000000040dce6960, a hudson.model.ListView),\n  which is held by ""Handling POST /hudson/view/some_view/configSubmit : ajp-127.0.0.1-8009-107""\n""Handling POST /hudson/view/some_view/configSubmit : ajp-127.0.0.1-8009-107"":\n  waiting to lock monitor 0x00002ad49487e310 (object 0x0000000404325338, a hudson.model.Hudson),\n  which is held by ""Handling POST /hudson/job/some_other_job/doRename : ajp-127.0.0.1-8009-24""\n\nJava stack information for the threads listed above:\n===================================================\n""Handling GET /hudson/job/some_job/ : ajp-127.0.0.1-8009-133"":\n\tat hudson.model.AbstractProject.getActions(AbstractProject.java:1034)\n\t- waiting to lock <0x000000049c5f7990> (a hudson.model.FreeStyleProject)\n\tat sun.reflect.GeneratedMethodAccessor718.invoke(Unknown Source)\n\tat sun.reflect.DelegatingMethodAccessorImpl.invoke(DelegatingMethodAccessorImpl.java:25)\n\tat java.lang.reflect.Method.invoke(Method.java:597)\n\tat org.apache.commons.jexl.util.PropertyExecutor.execute(PropertyExecutor.java:125)\n\tat org.apache.commons.jexl.util.introspection.UberspectImpl$VelGetterImpl.invoke(UberspectImpl.java:314)\n\tat org.apache.commons.jexl.parser.ASTArrayAccess.evaluateExpr(ASTArrayAccess.java:185)\n\tat org.apache.commons.jexl.parser.ASTIdentifier.execute(ASTIdentifier.java:75)\n\tat org.apache.commons.jexl.parser.ASTReference.execute(ASTReference.java:83)\n\tat org.apache.commons.jexl.parser.ASTReference.value(ASTReference.java:57)\n\tat org.apache.commons.jexl.parser.ASTExpression.value(ASTExpression.java:54)\n\tat org.apache.commons.jexl.parser.ASTElvisNode.value(ASTElvisNode.java:40)\n\tat org.apache.commons.jexl.parser.ASTExpression.value(ASTExpression.java:54)\n\tat org.apache.commons.jexl.parser.ASTExpressionExpression.value(ASTExpressionExpression.java:56)\n\tat org.apache.commons.jexl.ExpressionImpl.evaluate(ExpressionImpl.java:80)\n\tat hudson.ExpressionFactory2$JexlExpression.evaluate(ExpressionFactory2.java:72)\n\tat org.apache.commons.jelly.expression.ExpressionSupport.evaluateRecurse(ExpressionSupport.java:61)\n\tat org.apache.commons.jelly.expression.ExpressionSupport.evaluateAsIterator(ExpressionSupport.java:94)\n\tat org.apache.commons.jelly.tags.core.ForEachTag.doTag(ForEachTag.java:89)\n\tat org.apache.commons.jelly.impl.TagScript.run(TagScript.java:269)\n\tat org.apache.commons.jelly.impl.ScriptBlock.run(ScriptBlock.java:95)\n\tat org.apache.commons.jelly.tags.core.CoreTagLibrary$2.run(CoreTagLibrary.java:105)\n\tat org.kohsuke.stapler.jelly.CallTagLibScript.run(CallTagLibScript.java:119)\n\tat org.apache.commons.jelly.tags.core.CoreTagLibrary$2.run(CoreTagLibrary.java:105)\n\tat org.kohsuke.stapler.jelly.JellyViewScript.run(JellyViewScript.java:81)\n\tat org.kohsuke.stapler.jelly.IncludeTag.doTag(IncludeTag.java:146)\n\tat org.apache.commons.jelly.impl.TagScript.run(TagScript.java:269)\n\tat org.apache.commons.jelly.impl.ScriptBlock.run(ScriptBlock.java:95)\n\tat org.kohsuke.stapler.jelly.CallTagLibScript$1.run(CallTagLibScript.java:98)\n\tat org.apache.commons.jelly.tags.define.InvokeBodyTag.doTag(InvokeBodyTag.java:91)\n\tat org.apache.commons.jelly.impl.TagScript.run(TagScript.java:269)\n\tat org.kohsuke.stapler.jelly.ReallyStaticTagLibrary$1.run(ReallyStaticTagLibrary.java:99)\n\tat org.apache.commons.jelly.tags.core.CoreTagLibrary$2.run(CoreTagLibrary.java:105)\n\tat org.kohsuke.stapler.jelly.CallTagLibScript.run(CallTagLibScript.java:119)\n\tat org.apache.commons.jelly.impl.ScriptBlock.run(ScriptBlock.java:95)\n\tat org.kohsuke.stapler.jelly.CallTagLibScript$1.run(CallTagLibScript.java:98)\n\tat org.apache.commons.jelly.tags.define.InvokeBodyTag.doTag(InvokeBodyTag.java:91)\n\tat org.apache.commons.jelly.impl.TagScript.run(TagScript.java:269)\n\tat org.apache.commons.jelly.tags.core.CoreTagLibrary$1.run(CoreTagLibrary.java:98)\n\tat org.apache.commons.jelly.tags.core.CoreTagLibrary$2.run(CoreTagLibrary.java:105)\n\tat org.kohsuke.stapler.jelly.CallTagLibScript.run(CallTagLibScript.java:119)\n\tat org.apache.commons.jelly.impl.ScriptBlock.run(ScriptBlock.java:95)\n\tat org.apache.commons.jelly.tags.core.CoreTagLibrary$2.run(CoreTagLibrary.java:105)\n\tat org.kohsuke.stapler.jelly.JellyViewScript.run(JellyViewScript.java:81)\n\tat org.kohsuke.stapler.jelly.IncludeTag.doTag(IncludeTag.java:146)\n\tat org.apache.commons.jelly.impl.TagScript.run(TagScript.java:269)\n\tat org.apache.commons.jelly.impl.ScriptBlock.run(ScriptBlock.java:95)\n\tat org.kohsuke.stapler.jelly.CallTagLibScript$1.run(CallTagLibScript.java:98)\n\tat org.apache.commons.jelly.tags.define.InvokeBodyTag.doTag(InvokeBodyTag.java:91)\n\tat org.apache.commons.jelly.impl.TagScript.run(TagScript.java:269)\n\tat org.apache.commons.jelly.impl.ScriptBlock.run(ScriptBlock.java:95)\n\tat org.kohsuke.stapler.jelly.ReallyStaticTagLibrary$1.run(ReallyStaticTagLibrary.java:99)\n\tat org.kohsuke.stapler.jelly.ReallyStaticTagLibrary$1.run(ReallyStaticTagLibrary.java:99)\n\tat org.apache.commons.jelly.impl.ScriptBlock.run(ScriptBlock.java:95)\n\tat org.kohsuke.stapler.jelly.ReallyStaticTagLibrary$1.run(ReallyStaticTagLibrary.java:99)\n\tat org.kohsuke.stapler.jelly.ReallyStaticTagLibrary$1.run(ReallyStaticTagLibrary.java:99)\n\tat org.apache.commons.jelly.impl.ScriptBlock.run(ScriptBlock.java:95)\n\tat org.kohsuke.stapler.jelly.ReallyStaticTagLibrary$1.run(ReallyStaticTagLibrary.java:99)\n\tat org.apache.commons.jelly.impl.ScriptBlock.run(ScriptBlock.java:95)\n\tat org.kohsuke.stapler.jelly.ReallyStaticTagLibrary$1.run(ReallyStaticTagLibrary.java:99)\n\tat org.apache.commons.jelly.impl.ScriptBlock.run(ScriptBlock.java:95)\n\tat org.apache.commons.jelly.tags.core.CoreTagLibrary$2.run(CoreTagLibrary.java:105)\n\tat org.kohsuke.stapler.jelly.CallTagLibScript.run(CallTagLibScript.java:119)\n\tat org.apache.commons.jelly.tags.core.CoreTagLibrary$2.run(CoreTagLibrary.java:105)\n\tat org.kohsuke.stapler.jelly.JellyViewScript.run(JellyViewScript.java:81)\n\tat org.kohsuke.stapler.jelly.DefaultScriptInvoker.invokeScript(DefaultScriptInvoker.java:63)\n\tat org.kohsuke.stapler.jelly.DefaultScriptInvoker.invokeScript(DefaultScriptInvoker.java:53)\n\tat org.kohsuke.stapler.jelly.JellyClassTearOff.serveIndexJelly(JellyClassTearOff.java:107)\n\tat org.kohsuke.stapler.jelly.JellyFacet.handleIndexRequest(JellyFacet.java:127)\n\tat org.kohsuke.stapler.Stapler.tryInvoke(Stapler.java:563)\n\tat org.kohsuke.stapler.Stapler.invoke(Stapler.java:659)\n\tat org.kohsuke.stapler.MetaClass$6.doDispatch(MetaClass.java:241)\n\tat org.kohsuke.stapler.NameBasedDispatcher.dispatch(NameBasedDispatcher.java:53)\n\tat org.kohsuke.stapler.Stapler.tryInvoke(Stapler.java:574)\n\tat org.kohsuke.stapler.Stapler.invoke(Stapler.java:659)\n\tat org.kohsuke.stapler.Stapler.invoke(Stapler.java:488)\n\tat org.kohsuke.stapler.Stapler.service(Stapler.java:162)\n\tat javax.servlet.http.HttpServlet.service(HttpServlet.java:717)\n\tat org.apache.catalina.core.ApplicationFilterChain.internalDoFilter(ApplicationFilterChain.java:290)\n\tat org.apache.catalina.core.ApplicationFilterChain.doFilter(ApplicationFilterChain.java:206)\n\tat hudson.util.PluginServletFilter$1.doFilter(PluginServletFilter.java:95)\n\tat hudson.plugins.audit_trail.AuditTrailFilter.doFilter(AuditTrailFilter.java:66)\n\tat hudson.util.PluginServletFilter$1.doFilter(PluginServletFilter.java:98)\n\tat hudson.util.PluginServletFilter.doFilter(PluginServletFilter.java:87)\n\tat org.apache.catalina.core.ApplicationFilterChain.internalDoFilter(ApplicationFilterChain.java:235)\n\tat org.apache.catalina.core.ApplicationFilterChain.doFilter(ApplicationFilterChain.java:206)\n\tat hudson.security.csrf.CrumbFilter.doFilter(CrumbFilter.java:47)\n\tat org.apache.catalina.core.ApplicationFilterChain.internalDoFilter(ApplicationFilterChain.java:235)\n\tat org.apache.catalina.core.ApplicationFilterChain.doFilter(ApplicationFilterChain.java:206)\n\tat org.jenkinsci.plugins.reverse_proxy_auth.ReverseProxySecurityRealm$1.doFilter(ReverseProxySecurityRealm.java:142)\n\tat hudson.security.HudsonFilter.doFilter(HudsonFilter.java:164)\n\tat org.apache.catalina.core.ApplicationFilterChain.internalDoFilter(ApplicationFilterChain.java:235)\n\tat org.apache.catalina.core.ApplicationFilterChain.doFilter(ApplicationFilterChain.java:206)\n\tat org.kohsuke.stapler.compression.CompressionFilter.doFilter(CompressionFilter.java:50)\n\tat org.apache.catalina.core.ApplicationFilterChain.internalDoFilter(ApplicationFilterChain.java:235)\n\tat org.apache.catalina.core.ApplicationFilterChain.doFilter(ApplicationFilterChain.java:206)\n\tat hudson.util.CharacterEncodingFilter.doFilter(CharacterEncodingFilter.java:81)\n\tat org.apache.catalina.core.ApplicationFilterChain.internalDoFilter(ApplicationFilterCha')","[93169, 93780, 94107, 94434, 94761, 95088, 95415, 95742, 96069, 96396, 96723, 97050, 97377, 97704, 98031, 98358, 98827, 1474830, 1475430, 1475754, 1476078, 1476402, 1476726, 1477050, 1477374, 1477698, 1478022, 1478346, 1478670, 1478994, 1479318, 1479642, 1479966, 1480428, 1703870, 1705086, 1705578, 1706070, 1706562, 1707054, 1707546, 1708038, 1708530, 1709022, 1709514, 1710006, 1710498, 1710990, 1711482, 1711974, 1712828, 1788513, 1789124, 1789451, 1789778, 1790105, 1790432, 1790759, 1791086, 1791413, 1791740, 1792067, 1792394, 1792721, 1793048, 1793375, 1793702, 1794171, 2205361, 2205873, 2206173, 2206473, 2206773, 2207073, 2207373, 2207673, 2207973, 2208273, 2208573, 2208873, 2209173, 2209473, 2209773, 2210073, 2210479, 2249789, 2250400, 2250727, 2251054, 2251381, 2251708, 2252035, 2252362, 2252689, 2253016, 2253343, 2253670, 2253997, 2254324, 2254651, 2254978, 2255447, 2294757, 2295368, 2295695, 2296022, 2296349, 2296676, 2297003, 2297330, 2297657, 2297984, 2298311, 2298638, 2298965, 2299292, 2299619, 2299946, 2300415, 2301679, 2302191, 2302491, 2302791, 2303091, 2303391, 2303691, 2303991, 2304291, 2304591, 2304891, 2305191, 2305491, 2305791, 2306091, 2306391, 2306797]"
"('FilterBuilder.java', 'org.reflections.util.FilterBuilder$Include', 'apply', 'com\\.github\\.olivergondza\\.dumpling.*', 'com/github/olivergondza/dumpling/DisposeRule.class')","[71038, 90372, 116006, 135340, 156817, 176151, 196194, 215528, 235571, 253549, 272904, 293208, 312674, 332978, 352535, 372839, 392396, 412700, 432166, 452470, 480240, 499574, 519617, 538951, 558994, 578328, 598371, 617705, 637748, 657082, 677125, 695103, 718074, 741354, 765086, 788399, 813746, 837026, 860306, 883586, 906866, 930598, 954363, 991238, 1014518, 1037798, 1061078, 1084358, 1107638, 1130918, 1154650, 1180070, 1203350, 1226630, 1245390, 1263820, 1282250, 1300680, 1319110, 1337540, 1356874, 1376917, 1396251, 1416294, 1434272, 1452723, 1472057, 1497607, 1516941, 1547488, 1566822, 1585318, 1603748, 1623082, 1641578, 1660008, 1679342, 1699819, 1730007, 1747985, 1766382, 1785716, 1811404, 1829834, 1849168, 1867664, 1886094, 1904524, 1923406, 1941869, 1960751, 1979214, 1997644, 2016526, 2034989, 2054323, 2072819, 2091249, 2109227, 2131582, 2150916, 2174450, 2193784, 2227658, 2246992, 2272626, 2291960, 2330617, 2350436, 2374237, 2394056]"
