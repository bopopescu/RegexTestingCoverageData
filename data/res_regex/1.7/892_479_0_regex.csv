"('Description.java', 'org.junit.runner.Description', 'methodAndClassNamePatternGroupOrDefault', '(.*)\\((.*)\\)', 'shouldCreateACharacterCompactorForByteModeThree(me.sbio.compactors.CompactorFactoryTest)')","[448, 868]"
"('Description.java', 'org.junit.runner.Description', 'methodAndClassNamePatternGroupOrDefault', '(.*)\\((.*)\\)', 'shouldBuildBarcodeForNumber(me.sbio.jpdf417.PDF417GeneratorTest)')","[347, 805]"
"('Description.java', 'org.junit.runner.Description', 'methodAndClassNamePatternGroupOrDefault', '(.*)\\((.*)\\)', 'shouldCreateATextModeCompactor(me.sbio.compactors.CompactorFactoryTest)')","[469, 889]"
"('Description.java', 'org.junit.runner.Description', 'methodAndClassNamePatternGroupOrDefault', '(.*)\\((.*)\\)', 'shouldBuildBarcodeWithCorrectNumberOfRows(me.sbio.jpdf417.PDF417GeneratorTest)')","[368, 826]"
"('Description.java', 'org.junit.runner.Description', 'methodAndClassNamePatternGroupOrDefault', '(.*)\\((.*)\\)', 'me.sbio.jpdf417.BarcodeBuilderTest')","[181, 1004]"
"('Description.java', 'org.junit.runner.Description', 'methodAndClassNamePatternGroupOrDefault', '(.*)\\((.*)\\)', 'null')",[17]
"('Description.java', 'org.junit.runner.Description', 'methodAndClassNamePatternGroupOrDefault', '(.*)\\((.*)\\)', 'shouldBuildBarcodeWithCorrectNumberOfColumns(me.sbio.jpdf417.PDF417GeneratorTest)')","[242, 700]"
"('Description.java', 'org.junit.runner.Description', 'methodAndClassNamePatternGroupOrDefault', '(.*)\\((.*)\\)', 'me.sbio.compactors.TextModeCompactorTest')","[387, 1420]"
"('Description.java', 'org.junit.runner.Description', 'methodAndClassNamePatternGroupOrDefault', '(.*)\\((.*)\\)', 'shouldBuildBarcodeForNumberWithCorrectNumberOfRows(me.sbio.jpdf417.PDF417GeneratorTest)')","[326, 784]"
"('Description.java', 'org.junit.runner.Description', 'methodAndClassNamePatternGroupOrDefault', '(.*)\\((.*)\\)', 'shouldCreateAByteModeCompactorForByteModeTwo(me.sbio.compactors.CompactorFactoryTest)')","[532, 952]"
"('AbstractSequenceMatcher.java', 'me.sbio.matchers.AbstractSequenceMatcher', 'getSequencePositions', '([0-9]{13,44})', 'Hello, World!')","[1030, 1134, 1342]"
"('AbstractSequenceMatcher.java', 'me.sbio.matchers.AbstractSequenceMatcher', 'getSequencePositions', '([0-9]{13,44})', '6066558945674569')","[1082, 1186, 1238, 1290]"
"('Description.java', 'org.junit.runner.Description', 'methodAndClassNamePatternGroupOrDefault', '(.*)\\((.*)\\)', 'shouldFindANeedleInASortedHaystack(me.sbio.arrays.ArrayUtilTest)')","[57, 553]"
"('Description.java', 'org.junit.runner.Description', 'methodAndClassNamePatternGroupOrDefault', '(.*)\\((.*)\\)', 'shouldBuildBarcodeForNumberWithCorrectNumberOfColumns(me.sbio.jpdf417.PDF417GeneratorTest)')","[305, 763]"
"('Description.java', 'org.junit.runner.Description', 'methodAndClassNamePatternGroupOrDefault', '(.*)\\((.*)\\)', 'shouldHaveCorrectVerticalWhiteSpace(me.sbio.jpdf417.PDF417GeneratorTest)')","[263, 721]"
"('Description.java', 'org.junit.runner.Description', 'methodAndClassNamePatternGroupOrDefault', '(.*)\\((.*)\\)', 'shouldCreateANumberCompactorForNumberMode(me.sbio.compactors.CompactorFactoryTest)')","[490, 910]"
"('Description.java', 'org.junit.runner.Description', 'methodAndClassNamePatternGroupOrDefault', '(.*)\\((.*)\\)', 'shouldCreateTheRightNumberOfRows(me.sbio.jpdf417.BarcodeBuilderTest)')","[202, 679]"
"('Description.java', 'org.junit.runner.Description', 'methodAndClassNamePatternGroupOrDefault', '(.*)\\((.*)\\)', 'me.sbio.arrays.ArrayUtilTest')","[36, 978]"
"('Description.java', 'org.junit.runner.Description', 'methodAndClassNamePatternGroupOrDefault', '(.*)\\((.*)\\)', 'shouldAddModeToArray(me.sbio.compactors.TextModeCompactorTest)')","[408, 847]"
"('Description.java', 'org.junit.runner.Description', 'methodAndClassNamePatternGroupOrDefault', '(.*)\\((.*)\\)', 'me.sbio.compactors.CompactorFactoryTest')","[427, 1442]"
"('Description.java', 'org.junit.runner.Description', 'methodAndClassNamePatternGroupOrDefault', '(.*)\\((.*)\\)', 'shouldThrowIllegalArgumentExceptionWhenHaystackIsNull(me.sbio.arrays.ArrayUtilTest)')","[141, 637]"
"('Description.java', 'org.junit.runner.Description', 'methodAndClassNamePatternGroupOrDefault', '(.*)\\((.*)\\)', 'shouldFindFirstInstanceOfNeedleInHaystackWithDuplicates(me.sbio.arrays.ArrayUtilTest)')","[162, 658]"
"('Description.java', 'org.junit.runner.Description', 'methodAndClassNamePatternGroupOrDefault', '(.*)\\((.*)\\)', 'me.sbio.jpdf417.PDF417GeneratorTest')","[221, 1394]"
"('Description.java', 'org.junit.runner.Description', 'methodAndClassNamePatternGroupOrDefault', '(.*)\\((.*)\\)', 'shouldFindANeedleInAReverseSortedHaystack(me.sbio.arrays.ArrayUtilTest)')","[120, 616]"
"('AbstractSequenceMatcher.java', 'me.sbio.matchers.AbstractSequenceMatcher', 'getSequencePositions', '([\\x09\\x0a\\x0d\\x20-\\x7e]{5,})', 'Hello, World!')","[1056, 1160, 1368]"
"('AbstractSequenceMatcher.java', 'me.sbio.matchers.AbstractSequenceMatcher', 'getSequencePositions', '([\\x09\\x0a\\x0d\\x20-\\x7e]{5,})', '')","[1108, 1212, 1264, 1316]"
"('Description.java', 'org.junit.runner.Description', 'methodAndClassNamePatternGroupOrDefault', '(.*)\\((.*)\\)', 'shouldBuildBarcodeForText(me.sbio.jpdf417.PDF417GeneratorTest)')","[284, 742]"
"('Description.java', 'org.junit.runner.Description', 'methodAndClassNamePatternGroupOrDefault', '(.*)\\((.*)\\)', 'shouldReturnNegativeOneForSearchAcrossEmptyHaystack(me.sbio.arrays.ArrayUtilTest)')","[99, 595]"
"('Description.java', 'org.junit.runner.Description', 'methodAndClassNamePatternGroupOrDefault', '(.*)\\((.*)\\)', 'shouldReturnNegativeOneWhenNeedleIsNotFound(me.sbio.arrays.ArrayUtilTest)')","[78, 574]"
"('Description.java', 'org.junit.runner.Description', 'methodAndClassNamePatternGroupOrDefault', '(.*)\\((.*)\\)', 'shouldCreateAByteModeCompactorForByteModeOne(me.sbio.compactors.CompactorFactoryTest)')","[511, 931]"
