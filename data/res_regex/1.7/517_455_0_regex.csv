"('ScenarioStepsFactory.java', 'net.thucydides.maven.plugin.ScenarioStepsFactory', 'getMatchedStepMethodFor', 'user\\s+save\\s+(.*)\\s+for\\s+use', ""user save 'link' for use"")",[1545]
"('RegexStoryParser.java', 'org.jbehave.core.parsers.RegexStoryParser', 'parseStoryMetaFrom', '.*Meta:(.*?)\\s*(\\Z|Narrative:|GivenStories:).*', '')","[142, 1023]"
"('PatternVariantBuilder.java', 'org.jbehave.core.steps.PatternVariantBuilder', 'variantsFor', '(.*?)?(\\{((.*?)(\\|)?)*?\\})(.*)', 'user should see title with: $titleTable')","[515, 781]"
"('Description.java', 'org.junit.runner.Description', 'methodAndClassNamePatternGroupOrDefault', '(.*)\\((.*)\\)', 'should_create_scenario_steps_class_for_each_story_file(test.WhenGenerateScenarioStepsForEachStoryFileTest)')","[57, 78]"
"('ScenarioStepsFactory.java', 'net.thucydides.maven.plugin.ScenarioStepsFactory', 'getMatchedStepMethodFor', 'I\\s+have\\s+an\\s+implemented\\s+JBehave\\s+scenario\\s+with\\s+one\\s+(.*)', ""I have an implemented JBehave scenario with one 'param'"")",[1477]
"('ScenarioStepsFactory.java', 'net.thucydides.maven.plugin.ScenarioStepsFactory', 'getMatchedStepMethodFor', 'the\\s+scenario\\s+with\\s+two\\s+(.*)\\s+and\\s+(.*)\\s+parameters\\s+also\\s+works', ""state 'кириллица'"")","[1307, 1409]"
"('ScenarioStepsFactory.java', 'net.thucydides.maven.plugin.ScenarioStepsFactory', 'getMatchedStepMethodFor', 'I\\s+have\\s+an\\s+implemented\\s+JBehave\\s+scenario', 'I have an implemented JBehave scenario')",[1239]
"('PatternVariantBuilder.java', 'org.jbehave.core.steps.PatternVariantBuilder', 'variantsFor', '(.*?)?(\\{((.*?)(\\|)?)*?\\})(.*)', 'I have an implemented JBehave scenario with one $parameter')","[363, 629]"
"('Description.java', 'org.junit.runner.Description', 'methodAndClassNamePatternGroupOrDefault', '(.*)\\((.*)\\)', 'test.WhenGenerateScenarioStepsForEachStoryFileTest')","[36, 1737]"
"('ScenarioStepsFactory.java', 'net.thucydides.maven.plugin.ScenarioStepsFactory', 'getMatchedStepMethodFor', 'I\\s+have\\s+an\\s+implemented\\s+JBehave\\s+scenario', ""state 'кириллица'"")","[1341, 1443]"
"('ScenarioStepsFactory.java', 'net.thucydides.maven.plugin.ScenarioStepsFactory', 'getMatchedStepMethodFor', 'user\\s+will\\s+see\\s+custom\\s+(.*)\\s+text', ""user will see custom 'customText' text"")",[1715]
"('ScenarioStepsFactory.java', 'net.thucydides.maven.plugin.ScenarioStepsFactory', 'getMatchedStepMethodFor', 'I\\s+have\\s+an\\s+implemented\\s+JBehave\\s+scenario\\s+with\\s+one\\s+(.*)', ""state 'кириллица'"")","[1273, 1375]"
"('PatternVariantBuilder.java', 'org.jbehave.core.steps.PatternVariantBuilder', 'variantsFor', '(.*?)?(\\{((.*?)(\\|)?)*?\\})(.*)', 'I have an implemented JBehave scenario')","[477, 743]"
"('PatternVariantBuilder.java', 'org.jbehave.core.steps.PatternVariantBuilder', 'variantsFor', '(.*?)?(\\{((.*?)(\\|)?)*?\\})(.*)', 'the scenario with two $first and $second parameters also works')","[401, 667]"
"('ExamplesTable.java', 'org.jbehave.core.model.ExamplesTable', 'stripProperties', '\\{(.*?)\\}\\s*(.*)', '')","[215, 287, 1137]"
"('RegexStoryParser.java', 'org.jbehave.core.parsers.RegexStoryParser', 'parseNarrativeFrom', '.*Narrative:(.*?)\\s*(GivenStories:|Scenario:).*', ""Scenario: old test scenario\n\nGiven I have an implemented JBehave scenario\nGiven state 'кириллица'\nGiven I have an implemented JBehave scenario with one 'param'\nWhen user save 'link' for use\nGiven the scenario with two 'first' and 'second' parameters also works\nThen user should see title with: 'title'\nThen user will see custom 'customText' text"")",[1061]
"('ScenarioStepsFactory.java', 'net.thucydides.maven.plugin.ScenarioStepsFactory', 'getMatchedStepMethodFor', 'I\\s+have\\s+an\\s+implemented\\s+JBehave\\s+scenario\\s+with\\s+one\\s+(.*)', ""the scenario with two 'first' and 'second' parameters also works"")",[1579]
"('ScenarioStepsFactory.java', 'net.thucydides.maven.plugin.ScenarioStepsFactory', 'getMatchedStepMethodFor', ""user\\s+open\\s+'(.*)'"", ""user save 'links' for use"")",[887]
"('ScenarioStepsFactory.java', 'net.thucydides.maven.plugin.ScenarioStepsFactory', 'getMatchedStepMethodFor', 'user\\s+save\\s+(.*)\\s+for\\s+use', ""user save 'links' for use"")",[921]
"('ScenarioStepsFactory.java', 'net.thucydides.maven.plugin.ScenarioStepsFactory', 'getMatchedStepMethodFor', 'I\\s+have\\s+an\\s+implemented\\s+JBehave\\s+scenario\\s+with\\s+one\\s+(.*)', 'I have an implemented JBehave scenario')",[1171]
"('ScenarioStepsFactory.java', 'net.thucydides.maven.plugin.ScenarioStepsFactory', 'getMatchedStepMethodFor', 'user\\s+should\\s+see\\s+title\\s+with:\\s+(.*)', ""user should see title with: 'title'"")",[1647]
"('ScenarioStepsFactory.java', 'net.thucydides.maven.plugin.ScenarioStepsFactory', 'getMatchedStepMethodFor', 'user\\s+should\\s+see\\s+title\\s+with:\\s+(.*)', ""user should see title with: 'titleTable'"")",[955]
"('RegexStoryParser.java', 'org.jbehave.core.parsers.RegexStoryParser', 'parseNarrativeFrom', '.*Narrative:(.*?)\\s*(GivenStories:|Scenario:).*', ""Scenario: old test scenario 2\n\nGiven I have an implemented JBehave scenario with one 'parameter'\nWhen user save 'links' for use\nThen user should see title with: 'titleTable'"")",[176]
"('RegexStoryParser.java', 'org.jbehave.core.parsers.RegexStoryParser', 'findScenarioMeta', '.*Meta:(.*?)\\s*(GivenStories:|\\n!--|\\nThen|\\nWhen|\\nGiven|\\nAnd).*', ""\n\nGiven I have an implemented JBehave scenario with one 'parameter'\nWhen user save 'links' for use\nThen user should see title with: 'titleTable'"")",[251]
"('ScenarioStepsFactory.java', 'net.thucydides.maven.plugin.ScenarioStepsFactory', 'getMatchedStepMethodFor', ""user\\s+open\\s+'(.*)'"", ""user save 'link' for use"")",[1511]
"('ScenarioStepsFactory.java', 'net.thucydides.maven.plugin.ScenarioStepsFactory', 'getMatchedStepMethodFor', 'the\\s+scenario\\s+with\\s+two\\s+(.*)\\s+and\\s+(.*)\\s+parameters\\s+also\\s+works', ""the scenario with two 'first' and 'second' parameters also works"")",[1613]
"('Description.java', 'org.junit.runner.Description', 'methodAndClassNamePatternGroupOrDefault', '(.*)\\((.*)\\)', 'null')",[17]
"('ScenarioStepsFactory.java', 'net.thucydides.maven.plugin.ScenarioStepsFactory', 'getMatchedStepMethodFor', 'I\\s+have\\s+an\\s+implemented\\s+JBehave\\s+scenario\\s+with\\s+one\\s+(.*)', ""I have an implemented JBehave scenario with one 'parameter'"")",[853]
"('RegexStoryParser.java', 'org.jbehave.core.parsers.RegexStoryParser', 'parseDescriptionFrom', '(.*?)(Meta:|Narrative:|Scenario:).*', ""Scenario: old test scenario 2\n\nGiven I have an implemented JBehave scenario with one 'parameter'\nWhen user save 'links' for use\nThen user should see title with: 'titleTable'"")",[112]
"('ScenarioStepsFactory.java', 'net.thucydides.maven.plugin.ScenarioStepsFactory', 'getMatchedStepMethodFor', 'user\\s+should\\s+see\\s+title\\s+with:\\s+(.*)', ""user will see custom 'customText' text"")",[1681]
"('RegexStoryParser.java', 'org.jbehave.core.parsers.RegexStoryParser', 'parseDescriptionFrom', '(.*?)(Meta:|Narrative:|Scenario:).*', ""Scenario: old test scenario\n\nGiven I have an implemented JBehave scenario\nGiven state 'кириллица'\nGiven I have an implemented JBehave scenario with one 'param'\nWhen user save 'link' for use\nGiven the scenario with two 'first' and 'second' parameters also works\nThen user should see title with: 'title'\nThen user will see custom 'customText' text"")",[993]
"('PatternVariantBuilder.java', 'org.jbehave.core.steps.PatternVariantBuilder', 'variantsFor', '(.*?)?(\\{((.*?)(\\|)?)*?\\})(.*)', 'user save $links for use')","[439, 705]"
"('PatternVariantBuilder.java', 'org.jbehave.core.steps.PatternVariantBuilder', 'variantsFor', '(.*?)?(\\{((.*?)(\\|)?)*?\\})(.*)', 'user will see custom $customText text')","[553, 819]"
"('PatternVariantBuilder.java', 'org.jbehave.core.steps.PatternVariantBuilder', 'variantsFor', '(.*?)?(\\{((.*?)(\\|)?)*?\\})(.*)', ""user open '$url'"")","[325, 591]"
"('ScenarioStepsFactory.java', 'net.thucydides.maven.plugin.ScenarioStepsFactory', 'getMatchedStepMethodFor', 'the\\s+scenario\\s+with\\s+two\\s+(.*)\\s+and\\s+(.*)\\s+parameters\\s+also\\s+works', 'I have an implemented JBehave scenario')",[1205]
"('RegexStoryParser.java', 'org.jbehave.core.parsers.RegexStoryParser', 'findScenarioMeta', '.*Meta:(.*?)\\s*(GivenStories:|\\n!--|\\nThen|\\nWhen|\\nGiven|\\nAnd).*', ""\n\nGiven I have an implemented JBehave scenario\nGiven state 'кириллица'\nGiven I have an implemented JBehave scenario with one 'param'\nWhen user save 'link' for use\nGiven the scenario with two 'first' and 'second' parameters also works\nThen user should see title with: 'title'\nThen user will see custom 'customText' text"")",[1101]
