"('Resolver.java', 'org.yaml.snakeyaml.resolver.Resolver', 'resolve', '^$', 'file_tailer')",[9998]
"('Resolver.java', 'org.yaml.snakeyaml.resolver.Resolver', 'resolve', '^(?:~|null|Null|NULL| )$', 'Output configurations.')",[16189]
"('Description.java', 'org.junit.runner.Description', 'parseMethod', '(.*)\\((.*)\\)', 'testBuildFile(com.github.aureliano.evtbridge.core.helper.FileHelperTest)')",[707]
"('Resolver.java', 'org.yaml.snakeyaml.resolver.Resolver', 'resolve', '^$', 'scheduler')","[13230, 13486]"
"('Description.java', 'org.junit.runner.Description', 'parseMethod', '(.*)\\((.*)\\)', 'testPropertiesToJson(com.github.aureliano.evtbridge.core.helper.DataHelperTest)')",[790]
"('Resolver.java', 'org.yaml.snakeyaml.resolver.Resolver', 'resolve', '^(?:yes|Yes|YES|no|No|NO|true|True|TRUE|false|False|FALSE|on|On|ON|off|Off|OFF)$', 'file_input')",[9760]
"('Resolver.java', 'org.yaml.snakeyaml.resolver.Resolver', 'resolve', '^$', 'description')","[4461, 5485, 5963, 6831, 7667, 8145, 8623, 12306, 12848, 13294, 14028, 14570, 15315, 16125, 16603]"
"('Description.java', 'org.junit.runner.Description', 'parseMethod', '(.*)\\((.*)\\)', 'testReadResource(com.github.aureliano.evtbridge.core.helper.FileHelperTest)')",[665]
"('Resolver.java', 'org.yaml.snakeyaml.resolver.Resolver', 'resolve', '^$', 'startupTime')",[6767]
"('Description.java', 'org.junit.runner.Description', 'parseMethod', '(.*)\\((.*)\\)', 'testExecutePeriodicallyScheduler(com.github.aureliano.evtbridge.core.doc.JsonSchemaBuilderTest)')",[1395]
"('Resolver.java', 'org.yaml.snakeyaml.resolver.Resolver', 'resolve', '^(?:yes|Yes|YES|no|No|NO|true|True|TRUE|false|False|FALSE|on|On|ON|off|Off|OFF)$', 'The time to delay at first execution.')",[5517]
"('Description.java', 'org.junit.runner.Description', 'parseMethod', '(.*)\\((.*)\\)', 'testMatches(com.github.aureliano.evtbridge.core.matcher.SingleLineMatcherTest)')",[1727]
"('Description.java', 'org.junit.runner.Description', 'getClassName', '(.*)\\((.*)\\)', 'testFormat(com.github.aureliano.evtbridge.core.formatter.PlainTextFormatterTest)')",[1954]
"('Description.java', 'org.junit.runner.Description', 'parseMethod', '(.*)\\((.*)\\)', 'testId(com.github.aureliano.evtbridge.core.schedule.ExecutePeriodicallySchedulerTest)')",[249]
"('Resolver.java', 'org.yaml.snakeyaml.resolver.Resolver', 'resolve', '^(?:yes|Yes|YES|no|No|NO|true|True|TRUE|false|False|FALSE|on|On|ON|off|Off|OFF)$', 'The hour which it has to execute: 0-23')",[8655]
"('Resolver.java', 'org.yaml.snakeyaml.resolver.Resolver', 'resolve', '^$', 'microseconds')",[5223]
"('Resolver.java', 'org.yaml.snakeyaml.resolver.Resolver', 'resolve', '^(?:~|null|Null|NULL| )$', 'external_command')",[9624]
"('Description.java', 'org.junit.runner.Description', 'parseMethod', '(.*)\\((.*)\\)', 'testBuildOutput(com.github.aureliano.evtbridge.core.doc.JsonSchemaBuilderTest)')",[1479]
"('Resolver.java', 'org.yaml.snakeyaml.resolver.Resolver', 'resolve', '^(?:~|null|Null|NULL| )$', 'A string describing a date time following the pattern yyyy-MM-dd HH:mm:ss')",[6863]
"('Resolver.java', 'org.yaml.snakeyaml.resolver.Resolver', 'resolve', '^(?:~|null|Null|NULL| )$', 'startupTime')",[6736]
"('Description.java', 'org.junit.runner.Description', 'parseMethod', '(.*)\\((.*)\\)', 'testBuildRoot(com.github.aureliano.evtbridge.core.doc.JsonSchemaBuilderTest)')",[1500]
"('Description.java', 'org.junit.runner.Description', 'parseMethod', '(.*)\\((.*)\\)', 'testSecondValidation(com.github.aureliano.evtbridge.core.schedule.ExecutePeriodicallyAtSpecificTimeSchedulerTest)')",[374]
"('Description.java', 'org.junit.runner.Description', 'parseMethod', '(.*)\\((.*)\\)', 'testExecutePeriodicallyAtSpecificTimeScheduler(com.github.aureliano.evtbridge.core.doc.MapSchemaBuilderTest)')",[1103]
"('Resolver.java', 'org.yaml.snakeyaml.resolver.Resolver', 'resolve', '^(?:~|null|Null|NULL| )$', 'integer')","[5805, 6283, 7987, 8465, 8943]"
"('MultiLineMatcherTest.java', 'com.github.aureliano.evtbridge.core.matcher.MultiLineMatcherTest', 'testMatches', '\\d{4}-\\d{2}-\\d{2}\\s\\d{2}:\\d{2}:\\d{2},\\d{3}\\s([\\W\\w\\d](?!\\d{4}-\\d{2}-\\d{2}\\s\\d{2}:\\d{2}:\\d{2},\\d{3}\\s))+', '2015-02-19 00:00:12,269 INFO  [my-app] (ajp-127.0.0.2-8009-386) [br.com.app.my_app.util.LoggingSessionListener]<memory freeMem=""1314.79"" allocatedMem=""3005.12"" maxMem=""5461.38"" totalFreeMem=""3771.04"" sgbdSessions=""0"" webSessions=""47"" loadAverage=""0.31""/>')","[17356, 17380]"
"('MultiLineMatcherTest.java', 'com.github.aureliano.evtbridge.core.matcher.MultiLineMatcherTest', 'testMatches', '\\d{4}-\\d{2}-\\d{2}\\s\\d{2}:\\d{2}:\\d{2},\\d{3}\\s([\\W\\w\\d](?!\\d{4}-\\d{2}-\\d{2}\\s\\d{2}:\\d{2}:\\d{2},\\d{3}\\s))+', '2015-02-19 14:42:25,948 ERROR [br.com.env.my_app.modulo.common.util.MensagensUtil] (ajp-127.0.0.2-8009-314) For input string: ""0317890-77"": java.lang.NumberFormatException: For input string: ""0317890-77""\n\tat java.lang.NumberFormatException.forInputString(NumberFormatException.java:48) [:1.6.0_30]\n\tat java.lang.Integer.parseInt(Integer.java:458) [:1.6.0_30]\n\tat java.lang.Integer.parseInt(Integer.java:499) [:1.6.0_30]\n\tat br.com.env.my_app.modulo.prestacao.business.ConsultaConveniosBC.montaCriterioConsultaConvenios(ConsultaConveniosBC.java:275) [:]\n\tat br.com.env.my_app.modulo.prestacao.business.ConsultaConveniosBC.listaConvenios(ConsultaConveniosBC.java:234) [:]\n\tat br.com.env.my_app.modulo.prestacao.business.ConsultaConveniosBC.consultaConvenios(ConsultaConveniosBC.java:135) [:]\n\tat br.com.env.my_app.modulo.prestacao.business.ConsultaConveniosBC.consultaConveniosVO(ConsultaConveniosBC.java:141) [:]\n\tat br.com.env.my_app.modulo.prestacao.ui.managedbean.ConsultarConvenioMB.getDataPage(ConsultarConvenioMB.java:194) [:]\n\tat br.com.env.my_app.modulo.prestacao.ui.managedbean.ConsultarConvenioMB.access$0(ConsultarConvenioMB.java:188) [:]\n\tat br.com.env.my_app.modulo.prestacao.ui.managedbean.ConsultarConvenioMB$1.provideDataPage(ConsultarConvenioMB.java:175) [:]\n\tat br.com.env.my_app.modulo.web.jsf.paginacao.PagedListDataModel.fetchPage(PagedListDataModel.java:213) [:]\n\tat br.com.env.my_app.modulo.web.jsf.paginacao.PagedListDataModel.getPage(PagedListDataModel.java:110) [:]\n\tat br.com.env.my_app.modulo.web.jsf.paginacao.PagedListDataModel.getRowCount(PagedListDataModel.java:84) [:]\n\tat org.ajax4jsf.model.SequenceDataModel.getRowCount(SequenceDataModel.java:139) [:3.1.3.GA]\n\tat org.ajax4jsf.component.UIDataAdaptor.getRowCount(UIDataAdaptor.java:233) [:3.1.3.GA]\n\tat org.richfaces.component.UIDatascroller.getRowCount(UIDatascroller.java:365) [:3.1.3.GA]\n\tat org.richfaces.component.UIDatascroller.getPageCount(UIDatascroller.java:344) [:3.1.3.GA]\n\tat org.richfaces.renderkit.html.DataScrollerRenderer.isRenderedOnSinglePage(DataScrollerRenderer.java:52) [:3.1.3.GA]\n\tat br.com.env.my_app.renderkit.my_appDatascrollerTemplate.doEncodeEnd(my_appDatascrollerTemplate.java:41) [:]\n\tat org.richfaces.renderkit.html.DatascrollerTemplate.doEncodeEnd(DatascrollerTemplate.java:639) [:3.1.3.GA]\n\tat org.ajax4jsf.renderkit.RendererBase.encodeEnd(RendererBase.java:135) [:3.1.3.GA]\n\tat javax.faces.component.UIComponentBase.encodeEnd(UIComponentBase.java:775) [:1.1.7]\n\tat org.ajax4jsf.renderkit.RendererBase.renderChild(RendererBase.java:286) [:3.1.3.GA]\n\tat org.richfaces.renderkit.AbstractRowsRenderer.encodeCellChildren(AbstractRowsRenderer.java:286) [:3.1.3.GA]\n\tat org.richfaces.renderkit.AbstractRowsRenderer.encodeTableHeaderFacet(AbstractRowsRenderer.java:308) [:3.1.3.GA]\n\tat org.richfaces.renderkit.AbstractTableRenderer.encodeHeader(AbstractTableRenderer.java:97) [:3.1.3.GA]\n\tat org.richfaces.renderkit.AbstractTableRenderer.encodeTableStructure(AbstractTableRenderer.java:81) [:3.1.3.GA]\n\tat org.richfaces.renderkit.html.DataTableRenderer.doEncodeBegin(DataTableRenderer.java:140) [:3.1.3.GA]\n\tat org.richfaces.renderkit.html.DataTableRenderer.doEncodeBegin(DataTableRenderer.java:128) [:3.1.3.GA]\n\tat org.ajax4jsf.renderkit.RendererBase.encodeBegin(RendererBase.java:101) [:3.1.3.GA]\n\tat javax.faces.component.UIComponentBase.encodeBegin(UIComponentBase.java:746) [:1.1.7]\n\tat javax.faces.component.UIData.encodeBegin(UIData.java:579) [:1.1.7]\n\tat org.ajax4jsf.component.UIDataAdaptor.encodeBegin(UIDataAdaptor.java:1067) [:3.1.3.GA]\n\tat javax.faces.webapp.UIComponentTag.encodeBegin(UIComponentTag.java:647) [:1.1.7]\n\tat javax.faces.webapp.UIComponentTag.doEndTag(UIComponentTag.java:543) [:1.1.7]\n\tat org.apache.jsp.webmod.ConsultaConvenio.resultadoConsultaConvenio_jsp._jspx_meth_rich_005fdataTable_005f0(resultadoConsultaConvenio_jsp.java:1631)\n\tat org.apache.jsp.webmod.ConsultaConvenio.resultadoConsultaConvenio_jsp._jspx_meth_h_005fform_005f0(resultadoConsultaConvenio_jsp.java:1256)\n\tat org.apache.jsp.webmod.ConsultaConvenio.resultadoConsultaConvenio_jsp._jspx_meth_t_005fdiv_005f10(resultadoConsultaConvenio_jsp.java:1112)\n\tat org.apache.jsp.webmod.ConsultaConvenio.resultadoConsultaConvenio_jsp._jspx_meth_t_005fdiv_005f9(resultadoConsultaConvenio_jsp.java:1079)\n\tat org.apache.jsp.webmod.ConsultaConvenio.resultadoConsultaConvenio_jsp._jspService(resultadoConsultaConvenio_jsp.java:331)\n\tat org.apache.jasper.runtime.HttpJspBase.service(HttpJspBase.java:70) [:6.1.0.Final]\n\tat javax.servlet.http.HttpServlet.service(HttpServlet.java:847) [:1.0.0.Final]\n\tat org.apache.jasper.servlet.JspServletWrapper.service(JspServletWrapper.java:369) [:6.1.0.Final]\n\tat org.apache.jasper.servlet.JspServlet.serviceJspFile(JspServlet.java:326) [:6.1.0.Final]\n\tat org.apache.jasper.servlet.JspServlet.service(JspServlet.java:253) [:6.1.0.Final]\n\tat javax.servlet.http.HttpServlet.service(HttpServlet.java:847) [:1.0.0.Final]\n\tat org.apache.catalina.core.ApplicationFilterChain.internalDoFilter(ApplicationFilterChain.java:324) [:6.1.0.Final]\n\tat org.apache.catalina.core.ApplicationFilterChain.doFilter(ApplicationFilterChain.java:242) [:6.1.0.Final]\n\tat org.apache.catalina.core.ApplicationDispatcher.invoke(ApplicationDispatcher.java:734) [:6.1.0.Final]\n\tat org.apache.catalina.core.ApplicationDispatcher.processRequest(ApplicationDispatcher.java:541) [:6.1.0.Final]\n\tat org.apache.catalina.core.ApplicationDispatcher.doForward(ApplicationDispatcher.java:479) [:6.1.0.Final]\n\tat org.apache.catalina.core.ApplicationDispatcher.forward(ApplicationDispatcher.java:407) [:6.1.0.Final]\n\tat org.apache.myfaces.context.servlet.ServletExternalContextImpl.dispatch(ServletExternalContextImpl.java:426) [:1.1.7]\n\tat org.apache.myfaces.application.jsp.JspViewHandlerImpl.renderView(JspViewHandlerImpl.java:255) [:1.1.7]\n\tat org.ajax4jsf.application.ViewHandlerWrapper.renderView(ViewHandlerWrapper.java:108) [:3.1.3.GA]\n\tat org.ajax4jsf.application.AjaxViewHandler.renderView(AjaxViewHandler.java:216) [:3.1.3.GA]\n\tat br.com.env.my_app.modulo.common.faces.config.my_appViewHandler.renderView(my_appViewHandler.java:64) [:]\n\tat org.ajax4jsf.application.ViewHandlerWrapper.renderView(ViewHandlerWrapper.java:108) [:3.1.3.GA]\n\tat org.ajax4jsf.application.AjaxViewHandler.renderView(AjaxViewHandler.java:216) [:3.1.3.GA]\n\tat org.apache.myfaces.lifecycle.RenderResponseExecutor.execute(RenderResponseExecutor.java:41) [:1.1.7]\n\tat org.apache.myfaces.lifecycle.LifecycleImpl.render(LifecycleImpl.java:146) [:1.1.7]\n\tat javax.faces.webapp.FacesServlet.service(FacesServlet.java:147) [:1.1.7]\n\tat org.apache.catalina.core.ApplicationFilterChain.internalDoFilter(ApplicationFilterChain.java:324) [:6.1.0.Final]\n\tat org.apache.catalina.core.ApplicationFilterChain.doFilter(ApplicationFilterChain.java:242) [:6.1.0.Final]\n\tat org.apache.myfaces.webapp.filter.ExtensionsFilter.doFilter(ExtensionsFilter.java:341) [:1.1.9]\n\tat org.apache.catalina.core.ApplicationFilterChain.internalDoFilter(ApplicationFilterChain.java:274) [:6.1.0.Final]\n\tat org.apache.catalina.core.ApplicationFilterChain.doFilter(ApplicationFilterChain.java:242) [:6.1.0.Final]\n\tat org.ajax4jsf.webapp.BaseXMLFilter.doXmlFilter(BaseXMLFilter.java:141) [:3.1.3.GA]\n\tat org.ajax4jsf.webapp.BaseFilter.doFilter(BaseFilter.java:281) [:3.1.3.GA]\n\tat org.apache.catalina.core.ApplicationFilterChain.internalDoFilter(ApplicationFilterChain.java:274) [:6.1.0.Final]\n\tat org.apache.catalina.core.ApplicationFilterChain.doFilter(ApplicationFilterChain.java:242) [:6.1.0.Final]\n\tat br.com.env.my_app.util.FiltroSessaoExpirada.doFilter(FiltroSessaoExpirada.java:58) [:]\n\tat org.apache.catalina.core.ApplicationFilterChain.internalDoFilter(ApplicationFilterChain.java:274) [:6.1.0.Final]\n\tat org.apache.catalina.core.ApplicationFilterChain.doFilter(ApplicationFilterChain.java:242) [:6.1.0.Final]\n\tat br.com.env.my_app.modulo.common.ui.filter.FiltroHibernateSession.doFilter(FiltroHibernateSession.java:33) [:]\n\tat org.apache.catalina.core.ApplicationFilterChain.internalDoFilter(ApplicationFilterChain.java:274) [:6.1.0.Final]\n\tat org.apache.catalina.core.ApplicationFilterChain.doFilter(ApplicationFilterChain.java:242) [:6.1.0.Final]\n\tat org.apache.catalina.core.StandardWrapperValve.invoke(StandardWrapperValve.java:275) [:6.1.0.Final]\n\tat org.apache.catalina.core.StandardContextValve.invoke(StandardContextValve.java:161) [:6.1.0.Final]\n\tat org.jboss.web.tomcat.security.SecurityAssociationValve.invoke(SecurityAssociationValve.java:181) [:6.1.0.Final]\n\tat org.jboss.modcluster.catalina.CatalinaContext$RequestListenerValve.event(CatalinaContext.java:285) [:1.1.0.Final]\n\tat org.jboss.modcluster.catalina.CatalinaContext$RequestListenerValve.invoke(CatalinaContext.java:261) [:1.1.0.Final]\n\tat org.jboss.web.tomcat.security.JaccContextValve.invoke(JaccContextValve.java:88) [:6.1.0.Final]\n\tat org.jboss.web.tomcat.security.SecurityContextEstablishmentValve.invoke(SecurityContextEstablishmentValve.java:100) [:6.1.0.Final]\n\tat org.apache.catalina.core.StandardHostValve.invoke(StandardHostValve.java:159) [:6.1.0.Final]\n\tat org.apache.catalina.valves.ErrorReportValve.invoke(ErrorReportValve.java:102) [:6.1.0.Final]\n\tat org.jboss.web.tomcat.service.jca.CachedConnectionValve.invoke(CachedConnectionValve.java:158) [:6.1.0.Final]\n\tat org.apache.catalina.core.StandardEngineValve.invoke(StandardEngineValve.java:109) [:6.1.0.Final]\n\tat org.jboss.web.tomcat.service.request.ActiveRequestResponseCacheValve.invoke(ActiveRequestResponseCacheValve.java:53) [:6.1.0.Final]\n\tat org.apache.catalina.connector.CoyoteAdapter.service(CoyoteAdapter.java:362) [:6.1.0.Final]\n\tat org.apache.coyote.ajp.AjpProcessor.process(AjpProcessor.java:504) [:6.1.0.Final]\n\tat org.apache.coyote.ajp.AjpProtocol$AjpConnectionHandler.process(AjpProtocol.java:437) [:6.1.0.Final]\n\tat org.apache.tomcat.util.net.JIoEndpoint$Worker.run(JIoEndpoint.java:951) [:6.1.0.Final]\n\tat java.lang.Thread.run(Thread.java:662) [:1.6.0_30]\n\n2015-02-19 14:42:26,495 INFO  [STDOUT] (ajp-127.0.0.2-8009-321)')","[17501, 17621]"
"('Description.java', 'org.junit.runner.Description', 'getClassName', '(.*)\\((.*)\\)', 'testInstance(com.github.aureliano.evtbridge.core.EventBridgeMetadataTest)')",[1768]
"('Description.java', 'org.junit.runner.Description', 'parseMethod', '(.*)\\((.*)\\)', 'testEncapsulateIntoList(com.github.aureliano.evtbridge.core.helper.DataHelperTest)')",[832]
"('Resolver.java', 'org.yaml.snakeyaml.resolver.Resolver', 'resolve', '^(?:~|null|Null|NULL| )$', 'The minute which it has to execute: 0-59')",[7731]
"('Resolver.java', 'org.yaml.snakeyaml.resolver.Resolver', 'resolve', '^$', 'array')","[12626, 15635, 16477]"
"('SingleLineMatcherTest.java', 'com.github.aureliano.evtbridge.core.matcher.SingleLineMatcherTest', 'testMatches', '^(.*)$', '2015-02-19 00:00:12,269 INFO  [my-app] (ajp-127.0.0.2-8009-386) [br.com.app.my_app.util.LoggingSessionListener]<memory freeMem=""1314.79"" allocatedMem=""3005.12"" maxMem=""5461.38"" totalFreeMem=""3771.04"" sgbdSessions=""0"" webSessions=""47"" loadAverage=""0.31""/>')","[17978, 18001]"
"('Description.java', 'org.junit.runner.Description', 'parseMethod', '(.*)\\((.*)\\)', 'testDelete(com.github.aureliano.evtbridge.core.helper.FileHelperTest)')",[560]
"('Resolver.java', 'org.yaml.snakeyaml.resolver.Resolver', 'resolve', '^(?:~|null|Null|NULL| )$', 'Scheduling execution configuration.')",[3079]
"('Description.java', 'org.junit.runner.Description', 'getClassName', '(.*)\\((.*)\\)', 'com.github.aureliano.evtbridge.core.doc.MapSchemaBuilderTest')","[2889, 2912, 2936, 2959]"
"('Description.java', 'org.junit.runner.Description', 'parseMethod', '(.*)\\((.*)\\)', 'testParseSimplest(com.github.aureliano.evtbridge.core.parser.JsonEventParserTest)')",[62]
"('Resolver.java', 'org.yaml.snakeyaml.resolver.Resolver', 'resolve', '^(?:yes|Yes|YES|no|No|NO|true|True|TRUE|false|False|FALSE|on|On|ON|off|Off|OFF)$', 'file_tailer')",[9930]
"('Resolver.java', 'org.yaml.snakeyaml.resolver.Resolver', 'resolve', '^$', 'The hour which it has to execute: 0-23')",[8719]
"('Resolver.java', 'org.yaml.snakeyaml.resolver.Resolver', 'resolve', '^(?:~|null|Null|NULL| )$', 'minutes')",[4985]
"('Resolver.java', 'org.yaml.snakeyaml.resolver.Resolver', 'resolve', '^(?:~|null|Null|NULL| )$', 'default')","[12720, 13868, 14442]"
"('Description.java', 'org.junit.runner.Description', 'getClassName', '(.*)\\((.*)\\)', 'com.github.aureliano.evtbridge.core.parser.JsonEventParserTest')","[2072, 2095, 2119, 2142]"
"('Description.java', 'org.junit.runner.Description', 'parseMethod', '(.*)\\((.*)\\)', 'testBuildInput(com.github.aureliano.evtbridge.core.doc.JsonSchemaBuilderTest)')",[1458]
"('Resolver.java', 'org.yaml.snakeyaml.resolver.Resolver', 'resolve', '^(?:yes|Yes|YES|no|No|NO|true|True|TRUE|false|False|FALSE|on|On|ON|off|Off|OFF)$', 'The period between successive executions.')",[5995]
"('Description.java', 'org.junit.runner.Description', 'getClassName', '(.*)\\((.*)\\)', 'testCopyProperties(com.github.aureliano.evtbridge.core.helper.DataHelperTest)')",[748]
"('Resolver.java', 'org.yaml.snakeyaml.resolver.Resolver', 'resolve', '^$', 'nanoseconds')",[5359]
"('Description.java', 'org.junit.runner.Description', 'parseMethod', '(.*)\\((.*)\\)', 'testParcialMatch(com.github.aureliano.evtbridge.core.matcher.SingleLineMatcherTest)')",[1686]
"('Resolver.java', 'org.yaml.snakeyaml.resolver.Resolver', 'resolve', '^$', 'input')",[15251]
"('Description.java', 'org.junit.runner.Description', 'parseMethod', '(.*)\\((.*)\\)', 'testParseBasic(com.github.aureliano.evtbridge.core.parser.JsonEventParserTest)')",[103]
"('Resolver.java', 'org.yaml.snakeyaml.resolver.Resolver', 'resolve', '^(?:~|null|Null|NULL| )$', 'standard_input')",[10100]
"('Resolver.java', 'org.yaml.snakeyaml.resolver.Resolver', 'resolve', '^$', 'hour')",[8559]
"('Description.java', 'org.junit.runner.Description', 'getClassName', '(.*)\\((.*)\\)', 'com.github.aureliano.evtbridge.core.schedule.ExecuteOnceAtSpecificTimeSchedulerTest')","[2354, 2377, 2401, 2424]"
"('Resolver.java', 'org.yaml.snakeyaml.resolver.Resolver', 'resolve', '^$', 'Whether it has to persist to disk log execution or not.')",[14634]
"('Description.java', 'org.junit.runner.Description', 'parseMethod', '(.*)\\((.*)\\)', 'testMapToProperties(com.github.aureliano.evtbridge.core.helper.DataHelperTest)')",[811]
"('Resolver.java', 'org.yaml.snakeyaml.resolver.Resolver', 'resolve', '^(?:~|null|Null|NULL| )$', 'The period between successive executions.')",[6027]
"('Resolver.java', 'org.yaml.snakeyaml.resolver.Resolver', 'resolve', '^$', 'string')","[7151, 12242, 14348]"
"('Resolver.java', 'org.yaml.snakeyaml.resolver.Resolver', 'resolve', '^(?:~|null|Null|NULL| )$', 'A key-value hash <string, string> in order to exchange metadata between configurations (main, inputs and outputs).')",[16635]
"('Description.java', 'org.junit.runner.Description', 'getClassName', '(.*)\\((.*)\\)', 'testBuildScheduler(com.github.aureliano.evtbridge.core.doc.YamlSchemaBuilderTest)')",[1207]
"('Resolver.java', 'org.yaml.snakeyaml.resolver.Resolver', 'resolve', '^$', 'object')","[3289, 4244, 6645, 7481, 9305, 10766, 11891, 13774, 16955]"
"('Resolver.java', 'org.yaml.snakeyaml.resolver.Resolver', 'resolve', '^$', 'standard_output')",[11425]
"('Resolver.java', 'org.yaml.snakeyaml.resolver.Resolver', 'resolve', '^(?:~|null|Null|NULL| )$', 'file_tailer')",[9964]
"('Resolver.java', 'org.yaml.snakeyaml.resolver.Resolver', 'resolve', '^(?:~|null|Null|NULL| )$', 'The time unit of the delay and period parameters.')",[4525]
"('Resolver.java', 'org.yaml.snakeyaml.resolver.Resolver', 'resolve', '^$', 'anyOf')","[3506, 4815, 9522, 10983]"
"('Resolver.java', 'org.yaml.snakeyaml.resolver.Resolver', 'resolve', '^(?:~|null|Null|NULL| )$', '$ref')","[3540, 3676, 3812, 9556, 9692, 9862, 10032, 10168, 10304, 11017, 11153, 11323, 11459, 13390, 15149, 15925]"
"('Description.java', 'org.junit.runner.Description', 'getClassName', '(.*)\\((.*)\\)', 'com.github.aureliano.evtbridge.core.filter.EmptyFilterTest')","[17261, 17284, 17308, 17331]"
"('Resolver.java', 'org.yaml.snakeyaml.resolver.Resolver', 'resolve', '^(?:yes|Yes|YES|no|No|NO|true|True|TRUE|false|False|FALSE|on|On|ON|off|Off|OFF)$', 'The minute which it has to execute: 0-59')",[7699]
"('Description.java', 'org.junit.runner.Description', 'parseMethod', '(.*)\\((.*)\\)', 'testTimeUnitValidation(com.github.aureliano.evtbridge.core.schedule.ExecutePeriodicallySchedulerTest)')",[207]
"('Description.java', 'org.junit.runner.Description', 'parseMethod', '(.*)\\((.*)\\)', 'testValidation(com.github.aureliano.evtbridge.core.schedule.ExecutePeriodicallyAtSpecificTimeSchedulerTest)')",[270]
"('Resolver.java', 'org.yaml.snakeyaml.resolver.Resolver', 'resolve', '^(?:~|null|Null|NULL| )$', 'boolean')","[13136, 14858]"
"('Resolver.java', 'org.yaml.snakeyaml.resolver.Resolver', 'resolve', '^$', 'elastic_search')",[11119]
"('Description.java', 'org.junit.runner.Description', 'getClassName', '(.*)\\((.*)\\)', 'testAvailableSourceTypes(com.github.aureliano.evtbridge.core.doc.DocumentationSourceTypesTest)')",[1541]
"('Description.java', 'org.junit.runner.Description', 'parseMethod', '(.*)\\((.*)\\)', 'testBuildRoot(com.github.aureliano.evtbridge.core.doc.MapSchemaBuilderTest)')",[1166]
"('Description.java', 'org.junit.runner.Description', 'getClassName', '(.*)\\((.*)\\)', 'com.github.aureliano.evtbridge.core.EventBridgeMetadataTest')","[18213, 18236, 18260, 18283]"
"('Description.java', 'org.junit.runner.Description', 'parseMethod', '(.*)\\((.*)\\)', 'testDelayValidation(com.github.aureliano.evtbridge.core.schedule.ExecutePeriodicallySchedulerTest)')",[145]
"('Resolver.java', 'org.yaml.snakeyaml.resolver.Resolver', 'resolve', '^$', 'Output configurations.')",[16221]
"('Description.java', 'org.junit.runner.Description', 'getClassName', '(.*)\\((.*)\\)', 'testBuildScheduler(com.github.aureliano.evtbridge.core.doc.JsonSchemaBuilderTest)')",[1374]
"('Description.java', 'org.junit.runner.Description', 'parseMethod', '(.*)\\((.*)\\)', 'testInstance(com.github.aureliano.evtbridge.core.EventBridgeMetadataTest)')",[1748]
"('Resolver.java', 'org.yaml.snakeyaml.resolver.Resolver', 'resolve', '^$', 'The period between successive executions.')",[6059]
"('Description.java', 'org.junit.runner.Description', 'getClassName', '(.*)\\((.*)\\)', 'com.github.aureliano.evtbridge.core.helper.DataHelperTest')","[2701, 2724, 2748, 2771]"
"('Resolver.java', 'org.yaml.snakeyaml.resolver.Resolver', 'resolve', '^(?:yes|Yes|YES|no|No|NO|true|True|TRUE|false|False|FALSE|on|On|ON|off|Off|OFF)$', 'type')","[3139, 3380, 4094, 4685, 5709, 6187, 6495, 7023, 7331, 7891, 8369, 8847, 9155, 9396, 10616, 10857, 11741, 12110, 12498, 13040, 13614, 14220, 14762, 15049, 15507, 15825, 16349, 16795]"
"('Description.java', 'org.junit.runner.Description', 'parseMethod', '(.*)\\((.*)\\)', 'testExecutePeriodicallyAtSpecificTimeScheduler(com.github.aureliano.evtbridge.core.doc.JsonSchemaBuilderTest)')",[1437]
"('Description.java', 'org.junit.runner.Description', 'parseMethod', '(.*)\\((.*)\\)', 'testBuildInput(com.github.aureliano.evtbridge.core.doc.YamlSchemaBuilderTest)')",[1291]
"('Resolver.java', 'org.yaml.snakeyaml.resolver.Resolver', 'resolve', '^$', 'The second which it has to execute: 0-59')",[8241]
"('Description.java', 'org.junit.runner.Description', 'parseMethod', '(.*)\\((.*)\\)', 'testSortProperties(com.github.aureliano.evtbridge.core.helper.DataHelperTest)')",[769]
"('Description.java', 'org.junit.runner.Description', 'parseMethod', '(.*)\\((.*)\\)', 'testExecutePeriodicallyAtSpecificTimeScheduler(com.github.aureliano.evtbridge.core.doc.YamlSchemaBuilderTest)')",[1270]
"('Resolver.java', 'org.yaml.snakeyaml.resolver.Resolver', 'resolve', '^(?:yes|Yes|YES|no|No|NO|true|True|TRUE|false|False|FALSE|on|On|ON|off|Off|OFF)$', 'Output configurations.')",[16157]
"('Description.java', 'org.junit.runner.Description', 'getClassName', '(.*)\\((.*)\\)', 'testValidation(com.github.aureliano.evtbridge.core.schedule.ExecuteOnceAtSpecificTimeSchedulerTest)')",[415]
"('Resolver.java', 'org.yaml.snakeyaml.resolver.Resolver', 'resolve', '^$', 'inputConfigs')",[14952]
"('Resolver.java', 'org.yaml.snakeyaml.resolver.Resolver', 'resolve', '^(?:yes|Yes|YES|no|No|NO|true|True|TRUE|false|False|FALSE|on|On|ON|off|Off|OFF)$', 'title')","[2989, 3944, 6345, 7181, 9005, 10436, 11591]"
"('Resolver.java', 'org.yaml.snakeyaml.resolver.Resolver', 'resolve', '^$', 'items')","[12077, 15016, 15792]"
"('Resolver.java', 'org.yaml.snakeyaml.resolver.Resolver', 'resolve', '^(?:~|null|Null|NULL| )$', 'persistExecutionLog')",[14379]
"('Resolver.java', 'org.yaml.snakeyaml.resolver.Resolver', 'resolve', '^$', 'url')",[10270]
"('Resolver.java', 'org.yaml.snakeyaml.resolver.Resolver', 'resolve', '^$', 'minutes')",[5019]
"('Resolver.java', 'org.yaml.snakeyaml.resolver.Resolver', 'resolve', '^(?:~|null|Null|NULL| )$', 'output')",[16027]
"('Description.java', 'org.junit.runner.Description', 'parseMethod', '(.*)\\((.*)\\)', 'testGetProperty(com.github.aureliano.evtbridge.core.EventBridgeMetadataTest)')",[1789]
"('Resolver.java', 'org.yaml.snakeyaml.resolver.Resolver', 'resolve', '^(?:yes|Yes|YES|no|No|NO|true|True|TRUE|false|False|FALSE|on|On|ON|off|Off|OFF)$', 'true')","[4653, 5677, 6155, 6991, 7859, 8337, 8815]"
"('Description.java', 'org.junit.runner.Description', 'getClassName', '(.*)\\((.*)\\)', 'com.github.aureliano.evtbridge.core.schedule.ExecutePeriodicallyAtSpecificTimeSchedulerTest')","[2260, 2283, 2307, 2330]"
"('Resolver.java', 'org.yaml.snakeyaml.resolver.Resolver', 'resolve', '^(?:~|null|Null|NULL| )$', 'The hour which it has to execute: 0-23')",[8687]
"('Resolver.java', 'org.yaml.snakeyaml.resolver.Resolver', 'resolve', '^(?:~|null|Null|NULL| )$', 'second')",[8050]
"('Resolver.java', 'org.yaml.snakeyaml.resolver.Resolver', 'resolve', '^$', 'Schedule a task to a exute at specified date time.')",[6465]
"('Description.java', 'org.junit.runner.Description', 'parseMethod', '(.*)\\((.*)\\)', 'testParseToDateTime(com.github.aureliano.evtbridge.core.helper.TimeHelperTest)')",[978]
"('Description.java', 'org.junit.runner.Description', 'parseMethod', '(.*)\\((.*)\\)', 'testId(com.github.aureliano.evtbridge.core.schedule.ExecutePeriodicallyAtSpecificTimeSchedulerTest)')",[311]
"('Description.java', 'org.junit.runner.Description', 'parseMethod', '(.*)\\((.*)\\)', 'testDeleteAllFiles(com.github.aureliano.evtbridge.core.helper.FileHelperTest)')",[581]
"('Description.java', 'org.junit.runner.Description', 'parseMethod', '(.*)\\((.*)\\)', 'testDeleteAllFilesByTime(com.github.aureliano.evtbridge.core.helper.FileHelperTest)')",[602]
"('Resolver.java', 'org.yaml.snakeyaml.resolver.Resolver', 'resolve', '^(?:~|null|Null|NULL| )$', 'Schedule a task to execute periodically at specified time.')",[7271]
"('Resolver.java', 'org.yaml.snakeyaml.resolver.Resolver', 'resolve', '^(?:~|null|Null|NULL| )$', 'Schedule a task to execute periodically')",[4034]
"('Resolver.java', 'org.yaml.snakeyaml.resolver.Resolver', 'resolve', '^(?:~|null|Null|NULL| )$', 'microseconds')",[5189]
"('Resolver.java', 'org.yaml.snakeyaml.resolver.Resolver', 'resolve', '^(?:~|null|Null|NULL| )$', 'hour')",[8528]
"('Resolver.java', 'org.yaml.snakeyaml.resolver.Resolver', 'resolve', '^$', 'boolean')","[13168, 14890]"
"('Description.java', 'org.junit.runner.Description', 'parseMethod', '(.*)\\((.*)\\)', 'testBuildScheduler(com.github.aureliano.evtbridge.core.doc.JsonSchemaBuilderTest)')",[1354]
"('SingleLineMatcherTest.java', 'com.github.aureliano.evtbridge.core.matcher.SingleLineMatcherTest', 'testMatches', '\\d{4}-\\d{2}-\\d{2}\\s\\d{2}:\\d{2}:\\d{2},\\d{3}\\s(INFO|WARN|ERROR)\\s+\\[my-app\\].*$', ""A line that shouldn't pass."")","[18025, 18048]"
"('Resolver.java', 'org.yaml.snakeyaml.resolver.Resolver', 'resolve', '^$', 'multiThreadingEnabled')",[12688]
"('Description.java', 'org.junit.runner.Description', 'getClassName', '(.*)\\((.*)\\)', 'com.github.aureliano.evtbridge.core.SchemaTypesTest')","[18401, 18424, 18448, 18471]"
"('Description.java', 'org.junit.runner.Description', 'parseMethod', '(.*)\\((.*)\\)', 'testBuildPath(com.github.aureliano.evtbridge.core.helper.FileHelperTest)')",[686]
"('Description.java', 'org.junit.runner.Description', 'parseMethod', '(.*)\\((.*)\\)', 'testMatchesMaxAttemptsExceed(com.github.aureliano.evtbridge.core.matcher.MultiLineMatcherTest)')",[1665]
"('Resolver.java', 'org.yaml.snakeyaml.resolver.Resolver', 'resolve', '^(?:~|null|Null|NULL| )$', 'minute')",[7572]
"('Description.java', 'org.junit.runner.Description', 'parseMethod', '(.*)\\((.*)\\)', 'testBuildOutput(com.github.aureliano.evtbridge.core.doc.YamlSchemaBuilderTest)')",[1312]
"('Description.java', 'org.junit.runner.Description', 'getClassName', '(.*)\\((.*)\\)', 'testValidation(com.github.aureliano.evtbridge.core.schedule.ExecutePeriodicallyAtSpecificTimeSchedulerTest)')",[290]
"('Resolver.java', 'org.yaml.snakeyaml.resolver.Resolver', 'resolve', '^(?:yes|Yes|YES|no|No|NO|true|True|TRUE|false|False|FALSE|on|On|ON|off|Off|OFF)$', 'The second which it has to execute: 0-59')",[8177]
"('Description.java', 'org.junit.runner.Description', 'parseMethod', '(.*)\\((.*)\\)', 'testBuildRoot(com.github.aureliano.evtbridge.core.doc.YamlSchemaBuilderTest)')",[1333]
"('Resolver.java', 'org.yaml.snakeyaml.resolver.Resolver', 'resolve', '^(?:~|null|Null|NULL| )$', 'Output configuration.')",[10556]
"('Resolver.java', 'org.yaml.snakeyaml.resolver.Resolver', 'resolve', '^(?:~|null|Null|NULL| )$', 'metadata')",[16508]
"('Description.java', 'org.junit.runner.Description', 'parseMethod', '(.*)\\((.*)\\)', 'testBuildInput(com.github.aureliano.evtbridge.core.doc.MapSchemaBuilderTest)')",[1124]
"('Description.java', 'org.junit.runner.Description', 'getClassName', '(.*)\\((.*)\\)', 'com.github.aureliano.evtbridge.core.parser.PlainTextParserTest')","[1978, 2001, 2025, 2048]"
"('Description.java', 'org.junit.runner.Description', 'parseMethod', '(.*)\\((.*)\\)', 'testParseDraft(com.github.aureliano.evtbridge.core.parser.JsonEventParserTest)')",[124]
"('Description.java', 'org.junit.runner.Description', 'getClassName', '(.*)\\((.*)\\)', 'com.github.aureliano.evtbridge.core.helper.ConfigHelperTest')","[2448, 2471, 2495, 2518]"
"('Description.java', 'org.junit.runner.Description', 'getClassName', '(.*)\\((.*)\\)', 'testAvailableSchemaTypes(com.github.aureliano.evtbridge.core.SchemaTypesTest)')",[1913]
"('Resolver.java', 'org.yaml.snakeyaml.resolver.Resolver', 'resolve', '^(?:~|null|Null|NULL| )$', 'Event collector id.')",[14060]
"('Resolver.java', 'org.yaml.snakeyaml.resolver.Resolver', 'resolve', '^(?:yes|Yes|YES|no|No|NO|true|True|TRUE|false|False|FALSE|on|On|ON|off|Off|OFF)$', 'timeUnit')",[4335]
"('Description.java', 'org.junit.runner.Description', 'parseMethod', '(.*)\\((.*)\\)', 'testMemFactor(com.github.aureliano.evtbridge.core.profile.ProfileConstantsTest)')",[1810]
"('Description.java', 'org.junit.runner.Description', 'parseMethod', '(.*)\\((.*)\\)', 'testCopyFile(com.github.aureliano.evtbridge.core.helper.FileHelperTest)')",[519]
"('Description.java', 'org.junit.runner.Description', 'getClassName', '(.*)\\((.*)\\)', 'com.github.aureliano.evtbridge.core.profile.ProfileConstantsTest')","[18307, 18330, 18354, 18377]"
"('Resolver.java', 'org.yaml.snakeyaml.resolver.Resolver', 'resolve', '^(?:~|null|Null|NULL| )$', 'multiThreadingEnabled')",[12657]
"('Description.java', 'org.junit.runner.Description', 'parseMethod', '(.*)\\((.*)\\)', 'testCopyProperties(com.github.aureliano.evtbridge.core.helper.DataHelperTest)')",[728]
"('Resolver.java', 'org.yaml.snakeyaml.resolver.Resolver', 'resolve', '^(?:~|null|Null|NULL| )$', 'eventsCollectorListeners')",[11982]
"('Resolver.java', 'org.yaml.snakeyaml.resolver.Resolver', 'resolve', '^$', 'properties')","[3349, 4304, 6705, 7541, 9365, 10826, 11951]"
"('Resolver.java', 'org.yaml.snakeyaml.resolver.Resolver', 'resolve', '^(?:~|null|Null|NULL| )$', 'timeUnit')",[4366]
"('Resolver.java', 'org.yaml.snakeyaml.resolver.Resolver', 'resolve', '^(?:~|null|Null|NULL| )$', 'elastic_search')",[11085]
"('Resolver.java', 'org.yaml.snakeyaml.resolver.Resolver', 'resolve', '^$', 'The minute which it has to execute: 0-59')",[7763]
"('Description.java', 'org.junit.runner.Description', 'getClassName', '(.*)\\((.*)\\)', 'testConvertToMilliseconds(com.github.aureliano.evtbridge.core.helper.TimeHelperTest)')",[915]
"('Resolver.java', 'org.yaml.snakeyaml.resolver.Resolver', 'resolve', '^$', 'Schedule a task to execute periodically')",[4064]
"('Resolver.java', 'org.yaml.snakeyaml.resolver.Resolver', 'resolve', '^$', 'outputConfigs')",[15728]
"('Resolver.java', 'org.yaml.snakeyaml.resolver.Resolver', 'resolve', '^$', 'milliseconds')",[5155]
"('Description.java', 'org.junit.runner.Description', 'parseMethod', '(.*)\\((.*)\\)', 'testAvailableSchemaTypes(com.github.aureliano.evtbridge.core.SchemaTypesTest)')",[1893]
"('Resolver.java', 'org.yaml.snakeyaml.resolver.Resolver', 'resolve', '^$', 'Input configuration.')",[9125]
"('Resolver.java', 'org.yaml.snakeyaml.resolver.Resolver', 'resolve', '^(?:yes|Yes|YES|no|No|NO|true|True|TRUE|false|False|FALSE|on|On|ON|off|Off|OFF)$', 'object')","[3229, 4184, 6585, 7421, 9245, 10706, 11831, 13710, 16891]"
"('Description.java', 'org.junit.runner.Description', 'parseMethod', '(.*)\\((.*)\\)', 'testCopyMetadata(com.github.aureliano.evtbridge.core.helper.ConfigHelperTest)')",[457]
"('Resolver.java', 'org.yaml.snakeyaml.resolver.Resolver', 'resolve', '^$', 'Auto-generated id.')",[13964]
"('Resolver.java', 'org.yaml.snakeyaml.resolver.Resolver', 'resolve', '^(?:~|null|Null|NULL| )$', 'Whether it has to enable multi-threading. That means: for each input a new thread will be created.')",[12880]
"('Resolver.java', 'org.yaml.snakeyaml.resolver.Resolver', 'resolve', '^$', 'metadata')",[16539]
"('Resolver.java', 'org.yaml.snakeyaml.resolver.Resolver', 'resolve', '^$', 'Output configuration.')",[10586]
"('Description.java', 'org.junit.runner.Description', 'parseMethod', '(.*)\\((.*)\\)', 'testFormatDateTime(com.github.aureliano.evtbridge.core.helper.TimeHelperTest)')",[999]
"('Resolver.java', 'org.yaml.snakeyaml.resolver.Resolver', 'resolve', '^(?:~|null|Null|NULL| )$', 'description')","[4429, 5453, 5931, 6799, 7635, 8113, 8591, 12274, 12816, 13262, 13996, 14538, 15283, 16093, 16571]"
"('Resolver.java', 'org.yaml.snakeyaml.resolver.Resolver', 'resolve', '^(?:~|null|Null|NULL| )$', 'inputConfigs')",[14921]
"('Resolver.java', 'org.yaml.snakeyaml.resolver.Resolver', 'resolve', '^$', 'standard_input')",[10134]
"('Description.java', 'org.junit.runner.Description', 'parseMethod', '(.*)\\((.*)\\)', 'testReadFile(com.github.aureliano.evtbridge.core.helper.FileHelperTest)')",[644]
"('Resolver.java', 'org.yaml.snakeyaml.resolver.Resolver', 'resolve', '^(?:~|null|Null|NULL| )$', 'file_input')",[9794]
"('Resolver.java', 'org.yaml.snakeyaml.resolver.Resolver', 'resolve', '^(?:~|null|Null|NULL| )$', 'file_output')",[11255]
"('Resolver.java', 'org.yaml.snakeyaml.resolver.Resolver', 'resolve', '^(?:yes|Yes|YES|no|No|NO|true|True|TRUE|false|False|FALSE|on|On|ON|off|Off|OFF)$', 'nanoseconds')",[5257]
"('Description.java', 'org.junit.runner.Description', 'parseMethod', '(.*)\\((.*)\\)', 'testGetLastExecutionLogDataFileName(com.github.aureliano.evtbridge.core.helper.FileHelperTest)')",[623]
"('Description.java', 'org.junit.runner.Description', 'getClassName', '(.*)\\((.*)\\)', 'com.github.aureliano.evtbridge.core.doc.DocumentationSourceTypesTest')","[17167, 17190, 17214, 17237]"
"('Description.java', 'org.junit.runner.Description', 'getClassName', '(.*)\\((.*)\\)', 'com.github.aureliano.evtbridge.core.helper.FileHelperTest')","[2542, 2565, 2589, 2612]"
"('Resolver.java', 'org.yaml.snakeyaml.resolver.Resolver', 'resolve', '^(?:~|null|Null|NULL| )$', 'seconds')",[5053]
"('Description.java', 'org.junit.runner.Description', 'getClassName', '(.*)\\((.*)\\)', 'com.github.aureliano.evtbridge.core.formatter.PlainTextFormatterTest')","[18492, 18512, 18533, 18553]"
"('Resolver.java', 'org.yaml.snakeyaml.resolver.Resolver', 'resolve', '^$', 'execute_once_at_specific_time')",[3642]
"('Resolver.java', 'org.yaml.snakeyaml.resolver.Resolver', 'resolve', '^(?:~|null|Null|NULL| )$', 'milliseconds')",[5121]
"('Description.java', 'org.junit.runner.Description', 'getClassName', '(.*)\\((.*)\\)', 'testParse(com.github.aureliano.evtbridge.core.parser.PlainTextParserTest)')",[41]
"('Resolver.java', 'org.yaml.snakeyaml.resolver.Resolver', 'resolve', '^(?:~|null|Null|NULL| )$', 'Events collector configuration schema.')",[11681]
"('Resolver.java', 'org.yaml.snakeyaml.resolver.Resolver', 'resolve', '^$', 'Schedule a task to execute periodically at specified time.')",[7301]
"('Resolver.java', 'org.yaml.snakeyaml.resolver.Resolver', 'resolve', '^(?:~|null|Null|NULL| )$', 'Schedule events collector for execution.')",[13326]
"('Resolver.java', 'org.yaml.snakeyaml.resolver.Resolver', 'resolve', '^(?:~|null|Null|NULL| )$', 'Auto-generated id.')",[13932]
"('Resolver.java', 'org.yaml.snakeyaml.resolver.Resolver', 'resolve', '^(?:~|null|Null|NULL| )$', 'anyOf')","[3474, 4782, 9490, 10951]"
"('Description.java', 'org.junit.runner.Description', 'parseMethod', '(.*)\\((.*)\\)', 'testAccept(com.github.aureliano.evtbridge.core.filter.EmptyFilterTest)')",[1562]
"('Description.java', 'org.junit.runner.Description', 'parseMethod', '(.*)\\((.*)\\)', 'testConvertToMillisecondsUnsupportedTimeUnit(com.github.aureliano.evtbridge.core.helper.TimeHelperTest)')",[936]
"('Resolver.java', 'org.yaml.snakeyaml.resolver.Resolver', 'resolve', '^(?:~|null|Null|NULL| )$', 'string')","[7119, 12209, 14316]"
"('Description.java', 'org.junit.runner.Description', 'parseMethod', '(.*)\\((.*)\\)', 'testExecuteOnceAtSpecificTimeScheduler(com.github.aureliano.evtbridge.core.doc.MapSchemaBuilderTest)')",[1082]
"('Description.java', 'org.junit.runner.Description', 'parseMethod', '(.*)\\((.*)\\)', 'testBuildScheduler(com.github.aureliano.evtbridge.core.doc.MapSchemaBuilderTest)')",[1020]
"('Resolver.java', 'org.yaml.snakeyaml.resolver.Resolver', 'resolve', '^(?:~|null|Null|NULL| )$', 'collectorId')",[13805]
"('Resolver.java', 'org.yaml.snakeyaml.resolver.Resolver', 'resolve', '^(?:~|null|Null|NULL| )$', 'url')",[10236]
"('Description.java', 'org.junit.runner.Description', 'parseMethod', '(.*)\\((.*)\\)', 'testMatches(com.github.aureliano.evtbridge.core.matcher.MultiLineMatcherTest)')",[1644]
"('Resolver.java', 'org.yaml.snakeyaml.resolver.Resolver', 'resolve', '^$', 'required')","[4621, 5645, 6123, 6959, 7827, 8305, 8783, 12434, 12976, 13550, 14156, 14698, 15443, 16285, 16731]"
"('Resolver.java', 'org.yaml.snakeyaml.resolver.Resolver', 'resolve', '^(?:~|null|Null|NULL| )$', 'period')",[5868]
"('Description.java', 'org.junit.runner.Description', 'getClassName', '(.*)\\((.*)\\)', 'com.github.aureliano.evtbridge.core.matcher.SingleLineMatcherTest')","[18119, 18142, 18166, 18189]"
"('Resolver.java', 'org.yaml.snakeyaml.resolver.Resolver', 'resolve', '^$', 'A string describing a date time following the pattern yyyy-MM-dd HH:mm:ss')",[6895]
"('Description.java', 'org.junit.runner.Description', 'getClassName', '(.*)\\((.*)\\)', 'testCopyFile(com.github.aureliano.evtbridge.core.helper.FileHelperTest)')",[539]
"('Description.java', 'org.junit.runner.Description', 'getClassName', '(.*)\\((.*)\\)', 'testParcialMatch(com.github.aureliano.evtbridge.core.matcher.MultiLineMatcherTest)')",[1623]
"('Resolver.java', 'org.yaml.snakeyaml.resolver.Resolver', 'resolve', '^(?:yes|Yes|YES|no|No|NO|true|True|TRUE|false|False|FALSE|on|On|ON|off|Off|OFF)$', 'Output configuration.')",[10526]
"('Description.java', 'org.junit.runner.Description', 'parseMethod', '(.*)\\((.*)\\)', 'testValidation(com.github.aureliano.evtbridge.core.schedule.ExecutePeriodicallySchedulerTest)')",[228]
"('Resolver.java', 'org.yaml.snakeyaml.resolver.Resolver', 'resolve', '^(?:~|null|Null|NULL| )$', 'type')","[3169, 3411, 4124, 4717, 5741, 6219, 6525, 7055, 7361, 7923, 8401, 8879, 9185, 9427, 10646, 10888, 11771, 12143, 12530, 13072, 13646, 14252, 14794, 15082, 15539, 15858, 16381, 16827]"
"('Resolver.java', 'org.yaml.snakeyaml.resolver.Resolver', 'resolve', '^(?:~|null|Null|NULL| )$', 'The second which it has to execute: 0-59')",[8209]
"('Resolver.java', 'org.yaml.snakeyaml.resolver.Resolver', 'resolve', '^$', 'Schedule events collector for execution.')",[13358]
"('Description.java', 'org.junit.runner.Description', 'getClassName', '(.*)\\((.*)\\)', 'com.github.aureliano.evtbridge.core.doc.JsonSchemaBuilderTest')","[17073, 17096, 17120, 17143]"
"('Resolver.java', 'org.yaml.snakeyaml.resolver.Resolver', 'resolve', '^$', 'Events collector configuration schema.')",[11711]
"('Resolver.java', 'org.yaml.snakeyaml.resolver.Resolver', 'resolve', '^(?:~|null|Null|NULL| )$', 'hours')",[4917]
"('Resolver.java', 'org.yaml.snakeyaml.resolver.Resolver', 'resolve', '^$', 'execute_periodically')",[3914]
"('Resolver.java', 'org.yaml.snakeyaml.resolver.Resolver', 'resolve', '^$', 'Scheduling execution configuration.')",[3109]
"('Resolver.java', 'org.yaml.snakeyaml.resolver.Resolver', 'resolve', '^$', 'The time to delay at first execution.')",[5581]
"('Resolver.java', 'org.yaml.snakeyaml.resolver.Resolver', 'resolve', '^(?:~|null|Null|NULL| )$', 'execute_periodically_at_specific_time')",[3744]
"('Description.java', 'org.junit.runner.Description', 'parseMethod', '(.*)\\((.*)\\)', 'testPeriodValidation(com.github.aureliano.evtbridge.core.schedule.ExecutePeriodicallySchedulerTest)')",[186]
"('Description.java', 'org.junit.runner.Description', 'parseMethod', '(.*)\\((.*)\\)', 'testId(com.github.aureliano.evtbridge.core.schedule.ExecuteOnceAtSpecificTimeSchedulerTest)')",[436]
"('Description.java', 'org.junit.runner.Description', 'getClassName', '(.*)\\((.*)\\)', 'testCopyMetadata(com.github.aureliano.evtbridge.core.helper.ConfigHelperTest)')",[477]
"('Resolver.java', 'org.yaml.snakeyaml.resolver.Resolver', 'resolve', '^$', 'period')",[5899]
"('Resolver.java', 'org.yaml.snakeyaml.resolver.Resolver', 'resolve', '^$', 'title')","[3049, 4004, 6405, 7241, 9065, 10496, 11651]"
"('Description.java', 'org.junit.runner.Description', 'parseMethod', '(.*)\\((.*)\\)', 'testConvertToMilliseconds(com.github.aureliano.evtbridge.core.helper.TimeHelperTest)')",[895]
"('Resolver.java', 'org.yaml.snakeyaml.resolver.Resolver', 'resolve', '^(?:~|null|Null|NULL| )$', 'standard_output')",[11391]
"('Resolver.java', 'org.yaml.snakeyaml.resolver.Resolver', 'resolve', '^$', 'Input configurations.')",[15379]
"('Resolver.java', 'org.yaml.snakeyaml.resolver.Resolver', 'resolve', '^$', 'eventsCollectorListeners')",[12013]
"('Resolver.java', 'org.yaml.snakeyaml.resolver.Resolver', 'resolve', '^(?:~|null|Null|NULL| )$', 'input')",[15217]
"('Description.java', 'org.junit.runner.Description', 'parseMethod', '(.*)\\((.*)\\)', 'testNewUniqueConfigurationName(com.github.aureliano.evtbridge.core.helper.ConfigHelperTest)')",[498]
"('Resolver.java', 'org.yaml.snakeyaml.resolver.Resolver', 'resolve', '^$', 'jdbc_input')",[10406]
"('Description.java', 'org.junit.runner.Description', 'parseMethod', '(.*)\\((.*)\\)', 'testExecutePeriodicallyScheduler(com.github.aureliano.evtbridge.core.doc.YamlSchemaBuilderTest)')",[1228]
"('Resolver.java', 'org.yaml.snakeyaml.resolver.Resolver', 'resolve', '^$', 'file_output')",[11289]
"('Resolver.java', 'org.yaml.snakeyaml.resolver.Resolver', 'resolve', '^(?:~|null|Null|NULL| )$', 'jdbc_output')",[11527]
"('Description.java', 'org.junit.runner.Description', 'parseMethod', '(.*)\\((.*)\\)', 'testDateFormat(com.github.aureliano.evtbridge.core.profile.ProfileConstantsTest)')",[1872]
"('Resolver.java', 'org.yaml.snakeyaml.resolver.Resolver', 'resolve', '^(?:yes|Yes|YES|no|No|NO|true|True|TRUE|false|False|FALSE|on|On|ON|off|Off|OFF)$', 'output')",[15993]
"('Description.java', 'org.junit.runner.Description', 'parseMethod', '(.*)\\((.*)\\)', 'testDecimalFormat(com.github.aureliano.evtbridge.core.profile.ProfileConstantsTest)')",[1851]
"('Description.java', 'org.junit.runner.Description', 'parseMethod', '(.*)\\((.*)\\)', 'testBuildScheduler(com.github.aureliano.evtbridge.core.doc.YamlSchemaBuilderTest)')",[1187]
"('Description.java', 'org.junit.runner.Description', 'parseMethod', '(.*)\\((.*)\\)', 'testJsonStringToObject(com.github.aureliano.evtbridge.core.helper.DataHelperTest)')",[853]
"('Resolver.java', 'org.yaml.snakeyaml.resolver.Resolver', 'resolve', '^(?:~|null|Null|NULL| )$', 'Register listeners.')",[12338]
"('Description.java', 'org.junit.runner.Description', 'parseMethod', '(.*)\\((.*)\\)', 'testParcialMatch(com.github.aureliano.evtbridge.core.matcher.MultiLineMatcherTest)')",[1603]
"('Description.java', 'org.junit.runner.Description', 'parseMethod', '(.*)\\((.*)\\)', 'testHourValidation(com.github.aureliano.evtbridge.core.schedule.ExecutePeriodicallyAtSpecificTimeSchedulerTest)')",[332]
"('Resolver.java', 'org.yaml.snakeyaml.resolver.Resolver', 'resolve', '^$', 'seconds')",[5087]
"('Description.java', 'org.junit.runner.Description', 'getClassName', '(.*)\\((.*)\\)', 'testAccept(com.github.aureliano.evtbridge.core.filter.EmptyFilterTest)')",[1582]
"('Resolver.java', 'org.yaml.snakeyaml.resolver.Resolver', 'resolve', '^$', 'Register listeners.')",[12370]
"('Description.java', 'org.junit.runner.Description', 'getClassName', '(.*)\\((.*)\\)', 'testParseSimplest(com.github.aureliano.evtbridge.core.parser.JsonEventParserTest)')",[82]
"('Resolver.java', 'org.yaml.snakeyaml.resolver.Resolver', 'resolve', '^(?:~|null|Null|NULL| )$', 'Whether it has to persist to disk log execution or not.')",[14602]
"('Description.java', 'org.junit.runner.Description', 'getClassName', '(.*)\\((.*)\\)', 'testDelayValidation(com.github.aureliano.evtbridge.core.schedule.ExecutePeriodicallySchedulerTest)')",[165]
"('Description.java', 'org.junit.runner.Description', 'parseMethod', '(.*)\\((.*)\\)', 'testExecuteOnceAtSpecificTimeScheduler(com.github.aureliano.evtbridge.core.doc.JsonSchemaBuilderTest)')",[1416]
"('Resolver.java', 'org.yaml.snakeyaml.resolver.Resolver', 'resolve', '^$', 'file_input')",[9828]
"('Description.java', 'org.junit.runner.Description', 'parseMethod', '(.*)\\((.*)\\)', 'testValidation(com.github.aureliano.evtbridge.core.schedule.ExecuteOnceAtSpecificTimeSchedulerTest)')",[395]
"('Resolver.java', 'org.yaml.snakeyaml.resolver.Resolver', 'resolve', '^(?:~|null|Null|NULL| )$', 'array')","[12594, 15603, 16445]"
"('Description.java', 'org.junit.runner.Description', 'getClassName', '(.*)\\((.*)\\)', 'com.github.aureliano.evtbridge.core.helper.TimeHelperTest')","[2795, 2818, 2842, 2865]"
"('Description.java', 'org.junit.runner.Description', 'getClassName', '(.*)\\((.*)\\)', 'com.github.aureliano.evtbridge.core.doc.YamlSchemaBuilderTest')","[16979, 17002, 17026, 17049]"
"('Description.java', 'org.junit.runner.Description', 'getClassName', '(.*)\\((.*)\\)', 'testBuildScheduler(com.github.aureliano.evtbridge.core.doc.MapSchemaBuilderTest)')",[1040]
"('Resolver.java', 'org.yaml.snakeyaml.resolver.Resolver', 'resolve', '^(?:~|null|Null|NULL| )$', 'days')",[4849]
"('Description.java', 'org.junit.runner.Description', 'parseMethod', '(.*)\\((.*)\\)', 'testParse(com.github.aureliano.evtbridge.core.parser.PlainTextParserTest)')",[21]
"('Resolver.java', 'org.yaml.snakeyaml.resolver.Resolver', 'resolve', '^$', 'A key-value hash <string, string> in order to exchange metadata between configurations (main, inputs and outputs).')",[16667]
"('Resolver.java', 'org.yaml.snakeyaml.resolver.Resolver', 'resolve', '^$', 'Whether it has to enable multi-threading. That means: for each input a new thread will be created.')",[12912]
"('Resolver.java', 'org.yaml.snakeyaml.resolver.Resolver', 'resolve', '^(?:~|null|Null|NULL| )$', 'scheduler')","[13199, 13454]"
"('Resolver.java', 'org.yaml.snakeyaml.resolver.Resolver', 'resolve', '^$', 'delay')",[5421]
"('Description.java', 'org.junit.runner.Description', 'getClassName', '(.*)\\((.*)\\)', 'testMemFactor(com.github.aureliano.evtbridge.core.profile.ProfileConstantsTest)')",[1830]
"('Resolver.java', 'org.yaml.snakeyaml.resolver.Resolver', 'resolve', '^$', 'Event collector id.')",[14092]
"('Description.java', 'org.junit.runner.Description', 'getClassName', '(.*)\\((.*)\\)', 'com.github.aureliano.evtbridge.core.matcher.MultiLineMatcherTest')","[17884, 17907, 17931, 17954]"
"('Resolver.java', 'org.yaml.snakeyaml.resolver.Resolver', 'resolve', '^$', 'timeUnit')",[4397]
"('Resolver.java', 'org.yaml.snakeyaml.resolver.Resolver', 'resolve', '^$', 'hours')",[4951]
"('Resolver.java', 'org.yaml.snakeyaml.resolver.Resolver', 'resolve', '^(?:~|null|Null|NULL| )$', 'properties')","[3319, 4274, 6675, 7511, 9335, 10796, 11921]"
"('Description.java', 'org.junit.runner.Description', 'parseMethod', '(.*)\\((.*)\\)', 'testBuildOutput(com.github.aureliano.evtbridge.core.doc.MapSchemaBuilderTest)')",[1145]
"('MultiLineMatcherTest.java', 'com.github.aureliano.evtbridge.core.matcher.MultiLineMatcherTest', 'testMatches', '\\d{4}-\\d{2}-\\d{2}\\s\\d{2}:\\d{2}:\\d{2},\\d{3}\\s([\\W\\w\\d](?!\\d{4}-\\d{2}-\\d{2}\\s\\d{2}:\\d{2}:\\d{2},\\d{3}\\s))+', '2015-02-19 14:42:25,948 ERROR [br.com.env.my_app.modulo.common.util.MensagensUtil] (ajp-127.0.0.2-8009-314) For input string: ""0317890-77"": java.lang.NumberFormatException: For input string: ""0317890-77""\n\tat java.lang.NumberFormatException.forInputString(NumberFormatException.java:48) [:1.6.0_30]\n\tat java.lang.Integer.parseInt(Integer.java:458) [:1.6.0_30]\n\tat java.lang.Integer.parseInt(Integer.java:499) [:1.6.0_30]\n\tat br.com.env.my_app.modulo.prestacao.business.ConsultaConveniosBC.montaCriterioConsultaConvenios(ConsultaConveniosBC.java:275) [:]\n\tat br.com.env.my_app.modulo.prestacao.business.ConsultaConveniosBC.listaConvenios(ConsultaConveniosBC.java:234) [:]\n\tat br.com.env.my_app.modulo.prestacao.business.ConsultaConveniosBC.consultaConvenios(ConsultaConveniosBC.java:135) [:]\n\tat br.com.env.my_app.modulo.prestacao.business.ConsultaConveniosBC.consultaConveniosVO(ConsultaConveniosBC.java:141) [:]\n\tat br.com.env.my_app.modulo.prestacao.ui.managedbean.ConsultarConvenioMB.getDataPage(ConsultarConvenioMB.java:194) [:]\n\tat br.com.env.my_app.modulo.prestacao.ui.managedbean.ConsultarConvenioMB.access$0(ConsultarConvenioMB.java:188) [:]\n\tat br.com.env.my_app.modulo.prestacao.ui.managedbean.ConsultarConvenioMB$1.provideDataPage(ConsultarConvenioMB.java:175) [:]\n\tat br.com.env.my_app.modulo.web.jsf.paginacao.PagedListDataModel.fetchPage(PagedListDataModel.java:213) [:]\n\tat br.com.env.my_app.modulo.web.jsf.paginacao.PagedListDataModel.getPage(PagedListDataModel.java:110) [:]\n\tat br.com.env.my_app.modulo.web.jsf.paginacao.PagedListDataModel.getRowCount(PagedListDataModel.java:84) [:]\n\tat org.ajax4jsf.model.SequenceDataModel.getRowCount(SequenceDataModel.java:139) [:3.1.3.GA]\n\tat org.ajax4jsf.component.UIDataAdaptor.getRowCount(UIDataAdaptor.java:233) [:3.1.3.GA]\n\tat org.richfaces.component.UIDatascroller.getRowCount(UIDatascroller.java:365) [:3.1.3.GA]\n\tat org.richfaces.component.UIDatascroller.getPageCount(UIDatascroller.java:344) [:3.1.3.GA]\n\tat org.richfaces.renderkit.html.DataScrollerRenderer.isRenderedOnSinglePage(DataScrollerRenderer.java:52) [:3.1.3.GA]\n\tat br.com.env.my_app.renderkit.my_appDatascrollerTemplate.doEncodeEnd(my_appDatascrollerTemplate.java:41) [:]\n\tat org.richfaces.renderkit.html.DatascrollerTemplate.doEncodeEnd(DatascrollerTemplate.java:639) [:3.1.3.GA]\n\tat org.ajax4jsf.renderkit.RendererBase.encodeEnd(RendererBase.java:135) [:3.1.3.GA]\n\tat javax.faces.component.UIComponentBase.encodeEnd(UIComponentBase.java:775) [:1.1.7]\n\tat org.ajax4jsf.renderkit.RendererBase.renderChild(RendererBase.java:286) [:3.1.3.GA]\n\tat org.richfaces.renderkit.AbstractRowsRenderer.encodeCellChildren(AbstractRowsRenderer.java:286) [:3.1.3.GA]\n\tat org.richfaces.renderkit.AbstractRowsRenderer.encodeTableHeaderFacet(AbstractRowsRenderer.java:308) [:3.1.3.GA]\n\tat org.richfaces.renderkit.AbstractTableRenderer.encodeHeader(AbstractTableRenderer.java:97) [:3.1.3.GA]\n\tat org.richfaces.renderkit.AbstractTableRenderer.encodeTableStructure(AbstractTableRenderer.java:81) [:3.1.3.GA]\n\tat org.richfaces.renderkit.html.DataTableRenderer.doEncodeBegin(DataTableRenderer.java:140) [:3.1.3.GA]\n\tat org.richfaces.renderkit.html.DataTableRenderer.doEncodeBegin(DataTableRenderer.java:128) [:3.1.3.GA]\n\tat org.ajax4jsf.renderkit.RendererBase.encodeBegin(RendererBase.java:101) [:3.1.3.GA]\n\tat javax.faces.component.UIComponentBase.encodeBegin(UIComponentBase.java:746) [:1.1.7]\n\tat javax.faces.component.UIData.encodeBegin(UIData.java:579) [:1.1.7]\n\tat org.ajax4jsf.component.UIDataAdaptor.encodeBegin(UIDataAdaptor.java:1067) [:3.1.3.GA]\n\tat javax.faces.webapp.UIComponentTag.encodeBegin(UIComponentTag.java:647) [:1.1.7]\n\tat javax.faces.webapp.UIComponentTag.doEndTag(UIComponentTag.java:543) [:1.1.7]\n\tat org.apache.jsp.webmod.ConsultaConvenio.resultadoConsultaConvenio_jsp._jspx_meth_rich_005fdataTable_005f0(resultadoConsultaConvenio_jsp.java:1631)\n\tat org.apache.jsp.webmod.ConsultaConvenio.resultadoConsultaConvenio_jsp._jspx_meth_h_005fform_005f0(resultadoConsultaConvenio_jsp.java:1256)\n\tat org.apache.jsp.webmod.ConsultaConvenio.resultadoConsultaConvenio_jsp._jspx_meth_t_005fdiv_005f10(resultadoConsultaConvenio_jsp.java:1112)\n\tat org.apache.jsp.webmod.ConsultaConvenio.resultadoConsultaConvenio_jsp._jspx_meth_t_005fdiv_005f9(resultadoConsultaConvenio_jsp.java:1079)\n\tat org.apache.jsp.webmod.ConsultaConvenio.resultadoConsultaConvenio_jsp._jspService(resultadoConsultaConvenio_jsp.java:331)\n\tat org.apache.jasper.runtime.HttpJspBase.service(HttpJspBase.java:70) [:6.1.0.Final]\n\tat javax.servlet.http.HttpServlet.service(HttpServlet.java:847) [:1.0.0.Final]\n\tat org.apache.jasper.servlet.JspServletWrapper.service(JspServletWrapper.java:369) [:6.1.0.Final]\n\tat org.apache.jasper.servlet.JspServlet.serviceJspFile(JspServlet.java:326) [:6.1.0.Final]\n\tat org.apache.jasper.servlet.JspServlet.service(JspServlet.java:253) [:6.1.0.Final]\n\tat javax.servlet.http.HttpServlet.service(HttpServlet.java:847) [:1.0.0.Final]\n\tat org.apache.catalina.core.ApplicationFilterChain.internalDoFilter(ApplicationFilterChain.java:324) [:6.1.0.Final]\n\tat org.apache.catalina.core.ApplicationFilterChain.doFilter(ApplicationFilterChain.java:242) [:6.1.0.Final]\n\tat org.apache.catalina.core.ApplicationDispatcher.invoke(ApplicationDispatcher.java:734) [:6.1.0.Final]\n\tat org.apache.catalina.core.ApplicationDispatcher.processRequest(ApplicationDispatcher.java:541) [:6.1.0.Final]\n\tat org.apache.catalina.core.ApplicationDispatcher.doForward(ApplicationDispatcher.java:479) [:6.1.0.Final]\n\tat org.apache.catalina.core.ApplicationDispatcher.forward(ApplicationDispatcher.java:407) [:6.1.0.Final]\n\tat org.apache.myfaces.context.servlet.ServletExternalContextImpl.dispatch(ServletExternalContextImpl.java:426) [:1.1.7]\n\tat org.apache.myfaces.application.jsp.JspViewHandlerImpl.renderView(JspViewHandlerImpl.java:255) [:1.1.7]\n\tat org.ajax4jsf.application.ViewHandlerWrapper.renderView(ViewHandlerWrapper.java:108) [:3.1.3.GA]\n\tat org.ajax4jsf.application.AjaxViewHandler.renderView(AjaxViewHandler.java:216) [:3.1.3.GA]\n\tat br.com.env.my_app.modulo.common.faces.config.my_appViewHandler.renderView(my_appViewHandler.java:64) [:]\n\tat org.ajax4jsf.application.ViewHandlerWrapper.renderView(ViewHandlerWrapper.java:108) [:3.1.3.GA]\n\tat org.ajax4jsf.application.AjaxViewHandler.renderView(AjaxViewHandler.java:216) [:3.1.3.GA]\n\tat org.apache.myfaces.lifecycle.RenderResponseExecutor.execute(RenderResponseExecutor.java:41) [:1.1.7]\n\tat org.apache.myfaces.lifecycle.LifecycleImpl.render(LifecycleImpl.java:146) [:1.1.7]\n\tat javax.faces.webapp.FacesServlet.service(FacesServlet.java:147) [:1.1.7]\n\tat org.apache.catalina.core.ApplicationFilterChain.internalDoFilter(ApplicationFilterChain.java:324) [:6.1.0.Final]\n\tat org.apache.catalina.core.ApplicationFilterChain.doFilter(ApplicationFilterChain.java:242) [:6.1.0.Final]\n\tat org.apache.myfaces.webapp.filter.ExtensionsFilter.doFilter(ExtensionsFilter.java:341) [:1.1.9]\n\tat org.apache.catalina.core.ApplicationFilterChain.internalDoFilter(ApplicationFilterChain.java:274) [:6.1.0.Final]\n\tat org.apache.catalina.core.ApplicationFilterChain.doFilter(ApplicationFilterChain.java:242) [:6.1.0.Final]\n\tat org.ajax4jsf.webapp.BaseXMLFilter.doXmlFilter(BaseXMLFilter.java:141) [:3.1.3.GA]\n\tat org.ajax4jsf.webapp.BaseFilter.doFilter(BaseFilter.java:281) [:3.1.3.GA]\n\tat org.apache.catalina.core.ApplicationFilterChain.internalDoFilter(ApplicationFilterChain.java:274) [:6.1.0.Final]\n\tat org.apache.catalina.core.ApplicationFilterChain.doFilter(ApplicationFilterChain.java:242) [:6.1.0.Final]\n\tat br.com.env.my_app.util.FiltroSessaoExpirada.doFilter(FiltroSessaoExpirada.java:58) [:]\n\tat org.apache.catalina.core.ApplicationFilterChain.internalDoFilter(ApplicationFilterChain.java:274) [:6.1.0.Final]\n\tat org.apache.catalina.core.ApplicationFilterChain.doFilter(ApplicationFilterChain.java:242) [:6.1.0.Final]\n\tat br.com.env.my_app.modulo.common.ui.filter.FiltroHibernateSession.doFilter(FiltroHibernateSession.java:33) [:]\n\tat org.apache.catalina.core.ApplicationFilterChain.internalDoFilter(ApplicationFilterChain.java:274) [:6.1.0.Final]\n\tat org.apache.catalina.core.ApplicationFilterChain.doFilter(ApplicationFilterChain.java:242) [:6.1.0.Final]\n\tat org.apache.catalina.core.StandardWrapperValve.invoke(StandardWrapperValve.java:275) [:6.1.0.Final]\n\tat org.apache.catalina.core.StandardContextValve.invoke(StandardContextValve.java:161) [:6.1.0.Final]\n\tat org.jboss.web.tomcat.security.SecurityAssociationValve.invoke(SecurityAssociationValve.java:181) [:6.1.0.Final]\n\tat org.jboss.modcluster.catalina.CatalinaContext$RequestListenerValve.event(CatalinaContext.java:285) [:1.1.0.Final]\n\tat org.jboss.modcluster.catalina.CatalinaContext$RequestListenerValve.invoke(CatalinaContext.java:261) [:1.1.0.Final]\n\tat org.jboss.web.tomcat.security.JaccContextValve.invoke(JaccContextValve.java:88) [:6.1.0.Final]\n\tat org.jboss.web.tomcat.security.SecurityContextEstablishmentValve.invoke(SecurityContextEstablishmentValve.java:100) [:6.1.0.Final]\n\tat org.apache.catalina.core.StandardHostValve.invoke(StandardHostValve.java:159) [:6.1.0.Final]\n\tat org.apache.catalina.valves.ErrorReportValve.invoke(ErrorReportValve.java:102) [:6.1.0.Final]\n\tat org.jboss.web.tomcat.service.jca.CachedConnectionValve.invoke(CachedConnectionValve.java:158) [:6.1.0.Final]\n\tat org.apache.catalina.core.StandardEngineValve.invoke(StandardEngineValve.java:109) [:6.1.0.Final]\n\tat org.jboss.web.tomcat.service.request.ActiveRequestResponseCacheValve.invoke(ActiveRequestResponseCacheValve.java:53) [:6.1.0.Final]\n\tat org.apache.catalina.connector.CoyoteAdapter.service(CoyoteAdapter.java:362) [:6.1.0.Final]\n\tat org.apache.coyote.ajp.AjpProcessor.process(AjpProcessor.java:504) [:6.1.0.Final]\n\tat org.apache.coyote.ajp.AjpProtocol$AjpConnectionHandler.process(AjpProtocol.java:437) [:6.1.0.Final]\n\tat org.apache.tomcat.util.net.JIoEndpoint$Worker.run(JIoEndpoint.java:951) [:6.1.0.Final]\n\tat java.lang.Thread.run(Thread.java:662) [:1.6.0_30]\n')","[17741, 17860]"
"('Resolver.java', 'org.yaml.snakeyaml.resolver.Resolver', 'resolve', '^$', 'second')",[8081]
"('Resolver.java', 'org.yaml.snakeyaml.resolver.Resolver', 'resolve', '^(?:yes|Yes|YES|no|No|NO|true|True|TRUE|false|False|FALSE|on|On|ON|off|Off|OFF)$', 'file_output')",[11221]
"('Resolver.java', 'org.yaml.snakeyaml.resolver.Resolver', 'resolve', '^(?:~|null|Null|NULL| )$', 'object')","[3259, 4214, 6615, 7451, 9275, 10736, 11861, 13742, 16923]"
"('Description.java', 'org.junit.runner.Description', 'getClassName', '(.*)\\((.*)\\)', 'com.github.aureliano.evtbridge.core.schedule.ExecutePeriodicallySchedulerTest')","[2166, 2189, 2213, 2236]"
"('PercentEscaper.java', 'org.yaml.snakeyaml.external.com.google.gdata.util.common.base.PercentEscaper', '<init>', '.*[0-9A-Za-z].*', ""-_.!~*'()@:$&,;=[]/"")","[2645, 2677]"
"('Resolver.java', 'org.yaml.snakeyaml.resolver.Resolver', 'resolve', '^$', 'output')",[16061]
"('Resolver.java', 'org.yaml.snakeyaml.resolver.Resolver', 'resolve', '^$', '$ref')","[3574, 3710, 3846, 9590, 9726, 9896, 10066, 10202, 10338, 11051, 11187, 11357, 11493, 13422, 15183, 15959]"
"('Resolver.java', 'org.yaml.snakeyaml.resolver.Resolver', 'resolve', '^$', 'The time unit of the delay and period parameters.')",[4557]
"('Description.java', 'org.junit.runner.Description', 'parseMethod', '(.*)\\((.*)\\)', 'testYamlStringToObject(com.github.aureliano.evtbridge.core.helper.DataHelperTest)')",[874]
"('Resolver.java', 'org.yaml.snakeyaml.resolver.Resolver', 'resolve', '^(?:yes|Yes|YES|no|No|NO|true|True|TRUE|false|False|FALSE|on|On|ON|off|Off|OFF)$', 'outputConfigs')",[15666]
"('Resolver.java', 'org.yaml.snakeyaml.resolver.Resolver', 'resolve', '^$', 'integer')","[5837, 6315, 8019, 8497, 8975]"
"('Description.java', 'org.junit.runner.Description', 'parseMethod', '(.*)\\((.*)\\)', 'testFormat(com.github.aureliano.evtbridge.core.formatter.PlainTextFormatterTest)')",[1934]
"('Resolver.java', 'org.yaml.snakeyaml.resolver.Resolver', 'resolve', '^$', 'days')",[4883]
"('Resolver.java', 'org.yaml.snakeyaml.resolver.Resolver', 'resolve', '^(?:~|null|Null|NULL| )$', 'execute_periodically')",[3880]
"('Resolver.java', 'org.yaml.snakeyaml.resolver.Resolver', 'resolve', '^(?:~|null|Null|NULL| )$', 'title')","[3019, 3974, 6375, 7211, 9035, 10466, 11621]"
"('Resolver.java', 'org.yaml.snakeyaml.resolver.Resolver', 'resolve', '^$', 'execute_periodically_at_specific_time')",[3778]
"('Resolver.java', 'org.yaml.snakeyaml.resolver.Resolver', 'resolve', '^$', 'persistExecutionLog')",[14410]
"('Resolver.java', 'org.yaml.snakeyaml.resolver.Resolver', 'resolve', '^$', 'type')","[3199, 3442, 4154, 4749, 5773, 6251, 6555, 7087, 7391, 7955, 8433, 8911, 9215, 9458, 10676, 10919, 11801, 12176, 12562, 13104, 13678, 14284, 14826, 15115, 15571, 15891, 16413, 16859]"
"('Resolver.java', 'org.yaml.snakeyaml.resolver.Resolver', 'resolve', '^(?:~|null|Null|NULL| )$', 'execute_once_at_specific_time')",[3608]
"('Description.java', 'org.junit.runner.Description', 'parseMethod', '(.*)\\((.*)\\)', 'testExecutePeriodicallyScheduler(com.github.aureliano.evtbridge.core.doc.MapSchemaBuilderTest)')",[1061]
"('Description.java', 'org.junit.runner.Description', 'getClassName', '(.*)\\((.*)\\)', 'testParcialMatch(com.github.aureliano.evtbridge.core.matcher.SingleLineMatcherTest)')",[1706]
"('Resolver.java', 'org.yaml.snakeyaml.resolver.Resolver', 'resolve', '^$', 'jdbc_output')",[11561]
"('Description.java', 'org.junit.runner.Description', 'parseMethod', '(.*)\\((.*)\\)', 'testAvailableSourceTypes(com.github.aureliano.evtbridge.core.doc.DocumentationSourceTypesTest)')",[1521]
"('Resolver.java', 'org.yaml.snakeyaml.resolver.Resolver', 'resolve', '^(?:~|null|Null|NULL| )$', 'delay')",[5390]
"('Resolver.java', 'org.yaml.snakeyaml.resolver.Resolver', 'resolve', '^(?:~|null|Null|NULL| )$', 'outputConfigs')",[15697]
"('Resolver.java', 'org.yaml.snakeyaml.resolver.Resolver', 'resolve', '^$', 'default')","[12752, 13900, 14474]"
"('Resolver.java', 'org.yaml.snakeyaml.resolver.Resolver', 'resolve', '^$', 'minute')",[7603]
"('SingleLineMatcherTest.java', 'com.github.aureliano.evtbridge.core.matcher.SingleLineMatcherTest', 'testMatches', '\\d{4}-\\d{2}-\\d{2}\\s\\d{2}:\\d{2}:\\d{2},\\d{3}\\s(INFO|WARN|ERROR)\\s+\\[my-app\\].*$', '2015-02-19 00:00:12,269 INFO  [my-app] (ajp-127.0.0.2-8009-386) [br.com.app.my_app.util.LoggingSessionListener]<memory freeMem=""1314.79"" allocatedMem=""3005.12"" maxMem=""5461.38"" totalFreeMem=""3771.04"" sgbdSessions=""0"" webSessions=""47"" loadAverage=""0.31""/>')","[18072, 18095]"
"('Resolver.java', 'org.yaml.snakeyaml.resolver.Resolver', 'resolve', '^$', 'collectorId')",[13836]
"('Resolver.java', 'org.yaml.snakeyaml.resolver.Resolver', 'resolve', '^(?:~|null|Null|NULL| )$', 'Schedule a task to a exute at specified date time.')",[6435]
"('Resolver.java', 'org.yaml.snakeyaml.resolver.Resolver', 'resolve', '^(?:~|null|Null|NULL| )$', 'jdbc_input')",[10372]
"('Description.java', 'org.junit.runner.Description', 'parseMethod', '(.*)\\((.*)\\)', 'testExecuteOnceAtSpecificTimeScheduler(com.github.aureliano.evtbridge.core.doc.YamlSchemaBuilderTest)')",[1249]
"('Description.java', 'org.junit.runner.Description', 'parseMethod', '(.*)\\((.*)\\)', 'testIsValidTimeUnit(com.github.aureliano.evtbridge.core.helper.TimeHelperTest)')",[957]
"('Resolver.java', 'org.yaml.snakeyaml.resolver.Resolver', 'resolve', '^(?:~|null|Null|NULL| )$', 'required')","[4589, 5613, 6091, 6927, 7795, 8273, 8751, 12402, 12944, 13518, 14124, 14666, 15411, 16253, 16699]"
"('Resolver.java', 'org.yaml.snakeyaml.resolver.Resolver', 'resolve', '^(?:~|null|Null|NULL| )$', 'items')","[12045, 14984, 15760]"
"('Resolver.java', 'org.yaml.snakeyaml.resolver.Resolver', 'resolve', '^(?:~|null|Null|NULL| )$', 'Input configuration.')",[9095]
"('Resolver.java', 'org.yaml.snakeyaml.resolver.Resolver', 'resolve', '^(?:~|null|Null|NULL| )$', 'Input configurations.')",[15347]
"('Description.java', 'org.junit.runner.Description', 'parseMethod', '(.*)\\((.*)\\)', 'testMinuteValidation(com.github.aureliano.evtbridge.core.schedule.ExecutePeriodicallyAtSpecificTimeSchedulerTest)')",[353]
"('Resolver.java', 'org.yaml.snakeyaml.resolver.Resolver', 'resolve', '^$', 'external_command')",[9658]
"('Resolver.java', 'org.yaml.snakeyaml.resolver.Resolver', 'resolve', '^(?:yes|Yes|YES|no|No|NO|true|True|TRUE|false|False|FALSE|on|On|ON|off|Off|OFF)$', 'The time unit of the delay and period parameters.')",[4493]
"('Resolver.java', 'org.yaml.snakeyaml.resolver.Resolver', 'resolve', '^(?:yes|Yes|YES|no|No|NO|true|True|TRUE|false|False|FALSE|on|On|ON|off|Off|OFF)$', 'false')","[12466, 12784, 13008, 13582, 14188, 14506, 14730, 15475, 16317, 16763]"
"('Resolver.java', 'org.yaml.snakeyaml.resolver.Resolver', 'resolve', '^(?:~|null|Null|NULL| )$', 'The time to delay at first execution.')",[5549]
"('Resolver.java', 'org.yaml.snakeyaml.resolver.Resolver', 'resolve', '^(?:~|null|Null|NULL| )$', 'nanoseconds')","[5291, 5325]"
