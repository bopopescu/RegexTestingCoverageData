"('Description.java', 'org.junit.runner.Description', 'methodAndClassNamePatternGroupOrDefault', '([\\s\\S]*)\\((.*)\\)', 'testArchiveWithSubdir(org.eclipse.jgit.pgm.ArchiveTest)')","[888, 1553]"
"('Description.java', 'org.junit.runner.Description', 'methodAndClassNamePatternGroupOrDefault', '([\\s\\S]*)\\((.*)\\)', 'testCheckoutNewBranchThatAlreadyExists(org.eclipse.jgit.pgm.CheckoutTest)')","[2881, 3496]"
"('URIish.java', 'org.eclipse.jgit.transport.URIish', '<init>', '^(file):([\\\\/](?![\\\\/])((?:[A-Za-z]:)?[\\\\/]?(?:(?:[^\\\\/]+[\\\\/]+)*[^\\\\/]+[\\\\/]*)))$', 'file:///tmp/jgit_test_3847233758485182216_tmp/tmp_6629308361723370984/.git/')",[5171]
"('Description.java', 'org.junit.runner.Description', 'methodAndClassNamePatternGroupOrDefault', '([\\s\\S]*)\\((.*)\\)', 'testNoHead(org.eclipse.jgit.pgm.DescribeTest)')","[3213, 3300]"
"('Description.java', 'org.junit.runner.Description', 'methodAndClassNamePatternGroupOrDefault', '([\\s\\S]*)\\((.*)\\)', 'fileModeTestMissingWithFolderInWorkingTree(org.eclipse.jgit.pgm.CheckoutTest)')","[3343, 3738]"
"('Description.java', 'org.junit.runner.Description', 'methodAndClassNamePatternGroupOrDefault', '([\\s\\S]*)\\((.*)\\)', 'testSquash(org.eclipse.jgit.pgm.MergeTest)')","[4516, 4757]"
"('Description.java', 'org.junit.runner.Description', 'methodAndClassNamePatternGroupOrDefault', '([\\s\\S]*)\\((.*)\\)', 'testMergeWithUserMessage(org.eclipse.jgit.pgm.MergeTest)')","[4474, 4713]"
"('Description.java', 'org.junit.runner.Description', 'methodAndClassNamePatternGroupOrDefault', '([\\s\\S]*)\\((.*)\\)', 'testList(org.eclipse.jgit.pgm.BranchTest)')","[78, 164]"
"('Description.java', 'org.junit.runner.Description', 'methodAndClassNamePatternGroupOrDefault', '([\\s\\S]*)\\((.*)\\)', 'testCheckoutNewBranchOnBranchToBeBorn(org.eclipse.jgit.pgm.CheckoutTest)')","[3091, 3716]"
"('URIish.java', 'org.eclipse.jgit.transport.URIish', '<init>', '^(?:([^/:@]+)(?::([^\\\\/]+))?@)?((?:[^\\\\/:]+)|(?:\\[[0-9a-f:]+\\])):((?:(?:/~(?:[^\\\\/]+))[\\\\/])?(?:(?:[^\\\\/]+[\\\\/]+)*[^\\\\/]+[\\\\/]*))$', '/tmp/jgit_test_6814125223005357585_tmp/tmp_4921074263512159568/.')","[2642, 3856]"
"('Description.java', 'org.junit.runner.Description', 'methodAndClassNamePatternGroupOrDefault', '([\\s\\S]*)\\((.*)\\)', 'testTarPrefixWithoutTrailingSlash(org.eclipse.jgit.pgm.ArchiveTest)')","[1141, 1795]"
"('Description.java', 'org.junit.runner.Description', 'methodAndClassNamePatternGroupOrDefault', '([\\s\\S]*)\\((.*)\\)', 'testUnrecognizedExtensionMeansTar(org.eclipse.jgit.pgm.ArchiveTest)')","[930, 1597]"
"('URIish.java', 'org.eclipse.jgit.transport.URIish', '<init>', '^(file):([\\\\/](?![\\\\/])((?:[A-Za-z]:)?[\\\\/]?(?:(?:[^\\\\/]+[\\\\/]+)*[^\\\\/]+[\\\\/]*)))$', 'file:///tmp/jgit_test_3293107736476061000_tmp/tmp_3058208056969456865/.git/')",[5001]
"('Description.java', 'org.junit.runner.Description', 'methodAndClassNamePatternGroupOrDefault', '([\\s\\S]*)\\((.*)\\)', 'testSquashSelf(org.eclipse.jgit.pgm.MergeTest)')","[4495, 4735]"
"('Description.java', 'org.junit.runner.Description', 'methodAndClassNamePatternGroupOrDefault', '([\\s\\S]*)\\((.*)\\)', 'testDefaultFormatIsTar(org.eclipse.jgit.pgm.ArchiveTest)')","[972, 1641]"
"('Description.java', 'org.junit.runner.Description', 'methodAndClassNamePatternGroupOrDefault', '([\\s\\S]*)\\((.*)\\)', 'org.eclipse.jgit.pgm.TagTest')","[2422, 3114]"
"('URIish.java', 'org.eclipse.jgit.transport.URIish', '<init>', '^([a-z][a-z0-9+-]+)://(?:(?:([^/:@]+)(?::([^\\\\/]+))?@)?((?:[^\\\\/:]+)|(?:\\[[0-9a-f:]+\\]))(?::(\\d+))?((?:/~(?:[^\\\\/]+))?[\\\\/]))?(.+)?$', 'file:///tmp/jgit_test_3293107736476061000_tmp/tmp_3058208056969456865/.git/')",[5035]
"('URIish.java', 'org.eclipse.jgit.transport.URIish', '<init>', '^([a-z][a-z0-9+-]+)://(?:(?:([^/:@]+)(?::([^\\\\/]+))?@)?((?:[^\\\\/:]+)|(?:\\[[0-9a-f:]+\\]))(?::(\\d+))?((?:/~(?:[^\\\\/]+))?[\\\\/]))?(.+)?$', '/tmp/jgit_test_8994296667457380754_tmp/tmp_4897493546934649380/.')","[6423, 6568]"
"('Description.java', 'org.junit.runner.Description', 'methodAndClassNamePatternGroupOrDefault', '([\\s\\S]*)\\((.*)\\)', 'testEmptyArchive(org.eclipse.jgit.pgm.ArchiveTest)')","[846, 1509]"
"('Description.java', 'org.junit.runner.Description', 'methodAndClassNamePatternGroupOrDefault', '([\\s\\S]*)\\((.*)\\)', 'fileModeTestFolderThenFileWithMissingInWorkingTree(org.eclipse.jgit.pgm.CheckoutTest)')","[2944, 3562]"
"('URIish.java', 'org.eclipse.jgit.transport.URIish', '<init>', '^(?:([^/:@]+)(?::([^\\\\/]+))?@)?([^\\\\/:]{2,}):([\\\\/](?:(?:[^\\\\/]+[\\\\/]+)*[^\\\\/]+[\\\\/]*))$', '/tmp/jgit_test_6814125223005357585_tmp/tmp_4921074263512159568/.')","[2669, 3888]"
"('Description.java', 'org.junit.runner.Description', 'methodAndClassNamePatternGroupOrDefault', '([\\s\\S]*)\\((.*)\\)', 'testEmptyTar(org.eclipse.jgit.pgm.ArchiveTest)')","[1246, 1905]"
"('Description.java', 'org.junit.runner.Description', 'methodAndClassNamePatternGroupOrDefault', '([\\s\\S]*)\\((.*)\\)', 'testTxzExtension(org.eclipse.jgit.pgm.ArchiveTest)')","[1056, 1729]"
"('Description.java', 'org.junit.runner.Description', 'methodAndClassNamePatternGroupOrDefault', '([\\s\\S]*)\\((.*)\\)', 'testCheckoutUnresolvedHead(org.eclipse.jgit.pgm.CheckoutTest)')","[2839, 3452]"
"('Description.java', 'org.junit.runner.Description', 'methodAndClassNamePatternGroupOrDefault', '([\\s\\S]*)\\((.*)\\)', 'testFetchDefault(org.eclipse.jgit.pgm.FetchTest)')","[4880, 4945]"
"('Description.java', 'org.junit.runner.Description', 'methodAndClassNamePatternGroupOrDefault', '([\\s\\S]*)\\((.*)\\)', 'testDescribeCommit(org.eclipse.jgit.pgm.DescribeTest)')","[3171, 3256]"
"('Description.java', 'org.junit.runner.Description', 'methodAndClassNamePatternGroupOrDefault', '([\\s\\S]*)\\((.*)\\)', 'org.eclipse.jgit.pgm.RepoTest')","[495, 4802]"
"('URIish.java', 'org.eclipse.jgit.transport.URIish', '<init>', '^(file):([\\\\/](?![\\\\/])((?:[A-Za-z]:)?[\\\\/]?(?:(?:[^\\\\/]+[\\\\/]+)*[^\\\\/]+[\\\\/]*)))$', '/tmp/jgit_test_6814125223005357585_tmp/tmp_4921074263512159568/.')","[2588, 3792]"
"('URIish.java', 'org.eclipse.jgit.transport.URIish', '<init>', '^([a-z][a-z0-9+-]+)://(?:(?:([^/:@]+)(?::([^\\\\/]+))?@)?((?:[^\\\\/:]+)|(?:\\[[0-9a-f:]+\\]))(?::(\\d+))?((?:/~(?:[^\\\\/]+))?[\\\\/]))?(.+)?$', '/tmp/jgit_test_6814125223005357585_tmp/tmp_4921074263512159568/.')","[2615, 3824]"
"('SideBandInputStream.java', 'org.eclipse.jgit.transport.SideBandInputStream', 'doProgressLine', '^([\\w ]+): +\\d+% +\\( *(\\d+)/ *(\\d+)\\)(?:, done\\.)? *[\r\n]$', 'Total 1 (delta 0), reused 0 (delta 0)\n')",[5693]
"('SideBandInputStream.java', 'org.eclipse.jgit.transport.SideBandInputStream', 'doProgressLine', '^([\\w ]+): +(\\d+)(?:, done\\.)? *[\r\n]$', 'Counting objects: 1, done\n')",[5546]
"('Description.java', 'org.junit.runner.Description', 'methodAndClassNamePatternGroupOrDefault', '([\\s\\S]*)\\((.*)\\)', 'testTgzExtensions(org.eclipse.jgit.pgm.ArchiveTest)')","[657, 1311]"
"('Description.java', 'org.junit.runner.Description', 'methodAndClassNamePatternGroupOrDefault', '([\\s\\S]*)\\((.*)\\)', 'fileModeTestFileWithFolderInIndex(org.eclipse.jgit.pgm.CheckoutTest)')","[2902, 3518]"
"('SideBandInputStream.java', 'org.eclipse.jgit.transport.SideBandInputStream', 'doProgressLine', '^([\\w ]+): +(\\d+)(?:, done\\.)? *[\r\n]$', 'Counting objects: 1   \r')","[5448, 5908]"
"('URIish.java', 'org.eclipse.jgit.transport.URIish', '<init>', '^(?:([^/:@]+)(?::([^\\\\/]+))?@)?((?:[^\\\\/:]+)|(?:\\[[0-9a-f:]+\\])):((?:(?:/~(?:[^\\\\/]+))[\\\\/])?(?:(?:[^\\\\/]+[\\\\/]+)*[^\\\\/]+[\\\\/]*))$', '/tmp/jgit_test_8994296667457380754_tmp/tmp_4897493546934649380/.')","[6450, 6600]"
"('Description.java', 'org.junit.runner.Description', 'methodAndClassNamePatternGroupOrDefault', '([\\s\\S]*)\\((.*)\\)', 'testExistingBranch(org.eclipse.jgit.pgm.BranchTest)')","[57, 142]"
"('SideBandInputStream.java', 'org.eclipse.jgit.transport.SideBandInputStream', 'doProgressLine', '^([\\w ]+): +\\d+% +\\( *(\\d+)/ *(\\d+)\\)(?:, done\\.)? *[\r\n]$', 'Finding sources:  33% (1/3)   \r')",[6055]
"('Description.java', 'org.junit.runner.Description', 'methodAndClassNamePatternGroupOrDefault', '([\\s\\S]*)\\((.*)\\)', 'testCheckoutWithMissingWorkingTreeFile(org.eclipse.jgit.pgm.CheckoutTest)')","[3028, 3650]"
"('Description.java', 'org.junit.runner.Description', 'methodAndClassNamePatternGroupOrDefault', '([\\s\\S]*)\\((.*)\\)', 'testListContains(org.eclipse.jgit.pgm.BranchTest)')","[120, 208]"
"('SideBandInputStream.java', 'org.eclipse.jgit.transport.SideBandInputStream', 'doProgressLine', '^([\\w ]+): +\\d+% +\\( *(\\d+)/ *(\\d+)\\)(?:, done\\.)? *[\r\n]$', 'Total 3 (delta 0), reused 0 (delta 0)\n')",[6251]
"('Description.java', 'org.junit.runner.Description', 'methodAndClassNamePatternGroupOrDefault', '([\\s\\S]*)\\((.*)\\)', 'testTarIncludesSubmoduleDirectory(org.eclipse.jgit.pgm.ArchiveTest)')","[1120, 1773]"
"('Description.java', 'org.junit.runner.Description', 'methodAndClassNamePatternGroupOrDefault', '([\\s\\S]*)\\((.*)\\)', 'fileModeTestFileThenFileWithFolderInIndex(org.eclipse.jgit.pgm.CheckoutTest)')","[2860, 3474]"
"('Description.java', 'org.junit.runner.Description', 'methodAndClassNamePatternGroupOrDefault', '([\\s\\S]*)\\((.*)\\)', 'testMerge(org.eclipse.jgit.pgm.MergeTest)')","[4294, 4625]"
"('SideBandInputStream.java', 'org.eclipse.jgit.transport.SideBandInputStream', 'doProgressLine', '^([\\w ]+): +\\d+% +\\( *(\\d+)/ *(\\d+)\\)(?:, done\\.)? *[\r\n]$', 'Counting objects: 3, done\n')",[5957]
"('URIish.java', 'org.eclipse.jgit.transport.URIish', '<init>', '^(file):([\\\\/](?![\\\\/])((?:[A-Za-z]:)?[\\\\/]?(?:(?:[^\\\\/]+[\\\\/]+)*[^\\\\/]+[\\\\/]*)))$', 'file:///tmp/jgit_test_1625374755457597101_tmp/tmp_8655424157825723817/.git/')",[5776]
"('SideBandInputStream.java', 'org.eclipse.jgit.transport.SideBandInputStream', 'doProgressLine', '^([\\w ]+): +\\d+% +\\( *(\\d+)/ *(\\d+)\\)(?:, done\\.)? *[\r\n]$', 'Finding sources: 100% (3/3)\n')",[6202]
"('Description.java', 'org.junit.runner.Description', 'methodAndClassNamePatternGroupOrDefault', '([\\s\\S]*)\\((.*)\\)', 'testSingleCommit(org.eclipse.jgit.pgm.ReflogTest)')","[4000, 4064]"
"('Description.java', 'org.junit.runner.Description', 'methodAndClassNamePatternGroupOrDefault', '([\\s\\S]*)\\((.*)\\)', 'testFastForwardOnly(org.eclipse.jgit.pgm.MergeTest)')","[4363, 4647]"
"('SideBandInputStream.java', 'org.eclipse.jgit.transport.SideBandInputStream', 'doProgressLine', '^([\\w ]+): +(\\d+)(?:, done\\.)? *[\r\n]$', 'Total 3 (delta 0), reused 0 (delta 0)\n')",[6300]
"('Description.java', 'org.junit.runner.Description', 'methodAndClassNamePatternGroupOrDefault', '([\\s\\S]*)\\((.*)\\)', 'testArchivePreservesContent(org.eclipse.jgit.pgm.ArchiveTest)')","[993, 1663]"
"('Description.java', 'org.junit.runner.Description', 'methodAndClassNamePatternGroupOrDefault', '([\\s\\S]*)\\((.*)\\)', 'testArchivePreservesMode(org.eclipse.jgit.pgm.ArchiveTest)')","[909, 1575]"
"('URIish.java', 'org.eclipse.jgit.transport.URIish', '<init>', '^(file):([\\\\/](?![\\\\/])((?:[A-Za-z]:)?[\\\\/]?(?:(?:[^\\\\/]+[\\\\/]+)*[^\\\\/]+[\\\\/]*)))$', 'file:/tmp/jgit_test_4310281196345348612_tmp/tmp_796123119723475054/.git/')",[4174]
"('URIish.java', 'org.eclipse.jgit.transport.URIish', '<init>', '^([a-z][a-z0-9+-]+)://(?:(?:([^/:@]+)(?::([^\\\\/]+))?@)?((?:[^\\\\/:]+)|(?:\\[[0-9a-f:]+\\]))(?::(\\d+))?((?:/~(?:[^\\\\/]+))?[\\\\/]))?(.+)?$', 'file:///tmp/jgit_test_1625374755457597101_tmp/tmp_8655424157825723817/.git/')",[5810]
"('URIish.java', 'org.eclipse.jgit.transport.URIish', '<init>', '^([a-z][a-z0-9+-]+)://(?:(?:([^/:@]+)(?::([^\\\\/]+))?@)?((?:[^\\\\/:]+)|(?:\\[[0-9a-f:]+\\]))(?::(\\d+))?((?:/~(?:[^\\\\/]+))?[\\\\/]))?(.+)?$', 'file:///tmp/jgit_test_3847233758485182216_tmp/tmp_6629308361723370984/.git/')",[5205]
"('Description.java', 'org.junit.runner.Description', 'methodAndClassNamePatternGroupOrDefault', '([\\s\\S]*)\\((.*)\\)', 'testBranch(org.eclipse.jgit.pgm.ReflogTest)')","[4042, 4108]"
"('URIish.java', 'org.eclipse.jgit.transport.URIish', '<init>', '^([\\\\/]?((?:[A-Za-z]:)?[\\\\/]?(?:(?:[^\\\\/]+[\\\\/]+)*[^\\\\/]+[\\\\/]*)))$', '/tmp/jgit_test_8994296667457380754_tmp/tmp_4897493546934649380/.')","[6504, 6664]"
"('Description.java', 'org.junit.runner.Description', 'methodAndClassNamePatternGroupOrDefault', '([\\s\\S]*)\\((.*)\\)', 'testTarPreservesMode(org.eclipse.jgit.pgm.ArchiveTest)')","[804, 1465]"
"('Description.java', 'org.junit.runner.Description', 'methodAndClassNamePatternGroupOrDefault', '([\\s\\S]*)\\((.*)\\)', 'testClean(org.eclipse.jgit.pgm.ReflogTest)')","[4021, 4086]"
"('Description.java', 'org.junit.runner.Description', 'methodAndClassNamePatternGroupOrDefault', '([\\s\\S]*)\\((.*)\\)', 'null')","[17, 225, 476, 596, 2179, 2301, 2403, 2736, 3131, 3960, 4191, 4819, 5075, 5245]"
"('Description.java', 'org.junit.runner.Description', 'methodAndClassNamePatternGroupOrDefault', '([\\s\\S]*)\\((.*)\\)', 'testListDetached(org.eclipse.jgit.pgm.BranchTest)')","[99, 186]"
"('SideBandInputStream.java', 'org.eclipse.jgit.transport.SideBandInputStream', 'doProgressLine', '^([\\w ]+): +(\\d+)(?:, done\\.)? *[\r\n]$', 'Total 1 (delta 0), reused 0 (delta 0)\n')",[5742]
"('Description.java', 'org.junit.runner.Description', 'methodAndClassNamePatternGroupOrDefault', '([\\s\\S]*)\\((.*)\\)', 'testStatusPorcelain(org.eclipse.jgit.pgm.StatusTest)')","[5285, 5328]"
"('Description.java', 'org.junit.runner.Description', 'methodAndClassNamePatternGroupOrDefault', '([\\s\\S]*)\\((.*)\\)', 'testZipExtension(org.eclipse.jgit.pgm.ArchiveTest)')","[951, 1619]"
"('Description.java', 'org.junit.runner.Description', 'methodAndClassNamePatternGroupOrDefault', '([\\s\\S]*)\\((.*)\\)', 'org.eclipse.jgit.pgm.StatusTest')","[5264, 6369]"
"('Description.java', 'org.junit.runner.Description', 'methodAndClassNamePatternGroupOrDefault', '([\\s\\S]*)\\((.*)\\)', 'testArchiveWithFiles(org.eclipse.jgit.pgm.ArchiveTest)')","[1162, 1817]"
"('Description.java', 'org.junit.runner.Description', 'methodAndClassNamePatternGroupOrDefault', '([\\s\\S]*)\\((.*)\\)', 'org.eclipse.jgit.pgm.FetchTest')","[4838, 6323]"
"('Description.java', 'org.junit.runner.Description', 'methodAndClassNamePatternGroupOrDefault', '([\\s\\S]*)\\((.*)\\)', 'fileModeTestMissingThenFolderWithFileInWorkingTree(org.eclipse.jgit.pgm.CheckoutTest)')","[3364, 3760]"
"('Description.java', 'org.junit.runner.Description', 'methodAndClassNamePatternGroupOrDefault', '([\\s\\S]*)\\((.*)\\)', 'testCheckoutSelf(org.eclipse.jgit.pgm.CheckoutTest)')","[2818, 3430]"
"('Description.java', 'org.junit.runner.Description', 'methodAndClassNamePatternGroupOrDefault', '([\\s\\S]*)\\((.*)\\)', 'testCheckoutExistingBranchWithConflict(org.eclipse.jgit.pgm.CheckoutTest)')","[2923, 3540]"
"('Description.java', 'org.junit.runner.Description', 'methodAndClassNamePatternGroupOrDefault', '([\\s\\S]*)\\((.*)\\)', 'testArchivePrefixOption(org.eclipse.jgit.pgm.ArchiveTest)')","[867, 1531]"
"('Description.java', 'org.junit.runner.Description', 'methodAndClassNamePatternGroupOrDefault', '([\\s\\S]*)\\((.*)\\)', 'org.eclipse.jgit.pgm.ArchiveTest')","[615, 6687]"
"('Description.java', 'org.junit.runner.Description', 'methodAndClassNamePatternGroupOrDefault', '([\\s\\S]*)\\((.*)\\)', 'testTagTwice(org.eclipse.jgit.pgm.TagTest)')","[2443, 2465]"
"('Description.java', 'org.junit.runner.Description', 'methodAndClassNamePatternGroupOrDefault', '([\\s\\S]*)\\((.*)\\)', 'testFetchAllTags(org.eclipse.jgit.pgm.FetchTest)')","[4901, 4967]"
"('Description.java', 'org.junit.runner.Description', 'methodAndClassNamePatternGroupOrDefault', '([\\s\\S]*)\\((.*)\\)', 'testHeadNoTag(org.eclipse.jgit.pgm.DescribeTest)')","[3192, 3278]"
"('Description.java', 'org.junit.runner.Description', 'methodAndClassNamePatternGroupOrDefault', '([\\s\\S]*)\\((.*)\\)', 'testPrefixWithoutTrailingSlash(org.eclipse.jgit.pgm.ArchiveTest)')","[1099, 1751]"
"('URIish.java', 'org.eclipse.jgit.transport.URIish', '<init>', '^([\\\\/]?((?:[A-Za-z]:)?[\\\\/]?(?:(?:[^\\\\/]+[\\\\/]+)*[^\\\\/]+[\\\\/]*)))$', '/tmp/jgit_test_6814125223005357585_tmp/tmp_4921074263512159568/.')","[2696, 3920]"
"('Description.java', 'org.junit.runner.Description', 'methodAndClassNamePatternGroupOrDefault', '([\\s\\S]*)\\((.*)\\)', 'testUnrecognizedFormat(org.eclipse.jgit.pgm.ArchiveTest)')","[762, 1421]"
"('Description.java', 'org.junit.runner.Description', 'methodAndClassNamePatternGroupOrDefault', '([\\s\\S]*)\\((.*)\\)', 'testCheckoutNewBranch(org.eclipse.jgit.pgm.CheckoutTest)')","[3049, 3672]"
"('Description.java', 'org.junit.runner.Description', 'methodAndClassNamePatternGroupOrDefault', '([\\s\\S]*)\\((.*)\\)', 'org.eclipse.jgit.pgm.BranchTest')","[36, 2162]"
"('Description.java', 'org.junit.runner.Description', 'methodAndClassNamePatternGroupOrDefault', '([\\s\\S]*)\\((.*)\\)', 'testArchiveWithLongFilename(org.eclipse.jgit.pgm.ArchiveTest)')","[783, 1443]"
"('Description.java', 'org.junit.runner.Description', 'methodAndClassNamePatternGroupOrDefault', '([\\s\\S]*)\\((.*)\\)', 'testFetchNoTags(org.eclipse.jgit.pgm.FetchTest)')","[4859, 4923]"
"('SideBandInputStream.java', 'org.eclipse.jgit.transport.SideBandInputStream', 'doProgressLine', '^([\\w ]+): +\\d+% +\\( *(\\d+)/ *(\\d+)\\)(?:, done\\.)? *[\r\n]$', 'Finding sources:  66% (2/3)   \r')",[6104]
"('Description.java', 'org.junit.runner.Description', 'methodAndClassNamePatternGroupOrDefault', '([\\s\\S]*)\\((.*)\\)', 'testTarPreservesContent(org.eclipse.jgit.pgm.ArchiveTest)')","[678, 1333]"
"('Description.java', 'org.junit.runner.Description', 'methodAndClassNamePatternGroupOrDefault', '([\\s\\S]*)\\((.*)\\)', 'testCommitAmend(org.eclipse.jgit.pgm.CommitAndLogTest)')","[2341, 2363]"
"('Description.java', 'org.junit.runner.Description', 'methodAndClassNamePatternGroupOrDefault', '([\\s\\S]*)\\((.*)\\)', 'testCheckoutPath(org.eclipse.jgit.pgm.CheckoutTest)')","[2797, 3408]"
"('Description.java', 'org.junit.runner.Description', 'methodAndClassNamePatternGroupOrDefault', '([\\s\\S]*)\\((.*)\\)', 'testTarPrefixOption(org.eclipse.jgit.pgm.ArchiveTest)')","[636, 1289]"
"('Description.java', 'org.junit.runner.Description', 'methodAndClassNamePatternGroupOrDefault', '([\\s\\S]*)\\((.*)\\)', 'testMergeSelf(org.eclipse.jgit.pgm.MergeTest)')","[4231, 4559]"
"('URIish.java', 'org.eclipse.jgit.transport.URIish', '<init>', '^(file):([\\\\/](?![\\\\/])((?:[A-Za-z]:)?[\\\\/]?(?:(?:[^\\\\/]+[\\\\/]+)*[^\\\\/]+[\\\\/]*)))$', 'file:///tmp/jgit_test_4310281196345348612_tmp/tmp_796123119723475054/.git/')",[4342]
"('URIish.java', 'org.eclipse.jgit.transport.URIish', '<init>', '^(?:([^/:@]+)(?::([^\\\\/]+))?@)?([^\\\\/:]{2,}):([\\\\/](?:(?:[^\\\\/]+[\\\\/]+)*[^\\\\/]+[\\\\/]*))$', '/tmp/jgit_test_8994296667457380754_tmp/tmp_4897493546934649380/.')","[6477, 6632]"
"('URIish.java', 'org.eclipse.jgit.transport.URIish', '<init>', '^([a-z][a-z0-9+-]+)://(?:(?:([^/:@]+)(?::([^\\\\/]+))?@)?((?:[^\\\\/:]+)|(?:\\[[0-9a-f:]+\\]))(?::(\\d+))?((?:/~(?:[^\\\\/]+))?[\\\\/]))?(.+)?$', 'file:///tmp/jgit_test_4310281196345348612_tmp/tmp_796123119723475054/.git/')",[4432]
"('Description.java', 'org.junit.runner.Description', 'methodAndClassNamePatternGroupOrDefault', '([\\s\\S]*)\\((.*)\\)', 'testNoFastForwardAndSquash(org.eclipse.jgit.pgm.MergeTest)')","[4273, 4603]"
"('Description.java', 'org.junit.runner.Description', 'methodAndClassNamePatternGroupOrDefault', '([\\s\\S]*)\\((.*)\\)', 'testDescribeTag(org.eclipse.jgit.pgm.DescribeTest)')","[3234, 3322]"
"('Description.java', 'org.junit.runner.Description', 'methodAndClassNamePatternGroupOrDefault', '([\\s\\S]*)\\((.*)\\)', 'testAddRepoManifest(org.eclipse.jgit.pgm.RepoTest)')","[516, 1078]"
"('Description.java', 'org.junit.runner.Description', 'methodAndClassNamePatternGroupOrDefault', '([\\s\\S]*)\\((.*)\\)', 'testMergeNoCommitSquash(org.eclipse.jgit.pgm.MergeTest)')","[4384, 4669]"
"('Description.java', 'org.junit.runner.Description', 'methodAndClassNamePatternGroupOrDefault', '([\\s\\S]*)\\((.*)\\)', 'testTarWithLongFilename(org.eclipse.jgit.pgm.ArchiveTest)')","[1035, 1707]"
"('URIish.java', 'org.eclipse.jgit.transport.URIish', '<init>', '^(file):([\\\\/](?![\\\\/])((?:[A-Za-z]:)?[\\\\/]?(?:(?:[^\\\\/]+[\\\\/]+)*[^\\\\/]+[\\\\/]*)))$', 'file:/tmp/jgit_test_4310281196345348612_tmp/tmp_6793512823030008458/.git/')",[2284]
"('Description.java', 'org.junit.runner.Description', 'methodAndClassNamePatternGroupOrDefault', '([\\s\\S]*)\\((.*)\\)', 'testArchiveIncludesSubmoduleDirectory(org.eclipse.jgit.pgm.ArchiveTest)')","[699, 1355]"
"('Description.java', 'org.junit.runner.Description', 'methodAndClassNamePatternGroupOrDefault', '([\\s\\S]*)\\((.*)\\)', 'testAddFileTwice(org.eclipse.jgit.pgm.AddTest)')","[328, 437]"
"('Description.java', 'org.junit.runner.Description', 'methodAndClassNamePatternGroupOrDefault', '([\\s\\S]*)\\((.*)\\)', 'testCheckoutBranch(org.eclipse.jgit.pgm.CheckoutTest)')","[2965, 3584]"
"('Description.java', 'org.junit.runner.Description', 'methodAndClassNamePatternGroupOrDefault', '([\\s\\S]*)\\((.*)\\)', 'testListConfig(org.eclipse.jgit.pgm.ConfigTest)')","[5115, 5137]"
"('URIish.java', 'org.eclipse.jgit.transport.URIish', '<init>', '^([a-z][a-z0-9+-]+)://(?:(?:([^/:@]+)(?::([^\\\\/]+))?@)?((?:[^\\\\/:]+)|(?:\\[[0-9a-f:]+\\]))(?::(\\d+))?((?:/~(?:[^\\\\/]+))?[\\\\/]))?(.+)?$', 'file:///tmp/jgit_test_4310281196345348612_tmp/tmp_6793512823030008458/.git/')",[2561]
"('Description.java', 'org.junit.runner.Description', 'methodAndClassNamePatternGroupOrDefault', '([\\s\\S]*)\\((.*)\\)', 'org.eclipse.jgit.pgm.ReflogTest')","[3979, 4131]"
"('Description.java', 'org.junit.runner.Description', 'methodAndClassNamePatternGroupOrDefault', '([\\s\\S]*)\\((.*)\\)', 'org.eclipse.jgit.pgm.CommitAndLogTest')","[2320, 2719]"
"('SideBandInputStream.java', 'org.eclipse.jgit.transport.SideBandInputStream', 'doProgressLine', '^([\\w ]+): +(\\d+)(?:, done\\.)? *[\r\n]$', 'Counting objects: 3, done\n')",[6006]
"('Description.java', 'org.junit.runner.Description', 'methodAndClassNamePatternGroupOrDefault', '([\\s\\S]*)\\((.*)\\)', 'testFastForward(org.eclipse.jgit.pgm.MergeTest)')","[4252, 4581]"
"('Description.java', 'org.junit.runner.Description', 'methodAndClassNamePatternGroupOrDefault', '([\\s\\S]*)\\((.*)\\)', 'testAddAFile(org.eclipse.jgit.pgm.AddTest)')","[286, 393]"
"('SideBandInputStream.java', 'org.eclipse.jgit.transport.SideBandInputStream', 'doProgressLine', '^([\\w ]+): +\\d+% +\\( *(\\d+)/ *(\\d+)\\)(?:, done\\.)? *[\r\n]$', 'Counting objects: 1   \r')","[5399, 5859]"
"('Description.java', 'org.junit.runner.Description', 'methodAndClassNamePatternGroupOrDefault', '([\\s\\S]*)\\((.*)\\)', 'testCheckoutHead(org.eclipse.jgit.pgm.CheckoutTest)')","[2776, 3386]"
"('Description.java', 'org.junit.runner.Description', 'methodAndClassNamePatternGroupOrDefault', '([\\s\\S]*)\\((.*)\\)', 'fileModeTestFolderThenMissingWithFileInWorkingTree(org.eclipse.jgit.pgm.CheckoutTest)')","[3070, 3694]"
"('Description.java', 'org.junit.runner.Description', 'methodAndClassNamePatternGroupOrDefault', '([\\s\\S]*)\\((.*)\\)', 'testAddUsage(org.eclipse.jgit.pgm.AddTest)')","[307, 415]"
"('Description.java', 'org.junit.runner.Description', 'methodAndClassNamePatternGroupOrDefault', '([\\s\\S]*)\\((.*)\\)', 'testNoExtensionMeansTar(org.eclipse.jgit.pgm.ArchiveTest)')","[825, 1487]"
"('Description.java', 'org.junit.runner.Description', 'methodAndClassNamePatternGroupOrDefault', '([\\s\\S]*)\\((.*)\\)', 'testTarExtension(org.eclipse.jgit.pgm.ArchiveTest)')","[1014, 1685]"
"('Description.java', 'org.junit.runner.Description', 'methodAndClassNamePatternGroupOrDefault', '([\\s\\S]*)\\((.*)\\)', 'testCheckoutNonExistingBranch(org.eclipse.jgit.pgm.CheckoutTest)')","[3007, 3628]"
"('Description.java', 'org.junit.runner.Description', 'methodAndClassNamePatternGroupOrDefault', '([\\s\\S]*)\\((.*)\\)', 'fileModeTestFolderWithMissingInWorkingTree(org.eclipse.jgit.pgm.CheckoutTest)')","[2986, 3606]"
"('SideBandInputStream.java', 'org.eclipse.jgit.transport.SideBandInputStream', 'doProgressLine', '^([\\w ]+): +\\d+% +\\( *(\\d+)/ *(\\d+)\\)(?:, done\\.)? *[\r\n]$', 'Finding sources: 100% (3/3)   \r')",[6153]
"('Description.java', 'org.junit.runner.Description', 'methodAndClassNamePatternGroupOrDefault', '([\\s\\S]*)\\((.*)\\)', 'testAddNothing(org.eclipse.jgit.pgm.AddTest)')","[265, 371]"
"('Description.java', 'org.junit.runner.Description', 'methodAndClassNamePatternGroupOrDefault', '([\\s\\S]*)\\((.*)\\)', 'testFormatOverridesFilename(org.eclipse.jgit.pgm.ArchiveTest)')","[1204, 1861]"
"('Description.java', 'org.junit.runner.Description', 'methodAndClassNamePatternGroupOrDefault', '([\\s\\S]*)\\((.*)\\)', 'testTarWithSubdir(org.eclipse.jgit.pgm.ArchiveTest)')","[720, 1377]"
"('URIish.java', 'org.eclipse.jgit.transport.URIish', '<init>', '^(file):([\\\\/](?![\\\\/])((?:[A-Za-z]:)?[\\\\/]?(?:(?:[^\\\\/]+[\\\\/]+)*[^\\\\/]+[\\\\/]*)))$', '/tmp/jgit_test_8994296667457380754_tmp/tmp_4897493546934649380/.')","[6396, 6536]"
"('SideBandInputStream.java', 'org.eclipse.jgit.transport.SideBandInputStream', 'doProgressLine', '^([\\w ]+): +\\d+% +\\( *(\\d+)/ *(\\d+)\\)(?:, done\\.)? *[\r\n]$', 'Counting objects: 1, done\n')",[5497]
"('Description.java', 'org.junit.runner.Description', 'methodAndClassNamePatternGroupOrDefault', '([\\s\\S]*)\\((.*)\\)', 'testTbz2Extension(org.eclipse.jgit.pgm.ArchiveTest)')","[1267, 1927]"
"('Description.java', 'org.junit.runner.Description', 'methodAndClassNamePatternGroupOrDefault', '([\\s\\S]*)\\((.*)\\)', 'testExtensionMatchIsAnchored(org.eclipse.jgit.pgm.ArchiveTest)')","[741, 1399]"
"('FS_POSIX_Java7.java', 'org.eclipse.jgit.util.FS_POSIX_Java7', '<clinit>', '\\d{3,4}', '0002')","[548, 579, 1959, 1990, 2022, 2053, 2085, 2116]"
"('Description.java', 'org.junit.runner.Description', 'methodAndClassNamePatternGroupOrDefault', '([\\s\\S]*)\\((.*)\\)', 'testPrefixDoesNotNormalizeDoubleSlashInTar(org.eclipse.jgit.pgm.ArchiveTest)')","[1225, 1883]"
"('Description.java', 'org.junit.runner.Description', 'methodAndClassNamePatternGroupOrDefault', '([\\s\\S]*)\\((.*)\\)', 'testMergeNoCommit(org.eclipse.jgit.pgm.MergeTest)')","[4453, 4691]"
"('SideBandInputStream.java', 'org.eclipse.jgit.transport.SideBandInputStream', 'doProgressLine', '^([\\w ]+): +\\d+% +\\( *(\\d+)/ *(\\d+)\\)(?:, done\\.)? *[\r\n]$', 'Finding sources: 100% (1/1)\n')",[5644]
"('URIish.java', 'org.eclipse.jgit.transport.URIish', '<init>', '^(file):([\\\\/](?![\\\\/])((?:[A-Za-z]:)?[\\\\/]?(?:(?:[^\\\\/]+[\\\\/]+)*[^\\\\/]+[\\\\/]*)))$', 'file:///tmp/jgit_test_4310281196345348612_tmp/tmp_6793512823030008458/.git/')",[2513]
"('Description.java', 'org.junit.runner.Description', 'methodAndClassNamePatternGroupOrDefault', '([\\s\\S]*)\\((.*)\\)', 'testAddAlreadyAdded(org.eclipse.jgit.pgm.AddTest)')","[349, 459]"
"('Description.java', 'org.junit.runner.Description', 'methodAndClassNamePatternGroupOrDefault', '([\\s\\S]*)\\((.*)\\)', 'org.eclipse.jgit.pgm.MergeTest')","[4210, 6346]"
"('Description.java', 'org.junit.runner.Description', 'methodAndClassNamePatternGroupOrDefault', '([\\s\\S]*)\\((.*)\\)', 'org.eclipse.jgit.pgm.CLIGitCommandTest')","[2198, 2386]"
"('Description.java', 'org.junit.runner.Description', 'methodAndClassNamePatternGroupOrDefault', '([\\s\\S]*)\\((.*)\\)', 'org.eclipse.jgit.pgm.AddTest')","[244, 2139]"
"('Description.java', 'org.junit.runner.Description', 'methodAndClassNamePatternGroupOrDefault', '([\\s\\S]*)\\((.*)\\)', 'org.eclipse.jgit.pgm.DescribeTest')","[3150, 3943]"
"('Description.java', 'org.junit.runner.Description', 'methodAndClassNamePatternGroupOrDefault', '([\\s\\S]*)\\((.*)\\)', 'org.eclipse.jgit.pgm.CheckoutTest')","[2755, 5058]"
"('Description.java', 'org.junit.runner.Description', 'methodAndClassNamePatternGroupOrDefault', '([\\s\\S]*)\\((.*)\\)', 'org.eclipse.jgit.pgm.ConfigTest')","[5094, 5228]"
"('Description.java', 'org.junit.runner.Description', 'methodAndClassNamePatternGroupOrDefault', '([\\s\\S]*)\\((.*)\\)', 'testSplit(org.eclipse.jgit.pgm.CLIGitCommandTest)')","[2219, 2241]"
"('Description.java', 'org.junit.runner.Description', 'methodAndClassNamePatternGroupOrDefault', '([\\s\\S]*)\\((.*)\\)', 'testStatus(org.eclipse.jgit.pgm.StatusTest)')","[5306, 5350]"
"('Description.java', 'org.junit.runner.Description', 'methodAndClassNamePatternGroupOrDefault', '([\\s\\S]*)\\((.*)\\)', 'testPrefixDoesNotNormalizeDoubleSlash(org.eclipse.jgit.pgm.ArchiveTest)')","[1183, 1839]"
"('SideBandInputStream.java', 'org.eclipse.jgit.transport.SideBandInputStream', 'doProgressLine', '^([\\w ]+): +\\d+% +\\( *(\\d+)/ *(\\d+)\\)(?:, done\\.)? *[\r\n]$', 'Finding sources: 100% (1/1)   \r')",[5595]
"('Description.java', 'org.junit.runner.Description', 'methodAndClassNamePatternGroupOrDefault', '([\\s\\S]*)\\((.*)\\)', 'testNoFastForward(org.eclipse.jgit.pgm.MergeTest)')","[4537, 4779]"
