"('Description.java', 'org.junit.runner.Description', 'methodAndClassNamePatternGroupOrDefault', '(.*)\\((.*)\\)', 'optimizeShouldSucceed4(org.diveintojee.codestory2013.jajascript.JajascriptServiceTest)')","[227, 891]"
"('Description.java', 'org.junit.runner.Description', 'methodAndClassNamePatternGroupOrDefault', '(.*)\\((.*)\\)', 'getAnswerShoudHandleBigPrecision(org.diveintojee.codestory2013.questions.CalculatorServiceTest)')","[771, 1347]"
"('Description.java', 'org.junit.runner.Description', 'methodAndClassNamePatternGroupOrDefault', '(.*)\\((.*)\\)', 'getAnswerShouldSubtract(org.diveintojee.codestory2013.questions.CalculatorServiceTest)')","[531, 1107]"
"('Description.java', 'org.junit.runner.Description', 'methodAndClassNamePatternGroupOrDefault', '(.*)\\((.*)\\)', 'optimizeShouldSucceed2(org.diveintojee.codestory2013.jajascript.JajascriptServiceTest)')","[179, 843]"
"('Description.java', 'org.junit.runner.Description', 'methodAndClassNamePatternGroupOrDefault', '(.*)\\((.*)\\)', 'getChangeShouldReturn1000For1(org.diveintojee.codestory2013.scalaskel.ScalaskelServiceTest)')","[297, 939]"
"('Description.java', 'org.junit.runner.Description', 'methodAndClassNamePatternGroupOrDefault', '(.*)\\((.*)\\)', 'org.diveintojee.codestory2013.scalaskel.ScalaskelServiceTest')","[34, 273, 1439]"
"('Description.java', 'org.junit.runner.Description', 'methodAndClassNamePatternGroupOrDefault', '(.*)\\((.*)\\)', 'org.diveintojee.codestory2013.questions.CalculatorServiceTest')","[85, 507, 2002]"
"('Description.java', 'org.junit.runner.Description', 'methodAndClassNamePatternGroupOrDefault', '(.*)\\((.*)\\)', 'getAnswerShoudHandleNegativeValues(org.diveintojee.codestory2013.questions.CalculatorServiceTest)')","[651, 1227]"
"('QuestionsResource.java', 'org.diveintojee.codestory2013.questions.QuestionsResource', 'isACalculation', '.*\\d+[\\s\\-/\\*]\\d+.*|.*\\(\\d+.*|.*\\d+\\).*', '( je suis ton père )')","[1751, 1795]"
"('Description.java', 'org.junit.runner.Description', 'methodAndClassNamePatternGroupOrDefault', '(.*)\\((.*)\\)', 'getAnswerShoudHandleParenthesis(org.diveintojee.codestory2013.questions.CalculatorServiceTest)')","[627, 1203]"
"('Description.java', 'org.junit.runner.Description', 'methodAndClassNamePatternGroupOrDefault', '(.*)\\((.*)\\)', 'org.diveintojee.codestory2013.questions.QuestionsResourceTest')","[51, 319, 1930]"
"('Description.java', 'org.junit.runner.Description', 'methodAndClassNamePatternGroupOrDefault', '(.*)\\((.*)\\)', 'optimizeShouldSucceed1(org.diveintojee.codestory2013.jajascript.JajascriptServiceTest)')","[155, 819]"
"('Description.java', 'org.junit.runner.Description', 'methodAndClassNamePatternGroupOrDefault', '(.*)\\((.*)\\)', 'frenchFormatShouldStripTrailingZeros(org.diveintojee.codestory2013.questions.QuestionsResourceTest)')","[415, 1035]"
"('Description.java', 'org.junit.runner.Description', 'methodAndClassNamePatternGroupOrDefault', '(.*)\\((.*)\\)', 'getAnswerShouldDivide(org.diveintojee.codestory2013.questions.CalculatorServiceTest)')","[699, 1275]"
"('Description.java', 'org.junit.runner.Description', 'methodAndClassNamePatternGroupOrDefault', '(.*)\\((.*)\\)', 'org.diveintojee.codestory2013.questions.ParserTest')","[68, 437, 1976]"
"('Description.java', 'org.junit.runner.Description', 'methodAndClassNamePatternGroupOrDefault', '(.*)\\((.*)\\)', 'getAnswerShouldMultiply(org.diveintojee.codestory2013.questions.CalculatorServiceTest)')","[723, 1299]"
"('QuestionsResource.java', 'org.diveintojee.codestory2013.questions.QuestionsResource', 'isACalculation', '.*\\d+[\\s\\-/\\*]\\d+.*|.*\\(\\d+.*|.*\\d+\\).*', '2*2')","[1573, 1617]"
"('Description.java', 'org.junit.runner.Description', 'methodAndClassNamePatternGroupOrDefault', '(.*)\\((.*)\\)', 'optimizeShouldSucceed3(org.diveintojee.codestory2013.jajascript.JajascriptServiceTest)')","[203, 867]"
"('Description.java', 'org.junit.runner.Description', 'methodAndClassNamePatternGroupOrDefault', '(.*)\\((.*)\\)', 'readShoudHandleDoubles(org.diveintojee.codestory2013.questions.ParserTest)')","[485, 1083]"
"('Description.java', 'org.junit.runner.Description', 'methodAndClassNamePatternGroupOrDefault', '(.*)\\((.*)\\)', 'getAnswerShoudHandleDoublesInput(org.diveintojee.codestory2013.questions.CalculatorServiceTest)')","[747, 1323]"
"('QuestionsResource.java', 'org.diveintojee.codestory2013.questions.QuestionsResource', 'isACalculation', '.*\\d+[\\s\\-/\\*]\\d+.*|.*\\(\\d+.*|.*\\d+\\).*', '2 2')","[1662, 1706]"
"('QuestionsResource.java', 'org.diveintojee.codestory2013.questions.QuestionsResource', 'isACalculation', '.*\\d+[\\s\\-/\\*]\\d+.*|.*\\(\\d+.*|.*\\d+\\).*', '(1 2)*2')","[1484, 1528]"
"('Description.java', 'org.junit.runner.Description', 'methodAndClassNamePatternGroupOrDefault', '(.*)\\((.*)\\)', 'frenchFormatShouldSucceed(org.diveintojee.codestory2013.questions.QuestionsResourceTest)')","[343, 963]"
"('Description.java', 'org.junit.runner.Description', 'methodAndClassNamePatternGroupOrDefault', '(.*)\\((.*)\\)', 'org.diveintojee.codestory2013.jajascript.JajascriptServiceTest')","[17, 107, 1393]"
"('Description.java', 'org.junit.runner.Description', 'methodAndClassNamePatternGroupOrDefault', '(.*)\\((.*)\\)', 'isACalculationShouldSucceed(org.diveintojee.codestory2013.questions.QuestionsResourceTest)')","[367, 987]"
"('Description.java', 'org.junit.runner.Description', 'methodAndClassNamePatternGroupOrDefault', '(.*)\\((.*)\\)', 'testOptimize2(org.diveintojee.codestory2013.jajascript.JajascriptServiceTest)')","[131, 795]"
"('Description.java', 'org.junit.runner.Description', 'methodAndClassNamePatternGroupOrDefault', '(.*)\\((.*)\\)', 'isACalculationShouldFail(org.diveintojee.codestory2013.questions.QuestionsResourceTest)')","[391, 1011]"
"('Description.java', 'org.junit.runner.Description', 'methodAndClassNamePatternGroupOrDefault', '(.*)\\((.*)\\)', 'getAnswerShouldAdd(org.diveintojee.codestory2013.questions.CalculatorServiceTest)')","[675, 1251]"
"('Description.java', 'org.junit.runner.Description', 'methodAndClassNamePatternGroupOrDefault', '(.*)\\((.*)\\)', 'readShoudHandleSignedLiterals(org.diveintojee.codestory2013.questions.ParserTest)')","[461, 1059]"
"('Description.java', 'org.junit.runner.Description', 'methodAndClassNamePatternGroupOrDefault', '(.*)\\((.*)\\)', 'getAnswerShoudHandleComplexExpression(org.diveintojee.codestory2013.questions.CalculatorServiceTest)')","[603, 1179]"
"('Description.java', 'org.junit.runner.Description', 'methodAndClassNamePatternGroupOrDefault', '(.*)\\((.*)\\)', 'getAnswerShoudHandleDoublesOutput(org.diveintojee.codestory2013.questions.CalculatorServiceTest)')","[579, 1155]"
"('QuestionsResource.java', 'org.diveintojee.codestory2013.questions.QuestionsResource', 'isACalculation', '.*\\d+[\\s\\-/\\*]\\d+.*|.*\\(\\d+.*|.*\\d+\\).*', 'Ceci est un texte comprenant (incluant) des parenthèses')","[1840, 1884]"
"('Description.java', 'org.junit.runner.Description', 'methodAndClassNamePatternGroupOrDefault', '(.*)\\((.*)\\)', 'getAnswerShoudHandlePrecedence(org.diveintojee.codestory2013.questions.CalculatorServiceTest)')","[555, 1131]"
"('Description.java', 'org.junit.runner.Description', 'methodAndClassNamePatternGroupOrDefault', '(.*)\\((.*)\\)', 'testOptimize(org.diveintojee.codestory2013.jajascript.JajascriptServiceTest)')","[251, 915]"
