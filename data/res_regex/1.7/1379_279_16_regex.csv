"('FastIgnoreRule.java', 'org.eclipse.jgit.ignore.FastIgnoreRule', 'isMatch', '[A\\p{Ll}C3-5]', 'e')",[160342]
"('Description.java', 'org.junit.runner.Description', 'methodAndClassNamePatternGroupOrDefault', '([\\s\\S]*)\\((.*)\\)', 'testMaliciousPathEmptyWindows(org.eclipse.jgit.lib.DirCacheCheckoutMaliciousPathTest)')","[112227, 113138]"
"('Description.java', 'org.junit.runner.Description', 'methodAndClassNamePatternGroupOrDefault', '([\\s\\S]*)\\((.*)\\)', 'org.eclipse.jgit.internal.storage.file.PackIndexV1Test')","[250070, 250351]"
"('Description.java', 'org.junit.runner.Description', 'methodAndClassNamePatternGroupOrDefault', '([\\s\\S]*)\\((.*)\\)', 'testFileInFolderCommittedChangedNotModified(org.eclipse.jgit.treewalk.filter.IndexDiffFilterTest)')","[137172, 137999]"
"('Description.java', 'org.junit.runner.Description', 'methodAndClassNamePatternGroupOrDefault', '([\\s\\S]*)\\((.*)\\)', 'testDetachedHead(org.eclipse.jgit.api.RebaseCommandTest)')","[218215, 219730]"
"('Description.java', 'org.junit.runner.Description', 'methodAndClassNamePatternGroupOrDefault', '([\\s\\S]*)\\((.*)\\)', 'testInsertTie(org.eclipse.jgit.revwalk.DateRevQueueTest)')","[82452, 82603]"
"('Description.java', 'org.junit.runner.Description', 'methodAndClassNamePatternGroupOrDefault', '([\\s\\S]*)\\((.*)\\)', 'testOnlyOption_f1_10_b(org.eclipse.jgit.api.CommitOnlyTest)')","[237245, 239328]"
"('Description.java', 'org.junit.runner.Description', 'methodAndClassNamePatternGroupOrDefault', '([\\s\\S]*)\\((.*)\\)', 'testWildcardInMiddleOfSource(org.eclipse.jgit.transport.RefSpecTest)')","[13547, 15054]"
"('URIish.java', 'org.eclipse.jgit.transport.URIish', '<init>', '^(?:([^/:@]+)(?::([^\\\\/]+))?@)?([^\\\\/:]{2,}):([\\\\/](?:(?:[^\\\\/]+[\\\\/]+)*[^\\\\/]+[\\\\/]*))$', '/home/m y')","[67292, 67407]"
"('Description.java', 'org.junit.runner.Description', 'methodAndClassNamePatternGroupOrDefault', '([\\s\\S]*)\\((.*)\\)', 'test002_toString(org.eclipse.jgit.lib.ObjectIdTest)')","[130571, 130849]"
"('URIish.java', 'org.eclipse.jgit.transport.URIish', '<init>', '^(file):([\\\\/](?![\\\\/])((?:[A-Za-z]:)?[\\\\/]?(?:(?:[^\\\\/]+[\\\\/]+)*[^\\\\/]+[\\\\/]*)))$', 'https://me@[::1]:1234/D:/x')",[36932]
"('URIish.java', 'org.eclipse.jgit.transport.URIish', '<init>', '^([a-z][a-z0-9+-]+)://(?:(?:([^/:@]+)(?::([^\\\\/]+))?@)?((?:[^\\\\/:]+)|(?:\\[[0-9a-f:]+\\]))(?::(\\d+))?((?:/~(?:[^\\\\/]+))?[\\\\/]))?(.+)?$', 'http://lusr\\example@1.2.3.4:80//')",[35575]
"('URIish.java', 'org.eclipse.jgit.transport.URIish', '<init>', '^([a-z][a-z0-9+-]+)://(?:(?:([^/:@]+)(?::([^\\\\/]+))?@)?((?:[^\\\\/:]+)|(?:\\[[0-9a-f:]+\\]))(?::(\\d+))?((?:/~(?:[^\\\\/]+))?[\\\\/]))?(.+)?$', 'ssh://l usr\\example.com:wtf@example.com:80//')",[11030]
"('URIish.java', 'org.eclipse.jgit.transport.URIish', '<init>', '^(file):([\\\\/](?![\\\\/])((?:[A-Za-z]:)?[\\\\/]?(?:(?:[^\\\\/]+[\\\\/]+)*[^\\\\/]+[\\\\/]*)))$', 'ssh+git://lusr\\example@example.com:1234/D:\\x')",[31826]
"('Description.java', 'org.junit.runner.Description', 'methodAndClassNamePatternGroupOrDefault', '([\\s\\S]*)\\((.*)\\)', 'testPrefixCompare_17(org.eclipse.jgit.lib.AbbreviatedObjectIdTest)')","[114515, 115050]"
"('Description.java', 'org.junit.runner.Description', 'methodAndClassNamePatternGroupOrDefault', '([\\s\\S]*)\\((.*)\\)', 'testEdit_DuplicateAButCommonUniqueInB(org.eclipse.jgit.diff.MyersDiffTest)')","[97043, 97470]"
"('URIish.java', 'org.eclipse.jgit.transport.URIish', '<init>', '^(file):([\\\\/](?![\\\\/])((?:[A-Za-z]:)?[\\\\/]?(?:(?:[^\\\\/]+[\\\\/]+)*[^\\\\/]+[\\\\/]*)))$', 'user@repo.or.cz:/srv/git/egit.git')",[10863]
"('Description.java', 'org.junit.runner.Description', 'methodAndClassNamePatternGroupOrDefault', '([\\s\\S]*)\\((.*)\\)', 'testRebaseWithUncommittedTopicChange(org.eclipse.jgit.api.RebaseCommandTest)')","[218236, 219752]"
"('URIish.java', 'org.eclipse.jgit.transport.URIish', '<init>', '^([a-z][a-z0-9+-]+)://(?:(?:([^/:@]+)(?::([^\\\\/]+))?@)?((?:[^\\\\/:]+)|(?:\\[[0-9a-f:]+\\]))(?::(\\d+))?((?:/~(?:[^\\\\/]+))?[\\\\/]))?(.+)?$', 'http://me:wtf@example.com:1234/D:\\x')",[18904]
"('Description.java', 'org.junit.runner.Description', 'methodAndClassNamePatternGroupOrDefault', '([\\s\\S]*)\\((.*)\\)', 'org.eclipse.jgit.merge.ResolveMergerTest')","[87994, 204274]"
"('Description.java', 'org.junit.runner.Description', 'methodAndClassNamePatternGroupOrDefault', '([\\s\\S]*)\\((.*)\\)', 'testParseUnicodeName_NewFile(org.eclipse.jgit.patch.FileHeaderTest)')","[195432, 195889]"
"('Description.java', 'org.junit.runner.Description', 'methodAndClassNamePatternGroupOrDefault', '([\\s\\S]*)\\((.*)\\)', 'testAlnumGroupCase2(org.eclipse.jgit.fnmatch.FileNameMatcherTest)')","[103834, 107229]"
"('Description.java', 'org.junit.runner.Description', 'methodAndClassNamePatternGroupOrDefault', '([\\s\\S]*)\\((.*)\\)', 'testStopOnConflictAndSkipNoConflict(org.eclipse.jgit.api.RebaseCommandTest)')","[218572, 220104]"
"('URIish.java', 'org.eclipse.jgit.transport.URIish', '<init>', '^(file):([\\\\/](?![\\\\/])((?:[A-Za-z]:)?[\\\\/]?(?:(?:[^\\\\/]+[\\\\/]+)*[^\\\\/]+[\\\\/]*)))$', '//.git')",[70367]
"('URIish.java', 'org.eclipse.jgit.transport.URIish', '<init>', '^(file):([\\\\/](?![\\\\/])((?:[A-Za-z]:)?[\\\\/]?(?:(?:[^\\\\/]+[\\\\/]+)*[^\\\\/]+[\\\\/]*)))$', 'ssh+git://l usr\\example.com@1.2.3.4:1234//abc')",[30998]
"('URIish.java', 'org.eclipse.jgit.transport.URIish', '<init>', '^(file):([\\\\/](?![\\\\/])((?:[A-Za-z]:)?[\\\\/]?(?:(?:[^\\\\/]+[\\\\/]+)*[^\\\\/]+[\\\\/]*)))$', 'git://example.com/home/m y')","[70827, 70873]"
"('URIish.java', 'org.eclipse.jgit.transport.URIish', '<init>', '^([a-z][a-z0-9+-]+)://(?:(?:([^/:@]+)(?::([^\\\\/]+))?@)?((?:[^\\\\/:]+)|(?:\\[[0-9a-f:]+\\]))(?::(\\d+))?((?:/~(?:[^\\\\/]+))?[\\\\/]))?(.+)?$', 'file:///tmp/jgit_test_8154327735289036494_tmp/tmp_3475771914157997148.git/')",[211825]
"('Description.java', 'org.junit.runner.Description', 'methodAndClassNamePatternGroupOrDefault', '([\\s\\S]*)\\((.*)\\)', 'testIterator_RefusesRemove(org.eclipse.jgit.util.RefMapTest)')","[183993, 184466]"
"('URIish.java', 'org.eclipse.jgit.transport.URIish', '<init>', '^([a-z][a-z0-9+-]+)://(?:(?:([^/:@]+)(?::([^\\\\/]+))?@)?((?:[^\\\\/:]+)|(?:\\[[0-9a-f:]+\\]))(?::(\\d+))?((?:/~(?:[^\\\\/]+))?[\\\\/]))?(.+)?$', 'http://l usr\\example.com@example.com:80/D:\\x')",[34241]
"('Description.java', 'org.junit.runner.Description', 'methodAndClassNamePatternGroupOrDefault', '([\\s\\S]*)\\((.*)\\)', 'testShortKey(org.eclipse.jgit.revwalk.FooterLineTest)')","[77691, 78105]"
"('Description.java', 'org.junit.runner.Description', 'methodAndClassNamePatternGroupOrDefault', '([\\s\\S]*)\\((.*)\\)', 'testUpdateRefLockFailureLocked(org.eclipse.jgit.internal.storage.file.RefUpdateTest)')","[253061, 253894]"
"('Description.java', 'org.junit.runner.Description', 'methodAndClassNamePatternGroupOrDefault', '([\\s\\S]*)\\((.*)\\)', 'testOnlyOption_f1_7_f2_14_c(org.eclipse.jgit.api.CommitOnlyTest)')","[235870, 237920]"
"('URIish.java', 'org.eclipse.jgit.transport.URIish', '<init>', '^(?:([^/:@]+)(?::([^\\\\/]+))?@)?([^\\\\/:]{2,}):([\\\\/](?:(?:[^\\\\/]+[\\\\/]+)*[^\\\\/]+[\\\\/]*))$', '/some/dir')","[5987, 6397, 6705, 6825, 7927, 8308, 8428, 8652, 9375, 9496, 9912, 10644, 10764, 11531]"
"('Description.java', 'org.junit.runner.Description', 'methodAndClassNamePatternGroupOrDefault', '([\\s\\S]*)\\((.*)\\)', 'testRenameCurrentBranch(org.eclipse.jgit.internal.storage.file.RefUpdateTest)')","[252935, 253762]"
"('Description.java', 'org.junit.runner.Description', 'methodAndClassNamePatternGroupOrDefault', '([\\s\\S]*)\\((.*)\\)', 'testShuffleSegments(org.eclipse.jgit.internal.storage.pack.DeltaIndexTest)')","[246550, 246835]"
"('Description.java', 'org.junit.runner.Description', 'methodAndClassNamePatternGroupOrDefault', '([\\s\\S]*)\\((.*)\\)', 'testSetDestination(org.eclipse.jgit.transport.RefSpecTest)')","[13459, 15010]"
"('Description.java', 'org.junit.runner.Description', 'methodAndClassNamePatternGroupOrDefault', '([\\s\\S]*)\\((.*)\\)', 'testCombinedRangesInOneGroupCase2(org.eclipse.jgit.fnmatch.FileNameMatcherTest)')","[101251, 104523]"
"('Description.java', 'org.junit.runner.Description', 'methodAndClassNamePatternGroupOrDefault', '([\\s\\S]*)\\((.*)\\)', 'testUpdateOnBackgroundThreads(org.eclipse.jgit.lib.ThreadSafeProgressMonitorTest)')","[110113, 110178]"
"('Description.java', 'org.junit.runner.Description', 'methodAndClassNamePatternGroupOrDefault', '([\\s\\S]*)\\((.*)\\)', 'testAddExistingSingleFileInSubDir(org.eclipse.jgit.api.AddCommandTest)')","[234843, 235270]"
"('URIish.java', 'org.eclipse.jgit.transport.URIish', '<init>', '^(file):([\\\\/](?![\\\\/])((?:[A-Za-z]:)?[\\\\/]?(?:(?:[^\\\\/]+[\\\\/]+)*[^\\\\/]+[\\\\/]*)))$', 'http://l usr\\example.com@example.com/D:/x')","[47236, 47420]"
"('URIish.java', 'org.eclipse.jgit.transport.URIish', '<init>', '^([a-z][a-z0-9+-]+)://(?:(?:([^/:@]+)(?::([^\\\\/]+))?@)?((?:[^\\\\/:]+)|(?:\\[[0-9a-f:]+\\]))(?::(\\d+))?((?:/~(?:[^\\\\/]+))?[\\\\/]))?(.+)?$', 'ssh+git://me@1.2.3.4//abc')","[43165, 43349]"
"('URIish.java', 'org.eclipse.jgit.transport.URIish', '<init>', '^([a-z][a-z0-9+-]+)://(?:(?:([^/:@]+)(?::([^\\\\/]+))?@)?((?:[^\\\\/:]+)|(?:\\[[0-9a-f:]+\\]))(?::(\\d+))?((?:/~(?:[^\\\\/]+))?[\\\\/]))?(.+)?$', 'ssh+git://l usr\\example.com@[::1]:80//abc')",[31573]
"('URIish.java', 'org.eclipse.jgit.transport.URIish', '<init>', '^(file):([\\\\/](?![\\\\/])((?:[A-Za-z]:)?[\\\\/]?(?:(?:[^\\\\/]+[\\\\/]+)*[^\\\\/]+[\\\\/]*)))$', 'ssh+git://l usr\\example.com:wtf@example.com:80/D:\\x')",[16273]
"('Description.java', 'org.junit.runner.Description', 'methodAndClassNamePatternGroupOrDefault', '([\\s\\S]*)\\((.*)\\)', 'testNotIgnoreNonExistingObjects(org.eclipse.jgit.internal.storage.file.PackWriterTest)')","[251533, 251992]"
"('Description.java', 'org.junit.runner.Description', 'methodAndClassNamePatternGroupOrDefault', '([\\s\\S]*)\\((.*)\\)', 'testPath_4095(org.eclipse.jgit.dircache.DirCacheLargePathTest)')","[92182, 92290]"
"('URIish.java', 'org.eclipse.jgit.transport.URIish', '<init>', '^([a-z][a-z0-9+-]+)://(?:(?:([^/:@]+)(?::([^\\\\/]+))?@)?((?:[^\\\\/:]+)|(?:\\[[0-9a-f:]+\\]))(?::(\\d+))?((?:/~(?:[^\\\\/]+))?[\\\\/]))?(.+)?$', 'ssh+git://me:wtf@[::1]:80/D:\\x')",[15818]
"('URIish.java', 'org.eclipse.jgit.transport.URIish', '<init>', '^(file):([\\\\/](?![\\\\/])((?:[A-Za-z]:)?[\\\\/]?(?:(?:[^\\\\/]+[\\\\/]+)*[^\\\\/]+[\\\\/]*)))$', 'https://example.com/D:/x')","[62692, 62876, 63796, 63980, 64900, 65084]"
"('Description.java', 'org.junit.runner.Description', 'methodAndClassNamePatternGroupOrDefault', '([\\s\\S]*)\\((.*)\\)', 'testUpdateWorkingDirectory(org.eclipse.jgit.api.PathCheckoutCommandTest)')","[224446, 224701]"
"('URIish.java', 'org.eclipse.jgit.transport.URIish', '<init>', '^(file):([\\\\/](?![\\\\/])((?:[A-Za-z]:)?[\\\\/]?(?:(?:[^\\\\/]+[\\\\/]+)*[^\\\\/]+[\\\\/]*)))$', 'http://l usr\\example.com:wtf@1.2.3.4:1234/D:/x')",[20857]
"('URIish.java', 'org.eclipse.jgit.transport.URIish', '<init>', '^(file):([\\\\/](?![\\\\/])((?:[A-Za-z]:)?[\\\\/]?(?:(?:[^\\\\/]+[\\\\/]+)*[^\\\\/]+[\\\\/]*)))$', 'ssh://lusr\\example@example.com:1234/D:\\x')",[28514]
"('URIish.java', 'org.eclipse.jgit.transport.URIish', '<init>', '^([a-z][a-z0-9+-]+)://(?:(?:([^/:@]+)(?::([^\\\\/]+))?@)?((?:[^\\\\/:]+)|(?:\\[[0-9a-f:]+\\]))(?::(\\d+))?((?:/~(?:[^\\\\/]+))?[\\\\/]))?(.+)?$', 'file:///tmp/jgit_test_3403792092104358493_tmp/tmp_2501936140417005984/.git/')",[134225]
"('URIish.java', 'org.eclipse.jgit.transport.URIish', '<init>', '^([\\\\/]?((?:[A-Za-z]:)?[\\\\/]?(?:(?:[^\\\\/]+[\\\\/]+)*[^\\\\/]+[\\\\/]*)))$', '/tmp/jgit_test_489293450821421843_tmp/tmp_6013690132655096981')","[225910, 226055, 226220]"
"('Description.java', 'org.junit.runner.Description', 'methodAndClassNamePatternGroupOrDefault', '([\\s\\S]*)\\((.*)\\)', 'testWorkdirIsParent_CreateRepositoryFromGitDirOnlyWithBareConfigFalse(org.eclipse.jgit.internal.storage.file.RepositorySetupWorkDirTest)')","[255726, 255982]"
"('URIish.java', 'org.eclipse.jgit.transport.URIish', '<init>', '^([a-z][a-z0-9+-]+)://(?:(?:([^/:@]+)(?::([^\\\\/]+))?@)?((?:[^\\\\/:]+)|(?:\\[[0-9a-f:]+\\]))(?::(\\d+))?((?:/~(?:[^\\\\/]+))?[\\\\/]))?(.+)?$', 'ssh://lusr\\example@example.com/D:/x')","[41739, 41923]"
"('Description.java', 'org.junit.runner.Description', 'methodAndClassNamePatternGroupOrDefault', '([\\s\\S]*)\\((.*)\\)', 'testGetText_DiffCc(org.eclipse.jgit.patch.GetTextTest)')","[196627, 196712]"
"('Description.java', 'org.junit.runner.Description', 'methodAndClassNamePatternGroupOrDefault', '([\\s\\S]*)\\((.*)\\)', 'testLFCR(org.eclipse.jgit.util.io.EolCanonicalizingInputStreamTest)')","[174640, 174790]"
"('Description.java', 'org.junit.runner.Description', 'methodAndClassNamePatternGroupOrDefault', '([\\s\\S]*)\\((.*)\\)', 'testTwoRangesInOneGroupCase4(org.eclipse.jgit.fnmatch.FileNameMatcherTest)')","[103939, 107339]"
"('Description.java', 'org.junit.runner.Description', 'methodAndClassNamePatternGroupOrDefault', '([\\s\\S]*)\\((.*)\\)', 'testNewFileNoWait(org.eclipse.jgit.internal.storage.file.FileSnapshotTest)')","[250450, 250537]"
"('Description.java', 'org.junit.runner.Description', 'methodAndClassNamePatternGroupOrDefault', '([\\s\\S]*)\\((.*)\\)', 'testContructor(org.eclipse.jgit.internal.storage.file.PackWriterTest)')","[251470, 251926]"
"('URIish.java', 'org.eclipse.jgit.transport.URIish', '<init>', '^([a-z][a-z0-9+-]+)://(?:(?:([^/:@]+)(?::([^\\\\/]+))?@)?((?:[^\\\\/:]+)|(?:\\[[0-9a-f:]+\\]))(?::(\\d+))?((?:/~(?:[^\\\\/]+))?[\\\\/]))?(.+)?$', 'https://me@1.2.3.4/D:\\x')","[49881, 50065]"
"('Description.java', 'org.junit.runner.Description', 'methodAndClassNamePatternGroupOrDefault', '([\\s\\S]*)\\((.*)\\)', 'shouldThrowIAEWhenTreeWalkHasLessThanTwoTrees(org.eclipse.jgit.diff.DiffEntryTest)')","[95467, 95729]"
"('URIish.java', 'org.eclipse.jgit.transport.URIish', '<init>', '^(file):([\\\\/](?![\\\\/])((?:[A-Za-z]:)?[\\\\/]?(?:(?:[^\\\\/]+[\\\\/]+)*[^\\\\/]+[\\\\/]*)))$', 'https://lusr\\example@1.2.3.4:80/D:\\x')",[39002]
"('Description.java', 'org.junit.runner.Description', 'methodAndClassNamePatternGroupOrDefault', '([\\s\\S]*)\\((.*)\\)', 'testCombinedRangesInOneGroupCase0(org.eclipse.jgit.fnmatch.FileNameMatcherTest)')","[101209, 104479]"
"('URIish.java', 'org.eclipse.jgit.transport.URIish', '<init>', '^([a-z][a-z0-9+-]+)://(?:(?:([^/:@]+)(?::([^\\\\/]+))?@)?((?:[^\\\\/:]+)|(?:\\[[0-9a-f:]+\\]))(?::(\\d+))?((?:/~(?:[^\\\\/]+))?[\\\\/]))?(.+)?$', 'https://me:wtf@1.2.3.4:1234//')",[23019]
"('FastIgnoreRule.java', 'org.eclipse.jgit.ignore.FastIgnoreRule', 'isMatch', 'ne.', 'new.c')","[143182, 144326]"
"('URIish.java', 'org.eclipse.jgit.transport.URIish', '<init>', '^(file):([\\\\/](?![\\\\/])((?:[A-Za-z]:)?[\\\\/]?(?:(?:[^\\\\/]+[\\\\/]+)*[^\\\\/]+[\\\\/]*)))$', 'http://lusr\\example@[::1]/D:\\x')","[49122, 49306]"
"('Description.java', 'org.junit.runner.Description', 'methodAndClassNamePatternGroupOrDefault', '([\\s\\S]*)\\((.*)\\)', 'testEmpty(org.eclipse.jgit.diff.EditListTest)')","[94735, 94842]"
"('URIish.java', 'org.eclipse.jgit.transport.URIish', '<init>', '^([a-z][a-z0-9+-]+)://(?:(?:([^/:@]+)(?::([^\\\\/]+))?@)?((?:[^\\\\/:]+)|(?:\\[[0-9a-f:]+\\]))(?::(\\d+))?((?:/~(?:[^\\\\/]+))?[\\\\/]))?(.+)?$', '/tmp/jgit_test_4928645748912589877_tmp/tmp_7570227516241513625/.git')","[230770, 230908]"
"('Description.java', 'org.junit.runner.Description', 'methodAndClassNamePatternGroupOrDefault', '([\\s\\S]*)\\((.*)\\)', 'test8_FromString(org.eclipse.jgit.lib.AbbreviatedObjectIdTest)')","[114767, 115314]"
"('URIish.java', 'org.eclipse.jgit.transport.URIish', '<init>', '^([a-z][a-z0-9+-]+)://(?:(?:([^/:@]+)(?::([^\\\\/]+))?@)?((?:[^\\\\/:]+)|(?:\\[[0-9a-f:]+\\]))(?::(\\d+))?((?:/~(?:[^\\\\/]+))?[\\\\/]))?(.+)?$', 'ssh://me@1.2.3.4:80//abc')",[26726]
"('Description.java', 'org.junit.runner.Description', 'methodAndClassNamePatternGroupOrDefault', '([\\s\\S]*)\\((.*)\\)', 'testAbbreviateOnEmptyRepository(org.eclipse.jgit.internal.storage.file.AbbreviationTest)')","[256743, 256828]"
"('Description.java', 'org.junit.runner.Description', 'methodAndClassNamePatternGroupOrDefault', '([\\s\\S]*)\\((.*)\\)', 'testRemoveCached(org.eclipse.jgit.api.RmCommandTest)')","[216382, 216425]"
"('Description.java', 'org.junit.runner.Description', 'methodAndClassNamePatternGroupOrDefault', '([\\s\\S]*)\\((.*)\\)', 'testQuote_BareA(org.eclipse.jgit.util.QuotedStringBourneStyleTest)')","[183022, 183240]"
"('URIish.java', 'org.eclipse.jgit.transport.URIish', '<init>', '^([a-z][a-z0-9+-]+)://(?:(?:([^/:@]+)(?::([^\\\\/]+))?@)?((?:[^\\\\/:]+)|(?:\\[[0-9a-f:]+\\]))(?::(\\d+))?((?:/~(?:[^\\\\/]+))?[\\\\/]))?(.+)?$', 'http://me@1.2.3.4//')","[46431, 46615]"
"('Description.java', 'org.junit.runner.Description', 'methodAndClassNamePatternGroupOrDefault', '([\\s\\S]*)\\((.*)\\)', 'testParseRename100_OldStyle(org.eclipse.jgit.patch.FileHeaderTest)')","[195117, 195559]"
"('Description.java', 'org.junit.runner.Description', 'methodAndClassNamePatternGroupOrDefault', '([\\s\\S]*)\\((.*)\\)', 'org.eclipse.jgit.internal.storage.file.FileSnapshotTest')","[250387, 254800]"
"('URIish.java', 'org.eclipse.jgit.transport.URIish', '<init>', '^(file):([\\\\/](?![\\\\/])((?:[A-Za-z]:)?[\\\\/]?(?:(?:[^\\\\/]+[\\\\/]+)*[^\\\\/]+[\\\\/]*)))$', 'http://l usr\\example.com:wtf@[::1]:1234//')",[21156]
"('Description.java', 'org.junit.runner.Description', 'methodAndClassNamePatternGroupOrDefault', '([\\s\\S]*)\\((.*)\\)', 'testBreakModify_BreakAll(org.eclipse.jgit.diff.RenameDetectorTest)')","[93531, 94101]"
"('Description.java', 'org.junit.runner.Description', 'methodAndClassNamePatternGroupOrDefault', '([\\s\\S]*)\\((.*)\\)', 'testPackCommitsAndLooseOneNoReflog(org.eclipse.jgit.internal.storage.file.GcReflogTest)')","[256575, 256663]"
"('URIish.java', 'org.eclipse.jgit.transport.URIish', '<init>', '^(file):([\\\\/](?![\\\\/])((?:[A-Za-z]:)?[\\\\/]?(?:(?:[^\\\\/]+[\\\\/]+)*[^\\\\/]+[\\\\/]*)))$', 'ssh://me@example.com//abc')","[39462, 39646]"
"('URIish.java', 'org.eclipse.jgit.transport.URIish', '<init>', '^([\\\\/]?((?:[A-Za-z]:)?[\\\\/]?(?:(?:[^\\\\/]+[\\\\/]+)*[^\\\\/]+[\\\\/]*)))$', '/a/b/c//')",[70781]
"('FastIgnoreRule.java', 'org.eclipse.jgit.ignore.FastIgnoreRule', 'isMatch', '.r[a-c]', 'crb')",[144812]
"('Description.java', 'org.junit.runner.Description', 'methodAndClassNamePatternGroupOrDefault', '([\\s\\S]*)\\((.*)\\)', 'testOnlyOption_f1_14_b(org.eclipse.jgit.api.CommitOnlyTest)')","[237665, 239768]"
"('Description.java', 'org.junit.runner.Description', 'methodAndClassNamePatternGroupOrDefault', '([\\s\\S]*)\\((.*)\\)', 'testInvalidTreeBadSorting1(org.eclipse.jgit.lib.ObjectCheckerTest)')","[121343, 123447]"
"('URIish.java', 'org.eclipse.jgit.transport.URIish', '<init>', '^(file):([\\\\/](?![\\\\/])((?:[A-Za-z]:)?[\\\\/]?(?:(?:[^\\\\/]+[\\\\/]+)*[^\\\\/]+[\\\\/]*)))$', 'ssh://me@[::1]//')","[40152, 40336]"
"('URIish.java', 'org.eclipse.jgit.transport.URIish', '<init>', '^(file):([\\\\/](?![\\\\/])((?:[A-Za-z]:)?[\\\\/]?(?:(?:[^\\\\/]+[\\\\/]+)*[^\\\\/]+[\\\\/]*)))$', 'https://lusr\\example@example.com:1234//')",[38312]
"('Description.java', 'org.junit.runner.Description', 'methodAndClassNamePatternGroupOrDefault', '([\\s\\S]*)\\((.*)\\)', 'testNoFooters_EmptyBody(org.eclipse.jgit.revwalk.FooterLineTest)')","[77439, 77841]"
"('URIish.java', 'org.eclipse.jgit.transport.URIish', '<init>', '^([a-z][a-z0-9+-]+)://(?:(?:([^/:@]+)(?::([^\\\\/]+))?@)?((?:[^\\\\/:]+)|(?:\\[[0-9a-f:]+\\]))(?::(\\d+))?((?:/~(?:[^\\\\/]+))?[\\\\/]))?(.+)?$', 'ssh://l usr\\example.com@1.2.3.4:80//abc')",[27830]
"('Description.java', 'org.junit.runner.Description', 'methodAndClassNamePatternGroupOrDefault', '([\\s\\S]*)\\((.*)\\)', 'testPullWithRebasePreserve1Config(org.eclipse.jgit.api.PullCommandTest)')","[220861, 221211]"
"('Description.java', 'org.junit.runner.Description', 'methodAndClassNamePatternGroupOrDefault', '([\\s\\S]*)\\((.*)\\)', 'testCloneRepositoryWithTagName(org.eclipse.jgit.api.CloneCommandTest)')","[203855, 204094]"
"('Description.java', 'org.junit.runner.Description', 'methodAndClassNamePatternGroupOrDefault', '([\\s\\S]*)\\((.*)\\)', 'testXDigitGroupCase0(org.eclipse.jgit.fnmatch.FileNameMatcherTest)')","[103498, 106877]"
"('Description.java', 'org.junit.runner.Description', 'methodAndClassNamePatternGroupOrDefault', '([\\s\\S]*)\\((.*)\\)', 'testDeleteHEADreferencedRef(org.eclipse.jgit.internal.storage.file.RefUpdateTest)')","[253250, 254092]"
"('URIish.java', 'org.eclipse.jgit.transport.URIish', '<init>', '^([a-z][a-z0-9+-]+)://(?:(?:([^/:@]+)(?::([^\\\\/]+))?@)?((?:[^\\\\/:]+)|(?:\\[[0-9a-f:]+\\]))(?::(\\d+))?((?:/~(?:[^\\\\/]+))?[\\\\/]))?(.+)?$', 'http://lusr\\example@example.com:80//abc')",[35253]
"('URIish.java', 'org.eclipse.jgit.transport.URIish', '<init>', '^(?:([^/:@]+)(?::([^\\\\/]+))?@)?((?:[^\\\\/:]+)|(?:\\[[0-9a-f:]+\\])):((?:(?:/~(?:[^\\\\/]+))[\\\\/])?(?:(?:[^\\\\/]+[\\\\/]+)*[^\\\\/]+[\\\\/]*))$', '../../foo/bar')","[68918, 69033]"
"('FastIgnoreRule.java', 'org.eclipse.jgit.ignore.FastIgnoreRule', 'isMatch', '.', 'a')",[162008]
"('Description.java', 'org.junit.runner.Description', 'methodAndClassNamePatternGroupOrDefault', '([\\s\\S]*)\\((.*)\\)', 'testProperlyCullAllAncestors1(org.eclipse.jgit.revwalk.RevWalkCullTest)')","[76956, 77021]"
"('Description.java', 'org.junit.runner.Description', 'methodAndClassNamePatternGroupOrDefault', '([\\s\\S]*)\\((.*)\\)', 'testPrintGroupCase2(org.eclipse.jgit.fnmatch.FileNameMatcherTest)')","[103015, 106371]"
"('URIish.java', 'org.eclipse.jgit.transport.URIish', '<init>', '^(file):([\\\\/](?![\\\\/])((?:[A-Za-z]:)?[\\\\/]?(?:(?:[^\\\\/]+[\\\\/]+)*[^\\\\/]+[\\\\/]*)))$', 'ssh+git://l usr\\example.com@[::1]:80//')",[31504]
"('Description.java', 'org.junit.runner.Description', 'methodAndClassNamePatternGroupOrDefault', '([\\s\\S]*)\\((.*)\\)', 'testRevert(org.eclipse.jgit.merge.CherryPickTest)')","[89754, 89798]"
"('URIish.java', 'org.eclipse.jgit.transport.URIish', '<init>', '^(file):([\\\\/](?![\\\\/])((?:[A-Za-z]:)?[\\\\/]?(?:(?:[^\\\\/]+[\\\\/]+)*[^\\\\/]+[\\\\/]*)))$', 'https://lusr\\example@[::1]:1234//')",[39048]
"('Description.java', 'org.junit.runner.Description', 'methodAndClassNamePatternGroupOrDefault', '([\\s\\S]*)\\((.*)\\)', 'testBreakModify_BreakNone(org.eclipse.jgit.diff.RenameDetectorTest)')","[93468, 94035]"
"('URIish.java', 'org.eclipse.jgit.transport.URIish', '<init>', '^(file):([\\\\/](?![\\\\/])((?:[A-Za-z]:)?[\\\\/]?(?:(?:[^\\\\/]+[\\\\/]+)*[^\\\\/]+[\\\\/]*)))$', 'file:///tmp/jgit_test_6348790915699321214_tmp/tmp_3279445110844604601/.git/')",[132367]
"('URIish.java', 'org.eclipse.jgit.transport.URIish', '<init>', '^([a-z][a-z0-9+-]+)://(?:(?:([^/:@]+)(?::([^\\\\/]+))?@)?((?:[^\\\\/:]+)|(?:\\[[0-9a-f:]+\\]))(?::(\\d+))?((?:/~(?:[^\\\\/]+))?[\\\\/]))?(.+)?$', 'https://lusr\\example@[::1]//abc')","[52365, 52549]"
"('Description.java', 'org.junit.runner.Description', 'methodAndClassNamePatternGroupOrDefault', '([\\s\\S]*)\\((.*)\\)', 'testAlias_PreferredAuthentications(org.eclipse.jgit.transport.OpenSshConfigTest)')","[3661, 4053]"
"('URIish.java', 'org.eclipse.jgit.transport.URIish', '<init>', '^([a-z][a-z0-9+-]+)://(?:(?:([^/:@]+)(?::([^\\\\/]+))?@)?((?:[^\\\\/:]+)|(?:\\[[0-9a-f:]+\\]))(?::(\\d+))?((?:/~(?:[^\\\\/]+))?[\\\\/]))?(.+)?$', 'https://l usr\\example.com:wtf@example.com:80//abc')",[23985]
"('Description.java', 'org.junit.runner.Description', 'methodAndClassNamePatternGroupOrDefault', '([\\s\\S]*)\\((.*)\\)', 'testBooleanWithNoValue(org.eclipse.jgit.lib.ConfigTest)')","[129596, 130341]"
"('URIish.java', 'org.eclipse.jgit.transport.URIish', '<init>', '^(file):([\\\\/](?![\\\\/])((?:[A-Za-z]:)?[\\\\/]?(?:(?:[^\\\\/]+[\\\\/]+)*[^\\\\/]+[\\\\/]*)))$', 'file:///home/m%00y')","[66418, 66464]"
"('Description.java', 'org.junit.runner.Description', 'methodAndClassNamePatternGroupOrDefault', '([\\s\\S]*)\\((.*)\\)', 'testInsertVsModify(org.eclipse.jgit.merge.MergeAlgorithmTest)')","[87162, 87465]"
"('URIish.java', 'org.eclipse.jgit.transport.URIish', '<init>', '^(file):([\\\\/](?![\\\\/])((?:[A-Za-z]:)?[\\\\/]?(?:(?:[^\\\\/]+[\\\\/]+)*[^\\\\/]+[\\\\/]*)))$', 'http://1.2.3.4//abc')","[59702, 59886, 60806, 60990, 61910, 62094]"
"('URIish.java', 'org.eclipse.jgit.transport.URIish', 'getHumanishName', '^([\\\\/]?((?:[A-Za-z]:)?[\\\\/]?(?:(?:[^\\\\/]+[\\\\/]+)*[^\\\\/]+[\\\\/]*)))$', '/.git')","[5841, 66165]"
"('Description.java', 'org.junit.runner.Description', 'methodAndClassNamePatternGroupOrDefault', '([\\s\\S]*)\\((.*)\\)', 'testSpecialGroupCase8[OldRule? false](org.eclipse.jgit.ignore.IgnoreRuleSpecialCasesTest)')","[145892, 152997]"
"('Description.java', 'org.junit.runner.Description', 'methodAndClassNamePatternGroupOrDefault', '([\\s\\S]*)\\((.*)\\)', 'testCopyLeadingPrefix(org.eclipse.jgit.util.RefListTest)')","[179380, 179864]"
"('URIish.java', 'org.eclipse.jgit.transport.URIish', '<init>', '^([a-z][a-z0-9+-]+)://(?:(?:([^/:@]+)(?::([^\\\\/]+))?@)?((?:[^\\\\/:]+)|(?:\\[[0-9a-f:]+\\]))(?::(\\d+))?((?:/~(?:[^\\\\/]+))?[\\\\/]))?(.+)?$', 'ssh+git://me:wtf@1.2.3.4:1234//')",[14534]
"('ChangeIdUtil.java', 'org.eclipse.jgit.util.ChangeIdUtil', 'indexOfChangeId', '(^Change-Id: *I[a-f0-9]{40}$)', 'Change-Id: I0123456789012345678901234567890123456789')","[187129, 188234, 189802, 189827, 191698]"
"('URIish.java', 'org.eclipse.jgit.transport.URIish', '<init>', '^(file):([\\\\/](?![\\\\/])((?:[A-Za-z]:)?[\\\\/]?(?:(?:[^\\\\/]+[\\\\/]+)*[^\\\\/]+[\\\\/]*)))$', 'ssh://lusr\\example:wtf@example.com:1234/D:/x')",[12354]
"('Description.java', 'org.junit.runner.Description', 'methodAndClassNamePatternGroupOrDefault', '([\\s\\S]*)\\((.*)\\)', 'testGetRefs_DeatchedHead2(org.eclipse.jgit.internal.storage.file.RefDirectoryTest)')","[257896, 259078]"
"('Description.java', 'org.junit.runner.Description', 'methodAndClassNamePatternGroupOrDefault', '([\\s\\S]*)\\((.*)\\)', 'testEscapedBracket4(org.eclipse.jgit.fnmatch.FileNameMatcherTest)')","[104107, 107515]"
"('Description.java', 'org.junit.runner.Description', 'methodAndClassNamePatternGroupOrDefault', '([\\s\\S]*)\\((.*)\\)', 'testTimeout_readBuffer_Timeout(org.eclipse.jgit.util.io.TimeoutInputStreamTest)')","[173907, 174080]"
"('Description.java', 'org.junit.runner.Description', 'methodAndClassNamePatternGroupOrDefault', '([\\s\\S]*)\\((.*)\\)', 'testCreateFileHeader_Delete(org.eclipse.jgit.diff.DiffFormatterTest)')","[96084, 96348]"
"('Description.java', 'org.junit.runner.Description', 'methodAndClassNamePatternGroupOrDefault', '([\\s\\S]*)\\((.*)\\)', 'testRebaseWithUncommittedMasterChange(org.eclipse.jgit.api.RebaseCommandTest)')","[217921, 219422]"
"('Description.java', 'org.junit.runner.Description', 'methodAndClassNamePatternGroupOrDefault', '([\\s\\S]*)\\((.*)\\)', 'testRebaseShouldLeaveWorkspaceUntouchedWithUnstagedChangesConflict(org.eclipse.jgit.api.RebaseCommandTest)')","[217396, 218872]"
"('URIish.java', 'org.eclipse.jgit.transport.URIish', '<init>', '^([a-z][a-z0-9+-]+)://(?:(?:([^/:@]+)(?::([^\\\\/]+))?@)?((?:[^\\\\/:]+)|(?:\\[[0-9a-f:]+\\]))(?::(\\d+))?((?:/~(?:[^\\\\/]+))?[\\\\/]))?(.+)?$', 'http://lusr\\example:wtf@1.2.3.4:1234/D:/x')",[22007]
"('Description.java', 'org.junit.runner.Description', 'methodAndClassNamePatternGroupOrDefault', '([\\s\\S]*)\\((.*)\\)', 'org.eclipse.jgit.treewalk.NameConflictTreeWalkTest')","[134747, 134985]"
"('Description.java', 'org.junit.runner.Description', 'methodAndClassNamePatternGroupOrDefault', '([\\s\\S]*)\\((.*)\\)', 'testStopOnConflictAndFailContinueIfFileIsDirty(org.eclipse.jgit.api.RebaseCommandTest)')","[218383, 219906]"
"('Description.java', 'org.junit.runner.Description', 'methodAndClassNamePatternGroupOrDefault', '([\\s\\S]*)\\((.*)\\)', 'testParse_PublicParseMethod(org.eclipse.jgit.revwalk.RevTagParseTest)')","[80333, 80747]"
"('Description.java', 'org.junit.runner.Description', 'methodAndClassNamePatternGroupOrDefault', '([\\s\\S]*)\\((.*)\\)', 'testRepoManifestGroups(org.eclipse.jgit.gitrepo.RepoCommandTest)')","[140030, 140336]"
"('ChangeIdUtil.java', 'org.eclipse.jgit.util.ChangeIdUtil', 'indexOfChangeId', '(^Change-Id: *I[a-f0-9]{40}$)', 'f')",[191209]
"('Description.java', 'org.junit.runner.Description', 'methodAndClassNamePatternGroupOrDefault', '([\\s\\S]*)\\((.*)\\)', 'testOnlyOption_f1_1_a(org.eclipse.jgit.api.CommitOnlyTest)')","[235933, 237986]"
"('Description.java', 'org.junit.runner.Description', 'methodAndClassNamePatternGroupOrDefault', '([\\s\\S]*)\\((.*)\\)', 'testGetSet(org.eclipse.jgit.transport.URIishTest)')","[2897, 5234]"
"('FastIgnoreRule.java', 'org.eclipse.jgit.ignore.FastIgnoreRule', 'isMatch', 'a.*b', 'a\\b')",[162268]
"('ChangeIdUtil.java', 'org.eclipse.jgit.util.ChangeIdUtil', 'indexOfChangeId', '(^Change-Id: *I[a-f0-9]{40}$)', 'oneliner')",[187155]
"('URIish.java', 'org.eclipse.jgit.transport.URIish', '<init>', '^(file):([\\\\/](?![\\\\/])((?:[A-Za-z]:)?[\\\\/]?(?:(?:[^\\\\/]+[\\\\/]+)*[^\\\\/]+[\\\\/]*)))$', 'ssh+git://me:wtf@[::1]:1234//abc')",[15123]
"('Description.java', 'org.junit.runner.Description', 'methodAndClassNamePatternGroupOrDefault', '([\\s\\S]*)\\((.*)\\)', 'badlyFormattedWithExplicitRef(org.eclipse.jgit.util.GitDateParserBadlyFormattedTest)')","[185191, 185234]"
"('Description.java', 'org.junit.runner.Description', 'methodAndClassNamePatternGroupOrDefault', '([\\s\\S]*)\\((.*)\\)', 'testDeleteRecursive(org.eclipse.jgit.util.FileUtilTest)')","[176785, 177134]"
"('Description.java', 'org.junit.runner.Description', 'methodAndClassNamePatternGroupOrDefault', '([\\s\\S]*)\\((.*)\\)', 'testParse_explicit_bad_encoded(org.eclipse.jgit.revwalk.RevTagParseTest)')","[80270, 80681]"
"('Description.java', 'org.junit.runner.Description', 'methodAndClassNamePatternGroupOrDefault', '([\\s\\S]*)\\((.*)\\)', 'testUpdateDeleteNonExisting(org.eclipse.jgit.transport.PushProcessTest)')","[74194, 74565]"
"('Description.java', 'org.junit.runner.Description', 'methodAndClassNamePatternGroupOrDefault', '([\\s\\S]*)\\((.*)\\)', 'testEmptyMap(org.eclipse.jgit.transport.LongMapTest)')","[75469, 75644]"
"('URIish.java', 'org.eclipse.jgit.transport.URIish', '<init>', '^(file):([\\\\/](?![\\\\/])((?:[A-Za-z]:)?[\\\\/]?(?:(?:[^\\\\/]+[\\\\/]+)*[^\\\\/]+[\\\\/]*)))$', 'https://lusr\\example:wtf@1.2.3.4:80//')",[25388]
"('Description.java', 'org.junit.runner.Description', 'methodAndClassNamePatternGroupOrDefault', '([\\s\\S]*)\\((.*)\\)', 'testCheckoutCommit(org.eclipse.jgit.api.CheckoutCommandTest)')","[206828, 207338]"
"('URIish.java', 'org.eclipse.jgit.transport.URIish', '<init>', '^(?:([^/:@]+)(?::([^\\\\/]+))?@)?((?:[^\\\\/:]+)|(?:\\[[0-9a-f:]+\\])):((?:(?:/~(?:[^\\\\/]+))[\\\\/])?(?:(?:[^\\\\/]+[\\\\/]+)*[^\\\\/]+[\\\\/]*))$', '/abc.git')",[66326]
"('URIish.java', 'org.eclipse.jgit.transport.URIish', '<init>', '^(?:([^/:@]+)(?::([^\\\\/]+))?@)?((?:[^\\\\/:]+)|(?:\\[[0-9a-f:]+\\])):((?:(?:/~(?:[^\\\\/]+))[\\\\/])?(?:(?:[^\\\\/]+[\\\\/]+)*[^\\\\/]+[\\\\/]*))$', 'example.com:some/p%20ath')","[69240, 69309]"
"('Description.java', 'org.junit.runner.Description', 'methodAndClassNamePatternGroupOrDefault', '([\\s\\S]*)\\((.*)\\)', 'org.eclipse.jgit.api.StashDropCommandTest')","[243320, 244333]"
"('FastIgnoreRule.java', 'org.eclipse.jgit.ignore.FastIgnoreRule', 'isMatch', '[\\p{Ll}]', '.')",[160888]
"('Description.java', 'org.junit.runner.Description', 'methodAndClassNamePatternGroupOrDefault', '([\\s\\S]*)\\((.*)\\)', 'org.eclipse.jgit.api.ApplyCommandTest')","[223421, 224347]"
"('Description.java', 'org.junit.runner.Description', 'methodAndClassNamePatternGroupOrDefault', '([\\s\\S]*)\\((.*)\\)', 'testPullWithRebaseConfig2(org.eclipse.jgit.api.PullCommandTest)')","[220651, 220991]"
"('URIish.java', 'org.eclipse.jgit.transport.URIish', '<init>', '^([a-z][a-z0-9+-]+)://(?:(?:([^/:@]+)(?::([^\\\\/]+))?@)?((?:[^\\\\/:]+)|(?:\\[[0-9a-f:]+\\]))(?::(\\d+))?((?:/~(?:[^\\\\/]+))?[\\\\/]))?(.+)?$', 'ssh+git://lusr\\example@example.com:80//')",[31895]
"('URIish.java', 'org.eclipse.jgit.transport.URIish', '<init>', '^(file):([\\\\/](?![\\\\/])((?:[A-Za-z]:)?[\\\\/]?(?:(?:[^\\\\/]+[\\\\/]+)*[^\\\\/]+[\\\\/]*)))$', 'file:/tmp/jgit_test_3047862731010516352_tmp/tmp_4247968197460650075/.git/')",[197644]
"('URIish.java', 'org.eclipse.jgit.transport.URIish', '<init>', '^([a-z][a-z0-9+-]+)://(?:(?:([^/:@]+)(?::([^\\\\/]+))?@)?((?:[^\\\\/:]+)|(?:\\[[0-9a-f:]+\\]))(?::(\\d+))?((?:/~(?:[^\\\\/]+))?[\\\\/]))?(.+)?$', 'ssh://l usr\\example.com@1.2.3.4:80//')",[27784]
"('URIish.java', 'org.eclipse.jgit.transport.URIish', '<init>', '^(file):([\\\\/](?![\\\\/])((?:[A-Za-z]:)?[\\\\/]?(?:(?:[^\\\\/]+[\\\\/]+)*[^\\\\/]+[\\\\/]*)))$', 'ssh://lusr\\example@[::1]:80/D:/x')",[29388]
"('URIish.java', 'org.eclipse.jgit.transport.URIish', '<init>', '^([a-z][a-z0-9+-]+)://(?:(?:([^/:@]+)(?::([^\\\\/]+))?@)?((?:[^\\\\/:]+)|(?:\\[[0-9a-f:]+\\]))(?::(\\d+))?((?:/~(?:[^\\\\/]+))?[\\\\/]))?(.+)?$', 'http://lusr\\example:wtf@[::1]:1234//')",[22283]
"('URIish.java', 'org.eclipse.jgit.transport.URIish', '<init>', '^(file):([\\\\/](?![\\\\/])((?:[A-Za-z]:)?[\\\\/]?(?:(?:[^\\\\/]+[\\\\/]+)*[^\\\\/]+[\\\\/]*)))$', 'http://l usr\\example.com@[::1]:1234//abc')",[34678]
"('Description.java', 'org.junit.runner.Description', 'methodAndClassNamePatternGroupOrDefault', '([\\s\\S]*)\\((.*)\\)', 'testSpecialGroupCase9(org.eclipse.jgit.fnmatch.FileNameMatcherTest)')","[101104, 104369]"
"('Description.java', 'org.junit.runner.Description', 'methodAndClassNamePatternGroupOrDefault', '([\\s\\S]*)\\((.*)\\)', 'org.eclipse.jgit.treewalk.TreeWalkBasicDiffTest')","[135021, 135087]"
"('Description.java', 'org.junit.runner.Description', 'methodAndClassNamePatternGroupOrDefault', '([\\s\\S]*)\\((.*)\\)', 'testNoAsciiControlCharacters(org.eclipse.jgit.lib.ValidRefNameTest)')","[118488, 118852]"
"('URIish.java', 'org.eclipse.jgit.transport.URIish', '<init>', '^([a-z][a-z0-9+-]+)://(?:(?:([^/:@]+)(?::([^\\\\/]+))?@)?((?:[^\\\\/:]+)|(?:\\[[0-9a-f:]+\\]))(?::(\\d+))?((?:/~(?:[^\\\\/]+))?[\\\\/]))?(.+)?$', 'ssh://example.com/D:\\x')","[52825, 53009, 53929, 54113, 55033, 55217]"
"('Description.java', 'org.junit.runner.Description', 'methodAndClassNamePatternGroupOrDefault', '([\\s\\S]*)\\((.*)\\)', 'testValidTreeSorting2(org.eclipse.jgit.lib.ObjectCheckerTest)')","[121448, 123557]"
"('Description.java', 'org.junit.runner.Description', 'methodAndClassNamePatternGroupOrDefault', '([\\s\\S]*)\\((.*)\\)', 'org.eclipse.jgit.api.ArchiveCommandTest')","[240025, 240251]"
"('Description.java', 'org.junit.runner.Description', 'methodAndClassNamePatternGroupOrDefault', '([\\s\\S]*)\\((.*)\\)', 'org.eclipse.jgit.api.RevertCommandTest')","[233406, 235606]"
"('Description.java', 'org.junit.runner.Description', 'methodAndClassNamePatternGroupOrDefault', '([\\s\\S]*)\\((.*)\\)', 'testOnlyOption_f1_6_f2_14_a(org.eclipse.jgit.api.CommitOnlyTest)')","[237119, 239196]"
"('URIish.java', 'org.eclipse.jgit.transport.URIish', '<init>', '^([a-z][a-z0-9+-]+)://(?:(?:([^/:@]+)(?::([^\\\\/]+))?@)?((?:[^\\\\/:]+)|(?:\\[[0-9a-f:]+\\]))(?::(\\d+))?((?:/~(?:[^\\\\/]+))?[\\\\/]))?(.+)?$', 'http://lusr\\example:wtf@example.com:1234/D:\\x')",[21685]
"('ChangeIdUtil.java', 'org.eclipse.jgit.util.ChangeIdUtil', 'indexOfChangeId', '(^Change-Id: *I[a-f0-9]{40}$)', 'Fix-A-Widget: this thing')",[190404]
"('Description.java', 'org.junit.runner.Description', 'methodAndClassNamePatternGroupOrDefault', '([\\s\\S]*)\\((.*)\\)', 'testDelta_FailsOver2GiB(org.eclipse.jgit.internal.storage.file.PackFileTest)')","[248726, 248811]"
"('Description.java', 'org.junit.runner.Description', 'methodAndClassNamePatternGroupOrDefault', '([\\s\\S]*)\\((.*)\\)', 'testObjectMovedToNewPack1(org.eclipse.jgit.internal.storage.file.ConcurrentRepackTest)')","[252557, 252642]"
"('URIish.java', 'org.eclipse.jgit.transport.URIish', '<init>', '^([a-z][a-z0-9+-]+)://(?:(?:([^/:@]+)(?::([^\\\\/]+))?@)?((?:[^\\\\/:]+)|(?:\\[[0-9a-f:]+\\]))(?::(\\d+))?((?:/~(?:[^\\\\/]+))?[\\\\/]))?(.+)?$', 'https://l usr\\example.com@example.com:80/D:/x')",[37507]
"('Description.java', 'org.junit.runner.Description', 'methodAndClassNamePatternGroupOrDefault', '([\\s\\S]*)\\((.*)\\)', 'singleInsteadOf(org.eclipse.jgit.transport.RemoteConfigTest)')","[2024, 3361]"
"('URIish.java', 'org.eclipse.jgit.transport.URIish', '<init>', '^([a-z][a-z0-9+-]+)://(?:(?:([^/:@]+)(?::([^\\\\/]+))?@)?((?:[^\\\\/:]+)|(?:\\[[0-9a-f:]+\\]))(?::(\\d+))?((?:/~(?:[^\\\\/]+))?[\\\\/]))?(.+)?$', 'ssh://lusr\\example@1.2.3.4:80/D:\\x')",[29089]
"('Description.java', 'org.junit.runner.Description', 'methodAndClassNamePatternGroupOrDefault', '([\\s\\S]*)\\((.*)\\)', 'testMergeBlockedBySelf(org.eclipse.jgit.revplot.PlotCommitListTest)')","[196982, 197298]"
"('Description.java', 'org.junit.runner.Description', 'methodAndClassNamePatternGroupOrDefault', '([\\s\\S]*)\\((.*)\\)', 'testGetRefs_IgnoresGarbageRef3(org.eclipse.jgit.internal.storage.file.RefDirectoryTest)')","[257518, 258682]"
"('Description.java', 'org.junit.runner.Description', 'methodAndClassNamePatternGroupOrDefault', '([\\s\\S]*)\\((.*)\\)', 'testDeleteFastForward(org.eclipse.jgit.internal.storage.file.RefUpdateTest)')","[253439, 254290]"
"('ChangeIdUtil.java', 'org.eclipse.jgit.util.ChangeIdUtil', 'indexOfChangeId', '(^Change-Id: *I[a-f0-9]{40}$)', 'Bug: 42')",[188338]
"('Description.java', 'org.junit.runner.Description', 'methodAndClassNamePatternGroupOrDefault', '([\\s\\S]*)\\((.*)\\)', 'testEncodeASCII_Number13(org.eclipse.jgit.lib.ConstantsEncodingTest)')","[118172, 118282]"
"('URIish.java', 'org.eclipse.jgit.transport.URIish', '<init>', '^(file):([\\\\/](?![\\\\/])((?:[A-Za-z]:)?[\\\\/]?(?:(?:[^\\\\/]+[\\\\/]+)*[^\\\\/]+[\\\\/]*)))$', 'http://lusr\\example@example.com:80//')",[35184]
"('URIish.java', 'org.eclipse.jgit.transport.URIish', '<init>', '^([a-z][a-z0-9+-]+)://(?:(?:([^/:@]+)(?::([^\\\\/]+))?@)?((?:[^\\\\/:]+)|(?:\\[[0-9a-f:]+\\]))(?::(\\d+))?((?:/~(?:[^\\\\/]+))?[\\\\/]))?(.+)?$', 'ssh+git://me@[::1]//abc')","[43533, 43717]"
"('Description.java', 'org.junit.runner.Description', 'methodAndClassNamePatternGroupOrDefault', '([\\s\\S]*)\\((.*)\\)', 'repositoryWithRootLevelSubmoduleRelativeRef(org.eclipse.jgit.submodule.SubmoduleWalkTest)')","[108346, 108537]"
"('URIish.java', 'org.eclipse.jgit.transport.URIish', '<init>', '^(?:([^/:@]+)(?::([^\\\\/]+))?@)?((?:[^\\\\/:]+)|(?:\\[[0-9a-f:]+\\])):((?:(?:/~(?:[^\\\\/]+))[\\\\/])?(?:(?:[^\\\\/]+[\\\\/]+)*[^\\\\/]+[\\\\/]*))$', '/tmp/jgit_test_8384532865018553446_tmp/tmp_7813617932258479589')","[227907, 228042, 228247, 228677]"
"('Description.java', 'org.junit.runner.Description', 'methodAndClassNamePatternGroupOrDefault', '([\\s\\S]*)\\((.*)\\)', 'testCreate_ByStringPath(org.eclipse.jgit.dircache.DirCacheEntryTest)')","[90893, 91021]"
"('Description.java', 'org.junit.runner.Description', 'methodAndClassNamePatternGroupOrDefault', '([\\s\\S]*)\\((.*)\\)', 'testDirectoryFileConflicts_7(org.eclipse.jgit.lib.DirCacheCheckoutTest)')","[116389, 117358]"
"('Description.java', 'org.junit.runner.Description', 'methodAndClassNamePatternGroupOrDefault', '([\\s\\S]*)\\((.*)\\)', 'testOnlyOption_f1_8_b(org.eclipse.jgit.api.CommitOnlyTest)')","[236689, 238778]"
"('Description.java', 'org.junit.runner.Description', 'methodAndClassNamePatternGroupOrDefault', '([\\s\\S]*)\\((.*)\\)', 'branch_historyNotPruned(org.eclipse.jgit.internal.storage.file.GcBranchPrunedTest)')","[260198, 260263]"
"('URIish.java', 'org.eclipse.jgit.transport.URIish', '<init>', '^(file):([\\\\/](?![\\\\/])((?:[A-Za-z]:)?[\\\\/]?(?:(?:[^\\\\/]+[\\\\/]+)*[^\\\\/]+[\\\\/]*)))$', 'ssh://l usr\\example.com@[::1]:1234//abc')",[28054]
"('URIish.java', 'org.eclipse.jgit.transport.URIish', '<init>', '^(file):([\\\\/](?![\\\\/])((?:[A-Za-z]:)?[\\\\/]?(?:(?:[^\\\\/]+[\\\\/]+)*[^\\\\/]+[\\\\/]*)))$', 'https://me:wtf@1.2.3.4:1234//abc')",[23042]
"('URIish.java', 'org.eclipse.jgit.transport.URIish', '<init>', '^(?:([^/:@]+)(?::([^\\\\/]+))?@)?([^\\\\/:]{2,}):([\\\\/](?:(?:[^\\\\/]+[\\\\/]+)*[^\\\\/]+[\\\\/]*))$', '/a/b/c/')",[67522]
"('URIish.java', 'org.eclipse.jgit.transport.URIish', '<init>', '^([a-z][a-z0-9+-]+)://(?:(?:([^/:@]+)(?::([^\\\\/]+))?@)?((?:[^\\\\/:]+)|(?:\\[[0-9a-f:]+\\]))(?::(\\d+))?((?:/~(?:[^\\\\/]+))?[\\\\/]))?(.+)?$', 'https://lusr\\example@[::1]//')","[52319, 52503]"
"('URIish.java', 'org.eclipse.jgit.transport.URIish', '<init>', '^(file):([\\\\/](?![\\\\/])((?:[A-Za-z]:)?[\\\\/]?(?:(?:[^\\\\/]+[\\\\/]+)*[^\\\\/]+[\\\\/]*)))$', 'http://l usr\\example.com@example.com:1234//')",[33896]
"('Description.java', 'org.junit.runner.Description', 'methodAndClassNamePatternGroupOrDefault', '([\\s\\S]*)\\((.*)\\)', 'testInvalidCommitInvalidParent5(org.eclipse.jgit.lib.ObjectCheckerTest)')","[121679, 123799]"
"('URIish.java', 'org.eclipse.jgit.transport.URIish', '<init>', '^(file):([\\\\/](?![\\\\/])((?:[A-Za-z]:)?[\\\\/]?(?:(?:[^\\\\/]+[\\\\/]+)*[^\\\\/]+[\\\\/]*)))$', 'file:/tmp/jgit_test_960711879172370885_tmp/tmp_8757266491092025519/.git/')",[173271]
"('URIish.java', 'org.eclipse.jgit.transport.URIish', '<init>', '^([a-z][a-z0-9+-]+)://(?:(?:([^/:@]+)(?::([^\\\\/]+))?@)?((?:[^\\\\/:]+)|(?:\\[[0-9a-f:]+\\]))(?::(\\d+))?((?:/~(?:[^\\\\/]+))?[\\\\/]))?(.+)?$', 'ssh+git://l usr\\example.com:wtf@1.2.3.4:80//')",[16526]
"('FastIgnoreRule.java', 'org.eclipse.jgit.ignore.FastIgnoreRule', 'isMatch', '[a\\[]', 'a')",[160004]
"('URIish.java', 'org.eclipse.jgit.transport.URIish', '<init>', '^(file):([\\\\/](?![\\\\/])((?:[A-Za-z]:)?[\\\\/]?(?:(?:[^\\\\/]+[\\\\/]+)*[^\\\\/]+[\\\\/]*)))$', 'https://lusr\\example:wtf@[::1]:80/D:/x')",[25848]
"('URIish.java', 'org.eclipse.jgit.transport.URIish', '<init>', '^(file):([\\\\/](?![\\\\/])((?:[A-Za-z]:)?[\\\\/]?(?:(?:[^\\\\/]+[\\\\/]+)*[^\\\\/]+[\\\\/]*)))$', 'https://l usr\\example.com@example.com:1234//')",[37208]
"('Description.java', 'org.junit.runner.Description', 'methodAndClassNamePatternGroupOrDefault', '([\\s\\S]*)\\((.*)\\)', 'testFormatWithConflictsWithFooters(org.eclipse.jgit.merge.MergeMessageFormatterTest)')","[89052, 89379]"
"('URIish.java', 'org.eclipse.jgit.transport.URIish', '<init>', '^([a-z][a-z0-9+-]+)://(?:(?:([^/:@]+)(?::([^\\\\/]+))?@)?((?:[^\\\\/:]+)|(?:\\[[0-9a-f:]+\\]))(?::(\\d+))?((?:/~(?:[^\\\\/]+))?[\\\\/]))?(.+)?$', 'ssh://me:wtf@example.com:1234//')",[7406]
"('Description.java', 'org.junit.runner.Description', 'methodAndClassNamePatternGroupOrDefault', '([\\s\\S]*)\\((.*)\\)', 'testDegenerate_InsertMiddle(org.eclipse.jgit.diff.HistogramDiffTest)')","[98926, 99540]"
"('Description.java', 'org.junit.runner.Description', 'methodAndClassNamePatternGroupOrDefault', '([\\s\\S]*)\\((.*)\\)', 'testWrite_SmallBlocks2(org.eclipse.jgit.transport.SideBandOutputStreamTest)')","[73349, 73586]"
"('Description.java', 'org.junit.runner.Description', 'methodAndClassNamePatternGroupOrDefault', '([\\s\\S]*)\\((.*)\\)', 'testInvalidTreeDuplicateNames1(org.eclipse.jgit.lib.ObjectCheckerTest)')","[122750, 124921]"
"('URIish.java', 'org.eclipse.jgit.transport.URIish', '<init>', '^([a-z][a-z0-9+-]+)://(?:(?:([^/:@]+)(?::([^\\\\/]+))?@)?((?:[^\\\\/:]+)|(?:\\[[0-9a-f:]+\\]))(?::(\\d+))?((?:/~(?:[^\\\\/]+))?[\\\\/]))?(.+)?$', 'ssh://l usr\\example.com:wtf@example.com:1234/D:/x')",[10523]
"('Description.java', 'org.junit.runner.Description', 'methodAndClassNamePatternGroupOrDefault', '([\\s\\S]*)\\((.*)\\)', 'testIsModifiedSymlinkAsFile(org.eclipse.jgit.treewalk.FileTreeIteratorTest)')","[131312, 131654]"
"('URIish.java', 'org.eclipse.jgit.transport.URIish', '<init>', '^([a-z][a-z0-9+-]+)://(?:(?:([^/:@]+)(?::([^\\\\/]+))?@)?((?:[^\\\\/:]+)|(?:\\[[0-9a-f:]+\\]))(?::(\\d+))?((?:/~(?:[^\\\\/]+))?[\\\\/]))?(.+)?$', 'ssh+git://l usr\\example.com:wtf@[::1]:80/D:/x')",[16986]
"('Description.java', 'org.junit.runner.Description', 'methodAndClassNamePatternGroupOrDefault', '([\\s\\S]*)\\((.*)\\)', 'multipleEdits(org.eclipse.jgit.api.StashApplyCommandTest)')","[240832, 241384]"
"('Description.java', 'org.junit.runner.Description', 'methodAndClassNamePatternGroupOrDefault', '([\\s\\S]*)\\((.*)\\)', 'testCorruptChecksumAtFooter(org.eclipse.jgit.dircache.DirCacheCGitCompatabilityTest)')","[90473, 90624]"
"('Description.java', 'org.junit.runner.Description', 'methodAndClassNamePatternGroupOrDefault', '([\\s\\S]*)\\((.*)\\)', 'testMissingSubtree_DetectFileAdded_FileModified(org.eclipse.jgit.treewalk.TreeWalkBasicDiffTest)')","[135042, 135064]"
"('Description.java', 'org.junit.runner.Description', 'methodAndClassNamePatternGroupOrDefault', '([\\s\\S]*)\\((.*)\\)', 'testSetFileMode(org.eclipse.jgit.dircache.DirCacheEntryTest)')","[90935, 91065]"
"('URIish.java', 'org.eclipse.jgit.transport.URIish', '<init>', '^(file):([\\\\/](?![\\\\/])((?:[A-Za-z]:)?[\\\\/]?(?:(?:[^\\\\/]+[\\\\/]+)*[^\\\\/]+[\\\\/]*)))$', 'http://me@[::1]:80/D:/x')",[33804]
"('Description.java', 'org.junit.runner.Description', 'methodAndClassNamePatternGroupOrDefault', '([\\s\\S]*)\\((.*)\\)', 'testTwoRangesInOneGroupCase1[OldRule? false](org.eclipse.jgit.ignore.IgnoreRuleSpecialCasesTest)')","[148928, 156033]"
"('URIish.java', 'org.eclipse.jgit.transport.URIish', '<init>', '^([a-z][a-z0-9+-]+)://(?:(?:([^/:@]+)(?::([^\\\\/]+))?@)?((?:[^\\\\/:]+)|(?:\\[[0-9a-f:]+\\]))(?::(\\d+))?((?:/~(?:[^\\\\/]+))?[\\\\/]))?(.+)?$', '/tmp/jgit_test_5311018649809901760_tmp/tmp_2572555623416741506')","[225573, 225703]"
"('URIish.java', 'org.eclipse.jgit.transport.URIish', '<init>', '^(file):([\\\\/](?![\\\\/])((?:[A-Za-z]:)?[\\\\/]?(?:(?:[^\\\\/]+[\\\\/]+)*[^\\\\/]+[\\\\/]*)))$', 'ssh+git://me@[::1]/D:/x')","[43556, 43740]"
"('URIish.java', 'org.eclipse.jgit.transport.URIish', '<init>', '^(file):([\\\\/](?![\\\\/])((?:[A-Za-z]:)?[\\\\/]?(?:(?:[^\\\\/]+[\\\\/]+)*[^\\\\/]+[\\\\/]*)))$', 'ssh://l usr\\example.com@[::1]/D:/x')","[41348, 41532]"
"('Description.java', 'org.junit.runner.Description', 'methodAndClassNamePatternGroupOrDefault', '([\\s\\S]*)\\((.*)\\)', 'testHardResetOnTag(org.eclipse.jgit.api.ResetCommandTest)')","[204646, 204998]"
"('Description.java', 'org.junit.runner.Description', 'methodAndClassNamePatternGroupOrDefault', '([\\s\\S]*)\\((.*)\\)', 'testSimpleStarCase3[OldRule? false](org.eclipse.jgit.ignore.IgnoreRuleSpecialCasesTest)')","[147295, 154400]"
"('Description.java', 'org.junit.runner.Description', 'methodAndClassNamePatternGroupOrDefault', '([\\s\\S]*)\\((.*)\\)', 'testIteratorReturnedValues1(org.eclipse.jgit.internal.storage.file.PackIndexV2Test)')","[248112, 248242]"
"('Description.java', 'org.junit.runner.Description', 'methodAndClassNamePatternGroupOrDefault', '([\\s\\S]*)\\((.*)\\)', 'testUnsupportedRequiredExtension(org.eclipse.jgit.dircache.DirCacheCGitCompatabilityTest)')","[90431, 90580]"
"('Description.java', 'org.junit.runner.Description', 'methodAndClassNamePatternGroupOrDefault', '([\\s\\S]*)\\((.*)\\)', 'annotatedTagsNoResult(org.eclipse.jgit.api.NameRevCommandTest)')","[242078, 242314]"
"('Description.java', 'org.junit.runner.Description', 'methodAndClassNamePatternGroupOrDefault', '([\\s\\S]*)\\((.*)\\)', 'testGraphGroupCase2[OldRule? false](org.eclipse.jgit.ignore.IgnoreRuleSpecialCasesTest)')","[146375, 153480]"
"('URIish.java', 'org.eclipse.jgit.transport.URIish', '<init>', '^(file):([\\\\/](?![\\\\/])((?:[A-Za-z]:)?[\\\\/]?(?:(?:[^\\\\/]+[\\\\/]+)*[^\\\\/]+[\\\\/]*)))$', 'http://me@[::1]//abc')","[46822, 47006]"
"('URIish.java', 'org.eclipse.jgit.transport.URIish', '<init>', '^(?:([^/:@]+)(?::([^\\\\/]+))?@)?((?:[^\\\\/:]+)|(?:\\[[0-9a-f:]+\\])):((?:(?:/~(?:[^\\\\/]+))[\\\\/])?(?:(?:[^\\\\/]+[\\\\/]+)*[^\\\\/]+[\\\\/]*))$', '/a/b/c//')",[70735]
"('Description.java', 'org.junit.runner.Description', 'methodAndClassNamePatternGroupOrDefault', '([\\s\\S]*)\\((.*)\\)', 'org.eclipse.jgit.lib.DirCacheCheckoutTest')","[115885, 119718]"
"('FastIgnoreRule.java', 'org.eclipse.jgit.ignore.FastIgnoreRule', 'isMatch', '[tv]est\\.sta[a-d]', 'test.sta9')","[142740, 143884]"
"('URIish.java', 'org.eclipse.jgit.transport.URIish', '<init>', '^([a-z][a-z0-9+-]+)://(?:(?:([^/:@]+)(?::([^\\\\/]+))?@)?((?:[^\\\\/:]+)|(?:\\[[0-9a-f:]+\\]))(?::(\\d+))?((?:/~(?:[^\\\\/]+))?[\\\\/]))?(.+)?$', 'ssh://lusr\\example:wtf@1.2.3.4:1234//abc')",[12802]
"('Description.java', 'org.junit.runner.Description', 'methodAndClassNamePatternGroupOrDefault', '([\\s\\S]*)\\((.*)\\)', 'testEquals_Full(org.eclipse.jgit.lib.AbbreviatedObjectIdTest)')","[114326, 114852]"
"('URIish.java', 'org.eclipse.jgit.transport.URIish', '<init>', '^(file):([\\\\/](?![\\\\/])((?:[A-Za-z]:)?[\\\\/]?(?:(?:[^\\\\/]+[\\\\/]+)*[^\\\\/]+[\\\\/]*)))$', 'http://www.spearce.org/egit.git')","[6446, 8137, 8187, 8527, 8701, 9250, 9545, 10813, 11285, 11410]"
"('Description.java', 'org.junit.runner.Description', 'methodAndClassNamePatternGroupOrDefault', '([\\s\\S]*)\\((.*)\\)', 'newFileInIndexThenModifiedInWorkTree(org.eclipse.jgit.api.StashCreateCommandTest)')","[202319, 202660]"
"('URIish.java', 'org.eclipse.jgit.transport.URIish', '<init>', '^(file):([\\\\/](?![\\\\/])((?:[A-Za-z]:)?[\\\\/]?(?:(?:[^\\\\/]+[\\\\/]+)*[^\\\\/]+[\\\\/]*)))$', 'ssh://lusr\\example@example.com//')","[41624, 41808]"
"('Description.java', 'org.junit.runner.Description', 'methodAndClassNamePatternGroupOrDefault', '([\\s\\S]*)\\((.*)\\)', 'testOnelinerFollowedByBlank(org.eclipse.jgit.util.ChangeIdUtilTest)')","[185483, 186226]"
"('Description.java', 'org.junit.runner.Description', 'methodAndClassNamePatternGroupOrDefault', '([\\s\\S]*)\\((.*)\\)', 'testNoDF_NoGap(org.eclipse.jgit.treewalk.NameConflictTreeWalkTest)')","[134768, 134874]"
"('Description.java', 'org.junit.runner.Description', 'methodAndClassNamePatternGroupOrDefault', '([\\s\\S]*)\\((.*)\\)', 'testNoChange(org.eclipse.jgit.notes.NoteMapMergerTest)')","[199878, 200250]"
"('URIish.java', 'org.eclipse.jgit.transport.URIish', '<init>', '^([a-z][a-z0-9+-]+)://(?:(?:([^/:@]+)(?::([^\\\\/]+))?@)?((?:[^\\\\/:]+)|(?:\\[[0-9a-f:]+\\]))(?::(\\d+))?((?:/~(?:[^\\\\/]+))?[\\\\/]))?(.+)?$', 'http://me:wtf@[::1]:1234//')",[20052]
"('URIish.java', 'org.eclipse.jgit.transport.URIish', '<init>', '^(file):([\\\\/](?![\\\\/])((?:[A-Za-z]:)?[\\\\/]?(?:(?:[^\\\\/]+[\\\\/]+)*[^\\\\/]+[\\\\/]*)))$', 'https://l usr\\example.com@[::1]:1234/D:\\x')",[38082]
"('Description.java', 'org.junit.runner.Description', 'methodAndClassNamePatternGroupOrDefault', '([\\s\\S]*)\\((.*)\\)', 'testRevertDirtyWorktree(org.eclipse.jgit.api.RevertCommandTest)')","[233553, 233770]"
"('Description.java', 'org.junit.runner.Description', 'methodAndClassNamePatternGroupOrDefault', '([\\s\\S]*)\\((.*)\\)', 'testFindNextOffset(org.eclipse.jgit.internal.storage.file.PackReverseIndexTest)')","[257182, 257270]"
"('URIish.java', 'org.eclipse.jgit.transport.URIish', '<init>', '^([a-z][a-z0-9+-]+)://(?:(?:([^/:@]+)(?::([^\\\\/]+))?@)?((?:[^\\\\/:]+)|(?:\\[[0-9a-f:]+\\]))(?::(\\d+))?((?:/~(?:[^\\\\/]+))?[\\\\/]))?(.+)?$', 'http://lusr\\example@example.com//')","[48271, 48455]"
"('Description.java', 'org.junit.runner.Description', 'methodAndClassNamePatternGroupOrDefault', '([\\s\\S]*)\\((.*)\\)', 'test(org.eclipse.jgit.util.io.AutoCRLFOutputStreamTest)')","[173582, 173626]"
"('URIish.java', 'org.eclipse.jgit.transport.URIish', '<init>', '^(file):([\\\\/](?![\\\\/])((?:[A-Za-z]:)?[\\\\/]?(?:(?:[^\\\\/]+[\\\\/]+)*[^\\\\/]+[\\\\/]*)))$', 'http://me@example.com:1234/D:/x')",[32884]
"('Description.java', 'org.junit.runner.Description', 'methodAndClassNamePatternGroupOrDefault', '([\\s\\S]*)\\((.*)\\)', 'testAddTwo(org.eclipse.jgit.revwalk.RevFlagSetTest)')","[79786, 79938]"
"('Description.java', 'org.junit.runner.Description', 'methodAndClassNamePatternGroupOrDefault', '([\\s\\S]*)\\((.*)\\)', 'testBaseEqualsOurs(org.eclipse.jgit.notes.NoteMapMergerTest)')","[199899, 200272]"
"('Description.java', 'org.junit.runner.Description', 'methodAndClassNamePatternGroupOrDefault', '([\\s\\S]*)\\((.*)\\)', 'testSeparatorParsing(org.eclipse.jgit.transport.OpenSshConfigTest)')","[3511, 3944]"
"('Description.java', 'org.junit.runner.Description', 'methodAndClassNamePatternGroupOrDefault', '([\\s\\S]*)\\((.*)\\)', 'testStopOnConflict(org.eclipse.jgit.api.RebaseCommandTest)')","[217459, 218938]"
"('URIish.java', 'org.eclipse.jgit.transport.URIish', '<init>', '^([a-z][a-z0-9+-]+)://(?:(?:([^/:@]+)(?::([^\\\\/]+))?@)?((?:[^\\\\/:]+)|(?:\\[[0-9a-f:]+\\]))(?::(\\d+))?((?:/~(?:[^\\\\/]+))?[\\\\/]))?(.+)?$', 'http://l usr\\example.com@example.com/D:/x')","[47259, 47443]"
"('Description.java', 'org.junit.runner.Description', 'methodAndClassNamePatternGroupOrDefault', '([\\s\\S]*)\\((.*)\\)', 'testParse_ShortLineOnlyEmbeddedAndEndingLF(org.eclipse.jgit.revwalk.RevCommitParseTest)')","[84395, 84876]"
"('Description.java', 'org.junit.runner.Description', 'methodAndClassNamePatternGroupOrDefault', '([\\s\\S]*)\\((.*)\\)', 'whileRefUpdatedRefUpdateSucceeds(org.eclipse.jgit.internal.storage.file.GcPackRefsTest)')","[252138, 252265]"
"('URIish.java', 'org.eclipse.jgit.transport.URIish', '<init>', '^(file):([\\\\/](?![\\\\/])((?:[A-Za-z]:)?[\\\\/]?(?:(?:[^\\\\/]+[\\\\/]+)*[^\\\\/]+[\\\\/]*)))$', 'ssh://lusr\\example@example.com:80/D:\\x')",[28698]
"('Description.java', 'org.junit.runner.Description', 'methodAndClassNamePatternGroupOrDefault', '([\\s\\S]*)\\((.*)\\)', 'testOnlyOption_f1_12_c(org.eclipse.jgit.api.CommitOnlyTest)')","[237476, 239570]"
"('URIish.java', 'org.eclipse.jgit.transport.URIish', '<init>', '^(file):([\\\\/](?![\\\\/])((?:[A-Za-z]:)?[\\\\/]?(?:(?:[^\\\\/]+[\\\\/]+)*[^\\\\/]+[\\\\/]*)))$', 'https://lusr\\example@1.2.3.4:1234/D:/x')",[38772]
"('URIish.java', 'org.eclipse.jgit.transport.URIish', '<init>', '^(?:([^/:@]+)(?::([^\\\\/]+))?@)?((?:[^\\\\/:]+)|(?:\\[[0-9a-f:]+\\])):((?:(?:/~(?:[^\\\\/]+))[\\\\/])?(?:(?:[^\\\\/]+[\\\\/]+)*[^\\\\/]+[\\\\/]*))$', '/a/b/.git')",[71126]
"('URIish.java', 'org.eclipse.jgit.transport.URIish', '<init>', '^(file):([\\\\/](?![\\\\/])((?:[A-Za-z]:)?[\\\\/]?(?:(?:[^\\\\/]+[\\\\/]+)*[^\\\\/]+[\\\\/]*)))$', 'file:///tmp/jgit_test_5457282241759243552_tmp/tmp_6811893643033562885/.git/')",[175717]
"('URIish.java', 'org.eclipse.jgit.transport.URIish', '<init>', '^(file):([\\\\/](?![\\\\/])((?:[A-Za-z]:)?[\\\\/]?(?:(?:[^\\\\/]+[\\\\/]+)*[^\\\\/]+[\\\\/]*)))$', 'http://lusr\\example:wtf@1.2.3.4:1234/D:\\x')",[22030]
"('Description.java', 'org.junit.runner.Description', 'methodAndClassNamePatternGroupOrDefault', '([\\s\\S]*)\\((.*)\\)', 'testMaliciousPathDotDot(org.eclipse.jgit.lib.DirCacheCheckoutMaliciousPathTest)')","[111996, 112896]"
"('URIish.java', 'org.eclipse.jgit.transport.URIish', '<init>', '^(file):([\\\\/](?![\\\\/])((?:[A-Za-z]:)?[\\\\/]?(?:(?:[^\\\\/]+[\\\\/]+)*[^\\\\/]+[\\\\/]*)))$', 'https://me@1.2.3.4:80/D:\\x')",[36794]
"('URIish.java', 'org.eclipse.jgit.transport.URIish', '<init>', '^([\\\\/]?((?:[A-Za-z]:)?[\\\\/]?(?:(?:[^\\\\/]+[\\\\/]+)*[^\\\\/]+[\\\\/]*)))$', '/abc.git')",[66372]
"('Description.java', 'org.junit.runner.Description', 'methodAndClassNamePatternGroupOrDefault', '([\\s\\S]*)\\((.*)\\)', 'testBuilderClear(org.eclipse.jgit.dircache.DirCacheBuilderTest)')","[91799, 91994]"
"('Description.java', 'org.junit.runner.Description', 'methodAndClassNamePatternGroupOrDefault', '([\\s\\S]*)\\((.*)\\)', 'repositoryWithRootLevelSubmoduleAbsoluteRef(org.eclipse.jgit.submodule.SubmoduleWalkTest)')","[108430, 108625]"
"('Description.java', 'org.junit.runner.Description', 'methodAndClassNamePatternGroupOrDefault', '([\\s\\S]*)\\((.*)\\)', 'testVerySimpleGroupRangeCase4[OldRule? false](org.eclipse.jgit.ignore.IgnoreRuleSpecialCasesTest)')","[147548, 154653]"
"('URIish.java', 'org.eclipse.jgit.transport.URIish', '<init>', '^([a-z][a-z0-9+-]+)://(?:(?:([^/:@]+)(?::([^\\\\/]+))?@)?((?:[^\\\\/:]+)|(?:\\[[0-9a-f:]+\\]))(?::(\\d+))?((?:/~(?:[^\\\\/]+))?[\\\\/]))?(.+)?$', 'https://lusr\\example@1.2.3.4:80//')",[38887]
"('Description.java', 'org.junit.runner.Description', 'methodAndClassNamePatternGroupOrDefault', '([\\s\\S]*)\\((.*)\\)', 'org.eclipse.jgit.lib.BranchTrackingStatusTest')","[117879, 118031]"
"('Description.java', 'org.junit.runner.Description', 'methodAndClassNamePatternGroupOrDefault', '([\\s\\S]*)\\((.*)\\)', 'testReadLines_LF(org.eclipse.jgit.util.ReadLinesTest)')","[171881, 172013]"
"('URIish.java', 'org.eclipse.jgit.transport.URIish', '<init>', '^(file):([\\\\/](?![\\\\/])((?:[A-Za-z]:)?[\\\\/]?(?:(?:[^\\\\/]+[\\\\/]+)*[^\\\\/]+[\\\\/]*)))$', 'user@example.com:egit.git')",[7689]
"('URIish.java', 'org.eclipse.jgit.transport.URIish', '<init>', '^(file):([\\\\/](?![\\\\/])((?:[A-Za-z]:)?[\\\\/]?(?:(?:[^\\\\/]+[\\\\/]+)*[^\\\\/]+[\\\\/]*)))$', 'file:///tmp/jgit_test_9196781976966621040_tmp/tmp_2995568672839144646/.git/')",[132667]
"('URIish.java', 'org.eclipse.jgit.transport.URIish', '<init>', '^([a-z][a-z0-9+-]+)://(?:(?:([^/:@]+)(?::([^\\\\/]+))?@)?((?:[^\\\\/:]+)|(?:\\[[0-9a-f:]+\\]))(?::(\\d+))?((?:/~(?:[^\\\\/]+))?[\\\\/]))?(.+)?$', 'file:///tmp/jgit_test_3387739597023240848_tmp/tmp_5822056172154043562/.git/')",[216074]
"('URIish.java', 'org.eclipse.jgit.transport.URIish', '<init>', '^(file):([\\\\/](?![\\\\/])((?:[A-Za-z]:)?[\\\\/]?(?:(?:[^\\\\/]+[\\\\/]+)*[^\\\\/]+[\\\\/]*)))$', 'file:///tmp/jgit_test_3515941071985452796_tmp/tmp_8174175230849322016/.git/')",[205200]
"('URIish.java', 'org.eclipse.jgit.transport.URIish', '<init>', '^(file):([\\\\/](?![\\\\/])((?:[A-Za-z]:)?[\\\\/]?(?:(?:[^\\\\/]+[\\\\/]+)*[^\\\\/]+[\\\\/]*)))$', 'ssh+git://me@example.com/D:\\x')","[42866, 43050]"
"('Description.java', 'org.junit.runner.Description', 'methodAndClassNamePatternGroupOrDefault', '([\\s\\S]*)\\((.*)\\)', 'testNoNewLine1(org.eclipse.jgit.diff.DiffFormatterReflowTest)')","[94393, 94612]"
"('URIish.java', 'org.eclipse.jgit.transport.URIish', '<init>', '^([a-z][a-z0-9+-]+)://(?:(?:([^/:@]+)(?::([^\\\\/]+))?@)?((?:[^\\\\/:]+)|(?:\\[[0-9a-f:]+\\]))(?::(\\d+))?((?:/~(?:[^\\\\/]+))?[\\\\/]))?(.+)?$', 'ssh://lusr\\example@1.2.3.4:1234/D:\\x')",[28905]
"('Description.java', 'org.junit.runner.Description', 'methodAndClassNamePatternGroupOrDefault', '([\\s\\S]*)\\((.*)\\)', 'resolveWorkingDirectoryRelativeUrl(org.eclipse.jgit.submodule.SubmoduleInitTest)')","[100620, 100770]"
"('Description.java', 'org.junit.runner.Description', 'methodAndClassNamePatternGroupOrDefault', '([\\s\\S]*)\\((.*)\\)', 'testSimpleAlwaysTags(org.eclipse.jgit.transport.RemoteConfigTest)')","[1898, 3253]"
"('Description.java', 'org.junit.runner.Description', 'methodAndClassNamePatternGroupOrDefault', '([\\s\\S]*)\\((.*)\\)', 'testPunctGroupCase2(org.eclipse.jgit.fnmatch.FileNameMatcherTest)')","[102784, 106129]"
"('Description.java', 'org.junit.runner.Description', 'methodAndClassNamePatternGroupOrDefault', '([\\s\\S]*)\\((.*)\\)', 'testMaliciousAbsolutePathIsOk(org.eclipse.jgit.lib.DirCacheCheckoutMaliciousPathTest)')","[111639, 112522]"
"('URIish.java', 'org.eclipse.jgit.transport.URIish', '<init>', '^(file):([\\\\/](?![\\\\/])((?:[A-Za-z]:)?[\\\\/]?(?:(?:[^\\\\/]+[\\\\/]+)*[^\\\\/]+[\\\\/]*)))$', 'ssh://[::1]/D:\\x')","[53538, 53722, 54642, 54826, 55746, 55930]"
"('URIish.java', 'org.eclipse.jgit.transport.URIish', '<init>', '^([a-z][a-z0-9+-]+)://(?:(?:([^/:@]+)(?::([^\\\\/]+))?@)?((?:[^\\\\/:]+)|(?:\\[[0-9a-f:]+\\]))(?::(\\d+))?((?:/~(?:[^\\\\/]+))?[\\\\/]))?(.+)?$', 'http://[::1]//')","[60047, 60231, 61151, 61335, 62255, 62439]"
"('URIish.java', 'org.eclipse.jgit.transport.URIish', '<init>', '^([a-z][a-z0-9+-]+)://(?:(?:([^/:@]+)(?::([^\\\\/]+))?@)?((?:[^\\\\/:]+)|(?:\\[[0-9a-f:]+\\]))(?::(\\d+))?((?:/~(?:[^\\\\/]+))?[\\\\/]))?(.+)?$', 'ssh://[::1]//abc')","[53469, 53653, 54573, 54757, 55677, 55861]"
"('Description.java', 'org.junit.runner.Description', 'methodAndClassNamePatternGroupOrDefault', '([\\s\\S]*)\\((.*)\\)', 'testSoftReset(org.eclipse.jgit.api.ResetCommandTest)')","[204352, 204690]"
"('Description.java', 'org.junit.runner.Description', 'methodAndClassNamePatternGroupOrDefault', '([\\s\\S]*)\\((.*)\\)', 'testDequote_RawLatin1(org.eclipse.jgit.util.QuotedStringGitPathStyleTest)')","[177718, 178154]"
"('Description.java', 'org.junit.runner.Description', 'methodAndClassNamePatternGroupOrDefault', '([\\s\\S]*)\\((.*)\\)', 'nonReferencedExpiredObject_pruned(org.eclipse.jgit.internal.storage.file.GcPruneNonReferencedTest)')","[256238, 256344]"
"('Description.java', 'org.junit.runner.Description', 'methodAndClassNamePatternGroupOrDefault', '([\\s\\S]*)\\((.*)\\)', 'testReadWriteMergeHeads(org.eclipse.jgit.lib.MergeHeadMsgTest)')","[119485, 119528]"
"('Description.java', 'org.junit.runner.Description', 'methodAndClassNamePatternGroupOrDefault', '([\\s\\S]*)\\((.*)\\)', 'testManySolutionsCase3(org.eclipse.jgit.fnmatch.FileNameMatcherTest)')","[103162, 106525]"
"('QuotedString.java', 'org.eclipse.jgit.util.QuotedString$BourneUserPathStyle', 'quote', '^~[A-Za-z0-9_-]*/.*$', '')","[193100, 193124]"
"('Description.java', 'org.junit.runner.Description', 'methodAndClassNamePatternGroupOrDefault', '([\\s\\S]*)\\((.*)\\)', 'testPath_16384(org.eclipse.jgit.dircache.DirCacheLargePathTest)')","[92224, 92334]"
"('Description.java', 'org.junit.runner.Description', 'methodAndClassNamePatternGroupOrDefault', '([\\s\\S]*)\\((.*)\\)', 'testValidTreeSorting4(org.eclipse.jgit.lib.ObjectCheckerTest)')","[121490, 123601]"
"('Description.java', 'org.junit.runner.Description', 'methodAndClassNamePatternGroupOrDefault', '([\\s\\S]*)\\((.*)\\)', 'testFolderChangedToFileCommittedComparedWithInitialCommit(org.eclipse.jgit.treewalk.filter.IndexDiffFilterTest)')","[136983, 137801]"
"('Description.java', 'org.junit.runner.Description', 'methodAndClassNamePatternGroupOrDefault', '([\\s\\S]*)\\((.*)\\)', 'testSegments[OldRule? false](org.eclipse.jgit.ignore.FastIgnoreRuleTest)')","[164226, 164983]"
"('Description.java', 'org.junit.runner.Description', 'methodAndClassNamePatternGroupOrDefault', '([\\s\\S]*)\\((.*)\\)', 'LOCAL(org.eclipse.jgit.util.GitDateFormatterTest)')","[172219, 172415]"
"('Description.java', 'org.junit.runner.Description', 'methodAndClassNamePatternGroupOrDefault', '([\\s\\S]*)\\((.*)\\)', 'testAddToEnd(org.eclipse.jgit.util.BlockListTest)')","[180684, 180945]"
"('Description.java', 'org.junit.runner.Description', 'methodAndClassNamePatternGroupOrDefault', '([\\s\\S]*)\\((.*)\\)', 'testPackFormat_SmallObject(org.eclipse.jgit.internal.storage.file.UnpackedObjectTest)')","[255211, 255539]"
"('Description.java', 'org.junit.runner.Description', 'methodAndClassNamePatternGroupOrDefault', '([\\s\\S]*)\\((.*)\\)', 'testPrintGroupCase4(org.eclipse.jgit.fnmatch.FileNameMatcherTest)')","[103057, 106415]"
"('URIish.java', 'org.eclipse.jgit.transport.URIish', '<init>', '^([a-z][a-z0-9+-]+)://(?:(?:([^/:@]+)(?::([^\\\\/]+))?@)?((?:[^\\\\/:]+)|(?:\\[[0-9a-f:]+\\]))(?::(\\d+))?((?:/~(?:[^\\\\/]+))?[\\\\/]))?(.+)?$', 'ssh://l usr\\example.com@[::1]:1234/D:\\x')",[28169]
"('Description.java', 'org.junit.runner.Description', 'methodAndClassNamePatternGroupOrDefault', '([\\s\\S]*)\\((.*)\\)', 'testEmptyMessages(org.eclipse.jgit.util.ChangeIdUtilTest)')","[185399, 186138]"
"('Description.java', 'org.junit.runner.Description', 'methodAndClassNamePatternGroupOrDefault', '([\\s\\S]*)\\((.*)\\)', 'shortWithSlash(org.eclipse.jgit.util.GitDateParserTest)')","[182488, 182773]"
"('Description.java', 'org.junit.runner.Description', 'methodAndClassNamePatternGroupOrDefault', '([\\s\\S]*)\\((.*)\\)', 'testLinesAllDeletedShortenedWalk(org.eclipse.jgit.api.blame.BlameGeneratorTest)')","[235663, 235727]"
"('URIish.java', 'org.eclipse.jgit.transport.URIish', '<init>', '^([a-z][a-z0-9+-]+)://(?:(?:([^/:@]+)(?::([^\\\\/]+))?@)?((?:[^\\\\/:]+)|(?:\\[[0-9a-f:]+\\]))(?::(\\d+))?((?:/~(?:[^\\\\/]+))?[\\\\/]))?(.+)?$', 'ssh+git://l usr\\example.com@1.2.3.4//abc')","[44269, 44453]"
"('Description.java', 'org.junit.runner.Description', 'methodAndClassNamePatternGroupOrDefault', '([\\s\\S]*)\\((.*)\\)', 'testParse_GitBinaryLiteral(org.eclipse.jgit.patch.PatchTest)')","[196142, 196293]"
"('URIish.java', 'org.eclipse.jgit.transport.URIish', '<init>', '^([a-z][a-z0-9+-]+)://(?:(?:([^/:@]+)(?::([^\\\\/]+))?@)?((?:[^\\\\/:]+)|(?:\\[[0-9a-f:]+\\]))(?::(\\d+))?((?:/~(?:[^\\\\/]+))?[\\\\/]))?(.+)?$', 'https://me@example.com/D:\\x')","[49513, 49697]"
"('URIish.java', 'org.eclipse.jgit.transport.URIish', '<init>', '^([a-z][a-z0-9+-]+)://(?:(?:([^/:@]+)(?::([^\\\\/]+))?@)?((?:[^\\\\/:]+)|(?:\\[[0-9a-f:]+\\]))(?::(\\d+))?((?:/~(?:[^\\\\/]+))?[\\\\/]))?(.+)?$', 'https://me:wtf@1.2.3.4:1234/D:\\x')",[23157]
"('Description.java', 'org.junit.runner.Description', 'methodAndClassNamePatternGroupOrDefault', '([\\s\\S]*)\\((.*)\\)', 'testStringOfPearls_FilePath1(org.eclipse.jgit.revwalk.TreeRevFilterTest)')","[81610, 81716]"
"('Description.java', 'org.junit.runner.Description', 'methodAndClassNamePatternGroupOrDefault', '([\\s\\S]*)\\((.*)\\)', 'untrackedFileNotIncluded(org.eclipse.jgit.api.StashCreateCommandTest)')","[202529, 202880]"
"('URIish.java', 'org.eclipse.jgit.transport.URIish', '<init>', '^(file):([\\\\/](?![\\\\/])((?:[A-Za-z]:)?[\\\\/]?(?:(?:[^\\\\/]+[\\\\/]+)*[^\\\\/]+[\\\\/]*)))$', 'http://lusr\\example:wtf@example.com:80/D:/x')",[21800]
"('Description.java', 'org.junit.runner.Description', 'methodAndClassNamePatternGroupOrDefault', '([\\s\\S]*)\\((.*)\\)', 'testSimpleCharClass[OldRule? false](org.eclipse.jgit.ignore.FastIgnoreRuleTest)')","[164019, 164776]"
"('Description.java', 'org.junit.runner.Description', 'methodAndClassNamePatternGroupOrDefault', '([\\s\\S]*)\\((.*)\\)', 'checkUntrackedEmpytFolderIsNotAConflictWithFile(org.eclipse.jgit.merge.ResolveMergerTest)')","[88225, 88551]"
"('URIish.java', 'org.eclipse.jgit.transport.URIish', '<init>', '^([a-z][a-z0-9+-]+)://(?:(?:([^/:@]+)(?::([^\\\\/]+))?@)?((?:[^\\\\/:]+)|(?:\\[[0-9a-f:]+\\]))(?::(\\d+))?((?:/~(?:[^\\\\/]+))?[\\\\/]))?(.+)?$', '/tmp/jgit_test_7106031566354756827_tmp/tmp_4400850410867597182')","[228785, 228915, 229068]"
"('Description.java', 'org.junit.runner.Description', 'methodAndClassNamePatternGroupOrDefault', '([\\s\\S]*)\\((.*)\\)', 'deleteMergedBranch_historyNotPruned(org.eclipse.jgit.internal.storage.file.GcBranchPrunedTest)')","[260177, 260241]"
"('URIish.java', 'org.eclipse.jgit.transport.URIish', '<init>', '^(file):([\\\\/](?![\\\\/])((?:[A-Za-z]:)?[\\\\/]?(?:(?:[^\\\\/]+[\\\\/]+)*[^\\\\/]+[\\\\/]*)))$', 'https://l usr\\example.com@example.com/D:/x')","[50548, 50732]"
"('Description.java', 'org.junit.runner.Description', 'methodAndClassNamePatternGroupOrDefault', '([\\s\\S]*)\\((.*)\\)', 'testUpdateRefNoChange(org.eclipse.jgit.internal.storage.file.RefUpdateTest)')","[253103, 253938]"
"('Description.java', 'org.junit.runner.Description', 'methodAndClassNamePatternGroupOrDefault', '([\\s\\S]*)\\((.*)\\)', 'testDigitGroupCase5(org.eclipse.jgit.fnmatch.FileNameMatcherTest)')","[102532, 105865]"
"('Description.java', 'org.junit.runner.Description', 'methodAndClassNamePatternGroupOrDefault', '([\\s\\S]*)\\((.*)\\)', 'testIncludeTag(org.eclipse.jgit.gitrepo.RepoCommandTest)')","[139946, 140248]"
"('Description.java', 'org.junit.runner.Description', 'methodAndClassNamePatternGroupOrDefault', '([\\s\\S]*)\\((.*)\\)', 'multipleBranches(org.eclipse.jgit.revwalk.RevWalkUtilsReachableTest)')","[77207, 77317]"
"('Description.java', 'org.junit.runner.Description', 'methodAndClassNamePatternGroupOrDefault', '([\\s\\S]*)\\((.*)\\)', 'testInsertWholeObject_Length12(org.eclipse.jgit.internal.storage.pack.DeltaIndexTest)')","[246571, 246857]"
"('URIish.java', 'org.eclipse.jgit.transport.URIish', '<init>', '^(file):([\\\\/](?![\\\\/])((?:[A-Za-z]:)?[\\\\/]?(?:(?:[^\\\\/]+[\\\\/]+)*[^\\\\/]+[\\\\/]*)))$', 'ssh://l usr\\example.com@[::1]:1234/D:/x')",[28100]
"('URIish.java', 'org.eclipse.jgit.transport.URIish', '<init>', '^(file):([\\\\/](?![\\\\/])((?:[A-Za-z]:)?[\\\\/]?(?:(?:[^\\\\/]+[\\\\/]+)*[^\\\\/]+[\\\\/]*)))$', 'http://me:wtf@[::1]:1234/D:\\x')",[20167]
"('Description.java', 'org.junit.runner.Description', 'methodAndClassNamePatternGroupOrDefault', '([\\s\\S]*)\\((.*)\\)', 'readNamesInSubSectionRecursive(org.eclipse.jgit.lib.ConfigTest)')","[129155, 129879]"
"('Description.java', 'org.junit.runner.Description', 'methodAndClassNamePatternGroupOrDefault', '([\\s\\S]*)\\((.*)\\)', 'testOnlyOption_f1_2_f2_14_b(org.eclipse.jgit.api.CommitOnlyTest)')","[236899, 238998]"
"('ChangeIdUtil.java', 'org.eclipse.jgit.util.ChangeIdUtil', 'indexOfChangeId', '(^Change-Id: *I[a-f0-9]{40}$)', 'h')",[191157]
"('URIish.java', 'org.eclipse.jgit.transport.URIish', '<init>', '^(?:([^/:@]+)(?::([^\\\\/]+))?@)?((?:[^\\\\/:]+)|(?:\\[[0-9a-f:]+\\])):((?:(?:/~(?:[^\\\\/]+))[\\\\/])?(?:(?:[^\\\\/]+[\\\\/]+)*[^\\\\/]+[\\\\/]*))$', '/tmp/jgit_test_8377865151388464425_tmp/tmp_8247112886499178725')","[211496, 211631, 212169]"
"('Description.java', 'org.junit.runner.Description', 'methodAndClassNamePatternGroupOrDefault', '([\\s\\S]*)\\((.*)\\)', 'testQuote_Empty(org.eclipse.jgit.util.QuotedStringGitPathStyleTest)')","[177697, 178132]"
"('Description.java', 'org.junit.runner.Description', 'methodAndClassNamePatternGroupOrDefault', '([\\s\\S]*)\\((.*)\\)', 'testFormatHours(org.eclipse.jgit.util.RelativeDateFormatterTest)')","[181342, 181535]"
"('Description.java', 'org.junit.runner.Description', 'methodAndClassNamePatternGroupOrDefault', '([\\s\\S]*)\\((.*)\\)', 'testOnlyOption_f1_5_e(org.eclipse.jgit.api.CommitOnlyTest)')","[236437, 238514]"
"('ChangeIdUtil.java', 'org.eclipse.jgit.util.ChangeIdUtil', 'indexOfFirstFooterLine', '(^[a-zA-Z0-9-]+:(?!//).*$)', 'h')",[191261]
"('Description.java', 'org.junit.runner.Description', 'methodAndClassNamePatternGroupOrDefault', '([\\s\\S]*)\\((.*)\\)', 'testGetRefs_HeadsOnly_AllLoose(org.eclipse.jgit.internal.storage.file.RefDirectoryTest)')","[257434, 258594]"
"('Description.java', 'org.junit.runner.Description', 'methodAndClassNamePatternGroupOrDefault', '([\\s\\S]*)\\((.*)\\)', 'testAddGetAndContains(org.eclipse.jgit.lib.ObjectIdSubclassMapTest)')","[114050, 114202]"
"('URIish.java', 'org.eclipse.jgit.transport.URIish', '<init>', '^(file):([\\\\/](?![\\\\/])((?:[A-Za-z]:)?[\\\\/]?(?:(?:[^\\\\/]+[\\\\/]+)*[^\\\\/]+[\\\\/]*)))$', 'ssh://me@1.2.3.4:1234/D:/x')",[26565]
"('URIish.java', 'org.eclipse.jgit.transport.URIish', '<init>', '^([a-z][a-z0-9+-]+)://(?:(?:([^/:@]+)(?::([^\\\\/]+))?@)?((?:[^\\\\/:]+)|(?:\\[[0-9a-f:]+\\]))(?::(\\d+))?((?:/~(?:[^\\\\/]+))?[\\\\/]))?(.+)?$', 'file:///tmp/jgit_test_6811710720935520240_tmp/tmp_8740581029245250870/.git/')",[132916]
"('URIish.java', 'org.eclipse.jgit.transport.URIish', '<init>', '^(file):([\\\\/](?![\\\\/])((?:[A-Za-z]:)?[\\\\/]?(?:(?:[^\\\\/]+[\\\\/]+)*[^\\\\/]+[\\\\/]*)))$', 'ssh://l usr\\example.com@example.com:1234/D:\\x')",[27347]
"('URIish.java', 'org.eclipse.jgit.transport.URIish', '<init>', '^(file):([\\\\/](?![\\\\/])((?:[A-Za-z]:)?[\\\\/]?(?:(?:[^\\\\/]+[\\\\/]+)*[^\\\\/]+[\\\\/]*)))$', 'short:project.git')","[9595, 11335]"
"('Description.java', 'org.junit.runner.Description', 'methodAndClassNamePatternGroupOrDefault', '([\\s\\S]*)\\((.*)\\)', 'testRecursiveMergeWithConflict(org.eclipse.jgit.api.MergeCommandTest)')","[213534, 214440]"
"('Description.java', 'org.junit.runner.Description', 'methodAndClassNamePatternGroupOrDefault', '([\\s\\S]*)\\((.*)\\)', 'testValidTree5(org.eclipse.jgit.lib.ObjectCheckerTest)')","[121280, 123381]"
"('Description.java', 'org.junit.runner.Description', 'methodAndClassNamePatternGroupOrDefault', '([\\s\\S]*)\\((.*)\\)', 'testOnlyOption_f1_9_b(org.eclipse.jgit.api.CommitOnlyTest)')","[236794, 238888]"
"('Description.java', 'org.junit.runner.Description', 'methodAndClassNamePatternGroupOrDefault', '([\\s\\S]*)\\((.*)\\)', 't1DominatesT2(org.eclipse.jgit.api.DescribeCommandTest)')","[215788, 215944]"
"('Description.java', 'org.junit.runner.Description', 'methodAndClassNamePatternGroupOrDefault', '([\\s\\S]*)\\((.*)\\)', 'testDequote_SoleSq(org.eclipse.jgit.util.QuotedStringBourneStyleTest)')","[182959, 183174]"
"('Description.java', 'org.junit.runner.Description', 'methodAndClassNamePatternGroupOrDefault', '([\\s\\S]*)\\((.*)\\)', 'testGetValidWithSlashesDotGitSlashHumanishName(org.eclipse.jgit.transport.URIishTest)')","[2045, 4750]"
"('URIish.java', 'org.eclipse.jgit.transport.URIish', '<init>', '^([a-z][a-z0-9+-]+)://(?:(?:([^/:@]+)(?::([^\\\\/]+))?@)?((?:[^\\\\/:]+)|(?:\\[[0-9a-f:]+\\]))(?::(\\d+))?((?:/~(?:[^\\\\/]+))?[\\\\/]))?(.+)?$', 'ssh://me@[::1]/D:\\x')","[40313, 40497]"
"('URIish.java', 'org.eclipse.jgit.transport.URIish', '<init>', '^([a-z][a-z0-9+-]+)://(?:(?:([^/:@]+)(?::([^\\\\/]+))?@)?((?:[^\\\\/:]+)|(?:\\[[0-9a-f:]+\\]))(?::(\\d+))?((?:/~(?:[^\\\\/]+))?[\\\\/]))?(.+)?$', 'http://1.2.3.4//')","[59679, 59863, 60783, 60967, 61887, 62071]"
"('URIish.java', 'org.eclipse.jgit.transport.URIish', '<init>', '^(file):([\\\\/](?![\\\\/])((?:[A-Za-z]:)?[\\\\/]?(?:(?:[^\\\\/]+[\\\\/]+)*[^\\\\/]+[\\\\/]*)))$', 'ssh://me:wtf@[::1]:80//abc')",[10173]
"('Description.java', 'org.junit.runner.Description', 'methodAndClassNamePatternGroupOrDefault', '([\\s\\S]*)\\((.*)\\)', 'org.eclipse.jgit.lib.T0002_TreeTest')","[119754, 120379]"
"('URIish.java', 'org.eclipse.jgit.transport.URIish', '<init>', '^(?:([^/:@]+)(?::([^\\\\/]+))?@)?((?:[^\\\\/:]+)|(?:\\[[0-9a-f:]+\\])):((?:(?:/~(?:[^\\\\/]+))[\\\\/])?(?:(?:[^\\\\/]+[\\\\/]+)*[^\\\\/]+[\\\\/]*))$', '/another/dir')","[6083, 6921, 10008]"
"('URIish.java', 'org.eclipse.jgit.transport.URIish', '<init>', '^(file):([\\\\/](?![\\\\/])((?:[A-Za-z]:)?[\\\\/]?(?:(?:[^\\\\/]+[\\\\/]+)*[^\\\\/]+[\\\\/]*)))$', 'file:///tmp/jgit_test_7262235360055106235_tmp/tmp_7762292172063665766.git/')",[141258]
"('Description.java', 'org.junit.runner.Description', 'methodAndClassNamePatternGroupOrDefault', '([\\s\\S]*)\\((.*)\\)', 'repositoryWithNoSubmodules(org.eclipse.jgit.submodule.SubmoduleSyncTest)')","[107912, 107978]"
"('URIish.java', 'org.eclipse.jgit.transport.URIish', '<init>', '^(file):([\\\\/](?![\\\\/])((?:[A-Za-z]:)?[\\\\/]?(?:(?:[^\\\\/]+[\\\\/]+)*[^\\\\/]+[\\\\/]*)))$', 'ssh://lusr\\example:wtf@[::1]:1234//abc')",[13210]
"('URIish.java', 'org.eclipse.jgit.transport.URIish', '<init>', '^(?:([^/:@]+)(?::([^\\\\/]+))?@)?([^\\\\/:]{2,}):([\\\\/](?:(?:[^\\\\/]+[\\\\/]+)*[^\\\\/]+[\\\\/]*))$', '/tmp/jgit_test_4928645748912589877_tmp/tmp_7570227516241513625/.git')","[230822, 230968]"
"('QuotedString.java', 'org.eclipse.jgit.util.QuotedString$BourneUserPathStyle', 'quote', '^~[A-Za-z0-9_-]*/.*$', 'a')","[193001, 193026]"
"('FastIgnoreRule.java', 'org.eclipse.jgit.ignore.FastIgnoreRule', 'isMatch', '[\\p{Ll}]', 'a')",[160758]
"('FastIgnoreRule.java', 'org.eclipse.jgit.ignore.FastIgnoreRule', 'isMatch', '[[\\p{Print}\\p{javaDigit}\\p{javaLetter}]]', '.')",[162450]
"('URIish.java', 'org.eclipse.jgit.transport.URIish', '<init>', '^([a-z][a-z0-9+-]+)://(?:(?:([^/:@]+)(?::([^\\\\/]+))?@)?((?:[^\\\\/:]+)|(?:\\[[0-9a-f:]+\\]))(?::(\\d+))?((?:/~(?:[^\\\\/]+))?[\\\\/]))?(.+)?$', 'ssh+git://me@[::1]:1234/D:\\x')",[30377]
"('Description.java', 'org.junit.runner.Description', 'methodAndClassNamePatternGroupOrDefault', '([\\s\\S]*)\\((.*)\\)', 'test003_lookupCompressedObject(org.eclipse.jgit.internal.storage.file.T0004_PackReaderTest)')","[247356, 247399]"
"('Description.java', 'org.junit.runner.Description', 'methodAndClassNamePatternGroupOrDefault', '([\\s\\S]*)\\((.*)\\)', 'testManySolutionsCase1[OldRule? false](org.eclipse.jgit.ignore.IgnoreRuleSpecialCasesTest)')","[148100, 155205]"
"('Description.java', 'org.junit.runner.Description', 'methodAndClassNamePatternGroupOrDefault', '([\\s\\S]*)\\((.*)\\)', 'testLsRemoteWithTags(org.eclipse.jgit.api.LsRemoteCommandTest)')","[200498, 200583]"
"('URIish.java', 'org.eclipse.jgit.transport.URIish', '<init>', '^([a-z][a-z0-9+-]+)://(?:(?:([^/:@]+)(?::([^\\\\/]+))?@)?((?:[^\\\\/:]+)|(?:\\[[0-9a-f:]+\\]))(?::(\\d+))?((?:/~(?:[^\\\\/]+))?[\\\\/]))?(.+)?$', '/tmp/jgit_test_4416073704389025597_tmp/tmp_7357052360559725349/.git')","[229219, 229357]"
"('URIish.java', 'org.eclipse.jgit.transport.URIish', '<init>', '^([a-z][a-z0-9+-]+)://(?:(?:([^/:@]+)(?::([^\\\\/]+))?@)?((?:[^\\\\/:]+)|(?:\\[[0-9a-f:]+\\]))(?::(\\d+))?((?:/~(?:[^\\\\/]+))?[\\\\/]))?(.+)?$', 'http://me@1.2.3.4:80/D:\\x')",[33505]
"('FastIgnoreRule.java', 'org.eclipse.jgit.ignore.FastIgnoreRule', 'isMatch', 'a.*b', 'a')","[161488, 162164]"
"('URIish.java', 'org.eclipse.jgit.transport.URIish', '<init>', '^([a-z][a-z0-9+-]+)://(?:(?:([^/:@]+)(?::([^\\\\/]+))?@)?((?:[^\\\\/:]+)|(?:\\[[0-9a-f:]+\\]))(?::(\\d+))?((?:/~(?:[^\\\\/]+))?[\\\\/]))?(.+)?$', 'http://me@[::1]:1234/D:/x')",[33643]
"('Description.java', 'org.junit.runner.Description', 'methodAndClassNamePatternGroupOrDefault', '([\\s\\S]*)\\((.*)\\)', 'test002_WriteEmptyTree(org.eclipse.jgit.internal.storage.file.T0003_BasicTest)')","[249020, 249549]"
"('Description.java', 'org.junit.runner.Description', 'methodAndClassNamePatternGroupOrDefault', '([\\s\\S]*)\\((.*)\\)', 'testNotEquals_DiffLength(org.eclipse.jgit.lib.AbbreviatedObjectIdTest)')","[114809, 115358]"
"('Description.java', 'org.junit.runner.Description', 'methodAndClassNamePatternGroupOrDefault', '([\\s\\S]*)\\((.*)\\)', 'testUnsupportedGroupCase1(org.eclipse.jgit.fnmatch.FileNameMatcherTest)')","[102700, 106041]"
"('URIish.java', 'org.eclipse.jgit.transport.URIish', '<init>', '^(file):([\\\\/](?![\\\\/])((?:[A-Za-z]:)?[\\\\/]?(?:(?:[^\\\\/]+[\\\\/]+)*[^\\\\/]+[\\\\/]*)))$', 'http://lusr\\example@1.2.3.4:80/D:/x')",[35644]
"('ChangeIdUtil.java', 'org.eclipse.jgit.util.ChangeIdUtil', 'indexOfChangeId', '(^Change-Id: *I[a-f0-9]{40}$)', 'Another footer line')","[215463, 215608]"
"('Description.java', 'org.junit.runner.Description', 'methodAndClassNamePatternGroupOrDefault', '([\\s\\S]*)\\((.*)\\)', 'testTinyThinPack(org.eclipse.jgit.transport.PackParserTest)')","[72092, 72396]"
"('Description.java', 'org.junit.runner.Description', 'methodAndClassNamePatternGroupOrDefault', '([\\s\\S]*)\\((.*)\\)', 'testClear(org.eclipse.jgit.util.RefMapTest)')","[183888, 184356]"
"('Description.java', 'org.junit.runner.Description', 'methodAndClassNamePatternGroupOrDefault', '([\\s\\S]*)\\((.*)\\)', 'testReadACK_Invalid4(org.eclipse.jgit.transport.PacketLineInTest)')","[18529, 19738]"
"('URIish.java', 'org.eclipse.jgit.transport.URIish', '<init>', '^(file):([\\\\/](?![\\\\/])((?:[A-Za-z]:)?[\\\\/]?(?:(?:[^\\\\/]+[\\\\/]+)*[^\\\\/]+[\\\\/]*)))$', 'http://lusr\\example@example.com:80/D:/x')",[35276]
"('Description.java', 'org.junit.runner.Description', 'methodAndClassNamePatternGroupOrDefault', '([\\s\\S]*)\\((.*)\\)', 'crissCrossMerge_ThreeCommonPredecessors(org.eclipse.jgit.merge.RecursiveMergerTest)')","[87739, 87891]"
"('Description.java', 'org.junit.runner.Description', 'methodAndClassNamePatternGroupOrDefault', '([\\s\\S]*)\\((.*)\\)', 'testHasAnyFlag(org.eclipse.jgit.revwalk.RevObjectTest)')","[83913, 84700]"
"('Description.java', 'org.junit.runner.Description', 'methodAndClassNamePatternGroupOrDefault', '([\\s\\S]*)\\((.*)\\)', 'org.eclipse.jgit.patch.PatchErrorTest')","[194553, 194834]"
"('Description.java', 'org.junit.runner.Description', 'methodAndClassNamePatternGroupOrDefault', '([\\s\\S]*)\\((.*)\\)', 'testFileCommittedDeleted(org.eclipse.jgit.treewalk.filter.IndexDiffFilterTest)')","[136962, 137779]"
"('Description.java', 'org.junit.runner.Description', 'methodAndClassNamePatternGroupOrDefault', '([\\s\\S]*)\\((.*)\\)', 'org.eclipse.jgit.lib.ObjectIdTest')","[130466, 131048]"
"('URIish.java', 'org.eclipse.jgit.transport.URIish', '<init>', '^([a-z][a-z0-9+-]+)://(?:(?:([^/:@]+)(?::([^\\\\/]+))?@)?((?:[^\\\\/:]+)|(?:\\[[0-9a-f:]+\\]))(?::(\\d+))?((?:/~(?:[^\\\\/]+))?[\\\\/]))?(.+)?$', '/abc.git')",[66303]
"('URIish.java', 'org.eclipse.jgit.transport.URIish', '<init>', '^([a-z][a-z0-9+-]+)://(?:(?:([^/:@]+)(?::([^\\\\/]+))?@)?((?:[^\\\\/:]+)|(?:\\[[0-9a-f:]+\\]))(?::(\\d+))?((?:/~(?:[^\\\\/]+))?[\\\\/]))?(.+)?$', 'ssh+git://l usr\\example.com@[::1]:1234//abc')",[31389]
"('Description.java', 'org.junit.runner.Description', 'methodAndClassNamePatternGroupOrDefault', '([\\s\\S]*)\\((.*)\\)', 'testUpperGroupCase0(org.eclipse.jgit.fnmatch.FileNameMatcherTest)')","[103204, 106569]"
"('Description.java', 'org.junit.runner.Description', 'methodAndClassNamePatternGroupOrDefault', '([\\s\\S]*)\\((.*)\\)', 'mergeWithCrlfInWT(org.eclipse.jgit.merge.ResolveMergerTest)')","[88267, 88595]"
"('FastIgnoreRule.java', 'org.eclipse.jgit.ignore.FastIgnoreRule', 'isMatch', '[b-d]', 'e')",[161852]
"('Description.java', 'org.junit.runner.Description', 'methodAndClassNamePatternGroupOrDefault', '([\\s\\S]*)\\((.*)\\)', 'testRepeatedNegationInDifferentFiles3(org.eclipse.jgit.ignore.IgnoreNodeTest)')","[140521, 140820]"
"('Description.java', 'org.junit.runner.Description', 'methodAndClassNamePatternGroupOrDefault', '([\\s\\S]*)\\((.*)\\)', 'testSingleSubtree_NoRecursion(org.eclipse.jgit.dircache.DirCacheIteratorTest)')","[92561, 92800]"
"('Description.java', 'org.junit.runner.Description', 'methodAndClassNamePatternGroupOrDefault', '([\\s\\S]*)\\((.*)\\)', 'testMergeCommitOneParentShallow(org.eclipse.jgit.revwalk.RevWalkShallowTest)')","[86080, 86208]"
"('URIish.java', 'org.eclipse.jgit.transport.URIish', '<init>', '^(file):([\\\\/](?![\\\\/])((?:[A-Za-z]:)?[\\\\/]?(?:(?:[^\\\\/]+[\\\\/]+)*[^\\\\/]+[\\\\/]*)))$', 'file:///a/b.txt')",[7222]
"('Description.java', 'org.junit.runner.Description', 'methodAndClassNamePatternGroupOrDefault', '([\\s\\S]*)\\((.*)\\)', 'testRemoveFrontOfList(org.eclipse.jgit.util.RefListTest)')","[179842, 180374]"
"('URIish.java', 'org.eclipse.jgit.transport.URIish', '<init>', '^(file):([\\\\/](?![\\\\/])((?:[A-Za-z]:)?[\\\\/]?(?:(?:[^\\\\/]+[\\\\/]+)*[^\\\\/]+[\\\\/]*)))$', 'https://l usr\\example.com:wtf@example.com:1234/D:\\x')",[23870]
"('Description.java', 'org.junit.runner.Description', 'methodAndClassNamePatternGroupOrDefault', '([\\s\\S]*)\\((.*)\\)', 'testAddSameNoteDifferentContent(org.eclipse.jgit.notes.NoteMapMergerTest)')","[199710, 200074]"
"('Description.java', 'org.junit.runner.Description', 'methodAndClassNamePatternGroupOrDefault', '([\\s\\S]*)\\((.*)\\)', 'testInCoreLimit_SwitchOnAppendByte(org.eclipse.jgit.util.TemporaryBufferTest)')","[178406, 178705]"
"('Description.java', 'org.junit.runner.Description', 'methodAndClassNamePatternGroupOrDefault', '([\\s\\S]*)\\((.*)\\)', 'testPackRepoWithNoRefs(org.eclipse.jgit.internal.storage.file.GcBasicPackingTest)')","[247102, 247232]"
"('Description.java', 'org.junit.runner.Description', 'methodAndClassNamePatternGroupOrDefault', '([\\s\\S]*)\\((.*)\\)', 'testRevertConflictMarkers(org.eclipse.jgit.api.RevertCommandTest)')","[233448, 233660]"
"('Description.java', 'org.junit.runner.Description', 'methodAndClassNamePatternGroupOrDefault', '([\\s\\S]*)\\((.*)\\)', 'testLowerGroupCase5[OldRule? true](org.eclipse.jgit.ignore.IgnoreRuleSpecialCasesTest)')","[150168, 157252]"
"('Description.java', 'org.junit.runner.Description', 'methodAndClassNamePatternGroupOrDefault', '([\\s\\S]*)\\((.*)\\)', 'testReadStringRaw_End(org.eclipse.jgit.transport.PacketLineInTest)')","[18573, 19760]"
"('URIish.java', 'org.eclipse.jgit.transport.URIish', '<init>', '^(file):([\\\\/](?![\\\\/])((?:[A-Za-z]:)?[\\\\/]?(?:(?:[^\\\\/]+[\\\\/]+)*[^\\\\/]+[\\\\/]*)))$', 'http://lusr\\example@[::1]:80/D:\\x')",[36058]
"('Description.java', 'org.junit.runner.Description', 'methodAndClassNamePatternGroupOrDefault', '([\\s\\S]*)\\((.*)\\)', 'org.eclipse.jgit.diff.RawTextIgnoreTrailingWhitespaceTest')","[94990, 95221]"
"('Description.java', 'org.junit.runner.Description', 'methodAndClassNamePatternGroupOrDefault', '([\\s\\S]*)\\((.*)\\)', 'testVerySimpleGroupRangeCase0(org.eclipse.jgit.fnmatch.FileNameMatcherTest)')","[102553, 105887]"
"('URIish.java', 'org.eclipse.jgit.transport.URIish', '<init>', '^([a-z][a-z0-9+-]+)://(?:(?:([^/:@]+)(?::([^\\\\/]+))?@)?((?:[^\\\\/:]+)|(?:\\[[0-9a-f:]+\\]))(?::(\\d+))?((?:/~(?:[^\\\\/]+))?[\\\\/]))?(.+)?$', 'https://lusr\\example:wtf@1.2.3.4:80/D:/x')",[25503]
"('URIish.java', 'org.eclipse.jgit.transport.URIish', '<init>', '^(file):([\\\\/](?![\\\\/])((?:[A-Za-z]:)?[\\\\/]?(?:(?:[^\\\\/]+[\\\\/]+)*[^\\\\/]+[\\\\/]*)))$', 'file:///tmp/jgit_test_1094454074177318269_tmp/tmp_3175616056195145359.git/')",[173712]
"('Description.java', 'org.junit.runner.Description', 'methodAndClassNamePatternGroupOrDefault', '([\\s\\S]*)\\((.*)\\)', 'testAddAdd(org.eclipse.jgit.notes.DefaultNoteMergerTest)')","[198711, 198843]"
"('Description.java', 'org.junit.runner.Description', 'methodAndClassNamePatternGroupOrDefault', '([\\s\\S]*)\\((.*)\\)', 'multipleInsteadOf(org.eclipse.jgit.transport.RemoteConfigTest)')","[1501, 2405]"
"('URIish.java', 'org.eclipse.jgit.transport.URIish', '<init>', '^(file):([\\\\/](?![\\\\/])((?:[A-Za-z]:)?[\\\\/]?(?:(?:[^\\\\/]+[\\\\/]+)*[^\\\\/]+[\\\\/]*)))$', 'https://lusr\\example@[::1]//')","[52296, 52480]"
"('Description.java', 'org.junit.runner.Description', 'methodAndClassNamePatternGroupOrDefault', '([\\s\\S]*)\\((.*)\\)', 'testMixedGroupCase7(org.eclipse.jgit.fnmatch.FileNameMatcherTest)')","[101419, 104699]"
"('Description.java', 'org.junit.runner.Description', 'methodAndClassNamePatternGroupOrDefault', '([\\s\\S]*)\\((.*)\\)', 'testEntriesWithin(org.eclipse.jgit.dircache.DirCacheFindTest)')","[92946, 92968]"
"('URIish.java', 'org.eclipse.jgit.transport.URIish', '<init>', '^(file):([\\\\/](?![\\\\/])((?:[A-Za-z]:)?[\\\\/]?(?:(?:[^\\\\/]+[\\\\/]+)*[^\\\\/]+[\\\\/]*)))$', 'http://me@1.2.3.4:80/D:/x')",[33436]
"('Description.java', 'org.junit.runner.Description', 'methodAndClassNamePatternGroupOrDefault', '([\\s\\S]*)\\((.*)\\)', 'org.eclipse.jgit.api.LsRemoteCommandTest')","[200477, 201517]"
"('URIish.java', 'org.eclipse.jgit.transport.URIish', '<init>', '^([\\\\/]?((?:[A-Za-z]:)?[\\\\/]?(?:(?:[^\\\\/]+[\\\\/]+)*[^\\\\/]+[\\\\/]*)))$', '../tmp_6907696380270154428')",[73112]
"('Description.java', 'org.junit.runner.Description', 'methodAndClassNamePatternGroupOrDefault', '([\\s\\S]*)\\((.*)\\)', 'testReadString_Len0003(org.eclipse.jgit.transport.PacketLineInTest)')","[18311, 19514]"
"('Description.java', 'org.junit.runner.Description', 'methodAndClassNamePatternGroupOrDefault', '([\\s\\S]*)\\((.*)\\)', 'testCreateNewFile(org.eclipse.jgit.util.FileUtilTest)')","[176764, 177112]"
"('Description.java', 'org.junit.runner.Description', 'methodAndClassNamePatternGroupOrDefault', '([\\s\\S]*)\\((.*)\\)', 'testBaseEqualsTheirs(org.eclipse.jgit.notes.NoteMapMergerTest)')","[199584, 199942]"
"('Description.java', 'org.junit.runner.Description', 'methodAndClassNamePatternGroupOrDefault', '([\\s\\S]*)\\((.*)\\)', 'testCoreAutoCrlf2(org.eclipse.jgit.api.BlameCommandTest)')","[244411, 244791]"
"('Description.java', 'org.junit.runner.Description', 'methodAndClassNamePatternGroupOrDefault', '([\\s\\S]*)\\((.*)\\)', 'testInvalidTagName(org.eclipse.jgit.api.TagCommandTest)')","[201784, 202089]"
"('Description.java', 'org.junit.runner.Description', 'methodAndClassNamePatternGroupOrDefault', '([\\s\\S]*)\\((.*)\\)', 'testOnlyOption_f1_14_e(org.eclipse.jgit.api.CommitOnlyTest)')","[237728, 239834]"
"('Description.java', 'org.junit.runner.Description', 'methodAndClassNamePatternGroupOrDefault', '([\\s\\S]*)\\((.*)\\)', 'testInexactRename_NewlinesOnly(org.eclipse.jgit.diff.RenameDetectorTest)')","[93237, 93793]"
"('Description.java', 'org.junit.runner.Description', 'methodAndClassNamePatternGroupOrDefault', '([\\s\\S]*)\\((.*)\\)', 'org.eclipse.jgit.util.StringUtilsTest')","[175819, 176143]"
"('Description.java', 'org.junit.runner.Description', 'methodAndClassNamePatternGroupOrDefault', '([\\s\\S]*)\\((.*)\\)', 'testCompareUInt32(org.eclipse.jgit.util.NBTest)')","[184872, 185045]"
"('Description.java', 'org.junit.runner.Description', 'methodAndClassNamePatternGroupOrDefault', '([\\s\\S]*)\\((.*)\\)', 'testRemoveLastURI(org.eclipse.jgit.transport.RemoteConfigTest)')","[1616, 2682]"
"('URIish.java', 'org.eclipse.jgit.transport.URIish', '<init>', '^([a-z][a-z0-9+-]+)://(?:(?:([^/:@]+)(?::([^\\\\/]+))?@)?((?:[^\\\\/:]+)|(?:\\[[0-9a-f:]+\\]))(?::(\\d+))?((?:/~(?:[^\\\\/]+))?[\\\\/]))?(.+)?$', 'ssh://1.2.3.4/D:/x')","[53147, 53331, 54251, 54435, 55355, 55539]"
"('URIish.java', 'org.eclipse.jgit.transport.URIish', '<init>', '^(file):([\\\\/](?![\\\\/])((?:[A-Za-z]:)?[\\\\/]?(?:(?:[^\\\\/]+[\\\\/]+)*[^\\\\/]+[\\\\/]*)))$', 'http://l usr\\example.com@1.2.3.4:80//abc')",[34494]
"('Description.java', 'org.junit.runner.Description', 'methodAndClassNamePatternGroupOrDefault', '([\\s\\S]*)\\((.*)\\)', 'testLeaf(org.eclipse.jgit.lib.SymbolicRefTest)')","[109904, 109968]"
"('URIish.java', 'org.eclipse.jgit.transport.URIish', '<init>', '^([a-z][a-z0-9+-]+)://(?:(?:([^/:@]+)(?::([^\\\\/]+))?@)?((?:[^\\\\/:]+)|(?:\\[[0-9a-f:]+\\]))(?::(\\d+))?((?:/~(?:[^\\\\/]+))?[\\\\/]))?(.+)?$', 'http://[::1]/D:\\x')","[60185, 60369, 61289, 61473, 62393, 62577]"
"('Description.java', 'org.junit.runner.Description', 'methodAndClassNamePatternGroupOrDefault', '([\\s\\S]*)\\((.*)\\)', 'iso(org.eclipse.jgit.util.GitDateParserTest)')","[182341, 182619]"
"('URIish.java', 'org.eclipse.jgit.transport.URIish', '<init>', '^(file):([\\\\/](?![\\\\/])((?:[A-Za-z]:)?[\\\\/]?(?:(?:[^\\\\/]+[\\\\/]+)*[^\\\\/]+[\\\\/]*)))$', 'file:/tmp/jgit_test_3403792092104358493_tmp/tmp_2501936140417005984/.git/')",[134153]
"('Description.java', 'org.junit.runner.Description', 'methodAndClassNamePatternGroupOrDefault', '([\\s\\S]*)\\((.*)\\)', 'org.eclipse.jgit.dircache.DirCacheEntryTest')","[90851, 91132]"
"('Description.java', 'org.junit.runner.Description', 'methodAndClassNamePatternGroupOrDefault', '([\\s\\S]*)\\((.*)\\)', 'testInversedGroupCase3[OldRule? false](org.eclipse.jgit.ignore.IgnoreRuleSpecialCasesTest)')","[146973, 154078]"
"('Description.java', 'org.junit.runner.Description', 'methodAndClassNamePatternGroupOrDefault', '([\\s\\S]*)\\((.*)\\)', 'testDF_NoGap(org.eclipse.jgit.treewalk.NameConflictTreeWalkTest)')","[134789, 134896]"
"('Description.java', 'org.junit.runner.Description', 'methodAndClassNamePatternGroupOrDefault', '([\\s\\S]*)\\((.*)\\)', 'testVerySimpleGroupRangeCase4(org.eclipse.jgit.fnmatch.FileNameMatcherTest)')","[102637, 105975]"
"('Description.java', 'org.junit.runner.Description', 'methodAndClassNamePatternGroupOrDefault', '([\\s\\S]*)\\((.*)\\)', 'testEdit_NoUniqueMiddleSide_FlipAndExpand(org.eclipse.jgit.diff.HistogramDiffTest)')","[98527, 99122]"
"('Description.java', 'org.junit.runner.Description', 'methodAndClassNamePatternGroupOrDefault', '([\\s\\S]*)\\((.*)\\)', 'testEdit_DuplicateAButCommonUniqueInB(org.eclipse.jgit.diff.HistogramDiffTest)')","[98716, 99320]"
"('Description.java', 'org.junit.runner.Description', 'methodAndClassNamePatternGroupOrDefault', '([\\s\\S]*)\\((.*)\\)', 'testXDigitGroupCase7(org.eclipse.jgit.fnmatch.FileNameMatcherTest)')","[103645, 107031]"
"('URIish.java', 'org.eclipse.jgit.transport.URIish', '<init>', '^(file):([\\\\/](?![\\\\/])((?:[A-Za-z]:)?[\\\\/]?(?:(?:[^\\\\/]+[\\\\/]+)*[^\\\\/]+[\\\\/]*)))$', 'https://1.2.3.4/D:/x')","[63060, 63244, 64164, 64348, 65268, 65452]"
"('Description.java', 'org.junit.runner.Description', 'methodAndClassNamePatternGroupOrDefault', '([\\s\\S]*)\\((.*)\\)', 'testNewNamespaceConflictWithLoosePrefixNameExists(org.eclipse.jgit.internal.storage.file.RefUpdateTest)')","[253544, 254400]"
"('Description.java', 'org.junit.runner.Description', 'methodAndClassNamePatternGroupOrDefault', '([\\s\\S]*)\\((.*)\\)', 'repositoryWithNoSubmodules(org.eclipse.jgit.submodule.SubmoduleUpdateTest)')","[107702, 107790]"
"('URIish.java', 'org.eclipse.jgit.transport.URIish', '<init>', '^([\\\\/]?((?:[A-Za-z]:)?[\\\\/]?(?:(?:[^\\\\/]+[\\\\/]+)*[^\\\\/]+[\\\\/]*)))$', '/tmp/jgit_test_7106031566354756827_tmp/tmp_4400850410867597182')","[228857, 229002, 229167]"
"('URIish.java', 'org.eclipse.jgit.transport.URIish', '<init>', '^(file):([\\\\/](?![\\\\/])((?:[A-Za-z]:)?[\\\\/]?(?:(?:[^\\\\/]+[\\\\/]+)*[^\\\\/]+[\\\\/]*)))$', 'http://l usr\\example.com@1.2.3.4:1234//abc')",[34310]
"('Description.java', 'org.junit.runner.Description', 'methodAndClassNamePatternGroupOrDefault', '([\\s\\S]*)\\((.*)\\)', 'testComparatorReduceCommonStartEnd_EmptyLine(org.eclipse.jgit.diff.RawTextTest)')","[96577, 96794]"
"('Description.java', 'org.junit.runner.Description', 'methodAndClassNamePatternGroupOrDefault', '([\\s\\S]*)\\((.*)\\)', 'org.eclipse.jgit.internal.storage.pack.DeltaIndexTest')","[246298, 246880]"
"('Description.java', 'org.junit.runner.Description', 'methodAndClassNamePatternGroupOrDefault', '([\\s\\S]*)\\((.*)\\)', 'testPushResult(org.eclipse.jgit.transport.PushProcessTest)')","[74131, 74499]"
"('URIish.java', 'org.eclipse.jgit.transport.URIish', '<init>', '^(file):([\\\\/](?![\\\\/])((?:[A-Za-z]:)?[\\\\/]?(?:(?:[^\\\\/]+[\\\\/]+)*[^\\\\/]+[\\\\/]*)))$', 'git://host.xy/abc.git/')",[71011]
"('FastIgnoreRule.java', 'org.eclipse.jgit.ignore.FastIgnoreRule', 'isMatch', 'a[b\\-]', 'ac')",[162346]
"('URIish.java', 'org.eclipse.jgit.transport.URIish', '<init>', '^([a-z][a-z0-9+-]+)://(?:(?:([^/:@]+)(?::([^\\\\/]+))?@)?((?:[^\\\\/:]+)|(?:\\[[0-9a-f:]+\\]))(?::(\\d+))?((?:/~(?:[^\\\\/]+))?[\\\\/]))?(.+)?$', 'http://lusr\\example:wtf@[::1]:80/D:/x')",[22559]
"('Description.java', 'org.junit.runner.Description', 'methodAndClassNamePatternGroupOrDefault', '([\\s\\S]*)\\((.*)\\)', 'testFileInFolderCommittedModifiedIgnored(org.eclipse.jgit.treewalk.filter.IndexDiffFilterTest)')","[137088, 137911]"
"('URIish.java', 'org.eclipse.jgit.transport.URIish', '<init>', '^(file):([\\\\/](?![\\\\/])((?:[A-Za-z]:)?[\\\\/]?(?:(?:[^\\\\/]+[\\\\/]+)*[^\\\\/]+[\\\\/]*)))$', 'http://l usr\\example.com:wtf@example.com:80/D:\\x')",[20719]
"('URIish.java', 'org.eclipse.jgit.transport.URIish', '<init>', '^(file):([\\\\/](?![\\\\/])((?:[A-Za-z]:)?[\\\\/]?(?:(?:[^\\\\/]+[\\\\/]+)*[^\\\\/]+[\\\\/]*)))$', 'ssh+git://l usr\\example.com:wtf@example.com:1234/D:\\x')",[16089]
"('FastIgnoreRule.java', 'org.eclipse.jgit.ignore.FastIgnoreRule', 'isMatch', 'a.b', 'a')",[162216]
"('Description.java', 'org.junit.runner.Description', 'methodAndClassNamePatternGroupOrDefault', '([\\s\\S]*)\\((.*)\\)', 'testPullWithRebasePreserveConfig2(org.eclipse.jgit.api.PullCommandTest)')","[220882, 221233]"
"('Description.java', 'org.junit.runner.Description', 'methodAndClassNamePatternGroupOrDefault', '([\\s\\S]*)\\((.*)\\)', 'testTwoGroupsCase1[OldRule? true](org.eclipse.jgit.ignore.IgnoreRuleSpecialCasesTest)')","[150720, 157804]"
"('URIish.java', 'org.eclipse.jgit.transport.URIish', '<init>', '^([a-z][a-z0-9+-]+)://(?:(?:([^/:@]+)(?::([^\\\\/]+))?@)?((?:[^\\\\/:]+)|(?:\\[[0-9a-f:]+\\]))(?::(\\d+))?((?:/~(?:[^\\\\/]+))?[\\\\/]))?(.+)?$', 'git:///.git')",[5818]
"('URIish.java', 'org.eclipse.jgit.transport.URIish', '<init>', '^([a-z][a-z0-9+-]+)://(?:(?:([^/:@]+)(?::([^\\\\/]+))?@)?((?:[^\\\\/:]+)|(?:\\[[0-9a-f:]+\\]))(?::(\\d+))?((?:/~(?:[^\\\\/]+))?[\\\\/]))?(.+)?$', 'ssh://me@1.2.3.4:1234//')",[26496]
"('Description.java', 'org.junit.runner.Description', 'methodAndClassNamePatternGroupOrDefault', '([\\s\\S]*)\\((.*)\\)', 'testEscapedBracket6[OldRule? false](org.eclipse.jgit.ignore.IgnoreRuleSpecialCasesTest)')","[149227, 156332]"
"('URIish.java', 'org.eclipse.jgit.transport.URIish', '<init>', '^(file):([\\\\/](?![\\\\/])((?:[A-Za-z]:)?[\\\\/]?(?:(?:[^\\\\/]+[\\\\/]+)*[^\\\\/]+[\\\\/]*)))$', 'ssh://l usr\\example.com:wtf@example.com:1234//abc')",[10405]
"('Description.java', 'org.junit.runner.Description', 'methodAndClassNamePatternGroupOrDefault', '([\\s\\S]*)\\((.*)\\)', 'testPullMergeProgrammaticConfigurationImpliedTargetBranch(org.eclipse.jgit.api.PullCommandTest)')","[220735, 221079]"
"('FastIgnoreRule.java', 'org.eclipse.jgit.ignore.FastIgnoreRule', 'isMatch', '[\\p{Blank}]', '\n')",[162920]
"('URIish.java', 'org.eclipse.jgit.transport.URIish', '<init>', '^([a-z][a-z0-9+-]+)://(?:(?:([^/:@]+)(?::([^\\\\/]+))?@)?((?:[^\\\\/:]+)|(?:\\[[0-9a-f:]+\\]))(?::(\\d+))?((?:/~(?:[^\\\\/]+))?[\\\\/]))?(.+)?$', 'ssh://l usr\\example.com:wtf@1.2.3.4:80//abc')",[11762]
"('Description.java', 'org.junit.runner.Description', 'methodAndClassNamePatternGroupOrDefault', '([\\s\\S]*)\\((.*)\\)', 'testEditFlat(org.eclipse.jgit.notes.NoteMapTest)')","[199030, 199284]"
"('URIish.java', 'org.eclipse.jgit.transport.URIish', '<init>', '^([a-z][a-z0-9+-]+)://(?:(?:([^/:@]+)(?::([^\\\\/]+))?@)?((?:[^\\\\/:]+)|(?:\\[[0-9a-f:]+\\]))(?::(\\d+))?((?:/~(?:[^\\\\/]+))?[\\\\/]))?(.+)?$', '/tmp/jgit_test_2065451132428062414_tmp/tmp_1493923410369301041')","[208494, 208624]"
"('Description.java', 'org.junit.runner.Description', 'methodAndClassNamePatternGroupOrDefault', '([\\s\\S]*)\\((.*)\\)', 'testTwoRangesInOneGroupCase2[OldRule? true](org.eclipse.jgit.ignore.IgnoreRuleSpecialCasesTest)')","[152514, 159598]"
"('URIish.java', 'org.eclipse.jgit.transport.URIish', '<init>', '^([a-z][a-z0-9+-]+)://(?:(?:([^/:@]+)(?::([^\\\\/]+))?@)?((?:[^\\\\/:]+)|(?:\\[[0-9a-f:]+\\]))(?::(\\d+))?((?:/~(?:[^\\\\/]+))?[\\\\/]))?(.+)?$', 'ssh://1.2.3.4/D:\\x')","[53193, 53377, 54297, 54481, 55401, 55585]"
"('URIish.java', 'org.eclipse.jgit.transport.URIish', '<init>', '^([a-z][a-z0-9+-]+)://(?:(?:([^/:@]+)(?::([^\\\\/]+))?@)?((?:[^\\\\/:]+)|(?:\\[[0-9a-f:]+\\]))(?::(\\d+))?((?:/~(?:[^\\\\/]+))?[\\\\/]))?(.+)?$', 'http://me@example.com:1234/D:/x')",[32907]
"('Description.java', 'org.junit.runner.Description', 'methodAndClassNamePatternGroupOrDefault', '([\\s\\S]*)\\((.*)\\)', 'testFilePathSimpleCase[OldRule? false](org.eclipse.jgit.ignore.IgnoreRuleSpecialCasesTest)')","[146467, 153572]"
"('URIish.java', 'org.eclipse.jgit.transport.URIish', '<init>', '^(file):([\\\\/](?![\\\\/])((?:[A-Za-z]:)?[\\\\/]?(?:(?:[^\\\\/]+[\\\\/]+)*[^\\\\/]+[\\\\/]*)))$', 'ssh://l usr\\example.com@1.2.3.4:80/D:/x')",[27853]
"('Description.java', 'org.junit.runner.Description', 'methodAndClassNamePatternGroupOrDefault', '([\\s\\S]*)\\((.*)\\)', 'org.eclipse.jgit.util.GitDateParserTest')","[182236, 182818]"
"('Description.java', 'org.junit.runner.Description', 'methodAndClassNamePatternGroupOrDefault', '([\\s\\S]*)\\((.*)\\)', 'testGetRefs_HeadsOnly_SymrefToPacked(org.eclipse.jgit.internal.storage.file.RefDirectoryTest)')","[257392, 258550]"
"('Description.java', 'org.junit.runner.Description', 'methodAndClassNamePatternGroupOrDefault', '([\\s\\S]*)\\((.*)\\)', 'testMultipleEscapedCharacters1[OldRule? false](org.eclipse.jgit.ignore.IgnoreRuleSpecialCasesTest)')","[147111, 154216]"
"('Description.java', 'org.junit.runner.Description', 'methodAndClassNamePatternGroupOrDefault', '([\\s\\S]*)\\((.*)\\)', 'testParse_explicit_encoded(org.eclipse.jgit.revwalk.RevCommitParseTest)')","[84458, 84942]"
"('Description.java', 'org.junit.runner.Description', 'methodAndClassNamePatternGroupOrDefault', '([\\s\\S]*)\\((.*)\\)', 'test005_PutGetStringList(org.eclipse.jgit.lib.ConfigTest)')","[129176, 129901]"
"('Description.java', 'org.junit.runner.Description', 'methodAndClassNamePatternGroupOrDefault', '([\\s\\S]*)\\((.*)\\)', 'workingDirectoryDeleteIndexAdd(org.eclipse.jgit.api.StashCreateCommandTest)')","[202361, 202704]"
"('Description.java', 'org.junit.runner.Description', 'methodAndClassNamePatternGroupOrDefault', '([\\s\\S]*)\\((.*)\\)', 'testDeleteEmptyTreeOk(org.eclipse.jgit.util.FileUtilTest)')","[176575, 176914]"
"('Description.java', 'org.junit.runner.Description', 'methodAndClassNamePatternGroupOrDefault', '([\\s\\S]*)\\((.*)\\)', 'testRejectSpaceAtEndOnWindows(org.eclipse.jgit.lib.ObjectCheckerTest)')","[120923, 123007]"
"('FastIgnoreRule.java', 'org.eclipse.jgit.ignore.FastIgnoreRule', 'isMatch', '[a]', 'a')","[167021, 167048, 167075, 167102, 167129, 167156, 167210, 167264, 167318, 167372, 167426, 167480, 167507, 167534, 167561, 167588, 167642, 167696, 167777, 167858, 167885, 167912, 167939, 167966, 167993, 168020, 168047, 168074, 168101, 168128, 168155, 168182, 168209, 168236, 168263, 168290, 168317, 168344, 168371, 168398, 168425, 168452, 168479, 168506, 168533, 168560, 168587, 168614]"
"('Description.java', 'org.junit.runner.Description', 'methodAndClassNamePatternGroupOrDefault', '([\\s\\S]*)\\((.*)\\)', 'test002_ReadWithSubsection(org.eclipse.jgit.lib.ConfigTest)')","[129344, 130077]"
"('Description.java', 'org.junit.runner.Description', 'methodAndClassNamePatternGroupOrDefault', '([\\s\\S]*)\\((.*)\\)', 'shortFmt(org.eclipse.jgit.util.GitDateParserTest)')","[182320, 182597]"
"('Description.java', 'org.junit.runner.Description', 'methodAndClassNamePatternGroupOrDefault', '([\\s\\S]*)\\((.*)\\)', 'testWhole_LargeObject(org.eclipse.jgit.internal.storage.file.PackFileTest)')","[248768, 248855]"
"('Description.java', 'org.junit.runner.Description', 'methodAndClassNamePatternGroupOrDefault', '([\\s\\S]*)\\((.*)\\)', 'testGetFastForwardMergeoptions(org.eclipse.jgit.lib.ConfigTest)')","[129050, 129769]"
"('Description.java', 'org.junit.runner.Description', 'methodAndClassNamePatternGroupOrDefault', '([\\s\\S]*)\\((.*)\\)', 'testRebaseTodoLineSetComment(org.eclipse.jgit.api.RebaseCommandTest)')","[217585, 219070]"
"('Description.java', 'org.junit.runner.Description', 'methodAndClassNamePatternGroupOrDefault', '([\\s\\S]*)\\((.*)\\)', 'testEdit_MoveBlock(org.eclipse.jgit.diff.HistogramDiffTest)')","[98695, 99298]"
"('Description.java', 'org.junit.runner.Description', 'methodAndClassNamePatternGroupOrDefault', '([\\s\\S]*)\\((.*)\\)', 'testSimpleStarCase2[OldRule? false](org.eclipse.jgit.ignore.IgnoreRuleSpecialCasesTest)')","[147272, 154377]"
"('Description.java', 'org.junit.runner.Description', 'methodAndClassNamePatternGroupOrDefault', '([\\s\\S]*)\\((.*)\\)', 'testVerySimplePatternCase3(org.eclipse.jgit.fnmatch.FileNameMatcherTest)')","[101923, 105227]"
"('Description.java', 'org.junit.runner.Description', 'methodAndClassNamePatternGroupOrDefault', '([\\s\\S]*)\\((.*)\\)', 'org.eclipse.jgit.revwalk.RevWalkFilterTest')","[83041, 85325]"
"('Description.java', 'org.junit.runner.Description', 'methodAndClassNamePatternGroupOrDefault', '([\\s\\S]*)\\((.*)\\)', 'testOnlyOption_f1_11_c(org.eclipse.jgit.api.CommitOnlyTest)')","[237371, 239460]"
"('Description.java', 'org.junit.runner.Description', 'methodAndClassNamePatternGroupOrDefault', '([\\s\\S]*)\\((.*)\\)', 'testMissingPropertiesFile(org.eclipse.jgit.nls.TranslationBundleTest)')","[120, 448]"
"('FastIgnoreRule.java', 'org.eclipse.jgit.ignore.FastIgnoreRule', 'isMatch', '[[\\p{Graph}\\p{javaDigit}\\p{javaLetter}]]', '.')",[160654]
"('Description.java', 'org.junit.runner.Description', 'methodAndClassNamePatternGroupOrDefault', '([\\s\\S]*)\\((.*)\\)', 'testAddExistingSingleFile(org.eclipse.jgit.api.AddCommandTest)')","[235095, 235534]"
"('Description.java', 'org.junit.runner.Description', 'methodAndClassNamePatternGroupOrDefault', '([\\s\\S]*)\\((.*)\\)', 'testParseFive(org.eclipse.jgit.notes.LeafBucketTest)')","[198101, 198335]"
"('Description.java', 'org.junit.runner.Description', 'methodAndClassNamePatternGroupOrDefault', '([\\s\\S]*)\\((.*)\\)', 'testPushRefUpdate(org.eclipse.jgit.api.PushCommandTest)')","[203003, 203131]"
"('Description.java', 'org.junit.runner.Description', 'methodAndClassNamePatternGroupOrDefault', '([\\s\\S]*)\\((.*)\\)', 'testSequentialCherryPick(org.eclipse.jgit.api.CherryPickCommandTest)')","[232274, 232537]"
"('FastIgnoreRule.java', 'org.eclipse.jgit.ignore.FastIgnoreRule', 'isMatch', '[=a=]', 'a')",[161904]
"('Description.java', 'org.junit.runner.Description', 'methodAndClassNamePatternGroupOrDefault', '([\\s\\S]*)\\((.*)\\)', 'testSetDestination_SourceNull(org.eclipse.jgit.transport.RefSpecTest)')","[14402, 15930]"
"('Description.java', 'org.junit.runner.Description', 'methodAndClassNamePatternGroupOrDefault', '([\\s\\S]*)\\((.*)\\)', 'testGraphGroupCase4(org.eclipse.jgit.fnmatch.FileNameMatcherTest)')","[101587, 104875]"
"('QuotedString.java', 'org.eclipse.jgit.util.QuotedString$BourneUserPathStyle', 'quote', '^~[A-Za-z0-9_-]+$', '')","[193051, 193075]"
"('URIish.java', 'org.eclipse.jgit.transport.URIish', '<init>', '^([a-z][a-z0-9+-]+)://(?:(?:([^/:@]+)(?::([^\\\\/]+))?@)?((?:[^\\\\/:]+)|(?:\\[[0-9a-f:]+\\]))(?::(\\d+))?((?:/~(?:[^\\\\/]+))?[\\\\/]))?(.+)?$', 'ssh://DOMAIN\\user:pass@example.com:33/some/p ath%20')","[69953, 69999]"
"('URIish.java', 'org.eclipse.jgit.transport.URIish', '<init>', '^([a-z][a-z0-9+-]+)://(?:(?:([^/:@]+)(?::([^\\\\/]+))?@)?((?:[^\\\\/:]+)|(?:\\[[0-9a-f:]+\\]))(?::(\\d+))?((?:/~(?:[^\\\\/]+))?[\\\\/]))?(.+)?$', 'https://lusr\\example@example.com:80/D:/x')",[38611]
"('Description.java', 'org.junit.runner.Description', 'methodAndClassNamePatternGroupOrDefault', '([\\s\\S]*)\\((.*)\\)', 'testInvalidTreeModeStartsWithZero1(org.eclipse.jgit.lib.ObjectCheckerTest)')","[122687, 124855]"
"('Description.java', 'org.junit.runner.Description', 'methodAndClassNamePatternGroupOrDefault', '([\\s\\S]*)\\((.*)\\)', 'testEqualsWithWhitespace(org.eclipse.jgit.diff.RawTextIgnoreAllWhitespaceTest)')","[99684, 99728]"
"('URIish.java', 'org.eclipse.jgit.transport.URIish', '<init>', '^([a-z][a-z0-9+-]+)://(?:(?:([^/:@]+)(?::([^\\\\/]+))?@)?((?:[^\\\\/:]+)|(?:\\[[0-9a-f:]+\\]))(?::(\\d+))?((?:/~(?:[^\\\\/]+))?[\\\\/]))?(.+)?$', 'ssh+git://l usr\\example.com:wtf@example.com:80/D:\\x')",[16296]
"('Description.java', 'org.junit.runner.Description', 'methodAndClassNamePatternGroupOrDefault', '([\\s\\S]*)\\((.*)\\)', 'testJustCommonPrefixIsNotMatch(org.eclipse.jgit.treewalk.filter.PathFilterGroupTest)')","[138825, 138973]"
"('URIish.java', 'org.eclipse.jgit.transport.URIish', '<init>', '^([a-z][a-z0-9+-]+)://(?:(?:([^/:@]+)(?::([^\\\\/]+))?@)?((?:[^\\\\/:]+)|(?:\\[[0-9a-f:]+\\]))(?::(\\d+))?((?:/~(?:[^\\\\/]+))?[\\\\/]))?(.+)?$', 'ssh://me@1.2.3.4//')","[39807, 39991]"
"('Description.java', 'org.junit.runner.Description', 'methodAndClassNamePatternGroupOrDefault', '([\\s\\S]*)\\((.*)\\)', 'testJGitText(org.eclipse.jgit.nls.RootLocaleTest)')","[177, 470]"
"('Description.java', 'org.junit.runner.Description', 'methodAndClassNamePatternGroupOrDefault', '([\\s\\S]*)\\((.*)\\)', 'testContext0(org.eclipse.jgit.diff.DiffFormatterReflowTest)')","[94267, 94480]"
"('Description.java', 'org.junit.runner.Description', 'methodAndClassNamePatternGroupOrDefault', '([\\s\\S]*)\\((.*)\\)', 'testTwoGroupsCase2[OldRule? true](org.eclipse.jgit.ignore.IgnoreRuleSpecialCasesTest)')","[150743, 157827]"
"('URIish.java', 'org.eclipse.jgit.transport.URIish', '<init>', '^(file):([\\\\/](?![\\\\/])((?:[A-Za-z]:)?[\\\\/]?(?:(?:[^\\\\/]+[\\\\/]+)*[^\\\\/]+[\\\\/]*)))$', 'ssh://l usr\\example.com@1.2.3.4:80//abc')",[27807]
"('URIish.java', 'org.eclipse.jgit.transport.URIish', '<init>', '^(file):([\\\\/](?![\\\\/])((?:[A-Za-z]:)?[\\\\/]?(?:(?:[^\\\\/]+[\\\\/]+)*[^\\\\/]+[\\\\/]*)))$', 'https://l usr\\example.com@[::1]/D:\\x')","[51330, 51514]"
"('URIish.java', 'org.eclipse.jgit.transport.URIish', '<init>', '^(file):([\\\\/](?![\\\\/])((?:[A-Za-z]:)?[\\\\/]?(?:(?:[^\\\\/]+[\\\\/]+)*[^\\\\/]+[\\\\/]*)))$', 'ssh://me@1.2.3.4:80//')",[26657]
"('Description.java', 'org.junit.runner.Description', 'methodAndClassNamePatternGroupOrDefault', '([\\s\\S]*)\\((.*)\\)', 'testInvalidTagNoObject1(org.eclipse.jgit.lib.ObjectCheckerTest)')","[122162, 124305]"
"('Description.java', 'org.junit.runner.Description', 'methodAndClassNamePatternGroupOrDefault', '([\\s\\S]*)\\((.*)\\)', 'testSpecialGroupCase3[OldRule? true](org.eclipse.jgit.ignore.IgnoreRuleSpecialCasesTest)')","[149340, 156424]"
"('Description.java', 'org.junit.runner.Description', 'methodAndClassNamePatternGroupOrDefault', '([\\s\\S]*)\\((.*)\\)', 'testResolvedSymRef(org.eclipse.jgit.lib.RefTest)')","[115502, 115694]"
"('Description.java', 'org.junit.runner.Description', 'methodAndClassNamePatternGroupOrDefault', '([\\s\\S]*)\\((.*)\\)', 'testFileIgnored(org.eclipse.jgit.treewalk.filter.IndexDiffFilterTest)')","[136773, 137581]"
"('URIish.java', 'org.eclipse.jgit.transport.URIish', '<init>', '^(file):([\\\\/](?![\\\\/])((?:[A-Za-z]:)?[\\\\/]?(?:(?:[^\\\\/]+[\\\\/]+)*[^\\\\/]+[\\\\/]*)))$', 'ssh+git://l usr\\example.com@example.com:80//')",[30768]
"('URIish.java', 'org.eclipse.jgit.transport.URIish', '<init>', '^([a-z][a-z0-9+-]+)://(?:(?:([^/:@]+)(?::([^\\\\/]+))?@)?((?:[^\\\\/:]+)|(?:\\[[0-9a-f:]+\\]))(?::(\\d+))?((?:/~(?:[^\\\\/]+))?[\\\\/]))?(.+)?$', 'ssh+git://me@[::1]:1234/D:/x')",[30331]
"('Description.java', 'org.junit.runner.Description', 'methodAndClassNamePatternGroupOrDefault', '([\\s\\S]*)\\((.*)\\)', 'testBreakModify_BreakBelowScore(org.eclipse.jgit.diff.RenameDetectorTest)')","[93090, 93639]"
"('FastIgnoreRule.java', 'org.eclipse.jgit.ignore.FastIgnoreRule', 'isMatch', '[\\p{XDigit}]', '9')",[163102]
"('Description.java', 'org.junit.runner.Description', 'methodAndClassNamePatternGroupOrDefault', '([\\s\\S]*)\\((.*)\\)', 'testDirtySubmoduleHEAD(org.eclipse.jgit.lib.IndexDiffSubmoduleTest)')","[127948, 128100]"
"('Description.java', 'org.junit.runner.Description', 'methodAndClassNamePatternGroupOrDefault', '([\\s\\S]*)\\((.*)\\)', 'testTwoEntries_Seek2IsEOF(org.eclipse.jgit.treewalk.CanonicalTreeParserTest)')","[136027, 136350]"
"('FastIgnoreRule.java', 'org.eclipse.jgit.ignore.FastIgnoreRule', 'isMatch', '.*\\.sta[0-5]', 'test.sta0')","[142470, 143614]"
"('Description.java', 'org.junit.runner.Description', 'methodAndClassNamePatternGroupOrDefault', '([\\s\\S]*)\\((.*)\\)', 'testContext100(org.eclipse.jgit.diff.DiffFormatterReflowTest)')","[94246, 94458]"
"('Description.java', 'org.junit.runner.Description', 'methodAndClassNamePatternGroupOrDefault', '([\\s\\S]*)\\((.*)\\)', 'testReadString_Len0002(org.eclipse.jgit.transport.PacketLineInTest)')","[18267, 19469]"
"('URIish.java', 'org.eclipse.jgit.transport.URIish', '<init>', '^(file):([\\\\/](?![\\\\/])((?:[A-Za-z]:)?[\\\\/]?(?:(?:[^\\\\/]+[\\\\/]+)*[^\\\\/]+[\\\\/]*)))$', 'https://me:wtf@1.2.3.4:1234/D:\\x')",[23134]
"('Description.java', 'org.junit.runner.Description', 'methodAndClassNamePatternGroupOrDefault', '([\\s\\S]*)\\((.*)\\)', 'testUpdateUnexpectedRemoteVsForce(org.eclipse.jgit.transport.PushProcessTest)')","[74026, 74389]"
"('URIish.java', 'org.eclipse.jgit.transport.URIish', '<init>', '^([a-z][a-z0-9+-]+)://(?:(?:([^/:@]+)(?::([^\\\\/]+))?@)?((?:[^\\\\/:]+)|(?:\\[[0-9a-f:]+\\]))(?::(\\d+))?((?:/~(?:[^\\\\/]+))?[\\\\/]))?(.+)?$', 'https://lusr\\example@[::1]:1234//')",[39071]
"('URIish.java', 'org.eclipse.jgit.transport.URIish', '<init>', '^(file):([\\\\/](?![\\\\/])((?:[A-Za-z]:)?[\\\\/]?(?:(?:[^\\\\/]+[\\\\/]+)*[^\\\\/]+[\\\\/]*)))$', 'https://l usr\\example.com:wtf@[::1]:80//')",[24652]
"('Description.java', 'org.junit.runner.Description', 'methodAndClassNamePatternGroupOrDefault', '([\\s\\S]*)\\((.*)\\)', 'testRemoved(org.eclipse.jgit.lib.IndexDiffTest)')","[110532, 110881]"
"('Description.java', 'org.junit.runner.Description', 'methodAndClassNamePatternGroupOrDefault', '([\\s\\S]*)\\((.*)\\)', 'org.eclipse.jgit.api.StatusCommandTest')","[216608, 216874]"
"('Description.java', 'org.junit.runner.Description', 'methodAndClassNamePatternGroupOrDefault', '([\\s\\S]*)\\((.*)\\)', 'testMixedGroupCase6[OldRule? false](org.eclipse.jgit.ignore.IgnoreRuleSpecialCasesTest)')","[146214, 153319]"
"('Description.java', 'org.junit.runner.Description', 'methodAndClassNamePatternGroupOrDefault', '([\\s\\S]*)\\((.*)\\)', 'testCombinedRangesInOneGroupCase1(org.eclipse.jgit.fnmatch.FileNameMatcherTest)')","[101230, 104501]"
"('URIish.java', 'org.eclipse.jgit.transport.URIish', '<init>', '^(?:([^/:@]+)(?::([^\\\\/]+))?@)?([^\\\\/:]{2,}):([\\\\/](?:(?:[^\\\\/]+[\\\\/]+)*[^\\\\/]+[\\\\/]*))$', '/tmp/jgit_test_3729351677476967516_tmp/tmp_3631166462441270745/.git')","[228411, 228557]"
"('Description.java', 'org.junit.runner.Description', 'methodAndClassNamePatternGroupOrDefault', '([\\s\\S]*)\\((.*)\\)', 'testRefsCacheAfterUpdateLooseOnly(org.eclipse.jgit.internal.storage.file.RefUpdateTest)')","[253334, 254180]"
"('Description.java', 'org.junit.runner.Description', 'methodAndClassNamePatternGroupOrDefault', '([\\s\\S]*)\\((.*)\\)', 'testQuote_Empty(org.eclipse.jgit.util.QuotedStringBourneStyleTest)')","[183043, 183262]"
"('URIish.java', 'org.eclipse.jgit.transport.URIish', '<init>', '^([a-z][a-z0-9+-]+)://(?:(?:([^/:@]+)(?::([^\\\\/]+))?@)?((?:[^\\\\/:]+)|(?:\\[[0-9a-f:]+\\]))(?::(\\d+))?((?:/~(?:[^\\\\/]+))?[\\\\/]))?(.+)?$', 'ssh+git://lusr\\example:wtf@example.com:1234/D:\\x')",[17239]
"('URIish.java', 'org.eclipse.jgit.transport.URIish', '<init>', '^([a-z][a-z0-9+-]+)://(?:(?:([^/:@]+)(?::([^\\\\/]+))?@)?((?:[^\\\\/:]+)|(?:\\[[0-9a-f:]+\\]))(?::(\\d+))?((?:/~(?:[^\\\\/]+))?[\\\\/]))?(.+)?$', 'ssh+git://me@[::1]//')","[43487, 43671]"
"('Description.java', 'org.junit.runner.Description', 'methodAndClassNamePatternGroupOrDefault', '([\\s\\S]*)\\((.*)\\)', 'repositoryWithMissingSubmodule(org.eclipse.jgit.submodule.SubmoduleStatusTest)')","[109349, 109501]"
"('Description.java', 'org.junit.runner.Description', 'methodAndClassNamePatternGroupOrDefault', '([\\s\\S]*)\\((.*)\\)', 'testVerySimpleGroupRangeCase4[OldRule? true](org.eclipse.jgit.ignore.IgnoreRuleSpecialCasesTest)')","[151111, 158195]"
"('ChangeIdUtil.java', 'org.eclipse.jgit.util.ChangeIdUtil', 'indexOfFirstFooterLine', '(^[a-zA-Z0-9-]+:(?!//).*$)', 'does not fix it.')",[190715]
"('Description.java', 'org.junit.runner.Description', 'methodAndClassNamePatternGroupOrDefault', '([\\s\\S]*)\\((.*)\\)', 'testDeleteRecursiveEmpty(org.eclipse.jgit.util.FileUtilTest)')","[176680, 177024]"
"('Description.java', 'org.junit.runner.Description', 'methodAndClassNamePatternGroupOrDefault', '([\\s\\S]*)\\((.*)\\)', 'testTwoGroupsCase0(org.eclipse.jgit.fnmatch.FileNameMatcherTest)')","[102259, 105579]"
"('URIish.java', 'org.eclipse.jgit.transport.URIish', '<init>', '^([a-z][a-z0-9+-]+)://(?:(?:([^/:@]+)(?::([^\\\\/]+))?@)?((?:[^\\\\/:]+)|(?:\\[[0-9a-f:]+\\]))(?::(\\d+))?((?:/~(?:[^\\\\/]+))?[\\\\/]))?(.+)?$', 'ssh://lusr\\example:wtf@example.com:1234/D:/x')",[12396]
"('Description.java', 'org.junit.runner.Description', 'methodAndClassNamePatternGroupOrDefault', '([\\s\\S]*)\\((.*)\\)', 'testEmpty(org.eclipse.jgit.util.RefListTest)')","[179506, 180022]"
"('URIish.java', 'org.eclipse.jgit.transport.URIish', '<init>', '^(?:([^/:@]+)(?::([^\\\\/]+))?@)?((?:[^\\\\/:]+)|(?:\\[[0-9a-f:]+\\])):((?:(?:/~(?:[^\\\\/]+))[\\\\/])?(?:(?:[^\\\\/]+[\\\\/]+)*[^\\\\/]+[\\\\/]*))$', '/tmp/jgit_test_1514057598611897554_tmp/tmp_7977849081850125086')","[227642, 227777]"
"('Description.java', 'org.junit.runner.Description', 'methodAndClassNamePatternGroupOrDefault', '([\\s\\S]*)\\((.*)\\)', 'testTimeout_writeByte_Success1(org.eclipse.jgit.util.io.TimeoutOutputStreamTest)')","[172581, 172773]"
"('URIish.java', 'org.eclipse.jgit.transport.URIish', '<init>', '^([a-z][a-z0-9+-]+)://(?:(?:([^/:@]+)(?::([^\\\\/]+))?@)?((?:[^\\\\/:]+)|(?:\\[[0-9a-f:]+\\]))(?::(\\d+))?((?:/~(?:[^\\\\/]+))?[\\\\/]))?(.+)?$', 'ssh://me:wtf@example.com:80//')",[7785]
"('URIish.java', 'org.eclipse.jgit.transport.URIish', '<init>', '^(file):([\\\\/](?![\\\\/])((?:[A-Za-z]:)?[\\\\/]?(?:(?:[^\\\\/]+[\\\\/]+)*[^\\\\/]+[\\\\/]*)))$', 'ssh://me@example.com:80/D:/x')",[26216]
"('URIish.java', 'org.eclipse.jgit.transport.URIish', '<init>', '^(file):([\\\\/](?![\\\\/])((?:[A-Za-z]:)?[\\\\/]?(?:(?:[^\\\\/]+[\\\\/]+)*[^\\\\/]+[\\\\/]*)))$', '/abc.git/')",[66694]
"('Description.java', 'org.junit.runner.Description', 'methodAndClassNamePatternGroupOrDefault', '([\\s\\S]*)\\((.*)\\)', 'testNoSpace(org.eclipse.jgit.lib.ValidRefNameTest)')","[118698, 119072]"
"('URIish.java', 'org.eclipse.jgit.transport.URIish', '<init>', '^([a-z][a-z0-9+-]+)://(?:(?:([^/:@]+)(?::([^\\\\/]+))?@)?((?:[^\\\\/:]+)|(?:\\[[0-9a-f:]+\\]))(?::(\\d+))?((?:/~(?:[^\\\\/]+))?[\\\\/]))?(.+)?$', 'file:///home/m%00y')","[66441, 66487]"
"('Description.java', 'org.junit.runner.Description', 'methodAndClassNamePatternGroupOrDefault', '([\\s\\S]*)\\((.*)\\)', 'testBinaryDetect(org.eclipse.jgit.util.io.EolCanonicalizingInputStreamTest)')","[174703, 174856]"
"('Description.java', 'org.junit.runner.Description', 'methodAndClassNamePatternGroupOrDefault', '([\\s\\S]*)\\((.*)\\)', 'org.eclipse.jgit.treewalk.filter.PathFilterGroupTest')","[138804, 139128]"
"('Description.java', 'org.junit.runner.Description', 'methodAndClassNamePatternGroupOrDefault', '([\\s\\S]*)\\((.*)\\)', 'testGetRefs_DiscoversDeletedLoose2(org.eclipse.jgit.internal.storage.file.RefDirectoryTest)')","[258295, 259496]"
"('Description.java', 'org.junit.runner.Description', 'methodAndClassNamePatternGroupOrDefault', '([\\s\\S]*)\\((.*)\\)', 'org.eclipse.jgit.patch.FileHeaderTest')","[195096, 196022]"
"('URIish.java', 'org.eclipse.jgit.transport.URIish', '<init>', '^(file):([\\\\/](?![\\\\/])((?:[A-Za-z]:)?[\\\\/]?(?:(?:[^\\\\/]+[\\\\/]+)*[^\\\\/]+[\\\\/]*)))$', 'ssh://l usr\\example.com@example.com/D:/x')","[40612, 40796]"
"('Description.java', 'org.junit.runner.Description', 'methodAndClassNamePatternGroupOrDefault', '([\\s\\S]*)\\((.*)\\)', 'testUpperGroupCase2(org.eclipse.jgit.fnmatch.FileNameMatcherTest)')","[103246, 106613]"
"('Description.java', 'org.junit.runner.Description', 'methodAndClassNamePatternGroupOrDefault', '([\\s\\S]*)\\((.*)\\)', 'testFillToUnknownCommit(org.eclipse.jgit.revwalk.RevCommitListTest)')","[80936, 81085]"
"('URIish.java', 'org.eclipse.jgit.transport.URIish', '<init>', '^(?:([^/:@]+)(?::([^\\\\/]+))?@)?((?:[^\\\\/:]+)|(?:\\[[0-9a-f:]+\\])):((?:(?:/~(?:[^\\\\/]+))[\\\\/])?(?:(?:[^\\\\/]+[\\\\/]+)*[^\\\\/]+[\\\\/]*))$', '/tmp/jgit_test_873718593406949091_tmp/tmp_6143507308402612209.git')",[76805]
"('Description.java', 'org.junit.runner.Description', 'methodAndClassNamePatternGroupOrDefault', '([\\s\\S]*)\\((.*)\\)', 'testOnlyOption_f1_10_a(org.eclipse.jgit.api.CommitOnlyTest)')","[237224, 239306]"
"('Description.java', 'org.junit.runner.Description', 'methodAndClassNamePatternGroupOrDefault', '([\\s\\S]*)\\((.*)\\)', 'testTwoComplicatedModifications(org.eclipse.jgit.merge.MergeAlgorithmTest)')","[87099, 87399]"
"('URIish.java', 'org.eclipse.jgit.transport.URIish', 'getHumanishName', '^([\\\\/]?((?:[A-Za-z]:)?[\\\\/]?(?:(?:[^\\\\/]+[\\\\/]+)*[^\\\\/]+[\\\\/]*)))$', '/a/b/c/')",[67568]
"('QuotedString.java', 'org.eclipse.jgit.util.QuotedString$BourneUserPathStyle', 'quote', '^~[A-Za-z0-9_-]+$', ""a'b"")","[193795, 193820]"
"('URIish.java', 'org.eclipse.jgit.transport.URIish', '<init>', '^([\\\\/]?((?:[A-Za-z]:)?[\\\\/]?(?:(?:[^\\\\/]+[\\\\/]+)*[^\\\\/]+[\\\\/]*)))$', '/a/b/.git')",[71172]
"('Repository.java', 'org.eclipse.jgit.lib.Repository', 'resolve', '^-\\d+$', '2')","[126811, 126838]"
"('Description.java', 'org.junit.runner.Description', 'methodAndClassNamePatternGroupOrDefault', '([\\s\\S]*)\\((.*)\\)', 'testInversedGroupCase2[OldRule? true](org.eclipse.jgit.ignore.IgnoreRuleSpecialCasesTest)')","[150513, 157597]"
"('Description.java', 'org.junit.runner.Description', 'methodAndClassNamePatternGroupOrDefault', '([\\s\\S]*)\\((.*)\\)', 'testInvalidCommitNoTree4(org.eclipse.jgit.lib.ObjectCheckerTest)')","[122540, 124701]"
"('URIish.java', 'org.eclipse.jgit.transport.URIish', '<init>', '^(file):([\\\\/](?![\\\\/])((?:[A-Za-z]:)?[\\\\/]?(?:(?:[^\\\\/]+[\\\\/]+)*[^\\\\/]+[\\\\/]*)))$', 'file:/tmp/jgit_test_4891911102535552827_tmp/tmp_5487204894428132903/.git/')",[108183]
"('Description.java', 'org.junit.runner.Description', 'methodAndClassNamePatternGroupOrDefault', '([\\s\\S]*)\\((.*)\\)', 'testMatch_Prefix(org.eclipse.jgit.util.RawParseUtils_MatchTest)')","[192052, 192139]"
"('Description.java', 'org.junit.runner.Description', 'methodAndClassNamePatternGroupOrDefault', '([\\s\\S]*)\\((.*)\\)', 'testDeleteHead(org.eclipse.jgit.internal.storage.file.RefUpdateTest)')","[253397, 254246]"
"('URIish.java', 'org.eclipse.jgit.transport.URIish', '<init>', '^(file):([\\\\/](?![\\\\/])((?:[A-Za-z]:)?[\\\\/]?(?:(?:[^\\\\/]+[\\\\/]+)*[^\\\\/]+[\\\\/]*)))$', 'https://lusr\\example@1.2.3.4//')","[51928, 52112]"
"('Description.java', 'org.junit.runner.Description', 'methodAndClassNamePatternGroupOrDefault', '([\\s\\S]*)\\((.*)\\)', 'testRegularCommit(org.eclipse.jgit.util.ChangeIdUtilTest)')","[185861, 186622]"
"('Description.java', 'org.junit.runner.Description', 'methodAndClassNamePatternGroupOrDefault', '([\\s\\S]*)\\((.*)\\)', 'testACommitWithSubjectBodyBugBrackersAndSob(org.eclipse.jgit.util.ChangeIdUtilTest)')","[185336, 186072]"
"('Description.java', 'org.junit.runner.Description', 'methodAndClassNamePatternGroupOrDefault', '([\\s\\S]*)\\((.*)\\)', 'testAlias_OptionsInherit(org.eclipse.jgit.transport.OpenSshConfigTest)')","[3382, 3878]"
"('URIish.java', 'org.eclipse.jgit.transport.URIish', '<init>', '^([a-z][a-z0-9+-]+)://(?:(?:([^/:@]+)(?::([^\\\\/]+))?@)?((?:[^\\\\/:]+)|(?:\\[[0-9a-f:]+\\]))(?::(\\d+))?((?:/~(?:[^\\\\/]+))?[\\\\/]))?(.+)?$', 'http://me:wtf@[::1]:1234//abc')",[20098]
"('Description.java', 'org.junit.runner.Description', 'methodAndClassNamePatternGroupOrDefault', '([\\s\\S]*)\\((.*)\\)', 'testWordroupCase4(org.eclipse.jgit.fnmatch.FileNameMatcherTest)')","[103750, 107141]"
"('URIish.java', 'org.eclipse.jgit.transport.URIish', '<init>', '^(file):([\\\\/](?![\\\\/])((?:[A-Za-z]:)?[\\\\/]?(?:(?:[^\\\\/]+[\\\\/]+)*[^\\\\/]+[\\\\/]*)))$', 'ssh+git://l usr\\example.com@example.com:1234//abc')",[30630]
"('URIish.java', 'org.eclipse.jgit.transport.URIish', '<init>', '^(file):([\\\\/](?![\\\\/])((?:[A-Za-z]:)?[\\\\/]?(?:(?:[^\\\\/]+[\\\\/]+)*[^\\\\/]+[\\\\/]*)))$', 'ssh://lusr\\example@example.com:1234//')",[28376]
"('ChangeIdUtil.java', 'org.eclipse.jgit.util.ChangeIdUtil', 'indexOfFirstFooterLine', '(^[a-zA-Z0-9-]+:(?!//).*$)', 'git://example.com/ fixes this')",[190139]
"('Description.java', 'org.junit.runner.Description', 'methodAndClassNamePatternGroupOrDefault', '([\\s\\S]*)\\((.*)\\)', 'testWritePack1(org.eclipse.jgit.internal.storage.file.PackWriterTest)')","[251323, 251772]"
"('Description.java', 'org.junit.runner.Description', 'methodAndClassNamePatternGroupOrDefault', '([\\s\\S]*)\\((.*)\\)', 'testReadBoolean_TrueFalse2(org.eclipse.jgit.lib.ConfigTest)')","[129638, 130385]"
"('Description.java', 'org.junit.runner.Description', 'methodAndClassNamePatternGroupOrDefault', '([\\s\\S]*)\\((.*)\\)', 'testCompareEntriesOffsetsWithFindOffsets(org.eclipse.jgit.internal.storage.file.PackIndexV2Test)')","[248154, 248286]"
"('URIish.java', 'org.eclipse.jgit.transport.URIish', '<init>', '^(file):([\\\\/](?![\\\\/])((?:[A-Za-z]:)?[\\\\/]?(?:(?:[^\\\\/]+[\\\\/]+)*[^\\\\/]+[\\\\/]*)))$', 'ssh://example.com/D:\\x')","[52802, 52986, 53906, 54090, 55010, 55194]"
"('URIish.java', 'org.eclipse.jgit.transport.URIish', '<init>', '^(file):([\\\\/](?![\\\\/])((?:[A-Za-z]:)?[\\\\/]?(?:(?:[^\\\\/]+[\\\\/]+)*[^\\\\/]+[\\\\/]*)))$', 'ssh://l usr\\example.com@1.2.3.4//')","[40888, 41072]"
"('Description.java', 'org.junit.runner.Description', 'methodAndClassNamePatternGroupOrDefault', '([\\s\\S]*)\\((.*)\\)', 'testPullWithRebasePreserveConfig3(org.eclipse.jgit.api.PullCommandTest)')","[220903, 221255]"
"('Description.java', 'org.junit.runner.Description', 'methodAndClassNamePatternGroupOrDefault', '([\\s\\S]*)\\((.*)\\)', 'testLimitObjectSize_Length130InsertFails(org.eclipse.jgit.internal.storage.pack.DeltaIndexTest)')","[246403, 246681]"
"('URIish.java', 'org.eclipse.jgit.transport.URIish', '<init>', '^(file):([\\\\/](?![\\\\/])((?:[A-Za-z]:)?[\\\\/]?(?:(?:[^\\\\/]+[\\\\/]+)*[^\\\\/]+[\\\\/]*)))$', 'http://lusr\\example:wtf@[::1]:1234//abc')",[22306]
"('Description.java', 'org.junit.runner.Description', 'methodAndClassNamePatternGroupOrDefault', '([\\s\\S]*)\\((.*)\\)', 'testType_Insert(org.eclipse.jgit.diff.EditTest)')","[99997, 100343]"
"('Description.java', 'org.junit.runner.Description', 'methodAndClassNamePatternGroupOrDefault', '([\\s\\S]*)\\((.*)\\)', 'testCntrlGroupCase0(org.eclipse.jgit.fnmatch.FileNameMatcherTest)')","[101818, 105117]"
"('URIish.java', 'org.eclipse.jgit.transport.URIish', '<init>', '^(?:([^/:@]+)(?::([^\\\\/]+))?@)?([^\\\\/:]{2,}):([\\\\/](?:(?:[^\\\\/]+[\\\\/]+)*[^\\\\/]+[\\\\/]*))$', '/tmp/jgit_test_1317497064317343419_tmp/tmp_1402166022410132527')","[226316, 226456, 226979]"
"('URIish.java', 'org.eclipse.jgit.transport.URIish', '<init>', '^(file):([\\\\/](?![\\\\/])((?:[A-Za-z]:)?[\\\\/]?(?:(?:[^\\\\/]+[\\\\/]+)*[^\\\\/]+[\\\\/]*)))$', 'http://l usr\\example.com@[::1]:1234//')",[34632]
"('Description.java', 'org.junit.runner.Description', 'methodAndClassNamePatternGroupOrDefault', '([\\s\\S]*)\\((.*)\\)', 'testEmpty(org.eclipse.jgit.revwalk.DateRevQueueTest)')","[82410, 82559]"
"('Description.java', 'org.junit.runner.Description', 'methodAndClassNamePatternGroupOrDefault', '([\\s\\S]*)\\((.*)\\)', 'testTwoRoots2(org.eclipse.jgit.revplot.PlotCommitListTest)')","[197129, 197452]"
"('Description.java', 'org.junit.runner.Description', 'methodAndClassNamePatternGroupOrDefault', '([\\s\\S]*)\\((.*)\\)', 'testFormatWithConflictsWithFooterlikeLineInBody(org.eclipse.jgit.merge.MergeMessageFormatterTest)')","[88821, 89137]"
"('URIish.java', 'org.eclipse.jgit.transport.URIish', '<init>', '^(file):([\\\\/](?![\\\\/])((?:[A-Za-z]:)?[\\\\/]?(?:(?:[^\\\\/]+[\\\\/]+)*[^\\\\/]+[\\\\/]*)))$', 'http://l usr\\example.com:wtf@example.com:1234/D:/x')",[20489]
"('Description.java', 'org.junit.runner.Description', 'methodAndClassNamePatternGroupOrDefault', '([\\s\\S]*)\\((.*)\\)', 'testVerySimpleWildCardCase1[OldRule? false](org.eclipse.jgit.ignore.IgnoreRuleSpecialCasesTest)')","[145938, 153043]"
"('Description.java', 'org.junit.runner.Description', 'methodAndClassNamePatternGroupOrDefault', '([\\s\\S]*)\\((.*)\\)', 'testAddURI(org.eclipse.jgit.transport.RemoteConfigTest)')","[2066, 3404]"
"('Repository.java', 'org.eclipse.jgit.lib.Repository', 'resolve', '^-\\d+$', '-3')","[126976, 127003, 127196, 127223]"
"('Description.java', 'org.junit.runner.Description', 'methodAndClassNamePatternGroupOrDefault', '([\\s\\S]*)\\((.*)\\)', 'testDigitGroupCase2[OldRule? true](org.eclipse.jgit.ignore.IgnoreRuleSpecialCasesTest)')","[150927, 158011]"
"('Description.java', 'org.junit.runner.Description', 'methodAndClassNamePatternGroupOrDefault', '([\\s\\S]*)\\((.*)\\)', 'testBlankGroupCase4(org.eclipse.jgit.fnmatch.FileNameMatcherTest)')","[103414, 106789]"
"('Description.java', 'org.junit.runner.Description', 'methodAndClassNamePatternGroupOrDefault', '([\\s\\S]*)\\((.*)\\)', 'testBatchRefUpdateConflictThanksToDelete(org.eclipse.jgit.internal.storage.file.RefDirectoryTest)')","[257707, 258880]"
"('URIish.java', 'org.eclipse.jgit.transport.URIish', '<init>', '^(file):([\\\\/](?![\\\\/])((?:[A-Za-z]:)?[\\\\/]?(?:(?:[^\\\\/]+[\\\\/]+)*[^\\\\/]+[\\\\/]*)))$', 'ssh+git://[::1]//')","[56712, 56896, 57816, 58000, 58920, 59104]"
"('Description.java', 'org.junit.runner.Description', 'methodAndClassNamePatternGroupOrDefault', '([\\s\\S]*)\\((.*)\\)', 'testInvalidTreeNameContainsSlash(org.eclipse.jgit.lib.ObjectCheckerTest)')","[120944, 123029]"
"('URIish.java', 'org.eclipse.jgit.transport.URIish', '<init>', '^(file):([\\\\/](?![\\\\/])((?:[A-Za-z]:)?[\\\\/]?(?:(?:[^\\\\/]+[\\\\/]+)*[^\\\\/]+[\\\\/]*)))$', 'ssh+git://me@example.com/D:/x')","[42820, 43004]"
"('Description.java', 'org.junit.runner.Description', 'methodAndClassNamePatternGroupOrDefault', '([\\s\\S]*)\\((.*)\\)', 'testParseGitFileName_Foo(org.eclipse.jgit.patch.FileHeaderTest)')","[195537, 195999]"
"('Description.java', 'org.junit.runner.Description', 'methodAndClassNamePatternGroupOrDefault', '([\\s\\S]*)\\((.*)\\)', 'testUnsetSingleSection(org.eclipse.jgit.lib.ConfigTest)')","[129533, 130275]"
"('URIish.java', 'org.eclipse.jgit.transport.URIish', '<init>', '^([a-z][a-z0-9+-]+)://(?:(?:([^/:@]+)(?::([^\\\\/]+))?@)?((?:[^\\\\/:]+)|(?:\\[[0-9a-f:]+\\]))(?::(\\d+))?((?:/~(?:[^\\\\/]+))?[\\\\/]))?(.+)?$', 'ssh+git://l usr\\example.com@[::1]:1234//')",[31343]
"('Description.java', 'org.junit.runner.Description', 'methodAndClassNamePatternGroupOrDefault', '([\\s\\S]*)\\((.*)\\)', 'testInvalidTagNoTagHeader2(org.eclipse.jgit.lib.ObjectCheckerTest)')","[121994, 124129]"
"('Description.java', 'org.junit.runner.Description', 'methodAndClassNamePatternGroupOrDefault', '([\\s\\S]*)\\((.*)\\)', 'testNotEquals1(org.eclipse.jgit.diff.EditTest)')","[100018, 100365]"
"('Description.java', 'org.junit.runner.Description', 'methodAndClassNamePatternGroupOrDefault', '([\\s\\S]*)\\((.*)\\)', 'testBasic(org.eclipse.jgit.ignore.IgnoreMatcherTest)')","[145281, 145473]"
"('URIish.java', 'org.eclipse.jgit.transport.URIish', '<init>', '^(file):([\\\\/](?![\\\\/])((?:[A-Za-z]:)?[\\\\/]?(?:(?:[^\\\\/]+[\\\\/]+)*[^\\\\/]+[\\\\/]*)))$', 'http://lusr\\example:wtf@1.2.3.4:80/D:\\x')",[22214]
"('URIish.java', 'org.eclipse.jgit.transport.URIish', '<init>', '^([a-z][a-z0-9+-]+)://(?:(?:([^/:@]+)(?::([^\\\\/]+))?@)?((?:[^\\\\/:]+)|(?:\\[[0-9a-f:]+\\]))(?::(\\d+))?((?:/~(?:[^\\\\/]+))?[\\\\/]))?(.+)?$', 'D:\\m y')","[68205, 68320]"
"('URIish.java', 'org.eclipse.jgit.transport.URIish', '<init>', '^(?:([^/:@]+)(?::([^\\\\/]+))?@)?([^\\\\/:]{2,}):([\\\\/](?:(?:[^\\\\/]+[\\\\/]+)*[^\\\\/]+[\\\\/]*))$', '/.git')",[66119]
"('URIish.java', 'org.eclipse.jgit.transport.URIish', '<init>', '^([a-z][a-z0-9+-]+)://(?:(?:([^/:@]+)(?::([^\\\\/]+))?@)?((?:[^\\\\/:]+)|(?:\\[[0-9a-f:]+\\]))(?::(\\d+))?((?:/~(?:[^\\\\/]+))?[\\\\/]))?(.+)?$', 'http://me:wtf@[::1]:1234/D:/x')",[20144]
"('URIish.java', 'org.eclipse.jgit.transport.URIish', '<init>', '^([a-z][a-z0-9+-]+)://(?:(?:([^/:@]+)(?::([^\\\\/]+))?@)?((?:[^\\\\/:]+)|(?:\\[[0-9a-f:]+\\]))(?::(\\d+))?((?:/~(?:[^\\\\/]+))?[\\\\/]))?(.+)?$', 'ssh+git://lusr\\example:wtf@example.com:1234//')",[17078]
"('Description.java', 'org.junit.runner.Description', 'methodAndClassNamePatternGroupOrDefault', '([\\s\\S]*)\\((.*)\\)', 'testVerySimpleWildcardCase0[OldRule? true](org.eclipse.jgit.ignore.IgnoreRuleSpecialCasesTest)')","[151203, 158287]"
"('Description.java', 'org.junit.runner.Description', 'methodAndClassNamePatternGroupOrDefault', '([\\s\\S]*)\\((.*)\\)', 'testUploadPack(org.eclipse.jgit.transport.RemoteConfigTest)')","[1667, 2704]"
"('Description.java', 'org.junit.runner.Description', 'methodAndClassNamePatternGroupOrDefault', '([\\s\\S]*)\\((.*)\\)', 'testParseEncoding_Accept_Latin_One_AsISO8859_1(org.eclipse.jgit.util.RawParseUtilsTest)')","[183637, 183703]"
"('Description.java', 'org.junit.runner.Description', 'methodAndClassNamePatternGroupOrDefault', '([\\s\\S]*)\\((.*)\\)', 'testInvalidCommitInvalidAuthor2(org.eclipse.jgit.lib.ObjectCheckerTest)')","[121742, 123865]"
"('Description.java', 'org.junit.runner.Description', 'methodAndClassNamePatternGroupOrDefault', '([\\s\\S]*)\\((.*)\\)', 'repositoryWithNoSubmodules(org.eclipse.jgit.submodule.SubmoduleWalkTest)')","[108493, 108691]"
"('Description.java', 'org.junit.runner.Description', 'methodAndClassNamePatternGroupOrDefault', '([\\s\\S]*)\\((.*)\\)', 'testDeleteRecursiveEmptyDirectoriesOnlyButIsFile(org.eclipse.jgit.util.FileUtilTest)')","[176638, 176980]"
"('URIish.java', 'org.eclipse.jgit.transport.URIish', '<init>', '^(file):([\\\\/](?![\\\\/])((?:[A-Za-z]:)?[\\\\/]?(?:(?:[^\\\\/]+[\\\\/]+)*[^\\\\/]+[\\\\/]*)))$', 'ssh+git://lusr\\example:wtf@1.2.3.4:1234/D:\\x')",[17584]
"('Description.java', 'org.junit.runner.Description', 'methodAndClassNamePatternGroupOrDefault', '([\\s\\S]*)\\((.*)\\)', 'testType_Replace(org.eclipse.jgit.diff.EditTest)')","[99892, 100233]"
"('Description.java', 'org.junit.runner.Description', 'methodAndClassNamePatternGroupOrDefault', '([\\s\\S]*)\\((.*)\\)', 'org.eclipse.jgit.util.QuotedStringGitPathStyleTest')","[177382, 178265]"
"('URIish.java', 'org.eclipse.jgit.transport.URIish', '<init>', '^(file):([\\\\/](?![\\\\/])((?:[A-Za-z]:)?[\\\\/]?(?:(?:[^\\\\/]+[\\\\/]+)*[^\\\\/]+[\\\\/]*)))$', 'ssh://example.com//')","[52664, 52848, 53768, 53952, 54872, 55056]"
"('URIish.java', 'org.eclipse.jgit.transport.URIish', '<init>', '^([a-z][a-z0-9+-]+)://(?:(?:([^/:@]+)(?::([^\\\\/]+))?@)?((?:[^\\\\/:]+)|(?:\\[[0-9a-f:]+\\]))(?::(\\d+))?((?:/~(?:[^\\\\/]+))?[\\\\/]))?(.+)?$', 'ssh://DOMAIN\\user:pass@example.com:33/some/p ath')","[67085, 67131]"
"('Description.java', 'org.junit.runner.Description', 'methodAndClassNamePatternGroupOrDefault', '([\\s\\S]*)\\((.*)\\)', 'testRefsChangedStackOverflow(org.eclipse.jgit.internal.storage.file.RefDirectoryTest)')","[258085, 259276]"
"('URIish.java', 'org.eclipse.jgit.transport.URIish', '<init>', '^(file):([\\\\/](?![\\\\/])((?:[A-Za-z]:)?[\\\\/]?(?:(?:[^\\\\/]+[\\\\/]+)*[^\\\\/]+[\\\\/]*)))$', 'https://me@example.com:80//abc')",[36334]
"('URIish.java', 'org.eclipse.jgit.transport.URIish', '<init>', '^([a-z][a-z0-9+-]+)://(?:(?:([^/:@]+)(?::([^\\\\/]+))?@)?((?:[^\\\\/:]+)|(?:\\[[0-9a-f:]+\\]))(?::(\\d+))?((?:/~(?:[^\\\\/]+))?[\\\\/]))?(.+)?$', 'file:///tmp/jgit_test_8292165206576585499_tmp/tmp_5546200320806045825/.git/')",[243202]
"('URIish.java', 'org.eclipse.jgit.transport.URIish', '<init>', '^([a-z][a-z0-9+-]+)://(?:(?:([^/:@]+)(?::([^\\\\/]+))?@)?((?:[^\\\\/:]+)|(?:\\[[0-9a-f:]+\\]))(?::(\\d+))?((?:/~(?:[^\\\\/]+))?[\\\\/]))?(.+)?$', 'http://l usr\\example.com@1.2.3.4:80//abc')",[34517]
"('URIish.java', 'org.eclipse.jgit.transport.URIish', '<init>', '^([a-z][a-z0-9+-]+)://(?:(?:([^/:@]+)(?::([^\\\\/]+))?@)?((?:[^\\\\/:]+)|(?:\\[[0-9a-f:]+\\]))(?::(\\d+))?((?:/~(?:[^\\\\/]+))?[\\\\/]))?(.+)?$', 'ssh+git://l usr\\example.com:wtf@[::1]:1234/D:\\x')",[16848]
"('Description.java', 'org.junit.runner.Description', 'methodAndClassNamePatternGroupOrDefault', '([\\s\\S]*)\\((.*)\\)', 'testLowerGroupCase1[OldRule? false](org.eclipse.jgit.ignore.IgnoreRuleSpecialCasesTest)')","[146513, 153618]"
"('Description.java', 'org.junit.runner.Description', 'methodAndClassNamePatternGroupOrDefault', '([\\s\\S]*)\\((.*)\\)', 'testWritePack2(org.eclipse.jgit.internal.storage.file.PackWriterTest)')","[251344, 251794]"
"('Description.java', 'org.junit.runner.Description', 'methodAndClassNamePatternGroupOrDefault', '([\\s\\S]*)\\((.*)\\)', 'testGetRefs_DiscoversDeletedLoose5(org.eclipse.jgit.internal.storage.file.RefDirectoryTest)')","[258358, 259562]"
"('Description.java', 'org.junit.runner.Description', 'methodAndClassNamePatternGroupOrDefault', '([\\s\\S]*)\\((.*)\\)', 'testEntryFileMode(org.eclipse.jgit.treewalk.AbstractTreeIteratorTest)')","[134471, 134622]"
"('Description.java', 'org.junit.runner.Description', 'methodAndClassNamePatternGroupOrDefault', '([\\s\\S]*)\\((.*)\\)', 'getRemoteTrackingBranchShouldHandleOtherMapping(org.eclipse.jgit.lib.BranchConfigTest)')","[120562, 120737]"
"('Description.java', 'org.junit.runner.Description', 'methodAndClassNamePatternGroupOrDefault', '([\\s\\S]*)\\((.*)\\)', 'testLowerGroupCase3[OldRule? false](org.eclipse.jgit.ignore.IgnoreRuleSpecialCasesTest)')","[146559, 153664]"
"('URIish.java', 'org.eclipse.jgit.transport.URIish', '<init>', '^(file):([\\\\/](?![\\\\/])((?:[A-Za-z]:)?[\\\\/]?(?:(?:[^\\\\/]+[\\\\/]+)*[^\\\\/]+[\\\\/]*)))$', 'ssh+git://me@[::1]//abc')","[43510, 43694]"
"('Description.java', 'org.junit.runner.Description', 'methodAndClassNamePatternGroupOrDefault', '([\\s\\S]*)\\((.*)\\)', 'org.eclipse.jgit.util.ReadLinesTest')","[171755, 172036]"
"('URIish.java', 'org.eclipse.jgit.transport.URIish', '<init>', '^([a-z][a-z0-9+-]+)://(?:(?:([^/:@]+)(?::([^\\\\/]+))?@)?((?:[^\\\\/:]+)|(?:\\[[0-9a-f:]+\\]))(?::(\\d+))?((?:/~(?:[^\\\\/]+))?[\\\\/]))?(.+)?$', 'http://everyones.loves.git/u/2')","[71901, 72029, 72308, 72620, 72793, 72841, 72939, 72987]"
"('Description.java', 'org.junit.runner.Description', 'methodAndClassNamePatternGroupOrDefault', '([\\s\\S]*)\\((.*)\\)', 'testReadLines_mixed(org.eclipse.jgit.util.ReadLinesTest)')","[171839, 171969]"
"('Description.java', 'org.junit.runner.Description', 'methodAndClassNamePatternGroupOrDefault', '([\\s\\S]*)\\((.*)\\)', 'testMissingString(org.eclipse.jgit.nls.TranslationBundleTest)')","[78, 404]"
"('Description.java', 'org.junit.runner.Description', 'methodAndClassNamePatternGroupOrDefault', '([\\s\\S]*)\\((.*)\\)', 'testTwoRevisions(org.eclipse.jgit.api.BlameCommandTest)')","[244747, 245143]"
"('Description.java', 'org.junit.runner.Description', 'methodAndClassNamePatternGroupOrDefault', '([\\s\\S]*)\\((.*)\\)', 'test5_FromString(org.eclipse.jgit.lib.AbbreviatedObjectIdTest)')","[114662, 115204]"
"('Description.java', 'org.junit.runner.Description', 'methodAndClassNamePatternGroupOrDefault', '([\\s\\S]*)\\((.*)\\)', 'testWithPostOrder_NoEnterSubtree(org.eclipse.jgit.treewalk.PostOrderTreeWalkTest)')","[135228, 135359]"
"('URIish.java', 'org.eclipse.jgit.transport.URIish', '<init>', '^([a-z][a-z0-9+-]+)://(?:(?:([^/:@]+)(?::([^\\\\/]+))?@)?((?:[^\\\\/:]+)|(?:\\[[0-9a-f:]+\\]))(?::(\\d+))?((?:/~(?:[^\\\\/]+))?[\\\\/]))?(.+)?$', 'https://1.2.3.4/D:/x')","[63083, 63267, 64187, 64371, 65291, 65498]"
"('ChangeIdUtil.java', 'org.eclipse.jgit.util.ChangeIdUtil', 'indexOfFirstFooterLine', '(^[a-zA-Z0-9-]+:(?!//).*$)', 'Another footer line')",[215579]
"('Description.java', 'org.junit.runner.Description', 'methodAndClassNamePatternGroupOrDefault', '([\\s\\S]*)\\((.*)\\)', 'shouldListModificationBetweenTwoCommits(org.eclipse.jgit.diff.DiffEntryTest)')","[95341, 95597]"
"('Description.java', 'org.junit.runner.Description', 'methodAndClassNamePatternGroupOrDefault', '([\\s\\S]*)\\((.*)\\)', 'testPrintGroupCase3(org.eclipse.jgit.fnmatch.FileNameMatcherTest)')","[103036, 106393]"
"('Description.java', 'org.junit.runner.Description', 'methodAndClassNamePatternGroupOrDefault', '([\\s\\S]*)\\((.*)\\)', 'testANY_DIFF_IdentityClone(org.eclipse.jgit.treewalk.filter.TreeFilterTest)')","[138549, 138701]"
"('Description.java', 'org.junit.runner.Description', 'methodAndClassNamePatternGroupOrDefault', '([\\s\\S]*)\\((.*)\\)', 'testCollapseFanoutAfterMerge(org.eclipse.jgit.notes.NoteMapMergerTest)')","[199605, 199964]"
"('Description.java', 'org.junit.runner.Description', 'methodAndClassNamePatternGroupOrDefault', '([\\s\\S]*)\\((.*)\\)', 'annotatedTag_objectNotPruned(org.eclipse.jgit.internal.storage.file.GcTagTest)')","[256974, 257017]"
"('Description.java', 'org.junit.runner.Description', 'methodAndClassNamePatternGroupOrDefault', '([\\s\\S]*)\\((.*)\\)', 'testSpaceGroupCase3[OldRule? false](org.eclipse.jgit.ignore.IgnoreRuleSpecialCasesTest)')","[147065, 154170]"
"('Description.java', 'org.junit.runner.Description', 'methodAndClassNamePatternGroupOrDefault', '([\\s\\S]*)\\((.*)\\)', 'testSaveAddURI(org.eclipse.jgit.transport.RemoteConfigTest)')","[1751, 2792]"
"('URIish.java', 'org.eclipse.jgit.transport.URIish', '<init>', '^(file):([\\\\/](?![\\\\/])((?:[A-Za-z]:)?[\\\\/]?(?:(?:[^\\\\/]+[\\\\/]+)*[^\\\\/]+[\\\\/]*)))$', 'file:///tmp/jgit_test_8673060127327244441_tmp/tmp_6002186741684854096.git/')","[210462, 210517]"
"('FastIgnoreRule.java', 'org.eclipse.jgit.ignore.FastIgnoreRule', 'isMatch', '.r[a-c]', 'srb')",[144731]
"('URIish.java', 'org.eclipse.jgit.transport.URIish', '<init>', '^(file):([\\\\/](?![\\\\/])((?:[A-Za-z]:)?[\\\\/]?(?:(?:[^\\\\/]+[\\\\/]+)*[^\\\\/]+[\\\\/]*)))$', 'https://me@example.com/D:/x')","[49444, 49628]"
"('Description.java', 'org.junit.runner.Description', 'methodAndClassNamePatternGroupOrDefault', '([\\s\\S]*)\\((.*)\\)', 'test002_NewIdent(org.eclipse.jgit.lib.T0001_PersonIdentTest)')","[127633, 127718]"
"('URIish.java', 'org.eclipse.jgit.transport.URIish', '<init>', '^(file):([\\\\/](?![\\\\/])((?:[A-Za-z]:)?[\\\\/]?(?:(?:[^\\\\/]+[\\\\/]+)*[^\\\\/]+[\\\\/]*)))$', 'ssh+git://lusr\\example:wtf@1.2.3.4:80//')",[17630]
"('Description.java', 'org.junit.runner.Description', 'methodAndClassNamePatternGroupOrDefault', '([\\s\\S]*)\\((.*)\\)', 'testValidPosixTree(org.eclipse.jgit.lib.ObjectCheckerTest)')","[121112, 123205]"
"('URIish.java', 'org.eclipse.jgit.transport.URIish', '<init>', '^([a-z][a-z0-9+-]+)://(?:(?:([^/:@]+)(?::([^\\\\/]+))?@)?((?:[^\\\\/:]+)|(?:\\[[0-9a-f:]+\\]))(?::(\\d+))?((?:/~(?:[^\\\\/]+))?[\\\\/]))?(.+)?$', 'http://l usr\\example.com:wtf@example.com:80/D:\\x')",[20742]
"('URIish.java', 'org.eclipse.jgit.transport.URIish', '<init>', '^([a-z][a-z0-9+-]+)://(?:(?:([^/:@]+)(?::([^\\\\/]+))?@)?((?:[^\\\\/:]+)|(?:\\[[0-9a-f:]+\\]))(?::(\\d+))?((?:/~(?:[^\\\\/]+))?[\\\\/]))?(.+)?$', 'ssh+git://l usr\\example.com:wtf@example.com:1234/D:\\x')",[16112]
"('URIish.java', 'org.eclipse.jgit.transport.URIish', '<init>', '^(file):([\\\\/](?![\\\\/])((?:[A-Za-z]:)?[\\\\/]?(?:(?:[^\\\\/]+[\\\\/]+)*[^\\\\/]+[\\\\/]*)))$', 'ssh://me:wtf@1.2.3.4:80/D:/x')",[8955]
"('URIish.java', 'org.eclipse.jgit.transport.URIish', '<init>', '^(file):([\\\\/](?![\\\\/])((?:[A-Za-z]:)?[\\\\/]?(?:(?:[^\\\\/]+[\\\\/]+)*[^\\\\/]+[\\\\/]*)))$', 'ssh+git://l usr\\example.com@[::1]:1234/D:/x')",[31412]
"('URIish.java', 'org.eclipse.jgit.transport.URIish', '<init>', '^(?:([^/:@]+)(?::([^\\\\/]+))?@)?([^\\\\/:]{2,}):([\\\\/](?:(?:[^\\\\/]+[\\\\/]+)*[^\\\\/]+[\\\\/]*))$', '/tmp/jgit_test_4002911052512723791_tmp/tmp_1346628727612174896.git')","[78669, 78844]"
"('FastIgnoreRule.java', 'org.eclipse.jgit.ignore.FastIgnoreRule', 'isMatch', '[\\p{javaLetter}]', 'ö')",[161070]
"('Description.java', 'org.junit.runner.Description', 'methodAndClassNamePatternGroupOrDefault', '([\\s\\S]*)\\((.*)\\)', 'testVerySimplePatternCase4(org.eclipse.jgit.fnmatch.FileNameMatcherTest)')","[101944, 105249]"
"('Description.java', 'org.junit.runner.Description', 'methodAndClassNamePatternGroupOrDefault', '([\\s\\S]*)\\((.*)\\)', 'testFourLineBlanks(org.eclipse.jgit.util.RawParseUtils_LineMapTest)')","[179169, 179278]"
"('Description.java', 'org.junit.runner.Description', 'methodAndClassNamePatternGroupOrDefault', '([\\s\\S]*)\\((.*)\\)', 'testForbiddenNamesOnWindowsEgCon(org.eclipse.jgit.lib.DirCacheCheckoutMaliciousPathTest)')","[111660, 112544]"
"('Description.java', 'org.junit.runner.Description', 'methodAndClassNamePatternGroupOrDefault', '([\\s\\S]*)\\((.*)\\)', 'testNoLeadingOrTrailingDot(org.eclipse.jgit.lib.ValidRefNameTest)')","[118467, 118830]"
"('URIish.java', 'org.eclipse.jgit.transport.URIish', '<init>', '^(file):([\\\\/](?![\\\\/])((?:[A-Za-z]:)?[\\\\/]?(?:(?:[^\\\\/]+[\\\\/]+)*[^\\\\/]+[\\\\/]*)))$', 'ssh://[::1]//')","[53400, 53584, 54504, 54688, 55608, 55792]"
"('Description.java', 'org.junit.runner.Description', 'methodAndClassNamePatternGroupOrDefault', '([\\s\\S]*)\\((.*)\\)', 'testExact(org.eclipse.jgit.treewalk.filter.PathFilterGroupTest)')","[138888, 139039]"
"('Description.java', 'org.junit.runner.Description', 'methodAndClassNamePatternGroupOrDefault', '([\\s\\S]*)\\((.*)\\)', 'testFilterHidesPrivate(org.eclipse.jgit.transport.ReceivePackAdvertiseRefsHookTest)')","[765, 940]"
"('Description.java', 'org.junit.runner.Description', 'methodAndClassNamePatternGroupOrDefault', '([\\s\\S]*)\\((.*)\\)', 'testUsingUnknownBlobFails(org.eclipse.jgit.transport.ReceivePackAdvertiseRefsHookTest)')","[702, 874]"
"('Description.java', 'org.junit.runner.Description', 'methodAndClassNamePatternGroupOrDefault', '([\\s\\S]*)\\((.*)\\)', 'org.eclipse.jgit.lib.T0001_PersonIdentTest')","[127612, 127807]"
"('Description.java', 'org.junit.runner.Description', 'methodAndClassNamePatternGroupOrDefault', '([\\s\\S]*)\\((.*)\\)', 'testACommitWithSubjectBodyBugEmptyLineAndSob(org.eclipse.jgit.util.ChangeIdUtilTest)')","[185987, 186754]"
"('URIish.java', 'org.eclipse.jgit.transport.URIish', '<init>', '^(file):([\\\\/](?![\\\\/])((?:[A-Za-z]:)?[\\\\/]?(?:(?:[^\\\\/]+[\\\\/]+)*[^\\\\/]+[\\\\/]*)))$', '/tmp/jgit_test_5112799029350695586_tmp/tmp_3931614780195894737.git')",[74708]
"('URIish.java', 'org.eclipse.jgit.transport.URIish', '<init>', '^([a-z][a-z0-9+-]+)://(?:(?:([^/:@]+)(?::([^\\\\/]+))?@)?((?:[^\\\\/:]+)|(?:\\[[0-9a-f:]+\\]))(?::(\\d+))?((?:/~(?:[^\\\\/]+))?[\\\\/]))?(.+)?$', 'http://l usr\\example.com:wtf@1.2.3.4:80//abc')",[21018]
"('URIish.java', 'org.eclipse.jgit.transport.URIish', '<init>', '^(file):([\\\\/](?![\\\\/])((?:[A-Za-z]:)?[\\\\/]?(?:(?:[^\\\\/]+[\\\\/]+)*[^\\\\/]+[\\\\/]*)))$', 'http://me@1.2.3.4:1234/D:\\x')",[33298]
"('Description.java', 'org.junit.runner.Description', 'methodAndClassNamePatternGroupOrDefault', '([\\s\\S]*)\\((.*)\\)', 'testParse_NoMessage(org.eclipse.jgit.revwalk.RevTagParseTest)')","[80123, 80527]"
"('URIish.java', 'org.eclipse.jgit.transport.URIish', '<init>', '^([a-z][a-z0-9+-]+)://(?:(?:([^/:@]+)(?::([^\\\\/]+))?@)?((?:[^\\\\/:]+)|(?:\\[[0-9a-f:]+\\]))(?::(\\d+))?((?:/~(?:[^\\\\/]+))?[\\\\/]))?(.+)?$', 'ssh+git://l usr\\example.com:wtf@1.2.3.4:80/D:/x')",[16618]
"('URIish.java', 'org.eclipse.jgit.transport.URIish', '<init>', '^(file):([\\\\/](?![\\\\/])((?:[A-Za-z]:)?[\\\\/]?(?:(?:[^\\\\/]+[\\\\/]+)*[^\\\\/]+[\\\\/]*)))$', 'https://[::1]/D:/x')","[63428, 63612, 64532, 64716, 65659, 65843]"
"('Description.java', 'org.junit.runner.Description', 'methodAndClassNamePatternGroupOrDefault', '([\\s\\S]*)\\((.*)\\)', 'testDiffCached(org.eclipse.jgit.api.DiffCommandTest)')","[234413, 234543]"
"('URIish.java', 'org.eclipse.jgit.transport.URIish', '<init>', '^([a-z][a-z0-9+-]+)://(?:(?:([^/:@]+)(?::([^\\\\/]+))?@)?((?:[^\\\\/:]+)|(?:\\[[0-9a-f:]+\\]))(?::(\\d+))?((?:/~(?:[^\\\\/]+))?[\\\\/]))?(.+)?$', 'https://me@1.2.3.4:80/D:/x')",[36771]
"('Description.java', 'org.junit.runner.Description', 'methodAndClassNamePatternGroupOrDefault', '([\\s\\S]*)\\((.*)\\)', 'testCloseDuringClose(org.eclipse.jgit.util.io.UnionInputStreamTest)')","[175084, 175301]"
"('URIish.java', 'org.eclipse.jgit.transport.URIish', '<init>', '^([a-z][a-z0-9+-]+)://(?:(?:([^/:@]+)(?::([^\\\\/]+))?@)?((?:[^\\\\/:]+)|(?:\\[[0-9a-f:]+\\]))(?::(\\d+))?((?:/~(?:[^\\\\/]+))?[\\\\/]))?(.+)?$', 'https://l usr\\example.com@1.2.3.4/D:\\x')","[50985, 51169]"
"('Description.java', 'org.junit.runner.Description', 'methodAndClassNamePatternGroupOrDefault', '([\\s\\S]*)\\((.*)\\)', 'testInvalidCommitInvalidAuthor5(org.eclipse.jgit.lib.ObjectCheckerTest)')","[121805, 123931]"
"('Description.java', 'org.junit.runner.Description', 'methodAndClassNamePatternGroupOrDefault', '([\\s\\S]*)\\((.*)\\)', 'testOnlyOption_f1_13_e(org.eclipse.jgit.api.CommitOnlyTest)')","[237623, 239724]"
"('Description.java', 'org.junit.runner.Description', 'methodAndClassNamePatternGroupOrDefault', '([\\s\\S]*)\\((.*)\\)', 'testPullLocalConflict(org.eclipse.jgit.api.PullCommandTest)')","[220693, 221035]"
"('Description.java', 'org.junit.runner.Description', 'methodAndClassNamePatternGroupOrDefault', '([\\s\\S]*)\\((.*)\\)', 'testWriteReadTree(org.eclipse.jgit.dircache.DirCacheTreeTest)')","[91442, 91571]"
"('FastIgnoreRule.java', 'org.eclipse.jgit.ignore.FastIgnoreRule', 'isMatch', '[v-z]', 'x')","[165401, 165428, 165455, 165482, 165509, 165536, 165590, 165644, 165698, 165752, 165806, 165860, 165887, 165914, 165941, 165968, 166022, 166076, 166157, 166238, 166265, 166292, 166319, 166346, 166373, 166400, 166427, 166454, 166481, 166508, 166535, 166562, 166589, 166616, 166643, 166670, 166697, 166724, 166751, 166778, 166805, 166832, 166859, 166886, 166913, 166940, 166967, 166994]"
"('ChangeIdUtil.java', 'org.eclipse.jgit.util.ChangeIdUtil', 'indexOfFirstFooterLine', '(^[a-zA-Z0-9-]+:(?!//).*$)', 'more text')",[190871]
"('URIish.java', 'org.eclipse.jgit.transport.URIish', '<init>', '^([a-z][a-z0-9+-]+)://(?:(?:([^/:@]+)(?::([^\\\\/]+))?@)?((?:[^\\\\/:]+)|(?:\\[[0-9a-f:]+\\]))(?::(\\d+))?((?:/~(?:[^\\\\/]+))?[\\\\/]))?(.+)?$', 'file:///tmp/jgit_test_8601326659756184872_tmp/tmp_6509933305582231475')","[201372, 201434, 201494]"
"('Description.java', 'org.junit.runner.Description', 'methodAndClassNamePatternGroupOrDefault', '([\\s\\S]*)\\((.*)\\)', 'org.eclipse.jgit.patch.PatchTest')","[196058, 196382]"
"('Description.java', 'org.junit.runner.Description', 'methodAndClassNamePatternGroupOrDefault', '([\\s\\S]*)\\((.*)\\)', 'testStandardFormat_SmallObject_TrailingGarbage(org.eclipse.jgit.internal.storage.file.UnpackedObjectTest)')","[255085, 255407]"
"('URIish.java', 'org.eclipse.jgit.transport.URIish', '<init>', '^([a-z][a-z0-9+-]+)://(?:(?:([^/:@]+)(?::([^\\\\/]+))?@)?((?:[^\\\\/:]+)|(?:\\[[0-9a-f:]+\\]))(?::(\\d+))?((?:/~(?:[^\\\\/]+))?[\\\\/]))?(.+)?$', 'file:///tmp/jgit_test_2496960902150233223_tmp/tmp_3983418304402812009/.git/')",[134019]
"('Description.java', 'org.junit.runner.Description', 'methodAndClassNamePatternGroupOrDefault', '([\\s\\S]*)\\((.*)\\)', 'multiplePathsNoMerge(org.eclipse.jgit.api.NameRevCommandTest)')","[241994, 242226]"
"('Description.java', 'org.junit.runner.Description', 'methodAndClassNamePatternGroupOrDefault', '([\\s\\S]*)\\((.*)\\)', 'testReadString_LenHELO(org.eclipse.jgit.transport.PacketLineInTest)')","[18376, 19581]"
"('Description.java', 'org.junit.runner.Description', 'methodAndClassNamePatternGroupOrDefault', '([\\s\\S]*)\\((.*)\\)', 'testHeadReflog(org.eclipse.jgit.api.ReflogCommandTest)')","[240581, 240647]"
"('Description.java', 'org.junit.runner.Description', 'methodAndClassNamePatternGroupOrDefault', '([\\s\\S]*)\\((.*)\\)', 'testStandardFormat_NegativeSize(org.eclipse.jgit.internal.storage.file.UnpackedObjectTest)')","[255064, 255385]"
"('FastIgnoreRule.java', 'org.eclipse.jgit.ignore.FastIgnoreRule', 'isMatch', '.rc', 'src')","[144353, 144380, 144434, 144488, 144515]"
"('URIish.java', 'org.eclipse.jgit.transport.URIish', '<init>', '^(file):([\\\\/](?![\\\\/])((?:[A-Za-z]:)?[\\\\/]?(?:(?:[^\\\\/]+[\\\\/]+)*[^\\\\/]+[\\\\/]*)))$', 'ssh+git://me@example.com:1234/D:\\x')",[29618]
"('Description.java', 'org.junit.runner.Description', 'methodAndClassNamePatternGroupOrDefault', '([\\s\\S]*)\\((.*)\\)', 'testEntryPath(org.eclipse.jgit.treewalk.AbstractTreeIteratorTest)')","[134492, 134644]"
"('Description.java', 'org.junit.runner.Description', 'methodAndClassNamePatternGroupOrDefault', '([\\s\\S]*)\\((.*)\\)', 'testDetectUnmergedPaths(org.eclipse.jgit.dircache.DirCacheBasicTest)')","[89941, 90176]"
"('URIish.java', 'org.eclipse.jgit.transport.URIish', '<init>', '^(file):([\\\\/](?![\\\\/])((?:[A-Za-z]:)?[\\\\/]?(?:(?:[^\\\\/]+[\\\\/]+)*[^\\\\/]+[\\\\/]*)))$', 'http://[::1]//')","[60024, 60208, 61128, 61312, 62232, 62416]"
"('URIish.java', 'org.eclipse.jgit.transport.URIish', '<init>', '^(file):([\\\\/](?![\\\\/])((?:[A-Za-z]:)?[\\\\/]?(?:(?:[^\\\\/]+[\\\\/]+)*[^\\\\/]+[\\\\/]*)))$', 'git://abc.git')",[7314]
"('Description.java', 'org.junit.runner.Description', 'methodAndClassNamePatternGroupOrDefault', '([\\s\\S]*)\\((.*)\\)', 'testCheckoutAllPaths(org.eclipse.jgit.api.CheckoutCommandTest)')","[206849, 207360]"
"('URIish.java', 'org.eclipse.jgit.transport.URIish', '<init>', '^(file):([\\\\/](?![\\\\/])((?:[A-Za-z]:)?[\\\\/]?(?:(?:[^\\\\/]+[\\\\/]+)*[^\\\\/]+[\\\\/]*)))$', 'ssh+git://me:wtf@1.2.3.4:80//abc')",[14741]
"('Description.java', 'org.junit.runner.Description', 'methodAndClassNamePatternGroupOrDefault', '([\\s\\S]*)\\((.*)\\)', 'org.eclipse.jgit.revwalk.AlwaysEmptyRevQueueTest')","[82728, 83005]"
"('Description.java', 'org.junit.runner.Description', 'methodAndClassNamePatternGroupOrDefault', '([\\s\\S]*)\\((.*)\\)', 'testCopyConstructor(org.eclipse.jgit.fnmatch.FileNameMatcherTest)')","[101482, 104765]"
"('Description.java', 'org.junit.runner.Description', 'methodAndClassNamePatternGroupOrDefault', '([\\s\\S]*)\\((.*)\\)', 'testReadFromInserterLargerObjects(org.eclipse.jgit.internal.storage.dfs.DfsInserterTest)')","[246108, 246217]"
"('URIish.java', 'org.eclipse.jgit.transport.URIish', '<init>', '^([a-z][a-z0-9+-]+)://(?:(?:([^/:@]+)(?::([^\\\\/]+))?@)?((?:[^\\\\/:]+)|(?:\\[[0-9a-f:]+\\]))(?::(\\d+))?((?:/~(?:[^\\\\/]+))?[\\\\/]))?(.+)?$', 'ssh://me@[::1]:1234//abc')",[26910]
"('Description.java', 'org.junit.runner.Description', 'methodAndClassNamePatternGroupOrDefault', '([\\s\\S]*)\\((.*)\\)', 'testClean(org.eclipse.jgit.api.CleanCommandTest)')","[216954, 217102]"
"('URIish.java', 'org.eclipse.jgit.transport.URIish', '<init>', '^(file):([\\\\/](?![\\\\/])((?:[A-Za-z]:)?[\\\\/]?(?:(?:[^\\\\/]+[\\\\/]+)*[^\\\\/]+[\\\\/]*)))$', 'https://l usr\\example.com@[::1]//')","[51192, 51376]"
"('URIish.java', 'org.eclipse.jgit.transport.URIish', '<init>', '^(?:([^/:@]+)(?::([^\\\\/]+))?@)?((?:[^\\\\/:]+)|(?:\\[[0-9a-f:]+\\])):((?:(?:/~(?:[^\\\\/]+))[\\\\/])?(?:(?:[^\\\\/]+[\\\\/]+)*[^\\\\/]+[\\\\/]*))$', '/tmp/jgit_test_7106031566354756827_tmp/tmp_4400850410867597182')","[228809, 228944, 229101]"
"('Description.java', 'org.junit.runner.Description', 'methodAndClassNamePatternGroupOrDefault', '([\\s\\S]*)\\((.*)\\)', 'testDirCacheSavesObjects(org.eclipse.jgit.internal.storage.file.GcDirCacheSavesObjectsTest)')","[254733, 254777]"
"('URIish.java', 'org.eclipse.jgit.transport.URIish', '<init>', '^([a-z][a-z0-9+-]+)://(?:(?:([^/:@]+)(?::([^\\\\/]+))?@)?((?:[^\\\\/:]+)|(?:\\[[0-9a-f:]+\\]))(?::(\\d+))?((?:/~(?:[^\\\\/]+))?[\\\\/]))?(.+)?$', 'http://me@[::1]/D:/x')","[46891, 47075]"
"('URIish.java', 'org.eclipse.jgit.transport.URIish', '<init>', '^([a-z][a-z0-9+-]+)://(?:(?:([^/:@]+)(?::([^\\\\/]+))?@)?((?:[^\\\\/:]+)|(?:\\[[0-9a-f:]+\\]))(?::(\\d+))?((?:/~(?:[^\\\\/]+))?[\\\\/]))?(.+)?$', 'ssh://lusr\\example:wtf@1.2.3.4:1234/D:/x')",[12869]
"('URIish.java', 'org.eclipse.jgit.transport.URIish', '<init>', '^([a-z][a-z0-9+-]+)://(?:(?:([^/:@]+)(?::([^\\\\/]+))?@)?((?:[^\\\\/:]+)|(?:\\[[0-9a-f:]+\\]))(?::(\\d+))?((?:/~(?:[^\\\\/]+))?[\\\\/]))?(.+)?$', 'ssh://example.com//abc')","[52733, 52917, 53837, 54021, 54941, 55125]"
"('Description.java', 'org.junit.runner.Description', 'methodAndClassNamePatternGroupOrDefault', '([\\s\\S]*)\\((.*)\\)', 'testReadACK_Invalid3(org.eclipse.jgit.transport.PacketLineInTest)')","[18485, 19716]"
"('URIish.java', 'org.eclipse.jgit.transport.URIish', '<init>', '^([a-z][a-z0-9+-]+)://(?:(?:([^/:@]+)(?::([^\\\\/]+))?@)?((?:[^\\\\/:]+)|(?:\\[[0-9a-f:]+\\]))(?::(\\d+))?((?:/~(?:[^\\\\/]+))?[\\\\/]))?(.+)?$', 'ssh://l usr\\example.com@[::1]:1234//')",[28031]
"('Description.java', 'org.junit.runner.Description', 'methodAndClassNamePatternGroupOrDefault', '([\\s\\S]*)\\((.*)\\)', 'testFastForwardRebaseWithAutoStash(org.eclipse.jgit.api.RebaseCommandTest)')","[217333, 218806]"
"('URIish.java', 'org.eclipse.jgit.transport.URIish', '<init>', '^(file):([\\\\/](?![\\\\/])((?:[A-Za-z]:)?[\\\\/]?(?:(?:[^\\\\/]+[\\\\/]+)*[^\\\\/]+[\\\\/]*)))$', 'ssh://me@1.2.3.4//')","[39784, 39968]"
"('Description.java', 'org.junit.runner.Description', 'methodAndClassNamePatternGroupOrDefault', '([\\s\\S]*)\\((.*)\\)', 'test009_toString(org.eclipse.jgit.lib.ObjectIdTest)')","[130529, 130805]"
"('Description.java', 'org.junit.runner.Description', 'methodAndClassNamePatternGroupOrDefault', '([\\s\\S]*)\\((.*)\\)', 'testParseGitFileName_SrcFooC(org.eclipse.jgit.patch.FileHeaderTest)')","[195390, 195845]"
"('Description.java', 'org.junit.runner.Description', 'methodAndClassNamePatternGroupOrDefault', '([\\s\\S]*)\\((.*)\\)', 'testMerge_HeadMaster(org.eclipse.jgit.util.RefMapTest)')","[183972, 184444]"
"('Description.java', 'org.junit.runner.Description', 'methodAndClassNamePatternGroupOrDefault', '([\\s\\S]*)\\((.*)\\)', 'testListAllBranchesShouldNotDie(org.eclipse.jgit.api.BranchCommandTest)')","[227135, 227460]"
"('URIish.java', 'org.eclipse.jgit.transport.URIish', '<init>', '^([a-z][a-z0-9+-]+)://(?:(?:([^/:@]+)(?::([^\\\\/]+))?@)?((?:[^\\\\/:]+)|(?:\\[[0-9a-f:]+\\]))(?::(\\d+))?((?:/~(?:[^\\\\/]+))?[\\\\/]))?(.+)?$', 'ssh://lusr\\example@1.2.3.4:1234//')",[28767]
"('URIish.java', 'org.eclipse.jgit.transport.URIish', '<init>', '^([a-z][a-z0-9+-]+)://(?:(?:([^/:@]+)(?::([^\\\\/]+))?@)?((?:[^\\\\/:]+)|(?:\\[[0-9a-f:]+\\]))(?::(\\d+))?((?:/~(?:[^\\\\/]+))?[\\\\/]))?(.+)?$', 'ssh+git://l usr\\example.com:wtf@1.2.3.4:80//abc')",[16572]
"('ChangeIdUtil.java', 'org.eclipse.jgit.util.ChangeIdUtil', 'insertId', '^(Bug|Issue)[a-zA-Z0-9-]*:.*$', 'Signed-off-by: J Author <ja@example.com>')","[188208, 188466, 188646, 189106, 189261, 189390, 189571, 189752]"
"('URIish.java', 'org.eclipse.jgit.transport.URIish', '<init>', '^(file):([\\\\/](?![\\\\/])((?:[A-Za-z]:)?[\\\\/]?(?:(?:[^\\\\/]+[\\\\/]+)*[^\\\\/]+[\\\\/]*)))$', '/a/b/c//')",[70689]
"('Description.java', 'org.junit.runner.Description', 'methodAndClassNamePatternGroupOrDefault', '([\\s\\S]*)\\((.*)\\)', 'testInsertMinValue(org.eclipse.jgit.transport.LongMapTest)')","[75385, 75556]"
"('FastIgnoreRule.java', 'org.eclipse.jgit.ignore.FastIgnoreRule', 'isMatch', '.r[a-c]', '3rb')",[144866]
"('Description.java', 'org.junit.runner.Description', 'methodAndClassNamePatternGroupOrDefault', '([\\s\\S]*)\\((.*)\\)', 'testValidTree6(org.eclipse.jgit.lib.ObjectCheckerTest)')","[121301, 123403]"
"('Description.java', 'org.junit.runner.Description', 'methodAndClassNamePatternGroupOrDefault', '([\\s\\S]*)\\((.*)\\)', 'test004_isId(org.eclipse.jgit.lib.ObjectIdTest)')","[130613, 130893]"
"('Description.java', 'org.junit.runner.Description', 'methodAndClassNamePatternGroupOrDefault', '([\\s\\S]*)\\((.*)\\)', 'testAddA1Sub(org.eclipse.jgit.api.ApplyCommandTest)')","[223505, 223740]"
"('Description.java', 'org.junit.runner.Description', 'methodAndClassNamePatternGroupOrDefault', '([\\s\\S]*)\\((.*)\\)', 'testGetSlashSlashDotGitSlashHumanishName(org.eclipse.jgit.transport.URIishTest)')","[1129, 4332]"
"('URIish.java', 'org.eclipse.jgit.transport.URIish', '<init>', '^(file):([\\\\/](?![\\\\/])((?:[A-Za-z]:)?[\\\\/]?(?:(?:[^\\\\/]+[\\\\/]+)*[^\\\\/]+[\\\\/]*)))$', 'https://lusr\\example@1.2.3.4:1234//abc')",[38726]
"('URIish.java', 'org.eclipse.jgit.transport.URIish', '<init>', '^([a-z][a-z0-9+-]+)://(?:(?:([^/:@]+)(?::([^\\\\/]+))?@)?((?:[^\\\\/:]+)|(?:\\[[0-9a-f:]+\\]))(?::(\\d+))?((?:/~(?:[^\\\\/]+))?[\\\\/]))?(.+)?$', 'git://example.com/D:/m y')","[70528, 70574]"
"('URIish.java', 'org.eclipse.jgit.transport.URIish', '<init>', '^([a-z][a-z0-9+-]+)://(?:(?:([^/:@]+)(?::([^\\\\/]+))?@)?((?:[^\\\\/:]+)|(?:\\[[0-9a-f:]+\\]))(?::(\\d+))?((?:/~(?:[^\\\\/]+))?[\\\\/]))?(.+)?$', 'ssh://lusr\\example:wtf@example.com:1234//')",[12268]
"('Description.java', 'org.junit.runner.Description', 'methodAndClassNamePatternGroupOrDefault', '([\\s\\S]*)\\((.*)\\)', 'testAtEOF(org.eclipse.jgit.treewalk.EmptyTreeIteratorTest)')","[135563, 135690]"
"('FastIgnoreRule.java', 'org.eclipse.jgit.ignore.FastIgnoreRule', 'isMatch', '.r[a-c]', 'xrb')",[144893]
"('URIish.java', 'org.eclipse.jgit.transport.URIish', '<init>', '^(file):([\\\\/](?![\\\\/])((?:[A-Za-z]:)?[\\\\/]?(?:(?:[^\\\\/]+[\\\\/]+)*[^\\\\/]+[\\\\/]*)))$', 'file:///tmp/jgit_test_4386752617164971455_tmp/tmp_2049061224455897551/.git/')",[131943]
"('Description.java', 'org.junit.runner.Description', 'methodAndClassNamePatternGroupOrDefault', '([\\s\\S]*)\\((.*)\\)', 'testUTF8withBOM(org.eclipse.jgit.storage.file.FileBasedConfigTest)')","[194197, 194284]"
"('URIish.java', 'org.eclipse.jgit.transport.URIish', '<init>', '^([a-z][a-z0-9+-]+)://(?:(?:([^/:@]+)(?::([^\\\\/]+))?@)?((?:[^\\\\/:]+)|(?:\\[[0-9a-f:]+\\]))(?::(\\d+))?((?:/~(?:[^\\\\/]+))?[\\\\/]))?(.+)?$', 'ssh://l usr\\example.com@[::1]:1234/D:/x')",[28123]
"('Description.java', 'org.junit.runner.Description', 'methodAndClassNamePatternGroupOrDefault', '([\\s\\S]*)\\((.*)\\)', 'org.eclipse.jgit.notes.NoteMapTest')","[198988, 200441]"
"('Description.java', 'org.junit.runner.Description', 'methodAndClassNamePatternGroupOrDefault', '([\\s\\S]*)\\((.*)\\)', 'test2SideBranches(org.eclipse.jgit.revplot.PlotCommitListTest)')","[197192, 197518]"
"('Description.java', 'org.junit.runner.Description', 'methodAndClassNamePatternGroupOrDefault', '([\\s\\S]*)\\((.*)\\)', 'testNegationAllExceptJavaInSrcAndExceptChildDirInSrc(org.eclipse.jgit.ignore.IgnoreNodeTest)')","[140563, 140864]"
"('FastIgnoreRule.java', 'org.eclipse.jgit.ignore.FastIgnoreRule', 'isMatch', '[\\.a\\.].*[\\.a\\.]', 'aha')",[161096]
"('URIish.java', 'org.eclipse.jgit.transport.URIish', '<init>', '^([a-z][a-z0-9+-]+)://(?:(?:([^/:@]+)(?::([^\\\\/]+))?@)?((?:[^\\\\/:]+)|(?:\\[[0-9a-f:]+\\]))(?::(\\d+))?((?:/~(?:[^\\\\/]+))?[\\\\/]))?(.+)?$', 'ssh://lusr\\example:wtf@example.com:80/D:\\x')",[12710]
"('FastIgnoreRule.java', 'org.eclipse.jgit.ignore.FastIgnoreRule', 'isMatch', '[b-ce-e]', 'c')",[163466]
"('Description.java', 'org.junit.runner.Description', 'methodAndClassNamePatternGroupOrDefault', '([\\s\\S]*)\\((.*)\\)', 'testWordGroupCase5[OldRule? true](org.eclipse.jgit.ignore.IgnoreRuleSpecialCasesTest)')","[152445, 159529]"
"('Description.java', 'org.junit.runner.Description', 'methodAndClassNamePatternGroupOrDefault', '([\\s\\S]*)\\((.*)\\)', 'testModifyNL1(org.eclipse.jgit.api.ApplyCommandTest)')","[223442, 223674]"
"('Description.java', 'org.junit.runner.Description', 'methodAndClassNamePatternGroupOrDefault', '([\\s\\S]*)\\((.*)\\)', 'org.eclipse.jgit.treewalk.EmptyTreeIteratorTest')","[135542, 135823]"
"('URIish.java', 'org.eclipse.jgit.transport.URIish', '<init>', '^(file):([\\\\/](?![\\\\/])((?:[A-Za-z]:)?[\\\\/]?(?:(?:[^\\\\/]+[\\\\/]+)*[^\\\\/]+[\\\\/]*)))$', 'https://lusr\\example:wtf@1.2.3.4:80/D:/x')",[25480]
"('Description.java', 'org.junit.runner.Description', 'methodAndClassNamePatternGroupOrDefault', '([\\s\\S]*)\\((.*)\\)', 'testGetRefs_LooseOverridesPacked(org.eclipse.jgit.internal.storage.file.RefDirectoryTest)')","[257917, 259100]"
"('Description.java', 'org.junit.runner.Description', 'methodAndClassNamePatternGroupOrDefault', '([\\s\\S]*)\\((.*)\\)', 'testUIText(org.eclipse.jgit.nls.RootLocaleTest)')","[240, 536]"
"('Description.java', 'org.junit.runner.Description', 'methodAndClassNamePatternGroupOrDefault', '([\\s\\S]*)\\((.*)\\)', 'testOnlyOption_f1_5_d(org.eclipse.jgit.api.CommitOnlyTest)')","[236416, 238492]"
"('Description.java', 'org.junit.runner.Description', 'methodAndClassNamePatternGroupOrDefault', '([\\s\\S]*)\\((.*)\\)', 'testAbbreviatePackedBlob(org.eclipse.jgit.internal.storage.file.AbbreviationTest)')","[256806, 256894]"
"('Description.java', 'org.junit.runner.Description', 'methodAndClassNamePatternGroupOrDefault', '([\\s\\S]*)\\((.*)\\)', 'org.eclipse.jgit.api.CloneCommandTest')","[203687, 223385]"
"('Description.java', 'org.junit.runner.Description', 'methodAndClassNamePatternGroupOrDefault', '([\\s\\S]*)\\((.*)\\)', 'testOnlyOption_f1_7_f2_14_e(org.eclipse.jgit.api.CommitOnlyTest)')","[235912, 237964]"
"('Description.java', 'org.junit.runner.Description', 'methodAndClassNamePatternGroupOrDefault', '([\\s\\S]*)\\((.*)\\)', 'testWriteLine1(org.eclipse.jgit.diff.RawTextTest)')","[96472, 96684]"
"('URIish.java', 'org.eclipse.jgit.transport.URIish', '<init>', '^(file):([\\\\/](?![\\\\/])((?:[A-Za-z]:)?[\\\\/]?(?:(?:[^\\\\/]+[\\\\/]+)*[^\\\\/]+[\\\\/]*)))$', 'ssh+git://me@1.2.3.4:1234/D:\\x')",[29986]
"('URIish.java', 'org.eclipse.jgit.transport.URIish', '<init>', '^(file):([\\\\/](?![\\\\/])((?:[A-Za-z]:)?[\\\\/]?(?:(?:[^\\\\/]+[\\\\/]+)*[^\\\\/]+[\\\\/]*)))$', '/tmp/jgit_test_3729351677476967516_tmp/tmp_3631166462441270745/.git')","[228333, 228467]"
"('Description.java', 'org.junit.runner.Description', 'methodAndClassNamePatternGroupOrDefault', '([\\s\\S]*)\\((.*)\\)', 'testSingleLineMessagesWithSignedOffBy(org.eclipse.jgit.util.ChangeIdUtilTest)')","[185693, 186446]"
"('ChangeIdUtil.java', 'org.eclipse.jgit.util.ChangeIdUtil', 'indexOfFirstFooterLine', '(^[a-zA-Z0-9-]+:(?!//).*$)', 'This is conflicting')","[225360, 230718, 232007, 232855, 233051, 233370, 237056, 240228, 241914]"
"('URIish.java', 'org.eclipse.jgit.transport.URIish', '<init>', '^(file):([\\\\/](?![\\\\/])((?:[A-Za-z]:)?[\\\\/]?(?:(?:[^\\\\/]+[\\\\/]+)*[^\\\\/]+[\\\\/]*)))$', 'http://me:wtf@example.com:1234/D:/x')",[18835]
"('Description.java', 'org.junit.runner.Description', 'methodAndClassNamePatternGroupOrDefault', '([\\s\\S]*)\\((.*)\\)', 'testLowerGroupCase1[OldRule? true](org.eclipse.jgit.ignore.IgnoreRuleSpecialCasesTest)')","[150076, 157160]"
"('Description.java', 'org.junit.runner.Description', 'methodAndClassNamePatternGroupOrDefault', '([\\s\\S]*)\\((.*)\\)', 'resolvePreviousBranch(org.eclipse.jgit.lib.ReflogResolveTest)')","[126237, 126365]"
"('Description.java', 'org.junit.runner.Description', 'methodAndClassNamePatternGroupOrDefault', '([\\s\\S]*)\\((.*)\\)', 'testClear(org.eclipse.jgit.revwalk.FIFORevQueueTest)')","[85466, 85597]"
"('URIish.java', 'org.eclipse.jgit.transport.URIish', '<init>', '^(?:([^/:@]+)(?::([^\\\\/]+))?@)?((?:[^\\\\/:]+)|(?:\\[[0-9a-f:]+\\])):((?:(?:/~(?:[^\\\\/]+))[\\\\/])?(?:(?:[^\\\\/]+[\\\\/]+)*[^\\\\/]+[\\\\/]*))$', '/tmp/jgit_test_1958524625050925037_tmp/tmp_997803827191484605.git')",[9720]
"('URIish.java', 'org.eclipse.jgit.transport.URIish', '<init>', '^(file):([\\\\/](?![\\\\/])((?:[A-Za-z]:)?[\\\\/]?(?:(?:[^\\\\/]+[\\\\/]+)*[^\\\\/]+[\\\\/]*)))$', 'http://1.2.3.4/D:\\x')","[59794, 59978, 60898, 61082, 62002, 62186]"
"('URIish.java', 'org.eclipse.jgit.transport.URIish', '<init>', '^(file):([\\\\/](?![\\\\/])((?:[A-Za-z]:)?[\\\\/]?(?:(?:[^\\\\/]+[\\\\/]+)*[^\\\\/]+[\\\\/]*)))$', 'http://1.2.3.4//')","[59656, 59840, 60760, 60944, 61864, 62048]"
"('Description.java', 'org.junit.runner.Description', 'methodAndClassNamePatternGroupOrDefault', '([\\s\\S]*)\\((.*)\\)', 'org.eclipse.jgit.internal.storage.file.LockFileTest')","[252434, 252500]"
"('Description.java', 'org.junit.runner.Description', 'methodAndClassNamePatternGroupOrDefault', '([\\s\\S]*)\\((.*)\\)', 'testCombinedMergeOptions(org.eclipse.jgit.lib.ConfigTest)')","[129281, 130011]"
"('Description.java', 'org.junit.runner.Description', 'methodAndClassNamePatternGroupOrDefault', '([\\s\\S]*)\\((.*)\\)', 'testFilePathCase0(org.eclipse.jgit.fnmatch.FileNameMatcherTest)')","[102826, 106173]"
"('Description.java', 'org.junit.runner.Description', 'methodAndClassNamePatternGroupOrDefault', '([\\s\\S]*)\\((.*)\\)', 'testPrintGroupCase0[OldRule? true](org.eclipse.jgit.ignore.IgnoreRuleSpecialCasesTest)')","[151502, 158586]"
"('Description.java', 'org.junit.runner.Description', 'methodAndClassNamePatternGroupOrDefault', '([\\s\\S]*)\\((.*)\\)', 'withMerge(org.eclipse.jgit.revwalk.RevWalkUtilsReachableTest)')","[77123, 77229]"
"('Description.java', 'org.junit.runner.Description', 'methodAndClassNamePatternGroupOrDefault', '([\\s\\S]*)\\((.*)\\)', 'testSetFive_MixedOrder(org.eclipse.jgit.notes.LeafBucketTest)')","[198143, 198379]"
"('URIish.java', 'org.eclipse.jgit.transport.URIish', '<init>', '^([a-z][a-z0-9+-]+)://(?:(?:([^/:@]+)(?::([^\\\\/]+))?@)?((?:[^\\\\/:]+)|(?:\\[[0-9a-f:]+\\]))(?::(\\d+))?((?:/~(?:[^\\\\/]+))?[\\\\/]))?(.+)?$', 'file:///tmp/jgit_test_6769790516931586883_tmp/tmp_2209554516347518597/.git/')",[128356]
"('URIish.java', 'org.eclipse.jgit.transport.URIish', '<init>', '^([\\\\/]?((?:[A-Za-z]:)?[\\\\/]?(?:(?:[^\\\\/]+[\\\\/]+)*[^\\\\/]+[\\\\/]*)))$', '/tmp/jgit_test_6078415325919108987_tmp/tmp_7117568841738359148')","[224179, 224324, 225064]"
"('Description.java', 'org.junit.runner.Description', 'methodAndClassNamePatternGroupOrDefault', '([\\s\\S]*)\\((.*)\\)', 'testTrailingSlash(org.eclipse.jgit.ignore.IgnoreMatcherTest)')","[145365, 145561]"
"('Description.java', 'org.junit.runner.Description', 'methodAndClassNamePatternGroupOrDefault', '([\\s\\S]*)\\((.*)\\)', 'org.eclipse.jgit.api.RmCommandTest')","[216361, 216470]"
"('Description.java', 'org.junit.runner.Description', 'methodAndClassNamePatternGroupOrDefault', '([\\s\\S]*)\\((.*)\\)', 'testClear(org.eclipse.jgit.revwalk.AlwaysEmptyRevQueueTest)')","[82749, 82813]"
"('SideBandInputStream.java', 'org.eclipse.jgit.transport.SideBandInputStream', 'doProgressLine', '^([\\w ]+): +\\d+% +\\( *(\\d+)/ *(\\d+)\\)(?:, done\\.)? *[\r\n]$', 'Updating references: 100% (1/1)   \r')","[81365, 203588, 205270, 205633, 206462, 208146, 208751, 209055, 209359, 209868, 210395, 211024, 211729, 212039]"
"('Description.java', 'org.junit.runner.Description', 'methodAndClassNamePatternGroupOrDefault', '([\\s\\S]*)\\((.*)\\)', 'testEmptyTree_WithTreeWalk(org.eclipse.jgit.dircache.DirCacheIteratorTest)')","[92498, 92734]"
"('URIish.java', 'org.eclipse.jgit.transport.URIish', '<init>', '^([a-z][a-z0-9+-]+)://(?:(?:([^/:@]+)(?::([^\\\\/]+))?@)?((?:[^\\\\/:]+)|(?:\\[[0-9a-f:]+\\]))(?::(\\d+))?((?:/~(?:[^\\\\/]+))?[\\\\/]))?(.+)?$', 'ssh+git://l usr\\example.com:wtf@example.com:1234/D:/x')",[16066]
"('Description.java', 'org.junit.runner.Description', 'methodAndClassNamePatternGroupOrDefault', '([\\s\\S]*)\\((.*)\\)', 'test17_FromString(org.eclipse.jgit.lib.AbbreviatedObjectIdTest)')","[114494, 115028]"
"('URIish.java', 'org.eclipse.jgit.transport.URIish', '<init>', '^([a-z][a-z0-9+-]+)://(?:(?:([^/:@]+)(?::([^\\\\/]+))?@)?((?:[^\\\\/:]+)|(?:\\[[0-9a-f:]+\\]))(?::(\\d+))?((?:/~(?:[^\\\\/]+))?[\\\\/]))?(.+)?$', 'ssh+git://me@example.com:1234//')",[29503]
"('FastIgnoreRule.java', 'org.eclipse.jgit.ignore.FastIgnoreRule', 'isMatch', '[\\p{Lu}]', 'H')",[162762]
"('URIish.java', 'org.eclipse.jgit.transport.URIish', '<init>', '^(file):([\\\\/](?![\\\\/])((?:[A-Za-z]:)?[\\\\/]?(?:(?:[^\\\\/]+[\\\\/]+)*[^\\\\/]+[\\\\/]*)))$', '/tmp/jgit_test_8282599337916693551_tmp/tmp_748218085915783388.git')","[79354, 81221]"
"('Description.java', 'org.junit.runner.Description', 'methodAndClassNamePatternGroupOrDefault', '([\\s\\S]*)\\((.*)\\)', 'testVerySimpleWildCardCase3[OldRule? true](org.eclipse.jgit.ignore.IgnoreRuleSpecialCasesTest)')","[149547, 156631]"
"('Description.java', 'org.junit.runner.Description', 'methodAndClassNamePatternGroupOrDefault', '([\\s\\S]*)\\((.*)\\)', 'testCheckoutOfConflictingFileShouldThrow(org.eclipse.jgit.api.PathCheckoutCommandTest)')","[224593, 224855]"
"('Description.java', 'org.junit.runner.Description', 'methodAndClassNamePatternGroupOrDefault', '([\\s\\S]*)\\((.*)\\)', 'shouldReportFileModeChange(org.eclipse.jgit.diff.DiffEntryTest)')","[95404, 95663]"
"('Description.java', 'org.junit.runner.Description', 'methodAndClassNamePatternGroupOrDefault', '([\\s\\S]*)\\((.*)\\)', 'testNoNewLine2(org.eclipse.jgit.diff.DiffFormatterReflowTest)')","[94414, 94634]"
"('URIish.java', 'org.eclipse.jgit.transport.URIish', '<init>', '^(file):([\\\\/](?![\\\\/])((?:[A-Za-z]:)?[\\\\/]?(?:(?:[^\\\\/]+[\\\\/]+)*[^\\\\/]+[\\\\/]*)))$', 'ssh+git://me@[::1]:80//')",[30400]
"('Description.java', 'org.junit.runner.Description', 'methodAndClassNamePatternGroupOrDefault', '([\\s\\S]*)\\((.*)\\)', 'testEdit_LcsContainsUnique(org.eclipse.jgit.diff.HistogramDiffTest)')","[98569, 99166]"
"('QuotedString.java', 'org.eclipse.jgit.util.QuotedString$BourneUserPathStyle', 'quote', '^~[A-Za-z0-9_-]+$', '~foo')","[193149, 193173]"
"('URIish.java', 'org.eclipse.jgit.transport.URIish', '<init>', '^(file):([\\\\/](?![\\\\/])((?:[A-Za-z]:)?[\\\\/]?(?:(?:[^\\\\/]+[\\\\/]+)*[^\\\\/]+[\\\\/]*)))$', 'file:///tmp/jgit_test_7969338902980709964_tmp/tmp_644534926566183242/.git/')","[203460, 205117]"
"('FastIgnoreRule.java', 'org.eclipse.jgit.ignore.FastIgnoreRule', 'isMatch', '[:]\\]', ':]')",[160082]
"('Description.java', 'org.junit.runner.Description', 'methodAndClassNamePatternGroupOrDefault', '([\\s\\S]*)\\((.*)\\)', 'testIncompleteRangesInOneGroupCase2(org.eclipse.jgit.fnmatch.FileNameMatcherTest)')","[102952, 106305]"
"('Description.java', 'org.junit.runner.Description', 'methodAndClassNamePatternGroupOrDefault', '([\\s\\S]*)\\((.*)\\)', 'testInvalidRefName(org.eclipse.jgit.api.CheckoutCommandTest)')","[206870, 207382]"
"('Description.java', 'org.junit.runner.Description', 'methodAndClassNamePatternGroupOrDefault', '([\\s\\S]*)\\((.*)\\)', 'testIndexingLargeObject(org.eclipse.jgit.diff.SimilarityIndexTest)')","[97899, 98029]"
"('FastIgnoreRule.java', 'org.eclipse.jgit.ignore.FastIgnoreRule', 'isMatch', '[\\p{javaLetter}]', ':')",[161044]
"('Description.java', 'org.junit.runner.Description', 'methodAndClassNamePatternGroupOrDefault', '([\\s\\S]*)\\((.*)\\)', 'testFillToHighMark2(org.eclipse.jgit.revwalk.RevCommitListTest)')","[80978, 81129]"
"('Description.java', 'org.junit.runner.Description', 'methodAndClassNamePatternGroupOrDefault', '([\\s\\S]*)\\((.*)\\)', 'testPath_4090(org.eclipse.jgit.dircache.DirCacheLargePathTest)')","[92140, 92246]"
"('Description.java', 'org.junit.runner.Description', 'methodAndClassNamePatternGroupOrDefault', '([\\s\\S]*)\\((.*)\\)', 'testCombinedRangesInOneGroupCase2[OldRule? true](org.eclipse.jgit.ignore.IgnoreRuleSpecialCasesTest)')","[149616, 156700]"
"('Description.java', 'org.junit.runner.Description', 'methodAndClassNamePatternGroupOrDefault', '([\\s\\S]*)\\((.*)\\)', 'testAdd_ReverseGitSortOrder(org.eclipse.jgit.dircache.DirCacheBuilderTest)')","[91757, 91950]"
"('Description.java', 'org.junit.runner.Description', 'methodAndClassNamePatternGroupOrDefault', '([\\s\\S]*)\\((.*)\\)', 'testUpdateCreateRef(org.eclipse.jgit.transport.PushProcessTest)')","[74236, 74609]"
"('FastIgnoreRule.java', 'org.eclipse.jgit.ignore.FastIgnoreRule', 'isMatch', '[b-d][ab]', 'bb')",[161384]
"('Description.java', 'org.junit.runner.Description', 'methodAndClassNamePatternGroupOrDefault', '([\\s\\S]*)\\((.*)\\)', 'testTimeAltersId(org.eclipse.jgit.util.ChangeIdUtilTest)')","[185525, 186270]"
"('URIish.java', 'org.eclipse.jgit.transport.URIish', '<init>', '^(file):([\\\\/](?![\\\\/])((?:[A-Za-z]:)?[\\\\/]?(?:(?:[^\\\\/]+[\\\\/]+)*[^\\\\/]+[\\\\/]*)))$', 'https://lusr\\example:wtf@[::1]:80//abc')",[25802]
"('Description.java', 'org.junit.runner.Description', 'methodAndClassNamePatternGroupOrDefault', '([\\s\\S]*)\\((.*)\\)', 'testAlphaGroupCase1(org.eclipse.jgit.fnmatch.FileNameMatcherTest)')","[102007, 105315]"
"('URIish.java', 'org.eclipse.jgit.transport.URIish', '<init>', '^([a-z][a-z0-9+-]+)://(?:(?:([^/:@]+)(?::([^\\\\/]+))?@)?((?:[^\\\\/:]+)|(?:\\[[0-9a-f:]+\\]))(?::(\\d+))?((?:/~(?:[^\\\\/]+))?[\\\\/]))?(.+)?$', 'ssh+git://1.2.3.4//abc')","[56413, 56597, 57517, 57701, 58621, 58805]"
"('Description.java', 'org.junit.runner.Description', 'methodAndClassNamePatternGroupOrDefault', '([\\s\\S]*)\\((.*)\\)', 'testParseFullIndexLine_WithMode(org.eclipse.jgit.patch.FileHeaderTest)')","[195180, 195625]"
"('Description.java', 'org.junit.runner.Description', 'methodAndClassNamePatternGroupOrDefault', '([\\s\\S]*)\\((.*)\\)', 'testClose(org.eclipse.jgit.api.GitConstructionTest)')","[203299, 203363]"
"('URIish.java', 'org.eclipse.jgit.transport.URIish', '<init>', '^(file):([\\\\/](?![\\\\/])((?:[A-Za-z]:)?[\\\\/]?(?:(?:[^\\\\/]+[\\\\/]+)*[^\\\\/]+[\\\\/]*)))$', 'http://lusr\\example@example.com//abc')","[48294, 48478]"
"('Description.java', 'org.junit.runner.Description', 'methodAndClassNamePatternGroupOrDefault', '([\\s\\S]*)\\((.*)\\)', 'testInversedGroupCase2[OldRule? false](org.eclipse.jgit.ignore.IgnoreRuleSpecialCasesTest)')","[146950, 154055]"
"('Description.java', 'org.junit.runner.Description', 'methodAndClassNamePatternGroupOrDefault', '([\\s\\S]*)\\((.*)\\)', 'testGetValidDotGitHumanishName(org.eclipse.jgit.transport.URIishTest)')","[1291, 4464]"
"('Description.java', 'org.junit.runner.Description', 'methodAndClassNamePatternGroupOrDefault', '([\\s\\S]*)\\((.*)\\)', 'testAddExistingSingleBinaryFile(org.eclipse.jgit.api.AddCommandTest)')","[235053, 235490]"
"('URIish.java', 'org.eclipse.jgit.transport.URIish', '<init>', '^([a-z][a-z0-9+-]+)://(?:(?:([^/:@]+)(?::([^\\\\/]+))?@)?((?:[^\\\\/:]+)|(?:\\[[0-9a-f:]+\\]))(?::(\\d+))?((?:/~(?:[^\\\\/]+))?[\\\\/]))?(.+)?$', 'file:///tmp/jgit_test_2026574277638248347_tmp/tmp_1405723520377137753/.git/')",[128780]
"('URIish.java', 'org.eclipse.jgit.transport.URIish', '<init>', '^(file):([\\\\/](?![\\\\/])((?:[A-Za-z]:)?[\\\\/]?(?:(?:[^\\\\/]+[\\\\/]+)*[^\\\\/]+[\\\\/]*)))$', 'in-memory://')","[67903, 71382, 73138, 74657, 74834]"
"('Description.java', 'org.junit.runner.Description', 'methodAndClassNamePatternGroupOrDefault', '([\\s\\S]*)\\((.*)\\)', 'testNoteInMiddle(org.eclipse.jgit.util.ChangeIdUtilTest)')","[185903, 186666]"
"('Description.java', 'org.junit.runner.Description', 'methodAndClassNamePatternGroupOrDefault', '([\\s\\S]*)\\((.*)\\)', 'testEqualsWithoutWhitespace(org.eclipse.jgit.diff.RawTextIgnoreWhitespaceChangeTest)')","[98176, 98219]"
"('URIish.java', 'org.eclipse.jgit.transport.URIish', '<init>', '^([a-z][a-z0-9+-]+)://(?:(?:([^/:@]+)(?::([^\\\\/]+))?@)?((?:[^\\\\/:]+)|(?:\\[[0-9a-f:]+\\]))(?::(\\d+))?((?:/~(?:[^\\\\/]+))?[\\\\/]))?(.+)?$', 'file:///tmp/jgit_test_1094454074177318269_tmp/tmp_3175616056195145359.git/')",[173743]
"('FastIgnoreRule.java', 'org.eclipse.jgit.ignore.FastIgnoreRule', 'isMatch', '\\]a.c\\*\\[d\\?\\]', ']abc*[d?]')",[161358]
"('URIish.java', 'org.eclipse.jgit.transport.URIish', '<init>', '^([a-z][a-z0-9+-]+)://(?:(?:([^/:@]+)(?::([^\\\\/]+))?@)?((?:[^\\\\/:]+)|(?:\\[[0-9a-f:]+\\]))(?::(\\d+))?((?:/~(?:[^\\\\/]+))?[\\\\/]))?(.+)?$', 'git://example.com:338/D:/m y')","[68803, 68849]"
"('URIish.java', 'org.eclipse.jgit.transport.URIish', '<init>', '^(file):([\\\\/](?![\\\\/])((?:[A-Za-z]:)?[\\\\/]?(?:(?:[^\\\\/]+[\\\\/]+)*[^\\\\/]+[\\\\/]*)))$', 'ssh://lusr\\example@1.2.3.4:80//abc')",[28974]
"('Description.java', 'org.junit.runner.Description', 'methodAndClassNamePatternGroupOrDefault', '([\\s\\S]*)\\((.*)\\)', 'testForbiddenNamesOnWindowsEgLpt1(org.eclipse.jgit.lib.DirCacheCheckoutMaliciousPathTest)')","[112122, 113028]"
"('URIish.java', 'org.eclipse.jgit.transport.URIish', '<init>', '^([a-z][a-z0-9+-]+)://(?:(?:([^/:@]+)(?::([^\\\\/]+))?@)?((?:[^\\\\/:]+)|(?:\\[[0-9a-f:]+\\]))(?::(\\d+))?((?:/~(?:[^\\\\/]+))?[\\\\/]))?(.+)?$', 'ssh://l usr\\example.com:wtf@[::1]:80//')",[12084]
"('Description.java', 'org.junit.runner.Description', 'methodAndClassNamePatternGroupOrDefault', '([\\s\\S]*)\\((.*)\\)', 'org.eclipse.jgit.revwalk.RevWalkShallowTest')","[86038, 86319]"
"('URIish.java', 'org.eclipse.jgit.transport.URIish', '<init>', '^([a-z][a-z0-9+-]+)://(?:(?:([^/:@]+)(?::([^\\\\/]+))?@)?((?:[^\\\\/:]+)|(?:\\[[0-9a-f:]+\\]))(?::(\\d+))?((?:/~(?:[^\\\\/]+))?[\\\\/]))?(.+)?$', 'ssh+git://l usr\\example.com@1.2.3.4:80/D:\\x')",[31297]
"('URIish.java', 'org.eclipse.jgit.transport.URIish', '<init>', '^(file):([\\\\/](?![\\\\/])((?:[A-Za-z]:)?[\\\\/]?(?:(?:[^\\\\/]+[\\\\/]+)*[^\\\\/]+[\\\\/]*)))$', 'file:///home/m%0ay')","[66510, 66556]"
"('Description.java', 'org.junit.runner.Description', 'methodAndClassNamePatternGroupOrDefault', '([\\s\\S]*)\\((.*)\\)', 'org.eclipse.jgit.api.PathCheckoutCommandTest')","[224383, 233339]"
"('Description.java', 'org.junit.runner.Description', 'methodAndClassNamePatternGroupOrDefault', '([\\s\\S]*)\\((.*)\\)', 'testRebasePreservingMergesWithUnrelatedSide2(org.eclipse.jgit.api.RebaseCommandTest)')","[217711, 219202]"
"('Description.java', 'org.junit.runner.Description', 'methodAndClassNamePatternGroupOrDefault', '([\\s\\S]*)\\((.*)\\)', 'testGetConflictingNames(org.eclipse.jgit.lib.RefDatabaseConflictingNamesTest)')","[119152, 119174]"
"('URIish.java', 'org.eclipse.jgit.transport.URIish', '<init>', '^([a-z][a-z0-9+-]+)://(?:(?:([^/:@]+)(?::([^\\\\/]+))?@)?((?:[^\\\\/:]+)|(?:\\[[0-9a-f:]+\\]))(?::(\\d+))?((?:/~(?:[^\\\\/]+))?[\\\\/]))?(.+)?$', 'http://lusr\\example@1.2.3.4:1234//abc')",[35437]
"('Description.java', 'org.junit.runner.Description', 'methodAndClassNamePatternGroupOrDefault', '([\\s\\S]*)\\((.*)\\)', 'testTwoLineFooBar(org.eclipse.jgit.util.RawParseUtils_LineMapTest)')","[179148, 179256]"
"('URIish.java', 'org.eclipse.jgit.transport.URIish', '<init>', '^([a-z][a-z0-9+-]+)://(?:(?:([^/:@]+)(?::([^\\\\/]+))?@)?((?:[^\\\\/:]+)|(?:\\[[0-9a-f:]+\\]))(?::(\\d+))?((?:/~(?:[^\\\\/]+))?[\\\\/]))?(.+)?$', 'ssh://l usr\\example.com@1.2.3.4:1234/D:\\x')",[27738]
"('Description.java', 'org.junit.runner.Description', 'methodAndClassNamePatternGroupOrDefault', '([\\s\\S]*)\\((.*)\\)', 'testFanoutAndLeafWitConflict(org.eclipse.jgit.notes.NoteMapMergerTest)')","[199647, 200008]"
"('URIish.java', 'org.eclipse.jgit.transport.URIish', '<init>', '^([a-z][a-z0-9+-]+)://(?:(?:([^/:@]+)(?::([^\\\\/]+))?@)?((?:[^\\\\/:]+)|(?:\\[[0-9a-f:]+\\]))(?::(\\d+))?((?:/~(?:[^\\\\/]+))?[\\\\/]))?(.+)?$', 'ssh+git://lusr\\example:wtf@1.2.3.4:1234/D:\\x')",[17607]
"('Description.java', 'org.junit.runner.Description', 'methodAndClassNamePatternGroupOrDefault', '([\\s\\S]*)\\((.*)\\)', 'testGetRefs_HeadOnOneBranch(org.eclipse.jgit.internal.storage.file.RefDirectoryTest)')","[257455, 258616]"
"('URIish.java', 'org.eclipse.jgit.transport.URIish', '<init>', '^([a-z][a-z0-9+-]+)://(?:(?:([^/:@]+)(?::([^\\\\/]+))?@)?((?:[^\\\\/:]+)|(?:\\[[0-9a-f:]+\\]))(?::(\\d+))?((?:/~(?:[^\\\\/]+))?[\\\\/]))?(.+)?$', 'git://abc')",[66004]
"('URIish.java', 'org.eclipse.jgit.transport.URIish', '<init>', '^([a-z][a-z0-9+-]+)://(?:(?:([^/:@]+)(?::([^\\\\/]+))?@)?((?:[^\\\\/:]+)|(?:\\[[0-9a-f:]+\\]))(?::(\\d+))?((?:/~(?:[^\\\\/]+))?[\\\\/]))?(.+)?$', 'ssh+git://me@[::1]:80/D:/x')",[30515]
"('Description.java', 'org.junit.runner.Description', 'methodAndClassNamePatternGroupOrDefault', '([\\s\\S]*)\\((.*)\\)', 'testPeelLooseTag(org.eclipse.jgit.internal.storage.file.RefDirectoryTest)')","[257581, 258748]"
"('URIish.java', 'org.eclipse.jgit.transport.URIish', '<init>', '^(file):([\\\\/](?![\\\\/])((?:[A-Za-z]:)?[\\\\/]?(?:(?:[^\\\\/]+[\\\\/]+)*[^\\\\/]+[\\\\/]*)))$', 'file:///tmp/jgit_test_1473506600966761045_tmp/tmp_6676395047777785088/.git/')",[133571]
"('Description.java', 'org.junit.runner.Description', 'methodAndClassNamePatternGroupOrDefault', '([\\s\\S]*)\\((.*)\\)', 'testObjectMovedWithinPack(org.eclipse.jgit.internal.storage.file.ConcurrentRepackTest)')","[252620, 252708]"
"('URIish.java', 'org.eclipse.jgit.transport.URIish', '<init>', '^(file):([\\\\/](?![\\\\/])((?:[A-Za-z]:)?[\\\\/]?(?:(?:[^\\\\/]+[\\\\/]+)*[^\\\\/]+[\\\\/]*)))$', 'ssh+git://example.com//abc')","[56022, 56206, 57126, 57310, 58230, 58414]"
"('Description.java', 'org.junit.runner.Description', 'methodAndClassNamePatternGroupOrDefault', '([\\s\\S]*)\\((.*)\\)', 'testRevisionBare(org.eclipse.jgit.gitrepo.RepoCommandTest)')","[139904, 140204]"
"('Description.java', 'org.junit.runner.Description', 'methodAndClassNamePatternGroupOrDefault', '([\\s\\S]*)\\((.*)\\)', 'testFindRemoteRefUpdatesTrackingRef(org.eclipse.jgit.transport.TransportTest)')","[71507, 71678]"
"('Description.java', 'org.junit.runner.Description', 'methodAndClassNamePatternGroupOrDefault', '([\\s\\S]*)\\((.*)\\)', 'org.eclipse.jgit.lib.ObjectCheckerTest')","[120818, 125098]"
"('Description.java', 'org.junit.runner.Description', 'methodAndClassNamePatternGroupOrDefault', '([\\s\\S]*)\\((.*)\\)', 'testVerySimpleGroupRangeCase5[OldRule? false](org.eclipse.jgit.ignore.IgnoreRuleSpecialCasesTest)')","[147571, 154676]"
"('Description.java', 'org.junit.runner.Description', 'methodAndClassNamePatternGroupOrDefault', '([\\s\\S]*)\\((.*)\\)', 'testPrintGroupCase0(org.eclipse.jgit.fnmatch.FileNameMatcherTest)')","[102973, 106327]"
"('Description.java', 'org.junit.runner.Description', 'methodAndClassNamePatternGroupOrDefault', '([\\s\\S]*)\\((.*)\\)', 'testUpperGroupCase1[OldRule? false](org.eclipse.jgit.ignore.IgnoreRuleSpecialCasesTest)')","[148215, 155320]"
"('Description.java', 'org.junit.runner.Description', 'methodAndClassNamePatternGroupOrDefault', '([\\s\\S]*)\\((.*)\\)', 'testDequote_BareA(org.eclipse.jgit.util.QuotedStringBourneStyleTest)')","[182980, 183196]"
"('URIish.java', 'org.eclipse.jgit.transport.URIish', '<init>', '^([a-z][a-z0-9+-]+)://(?:(?:([^/:@]+)(?::([^\\\\/]+))?@)?((?:[^\\\\/:]+)|(?:\\[[0-9a-f:]+\\]))(?::(\\d+))?((?:/~(?:[^\\\\/]+))?[\\\\/]))?(.+)?$', 'ssh+git://l usr\\example.com@[::1]:80/D:/x')",[31619]
"('URIish.java', 'org.eclipse.jgit.transport.URIish', '<init>', '^(file):([\\\\/](?![\\\\/])((?:[A-Za-z]:)?[\\\\/]?(?:(?:[^\\\\/]+[\\\\/]+)*[^\\\\/]+[\\\\/]*)))$', 'https://l usr\\example.com@1.2.3.4:1234//')",[37576]
"('URIish.java', 'org.eclipse.jgit.transport.URIish', '<init>', '^([a-z][a-z0-9+-]+)://(?:(?:([^/:@]+)(?::([^\\\\/]+))?@)?((?:[^\\\\/:]+)|(?:\\[[0-9a-f:]+\\]))(?::(\\d+))?((?:/~(?:[^\\\\/]+))?[\\\\/]))?(.+)?$', 'file:///home/m%c3%a5y')","[5588, 5634]"
"('Description.java', 'org.junit.runner.Description', 'methodAndClassNamePatternGroupOrDefault', '([\\s\\S]*)\\((.*)\\)', 'testDequote_BareA(org.eclipse.jgit.util.QuotedStringBourneUserPathStyleTest)')","[192534, 192792]"
"('Description.java', 'org.junit.runner.Description', 'methodAndClassNamePatternGroupOrDefault', '([\\s\\S]*)\\((.*)\\)', 'testInvalidTreeModeMissingName(org.eclipse.jgit.lib.ObjectCheckerTest)')","[122666, 124833]"
"('URIish.java', 'org.eclipse.jgit.transport.URIish', '<init>', '^([a-z][a-z0-9+-]+)://(?:(?:([^/:@]+)(?::([^\\\\/]+))?@)?((?:[^\\\\/:]+)|(?:\\[[0-9a-f:]+\\]))(?::(\\d+))?((?:/~(?:[^\\\\/]+))?[\\\\/]))?(.+)?$', 'https://me@[::1]:80/D:/x')",[37139]
"('URIish.java', 'org.eclipse.jgit.transport.URIish', '<init>', '^([a-z][a-z0-9+-]+)://(?:(?:([^/:@]+)(?::([^\\\\/]+))?@)?((?:[^\\\\/:]+)|(?:\\[[0-9a-f:]+\\]))(?::(\\d+))?((?:/~(?:[^\\\\/]+))?[\\\\/]))?(.+)?$', 'http://lusr\\example:wtf@[::1]:80//')",[22467]
"('Description.java', 'org.junit.runner.Description', 'methodAndClassNamePatternGroupOrDefault', '([\\s\\S]*)\\((.*)\\)', 'test000_sort_03(org.eclipse.jgit.lib.T0002_TreeTest)')","[119943, 120246]"
"('Description.java', 'org.junit.runner.Description', 'methodAndClassNamePatternGroupOrDefault', '([\\s\\S]*)\\((.*)\\)', 'testUnsupportedGroupCase1[OldRule? true](org.eclipse.jgit.ignore.IgnoreRuleSpecialCasesTest)')","[151180, 158264]"
"('URIish.java', 'org.eclipse.jgit.transport.URIish', '<init>', '^(?:([^/:@]+)(?::([^\\\\/]+))?@)?((?:[^\\\\/:]+)|(?:\\[[0-9a-f:]+\\])):((?:(?:/~(?:[^\\\\/]+))[\\\\/])?(?:(?:[^\\\\/]+[\\\\/]+)*[^\\\\/]+[\\\\/]*))$', 'short:project.git')","[9645, 11385]"
"('Description.java', 'org.junit.runner.Description', 'methodAndClassNamePatternGroupOrDefault', '([\\s\\S]*)\\((.*)\\)', 'testFindObject(org.eclipse.jgit.internal.storage.file.PackReverseIndexTest)')","[257161, 257248]"
"('URIish.java', 'org.eclipse.jgit.transport.URIish', '<init>', '^([a-z][a-z0-9+-]+)://(?:(?:([^/:@]+)(?::([^\\\\/]+))?@)?((?:[^\\\\/:]+)|(?:\\[[0-9a-f:]+\\]))(?::(\\d+))?((?:/~(?:[^\\\\/]+))?[\\\\/]))?(.+)?$', 'file:///tmp/jgit_test_2708460262653309306_tmp/tmp_1359715560973146015/.git/')",[243781]
"('Description.java', 'org.junit.runner.Description', 'methodAndClassNamePatternGroupOrDefault', '([\\s\\S]*)\\((.*)\\)', 'testInvalidTagNoObject4(org.eclipse.jgit.lib.ObjectCheckerTest)')","[122225, 124371]"
"('URIish.java', 'org.eclipse.jgit.transport.URIish', '<init>', '^(file):([\\\\/](?![\\\\/])((?:[A-Za-z]:)?[\\\\/]?(?:(?:[^\\\\/]+[\\\\/]+)*[^\\\\/]+[\\\\/]*)))$', 'ssh+git://me:wtf@[::1]:80/D:/x')",[15639]
"('Description.java', 'org.junit.runner.Description', 'methodAndClassNamePatternGroupOrDefault', '([\\s\\S]*)\\((.*)\\)', 'org.eclipse.jgit.util.GitDateParserBadlyFormattedTest')","[185170, 185279]"
"('Description.java', 'org.junit.runner.Description', 'methodAndClassNamePatternGroupOrDefault', '([\\s\\S]*)\\((.*)\\)', 'testSingleSubtree(org.eclipse.jgit.dircache.DirCacheTreeTest)')","[91505, 91637]"
"('URIish.java', 'org.eclipse.jgit.transport.URIish', '<init>', '^([a-z][a-z0-9+-]+)://(?:(?:([^/:@]+)(?::([^\\\\/]+))?@)?((?:[^\\\\/:]+)|(?:\\[[0-9a-f:]+\\]))(?::(\\d+))?((?:/~(?:[^\\\\/]+))?[\\\\/]))?(.+)?$', 'ssh+git://me@1.2.3.4:80/D:\\x')",[30193]
"('URIish.java', 'org.eclipse.jgit.transport.URIish', '<init>', '^(file):([\\\\/](?![\\\\/])((?:[A-Za-z]:)?[\\\\/]?(?:(?:[^\\\\/]+[\\\\/]+)*[^\\\\/]+[\\\\/]*)))$', 'ssh://1.2.3.4//abc')","[53078, 53262, 54182, 54366, 55286, 55470]"
"('Description.java', 'org.junit.runner.Description', 'methodAndClassNamePatternGroupOrDefault', '([\\s\\S]*)\\((.*)\\)', 'org.eclipse.jgit.util.RawParseUtils_ParsePersonIdentTest')","[171524, 171719]"
"('Description.java', 'org.junit.runner.Description', 'methodAndClassNamePatternGroupOrDefault', '([\\s\\S]*)\\((.*)\\)', 'testToString_WithPrefix(org.eclipse.jgit.util.RefMapTest)')","[183951, 184422]"
"('Description.java', 'org.junit.runner.Description', 'methodAndClassNamePatternGroupOrDefault', '([\\s\\S]*)\\((.*)\\)', 'logPathWithMaxCount(org.eclipse.jgit.api.LogCommandTest)')","[231571, 231722]"
"('Description.java', 'org.junit.runner.Description', 'methodAndClassNamePatternGroupOrDefault', '([\\s\\S]*)\\((.*)\\)', 'shouldReturnZeroWhenMergedInto(org.eclipse.jgit.revwalk.RevWalkUtilsCountTest)')","[78948, 79076]"
"('Description.java', 'org.junit.runner.Description', 'methodAndClassNamePatternGroupOrDefault', '([\\s\\S]*)\\((.*)\\)', 'testStandardFormat_LargeObject_CorruptZLibStream(org.eclipse.jgit.internal.storage.file.UnpackedObjectTest)')","[255169, 255495]"
"('URIish.java', 'org.eclipse.jgit.transport.URIish', '<init>', '^(file):([\\\\/](?![\\\\/])((?:[A-Za-z]:)?[\\\\/]?(?:(?:[^\\\\/]+[\\\\/]+)*[^\\\\/]+[\\\\/]*)))$', 'https://me@[::1]:1234//')",[36840]
"('Description.java', 'org.junit.runner.Description', 'methodAndClassNamePatternGroupOrDefault', '([\\s\\S]*)\\((.*)\\)', 'testVerySimpleStarCase2(org.eclipse.jgit.fnmatch.FileNameMatcherTest)')","[103477, 106855]"
"('URIish.java', 'org.eclipse.jgit.transport.URIish', '<init>', '^([a-z][a-z0-9+-]+)://(?:(?:([^/:@]+)(?::([^\\\\/]+))?@)?((?:[^\\\\/:]+)|(?:\\[[0-9a-f:]+\\]))(?::(\\d+))?((?:/~(?:[^\\\\/]+))?[\\\\/]))?(.+)?$', 'https://l usr\\example.com:wtf@example.com:1234//abc')",[23801]
"('URIish.java', 'org.eclipse.jgit.transport.URIish', '<init>', '^([a-z][a-z0-9+-]+)://(?:(?:([^/:@]+)(?::([^\\\\/]+))?@)?((?:[^\\\\/:]+)|(?:\\[[0-9a-f:]+\\]))(?::(\\d+))?((?:/~(?:[^\\\\/]+))?[\\\\/]))?(.+)?$', 'ssh://me:wtf@example.com:80/D:/x')",[7997]
"('URIish.java', 'org.eclipse.jgit.transport.URIish', '<init>', '^([a-z][a-z0-9+-]+)://(?:(?:([^/:@]+)(?::([^\\\\/]+))?@)?((?:[^\\\\/:]+)|(?:\\[[0-9a-f:]+\\]))(?::(\\d+))?((?:/~(?:[^\\\\/]+))?[\\\\/]))?(.+)?$', 'ssh://me:wtf@1.2.3.4:80/D:/x')",[8978]
"('URIish.java', 'org.eclipse.jgit.transport.URIish', '<init>', '^(file):([\\\\/](?![\\\\/])((?:[A-Za-z]:)?[\\\\/]?(?:(?:[^\\\\/]+[\\\\/]+)*[^\\\\/]+[\\\\/]*)))$', 'file:///tmp/jgit_test_6811481335877422117_tmp/tmp_7886630499899572320.git/')","[205337, 205392, 205700, 205755, 206529, 206584, 208213, 208268, 208818, 208873, 209122, 209177, 209426, 209481]"
"('Description.java', 'org.junit.runner.Description', 'methodAndClassNamePatternGroupOrDefault', '([\\s\\S]*)\\((.*)\\)', 'testQuotingForSubSectionNames(org.eclipse.jgit.lib.ConfigTest)')","[129218, 129945]"
"('Description.java', 'org.junit.runner.Description', 'methodAndClassNamePatternGroupOrDefault', '([\\s\\S]*)\\((.*)\\)', 'logAllCommitsWithSkip(org.eclipse.jgit.api.LogCommandTest)')","[231592, 231744]"
"('Description.java', 'org.junit.runner.Description', 'methodAndClassNamePatternGroupOrDefault', '([\\s\\S]*)\\((.*)\\)', 'nameExact(org.eclipse.jgit.api.NameRevCommandTest)')","[242204, 242446]"
"('Description.java', 'org.junit.runner.Description', 'methodAndClassNamePatternGroupOrDefault', '([\\s\\S]*)\\((.*)\\)', 'testDirtySubmoduleWorktreeUntracked(org.eclipse.jgit.lib.IndexDiffSubmoduleTest)')","[127885, 128034]"
"('Description.java', 'org.junit.runner.Description', 'methodAndClassNamePatternGroupOrDefault', '([\\s\\S]*)\\((.*)\\)', 'testCntrlGroupCase1[OldRule? true](org.eclipse.jgit.ignore.IgnoreRuleSpecialCasesTest)')","[150214, 157298]"
"('URIish.java', 'org.eclipse.jgit.transport.URIish', '<init>', '^(file):([\\\\/](?![\\\\/])((?:[A-Za-z]:)?[\\\\/]?(?:(?:[^\\\\/]+[\\\\/]+)*[^\\\\/]+[\\\\/]*)))$', 'file:///tmp/jgit_test_6285626331586997239_tmp/tmp_1735056061205602756/.git/')",[132261]
"('Description.java', 'org.junit.runner.Description', 'methodAndClassNamePatternGroupOrDefault', '([\\s\\S]*)\\((.*)\\)', 'weeksAgo(org.eclipse.jgit.util.GitDateParserTest)')","[182299, 182575]"
"('Description.java', 'org.junit.runner.Description', 'methodAndClassNamePatternGroupOrDefault', '([\\s\\S]*)\\((.*)\\)', 'resolveInvalidParentUrl(org.eclipse.jgit.submodule.SubmoduleInitTest)')","[100578, 100726]"
"('Description.java', 'org.junit.runner.Description', 'methodAndClassNamePatternGroupOrDefault', '([\\s\\S]*)\\((.*)\\)', 'testIterator_FailsAtEnd(org.eclipse.jgit.util.RefMapTest)')","[184224, 184708]"
"('Description.java', 'org.junit.runner.Description', 'methodAndClassNamePatternGroupOrDefault', '([\\s\\S]*)\\((.*)\\)', 'testHasRevFlag(org.eclipse.jgit.revwalk.RevObjectTest)')","[83787, 84140]"
"('Description.java', 'org.junit.runner.Description', 'methodAndClassNamePatternGroupOrDefault', '([\\s\\S]*)\\((.*)\\)', 'testLastModifiedTimes(org.eclipse.jgit.lib.IndexModificationTimesTest)')","[119630, 119673]"
"('Description.java', 'org.junit.runner.Description', 'methodAndClassNamePatternGroupOrDefault', '([\\s\\S]*)\\((.*)\\)', 'testWordGroupCase4[OldRule? true](org.eclipse.jgit.ignore.IgnoreRuleSpecialCasesTest)')","[152422, 159506]"
"('URIish.java', 'org.eclipse.jgit.transport.URIish', '<init>', '^(file):([\\\\/](?![\\\\/])((?:[A-Za-z]:)?[\\\\/]?(?:(?:[^\\\\/]+[\\\\/]+)*[^\\\\/]+[\\\\/]*)))$', 'ssh://l usr\\example.com@example.com:80/D:\\x')",[27531]
"('Description.java', 'org.junit.runner.Description', 'methodAndClassNamePatternGroupOrDefault', '([\\s\\S]*)\\((.*)\\)', 'testNameOnlyMatches[OldRule? false](org.eclipse.jgit.ignore.IgnoreMatcherParametrizedTest)')","[141461, 141804]"
"('Description.java', 'org.junit.runner.Description', 'methodAndClassNamePatternGroupOrDefault', '([\\s\\S]*)\\((.*)\\)', 'testDirectoryFileConflicts_18(org.eclipse.jgit.lib.DirCacheCheckoutTest)')","[116683, 117666]"
"('Description.java', 'org.junit.runner.Description', 'methodAndClassNamePatternGroupOrDefault', '([\\s\\S]*)\\((.*)\\)', 'testDequote_Empty2(org.eclipse.jgit.util.QuotedStringBourneStyleTest)')","[182917, 183130]"
"('Description.java', 'org.junit.runner.Description', 'methodAndClassNamePatternGroupOrDefault', '([\\s\\S]*)\\((.*)\\)', 'testBlankGroupCase3[OldRule? true](org.eclipse.jgit.ignore.IgnoreRuleSpecialCasesTest)')","[151962, 159046]"
"('URIish.java', 'org.eclipse.jgit.transport.URIish', '<init>', '^([a-z][a-z0-9+-]+)://(?:(?:([^/:@]+)(?::([^\\\\/]+))?@)?((?:[^\\\\/:]+)|(?:\\[[0-9a-f:]+\\]))(?::(\\d+))?((?:/~(?:[^\\\\/]+))?[\\\\/]))?(.+)?$', 'https://me@example.com//')","[49375, 49559]"
"('Description.java', 'org.junit.runner.Description', 'methodAndClassNamePatternGroupOrDefault', '([\\s\\S]*)\\((.*)\\)', 'testURIEncode_0a(org.eclipse.jgit.transport.URIishTest)')","[1835, 4640]"
"('FastIgnoreRule.java', 'org.eclipse.jgit.ignore.FastIgnoreRule', 'isMatch', '[b-d]', 'c')",[161800]
"('FastIgnoreRule.java', 'org.eclipse.jgit.ignore.FastIgnoreRule', 'isMatch', '[a-c-e]', 'b')",[160212]
"('Description.java', 'org.junit.runner.Description', 'methodAndClassNamePatternGroupOrDefault', '([\\s\\S]*)\\((.*)\\)', 'testSimpleStarCase3[OldRule? true](org.eclipse.jgit.ignore.IgnoreRuleSpecialCasesTest)')","[150858, 157942]"
"('Description.java', 'org.junit.runner.Description', 'methodAndClassNamePatternGroupOrDefault', '([\\s\\S]*)\\((.*)\\)', 'testToString_NoPrefix(org.eclipse.jgit.util.RefMapTest)')","[184119, 184598]"
"('Description.java', 'org.junit.runner.Description', 'methodAndClassNamePatternGroupOrDefault', '([\\s\\S]*)\\((.*)\\)', 'testAddLargeBlocks(org.eclipse.jgit.revwalk.LIFORevQueueTest)')","[78417, 78525]"
"('URIish.java', 'org.eclipse.jgit.transport.URIish', '<init>', '^(file):([\\\\/](?![\\\\/])((?:[A-Za-z]:)?[\\\\/]?(?:(?:[^\\\\/]+[\\\\/]+)*[^\\\\/]+[\\\\/]*)))$', 'http://l usr\\example.com@1.2.3.4/D:\\x')","[47650, 47834]"
"('URIish.java', 'org.eclipse.jgit.transport.URIish', '<init>', '^(file):([\\\\/](?![\\\\/])((?:[A-Za-z]:)?[\\\\/]?(?:(?:[^\\\\/]+[\\\\/]+)*[^\\\\/]+[\\\\/]*)))$', 'ssh://me:wtf@1.2.3.4:80//abc')",[8909]
"('URIish.java', 'org.eclipse.jgit.transport.URIish', '<init>', '^(file):([\\\\/](?![\\\\/])((?:[A-Za-z]:)?[\\\\/]?(?:(?:[^\\\\/]+[\\\\/]+)*[^\\\\/]+[\\\\/]*)))$', 'file:/tmp/jgit_test_2833063507789227488_tmp/tmp_6575983387995976123/.git/')",[200975]
"('Description.java', 'org.junit.runner.Description', 'methodAndClassNamePatternGroupOrDefault', '([\\s\\S]*)\\((.*)\\)', 'workingDirectoryCleanIndexModify(org.eclipse.jgit.api.StashCreateCommandTest)')","[202256, 202594]"
"('Description.java', 'org.junit.runner.Description', 'methodAndClassNamePatternGroupOrDefault', '([\\s\\S]*)\\((.*)\\)', 'testBatchRefUpdateConflict(org.eclipse.jgit.internal.storage.file.RefDirectoryTest)')","[257812, 258990]"
"('Description.java', 'org.junit.runner.Description', 'methodAndClassNamePatternGroupOrDefault', '([\\s\\S]*)\\((.*)\\)', 'testDescribeBranch(org.eclipse.jgit.api.DescribeCommandTest)')","[215746, 215900]"
"('Description.java', 'org.junit.runner.Description', 'methodAndClassNamePatternGroupOrDefault', '([\\s\\S]*)\\((.*)\\)', 'testRebaseInteractiveFixupFirstCommitShouldFail(org.eclipse.jgit.api.RebaseCommandTest)')","[218152, 219664]"
"('URIish.java', 'org.eclipse.jgit.transport.URIish', '<init>', '^([a-z][a-z0-9+-]+)://(?:(?:([^/:@]+)(?::([^\\\\/]+))?@)?((?:[^\\\\/:]+)|(?:\\[[0-9a-f:]+\\]))(?::(\\d+))?((?:/~(?:[^\\\\/]+))?[\\\\/]))?(.+)?$', '/abc/.git')",[68067]
"('Description.java', 'org.junit.runner.Description', 'methodAndClassNamePatternGroupOrDefault', '([\\s\\S]*)\\((.*)\\)', 'org.eclipse.jgit.lib.IndexDiffTest')","[110259, 113447]"
"('Description.java', 'org.junit.runner.Description', 'methodAndClassNamePatternGroupOrDefault', '([\\s\\S]*)\\((.*)\\)', 'testCreateFileHeader_Binary(org.eclipse.jgit.diff.DiffFormatterTest)')","[96063, 96326]"
"('Description.java', 'org.junit.runner.Description', 'methodAndClassNamePatternGroupOrDefault', '([\\s\\S]*)\\((.*)\\)', 'org.eclipse.jgit.util.RawParseUtils_HexParseTest')","[181070, 181222]"
"('Description.java', 'org.junit.runner.Description', 'methodAndClassNamePatternGroupOrDefault', '([\\s\\S]*)\\((.*)\\)', 'org.eclipse.jgit.notes.NoteMapMergerTest')","[199563, 202178]"
"('Description.java', 'org.junit.runner.Description', 'methodAndClassNamePatternGroupOrDefault', '([\\s\\S]*)\\((.*)\\)', 'org.eclipse.jgit.transport.TransportTest')","[71444, 73187]"
"('URIish.java', 'org.eclipse.jgit.transport.URIish', '<init>', '^(file):([\\\\/](?![\\\\/])((?:[A-Za-z]:)?[\\\\/]?(?:(?:[^\\\\/]+[\\\\/]+)*[^\\\\/]+[\\\\/]*)))$', 'http://me@example.com/D:\\x')","[46178, 46362]"
"('URIish.java', 'org.eclipse.jgit.transport.URIish', '<init>', '^(file):([\\\\/](?![\\\\/])((?:[A-Za-z]:)?[\\\\/]?(?:(?:[^\\\\/]+[\\\\/]+)*[^\\\\/]+[\\\\/]*)))$', 'ssh://me:wtf@1.2.3.4:1234//')",[8066]
"('Description.java', 'org.junit.runner.Description', 'methodAndClassNamePatternGroupOrDefault', '([\\s\\S]*)\\((.*)\\)', 'nullForNameShouldThrowIllegalArgumentException(org.eclipse.jgit.lib.T0001_PersonIdentTest)')","[127696, 127784]"
"('URIish.java', 'org.eclipse.jgit.transport.URIish', '<init>', '^(file):([\\\\/](?![\\\\/])((?:[A-Za-z]:)?[\\\\/]?(?:(?:[^\\\\/]+[\\\\/]+)*[^\\\\/]+[\\\\/]*)))$', 'http://me@[::1]:1234//abc')",[33574]
"('Description.java', 'org.junit.runner.Description', 'methodAndClassNamePatternGroupOrDefault', '([\\s\\S]*)\\((.*)\\)', 'testWordGroupCase2[OldRule? true](org.eclipse.jgit.ignore.IgnoreRuleSpecialCasesTest)')","[152376, 159460]"
"('Description.java', 'org.junit.runner.Description', 'methodAndClassNamePatternGroupOrDefault', '([\\s\\S]*)\\((.*)\\)', 'testFailureF2(org.eclipse.jgit.api.ApplyCommandTest)')","[223547, 223784]"
"('URIish.java', 'org.eclipse.jgit.transport.URIish', '<init>', '^(file):([\\\\/](?![\\\\/])((?:[A-Za-z]:)?[\\\\/]?(?:(?:[^\\\\/]+[\\\\/]+)*[^\\\\/]+[\\\\/]*)))$', 'https://l usr\\example.com:wtf@example.com:80//abc')",[23962]
"('URIish.java', 'org.eclipse.jgit.transport.URIish', '<init>', '^(file):([\\\\/](?![\\\\/])((?:[A-Za-z]:)?[\\\\/]?(?:(?:[^\\\\/]+[\\\\/]+)*[^\\\\/]+[\\\\/]*)))$', 'https://l usr\\example.com@example.com:80//')",[37392]
"('Description.java', 'org.junit.runner.Description', 'methodAndClassNamePatternGroupOrDefault', '([\\s\\S]*)\\((.*)\\)', 'scanWithGitDirRef(org.eclipse.jgit.internal.storage.file.FileRepositoryBuilderTest)')","[248366, 248514]"
"('URIish.java', 'org.eclipse.jgit.transport.URIish', '<init>', '^(file):([\\\\/](?![\\\\/])((?:[A-Za-z]:)?[\\\\/]?(?:(?:[^\\\\/]+[\\\\/]+)*[^\\\\/]+[\\\\/]*)))$', 'ssh://l usr\\example.com@example.com//')","[40520, 40704]"
"('Description.java', 'org.junit.runner.Description', 'methodAndClassNamePatternGroupOrDefault', '([\\s\\S]*)\\((.*)\\)', 'testSingleRename(org.eclipse.jgit.revwalk.RevWalkFollowFilterTest)')","[79221, 79285]"
"('Description.java', 'org.junit.runner.Description', 'methodAndClassNamePatternGroupOrDefault', '([\\s\\S]*)\\((.*)\\)', 'testFillTo1(org.eclipse.jgit.util.IntListTest)')","[181830, 182067]"
"('URIish.java', 'org.eclipse.jgit.transport.URIish', '<init>', '^([a-z][a-z0-9+-]+)://(?:(?:([^/:@]+)(?::([^\\\\/]+))?@)?((?:[^\\\\/:]+)|(?:\\[[0-9a-f:]+\\]))(?::(\\d+))?((?:/~(?:[^\\\\/]+))?[\\\\/]))?(.+)?$', 'ssh://lusr\\example@example.com:1234/D:/x')",[28491]
"('Description.java', 'org.junit.runner.Description', 'methodAndClassNamePatternGroupOrDefault', '([\\s\\S]*)\\((.*)\\)', 't1nearerT2(org.eclipse.jgit.api.DescribeCommandTest)')","[215830, 215988]"
"('Description.java', 'org.junit.runner.Description', 'methodAndClassNamePatternGroupOrDefault', '([\\s\\S]*)\\((.*)\\)', 'testCreateFromAnnotatetdTag(org.eclipse.jgit.api.BranchCommandTest)')","[226898, 227306]"
"('Description.java', 'org.junit.runner.Description', 'methodAndClassNamePatternGroupOrDefault', '([\\s\\S]*)\\((.*)\\)', 'testCloneEmpty(org.eclipse.jgit.revwalk.FIFORevQueueTest)')","[85424, 85553]"
"('URIish.java', 'org.eclipse.jgit.transport.URIish', '<init>', '^(file):([\\\\/](?![\\\\/])((?:[A-Za-z]:)?[\\\\/]?(?:(?:[^\\\\/]+[\\\\/]+)*[^\\\\/]+[\\\\/]*)))$', 'ssh+git://lusr\\example@[::1]:1234/D:\\x')",[32562]
"('Description.java', 'org.junit.runner.Description', 'methodAndClassNamePatternGroupOrDefault', '([\\s\\S]*)\\((.*)\\)', 'testStringOfPearls_FilePath3(org.eclipse.jgit.revwalk.TreeRevFilterTest)')","[81652, 81760]"
"('Description.java', 'org.junit.runner.Description', 'methodAndClassNamePatternGroupOrDefault', '([\\s\\S]*)\\((.*)\\)', 'testTwoRangesInOneGroupCase0[OldRule? true](org.eclipse.jgit.ignore.IgnoreRuleSpecialCasesTest)')","[152468, 159552]"
"('Description.java', 'org.junit.runner.Description', 'methodAndClassNamePatternGroupOrDefault', '([\\s\\S]*)\\((.*)\\)', 'testUnsupportedGroupCase0[OldRule? false](org.eclipse.jgit.ignore.IgnoreRuleSpecialCasesTest)')","[147594, 154699]"
"('URIish.java', 'org.eclipse.jgit.transport.URIish', '<init>', '^(file):([\\\\/](?![\\\\/])((?:[A-Za-z]:)?[\\\\/]?(?:(?:[^\\\\/]+[\\\\/]+)*[^\\\\/]+[\\\\/]*)))$', 'file:/tmp/jgitUnitTest698743112707577638.tmp')",[7268]
"('URIish.java', 'org.eclipse.jgit.transport.URIish', '<init>', '^(file):([\\\\/](?![\\\\/])((?:[A-Za-z]:)?[\\\\/]?(?:(?:[^\\\\/]+[\\\\/]+)*[^\\\\/]+[\\\\/]*)))$', 'ssh+git://lusr\\example@example.com/D:/x')","[45028, 45212]"
"('URIish.java', 'org.eclipse.jgit.transport.URIish', '<init>', '^(file):([\\\\/](?![\\\\/])((?:[A-Za-z]:)?[\\\\/]?(?:(?:[^\\\\/]+[\\\\/]+)*[^\\\\/]+[\\\\/]*)))$', 'https://l usr\\example.com@example.com:1234//abc')",[37254]
"('URIish.java', 'org.eclipse.jgit.transport.URIish', '<init>', '^(file):([\\\\/](?![\\\\/])((?:[A-Za-z]:)?[\\\\/]?(?:(?:[^\\\\/]+[\\\\/]+)*[^\\\\/]+[\\\\/]*)))$', 'ssh+git://lusr\\example@example.com:80/D:/x')",[31964]
"('Description.java', 'org.junit.runner.Description', 'methodAndClassNamePatternGroupOrDefault', '([\\s\\S]*)\\((.*)\\)', 'testBuildOneFile_Commit_IndexChangedEvent(org.eclipse.jgit.dircache.DirCacheBuilderTest)')","[91778, 91972]"
"('Description.java', 'org.junit.runner.Description', 'methodAndClassNamePatternGroupOrDefault', '([\\s\\S]*)\\((.*)\\)', 'testRemoveFirstURI(org.eclipse.jgit.transport.RemoteConfigTest)')","[1982, 3339]"
"('URIish.java', 'org.eclipse.jgit.transport.URIish', '<init>', '^(file):([\\\\/](?![\\\\/])((?:[A-Za-z]:)?[\\\\/]?(?:(?:[^\\\\/]+[\\\\/]+)*[^\\\\/]+[\\\\/]*)))$', 'http://me@example.com:1234/D:\\x')",[32930]
"('Description.java', 'org.junit.runner.Description', 'methodAndClassNamePatternGroupOrDefault', '([\\s\\S]*)\\((.*)\\)', 'testCherryPickConflictResolution(org.eclipse.jgit.api.CherryPickCommandTest)')","[232127, 232383]"
"('Description.java', 'org.junit.runner.Description', 'methodAndClassNamePatternGroupOrDefault', '([\\s\\S]*)\\((.*)\\)', 'testAddDeletePathAndTreeNormalNames(org.eclipse.jgit.dircache.DirCachePathEditTest)')","[91231, 91297]"
"('URIish.java', 'org.eclipse.jgit.transport.URIish', '<init>', '^([a-z][a-z0-9+-]+)://(?:(?:([^/:@]+)(?::([^\\\\/]+))?@)?((?:[^\\\\/:]+)|(?:\\[[0-9a-f:]+\\]))(?::(\\d+))?((?:/~(?:[^\\\\/]+))?[\\\\/]))?(.+)?$', 'ssh://example.com//')","[52687, 52871, 53791, 53975, 54895, 55079]"
"('Description.java', 'org.junit.runner.Description', 'methodAndClassNamePatternGroupOrDefault', '([\\s\\S]*)\\((.*)\\)', 'local(org.eclipse.jgit.util.GitDateParserTest)')","[182404, 182685]"
"('URIish.java', 'org.eclipse.jgit.transport.URIish', '<init>', '^(file):([\\\\/](?![\\\\/])((?:[A-Za-z]:)?[\\\\/]?(?:(?:[^\\\\/]+[\\\\/]+)*[^\\\\/]+[\\\\/]*)))$', 'https://l usr\\example.com@[::1]:1234//abc')",[37990]
"('Description.java', 'org.junit.runner.Description', 'methodAndClassNamePatternGroupOrDefault', '([\\s\\S]*)\\((.*)\\)', 'testNLSLocale(org.eclipse.jgit.nls.NLSTest)')","[360, 624]"
"('Description.java', 'org.junit.runner.Description', 'methodAndClassNamePatternGroupOrDefault', '([\\s\\S]*)\\((.*)\\)', 'testPruneNone(org.eclipse.jgit.internal.storage.file.GcReflogTest)')","[256533, 256619]"
"('URIish.java', 'org.eclipse.jgit.transport.URIish', '<init>', '^([a-z][a-z0-9+-]+)://(?:(?:([^/:@]+)(?::([^\\\\/]+))?@)?((?:[^\\\\/:]+)|(?:\\[[0-9a-f:]+\\]))(?::(\\d+))?((?:/~(?:[^\\\\/]+))?[\\\\/]))?(.+)?$', 'http://l usr\\example.com@[::1]:1234/D:/x')",[34747]
"('Description.java', 'org.junit.runner.Description', 'methodAndClassNamePatternGroupOrDefault', '([\\s\\S]*)\\((.*)\\)', 'crissCrossMerge_checkOtherFiles(org.eclipse.jgit.merge.RecursiveMergerTest)')","[87781, 87935]"
"('Description.java', 'org.junit.runner.Description', 'methodAndClassNamePatternGroupOrDefault', '([\\s\\S]*)\\((.*)\\)', 'testHardResetAfterSquashMerge(org.eclipse.jgit.api.ResetCommandTest)')","[204541, 204888]"
"('Description.java', 'org.junit.runner.Description', 'methodAndClassNamePatternGroupOrDefault', '([\\s\\S]*)\\((.*)\\)', 'testCreationNullStartPoint(org.eclipse.jgit.api.BranchCommandTest)')","[227240, 227570]"
"('Description.java', 'org.junit.runner.Description', 'methodAndClassNamePatternGroupOrDefault', '([\\s\\S]*)\\((.*)\\)', 'testInvalidCommitNoCommitter1(org.eclipse.jgit.lib.ObjectCheckerTest)')","[122099, 124239]"
"('Description.java', 'org.junit.runner.Description', 'methodAndClassNamePatternGroupOrDefault', '([\\s\\S]*)\\((.*)\\)', 'testMixedGroupCase2[OldRule? false](org.eclipse.jgit.ignore.IgnoreRuleSpecialCasesTest)')","[146122, 153227]"
"('FastIgnoreRule.java', 'org.eclipse.jgit.ignore.FastIgnoreRule', 'isMatch', '[ab]', 'a')",[163570]
"('Description.java', 'org.junit.runner.Description', 'methodAndClassNamePatternGroupOrDefault', '([\\s\\S]*)\\((.*)\\)', 'org.eclipse.jgit.gitrepo.RepoCommandTest')","[139778, 201198]"
"('Description.java', 'org.junit.runner.Description', 'methodAndClassNamePatternGroupOrDefault', '([\\s\\S]*)\\((.*)\\)', 'testSort_Default(org.eclipse.jgit.revwalk.RevWalkSortTest)')","[85022, 85170]"
"('Description.java', 'org.junit.runner.Description', 'methodAndClassNamePatternGroupOrDefault', '([\\s\\S]*)\\((.*)\\)', 'testReadIndex_DirCacheTree(org.eclipse.jgit.dircache.DirCacheCGitCompatabilityTest)')","[90452, 90602]"
"('Description.java', 'org.junit.runner.Description', 'methodAndClassNamePatternGroupOrDefault', '([\\s\\S]*)\\((.*)\\)', 'org.eclipse.jgit.api.TagCommandTest')","[201553, 203242]"
"('Description.java', 'org.junit.runner.Description', 'methodAndClassNamePatternGroupOrDefault', '([\\s\\S]*)\\((.*)\\)', 'testStopWalk(org.eclipse.jgit.treewalk.filter.PathFilterGroupTest)')","[138846, 138995]"
"('ChangeIdUtil.java', 'org.eclipse.jgit.util.ChangeIdUtil', 'indexOfFirstFooterLine', '(^[a-zA-Z0-9-]+:(?!//).*$)', '')","[89523, 89653, 187054, 188953, 189365, 189546, 189727, 190586, 191598]"
"('ChangeIdUtil.java', 'org.eclipse.jgit.util.ChangeIdUtil', 'indexOfFirstFooterLine', '(^[a-zA-Z0-9-]+:(?!//).*$)', 'This reverts commit f371b515060ef3218fa2942d04f30be250bdef76.')",[234270]
"('Description.java', 'org.junit.runner.Description', 'methodAndClassNamePatternGroupOrDefault', '([\\s\\S]*)\\((.*)\\)', 'invalidWhenWildcardBeforeText(org.eclipse.jgit.transport.RefSpecTest)')","[14140, 15661]"
"('URIish.java', 'org.eclipse.jgit.transport.URIish', '<init>', '^(file):([\\\\/](?![\\\\/])((?:[A-Za-z]:)?[\\\\/]?(?:(?:[^\\\\/]+[\\\\/]+)*[^\\\\/]+[\\\\/]*)))$', '/tmp/jgit_test_8384532865018553446_tmp/tmp_7813617932258479589')","[227859, 227984, 228187, 228617]"
"('URIish.java', 'org.eclipse.jgit.transport.URIish', '<init>', '^(file):([\\\\/](?![\\\\/])((?:[A-Za-z]:)?[\\\\/]?(?:(?:[^\\\\/]+[\\\\/]+)*[^\\\\/]+[\\\\/]*)))$', 'file:///tmp/jgit_test_3927059431209010032_tmp/tmp_6602889767515057631/.git/')",[133189]
"('FastIgnoreRule.java', 'org.eclipse.jgit.ignore.FastIgnoreRule', 'isMatch', 'a.*c', 'abc')",[161566]
"('URIish.java', 'org.eclipse.jgit.transport.URIish', '<init>', '^([a-z][a-z0-9+-]+)://(?:(?:([^/:@]+)(?::([^\\\\/]+))?@)?((?:[^\\\\/:]+)|(?:\\[[0-9a-f:]+\\]))(?::(\\d+))?((?:/~(?:[^\\\\/]+))?[\\\\/]))?(.+)?$', 'ssh://l usr\\example.com@example.com/D:/x')","[40635, 40819]"
"('Description.java', 'org.junit.runner.Description', 'methodAndClassNamePatternGroupOrDefault', '([\\s\\S]*)\\((.*)\\)', 'testUpperGroupCase4[OldRule? false](org.eclipse.jgit.ignore.IgnoreRuleSpecialCasesTest)')","[148284, 155389]"
"('URIish.java', 'org.eclipse.jgit.transport.URIish', '<init>', '^([a-z][a-z0-9+-]+)://(?:(?:([^/:@]+)(?::([^\\\\/]+))?@)?((?:[^\\\\/:]+)|(?:\\[[0-9a-f:]+\\]))(?::(\\d+))?((?:/~(?:[^\\\\/]+))?[\\\\/]))?(.+)?$', 'ssh+git://l usr\\example.com@[::1]:1234/D:\\x')",[31481]
"('Description.java', 'org.junit.runner.Description', 'methodAndClassNamePatternGroupOrDefault', '([\\s\\S]*)\\((.*)\\)', 'testGitProtoUnix(org.eclipse.jgit.transport.URIishTest)')","[4117, 5432]"
"('URIish.java', 'org.eclipse.jgit.transport.URIish', '<init>', '^(file):([\\\\/](?![\\\\/])((?:[A-Za-z]:)?[\\\\/]?(?:(?:[^\\\\/]+[\\\\/]+)*[^\\\\/]+[\\\\/]*)))$', 'ssh+git://me@1.2.3.4:80//abc')",[30078]
"('Description.java', 'org.junit.runner.Description', 'methodAndClassNamePatternGroupOrDefault', '([\\s\\S]*)\\((.*)\\)', 'testFirstParentAltersId(org.eclipse.jgit.util.ChangeIdUtilTest)')","[185609, 186358]"
"('Description.java', 'org.junit.runner.Description', 'methodAndClassNamePatternGroupOrDefault', '([\\s\\S]*)\\((.*)\\)', 'org.eclipse.jgit.internal.storage.file.PackReverseIndexTest')","[257098, 257293]"
"('Description.java', 'org.junit.runner.Description', 'methodAndClassNamePatternGroupOrDefault', '([\\s\\S]*)\\((.*)\\)', 'testLimitObjectSize_Length12InsertFails(org.eclipse.jgit.internal.storage.pack.DeltaIndexTest)')","[246361, 246637]"
"('URIish.java', 'org.eclipse.jgit.transport.URIish', '<init>', '^([a-z][a-z0-9+-]+)://(?:(?:([^/:@]+)(?::([^\\\\/]+))?@)?((?:[^\\\\/:]+)|(?:\\[[0-9a-f:]+\\]))(?::(\\d+))?((?:/~(?:[^\\\\/]+))?[\\\\/]))?(.+)?$', 'ssh://example.com/D:/x')","[52779, 52963, 53883, 54067, 54987, 55171]"
"('ChangeIdUtil.java', 'org.eclipse.jgit.util.ChangeIdUtil', 'indexOfChangeId', '(^Change-Id: *I[a-f0-9]{40}$)', 'Change-Id: I0000000000000000000000000000000000000000')",[215666]
"('URIish.java', 'org.eclipse.jgit.transport.URIish', '<init>', '^(file):([\\\\/](?![\\\\/])((?:[A-Za-z]:)?[\\\\/]?(?:(?:[^\\\\/]+[\\\\/]+)*[^\\\\/]+[\\\\/]*)))$', 'ssh://l usr\\example.com@example.com/D:\\x')","[40658, 40842]"
"('URIish.java', 'org.eclipse.jgit.transport.URIish', '<init>', '^(file):([\\\\/](?![\\\\/])((?:[A-Za-z]:)?[\\\\/]?(?:(?:[^\\\\/]+[\\\\/]+)*[^\\\\/]+[\\\\/]*)))$', 'ssh://lusr\\example:wtf@[::1]:80/D:/x')",[13482]
"('URIish.java', 'org.eclipse.jgit.transport.URIish', '<init>', '^(file):([\\\\/](?![\\\\/])((?:[A-Za-z]:)?[\\\\/]?(?:(?:[^\\\\/]+[\\\\/]+)*[^\\\\/]+[\\\\/]*)))$', 'http://lusr\\example@[::1]/D:/x')","[49076, 49260]"
"('URIish.java', 'org.eclipse.jgit.transport.URIish', '<init>', '^(file):([\\\\/](?![\\\\/])((?:[A-Za-z]:)?[\\\\/]?(?:(?:[^\\\\/]+[\\\\/]+)*[^\\\\/]+[\\\\/]*)))$', 'ssh+git://me@example.com//')","[42728, 42912]"
"('Description.java', 'org.junit.runner.Description', 'methodAndClassNamePatternGroupOrDefault', '([\\s\\S]*)\\((.*)\\)', 'org.eclipse.jgit.diff.DiffFormatterTest')","[95832, 96394]"
"('Description.java', 'org.junit.runner.Description', 'methodAndClassNamePatternGroupOrDefault', '([\\s\\S]*)\\((.*)\\)', 'testCherryPickNoCommit(org.eclipse.jgit.api.CherryPickCommandTest)')","[232106, 232361]"
"('Description.java', 'org.junit.runner.Description', 'methodAndClassNamePatternGroupOrDefault', '([\\s\\S]*)\\((.*)\\)', 'testSimplePatterns[OldRule? false](org.eclipse.jgit.ignore.FastIgnoreRuleTest)')","[164203, 164960]"
"('URIish.java', 'org.eclipse.jgit.transport.URIish', '<init>', '^([a-z][a-z0-9+-]+)://(?:(?:([^/:@]+)(?::([^\\\\/]+))?@)?((?:[^\\\\/:]+)|(?:\\[[0-9a-f:]+\\]))(?::(\\d+))?((?:/~(?:[^\\\\/]+))?[\\\\/]))?(.+)?$', 'ssh://me:wtf@1.2.3.4:1234/D:\\x')",[8840]
"('URIish.java', 'org.eclipse.jgit.transport.URIish', '<init>', '^([a-z][a-z0-9+-]+)://(?:(?:([^/:@]+)(?::([^\\\\/]+))?@)?((?:[^\\\\/:]+)|(?:\\[[0-9a-f:]+\\]))(?::(\\d+))?((?:/~(?:[^\\\\/]+))?[\\\\/]))?(.+)?$', 'http://l usr\\example.com@1.2.3.4:1234//')",[34287]
"('URIish.java', 'org.eclipse.jgit.transport.URIish', '<init>', '^(file):([\\\\/](?![\\\\/])((?:[A-Za-z]:)?[\\\\/]?(?:(?:[^\\\\/]+[\\\\/]+)*[^\\\\/]+[\\\\/]*)))$', 'git://host/abc/')",[67154]
"('Description.java', 'org.junit.runner.Description', 'methodAndClassNamePatternGroupOrDefault', '([\\s\\S]*)\\((.*)\\)', 'testDequote_OctalAll(org.eclipse.jgit.util.QuotedStringGitPathStyleTest)')","[177403, 177824]"
"('URIish.java', 'org.eclipse.jgit.transport.URIish', '<init>', '^(file):([\\\\/](?![\\\\/])((?:[A-Za-z]:)?[\\\\/]?(?:(?:[^\\\\/]+[\\\\/]+)*[^\\\\/]+[\\\\/]*)))$', 'file:/tmp/jgit_test_5055048526053498016_tmp/tmp_1936130010314046125.git/')",[179912]
"('Description.java', 'org.junit.runner.Description', 'methodAndClassNamePatternGroupOrDefault', '([\\s\\S]*)\\((.*)\\)', 'testTwoRangesInOneGroupCase5[OldRule? false](org.eclipse.jgit.ignore.IgnoreRuleSpecialCasesTest)')","[149020, 156125]"
"('Description.java', 'org.junit.runner.Description', 'methodAndClassNamePatternGroupOrDefault', '([\\s\\S]*)\\((.*)\\)', 'singlePushInsteadOf(org.eclipse.jgit.transport.RemoteConfigTest)')","[1793, 3082]"
"('URIish.java', 'org.eclipse.jgit.transport.URIish', '<init>', '^(?:([^/:@]+)(?::([^\\\\/]+))?@)?([^\\\\/:]{2,}):([\\\\/](?:(?:[^\\\\/]+[\\\\/]+)*[^\\\\/]+[\\\\/]*))$', '/tmp/jgit_test_2860132279759404209_tmp/tmp_6329217645268813068')","[229543, 229683, 230112]"
"('ChangeIdUtil.java', 'org.eclipse.jgit.util.ChangeIdUtil', 'insertId', '^(Bug|Issue)[a-zA-Z0-9-]*:.*$', 'Issue: 42')",[188621]
"('URIish.java', 'org.eclipse.jgit.transport.URIish', '<init>', '^(file):([\\\\/](?![\\\\/])((?:[A-Za-z]:)?[\\\\/]?(?:(?:[^\\\\/]+[\\\\/]+)*[^\\\\/]+[\\\\/]*)))$', 'file:///tmp/jgit_test_8498942824545659596_tmp/tmp_452757468417483542/.git/')",[133380]
"('URIish.java', 'org.eclipse.jgit.transport.URIish', '<init>', '^([a-z][a-z0-9+-]+)://(?:(?:([^/:@]+)(?::([^\\\\/]+))?@)?((?:[^\\\\/:]+)|(?:\\[[0-9a-f:]+\\]))(?::(\\d+))?((?:/~(?:[^\\\\/]+))?[\\\\/]))?(.+)?$', '/abc.git/')",[66717]
"('Description.java', 'org.junit.runner.Description', 'methodAndClassNamePatternGroupOrDefault', '([\\s\\S]*)\\((.*)\\)', 'testFailureF1(org.eclipse.jgit.api.ApplyCommandTest)')","[223526, 223762]"
"('URIish.java', 'org.eclipse.jgit.transport.URIish', '<init>', '^([a-z][a-z0-9+-]+)://(?:(?:([^/:@]+)(?::([^\\\\/]+))?@)?((?:[^\\\\/:]+)|(?:\\[[0-9a-f:]+\\]))(?::(\\d+))?((?:/~(?:[^\\\\/]+))?[\\\\/]))?(.+)?$', 'https://l usr\\example.com:wtf@1.2.3.4:1234//')",[24123]
"('URIish.java', 'org.eclipse.jgit.transport.URIish', '<init>', '^([a-z][a-z0-9+-]+)://(?:(?:([^/:@]+)(?::([^\\\\/]+))?@)?((?:[^\\\\/:]+)|(?:\\[[0-9a-f:]+\\]))(?::(\\d+))?((?:/~(?:[^\\\\/]+))?[\\\\/]))?(.+)?$', 'ssh+git://me@[::1]:80//')",[30423]
"('Description.java', 'org.junit.runner.Description', 'methodAndClassNamePatternGroupOrDefault', '([\\s\\S]*)\\((.*)\\)', 'testTwoEntries_BackwardsTwo(org.eclipse.jgit.treewalk.CanonicalTreeParserTest)')","[136153, 136482]"
"('Description.java', 'org.junit.runner.Description', 'methodAndClassNamePatternGroupOrDefault', '([\\s\\S]*)\\((.*)\\)', 'testBasic[OldRule? false](org.eclipse.jgit.ignore.IgnoreMatcherParametrizedTest)')","[141415, 141758]"
"('Description.java', 'org.junit.runner.Description', 'methodAndClassNamePatternGroupOrDefault', '([\\s\\S]*)\\((.*)\\)', 'test010_toString(org.eclipse.jgit.lib.ObjectIdTest)')","[130508, 130783]"
"('Description.java', 'org.junit.runner.Description', 'methodAndClassNamePatternGroupOrDefault', '([\\s\\S]*)\\((.*)\\)', 'testDequote_NamedEscapes(org.eclipse.jgit.util.QuotedStringBourneUserPathStyleTest)')","[192555, 192814]"
"('URIish.java', 'org.eclipse.jgit.transport.URIish', '<init>', '^(file):([\\\\/](?![\\\\/])((?:[A-Za-z]:)?[\\\\/]?(?:(?:[^\\\\/]+[\\\\/]+)*[^\\\\/]+[\\\\/]*)))$', 'https://me:wtf@[::1]:80//')",[23548]
"('Description.java', 'org.junit.runner.Description', 'methodAndClassNamePatternGroupOrDefault', '([\\s\\S]*)\\((.*)\\)', 'testInitialCheckout(org.eclipse.jgit.lib.DirCacheCheckoutTest)')","[116095, 117050]"
"('Description.java', 'org.junit.runner.Description', 'methodAndClassNamePatternGroupOrDefault', '([\\s\\S]*)\\((.*)\\)', 'testOnlyOption_f1_12_d(org.eclipse.jgit.api.CommitOnlyTest)')","[237497, 239592]"
"('Description.java', 'org.junit.runner.Description', 'methodAndClassNamePatternGroupOrDefault', '([\\s\\S]*)\\((.*)\\)', 'testInversedGroupCase1[OldRule? false](org.eclipse.jgit.ignore.IgnoreRuleSpecialCasesTest)')","[146927, 154032]"
"('Description.java', 'org.junit.runner.Description', 'methodAndClassNamePatternGroupOrDefault', '([\\s\\S]*)\\((.*)\\)', 'test024_createCommitNonAscii(org.eclipse.jgit.internal.storage.file.T0003_BasicTest)')","[249314, 249857]"
"('Description.java', 'org.junit.runner.Description', 'methodAndClassNamePatternGroupOrDefault', '([\\s\\S]*)\\((.*)\\)', 'testWritePack2DeltasReuseOffsets(org.eclipse.jgit.internal.storage.file.PackWriterTest)')","[251176, 251618]"
"('Description.java', 'org.junit.runner.Description', 'methodAndClassNamePatternGroupOrDefault', '([\\s\\S]*)\\((.*)\\)', 'testCopyZeros_Length128(org.eclipse.jgit.internal.storage.pack.DeltaIndexTest)')","[246340, 246615]"
"('Description.java', 'org.junit.runner.Description', 'methodAndClassNamePatternGroupOrDefault', '([\\s\\S]*)\\((.*)\\)', 'testSpecialGroupCase5[OldRule? true](org.eclipse.jgit.ignore.IgnoreRuleSpecialCasesTest)')","[149386, 156470]"
"('Description.java', 'org.junit.runner.Description', 'methodAndClassNamePatternGroupOrDefault', '([\\s\\S]*)\\((.*)\\)', 'testSignedOffBy_IgnoreWhitespace(org.eclipse.jgit.revwalk.FooterLineTest)')","[77607, 78017]"
"('Description.java', 'org.junit.runner.Description', 'methodAndClassNamePatternGroupOrDefault', '([\\s\\S]*)\\((.*)\\)', 'testObjectId_existing(org.eclipse.jgit.lib.RepositoryResolveTest)')","[125470, 125948]"
"('URIish.java', 'org.eclipse.jgit.transport.URIish', '<init>', '^(file):([\\\\/](?![\\\\/])((?:[A-Za-z]:)?[\\\\/]?(?:(?:[^\\\\/]+[\\\\/]+)*[^\\\\/]+[\\\\/]*)))$', 'ssh+git://l usr\\example.com:wtf@1.2.3.4:1234//')",[16319]
"('Description.java', 'org.junit.runner.Description', 'methodAndClassNamePatternGroupOrDefault', '([\\s\\S]*)\\((.*)\\)', 'testMerged(org.eclipse.jgit.revplot.PlotCommitListTest)')","[197234, 197562]"
"('Description.java', 'org.junit.runner.Description', 'methodAndClassNamePatternGroupOrDefault', '([\\s\\S]*)\\((.*)\\)', 'test027_UnpackedRefHigherPriorityThanPacked(org.eclipse.jgit.internal.storage.file.T0003_BasicTest)')","[249104, 249637]"
"('Description.java', 'org.junit.runner.Description', 'methodAndClassNamePatternGroupOrDefault', '([\\s\\S]*)\\((.*)\\)', 'test_repack(org.eclipse.jgit.internal.storage.file.RefDirectoryTest)')","[257686, 258858]"
"('URIish.java', 'org.eclipse.jgit.transport.URIish', '<init>', '^(file):([\\\\/](?![\\\\/])((?:[A-Za-z]:)?[\\\\/]?(?:(?:[^\\\\/]+[\\\\/]+)*[^\\\\/]+[\\\\/]*)))$', 'file:/tmp/jgit_test_5639268017763295644_tmp/tmp_3481766947146202913/.git/')",[132947]
"('Description.java', 'org.junit.runner.Description', 'methodAndClassNamePatternGroupOrDefault', '([\\s\\S]*)\\((.*)\\)', 'LOCALELOCAL(org.eclipse.jgit.util.GitDateFormatterTest)')","[172135, 172327]"
"('Description.java', 'org.junit.runner.Description', 'methodAndClassNamePatternGroupOrDefault', '([\\s\\S]*)\\((.*)\\)', 'testSet(org.eclipse.jgit.util.RefListTest)')","[179464, 179978]"
"('URIish.java', 'org.eclipse.jgit.transport.URIish', '<init>', '^(file):([\\\\/](?![\\\\/])((?:[A-Za-z]:)?[\\\\/]?(?:(?:[^\\\\/]+[\\\\/]+)*[^\\\\/]+[\\\\/]*)))$', 'http://user:secret@host.xy:80/some/path')","[70183, 70229]"
"('Description.java', 'org.junit.runner.Description', 'methodAndClassNamePatternGroupOrDefault', '([\\s\\S]*)\\((.*)\\)', 'testDirtyFileModeEqualIndexMerge(org.eclipse.jgit.lib.DirCacheCheckoutTest)')","[116767, 117754]"
"('URIish.java', 'org.eclipse.jgit.transport.URIish', '<init>', '^([a-z][a-z0-9+-]+)://(?:(?:([^/:@]+)(?::([^\\\\/]+))?@)?((?:[^\\\\/:]+)|(?:\\[[0-9a-f:]+\\]))(?::(\\d+))?((?:/~(?:[^\\\\/]+))?[\\\\/]))?(.+)?$', 'http://lusr\\example:wtf@[::1]:80//abc')",[22513]
"('Description.java', 'org.junit.runner.Description', 'methodAndClassNamePatternGroupOrDefault', '([\\s\\S]*)\\((.*)\\)', 'testBinaryDontDetect(org.eclipse.jgit.util.io.EolCanonicalizingInputStreamTest)')","[174724, 174878]"
"('URIish.java', 'org.eclipse.jgit.transport.URIish', '<init>', '^(file):([\\\\/](?![\\\\/])((?:[A-Za-z]:)?[\\\\/]?(?:(?:[^\\\\/]+[\\\\/]+)*[^\\\\/]+[\\\\/]*)))$', 'file:///tmp/jgit_test_3786320727865834716_tmp/tmp_7743320247374569502/.git/')",[109153]
"('URIish.java', 'org.eclipse.jgit.transport.URIish', '<init>', '^([a-z][a-z0-9+-]+)://(?:(?:([^/:@]+)(?::([^\\\\/]+))?@)?((?:[^\\\\/:]+)|(?:\\[[0-9a-f:]+\\]))(?::(\\d+))?((?:/~(?:[^\\\\/]+))?[\\\\/]))?(.+)?$', 'ssh+git://lusr\\example@[::1]:80/D:\\x')",[32769]
"('URIish.java', 'org.eclipse.jgit.transport.URIish', '<init>', '^([a-z][a-z0-9+-]+)://(?:(?:([^/:@]+)(?::([^\\\\/]+))?@)?((?:[^\\\\/:]+)|(?:\\[[0-9a-f:]+\\]))(?::(\\d+))?((?:/~(?:[^\\\\/]+))?[\\\\/]))?(.+)?$', 'http://lusr\\example:wtf@1.2.3.4:80/D:\\x')",[22237]
"('Description.java', 'org.junit.runner.Description', 'methodAndClassNamePatternGroupOrDefault', '([\\s\\S]*)\\((.*)\\)', 'testPackWithTrailingGarbage(org.eclipse.jgit.transport.PackParserTest)')","[72155, 72462]"
"('Description.java', 'org.junit.runner.Description', 'methodAndClassNamePatternGroupOrDefault', '([\\s\\S]*)\\((.*)\\)', 'testSegmentsDoNotMatch[OldRule? false](org.eclipse.jgit.ignore.FastIgnoreRuleTest)')","[164180, 164937]"
"('URIish.java', 'org.eclipse.jgit.transport.URIish', '<init>', '^([a-z][a-z0-9+-]+)://(?:(?:([^/:@]+)(?::([^\\\\/]+))?@)?((?:[^\\\\/:]+)|(?:\\[[0-9a-f:]+\\]))(?::(\\d+))?((?:/~(?:[^\\\\/]+))?[\\\\/]))?(.+)?$', 'ssh://me@example.com:1234//')",[25963]
"('Description.java', 'org.junit.runner.Description', 'methodAndClassNamePatternGroupOrDefault', '([\\s\\S]*)\\((.*)\\)', 'testMixedGroupCase9[OldRule? true](org.eclipse.jgit.ignore.IgnoreRuleSpecialCasesTest)')","[149846, 156930]"
"('Description.java', 'org.junit.runner.Description', 'methodAndClassNamePatternGroupOrDefault', '([\\s\\S]*)\\((.*)\\)', 'testDequote_RawUTF8(org.eclipse.jgit.util.QuotedStringGitPathStyleTest)')","[177571, 178000]"
"('ChangeIdUtil.java', 'org.eclipse.jgit.util.ChangeIdUtil', 'indexOfChangeId', '(^Change-Id: *I[a-f0-9]{40}$)', 'Signed-off-by: J Author <ja@example.com>')","[188001, 188312, 188492, 189029, 189158, 189287, 189442, 189623]"
"('URIish.java', 'org.eclipse.jgit.transport.URIish', '<init>', '^(file):([\\\\/](?![\\\\/])((?:[A-Za-z]:)?[\\\\/]?(?:(?:[^\\\\/]+[\\\\/]+)*[^\\\\/]+[\\\\/]*)))$', 'git://example.com:338/D:/m y')","[68780, 68826]"
"('Description.java', 'org.junit.runner.Description', 'methodAndClassNamePatternGroupOrDefault', '([\\s\\S]*)\\((.*)\\)', 'testStopOnConflictAndAbortWithDetachedHEAD(org.eclipse.jgit.api.RebaseCommandTest)')","[218446, 219972]"
"('Description.java', 'org.junit.runner.Description', 'methodAndClassNamePatternGroupOrDefault', '([\\s\\S]*)\\((.*)\\)', 'testReplaceManifestBare(org.eclipse.jgit.gitrepo.RepoCommandTest)')","[140009, 140314]"
"('URIish.java', 'org.eclipse.jgit.transport.URIish', '<init>', '^([a-z][a-z0-9+-]+)://(?:(?:([^/:@]+)(?::([^\\\\/]+))?@)?((?:[^\\\\/:]+)|(?:\\[[0-9a-f:]+\\]))(?::(\\d+))?((?:/~(?:[^\\\\/]+))?[\\\\/]))?(.+)?$', 'ssh://lusr\\example@example.com:1234//abc')",[28445]
"('Description.java', 'org.junit.runner.Description', 'methodAndClassNamePatternGroupOrDefault', '([\\s\\S]*)\\((.*)\\)', 'testSet(org.eclipse.jgit.util.IntListTest)')","[181788, 182023]"
"('URIish.java', 'org.eclipse.jgit.transport.URIish', '<init>', '^([a-z][a-z0-9+-]+)://(?:(?:([^/:@]+)(?::([^\\\\/]+))?@)?((?:[^\\\\/:]+)|(?:\\[[0-9a-f:]+\\]))(?::(\\d+))?((?:/~(?:[^\\\\/]+))?[\\\\/]))?(.+)?$', 'ssh+git://lusr\\example:wtf@1.2.3.4:80/D:\\x')",[17791]
"('URIish.java', 'org.eclipse.jgit.transport.URIish', '<init>', '^([\\\\/]?((?:[A-Za-z]:)?[\\\\/]?(?:(?:[^\\\\/]+[\\\\/]+)*[^\\\\/]+[\\\\/]*)))$', '/tmp/jgit_test_3935765607714589377_tmp/tmp_2556057231773619862/.git')","[230272, 230422]"
"('URIish.java', 'org.eclipse.jgit.transport.URIish', '<init>', '^(file):([\\\\/](?![\\\\/])((?:[A-Za-z]:)?[\\\\/]?(?:(?:[^\\\\/]+[\\\\/]+)*[^\\\\/]+[\\\\/]*)))$', 'file:/tmp/jgit_test_9088460190373350985_tmp/tmp_1606361160327154642/.git/')",[128388]
"('URIish.java', 'org.eclipse.jgit.transport.URIish', '<init>', '^([\\\\/]?((?:[A-Za-z]:)?[\\\\/]?(?:(?:[^\\\\/]+[\\\\/]+)*[^\\\\/]+[\\\\/]*)))$', '/tmp/jgit_test_3729351677476967516_tmp/tmp_3631166462441270745/.git')","[228437, 228587]"
"('Description.java', 'org.junit.runner.Description', 'methodAndClassNamePatternGroupOrDefault', '([\\s\\S]*)\\((.*)\\)', 'testEncodeASCII_FailOnNonASCII(org.eclipse.jgit.lib.ConstantsEncodingTest)')","[118151, 118260]"
"('Description.java', 'org.junit.runner.Description', 'methodAndClassNamePatternGroupOrDefault', '([\\s\\S]*)\\((.*)\\)', 'commitUpdatesSmudgedEntries(org.eclipse.jgit.api.CommitCommandTest)')","[212414, 212630]"
"('URIish.java', 'org.eclipse.jgit.transport.URIish', '<init>', '^([a-z][a-z0-9+-]+)://(?:(?:([^/:@]+)(?::([^\\\\/]+))?@)?((?:[^\\\\/:]+)|(?:\\[[0-9a-f:]+\\]))(?::(\\d+))?((?:/~(?:[^\\\\/]+))?[\\\\/]))?(.+)?$', 'https://lusr\\example:wtf@example.com:80//abc')",[25089]
"('Description.java', 'org.junit.runner.Description', 'methodAndClassNamePatternGroupOrDefault', '([\\s\\S]*)\\((.*)\\)', 'org.eclipse.jgit.util.io.EolCanonicalizingInputStreamTest')","[174577, 174901]"
"('Description.java', 'org.junit.runner.Description', 'methodAndClassNamePatternGroupOrDefault', '([\\s\\S]*)\\((.*)\\)', 'testRepeatedNegationInDifferentFiles1(org.eclipse.jgit.ignore.IgnoreNodeTest)')","[140479, 140776]"
"('URIish.java', 'org.eclipse.jgit.transport.URIish', '<init>', '^(file):([\\\\/](?![\\\\/])((?:[A-Za-z]:)?[\\\\/]?(?:(?:[^\\\\/]+[\\\\/]+)*[^\\\\/]+[\\\\/]*)))$', 'http://lusr\\example@1.2.3.4:1234//abc')",[35414]
"('Description.java', 'org.junit.runner.Description', 'methodAndClassNamePatternGroupOrDefault', '([\\s\\S]*)\\((.*)\\)', 'testMaliciousAbsolutePathTwoLevelsSecondBad(org.eclipse.jgit.lib.DirCacheCheckoutMaliciousPathTest)')","[112185, 113094]"
"('URIish.java', 'org.eclipse.jgit.transport.URIish', '<init>', '^([a-z][a-z0-9+-]+)://(?:(?:([^/:@]+)(?::([^\\\\/]+))?@)?((?:[^\\\\/:]+)|(?:\\[[0-9a-f:]+\\]))(?::(\\d+))?((?:/~(?:[^\\\\/]+))?[\\\\/]))?(.+)?$', 'http://l usr\\example.com@1.2.3.4:80/D:\\x')",[34609]
"('Description.java', 'org.junit.runner.Description', 'methodAndClassNamePatternGroupOrDefault', '([\\s\\S]*)\\((.*)\\)', 'testPrintGroupCase2[OldRule? true](org.eclipse.jgit.ignore.IgnoreRuleSpecialCasesTest)')","[151548, 158632]"
"('URIish.java', 'org.eclipse.jgit.transport.URIish', '<init>', '^(file):([\\\\/](?![\\\\/])((?:[A-Za-z]:)?[\\\\/]?(?:(?:[^\\\\/]+[\\\\/]+)*[^\\\\/]+[\\\\/]*)))$', 'ssh+git://l usr\\example.com@[::1]:80/D:/x')",[31596]
"('Description.java', 'org.junit.runner.Description', 'methodAndClassNamePatternGroupOrDefault', '([\\s\\S]*)\\((.*)\\)', 'testToLowerCaseChar(org.eclipse.jgit.util.StringUtilsTest)')","[175966, 176120]"
"('URIish.java', 'org.eclipse.jgit.transport.URIish', '<init>', '^([a-z][a-z0-9+-]+)://(?:(?:([^/:@]+)(?::([^\\\\/]+))?@)?((?:[^\\\\/:]+)|(?:\\[[0-9a-f:]+\\]))(?::(\\d+))?((?:/~(?:[^\\\\/]+))?[\\\\/]))?(.+)?$', 'http://me:wtf@example.com:80/D:\\x')",[19088]
"('Description.java', 'org.junit.runner.Description', 'methodAndClassNamePatternGroupOrDefault', '([\\s\\S]*)\\((.*)\\)', 'testSingleSubtree_Recursive(org.eclipse.jgit.dircache.DirCacheIteratorTest)')","[92477, 92712]"
"('Description.java', 'org.junit.runner.Description', 'methodAndClassNamePatternGroupOrDefault', '([\\s\\S]*)\\((.*)\\)', 'testReadString_Len0004(org.eclipse.jgit.transport.PacketLineInTest)')","[18355, 19536]"
"('Description.java', 'org.junit.runner.Description', 'methodAndClassNamePatternGroupOrDefault', '([\\s\\S]*)\\((.*)\\)', 'testCloneFIFO(org.eclipse.jgit.revwalk.DateRevQueueTest)')","[82431, 82581]"
"('Description.java', 'org.junit.runner.Description', 'methodAndClassNamePatternGroupOrDefault', '([\\s\\S]*)\\((.*)\\)', 'testOnlyOption_f1_2_c(org.eclipse.jgit.api.CommitOnlyTest)')","[236080, 238140]"
"('URIish.java', 'org.eclipse.jgit.transport.URIish', '<init>', '^(file):([\\\\/](?![\\\\/])((?:[A-Za-z]:)?[\\\\/]?(?:(?:[^\\\\/]+[\\\\/]+)*[^\\\\/]+[\\\\/]*)))$', 'ssh+git://me@[::1]:80/D:/x')",[30492]
"('Description.java', 'org.junit.runner.Description', 'methodAndClassNamePatternGroupOrDefault', '([\\s\\S]*)\\((.*)\\)', 'testStageState_simulated_bug(org.eclipse.jgit.lib.IndexDiffTest)')","[110406, 110749]"
"('URIish.java', 'org.eclipse.jgit.transport.URIish', '<init>', '^(file):([\\\\/](?![\\\\/])((?:[A-Za-z]:)?[\\\\/]?(?:(?:[^\\\\/]+[\\\\/]+)*[^\\\\/]+[\\\\/]*)))$', 'http://everyones.loves.git/u/2')","[71877, 72005, 72284, 72596, 72769, 72817, 72915, 72963]"
"('Description.java', 'org.junit.runner.Description', 'methodAndClassNamePatternGroupOrDefault', '([\\s\\S]*)\\((.*)\\)', 'testJVMDefaultLocale(org.eclipse.jgit.nls.NLSTest)')","[297, 558]"
"('Description.java', 'org.junit.runner.Description', 'methodAndClassNamePatternGroupOrDefault', '([\\s\\S]*)\\((.*)\\)', 'testRebaseParentOntoHeadShouldBeUptoDate(org.eclipse.jgit.api.RebaseCommandTest)')","[218551, 220082]"
"('URIish.java', 'org.eclipse.jgit.transport.URIish', '<init>', '^([a-z][a-z0-9+-]+)://(?:(?:([^/:@]+)(?::([^\\\\/]+))?@)?((?:[^\\\\/:]+)|(?:\\[[0-9a-f:]+\\]))(?::(\\d+))?((?:/~(?:[^\\\\/]+))?[\\\\/]))?(.+)?$', 'https://1.2.3.4//')","[62991, 63175, 64095, 64279, 65199, 65383]"
"('URIish.java', 'org.eclipse.jgit.transport.URIish', '<init>', '^([a-z][a-z0-9+-]+)://(?:(?:([^/:@]+)(?::([^\\\\/]+))?@)?((?:[^\\\\/:]+)|(?:\\[[0-9a-f:]+\\]))(?::(\\d+))?((?:/~(?:[^\\\\/]+))?[\\\\/]))?(.+)?$', 'ssh://lusr\\example@[::1]/D:\\x')","[42521, 42705]"
"('URIish.java', 'org.eclipse.jgit.transport.URIish', '<init>', '^([a-z][a-z0-9+-]+)://(?:(?:([^/:@]+)(?::([^\\\\/]+))?@)?((?:[^\\\\/:]+)|(?:\\[[0-9a-f:]+\\]))(?::(\\d+))?((?:/~(?:[^\\\\/]+))?[\\\\/]))?(.+)?$', 'https://me@[::1]:1234/D:/x')",[36955]
"('Description.java', 'org.junit.runner.Description', 'methodAndClassNamePatternGroupOrDefault', '([\\s\\S]*)\\((.*)\\)', 'testSpecialGroupCase0[OldRule? false](org.eclipse.jgit.ignore.IgnoreRuleSpecialCasesTest)')","[145708, 152813]"
"('Description.java', 'org.junit.runner.Description', 'methodAndClassNamePatternGroupOrDefault', '([\\s\\S]*)\\((.*)\\)', 'testInvalidTreeDuplicateNames4(org.eclipse.jgit.lib.ObjectCheckerTest)')","[122813, 124987]"
"('Description.java', 'org.junit.runner.Description', 'methodAndClassNamePatternGroupOrDefault', '([\\s\\S]*)\\((.*)\\)', 'testContentMerge(org.eclipse.jgit.api.MergeCommandTest)')","[214269, 215210]"
"('URIish.java', 'org.eclipse.jgit.transport.URIish', '<init>', '^([a-z][a-z0-9+-]+)://(?:(?:([^/:@]+)(?::([^\\\\/]+))?@)?((?:[^\\\\/:]+)|(?:\\[[0-9a-f:]+\\]))(?::(\\d+))?((?:/~(?:[^\\\\/]+))?[\\\\/]))?(.+)?$', 'ssh+git://lusr\\example@[::1]:1234//abc')",[32493]
"('URIish.java', 'org.eclipse.jgit.transport.URIish', '<init>', '^(file):([\\\\/](?![\\\\/])((?:[A-Za-z]:)?[\\\\/]?(?:(?:[^\\\\/]+[\\\\/]+)*[^\\\\/]+[\\\\/]*)))$', 'ssh://me@1.2.3.4:80/D:/x')",[26749]
"('URIish.java', 'org.eclipse.jgit.transport.URIish', '<init>', '^([a-z][a-z0-9+-]+)://(?:(?:([^/:@]+)(?::([^\\\\/]+))?@)?((?:[^\\\\/:]+)|(?:\\[[0-9a-f:]+\\]))(?::(\\d+))?((?:/~(?:[^\\\\/]+))?[\\\\/]))?(.+)?$', 'file:///tmp/jgit_test_4757869241683822401_tmp/tmp_7198850080551859564/.git/')",[128250]
"('URIish.java', 'org.eclipse.jgit.transport.URIish', '<init>', '^(file):([\\\\/](?![\\\\/])((?:[A-Za-z]:)?[\\\\/]?(?:(?:[^\\\\/]+[\\\\/]+)*[^\\\\/]+[\\\\/]*)))$', 'https://l usr\\example.com:wtf@1.2.3.4:1234/D:/x')",[24192]
"('URIish.java', 'org.eclipse.jgit.transport.URIish', '<init>', '^(file):([\\\\/](?![\\\\/])((?:[A-Za-z]:)?[\\\\/]?(?:(?:[^\\\\/]+[\\\\/]+)*[^\\\\/]+[\\\\/]*)))$', 'http://me:wtf@example.com:1234/D:\\x')",[18881]
"('URIish.java', 'org.eclipse.jgit.transport.URIish', '<init>', '^([a-z][a-z0-9+-]+)://(?:(?:([^/:@]+)(?::([^\\\\/]+))?@)?((?:[^\\\\/:]+)|(?:\\[[0-9a-f:]+\\]))(?::(\\d+))?((?:/~(?:[^\\\\/]+))?[\\\\/]))?(.+)?$', 'https://me@1.2.3.4:1234/D:\\x')",[36633]
"('Description.java', 'org.junit.runner.Description', 'methodAndClassNamePatternGroupOrDefault', '([\\s\\S]*)\\((.*)\\)', 'testDigitGroupCase5[OldRule? true](org.eclipse.jgit.ignore.IgnoreRuleSpecialCasesTest)')","[150996, 158080]"
"('Description.java', 'org.junit.runner.Description', 'methodAndClassNamePatternGroupOrDefault', '([\\s\\S]*)\\((.*)\\)', 'testCheckoutWithStartPoint(org.eclipse.jgit.api.CheckoutCommandTest)')","[206786, 207294]"
"('URIish.java', 'org.eclipse.jgit.transport.URIish', '<init>', '^([a-z][a-z0-9+-]+)://(?:(?:([^/:@]+)(?::([^\\\\/]+))?@)?((?:[^\\\\/:]+)|(?:\\[[0-9a-f:]+\\]))(?::(\\d+))?((?:/~(?:[^\\\\/]+))?[\\\\/]))?(.+)?$', 'file:///tmp/jgit_test_3766881034479946510_tmp/tmp_3002358776781837063/.git/')",[133916]
"('URIish.java', 'org.eclipse.jgit.transport.URIish', '<init>', '^([a-z][a-z0-9+-]+)://(?:(?:([^/:@]+)(?::([^\\\\/]+))?@)?((?:[^\\\\/:]+)|(?:\\[[0-9a-f:]+\\]))(?::(\\d+))?((?:/~(?:[^\\\\/]+))?[\\\\/]))?(.+)?$', 'https://l usr\\example.com:wtf@1.2.3.4:80//')",[24307]
"('FastIgnoreRule.java', 'org.eclipse.jgit.ignore.FastIgnoreRule', 'isMatch', '[\\p{Ll}]', 'ä')",[160862]
"('URIish.java', 'org.eclipse.jgit.transport.URIish', '<init>', '^(file):([\\\\/](?![\\\\/])((?:[A-Za-z]:)?[\\\\/]?(?:(?:[^\\\\/]+[\\\\/]+)*[^\\\\/]+[\\\\/]*)))$', 'ssh+git://lusr\\example:wtf@example.com:80/D:\\x')",[17400]
"('Description.java', 'org.junit.runner.Description', 'methodAndClassNamePatternGroupOrDefault', '([\\s\\S]*)\\((.*)\\)', 'testNotEmpty_NoPrefix(org.eclipse.jgit.util.RefMapTest)')","[183825, 184290]"
"('Description.java', 'org.junit.runner.Description', 'methodAndClassNamePatternGroupOrDefault', '([\\s\\S]*)\\((.*)\\)', 'org.eclipse.jgit.revwalk.RevWalkCullTest')","[76914, 77340]"
"('URIish.java', 'org.eclipse.jgit.transport.URIish', '<init>', '^(file):([\\\\/](?![\\\\/])((?:[A-Za-z]:)?[\\\\/]?(?:(?:[^\\\\/]+[\\\\/]+)*[^\\\\/]+[\\\\/]*)))$', 'ssh://lusr\\example@example.com/D:\\x')","[41762, 41946]"
"('Description.java', 'org.junit.runner.Description', 'methodAndClassNamePatternGroupOrDefault', '([\\s\\S]*)\\((.*)\\)', 'org.eclipse.jgit.revwalk.RevWalkUtilsCountTest')","[78906, 79622]"
"('Description.java', 'org.junit.runner.Description', 'methodAndClassNamePatternGroupOrDefault', '([\\s\\S]*)\\((.*)\\)', 'testEmptyBuilder(org.eclipse.jgit.util.RefListTest)')","[179716, 180242]"
"('Description.java', 'org.junit.runner.Description', 'methodAndClassNamePatternGroupOrDefault', '([\\s\\S]*)\\((.*)\\)', 'testEmptyRebaseTodo(org.eclipse.jgit.api.RebaseCommandTest)')","[218047, 219554]"
"('URIish.java', 'org.eclipse.jgit.transport.URIish', '<init>', '^(file):([\\\\/](?![\\\\/])((?:[A-Za-z]:)?[\\\\/]?(?:(?:[^\\\\/]+[\\\\/]+)*[^\\\\/]+[\\\\/]*)))$', 'ssh+git://lusr\\example@1.2.3.4//')","[45304, 45488]"
"('Description.java', 'org.junit.runner.Description', 'methodAndClassNamePatternGroupOrDefault', '([\\s\\S]*)\\((.*)\\)', 'testReadFlatTwoNotes(org.eclipse.jgit.notes.NoteMapTest)')","[199009, 199262]"
"('Description.java', 'org.junit.runner.Description', 'methodAndClassNamePatternGroupOrDefault', '([\\s\\S]*)\\((.*)\\)', 'testCreateFileHeaderWithoutIndexLine(org.eclipse.jgit.diff.DiffFormatterTest)')","[96000, 96260]"
"('Description.java', 'org.junit.runner.Description', 'methodAndClassNamePatternGroupOrDefault', '([\\s\\S]*)\\((.*)\\)', 'testFlush(org.eclipse.jgit.transport.PacketLineOutTest)')","[75003, 75175]"
"('Description.java', 'org.junit.runner.Description', 'methodAndClassNamePatternGroupOrDefault', '([\\s\\S]*)\\((.*)\\)', 'testTwoRoots1(org.eclipse.jgit.revplot.PlotCommitListTest)')","[197108, 197430]"
"('URIish.java', 'org.eclipse.jgit.transport.URIish', '<init>', '^([a-z][a-z0-9+-]+)://(?:(?:([^/:@]+)(?::([^\\\\/]+))?@)?((?:[^\\\\/:]+)|(?:\\[[0-9a-f:]+\\]))(?::(\\d+))?((?:/~(?:[^\\\\/]+))?[\\\\/]))?(.+)?$', 'http://l usr\\example.com@example.com:1234/D:/x')",[34011]
"('URIish.java', 'org.eclipse.jgit.transport.URIish', '<init>', '^(file):([\\\\/](?![\\\\/])((?:[A-Za-z]:)?[\\\\/]?(?:(?:[^\\\\/]+[\\\\/]+)*[^\\\\/]+[\\\\/]*)))$', 'file:/tmp/jgit_test_3047862731010516352_tmp/tmp_2759357096188306332/.git/')",[198627]
"('URIish.java', 'org.eclipse.jgit.transport.URIish', '<init>', '^([a-z][a-z0-9+-]+)://(?:(?:([^/:@]+)(?::([^\\\\/]+))?@)?((?:[^\\\\/:]+)|(?:\\[[0-9a-f:]+\\]))(?::(\\d+))?((?:/~(?:[^\\\\/]+))?[\\\\/]))?(.+)?$', 'ssh+git://l usr\\example.com@example.com:80/D:\\x')",[30929]
"('Description.java', 'org.junit.runner.Description', 'methodAndClassNamePatternGroupOrDefault', '([\\s\\S]*)\\((.*)\\)', 'org.eclipse.jgit.util.BlockListTest')","[180495, 181034]"
"('URIish.java', 'org.eclipse.jgit.transport.URIish', '<init>', '^(file):([\\\\/](?![\\\\/])((?:[A-Za-z]:)?[\\\\/]?(?:(?:[^\\\\/]+[\\\\/]+)*[^\\\\/]+[\\\\/]*)))$', 'http://me:wtf@example.com:1234//')",[18617]
"('URIish.java', 'org.eclipse.jgit.transport.URIish', '<init>', '^([a-z][a-z0-9+-]+)://(?:(?:([^/:@]+)(?::([^\\\\/]+))?@)?((?:[^\\\\/:]+)|(?:\\[[0-9a-f:]+\\]))(?::(\\d+))?((?:/~(?:[^\\\\/]+))?[\\\\/]))?(.+)?$', 'http://me@1.2.3.4/D:/x')","[46523, 46707]"
"('URIish.java', 'org.eclipse.jgit.transport.URIish', '<init>', '^(file):([\\\\/](?![\\\\/])((?:[A-Za-z]:)?[\\\\/]?(?:(?:[^\\\\/]+[\\\\/]+)*[^\\\\/]+[\\\\/]*)))$', 'ssh+git://me:wtf@[::1]:80/D:\\x')",[15773]
"('FastIgnoreRule.java', 'org.eclipse.jgit.ignore.FastIgnoreRule', 'isMatch', '[^b-c]', 'a')",[161122]
"('Description.java', 'org.junit.runner.Description', 'methodAndClassNamePatternGroupOrDefault', '([\\s\\S]*)\\((.*)\\)', 'testPullConfigLocalBranch(org.eclipse.jgit.api.BranchCommandTest)')","[227177, 227504]"
"('URIish.java', 'org.eclipse.jgit.transport.URIish', '<init>', '^([a-z][a-z0-9+-]+)://(?:(?:([^/:@]+)(?::([^\\\\/]+))?@)?((?:[^\\\\/:]+)|(?:\\[[0-9a-f:]+\\]))(?::(\\d+))?((?:/~(?:[^\\\\/]+))?[\\\\/]))?(.+)?$', 'ssh://l usr\\example.com@example.com:1234/D:/x')",[27324]
"('Description.java', 'org.junit.runner.Description', 'methodAndClassNamePatternGroupOrDefault', '([\\s\\S]*)\\((.*)\\)', 'testLimitObjectSize_Length130CopyOk(org.eclipse.jgit.internal.storage.pack.DeltaIndexTest)')","[246319, 246593]"
"('Description.java', 'org.junit.runner.Description', 'methodAndClassNamePatternGroupOrDefault', '([\\s\\S]*)\\((.*)\\)', 'testEmptyIfRootDoesNotExist(org.eclipse.jgit.treewalk.FileTreeIteratorTest)')","[131228, 131566]"
"('URIish.java', 'org.eclipse.jgit.transport.URIish', '<init>', '^(file):([\\\\/](?![\\\\/])((?:[A-Za-z]:)?[\\\\/]?(?:(?:[^\\\\/]+[\\\\/]+)*[^\\\\/]+[\\\\/]*)))$', 'file:///tmp/jgit_test_5055048526053498016_tmp/tmp_2027499772864651717/.git/')","[177290, 178993]"
"('URIish.java', 'org.eclipse.jgit.transport.URIish', '<init>', '^([a-z][a-z0-9+-]+)://(?:(?:([^/:@]+)(?::([^\\\\/]+))?@)?((?:[^\\\\/:]+)|(?:\\[[0-9a-f:]+\\]))(?::(\\d+))?((?:/~(?:[^\\\\/]+))?[\\\\/]))?(.+)?$', 'ssh+git://me:wtf@example.com:80//')",[14054]
"('Description.java', 'org.junit.runner.Description', 'methodAndClassNamePatternGroupOrDefault', '([\\s\\S]*)\\((.*)\\)', 'testFilePathCase3[OldRule? false](org.eclipse.jgit.ignore.IgnoreRuleSpecialCasesTest)')","[147847, 154952]"
"('Description.java', 'org.junit.runner.Description', 'methodAndClassNamePatternGroupOrDefault', '([\\s\\S]*)\\((.*)\\)', 'testEscapedBackslash[OldRule? false](org.eclipse.jgit.ignore.IgnoreRuleSpecialCasesTest)')","[147663, 154768]"
"('Description.java', 'org.junit.runner.Description', 'methodAndClassNamePatternGroupOrDefault', '([\\s\\S]*)\\((.*)\\)', 'testComputeFileObjectId(org.eclipse.jgit.treewalk.FileTreeIteratorTest)')","[131249, 131588]"
"('URIish.java', 'org.eclipse.jgit.transport.URIish', '<init>', '^(file):([\\\\/](?![\\\\/])((?:[A-Za-z]:)?[\\\\/]?(?:(?:[^\\\\/]+[\\\\/]+)*[^\\\\/]+[\\\\/]*)))$', 'https://me:wtf@example.com:80//abc')",[22858]
"('Description.java', 'org.junit.runner.Description', 'methodAndClassNamePatternGroupOrDefault', '([\\s\\S]*)\\((.*)\\)', 'org.eclipse.jgit.revwalk.RevWalkMergedIntoTest')","[78252, 78318]"
"('Description.java', 'org.junit.runner.Description', 'methodAndClassNamePatternGroupOrDefault', '([\\s\\S]*)\\((.*)\\)', 'testRenameRemoteTrackingBranch(org.eclipse.jgit.api.BranchCommandTest)')","[227156, 227482]"
"('Description.java', 'org.junit.runner.Description', 'methodAndClassNamePatternGroupOrDefault', '([\\s\\S]*)\\((.*)\\)', 'testEquals_Short(org.eclipse.jgit.lib.AbbreviatedObjectIdTest)')","[114704, 115248]"
"('URIish.java', 'org.eclipse.jgit.transport.URIish', '<init>', '^([a-z][a-z0-9+-]+)://(?:(?:([^/:@]+)(?::([^\\\\/]+))?@)?((?:[^\\\\/:]+)|(?:\\[[0-9a-f:]+\\]))(?::(\\d+))?((?:/~(?:[^\\\\/]+))?[\\\\/]))?(.+)?$', 'ssh://[::1]/D:/x')","[53515, 53699, 54619, 54803, 55723, 55907]"
"('Description.java', 'org.junit.runner.Description', 'methodAndClassNamePatternGroupOrDefault', '([\\s\\S]*)\\((.*)\\)', 'testNotEquals4(org.eclipse.jgit.diff.EditTest)')","[100081, 100431]"
"('URIish.java', 'org.eclipse.jgit.transport.URIish', '<init>', '^(file):([\\\\/](?![\\\\/])((?:[A-Za-z]:)?[\\\\/]?(?:(?:[^\\\\/]+[\\\\/]+)*[^\\\\/]+[\\\\/]*)))$', 'ssh://me@[::1]/D:/x')","[40244, 40428]"
"('URIish.java', 'org.eclipse.jgit.transport.URIish', '<init>', '^(file):([\\\\/](?![\\\\/])((?:[A-Za-z]:)?[\\\\/]?(?:(?:[^\\\\/]+[\\\\/]+)*[^\\\\/]+[\\\\/]*)))$', 'ssh+git://lusr\\example:wtf@[::1]:80/D:/x')",[18399]
"('URIish.java', 'org.eclipse.jgit.transport.URIish', '<init>', '^(file):([\\\\/](?![\\\\/])((?:[A-Za-z]:)?[\\\\/]?(?:(?:[^\\\\/]+[\\\\/]+)*[^\\\\/]+[\\\\/]*)))$', 'https://me@example.com//')","[49352, 49536]"
"('Description.java', 'org.junit.runner.Description', 'methodAndClassNamePatternGroupOrDefault', '([\\s\\S]*)\\((.*)\\)', 'testBoundary(org.eclipse.jgit.util.RawSubStringPatternTest)')","[176200, 176285]"
"('URIish.java', 'org.eclipse.jgit.transport.URIish', '<init>', '^([a-z][a-z0-9+-]+)://(?:(?:([^/:@]+)(?::([^\\\\/]+))?@)?((?:[^\\\\/:]+)|(?:\\[[0-9a-f:]+\\]))(?::(\\d+))?((?:/~(?:[^\\\\/]+))?[\\\\/]))?(.+)?$', 'ssh://l usr\\example.com@1.2.3.4/D:/x')","[41003, 41187]"
"('ChangeIdUtil.java', 'org.eclipse.jgit.util.ChangeIdUtil', 'indexOfChangeId', '(^Change-Id: *I[a-f0-9]{40}$)', 'FIX: this thing')",[190378]
"('Description.java', 'org.junit.runner.Description', 'methodAndClassNamePatternGroupOrDefault', '([\\s\\S]*)\\((.*)\\)', 'testMixedGroupCase8(org.eclipse.jgit.fnmatch.FileNameMatcherTest)')","[101440, 104721]"
"('URIish.java', 'org.eclipse.jgit.transport.URIish', '<init>', '^([a-z][a-z0-9+-]+)://(?:(?:([^/:@]+)(?::([^\\\\/]+))?@)?((?:[^\\\\/:]+)|(?:\\[[0-9a-f:]+\\]))(?::(\\d+))?((?:/~(?:[^\\\\/]+))?[\\\\/]))?(.+)?$', 'ssh+git://lusr\\example:wtf@[::1]:80//abc')",[18334]
"('Description.java', 'org.junit.runner.Description', 'methodAndClassNamePatternGroupOrDefault', '([\\s\\S]*)\\((.*)\\)', 'testSpecialGroupCase4[OldRule? false](org.eclipse.jgit.ignore.IgnoreRuleSpecialCasesTest)')","[145800, 152905]"
"('Description.java', 'org.junit.runner.Description', 'methodAndClassNamePatternGroupOrDefault', '([\\s\\S]*)\\((.*)\\)', 'testInversedGroupCase3[OldRule? true](org.eclipse.jgit.ignore.IgnoreRuleSpecialCasesTest)')","[150536, 157620]"
"('Description.java', 'org.junit.runner.Description', 'methodAndClassNamePatternGroupOrDefault', '([\\s\\S]*)\\((.*)\\)', 'testFormatDays(org.eclipse.jgit.util.RelativeDateFormatterTest)')","[181300, 181491]"
"('URIish.java', 'org.eclipse.jgit.transport.URIish', '<init>', '^(file):([\\\\/](?![\\\\/])((?:[A-Za-z]:)?[\\\\/]?(?:(?:[^\\\\/]+[\\\\/]+)*[^\\\\/]+[\\\\/]*)))$', 'ssh+git://lusr\\example@[::1]//abc')","[45718, 45902]"
"('Description.java', 'org.junit.runner.Description', 'methodAndClassNamePatternGroupOrDefault', '([\\s\\S]*)\\((.*)\\)', 'testMaliciousGitPathEndDotUnixOk(org.eclipse.jgit.lib.DirCacheCheckoutMaliciousPathTest)')","[111786, 112676]"
"('Description.java', 'org.junit.runner.Description', 'methodAndClassNamePatternGroupOrDefault', '([\\s\\S]*)\\((.*)\\)', 'repositoryWithNoSubmodules(org.eclipse.jgit.submodule.SubmoduleStatusTest)')","[109391, 109545]"
"('URIish.java', 'org.eclipse.jgit.transport.URIish', '<init>', '^([a-z][a-z0-9+-]+)://(?:(?:([^/:@]+)(?::([^\\\\/]+))?@)?((?:[^\\\\/:]+)|(?:\\[[0-9a-f:]+\\]))(?::(\\d+))?((?:/~(?:[^\\\\/]+))?[\\\\/]))?(.+)?$', 'ssh+git://example.com/D:/x')","[56091, 56275, 57195, 57379, 58299, 58483]"
"('URIish.java', 'org.eclipse.jgit.transport.URIish', '<init>', '^(file):([\\\\/](?![\\\\/])((?:[A-Za-z]:)?[\\\\/]?(?:(?:[^\\\\/]+[\\\\/]+)*[^\\\\/]+[\\\\/]*)))$', 'ssh+git://l usr\\example.com@example.com:80/D:\\x')",[30906]
"('Description.java', 'org.junit.runner.Description', 'methodAndClassNamePatternGroupOrDefault', '([\\s\\S]*)\\((.*)\\)', 'testCreateFile(org.eclipse.jgit.diff.HistogramDiffTest)')","[98863, 99474]"
"('Description.java', 'org.junit.runner.Description', 'methodAndClassNamePatternGroupOrDefault', '([\\s\\S]*)\\((.*)\\)', 'testMaxCountRevFilter0(org.eclipse.jgit.revwalk.MaxCountRevFilterTest)')","[79534, 79577]"
"('URIish.java', 'org.eclipse.jgit.transport.URIish', '<init>', '^(file):([\\\\/](?![\\\\/])((?:[A-Za-z]:)?[\\\\/]?(?:(?:[^\\\\/]+[\\\\/]+)*[^\\\\/]+[\\\\/]*)))$', 'ssh+git://lusr\\example:wtf@[::1]:1234/D:\\x')",[18135]
"('URIish.java', 'org.eclipse.jgit.transport.URIish', '<init>', '^(file):([\\\\/](?![\\\\/])((?:[A-Za-z]:)?[\\\\/]?(?:(?:[^\\\\/]+[\\\\/]+)*[^\\\\/]+[\\\\/]*)))$', 'http://me:wtf@1.2.3.4:80//abc')",[19671]
"('FastIgnoreRule.java', 'org.eclipse.jgit.ignore.FastIgnoreRule', 'isMatch', '[[\\p{javaDigit}\\p{javaLetter}_]]', '5')",[163310]
"('Description.java', 'org.junit.runner.Description', 'methodAndClassNamePatternGroupOrDefault', '([\\s\\S]*)\\((.*)\\)', 'testClear(org.eclipse.jgit.lib.ObjectIdOwnerMapTest)')","[113606, 113754]"
"('URIish.java', 'org.eclipse.jgit.transport.URIish', '<init>', '^(file):([\\\\/](?![\\\\/])((?:[A-Za-z]:)?[\\\\/]?(?:(?:[^\\\\/]+[\\\\/]+)*[^\\\\/]+[\\\\/]*)))$', 'http://example.com/D:/x')","[59380, 59564, 60484, 60668, 61588, 61772]"
"('Description.java', 'org.junit.runner.Description', 'methodAndClassNamePatternGroupOrDefault', '([\\s\\S]*)\\((.*)\\)', 'testValidTag(org.eclipse.jgit.lib.ValidRefNameTest)')","[118530, 118896]"
"('URIish.java', 'org.eclipse.jgit.transport.URIish', '<init>', '^([a-z][a-z0-9+-]+)://(?:(?:([^/:@]+)(?::([^\\\\/]+))?@)?((?:[^\\\\/:]+)|(?:\\[[0-9a-f:]+\\]))(?::(\\d+))?((?:/~(?:[^\\\\/]+))?[\\\\/]))?(.+)?$', 'ssh://me@example.com//abc')","[39485, 39669]"
"('URIish.java', 'org.eclipse.jgit.transport.URIish', '<init>', '^([a-z][a-z0-9+-]+)://(?:(?:([^/:@]+)(?::([^\\\\/]+))?@)?((?:[^\\\\/:]+)|(?:\\[[0-9a-f:]+\\]))(?::(\\d+))?((?:/~(?:[^\\\\/]+))?[\\\\/]))?(.+)?$', 'ssh://me:wtf@[::1]:1234//')",[9070]
"('URIish.java', 'org.eclipse.jgit.transport.URIish', '<init>', '^(file):([\\\\/](?![\\\\/])((?:[A-Za-z]:)?[\\\\/]?(?:(?:[^\\\\/]+[\\\\/]+)*[^\\\\/]+[\\\\/]*)))$', 'http://me@[::1]:80/D:\\x')",[33850]
"('Description.java', 'org.junit.runner.Description', 'methodAndClassNamePatternGroupOrDefault', '([\\s\\S]*)\\((.*)\\)', 'testSeperateModifications(org.eclipse.jgit.merge.MergeAlgorithmTest)')","[87078, 87377]"
"('URIish.java', 'org.eclipse.jgit.transport.URIish', '<init>', '^(file):([\\\\/](?![\\\\/])((?:[A-Za-z]:)?[\\\\/]?(?:(?:[^\\\\/]+[\\\\/]+)*[^\\\\/]+[\\\\/]*)))$', 'file:///tmp/jgit_test_85796152169093670_tmp/tmp_8177404251779927825/.git/')",[132473]
"('Description.java', 'org.junit.runner.Description', 'methodAndClassNamePatternGroupOrDefault', '([\\s\\S]*)\\((.*)\\)', 'testBareFileKey(org.eclipse.jgit.lib.RepositoryCacheTest)')","[111322, 111449]"
"('Description.java', 'org.junit.runner.Description', 'methodAndClassNamePatternGroupOrDefault', '([\\s\\S]*)\\((.*)\\)', 'testWrap(org.eclipse.jgit.api.GitConstructionTest)')","[203341, 203407]"
"('Description.java', 'org.junit.runner.Description', 'methodAndClassNamePatternGroupOrDefault', '([\\s\\S]*)\\((.*)\\)', 'testAlias_BatchModeDefault(org.eclipse.jgit.transport.OpenSshConfigTest)')","[3274, 3834]"
"('ChangeIdUtil.java', 'org.eclipse.jgit.util.ChangeIdUtil', 'indexOfFirstFooterLine', '^[ \\[].*$', '[ja: Fixed')",[188157]
"('Description.java', 'org.junit.runner.Description', 'methodAndClassNamePatternGroupOrDefault', '([\\s\\S]*)\\((.*)\\)', 'testRelativePath(org.eclipse.jgit.transport.URIishTest)')","[2618, 5080]"
"('URIish.java', 'org.eclipse.jgit.transport.URIish', '<init>', '^(file):([\\\\/](?![\\\\/])((?:[A-Za-z]:)?[\\\\/]?(?:(?:[^\\\\/]+[\\\\/]+)*[^\\\\/]+[\\\\/]*)))$', 'ssh+git://me@example.com:80/D:/x')",[29756]
"('URIish.java', 'org.eclipse.jgit.transport.URIish', '<init>', '^(file):([\\\\/](?![\\\\/])((?:[A-Za-z]:)?[\\\\/]?(?:(?:[^\\\\/]+[\\\\/]+)*[^\\\\/]+[\\\\/]*)))$', 'file:///tmp/jgit_test_245831401761691588_tmp/tmp_6526835764811304817/.git/')",[133777]
"('URIish.java', 'org.eclipse.jgit.transport.URIish', '<init>', '^(file):([\\\\/](?![\\\\/])((?:[A-Za-z]:)?[\\\\/]?(?:(?:[^\\\\/]+[\\\\/]+)*[^\\\\/]+[\\\\/]*)))$', 'ssh+git://l usr\\example.com:wtf@example.com:1234//')",[15885]
"('Description.java', 'org.junit.runner.Description', 'methodAndClassNamePatternGroupOrDefault', '([\\s\\S]*)\\((.*)\\)', 'testBuildThenClear(org.eclipse.jgit.dircache.DirCacheBasicTest)')","[90025, 90264]"
"('Description.java', 'org.junit.runner.Description', 'methodAndClassNamePatternGroupOrDefault', '([\\s\\S]*)\\((.*)\\)', 'org.eclipse.jgit.revwalk.ObjectWalkTest')","[76343, 77066]"
"('URIish.java', 'org.eclipse.jgit.transport.URIish', '<init>', '^(file):([\\\\/](?![\\\\/])((?:[A-Za-z]:)?[\\\\/]?(?:(?:[^\\\\/]+[\\\\/]+)*[^\\\\/]+[\\\\/]*)))$', 'ssh://me:wtf@[::1]:1234/D:\\x')",[9743]
"('Description.java', 'org.junit.runner.Description', 'methodAndClassNamePatternGroupOrDefault', '([\\s\\S]*)\\((.*)\\)', 'testFilePathCase3[OldRule? true](org.eclipse.jgit.ignore.IgnoreRuleSpecialCasesTest)')","[151410, 158494]"
"('URIish.java', 'org.eclipse.jgit.transport.URIish', '<init>', '^(file):([\\\\/](?![\\\\/])((?:[A-Za-z]:)?[\\\\/]?(?:(?:[^\\\\/]+[\\\\/]+)*[^\\\\/]+[\\\\/]*)))$', 'file:///tmp/jgit_test_4201770803038451844_tmp/tmp_9073105048792238449/.git/')",[205563]
"('URIish.java', 'org.eclipse.jgit.transport.URIish', '<init>', '^([a-z][a-z0-9+-]+)://(?:(?:([^/:@]+)(?::([^\\\\/]+))?@)?((?:[^\\\\/:]+)|(?:\\[[0-9a-f:]+\\]))(?::(\\d+))?((?:/~(?:[^\\\\/]+))?[\\\\/]))?(.+)?$', 'ssh+git://lusr\\example:wtf@[::1]:1234/D:/x')",[17929]
"('Description.java', 'org.junit.runner.Description', 'methodAndClassNamePatternGroupOrDefault', '([\\s\\S]*)\\((.*)\\)', 'testMaliciousGitPath2(org.eclipse.jgit.lib.DirCacheCheckoutMaliciousPathTest)')","[112311, 113226]"
"('Description.java', 'org.junit.runner.Description', 'methodAndClassNamePatternGroupOrDefault', '([\\s\\S]*)\\((.*)\\)', 'testMultipleEscapedCharacters1(org.eclipse.jgit.fnmatch.FileNameMatcherTest)')","[102238, 105557]"
"('URIish.java', 'org.eclipse.jgit.transport.URIish', '<init>', '^([a-z][a-z0-9+-]+)://(?:(?:([^/:@]+)(?::([^\\\\/]+))?@)?((?:[^\\\\/:]+)|(?:\\[[0-9a-f:]+\\]))(?::(\\d+))?((?:/~(?:[^\\\\/]+))?[\\\\/]))?(.+)?$', 'ssh+git://lusr\\example:wtf@[::1]:1234/D:\\x')",[18200]
"('Description.java', 'org.junit.runner.Description', 'methodAndClassNamePatternGroupOrDefault', '([\\s\\S]*)\\((.*)\\)', 'testOnlyOption_f1_9_a(org.eclipse.jgit.api.CommitOnlyTest)')","[236773, 238866]"
"('Description.java', 'org.junit.runner.Description', 'methodAndClassNamePatternGroupOrDefault', '([\\s\\S]*)\\((.*)\\)', 'testUnsupportedGroupCase1[OldRule? false](org.eclipse.jgit.ignore.IgnoreRuleSpecialCasesTest)')","[147617, 154722]"
"('URIish.java', 'org.eclipse.jgit.transport.URIish', '<init>', '^([a-z][a-z0-9+-]+)://(?:(?:([^/:@]+)(?::([^\\\\/]+))?@)?((?:[^\\\\/:]+)|(?:\\[[0-9a-f:]+\\]))(?::(\\d+))?((?:/~(?:[^\\\\/]+))?[\\\\/]))?(.+)?$', 'https://lusr\\example:wtf@example.com:80/D:/x')",[25135]
"('Description.java', 'org.junit.runner.Description', 'methodAndClassNamePatternGroupOrDefault', '([\\s\\S]*)\\((.*)\\)', 'test007_readUserConfig(org.eclipse.jgit.lib.ConfigTest)')","[129659, 130407]"
"('URIish.java', 'org.eclipse.jgit.transport.URIish', '<init>', '^(file):([\\\\/](?![\\\\/])((?:[A-Za-z]:)?[\\\\/]?(?:(?:[^\\\\/]+[\\\\/]+)*[^\\\\/]+[\\\\/]*)))$', 'file:///tmp/jgit_test_5639268017763295644_tmp/tmp_3481766947146202913/.git/')",[132983]
"('URIish.java', 'org.eclipse.jgit.transport.URIish', '<init>', '^(file):([\\\\/](?![\\\\/])((?:[A-Za-z]:)?[\\\\/]?(?:(?:[^\\\\/]+[\\\\/]+)*[^\\\\/]+[\\\\/]*)))$', 'ssh+git://l usr\\example.com@[::1]:80/D:\\x')",[31642]
"('Description.java', 'org.junit.runner.Description', 'methodAndClassNamePatternGroupOrDefault', '([\\s\\S]*)\\((.*)\\)', 'testOnlyOption_f1_11_a(org.eclipse.jgit.api.CommitOnlyTest)')","[237329, 239416]"
"('Description.java', 'org.junit.runner.Description', 'methodAndClassNamePatternGroupOrDefault', '([\\s\\S]*)\\((.*)\\)', 'testSkipRevFilter0(org.eclipse.jgit.revwalk.SkipRevFilterTest)')","[82201, 82265]"
"('URIish.java', 'org.eclipse.jgit.transport.URIish', '<init>', '^([a-z][a-z0-9+-]+)://(?:(?:([^/:@]+)(?::([^\\\\/]+))?@)?((?:[^\\\\/:]+)|(?:\\[[0-9a-f:]+\\]))(?::(\\d+))?((?:/~(?:[^\\\\/]+))?[\\\\/]))?(.+)?$', 'file:///tmp/jgit_test_4646074331197424180_tmp/tmp_6800981996560318800')","[222983, 223045, 223362]"
"('URIish.java', 'org.eclipse.jgit.transport.URIish', '<init>', '^(?:([^/:@]+)(?::([^\\\\/]+))?@)?([^\\\\/:]{2,}):([\\\\/](?:(?:[^\\\\/]+[\\\\/]+)*[^\\\\/]+[\\\\/]*))$', '../tmp_6907696380270154428')",[73087]
"('URIish.java', 'org.eclipse.jgit.transport.URIish', '<init>', '^([a-z][a-z0-9+-]+)://(?:(?:([^/:@]+)(?::([^\\\\/]+))?@)?((?:[^\\\\/:]+)|(?:\\[[0-9a-f:]+\\]))(?::(\\d+))?((?:/~(?:[^\\\\/]+))?[\\\\/]))?(.+)?$', 'ssh+git://lusr\\example:wtf@[::1]:1234//')",[17837]
"('Description.java', 'org.junit.runner.Description', 'methodAndClassNamePatternGroupOrDefault', '([\\s\\S]*)\\((.*)\\)', 'testRebaseWithUncommittedMasterChangeOtherCommit(org.eclipse.jgit.api.RebaseCommandTest)')","[218614, 220148]"
"('URIish.java', 'org.eclipse.jgit.transport.URIish', '<init>', '^(file):([\\\\/](?![\\\\/])((?:[A-Za-z]:)?[\\\\/]?(?:(?:[^\\\\/]+[\\\\/]+)*[^\\\\/]+[\\\\/]*)))$', 'http://l usr\\example.com@[::1]:1234/D:/x')",[34724]
"('Description.java', 'org.junit.runner.Description', 'methodAndClassNamePatternGroupOrDefault', '([\\s\\S]*)\\((.*)\\)', 'resolveTwoLevelHigherRelativeUrl(org.eclipse.jgit.submodule.SubmoduleInitTest)')","[100599, 100748]"
"('URIish.java', 'org.eclipse.jgit.transport.URIish', '<init>', '^([a-z][a-z0-9+-]+)://(?:(?:([^/:@]+)(?::([^\\\\/]+))?@)?((?:[^\\\\/:]+)|(?:\\[[0-9a-f:]+\\]))(?::(\\d+))?((?:/~(?:[^\\\\/]+))?[\\\\/]))?(.+)?$', 'file:///tmp/jgit_test_5894805465915130405_tmp/tmp_6468847463949528491')","[200875, 200937, 201121]"
"('Description.java', 'org.junit.runner.Description', 'methodAndClassNamePatternGroupOrDefault', '([\\s\\S]*)\\((.*)\\)', 'testCreateFromLightweightTag(org.eclipse.jgit.api.BranchCommandTest)')","[226847, 227284]"
"('Description.java', 'org.junit.runner.Description', 'methodAndClassNamePatternGroupOrDefault', '([\\s\\S]*)\\((.*)\\)', 'testReadString_End(org.eclipse.jgit.transport.PacketLineInTest)')","[18070, 19290]"
"('Description.java', 'org.junit.runner.Description', 'methodAndClassNamePatternGroupOrDefault', '([\\s\\S]*)\\((.*)\\)', 'testThreeEntries_Seek2(org.eclipse.jgit.treewalk.CanonicalTreeParserTest)')","[135880, 136196]"
"('Description.java', 'org.junit.runner.Description', 'methodAndClassNamePatternGroupOrDefault', '([\\s\\S]*)\\((.*)\\)', 'test021_createTreeTag(org.eclipse.jgit.internal.storage.file.T0003_BasicTest)')","[249251, 249791]"
"('Description.java', 'org.junit.runner.Description', 'methodAndClassNamePatternGroupOrDefault', '([\\s\\S]*)\\((.*)\\)', 'testWildcardInMiddleOfDestionation(org.eclipse.jgit.transport.RefSpecTest)')","[12505, 14878]"
"('Description.java', 'org.junit.runner.Description', 'methodAndClassNamePatternGroupOrDefault', '([\\s\\S]*)\\((.*)\\)', 'testMaliciousGitPath2Case(org.eclipse.jgit.lib.DirCacheCheckoutMaliciousPathTest)')","[111933, 112830]"
"('Description.java', 'org.junit.runner.Description', 'methodAndClassNamePatternGroupOrDefault', '([\\s\\S]*)\\((.*)\\)', 'testPackCommitsAndLooseOneWithPruneNow(org.eclipse.jgit.internal.storage.file.GcPruneNonReferencedTest)')","[256301, 256410]"
"('Description.java', 'org.junit.runner.Description', 'methodAndClassNamePatternGroupOrDefault', '([\\s\\S]*)\\((.*)\\)', 'testContext3(org.eclipse.jgit.diff.DiffFormatterReflowTest)')","[94309, 94524]"
"('URIish.java', 'org.eclipse.jgit.transport.URIish', '<init>', '^([a-z][a-z0-9+-]+)://(?:(?:([^/:@]+)(?::([^\\\\/]+))?@)?((?:[^\\\\/:]+)|(?:\\[[0-9a-f:]+\\]))(?::(\\d+))?((?:/~(?:[^\\\\/]+))?[\\\\/]))?(.+)?$', 'ssh://lusr\\example@1.2.3.4//')","[42015, 42199]"
"('Description.java', 'org.junit.runner.Description', 'methodAndClassNamePatternGroupOrDefault', '([\\s\\S]*)\\((.*)\\)', 'org.eclipse.jgit.diff.MyersDiffTest')","[96896, 98096]"
"('Description.java', 'org.junit.runner.Description', 'methodAndClassNamePatternGroupOrDefault', '([\\s\\S]*)\\((.*)\\)', 'testReadACK_Invalid2(org.eclipse.jgit.transport.PacketLineInTest)')","[18464, 19648]"
"('URIish.java', 'org.eclipse.jgit.transport.URIish', '<init>', '^(file):([\\\\/](?![\\\\/])((?:[A-Za-z]:)?[\\\\/]?(?:(?:[^\\\\/]+[\\\\/]+)*[^\\\\/]+[\\\\/]*)))$', 'ssh://lusr\\example@1.2.3.4/D:/x')","[42084, 42268]"
"('URIish.java', 'org.eclipse.jgit.transport.URIish', '<init>', '^([a-z][a-z0-9+-]+)://(?:(?:([^/:@]+)(?::([^\\\\/]+))?@)?((?:[^\\\\/:]+)|(?:\\[[0-9a-f:]+\\]))(?::(\\d+))?((?:/~(?:[^\\\\/]+))?[\\\\/]))?(.+)?$', 'ssh+git://lusr\\example@[::1]/D:\\x')","[45833, 46017]"
"('Description.java', 'org.junit.runner.Description', 'methodAndClassNamePatternGroupOrDefault', '([\\s\\S]*)\\((.*)\\)', 'testNoLog(org.eclipse.jgit.internal.storage.file.ReflogReaderTest)')","[259837, 260009]"
"('URIish.java', 'org.eclipse.jgit.transport.URIish', '<init>', '^([a-z][a-z0-9+-]+)://(?:(?:([^/:@]+)(?::([^\\\\/]+))?@)?((?:[^\\\\/:]+)|(?:\\[[0-9a-f:]+\\]))(?::(\\d+))?((?:/~(?:[^\\\\/]+))?[\\\\/]))?(.+)?$', 'ssh+git://me:wtf@1.2.3.4:80/D:/x')",[14810]
"('Description.java', 'org.junit.runner.Description', 'methodAndClassNamePatternGroupOrDefault', '([\\s\\S]*)\\((.*)\\)', 'testIteratorReturnedValues2(org.eclipse.jgit.internal.storage.file.PackIndexV2Test)')","[248133, 248264]"
"('FastIgnoreRule.java', 'org.eclipse.jgit.ignore.FastIgnoreRule', 'isMatch', '[\\p{Ll}]', 'A')",[160810]
"('Description.java', 'org.junit.runner.Description', 'methodAndClassNamePatternGroupOrDefault', '([\\s\\S]*)\\((.*)\\)', 'testSpecialGroupCase9[OldRule? true](org.eclipse.jgit.ignore.IgnoreRuleSpecialCasesTest)')","[149478, 156562]"
"('Description.java', 'org.junit.runner.Description', 'methodAndClassNamePatternGroupOrDefault', '([\\s\\S]*)\\((.*)\\)', 'testReadNotExistingBranchConfig(org.eclipse.jgit.internal.storage.file.RefDirectoryTest)')","[257959, 259144]"
"('URIish.java', 'org.eclipse.jgit.transport.URIish', '<init>', '^([a-z][a-z0-9+-]+)://(?:(?:([^/:@]+)(?::([^\\\\/]+))?@)?((?:[^\\\\/:]+)|(?:\\[[0-9a-f:]+\\]))(?::(\\d+))?((?:/~(?:[^\\\\/]+))?[\\\\/]))?(.+)?$', 'http://l usr\\example.com:wtf@1.2.3.4:80//')",[20972]
"('Description.java', 'org.junit.runner.Description', 'methodAndClassNamePatternGroupOrDefault', '([\\s\\S]*)\\((.*)\\)', 'testEmpty_NoPrefix2(org.eclipse.jgit.util.RefMapTest)')","[184035, 184510]"
"('URIish.java', 'org.eclipse.jgit.transport.URIish', '<init>', '^([a-z][a-z0-9+-]+)://(?:(?:([^/:@]+)(?::([^\\\\/]+))?@)?((?:[^\\\\/:]+)|(?:\\[[0-9a-f:]+\\]))(?::(\\d+))?((?:/~(?:[^\\\\/]+))?[\\\\/]))?(.+)?$', 'file:///tmp/jgit_test_7477458086125555260_tmp/tmp_7191108422991619607')","[209257, 209319, 209828]"
"('Description.java', 'org.junit.runner.Description', 'methodAndClassNamePatternGroupOrDefault', '([\\s\\S]*)\\((.*)\\)', 'testOnlyOption_f1_3_e(org.eclipse.jgit.api.CommitOnlyTest)')","[236227, 238294]"
"('ChangeIdUtil.java', 'org.eclipse.jgit.util.ChangeIdUtil', 'indexOfChangeId', '(^Change-Id: *I[a-f0-9]{40}$)', 'Issue: 42')",[188518]
"('Description.java', 'org.junit.runner.Description', 'methodAndClassNamePatternGroupOrDefault', '([\\s\\S]*)\\((.*)\\)', 'fetchShouldNotFetchTagsFromOtherBranches(org.eclipse.jgit.api.FetchCommandTest)')","[242869, 242997]"
"('URIish.java', 'org.eclipse.jgit.transport.URIish', '<init>', '^([a-z][a-z0-9+-]+)://(?:(?:([^/:@]+)(?::([^\\\\/]+))?@)?((?:[^\\\\/:]+)|(?:\\[[0-9a-f:]+\\]))(?::(\\d+))?((?:/~(?:[^\\\\/]+))?[\\\\/]))?(.+)?$', 'http://l usr\\example.com:wtf@[::1]:1234/D:/x')",[21271]
"('ChangeIdUtil.java', 'org.eclipse.jgit.util.ChangeIdUtil', 'indexOfChangeId', '(^Change-Id: *I[a-f0-9]{40}$)', 'Change-Id: I4f4e2e1e8568ddc1509baecb8c1270a1fb4b6da7')","[188771, 190274]"
"('Description.java', 'org.junit.runner.Description', 'methodAndClassNamePatternGroupOrDefault', '([\\s\\S]*)\\((.*)\\)', 'testTwoRangesInOneGroupCase1(org.eclipse.jgit.fnmatch.FileNameMatcherTest)')","[103876, 107273]"
"('Description.java', 'org.junit.runner.Description', 'methodAndClassNamePatternGroupOrDefault', '([\\s\\S]*)\\((.*)\\)', 'testDecodeInt32(org.eclipse.jgit.util.NBTest)')","[184851, 185023]"
"('Description.java', 'org.junit.runner.Description', 'methodAndClassNamePatternGroupOrDefault', '([\\s\\S]*)\\((.*)\\)', 'testParse_explicit_bad_encoded2(org.eclipse.jgit.revwalk.RevTagParseTest)')","[80249, 80659]"
"('URIish.java', 'org.eclipse.jgit.transport.URIish', '<init>', '^([a-z][a-z0-9+-]+)://(?:(?:([^/:@]+)(?::([^\\\\/]+))?@)?((?:[^\\\\/:]+)|(?:\\[[0-9a-f:]+\\]))(?::(\\d+))?((?:/~(?:[^\\\\/]+))?[\\\\/]))?(.+)?$', 'http://l usr\\example.com:wtf@example.com:1234/D:\\x')",[20558]
"('Description.java', 'org.junit.runner.Description', 'methodAndClassNamePatternGroupOrDefault', '([\\s\\S]*)\\((.*)\\)', 'testParseNonGitDescribe(org.eclipse.jgit.lib.RepositoryResolveTest)')","[125407, 125882]"
"('Description.java', 'org.junit.runner.Description', 'methodAndClassNamePatternGroupOrDefault', '([\\s\\S]*)\\((.*)\\)', 'testStandardFormat_SmallObject(org.eclipse.jgit.internal.storage.file.UnpackedObjectTest)')","[254959, 255275]"
"('Description.java', 'org.junit.runner.Description', 'methodAndClassNamePatternGroupOrDefault', '([\\s\\S]*)\\((.*)\\)', 'org.eclipse.jgit.diff.RenameDetectorTest')","[93027, 94931]"
"('Description.java', 'org.junit.runner.Description', 'methodAndClassNamePatternGroupOrDefault', '([\\s\\S]*)\\((.*)\\)', 'org.eclipse.jgit.nls.TranslationBundleTest')","[36, 1007]"
"('URIish.java', 'org.eclipse.jgit.transport.URIish', '<init>', '^([a-z][a-z0-9+-]+)://(?:(?:([^/:@]+)(?::([^\\\\/]+))?@)?((?:[^\\\\/:]+)|(?:\\[[0-9a-f:]+\\]))(?::(\\d+))?((?:/~(?:[^\\\\/]+))?[\\\\/]))?(.+)?$', 'https://lusr\\example:wtf@example.com:80//')",[25043]
"('Description.java', 'org.junit.runner.Description', 'methodAndClassNamePatternGroupOrDefault', '([\\s\\S]*)\\((.*)\\)', 'testSetRenameScore_IllegalArgs(org.eclipse.jgit.diff.RenameDetectorTest)')","[93216, 93771]"
"('URIish.java', 'org.eclipse.jgit.transport.URIish', '<init>', '^([a-z][a-z0-9+-]+)://(?:(?:([^/:@]+)(?::([^\\\\/]+))?@)?((?:[^\\\\/:]+)|(?:\\[[0-9a-f:]+\\]))(?::(\\d+))?((?:/~(?:[^\\\\/]+))?[\\\\/]))?(.+)?$', 'ssh://l usr\\example.com:wtf@[::1]:1234/D:\\x')",[12038]
"('Description.java', 'org.junit.runner.Description', 'methodAndClassNamePatternGroupOrDefault', '([\\s\\S]*)\\((.*)\\)', 'org.eclipse.jgit.api.ReflogCommandTest')","[240518, 241937]"
"('URIish.java', 'org.eclipse.jgit.transport.URIish', '<init>', '^(?:([^/:@]+)(?::([^\\\\/]+))?@)?((?:[^\\\\/:]+)|(?:\\[[0-9a-f:]+\\])):((?:(?:/~(?:[^\\\\/]+))[\\\\/])?(?:(?:[^\\\\/]+[\\\\/]+)*[^\\\\/]+[\\\\/]*))$', '/~some/p ath')","[68596, 68711]"
"('URIish.java', 'org.eclipse.jgit.transport.URIish', '<init>', '^([a-z][a-z0-9+-]+)://(?:(?:([^/:@]+)(?::([^\\\\/]+))?@)?((?:[^\\\\/:]+)|(?:\\[[0-9a-f:]+\\]))(?::(\\d+))?((?:/~(?:[^\\\\/]+))?[\\\\/]))?(.+)?$', 'ssh+git://l usr\\example.com@1.2.3.4:80//')",[31159]
"('Description.java', 'org.junit.runner.Description', 'methodAndClassNamePatternGroupOrDefault', '([\\s\\S]*)\\((.*)\\)', 'testHasChangeid(org.eclipse.jgit.util.ChangeIdUtilTest)')","[185588, 186336]"
"('Description.java', 'org.junit.runner.Description', 'methodAndClassNamePatternGroupOrDefault', '([\\s\\S]*)\\((.*)\\)', 'org.eclipse.jgit.api.NameRevCommandTest')","[241973, 243284]"
"('URIish.java', 'org.eclipse.jgit.transport.URIish', '<init>', '^([\\\\/]?((?:[A-Za-z]:)?[\\\\/]?(?:(?:[^\\\\/]+[\\\\/]+)*[^\\\\/]+[\\\\/]*)))$', '/tmp/jgit_test_2412289587651931572_tmp/tmp_8062070046587231599/.git')","[229842, 229992]"
"('Description.java', 'org.junit.runner.Description', 'methodAndClassNamePatternGroupOrDefault', '([\\s\\S]*)\\((.*)\\)', 'testXDigitGroupCase1(org.eclipse.jgit.fnmatch.FileNameMatcherTest)')","[103519, 106899]"
"('Description.java', 'org.junit.runner.Description', 'methodAndClassNamePatternGroupOrDefault', '([\\s\\S]*)\\((.*)\\)', 'testFilter_ALL_And_NONE(org.eclipse.jgit.revwalk.RevWalkFilterTest)')","[83314, 83665]"
"('URIish.java', 'org.eclipse.jgit.transport.URIish', '<init>', '^([\\\\/]?((?:[A-Za-z]:)?[\\\\/]?(?:(?:[^\\\\/]+[\\\\/]+)*[^\\\\/]+[\\\\/]*)))$', '/another/dir')","[6131, 6969, 10056]"
"('URIish.java', 'org.eclipse.jgit.transport.URIish', '<init>', '^(file):([\\\\/](?![\\\\/])((?:[A-Za-z]:)?[\\\\/]?(?:(?:[^\\\\/]+[\\\\/]+)*[^\\\\/]+[\\\\/]*)))$', 'file:///tmp/jgit_test_8806619254737089499_tmp/tmp_2300954382523582170/.git/')",[245349]
"('URIish.java', 'org.eclipse.jgit.transport.URIish', '<init>', '^(file):([\\\\/](?![\\\\/])((?:[A-Za-z]:)?[\\\\/]?(?:(?:[^\\\\/]+[\\\\/]+)*[^\\\\/]+[\\\\/]*)))$', 'ssh://lusr\\example@example.com:80//')",[28560]
"('Description.java', 'org.junit.runner.Description', 'methodAndClassNamePatternGroupOrDefault', '([\\s\\S]*)\\((.*)\\)', 'org.eclipse.jgit.revwalk.RevWalkResetTest')","[82916, 82982]"
"('FastIgnoreRule.java', 'org.eclipse.jgit.ignore.FastIgnoreRule', 'isMatch', '[\\p{Lu}]', '.')",[162814]
"('Description.java', 'org.junit.runner.Description', 'methodAndClassNamePatternGroupOrDefault', '([\\s\\S]*)\\((.*)\\)', 'testStopOnConflictAndContinue(org.eclipse.jgit.api.RebaseCommandTest)')","[218278, 219796]"
"('Description.java', 'org.junit.runner.Description', 'methodAndClassNamePatternGroupOrDefault', '([\\s\\S]*)\\((.*)\\)', 'testPullWithMergeConfig2(org.eclipse.jgit.api.PullCommandTest)')","[220714, 221057]"
"('Description.java', 'org.junit.runner.Description', 'methodAndClassNamePatternGroupOrDefault', '([\\s\\S]*)\\((.*)\\)', 'testInvalidTreeNameIsDotDot(org.eclipse.jgit.lib.ObjectCheckerTest)')","[122057, 124195]"
"('Description.java', 'org.junit.runner.Description', 'methodAndClassNamePatternGroupOrDefault', '([\\s\\S]*)\\((.*)\\)', 'testGetters(org.eclipse.jgit.ignore.IgnoreMatcherTest)')","[145344, 145539]"
"('ChangeIdUtil.java', 'org.eclipse.jgit.util.ChangeIdUtil', 'indexOfChangeId', '(^Change-Id: *I[a-f0-9]{40}$)', '     the indentation]')",[187949]
"('Description.java', 'org.junit.runner.Description', 'methodAndClassNamePatternGroupOrDefault', '([\\s\\S]*)\\((.*)\\)', 'org.eclipse.jgit.transport.HttpAuthTest')","[67834, 71924]"
"('URIish.java', 'org.eclipse.jgit.transport.URIish', '<init>', '^(file):([\\\\/](?![\\\\/])((?:[A-Za-z]:)?[\\\\/]?(?:(?:[^\\\\/]+[\\\\/]+)*[^\\\\/]+[\\\\/]*)))$', 'ssh+git://l usr\\example.com@[::1]//abc')","[44614, 44798]"
"('Description.java', 'org.junit.runner.Description', 'methodAndClassNamePatternGroupOrDefault', '([\\s\\S]*)\\((.*)\\)', 'testNewNamespaceConflictWithPackedPrefixOfExisting(org.eclipse.jgit.internal.storage.file.RefUpdateTest)')","[253460, 254312]"
"('URIish.java', 'org.eclipse.jgit.transport.URIish', '<init>', '^(file):([\\\\/](?![\\\\/])((?:[A-Za-z]:)?[\\\\/]?(?:(?:[^\\\\/]+[\\\\/]+)*[^\\\\/]+[\\\\/]*)))$', 'https://me@[::1]//abc')","[50134, 50318]"
"('URIish.java', 'org.eclipse.jgit.transport.URIish', '<init>', '^([a-z][a-z0-9+-]+)://(?:(?:([^/:@]+)(?::([^\\\\/]+))?@)?((?:[^\\\\/:]+)|(?:\\[[0-9a-f:]+\\]))(?::(\\d+))?((?:/~(?:[^\\\\/]+))?[\\\\/]))?(.+)?$', 'http://l usr\\example.com@1.2.3.4/D:\\x')","[47673, 47857]"
"('Description.java', 'org.junit.runner.Description', 'methodAndClassNamePatternGroupOrDefault', '([\\s\\S]*)\\((.*)\\)', 'testRevertDirtyIndex(org.eclipse.jgit.api.RevertCommandTest)')","[233427, 233638]"
"('Description.java', 'org.junit.runner.Description', 'methodAndClassNamePatternGroupOrDefault', '([\\s\\S]*)\\((.*)\\)', 'testEditDelete(org.eclipse.jgit.notes.DefaultNoteMergerTest)')","[198690, 198821]"
"('URIish.java', 'org.eclipse.jgit.transport.URIish', '<init>', '^(file):([\\\\/](?![\\\\/])((?:[A-Za-z]:)?[\\\\/]?(?:(?:[^\\\\/]+[\\\\/]+)*[^\\\\/]+[\\\\/]*)))$', 'ssh://lusr\\example:wtf@example.com:1234/D:\\x')",[12419]
"('Description.java', 'org.junit.runner.Description', 'methodAndClassNamePatternGroupOrDefault', '([\\s\\S]*)\\((.*)\\)', 'testGetRefs_HeadsOnly_Mixed(org.eclipse.jgit.internal.storage.file.RefDirectoryTest)')","[258400, 259606]"
"('Description.java', 'org.junit.runner.Description', 'methodAndClassNamePatternGroupOrDefault', '([\\s\\S]*)\\((.*)\\)', 'testGetRef_CorruptSymbolicReference(org.eclipse.jgit.internal.storage.file.RefDirectoryTest)')","[257560, 258726]"
"('URIish.java', 'org.eclipse.jgit.transport.URIish', '<init>', '^([a-z][a-z0-9+-]+)://(?:(?:([^/:@]+)(?::([^\\\\/]+))?@)?((?:[^\\\\/:]+)|(?:\\[[0-9a-f:]+\\]))(?::(\\d+))?((?:/~(?:[^\\\\/]+))?[\\\\/]))?(.+)?$', 'file:///tmp/jgit_test_2932023989078420112_tmp/tmp_8275709076875192253/.git/')",[174270]
"('Description.java', 'org.junit.runner.Description', 'methodAndClassNamePatternGroupOrDefault', '([\\s\\S]*)\\((.*)\\)', 'testPunctGroupCase0[OldRule? true](org.eclipse.jgit.ignore.IgnoreRuleSpecialCasesTest)')","[151249, 158333]"
"('URIish.java', 'org.eclipse.jgit.transport.URIish', '<init>', '^(file):([\\\\/](?![\\\\/])((?:[A-Za-z]:)?[\\\\/]?(?:(?:[^\\\\/]+[\\\\/]+)*[^\\\\/]+[\\\\/]*)))$', 'https://me@[::1]:80//abc')",[37070]
"('Description.java', 'org.junit.runner.Description', 'methodAndClassNamePatternGroupOrDefault', '([\\s\\S]*)\\((.*)\\)', 'renameBranchMultipleConfigValues(org.eclipse.jgit.api.RenameBranchCommandTest)')","[240350, 240437]"
"('URIish.java', 'org.eclipse.jgit.transport.URIish', '<init>', '^(file):([\\\\/](?![\\\\/])((?:[A-Za-z]:)?[\\\\/]?(?:(?:[^\\\\/]+[\\\\/]+)*[^\\\\/]+[\\\\/]*)))$', 'file:///tmp/jgit_test_2026574277638248347_tmp/tmp_1405723520377137753/.git/')",[128743]
"('URIish.java', 'org.eclipse.jgit.transport.URIish', '<init>', '^(file):([\\\\/](?![\\\\/])((?:[A-Za-z]:)?[\\\\/]?(?:(?:[^\\\\/]+[\\\\/]+)*[^\\\\/]+[\\\\/]*)))$', 'ssh+git://l usr\\example.com:wtf@1.2.3.4:80/D:/x')",[16595]
"('URIish.java', 'org.eclipse.jgit.transport.URIish', '<init>', '^(file):([\\\\/](?![\\\\/])((?:[A-Za-z]:)?[\\\\/]?(?:(?:[^\\\\/]+[\\\\/]+)*[^\\\\/]+[\\\\/]*)))$', 'https://me:wtf@[::1]:80/D:/x')",[23640]
"('FastIgnoreRule.java', 'org.eclipse.jgit.ignore.FastIgnoreRule', 'isMatch', 'a.', '')","[169918, 169972, 170080, 170134, 170323, 170404, 170458, 170512]"
"('URIish.java', 'org.eclipse.jgit.transport.URIish', '<init>', '^([a-z][a-z0-9+-]+)://(?:(?:([^/:@]+)(?::([^\\\\/]+))?@)?((?:[^\\\\/:]+)|(?:\\[[0-9a-f:]+\\]))(?::(\\d+))?((?:/~(?:[^\\\\/]+))?[\\\\/]))?(.+)?$', 'http://lusr\\example@1.2.3.4:80//abc')",[35621]
"('URIish.java', 'org.eclipse.jgit.transport.URIish', '<init>', '^([a-z][a-z0-9+-]+)://(?:(?:([^/:@]+)(?::([^\\\\/]+))?@)?((?:[^\\\\/:]+)|(?:\\[[0-9a-f:]+\\]))(?::(\\d+))?((?:/~(?:[^\\\\/]+))?[\\\\/]))?(.+)?$', 'http://example.com//abc')","[59357, 59541, 60461, 60645, 61565, 61749]"
"('URIish.java', 'org.eclipse.jgit.transport.URIish', '<init>', '^(file):([\\\\/](?![\\\\/])((?:[A-Za-z]:)?[\\\\/]?(?:(?:[^\\\\/]+[\\\\/]+)*[^\\\\/]+[\\\\/]*)))$', 'ssh://l usr\\example.com:wtf@[::1]:80//')",[12061]
"('Description.java', 'org.junit.runner.Description', 'methodAndClassNamePatternGroupOrDefault', '([\\s\\S]*)\\((.*)\\)', 'testSpecialGroupCase6[OldRule? true](org.eclipse.jgit.ignore.IgnoreRuleSpecialCasesTest)')","[149409, 156493]"
"('URIish.java', 'org.eclipse.jgit.transport.URIish', '<init>', '^([a-z][a-z0-9+-]+)://(?:(?:([^/:@]+)(?::([^\\\\/]+))?@)?((?:[^\\\\/:]+)|(?:\\[[0-9a-f:]+\\]))(?::(\\d+))?((?:/~(?:[^\\\\/]+))?[\\\\/]))?(.+)?$', 'http://l usr\\example.com@example.com:1234//')",[33919]
"('Description.java', 'org.junit.runner.Description', 'methodAndClassNamePatternGroupOrDefault', '([\\s\\S]*)\\((.*)\\)', 'testModifiedAndRenamed(org.eclipse.jgit.api.MergeCommandTest)')","[214059, 214990]"
"('URIish.java', 'org.eclipse.jgit.transport.URIish', '<init>', '^(file):([\\\\/](?![\\\\/])((?:[A-Za-z]:)?[\\\\/]?(?:(?:[^\\\\/]+[\\\\/]+)*[^\\\\/]+[\\\\/]*)))$', '/tmp/jgit_test_1514057598611897554_tmp/tmp_7977849081850125086')","[227594, 227719]"
"('Description.java', 'org.junit.runner.Description', 'methodAndClassNamePatternGroupOrDefault', '([\\s\\S]*)\\((.*)\\)', 'testCopyConstructorReusesArray(org.eclipse.jgit.util.RefListTest)')","[179443, 179956]"
"('Description.java', 'org.junit.runner.Description', 'methodAndClassNamePatternGroupOrDefault', '([\\s\\S]*)\\((.*)\\)', 'commitOnlyShouldCommitUnmergedPathAndNotAffectOthers(org.eclipse.jgit.api.CommitCommandTest)')","[212330, 212542]"
"('URIish.java', 'org.eclipse.jgit.transport.URIish', '<init>', '^([a-z][a-z0-9+-]+)://(?:(?:([^/:@]+)(?::([^\\\\/]+))?@)?((?:[^\\\\/:]+)|(?:\\[[0-9a-f:]+\\]))(?::(\\d+))?((?:/~(?:[^\\\\/]+))?[\\\\/]))?(.+)?$', 'file:///tmp/jgit_test_3047862731010516352_tmp/tmp_4247968197460650075/.git/')",[197730]
"('FastIgnoreRule.java', 'org.eclipse.jgit.ignore.FastIgnoreRule', 'isMatch', '..', 'abc')",[160186]
"('Description.java', 'org.junit.runner.Description', 'methodAndClassNamePatternGroupOrDefault', '([\\s\\S]*)\\((.*)\\)', 'testAlphaGroupCase2[OldRule? false](org.eclipse.jgit.ignore.IgnoreRuleSpecialCasesTest)')","[146858, 153963]"
"('URIish.java', 'org.eclipse.jgit.transport.URIish', '<init>', '^(?:([^/:@]+)(?::([^\\\\/]+))?@)?([^\\\\/:]{2,}):([\\\\/](?:(?:[^\\\\/]+[\\\\/]+)*[^\\\\/]+[\\\\/]*))$', '/tmp/jgit_test_873718593406949091_tmp/tmp_6143507308402612209.git')",[76830]
"('Description.java', 'org.junit.runner.Description', 'methodAndClassNamePatternGroupOrDefault', '([\\s\\S]*)\\((.*)\\)', 'testCoreAutoCrlf5(org.eclipse.jgit.api.BlameCommandTest)')","[244474, 244857]"
"('URIish.java', 'org.eclipse.jgit.transport.URIish', '<init>', '^(file):([\\\\/](?![\\\\/])((?:[A-Za-z]:)?[\\\\/]?(?:(?:[^\\\\/]+[\\\\/]+)*[^\\\\/]+[\\\\/]*)))$', 'ssh://lusr\\example:wtf@[::1]:1234//')",[13164]
"('Description.java', 'org.junit.runner.Description', 'methodAndClassNamePatternGroupOrDefault', '([\\s\\S]*)\\((.*)\\)', 'org.eclipse.jgit.revplot.PlotCommitListTest')","[196961, 197979]"
"('URIish.java', 'org.eclipse.jgit.transport.URIish', '<init>', '^([a-z][a-z0-9+-]+)://(?:(?:([^/:@]+)(?::([^\\\\/]+))?@)?((?:[^\\\\/:]+)|(?:\\[[0-9a-f:]+\\]))(?::(\\d+))?((?:/~(?:[^\\\\/]+))?[\\\\/]))?(.+)?$', 'https://lusr\\example@[::1]/D:\\x')","[52457, 52641]"
"('URIish.java', 'org.eclipse.jgit.transport.URIish', '<init>', '^(file):([\\\\/](?![\\\\/])((?:[A-Za-z]:)?[\\\\/]?(?:(?:[^\\\\/]+[\\\\/]+)*[^\\\\/]+[\\\\/]*)))$', 'https://me:wtf@1.2.3.4:80/D:/x')",[23272]
"('URIish.java', 'org.eclipse.jgit.transport.URIish', '<init>', '^(file):([\\\\/](?![\\\\/])((?:[A-Za-z]:)?[\\\\/]?(?:(?:[^\\\\/]+[\\\\/]+)*[^\\\\/]+[\\\\/]*)))$', 'https://lusr\\example:wtf@example.com:80//abc')",[25066]
"('URIish.java', 'org.eclipse.jgit.transport.URIish', '<init>', '^([a-z][a-z0-9+-]+)://(?:(?:([^/:@]+)(?::([^\\\\/]+))?@)?((?:[^\\\\/:]+)|(?:\\[[0-9a-f:]+\\]))(?::(\\d+))?((?:/~(?:[^\\\\/]+))?[\\\\/]))?(.+)?$', 'https://l usr\\example.com:wtf@1.2.3.4:80//abc')",[24353]
"('URIish.java', 'org.eclipse.jgit.transport.URIish', '<init>', '^(?:([^/:@]+)(?::([^\\\\/]+))?@)?((?:[^\\\\/:]+)|(?:\\[[0-9a-f:]+\\])):((?:(?:/~(?:[^\\\\/]+))[\\\\/])?(?:(?:[^\\\\/]+[\\\\/]+)*[^\\\\/]+[\\\\/]*))$', '/tmp/jgit_test_3935765607714589377_tmp/tmp_2556057231773619862/.git')","[230220, 230362]"
"('Description.java', 'org.junit.runner.Description', 'methodAndClassNamePatternGroupOrDefault', '([\\s\\S]*)\\((.*)\\)', 'testGetRef_DiscoversModifiedLoose(org.eclipse.jgit.internal.storage.file.RefDirectoryTest)')","[257413, 258572]"
"('Description.java', 'org.junit.runner.Description', 'methodAndClassNamePatternGroupOrDefault', '([\\s\\S]*)\\((.*)\\)', 'testDelete(org.eclipse.jgit.api.TagCommandTest)')","[201805, 202111]"
"('URIish.java', 'org.eclipse.jgit.transport.URIish', '<init>', '^(file):([\\\\/](?![\\\\/])((?:[A-Za-z]:)?[\\\\/]?(?:(?:[^\\\\/]+[\\\\/]+)*[^\\\\/]+[\\\\/]*)))$', 'file:///tmp/jgit_test_2456524782036824539_tmp/tmp_4193579385899199922/.git/')",[133473]
"('Description.java', 'org.junit.runner.Description', 'methodAndClassNamePatternGroupOrDefault', '([\\s\\S]*)\\((.*)\\)', 'testHasFlags(org.eclipse.jgit.revwalk.FIFORevQueueTest)')","[85487, 85619]"
"('Description.java', 'org.junit.runner.Description', 'methodAndClassNamePatternGroupOrDefault', '([\\s\\S]*)\\((.*)\\)', 'testSpaceGroupCase3(org.eclipse.jgit.fnmatch.FileNameMatcherTest)')","[102196, 105513]"
"('Description.java', 'org.junit.runner.Description', 'methodAndClassNamePatternGroupOrDefault', '([\\s\\S]*)\\((.*)\\)', 'testHasChangeidWithReplacement(org.eclipse.jgit.util.ChangeIdUtilTest)')","[186008, 186776]"
"('Description.java', 'org.junit.runner.Description', 'methodAndClassNamePatternGroupOrDefault', '([\\s\\S]*)\\((.*)\\)', 'testOnlyOption_f1_12_f2_14_d(org.eclipse.jgit.api.CommitOnlyTest)')","[237077, 239152]"
"('FastIgnoreRule.java', 'org.eclipse.jgit.ignore.FastIgnoreRule', 'isMatch', '[b-ce-e]', 'd')",[163492]
"('Description.java', 'org.junit.runner.Description', 'methodAndClassNamePatternGroupOrDefault', '([\\s\\S]*)\\((.*)\\)', 'testContext5(org.eclipse.jgit.diff.DiffFormatterReflowTest)')","[94330, 94546]"
"('URIish.java', 'org.eclipse.jgit.transport.URIish', '<init>', '^(file):([\\\\/](?![\\\\/])((?:[A-Za-z]:)?[\\\\/]?(?:(?:[^\\\\/]+[\\\\/]+)*[^\\\\/]+[\\\\/]*)))$', 'file:/tmp/jgit_test_3515941071985452796_tmp/tmp_8174175230849322016/.git/')",[205170]
"('URIish.java', 'org.eclipse.jgit.transport.URIish', '<init>', '^([a-z][a-z0-9+-]+)://(?:(?:([^/:@]+)(?::([^\\\\/]+))?@)?((?:[^\\\\/:]+)|(?:\\[[0-9a-f:]+\\]))(?::(\\d+))?((?:/~(?:[^\\\\/]+))?[\\\\/]))?(.+)?$', 'https://lusr\\example@1.2.3.4:1234//')",[38703]
"('URIish.java', 'org.eclipse.jgit.transport.URIish', '<init>', '^([\\\\/]?((?:[A-Za-z]:)?[\\\\/]?(?:(?:[^\\\\/]+[\\\\/]+)*[^\\\\/]+[\\\\/]*)))$', '/tmp/jgit_test_1958524625050925037_tmp/tmp_997803827191484605.git')",[9793]
"('URIish.java', 'org.eclipse.jgit.transport.URIish', '<init>', '^(file):([\\\\/](?![\\\\/])((?:[A-Za-z]:)?[\\\\/]?(?:(?:[^\\\\/]+[\\\\/]+)*[^\\\\/]+[\\\\/]*)))$', 'ssh+git://l usr\\example.com:wtf@[::1]:1234//')",[16687]
"('Description.java', 'org.junit.runner.Description', 'methodAndClassNamePatternGroupOrDefault', '([\\s\\S]*)\\((.*)\\)', 'org.eclipse.jgit.util.io.TimeoutOutputStreamTest')","[172518, 173504]"
"('Description.java', 'org.junit.runner.Description', 'methodAndClassNamePatternGroupOrDefault', '([\\s\\S]*)\\((.*)\\)', 'testGraphGroupCase5(org.eclipse.jgit.fnmatch.FileNameMatcherTest)')","[101608, 104897]"
"('Description.java', 'org.junit.runner.Description', 'methodAndClassNamePatternGroupOrDefault', '([\\s\\S]*)\\((.*)\\)', 'testHasAllFlag(org.eclipse.jgit.revwalk.RevObjectTest)')","[83892, 84656]"
"('URIish.java', 'org.eclipse.jgit.transport.URIish', '<init>', '^([a-z][a-z0-9+-]+)://(?:(?:([^/:@]+)(?::([^\\\\/]+))?@)?((?:[^\\\\/:]+)|(?:\\[[0-9a-f:]+\\]))(?::(\\d+))?((?:/~(?:[^\\\\/]+))?[\\\\/]))?(.+)?$', 'http://me@example.com:80/D:\\x')",[33137]
"('Description.java', 'org.junit.runner.Description', 'methodAndClassNamePatternGroupOrDefault', '([\\s\\S]*)\\((.*)\\)', 'testGetRefs_DiscoversNewLoose2(org.eclipse.jgit.internal.storage.file.RefDirectoryTest)')","[258442, 259650]"
"('Description.java', 'org.junit.runner.Description', 'methodAndClassNamePatternGroupOrDefault', '([\\s\\S]*)\\((.*)\\)', 'dropNegativeRef(org.eclipse.jgit.api.StashDropCommandTest)')","[243404, 243576]"
"('URIish.java', 'org.eclipse.jgit.transport.URIish', '<init>', '^(file):([\\\\/](?![\\\\/])((?:[A-Za-z]:)?[\\\\/]?(?:(?:[^\\\\/]+[\\\\/]+)*[^\\\\/]+[\\\\/]*)))$', 'ssh+git://l usr\\example.com@example.com:80/D:/x')",[30860]
"('URIish.java', 'org.eclipse.jgit.transport.URIish', '<init>', '^([a-z][a-z0-9+-]+)://(?:(?:([^/:@]+)(?::([^\\\\/]+))?@)?((?:[^\\\\/:]+)|(?:\\[[0-9a-f:]+\\]))(?::(\\d+))?((?:/~(?:[^\\\\/]+))?[\\\\/]))?(.+)?$', 'ssh://lusr\\example@example.com//')","[41647, 41831]"
"('URIish.java', 'org.eclipse.jgit.transport.URIish', '<init>', '^(file):([\\\\/](?![\\\\/])((?:[A-Za-z]:)?[\\\\/]?(?:(?:[^\\\\/]+[\\\\/]+)*[^\\\\/]+[\\\\/]*)))$', 'https://l usr\\example.com:wtf@1.2.3.4:80//')",[24284]
"('Description.java', 'org.junit.runner.Description', 'methodAndClassNamePatternGroupOrDefault', '([\\s\\S]*)\\((.*)\\)', 'testSpecialGroupCase10[OldRule? true](org.eclipse.jgit.ignore.IgnoreRuleSpecialCasesTest)')","[149869, 156953]"
"('Description.java', 'org.junit.runner.Description', 'methodAndClassNamePatternGroupOrDefault', '([\\s\\S]*)\\((.*)\\)', 'testLinear(org.eclipse.jgit.revplot.PlotCommitListTest)')","[197213, 197540]"
"('URIish.java', 'org.eclipse.jgit.transport.URIish', '<init>', '^([a-z][a-z0-9+-]+)://(?:(?:([^/:@]+)(?::([^\\\\/]+))?@)?((?:[^\\\\/:]+)|(?:\\[[0-9a-f:]+\\]))(?::(\\d+))?((?:/~(?:[^\\\\/]+))?[\\\\/]))?(.+)?$', 'ssh+git://me:wtf@1.2.3.4:80//')",[14718]
"('URIish.java', 'org.eclipse.jgit.transport.URIish', '<init>', '^(file):([\\\\/](?![\\\\/])((?:[A-Za-z]:)?[\\\\/]?(?:(?:[^\\\\/]+[\\\\/]+)*[^\\\\/]+[\\\\/]*)))$', 'http://l usr\\example.com:wtf@1.2.3.4:80/D:\\x')",[21110]
"('Description.java', 'org.junit.runner.Description', 'methodAndClassNamePatternGroupOrDefault', '([\\s\\S]*)\\((.*)\\)', 'org.eclipse.jgit.transport.NetRCTest')","[73755, 73864]"
"('Description.java', 'org.junit.runner.Description', 'methodAndClassNamePatternGroupOrDefault', '([\\s\\S]*)\\((.*)\\)', 'testCreateForce(org.eclipse.jgit.api.BranchCommandTest)')","[227000, 227350]"
"('Description.java', 'org.junit.runner.Description', 'methodAndClassNamePatternGroupOrDefault', '([\\s\\S]*)\\((.*)\\)', 'testEscapedBracket1[OldRule? true](org.eclipse.jgit.ignore.IgnoreRuleSpecialCasesTest)')","[152675, 159759]"
"('Description.java', 'org.junit.runner.Description', 'methodAndClassNamePatternGroupOrDefault', '([\\s\\S]*)\\((.*)\\)', 'testMultiRename(org.eclipse.jgit.revwalk.RevWalkFollowFilterTest)')","[79242, 79307]"
"('Description.java', 'org.junit.runner.Description', 'methodAndClassNamePatternGroupOrDefault', '([\\s\\S]*)\\((.*)\\)', 'testConflictingDeletedAndModified(org.eclipse.jgit.lib.IndexDiffTest)')","[110427, 110771]"
"('URIish.java', 'org.eclipse.jgit.transport.URIish', '<init>', '^([a-z][a-z0-9+-]+)://(?:(?:([^/:@]+)(?::([^\\\\/]+))?@)?((?:[^\\\\/:]+)|(?:\\[[0-9a-f:]+\\]))(?::(\\d+))?((?:/~(?:[^\\\\/]+))?[\\\\/]))?(.+)?$', 'http://l usr\\example.com:wtf@example.com:1234//')",[20420]
"('URIish.java', 'org.eclipse.jgit.transport.URIish', '<init>', '^([a-z][a-z0-9+-]+)://(?:(?:([^/:@]+)(?::([^\\\\/]+))?@)?((?:[^\\\\/:]+)|(?:\\[[0-9a-f:]+\\]))(?::(\\d+))?((?:/~(?:[^\\\\/]+))?[\\\\/]))?(.+)?$', 'file:///tmp/jgit_test_6905220243359603297_tmp/tmp_240630787012220869/.git/')","[244016, 244251]"
"('URIish.java', 'org.eclipse.jgit.transport.URIish', '<init>', '^(file):([\\\\/](?![\\\\/])((?:[A-Za-z]:)?[\\\\/]?(?:(?:[^\\\\/]+[\\\\/]+)*[^\\\\/]+[\\\\/]*)))$', 'http://lusr\\example@[::1]:80//abc')",[35966]
"('URIish.java', 'org.eclipse.jgit.transport.URIish', '<init>', '^(file):([\\\\/](?![\\\\/])((?:[A-Za-z]:)?[\\\\/]?(?:(?:[^\\\\/]+[\\\\/]+)*[^\\\\/]+[\\\\/]*)))$', 'file:/a/b.txt')",[7291]
"('URIish.java', 'org.eclipse.jgit.transport.URIish', '<init>', '^([a-z][a-z0-9+-]+)://(?:(?:([^/:@]+)(?::([^\\\\/]+))?@)?((?:[^\\\\/:]+)|(?:\\[[0-9a-f:]+\\]))(?::(\\d+))?((?:/~(?:[^\\\\/]+))?[\\\\/]))?(.+)?$', 'ssh://me@[::1]:80/D:\\x')",[27186]
"('Description.java', 'org.junit.runner.Description', 'methodAndClassNamePatternGroupOrDefault', '([\\s\\S]*)\\((.*)\\)', 'testSpecialGroupCase10[OldRule? false](org.eclipse.jgit.ignore.IgnoreRuleSpecialCasesTest)')","[146306, 153411]"
"('Description.java', 'org.junit.runner.Description', 'methodAndClassNamePatternGroupOrDefault', '([\\s\\S]*)\\((.*)\\)', 'testDestroyWhileOpen(org.eclipse.jgit.util.TemporaryBufferTest)')","[178553, 178859]"
"('Description.java', 'org.junit.runner.Description', 'methodAndClassNamePatternGroupOrDefault', '([\\s\\S]*)\\((.*)\\)', 'testSingleDeletion(org.eclipse.jgit.api.MergeCommandTest)')","[213870, 214792]"
"('Description.java', 'org.junit.runner.Description', 'methodAndClassNamePatternGroupOrDefault', '([\\s\\S]*)\\((.*)\\)', 'testIncrementalBundle(org.eclipse.jgit.transport.BundleWriterTest)')","[26315, 26381]"
"('URIish.java', 'org.eclipse.jgit.transport.URIish', '<init>', '^([a-z][a-z0-9+-]+)://(?:(?:([^/:@]+)(?::([^\\\\/]+))?@)?((?:[^\\\\/:]+)|(?:\\[[0-9a-f:]+\\]))(?::(\\d+))?((?:/~(?:[^\\\\/]+))?[\\\\/]))?(.+)?$', 'ssh://lusr\\example@example.com:1234/D:\\x')",[28537]
"('FastIgnoreRule.java', 'org.eclipse.jgit.ignore.FastIgnoreRule', 'isMatch', '[\\p{Lu}]', 'A')",[162736]
"('URIish.java', 'org.eclipse.jgit.transport.URIish', '<init>', '^([a-z][a-z0-9+-]+)://(?:(?:([^/:@]+)(?::([^\\\\/]+))?@)?((?:[^\\\\/:]+)|(?:\\[[0-9a-f:]+\\]))(?::(\\d+))?((?:/~(?:[^\\\\/]+))?[\\\\/]))?(.+)?$', 'ssh://l usr\\example.com@example.com//abc')","[40589, 40773]"
"('URIish.java', 'org.eclipse.jgit.transport.URIish', '<init>', '^([a-z][a-z0-9+-]+)://(?:(?:([^/:@]+)(?::([^\\\\/]+))?@)?((?:[^\\\\/:]+)|(?:\\[[0-9a-f:]+\\]))(?::(\\d+))?((?:/~(?:[^\\\\/]+))?[\\\\/]))?(.+)?$', 'https://l usr\\example.com@example.com//abc')","[50525, 50709]"
"('Description.java', 'org.junit.runner.Description', 'methodAndClassNamePatternGroupOrDefault', '([\\s\\S]*)\\((.*)\\)', 'crissCrossMerge(org.eclipse.jgit.merge.RecursiveMergerTest)')","[87697, 87847]"
"('URIish.java', 'org.eclipse.jgit.transport.URIish', '<init>', '^([a-z][a-z0-9+-]+)://(?:(?:([^/:@]+)(?::([^\\\\/]+))?@)?((?:[^\\\\/:]+)|(?:\\[[0-9a-f:]+\\]))(?::(\\d+))?((?:/~(?:[^\\\\/]+))?[\\\\/]))?(.+)?$', 'ssh://l usr\\example.com@[::1]:80/D:\\x')",[28353]
"('URIish.java', 'org.eclipse.jgit.transport.URIish', '<init>', '^([a-z][a-z0-9+-]+)://(?:(?:([^/:@]+)(?::([^\\\\/]+))?@)?((?:[^\\\\/:]+)|(?:\\[[0-9a-f:]+\\]))(?::(\\d+))?((?:/~(?:[^\\\\/]+))?[\\\\/]))?(.+)?$', 'ssh+git://me:wtf@1.2.3.4:80/D:\\x')",[14856]
"('Description.java', 'org.junit.runner.Description', 'methodAndClassNamePatternGroupOrDefault', '([\\s\\S]*)\\((.*)\\)', 'test005_notIsId(org.eclipse.jgit.lib.ObjectIdTest)')","[130634, 130915]"
"('URIish.java', 'org.eclipse.jgit.transport.URIish', '<init>', '^([a-z][a-z0-9+-]+)://(?:(?:([^/:@]+)(?::([^\\\\/]+))?@)?((?:[^\\\\/:]+)|(?:\\[[0-9a-f:]+\\]))(?::(\\d+))?((?:/~(?:[^\\\\/]+))?[\\\\/]))?(.+)?$', 'file:///tmp/jgit_test_5457282241759243552_tmp/tmp_6811893643033562885/.git/')",[175760]
"('ChangeIdUtil.java', 'org.eclipse.jgit.util.ChangeIdUtil', 'indexOfChangeId', '(^Change-Id: *I[a-f0-9]{40}$)', 'Signed-off-by: J Committer <jc@example.com>')","[187923, 189132, 189416, 189597]"
"('Description.java', 'org.junit.runner.Description', 'methodAndClassNamePatternGroupOrDefault', '([\\s\\S]*)\\((.*)\\)', 'org.eclipse.jgit.patch.GetTextTest')","[196606, 196925]"
"('Description.java', 'org.junit.runner.Description', 'methodAndClassNamePatternGroupOrDefault', '([\\s\\S]*)\\((.*)\\)', 'testAlnumGroupCase2[OldRule? false](org.eclipse.jgit.ignore.IgnoreRuleSpecialCasesTest)')","[148744, 155849]"
"('URIish.java', 'org.eclipse.jgit.transport.URIish', '<init>', '^(file):([\\\\/](?![\\\\/])((?:[A-Za-z]:)?[\\\\/]?(?:(?:[^\\\\/]+[\\\\/]+)*[^\\\\/]+[\\\\/]*)))$', 'ssh+git://l usr\\example.com@example.com//')","[43832, 44016]"
"('URIish.java', 'org.eclipse.jgit.transport.URIish', '<init>', '^([a-z][a-z0-9+-]+)://(?:(?:([^/:@]+)(?::([^\\\\/]+))?@)?((?:[^\\\\/:]+)|(?:\\[[0-9a-f:]+\\]))(?::(\\d+))?((?:/~(?:[^\\\\/]+))?[\\\\/]))?(.+)?$', 'https://me@1.2.3.4//')","[49743, 49927]"
"('URIish.java', 'org.eclipse.jgit.transport.URIish', '<init>', '^([a-z][a-z0-9+-]+)://(?:(?:([^/:@]+)(?::([^\\\\/]+))?@)?((?:[^\\\\/:]+)|(?:\\[[0-9a-f:]+\\]))(?::(\\d+))?((?:/~(?:[^\\\\/]+))?[\\\\/]))?(.+)?$', 'ssh://l usr\\example.com@example.com:80/D:/x')",[27508]
"('URIish.java', 'org.eclipse.jgit.transport.URIish', '<init>', '^(file):([\\\\/](?![\\\\/])((?:[A-Za-z]:)?[\\\\/]?(?:(?:[^\\\\/]+[\\\\/]+)*[^\\\\/]+[\\\\/]*)))$', 'http://l usr\\example.com@example.com//')","[47144, 47328]"
"('URIish.java', 'org.eclipse.jgit.transport.URIish', '<init>', '^(file):([\\\\/](?![\\\\/])((?:[A-Za-z]:)?[\\\\/]?(?:(?:[^\\\\/]+[\\\\/]+)*[^\\\\/]+[\\\\/]*)))$', 'https://l usr\\example.com:wtf@1.2.3.4:80/D:\\x')",[24422]
"('Description.java', 'org.junit.runner.Description', 'methodAndClassNamePatternGroupOrDefault', '([\\s\\S]*)\\((.*)\\)', 'testParsePersonIdent_fuzzyCases(org.eclipse.jgit.util.RawParseUtils_ParsePersonIdentTest)')","[171608, 171696]"
"('FastIgnoreRule.java', 'org.eclipse.jgit.ignore.FastIgnoreRule', 'isMatch', '[b-d]', 'd')",[161826]
"('Description.java', 'org.junit.runner.Description', 'methodAndClassNamePatternGroupOrDefault', '([\\s\\S]*)\\((.*)\\)', 'testCleanWithDryRunAndNoIgnore(org.eclipse.jgit.api.CleanCommandTest)')","[217080, 217234]"
"('Description.java', 'org.junit.runner.Description', 'methodAndClassNamePatternGroupOrDefault', '([\\s\\S]*)\\((.*)\\)', 'org.eclipse.jgit.revwalk.RevWalkMergeBaseTest')","[81863, 82692]"
"('Description.java', 'org.junit.runner.Description', 'methodAndClassNamePatternGroupOrDefault', '([\\s\\S]*)\\((.*)\\)', 'org.eclipse.jgit.api.LogCommandTest')","[231487, 231976]"
"('URIish.java', 'org.eclipse.jgit.transport.URIish', '<init>', '^(file):([\\\\/](?![\\\\/])((?:[A-Za-z]:)?[\\\\/]?(?:(?:[^\\\\/]+[\\\\/]+)*[^\\\\/]+[\\\\/]*)))$', 'ssh://1.2.3.4/D:/x')","[53124, 53308, 54228, 54412, 55332, 55516]"
"('Description.java', 'org.junit.runner.Description', 'methodAndClassNamePatternGroupOrDefault', '([\\s\\S]*)\\((.*)\\)', 'testOnlyOption_f1_3_d(org.eclipse.jgit.api.CommitOnlyTest)')","[236206, 238272]"
"('URIish.java', 'org.eclipse.jgit.transport.URIish', '<init>', '^(file):([\\\\/](?![\\\\/])((?:[A-Za-z]:)?[\\\\/]?(?:(?:[^\\\\/]+[\\\\/]+)*[^\\\\/]+[\\\\/]*)))$', 'ssh+git://lusr\\example@example.com:80//abc')",[31918]
"('URIish.java', 'org.eclipse.jgit.transport.URIish', '<init>', '^(file):([\\\\/](?![\\\\/])((?:[A-Za-z]:)?[\\\\/]?(?:(?:[^\\\\/]+[\\\\/]+)*[^\\\\/]+[\\\\/]*)))$', 'ssh+git://[::1]/D:\\x')","[56850, 57034, 57954, 58138, 59058, 59242]"
"('Description.java', 'org.junit.runner.Description', 'methodAndClassNamePatternGroupOrDefault', '([\\s\\S]*)\\((.*)\\)', 'testOnlyOption_f1_12_f2_14_c(org.eclipse.jgit.api.CommitOnlyTest)')","[237025, 239130]"
"('URIish.java', 'org.eclipse.jgit.transport.URIish', '<init>', '^(file):([\\\\/](?![\\\\/])((?:[A-Za-z]:)?[\\\\/]?(?:(?:[^\\\\/]+[\\\\/]+)*[^\\\\/]+[\\\\/]*)))$', 'ssh://l usr\\example.com@[::1]/D:\\x')","[41394, 41578]"
"('Description.java', 'org.junit.runner.Description', 'methodAndClassNamePatternGroupOrDefault', '([\\s\\S]*)\\((.*)\\)', 'testAddGrowsWithObjects(org.eclipse.jgit.lib.ObjectIdOwnerMapTest)')","[113648, 113798]"
"('URIish.java', 'org.eclipse.jgit.transport.URIish', '<init>', '^([a-z][a-z0-9+-]+)://(?:(?:([^/:@]+)(?::([^\\\\/]+))?@)?((?:[^\\\\/:]+)|(?:\\[[0-9a-f:]+\\]))(?::(\\d+))?((?:/~(?:[^\\\\/]+))?[\\\\/]))?(.+)?$', 'https://l usr\\example.com:wtf@[::1]:1234/D:/x')",[24583]
"('Description.java', 'org.junit.runner.Description', 'methodAndClassNamePatternGroupOrDefault', '([\\s\\S]*)\\((.*)\\)', 'testTwoCommitsEmptyTree(org.eclipse.jgit.revwalk.ObjectWalkTest)')","[76532, 76730]"
"('URIish.java', 'org.eclipse.jgit.transport.URIish', '<init>', '^([a-z][a-z0-9+-]+)://(?:(?:([^/:@]+)(?::([^\\\\/]+))?@)?((?:[^\\\\/:]+)|(?:\\[[0-9a-f:]+\\]))(?::(\\d+))?((?:/~(?:[^\\\\/]+))?[\\\\/]))?(.+)?$', 'ssh+git://me@example.com:1234/D:/x')",[29595]
"('Description.java', 'org.junit.runner.Description', 'methodAndClassNamePatternGroupOrDefault', '([\\s\\S]*)\\((.*)\\)', 'test003_PutRemote(org.eclipse.jgit.lib.ConfigTest)')","[129365, 130099]"
"('Description.java', 'org.junit.runner.Description', 'methodAndClassNamePatternGroupOrDefault', '([\\s\\S]*)\\((.*)\\)', 'testSshProtoWithEscapedADUserPassAndPort(org.eclipse.jgit.transport.URIishTest)')","[2956, 5278]"
"('FastIgnoreRule.java', 'org.eclipse.jgit.ignore.FastIgnoreRule', 'isMatch', '.r[a-c]', 'cr3')",[145136]
"('Description.java', 'org.junit.runner.Description', 'methodAndClassNamePatternGroupOrDefault', '([\\s\\S]*)\\((.*)\\)', 'testReadFanout2_2_36(org.eclipse.jgit.notes.NoteMapTest)')","[199177, 199438]"
"('URIish.java', 'org.eclipse.jgit.transport.URIish', '<init>', '^(file):([\\\\/](?![\\\\/])((?:[A-Za-z]:)?[\\\\/]?(?:(?:[^\\\\/]+[\\\\/]+)*[^\\\\/]+[\\\\/]*)))$', 'https://lusr\\example:wtf@[::1]:1234//abc')",[25618]
"('Description.java', 'org.junit.runner.Description', 'methodAndClassNamePatternGroupOrDefault', '([\\s\\S]*)\\((.*)\\)', 'testManySolutionsCase0[OldRule? false](org.eclipse.jgit.ignore.IgnoreRuleSpecialCasesTest)')","[148077, 155182]"
"('Description.java', 'org.junit.runner.Description', 'methodAndClassNamePatternGroupOrDefault', '([\\s\\S]*)\\((.*)\\)', 'testNetRCFile(org.eclipse.jgit.transport.NetRCTest)')","[73776, 73819]"
"('ChangeIdUtil.java', 'org.eclipse.jgit.util.ChangeIdUtil', 'indexOfFirstFooterLine', '(^[a-zA-Z0-9-]+:(?!//).*$)', 'Signed-off-by: me@you.too')","[186950, 187794, 188849, 190560, 190845, 191391, 191494, 191802]"
"('URIish.java', 'org.eclipse.jgit.transport.URIish', '<init>', '^(file):([\\\\/](?![\\\\/])((?:[A-Za-z]:)?[\\\\/]?(?:(?:[^\\\\/]+[\\\\/]+)*[^\\\\/]+[\\\\/]*)))$', 'http://me@example.com:80/D:/x')",[33068]
"('Description.java', 'org.junit.runner.Description', 'methodAndClassNamePatternGroupOrDefault', '([\\s\\S]*)\\((.*)\\)', '[OldRule? true]')","[141528, 145159, 145182, 149248, 163801, 163824, 164270, 171465, 171488]"
"('URIish.java', 'org.eclipse.jgit.transport.URIish', '<init>', '^([a-z][a-z0-9+-]+)://(?:(?:([^/:@]+)(?::([^\\\\/]+))?@)?((?:[^\\\\/:]+)|(?:\\[[0-9a-f:]+\\]))(?::(\\d+))?((?:/~(?:[^\\\\/]+))?[\\\\/]))?(.+)?$', 'http://me@example.com/D:\\x')","[46201, 46385]"
"('Description.java', 'org.junit.runner.Description', 'methodAndClassNamePatternGroupOrDefault', '([\\s\\S]*)\\((.*)\\)', 'testEmpty(org.eclipse.jgit.revwalk.RevFlagSetTest)')","[79702, 79850]"
"('URIish.java', 'org.eclipse.jgit.transport.URIish', '<init>', '^([a-z][a-z0-9+-]+)://(?:(?:([^/:@]+)(?::([^\\\\/]+))?@)?((?:[^\\\\/:]+)|(?:\\[[0-9a-f:]+\\]))(?::(\\d+))?((?:/~(?:[^\\\\/]+))?[\\\\/]))?(.+)?$', 'https://lusr\\example@1.2.3.4:80/D:/x')",[38979]
"('Description.java', 'org.junit.runner.Description', 'methodAndClassNamePatternGroupOrDefault', '([\\s\\S]*)\\((.*)\\)', 'testCommonScore_EmptyFiles(org.eclipse.jgit.diff.SimilarityIndexTest)')","[97878, 98007]"
"('Description.java', 'org.junit.runner.Description', 'methodAndClassNamePatternGroupOrDefault', '([\\s\\S]*)\\((.*)\\)', 'org.eclipse.jgit.api.AddCommandTest')","[234696, 240670]"
"('URIish.java', 'org.eclipse.jgit.transport.URIish', '<init>', '^(file):([\\\\/](?![\\\\/])((?:[A-Za-z]:)?[\\\\/]?(?:(?:[^\\\\/]+[\\\\/]+)*[^\\\\/]+[\\\\/]*)))$', 'ssh://me@example.com/D:\\x')","[39554, 39738]"
"('Description.java', 'org.junit.runner.Description', 'methodAndClassNamePatternGroupOrDefault', '([\\s\\S]*)\\((.*)\\)', 'testIncompleteRangesInOneGroupCase0[OldRule? true](org.eclipse.jgit.ignore.IgnoreRuleSpecialCasesTest)')","[151433, 158517]"
"('Description.java', 'org.junit.runner.Description', 'methodAndClassNamePatternGroupOrDefault', '([\\s\\S]*)\\((.*)\\)', 'testInvalidType(org.eclipse.jgit.lib.ObjectCheckerTest)')","[120902, 122985]"
"('URIish.java', 'org.eclipse.jgit.transport.URIish', '<init>', '^([a-z][a-z0-9+-]+)://(?:(?:([^/:@]+)(?::([^\\\\/]+))?@)?((?:[^\\\\/:]+)|(?:\\[[0-9a-f:]+\\]))(?::(\\d+))?((?:/~(?:[^\\\\/]+))?[\\\\/]))?(.+)?$', 'http://example.com/D:/x')","[59403, 59587, 60507, 60691, 61611, 61795]"
"('Description.java', 'org.junit.runner.Description', 'methodAndClassNamePatternGroupOrDefault', '([\\s\\S]*)\\((.*)\\)', 'testMaybeContains(org.eclipse.jgit.internal.storage.file.InflatingBitSetTest)')","[250827, 250915]"
"('URIish.java', 'org.eclipse.jgit.transport.URIish', '<init>', '^(file):([\\\\/](?![\\\\/])((?:[A-Za-z]:)?[\\\\/]?(?:(?:[^\\\\/]+[\\\\/]+)*[^\\\\/]+[\\\\/]*)))$', 'ssh://l usr\\example.com:wtf@1.2.3.4:80//')",[11693]
"('URIish.java', 'org.eclipse.jgit.transport.URIish', '<init>', '^([a-z][a-z0-9+-]+)://(?:(?:([^/:@]+)(?::([^\\\\/]+))?@)?((?:[^\\\\/:]+)|(?:\\[[0-9a-f:]+\\]))(?::(\\d+))?((?:/~(?:[^\\\\/]+))?[\\\\/]))?(.+)?$', 'ssh+git://lusr\\example@[::1]:1234/D:\\x')",[32585]
"('Description.java', 'org.junit.runner.Description', 'methodAndClassNamePatternGroupOrDefault', '([\\s\\S]*)\\((.*)\\)', 'testPushWithoutPushRefSpec(org.eclipse.jgit.api.PushCommandTest)')","[203066, 203197]"
"('Description.java', 'org.junit.runner.Description', 'methodAndClassNamePatternGroupOrDefault', '([\\s\\S]*)\\((.*)\\)', 'testNoFooters_ShortBodyWithLF(org.eclipse.jgit.revwalk.FooterLineTest)')","[77733, 78149]"
"('Description.java', 'org.junit.runner.Description', 'methodAndClassNamePatternGroupOrDefault', '([\\s\\S]*)\\((.*)\\)', 'RAW(org.eclipse.jgit.util.GitDateFormatterTest)')","[172177, 172371]"
"('URIish.java', 'org.eclipse.jgit.transport.URIish', '<init>', '^(?:([^/:@]+)(?::([^\\\\/]+))?@)?((?:[^\\\\/:]+)|(?:\\[[0-9a-f:]+\\])):((?:(?:/~(?:[^\\\\/]+))[\\\\/])?(?:(?:[^\\\\/]+[\\\\/]+)*[^\\\\/]+[\\\\/]*))$', '/tmp/jgit_test_7866988883983564781_tmp/tmp_1286542265509971418')","[231235, 231370, 231887]"
"('FastIgnoreRule.java', 'org.eclipse.jgit.ignore.FastIgnoreRule', 'isMatch', '[\\p{javaLetter}][\\p{javaLetter}]', 'aö')",[160966]
"('URIish.java', 'org.eclipse.jgit.transport.URIish', '<init>', '^(file):([\\\\/](?![\\\\/])((?:[A-Za-z]:)?[\\\\/]?(?:(?:[^\\\\/]+[\\\\/]+)*[^\\\\/]+[\\\\/]*)))$', 'ssh://lusr\\example:wtf@[::1]:1234/D:/x')",[13256]
"('Description.java', 'org.junit.runner.Description', 'methodAndClassNamePatternGroupOrDefault', '([\\s\\S]*)\\((.*)\\)', 'invalidWhenOnlyDestinationWildcard(org.eclipse.jgit.transport.RefSpecTest)')","[13987, 15504]"
"('Description.java', 'org.junit.runner.Description', 'methodAndClassNamePatternGroupOrDefault', '([\\s\\S]*)\\((.*)\\)', 'testFilePathCase2[OldRule? true](org.eclipse.jgit.ignore.IgnoreRuleSpecialCasesTest)')","[151387, 158471]"
"('URIish.java', 'org.eclipse.jgit.transport.URIish', '<init>', '^([a-z][a-z0-9+-]+)://(?:(?:([^/:@]+)(?::([^\\\\/]+))?@)?((?:[^\\\\/:]+)|(?:\\[[0-9a-f:]+\\]))(?::(\\d+))?((?:/~(?:[^\\\\/]+))?[\\\\/]))?(.+)?$', 'ssh+git://lusr\\example@example.com/D:/x')","[45051, 45235]"
"('URIish.java', 'org.eclipse.jgit.transport.URIish', '<init>', '^(file):([\\\\/](?![\\\\/])((?:[A-Za-z]:)?[\\\\/]?(?:(?:[^\\\\/]+[\\\\/]+)*[^\\\\/]+[\\\\/]*)))$', 'file:/tmp/jgit_test_1646167366253468193_tmp/tmp_4210899106286484405/.git/')",[128494]
"('Description.java', 'org.junit.runner.Description', 'methodAndClassNamePatternGroupOrDefault', '([\\s\\S]*)\\((.*)\\)', 'testCreate(org.eclipse.jgit.diff.EditTest)')","[100123, 100475]"
"('URIish.java', 'org.eclipse.jgit.transport.URIish', '<init>', '^([a-z][a-z0-9+-]+)://(?:(?:([^/:@]+)(?::([^\\\\/]+))?@)?((?:[^\\\\/:]+)|(?:\\[[0-9a-f:]+\\]))(?::(\\d+))?((?:/~(?:[^\\\\/]+))?[\\\\/]))?(.+)?$', 'https://l usr\\example.com@example.com:1234//abc')",[37277]
"('Description.java', 'org.junit.runner.Description', 'methodAndClassNamePatternGroupOrDefault', '([\\s\\S]*)\\((.*)\\)', 'testAlphaGroupCase0[OldRule? true](org.eclipse.jgit.ignore.IgnoreRuleSpecialCasesTest)')","[150375, 157459]"
"('Description.java', 'org.junit.runner.Description', 'methodAndClassNamePatternGroupOrDefault', '([\\s\\S]*)\\((.*)\\)', 'testMaliciousAbsoluteCurDrivePathWindowsOnUnix(org.eclipse.jgit.lib.DirCacheCheckoutMaliciousPathTest)')","[111975, 112874]"
"('Description.java', 'org.junit.runner.Description', 'methodAndClassNamePatternGroupOrDefault', '([\\s\\S]*)\\((.*)\\)', 'testConflictingMergeFailsDueToDirtyWorktree(org.eclipse.jgit.api.MergeCommandTest)')","[214311, 215254]"
"('URIish.java', 'org.eclipse.jgit.transport.URIish', '<init>', '^([a-z][a-z0-9+-]+)://(?:(?:([^/:@]+)(?::([^\\\\/]+))?@)?((?:[^\\\\/:]+)|(?:\\[[0-9a-f:]+\\]))(?::(\\d+))?((?:/~(?:[^\\\\/]+))?[\\\\/]))?(.+)?$', 'ssh://l usr\\example.com@1.2.3.4:1234//abc')",[27646]
"('Description.java', 'org.junit.runner.Description', 'methodAndClassNamePatternGroupOrDefault', '([\\s\\S]*)\\((.*)\\)', 'testEscapedBracket3(org.eclipse.jgit.fnmatch.FileNameMatcherTest)')","[104086, 107493]"
"('Description.java', 'org.junit.runner.Description', 'methodAndClassNamePatternGroupOrDefault', '([\\s\\S]*)\\((.*)\\)', 'testTrimTrailingWhitespace(org.eclipse.jgit.util.RawCharUtilTest)')","[192262, 192327]"
"('URIish.java', 'org.eclipse.jgit.transport.URIish', '<init>', '^(file):([\\\\/](?![\\\\/])((?:[A-Za-z]:)?[\\\\/]?(?:(?:[^\\\\/]+[\\\\/]+)*[^\\\\/]+[\\\\/]*)))$', 'ssh+git://me:wtf@1.2.3.4:1234//abc')",[14557]
"('Description.java', 'org.junit.runner.Description', 'methodAndClassNamePatternGroupOrDefault', '([\\s\\S]*)\\((.*)\\)', 'testCntrlGroupCase1(org.eclipse.jgit.fnmatch.FileNameMatcherTest)')","[101839, 105139]"
"('URIish.java', 'org.eclipse.jgit.transport.URIish', '<init>', '^(file):([\\\\/](?![\\\\/])((?:[A-Za-z]:)?[\\\\/]?(?:(?:[^\\\\/]+[\\\\/]+)*[^\\\\/]+[\\\\/]*)))$', 'ssh+git://lusr\\example:wtf@[::1]:1234/D:/x')",[17906]
"('Description.java', 'org.junit.runner.Description', 'methodAndClassNamePatternGroupOrDefault', '([\\s\\S]*)\\((.*)\\)', 'testFilePathCase2(org.eclipse.jgit.fnmatch.FileNameMatcherTest)')","[102868, 106217]"
"('Description.java', 'org.junit.runner.Description', 'methodAndClassNamePatternGroupOrDefault', '([\\s\\S]*)\\((.*)\\)', 'testSimpleStarCase2(org.eclipse.jgit.fnmatch.FileNameMatcherTest)')","[102385, 105711]"
"('Description.java', 'org.junit.runner.Description', 'methodAndClassNamePatternGroupOrDefault', '([\\s\\S]*)\\((.*)\\)', 'testUpperGroupCase2[OldRule? true](org.eclipse.jgit.ignore.IgnoreRuleSpecialCasesTest)')","[151801, 158885]"
"('URIish.java', 'org.eclipse.jgit.transport.URIish', 'getHumanishName', '^([\\\\/]?((?:[A-Za-z]:)?[\\\\/]?(?:(?:[^\\\\/]+[\\\\/]+)*[^\\\\/]+[\\\\/]*)))$', '//.git')",[70482]
"('Description.java', 'org.junit.runner.Description', 'methodAndClassNamePatternGroupOrDefault', '([\\s\\S]*)\\((.*)\\)', 'testStandardFormat_NoHeader(org.eclipse.jgit.internal.storage.file.UnpackedObjectTest)')","[255022, 255341]"
"('Description.java', 'org.junit.runner.Description', 'methodAndClassNamePatternGroupOrDefault', '([\\s\\S]*)\\((.*)\\)', 'testGraphGroupCase4[OldRule? true](org.eclipse.jgit.ignore.IgnoreRuleSpecialCasesTest)')","[149984, 157068]"
"('Description.java', 'org.junit.runner.Description', 'methodAndClassNamePatternGroupOrDefault', '([\\s\\S]*)\\((.*)\\)', 'testInvalidTagNoObject3(org.eclipse.jgit.lib.ObjectCheckerTest)')","[122204, 124349]"
"('Description.java', 'org.junit.runner.Description', 'methodAndClassNamePatternGroupOrDefault', '([\\s\\S]*)\\((.*)\\)', 'testTrivialTwoWay_conflict(org.eclipse.jgit.merge.SimpleMergeTest)')","[86565, 86848]"
"('Description.java', 'org.junit.runner.Description', 'methodAndClassNamePatternGroupOrDefault', '([\\s\\S]*)\\((.*)\\)', 'testAddIfAbsent(org.eclipse.jgit.lib.ObjectIdSubclassMapTest)')","[113987, 114136]"
"('Description.java', 'org.junit.runner.Description', 'methodAndClassNamePatternGroupOrDefault', '([\\s\\S]*)\\((.*)\\)', 'repositoryWithNestedSubmodule(org.eclipse.jgit.submodule.SubmoduleWalkTest)')","[108325, 108515]"
"('URIish.java', 'org.eclipse.jgit.transport.URIish', '<init>', '^(file):([\\\\/](?![\\\\/])((?:[A-Za-z]:)?[\\\\/]?(?:(?:[^\\\\/]+[\\\\/]+)*[^\\\\/]+[\\\\/]*)))$', 'http://lusr\\example:wtf@1.2.3.4:1234/D:/x')",[21984]
"('Description.java', 'org.junit.runner.Description', 'methodAndClassNamePatternGroupOrDefault', '([\\s\\S]*)\\((.*)\\)', 'testStringOfPearls_FilePath2(org.eclipse.jgit.revwalk.RevWalkPathFilter1Test)')","[75788, 76064]"
"('URIish.java', 'org.eclipse.jgit.transport.URIish', '<init>', '^([a-z][a-z0-9+-]+)://(?:(?:([^/:@]+)(?::([^\\\\/]+))?@)?((?:[^\\\\/:]+)|(?:\\[[0-9a-f:]+\\]))(?::(\\d+))?((?:/~(?:[^\\\\/]+))?[\\\\/]))?(.+)?$', 'file:///tmp/jgit_test_3927059431209010032_tmp/tmp_6602889767515057631/.git/')",[133225]
"('Description.java', 'org.junit.runner.Description', 'methodAndClassNamePatternGroupOrDefault', '([\\s\\S]*)\\((.*)\\)', 'test001_ReadBareKey(org.eclipse.jgit.lib.ConfigTest)')","[129323, 130055]"
"('URIish.java', 'org.eclipse.jgit.transport.URIish', '<init>', '^([a-z][a-z0-9+-]+)://(?:(?:([^/:@]+)(?::([^\\\\/]+))?@)?((?:[^\\\\/:]+)|(?:\\[[0-9a-f:]+\\]))(?::(\\d+))?((?:/~(?:[^\\\\/]+))?[\\\\/]))?(.+)?$', 'http://me@example.com:1234//')",[32815]
"('Description.java', 'org.junit.runner.Description', 'methodAndClassNamePatternGroupOrDefault', '([\\s\\S]*)\\((.*)\\)', 'testQuestionmarkDoNotMatch[OldRule? false](org.eclipse.jgit.ignore.FastIgnoreRuleTest)')","[164157, 164914]"
"('Description.java', 'org.junit.runner.Description', 'methodAndClassNamePatternGroupOrDefault', '([\\s\\S]*)\\((.*)\\)', 'org.eclipse.jgit.revwalk.RevWalkSortTest')","[85001, 85642]"
"('Description.java', 'org.junit.runner.Description', 'methodAndClassNamePatternGroupOrDefault', '([\\s\\S]*)\\((.*)\\)', 'testDegenerate_InsertStart(org.eclipse.jgit.diff.HistogramDiffTest)')","[98905, 99518]"
"('Description.java', 'org.junit.runner.Description', 'methodAndClassNamePatternGroupOrDefault', '([\\s\\S]*)\\((.*)\\)', 'testAlreadyUpToDate(org.eclipse.jgit.api.MergeCommandTest)')","[213639, 214550]"
"('Description.java', 'org.junit.runner.Description', 'methodAndClassNamePatternGroupOrDefault', '([\\s\\S]*)\\((.*)\\)', 'submoduleDirectoryIterator(org.eclipse.jgit.treewalk.FileTreeIteratorTest)')","[131417, 131764]"
"('QuotedString.java', 'org.eclipse.jgit.util.QuotedString$BourneUserPathStyle', 'quote', '^~[A-Za-z0-9_-]*/.*$', '~/')","[193345, 193369]"
"('URIish.java', 'org.eclipse.jgit.transport.URIish', '<init>', '^([a-z][a-z0-9+-]+)://(?:(?:([^/:@]+)(?::([^\\\\/]+))?@)?((?:[^\\\\/:]+)|(?:\\[[0-9a-f:]+\\]))(?::(\\d+))?((?:/~(?:[^\\\\/]+))?[\\\\/]))?(.+)?$', '/tmp/jgit_test_6078415325919108987_tmp/tmp_7117568841738359148')","[224107, 224237, 224965]"
"('URIish.java', 'org.eclipse.jgit.transport.URIish', '<init>', '^(file):([\\\\/](?![\\\\/])((?:[A-Za-z]:)?[\\\\/]?(?:(?:[^\\\\/]+[\\\\/]+)*[^\\\\/]+[\\\\/]*)))$', 'https://l usr\\example.com@[::1]:1234//')",[37944]
"('Description.java', 'org.junit.runner.Description', 'methodAndClassNamePatternGroupOrDefault', '([\\s\\S]*)\\((.*)\\)', 'testSpecialGroupCase6(org.eclipse.jgit.fnmatch.FileNameMatcherTest)')","[101041, 104303]"
"('Description.java', 'org.junit.runner.Description', 'methodAndClassNamePatternGroupOrDefault', '([\\s\\S]*)\\((.*)\\)', 'testTwoRangesInOneGroupCase0(org.eclipse.jgit.fnmatch.FileNameMatcherTest)')","[103855, 107251]"
"('URIish.java', 'org.eclipse.jgit.transport.URIish', '<init>', '^(?:([^/:@]+)(?::([^\\\\/]+))?@)?((?:[^\\\\/:]+)|(?:\\[[0-9a-f:]+\\])):((?:(?:/~(?:[^\\\\/]+))[\\\\/])?(?:(?:[^\\\\/]+[\\\\/]+)*[^\\\\/]+[\\\\/]*))$', 'user@example.com:egit.git')",[7762]
"('Description.java', 'org.junit.runner.Description', 'methodAndClassNamePatternGroupOrDefault', '([\\s\\S]*)\\((.*)\\)', 'testVerySimplePatternCase4[OldRule? false](org.eclipse.jgit.ignore.IgnoreRuleSpecialCasesTest)')","[146766, 153871]"
"('Description.java', 'org.junit.runner.Description', 'methodAndClassNamePatternGroupOrDefault', '([\\s\\S]*)\\((.*)\\)', 'testBlankGroupCase1[OldRule? false](org.eclipse.jgit.ignore.IgnoreRuleSpecialCasesTest)')","[148353, 155458]"
"('PathMatcher.java', 'org.eclipse.jgit.ignore.internal.PathMatcher', 'iterate', 'a.', 'a')","[171413, 171442]"
"('URIish.java', 'org.eclipse.jgit.transport.URIish', '<init>', '^(file):([\\\\/](?![\\\\/])((?:[A-Za-z]:)?[\\\\/]?(?:(?:[^\\\\/]+[\\\\/]+)*[^\\\\/]+[\\\\/]*)))$', 'ssh://lusr\\example@[::1]:1234//abc')",[29158]
"('URIish.java', 'org.eclipse.jgit.transport.URIish', '<init>', '^([a-z][a-z0-9+-]+)://(?:(?:([^/:@]+)(?::([^\\\\/]+))?@)?((?:[^\\\\/:]+)|(?:\\[[0-9a-f:]+\\]))(?::(\\d+))?((?:/~(?:[^\\\\/]+))?[\\\\/]))?(.+)?$', 'https://l usr\\example.com:wtf@1.2.3.4:1234//abc')",[24169]
"('Description.java', 'org.junit.runner.Description', 'methodAndClassNamePatternGroupOrDefault', '([\\s\\S]*)\\((.*)\\)', 'testWrite_CH_PROGRESS(org.eclipse.jgit.transport.SideBandOutputStreamTest)')","[73391, 73630]"
"('Description.java', 'org.junit.runner.Description', 'methodAndClassNamePatternGroupOrDefault', '([\\s\\S]*)\\((.*)\\)', 'testUpdateNonFastForward(org.eclipse.jgit.transport.PushProcessTest)')","[74173, 74543]"
"('Description.java', 'org.junit.runner.Description', 'methodAndClassNamePatternGroupOrDefault', '([\\s\\S]*)\\((.*)\\)', 'testParseUnicodeName_DeleteFile(org.eclipse.jgit.patch.FileHeaderTest)')","[195516, 195977]"
"('Description.java', 'org.junit.runner.Description', 'methodAndClassNamePatternGroupOrDefault', '([\\s\\S]*)\\((.*)\\)', 'org.eclipse.jgit.internal.storage.file.PackWriterTest')","[251155, 252398]"
"('URIish.java', 'org.eclipse.jgit.transport.URIish', '<init>', '^([a-z][a-z0-9+-]+)://(?:(?:([^/:@]+)(?::([^\\\\/]+))?@)?((?:[^\\\\/:]+)|(?:\\[[0-9a-f:]+\\]))(?::(\\d+))?((?:/~(?:[^\\\\/]+))?[\\\\/]))?(.+)?$', 'https://example.com/D:/x')","[62715, 62899, 63819, 64003, 64923, 65107]"
"('URIish.java', 'org.eclipse.jgit.transport.URIish', '<init>', '^(file):([\\\\/](?![\\\\/])((?:[A-Za-z]:)?[\\\\/]?(?:(?:[^\\\\/]+[\\\\/]+)*[^\\\\/]+[\\\\/]*)))$', 'ssh://me:wtf@1.2.3.4:1234/D:\\x')",[8817]
"('FastIgnoreRule.java', 'org.eclipse.jgit.ignore.FastIgnoreRule', 'isMatch', '[\\p{XDigit}]', '5')",[163076]
"('Description.java', 'org.junit.runner.Description', 'methodAndClassNamePatternGroupOrDefault', '([\\s\\S]*)\\((.*)\\)', 'simpleAncestor(org.eclipse.jgit.api.NameRevCommandTest)')","[242120, 242358]"
"('URIish.java', 'org.eclipse.jgit.transport.URIish', '<init>', '^([a-z][a-z0-9+-]+)://(?:(?:([^/:@]+)(?::([^\\\\/]+))?@)?((?:[^\\\\/:]+)|(?:\\[[0-9a-f:]+\\]))(?::(\\d+))?((?:/~(?:[^\\\\/]+))?[\\\\/]))?(.+)?$', 'https://lusr\\example@[::1]:80//abc')",[39301]
"('URIish.java', 'org.eclipse.jgit.transport.URIish', '<init>', '^([a-z][a-z0-9+-]+)://(?:(?:([^/:@]+)(?::([^\\\\/]+))?@)?((?:[^\\\\/:]+)|(?:\\[[0-9a-f:]+\\]))(?::(\\d+))?((?:/~(?:[^\\\\/]+))?[\\\\/]))?(.+)?$', 'ssh://lusr\\example@[::1]//')","[42383, 42567]"
"('URIish.java', 'org.eclipse.jgit.transport.URIish', '<init>', '^([a-z][a-z0-9+-]+)://(?:(?:([^/:@]+)(?::([^\\\\/]+))?@)?((?:[^\\\\/:]+)|(?:\\[[0-9a-f:]+\\]))(?::(\\d+))?((?:/~(?:[^\\\\/]+))?[\\\\/]))?(.+)?$', '/tmp/jgit_test_228114219831588372_tmp/tmp_8226897773376440333')","[223093, 223223, 223960]"
"('URIish.java', 'org.eclipse.jgit.transport.URIish', '<init>', '^(file):([\\\\/](?![\\\\/])((?:[A-Za-z]:)?[\\\\/]?(?:(?:[^\\\\/]+[\\\\/]+)*[^\\\\/]+[\\\\/]*)))$', 'http://lusr\\example:wtf@[::1]:1234//')",[22260]
"('FastIgnoreRule.java', 'org.eclipse.jgit.ignore.FastIgnoreRule', 'isMatch', '[b-d][ab]', 'bc')",[161462]
"('URIish.java', 'org.eclipse.jgit.transport.URIish', '<init>', '^(file):([\\\\/](?![\\\\/])((?:[A-Za-z]:)?[\\\\/]?(?:(?:[^\\\\/]+[\\\\/]+)*[^\\\\/]+[\\\\/]*)))$', 'https://me@1.2.3.4//')","[49720, 49904]"
"('Description.java', 'org.junit.runner.Description', 'methodAndClassNamePatternGroupOrDefault', '([\\s\\S]*)\\((.*)\\)', 'testFileNameWildcards[OldRule? true](org.eclipse.jgit.ignore.IgnoreMatcherParametrizedTest)')","[141574, 141896]"
"('Description.java', 'org.junit.runner.Description', 'methodAndClassNamePatternGroupOrDefault', '([\\s\\S]*)\\((.*)\\)', 'testPrefixCompare_1(org.eclipse.jgit.lib.AbbreviatedObjectIdTest)')","[114389, 114918]"
"('Description.java', 'org.junit.runner.Description', 'methodAndClassNamePatternGroupOrDefault', '([\\s\\S]*)\\((.*)\\)', 'testContext10(org.eclipse.jgit.diff.DiffFormatterReflowTest)')","[94351, 94568]"
"('Description.java', 'org.junit.runner.Description', 'methodAndClassNamePatternGroupOrDefault', '([\\s\\S]*)\\((.*)\\)', 'testDelete(org.eclipse.jgit.api.BranchCommandTest)')","[227198, 227526]"
"('URIish.java', 'org.eclipse.jgit.transport.URIish', '<init>', '^([a-z][a-z0-9+-]+)://(?:(?:([^/:@]+)(?::([^\\\\/]+))?@)?((?:[^\\\\/:]+)|(?:\\[[0-9a-f:]+\\]))(?::(\\d+))?((?:/~(?:[^\\\\/]+))?[\\\\/]))?(.+)?$', 'https://lusr\\example@[::1]:1234//abc')",[39117]
"('URIish.java', 'org.eclipse.jgit.transport.URIish', '<init>', '^(file):([\\\\/](?![\\\\/])((?:[A-Za-z]:)?[\\\\/]?(?:(?:[^\\\\/]+[\\\\/]+)*[^\\\\/]+[\\\\/]*)))$', 'ssh+git://lusr\\example:wtf@example.com:1234/D:/x')",[17147]
"('Description.java', 'org.junit.runner.Description', 'methodAndClassNamePatternGroupOrDefault', '([\\s\\S]*)\\((.*)\\)', 'testMergeEmptyBranches(org.eclipse.jgit.api.CommitAndLogCommandTest)')","[213150, 213368]"
"('Description.java', 'org.junit.runner.Description', 'methodAndClassNamePatternGroupOrDefault', '([\\s\\S]*)\\((.*)\\)', 'testFastForwardWithMultipleCommits(org.eclipse.jgit.api.RebaseCommandTest)')","[217501, 218982]"
"('Description.java', 'org.junit.runner.Description', 'methodAndClassNamePatternGroupOrDefault', '([\\s\\S]*)\\((.*)\\)', 'testVerySimplePatternCase0[OldRule? true](org.eclipse.jgit.ignore.IgnoreRuleSpecialCasesTest)')","[150237, 157321]"
"('URIish.java', 'org.eclipse.jgit.transport.URIish', '<init>', '^([a-z][a-z0-9+-]+)://(?:(?:([^/:@]+)(?::([^\\\\/]+))?@)?((?:[^\\\\/:]+)|(?:\\[[0-9a-f:]+\\]))(?::(\\d+))?((?:/~(?:[^\\\\/]+))?[\\\\/]))?(.+)?$', 'http://l usr\\example.com:wtf@example.com:80/D:/x')",[20696]
"('Description.java', 'org.junit.runner.Description', 'methodAndClassNamePatternGroupOrDefault', '([\\s\\S]*)\\((.*)\\)', 'commitSubmoduleUpdate(org.eclipse.jgit.api.CommitCommandTest)')","[212351, 212564]"
"('Description.java', 'org.junit.runner.Description', 'methodAndClassNamePatternGroupOrDefault', '([\\s\\S]*)\\((.*)\\)', 'testFindRemoteRefUpdatesNoWildcardNoTracking(org.eclipse.jgit.transport.TransportTest)')","[71528, 71700]"
"('Description.java', 'org.junit.runner.Description', 'methodAndClassNamePatternGroupOrDefault', '([\\s\\S]*)\\((.*)\\)', 'testInvalidCommitInvalidTree3(org.eclipse.jgit.lib.ObjectCheckerTest)')","[121049, 123139]"
"('Description.java', 'org.junit.runner.Description', 'methodAndClassNamePatternGroupOrDefault', '([\\s\\S]*)\\((.*)\\)', 'testEmptyInputs(org.eclipse.jgit.diff.MyersDiffTest)')","[97106, 97536]"
"('Description.java', 'org.junit.runner.Description', 'methodAndClassNamePatternGroupOrDefault', '([\\s\\S]*)\\((.*)\\)', 'testBuildRejectsUnsetFileMode(org.eclipse.jgit.dircache.DirCacheBuilderTest)')","[91862, 92060]"
"('Description.java', 'org.junit.runner.Description', 'methodAndClassNamePatternGroupOrDefault', '([\\s\\S]*)\\((.*)\\)', 'testReset(org.eclipse.jgit.fnmatch.FileNameMatcherTest)')","[101671, 104963]"
"('Description.java', 'org.junit.runner.Description', 'methodAndClassNamePatternGroupOrDefault', '([\\s\\S]*)\\((.*)\\)', 'testDigitGroupCase3(org.eclipse.jgit.fnmatch.FileNameMatcherTest)')","[102490, 105821]"
"('Description.java', 'org.junit.runner.Description', 'methodAndClassNamePatternGroupOrDefault', '([\\s\\S]*)\\((.*)\\)', 'testEmpty(org.eclipse.jgit.util.io.EolCanonicalizingInputStreamTest)')","[174598, 174746]"
"('URIish.java', 'org.eclipse.jgit.transport.URIish', '<init>', '^(file):([\\\\/](?![\\\\/])((?:[A-Za-z]:)?[\\\\/]?(?:(?:[^\\\\/]+[\\\\/]+)*[^\\\\/]+[\\\\/]*)))$', 'ssh://l usr\\example.com@1.2.3.4:80/D:\\x')",[27931]
"('FastIgnoreRule.java', 'org.eclipse.jgit.ignore.FastIgnoreRule', 'isMatch', '[a-c-e]', 'd')",[160238]
"('Description.java', 'org.junit.runner.Description', 'methodAndClassNamePatternGroupOrDefault', '([\\s\\S]*)\\((.*)\\)', 'testCharClass[OldRule? true](org.eclipse.jgit.ignore.FastIgnoreRuleTest)')","[164316, 165052]"
"('Description.java', 'org.junit.runner.Description', 'methodAndClassNamePatternGroupOrDefault', '([\\s\\S]*)\\((.*)\\)', 'testAddHugeFile(org.eclipse.jgit.api.HugeFileTest)')","[216527, 216549]"
"('URIish.java', 'org.eclipse.jgit.transport.URIish', '<init>', '^([a-z][a-z0-9+-]+)://(?:(?:([^/:@]+)(?::([^\\\\/]+))?@)?((?:[^\\\\/:]+)|(?:\\[[0-9a-f:]+\\]))(?::(\\d+))?((?:/~(?:[^\\\\/]+))?[\\\\/]))?(.+)?$', 'ssh://l usr\\example.com@1.2.3.4:80/D:\\x')",[27954]
"('URIish.java', 'org.eclipse.jgit.transport.URIish', '<init>', '^(?:([^/:@]+)(?::([^\\\\/]+))?@)?((?:[^\\\\/:]+)|(?:\\[[0-9a-f:]+\\])):((?:(?:/~(?:[^\\\\/]+))[\\\\/])?(?:(?:[^\\\\/]+[\\\\/]+)*[^\\\\/]+[\\\\/]*))$', '/tmp/jgit_test_3983781403271311376_tmp/tmp_8902236642966420184')","[222270, 222405, 222659, 222871]"
"('Description.java', 'org.junit.runner.Description', 'methodAndClassNamePatternGroupOrDefault', '([\\s\\S]*)\\((.*)\\)', 'testParse_NoParents(org.eclipse.jgit.revwalk.RevCommitParseTest)')","[84437, 84920]"
"('URIish.java', 'org.eclipse.jgit.transport.URIish', '<init>', '^(file):([\\\\/](?![\\\\/])((?:[A-Za-z]:)?[\\\\/]?(?:(?:[^\\\\/]+[\\\\/]+)*[^\\\\/]+[\\\\/]*)))$', 'http://lusr\\example@[::1]//abc')","[49030, 49214]"
"('Description.java', 'org.junit.runner.Description', 'methodAndClassNamePatternGroupOrDefault', '([\\s\\S]*)\\((.*)\\)', 'org.eclipse.jgit.util.RawParseUtils_LineMapTest')","[179085, 179323]"
"('Description.java', 'org.junit.runner.Description', 'methodAndClassNamePatternGroupOrDefault', '([\\s\\S]*)\\((.*)\\)', 'testUpperGroupCase1[OldRule? true](org.eclipse.jgit.ignore.IgnoreRuleSpecialCasesTest)')","[151778, 158862]"
"('URIish.java', 'org.eclipse.jgit.transport.URIish', '<init>', '^([a-z][a-z0-9+-]+)://(?:(?:([^/:@]+)(?::([^\\\\/]+))?@)?((?:[^\\\\/:]+)|(?:\\[[0-9a-f:]+\\]))(?::(\\d+))?((?:/~(?:[^\\\\/]+))?[\\\\/]))?(.+)?$', 'https://lusr\\example@[::1]:80//')",[39255]
"('URIish.java', 'org.eclipse.jgit.transport.URIish', '<init>', '^([a-z][a-z0-9+-]+)://(?:(?:([^/:@]+)(?::([^\\\\/]+))?@)?((?:[^\\\\/:]+)|(?:\\[[0-9a-f:]+\\]))(?::(\\d+))?((?:/~(?:[^\\\\/]+))?[\\\\/]))?(.+)?$', 'ssh://l usr\\example.com@[::1]:1234//abc')",[28077]
"('Description.java', 'org.junit.runner.Description', 'methodAndClassNamePatternGroupOrDefault', '([\\s\\S]*)\\((.*)\\)', 'testRemoveFromEnd(org.eclipse.jgit.util.BlockListTest)')","[180558, 180813]"
"('URIish.java', 'org.eclipse.jgit.transport.URIish', '<init>', '^(file):([\\\\/](?![\\\\/])((?:[A-Za-z]:)?[\\\\/]?(?:(?:[^\\\\/]+[\\\\/]+)*[^\\\\/]+[\\\\/]*)))$', 'file:///tmp/jgit_test_3047862731010516352_tmp/tmp_2759357096188306332/.git/')",[198886]
"('Description.java', 'org.junit.runner.Description', 'methodAndClassNamePatternGroupOrDefault', '([\\s\\S]*)\\((.*)\\)', 'testSpaceGroupCase2[OldRule? true](org.eclipse.jgit.ignore.IgnoreRuleSpecialCasesTest)')","[150605, 157689]"
"('URIish.java', 'org.eclipse.jgit.transport.URIish', '<init>', '^([a-z][a-z0-9+-]+)://(?:(?:([^/:@]+)(?::([^\\\\/]+))?@)?((?:[^\\\\/:]+)|(?:\\[[0-9a-f:]+\\]))(?::(\\d+))?((?:/~(?:[^\\\\/]+))?[\\\\/]))?(.+)?$', 'ssh+git://me@[::1]:1234//abc')",[30285]
"('Description.java', 'org.junit.runner.Description', 'methodAndClassNamePatternGroupOrDefault', '([\\s\\S]*)\\((.*)\\)', 'testDiffNullToNull(org.eclipse.jgit.diff.DiffFormatterTest)')","[95958, 96216]"
"('URIish.java', 'org.eclipse.jgit.transport.URIish', '<init>', '^([a-z][a-z0-9+-]+)://(?:(?:([^/:@]+)(?::([^\\\\/]+))?@)?((?:[^\\\\/:]+)|(?:\\[[0-9a-f:]+\\]))(?::(\\d+))?((?:/~(?:[^\\\\/]+))?[\\\\/]))?(.+)?$', 'http://me:wtf@1.2.3.4:1234//')",[19156]
"('Description.java', 'org.junit.runner.Description', 'methodAndClassNamePatternGroupOrDefault', '([\\s\\S]*)\\((.*)\\)', 'org.eclipse.jgit.lib.RepositoryCacheTest')","[111301, 111582]"
"('Description.java', 'org.junit.runner.Description', 'methodAndClassNamePatternGroupOrDefault', '([\\s\\S]*)\\((.*)\\)', 'testVerySimpleGroupRangeCase1[OldRule? false](org.eclipse.jgit.ignore.IgnoreRuleSpecialCasesTest)')","[147479, 154584]"
"('Description.java', 'org.junit.runner.Description', 'methodAndClassNamePatternGroupOrDefault', '([\\s\\S]*)\\((.*)\\)', 'testPathsResetOnUnbornBranch(org.eclipse.jgit.api.ResetCommandTest)')","[204373, 204712]"
"('URIish.java', 'org.eclipse.jgit.transport.URIish', '<init>', '^([a-z][a-z0-9+-]+)://(?:(?:([^/:@]+)(?::([^\\\\/]+))?@)?((?:[^\\\\/:]+)|(?:\\[[0-9a-f:]+\\]))(?::(\\d+))?((?:/~(?:[^\\\\/]+))?[\\\\/]))?(.+)?$', 'http://lusr\\example:wtf@1.2.3.4:80//abc')",[22145]
"('Description.java', 'org.junit.runner.Description', 'methodAndClassNamePatternGroupOrDefault', '([\\s\\S]*)\\((.*)\\)', 'org.eclipse.jgit.lib.DirCacheCheckoutMaliciousPathTest')","[111618, 117843]"
"('URIish.java', 'org.eclipse.jgit.transport.URIish', '<init>', '^(file):([\\\\/](?![\\\\/])((?:[A-Za-z]:)?[\\\\/]?(?:(?:[^\\\\/]+[\\\\/]+)*[^\\\\/]+[\\\\/]*)))$', 'ssh://lusr\\example:wtf@1.2.3.4:1234/D:/x')",[12825]
"('URIish.java', 'org.eclipse.jgit.transport.URIish', '<init>', '^([a-z][a-z0-9+-]+)://(?:(?:([^/:@]+)(?::([^\\\\/]+))?@)?((?:[^\\\\/:]+)|(?:\\[[0-9a-f:]+\\]))(?::(\\d+))?((?:/~(?:[^\\\\/]+))?[\\\\/]))?(.+)?$', 'ssh+git://l usr\\example.com@1.2.3.4:1234/D:\\x')",[31113]
"('Description.java', 'org.junit.runner.Description', 'methodAndClassNamePatternGroupOrDefault', '([\\s\\S]*)\\((.*)\\)', 'testKeepFiles(org.eclipse.jgit.internal.storage.file.GcKeepFilesTest)')","[251097, 251119]"
"('URIish.java', 'org.eclipse.jgit.transport.URIish', '<init>', '^(file):([\\\\/](?![\\\\/])((?:[A-Za-z]:)?[\\\\/]?(?:(?:[^\\\\/]+[\\\\/]+)*[^\\\\/]+[\\\\/]*)))$', '/tmp/jgit_test_8377865151388464425_tmp/tmp_8247112886499178725')","[211448, 211573, 212109]"
"('URIish.java', 'org.eclipse.jgit.transport.URIish', '<init>', '^([a-z][a-z0-9+-]+)://(?:(?:([^/:@]+)(?::([^\\\\/]+))?@)?((?:[^\\\\/:]+)|(?:\\[[0-9a-f:]+\\]))(?::(\\d+))?((?:/~(?:[^\\\\/]+))?[\\\\/]))?(.+)?$', '/tmp/jgit_test_4337800104653581569_tmp/tmp_3318288783057189273/.git')","[111001, 111146]"
"('Description.java', 'org.junit.runner.Description', 'methodAndClassNamePatternGroupOrDefault', '([\\s\\S]*)\\((.*)\\)', 'testMarkSupported(org.eclipse.jgit.util.io.UnionInputStreamTest)')","[175000, 175213]"
"('URIish.java', 'org.eclipse.jgit.transport.URIish', '<init>', '^(file):([\\\\/](?![\\\\/])((?:[A-Za-z]:)?[\\\\/]?(?:(?:[^\\\\/]+[\\\\/]+)*[^\\\\/]+[\\\\/]*)))$', 'http://lusr\\example:wtf@[::1]:80/D:\\x')",[22582]
"('Description.java', 'org.junit.runner.Description', 'methodAndClassNamePatternGroupOrDefault', '([\\s\\S]*)\\((.*)\\)', 'testOnlyOption_f1_1_f2_14_a(org.eclipse.jgit.api.CommitOnlyTest)')","[237749, 239856]"
"('FastIgnoreRule.java', 'org.eclipse.jgit.ignore.FastIgnoreRule', 'isMatch', '[[\\p{javaDigit}\\p{javaLetter}_]]', 'g')",[163258]
"('Description.java', 'org.junit.runner.Description', 'methodAndClassNamePatternGroupOrDefault', '([\\s\\S]*)\\((.*)\\)', 'testNegation[OldRule? false](org.eclipse.jgit.ignore.IgnoreMatcherParametrizedTest)')","[141507, 141850]"
"('Description.java', 'org.junit.runner.Description', 'methodAndClassNamePatternGroupOrDefault', '([\\s\\S]*)\\((.*)\\)', 'test005_addRecursiveFile(org.eclipse.jgit.lib.T0002_TreeTest)')","[119838, 120136]"
"('URIish.java', 'org.eclipse.jgit.transport.URIish', '<init>', '^([a-z][a-z0-9+-]+)://(?:(?:([^/:@]+)(?::([^\\\\/]+))?@)?((?:[^\\\\/:]+)|(?:\\[[0-9a-f:]+\\]))(?::(\\d+))?((?:/~(?:[^\\\\/]+))?[\\\\/]))?(.+)?$', 'http://me@1.2.3.4:1234//abc')",[33229]
"('FastIgnoreRule.java', 'org.eclipse.jgit.ignore.FastIgnoreRule', 'isMatch', '\\[[a]', '[a')",[163726]
"('Description.java', 'org.junit.runner.Description', 'methodAndClassNamePatternGroupOrDefault', '([\\s\\S]*)\\((.*)\\)', 'testBuilder_Remove(org.eclipse.jgit.util.RefListTest)')","[179401, 179886]"
"('URIish.java', 'org.eclipse.jgit.transport.URIish', '<init>', '^([a-z][a-z0-9+-]+)://(?:(?:([^/:@]+)(?::([^\\\\/]+))?@)?((?:[^\\\\/:]+)|(?:\\[[0-9a-f:]+\\]))(?::(\\d+))?((?:/~(?:[^\\\\/]+))?[\\\\/]))?(.+)?$', 'ssh+git://me:wtf@[::1]:1234/D:/x')",[15214]
"('Description.java', 'org.junit.runner.Description', 'methodAndClassNamePatternGroupOrDefault', '([\\s\\S]*)\\((.*)\\)', 'testParse_CcDeleteFile(org.eclipse.jgit.patch.PatchCcTest)')","[196481, 196547]"
"('Description.java', 'org.junit.runner.Description', 'methodAndClassNamePatternGroupOrDefault', '([\\s\\S]*)\\((.*)\\)', 'testOverwriteUntrackedIgnoredFile(org.eclipse.jgit.lib.DirCacheCheckoutTest)')","[116788, 117776]"
"('Description.java', 'org.junit.runner.Description', 'methodAndClassNamePatternGroupOrDefault', '([\\s\\S]*)\\((.*)\\)', 'testXDigitGroupCase1[OldRule? false](org.eclipse.jgit.ignore.IgnoreRuleSpecialCasesTest)')","[148537, 155642]"
"('URIish.java', 'org.eclipse.jgit.transport.URIish', '<init>', '^([a-z][a-z0-9+-]+)://(?:(?:([^/:@]+)(?::([^\\\\/]+))?@)?((?:[^\\\\/:]+)|(?:\\[[0-9a-f:]+\\]))(?::(\\d+))?((?:/~(?:[^\\\\/]+))?[\\\\/]))?(.+)?$', 'ssh://lusr\\example:wtf@[::1]:1234//')",[13187]
"('Description.java', 'org.junit.runner.Description', 'methodAndClassNamePatternGroupOrDefault', '([\\s\\S]*)\\((.*)\\)', 'testVerySimplePatternCase1[OldRule? false](org.eclipse.jgit.ignore.IgnoreRuleSpecialCasesTest)')","[146697, 153802]"
"('FastIgnoreRule.java', 'org.eclipse.jgit.ignore.FastIgnoreRule', 'isMatch', '.r[a-c]', '5ra')",[144947]
"('URIish.java', 'org.eclipse.jgit.transport.URIish', '<init>', '^([a-z][a-z0-9+-]+)://(?:(?:([^/:@]+)(?::([^\\\\/]+))?@)?((?:[^\\\\/:]+)|(?:\\[[0-9a-f:]+\\]))(?::(\\d+))?((?:/~(?:[^\\\\/]+))?[\\\\/]))?(.+)?$', 'ssh://l usr\\example.com@1.2.3.4:80/D:/x')",[27876]
"('Description.java', 'org.junit.runner.Description', 'methodAndClassNamePatternGroupOrDefault', '([\\s\\S]*)\\((.*)\\)', 'testParseGitFileName_NoLF(org.eclipse.jgit.patch.FileHeaderTest)')","[195369, 195823]"
"('Description.java', 'org.junit.runner.Description', 'methodAndClassNamePatternGroupOrDefault', '([\\s\\S]*)\\((.*)\\)', 'testFilter_NO_MERGES(org.eclipse.jgit.revwalk.RevWalkFilterTest)')","[83209, 83532]"
"('Description.java', 'org.junit.runner.Description', 'methodAndClassNamePatternGroupOrDefault', '([\\s\\S]*)\\((.*)\\)', 'testRenameOverNonExistingFile(org.eclipse.jgit.util.FileUtilTest)')","[176659, 177002]"
"('URIish.java', 'org.eclipse.jgit.transport.URIish', '<init>', '^([a-z][a-z0-9+-]+)://(?:(?:([^/:@]+)(?::([^\\\\/]+))?@)?((?:[^\\\\/:]+)|(?:\\[[0-9a-f:]+\\]))(?::(\\d+))?((?:/~(?:[^\\\\/]+))?[\\\\/]))?(.+)?$', 'http://me@[::1]//')","[46799, 46983]"
"('Description.java', 'org.junit.runner.Description', 'methodAndClassNamePatternGroupOrDefault', '([\\s\\S]*)\\((.*)\\)', 'fetchWithUpdatedTagShouldNotTryToUpdateLocal(org.eclipse.jgit.api.FetchCommandTest)')","[242932, 243063]"
"('Description.java', 'org.junit.runner.Description', 'methodAndClassNamePatternGroupOrDefault', '([\\s\\S]*)\\((.*)\\)', 'testTrivialTwoWay_leftDFconflict2(org.eclipse.jgit.merge.SimpleMergeTest)')","[86523, 86804]"
"('URIish.java', 'org.eclipse.jgit.transport.URIish', '<init>', '^([a-z][a-z0-9+-]+)://(?:(?:([^/:@]+)(?::([^\\\\/]+))?@)?((?:[^\\\\/:]+)|(?:\\[[0-9a-f:]+\\]))(?::(\\d+))?((?:/~(?:[^\\\\/]+))?[\\\\/]))?(.+)?$', 'file:///tmp/jgit_test_8814120598762444066_tmp/tmp_2877606796553874436')","[216789, 216851, 220332, 220394, 220446, 220508]"
"('URIish.java', 'org.eclipse.jgit.transport.URIish', '<init>', '^([a-z][a-z0-9+-]+)://(?:(?:([^/:@]+)(?::([^\\\\/]+))?@)?((?:[^\\\\/:]+)|(?:\\[[0-9a-f:]+\\]))(?::(\\d+))?((?:/~(?:[^\\\\/]+))?[\\\\/]))?(.+)?$', 'ssh+git://lusr\\example@1.2.3.4:1234/D:\\x')",[32217]
"('URIish.java', 'org.eclipse.jgit.transport.URIish', '<init>', '^([a-z][a-z0-9+-]+)://(?:(?:([^/:@]+)(?::([^\\\\/]+))?@)?((?:[^\\\\/:]+)|(?:\\[[0-9a-f:]+\\]))(?::(\\d+))?((?:/~(?:[^\\\\/]+))?[\\\\/]))?(.+)?$', 'ssh://me:wtf@example.com:80/D:\\x')",[8043]
"('URIish.java', 'org.eclipse.jgit.transport.URIish', '<init>', '^(file):([\\\\/](?![\\\\/])((?:[A-Za-z]:)?[\\\\/]?(?:(?:[^\\\\/]+[\\\\/]+)*[^\\\\/]+[\\\\/]*)))$', 'https://lusr\\example@example.com:80//abc')",[38542]
"('URIish.java', 'org.eclipse.jgit.transport.URIish', '<init>', '^([a-z][a-z0-9+-]+)://(?:(?:([^/:@]+)(?::([^\\\\/]+))?@)?((?:[^\\\\/:]+)|(?:\\[[0-9a-f:]+\\]))(?::(\\d+))?((?:/~(?:[^\\\\/]+))?[\\\\/]))?(.+)?$', 'ssh+git://me@[::1]/D:/x')","[43579, 43763]"
"('Description.java', 'org.junit.runner.Description', 'methodAndClassNamePatternGroupOrDefault', '([\\s\\S]*)\\((.*)\\)', 'testIsWhitespace(org.eclipse.jgit.util.RawCharUtilTest)')","[192283, 192349]"
"('URIish.java', 'org.eclipse.jgit.transport.URIish', '<init>', '^(file):([\\\\/](?![\\\\/])((?:[A-Za-z]:)?[\\\\/]?(?:(?:[^\\\\/]+[\\\\/]+)*[^\\\\/]+[\\\\/]*)))$', 'http://l usr\\example.com@1.2.3.4//')","[47512, 47696]"
"('URIish.java', 'org.eclipse.jgit.transport.URIish', '<init>', '^(file):([\\\\/](?![\\\\/])((?:[A-Za-z]:)?[\\\\/]?(?:(?:[^\\\\/]+[\\\\/]+)*[^\\\\/]+[\\\\/]*)))$', 'ssh+git://me@1.2.3.4/D:\\x')","[43234, 43418]"
"('Description.java', 'org.junit.runner.Description', 'methodAndClassNamePatternGroupOrDefault', '([\\s\\S]*)\\((.*)\\)', 'testAsterisk[OldRule? false](org.eclipse.jgit.ignore.FastIgnoreRuleTest)')","[164065, 164822]"
"('Description.java', 'org.junit.runner.Description', 'methodAndClassNamePatternGroupOrDefault', '([\\s\\S]*)\\((.*)\\)', 'testXDigitGroupCase4[OldRule? true](org.eclipse.jgit.ignore.IgnoreRuleSpecialCasesTest)')","[152169, 159253]"
"('URIish.java', 'org.eclipse.jgit.transport.URIish', '<init>', '^([a-z][a-z0-9+-]+)://(?:(?:([^/:@]+)(?::([^\\\\/]+))?@)?((?:[^\\\\/:]+)|(?:\\[[0-9a-f:]+\\]))(?::(\\d+))?((?:/~(?:[^\\\\/]+))?[\\\\/]))?(.+)?$', 'ssh://lusr\\example:wtf@1.2.3.4:80//abc')",[13049]
"('Description.java', 'org.junit.runner.Description', 'methodAndClassNamePatternGroupOrDefault', '([\\s\\S]*)\\((.*)\\)', 'testDiff(org.eclipse.jgit.diff.DiffFormatterTest)')","[95916, 96172]"
"('Description.java', 'org.junit.runner.Description', 'methodAndClassNamePatternGroupOrDefault', '([\\s\\S]*)\\((.*)\\)', 'org.eclipse.jgit.revwalk.RevWalkFollowFilterTest')","[79200, 79477]"
"('Description.java', 'org.junit.runner.Description', 'methodAndClassNamePatternGroupOrDefault', '([\\s\\S]*)\\((.*)\\)', 'testOldCommitWalk(org.eclipse.jgit.revwalk.RevWalkMergedIntoTest)')","[78273, 78295]"
"('Description.java', 'org.junit.runner.Description', 'methodAndClassNamePatternGroupOrDefault', '([\\s\\S]*)\\((.*)\\)', 'shortWithDotsReverse(org.eclipse.jgit.util.GitDateParserTest)')","[182467, 182751]"
"('FastIgnoreRule.java', 'org.eclipse.jgit.ignore.FastIgnoreRule', 'isMatch', '[^b-c]', 'b')",[161148]
"('Description.java', 'org.junit.runner.Description', 'methodAndClassNamePatternGroupOrDefault', '([\\s\\S]*)\\((.*)\\)', 'testParallelThreadsWithDifferentLocales(org.eclipse.jgit.nls.NLSTest)')","[318, 580]"
"('Description.java', 'org.junit.runner.Description', 'methodAndClassNamePatternGroupOrDefault', '([\\s\\S]*)\\((.*)\\)', 'testEmpty(org.eclipse.jgit.util.TemporaryBufferTest)')","[178364, 178661]"
"('URIish.java', 'org.eclipse.jgit.transport.URIish', '<init>', '^(file):([\\\\/](?![\\\\/])((?:[A-Za-z]:)?[\\\\/]?(?:(?:[^\\\\/]+[\\\\/]+)*[^\\\\/]+[\\\\/]*)))$', 'http://[::1]/D:/x')","[60116, 60300, 61220, 61404, 62324, 62508]"
"('URIish.java', 'org.eclipse.jgit.transport.URIish', '<init>', '^(file):([\\\\/](?![\\\\/])((?:[A-Za-z]:)?[\\\\/]?(?:(?:[^\\\\/]+[\\\\/]+)*[^\\\\/]+[\\\\/]*)))$', 'ssh://l usr\\example.com:wtf@[::1]:80/D:\\x')",[12199]
"('URIish.java', 'org.eclipse.jgit.transport.URIish', '<init>', '^(file):([\\\\/](?![\\\\/])((?:[A-Za-z]:)?[\\\\/]?(?:(?:[^\\\\/]+[\\\\/]+)*[^\\\\/]+[\\\\/]*)))$', 'https://lusr\\example@[::1]//abc')","[52342, 52526]"
"('Description.java', 'org.junit.runner.Description', 'methodAndClassNamePatternGroupOrDefault', '([\\s\\S]*)\\((.*)\\)', 'testXDigitGroupCase4[OldRule? false](org.eclipse.jgit.ignore.IgnoreRuleSpecialCasesTest)')","[148606, 155711]"
"('Description.java', 'org.junit.runner.Description', 'methodAndClassNamePatternGroupOrDefault', '([\\s\\S]*)\\((.*)\\)', 'testObjectId_objectid_invalid_explicit_parent(org.eclipse.jgit.lib.RepositoryResolveTest)')","[125176, 125640]"
"('URIish.java', 'org.eclipse.jgit.transport.URIish', '<init>', '^([a-z][a-z0-9+-]+)://(?:(?:([^/:@]+)(?::([^\\\\/]+))?@)?((?:[^\\\\/:]+)|(?:\\[[0-9a-f:]+\\]))(?::(\\d+))?((?:/~(?:[^\\\\/]+))?[\\\\/]))?(.+)?$', 'http://me@1.2.3.4//abc')","[46477, 46661]"
"('ChangeIdUtil.java', 'org.eclipse.jgit.util.ChangeIdUtil', 'indexOfChangeId', '(^Change-Id: *I[a-f0-9]{40}$)', 'b')","[190923, 191079]"
"('Description.java', 'org.junit.runner.Description', 'methodAndClassNamePatternGroupOrDefault', '([\\s\\S]*)\\((.*)\\)', 'testOnlyOption_f1_6_a(org.eclipse.jgit.api.CommitOnlyTest)')","[236458, 238536]"
"('Description.java', 'org.junit.runner.Description', 'methodAndClassNamePatternGroupOrDefault', '([\\s\\S]*)\\((.*)\\)', 'testPrintGroupCase3[OldRule? true](org.eclipse.jgit.ignore.IgnoreRuleSpecialCasesTest)')","[151571, 158655]"
"('Description.java', 'org.junit.runner.Description', 'methodAndClassNamePatternGroupOrDefault', '([\\s\\S]*)\\((.*)\\)', 'testContainsEmpty(org.eclipse.jgit.internal.storage.file.InflatingBitSetTest)')","[250806, 250893]"
"('FastIgnoreRule.java', 'org.eclipse.jgit.ignore.FastIgnoreRule', 'isMatch', 'a.*a.*a', 'aaaaaaaa')",[162632]
"('Description.java', 'org.junit.runner.Description', 'methodAndClassNamePatternGroupOrDefault', '([\\s\\S]*)\\((.*)\\)', 'shouldWorkWithoutCommonAncestor(org.eclipse.jgit.revwalk.RevWalkUtilsCountTest)')","[78990, 79120]"
"('Description.java', 'org.junit.runner.Description', 'methodAndClassNamePatternGroupOrDefault', '([\\s\\S]*)\\((.*)\\)', 'checkUntrackedFolderIsNotAConflict(org.eclipse.jgit.merge.ResolveMergerTest)')","[88162, 88485]"
"('Description.java', 'org.junit.runner.Description', 'methodAndClassNamePatternGroupOrDefault', '([\\s\\S]*)\\((.*)\\)', 'testSideBranch(org.eclipse.jgit.revplot.PlotCommitListTest)')","[197171, 197496]"
"('URIish.java', 'org.eclipse.jgit.transport.URIish', '<init>', '^(file):([\\\\/](?![\\\\/])((?:[A-Za-z]:)?[\\\\/]?(?:(?:[^\\\\/]+[\\\\/]+)*[^\\\\/]+[\\\\/]*)))$', 'file:///tmp/jgit_test_8154327735289036494_tmp/tmp_3475771914157997148.git/')",[211797]
"('URIish.java', 'org.eclipse.jgit.transport.URIish', '<init>', '^(file):([\\\\/](?![\\\\/])((?:[A-Za-z]:)?[\\\\/]?(?:(?:[^\\\\/]+[\\\\/]+)*[^\\\\/]+[\\\\/]*)))$', 'http://lusr\\example@example.com:1234//abc')",[35046]
"('Description.java', 'org.junit.runner.Description', 'methodAndClassNamePatternGroupOrDefault', '([\\s\\S]*)\\((.*)\\)', 'testInvalidTreeTruncatedInObjectId(org.eclipse.jgit.lib.ObjectCheckerTest)')","[120881, 122963]"
"('Description.java', 'org.junit.runner.Description', 'methodAndClassNamePatternGroupOrDefault', '([\\s\\S]*)\\((.*)\\)', 'testTwoLevelSubtree_FilterPath(org.eclipse.jgit.dircache.DirCacheIteratorTest)')","[92540, 92778]"
"('URIish.java', 'org.eclipse.jgit.transport.URIish', '<init>', '^(file):([\\\\/](?![\\\\/])((?:[A-Za-z]:)?[\\\\/]?(?:(?:[^\\\\/]+[\\\\/]+)*[^\\\\/]+[\\\\/]*)))$', 'ssh://me@[::1]:80/D:/x')",[27117]
"('URIish.java', 'org.eclipse.jgit.transport.URIish', '<init>', '^(file):([\\\\/](?![\\\\/])((?:[A-Za-z]:)?[\\\\/]?(?:(?:[^\\\\/]+[\\\\/]+)*[^\\\\/]+[\\\\/]*)))$', 'git:///.git')",[5795]
"('Description.java', 'org.junit.runner.Description', 'methodAndClassNamePatternGroupOrDefault', '([\\s\\S]*)\\((.*)\\)', 'testRebaseShouldIgnoreMergeCommits(org.eclipse.jgit.api.RebaseCommandTest)')","[217312, 218784]"
"('URIish.java', 'org.eclipse.jgit.transport.URIish', '<init>', '^(?:([^/:@]+)(?::([^\\\\/]+))?@)?([^\\\\/:]{2,}):([\\\\/](?:(?:[^\\\\/]+[\\\\/]+)*[^\\\\/]+[\\\\/]*))$', '/tmp/jgit_test_7106031566354756827_tmp/tmp_4400850410867597182')","[228833, 228973, 229134]"
"('Description.java', 'org.junit.runner.Description', 'methodAndClassNamePatternGroupOrDefault', '([\\s\\S]*)\\((.*)\\)', 'testParse_ShortLineOnlyEmbeddedLF(org.eclipse.jgit.revwalk.RevTagParseTest)')","[80291, 80703]"
"('Description.java', 'org.junit.runner.Description', 'methodAndClassNamePatternGroupOrDefault', '([\\s\\S]*)\\((.*)\\)', 'org.eclipse.jgit.submodule.SubmoduleAddTest')","[108750, 111265]"
"('URIish.java', 'org.eclipse.jgit.transport.URIish', '<init>', '^(file):([\\\\/](?![\\\\/])((?:[A-Za-z]:)?[\\\\/]?(?:(?:[^\\\\/]+[\\\\/]+)*[^\\\\/]+[\\\\/]*)))$', 'ssh://me@[::1]:1234/D:/x')",[26933]
"('URIish.java', 'org.eclipse.jgit.transport.URIish', '<init>', '^(file):([\\\\/](?![\\\\/])((?:[A-Za-z]:)?[\\\\/]?(?:(?:[^\\\\/]+[\\\\/]+)*[^\\\\/]+[\\\\/]*)))$', 'http://lusr\\example@example.com:1234/D:\\x')",[35138]
"('Description.java', 'org.junit.runner.Description', 'methodAndClassNamePatternGroupOrDefault', '([\\s\\S]*)\\((.*)\\)', 'testAmendReflog(org.eclipse.jgit.api.ReflogCommandTest)')","[240539, 240603]"
"('URIish.java', 'org.eclipse.jgit.transport.URIish', '<init>', '^(file):([\\\\/](?![\\\\/])((?:[A-Za-z]:)?[\\\\/]?(?:(?:[^\\\\/]+[\\\\/]+)*[^\\\\/]+[\\\\/]*)))$', '/tmp/jgit_test_848094205772547537_tmp/tmp_2447967114920000272.git')",[72645]
"('Description.java', 'org.junit.runner.Description', 'methodAndClassNamePatternGroupOrDefault', '([\\s\\S]*)\\((.*)\\)', 'testOneAgainstTwoConflictingModifications(org.eclipse.jgit.merge.MergeAlgorithmTest)')","[87141, 87443]"
"('URIish.java', 'org.eclipse.jgit.transport.URIish', '<init>', '^([a-z][a-z0-9+-]+)://(?:(?:([^/:@]+)(?::([^\\\\/]+))?@)?((?:[^\\\\/:]+)|(?:\\[[0-9a-f:]+\\]))(?::(\\d+))?((?:/~(?:[^\\\\/]+))?[\\\\/]))?(.+)?$', 'ssh://lusr\\example@1.2.3.4//abc')","[42061, 42245]"
"('URIish.java', 'org.eclipse.jgit.transport.URIish', '<init>', '^([a-z][a-z0-9+-]+)://(?:(?:([^/:@]+)(?::([^\\\\/]+))?@)?((?:[^\\\\/:]+)|(?:\\[[0-9a-f:]+\\]))(?::(\\d+))?((?:/~(?:[^\\\\/]+))?[\\\\/]))?(.+)?$', 'https://lusr\\example:wtf@1.2.3.4:1234/D:\\x')",[25365]
"('FastIgnoreRule.java', 'org.eclipse.jgit.ignore.FastIgnoreRule', 'isMatch', '[\\p{javaDigit}]', '۹')",[161670]
"('Description.java', 'org.junit.runner.Description', 'methodAndClassNamePatternGroupOrDefault', '([\\s\\S]*)\\((.*)\\)', 'testLeafSplitsWhenFull(org.eclipse.jgit.notes.NoteMapTest)')","[199219, 199482]"
"('Description.java', 'org.junit.runner.Description', 'methodAndClassNamePatternGroupOrDefault', '([\\s\\S]*)\\((.*)\\)', 'testGermanTranslation(org.eclipse.jgit.nls.TranslationBundleTest)')","[57, 382]"
"('Description.java', 'org.junit.runner.Description', 'methodAndClassNamePatternGroupOrDefault', '([\\s\\S]*)\\((.*)\\)', 'testWriteEmptyCommit_RealIndex(org.eclipse.jgit.dircache.DirCacheBasicTest)')","[89920, 90154]"
"('Description.java', 'org.junit.runner.Description', 'methodAndClassNamePatternGroupOrDefault', '([\\s\\S]*)\\((.*)\\)', 'testParse_NoMessage(org.eclipse.jgit.revwalk.RevCommitParseTest)')","[84054, 84524]"
"('Description.java', 'org.junit.runner.Description', 'methodAndClassNamePatternGroupOrDefault', '([\\s\\S]*)\\((.*)\\)', 'testError_GitBinaryNoForwardHunk(org.eclipse.jgit.patch.PatchErrorTest)')","[194658, 194789]"
"('Description.java', 'org.junit.runner.Description', 'methodAndClassNamePatternGroupOrDefault', '([\\s\\S]*)\\((.*)\\)', 'testConflicting(org.eclipse.jgit.lib.IndexDiffTest)')","[110595, 110947]"
"('Description.java', 'org.junit.runner.Description', 'methodAndClassNamePatternGroupOrDefault', '([\\s\\S]*)\\((.*)\\)', 'testRebaseInteractiveSquashFirstCommitShouldFail(org.eclipse.jgit.api.RebaseCommandTest)')","[218005, 219510]"
"('Description.java', 'org.junit.runner.Description', 'methodAndClassNamePatternGroupOrDefault', '([\\s\\S]*)\\((.*)\\)', 'testSkipRevFilterNegative(org.eclipse.jgit.revwalk.SkipRevFilterTest)')","[82222, 82287]"
"('URIish.java', 'org.eclipse.jgit.transport.URIish', '<init>', '^([a-z][a-z0-9+-]+)://(?:(?:([^/:@]+)(?::([^\\\\/]+))?@)?((?:[^\\\\/:]+)|(?:\\[[0-9a-f:]+\\]))(?::(\\d+))?((?:/~(?:[^\\\\/]+))?[\\\\/]))?(.+)?$', 'https://me@[::1]:80//abc')",[37093]
"('URIish.java', 'org.eclipse.jgit.transport.URIish', '<init>', '^(file):([\\\\/](?![\\\\/])((?:[A-Za-z]:)?[\\\\/]?(?:(?:[^\\\\/]+[\\\\/]+)*[^\\\\/]+[\\\\/]*)))$', 'http://l usr\\example.com:wtf@[::1]:80/D:/x')",[21432]
"('URIish.java', 'org.eclipse.jgit.transport.URIish', '<init>', '^(file):([\\\\/](?![\\\\/])((?:[A-Za-z]:)?[\\\\/]?(?:(?:[^\\\\/]+[\\\\/]+)*[^\\\\/]+[\\\\/]*)))$', 'ssh+git://lusr\\example@example.com:1234//')",[31688]
"('URIish.java', 'org.eclipse.jgit.transport.URIish', '<init>', '^(file):([\\\\/](?![\\\\/])((?:[A-Za-z]:)?[\\\\/]?(?:(?:[^\\\\/]+[\\\\/]+)*[^\\\\/]+[\\\\/]*)))$', 'ssh://l usr\\example.com@1.2.3.4/D:/x')","[40980, 41164]"
"('Description.java', 'org.junit.runner.Description', 'methodAndClassNamePatternGroupOrDefault', '([\\s\\S]*)\\((.*)\\)', 'testInitialize_TogglePostOrder(org.eclipse.jgit.treewalk.PostOrderTreeWalkTest)')","[135186, 135315]"
"('Description.java', 'org.junit.runner.Description', 'methodAndClassNamePatternGroupOrDefault', '([\\s\\S]*)\\((.*)\\)', 'renameBranchSingleConfigValue(org.eclipse.jgit.api.RenameBranchCommandTest)')","[240371, 240459]"
"('Description.java', 'org.junit.runner.Description', 'methodAndClassNamePatternGroupOrDefault', '([\\s\\S]*)\\((.*)\\)', 'testCache_TooSmallLimit(org.eclipse.jgit.internal.storage.file.WindowCacheGetTest)')","[254524, 254588]"
"('URIish.java', 'org.eclipse.jgit.transport.URIish', '<init>', '^([a-z][a-z0-9+-]+)://(?:(?:([^/:@]+)(?::([^\\\\/]+))?@)?((?:[^\\\\/:]+)|(?:\\[[0-9a-f:]+\\]))(?::(\\d+))?((?:/~(?:[^\\\\/]+))?[\\\\/]))?(.+)?$', 'http://l usr\\example.com@example.com//')","[47167, 47351]"
"('URIish.java', 'org.eclipse.jgit.transport.URIish', '<init>', '^(file):([\\\\/](?![\\\\/])((?:[A-Za-z]:)?[\\\\/]?(?:(?:[^\\\\/]+[\\\\/]+)*[^\\\\/]+[\\\\/]*)))$', 'file:///tmp/jgit_test_5056712748056798557_tmp/tmp_1508340179061609147/.git/')",[134292]
"('Description.java', 'org.junit.runner.Description', 'methodAndClassNamePatternGroupOrDefault', '([\\s\\S]*)\\((.*)\\)', 'testTwoGroupsCase0[OldRule? false](org.eclipse.jgit.ignore.IgnoreRuleSpecialCasesTest)')","[147134, 154239]"
"('Description.java', 'org.junit.runner.Description', 'methodAndClassNamePatternGroupOrDefault', '([\\s\\S]*)\\((.*)\\)', 'testTimeout_writeBuffer_Timeout(org.eclipse.jgit.util.io.TimeoutOutputStreamTest)')","[172539, 172729]"
"('Description.java', 'org.junit.runner.Description', 'methodAndClassNamePatternGroupOrDefault', '([\\s\\S]*)\\((.*)\\)', 'testEmptyFolderCommittedDeletedCommittedComparedWithInitialCommit(org.eclipse.jgit.treewalk.filter.IndexDiffFilterTest)')","[136920, 137735]"
"('Description.java', 'org.junit.runner.Description', 'methodAndClassNamePatternGroupOrDefault', '([\\s\\S]*)\\((.*)\\)', 'testValidTreeSorting8(org.eclipse.jgit.lib.ObjectCheckerTest)')","[121574, 123689]"
"('Description.java', 'org.junit.runner.Description', 'methodAndClassNamePatternGroupOrDefault', '([\\s\\S]*)\\((.*)\\)', 'testRemoveMissingNote(org.eclipse.jgit.notes.LeafBucketTest)')","[198227, 198467]"
"('Description.java', 'org.junit.runner.Description', 'methodAndClassNamePatternGroupOrDefault', '([\\s\\S]*)\\((.*)\\)', 'testParseEncoding_badEncoding(org.eclipse.jgit.util.RawParseUtilsTest)')","[183595, 183659]"
"('Description.java', 'org.junit.runner.Description', 'methodAndClassNamePatternGroupOrDefault', '([\\s\\S]*)\\((.*)\\)', 'noTargetSet(org.eclipse.jgit.api.DescribeCommandTest)')","[215809, 215966]"
"('URIish.java', 'org.eclipse.jgit.transport.URIish', '<init>', '^(file):([\\\\/](?![\\\\/])((?:[A-Za-z]:)?[\\\\/]?(?:(?:[^\\\\/]+[\\\\/]+)*[^\\\\/]+[\\\\/]*)))$', 'https://lusr\\example@[::1]/D:/x')","[52388, 52572]"
"('Description.java', 'org.junit.runner.Description', 'methodAndClassNamePatternGroupOrDefault', '([\\s\\S]*)\\((.*)\\)', 'testDegenerate_ReplaceMiddle(org.eclipse.jgit.diff.HistogramDiffTest)')","[98947, 99562]"
"('Description.java', 'org.junit.runner.Description', 'methodAndClassNamePatternGroupOrDefault', '([\\s\\S]*)\\((.*)\\)', 'testNotBare_CreateRepositoryFromGitDirOnlyWithWorktreeConfig(org.eclipse.jgit.internal.storage.file.RepositorySetupWorkDirTest)')","[255789, 256048]"
"('Description.java', 'org.junit.runner.Description', 'methodAndClassNamePatternGroupOrDefault', '([\\s\\S]*)\\((.*)\\)', 'testParseLookupPath(org.eclipse.jgit.lib.RepositoryResolveTest)')","[125302, 125772]"
"('URIish.java', 'org.eclipse.jgit.transport.URIish', '<init>', '^([a-z][a-z0-9+-]+)://(?:(?:([^/:@]+)(?::([^\\\\/]+))?@)?((?:[^\\\\/:]+)|(?:\\[[0-9a-f:]+\\]))(?::(\\d+))?((?:/~(?:[^\\\\/]+))?[\\\\/]))?(.+)?$', 'https://lusr\\example:wtf@[::1]:80/D:\\x')",[25917]
"('FastIgnoreRule.java', 'org.eclipse.jgit.ignore.FastIgnoreRule', 'isMatch', '.*\\.sta[0-5]', 'test.sta4')","[142362, 143506]"
"('Description.java', 'org.junit.runner.Description', 'methodAndClassNamePatternGroupOrDefault', '([\\s\\S]*)\\((.*)\\)', 'testUnknownUpstream(org.eclipse.jgit.api.RebaseCommandTest)')","[218425, 219950]"
"('URIish.java', 'org.eclipse.jgit.transport.URIish', '<init>', '^([a-z][a-z0-9+-]+)://(?:(?:([^/:@]+)(?::([^\\\\/]+))?@)?((?:[^\\\\/:]+)|(?:\\[[0-9a-f:]+\\]))(?::(\\d+))?((?:/~(?:[^\\\\/]+))?[\\\\/]))?(.+)?$', 'http://me:wtf@1.2.3.4:80//abc')",[19694]
"('Description.java', 'org.junit.runner.Description', 'methodAndClassNamePatternGroupOrDefault', '([\\s\\S]*)\\((.*)\\)', 'testNoConfig(org.eclipse.jgit.transport.OpenSshConfigTest)')","[3682, 4096]"
"('Description.java', 'org.junit.runner.Description', 'methodAndClassNamePatternGroupOrDefault', '([\\s\\S]*)\\((.*)\\)', 'org.eclipse.jgit.patch.PatchCcTest')","[196418, 196570]"
"('URIish.java', 'org.eclipse.jgit.transport.URIish', '<init>', '^([a-z][a-z0-9+-]+)://(?:(?:([^/:@]+)(?::([^\\\\/]+))?@)?((?:[^\\\\/:]+)|(?:\\[[0-9a-f:]+\\]))(?::(\\d+))?((?:/~(?:[^\\\\/]+))?[\\\\/]))?(.+)?$', 'ssh+git://lusr\\example@[::1]:80/D:/x')",[32723]
"('Description.java', 'org.junit.runner.Description', 'methodAndClassNamePatternGroupOrDefault', '([\\s\\S]*)\\((.*)\\)', 'testGetAbsEmptyHumanishName(org.eclipse.jgit.transport.URIishTest)')","[2469, 4970]"
"('URIish.java', 'org.eclipse.jgit.transport.URIish', '<init>', '^(file):([\\\\/](?![\\\\/])((?:[A-Za-z]:)?[\\\\/]?(?:(?:[^\\\\/]+[\\\\/]+)*[^\\\\/]+[\\\\/]*)))$', 'https://lusr\\example@example.com/D:\\x')","[51698, 51882]"
"('Description.java', 'org.junit.runner.Description', 'methodAndClassNamePatternGroupOrDefault', '([\\s\\S]*)\\((.*)\\)', 'testDirectoryFileConflicts_15(org.eclipse.jgit.lib.DirCacheCheckoutTest)')","[116620, 117600]"
"('FastIgnoreRule.java', 'org.eclipse.jgit.ignore.FastIgnoreRule', 'isMatch', '.r[a-c]', 'grb')",[144758]
"('ChangeIdUtil.java', 'org.eclipse.jgit.util.ChangeIdUtil', 'indexOfChangeId', '(^Change-Id: *I[a-f0-9]{40}$)', 'Change-Id: Iaeac9b4149291060228ef0154db2985a31111335')","[188671, 190166]"
"('Description.java', 'org.junit.runner.Description', 'methodAndClassNamePatternGroupOrDefault', '([\\s\\S]*)\\((.*)\\)', 'testTwoRangesInOneGroupCase4[OldRule? false](org.eclipse.jgit.ignore.IgnoreRuleSpecialCasesTest)')","[148997, 156102]"
"('Description.java', 'org.junit.runner.Description', 'methodAndClassNamePatternGroupOrDefault', '([\\s\\S]*)\\((.*)\\)', 'testSimpleRules[OldRule? true](org.eclipse.jgit.ignore.FastIgnoreRuleTest)')","[164293, 165029]"
"('Description.java', 'org.junit.runner.Description', 'methodAndClassNamePatternGroupOrDefault', '([\\s\\S]*)\\((.*)\\)', 'testRejectInvalidWindowsCharacters(org.eclipse.jgit.lib.ObjectCheckerTest)')","[122288, 124437]"
"('URIish.java', 'org.eclipse.jgit.transport.URIish', '<init>', '^([a-z][a-z0-9+-]+)://(?:(?:([^/:@]+)(?::([^\\\\/]+))?@)?((?:[^\\\\/:]+)|(?:\\[[0-9a-f:]+\\]))(?::(\\d+))?((?:/~(?:[^\\\\/]+))?[\\\\/]))?(.+)?$', 'ssh+git://l usr\\example.com@example.com//abc')","[43901, 44085]"
"('Description.java', 'org.junit.runner.Description', 'methodAndClassNamePatternGroupOrDefault', '([\\s\\S]*)\\((.*)\\)', 'testRebaseShouldBeAbleToHandleLinesWithoutCommitMessageInRebaseTodoFile(org.eclipse.jgit.api.RebaseCommandTest)')","[217900, 219400]"
"('URIish.java', 'org.eclipse.jgit.transport.URIish', '<init>', '^([a-z][a-z0-9+-]+)://(?:(?:([^/:@]+)(?::([^\\\\/]+))?@)?((?:[^\\\\/:]+)|(?:\\[[0-9a-f:]+\\]))(?::(\\d+))?((?:/~(?:[^\\\\/]+))?[\\\\/]))?(.+)?$', 'http://[::1]//abc')","[60093, 60277, 61197, 61381, 62301, 62485]"
"('URIish.java', 'org.eclipse.jgit.transport.URIish', '<init>', '^([a-z][a-z0-9+-]+)://(?:(?:([^/:@]+)(?::([^\\\\/]+))?@)?((?:[^\\\\/:]+)|(?:\\[[0-9a-f:]+\\]))(?::(\\d+))?((?:/~(?:[^\\\\/]+))?[\\\\/]))?(.+)?$', 'ssh://me@[::1]//')","[40175, 40359]"
"('URIish.java', 'org.eclipse.jgit.transport.URIish', '<init>', '^([a-z][a-z0-9+-]+)://(?:(?:([^/:@]+)(?::([^\\\\/]+))?@)?((?:[^\\\\/:]+)|(?:\\[[0-9a-f:]+\\]))(?::(\\d+))?((?:/~(?:[^\\\\/]+))?[\\\\/]))?(.+)?$', 'ssh://lusr\\example@[::1]:80/D:\\x')",[29457]
"('Description.java', 'org.junit.runner.Description', 'methodAndClassNamePatternGroupOrDefault', '([\\s\\S]*)\\((.*)\\)', 'repositoryWithUninitializedModule(org.eclipse.jgit.submodule.SubmoduleInitTest)')","[100641, 100792]"
"('Description.java', 'org.junit.runner.Description', 'methodAndClassNamePatternGroupOrDefault', '([\\s\\S]*)\\((.*)\\)', 'testFillToHighMarkMulitpleBlocks(org.eclipse.jgit.revwalk.RevCommitListTest)')","[80915, 81063]"
"('URIish.java', 'org.eclipse.jgit.transport.URIish', '<init>', '^([a-z][a-z0-9+-]+)://(?:(?:([^/:@]+)(?::([^\\\\/]+))?@)?((?:[^\\\\/:]+)|(?:\\[[0-9a-f:]+\\]))(?::(\\d+))?((?:/~(?:[^\\\\/]+))?[\\\\/]))?(.+)?$', 'ssh+git://lusr\\example@1.2.3.4:1234//')",[32079]
"('Description.java', 'org.junit.runner.Description', 'methodAndClassNamePatternGroupOrDefault', '([\\s\\S]*)\\((.*)\\)', 'testVerySimpleGroupCase2[OldRule? false](org.eclipse.jgit.ignore.IgnoreRuleSpecialCasesTest)')","[149089, 156194]"
"('Description.java', 'org.junit.runner.Description', 'methodAndClassNamePatternGroupOrDefault', '([\\s\\S]*)\\((.*)\\)', 'testQuote_OctalAll(org.eclipse.jgit.util.QuotedStringGitPathStyleTest)')","[177613, 178044]"
"('URIish.java', 'org.eclipse.jgit.transport.URIish', '<init>', '^([a-z][a-z0-9+-]+)://(?:(?:([^/:@]+)(?::([^\\\\/]+))?@)?((?:[^\\\\/:]+)|(?:\\[[0-9a-f:]+\\]))(?::(\\d+))?((?:/~(?:[^\\\\/]+))?[\\\\/]))?(.+)?$', 'ssh://me:wtf@[::1]:1234/D:\\x')",[9888]
"('ChangeIdUtil.java', 'org.eclipse.jgit.util.ChangeIdUtil', 'insertId', '^(Bug|Issue)[a-zA-Z0-9-]*:.*$', 'Bug: 33')","[187079, 188978, 191623, 191853]"
"('Description.java', 'org.junit.runner.Description', 'methodAndClassNamePatternGroupOrDefault', '([\\s\\S]*)\\((.*)\\)', 'multiplePushInsteadOf(org.eclipse.jgit.transport.RemoteConfigTest)')","[1459, 2319]"
"('URIish.java', 'org.eclipse.jgit.transport.URIish', '<init>', '^(?:([^/:@]+)(?::([^\\\\/]+))?@)?([^\\\\/:]{2,}):([\\\\/](?:(?:[^\\\\/]+[\\\\/]+)*[^\\\\/]+[\\\\/]*))$', '/tmp/jgit_test_7866988883983564781_tmp/tmp_1286542265509971418')","[231259, 231399, 231920]"
"('Description.java', 'org.junit.runner.Description', 'methodAndClassNamePatternGroupOrDefault', '([\\s\\S]*)\\((.*)\\)', 'testFileCommitted(org.eclipse.jgit.treewalk.filter.IndexDiffFilterTest)')","[137046, 137867]"
"('Description.java', 'org.junit.runner.Description', 'methodAndClassNamePatternGroupOrDefault', '([\\s\\S]*)\\((.*)\\)', 'testEmpty(org.eclipse.jgit.diff.RawTextTest)')","[96535, 96750]"
"('Description.java', 'org.junit.runner.Description', 'methodAndClassNamePatternGroupOrDefault', '([\\s\\S]*)\\((.*)\\)', 'testComparatorReduceCommonStartButLastLineNoEol_2(org.eclipse.jgit.diff.RawTextTest)')","[96640, 96860]"
"('URIish.java', 'org.eclipse.jgit.transport.URIish', '<init>', '^([a-z][a-z0-9+-]+)://(?:(?:([^/:@]+)(?::([^\\\\/]+))?@)?((?:[^\\\\/:]+)|(?:\\[[0-9a-f:]+\\]))(?::(\\d+))?((?:/~(?:[^\\\\/]+))?[\\\\/]))?(.+)?$', 'ssh+git://l usr\\example.com@[::1]:80//')",[31527]
"('Description.java', 'org.junit.runner.Description', 'methodAndClassNamePatternGroupOrDefault', '([\\s\\S]*)\\((.*)\\)', 'testPrefixCompare_Full(org.eclipse.jgit.lib.AbbreviatedObjectIdTest)')","[114536, 115072]"
"('URIish.java', 'org.eclipse.jgit.transport.URIish', '<init>', '^(file):([\\\\/](?![\\\\/])((?:[A-Za-z]:)?[\\\\/]?(?:(?:[^\\\\/]+[\\\\/]+)*[^\\\\/]+[\\\\/]*)))$', '\\\\some\\place')","[6992, 7107]"
"('Description.java', 'org.junit.runner.Description', 'methodAndClassNamePatternGroupOrDefault', '([\\s\\S]*)\\((.*)\\)', 'testAddRejectsBadIndexes(org.eclipse.jgit.util.BlockListTest)')","[180663, 180923]"
"('Description.java', 'org.junit.runner.Description', 'methodAndClassNamePatternGroupOrDefault', '([\\s\\S]*)\\((.*)\\)', 'org.eclipse.jgit.diff.RawTextIgnoreLeadingWhitespaceTest')","[98277, 99100]"
"('FastIgnoreRule.java', 'org.eclipse.jgit.ignore.FastIgnoreRule', 'isMatch', '[b-ce-e]', 'b')",[163440]
"('Description.java', 'org.junit.runner.Description', 'methodAndClassNamePatternGroupOrDefault', '([\\s\\S]*)\\((.*)\\)', 'testReadACK_ACKcommon1(org.eclipse.jgit.transport.PacketLineInTest)')","[18812, 19960]"
"('Description.java', 'org.junit.runner.Description', 'methodAndClassNamePatternGroupOrDefault', '([\\s\\S]*)\\((.*)\\)', 'testConfigureCache_PackedGitWindowSizeAbovePackedGitLimit(org.eclipse.jgit.internal.storage.file.WindowCacheReconfigureTest)')","[247522, 247671]"
"('ChangeIdUtil.java', 'org.eclipse.jgit.util.ChangeIdUtil', 'insertId', '^(Bug|Issue)[a-zA-Z0-9-]*:.*$', 'Bug: 42')",[188441]
"('Description.java', 'org.junit.runner.Description', 'methodAndClassNamePatternGroupOrDefault', '([\\s\\S]*)\\((.*)\\)', 'testCompareEntriesOffsetsWithFindOffsets(org.eclipse.jgit.internal.storage.file.PackIndexV1Test)')","[250196, 250328]"
"('Description.java', 'org.junit.runner.Description', 'methodAndClassNamePatternGroupOrDefault', '([\\s\\S]*)\\((.*)\\)', 'test001_Initalize(org.eclipse.jgit.internal.storage.file.T0003_BasicTest)')","[249230, 249769]"
"('Description.java', 'org.junit.runner.Description', 'methodAndClassNamePatternGroupOrDefault', '([\\s\\S]*)\\((.*)\\)', 'testUsingHiddenCommonBlobFails(org.eclipse.jgit.transport.ReceivePackAdvertiseRefsHookTest)')","[723, 896]"
"('Description.java', 'org.junit.runner.Description', 'methodAndClassNamePatternGroupOrDefault', '([\\s\\S]*)\\((.*)\\)', 'testMaliciousPathDot(org.eclipse.jgit.lib.DirCacheCheckoutMaliciousPathTest)')","[111765, 112654]"
"('Description.java', 'org.junit.runner.Description', 'methodAndClassNamePatternGroupOrDefault', '([\\s\\S]*)\\((.*)\\)', 'org.eclipse.jgit.revwalk.DateRevQueueTest')","[82368, 83643]"
"('Description.java', 'org.junit.runner.Description', 'methodAndClassNamePatternGroupOrDefault', '([\\s\\S]*)\\((.*)\\)', 'testAddToEndOfList(org.eclipse.jgit.util.RefListTest)')","[179590, 180110]"
"('URIish.java', 'org.eclipse.jgit.transport.URIish', '<init>', '^([a-z][a-z0-9+-]+)://(?:(?:([^/:@]+)(?::([^\\\\/]+))?@)?((?:[^\\\\/:]+)|(?:\\[[0-9a-f:]+\\]))(?::(\\d+))?((?:/~(?:[^\\\\/]+))?[\\\\/]))?(.+)?$', 'file:///tmp/jgit_test_4360636382069253103_tmp/tmp_2495677753821017882/.git/')",[200418]
"('Description.java', 'org.junit.runner.Description', 'methodAndClassNamePatternGroupOrDefault', '([\\s\\S]*)\\((.*)\\)', 'testFindObjectWrongOffset(org.eclipse.jgit.internal.storage.file.PackReverseIndexTest)')","[257119, 257204]"
"('URIish.java', 'org.eclipse.jgit.transport.URIish', '<init>', '^(file):([\\\\/](?![\\\\/])((?:[A-Za-z]:)?[\\\\/]?(?:(?:[^\\\\/]+[\\\\/]+)*[^\\\\/]+[\\\\/]*)))$', 'ssh+git://lusr\\example@example.com//')","[44936, 45120]"
"('Description.java', 'org.junit.runner.Description', 'methodAndClassNamePatternGroupOrDefault', '([\\s\\S]*)\\((.*)\\)', 'org.eclipse.jgit.lib.ObjectIdOwnerMapTest')","[113585, 113909]"
"('Description.java', 'org.junit.runner.Description', 'methodAndClassNamePatternGroupOrDefault', '([\\s\\S]*)\\((.*)\\)', 'testOnlyOption_f1_3_a(org.eclipse.jgit.api.CommitOnlyTest)')","[236143, 238206]"
"('Description.java', 'org.junit.runner.Description', 'methodAndClassNamePatternGroupOrDefault', '([\\s\\S]*)\\((.*)\\)', 'testTrivialTwoWay(org.eclipse.jgit.merge.SimpleMergeTest)')","[86439, 86716]"
"('URIish.java', 'org.eclipse.jgit.transport.URIish', '<init>', '^(?:([^/:@]+)(?::([^\\\\/]+))?@)?((?:[^\\\\/:]+)|(?:\\[[0-9a-f:]+\\])):((?:(?:/~(?:[^\\\\/]+))[\\\\/])?(?:(?:[^\\\\/]+[\\\\/]+)*[^\\\\/]+[\\\\/]*))$', '/tmp/jgit_test_4442660414069404548_tmp/tmp_2197519089635817093')","[221327, 221462, 221724, 221874, 222138]"
"('URIish.java', 'org.eclipse.jgit.transport.URIish', '<init>', '^([a-z][a-z0-9+-]+)://(?:(?:([^/:@]+)(?::([^\\\\/]+))?@)?((?:[^\\\\/:]+)|(?:\\[[0-9a-f:]+\\]))(?::(\\d+))?((?:/~(?:[^\\\\/]+))?[\\\\/]))?(.+)?$', 'ssh://lusr\\example@1.2.3.4/D:/x')","[42107, 42291]"
"('URIish.java', 'org.eclipse.jgit.transport.URIish', '<init>', '^(file):([\\\\/](?![\\\\/])((?:[A-Za-z]:)?[\\\\/]?(?:(?:[^\\\\/]+[\\\\/]+)*[^\\\\/]+[\\\\/]*)))$', 'ssh+git://lusr\\example@[::1]/D:\\x')","[45810, 45994]"
"('Description.java', 'org.junit.runner.Description', 'methodAndClassNamePatternGroupOrDefault', '([\\s\\S]*)\\((.*)\\)', 'testDecode(org.eclipse.jgit.util.Base64Test)')","[183385, 183471]"
"('URIish.java', 'org.eclipse.jgit.transport.URIish', '<init>', '^(file):([\\\\/](?![\\\\/])((?:[A-Za-z]:)?[\\\\/]?(?:(?:[^\\\\/]+[\\\\/]+)*[^\\\\/]+[\\\\/]*)))$', 'ssh+git://me@1.2.3.4:80/D:/x')",[30124]
"('Description.java', 'org.junit.runner.Description', 'methodAndClassNamePatternGroupOrDefault', '([\\s\\S]*)\\((.*)\\)', 'invalidWhenWildcardAfterText(org.eclipse.jgit.transport.RefSpecTest)')","[14096, 15616]"
"('Description.java', 'org.junit.runner.Description', 'methodAndClassNamePatternGroupOrDefault', '([\\s\\S]*)\\((.*)\\)', 'testFilter_MY_ALL_Or_NONE(org.eclipse.jgit.revwalk.RevWalkFilterTest)')","[83188, 83510]"
"('Description.java', 'org.junit.runner.Description', 'methodAndClassNamePatternGroupOrDefault', '([\\s\\S]*)\\((.*)\\)', 'testSpecialGroupCase7[OldRule? false](org.eclipse.jgit.ignore.IgnoreRuleSpecialCasesTest)')","[145869, 152974]"
"('URIish.java', 'org.eclipse.jgit.transport.URIish', '<init>', '^(file):([\\\\/](?![\\\\/])((?:[A-Za-z]:)?[\\\\/]?(?:(?:[^\\\\/]+[\\\\/]+)*[^\\\\/]+[\\\\/]*)))$', 'http://me:wtf@[::1]:80/D:\\x')",[20351]
"('Description.java', 'org.junit.runner.Description', 'methodAndClassNamePatternGroupOrDefault', '([\\s\\S]*)\\((.*)\\)', 'looseRefPacked(org.eclipse.jgit.internal.storage.file.GcPackRefsTest)')","[252243, 252375]"
"('URIish.java', 'org.eclipse.jgit.transport.URIish', '<init>', '^([a-z][a-z0-9+-]+)://(?:(?:([^/:@]+)(?::([^\\\\/]+))?@)?((?:[^\\\\/:]+)|(?:\\[[0-9a-f:]+\\]))(?::(\\d+))?((?:/~(?:[^\\\\/]+))?[\\\\/]))?(.+)?$', 'ssh+git://l usr\\example.com@1.2.3.4:80/D:/x')",[31251]
"('Description.java', 'org.junit.runner.Description', 'methodAndClassNamePatternGroupOrDefault', '([\\s\\S]*)\\((.*)\\)', 'invalidSetSource(org.eclipse.jgit.transport.RefSpecTest)')","[13612, 15236]"
"('URIish.java', 'org.eclipse.jgit.transport.URIish', '<init>', '^([a-z][a-z0-9+-]+)://(?:(?:([^/:@]+)(?::([^\\\\/]+))?@)?((?:[^\\\\/:]+)|(?:\\[[0-9a-f:]+\\]))(?::(\\d+))?((?:/~(?:[^\\\\/]+))?[\\\\/]))?(.+)?$', 'http://me:wtf@1.2.3.4:80//')",[19604]
"('Description.java', 'org.junit.runner.Description', 'methodAndClassNamePatternGroupOrDefault', '([\\s\\S]*)\\((.*)\\)', 'org.eclipse.jgit.internal.storage.file.GcPackRefsTest')","[252117, 254467]"
"('URIish.java', 'org.eclipse.jgit.transport.URIish', '<init>', '^([a-z][a-z0-9+-]+)://(?:(?:([^/:@]+)(?::([^\\\\/]+))?@)?((?:[^\\\\/:]+)|(?:\\[[0-9a-f:]+\\]))(?::(\\d+))?((?:/~(?:[^\\\\/]+))?[\\\\/]))?(.+)?$', 'ssh://me@1.2.3.4/D:/x')","[39899, 40083]"
"('Description.java', 'org.junit.runner.Description', 'methodAndClassNamePatternGroupOrDefault', '([\\s\\S]*)\\((.*)\\)', 'org.eclipse.jgit.lib.ReflogResolveTest')","[126195, 127576]"
"('URIish.java', 'org.eclipse.jgit.transport.URIish', '<init>', '^([a-z][a-z0-9+-]+)://(?:(?:([^/:@]+)(?::([^\\\\/]+))?@)?((?:[^\\\\/:]+)|(?:\\[[0-9a-f:]+\\]))(?::(\\d+))?((?:/~(?:[^\\\\/]+))?[\\\\/]))?(.+)?$', 'ssh://lusr\\example@[::1]:1234/D:/x')",[29227]
"('Description.java', 'org.junit.runner.Description', 'methodAndClassNamePatternGroupOrDefault', '([\\s\\S]*)\\((.*)\\)', 'testAdd_LargeGroup(org.eclipse.jgit.util.IntListTest)')","[181767, 182001]"
"('Description.java', 'org.junit.runner.Description', 'methodAndClassNamePatternGroupOrDefault', '([\\s\\S]*)\\((.*)\\)', 'testGetWindowsPathHumanishName(org.eclipse.jgit.transport.URIishTest)')","[1961, 4706]"
"('Description.java', 'org.junit.runner.Description', 'methodAndClassNamePatternGroupOrDefault', '([\\s\\S]*)\\((.*)\\)', 'testRules1thru3_NoIndexEntry(org.eclipse.jgit.lib.DirCacheCheckoutTest)')","[115948, 116896]"
"('Description.java', 'org.junit.runner.Description', 'methodAndClassNamePatternGroupOrDefault', '([\\s\\S]*)\\((.*)\\)', 'dropFirstStashedCommit(org.eclipse.jgit.api.StashDropCommandTest)')","[243383, 243554]"
"('FastIgnoreRule.java', 'org.eclipse.jgit.ignore.FastIgnoreRule', 'isMatch', '[\\[:]', '[')",[160576]
"('URIish.java', 'org.eclipse.jgit.transport.URIish', '<init>', '^([a-z][a-z0-9+-]+)://(?:(?:([^/:@]+)(?::([^\\\\/]+))?@)?((?:[^\\\\/:]+)|(?:\\[[0-9a-f:]+\\]))(?::(\\d+))?((?:/~(?:[^\\\\/]+))?[\\\\/]))?(.+)?$', 'http://l usr\\example.com@1.2.3.4:1234/D:/x')",[34379]
"('Description.java', 'org.junit.runner.Description', 'methodAndClassNamePatternGroupOrDefault', '([\\s\\S]*)\\((.*)\\)', 'testVerySimpleStarCase0[OldRule? true](org.eclipse.jgit.ignore.IgnoreRuleSpecialCasesTest)')","[152008, 159092]"
"('Description.java', 'org.junit.runner.Description', 'methodAndClassNamePatternGroupOrDefault', '([\\s\\S]*)\\((.*)\\)', 'testConstructor(org.eclipse.jgit.lib.SymbolicRefTest)')","[109946, 110012]"
"('URIish.java', 'org.eclipse.jgit.transport.URIish', '<init>', '^(file):([\\\\/](?![\\\\/])((?:[A-Za-z]:)?[\\\\/]?(?:(?:[^\\\\/]+[\\\\/]+)*[^\\\\/]+[\\\\/]*)))$', 'ssh+git://lusr\\example@1.2.3.4:80//abc')",[32286]
"('URIish.java', 'org.eclipse.jgit.transport.URIish', '<init>', '^([a-z][a-z0-9+-]+)://(?:(?:([^/:@]+)(?::([^\\\\/]+))?@)?((?:[^\\\\/:]+)|(?:\\[[0-9a-f:]+\\]))(?::(\\d+))?((?:/~(?:[^\\\\/]+))?[\\\\/]))?(.+)?$', 'https://me:wtf@[::1]:1234/D:/x')",[23479]
"('URIish.java', 'org.eclipse.jgit.transport.URIish', '<init>', '^(?:([^/:@]+)(?::([^\\\\/]+))?@)?([^\\\\/:]{2,}):([\\\\/](?:(?:[^\\\\/]+[\\\\/]+)*[^\\\\/]+[\\\\/]*))$', '/tmp/jgit_test_6078415325919108987_tmp/tmp_7117568841738359148')","[224155, 224295, 225031]"
"('URIish.java', 'org.eclipse.jgit.transport.URIish', '<init>', '^([a-z][a-z0-9+-]+)://(?:(?:([^/:@]+)(?::([^\\\\/]+))?@)?((?:[^\\\\/:]+)|(?:\\[[0-9a-f:]+\\]))(?::(\\d+))?((?:/~(?:[^\\\\/]+))?[\\\\/]))?(.+)?$', 'ssh+git://[::1]/D:/x')","[56827, 57011, 57931, 58115, 59035, 59219]"
"('Description.java', 'org.junit.runner.Description', 'methodAndClassNamePatternGroupOrDefault', '([\\s\\S]*)\\((.*)\\)', 'testGitSshProto(org.eclipse.jgit.transport.URIishTest)')","[2813, 5146]"
"('URIish.java', 'org.eclipse.jgit.transport.URIish', '<init>', '^([a-z][a-z0-9+-]+)://(?:(?:([^/:@]+)(?::([^\\\\/]+))?@)?((?:[^\\\\/:]+)|(?:\\[[0-9a-f:]+\\]))(?::(\\d+))?((?:/~(?:[^\\\\/]+))?[\\\\/]))?(.+)?$', '/tmp/jgit_test_3983781403271311376_tmp/tmp_8902236642966420184')","[222246, 222376, 222629, 222841]"
"('URIish.java', 'org.eclipse.jgit.transport.URIish', '<init>', '^(file):([\\\\/](?![\\\\/])((?:[A-Za-z]:)?[\\\\/]?(?:(?:[^\\\\/]+[\\\\/]+)*[^\\\\/]+[\\\\/]*)))$', 'ssh+git://l usr\\example.com@1.2.3.4:80//')",[31136]
"('Description.java', 'org.junit.runner.Description', 'methodAndClassNamePatternGroupOrDefault', '([\\s\\S]*)\\((.*)\\)', 'org.eclipse.jgit.transport.LongMapTest')","[75322, 75689]"
"('Description.java', 'org.junit.runner.Description', 'methodAndClassNamePatternGroupOrDefault', '([\\s\\S]*)\\((.*)\\)', 'testVerySimplePatternCase0[OldRule? false](org.eclipse.jgit.ignore.IgnoreRuleSpecialCasesTest)')","[146674, 153779]"
"('URIish.java', 'org.eclipse.jgit.transport.URIish', '<init>', '^(file):([\\\\/](?![\\\\/])((?:[A-Za-z]:)?[\\\\/]?(?:(?:[^\\\\/]+[\\\\/]+)*[^\\\\/]+[\\\\/]*)))$', 'ssh://lusr\\example@[::1]//')","[42360, 42544]"
"('Description.java', 'org.junit.runner.Description', 'methodAndClassNamePatternGroupOrDefault', '([\\s\\S]*)\\((.*)\\)', 'testInCoreLimit_SwitchBeforeAppendByte(org.eclipse.jgit.util.TemporaryBufferTest)')","[178448, 178749]"
"('URIish.java', 'org.eclipse.jgit.transport.URIish', '<init>', '^(file):([\\\\/](?![\\\\/])((?:[A-Za-z]:)?[\\\\/]?(?:(?:[^\\\\/]+[\\\\/]+)*[^\\\\/]+[\\\\/]*)))$', 'http://lusr\\example:wtf@example.com:80//')",[21708]
"('URIish.java', 'org.eclipse.jgit.transport.URIish', '<init>', '^([a-z][a-z0-9+-]+)://(?:(?:([^/:@]+)(?::([^\\\\/]+))?@)?((?:[^\\\\/:]+)|(?:\\[[0-9a-f:]+\\]))(?::(\\d+))?((?:/~(?:[^\\\\/]+))?[\\\\/]))?(.+)?$', 'http://lusr\\example@[::1]:1234/D:/x')",[35851]
"('URIish.java', 'org.eclipse.jgit.transport.URIish', '<init>', '^([a-z][a-z0-9+-]+)://(?:(?:([^/:@]+)(?::([^\\\\/]+))?@)?((?:[^\\\\/:]+)|(?:\\[[0-9a-f:]+\\]))(?::(\\d+))?((?:/~(?:[^\\\\/]+))?[\\\\/]))?(.+)?$', 'https://me:wtf@[::1]:1234//abc')",[23433]
"('Description.java', 'org.junit.runner.Description', 'methodAndClassNamePatternGroupOrDefault', '([\\s\\S]*)\\((.*)\\)', 'testReadRightLog(org.eclipse.jgit.internal.storage.file.ReflogReaderTest)')","[259795, 259965]"
"('URIish.java', 'org.eclipse.jgit.transport.URIish', '<init>', '^(file):([\\\\/](?![\\\\/])((?:[A-Za-z]:)?[\\\\/]?(?:(?:[^\\\\/]+[\\\\/]+)*[^\\\\/]+[\\\\/]*)))$', 'https://lusr\\example:wtf@1.2.3.4:80/D:\\x')",[25526]
"('URIish.java', 'org.eclipse.jgit.transport.URIish', '<init>', '^([a-z][a-z0-9+-]+)://(?:(?:([^/:@]+)(?::([^\\\\/]+))?@)?((?:[^\\\\/:]+)|(?:\\[[0-9a-f:]+\\]))(?::(\\d+))?((?:/~(?:[^\\\\/]+))?[\\\\/]))?(.+)?$', 'http://l usr\\example.com@[::1]:1234//abc')",[34701]
"('URIish.java', 'org.eclipse.jgit.transport.URIish', '<init>', '^(file):([\\\\/](?![\\\\/])((?:[A-Za-z]:)?[\\\\/]?(?:(?:[^\\\\/]+[\\\\/]+)*[^\\\\/]+[\\\\/]*)))$', 'https://lusr\\example@[::1]:1234//abc')",[39094]
"('Description.java', 'org.junit.runner.Description', 'methodAndClassNamePatternGroupOrDefault', '([\\s\\S]*)\\((.*)\\)', 'testReadBranchConfig(org.eclipse.jgit.internal.storage.file.RefDirectoryTest)')","[257854, 259034]"
"('Description.java', 'org.junit.runner.Description', 'methodAndClassNamePatternGroupOrDefault', '([\\s\\S]*)\\((.*)\\)', 'testPathsResetOnDirs(org.eclipse.jgit.api.ResetCommandTest)')","[204604, 204954]"
"('URIish.java', 'org.eclipse.jgit.transport.URIish', '<init>', '^([a-z][a-z0-9+-]+)://(?:(?:([^/:@]+)(?::([^\\\\/]+))?@)?((?:[^\\\\/:]+)|(?:\\[[0-9a-f:]+\\]))(?::(\\d+))?((?:/~(?:[^\\\\/]+))?[\\\\/]))?(.+)?$', 'file:///tmp/jgit_test_3047862731010516352_tmp/tmp_2759357096188306332/.git/')",[198929]
"('URIish.java', 'org.eclipse.jgit.transport.URIish', '<init>', '^(file):([\\\\/](?![\\\\/])((?:[A-Za-z]:)?[\\\\/]?(?:(?:[^\\\\/]+[\\\\/]+)*[^\\\\/]+[\\\\/]*)))$', 'file:///tmp/jgit_test_1874467714670878803_tmp/tmp_6493786565991514167/.git/')","[245525, 245760]"
"('URIish.java', 'org.eclipse.jgit.transport.URIish', '<init>', '^(file):([\\\\/](?![\\\\/])((?:[A-Za-z]:)?[\\\\/]?(?:(?:[^\\\\/]+[\\\\/]+)*[^\\\\/]+[\\\\/]*)))$', 'ssh://me:wtf@example.com:1234/D:/x')",[7547]
"('URIish.java', 'org.eclipse.jgit.transport.URIish', '<init>', '^(file):([\\\\/](?![\\\\/])((?:[A-Za-z]:)?[\\\\/]?(?:(?:[^\\\\/]+[\\\\/]+)*[^\\\\/]+[\\\\/]*)))$', 'http://l usr\\example.com:wtf@[::1]:80//abc')",[21386]
"('Description.java', 'org.junit.runner.Description', 'methodAndClassNamePatternGroupOrDefault', '([\\s\\S]*)\\((.*)\\)', 'testRemoveEndOfList(org.eclipse.jgit.util.RefListTest)')","[179548, 180066]"
"('Description.java', 'org.junit.runner.Description', 'methodAndClassNamePatternGroupOrDefault', '([\\s\\S]*)\\((.*)\\)', 'testPrintGroupCase1[OldRule? true](org.eclipse.jgit.ignore.IgnoreRuleSpecialCasesTest)')","[151525, 158609]"
"('URIish.java', 'org.eclipse.jgit.transport.URIish', '<init>', '^(file):([\\\\/](?![\\\\/])((?:[A-Za-z]:)?[\\\\/]?(?:(?:[^\\\\/]+[\\\\/]+)*[^\\\\/]+[\\\\/]*)))$', 'https://example.com//')","[62600, 62784, 63704, 63888, 64808, 64992]"
"('Description.java', 'org.junit.runner.Description', 'methodAndClassNamePatternGroupOrDefault', '([\\s\\S]*)\\((.*)\\)', 'now(org.eclipse.jgit.util.GitDateParserTest)')","[182362, 182641]"
"('Description.java', 'org.junit.runner.Description', 'methodAndClassNamePatternGroupOrDefault', '([\\s\\S]*)\\((.*)\\)', 'testCoreAutoCrlf4(org.eclipse.jgit.api.BlameCommandTest)')","[244453, 244835]"
"('Description.java', 'org.junit.runner.Description', 'methodAndClassNamePatternGroupOrDefault', '([\\s\\S]*)\\((.*)\\)', 'testDequote_NamedEscapes(org.eclipse.jgit.util.QuotedStringGitPathStyleTest)')","[177634, 178066]"
"('Description.java', 'org.junit.runner.Description', 'methodAndClassNamePatternGroupOrDefault', '([\\s\\S]*)\\((.*)\\)', 'testFileInFolderIgnored(org.eclipse.jgit.treewalk.filter.IndexDiffFilterTest)')","[137298, 138131]"
"('URIish.java', 'org.eclipse.jgit.transport.URIish', '<init>', '^(file):([\\\\/](?![\\\\/])((?:[A-Za-z]:)?[\\\\/]?(?:(?:[^\\\\/]+[\\\\/]+)*[^\\\\/]+[\\\\/]*)))$', 'file:///tmp/jgit_test_2140460810154107885_tmp/tmp_5054924878953738138/.git/')",[211855]
"('Description.java', 'org.junit.runner.Description', 'methodAndClassNamePatternGroupOrDefault', '([\\s\\S]*)\\((.*)\\)', 'testVerySimpleStarCase2[OldRule? true](org.eclipse.jgit.ignore.IgnoreRuleSpecialCasesTest)')","[152054, 159138]"
"('Description.java', 'org.junit.runner.Description', 'methodAndClassNamePatternGroupOrDefault', '([\\s\\S]*)\\((.*)\\)', 'testPathSeparator(org.eclipse.jgit.transport.URIishTest)')","[2639, 5102]"
"('URIish.java', 'org.eclipse.jgit.transport.URIish', '<init>', '^([a-z][a-z0-9+-]+)://(?:(?:([^/:@]+)(?::([^\\\\/]+))?@)?((?:[^\\\\/:]+)|(?:\\[[0-9a-f:]+\\]))(?::(\\d+))?((?:/~(?:[^\\\\/]+))?[\\\\/]))?(.+)?$', 'ssh+git://lusr\\example@1.2.3.4:80//')",[32263]
"('URIish.java', 'org.eclipse.jgit.transport.URIish', '<init>', '^(?:([^/:@]+)(?::([^\\\\/]+))?@)?((?:[^\\\\/:]+)|(?:\\[[0-9a-f:]+\\])):((?:(?:/~(?:[^\\\\/]+))[\\\\/])?(?:(?:[^\\\\/]+[\\\\/]+)*[^\\\\/]+[\\\\/]*))$', '/tmp/jgit_test_228114219831588372_tmp/tmp_8226897773376440333')","[223117, 223252, 223993]"
"('Description.java', 'org.junit.runner.Description', 'methodAndClassNamePatternGroupOrDefault', '([\\s\\S]*)\\((.*)\\)', 'testWritePack1NoObjectReuse(org.eclipse.jgit.internal.storage.file.PackWriterTest)')","[251407, 251860]"
"('Description.java', 'org.junit.runner.Description', 'methodAndClassNamePatternGroupOrDefault', '([\\s\\S]*)\\((.*)\\)', 'testNonMarkingInputStream(org.eclipse.jgit.transport.PackParserTest)')","[72260, 72572]"
"('URIish.java', 'org.eclipse.jgit.transport.URIish', '<init>', '^(file):([\\\\/](?![\\\\/])((?:[A-Za-z]:)?[\\\\/]?(?:(?:[^\\\\/]+[\\\\/]+)*[^\\\\/]+[\\\\/]*)))$', 'ssh://me@example.com:1234//')",[25940]
"('Description.java', 'org.junit.runner.Description', 'methodAndClassNamePatternGroupOrDefault', '([\\s\\S]*)\\((.*)\\)', 'testACommitWithSubjectBug_NonFooterLineAndSob(org.eclipse.jgit.util.ChangeIdUtilTest)')","[185924, 186688]"
"('Description.java', 'org.junit.runner.Description', 'methodAndClassNamePatternGroupOrDefault', '([\\s\\S]*)\\((.*)\\)', 'SHORT(org.eclipse.jgit.util.GitDateFormatterTest)')","[172240, 172437]"
"('URIish.java', 'org.eclipse.jgit.transport.URIish', '<init>', '^(file):([\\\\/](?![\\\\/])((?:[A-Za-z]:)?[\\\\/]?(?:(?:[^\\\\/]+[\\\\/]+)*[^\\\\/]+[\\\\/]*)))$', 'http://lusr\\example:wtf@1.2.3.4:80/D:/x')",[22168]
"('Description.java', 'org.junit.runner.Description', 'methodAndClassNamePatternGroupOrDefault', '([\\s\\S]*)\\((.*)\\)', 'testLockMissing_RealIndex(org.eclipse.jgit.dircache.DirCacheBasicTest)')","[90004, 90242]"
"('Description.java', 'org.junit.runner.Description', 'methodAndClassNamePatternGroupOrDefault', '([\\s\\S]*)\\((.*)\\)', 'testInsertOutOfOrder(org.eclipse.jgit.revwalk.DateRevQueueTest)')","[82389, 82537]"
"('Description.java', 'org.junit.runner.Description', 'methodAndClassNamePatternGroupOrDefault', '([\\s\\S]*)\\((.*)\\)', 'testReadSymRefToPacked(org.eclipse.jgit.lib.RefTest)')","[115628, 115826]"
"('Description.java', 'org.junit.runner.Description', 'methodAndClassNamePatternGroupOrDefault', '([\\s\\S]*)\\((.*)\\)', 'testVerySimpleGroupCase0[OldRule? false](org.eclipse.jgit.ignore.IgnoreRuleSpecialCasesTest)')","[149043, 156148]"
"('Description.java', 'org.junit.runner.Description', 'methodAndClassNamePatternGroupOrDefault', '([\\s\\S]*)\\((.*)\\)', 'testMultipleCreationsSameContent(org.eclipse.jgit.api.MergeCommandTest)')","[213618, 214528]"
"('Description.java', 'org.junit.runner.Description', 'methodAndClassNamePatternGroupOrDefault', '([\\s\\S]*)\\((.*)\\)', 'org.eclipse.jgit.revwalk.RevCommitParseTest')","[83970, 86002]"
"('URIish.java', 'org.eclipse.jgit.transport.URIish', '<init>', '^([\\\\/]?((?:[A-Za-z]:)?[\\\\/]?(?:(?:[^\\\\/]+[\\\\/]+)*[^\\\\/]+[\\\\/]*)))$', '/tmp/jgit_test_3983781403271311376_tmp/tmp_8902236642966420184')","[222318, 222463, 222719, 222931]"
"('Description.java', 'org.junit.runner.Description', 'methodAndClassNamePatternGroupOrDefault', '([\\s\\S]*)\\((.*)\\)', 'testDequote_SoleSq(org.eclipse.jgit.util.QuotedStringBourneUserPathStyleTest)')","[192513, 192770]"
"('Description.java', 'org.junit.runner.Description', 'methodAndClassNamePatternGroupOrDefault', '([\\s\\S]*)\\((.*)\\)', 'testEntryType(org.eclipse.jgit.util.RefMapTest)')","[184098, 184576]"
"('Description.java', 'org.junit.runner.Description', 'methodAndClassNamePatternGroupOrDefault', '([\\s\\S]*)\\((.*)\\)', 'testReadLooseRef(org.eclipse.jgit.lib.RefTest)')","[115586, 115782]"
"('Description.java', 'org.junit.runner.Description', 'methodAndClassNamePatternGroupOrDefault', '([\\s\\S]*)\\((.*)\\)', 'testEscapedBracket5[OldRule? false](org.eclipse.jgit.ignore.IgnoreRuleSpecialCasesTest)')","[149204, 156309]"
"('URIish.java', 'org.eclipse.jgit.transport.URIish', '<init>', '^([a-z][a-z0-9+-]+)://(?:(?:([^/:@]+)(?::([^\\\\/]+))?@)?((?:[^\\\\/:]+)|(?:\\[[0-9a-f:]+\\]))(?::(\\d+))?((?:/~(?:[^\\\\/]+))?[\\\\/]))?(.+)?$', '/tmp/jgit_test_8377865151388464425_tmp/tmp_8247112886499178725')","[211472, 211602, 212139]"
"('Description.java', 'org.junit.runner.Description', 'methodAndClassNamePatternGroupOrDefault', '([\\s\\S]*)\\((.*)\\)', 'org.eclipse.jgit.revwalk.MaxCountRevFilterTest')","[79513, 79645]"
"('URIish.java', 'org.eclipse.jgit.transport.URIish', '<init>', '^(file):([\\\\/](?![\\\\/])((?:[A-Za-z]:)?[\\\\/]?(?:(?:[^\\\\/]+[\\\\/]+)*[^\\\\/]+[\\\\/]*)))$', 'file:///tmp/jgit_test_8267827428869162458_tmp/tmp_1582337896300637096/testCloneRepositoryWithNestedSubmodules1/.git/')","[205057, 206242]"
"('URIish.java', 'org.eclipse.jgit.transport.URIish', '<init>', '^(file):([\\\\/](?![\\\\/])((?:[A-Za-z]:)?[\\\\/]?(?:(?:[^\\\\/]+[\\\\/]+)*[^\\\\/]+[\\\\/]*)))$', 'http://lusr\\example:wtf@example.com:80/D:\\x')",[21846]
"('URIish.java', 'org.eclipse.jgit.transport.URIish', '<init>', '^(file):([\\\\/](?![\\\\/])((?:[A-Za-z]:)?[\\\\/]?(?:(?:[^\\\\/]+[\\\\/]+)*[^\\\\/]+[\\\\/]*)))$', 'ssh+git://lusr\\example@[::1]/D:/x')","[45764, 45948]"
"('URIish.java', 'org.eclipse.jgit.transport.URIish', '<init>', '^(file):([\\\\/](?![\\\\/])((?:[A-Za-z]:)?[\\\\/]?(?:(?:[^\\\\/]+[\\\\/]+)*[^\\\\/]+[\\\\/]*)))$', 'ssh+git://lusr\\example:wtf@1.2.3.4:80/D:/x')",[17722]
"('Description.java', 'org.junit.runner.Description', 'methodAndClassNamePatternGroupOrDefault', '([\\s\\S]*)\\((.*)\\)', 'testClear(org.eclipse.jgit.util.IntListTest)')","[181851, 182089]"
"('URIish.java', 'org.eclipse.jgit.transport.URIish', '<init>', '^(file):([\\\\/](?![\\\\/])((?:[A-Za-z]:)?[\\\\/]?(?:(?:[^\\\\/]+[\\\\/]+)*[^\\\\/]+[\\\\/]*)))$', 'https://me:wtf@example.com:1234//abc')",[22674]
"('URIish.java', 'org.eclipse.jgit.transport.URIish', '<init>', '^([a-z][a-z0-9+-]+)://(?:(?:([^/:@]+)(?::([^\\\\/]+))?@)?((?:[^\\\\/:]+)|(?:\\[[0-9a-f:]+\\]))(?::(\\d+))?((?:/~(?:[^\\\\/]+))?[\\\\/]))?(.+)?$', 'http://lusr\\example@1.2.3.4//abc')","[48685, 48869]"
"('URIish.java', 'org.eclipse.jgit.transport.URIish', '<init>', '^(file):([\\\\/](?![\\\\/])((?:[A-Za-z]:)?[\\\\/]?(?:(?:[^\\\\/]+[\\\\/]+)*[^\\\\/]+[\\\\/]*)))$', 'http://l usr\\example.com:wtf@example.com:80//abc')",[20627]
"('URIish.java', 'org.eclipse.jgit.transport.URIish', '<init>', '^(file):([\\\\/](?![\\\\/])((?:[A-Za-z]:)?[\\\\/]?(?:(?:[^\\\\/]+[\\\\/]+)*[^\\\\/]+[\\\\/]*)))$', 'ssh://user@example.com:33/some/p ath')","[66602, 66648]"
"('FastIgnoreRule.java', 'org.eclipse.jgit.ignore.FastIgnoreRule', 'isMatch', '.r[a-c]', 'era')",[145082]
"('URIish.java', 'org.eclipse.jgit.transport.URIish', '<init>', '^([a-z][a-z0-9+-]+)://(?:(?:([^/:@]+)(?::([^\\\\/]+))?@)?((?:[^\\\\/:]+)|(?:\\[[0-9a-f:]+\\]))(?::(\\d+))?((?:/~(?:[^\\\\/]+))?[\\\\/]))?(.+)?$', 'https://me@example.com:80//abc')",[36357]
"('URIish.java', 'org.eclipse.jgit.transport.URIish', '<init>', '^([a-z][a-z0-9+-]+)://(?:(?:([^/:@]+)(?::([^\\\\/]+))?@)?((?:[^\\\\/:]+)|(?:\\[[0-9a-f:]+\\]))(?::(\\d+))?((?:/~(?:[^\\\\/]+))?[\\\\/]))?(.+)?$', 'ssh+git://[::1]//abc')","[56781, 56965, 57885, 58069, 58989, 59173]"
"('URIish.java', 'org.eclipse.jgit.transport.URIish', '<init>', '^([a-z][a-z0-9+-]+)://(?:(?:([^/:@]+)(?::([^\\\\/]+))?@)?((?:[^\\\\/:]+)|(?:\\[[0-9a-f:]+\\]))(?::(\\d+))?((?:/~(?:[^\\\\/]+))?[\\\\/]))?(.+)?$', 'https://me:wtf@[::1]:1234//')",[23387]
"('URIish.java', 'org.eclipse.jgit.transport.URIish', '<init>', '^([a-z][a-z0-9+-]+)://(?:(?:([^/:@]+)(?::([^\\\\/]+))?@)?((?:[^\\\\/:]+)|(?:\\[[0-9a-f:]+\\]))(?::(\\d+))?((?:/~(?:[^\\\\/]+))?[\\\\/]))?(.+)?$', 'file:///D:/m y')","[70942, 70988]"
"('URIish.java', 'org.eclipse.jgit.transport.URIish', '<init>', '^(file):([\\\\/](?![\\\\/])((?:[A-Za-z]:)?[\\\\/]?(?:(?:[^\\\\/]+[\\\\/]+)*[^\\\\/]+[\\\\/]*)))$', 'ssh://me:wtf@example.com:80/D:/x')",[7950]
"('Description.java', 'org.junit.runner.Description', 'methodAndClassNamePatternGroupOrDefault', '([\\s\\S]*)\\((.*)\\)', 'commitAmendWithAuthorShouldUseIt(org.eclipse.jgit.api.CommitCommandTest)')","[212498, 212718]"
"('URIish.java', 'org.eclipse.jgit.transport.URIish', '<init>', '^(file):([\\\\/](?![\\\\/])((?:[A-Za-z]:)?[\\\\/]?(?:(?:[^\\\\/]+[\\\\/]+)*[^\\\\/]+[\\\\/]*)))$', 'file:///tmp/jgit_test_8814120598762444066_tmp/tmp_2877606796553874436')","[216763, 216820, 220306, 220363, 220420, 220477]"
"('Description.java', 'org.junit.runner.Description', 'methodAndClassNamePatternGroupOrDefault', '([\\s\\S]*)\\((.*)\\)', 'testTwoSame(org.eclipse.jgit.treewalk.filter.InterIndexDiffFilterTest)')","[139523, 139630]"
"('URIish.java', 'org.eclipse.jgit.transport.URIish', '<init>', '^([a-z][a-z0-9+-]+)://(?:(?:([^/:@]+)(?::([^\\\\/]+))?@)?((?:[^\\\\/:]+)|(?:\\[[0-9a-f:]+\\]))(?::(\\d+))?((?:/~(?:[^\\\\/]+))?[\\\\/]))?(.+)?$', 'http://me@[::1]:80/D:/x')",[33827]
"('URIish.java', 'org.eclipse.jgit.transport.URIish', '<init>', '^(?:([^/:@]+)(?::([^\\\\/]+))?@)?((?:[^\\\\/:]+)|(?:\\[[0-9a-f:]+\\])):((?:(?:/~(?:[^\\\\/]+))[\\\\/])?(?:(?:[^\\\\/]+[\\\\/]+)*[^\\\\/]+[\\\\/]*))$', '/home/m y')","[67269, 67384]"
"('Description.java', 'org.junit.runner.Description', 'methodAndClassNamePatternGroupOrDefault', '([\\s\\S]*)\\((.*)\\)', 'test008_SubtreeInternalSorting(org.eclipse.jgit.lib.T0002_TreeTest)')","[120006, 120312]"
"('Description.java', 'org.junit.runner.Description', 'methodAndClassNamePatternGroupOrDefault', '([\\s\\S]*)\\((.*)\\)', 'testUpToDate(org.eclipse.jgit.api.RebaseCommandTest)')","[218530, 220060]"
"('Description.java', 'org.junit.runner.Description', 'methodAndClassNamePatternGroupOrDefault', '([\\s\\S]*)\\((.*)\\)', 'testPrintGroupCase4[OldRule? true](org.eclipse.jgit.ignore.IgnoreRuleSpecialCasesTest)')","[151594, 158678]"
"('FastIgnoreRule.java', 'org.eclipse.jgit.ignore.FastIgnoreRule', 'isMatch', '[\\p{Blank}]', 'a')",[162946]
"('Description.java', 'org.junit.runner.Description', 'methodAndClassNamePatternGroupOrDefault', '([\\s\\S]*)\\((.*)\\)', 'testInvalidTreeTruncatedInName(org.eclipse.jgit.lib.ObjectCheckerTest)')","[122645, 124811]"
"('URIish.java', 'org.eclipse.jgit.transport.URIish', '<init>', '^(file):([\\\\/](?![\\\\/])((?:[A-Za-z]:)?[\\\\/]?(?:(?:[^\\\\/]+[\\\\/]+)*[^\\\\/]+[\\\\/]*)))$', 'ssh://[::1]//abc')","[53446, 53630, 54550, 54734, 55654, 55838]"
"('URIish.java', 'org.eclipse.jgit.transport.URIish', '<init>', '^([a-z][a-z0-9+-]+)://(?:(?:([^/:@]+)(?::([^\\\\/]+))?@)?((?:[^\\\\/:]+)|(?:\\[[0-9a-f:]+\\]))(?::(\\d+))?((?:/~(?:[^\\\\/]+))?[\\\\/]))?(.+)?$', 'ssh://l usr\\example.com@[::1]/D:/x')","[41371, 41555]"
"('Description.java', 'org.junit.runner.Description', 'methodAndClassNamePatternGroupOrDefault', '([\\s\\S]*)\\((.*)\\)', 'testMergeSuccessAllStrategies(org.eclipse.jgit.api.MergeCommandTest)')","[214374, 215320]"
"('URIish.java', 'org.eclipse.jgit.transport.URIish', '<init>', '^([\\\\/]?((?:[A-Za-z]:)?[\\\\/]?(?:(?:[^\\\\/]+[\\\\/]+)*[^\\\\/]+[\\\\/]*)))$', '../../foo/bar')","[68964, 69079]"
"('Description.java', 'org.junit.runner.Description', 'methodAndClassNamePatternGroupOrDefault', '([\\s\\S]*)\\((.*)\\)', 'testOnlyOption_f1_1_f2_14_e(org.eclipse.jgit.api.CommitOnlyTest)')","[237833, 239944]"
"('Description.java', 'org.junit.runner.Description', 'methodAndClassNamePatternGroupOrDefault', '([\\s\\S]*)\\((.*)\\)', 'testOnlyOption_f1_9_e(org.eclipse.jgit.api.CommitOnlyTest)')","[236857, 238954]"
"('Description.java', 'org.junit.runner.Description', 'methodAndClassNamePatternGroupOrDefault', '([\\s\\S]*)\\((.*)\\)', 'testMixed(org.eclipse.jgit.merge.MergeMessageFormatterTest)')","[88926, 89247]"
"('URIish.java', 'org.eclipse.jgit.transport.URIish', '<init>', '^(file):([\\\\/](?![\\\\/])((?:[A-Za-z]:)?[\\\\/]?(?:(?:[^\\\\/]+[\\\\/]+)*[^\\\\/]+[\\\\/]*)))$', 'http://[::1]/D:\\x')","[60162, 60346, 61266, 61450, 62370, 62554]"
"('Description.java', 'org.junit.runner.Description', 'methodAndClassNamePatternGroupOrDefault', '([\\s\\S]*)\\((.*)\\)', 'testRemoveMiddle(org.eclipse.jgit.notes.LeafBucketTest)')","[198164, 198401]"
"('Description.java', 'org.junit.runner.Description', 'methodAndClassNamePatternGroupOrDefault', '([\\s\\S]*)\\((.*)\\)', 'testQuote_NamedEscapes(org.eclipse.jgit.util.QuotedStringBourneStyleTest)')","[183064, 183284]"
"('Description.java', 'org.junit.runner.Description', 'methodAndClassNamePatternGroupOrDefault', '([\\s\\S]*)\\((.*)\\)', 'testXDigitGroupCase6[OldRule? true](org.eclipse.jgit.ignore.IgnoreRuleSpecialCasesTest)')","[152215, 159299]"
"('URIish.java', 'org.eclipse.jgit.transport.URIish', '<init>', '^(file):([\\\\/](?![\\\\/])((?:[A-Za-z]:)?[\\\\/]?(?:(?:[^\\\\/]+[\\\\/]+)*[^\\\\/]+[\\\\/]*)))$', 'http://me@1.2.3.4//abc')","[46454, 46638]"
"('Description.java', 'org.junit.runner.Description', 'methodAndClassNamePatternGroupOrDefault', '([\\s\\S]*)\\((.*)\\)', 'testDeleteFullName(org.eclipse.jgit.api.TagCommandTest)')","[201574, 201869]"
"('URIish.java', 'org.eclipse.jgit.transport.URIish', '<init>', '^(file):([\\\\/](?![\\\\/])((?:[A-Za-z]:)?[\\\\/]?(?:(?:[^\\\\/]+[\\\\/]+)*[^\\\\/]+[\\\\/]*)))$', 'ssh+git://l usr\\example.com:wtf@1.2.3.4:80/D:\\x')",[16641]
"('URIish.java', 'org.eclipse.jgit.transport.URIish', '<init>', '^([a-z][a-z0-9+-]+)://(?:(?:([^/:@]+)(?::([^\\\\/]+))?@)?((?:[^\\\\/:]+)|(?:\\[[0-9a-f:]+\\]))(?::(\\d+))?((?:/~(?:[^\\\\/]+))?[\\\\/]))?(.+)?$', 'ssh://me:wtf@[::1]:1234//abc')",[9179]
"('Description.java', 'org.junit.runner.Description', 'methodAndClassNamePatternGroupOrDefault', '([\\s\\S]*)\\((.*)\\)', 'testForbiddenNamesOnWindowsEgCon1(org.eclipse.jgit.lib.DirCacheCheckoutMaliciousPathTest)')","[112101, 113006]"
"('FastIgnoreRule.java', 'org.eclipse.jgit.ignore.FastIgnoreRule', 'isMatch', '[\\p{javaDigit}]', 'a')",[161696]
"('Description.java', 'org.junit.runner.Description', 'methodAndClassNamePatternGroupOrDefault', '([\\s\\S]*)\\((.*)\\)', 'testFailsMethodsOnBackgroundThread(org.eclipse.jgit.lib.ThreadSafeProgressMonitorTest)')","[110134, 110200]"
"('Description.java', 'org.junit.runner.Description', 'methodAndClassNamePatternGroupOrDefault', '([\\s\\S]*)\\((.*)\\)', 'testSshProtoWithUserPassAndPort(org.eclipse.jgit.transport.URIishTest)')","[1396, 4574]"
"('URIish.java', 'org.eclipse.jgit.transport.URIish', '<init>', '^(file):([\\\\/](?![\\\\/])((?:[A-Za-z]:)?[\\\\/]?(?:(?:[^\\\\/]+[\\\\/]+)*[^\\\\/]+[\\\\/]*)))$', 'file:/tmp/jgit_test_4978457602680357164_tmp/tmp_3426910796876573259/.git/')",[132536]
"('URIish.java', 'org.eclipse.jgit.transport.URIish', '<init>', '^(file):([\\\\/](?![\\\\/])((?:[A-Za-z]:)?[\\\\/]?(?:(?:[^\\\\/]+[\\\\/]+)*[^\\\\/]+[\\\\/]*)))$', '/tmp/jgit_test_1455034780842305248_tmp/tmp_3250047937077610167')","[232583, 232708, 232888]"
"('URIish.java', 'org.eclipse.jgit.transport.URIish', '<init>', '^([a-z][a-z0-9+-]+)://(?:(?:([^/:@]+)(?::([^\\\\/]+))?@)?((?:[^\\\\/:]+)|(?:\\[[0-9a-f:]+\\]))(?::(\\d+))?((?:/~(?:[^\\\\/]+))?[\\\\/]))?(.+)?$', 'ssh://lusr\\example@[::1]/D:/x')","[42475, 42659]"
"('Description.java', 'org.junit.runner.Description', 'methodAndClassNamePatternGroupOrDefault', '([\\s\\S]*)\\((.*)\\)', 'testMixedGroupCase9[OldRule? false](org.eclipse.jgit.ignore.IgnoreRuleSpecialCasesTest)')","[146283, 153388]"
"('Description.java', 'org.junit.runner.Description', 'methodAndClassNamePatternGroupOrDefault', '([\\s\\S]*)\\((.*)\\)', 'testInsertTail(org.eclipse.jgit.internal.storage.pack.DeltaIndexTest)')","[246487, 246769]"
"('Description.java', 'org.junit.runner.Description', 'methodAndClassNamePatternGroupOrDefault', '([\\s\\S]*)\\((.*)\\)', 'org.eclipse.jgit.revwalk.RevWalkPathFilter1Test')","[75725, 76878]"
"('URIish.java', 'org.eclipse.jgit.transport.URIish', '<init>', '^([a-z][a-z0-9+-]+)://(?:(?:([^/:@]+)(?::([^\\\\/]+))?@)?((?:[^\\\\/:]+)|(?:\\[[0-9a-f:]+\\]))(?::(\\d+))?((?:/~(?:[^\\\\/]+))?[\\\\/]))?(.+)?$', 'http://l usr\\example.com:wtf@[::1]:80/D:\\x')",[21501]
"('Description.java', 'org.junit.runner.Description', 'methodAndClassNamePatternGroupOrDefault', '([\\s\\S]*)\\((.*)\\)', 'testCache_TooFewFiles(org.eclipse.jgit.internal.storage.file.WindowCacheGetTest)')","[254545, 254610]"
"('URIish.java', 'org.eclipse.jgit.transport.URIish', '<init>', '^(file):([\\\\/](?![\\\\/])((?:[A-Za-z]:)?[\\\\/]?(?:(?:[^\\\\/]+[\\\\/]+)*[^\\\\/]+[\\\\/]*)))$', 'https://lusr\\example@example.com:80/D:\\x')",[38634]
"('Description.java', 'org.junit.runner.Description', 'methodAndClassNamePatternGroupOrDefault', '([\\s\\S]*)\\((.*)\\)', 'testEmpty(org.eclipse.jgit.notes.LeafBucketTest)')","[198080, 198313]"
"('URIish.java', 'org.eclipse.jgit.transport.URIish', '<init>', '^([a-z][a-z0-9+-]+)://(?:(?:([^/:@]+)(?::([^\\\\/]+))?@)?((?:[^\\\\/:]+)|(?:\\[[0-9a-f:]+\\]))(?::(\\d+))?((?:/~(?:[^\\\\/]+))?[\\\\/]))?(.+)?$', 'http://me@1.2.3.4:80//')",[33367]
"('Description.java', 'org.junit.runner.Description', 'methodAndClassNamePatternGroupOrDefault', '([\\s\\S]*)\\((.*)\\)', 'testMixedGroupCase4[OldRule? true](org.eclipse.jgit.ignore.IgnoreRuleSpecialCasesTest)')","[149731, 156815]"
"('URIish.java', 'org.eclipse.jgit.transport.URIish', '<init>', '^(file):([\\\\/](?![\\\\/])((?:[A-Za-z]:)?[\\\\/]?(?:(?:[^\\\\/]+[\\\\/]+)*[^\\\\/]+[\\\\/]*)))$', 'https://me@1.2.3.4:80/D:/x')",[36748]
"('Description.java', 'org.junit.runner.Description', 'methodAndClassNamePatternGroupOrDefault', '([\\s\\S]*)\\((.*)\\)', 'org.eclipse.jgit.revwalk.RevWalkPathFilter6012Test')","[85678, 86937]"
"('URIish.java', 'org.eclipse.jgit.transport.URIish', '<init>', '^([a-z][a-z0-9+-]+)://(?:(?:([^/:@]+)(?::([^\\\\/]+))?@)?((?:[^\\\\/:]+)|(?:\\[[0-9a-f:]+\\]))(?::(\\d+))?((?:/~(?:[^\\\\/]+))?[\\\\/]))?(.+)?$', 'ssh+git://lusr\\example:wtf@example.com:80//abc')",[17331]
"('Description.java', 'org.junit.runner.Description', 'methodAndClassNamePatternGroupOrDefault', '([\\s\\S]*)\\((.*)\\)', 'testXDigitGroupCase6[OldRule? false](org.eclipse.jgit.ignore.IgnoreRuleSpecialCasesTest)')","[148652, 155757]"
"('Description.java', 'org.junit.runner.Description', 'methodAndClassNamePatternGroupOrDefault', '([\\s\\S]*)\\((.*)\\)', 'testXDigitGroupCase0[OldRule? false](org.eclipse.jgit.ignore.IgnoreRuleSpecialCasesTest)')","[148514, 155619]"
"('Description.java', 'org.junit.runner.Description', 'methodAndClassNamePatternGroupOrDefault', '([\\s\\S]*)\\((.*)\\)', 'testDequote_LoneBackslash(org.eclipse.jgit.util.QuotedStringGitPathStyleTest)')","[177487, 177912]"
"('FastIgnoreRule.java', 'org.eclipse.jgit.ignore.FastIgnoreRule', 'isMatch', '[\\p{Space}]', ' ')",[161226]
"('Description.java', 'org.junit.runner.Description', 'methodAndClassNamePatternGroupOrDefault', '([\\s\\S]*)\\((.*)\\)', 'org.eclipse.jgit.api.RebaseCommandTest')","[217270, 242528]"
"('Description.java', 'org.junit.runner.Description', 'methodAndClassNamePatternGroupOrDefault', '([\\s\\S]*)\\((.*)\\)', 'testInversedGroupCase0[OldRule? true](org.eclipse.jgit.ignore.IgnoreRuleSpecialCasesTest)')","[150467, 157551]"
"('Description.java', 'org.junit.runner.Description', 'methodAndClassNamePatternGroupOrDefault', '([\\s\\S]*)\\((.*)\\)', 'testStopOnLastConflictAndSkip(org.eclipse.jgit.api.RebaseCommandTest)')","[218593, 220126]"
"('URIish.java', 'org.eclipse.jgit.transport.URIish', '<init>', '^(file):([\\\\/](?![\\\\/])((?:[A-Za-z]:)?[\\\\/]?(?:(?:[^\\\\/]+[\\\\/]+)*[^\\\\/]+[\\\\/]*)))$', 'https://me:wtf@[::1]:1234/D:\\x')",[23502]
"('Description.java', 'org.junit.runner.Description', 'methodAndClassNamePatternGroupOrDefault', '([\\s\\S]*)\\((.*)\\)', 'testRenameBranchCannotLockAFileHEADisFromLockTo(org.eclipse.jgit.internal.storage.file.RefUpdateTest)')","[253208, 254048]"
"('Description.java', 'org.junit.runner.Description', 'methodAndClassNamePatternGroupOrDefault', '([\\s\\S]*)\\((.*)\\)', 'testSaveRemoveLastURI(org.eclipse.jgit.transport.RemoteConfigTest)')","[1856, 3210]"
"('Description.java', 'org.junit.runner.Description', 'methodAndClassNamePatternGroupOrDefault', '([\\s\\S]*)\\((.*)\\)', 'testInitialize_NoPostOrder(org.eclipse.jgit.treewalk.PostOrderTreeWalkTest)')","[135165, 135293]"
"('URIish.java', 'org.eclipse.jgit.transport.URIish', '<init>', '^(?:([^/:@]+)(?::([^\\\\/]+))?@)?([^\\\\/:]{2,}):([\\\\/](?:(?:[^\\\\/]+[\\\\/]+)*[^\\\\/]+[\\\\/]*))$', '/tmp/jgit_test_4442660414069404548_tmp/tmp_2197519089635817093')","[221351, 221491, 221754, 221904, 222168]"
"('URIish.java', 'org.eclipse.jgit.transport.URIish', '<init>', '^([a-z][a-z0-9+-]+)://(?:(?:([^/:@]+)(?::([^\\\\/]+))?@)?((?:[^\\\\/:]+)|(?:\\[[0-9a-f:]+\\]))(?::(\\d+))?((?:/~(?:[^\\\\/]+))?[\\\\/]))?(.+)?$', 'ssh+git://lusr\\example@example.com:80//abc')",[31941]
"('Description.java', 'org.junit.runner.Description', 'methodAndClassNamePatternGroupOrDefault', '([\\s\\S]*)\\((.*)\\)', 'testUTF8withoutBOM(org.eclipse.jgit.storage.file.FileBasedConfigTest)')","[194176, 194262]"
"('Description.java', 'org.junit.runner.Description', 'methodAndClassNamePatternGroupOrDefault', '([\\s\\S]*)\\((.*)\\)', 'testDequote_SoleDq(org.eclipse.jgit.util.QuotedStringGitPathStyleTest)')","[177529, 177956]"
"('Description.java', 'org.junit.runner.Description', 'methodAndClassNamePatternGroupOrDefault', '([\\s\\S]*)\\((.*)\\)', 'testRevert(org.eclipse.jgit.api.RevertCommandTest)')","[233574, 233792]"
"('Description.java', 'org.junit.runner.Description', 'methodAndClassNamePatternGroupOrDefault', '([\\s\\S]*)\\((.*)\\)', 'testDifferentStates(org.eclipse.jgit.api.StatusCommandTest)')","[216629, 216693]"
"('Description.java', 'org.junit.runner.Description', 'methodAndClassNamePatternGroupOrDefault', '([\\s\\S]*)\\((.*)\\)', 'testInvalidTreeDuplicateNames5(org.eclipse.jgit.lib.ObjectCheckerTest)')","[122834, 125009]"
"('FastIgnoreRule.java', 'org.eclipse.jgit.ignore.FastIgnoreRule', 'isMatch', '.*\\.st.', 'test.stp')","[142038, 142200, 143209, 143344]"
"('Description.java', 'org.junit.runner.Description', 'methodAndClassNamePatternGroupOrDefault', '([\\s\\S]*)\\((.*)\\)', 'testOneBlock_BulkWrite(org.eclipse.jgit.util.TemporaryBufferTest)')","[178469, 178771]"
"('Description.java', 'org.junit.runner.Description', 'methodAndClassNamePatternGroupOrDefault', '([\\s\\S]*)\\((.*)\\)', 'testGetRefs_TagsOnly_AllLoose(org.eclipse.jgit.internal.storage.file.RefDirectoryTest)')","[257623, 258792]"
"('URIish.java', 'org.eclipse.jgit.transport.URIish', '<init>', '^(file):([\\\\/](?![\\\\/])((?:[A-Za-z]:)?[\\\\/]?(?:(?:[^\\\\/]+[\\\\/]+)*[^\\\\/]+[\\\\/]*)))$', 'https://l usr\\example.com@example.com//')","[50456, 50640]"
"('URIish.java', 'org.eclipse.jgit.transport.URIish', '<init>', '^([a-z][a-z0-9+-]+)://(?:(?:([^/:@]+)(?::([^\\\\/]+))?@)?((?:[^\\\\/:]+)|(?:\\[[0-9a-f:]+\\]))(?::(\\d+))?((?:/~(?:[^\\\\/]+))?[\\\\/]))?(.+)?$', 'http://lusr\\example@[::1]:80/D:/x')",[36035]
"('Description.java', 'org.junit.runner.Description', 'methodAndClassNamePatternGroupOrDefault', '([\\s\\S]*)\\((.*)\\)', 'testTwoLevelSubtree(org.eclipse.jgit.dircache.DirCacheTreeTest)')","[91463, 91593]"
"('URIish.java', 'org.eclipse.jgit.transport.URIish', '<init>', '^([a-z][a-z0-9+-]+)://(?:(?:([^/:@]+)(?::([^\\\\/]+))?@)?((?:[^\\\\/:]+)|(?:\\[[0-9a-f:]+\\]))(?::(\\d+))?((?:/~(?:[^\\\\/]+))?[\\\\/]))?(.+)?$', 'ssh+git://l usr\\example.com@example.com:1234/D:\\x')",[30745]
"('Description.java', 'org.junit.runner.Description', 'methodAndClassNamePatternGroupOrDefault', '([\\s\\S]*)\\((.*)\\)', 'testScpStyleNoURIDecoding(org.eclipse.jgit.transport.URIishTest)')","[2660, 5124]"
"('FastIgnoreRule.java', 'org.eclipse.jgit.ignore.FastIgnoreRule', 'isMatch', '.r[a-c]', 'src')","[144542, 144569, 144623, 144677, 144704]"
"('URIish.java', 'org.eclipse.jgit.transport.URIish', '<init>', '^(file):([\\\\/](?![\\\\/])((?:[A-Za-z]:)?[\\\\/]?(?:(?:[^\\\\/]+[\\\\/]+)*[^\\\\/]+[\\\\/]*)))$', 'file:///tmp/jgit_test_3716850732712849590_tmp/tmp_3750113796332842125')",[72866]
"('Description.java', 'org.junit.runner.Description', 'methodAndClassNamePatternGroupOrDefault', '([\\s\\S]*)\\((.*)\\)', 'testGetRefs_DiscoversModifiedLoose(org.eclipse.jgit.internal.storage.file.RefDirectoryTest)')","[257938, 259122]"
"('URIish.java', 'org.eclipse.jgit.transport.URIish', '<init>', '^([a-z][a-z0-9+-]+)://(?:(?:([^/:@]+)(?::([^\\\\/]+))?@)?((?:[^\\\\/:]+)|(?:\\[[0-9a-f:]+\\]))(?::(\\d+))?((?:/~(?:[^\\\\/]+))?[\\\\/]))?(.+)?$', 'http://lusr\\example:wtf@example.com:80//abc')",[21777]
"('Description.java', 'org.junit.runner.Description', 'methodAndClassNamePatternGroupOrDefault', '([\\s\\S]*)\\((.*)\\)', 'testEmptyFolderCommittedDeletedCommittedIgnoredComparedWithInitialCommit(org.eclipse.jgit.treewalk.filter.IndexDiffFilterTest)')","[137067, 137889]"
"('URIish.java', 'org.eclipse.jgit.transport.URIish', '<init>', '^([a-z][a-z0-9+-]+)://(?:(?:([^/:@]+)(?::([^\\\\/]+))?@)?((?:[^\\\\/:]+)|(?:\\[[0-9a-f:]+\\]))(?::(\\d+))?((?:/~(?:[^\\\\/]+))?[\\\\/]))?(.+)?$', 'http://l usr\\example.com:wtf@1.2.3.4:1234//')",[20788]
"('Description.java', 'org.junit.runner.Description', 'methodAndClassNamePatternGroupOrDefault', '([\\s\\S]*)\\((.*)\\)', 'testFileHeader(org.eclipse.jgit.patch.EditListTest)')","[194428, 194494]"
"('Description.java', 'org.junit.runner.Description', 'methodAndClassNamePatternGroupOrDefault', '([\\s\\S]*)\\((.*)\\)', 'resolveReflogParent(org.eclipse.jgit.lib.ReflogResolveTest)')","[126300, 126431]"
"('URIish.java', 'org.eclipse.jgit.transport.URIish', '<init>', '^(file):([\\\\/](?![\\\\/])((?:[A-Za-z]:)?[\\\\/]?(?:(?:[^\\\\/]+[\\\\/]+)*[^\\\\/]+[\\\\/]*)))$', 'ssh://l usr\\example.com@[::1]//')","[41256, 41440]"
"('Description.java', 'org.junit.runner.Description', 'methodAndClassNamePatternGroupOrDefault', '([\\s\\S]*)\\((.*)\\)', 'testStopWalkCallsParent(org.eclipse.jgit.treewalk.EmptyTreeIteratorTest)')","[135605, 135734]"
"('Description.java', 'org.junit.runner.Description', 'methodAndClassNamePatternGroupOrDefault', '([\\s\\S]*)\\((.*)\\)', 'testPathCompare(org.eclipse.jgit.treewalk.AbstractTreeIteratorTest)')","[134429, 134578]"
"('URIish.java', 'org.eclipse.jgit.transport.URIish', '<init>', '^(file):([\\\\/](?![\\\\/])((?:[A-Za-z]:)?[\\\\/]?(?:(?:[^\\\\/]+[\\\\/]+)*[^\\\\/]+[\\\\/]*)))$', 'ssh://l usr\\example.com@[::1]:1234//')",[28008]
"('URIish.java', 'org.eclipse.jgit.transport.URIish', '<init>', '^(file):([\\\\/](?![\\\\/])((?:[A-Za-z]:)?[\\\\/]?(?:(?:[^\\\\/]+[\\\\/]+)*[^\\\\/]+[\\\\/]*)))$', 'file:/tmp/jgit_test_2496960902150233223_tmp/tmp_3983418304402812009/.git/')",[133947]
"('Description.java', 'org.junit.runner.Description', 'methodAndClassNamePatternGroupOrDefault', '([\\s\\S]*)\\((.*)\\)', 'org.eclipse.jgit.diff.RawTextIgnoreAllWhitespaceTest')","[99642, 99751]"
"('URIish.java', 'org.eclipse.jgit.transport.URIish', '<init>', '^([a-z][a-z0-9+-]+)://(?:(?:([^/:@]+)(?::([^\\\\/]+))?@)?((?:[^\\\\/:]+)|(?:\\[[0-9a-f:]+\\]))(?::(\\d+))?((?:/~(?:[^\\\\/]+))?[\\\\/]))?(.+)?$', 'https://l usr\\example.com@example.com:1234/D:/x')",[37323]
"('Description.java', 'org.junit.runner.Description', 'methodAndClassNamePatternGroupOrDefault', '([\\s\\S]*)\\((.*)\\)', 'org.eclipse.jgit.merge.SquashMessageFormatterTest')","[88698, 88764]"
"('URIish.java', 'org.eclipse.jgit.transport.URIish', '<init>', '^([a-z][a-z0-9+-]+)://(?:(?:([^/:@]+)(?::([^\\\\/]+))?@)?((?:[^\\\\/:]+)|(?:\\[[0-9a-f:]+\\]))(?::(\\d+))?((?:/~(?:[^\\\\/]+))?[\\\\/]))?(.+)?$', 'ssh://lusr\\example:wtf@[::1]:1234/D:/x')",[13279]
"('Description.java', 'org.junit.runner.Description', 'methodAndClassNamePatternGroupOrDefault', '([\\s\\S]*)\\((.*)\\)', 'testOnlyOption_f1_7_e(org.eclipse.jgit.api.CommitOnlyTest)')","[236647, 238734]"
"('URIish.java', 'org.eclipse.jgit.transport.URIish', '<init>', '^([a-z][a-z0-9+-]+)://(?:(?:([^/:@]+)(?::([^\\\\/]+))?@)?((?:[^\\\\/:]+)|(?:\\[[0-9a-f:]+\\]))(?::(\\d+))?((?:/~(?:[^\\\\/]+))?[\\\\/]))?(.+)?$', 'ssh+git://l usr\\example.com@1.2.3.4:1234//')",[30975]
"('Description.java', 'org.junit.runner.Description', 'methodAndClassNamePatternGroupOrDefault', '([\\s\\S]*)\\((.*)\\)', 'testUpdateNonFastForwardForced(org.eclipse.jgit.transport.PushProcessTest)')","[74089, 74455]"
"('Description.java', 'org.junit.runner.Description', 'methodAndClassNamePatternGroupOrDefault', '([\\s\\S]*)\\((.*)\\)', 'testTrivialTwoWay_validSubtreeSort(org.eclipse.jgit.merge.SimpleMergeTest)')","[86481, 86760]"
"('URIish.java', 'org.eclipse.jgit.transport.URIish', '<init>', '^([a-z][a-z0-9+-]+)://(?:(?:([^/:@]+)(?::([^\\\\/]+))?@)?((?:[^\\\\/:]+)|(?:\\[[0-9a-f:]+\\]))(?::(\\d+))?((?:/~(?:[^\\\\/]+))?[\\\\/]))?(.+)?$', 'https://l usr\\example.com@[::1]/D:/x')","[51307, 51491]"
"('Description.java', 'org.junit.runner.Description', 'methodAndClassNamePatternGroupOrDefault', '([\\s\\S]*)\\((.*)\\)', 'testValidCommitNormalTime(org.eclipse.jgit.lib.ObjectCheckerTest)')","[121910, 124041]"
"('Description.java', 'org.junit.runner.Description', 'methodAndClassNamePatternGroupOrDefault', '([\\s\\S]*)\\((.*)\\)', 'test007_Open(org.eclipse.jgit.internal.storage.file.T0003_BasicTest)')","[249209, 249747]"
"('URIish.java', 'org.eclipse.jgit.transport.URIish', '<init>', '^(file):([\\\\/](?![\\\\/])((?:[A-Za-z]:)?[\\\\/]?(?:(?:[^\\\\/]+[\\\\/]+)*[^\\\\/]+[\\\\/]*)))$', 'http://l usr\\example.com:wtf@[::1]:1234/D:\\x')",[21294]
"('URIish.java', 'org.eclipse.jgit.transport.URIish', '<init>', '^(file):([\\\\/](?![\\\\/])((?:[A-Za-z]:)?[\\\\/]?(?:(?:[^\\\\/]+[\\\\/]+)*[^\\\\/]+[\\\\/]*)))$', 'https://l usr\\example.com:wtf@[::1]:80//abc')",[24698]
"('URIish.java', 'org.eclipse.jgit.transport.URIish', '<init>', '^([a-z][a-z0-9+-]+)://(?:(?:([^/:@]+)(?::([^\\\\/]+))?@)?((?:[^\\\\/:]+)|(?:\\[[0-9a-f:]+\\]))(?::(\\d+))?((?:/~(?:[^\\\\/]+))?[\\\\/]))?(.+)?$', 'http://lusr\\example@[::1]:1234//')",[35759]
"('ChangeIdUtil.java', 'org.eclipse.jgit.util.ChangeIdUtil', 'indexOfChangeId', '(^Change-Id: *I[a-f0-9]{40}$)', 'fix: this thing')",[190326]
"('URIish.java', 'org.eclipse.jgit.transport.URIish', '<init>', '^(?:([^/:@]+)(?::([^\\\\/]+))?@)?((?:[^\\\\/:]+)|(?:\\[[0-9a-f:]+\\])):((?:(?:/~(?:[^\\\\/]+))[\\\\/])?(?:(?:[^\\\\/]+[\\\\/]+)*[^\\\\/]+[\\\\/]*))$', '/tmp/jgit_test_2725117978470059884_tmp/tmp_193317894193640660')","[210729, 210895, 211264]"
"('Description.java', 'org.junit.runner.Description', 'methodAndClassNamePatternGroupOrDefault', '([\\s\\S]*)\\((.*)\\)', 'org.eclipse.jgit.util.RawParseUtils_FormatTest')","[176410, 176476]"
"('Description.java', 'org.junit.runner.Description', 'methodAndClassNamePatternGroupOrDefault', '([\\s\\S]*)\\((.*)\\)', 'testOnlyOption_f1_7_f2_14_d(org.eclipse.jgit.api.CommitOnlyTest)')","[235891, 237942]"
"('Description.java', 'org.junit.runner.Description', 'methodAndClassNamePatternGroupOrDefault', '([\\s\\S]*)\\((.*)\\)', 'dontPackHEAD_bare(org.eclipse.jgit.internal.storage.file.GcPackRefsTest)')","[252180, 252309]"
"('URIish.java', 'org.eclipse.jgit.transport.URIish', '<init>', '^(file):([\\\\/](?![\\\\/])((?:[A-Za-z]:)?[\\\\/]?(?:(?:[^\\\\/]+[\\\\/]+)*[^\\\\/]+[\\\\/]*)))$', 'http://l usr\\example.com@example.com/D:\\x')","[47282, 47466]"
"('Description.java', 'org.junit.runner.Description', 'methodAndClassNamePatternGroupOrDefault', '([\\s\\S]*)\\((.*)\\)', 'testInvalidCommitInvalidAuthor3(org.eclipse.jgit.lib.ObjectCheckerTest)')","[121763, 123887]"
"('URIish.java', 'org.eclipse.jgit.transport.URIish', '<init>', '^(file):([\\\\/](?![\\\\/])((?:[A-Za-z]:)?[\\\\/]?(?:(?:[^\\\\/]+[\\\\/]+)*[^\\\\/]+[\\\\/]*)))$', 'ssh://lusr\\example@[::1]:80//abc')",[29342]
"('URIish.java', 'org.eclipse.jgit.transport.URIish', '<init>', '^(file):([\\\\/](?![\\\\/])((?:[A-Za-z]:)?[\\\\/]?(?:(?:[^\\\\/]+[\\\\/]+)*[^\\\\/]+[\\\\/]*)))$', 'ssh://me@[::1]:1234/D:\\x')",[26979]
"('URIish.java', 'org.eclipse.jgit.transport.URIish', '<init>', '^([a-z][a-z0-9+-]+)://(?:(?:([^/:@]+)(?::([^\\\\/]+))?@)?((?:[^\\\\/:]+)|(?:\\[[0-9a-f:]+\\]))(?::(\\d+))?((?:/~(?:[^\\\\/]+))?[\\\\/]))?(.+)?$', 'file:///tmp/jgit_test_8825191104981143089_tmp/tmp_8275953160873311507/.git/')",[212861]
"('Description.java', 'org.junit.runner.Description', 'methodAndClassNamePatternGroupOrDefault', '([\\s\\S]*)\\((.*)\\)', 'testOnlyOption_f1_6_b(org.eclipse.jgit.api.CommitOnlyTest)')","[236479, 238558]"
"('Description.java', 'org.junit.runner.Description', 'methodAndClassNamePatternGroupOrDefault', '([\\s\\S]*)\\((.*)\\)', 'testEmpty_SpecificCapacity(org.eclipse.jgit.util.IntListTest)')","[181746, 181979]"
"('URIish.java', 'org.eclipse.jgit.transport.URIish', '<init>', '^(file):([\\\\/](?![\\\\/])((?:[A-Za-z]:)?[\\\\/]?(?:(?:[^\\\\/]+[\\\\/]+)*[^\\\\/]+[\\\\/]*)))$', 'https://l usr\\example.com:wtf@[::1]:1234/D:\\x')",[24606]
"('Description.java', 'org.junit.runner.Description', 'methodAndClassNamePatternGroupOrDefault', '([\\s\\S]*)\\((.*)\\)', 'nonReferencedObjects_onlyExpiredPruned(org.eclipse.jgit.internal.storage.file.GcPruneNonReferencedTest)')","[256322, 256432]"
"('URIish.java', 'org.eclipse.jgit.transport.URIish', '<init>', '^(file):([\\\\/](?![\\\\/])((?:[A-Za-z]:)?[\\\\/]?(?:(?:[^\\\\/]+[\\\\/]+)*[^\\\\/]+[\\\\/]*)))$', 'ssh://lusr\\example:wtf@example.com:1234//abc')",[12291]
"('URIish.java', 'org.eclipse.jgit.transport.URIish', '<init>', '^([a-z][a-z0-9+-]+)://(?:(?:([^/:@]+)(?::([^\\\\/]+))?@)?((?:[^\\\\/:]+)|(?:\\[[0-9a-f:]+\\]))(?::(\\d+))?((?:/~(?:[^\\\\/]+))?[\\\\/]))?(.+)?$', 'http://me:wtf@1.2.3.4:80/D:/x')",[19938]
"('Description.java', 'org.junit.runner.Description', 'methodAndClassNamePatternGroupOrDefault', '([\\s\\S]*)\\((.*)\\)', 'testInitBareRepository(org.eclipse.jgit.api.InitCommandTest)')","[234135, 234199]"
"('Description.java', 'org.junit.runner.Description', 'methodAndClassNamePatternGroupOrDefault', '([\\s\\S]*)\\((.*)\\)', 'testTwoRangesInOneGroupCase2(org.eclipse.jgit.fnmatch.FileNameMatcherTest)')","[103897, 107295]"
"('ChangeIdUtil.java', 'org.eclipse.jgit.util.ChangeIdUtil', 'indexOfChangeId', '(^Change-Id: *I[a-f0-9]{40}$)', 'https://example.com/ fixes this')",[189931]
"('Description.java', 'org.junit.runner.Description', 'methodAndClassNamePatternGroupOrDefault', '([\\s\\S]*)\\((.*)\\)', 'testOneCommitOneTreeTwoBlob(org.eclipse.jgit.revwalk.ObjectWalkTest)')","[76385, 76576]"
"('Description.java', 'org.junit.runner.Description', 'methodAndClassNamePatternGroupOrDefault', '([\\s\\S]*)\\((.*)\\)', 'oneCommit(org.eclipse.jgit.revwalk.RevWalkUtilsReachableTest)')","[77186, 77295]"
"('Description.java', 'org.junit.runner.Description', 'methodAndClassNamePatternGroupOrDefault', '([\\s\\S]*)\\((.*)\\)', 'testXDigitGroupCase3[OldRule? true](org.eclipse.jgit.ignore.IgnoreRuleSpecialCasesTest)')","[152146, 159230]"
"('Description.java', 'org.junit.runner.Description', 'methodAndClassNamePatternGroupOrDefault', '([\\s\\S]*)\\((.*)\\)', 'testGitWithUserHome(org.eclipse.jgit.transport.URIishTest)')","[3188, 5366]"
"('Description.java', 'org.junit.runner.Description', 'methodAndClassNamePatternGroupOrDefault', '([\\s\\S]*)\\((.*)\\)', 'testParse_OnlyLFMessage(org.eclipse.jgit.revwalk.RevTagParseTest)')","[80144, 80549]"
"('URIish.java', 'org.eclipse.jgit.transport.URIish', '<init>', '^(file):([\\\\/](?![\\\\/])((?:[A-Za-z]:)?[\\\\/]?(?:(?:[^\\\\/]+[\\\\/]+)*[^\\\\/]+[\\\\/]*)))$', 'file:///tmp/jgit_test_4250465133596588734_tmp/tmp_290954966130449691')","[210631, 210808]"
"('Description.java', 'org.junit.runner.Description', 'methodAndClassNamePatternGroupOrDefault', '([\\s\\S]*)\\((.*)\\)', 'testRemoteNames(org.eclipse.jgit.lib.RefTest)')","[115565, 115760]"
"('Description.java', 'org.junit.runner.Description', 'methodAndClassNamePatternGroupOrDefault', '([\\s\\S]*)\\((.*)\\)', 'testDecodeUInt16(org.eclipse.jgit.util.NBTest)')","[184788, 184957]"
"('URIish.java', 'org.eclipse.jgit.transport.URIish', '<init>', '^([a-z][a-z0-9+-]+)://(?:(?:([^/:@]+)(?::([^\\\\/]+))?@)?((?:[^\\\\/:]+)|(?:\\[[0-9a-f:]+\\]))(?::(\\d+))?((?:/~(?:[^\\\\/]+))?[\\\\/]))?(.+)?$', 'ssh+git://l usr\\example.com@1.2.3.4/D:/x')","[44315, 44499]"
"('FastIgnoreRule.java', 'org.eclipse.jgit.ignore.FastIgnoreRule', 'isMatch', 'a.*b', 'b')",[162190]
"('Description.java', 'org.junit.runner.Description', 'methodAndClassNamePatternGroupOrDefault', '([\\s\\S]*)\\((.*)\\)', 'testReadStringRaw3(org.eclipse.jgit.transport.PacketLineInTest)')","[18028, 19200]"
"('Description.java', 'org.junit.runner.Description', 'methodAndClassNamePatternGroupOrDefault', '([\\s\\S]*)\\((.*)\\)', 'testSaveNoTags(org.eclipse.jgit.transport.RemoteConfigTest)')","[1772, 2997]"
"('URIish.java', 'org.eclipse.jgit.transport.URIish', '<init>', '^([a-z][a-z0-9+-]+)://(?:(?:([^/:@]+)(?::([^\\\\/]+))?@)?((?:[^\\\\/:]+)|(?:\\[[0-9a-f:]+\\]))(?::(\\d+))?((?:/~(?:[^\\\\/]+))?[\\\\/]))?(.+)?$', 'ssh+git://me:wtf@example.com:80/D:\\x')",[14360]
"('URIish.java', 'org.eclipse.jgit.transport.URIish', '<init>', '^([a-z][a-z0-9+-]+)://(?:(?:([^/:@]+)(?::([^\\\\/]+))?@)?((?:[^\\\\/:]+)|(?:\\[[0-9a-f:]+\\]))(?::(\\d+))?((?:/~(?:[^\\\\/]+))?[\\\\/]))?(.+)?$', 'ssh://lusr\\example@[::1]:1234//abc')",[29181]
"('URIish.java', 'org.eclipse.jgit.transport.URIish', '<init>', '^([a-z][a-z0-9+-]+)://(?:(?:([^/:@]+)(?::([^\\\\/]+))?@)?((?:[^\\\\/:]+)|(?:\\[[0-9a-f:]+\\]))(?::(\\d+))?((?:/~(?:[^\\\\/]+))?[\\\\/]))?(.+)?$', 'https://lusr\\example@[::1]:80/D:\\x')",[39393]
"('Description.java', 'org.junit.runner.Description', 'methodAndClassNamePatternGroupOrDefault', '([\\s\\S]*)\\((.*)\\)', 'testEmpty1(org.eclipse.jgit.diff.DiffFormatterReflowTest)')","[94372, 94590]"
"('Description.java', 'org.junit.runner.Description', 'methodAndClassNamePatternGroupOrDefault', '([\\s\\S]*)\\((.*)\\)', 'testEmptyIfRootIsFile(org.eclipse.jgit.treewalk.FileTreeIteratorTest)')","[131480, 131830]"
"('URIish.java', 'org.eclipse.jgit.transport.URIish', '<init>', '^([a-z][a-z0-9+-]+)://(?:(?:([^/:@]+)(?::([^\\\\/]+))?@)?((?:[^\\\\/:]+)|(?:\\[[0-9a-f:]+\\]))(?::(\\d+))?((?:/~(?:[^\\\\/]+))?[\\\\/]))?(.+)?$', '/tmp/jgit_test_2412289587651931572_tmp/tmp_8062070046587231599/.git')","[229764, 229902]"
"('Description.java', 'org.junit.runner.Description', 'methodAndClassNamePatternGroupOrDefault', '([\\s\\S]*)\\((.*)\\)', 'testDirtySubmoduleIndex(org.eclipse.jgit.lib.IndexDiffSubmoduleTest)')","[127969, 128122]"
"('URIish.java', 'org.eclipse.jgit.transport.URIish', '<init>', '^(file):([\\\\/](?![\\\\/])((?:[A-Za-z]:)?[\\\\/]?(?:(?:[^\\\\/]+[\\\\/]+)*[^\\\\/]+[\\\\/]*)))$', 'http://me:wtf@1.2.3.4:1234/D:/x')",[19335]
"('URIish.java', 'org.eclipse.jgit.transport.URIish', '<init>', '^(?:([^/:@]+)(?::([^\\\\/]+))?@)?([^\\\\/:]{2,}):([\\\\/](?:(?:[^\\\\/]+[\\\\/]+)*[^\\\\/]+[\\\\/]*))$', '//.git')",[70436]
"('Description.java', 'org.junit.runner.Description', 'methodAndClassNamePatternGroupOrDefault', '([\\s\\S]*)\\((.*)\\)', 'testIsModifiedFileSmudged(org.eclipse.jgit.treewalk.FileTreeIteratorTest)')","[131438, 131786]"
"('Description.java', 'org.junit.runner.Description', 'methodAndClassNamePatternGroupOrDefault', '([\\s\\S]*)\\((.*)\\)', 'testVerySimpleGroupRangeCase2(org.eclipse.jgit.fnmatch.FileNameMatcherTest)')","[102595, 105931]"
"('URIish.java', 'org.eclipse.jgit.transport.URIish', '<init>', '^([a-z][a-z0-9+-]+)://(?:(?:([^/:@]+)(?::([^\\\\/]+))?@)?((?:[^\\\\/:]+)|(?:\\[[0-9a-f:]+\\]))(?::(\\d+))?((?:/~(?:[^\\\\/]+))?[\\\\/]))?(.+)?$', 'ssh://lusr\\example:wtf@[::1]:1234//abc')",[13233]
"('Description.java', 'org.junit.runner.Description', 'methodAndClassNamePatternGroupOrDefault', '([\\s\\S]*)\\((.*)\\)', 'testDepth2(org.eclipse.jgit.revwalk.RevWalkShallowTest)')","[86143, 86274]"
"('Description.java', 'org.junit.runner.Description', 'methodAndClassNamePatternGroupOrDefault', '([\\s\\S]*)\\((.*)\\)', 'testGetRefs_EmptyDatabase(org.eclipse.jgit.internal.storage.file.RefDirectoryTest)')","[258379, 259584]"
"('URIish.java', 'org.eclipse.jgit.transport.URIish', '<init>', '^([a-z][a-z0-9+-]+)://(?:(?:([^/:@]+)(?::([^\\\\/]+))?@)?((?:[^\\\\/:]+)|(?:\\[[0-9a-f:]+\\]))(?::(\\d+))?((?:/~(?:[^\\\\/]+))?[\\\\/]))?(.+)?$', 'http://lusr\\example@example.com:80/D:/x')",[35299]
"('URIish.java', 'org.eclipse.jgit.transport.URIish', '<init>', '^([a-z][a-z0-9+-]+)://(?:(?:([^/:@]+)(?::([^\\\\/]+))?@)?((?:[^\\\\/:]+)|(?:\\[[0-9a-f:]+\\]))(?::(\\d+))?((?:/~(?:[^\\\\/]+))?[\\\\/]))?(.+)?$', 'https://me:wtf@example.com:1234/D:\\x')",[22789]
"('URIish.java', 'org.eclipse.jgit.transport.URIish', '<init>', '^(file):([\\\\/](?![\\\\/])((?:[A-Za-z]:)?[\\\\/]?(?:(?:[^\\\\/]+[\\\\/]+)*[^\\\\/]+[\\\\/]*)))$', 'ssh+git://me@example.com:1234//')",[29480]
"('URIish.java', 'org.eclipse.jgit.transport.URIish', '<init>', '^([a-z][a-z0-9+-]+)://(?:(?:([^/:@]+)(?::([^\\\\/]+))?@)?((?:[^\\\\/:]+)|(?:\\[[0-9a-f:]+\\]))(?::(\\d+))?((?:/~(?:[^\\\\/]+))?[\\\\/]))?(.+)?$', 'ssh+git://l usr\\example.com@[::1]/D:\\x')","[44729, 44913]"
"('ChangeIdUtil.java', 'org.eclipse.jgit.util.ChangeIdUtil', 'indexOfFirstFooterLine', '^[ \\[].*$', ' ')","[188901, 191546]"
"('URIish.java', 'org.eclipse.jgit.transport.URIish', '<init>', '^([a-z][a-z0-9+-]+)://(?:(?:([^/:@]+)(?::([^\\\\/]+))?@)?((?:[^\\\\/:]+)|(?:\\[[0-9a-f:]+\\]))(?::(\\d+))?((?:/~(?:[^\\\\/]+))?[\\\\/]))?(.+)?$', 'ssh+git://lusr\\example:wtf@example.com:1234/D:/x')",[17170]
"('Description.java', 'org.junit.runner.Description', 'methodAndClassNamePatternGroupOrDefault', '([\\s\\S]*)\\((.*)\\)', 'testUpdateNonFastForwardUnknownObject(org.eclipse.jgit.transport.PushProcessTest)')","[74152, 74521]"
"('URIish.java', 'org.eclipse.jgit.transport.URIish', '<init>', '^(file):([\\\\/](?![\\\\/])((?:[A-Za-z]:)?[\\\\/]?(?:(?:[^\\\\/]+[\\\\/]+)*[^\\\\/]+[\\\\/]*)))$', 'ssh://lusr\\example:wtf@1.2.3.4:80/D:\\x')",[13118]
"('URIish.java', 'org.eclipse.jgit.transport.URIish', '<init>', '^([a-z][a-z0-9+-]+)://(?:(?:([^/:@]+)(?::([^\\\\/]+))?@)?((?:[^\\\\/:]+)|(?:\\[[0-9a-f:]+\\]))(?::(\\d+))?((?:/~(?:[^\\\\/]+))?[\\\\/]))?(.+)?$', 'https://lusr\\example@1.2.3.4/D:\\x')","[52089, 52273]"
"('Description.java', 'org.junit.runner.Description', 'methodAndClassNamePatternGroupOrDefault', '([\\s\\S]*)\\((.*)\\)', 'testRename(org.eclipse.jgit.api.BlameCommandTest)')","[244684, 245077]"
"('URIish.java', 'org.eclipse.jgit.transport.URIish', '<init>', '^(file):([\\\\/](?![\\\\/])((?:[A-Za-z]:)?[\\\\/]?(?:(?:[^\\\\/]+[\\\\/]+)*[^\\\\/]+[\\\\/]*)))$', 'file:/tmp/jgit_test_6348790915699321214_tmp/tmp_3279445110844604601/.git/')",[132330]
"('Description.java', 'org.junit.runner.Description', 'methodAndClassNamePatternGroupOrDefault', '([\\s\\S]*)\\((.*)\\)', 'testCloseNameConflicts1(org.eclipse.jgit.lib.DirCacheCheckoutTest)')","[116053, 117006]"
"('Description.java', 'org.junit.runner.Description', 'methodAndClassNamePatternGroupOrDefault', '([\\s\\S]*)\\((.*)\\)', 'multipleEdits(org.eclipse.jgit.api.StashCreateCommandTest)')","[202277, 202616]"
"('Description.java', 'org.junit.runner.Description', 'methodAndClassNamePatternGroupOrDefault', '([\\s\\S]*)\\((.*)\\)', 'testReadMissing_RealIndex(org.eclipse.jgit.dircache.DirCacheBasicTest)')","[90067, 90308]"
"('URIish.java', 'org.eclipse.jgit.transport.URIish', '<init>', '^([a-z][a-z0-9+-]+)://(?:(?:([^/:@]+)(?::([^\\\\/]+))?@)?((?:[^\\\\/:]+)|(?:\\[[0-9a-f:]+\\]))(?::(\\d+))?((?:/~(?:[^\\\\/]+))?[\\\\/]))?(.+)?$', 'http://l usr\\example.com@[::1]:1234//')",[34655]
"('URIish.java', 'org.eclipse.jgit.transport.URIish', '<init>', '^([a-z][a-z0-9+-]+)://(?:(?:([^/:@]+)(?::([^\\\\/]+))?@)?((?:[^\\\\/:]+)|(?:\\[[0-9a-f:]+\\]))(?::(\\d+))?((?:/~(?:[^\\\\/]+))?[\\\\/]))?(.+)?$', 'ssh://example.com/some/p ath')","[69677, 69723]"
"('URIish.java', 'org.eclipse.jgit.transport.URIish', '<init>', '^([\\\\/]?((?:[A-Za-z]:)?[\\\\/]?(?:(?:[^\\\\/]+[\\\\/]+)*[^\\\\/]+[\\\\/]*)))$', '/tmp/jgit_test_4002911052512723791_tmp/tmp_1346628727612174896.git')","[78694, 78870]"
"('Description.java', 'org.junit.runner.Description', 'methodAndClassNamePatternGroupOrDefault', '([\\s\\S]*)\\((.*)\\)', 'testACommitWithSubject_NonFooterAndBugAndSob(org.eclipse.jgit.util.ChangeIdUtilTest)')","[185882, 186644]"
"('URIish.java', 'org.eclipse.jgit.transport.URIish', '<init>', '^(file):([\\\\/](?![\\\\/])((?:[A-Za-z]:)?[\\\\/]?(?:(?:[^\\\\/]+[\\\\/]+)*[^\\\\/]+[\\\\/]*)))$', 'ssh+git://l usr\\example.com:wtf@example.com:80//')",[16135]
"('Description.java', 'org.junit.runner.Description', 'methodAndClassNamePatternGroupOrDefault', '([\\s\\S]*)\\((.*)\\)', 'testIntoOtherThanMaster(org.eclipse.jgit.merge.MergeMessageFormatterTest)')","[88989, 89313]"
"('Description.java', 'org.junit.runner.Description', 'methodAndClassNamePatternGroupOrDefault', '([\\s\\S]*)\\((.*)\\)', 'testDelta_SmallObjectChain(org.eclipse.jgit.internal.storage.file.PackFileTest)')","[248747, 248833]"
"('Description.java', 'org.junit.runner.Description', 'methodAndClassNamePatternGroupOrDefault', '([\\s\\S]*)\\((.*)\\)', 'testVerySimpleStarCase0[OldRule? false](org.eclipse.jgit.ignore.IgnoreRuleSpecialCasesTest)')","[148445, 155550]"
"('Description.java', 'org.junit.runner.Description', 'methodAndClassNamePatternGroupOrDefault', '([\\s\\S]*)\\((.*)\\)', 'testPullFastForward(org.eclipse.jgit.api.PullCommandWithRebaseTest)')","[205893, 205999]"
"('URIish.java', 'org.eclipse.jgit.transport.URIish', '<init>', '^(file):([\\\\/](?![\\\\/])((?:[A-Za-z]:)?[\\\\/]?(?:(?:[^\\\\/]+[\\\\/]+)*[^\\\\/]+[\\\\/]*)))$', 'ssh+git://1.2.3.4//abc')","[56390, 56574, 57494, 57678, 58598, 58782]"
"('Description.java', 'org.junit.runner.Description', 'methodAndClassNamePatternGroupOrDefault', '([\\s\\S]*)\\((.*)\\)', 'testInversedGroupCase1[OldRule? true](org.eclipse.jgit.ignore.IgnoreRuleSpecialCasesTest)')","[150490, 157574]"
"('URIish.java', 'org.eclipse.jgit.transport.URIish', '<init>', '^(file):([\\\\/](?![\\\\/])((?:[A-Za-z]:)?[\\\\/]?(?:(?:[^\\\\/]+[\\\\/]+)*[^\\\\/]+[\\\\/]*)))$', 'git://')",[65935]
"('Description.java', 'org.junit.runner.Description', 'methodAndClassNamePatternGroupOrDefault', '([\\s\\S]*)\\((.*)\\)', 'testCommit(org.eclipse.jgit.merge.MergeMessageFormatterTest)')","[89094, 89423]"
"('URIish.java', 'org.eclipse.jgit.transport.URIish', '<init>', '^([a-z][a-z0-9+-]+)://(?:(?:([^/:@]+)(?::([^\\\\/]+))?@)?((?:[^\\\\/:]+)|(?:\\[[0-9a-f:]+\\]))(?::(\\d+))?((?:/~(?:[^\\\\/]+))?[\\\\/]))?(.+)?$', 'https://lusr\\example:wtf@[::1]:1234//')",[25595]
"('Description.java', 'org.junit.runner.Description', 'methodAndClassNamePatternGroupOrDefault', '([\\s\\S]*)\\((.*)\\)', 'testSquashMergeConflict(org.eclipse.jgit.api.MergeCommandTest)')","[213849, 214770]"
"('Description.java', 'org.junit.runner.Description', 'methodAndClassNamePatternGroupOrDefault', '([\\s\\S]*)\\((.*)\\)', 'testFilePathSimpleCase[OldRule? true](org.eclipse.jgit.ignore.IgnoreRuleSpecialCasesTest)')","[150030, 157114]"
"('Description.java', 'org.junit.runner.Description', 'methodAndClassNamePatternGroupOrDefault', '([\\s\\S]*)\\((.*)\\)', 'testSkipRevFilter(org.eclipse.jgit.revwalk.SkipRevFilterTest)')","[82243, 82309]"
"('URIish.java', 'org.eclipse.jgit.transport.URIish', '<init>', '^([a-z][a-z0-9+-]+)://(?:(?:([^/:@]+)(?::([^\\\\/]+))?@)?((?:[^\\\\/:]+)|(?:\\[[0-9a-f:]+\\]))(?::(\\d+))?((?:/~(?:[^\\\\/]+))?[\\\\/]))?(.+)?$', 'https://l usr\\example.com:wtf@example.com:1234/D:\\x')",[23893]
"('Description.java', 'org.junit.runner.Description', 'methodAndClassNamePatternGroupOrDefault', '([\\s\\S]*)\\((.*)\\)', 'testDigitGroupCase3[OldRule? false](org.eclipse.jgit.ignore.IgnoreRuleSpecialCasesTest)')","[147387, 154492]"
"('URIish.java', 'org.eclipse.jgit.transport.URIish', '<init>', '^(file):([\\\\/](?![\\\\/])((?:[A-Za-z]:)?[\\\\/]?(?:(?:[^\\\\/]+[\\\\/]+)*[^\\\\/]+[\\\\/]*)))$', 'ssh+git://me@1.2.3.4/D:/x')","[43188, 43372]"
"('Description.java', 'org.junit.runner.Description', 'methodAndClassNamePatternGroupOrDefault', '([\\s\\S]*)\\((.*)\\)', 'testEmptyFolderCommittedDeleted(org.eclipse.jgit.treewalk.filter.IndexDiffFilterTest)')","[137340, 138175]"
"('Description.java', 'org.junit.runner.Description', 'methodAndClassNamePatternGroupOrDefault', '([\\s\\S]*)\\((.*)\\)', 'testCheckoutWithNonDeletedFiles(org.eclipse.jgit.api.CheckoutCommandTest)')","[207038, 207558]"
"('URIish.java', 'org.eclipse.jgit.transport.URIish', '<init>', '^(file):([\\\\/](?![\\\\/])((?:[A-Za-z]:)?[\\\\/]?(?:(?:[^\\\\/]+[\\\\/]+)*[^\\\\/]+[\\\\/]*)))$', 'ssh+git://me@example.com:80//abc')",[29710]
"('Description.java', 'org.junit.runner.Description', 'methodAndClassNamePatternGroupOrDefault', '([\\s\\S]*)\\((.*)\\)', 'testGetRefs_IgnoresGarbageRef2(org.eclipse.jgit.internal.storage.file.RefDirectoryTest)')","[257497, 258660]"
"('Description.java', 'org.junit.runner.Description', 'methodAndClassNamePatternGroupOrDefault', '([\\s\\S]*)\\((.*)\\)', 'testAddDeleteTrickyNames(org.eclipse.jgit.dircache.DirCachePathEditTest)')","[91189, 91253]"
"('Description.java', 'org.junit.runner.Description', 'methodAndClassNamePatternGroupOrDefault', '([\\s\\S]*)\\((.*)\\)', 'testEmptyIfRootIsEmpty(org.eclipse.jgit.treewalk.FileTreeIteratorTest)')","[131207, 131544]"
"('Description.java', 'org.junit.runner.Description', 'methodAndClassNamePatternGroupOrDefault', '([\\s\\S]*)\\((.*)\\)', 'testValidTag(org.eclipse.jgit.lib.ObjectCheckerTest)')","[121322, 123425]"
"('URIish.java', 'org.eclipse.jgit.transport.URIish', '<init>', '^(file):([\\\\/](?![\\\\/])((?:[A-Za-z]:)?[\\\\/]?(?:(?:[^\\\\/]+[\\\\/]+)*[^\\\\/]+[\\\\/]*)))$', 'http://l usr\\example.com@1.2.3.4:1234/D:/x')",[34356]
"('Description.java', 'org.junit.runner.Description', 'methodAndClassNamePatternGroupOrDefault', '([\\s\\S]*)\\((.*)\\)', 'testReaderResolve(org.eclipse.jgit.internal.storage.dfs.DfsInserterTest)')","[246066, 246173]"
"('Description.java', 'org.junit.runner.Description', 'methodAndClassNamePatternGroupOrDefault', '([\\s\\S]*)\\((.*)\\)', 'testAutoCRLFInput(org.eclipse.jgit.lib.IndexDiffTest)')","[110469, 110815]"
"('Description.java', 'org.junit.runner.Description', 'methodAndClassNamePatternGroupOrDefault', '([\\s\\S]*)\\((.*)\\)', 'testChangeIdAfterBugOrIssue(org.eclipse.jgit.util.ChangeIdUtilTest)')","[185630, 186380]"
"('URIish.java', 'org.eclipse.jgit.transport.URIish', '<init>', '^([a-z][a-z0-9+-]+)://(?:(?:([^/:@]+)(?::([^\\\\/]+))?@)?((?:[^\\\\/:]+)|(?:\\[[0-9a-f:]+\\]))(?::(\\d+))?((?:/~(?:[^\\\\/]+))?[\\\\/]))?(.+)?$', 'file:///home/m%0ay')","[66533, 66579]"
"('Description.java', 'org.junit.runner.Description', 'methodAndClassNamePatternGroupOrDefault', '([\\s\\S]*)\\((.*)\\)', 'testPackWithDuplicateBlob(org.eclipse.jgit.transport.PackParserTest)')","[72176, 72484]"
"('URIish.java', 'org.eclipse.jgit.transport.URIish', '<init>', '^([a-z][a-z0-9+-]+)://(?:(?:([^/:@]+)(?::([^\\\\/]+))?@)?((?:[^\\\\/:]+)|(?:\\[[0-9a-f:]+\\]))(?::(\\d+))?((?:/~(?:[^\\\\/]+))?[\\\\/]))?(.+)?$', 'http://lusr\\example@1.2.3.4:1234/D:/x')",[35483]
"('Description.java', 'org.junit.runner.Description', 'methodAndClassNamePatternGroupOrDefault', '([\\s\\S]*)\\((.*)\\)', 'testRepeatedNegationInDifferentFiles2(org.eclipse.jgit.ignore.IgnoreNodeTest)')","[140500, 140798]"
"('URIish.java', 'org.eclipse.jgit.transport.URIish', '<init>', '^([a-z][a-z0-9+-]+)://(?:(?:([^/:@]+)(?::([^\\\\/]+))?@)?((?:[^\\\\/:]+)|(?:\\[[0-9a-f:]+\\]))(?::(\\d+))?((?:/~(?:[^\\\\/]+))?[\\\\/]))?(.+)?$', '/a/b/c.git')",[6541]
"('Description.java', 'org.junit.runner.Description', 'methodAndClassNamePatternGroupOrDefault', '([\\s\\S]*)\\((.*)\\)', 'org.eclipse.jgit.util.io.TimeoutInputStreamTest')","[173802, 174541]"
"('Description.java', 'org.junit.runner.Description', 'methodAndClassNamePatternGroupOrDefault', '([\\s\\S]*)\\((.*)\\)', 'testDirectoryFileConflicts_14(org.eclipse.jgit.lib.DirCacheCheckoutTest)')","[116599, 117578]"
"('URIish.java', 'org.eclipse.jgit.transport.URIish', '<init>', '^(file):([\\\\/](?![\\\\/])((?:[A-Za-z]:)?[\\\\/]?(?:(?:[^\\\\/]+[\\\\/]+)*[^\\\\/]+[\\\\/]*)))$', 'http://me:wtf@example.com:80//')",[18927]
"('URIish.java', 'org.eclipse.jgit.transport.URIish', '<init>', '^([a-z][a-z0-9+-]+)://(?:(?:([^/:@]+)(?::([^\\\\/]+))?@)?((?:[^\\\\/:]+)|(?:\\[[0-9a-f:]+\\]))(?::(\\d+))?((?:/~(?:[^\\\\/]+))?[\\\\/]))?(.+)?$', 'ssh+git://lusr\\example:wtf@1.2.3.4:80/D:/x')",[17745]
"('Description.java', 'org.junit.runner.Description', 'methodAndClassNamePatternGroupOrDefault', '([\\s\\S]*)\\((.*)\\)', 'testMaliciousAbsolutePathIsOkSecondCheckout(org.eclipse.jgit.lib.DirCacheCheckoutMaliciousPathTest)')","[112374, 113292]"
"('FastIgnoreRule.java', 'org.eclipse.jgit.ignore.FastIgnoreRule', 'isMatch', 'ne.', 'new')","[142939, 142993, 143047, 143101, 144083, 144137, 144191, 144245]"
"('ChangeIdUtil.java', 'org.eclipse.jgit.util.ChangeIdUtil', 'indexOfChangeId', '(^Change-Id: *I[a-f0-9]{40}$)', 'NOTE: This')",[190663]
"('Description.java', 'org.junit.runner.Description', 'methodAndClassNamePatternGroupOrDefault', '([\\s\\S]*)\\((.*)\\)', 'testRemoteAlias(org.eclipse.jgit.gitrepo.RepoCommandTest)')","[140072, 140380]"
"('Description.java', 'org.junit.runner.Description', 'methodAndClassNamePatternGroupOrDefault', '([\\s\\S]*)\\((.*)\\)', 'testEmptyTagName(org.eclipse.jgit.api.TagCommandTest)')","[201700, 202001]"
"('URIish.java', 'org.eclipse.jgit.transport.URIish', '<init>', '^([a-z][a-z0-9+-]+)://(?:(?:([^/:@]+)(?::([^\\\\/]+))?@)?((?:[^\\\\/:]+)|(?:\\[[0-9a-f:]+\\]))(?::(\\d+))?((?:/~(?:[^\\\\/]+))?[\\\\/]))?(.+)?$', 'ssh+git://example.com//abc')","[56045, 56229, 57149, 57333, 58253, 58437]"
"('URIish.java', 'org.eclipse.jgit.transport.URIish', '<init>', '^(file):([\\\\/](?![\\\\/])((?:[A-Za-z]:)?[\\\\/]?(?:(?:[^\\\\/]+[\\\\/]+)*[^\\\\/]+[\\\\/]*)))$', 'https://me:wtf@[::1]:1234//')",[23364]
"('URIish.java', 'org.eclipse.jgit.transport.URIish', '<init>', '^([a-z][a-z0-9+-]+)://(?:(?:([^/:@]+)(?::([^\\\\/]+))?@)?((?:[^\\\\/:]+)|(?:\\[[0-9a-f:]+\\]))(?::(\\d+))?((?:/~(?:[^\\\\/]+))?[\\\\/]))?(.+)?$', 'ssh+git://1.2.3.4//')","[56367, 56551, 57471, 57655, 58575, 58759]"
"('ChangeIdUtil.java', 'org.eclipse.jgit.util.ChangeIdUtil', 'indexOfChangeId', '(^Change-Id: *I[a-f0-9]{40}$)', 'with text withour break after subject line')",[187664]
"('Description.java', 'org.junit.runner.Description', 'methodAndClassNamePatternGroupOrDefault', '([\\s\\S]*)\\((.*)\\)', 'testReadLines_singleLine(org.eclipse.jgit.util.ReadLinesTest)')","[171797, 171925]"
"('Repository.java', 'org.eclipse.jgit.lib.Repository', 'resolve', '^-\\d+$', '0')","[126481, 126508, 126591, 126618, 126701, 126728, 127141, 127168, 127251, 127278, 127306, 127333, 127471, 127498, 228129, 228157, 241854, 241883, 242476, 242505, 242680, 242709, 242739, 242768, 243115, 243144, 243232, 243261, 243694, 243723, 243811, 243840, 243870, 243899, 243929, 243958, 244046, 244075, 244105, 244134, 244164, 244193, 244281, 244310, 245173, 245202, 245232, 245261, 245291, 245320, 245408, 245437, 245467, 245496, 245584, 245613, 245643, 245672, 245702, 245731, 245819, 245848, 245878, 245907]"
"('Description.java', 'org.junit.runner.Description', 'methodAndClassNamePatternGroupOrDefault', '([\\s\\S]*)\\((.*)\\)', 'testLimitedGetCachedBytes(org.eclipse.jgit.lib.ObjectLoaderTest)')","[119275, 119361]"
"('Description.java', 'org.junit.runner.Description', 'methodAndClassNamePatternGroupOrDefault', '([\\s\\S]*)\\((.*)\\)', 'testDegenerate_DeleteMiddle(org.eclipse.jgit.diff.MyersDiffTest)')","[97064, 97492]"
"('Description.java', 'org.junit.runner.Description', 'methodAndClassNamePatternGroupOrDefault', '([\\s\\S]*)\\((.*)\\)', 'testSegments[OldRule? true](org.eclipse.jgit.ignore.FastIgnoreRuleTest)')","[164615, 165351]"
"('Description.java', 'org.junit.runner.Description', 'methodAndClassNamePatternGroupOrDefault', '([\\s\\S]*)\\((.*)\\)', 'testUpdateSmudgedEntries(org.eclipse.jgit.api.CheckoutCommandTest)')","[207059, 207580]"
"('URIish.java', 'org.eclipse.jgit.transport.URIish', '<init>', '^(file):([\\\\/](?![\\\\/])((?:[A-Za-z]:)?[\\\\/]?(?:(?:[^\\\\/]+[\\\\/]+)*[^\\\\/]+[\\\\/]*)))$', 'file:///home/m y')","[67683, 67729]"
"('Description.java', 'org.junit.runner.Description', 'methodAndClassNamePatternGroupOrDefault', '([\\s\\S]*)\\((.*)\\)', 'testExactRename_OneRenameOneModify(org.eclipse.jgit.diff.RenameDetectorTest)')","[93132, 93683]"
"('Description.java', 'org.junit.runner.Description', 'methodAndClassNamePatternGroupOrDefault', '([\\s\\S]*)\\((.*)\\)', 'isRebase(org.eclipse.jgit.lib.BranchConfigTest)')","[120478, 120649]"
"('Description.java', 'org.junit.runner.Description', 'methodAndClassNamePatternGroupOrDefault', '([\\s\\S]*)\\((.*)\\)', 'testInvalidTreeDuplicateNames7(org.eclipse.jgit.lib.ObjectCheckerTest)')","[122876, 125053]"
"('Description.java', 'org.junit.runner.Description', 'methodAndClassNamePatternGroupOrDefault', '([\\s\\S]*)\\((.*)\\)', 'testRenameBranchCannotLockAFileHEADisOtherLockFrom(org.eclipse.jgit.internal.storage.file.RefUpdateTest)')","[252956, 253784]"
"('Description.java', 'org.junit.runner.Description', 'methodAndClassNamePatternGroupOrDefault', '([\\s\\S]*)\\((.*)\\)', 'testUpdateWorkingDirectoryFromHeadWithIndexChange(org.eclipse.jgit.api.PathCheckoutCommandTest)')","[224488, 224745]"
"('URIish.java', 'org.eclipse.jgit.transport.URIish', '<init>', '^([\\\\/]?((?:[A-Za-z]:)?[\\\\/]?(?:(?:[^\\\\/]+[\\\\/]+)*[^\\\\/]+[\\\\/]*)))$', '/tmp/jgit_test_848094205772547537_tmp/tmp_2447967114920000272.git')",[72745]
"('URIish.java', 'org.eclipse.jgit.transport.URIish', '<init>', '^(?:([^/:@]+)(?::([^\\\\/]+))?@)?((?:[^\\\\/:]+)|(?:\\[[0-9a-f:]+\\])):((?:(?:/~(?:[^\\\\/]+))[\\\\/])?(?:(?:[^\\\\/]+[\\\\/]+)*[^\\\\/]+[\\\\/]*))$', '/abc/.git')",[68090]
"('Description.java', 'org.junit.runner.Description', 'methodAndClassNamePatternGroupOrDefault', '([\\s\\S]*)\\((.*)\\)', 'testBackDoesNothing(org.eclipse.jgit.treewalk.EmptyTreeIteratorTest)')","[135626, 135756]"
"('URIish.java', 'org.eclipse.jgit.transport.URIish', '<init>', '^(file):([\\\\/](?![\\\\/])((?:[A-Za-z]:)?[\\\\/]?(?:(?:[^\\\\/]+[\\\\/]+)*[^\\\\/]+[\\\\/]*)))$', 'http://lusr\\example:wtf@[::1]:80/D:/x')",[22536]
"('Description.java', 'org.junit.runner.Description', 'methodAndClassNamePatternGroupOrDefault', '([\\s\\S]*)\\((.*)\\)', 'testGetValidSlashHumanishName(org.eclipse.jgit.transport.URIishTest)')","[2150, 4794]"
"('Description.java', 'org.junit.runner.Description', 'methodAndClassNamePatternGroupOrDefault', '([\\s\\S]*)\\((.*)\\)', 'testOneEntry_Backwards(org.eclipse.jgit.treewalk.CanonicalTreeParserTest)')","[136090, 136416]"
"('URIish.java', 'org.eclipse.jgit.transport.URIish', '<init>', '^(file):([\\\\/](?![\\\\/])((?:[A-Za-z]:)?[\\\\/]?(?:(?:[^\\\\/]+[\\\\/]+)*[^\\\\/]+[\\\\/]*)))$', 'http://l usr\\example.com@[::1]:80/D:/x')",[34908]
"('URIish.java', 'org.eclipse.jgit.transport.URIish', '<init>', '^(file):([\\\\/](?![\\\\/])((?:[A-Za-z]:)?[\\\\/]?(?:(?:[^\\\\/]+[\\\\/]+)*[^\\\\/]+[\\\\/]*)))$', 'ssh://1.2.3.4//')","[53032, 53216, 54136, 54320, 55240, 55424]"
"('Description.java', 'org.junit.runner.Description', 'methodAndClassNamePatternGroupOrDefault', '([\\s\\S]*)\\((.*)\\)', 'testConflictingMergeFailsDueToDirtyIndex(org.eclipse.jgit.api.MergeCommandTest)')","[213555, 214462]"
"('Description.java', 'org.junit.runner.Description', 'methodAndClassNamePatternGroupOrDefault', '([\\s\\S]*)\\((.*)\\)', 'testSpaceGroupCase4[OldRule? false](org.eclipse.jgit.ignore.IgnoreRuleSpecialCasesTest)')","[147088, 154193]"
"('URIish.java', 'org.eclipse.jgit.transport.URIish', '<init>', '^([a-z][a-z0-9+-]+)://(?:(?:([^/:@]+)(?::([^\\\\/]+))?@)?((?:[^\\\\/:]+)|(?:\\[[0-9a-f:]+\\]))(?::(\\d+))?((?:/~(?:[^\\\\/]+))?[\\\\/]))?(.+)?$', 'https://me@[::1]:1234//')",[36863]
"('URIish.java', 'org.eclipse.jgit.transport.URIish', '<init>', '^([a-z][a-z0-9+-]+)://(?:(?:([^/:@]+)(?::([^\\\\/]+))?@)?((?:[^\\\\/:]+)|(?:\\[[0-9a-f:]+\\]))(?::(\\d+))?((?:/~(?:[^\\\\/]+))?[\\\\/]))?(.+)?$', 'ssh://me@[::1]:1234/D:/x')",[26956]
"('URIish.java', 'org.eclipse.jgit.transport.URIish', '<init>', '^(file):([\\\\/](?![\\\\/])((?:[A-Za-z]:)?[\\\\/]?(?:(?:[^\\\\/]+[\\\\/]+)*[^\\\\/]+[\\\\/]*)))$', 'http://example.com/D:\\x')","[59426, 59610, 60530, 60714, 61634, 61818]"
"('URIish.java', 'org.eclipse.jgit.transport.URIish', '<init>', '^([a-z][a-z0-9+-]+)://(?:(?:([^/:@]+)(?::([^\\\\/]+))?@)?((?:[^\\\\/:]+)|(?:\\[[0-9a-f:]+\\]))(?::(\\d+))?((?:/~(?:[^\\\\/]+))?[\\\\/]))?(.+)?$', 'ssh://lusr\\example@example.com:80/D:\\x')",[28721]
"('URIish.java', 'org.eclipse.jgit.transport.URIish', '<init>', '^([a-z][a-z0-9+-]+)://(?:(?:([^/:@]+)(?::([^\\\\/]+))?@)?((?:[^\\\\/:]+)|(?:\\[[0-9a-f:]+\\]))(?::(\\d+))?((?:/~(?:[^\\\\/]+))?[\\\\/]))?(.+)?$', 'ssh+git://example.com//')","[55999, 56183, 57103, 57287, 58207, 58391]"
"('Description.java', 'org.junit.runner.Description', 'methodAndClassNamePatternGroupOrDefault', '([\\s\\S]*)\\((.*)\\)', 'testPackFormat_LargeObject(org.eclipse.jgit.internal.storage.file.UnpackedObjectTest)')","[255190, 255517]"
"('Description.java', 'org.junit.runner.Description', 'methodAndClassNamePatternGroupOrDefault', '([\\s\\S]*)\\((.*)\\)', 'testTrimLeadingWhitespace(org.eclipse.jgit.util.RawCharUtilTest)')","[192241, 192305]"
"('Description.java', 'org.junit.runner.Description', 'methodAndClassNamePatternGroupOrDefault', '([\\s\\S]*)\\((.*)\\)', 'testInvalidTreeModeStartsWithZero3(org.eclipse.jgit.lib.ObjectCheckerTest)')","[122729, 124899]"
"('Description.java', 'org.junit.runner.Description', 'methodAndClassNamePatternGroupOrDefault', '([\\s\\S]*)\\((.*)\\)', 'testConflictingMerge2(org.eclipse.jgit.api.BlameCommandTest)')","[244726, 245121]"
"('Description.java', 'org.junit.runner.Description', 'methodAndClassNamePatternGroupOrDefault', '([\\s\\S]*)\\((.*)\\)', 'testConsoleText(org.eclipse.jgit.nls.RootLocaleTest)')","[219, 514]"
"('Description.java', 'org.junit.runner.Description', 'methodAndClassNamePatternGroupOrDefault', '([\\s\\S]*)\\((.*)\\)', 'testInvalidCommitNoTree3(org.eclipse.jgit.lib.ObjectCheckerTest)')","[122519, 124679]"
"('URIish.java', 'org.eclipse.jgit.transport.URIish', '<init>', '^([a-z][a-z0-9+-]+)://(?:(?:([^/:@]+)(?::([^\\\\/]+))?@)?((?:[^\\\\/:]+)|(?:\\[[0-9a-f:]+\\]))(?::(\\d+))?((?:/~(?:[^\\\\/]+))?[\\\\/]))?(.+)?$', '/tmp/jgit_test_1455034780842305248_tmp/tmp_3250047937077610167')","[232607, 232737, 232921]"
"('Description.java', 'org.junit.runner.Description', 'methodAndClassNamePatternGroupOrDefault', '([\\s\\S]*)\\((.*)\\)', 'testPunctGroupCase1[OldRule? false](org.eclipse.jgit.ignore.IgnoreRuleSpecialCasesTest)')","[147709, 154814]"
"('Description.java', 'org.junit.runner.Description', 'methodAndClassNamePatternGroupOrDefault', '([\\s\\S]*)\\((.*)\\)', 'testAddOne(org.eclipse.jgit.diff.EditListTest)')","[94756, 94864]"
"('URIish.java', 'org.eclipse.jgit.transport.URIish', '<init>', '^([a-z][a-z0-9+-]+)://(?:(?:([^/:@]+)(?::([^\\\\/]+))?@)?((?:[^\\\\/:]+)|(?:\\[[0-9a-f:]+\\]))(?::(\\d+))?((?:/~(?:[^\\\\/]+))?[\\\\/]))?(.+)?$', 'http://lusr\\example@1.2.3.4:1234//')",[35391]
"('URIish.java', 'org.eclipse.jgit.transport.URIish', '<init>', '^([a-z][a-z0-9+-]+)://(?:(?:([^/:@]+)(?::([^\\\\/]+))?@)?((?:[^\\\\/:]+)|(?:\\[[0-9a-f:]+\\]))(?::(\\d+))?((?:/~(?:[^\\\\/]+))?[\\\\/]))?(.+)?$', 'https://l usr\\example.com@[::1]//abc')","[51261, 51445]"
"('Description.java', 'org.junit.runner.Description', 'methodAndClassNamePatternGroupOrDefault', '([\\s\\S]*)\\((.*)\\)', 'testInversedGroupCase0[OldRule? false](org.eclipse.jgit.ignore.IgnoreRuleSpecialCasesTest)')","[146904, 154009]"
"('URIish.java', 'org.eclipse.jgit.transport.URIish', '<init>', '^([a-z][a-z0-9+-]+)://(?:(?:([^/:@]+)(?::([^\\\\/]+))?@)?((?:[^\\\\/:]+)|(?:\\[[0-9a-f:]+\\]))(?::(\\d+))?((?:/~(?:[^\\\\/]+))?[\\\\/]))?(.+)?$', 'https://lusr\\example@example.com:80/D:\\x')",[38657]
"('Description.java', 'org.junit.runner.Description', 'methodAndClassNamePatternGroupOrDefault', '([\\s\\S]*)\\((.*)\\)', 'testSimple1(org.eclipse.jgit.revwalk.RevWalkPathFilter1Test)')","[75977, 76262]"
"('Description.java', 'org.junit.runner.Description', 'methodAndClassNamePatternGroupOrDefault', '([\\s\\S]*)\\((.*)\\)', 'testStandardFormat_LargeObject_TrailingGarbage(org.eclipse.jgit.internal.storage.file.UnpackedObjectTest)')","[255127, 255451]"
"('URIish.java', 'org.eclipse.jgit.transport.URIish', '<init>', '^([a-z][a-z0-9+-]+)://(?:(?:([^/:@]+)(?::([^\\\\/]+))?@)?((?:[^\\\\/:]+)|(?:\\[[0-9a-f:]+\\]))(?::(\\d+))?((?:/~(?:[^\\\\/]+))?[\\\\/]))?(.+)?$', 'ssh+git://me:wtf@example.com:1234//abc')",[13790]
"('URIish.java', 'org.eclipse.jgit.transport.URIish', '<init>', '^(file):([\\\\/](?![\\\\/])((?:[A-Za-z]:)?[\\\\/]?(?:(?:[^\\\\/]+[\\\\/]+)*[^\\\\/]+[\\\\/]*)))$', '/tmp/jgit_test_4416073704389025597_tmp/tmp_7357052360559725349/.git')","[229193, 229327]"
"('URIish.java', 'org.eclipse.jgit.transport.URIish', '<init>', '^(file):([\\\\/](?![\\\\/])((?:[A-Za-z]:)?[\\\\/]?(?:(?:[^\\\\/]+[\\\\/]+)*[^\\\\/]+[\\\\/]*)))$', 'file:/tmp/jgit_test_3786320727865834716_tmp/tmp_7743320247374569502/.git/')",[109121]
"('Description.java', 'org.junit.runner.Description', 'methodAndClassNamePatternGroupOrDefault', '([\\s\\S]*)\\((.*)\\)', 'addExistentSubmodule(org.eclipse.jgit.submodule.SubmoduleAddTest)')","[108813, 108984]"
"('URIish.java', 'org.eclipse.jgit.transport.URIish', '<init>', '^(file):([\\\\/](?![\\\\/])((?:[A-Za-z]:)?[\\\\/]?(?:(?:[^\\\\/]+[\\\\/]+)*[^\\\\/]+[\\\\/]*)))$', 'https://me:wtf@[::1]:80/D:\\x')",[23686]
"('URIish.java', 'org.eclipse.jgit.transport.URIish', '<init>', '^([a-z][a-z0-9+-]+)://(?:(?:([^/:@]+)(?::([^\\\\/]+))?@)?((?:[^\\\\/:]+)|(?:\\[[0-9a-f:]+\\]))(?::(\\d+))?((?:/~(?:[^\\\\/]+))?[\\\\/]))?(.+)?$', 'file:///tmp/jgit_test_8498942824545659596_tmp/tmp_452757468417483542/.git/')",[133416]
"('URIish.java', 'org.eclipse.jgit.transport.URIish', '<init>', '^([a-z][a-z0-9+-]+)://(?:(?:([^/:@]+)(?::([^\\\\/]+))?@)?((?:[^\\\\/:]+)|(?:\\[[0-9a-f:]+\\]))(?::(\\d+))?((?:/~(?:[^\\\\/]+))?[\\\\/]))?(.+)?$', 'ssh://me@[::1]:80//abc')",[27094]
"('Description.java', 'org.junit.runner.Description', 'methodAndClassNamePatternGroupOrDefault', '([\\s\\S]*)\\((.*)\\)', 'testThreeEntries_Seek3IsEOF(org.eclipse.jgit.treewalk.CanonicalTreeParserTest)')","[135964, 136284]"
"('URIish.java', 'org.eclipse.jgit.transport.URIish', '<init>', '^([a-z][a-z0-9+-]+)://(?:(?:([^/:@]+)(?::([^\\\\/]+))?@)?((?:[^\\\\/:]+)|(?:\\[[0-9a-f:]+\\]))(?::(\\d+))?((?:/~(?:[^\\\\/]+))?[\\\\/]))?(.+)?$', 'ssh+git://lusr\\example@1.2.3.4:80/D:/x')",[32355]
"('URIish.java', 'org.eclipse.jgit.transport.URIish', '<init>', '^(file):([\\\\/](?![\\\\/])((?:[A-Za-z]:)?[\\\\/]?(?:(?:[^\\\\/]+[\\\\/]+)*[^\\\\/]+[\\\\/]*)))$', 'file:///tmp/jgit_test_2833063507789227488_tmp/tmp_6575983387995976123/.git/')",[201018]
"('Description.java', 'org.junit.runner.Description', 'methodAndClassNamePatternGroupOrDefault', '([\\s\\S]*)\\((.*)\\)', 'testWithEndingURL(org.eclipse.jgit.util.ChangeIdUtilTest)')","[185798, 186556]"
"('URIish.java', 'org.eclipse.jgit.transport.URIish', '<init>', '^(file):([\\\\/](?![\\\\/])((?:[A-Za-z]:)?[\\\\/]?(?:(?:[^\\\\/]+[\\\\/]+)*[^\\\\/]+[\\\\/]*)))$', 'ssh+git://me:wtf@[::1]:1234//')",[15077]
"('URIish.java', 'org.eclipse.jgit.transport.URIish', '<init>', '^(file):([\\\\/](?![\\\\/])((?:[A-Za-z]:)?[\\\\/]?(?:(?:[^\\\\/]+[\\\\/]+)*[^\\\\/]+[\\\\/]*)))$', 'ssh+git://me@1.2.3.4//')","[43096, 43280]"
"('URIish.java', 'org.eclipse.jgit.transport.URIish', '<init>', '^([a-z][a-z0-9+-]+)://(?:(?:([^/:@]+)(?::([^\\\\/]+))?@)?((?:[^\\\\/:]+)|(?:\\[[0-9a-f:]+\\]))(?::(\\d+))?((?:/~(?:[^\\\\/]+))?[\\\\/]))?(.+)?$', 'https://l usr\\example.com:wtf@[::1]:80/D:\\x')",[24813]
"('URIish.java', 'org.eclipse.jgit.transport.URIish', '<init>', '^([a-z][a-z0-9+-]+)://(?:(?:([^/:@]+)(?::([^\\\\/]+))?@)?((?:[^\\\\/:]+)|(?:\\[[0-9a-f:]+\\]))(?::(\\d+))?((?:/~(?:[^\\\\/]+))?[\\\\/]))?(.+)?$', 'file:///tmp/jgit_test_4282693968719835734_tmp/tmp_387389566156283921/.git/')",[128886]
"('Description.java', 'org.junit.runner.Description', 'methodAndClassNamePatternGroupOrDefault', '([\\s\\S]*)\\((.*)\\)', 'testSimplePatternsDoNotMatch[OldRule? false](org.eclipse.jgit.ignore.FastIgnoreRuleTest)')","[164134, 164891]"
"('ChangeIdUtil.java', 'org.eclipse.jgit.util.ChangeIdUtil', 'indexOfChangeId', '(^Change-Id: *I[a-f0-9]{40}$)', ' Change-Id:  I3b7e4e16b503ce00f07ba6ad01d97a356dad7701')",[187270]
"('Description.java', 'org.junit.runner.Description', 'methodAndClassNamePatternGroupOrDefault', '([\\s\\S]*)\\((.*)\\)', 'testModifyE(org.eclipse.jgit.api.ApplyCommandTest)')","[223568, 223806]"
"('URIish.java', 'org.eclipse.jgit.transport.URIish', '<init>', '^([a-z][a-z0-9+-]+)://(?:(?:([^/:@]+)(?::([^\\\\/]+))?@)?((?:[^\\\\/:]+)|(?:\\[[0-9a-f:]+\\]))(?::(\\d+))?((?:/~(?:[^\\\\/]+))?[\\\\/]))?(.+)?$', 'https://[::1]/D:/x')","[63451, 63635, 64555, 64739, 65682, 65866]"
"('Description.java', 'org.junit.runner.Description', 'methodAndClassNamePatternGroupOrDefault', '([\\s\\S]*)\\((.*)\\)', 'testBlankGroupCase3[OldRule? false](org.eclipse.jgit.ignore.IgnoreRuleSpecialCasesTest)')","[148399, 155504]"
"('Description.java', 'org.junit.runner.Description', 'methodAndClassNamePatternGroupOrDefault', '([\\s\\S]*)\\((.*)\\)', 'shouldWorkForNormalCase(org.eclipse.jgit.revwalk.RevWalkUtilsCountTest)')","[78927, 79054]"
"('Description.java', 'org.junit.runner.Description', 'methodAndClassNamePatternGroupOrDefault', '([\\s\\S]*)\\((.*)\\)', 'testNegation(org.eclipse.jgit.ignore.IgnoreMatcherTest)')","[145386, 145583]"
"('URIish.java', 'org.eclipse.jgit.transport.URIish', '<init>', '^([a-z][a-z0-9+-]+)://(?:(?:([^/:@]+)(?::([^\\\\/]+))?@)?((?:[^\\\\/:]+)|(?:\\[[0-9a-f:]+\\]))(?::(\\d+))?((?:/~(?:[^\\\\/]+))?[\\\\/]))?(.+)?$', 'ssh://l usr\\example.com@[::1]//abc')","[41325, 41509]"
"('Description.java', 'org.junit.runner.Description', 'methodAndClassNamePatternGroupOrDefault', '([\\s\\S]*)\\((.*)\\)', 'testLeadingWhitespaces(org.eclipse.jgit.storage.file.FileBasedConfigTest)')","[194155, 194240]"
"('Description.java', 'org.junit.runner.Description', 'methodAndClassNamePatternGroupOrDefault', '([\\s\\S]*)\\((.*)\\)', 'org.eclipse.jgit.transport.PacketLineOutTest')","[74919, 75286]"
"('URIish.java', 'org.eclipse.jgit.transport.URIish', '<init>', '^(file):([\\\\/](?![\\\\/])((?:[A-Za-z]:)?[\\\\/]?(?:(?:[^\\\\/]+[\\\\/]+)*[^\\\\/]+[\\\\/]*)))$', 'ssh://l usr\\example.com@1.2.3.4:1234//')",[27577]
"('Description.java', 'org.junit.runner.Description', 'methodAndClassNamePatternGroupOrDefault', '([\\s\\S]*)\\((.*)\\)', 'testUpperGroupCase4[OldRule? true](org.eclipse.jgit.ignore.IgnoreRuleSpecialCasesTest)')","[151847, 158931]"
"('URIish.java', 'org.eclipse.jgit.transport.URIish', '<init>', '^(?:([^/:@]+)(?::([^\\\\/]+))?@)?((?:[^\\\\/:]+)|(?:\\[[0-9a-f:]+\\])):((?:(?:/~(?:[^\\\\/]+))[\\\\/])?(?:(?:[^\\\\/]+[\\\\/]+)*[^\\\\/]+[\\\\/]*))$', '/more/dirs')","[6203, 7524, 10358]"
"('URIish.java', 'org.eclipse.jgit.transport.URIish', '<init>', '^(file):([\\\\/](?![\\\\/])((?:[A-Za-z]:)?[\\\\/]?(?:(?:[^\\\\/]+[\\\\/]+)*[^\\\\/]+[\\\\/]*)))$', '/tmp/jgit_test_47688348811366599_tmp/tmp_1522576617666632427')","[206111, 206306, 207836, 207986, 208326]"
"('URIish.java', 'org.eclipse.jgit.transport.URIish', '<init>', '^(file):([\\\\/](?![\\\\/])((?:[A-Za-z]:)?[\\\\/]?(?:(?:[^\\\\/]+[\\\\/]+)*[^\\\\/]+[\\\\/]*)))$', 'ssh://DOMAIN\\user:pass@example.com:33/some/p ath%20')","[69930, 69976]"
"('URIish.java', 'org.eclipse.jgit.transport.URIish', '<init>', '^([a-z][a-z0-9+-]+)://(?:(?:([^/:@]+)(?::([^\\\\/]+))?@)?((?:[^\\\\/:]+)|(?:\\[[0-9a-f:]+\\]))(?::(\\d+))?((?:/~(?:[^\\\\/]+))?[\\\\/]))?(.+)?$', 'ssh://me@1.2.3.4:1234//abc')",[26542]
"('Description.java', 'org.junit.runner.Description', 'methodAndClassNamePatternGroupOrDefault', '([\\s\\S]*)\\((.*)\\)', 'testParse_GitStyleMessage(org.eclipse.jgit.revwalk.RevTagParseTest)')","[80207, 80615]"
"('Description.java', 'org.junit.runner.Description', 'methodAndClassNamePatternGroupOrDefault', '([\\s\\S]*)\\((.*)\\)', 'test002_WriteEmptyTree2(org.eclipse.jgit.internal.storage.file.T0003_BasicTest)')","[248978, 249505]"
"('Description.java', 'org.junit.runner.Description', 'methodAndClassNamePatternGroupOrDefault', '([\\s\\S]*)\\((.*)\\)', 'org.eclipse.jgit.dircache.DirCacheBasicTest')","[89857, 90353]"
"('Description.java', 'org.junit.runner.Description', 'methodAndClassNamePatternGroupOrDefault', '([\\s\\S]*)\\((.*)\\)', 'testATwoLines(org.eclipse.jgit.util.ChangeIdUtilTest)')","[185462, 186204]"
"('Description.java', 'org.junit.runner.Description', 'methodAndClassNamePatternGroupOrDefault', '([\\s\\S]*)\\((.*)\\)', 'testGetSlashValidSlashHumanishName(org.eclipse.jgit.transport.URIishTest)')","[4266, 5542]"
"('URIish.java', 'org.eclipse.jgit.transport.URIish', '<init>', '^(file):([\\\\/](?![\\\\/])((?:[A-Za-z]:)?[\\\\/]?(?:(?:[^\\\\/]+[\\\\/]+)*[^\\\\/]+[\\\\/]*)))$', 'ssh+git://lusr\\example@example.com:80/D:\\x')",[32010]
"('URIish.java', 'org.eclipse.jgit.transport.URIish', '<init>', '^(file):([\\\\/](?![\\\\/])((?:[A-Za-z]:)?[\\\\/]?(?:(?:[^\\\\/]+[\\\\/]+)*[^\\\\/]+[\\\\/]*)))$', 'file:/tmp/jgit_test_6790445454086415234_tmp/tmp_6898910523624612735/.git/')",[175550]
"('Description.java', 'org.junit.runner.Description', 'methodAndClassNamePatternGroupOrDefault', '([\\s\\S]*)\\((.*)\\)', 'testGetRef_CorruptObjectIdReference(org.eclipse.jgit.internal.storage.file.RefDirectoryTest)')","[258064, 259254]"
"('Description.java', 'org.junit.runner.Description', 'methodAndClassNamePatternGroupOrDefault', '([\\s\\S]*)\\((.*)\\)', 'testRemove(org.eclipse.jgit.util.RefMapTest)')","[184203, 184686]"
"('Description.java', 'org.junit.runner.Description', 'methodAndClassNamePatternGroupOrDefault', '([\\s\\S]*)\\((.*)\\)', 'repositoryWithUninitializedSubmodule(org.eclipse.jgit.submodule.SubmoduleStatusTest)')","[109307, 109457]"
"('Description.java', 'org.junit.runner.Description', 'methodAndClassNamePatternGroupOrDefault', '([\\s\\S]*)\\((.*)\\)', 'testEmpty_NoPrefix1(org.eclipse.jgit.util.RefMapTest)')","[184014, 184488]"
"('Description.java', 'org.junit.runner.Description', 'methodAndClassNamePatternGroupOrDefault', '([\\s\\S]*)\\((.*)\\)', 'testSort_TOPO(org.eclipse.jgit.revwalk.RevWalkSortTest)')","[85127, 85280]"
"('Description.java', 'org.junit.runner.Description', 'methodAndClassNamePatternGroupOrDefault', '([\\s\\S]*)\\((.*)\\)', 'prefix(org.eclipse.jgit.api.NameRevCommandTest)')","[242036, 242270]"
"('URIish.java', 'org.eclipse.jgit.transport.URIish', '<init>', '^([a-z][a-z0-9+-]+)://(?:(?:([^/:@]+)(?::([^\\\\/]+))?@)?((?:[^\\\\/:]+)|(?:\\[[0-9a-f:]+\\]))(?::(\\d+))?((?:/~(?:[^\\\\/]+))?[\\\\/]))?(.+)?$', 'file:///tmp/jgit_test_2667716494194561292_tmp/tmp_6337743378885192675/.git/')",[210605]
"('Description.java', 'org.junit.runner.Description', 'methodAndClassNamePatternGroupOrDefault', '([\\s\\S]*)\\((.*)\\)', 'testBuilder_AddAll(org.eclipse.jgit.util.RefListTest)')","[179779, 180308]"
"('ChangeIdUtil.java', 'org.eclipse.jgit.util.ChangeIdUtil', 'indexOfChangeId', '(^Change-Id: *I[a-f0-9]{40}$)', 'with header and body')",[190430]
"('Description.java', 'org.junit.runner.Description', 'methodAndClassNamePatternGroupOrDefault', '([\\s\\S]*)\\((.*)\\)', 'testParse_implicit_mixed_encoded(org.eclipse.jgit.revwalk.RevTagParseTest)')","[80081, 80483]"
"('URIish.java', 'org.eclipse.jgit.transport.URIish', '<init>', '^([a-z][a-z0-9+-]+)://(?:(?:([^/:@]+)(?::([^\\\\/]+))?@)?((?:[^\\\\/:]+)|(?:\\[[0-9a-f:]+\\]))(?::(\\d+))?((?:/~(?:[^\\\\/]+))?[\\\\/]))?(.+)?$', 'ssh://lusr\\example@[::1]:1234/D:\\x')",[29273]
"('Description.java', 'org.junit.runner.Description', 'methodAndClassNamePatternGroupOrDefault', '([\\s\\S]*)\\((.*)\\)', 'testEscapedBracket3[OldRule? true](org.eclipse.jgit.ignore.IgnoreRuleSpecialCasesTest)')","[152721, 159805]"
"('URIish.java', 'org.eclipse.jgit.transport.URIish', '<init>', '^([a-z][a-z0-9+-]+)://(?:(?:([^/:@]+)(?::([^\\\\/]+))?@)?((?:[^\\\\/:]+)|(?:\\[[0-9a-f:]+\\]))(?::(\\d+))?((?:/~(?:[^\\\\/]+))?[\\\\/]))?(.+)?$', 'https://lusr\\example@1.2.3.4:1234//abc')",[38749]
"('FastIgnoreRule.java', 'org.eclipse.jgit.ignore.FastIgnoreRule', 'isMatch', '[\\p{Punct}]', 'a')",[162138]
"('FastIgnoreRule.java', 'org.eclipse.jgit.ignore.FastIgnoreRule', 'isMatch', '[tv]est\\.sta[a-d]', 'test.staa')","[142578, 143722]"
"('Description.java', 'org.junit.runner.Description', 'methodAndClassNamePatternGroupOrDefault', '([\\s\\S]*)\\((.*)\\)', 'testForbiddenWindowsNamesOnUnixEgLpt1(org.eclipse.jgit.lib.DirCacheCheckoutMaliciousPathTest)')","[112416, 113336]"
"('URIish.java', 'org.eclipse.jgit.transport.URIish', '<init>', '^([a-z][a-z0-9+-]+)://(?:(?:([^/:@]+)(?::([^\\\\/]+))?@)?((?:[^\\\\/:]+)|(?:\\[[0-9a-f:]+\\]))(?::(\\d+))?((?:/~(?:[^\\\\/]+))?[\\\\/]))?(.+)?$', 'file:///tmp/jgit_test_4386752617164971455_tmp/tmp_2049061224455897551/.git/')",[131980]
"('ChangeIdUtil.java', 'org.eclipse.jgit.util.ChangeIdUtil', 'indexOfFirstFooterLine', '(^[a-zA-Z0-9-]+:(?!//).*$)', 'Signed-off-by: J Committer <jc@example.com>')","[188053, 189210, 189494, 189675]"
"('URIish.java', 'org.eclipse.jgit.transport.URIish', '<init>', '^(file):([\\\\/](?![\\\\/])((?:[A-Za-z]:)?[\\\\/]?(?:(?:[^\\\\/]+[\\\\/]+)*[^\\\\/]+[\\\\/]*)))$', 'file:///tmp/jgit_test_7006767190575786317_tmp/tmp_2995333056993761501')","[216100, 216157, 216214, 216294]"
"('Description.java', 'org.junit.runner.Description', 'methodAndClassNamePatternGroupOrDefault', '([\\s\\S]*)\\((.*)\\)', 'twoCommits(org.eclipse.jgit.revwalk.RevWalkUtilsReachableTest)')","[77165, 77273]"
"('URIish.java', 'org.eclipse.jgit.transport.URIish', '<init>', '^(file):([\\\\/](?![\\\\/])((?:[A-Za-z]:)?[\\\\/]?(?:(?:[^\\\\/]+[\\\\/]+)*[^\\\\/]+[\\\\/]*)))$', 'ssh://me@example.com:80//')",[26124]
"('URIish.java', 'org.eclipse.jgit.transport.URIish', '<init>', '^(file):([\\\\/](?![\\\\/])((?:[A-Za-z]:)?[\\\\/]?(?:(?:[^\\\\/]+[\\\\/]+)*[^\\\\/]+[\\\\/]*)))$', 'git://example.com/~some/p ath')","[70597, 70643]"
"('Description.java', 'org.junit.runner.Description', 'methodAndClassNamePatternGroupOrDefault', '([\\s\\S]*)\\((.*)\\)', 'testDirectoryFileConflicts_9(org.eclipse.jgit.lib.DirCacheCheckoutTest)')","[116431, 117402]"
"('Description.java', 'org.junit.runner.Description', 'methodAndClassNamePatternGroupOrDefault', '([\\s\\S]*)\\((.*)\\)', 'testCheckoutOutChanges(org.eclipse.jgit.lib.DirCacheCheckoutTest)')","[116074, 117028]"
"('URIish.java', 'org.eclipse.jgit.transport.URIish', '<init>', '^([\\\\/]?((?:[A-Za-z]:)?[\\\\/]?(?:(?:[^\\\\/]+[\\\\/]+)*[^\\\\/]+[\\\\/]*)))$', '/a/b/c.git/')",[67016]
"('Description.java', 'org.junit.runner.Description', 'methodAndClassNamePatternGroupOrDefault', '([\\s\\S]*)\\((.*)\\)', 'shouldReturnNullWhenBranchDoesntExist(org.eclipse.jgit.lib.BranchTrackingStatusTest)')","[117942, 118008]"
"('Description.java', 'org.junit.runner.Description', 'methodAndClassNamePatternGroupOrDefault', '([\\s\\S]*)\\((.*)\\)', 'testEditFanout2_38(org.eclipse.jgit.notes.NoteMapTest)')","[199156, 199416]"
"('Description.java', 'org.junit.runner.Description', 'methodAndClassNamePatternGroupOrDefault', '([\\s\\S]*)\\((.*)\\)', 'testMixedGroupCase8[OldRule? false](org.eclipse.jgit.ignore.IgnoreRuleSpecialCasesTest)')","[146260, 153365]"
"('Description.java', 'org.junit.runner.Description', 'methodAndClassNamePatternGroupOrDefault', '([\\s\\S]*)\\((.*)\\)', 'testCheckoutTheirs(org.eclipse.jgit.api.PathCheckoutCommandTest)')","[224530, 224789]"
"('Description.java', 'org.junit.runner.Description', 'methodAndClassNamePatternGroupOrDefault', '([\\s\\S]*)\\((.*)\\)', 'testGetTwoSlashesDotGitHumanishName(org.eclipse.jgit.transport.URIishTest)')","[3060, 5322]"
"('Description.java', 'org.junit.runner.Description', 'methodAndClassNamePatternGroupOrDefault', '([\\s\\S]*)\\((.*)\\)', 'testCheckoutWithStartPointOnlyCertainFiles(org.eclipse.jgit.api.CheckoutCommandTest)')","[206954, 207470]"
"('URIish.java', 'org.eclipse.jgit.transport.URIish', '<init>', '^(file):([\\\\/](?![\\\\/])((?:[A-Za-z]:)?[\\\\/]?(?:(?:[^\\\\/]+[\\\\/]+)*[^\\\\/]+[\\\\/]*)))$', 'http://me:wtf@example.com:80//abc')",[18973]
"('Description.java', 'org.junit.runner.Description', 'methodAndClassNamePatternGroupOrDefault', '([\\s\\S]*)\\((.*)\\)', 'testRemovedSubtree(org.eclipse.jgit.dircache.DirCacheIteratorTest)')","[92519, 92756]"
"('Description.java', 'org.junit.runner.Description', 'methodAndClassNamePatternGroupOrDefault', '([\\s\\S]*)\\((.*)\\)', 'testFindNextOffsetWrongOffset(org.eclipse.jgit.internal.storage.file.PackReverseIndexTest)')","[257140, 257226]"
"('URIish.java', 'org.eclipse.jgit.transport.URIish', '<init>', '^([a-z][a-z0-9+-]+)://(?:(?:([^/:@]+)(?::([^\\\\/]+))?@)?((?:[^\\\\/:]+)|(?:\\[[0-9a-f:]+\\]))(?::(\\d+))?((?:/~(?:[^\\\\/]+))?[\\\\/]))?(.+)?$', 'ssh+git://me@1.2.3.4:1234/D:\\x')",[30009]
"('URIish.java', 'org.eclipse.jgit.transport.URIish', '<init>', '^(file):([\\\\/](?![\\\\/])((?:[A-Za-z]:)?[\\\\/]?(?:(?:[^\\\\/]+[\\\\/]+)*[^\\\\/]+[\\\\/]*)))$', 'ssh://lusr\\example@example.com//abc')","[41670, 41854]"
"('URIish.java', 'org.eclipse.jgit.transport.URIish', '<init>', '^([a-z][a-z0-9+-]+)://(?:(?:([^/:@]+)(?::([^\\\\/]+))?@)?((?:[^\\\\/:]+)|(?:\\[[0-9a-f:]+\\]))(?::(\\d+))?((?:/~(?:[^\\\\/]+))?[\\\\/]))?(.+)?$', 'file:///tmp/jgit_test_2456524782036824539_tmp/tmp_4193579385899199922/.git/')",[133504]
"('URIish.java', 'org.eclipse.jgit.transport.URIish', '<init>', '^(file):([\\\\/](?![\\\\/])((?:[A-Za-z]:)?[\\\\/]?(?:(?:[^\\\\/]+[\\\\/]+)*[^\\\\/]+[\\\\/]*)))$', 'http://l usr\\example.com:wtf@1.2.3.4:1234//abc')",[20811]
"('FastIgnoreRule.java', 'org.eclipse.jgit.ignore.FastIgnoreRule', 'isMatch', '[ab]', 'ab')",[163622]
"('FastIgnoreRule.java', 'org.eclipse.jgit.ignore.FastIgnoreRule', 'isMatch', '[ab]', 'b')",[163596]
"('Description.java', 'org.junit.runner.Description', 'methodAndClassNamePatternGroupOrDefault', '([\\s\\S]*)\\((.*)\\)', 'testAlnumGroupCase2[OldRule? true](org.eclipse.jgit.ignore.IgnoreRuleSpecialCasesTest)')","[152307, 159391]"
"('Description.java', 'org.junit.runner.Description', 'methodAndClassNamePatternGroupOrDefault', '([\\s\\S]*)\\((.*)\\)', 'testValidCommitBlankAuthor(org.eclipse.jgit.lib.ObjectCheckerTest)')","[122078, 124217]"
"('Description.java', 'org.junit.runner.Description', 'methodAndClassNamePatternGroupOrDefault', '([\\s\\S]*)\\((.*)\\)', 'org.eclipse.jgit.api.CommitOnlyTest')","[235807, 250707]"
"('Description.java', 'org.junit.runner.Description', 'methodAndClassNamePatternGroupOrDefault', '([\\s\\S]*)\\((.*)\\)', 'testVerySimpleGroupCase1[OldRule? false](org.eclipse.jgit.ignore.IgnoreRuleSpecialCasesTest)')","[149066, 156171]"
"('FastIgnoreRule.java', 'org.eclipse.jgit.ignore.FastIgnoreRule', 'isMatch', '.*\\.sta[0-5]', 'test.sta5')","[142335, 143479]"
"('URIish.java', 'org.eclipse.jgit.transport.URIish', '<init>', '^(file):([\\\\/](?![\\\\/])((?:[A-Za-z]:)?[\\\\/]?(?:(?:[^\\\\/]+[\\\\/]+)*[^\\\\/]+[\\\\/]*)))$', 'http://me:wtf@1.2.3.4:80/D:\\x')",[19983]
"('Description.java', 'org.junit.runner.Description', 'methodAndClassNamePatternGroupOrDefault', '([\\s\\S]*)\\((.*)\\)', 'testInteractiveRebaseWithModificationShouldNotDeleteDataOnAbort(org.eclipse.jgit.api.RebaseCommandTest)')","[217963, 219466]"
"('Description.java', 'org.junit.runner.Description', 'methodAndClassNamePatternGroupOrDefault', '([\\s\\S]*)\\((.*)\\)', 'testXDigitGroupCase7[OldRule? false](org.eclipse.jgit.ignore.IgnoreRuleSpecialCasesTest)')","[148675, 155780]"
"('URIish.java', 'org.eclipse.jgit.transport.URIish', '<init>', '^([\\\\/]?((?:[A-Za-z]:)?[\\\\/]?(?:(?:[^\\\\/]+[\\\\/]+)*[^\\\\/]+[\\\\/]*)))$', '/tmp/jgit_test_228114219831588372_tmp/tmp_8226897773376440333')","[223165, 223310, 224059]"
"('Description.java', 'org.junit.runner.Description', 'methodAndClassNamePatternGroupOrDefault', '([\\s\\S]*)\\((.*)\\)', 'testInvalidCommitInvalidParent1(org.eclipse.jgit.lib.ObjectCheckerTest)')","[121595, 123711]"
"('Description.java', 'org.junit.runner.Description', 'methodAndClassNamePatternGroupOrDefault', '([\\s\\S]*)\\((.*)\\)', 'testQuestionmark[OldRule? false](org.eclipse.jgit.ignore.FastIgnoreRuleTest)')","[164111, 164868]"
"('URIish.java', 'org.eclipse.jgit.transport.URIish', '<init>', '^([a-z][a-z0-9+-]+)://(?:(?:([^/:@]+)(?::([^\\\\/]+))?@)?((?:[^\\\\/:]+)|(?:\\[[0-9a-f:]+\\]))(?::(\\d+))?((?:/~(?:[^\\\\/]+))?[\\\\/]))?(.+)?$', 'ssh://me:wtf@example.com:80//abc')",[7855]
"('Description.java', 'org.junit.runner.Description', 'methodAndClassNamePatternGroupOrDefault', '([\\s\\S]*)\\((.*)\\)', 'testExpandFromDestination_NonWildcard(org.eclipse.jgit.transport.RefSpecTest)')","[12549, 14900]"
"('Description.java', 'org.junit.runner.Description', 'methodAndClassNamePatternGroupOrDefault', '([\\s\\S]*)\\((.*)\\)', 'testRemoveRevFlag(org.eclipse.jgit.revwalk.RevObjectTest)')","[83850, 84290]"
"('Description.java', 'org.junit.runner.Description', 'methodAndClassNamePatternGroupOrDefault', '([\\s\\S]*)\\((.*)\\)', 'testUpperGroupCase3[OldRule? false](org.eclipse.jgit.ignore.IgnoreRuleSpecialCasesTest)')","[148261, 155366]"
"('Description.java', 'org.junit.runner.Description', 'methodAndClassNamePatternGroupOrDefault', '([\\s\\S]*)\\((.*)\\)', 'testCreateFromEmpty(org.eclipse.jgit.notes.NoteMapTest)')","[199072, 199328]"
"('URIish.java', 'org.eclipse.jgit.transport.URIish', '<init>', '^(file):([\\\\/](?![\\\\/])((?:[A-Za-z]:)?[\\\\/]?(?:(?:[^\\\\/]+[\\\\/]+)*[^\\\\/]+[\\\\/]*)))$', 'ssh+git://l usr\\example.com:wtf@example.com:1234/D:/x')",[16043]
"('Description.java', 'org.junit.runner.Description', 'methodAndClassNamePatternGroupOrDefault', '([\\s\\S]*)\\((.*)\\)', 'testAlias_PreferredAuthenticationsDefault(org.eclipse.jgit.transport.OpenSshConfigTest)')","[3317, 3856]"
"('URIish.java', 'org.eclipse.jgit.transport.URIish', '<init>', '^([a-z][a-z0-9+-]+)://(?:(?:([^/:@]+)(?::([^\\\\/]+))?@)?((?:[^\\\\/:]+)|(?:\\[[0-9a-f:]+\\]))(?::(\\d+))?((?:/~(?:[^\\\\/]+))?[\\\\/]))?(.+)?$', 'http://me:wtf@1.2.3.4:1234/D:/x')",[19380]
"('Description.java', 'org.junit.runner.Description', 'methodAndClassNamePatternGroupOrDefault', '([\\s\\S]*)\\((.*)\\)', 'testRebaseShouldStopForEditInCaseOfConflict(org.eclipse.jgit.api.RebaseCommandTest)')","[218257, 219774]"
"('URIish.java', 'org.eclipse.jgit.transport.URIish', '<init>', '^([a-z][a-z0-9+-]+)://(?:(?:([^/:@]+)(?::([^\\\\/]+))?@)?((?:[^\\\\/:]+)|(?:\\[[0-9a-f:]+\\]))(?::(\\d+))?((?:/~(?:[^\\\\/]+))?[\\\\/]))?(.+)?$', 'https://lusr\\example@[::1]:1234/D:\\x')",[39209]
"('URIish.java', 'org.eclipse.jgit.transport.URIish', '<init>', '^(file):([\\\\/](?![\\\\/])((?:[A-Za-z]:)?[\\\\/]?(?:(?:[^\\\\/]+[\\\\/]+)*[^\\\\/]+[\\\\/]*)))$', 'file:/tmp/jgit_test_8498942824545659596_tmp/tmp_452757468417483542/.git/')",[133344]
"('Description.java', 'org.junit.runner.Description', 'methodAndClassNamePatternGroupOrDefault', '([\\s\\S]*)\\((.*)\\)', 'testAdd_SmallGroup(org.eclipse.jgit.util.IntListTest)')","[181935, 182177]"
"('Description.java', 'org.junit.runner.Description', 'methodAndClassNamePatternGroupOrDefault', '([\\s\\S]*)\\((.*)\\)', 'testCheckoutOfFileWithInexistentParentDir(org.eclipse.jgit.api.CheckoutCommandTest)')","[206807, 207316]"
"('Description.java', 'org.junit.runner.Description', 'methodAndClassNamePatternGroupOrDefault', '([\\s\\S]*)\\((.*)\\)', 'testNoMatchButClose(org.eclipse.jgit.treewalk.filter.PathFilterGroupTest)')","[138909, 139061]"
"('FastIgnoreRule.java', 'org.eclipse.jgit.ignore.FastIgnoreRule', 'isMatch', '[[\\p{javaDigit}\\p{javaLetter}_]]', ' ')",[163362]
"('Description.java', 'org.junit.runner.Description', 'methodAndClassNamePatternGroupOrDefault', '([\\s\\S]*)\\((.*)\\)', 'testConcurrentInsertionOfBlobsToTheSameNewFanOutDirectory(org.eclipse.jgit.internal.storage.file.ObjectDirectoryTest)')","[250639, 250661]"
"('URIish.java', 'org.eclipse.jgit.transport.URIish', '<init>', '^(file):([\\\\/](?![\\\\/])((?:[A-Za-z]:)?[\\\\/]?(?:(?:[^\\\\/]+[\\\\/]+)*[^\\\\/]+[\\\\/]*)))$', 'ssh://l usr\\example.com@example.com:80//abc')",[27439]
"('Description.java', 'org.junit.runner.Description', 'methodAndClassNamePatternGroupOrDefault', '([\\s\\S]*)\\((.*)\\)', 'org.eclipse.jgit.api.PullCommandTest')","[220567, 234078]"
"('URIish.java', 'org.eclipse.jgit.transport.URIish', '<init>', '^(file):([\\\\/](?![\\\\/])((?:[A-Za-z]:)?[\\\\/]?(?:(?:[^\\\\/]+[\\\\/]+)*[^\\\\/]+[\\\\/]*)))$', 'https://server/repos/project.git')","[5866, 6276, 8477, 10500]"
"('Description.java', 'org.junit.runner.Description', 'methodAndClassNamePatternGroupOrDefault', '([\\s\\S]*)\\((.*)\\)', 'testAddExistingSingleFileTwice(org.eclipse.jgit.api.AddCommandTest)')","[234717, 235138]"
"('Description.java', 'org.junit.runner.Description', 'methodAndClassNamePatternGroupOrDefault', '([\\s\\S]*)\\((.*)\\)', 'org.eclipse.jgit.diff.SimilarityIndexTest')","[97815, 98119]"
"('URIish.java', 'org.eclipse.jgit.transport.URIish', '<init>', '^([a-z][a-z0-9+-]+)://(?:(?:([^/:@]+)(?::([^\\\\/]+))?@)?((?:[^\\\\/:]+)|(?:\\[[0-9a-f:]+\\]))(?::(\\d+))?((?:/~(?:[^\\\\/]+))?[\\\\/]))?(.+)?$', 'ssh://user:pass@example.com:33/some/p ath')","[66211, 66257]"
"('Description.java', 'org.junit.runner.Description', 'methodAndClassNamePatternGroupOrDefault', '([\\s\\S]*)\\((.*)\\)', 'testCreationImplicitStart(org.eclipse.jgit.api.BranchCommandTest)')","[226949, 227328]"
"('URIish.java', 'org.eclipse.jgit.transport.URIish', '<init>', '^([a-z][a-z0-9+-]+)://(?:(?:([^/:@]+)(?::([^\\\\/]+))?@)?((?:[^\\\\/:]+)|(?:\\[[0-9a-f:]+\\]))(?::(\\d+))?((?:/~(?:[^\\\\/]+))?[\\\\/]))?(.+)?$', 'https://example.com//')","[62623, 62807, 63727, 63911, 64831, 65015]"
"('URIish.java', 'org.eclipse.jgit.transport.URIish', '<init>', '^(file):([\\\\/](?![\\\\/])((?:[A-Za-z]:)?[\\\\/]?(?:(?:[^\\\\/]+[\\\\/]+)*[^\\\\/]+[\\\\/]*)))$', 'ssh+git://l usr\\example.com@1.2.3.4:80//abc')",[31182]
"('URIish.java', 'org.eclipse.jgit.transport.URIish', '<init>', '^([a-z][a-z0-9+-]+)://(?:(?:([^/:@]+)(?::([^\\\\/]+))?@)?((?:[^\\\\/:]+)|(?:\\[[0-9a-f:]+\\]))(?::(\\d+))?((?:/~(?:[^\\\\/]+))?[\\\\/]))?(.+)?$', 'https://me@1.2.3.4:1234//')",[36495]
"('FastIgnoreRule.java', 'org.eclipse.jgit.ignore.FastIgnoreRule', 'isMatch', '[[\\p{Print}\\p{javaDigit}\\p{javaLetter}]]', 'ö')",[162528]
"('Description.java', 'org.junit.runner.Description', 'methodAndClassNamePatternGroupOrDefault', '([\\s\\S]*)\\((.*)\\)', 'testSet(org.eclipse.jgit.util.BlockListTest)')","[180621, 180879]"
"('URIish.java', 'org.eclipse.jgit.transport.URIish', '<init>', '^(file):([\\\\/](?![\\\\/])((?:[A-Za-z]:)?[\\\\/]?(?:(?:[^\\\\/]+[\\\\/]+)*[^\\\\/]+[\\\\/]*)))$', 'git://abc')",[65981]
"('Description.java', 'org.junit.runner.Description', 'methodAndClassNamePatternGroupOrDefault', '([\\s\\S]*)\\((.*)\\)', 'getTrackingBranchShouldReturnNullWithoutMergeBranchForLocalBranch(org.eclipse.jgit.lib.BranchConfigTest)')","[120541, 120715]"
"('URIish.java', 'org.eclipse.jgit.transport.URIish', '<init>', '^([a-z][a-z0-9+-]+)://(?:(?:([^/:@]+)(?::([^\\\\/]+))?@)?((?:[^\\\\/:]+)|(?:\\[[0-9a-f:]+\\]))(?::(\\d+))?((?:/~(?:[^\\\\/]+))?[\\\\/]))?(.+)?$', 'ssh://l usr\\example.com:wtf@[::1]:80/D:/x')",[12176]
"('Description.java', 'org.junit.runner.Description', 'methodAndClassNamePatternGroupOrDefault', '([\\s\\S]*)\\((.*)\\)', 'testModify(org.eclipse.jgit.lib.IndexModificationTimesTest)')","[119651, 119695]"
"('URIish.java', 'org.eclipse.jgit.transport.URIish', '<init>', '^(file):([\\\\/](?![\\\\/])((?:[A-Za-z]:)?[\\\\/]?(?:(?:[^\\\\/]+[\\\\/]+)*[^\\\\/]+[\\\\/]*)))$', 'ssh+git://1.2.3.4//')","[56344, 56528, 57448, 57632, 58552, 58736]"
"('Description.java', 'org.junit.runner.Description', 'methodAndClassNamePatternGroupOrDefault', '([\\s\\S]*)\\((.*)\\)', 'testRebaseWithUnstagedMasterChange(org.eclipse.jgit.api.RebaseCommandTest)')","[218299, 219818]"
"('FastIgnoreRule.java', 'org.eclipse.jgit.ignore.FastIgnoreRule', 'isMatch', '[\\p{javaLetter}][\\p{javaLetter}]', 'a1')",[160992]
"('Description.java', 'org.junit.runner.Description', 'methodAndClassNamePatternGroupOrDefault', '([\\s\\S]*)\\((.*)\\)', 'testPathFilterOrOtherFilter(org.eclipse.jgit.revwalk.TreeRevFilterTest)')","[81694, 81804]"
"('Description.java', 'org.junit.runner.Description', 'methodAndClassNamePatternGroupOrDefault', '([\\s\\S]*)\\((.*)\\)', 'testComparatorReduceCommonStartEnd(org.eclipse.jgit.diff.RawTextTest)')","[96598, 96816]"
"('Description.java', 'org.junit.runner.Description', 'methodAndClassNamePatternGroupOrDefault', '([\\s\\S]*)\\((.*)\\)', 'testMaliciousAbsoluteCurDrivePathWindows(org.eclipse.jgit.lib.DirCacheCheckoutMaliciousPathTest)')","[112458, 113380]"
"('Description.java', 'org.junit.runner.Description', 'methodAndClassNamePatternGroupOrDefault', '([\\s\\S]*)\\((.*)\\)', 'testLsRemoteWithHeads(org.eclipse.jgit.api.LsRemoteCommandTest)')","[200519, 200605]"
"('Description.java', 'org.junit.runner.Description', 'methodAndClassNamePatternGroupOrDefault', '([\\s\\S]*)\\((.*)\\)', 'testVerySimpleGroupRangeCase3[OldRule? false](org.eclipse.jgit.ignore.IgnoreRuleSpecialCasesTest)')","[147525, 154630]"
"('URIish.java', 'org.eclipse.jgit.transport.URIish', '<init>', '^(file):([\\\\/](?![\\\\/])((?:[A-Za-z]:)?[\\\\/]?(?:(?:[^\\\\/]+[\\\\/]+)*[^\\\\/]+[\\\\/]*)))$', 'https://l usr\\example.com:wtf@[::1]:80/D:\\x')",[24790]
"('Description.java', 'org.junit.runner.Description', 'methodAndClassNamePatternGroupOrDefault', '([\\s\\S]*)\\((.*)\\)', 'shouldWorkWithMerges(org.eclipse.jgit.revwalk.RevWalkUtilsCountTest)')","[78969, 79098]"
"('Description.java', 'org.junit.runner.Description', 'methodAndClassNamePatternGroupOrDefault', '([\\s\\S]*)\\((.*)\\)', 'testCheckoutHierarchy(org.eclipse.jgit.lib.DirCacheCheckoutTest)')","[116137, 117094]"
"('URIish.java', 'org.eclipse.jgit.transport.URIish', '<init>', '^([a-z][a-z0-9+-]+)://(?:(?:([^/:@]+)(?::([^\\\\/]+))?@)?((?:[^\\\\/:]+)|(?:\\[[0-9a-f:]+\\]))(?::(\\d+))?((?:/~(?:[^\\\\/]+))?[\\\\/]))?(.+)?$', 'http://lusr\\example@[::1]/D:\\x')","[49145, 49329]"
"('URIish.java', 'org.eclipse.jgit.transport.URIish', '<init>', '^(file):([\\\\/](?![\\\\/])((?:[A-Za-z]:)?[\\\\/]?(?:(?:[^\\\\/]+[\\\\/]+)*[^\\\\/]+[\\\\/]*)))$', 'ssh+git://l usr\\example.com:wtf@example.com:1234//abc')",[15997]
"('URIish.java', 'org.eclipse.jgit.transport.URIish', '<init>', '^([\\\\/]?((?:[A-Za-z]:)?[\\\\/]?(?:(?:[^\\\\/]+[\\\\/]+)*[^\\\\/]+[\\\\/]*)))$', '/tmp/jgit_test_1514057598611897554_tmp/tmp_7977849081850125086')","[227690, 227835]"
"('FastIgnoreRule.java', 'org.eclipse.jgit.ignore.FastIgnoreRule', 'isMatch', '[b-d][ab]', 'fa')",[161436]
"('Description.java', 'org.junit.runner.Description', 'methodAndClassNamePatternGroupOrDefault', '([\\s\\S]*)\\((.*)\\)', 'org.eclipse.jgit.internal.storage.file.RefDirectoryTest')","[257329, 260308]"
"('Description.java', 'org.junit.runner.Description', 'methodAndClassNamePatternGroupOrDefault', '([\\s\\S]*)\\((.*)\\)', 'testAddUnstagedChanges(org.eclipse.jgit.api.CommitAndLogCommandTest)')","[213024, 213236]"
"('Description.java', 'org.junit.runner.Description', 'methodAndClassNamePatternGroupOrDefault', '([\\s\\S]*)\\((.*)\\)', 'testLeadingSpacesRebaseTodo(org.eclipse.jgit.api.RebaseCommandTest)')","[218635, 220170]"
"('Description.java', 'org.junit.runner.Description', 'methodAndClassNamePatternGroupOrDefault', '([\\s\\S]*)\\((.*)\\)', 'testPullLocalConflict(org.eclipse.jgit.api.PullCommandWithRebaseTest)')","[205914, 206021]"
"('Description.java', 'org.junit.runner.Description', 'methodAndClassNamePatternGroupOrDefault', '([\\s\\S]*)\\((.*)\\)', 'testWordGroupCase3[OldRule? true](org.eclipse.jgit.ignore.IgnoreRuleSpecialCasesTest)')","[152399, 159483]"
"('Description.java', 'org.junit.runner.Description', 'methodAndClassNamePatternGroupOrDefault', '([\\s\\S]*)\\((.*)\\)', 'testObjectId_objectid_self(org.eclipse.jgit.lib.RepositoryResolveTest)')","[125386, 125860]"
"('Description.java', 'org.junit.runner.Description', 'methodAndClassNamePatternGroupOrDefault', '([\\s\\S]*)\\((.*)\\)', 'testCloseNameConflictsX0(org.eclipse.jgit.lib.DirCacheCheckoutTest)')","[116200, 117160]"
"('URIish.java', 'org.eclipse.jgit.transport.URIish', '<init>', '^(file):([\\\\/](?![\\\\/])((?:[A-Za-z]:)?[\\\\/]?(?:(?:[^\\\\/]+[\\\\/]+)*[^\\\\/]+[\\\\/]*)))$', 'ssh+git://lusr\\example:wtf@example.com:1234//')",[17055]
"('Description.java', 'org.junit.runner.Description', 'methodAndClassNamePatternGroupOrDefault', '([\\s\\S]*)\\((.*)\\)', 'testIncompleteRangesInOneGroupCase2[OldRule? false](org.eclipse.jgit.ignore.IgnoreRuleSpecialCasesTest)')","[147916, 155021]"
"('URIish.java', 'org.eclipse.jgit.transport.URIish', '<init>', '^(?:([^/:@]+)(?::([^\\\\/]+))?@)?((?:[^\\\\/:]+)|(?:\\[[0-9a-f:]+\\])):((?:(?:/~(?:[^\\\\/]+))[\\\\/])?(?:(?:[^\\\\/]+[\\\\/]+)*[^\\\\/]+[\\\\/]*))$', '/tmp/jgit_test_6469622341025982846_tmp/tmp_1440713819350639853.git')",[81480]
"('URIish.java', 'org.eclipse.jgit.transport.URIish', '<init>', '^([a-z][a-z0-9+-]+)://(?:(?:([^/:@]+)(?::([^\\\\/]+))?@)?((?:[^\\\\/:]+)|(?:\\[[0-9a-f:]+\\]))(?::(\\d+))?((?:/~(?:[^\\\\/]+))?[\\\\/]))?(.+)?$', 'ssh+git://example.com/some/p ath')","[66855, 66901]"
"('URIish.java', 'org.eclipse.jgit.transport.URIish', '<init>', '^([a-z][a-z0-9+-]+)://(?:(?:([^/:@]+)(?::([^\\\\/]+))?@)?((?:[^\\\\/:]+)|(?:\\[[0-9a-f:]+\\]))(?::(\\d+))?((?:/~(?:[^\\\\/]+))?[\\\\/]))?(.+)?$', 'ssh+git://me@1.2.3.4:1234/D:/x')",[29963]
"('Description.java', 'org.junit.runner.Description', 'methodAndClassNamePatternGroupOrDefault', '([\\s\\S]*)\\((.*)\\)', 'testAlnumGroupCase0[OldRule? false](org.eclipse.jgit.ignore.IgnoreRuleSpecialCasesTest)')","[148698, 155803]"
"('URIish.java', 'org.eclipse.jgit.transport.URIish', '<init>', '^([a-z][a-z0-9+-]+)://(?:(?:([^/:@]+)(?::([^\\\\/]+))?@)?((?:[^\\\\/:]+)|(?:\\[[0-9a-f:]+\\]))(?::(\\d+))?((?:/~(?:[^\\\\/]+))?[\\\\/]))?(.+)?$', 'http://l usr\\example.com:wtf@[::1]:1234//abc')",[21225]
"('URIish.java', 'org.eclipse.jgit.transport.URIish', '<init>', '^(file):([\\\\/](?![\\\\/])((?:[A-Za-z]:)?[\\\\/]?(?:(?:[^\\\\/]+[\\\\/]+)*[^\\\\/]+[\\\\/]*)))$', 'http://me:wtf@1.2.3.4:1234//abc')",[19223]
"('Description.java', 'org.junit.runner.Description', 'methodAndClassNamePatternGroupOrDefault', '([\\s\\S]*)\\((.*)\\)', 'org.eclipse.jgit.util.NBTest')","[184767, 185134]"
"('Description.java', 'org.junit.runner.Description', 'methodAndClassNamePatternGroupOrDefault', '([\\s\\S]*)\\((.*)\\)', 'org.eclipse.jgit.api.PullCommandWithRebaseTest')","[205872, 212884]"
"('Description.java', 'org.junit.runner.Description', 'methodAndClassNamePatternGroupOrDefault', '([\\s\\S]*)\\((.*)\\)', 'testInvalidTreeModeNotSupportedMode1(org.eclipse.jgit.lib.ObjectCheckerTest)')","[121154, 123249]"
"('Description.java', 'org.junit.runner.Description', 'methodAndClassNamePatternGroupOrDefault', '([\\s\\S]*)\\((.*)\\)', 'testOnlyOption_f1_1_f2_14_d(org.eclipse.jgit.api.CommitOnlyTest)')","[237812, 239922]"
"('Description.java', 'org.junit.runner.Description', 'methodAndClassNamePatternGroupOrDefault', '([\\s\\S]*)\\((.*)\\)', 'testACommitWithBug_SubButNoBody(org.eclipse.jgit.util.ChangeIdUtilTest)')","[186029, 186798]"
"('Description.java', 'org.junit.runner.Description', 'methodAndClassNamePatternGroupOrDefault', '([\\s\\S]*)\\((.*)\\)', 'testRebaseInteractiveMultipleSquash(org.eclipse.jgit.api.RebaseCommandTest)')","[217354, 218828]"
"('URIish.java', 'org.eclipse.jgit.transport.URIish', '<init>', '^([a-z][a-z0-9+-]+)://(?:(?:([^/:@]+)(?::([^\\\\/]+))?@)?((?:[^\\\\/:]+)|(?:\\[[0-9a-f:]+\\]))(?::(\\d+))?((?:/~(?:[^\\\\/]+))?[\\\\/]))?(.+)?$', 'https://me@[::1]:80//')",[37047]
"('Description.java', 'org.junit.runner.Description', 'methodAndClassNamePatternGroupOrDefault', '([\\s\\S]*)\\((.*)\\)', 'testMaliciousGitPath3Case(org.eclipse.jgit.lib.DirCacheCheckoutMaliciousPathTest)')","[111954, 112852]"
"('Description.java', 'org.junit.runner.Description', 'methodAndClassNamePatternGroupOrDefault', '([\\s\\S]*)\\((.*)\\)', 'testAcceptTreeModeWithZero(org.eclipse.jgit.lib.ObjectCheckerTest)')","[121406, 123513]"
"('URIish.java', 'org.eclipse.jgit.transport.URIish', '<init>', '^([a-z][a-z0-9+-]+)://(?:(?:([^/:@]+)(?::([^\\\\/]+))?@)?((?:[^\\\\/:]+)|(?:\\[[0-9a-f:]+\\]))(?::(\\d+))?((?:/~(?:[^\\\\/]+))?[\\\\/]))?(.+)?$', 'ssh+git://me:wtf@1.2.3.4:1234/D:/x')",[14626]
"('Description.java', 'org.junit.runner.Description', 'methodAndClassNamePatternGroupOrDefault', '([\\s\\S]*)\\((.*)\\)', 'testFindRemoteRefUpdatesTwoRefSpecs(org.eclipse.jgit.transport.TransportTest)')","[71465, 71634]"
"('Description.java', 'org.junit.runner.Description', 'methodAndClassNamePatternGroupOrDefault', '([\\s\\S]*)\\((.*)\\)', 'testParse_ShortLineOnlyEmbeddedAndEndingLF(org.eclipse.jgit.revwalk.RevTagParseTest)')","[80354, 80769]"
"('Description.java', 'org.junit.runner.Description', 'methodAndClassNamePatternGroupOrDefault', '([\\s\\S]*)\\((.*)\\)', 'testBackup(org.eclipse.jgit.transport.RemoteConfigTest)')","[2108, 3447]"
"('Description.java', 'org.junit.runner.Description', 'methodAndClassNamePatternGroupOrDefault', '([\\s\\S]*)\\((.*)\\)', 'org.eclipse.jgit.api.CheckoutCommandTest')","[206671, 213435]"
"('ChangeIdUtil.java', 'org.eclipse.jgit.util.ChangeIdUtil', 'indexOfChangeId', '(^Change-Id: *I[a-f0-9]{40}$)', 'oneliner followed by blank')",[187716]
"('URIish.java', 'org.eclipse.jgit.transport.URIish', '<init>', '^([a-z][a-z0-9+-]+)://(?:(?:([^/:@]+)(?::([^\\\\/]+))?@)?((?:[^\\\\/:]+)|(?:\\[[0-9a-f:]+\\]))(?::(\\d+))?((?:/~(?:[^\\\\/]+))?[\\\\/]))?(.+)?$', 'https://lusr\\example:wtf@1.2.3.4:80//abc')",[25457]
"('Description.java', 'org.junit.runner.Description', 'methodAndClassNamePatternGroupOrDefault', '([\\s\\S]*)\\((.*)\\)', 'testMixedGroupCase1[OldRule? false](org.eclipse.jgit.ignore.IgnoreRuleSpecialCasesTest)')","[146099, 153204]"
"('Description.java', 'org.junit.runner.Description', 'methodAndClassNamePatternGroupOrDefault', '([\\s\\S]*)\\((.*)\\)', 'testPrintGroupCase3[OldRule? false](org.eclipse.jgit.ignore.IgnoreRuleSpecialCasesTest)')","[148008, 155113]"
"('Description.java', 'org.junit.runner.Description', 'methodAndClassNamePatternGroupOrDefault', '([\\s\\S]*)\\((.*)\\)', 'testPathsResetWithRef(org.eclipse.jgit.api.ResetCommandTest)')","[204520, 204866]"
"('Description.java', 'org.junit.runner.Description', 'methodAndClassNamePatternGroupOrDefault', '([\\s\\S]*)\\((.*)\\)', 'testCheckoutOutChangesAutoCRLFfalse(org.eclipse.jgit.lib.DirCacheCheckoutTest)')","[116494, 117468]"
"('URIish.java', 'org.eclipse.jgit.transport.URIish', '<init>', '^(file):([\\\\/](?![\\\\/])((?:[A-Za-z]:)?[\\\\/]?(?:(?:[^\\\\/]+[\\\\/]+)*[^\\\\/]+[\\\\/]*)))$', 'ssh://lusr\\example@[::1]/D:\\x')","[42498, 42682]"
"('Description.java', 'org.junit.runner.Description', 'methodAndClassNamePatternGroupOrDefault', '([\\s\\S]*)\\((.*)\\)', 'testCloneRepositoryWithBranch(org.eclipse.jgit.api.CloneCommandTest)')","[203834, 204072]"
"('Description.java', 'org.junit.runner.Description', 'methodAndClassNamePatternGroupOrDefault', '([\\s\\S]*)\\((.*)\\)', 'testMixedGroupCase8[OldRule? true](org.eclipse.jgit.ignore.IgnoreRuleSpecialCasesTest)')","[149823, 156907]"
"('Description.java', 'org.junit.runner.Description', 'methodAndClassNamePatternGroupOrDefault', '([\\s\\S]*)\\((.*)\\)', 'testLowerGroupCase5(org.eclipse.jgit.fnmatch.FileNameMatcherTest)')","[101797, 105095]"
"('URIish.java', 'org.eclipse.jgit.transport.URIish', '<init>', '^([a-z][a-z0-9+-]+)://(?:(?:([^/:@]+)(?::([^\\\\/]+))?@)?((?:[^\\\\/:]+)|(?:\\[[0-9a-f:]+\\]))(?::(\\d+))?((?:/~(?:[^\\\\/]+))?[\\\\/]))?(.+)?$', 'file:///home/m y')","[67706, 67752]"
"('URIish.java', 'org.eclipse.jgit.transport.URIish', '<init>', '^(file):([\\\\/](?![\\\\/])((?:[A-Za-z]:)?[\\\\/]?(?:(?:[^\\\\/]+[\\\\/]+)*[^\\\\/]+[\\\\/]*)))$', 'file:///tmp/jgit_test_4757869241683822401_tmp/tmp_7198850080551859564/.git/')",[128213]
"('Description.java', 'org.junit.runner.Description', 'methodAndClassNamePatternGroupOrDefault', '([\\s\\S]*)\\((.*)\\)', 'testCreateFileHeaderForRenameWithoutContentChange(org.eclipse.jgit.diff.DiffFormatterTest)')","[96021, 96282]"
"('URIish.java', 'org.eclipse.jgit.transport.URIish', '<init>', '^([a-z][a-z0-9+-]+)://(?:(?:([^/:@]+)(?::([^\\\\/]+))?@)?((?:[^\\\\/:]+)|(?:\\[[0-9a-f:]+\\]))(?::(\\d+))?((?:/~(?:[^\\\\/]+))?[\\\\/]))?(.+)?$', 'file:///tmp/jgit_test_5920102574607815165_tmp/tmp_7490007573307047225/.git/')",[108157]
"('URIish.java', 'org.eclipse.jgit.transport.URIish', '<init>', '^(file):([\\\\/](?![\\\\/])((?:[A-Za-z]:)?[\\\\/]?(?:(?:[^\\\\/]+[\\\\/]+)*[^\\\\/]+[\\\\/]*)))$', 'https://l usr\\example.com:wtf@[::1]:1234/D:/x')",[24560]
"('URIish.java', 'org.eclipse.jgit.transport.URIish', '<init>', '^([a-z][a-z0-9+-]+)://(?:(?:([^/:@]+)(?::([^\\\\/]+))?@)?((?:[^\\\\/:]+)|(?:\\[[0-9a-f:]+\\]))(?::(\\d+))?((?:/~(?:[^\\\\/]+))?[\\\\/]))?(.+)?$', 'file:///tmp/jgit_test_8673060127327244441_tmp/tmp_6002186741684854096.git/')","[210489, 210545]"
"('URIish.java', 'org.eclipse.jgit.transport.URIish', '<init>', '^(file):([\\\\/](?![\\\\/])((?:[A-Za-z]:)?[\\\\/]?(?:(?:[^\\\\/]+[\\\\/]+)*[^\\\\/]+[\\\\/]*)))$', 'http://l usr\\example.com@example.com:1234//abc')",[33942]
"('Description.java', 'org.junit.runner.Description', 'methodAndClassNamePatternGroupOrDefault', '([\\s\\S]*)\\((.*)\\)', 'testNoPatterns(org.eclipse.jgit.ignore.IgnoreNodeTest)')","[140668, 140974]"
"('URIish.java', 'org.eclipse.jgit.transport.URIish', '<init>', '^([a-z][a-z0-9+-]+)://(?:(?:([^/:@]+)(?::([^\\\\/]+))?@)?((?:[^\\\\/:]+)|(?:\\[[0-9a-f:]+\\]))(?::(\\d+))?((?:/~(?:[^\\\\/]+))?[\\\\/]))?(.+)?$', 'http://lusr\\example@1.2.3.4:1234/D:\\x')",[35529]
"('URIish.java', 'org.eclipse.jgit.transport.URIish', '<init>', '^([a-z][a-z0-9+-]+)://(?:(?:([^/:@]+)(?::([^\\\\/]+))?@)?((?:[^\\\\/:]+)|(?:\\[[0-9a-f:]+\\]))(?::(\\d+))?((?:/~(?:[^\\\\/]+))?[\\\\/]))?(.+)?$', 'ssh://lusr\\example:wtf@example.com:80//abc')",[12618]
"('URIish.java', 'org.eclipse.jgit.transport.URIish', '<init>', '^([a-z][a-z0-9+-]+)://(?:(?:([^/:@]+)(?::([^\\\\/]+))?@)?((?:[^\\\\/:]+)|(?:\\[[0-9a-f:]+\\]))(?::(\\d+))?((?:/~(?:[^\\\\/]+))?[\\\\/]))?(.+)?$', 'ssh://lusr\\example@example.com/D:\\x')","[41785, 41969]"
"('Description.java', 'org.junit.runner.Description', 'methodAndClassNamePatternGroupOrDefault', '([\\s\\S]*)\\((.*)\\)', 'testDontOverwriteDirtyFile(org.eclipse.jgit.lib.DirCacheCheckoutTest)')","[116242, 117204]"
"('QuotedString.java', 'org.eclipse.jgit.util.QuotedString$BourneUserPathStyle', 'quote', '^~[A-Za-z0-9_-]*/.*$', '!')","[193744, 193769]"
"('URIish.java', 'org.eclipse.jgit.transport.URIish', '<init>', '^([a-z][a-z0-9+-]+)://(?:(?:([^/:@]+)(?::([^\\\\/]+))?@)?((?:[^\\\\/:]+)|(?:\\[[0-9a-f:]+\\]))(?::(\\d+))?((?:/~(?:[^\\\\/]+))?[\\\\/]))?(.+)?$', 'ssh://1.2.3.4//')","[53055, 53239, 54159, 54343, 55263, 55447]"
"('Description.java', 'org.junit.runner.Description', 'methodAndClassNamePatternGroupOrDefault', '([\\s\\S]*)\\((.*)\\)', 'testLineDelimiter(org.eclipse.jgit.diff.RawTextTest)')","[96556, 96772]"
"('Description.java', 'org.junit.runner.Description', 'methodAndClassNamePatternGroupOrDefault', '([\\s\\S]*)\\((.*)\\)', 'org.eclipse.jgit.lib.ReflogConfigTest')","[113483, 113549]"
"('Description.java', 'org.junit.runner.Description', 'methodAndClassNamePatternGroupOrDefault', '([\\s\\S]*)\\((.*)\\)', 'testAddRepoManifest(org.eclipse.jgit.gitrepo.RepoCommandTest)')","[139883, 140182]"
"('Description.java', 'org.junit.runner.Description', 'methodAndClassNamePatternGroupOrDefault', '([\\s\\S]*)\\((.*)\\)', 'testEmpty_FromByteArray(org.eclipse.jgit.lib.AbbreviatedObjectIdTest)')","[114830, 115380]"
"('Description.java', 'org.junit.runner.Description', 'methodAndClassNamePatternGroupOrDefault', '([\\s\\S]*)\\((.*)\\)', 'testAsterisk[OldRule? true](org.eclipse.jgit.ignore.FastIgnoreRuleTest)')","[164454, 165190]"
"('Description.java', 'org.junit.runner.Description', 'methodAndClassNamePatternGroupOrDefault', '([\\s\\S]*)\\((.*)\\)', 'testGraphGroupCase0[OldRule? true](org.eclipse.jgit.ignore.IgnoreRuleSpecialCasesTest)')","[149892, 156976]"
"('Description.java', 'org.junit.runner.Description', 'methodAndClassNamePatternGroupOrDefault', '([\\s\\S]*)\\((.*)\\)', 'testRenameInSubDir(org.eclipse.jgit.api.BlameCommandTest)')","[244495, 244879]"
"('Description.java', 'org.junit.runner.Description', 'methodAndClassNamePatternGroupOrDefault', '([\\s\\S]*)\\((.*)\\)', 'testSpecialGroupCase5(org.eclipse.jgit.fnmatch.FileNameMatcherTest)')","[101020, 104281]"
"('URIish.java', 'org.eclipse.jgit.transport.URIish', '<init>', '^(file):([\\\\/](?![\\\\/])((?:[A-Za-z]:)?[\\\\/]?(?:(?:[^\\\\/]+[\\\\/]+)*[^\\\\/]+[\\\\/]*)))$', 'http://l usr\\example.com:wtf@[::1]:80/D:\\x')",[21478]
"('Description.java', 'org.junit.runner.Description', 'methodAndClassNamePatternGroupOrDefault', '([\\s\\S]*)\\((.*)\\)', 'testDistance_past_root(org.eclipse.jgit.lib.RepositoryResolveTest)')","[125239, 125706]"
"('FastIgnoreRule.java', 'org.eclipse.jgit.ignore.FastIgnoreRule', 'isMatch', '.r[a-c]', '1ra')",[145001]
"('URIish.java', 'org.eclipse.jgit.transport.URIish', '<init>', '^([a-z][a-z0-9+-]+)://(?:(?:([^/:@]+)(?::([^\\\\/]+))?@)?((?:[^\\\\/:]+)|(?:\\[[0-9a-f:]+\\]))(?::(\\d+))?((?:/~(?:[^\\\\/]+))?[\\\\/]))?(.+)?$', '/tmp/jgit_test_5112799029350695586_tmp/tmp_3931614780195894737.git')",[74733]
"('Description.java', 'org.junit.runner.Description', 'methodAndClassNamePatternGroupOrDefault', '([\\s\\S]*)\\((.*)\\)', 'testCacheOpen(org.eclipse.jgit.lib.RepositoryCacheTest)')","[111385, 111515]"
"('URIish.java', 'org.eclipse.jgit.transport.URIish', '<init>', '^(?:([^/:@]+)(?::([^\\\\/]+))?@)?([^\\\\/:]{2,}):([\\\\/](?:(?:[^\\\\/]+[\\\\/]+)*[^\\\\/]+[\\\\/]*))$', '/abc.git')",[66349]
"('URIish.java', 'org.eclipse.jgit.transport.URIish', '<init>', '^(file):([\\\\/](?![\\\\/])((?:[A-Za-z]:)?[\\\\/]?(?:(?:[^\\\\/]+[\\\\/]+)*[^\\\\/]+[\\\\/]*)))$', 'file:///tmp/jgit_test_7680982075725649689_tmp/tmp_7673010578674662223')",[201148]
"('Description.java', 'org.junit.runner.Description', 'methodAndClassNamePatternGroupOrDefault', '([\\s\\S]*)\\((.*)\\)', 'testUpperGroupCase5[OldRule? true](org.eclipse.jgit.ignore.IgnoreRuleSpecialCasesTest)')","[151870, 158954]"
"('Description.java', 'org.junit.runner.Description', 'methodAndClassNamePatternGroupOrDefault', '([\\s\\S]*)\\((.*)\\)', 'testFilter_NOT_ALL(org.eclipse.jgit.revwalk.RevWalkFilterTest)')","[83125, 83444]"
"('Description.java', 'org.junit.runner.Description', 'methodAndClassNamePatternGroupOrDefault', '([\\s\\S]*)\\((.*)\\)', 'org.eclipse.jgit.revplot.AbstractPlotRendererTest')","[197913, 198002]"
"('Description.java', 'org.junit.runner.Description', 'methodAndClassNamePatternGroupOrDefault', '([\\s\\S]*)\\((.*)\\)', 'testCreateEmpty(org.eclipse.jgit.transport.RefSpecTest)')","[13415, 14988]"
"('URIish.java', 'org.eclipse.jgit.transport.URIish', '<init>', '^([a-z][a-z0-9+-]+)://(?:(?:([^/:@]+)(?::([^\\\\/]+))?@)?((?:[^\\\\/:]+)|(?:\\[[0-9a-f:]+\\]))(?::(\\d+))?((?:/~(?:[^\\\\/]+))?[\\\\/]))?(.+)?$', 'file:///tmp/jgit_test_5055048526053498016_tmp/tmp_2027499772864651717/.git/')","[177323, 179026]"
"('URIish.java', 'org.eclipse.jgit.transport.URIish', '<init>', '^(file):([\\\\/](?![\\\\/])((?:[A-Za-z]:)?[\\\\/]?(?:(?:[^\\\\/]+[\\\\/]+)*[^\\\\/]+[\\\\/]*)))$', 'file:/tmp/jgit_test_9002537952631302656_tmp/tmp_9121310160384659146/.git/')",[134050]
"('Description.java', 'org.junit.runner.Description', 'methodAndClassNamePatternGroupOrDefault', '([\\s\\S]*)\\((.*)\\)', 'dontPackHEAD_nonBare(org.eclipse.jgit.internal.storage.file.GcPackRefsTest)')","[252159, 252287]"
"('Description.java', 'org.junit.runner.Description', 'methodAndClassNamePatternGroupOrDefault', '([\\s\\S]*)\\((.*)\\)', 'testGetValidWithSlashDotGitSlashHumanishName(org.eclipse.jgit.transport.URIishTest)')","[1919, 4684]"
"('URIish.java', 'org.eclipse.jgit.transport.URIish', '<init>', '^(file):([\\\\/](?![\\\\/])((?:[A-Za-z]:)?[\\\\/]?(?:(?:[^\\\\/]+[\\\\/]+)*[^\\\\/]+[\\\\/]*)))$', 'https://l usr\\example.com@[::1]//abc')","[51238, 51422]"
"('URIish.java', 'org.eclipse.jgit.transport.URIish', '<init>', '^(file):([\\\\/](?![\\\\/])((?:[A-Za-z]:)?[\\\\/]?(?:(?:[^\\\\/]+[\\\\/]+)*[^\\\\/]+[\\\\/]*)))$', 'ssh+git://lusr\\example:wtf@example.com:80//')",[17262]
"('Description.java', 'org.junit.runner.Description', 'methodAndClassNamePatternGroupOrDefault', '([\\s\\S]*)\\((.*)\\)', 'testInvalidTreeNameIsMixedCaseGitMacOS(org.eclipse.jgit.lib.ObjectCheckerTest)')","[121133, 123227]"
"('URIish.java', 'org.eclipse.jgit.transport.URIish', '<init>', '^([a-z][a-z0-9+-]+)://(?:(?:([^/:@]+)(?::([^\\\\/]+))?@)?((?:[^\\\\/:]+)|(?:\\[[0-9a-f:]+\\]))(?::(\\d+))?((?:/~(?:[^\\\\/]+))?[\\\\/]))?(.+)?$', 'https://me:wtf@[::1]:1234/D:\\x')",[23525]
"('Description.java', 'org.junit.runner.Description', 'methodAndClassNamePatternGroupOrDefault', '([\\s\\S]*)\\((.*)\\)', 'repositoryWithNoSubmodules(org.eclipse.jgit.submodule.SubmoduleInitTest)')","[100704, 100858]"
"('Description.java', 'org.junit.runner.Description', 'methodAndClassNamePatternGroupOrDefault', '([\\s\\S]*)\\((.*)\\)', 'testQuote_Empty(org.eclipse.jgit.util.QuotedStringBourneUserPathStyleTest)')","[192597, 192858]"
"('Description.java', 'org.junit.runner.Description', 'methodAndClassNamePatternGroupOrDefault', '([\\s\\S]*)\\((.*)\\)', 'testFileInFolderCommittedDeletedCommittedIgnoredComparedWithInitialCommit(org.eclipse.jgit.treewalk.filter.IndexDiffFilterTest)')","[136941, 137757]"
"('URIish.java', 'org.eclipse.jgit.transport.URIish', '<init>', '^(file):([\\\\/](?![\\\\/])((?:[A-Za-z]:)?[\\\\/]?(?:(?:[^\\\\/]+[\\\\/]+)*[^\\\\/]+[\\\\/]*)))$', 'ssh://lusr\\example:wtf@1.2.3.4:1234/D:\\x')",[12934]
"('URIish.java', 'org.eclipse.jgit.transport.URIish', '<init>', '^(file):([\\\\/](?![\\\\/])((?:[A-Za-z]:)?[\\\\/]?(?:(?:[^\\\\/]+[\\\\/]+)*[^\\\\/]+[\\\\/]*)))$', 'ssh+git://me:wtf@example.com:1234//abc')",[13767]
"('URIish.java', 'org.eclipse.jgit.transport.URIish', '<init>', '^([a-z][a-z0-9+-]+)://(?:(?:([^/:@]+)(?::([^\\\\/]+))?@)?((?:[^\\\\/:]+)|(?:\\[[0-9a-f:]+\\]))(?::(\\d+))?((?:/~(?:[^\\\\/]+))?[\\\\/]))?(.+)?$', 'ssh://me@[::1]/D:/x')","[40267, 40451]"
"('Description.java', 'org.junit.runner.Description', 'methodAndClassNamePatternGroupOrDefault', '([\\s\\S]*)\\((.*)\\)', 'test5(org.eclipse.jgit.revwalk.RevWalkPathFilter6012Test)')","[85783, 85935]"
"('ChangeIdUtil.java', 'org.eclipse.jgit.util.ChangeIdUtil', 'indexOfChangeId', '(^Change-Id: *I[a-f0-9]{40}$)', 'http://example.com/ fixes this')",[189853]
"('URIish.java', 'org.eclipse.jgit.transport.URIish', '<init>', '^([a-z][a-z0-9+-]+)://(?:(?:([^/:@]+)(?::([^\\\\/]+))?@)?((?:[^\\\\/:]+)|(?:\\[[0-9a-f:]+\\]))(?::(\\d+))?((?:/~(?:[^\\\\/]+))?[\\\\/]))?(.+)?$', 'http://me@example.com:80//abc')",[33045]
"('Description.java', 'org.junit.runner.Description', 'methodAndClassNamePatternGroupOrDefault', '([\\s\\S]*)\\((.*)\\)', 'testHardReset(org.eclipse.jgit.api.ResetCommandTest)')","[204457, 204800]"
"('URIish.java', 'org.eclipse.jgit.transport.URIish', 'getHumanishName', '^([\\\\/]?((?:[A-Za-z]:)?[\\\\/]?(?:(?:[^\\\\/]+[\\\\/]+)*[^\\\\/]+[\\\\/]*)))$', '/a/b/c.git')",[6633]
"('Description.java', 'org.junit.runner.Description', 'methodAndClassNamePatternGroupOrDefault', '([\\s\\S]*)\\((.*)\\)', 'testPullWithMergeConfig(org.eclipse.jgit.api.PullCommandTest)')","[220840, 221189]"
"('Description.java', 'org.junit.runner.Description', 'methodAndClassNamePatternGroupOrDefault', '([\\s\\S]*)\\((.*)\\)', 'testSpi(org.eclipse.jgit.transport.TransportTest)')","[71486, 71656]"
"('Description.java', 'org.junit.runner.Description', 'methodAndClassNamePatternGroupOrDefault', '([\\s\\S]*)\\((.*)\\)', 'testDigitGroupCase2(org.eclipse.jgit.fnmatch.FileNameMatcherTest)')","[102469, 105799]"
"('URIish.java', 'org.eclipse.jgit.transport.URIish', '<init>', '^(file):([\\\\/](?![\\\\/])((?:[A-Za-z]:)?[\\\\/]?(?:(?:[^\\\\/]+[\\\\/]+)*[^\\\\/]+[\\\\/]*)))$', 'file:///tmp/jgit_test_3047862731010516352_tmp/tmp_4732003647806853687/.git/')","[196859, 197811]"
"('URIish.java', 'org.eclipse.jgit.transport.URIish', '<init>', '^([a-z][a-z0-9+-]+)://(?:(?:([^/:@]+)(?::([^\\\\/]+))?@)?((?:[^\\\\/:]+)|(?:\\[[0-9a-f:]+\\]))(?::(\\d+))?((?:/~(?:[^\\\\/]+))?[\\\\/]))?(.+)?$', 'file:///tmp/jgit_test_3716850732712849590_tmp/tmp_3750113796332842125')",[72891]
"('URIish.java', 'org.eclipse.jgit.transport.URIish', '<init>', '^(file):([\\\\/](?![\\\\/])((?:[A-Za-z]:)?[\\\\/]?(?:(?:[^\\\\/]+[\\\\/]+)*[^\\\\/]+[\\\\/]*)))$', 'ssh+git://me:wtf@[::1]:80//')",[15415]
"('Description.java', 'org.junit.runner.Description', 'methodAndClassNamePatternGroupOrDefault', '([\\s\\S]*)\\((.*)\\)', 'testDotAsteriskMatch[OldRule? true](org.eclipse.jgit.ignore.FastIgnoreRuleTest)')","[164477, 165213]"
"('Description.java', 'org.junit.runner.Description', 'methodAndClassNamePatternGroupOrDefault', '([\\s\\S]*)\\((.*)\\)', 'test2(org.eclipse.jgit.transport.PackParserTest)')","[72071, 72374]"
"('URIish.java', 'org.eclipse.jgit.transport.URIish', '<init>', '^([a-z][a-z0-9+-]+)://(?:(?:([^/:@]+)(?::([^\\\\/]+))?@)?((?:[^\\\\/:]+)|(?:\\[[0-9a-f:]+\\]))(?::(\\d+))?((?:/~(?:[^\\\\/]+))?[\\\\/]))?(.+)?$', 'ssh+git://lusr\\example@[::1]//abc')","[45741, 45925]"
"('Description.java', 'org.junit.runner.Description', 'methodAndClassNamePatternGroupOrDefault', '([\\s\\S]*)\\((.*)\\)', 'testFillToHighMarkAll(org.eclipse.jgit.revwalk.RevCommitListTest)')","[81020, 81173]"
"('URIish.java', 'org.eclipse.jgit.transport.URIish', '<init>', '^(file):([\\\\/](?![\\\\/])((?:[A-Za-z]:)?[\\\\/]?(?:(?:[^\\\\/]+[\\\\/]+)*[^\\\\/]+[\\\\/]*)))$', 'file:///tmp/jgit_test_5759483036504177498_tmp/tmp_2056104723408913642/.git/')",[203518]
"('URIish.java', 'org.eclipse.jgit.transport.URIish', '<init>', '^(?:([^/:@]+)(?::([^\\\\/]+))?@)?((?:[^\\\\/:]+)|(?:\\[[0-9a-f:]+\\])):((?:(?:/~(?:[^\\\\/]+))[\\\\/])?(?:(?:[^\\\\/]+[\\\\/]+)*[^\\\\/]+[\\\\/]*))$', '/tmp/jgit_test_1455034780842305248_tmp/tmp_3250047937077610167')","[232631, 232766, 232954]"
"('URIish.java', 'org.eclipse.jgit.transport.URIish', '<init>', '^([a-z][a-z0-9+-]+)://(?:(?:([^/:@]+)(?::([^\\\\/]+))?@)?((?:[^\\\\/:]+)|(?:\\[[0-9a-f:]+\\]))(?::(\\d+))?((?:/~(?:[^\\\\/]+))?[\\\\/]))?(.+)?$', 'ssh://lusr\\example:wtf@1.2.3.4:80/D:/x')",[13095]
"('Description.java', 'org.junit.runner.Description', 'methodAndClassNamePatternGroupOrDefault', '([\\s\\S]*)\\((.*)\\)', 'testEscapedBracket4[OldRule? true](org.eclipse.jgit.ignore.IgnoreRuleSpecialCasesTest)')","[152744, 159828]"
"('Description.java', 'org.junit.runner.Description', 'methodAndClassNamePatternGroupOrDefault', '([\\s\\S]*)\\((.*)\\)', 'testGetEntryContentLength(org.eclipse.jgit.treewalk.FileTreeIteratorTest)')","[131501, 131852]"
"('Description.java', 'org.junit.runner.Description', 'methodAndClassNamePatternGroupOrDefault', '([\\s\\S]*)\\((.*)\\)', 'defaultFmt(org.eclipse.jgit.util.GitDateParserTest)')","[182446, 182729]"
"('URIish.java', 'org.eclipse.jgit.transport.URIish', '<init>', '^([a-z][a-z0-9+-]+)://(?:(?:([^/:@]+)(?::([^\\\\/]+))?@)?((?:[^\\\\/:]+)|(?:\\[[0-9a-f:]+\\]))(?::(\\d+))?((?:/~(?:[^\\\\/]+))?[\\\\/]))?(.+)?$', 'http://l usr\\example.com:wtf@[::1]:1234//')",[21179]
"('URIish.java', 'org.eclipse.jgit.transport.URIish', '<init>', '^(file):([\\\\/](?![\\\\/])((?:[A-Za-z]:)?[\\\\/]?(?:(?:[^\\\\/]+[\\\\/]+)*[^\\\\/]+[\\\\/]*)))$', 'ssh://%3ax%25:%40%41x@example.com:33/some%c3%a5/p%20a th')","[67591, 67637]"
"('Description.java', 'org.junit.runner.Description', 'methodAndClassNamePatternGroupOrDefault', '([\\s\\S]*)\\((.*)\\)', 'testNegativeContextFails(org.eclipse.jgit.diff.DiffFormatterReflowTest)')","[94225, 94436]"
"('Description.java', 'org.junit.runner.Description', 'methodAndClassNamePatternGroupOrDefault', '([\\s\\S]*)\\((.*)\\)', 'testOnlyOption_f1_2_e(org.eclipse.jgit.api.CommitOnlyTest)')","[236122, 238184]"
"('Description.java', 'org.junit.runner.Description', 'methodAndClassNamePatternGroupOrDefault', '([\\s\\S]*)\\((.*)\\)', 'testObjectMovedToNewPack2(org.eclipse.jgit.internal.storage.file.ConcurrentRepackTest)')","[252578, 252664]"
"('URIish.java', 'org.eclipse.jgit.transport.URIish', '<init>', '^(file):([\\\\/](?![\\\\/])((?:[A-Za-z]:)?[\\\\/]?(?:(?:[^\\\\/]+[\\\\/]+)*[^\\\\/]+[\\\\/]*)))$', 'ssh://me@[::1]:1234//abc')",[26887]
"('Description.java', 'org.junit.runner.Description', 'methodAndClassNamePatternGroupOrDefault', '([\\s\\S]*)\\((.*)\\)', 'testMixedReset(org.eclipse.jgit.api.ResetCommandTest)')","[204394, 204734]"
"('Description.java', 'org.junit.runner.Description', 'methodAndClassNamePatternGroupOrDefault', '([\\s\\S]*)\\((.*)\\)', 'testNoSubtree_NoTreeWalk(org.eclipse.jgit.dircache.DirCacheIteratorTest)')","[92582, 92822]"
"('Description.java', 'org.junit.runner.Description', 'methodAndClassNamePatternGroupOrDefault', '([\\s\\S]*)\\((.*)\\)', 'testGetRefs_InvalidName(org.eclipse.jgit.internal.storage.file.RefDirectoryTest)')","[258169, 259364]"
"('ChangeIdUtil.java', 'org.eclipse.jgit.util.ChangeIdUtil', 'indexOfChangeId', '(^Change-Id: *I[a-f0-9]{40}$)', 'Bug: 33')","[186898, 190793, 191287, 191673, 191750]"
"('Description.java', 'org.junit.runner.Description', 'methodAndClassNamePatternGroupOrDefault', '([\\s\\S]*)\\((.*)\\)', 'org.eclipse.jgit.lib.ObjectLoaderTest')","[119233, 119428]"
"('Description.java', 'org.junit.runner.Description', 'methodAndClassNamePatternGroupOrDefault', '([\\s\\S]*)\\((.*)\\)', 'testMixedGroupCase3[OldRule? false](org.eclipse.jgit.ignore.IgnoreRuleSpecialCasesTest)')","[146145, 153250]"
"('URIish.java', 'org.eclipse.jgit.transport.URIish', '<init>', '^(?:([^/:@]+)(?::([^\\\\/]+))?@)?((?:[^\\\\/:]+)|(?:\\[[0-9a-f:]+\\])):((?:(?:/~(?:[^\\\\/]+))[\\\\/])?(?:(?:[^\\\\/]+[\\\\/]+)*[^\\\\/]+[\\\\/]*))$', 'user@repo.or.cz:/srv/git/egit.git')",[10913]
"('Description.java', 'org.junit.runner.Description', 'methodAndClassNamePatternGroupOrDefault', '([\\s\\S]*)\\((.*)\\)', 'testPushAfterGC(org.eclipse.jgit.api.PushCommandTest)')","[202982, 203109]"
"('Description.java', 'org.junit.runner.Description', 'methodAndClassNamePatternGroupOrDefault', '([\\s\\S]*)\\((.*)\\)', 'testOneOnly(org.eclipse.jgit.treewalk.filter.InterIndexDiffFilterTest)')","[139502, 139608]"
"('URIish.java', 'org.eclipse.jgit.transport.URIish', '<init>', '^(file):([\\\\/](?![\\\\/])((?:[A-Za-z]:)?[\\\\/]?(?:(?:[^\\\\/]+[\\\\/]+)*[^\\\\/]+[\\\\/]*)))$', 'ssh+git://lusr\\example:wtf@1.2.3.4:1234/D:/x')",[17538]
"('Description.java', 'org.junit.runner.Description', 'methodAndClassNamePatternGroupOrDefault', '([\\s\\S]*)\\((.*)\\)', 'testValidHead(org.eclipse.jgit.lib.ValidRefNameTest)')","[118593, 118962]"
"('Description.java', 'org.junit.runner.Description', 'methodAndClassNamePatternGroupOrDefault', '([\\s\\S]*)\\((.*)\\)', 'testIsValidPath(org.eclipse.jgit.dircache.DirCacheEntryTest)')","[90914, 91043]"
"('Description.java', 'org.junit.runner.Description', 'methodAndClassNamePatternGroupOrDefault', '([\\s\\S]*)\\((.*)\\)', 'testIntoHeadOtherThanMaster(org.eclipse.jgit.merge.MergeMessageFormatterTest)')","[88947, 89269]"
"('URIish.java', 'org.eclipse.jgit.transport.URIish', '<init>', '^([a-z][a-z0-9+-]+)://(?:(?:([^/:@]+)(?::([^\\\\/]+))?@)?((?:[^\\\\/:]+)|(?:\\[[0-9a-f:]+\\]))(?::(\\d+))?((?:/~(?:[^\\\\/]+))?[\\\\/]))?(.+)?$', 'http://l usr\\example.com@1.2.3.4:80//')",[34471]
"('Description.java', 'org.junit.runner.Description', 'methodAndClassNamePatternGroupOrDefault', '([\\s\\S]*)\\((.*)\\)', 'testExclude(org.eclipse.jgit.internal.storage.file.PackWriterTest)')","[251260, 251706]"
"('Description.java', 'org.junit.runner.Description', 'methodAndClassNamePatternGroupOrDefault', '([\\s\\S]*)\\((.*)\\)', 'org.eclipse.jgit.submodule.SubmoduleUpdateTest')","[107618, 108268]"
"('URIish.java', 'org.eclipse.jgit.transport.URIish', '<init>', '^([a-z][a-z0-9+-]+)://(?:(?:([^/:@]+)(?::([^\\\\/]+))?@)?((?:[^\\\\/:]+)|(?:\\[[0-9a-f:]+\\]))(?::(\\d+))?((?:/~(?:[^\\\\/]+))?[\\\\/]))?(.+)?$', 'http://l usr\\example.com:wtf@[::1]:1234/D:\\x')",[21317]
"('URIish.java', 'org.eclipse.jgit.transport.URIish', '<init>', '^([a-z][a-z0-9+-]+)://(?:(?:([^/:@]+)(?::([^\\\\/]+))?@)?((?:[^\\\\/:]+)|(?:\\[[0-9a-f:]+\\]))(?::(\\d+))?((?:/~(?:[^\\\\/]+))?[\\\\/]))?(.+)?$', 'ssh+git://lusr\\example@example.com:80/D:/x')",[31987]
"('URIish.java', 'org.eclipse.jgit.transport.URIish', '<init>', '^([a-z][a-z0-9+-]+)://(?:(?:([^/:@]+)(?::([^\\\\/]+))?@)?((?:[^\\\\/:]+)|(?:\\[[0-9a-f:]+\\]))(?::(\\d+))?((?:/~(?:[^\\\\/]+))?[\\\\/]))?(.+)?$', 'http://lusr\\example@example.com:1234//abc')",[35069]
"('Description.java', 'org.junit.runner.Description', 'methodAndClassNamePatternGroupOrDefault', '([\\s\\S]*)\\((.*)\\)', 'testEntryTypeSet(org.eclipse.jgit.util.RefMapTest)')","[184182, 184664]"
"('Description.java', 'org.junit.runner.Description', 'methodAndClassNamePatternGroupOrDefault', '([\\s\\S]*)\\((.*)\\)', 'testCreateEmptyTreeIterator(org.eclipse.jgit.treewalk.AbstractTreeIteratorTest)')","[134513, 134666]"
"('URIish.java', 'org.eclipse.jgit.transport.URIish', '<init>', '^(file):([\\\\/](?![\\\\/])((?:[A-Za-z]:)?[\\\\/]?(?:(?:[^\\\\/]+[\\\\/]+)*[^\\\\/]+[\\\\/]*)))$', 'ssh+git://lusr\\example@[::1]//')","[45672, 45856]"
"('URIish.java', 'org.eclipse.jgit.transport.URIish', '<init>', '^([a-z][a-z0-9+-]+)://(?:(?:([^/:@]+)(?::([^\\\\/]+))?@)?((?:[^\\\\/:]+)|(?:\\[[0-9a-f:]+\\]))(?::(\\d+))?((?:/~(?:[^\\\\/]+))?[\\\\/]))?(.+)?$', 'ssh://me:wtf@1.2.3.4:1234//abc')",[8748]
"('Description.java', 'org.junit.runner.Description', 'methodAndClassNamePatternGroupOrDefault', '([\\s\\S]*)\\((.*)\\)', 'testSpaceGroupCase0(org.eclipse.jgit.fnmatch.FileNameMatcherTest)')","[102133, 105447]"
"('Description.java', 'org.junit.runner.Description', 'methodAndClassNamePatternGroupOrDefault', '([\\s\\S]*)\\((.*)\\)', 'unstashNoHead(org.eclipse.jgit.api.StashApplyCommandTest)')","[240811, 241362]"
"('Description.java', 'org.junit.runner.Description', 'methodAndClassNamePatternGroupOrDefault', '([\\s\\S]*)\\((.*)\\)', 'testDirectoryFileConflicts_8(org.eclipse.jgit.lib.DirCacheCheckoutTest)')","[116410, 117380]"
"('Description.java', 'org.junit.runner.Description', 'methodAndClassNamePatternGroupOrDefault', '([\\s\\S]*)\\((.*)\\)', 'repositoryWithSubmodule(org.eclipse.jgit.submodule.SubmoduleSyncTest)')","[107870, 107934]"
"('Description.java', 'org.junit.runner.Description', 'methodAndClassNamePatternGroupOrDefault', '([\\s\\S]*)\\((.*)\\)', 'testUnannotatedTagging(org.eclipse.jgit.api.TagCommandTest)')","[201847, 202155]"
"('URIish.java', 'org.eclipse.jgit.transport.URIish', '<init>', '^([a-z][a-z0-9+-]+)://(?:(?:([^/:@]+)(?::([^\\\\/]+))?@)?((?:[^\\\\/:]+)|(?:\\[[0-9a-f:]+\\]))(?::(\\d+))?((?:/~(?:[^\\\\/]+))?[\\\\/]))?(.+)?$', 'https://me@[::1]/D:\\x')","[50249, 50433]"
"('URIish.java', 'org.eclipse.jgit.transport.URIish', '<init>', '^([a-z][a-z0-9+-]+)://(?:(?:([^/:@]+)(?::([^\\\\/]+))?@)?((?:[^\\\\/:]+)|(?:\\[[0-9a-f:]+\\]))(?::(\\d+))?((?:/~(?:[^\\\\/]+))?[\\\\/]))?(.+)?$', 'ssh://lusr\\example@example.com:80//')",[28583]
"('Description.java', 'org.junit.runner.Description', 'methodAndClassNamePatternGroupOrDefault', '([\\s\\S]*)\\((.*)\\)', 'testWritePack2DeltasReuseRefs(org.eclipse.jgit.internal.storage.file.PackWriterTest)')","[251281, 251728]"
"('Description.java', 'org.junit.runner.Description', 'methodAndClassNamePatternGroupOrDefault', '([\\s\\S]*)\\((.*)\\)', 'testGetValidDotGitSlashHumanishName(org.eclipse.jgit.transport.URIishTest)')","[4224, 5498]"
"('URIish.java', 'org.eclipse.jgit.transport.URIish', '<init>', '^(?:([^/:@]+)(?::([^\\\\/]+))?@)?([^\\\\/:]{2,}):([\\\\/](?:(?:[^\\\\/]+[\\\\/]+)*[^\\\\/]+[\\\\/]*))$', '/tmp/jgit_test_3935765607714589377_tmp/tmp_2556057231773619862/.git')","[230246, 230392]"
"('Description.java', 'org.junit.runner.Description', 'methodAndClassNamePatternGroupOrDefault', '([\\s\\S]*)\\((.*)\\)', 'testOnlyOption_f1_11_b(org.eclipse.jgit.api.CommitOnlyTest)')","[237350, 239438]"
"('URIish.java', 'org.eclipse.jgit.transport.URIish', '<init>', '^([a-z][a-z0-9+-]+)://(?:(?:([^/:@]+)(?::([^\\\\/]+))?@)?((?:[^\\\\/:]+)|(?:\\[[0-9a-f:]+\\]))(?::(\\d+))?((?:/~(?:[^\\\\/]+))?[\\\\/]))?(.+)?$', 'https://l usr\\example.com:wtf@[::1]:1234/D:\\x')",[24629]
"('URIish.java', 'org.eclipse.jgit.transport.URIish', '<init>', '^([a-z][a-z0-9+-]+)://(?:(?:([^/:@]+)(?::([^\\\\/]+))?@)?((?:[^\\\\/:]+)|(?:\\[[0-9a-f:]+\\]))(?::(\\d+))?((?:/~(?:[^\\\\/]+))?[\\\\/]))?(.+)?$', 'ssh+git://l usr\\example.com@[::1]:80/D:\\x')",[31665]
"('URIish.java', 'org.eclipse.jgit.transport.URIish', '<init>', '^(file):([\\\\/](?![\\\\/])((?:[A-Za-z]:)?[\\\\/]?(?:(?:[^\\\\/]+[\\\\/]+)*[^\\\\/]+[\\\\/]*)))$', 'https://l usr\\example.com@1.2.3.4:1234/D:\\x')",[37714]
"('Description.java', 'org.junit.runner.Description', 'methodAndClassNamePatternGroupOrDefault', '([\\s\\S]*)\\((.*)\\)', 'testPathsResetWithUnmerged(org.eclipse.jgit.api.ResetCommandTest)')","[204625, 204976]"
"('Description.java', 'org.junit.runner.Description', 'methodAndClassNamePatternGroupOrDefault', '([\\s\\S]*)\\((.*)\\)', 'testOnlyOption_f1_5_b(org.eclipse.jgit.api.CommitOnlyTest)')","[236374, 238448]"
"('Description.java', 'org.junit.runner.Description', 'methodAndClassNamePatternGroupOrDefault', '([\\s\\S]*)\\((.*)\\)', 'addSubmoduleWithExistingSubmoduleDefined(org.eclipse.jgit.submodule.SubmoduleAddTest)')","[108792, 108962]"
"('Description.java', 'org.junit.runner.Description', 'methodAndClassNamePatternGroupOrDefault', '([\\s\\S]*)\\((.*)\\)', 'testNoLockSuffix(org.eclipse.jgit.lib.ValidRefNameTest)')","[118509, 118874]"
"('Description.java', 'org.junit.runner.Description', 'methodAndClassNamePatternGroupOrDefault', '([\\s\\S]*)\\((.*)\\)', 'testBranchReflog(org.eclipse.jgit.api.ReflogCommandTest)')","[240560, 240625]"
"('URIish.java', 'org.eclipse.jgit.transport.URIish', '<init>', '^(file):([\\\\/](?![\\\\/])((?:[A-Za-z]:)?[\\\\/]?(?:(?:[^\\\\/]+[\\\\/]+)*[^\\\\/]+[\\\\/]*)))$', 'http://[::1]//abc')","[60070, 60254, 61174, 61358, 62278, 62462]"
"('URIish.java', 'org.eclipse.jgit.transport.URIish', '<init>', '^(file):([\\\\/](?![\\\\/])((?:[A-Za-z]:)?[\\\\/]?(?:(?:[^\\\\/]+[\\\\/]+)*[^\\\\/]+[\\\\/]*)))$', 'https://l usr\\example.com@1.2.3.4:80//')",[37760]
"('Description.java', 'org.junit.runner.Description', 'methodAndClassNamePatternGroupOrDefault', '([\\s\\S]*)\\((.*)\\)', 'never(org.eclipse.jgit.util.GitDateParserTest)')","[182425, 182707]"
"('Description.java', 'org.junit.runner.Description', 'methodAndClassNamePatternGroupOrDefault', '([\\s\\S]*)\\((.*)\\)', 'testRevisionBranch(org.eclipse.jgit.gitrepo.RepoCommandTest)')","[139862, 140160]"
"('Description.java', 'org.junit.runner.Description', 'methodAndClassNamePatternGroupOrDefault', '([\\s\\S]*)\\((.*)\\)', 'testPullConfigRenameLocalBranch(org.eclipse.jgit.api.BranchCommandTest)')","[227219, 227548]"
"('Description.java', 'org.junit.runner.Description', 'methodAndClassNamePatternGroupOrDefault', '([\\s\\S]*)\\((.*)\\)', 'testWrite_SmallBlocks1(org.eclipse.jgit.transport.SideBandOutputStreamTest)')","[73328, 73564]"
"('Description.java', 'org.junit.runner.Description', 'methodAndClassNamePatternGroupOrDefault', '([\\s\\S]*)\\((.*)\\)', 'testDequote_BareABCZ_OnlyBC(org.eclipse.jgit.util.QuotedStringBourneUserPathStyleTest)')","[192429, 192682]"
"('Description.java', 'org.junit.runner.Description', 'methodAndClassNamePatternGroupOrDefault', '([\\s\\S]*)\\((.*)\\)', 'testCherryPickOurCommitName(org.eclipse.jgit.api.CherryPickCommandTest)')","[232211, 232471]"
"('URIish.java', 'org.eclipse.jgit.transport.URIish', '<init>', '^(file):([\\\\/](?![\\\\/])((?:[A-Za-z]:)?[\\\\/]?(?:(?:[^\\\\/]+[\\\\/]+)*[^\\\\/]+[\\\\/]*)))$', 'ssh://user:pass@example.com:33/some/p ath')","[66188, 66234]"
"('Description.java', 'org.junit.runner.Description', 'methodAndClassNamePatternGroupOrDefault', '([\\s\\S]*)\\((.*)\\)', 'testSegmentsDoNotMatch[OldRule? true](org.eclipse.jgit.ignore.FastIgnoreRuleTest)')","[164569, 165305]"
"('Description.java', 'org.junit.runner.Description', 'methodAndClassNamePatternGroupOrDefault', '([\\s\\S]*)\\((.*)\\)', 'testTwoConflictingModifications(org.eclipse.jgit.merge.MergeAlgorithmTest)')","[87183, 87487]"
"('Description.java', 'org.junit.runner.Description', 'methodAndClassNamePatternGroupOrDefault', '([\\s\\S]*)\\((.*)\\)', 'testTwoRangesInOneGroupCase1[OldRule? true](org.eclipse.jgit.ignore.IgnoreRuleSpecialCasesTest)')","[152491, 159575]"
"('URIish.java', 'org.eclipse.jgit.transport.URIish', '<init>', '^(file):([\\\\/](?![\\\\/])((?:[A-Za-z]:)?[\\\\/]?(?:(?:[^\\\\/]+[\\\\/]+)*[^\\\\/]+[\\\\/]*)))$', 'ssh+git://l usr\\example.com@[::1]:1234/D:\\x')",[31458]
"('Description.java', 'org.junit.runner.Description', 'methodAndClassNamePatternGroupOrDefault', '([\\s\\S]*)\\((.*)\\)', 'testDirCacheSavesObjectsWithPruneNow(org.eclipse.jgit.internal.storage.file.GcDirCacheSavesObjectsTest)')","[254712, 254755]"
"('URIish.java', 'org.eclipse.jgit.transport.URIish', '<init>', '^(file):([\\\\/](?![\\\\/])((?:[A-Za-z]:)?[\\\\/]?(?:(?:[^\\\\/]+[\\\\/]+)*[^\\\\/]+[\\\\/]*)))$', 'https://lusr\\example@example.com:80//')",[38496]
"('Description.java', 'org.junit.runner.Description', 'methodAndClassNamePatternGroupOrDefault', '([\\s\\S]*)\\((.*)\\)', 'testWritePack2DeltasCRC32Copy(org.eclipse.jgit.internal.storage.file.PackWriterTest)')","[251575, 252036]"
"('URIish.java', 'org.eclipse.jgit.transport.URIish', '<init>', '^([a-z][a-z0-9+-]+)://(?:(?:([^/:@]+)(?::([^\\\\/]+))?@)?((?:[^\\\\/:]+)|(?:\\[[0-9a-f:]+\\]))(?::(\\d+))?((?:/~(?:[^\\\\/]+))?[\\\\/]))?(.+)?$', 'ssh+git://lusr\\example:wtf@[::1]:80/D:\\x')",[18552]
"('Description.java', 'org.junit.runner.Description', 'methodAndClassNamePatternGroupOrDefault', '([\\s\\S]*)\\((.*)\\)', 'org.eclipse.jgit.nls.NLSTest')","[276, 830]"
"('Description.java', 'org.junit.runner.Description', 'methodAndClassNamePatternGroupOrDefault', '([\\s\\S]*)\\((.*)\\)', 'testEncodeASCII_SimpleASCII(org.eclipse.jgit.lib.ConstantsEncodingTest)')","[118109, 118216]"
"('URIish.java', 'org.eclipse.jgit.transport.URIish', '<init>', '^(file):([\\\\/](?![\\\\/])((?:[A-Za-z]:)?[\\\\/]?(?:(?:[^\\\\/]+[\\\\/]+)*[^\\\\/]+[\\\\/]*)))$', 'https://lusr\\example:wtf@1.2.3.4:1234//abc')",[25250]
"('Description.java', 'org.junit.runner.Description', 'methodAndClassNamePatternGroupOrDefault', '([\\s\\S]*)\\((.*)\\)', 'null')","[17, 137, 257, 641, 1047, 1209, 2935, 12331, 17946, 26233, 67792, 71425, 71941, 73204, 73736, 73881, 74900, 75303, 75706, 76324, 76895, 77083, 77357, 78233, 78335, 78887, 79181, 79494, 79662, 79999, 80875, 81570, 81844, 82161, 82349, 82709, 82897, 83022, 83726, 83930, 84982, 85342, 85659, 86019, 86336, 86954, 87615, 87975, 88679, 88781, 89693, 89838, 90370, 90730, 90832, 91149, 91337, 91654, 92100, 92374, 92906, 93008, 94185, 94674, 94971, 95049, 95238, 95813, 96411, 96877, 97796, 98136, 98258, 98403, 99623, 99768, 100538, 100875, 107599, 107830, 108285, 108731, 109225, 109612, 109864, 110052, 110240, 111282, 111599, 113464, 113566, 113926, 114286, 115420, 115866, 117860, 118048, 118322, 119112, 119214, 119445, 119590, 119735, 120396, 120799, 125115, 126176, 127593, 127824, 128926, 130447, 131065, 131167, 134368, 134728, 135002, 135104, 135421, 135523, 135840, 136544, 138237, 138425, 138785, 139145, 139462, 139759, 140397, 141116, 141306, 145199, 145645, 163841, 171505, 171736, 172053, 172499, 173521, 173783, 174558, 174918, 175407, 175800, 176160, 176391, 176493, 177363, 178282, 179066, 179340, 180476, 181051, 181239, 181685, 182217, 182835, 183324, 183555, 183743, 184748, 185151, 185296, 191970, 192201, 192389, 194013, 194115, 194346, 194534, 194851, 195077, 196039, 196399, 196587, 196942, 197894, 198019, 198528, 198969, 199544, 200458, 201215, 201534, 202195, 202942, 203259, 203668, 204291, 205853, 206652, 212269, 212963, 213452, 215706, 216342, 216487, 216589, 216914, 217251, 220548, 223402, 224364, 226525, 226756, 231468, 232024, 233387, 234095, 234310, 234677, 235623, 235788, 240006, 240268, 240499, 240687, 241954, 242545, 242808, 243301, 244350, 246005, 246279, 246897, 246999, 247316, 247461, 247821, 248009, 248326, 248686, 248917, 250051, 250368, 250599, 250724, 250932, 251057, 251136, 252098, 252415, 252517, 252748, 254484, 254672, 254817, 254919, 255623, 256198, 256472, 256703, 256934, 257079, 257310, 259734, 260137]"
"('URIish.java', 'org.eclipse.jgit.transport.URIish', '<init>', '^(file):([\\\\/](?![\\\\/])((?:[A-Za-z]:)?[\\\\/]?(?:(?:[^\\\\/]+[\\\\/]+)*[^\\\\/]+[\\\\/]*)))$', 'file:/tmp/jgit_test_3766881034479946510_tmp/tmp_3002358776781837063/.git/')",[133844]
"('URIish.java', 'org.eclipse.jgit.transport.URIish', '<init>', '^([a-z][a-z0-9+-]+)://(?:(?:([^/:@]+)(?::([^\\\\/]+))?@)?((?:[^\\\\/:]+)|(?:\\[[0-9a-f:]+\\]))(?::(\\d+))?((?:/~(?:[^\\\\/]+))?[\\\\/]))?(.+)?$', 'http://1.2.3.4/D:/x')","[59771, 59955, 60875, 61059, 61979, 62163]"
"('Description.java', 'org.junit.runner.Description', 'methodAndClassNamePatternGroupOrDefault', '([\\s\\S]*)\\((.*)\\)', 'testAddWithConflicts(org.eclipse.jgit.api.AddCommandTest)')","[234738, 235160]"
"('URIish.java', 'org.eclipse.jgit.transport.URIish', '<init>', '^(?:([^/:@]+)(?::([^\\\\/]+))?@)?((?:[^\\\\/:]+)|(?:\\[[0-9a-f:]+\\])):((?:(?:/~(?:[^\\\\/]+))[\\\\/])?(?:(?:[^\\\\/]+[\\\\/]+)*[^\\\\/]+[\\\\/]*))$', '/tmp/jgit_test_489293450821421843_tmp/tmp_6013690132655096981')","[225862, 225997, 226154]"
"('Description.java', 'org.junit.runner.Description', 'methodAndClassNamePatternGroupOrDefault', '([\\s\\S]*)\\((.*)\\)', 'testParseGitFileName_SrcFooCNonStandardPrefix(org.eclipse.jgit.patch.FileHeaderTest)')","[195453, 195911]"
"('Description.java', 'org.junit.runner.Description', 'methodAndClassNamePatternGroupOrDefault', '([\\s\\S]*)\\((.*)\\)', 'repositoryWithInitializedSubmodule(org.eclipse.jgit.submodule.SubmoduleUpdateTest)')","[107681, 107768]"
"('Description.java', 'org.junit.runner.Description', 'methodAndClassNamePatternGroupOrDefault', '([\\s\\S]*)\\((.*)\\)', 'test000_sort_05(org.eclipse.jgit.lib.T0002_TreeTest)')","[119985, 120290]"
"('Description.java', 'org.junit.runner.Description', 'methodAndClassNamePatternGroupOrDefault', '([\\s\\S]*)\\((.*)\\)', 'testTagCommit(org.eclipse.jgit.revwalk.RevTagParseTest)')","[80396, 80813]"
"('Description.java', 'org.junit.runner.Description', 'methodAndClassNamePatternGroupOrDefault', '([\\s\\S]*)\\((.*)\\)', 'testInvalidCommitInvalidParent2(org.eclipse.jgit.lib.ObjectCheckerTest)')","[121616, 123733]"
"('Description.java', 'org.junit.runner.Description', 'methodAndClassNamePatternGroupOrDefault', '([\\s\\S]*)\\((.*)\\)', 'org.eclipse.jgit.lib.ValidRefNameTest')","[118341, 119095]"
"('URIish.java', 'org.eclipse.jgit.transport.URIish', '<init>', '^(file):([\\\\/](?![\\\\/])((?:[A-Za-z]:)?[\\\\/]?(?:(?:[^\\\\/]+[\\\\/]+)*[^\\\\/]+[\\\\/]*)))$', 'ssh://l usr\\example.com@1.2.3.4:80//')",[27761]
"('URIish.java', 'org.eclipse.jgit.transport.URIish', '<init>', '^([a-z][a-z0-9+-]+)://(?:(?:([^/:@]+)(?::([^\\\\/]+))?@)?((?:[^\\\\/:]+)|(?:\\[[0-9a-f:]+\\]))(?::(\\d+))?((?:/~(?:[^\\\\/]+))?[\\\\/]))?(.+)?$', 'http://me@[::1]:80//abc')",[33781]
"('URIish.java', 'org.eclipse.jgit.transport.URIish', '<init>', '^(file):([\\\\/](?![\\\\/])((?:[A-Za-z]:)?[\\\\/]?(?:(?:[^\\\\/]+[\\\\/]+)*[^\\\\/]+[\\\\/]*)))$', 'ssh://me@example.com//')","[39416, 39600]"
"('Description.java', 'org.junit.runner.Description', 'methodAndClassNamePatternGroupOrDefault', '([\\s\\S]*)\\((.*)\\)', 'testTrivialTwoWay_ok(org.eclipse.jgit.merge.SimpleMergeTest)')","[86418, 86694]"
"('Description.java', 'org.junit.runner.Description', 'methodAndClassNamePatternGroupOrDefault', '([\\s\\S]*)\\((.*)\\)', 'org.eclipse.jgit.diff.RawTextIgnoreWhitespaceChangeTest')","[98155, 98386]"
"('URIish.java', 'org.eclipse.jgit.transport.URIish', '<init>', '^(file):([\\\\/](?![\\\\/])((?:[A-Za-z]:)?[\\\\/]?(?:(?:[^\\\\/]+[\\\\/]+)*[^\\\\/]+[\\\\/]*)))$', 'https://l usr\\example.com:wtf@1.2.3.4:1234//')",[24100]
"('URIish.java', 'org.eclipse.jgit.transport.URIish', '<init>', '^([a-z][a-z0-9+-]+)://(?:(?:([^/:@]+)(?::([^\\\\/]+))?@)?((?:[^\\\\/:]+)|(?:\\[[0-9a-f:]+\\]))(?::(\\d+))?((?:/~(?:[^\\\\/]+))?[\\\\/]))?(.+)?$', 'file:///tmp/jgit_test_4365868416132416411_tmp/tmp_5907296020383359030.git/')",[173116]
"('FastIgnoreRule.java', 'org.eclipse.jgit.ignore.FastIgnoreRule', 'isMatch', '[\\p{Punct}]', ' ')",[162112]
"('ChangeIdUtil.java', 'org.eclipse.jgit.util.ChangeIdUtil', 'indexOfChangeId', '(^Change-Id: *I[a-f0-9]{40}$)', 'Change-Id: I3b7e4e16b503ce00f07ba6ad01d97a356dad7701')","[187178, 187201, 187224, 187408, 187431, 187454, 187569, 187592, 187615, 187638]"
"('URIish.java', 'org.eclipse.jgit.transport.URIish', '<init>', '^(?:([^/:@]+)(?::([^\\\\/]+))?@)?((?:[^\\\\/:]+)|(?:\\[[0-9a-f:]+\\])):((?:(?:/~(?:[^\\\\/]+))[\\\\/])?(?:(?:[^\\\\/]+[\\\\/]+)*[^\\\\/]+[\\\\/]*))$', 'user@example.com:some/p ath')","[68458, 68527]"
"('Description.java', 'org.junit.runner.Description', 'methodAndClassNamePatternGroupOrDefault', '([\\s\\S]*)\\((.*)\\)', 'testMergeRemovingFoldersWithoutFastForward(org.eclipse.jgit.api.MergeCommandTest)')","[213660, 214572]"
"('FastIgnoreRule.java', 'org.eclipse.jgit.ignore.FastIgnoreRule', 'isMatch', '[[\\p{Print}\\p{javaDigit}\\p{javaLetter}]]', ' ')",[162502]
"('Description.java', 'org.junit.runner.Description', 'methodAndClassNamePatternGroupOrDefault', '([\\s\\S]*)\\((.*)\\)', 'repositoryWithRootLevelSubmodule(org.eclipse.jgit.submodule.SubmoduleWalkTest)')","[108451, 108647]"
"('URIish.java', 'org.eclipse.jgit.transport.URIish', '<init>', '^(file):([\\\\/](?![\\\\/])((?:[A-Za-z]:)?[\\\\/]?(?:(?:[^\\\\/]+[\\\\/]+)*[^\\\\/]+[\\\\/]*)))$', 'ssh://lusr\\example@1.2.3.4:80/D:\\x')",[29066]
"('Description.java', 'org.junit.runner.Description', 'methodAndClassNamePatternGroupOrDefault', '([\\s\\S]*)\\((.*)\\)', 'testMkdir(org.eclipse.jgit.util.FileUtilTest)')","[176554, 176892]"
"('URIish.java', 'org.eclipse.jgit.transport.URIish', '<init>', '^([a-z][a-z0-9+-]+)://(?:(?:([^/:@]+)(?::([^\\\\/]+))?@)?((?:[^\\\\/:]+)|(?:\\[[0-9a-f:]+\\]))(?::(\\d+))?((?:/~(?:[^\\\\/]+))?[\\\\/]))?(.+)?$', 'https://l usr\\example.com@example.com/D:\\x')","[50617, 50801]"
"('Description.java', 'org.junit.runner.Description', 'methodAndClassNamePatternGroupOrDefault', '([\\s\\S]*)\\((.*)\\)', 'testSquashMerge(org.eclipse.jgit.api.MergeCommandTest)')","[214017, 214946]"
"('URIish.java', 'org.eclipse.jgit.transport.URIish', '<init>', '^(file):([\\\\/](?![\\\\/])((?:[A-Za-z]:)?[\\\\/]?(?:(?:[^\\\\/]+[\\\\/]+)*[^\\\\/]+[\\\\/]*)))$', 'https://lusr\\example@example.com:1234//abc')",[38358]
"('Description.java', 'org.junit.runner.Description', 'methodAndClassNamePatternGroupOrDefault', '([\\s\\S]*)\\((.*)\\)', 'testEmpty(org.eclipse.jgit.revwalk.LIFORevQueueTest)')","[78375, 78481]"
"('Description.java', 'org.junit.runner.Description', 'methodAndClassNamePatternGroupOrDefault', '([\\s\\S]*)\\((.*)\\)', 'org.eclipse.jgit.transport.OpenSshConfigTest')","[2975, 65475]"
"('URIish.java', 'org.eclipse.jgit.transport.URIish', '<init>', '^(?:([^/:@]+)(?::([^\\\\/]+))?@)?((?:[^\\\\/:]+)|(?:\\[[0-9a-f:]+\\])):((?:(?:/~(?:[^\\\\/]+))[\\\\/])?(?:(?:[^\\\\/]+[\\\\/]+)*[^\\\\/]+[\\\\/]*))$', '/tmp/jgit_test_2065451132428062414_tmp/tmp_1493923410369301041')","[208518, 208653]"
"('Description.java', 'org.junit.runner.Description', 'methodAndClassNamePatternGroupOrDefault', '([\\s\\S]*)\\((.*)\\)', 'testEditDifferentNotes(org.eclipse.jgit.notes.NoteMapMergerTest)')","[199752, 200118]"
"('Description.java', 'org.junit.runner.Description', 'methodAndClassNamePatternGroupOrDefault', '([\\s\\S]*)\\((.*)\\)', 'testOnlyOption_f1_6_f2_14_e(org.eclipse.jgit.api.CommitOnlyTest)')","[237203, 239284]"
"('Description.java', 'org.junit.runner.Description', 'methodAndClassNamePatternGroupOrDefault', '([\\s\\S]*)\\((.*)\\)', 'testEmptyCache_CreateEmptyCacheTree(org.eclipse.jgit.dircache.DirCacheTreeTest)')","[91484, 91615]"
"('Description.java', 'org.junit.runner.Description', 'methodAndClassNamePatternGroupOrDefault', '([\\s\\S]*)\\((.*)\\)', 'org.eclipse.jgit.lib.ConfigTest')","[128945, 130430]"
"('Description.java', 'org.junit.runner.Description', 'methodAndClassNamePatternGroupOrDefault', '([\\s\\S]*)\\((.*)\\)', 'testWordroupCase1(org.eclipse.jgit.fnmatch.FileNameMatcherTest)')","[103687, 107075]"
"('Description.java', 'org.junit.runner.Description', 'methodAndClassNamePatternGroupOrDefault', '([\\s\\S]*)\\((.*)\\)', 'testAlias_BatchModeYes(org.eclipse.jgit.transport.OpenSshConfigTest)')","[3425, 3900]"
"('URIish.java', 'org.eclipse.jgit.transport.URIish', '<init>', '^([a-z][a-z0-9+-]+)://(?:(?:([^/:@]+)(?::([^\\\\/]+))?@)?((?:[^\\\\/:]+)|(?:\\[[0-9a-f:]+\\]))(?::(\\d+))?((?:/~(?:[^\\\\/]+))?[\\\\/]))?(.+)?$', 'ssh+git://lusr\\example@example.com:1234/D:/x')",[31803]
"('URIish.java', 'org.eclipse.jgit.transport.URIish', '<init>', '^(file):([\\\\/](?![\\\\/])((?:[A-Za-z]:)?[\\\\/]?(?:(?:[^\\\\/]+[\\\\/]+)*[^\\\\/]+[\\\\/]*)))$', 'https://lusr\\example@1.2.3.4//abc')","[51974, 52158]"
"('URIish.java', 'org.eclipse.jgit.transport.URIish', '<init>', '^(file):([\\\\/](?![\\\\/])((?:[A-Za-z]:)?[\\\\/]?(?:(?:[^\\\\/]+[\\\\/]+)*[^\\\\/]+[\\\\/]*)))$', 'ssh://l usr\\example.com@1.2.3.4/D:\\x')","[41026, 41210]"
"('Description.java', 'org.junit.runner.Description', 'methodAndClassNamePatternGroupOrDefault', '([\\s\\S]*)\\((.*)\\)', 'testExceptionThrown_BareRepoGetIndex(org.eclipse.jgit.internal.storage.file.RepositorySetupWorkDirTest)')","[255852, 256114]"
"('URIish.java', 'org.eclipse.jgit.transport.URIish', '<init>', '^(file):([\\\\/](?![\\\\/])((?:[A-Za-z]:)?[\\\\/]?(?:(?:[^\\\\/]+[\\\\/]+)*[^\\\\/]+[\\\\/]*)))$', 'file:///tmp/jgit_test_9002537952631302656_tmp/tmp_9121310160384659146/.git/')",[134086]
"('Description.java', 'org.junit.runner.Description', 'methodAndClassNamePatternGroupOrDefault', '([\\s\\S]*)\\((.*)\\)', 'testUnpopAtFront(org.eclipse.jgit.revwalk.FIFORevQueueTest)')","[85382, 85509]"
"('Description.java', 'org.junit.runner.Description', 'methodAndClassNamePatternGroupOrDefault', '([\\s\\S]*)\\((.*)\\)', 'testGraphGroupCase2[OldRule? true](org.eclipse.jgit.ignore.IgnoreRuleSpecialCasesTest)')","[149938, 157022]"
"('URIish.java', 'org.eclipse.jgit.transport.URIish', '<init>', '^(file):([\\\\/](?![\\\\/])((?:[A-Za-z]:)?[\\\\/]?(?:(?:[^\\\\/]+[\\\\/]+)*[^\\\\/]+[\\\\/]*)))$', 'http://l usr\\example.com@1.2.3.4:1234//')",[34264]
"('URIish.java', 'org.eclipse.jgit.transport.URIish', '<init>', '^(file):([\\\\/](?![\\\\/])((?:[A-Za-z]:)?[\\\\/]?(?:(?:[^\\\\/]+[\\\\/]+)*[^\\\\/]+[\\\\/]*)))$', 'ssh://l usr\\example.com:wtf@[::1]:80/D:/x')",[12153]
"('URIish.java', 'org.eclipse.jgit.transport.URIish', '<init>', '^([\\\\/]?((?:[A-Za-z]:)?[\\\\/]?(?:(?:[^\\\\/]+[\\\\/]+)*[^\\\\/]+[\\\\/]*)))$', '/tmp/jgit_test_8377865151388464425_tmp/tmp_8247112886499178725')","[211544, 211689, 212229]"
"('URIish.java', 'org.eclipse.jgit.transport.URIish', '<init>', '^(?:([^/:@]+)(?::([^\\\\/]+))?@)?([^\\\\/:]{2,}):([\\\\/](?:(?:[^\\\\/]+[\\\\/]+)*[^\\\\/]+[\\\\/]*))$', '/a/b/c.git')",[6587]
"('Description.java', 'org.junit.runner.Description', 'methodAndClassNamePatternGroupOrDefault', '([\\s\\S]*)\\((.*)\\)', 'testGitProtoWindowsPort(org.eclipse.jgit.transport.URIishTest)')","[2597, 5058]"
"('Description.java', 'org.junit.runner.Description', 'methodAndClassNamePatternGroupOrDefault', '([\\s\\S]*)\\((.*)\\)', 'testObjectDirectorySnapshot(org.eclipse.jgit.revwalk.RevWalkShallowTest)')","[86101, 86230]"
"('Description.java', 'org.junit.runner.Description', 'methodAndClassNamePatternGroupOrDefault', '([\\s\\S]*)\\((.*)\\)', 'org.eclipse.jgit.dircache.DirCacheIteratorTest')","[92393, 94168]"
"('Description.java', 'org.junit.runner.Description', 'methodAndClassNamePatternGroupOrDefault', '([\\s\\S]*)\\((.*)\\)', 'testInexactRename_OnePair(org.eclipse.jgit.diff.RenameDetectorTest)')","[93300, 93859]"
"('Description.java', 'org.junit.runner.Description', 'methodAndClassNamePatternGroupOrDefault', '([\\s\\S]*)\\((.*)\\)', 'getRemoteTrackingBranchShouldHandleNormalCase(org.eclipse.jgit.lib.BranchConfigTest)')","[120520, 120693]"
"('Description.java', 'org.junit.runner.Description', 'methodAndClassNamePatternGroupOrDefault', '([\\s\\S]*)\\((.*)\\)', 'testReadStringRaw4(org.eclipse.jgit.transport.PacketLineInTest)')","[18049, 19245]"
"('Description.java', 'org.junit.runner.Description', 'methodAndClassNamePatternGroupOrDefault', '([\\s\\S]*)\\((.*)\\)', 'testDanglingCommitShouldContinueLane(org.eclipse.jgit.revplot.PlotCommitListTest)')","[197276, 197606]"
"('Description.java', 'org.junit.runner.Description', 'methodAndClassNamePatternGroupOrDefault', '([\\s\\S]*)\\((.*)\\)', 'testEdit_ReplaceCommonDelete(org.eclipse.jgit.diff.HistogramDiffTest)')","[98590, 99188]"
"('Description.java', 'org.junit.runner.Description', 'methodAndClassNamePatternGroupOrDefault', '([\\s\\S]*)\\((.*)\\)', 'testAlnumGroupCase0(org.eclipse.jgit.fnmatch.FileNameMatcherTest)')","[103792, 107185]"
"('ChangeIdUtil.java', 'org.eclipse.jgit.util.ChangeIdUtil', 'indexOfFirstFooterLine', '(^[a-zA-Z0-9-]+:(?!//).*$)', 'This reverts commit ca96c31f7d0a232920d6dfadc47945df09707490.')","[234028, 234055, 234637, 235583]"
"('Description.java', 'org.junit.runner.Description', 'methodAndClassNamePatternGroupOrDefault', '([\\s\\S]*)\\((.*)\\)', 'testCreateBranchAtHiddenCommitFails(org.eclipse.jgit.transport.ReceivePackAdvertiseRefsHookTest)')","[744, 918]"
"('ChangeIdUtil.java', 'org.eclipse.jgit.util.ChangeIdUtil', 'indexOfChangeId', '(^Change-Id: *I[a-f0-9]{40}$)', 'Change-Id:    I0123456789012345678901234567890123456789')",[189777]
"('FastIgnoreRule.java', 'org.eclipse.jgit.ignore.FastIgnoreRule', 'isMatch', '.r[a-c]', 'file')","[144650, 144839, 145028]"
"('Description.java', 'org.junit.runner.Description', 'methodAndClassNamePatternGroupOrDefault', '([\\s\\S]*)\\((.*)\\)', 'testTrackingRefUpdateDisabled(org.eclipse.jgit.transport.PushProcessTest)')","[74257, 74631]"
"('FastIgnoreRule.java', 'org.eclipse.jgit.ignore.FastIgnoreRule', 'isMatch', '[\\p{Space}]', '\n')",[161306]
"('Description.java', 'org.junit.runner.Description', 'methodAndClassNamePatternGroupOrDefault', '([\\s\\S]*)\\((.*)\\)', 'testNoRenames_SymlinkAndFileSamePath(org.eclipse.jgit.diff.RenameDetectorTest)')","[93552, 94123]"
"('URIish.java', 'org.eclipse.jgit.transport.URIish', '<init>', '^(file):([\\\\/](?![\\\\/])((?:[A-Za-z]:)?[\\\\/]?(?:(?:[^\\\\/]+[\\\\/]+)*[^\\\\/]+[\\\\/]*)))$', 'http://l usr\\example.com@[::1]/D:/x')","[47972, 48156]"
"('FastIgnoreRule.java', 'org.eclipse.jgit.ignore.FastIgnoreRule', 'isMatch', '.*\\.st.', 'anothertest.st0')","[142092, 142254, 143263, 143398]"
"('URIish.java', 'org.eclipse.jgit.transport.URIish', '<init>', '^(file):([\\\\/](?![\\\\/])((?:[A-Za-z]:)?[\\\\/]?(?:(?:[^\\\\/]+[\\\\/]+)*[^\\\\/]+[\\\\/]*)))$', 'ssh+git://example.com/some/p ath')","[66832, 66878]"
"('URIish.java', 'org.eclipse.jgit.transport.URIish', '<init>', '^([a-z][a-z0-9+-]+)://(?:(?:([^/:@]+)(?::([^\\\\/]+))?@)?((?:[^\\\\/:]+)|(?:\\[[0-9a-f:]+\\]))(?::(\\d+))?((?:/~(?:[^\\\\/]+))?[\\\\/]))?(.+)?$', 'file:///tmp/jgit_test_597571121998277222_tmp/tmp_8440426839489351226/.git/')",[132810]
"('Description.java', 'org.junit.runner.Description', 'methodAndClassNamePatternGroupOrDefault', '([\\s\\S]*)\\((.*)\\)', 'testAlnumGroupCase1[OldRule? false](org.eclipse.jgit.ignore.IgnoreRuleSpecialCasesTest)')","[148721, 155826]"
"('URIish.java', 'org.eclipse.jgit.transport.URIish', '<init>', '^(file):([\\\\/](?![\\\\/])((?:[A-Za-z]:)?[\\\\/]?(?:(?:[^\\\\/]+[\\\\/]+)*[^\\\\/]+[\\\\/]*)))$', 'ssh+git://lusr\\example@[::1]:80//')",[32608]
"('Description.java', 'org.junit.runner.Description', 'methodAndClassNamePatternGroupOrDefault', '([\\s\\S]*)\\((.*)\\)', 'testDecodeFail_NonBase64Character(org.eclipse.jgit.util.Base64Test)')","[183364, 183449]"
"('Description.java', 'org.junit.runner.Description', 'methodAndClassNamePatternGroupOrDefault', '([\\s\\S]*)\\((.*)\\)', 'testTwoCommitDeepTree1(org.eclipse.jgit.revwalk.ObjectWalkTest)')","[76448, 76642]"
"('URIish.java', 'org.eclipse.jgit.transport.URIish', '<init>', '^(?:([^/:@]+)(?::([^\\\\/]+))?@)?([^\\\\/:]{2,}):([\\\\/](?:(?:[^\\\\/]+[\\\\/]+)*[^\\\\/]+[\\\\/]*))$', 'D:\\m y')","[68251, 68366]"
"('Description.java', 'org.junit.runner.Description', 'methodAndClassNamePatternGroupOrDefault', '([\\s\\S]*)\\((.*)\\)', 'org.eclipse.jgit.util.RelativeDateFormatterTest')","[181258, 181668]"
"('URIish.java', 'org.eclipse.jgit.transport.URIish', '<init>', '^(?:([^/:@]+)(?::([^\\\\/]+))?@)?((?:[^\\\\/:]+)|(?:\\[[0-9a-f:]+\\])):((?:(?:/~(?:[^\\\\/]+))[\\\\/])?(?:(?:[^\\\\/]+[\\\\/]+)*[^\\\\/]+[\\\\/]*))$', '/tmp/jgit_test_3729351677476967516_tmp/tmp_3631166462441270745/.git')","[228385, 228527]"
"('Description.java', 'org.junit.runner.Description', 'methodAndClassNamePatternGroupOrDefault', '([\\s\\S]*)\\((.*)\\)', 'testUpdateExpectedRemote(org.eclipse.jgit.transport.PushProcessTest)')","[74110, 74477]"
"('Description.java', 'org.junit.runner.Description', 'methodAndClassNamePatternGroupOrDefault', '([\\s\\S]*)\\((.*)\\)', 'renameBranchExistingSection(org.eclipse.jgit.api.RenameBranchCommandTest)')","[240329, 240415]"
"('Description.java', 'org.junit.runner.Description', 'methodAndClassNamePatternGroupOrDefault', '([\\s\\S]*)\\((.*)\\)', 'testExceedsChainLength_DuringScanOfB(org.eclipse.jgit.diff.HistogramDiffTest)')","[98464, 99033]"
"('Description.java', 'org.junit.runner.Description', 'methodAndClassNamePatternGroupOrDefault', '([\\s\\S]*)\\((.*)\\)', 'testNotBare_CreateRepositoryFromDotGitGitDir(org.eclipse.jgit.internal.storage.file.RepositorySetupWorkDirTest)')","[255831, 256092]"
"('URIish.java', 'org.eclipse.jgit.transport.URIish', '<init>', '^(file):([\\\\/](?![\\\\/])((?:[A-Za-z]:)?[\\\\/]?(?:(?:[^\\\\/]+[\\\\/]+)*[^\\\\/]+[\\\\/]*)))$', '/a/b/c.git')",[6518]
"('Description.java', 'org.junit.runner.Description', 'methodAndClassNamePatternGroupOrDefault', '([\\s\\S]*)\\((.*)\\)', 'testFastForwardRebaseWithModification(org.eclipse.jgit.api.RebaseCommandTest)')","[218173, 219686]"
"('Description.java', 'org.junit.runner.Description', 'methodAndClassNamePatternGroupOrDefault', '([\\s\\S]*)\\((.*)\\)', 'fetchWithExplicitTagsShouldUpdateLocal(org.eclipse.jgit.api.FetchCommandTest)')","[242890, 243019]"
"('URIish.java', 'org.eclipse.jgit.transport.URIish', '<init>', '^([a-z][a-z0-9+-]+)://(?:(?:([^/:@]+)(?::([^\\\\/]+))?@)?((?:[^\\\\/:]+)|(?:\\[[0-9a-f:]+\\]))(?::(\\d+))?((?:/~(?:[^\\\\/]+))?[\\\\/]))?(.+)?$', '/tmp/jgit_test_489293450821421843_tmp/tmp_6013690132655096981')","[225838, 225968, 226121]"
"('Description.java', 'org.junit.runner.Description', 'methodAndClassNamePatternGroupOrDefault', '([\\s\\S]*)\\((.*)\\)', 'testReadWriteMergeMsg(org.eclipse.jgit.lib.MergeHeadMsgTest)')","[119506, 119550]"
"('URIish.java', 'org.eclipse.jgit.transport.URIish', '<init>', '^(file):([\\\\/](?![\\\\/])((?:[A-Za-z]:)?[\\\\/]?(?:(?:[^\\\\/]+[\\\\/]+)*[^\\\\/]+[\\\\/]*)))$', 'ssh://me@1.2.3.4//abc')","[39830, 40014]"
"('URIish.java', 'org.eclipse.jgit.transport.URIish', '<init>', '^(?:([^/:@]+)(?::([^\\\\/]+))?@)?([^\\\\/:]{2,}):([\\\\/](?:(?:[^\\\\/]+[\\\\/]+)*[^\\\\/]+[\\\\/]*))$', '/tmp/jgit_test_1455034780842305248_tmp/tmp_3250047937077610167')","[232655, 232795, 232987]"
"('Description.java', 'org.junit.runner.Description', 'methodAndClassNamePatternGroupOrDefault', '([\\s\\S]*)\\((.*)\\)', 'archiveHeadSpecificPath(org.eclipse.jgit.api.ArchiveCommandTest)')","[240109, 240197]"
"('URIish.java', 'org.eclipse.jgit.transport.URIish', '<init>', '^([a-z][a-z0-9+-]+)://(?:(?:([^/:@]+)(?::([^\\\\/]+))?@)?((?:[^\\\\/:]+)|(?:\\[[0-9a-f:]+\\]))(?::(\\d+))?((?:/~(?:[^\\\\/]+))?[\\\\/]))?(.+)?$', 'https://l usr\\example.com@1.2.3.4:1234//')",[37599]
"('URIish.java', 'org.eclipse.jgit.transport.URIish', '<init>', '^([a-z][a-z0-9+-]+)://(?:(?:([^/:@]+)(?::([^\\\\/]+))?@)?((?:[^\\\\/:]+)|(?:\\[[0-9a-f:]+\\]))(?::(\\d+))?((?:/~(?:[^\\\\/]+))?[\\\\/]))?(.+)?$', 'file:///tmp/jgit_test_1874467714670878803_tmp/tmp_6493786565991514167/.git/')","[245554, 245789]"
"('URIish.java', 'org.eclipse.jgit.transport.URIish', '<init>', '^([a-z][a-z0-9+-]+)://(?:(?:([^/:@]+)(?::([^\\\\/]+))?@)?((?:[^\\\\/:]+)|(?:\\[[0-9a-f:]+\\]))(?::(\\d+))?((?:/~(?:[^\\\\/]+))?[\\\\/]))?(.+)?$', 'ssh+git://l usr\\example.com:wtf@[::1]:1234//')",[16710]
"('FastIgnoreRule.java', 'org.eclipse.jgit.ignore.FastIgnoreRule', 'isMatch', 'a[b\\-]', 'ab')",[162320]
"('Description.java', 'org.junit.runner.Description', 'methodAndClassNamePatternGroupOrDefault', '([\\s\\S]*)\\((.*)\\)', 'org.eclipse.jgit.transport.PushProcessTest')","[73900, 76307]"
"('Description.java', 'org.junit.runner.Description', 'methodAndClassNamePatternGroupOrDefault', '([\\s\\S]*)\\((.*)\\)', 'testMatch_NotEqual(org.eclipse.jgit.util.RawParseUtils_MatchTest)')","[192010, 192095]"
"('FastIgnoreRule.java', 'org.eclipse.jgit.ignore.FastIgnoreRule', 'isMatch', '[a]', 'c')","[167615, 167669, 167723, 167804]"
"('URIish.java', 'org.eclipse.jgit.transport.URIish', '<init>', '^([a-z][a-z0-9+-]+)://(?:(?:([^/:@]+)(?::([^\\\\/]+))?@)?((?:[^\\\\/:]+)|(?:\\[[0-9a-f:]+\\]))(?::(\\d+))?((?:/~(?:[^\\\\/]+))?[\\\\/]))?(.+)?$', 'git://example.com/home/m y')","[70850, 70896]"
"('Description.java', 'org.junit.runner.Description', 'methodAndClassNamePatternGroupOrDefault', '([\\s\\S]*)\\((.*)\\)', 'testVerySimpleGroupCase2(org.eclipse.jgit.fnmatch.FileNameMatcherTest)')","[104023, 107427]"
"('URIish.java', 'org.eclipse.jgit.transport.URIish', '<init>', '^(file):([\\\\/](?![\\\\/])((?:[A-Za-z]:)?[\\\\/]?(?:(?:[^\\\\/]+[\\\\/]+)*[^\\\\/]+[\\\\/]*)))$', 'ssh://l usr\\example.com:wtf@[::1]:80//abc')",[12107]
"('FastIgnoreRule.java', 'org.eclipse.jgit.ignore.FastIgnoreRule', 'isMatch', '[\\p{XDigit}]', 'a')",[162972]
"('Description.java', 'org.junit.runner.Description', 'methodAndClassNamePatternGroupOrDefault', '([\\s\\S]*)\\((.*)\\)', 'testMergeBlockedByOther(org.eclipse.jgit.revplot.PlotCommitListTest)')","[197150, 197474]"
"('Description.java', 'org.junit.runner.Description', 'methodAndClassNamePatternGroupOrDefault', '([\\s\\S]*)\\((.*)\\)', 'testWordroupCase2(org.eclipse.jgit.fnmatch.FileNameMatcherTest)')","[103708, 107097]"
"('Description.java', 'org.junit.runner.Description', 'methodAndClassNamePatternGroupOrDefault', '([\\s\\S]*)\\((.*)\\)', 'testOnlyOption_f1_7_d(org.eclipse.jgit.api.CommitOnlyTest)')","[236626, 238712]"
"('Description.java', 'org.junit.runner.Description', 'methodAndClassNamePatternGroupOrDefault', '([\\s\\S]*)\\((.*)\\)', 'testFileInFolderCommittedModifiedCommittedComparedWithInitialCommit(org.eclipse.jgit.treewalk.filter.IndexDiffFilterTest)')","[136710, 137515]"
"('Description.java', 'org.junit.runner.Description', 'methodAndClassNamePatternGroupOrDefault', '([\\s\\S]*)\\((.*)\\)', 'testReadByteBlocks(org.eclipse.jgit.util.io.UnionInputStreamTest)')","[175042, 175257]"
"('URIish.java', 'org.eclipse.jgit.transport.URIish', '<init>', '^([a-z][a-z0-9+-]+)://(?:(?:([^/:@]+)(?::([^\\\\/]+))?@)?((?:[^\\\\/:]+)|(?:\\[[0-9a-f:]+\\]))(?::(\\d+))?((?:/~(?:[^\\\\/]+))?[\\\\/]))?(.+)?$', 'file:///tmp/jgit_test_3047862731010516352_tmp/tmp_828193169175075630/.git/')",[195060]
"('Description.java', 'org.junit.runner.Description', 'methodAndClassNamePatternGroupOrDefault', '([\\s\\S]*)\\((.*)\\)', 'org.eclipse.jgit.internal.storage.file.T0003_BasicTest')","[248936, 250582]"
"('Description.java', 'org.junit.runner.Description', 'methodAndClassNamePatternGroupOrDefault', '([\\s\\S]*)\\((.*)\\)', 'org.eclipse.jgit.api.CleanCommandTest')","[216933, 220531]"
"('Description.java', 'org.junit.runner.Description', 'methodAndClassNamePatternGroupOrDefault', '([\\s\\S]*)\\((.*)\\)', 'testInvalidTreeDuplicateNames6(org.eclipse.jgit.lib.ObjectCheckerTest)')","[122855, 125031]"
"('Description.java', 'org.junit.runner.Description', 'methodAndClassNamePatternGroupOrDefault', '([\\s\\S]*)\\((.*)\\)', 'testAddSlowPath(org.eclipse.jgit.util.BlockListTest)')","[180747, 181011]"
"('URIish.java', 'org.eclipse.jgit.transport.URIish', '<init>', '^([a-z][a-z0-9+-]+)://(?:(?:([^/:@]+)(?::([^\\\\/]+))?@)?((?:[^\\\\/:]+)|(?:\\[[0-9a-f:]+\\]))(?::(\\d+))?((?:/~(?:[^\\\\/]+))?[\\\\/]))?(.+)?$', 'file:///tmp/jgit_test_6285626331586997239_tmp/tmp_1735056061205602756/.git/')",[132298]
"('URIish.java', 'org.eclipse.jgit.transport.URIish', '<init>', '^(file):([\\\\/](?![\\\\/])((?:[A-Za-z]:)?[\\\\/]?(?:(?:[^\\\\/]+[\\\\/]+)*[^\\\\/]+[\\\\/]*)))$', 'ssh+git://lusr\\example:wtf@1.2.3.4:1234//')",[17446]
"('Description.java', 'org.junit.runner.Description', 'methodAndClassNamePatternGroupOrDefault', '([\\s\\S]*)\\((.*)\\)', 'testMaxCountRevFilter(org.eclipse.jgit.revwalk.MaxCountRevFilterTest)')","[79555, 79599]"
"('FastIgnoreRule.java', 'org.eclipse.jgit.ignore.FastIgnoreRule', 'isMatch', '\\[[a]', '[')",[163674]
"('URIish.java', 'org.eclipse.jgit.transport.URIish', '<init>', '^([a-z][a-z0-9+-]+)://(?:(?:([^/:@]+)(?::([^\\\\/]+))?@)?((?:[^\\\\/:]+)|(?:\\[[0-9a-f:]+\\]))(?::(\\d+))?((?:/~(?:[^\\\\/]+))?[\\\\/]))?(.+)?$', 'http://lusr\\example:wtf@[::1]:1234/D:/x')",[22375]
"('URIish.java', 'org.eclipse.jgit.transport.URIish', '<init>', '^([a-z][a-z0-9+-]+)://(?:(?:([^/:@]+)(?::([^\\\\/]+))?@)?((?:[^\\\\/:]+)|(?:\\[[0-9a-f:]+\\]))(?::(\\d+))?((?:/~(?:[^\\\\/]+))?[\\\\/]))?(.+)?$', 'https://me:wtf@example.com:80//abc')",[22881]
"('URIish.java', 'org.eclipse.jgit.transport.URIish', '<init>', '^(file):([\\\\/](?![\\\\/])((?:[A-Za-z]:)?[\\\\/]?(?:(?:[^\\\\/]+[\\\\/]+)*[^\\\\/]+[\\\\/]*)))$', 'file:/tmp/jgit_test_597571121998277222_tmp/tmp_8440426839489351226/.git/')",[132736]
"('Description.java', 'org.junit.runner.Description', 'methodAndClassNamePatternGroupOrDefault', '([\\s\\S]*)\\((.*)\\)', 'testAssumeUnchanged(org.eclipse.jgit.lib.IndexDiffTest)')","[110448, 110793]"
"('Description.java', 'org.junit.runner.Description', 'methodAndClassNamePatternGroupOrDefault', '([\\s\\S]*)\\((.*)\\)', 'org.eclipse.jgit.lib.ObjectIdRefTest')","[109663, 109847]"
"('Description.java', 'org.junit.runner.Description', 'methodAndClassNamePatternGroupOrDefault', '([\\s\\S]*)\\((.*)\\)', 'testVerySimpleWildCardCase2[OldRule? false](org.eclipse.jgit.ignore.IgnoreRuleSpecialCasesTest)')","[145961, 153066]"
"('URIish.java', 'org.eclipse.jgit.transport.URIish', '<init>', '^([a-z][a-z0-9+-]+)://(?:(?:([^/:@]+)(?::([^\\\\/]+))?@)?((?:[^\\\\/:]+)|(?:\\[[0-9a-f:]+\\]))(?::(\\d+))?((?:/~(?:[^\\\\/]+))?[\\\\/]))?(.+)?$', 'git://example.com/~some/p ath')","[70620, 70666]"
"('URIish.java', 'org.eclipse.jgit.transport.URIish', '<init>', '^(file):([\\\\/](?![\\\\/])((?:[A-Za-z]:)?[\\\\/]?(?:(?:[^\\\\/]+[\\\\/]+)*[^\\\\/]+[\\\\/]*)))$', 'ssh://l usr\\example.com@[::1]:80/D:\\x')",[28330]
"('URIish.java', 'org.eclipse.jgit.transport.URIish', '<init>', '^(?:([^/:@]+)(?::([^\\\\/]+))?@)?([^\\\\/:]{2,}):([\\\\/](?:(?:[^\\\\/]+[\\\\/]+)*[^\\\\/]+[\\\\/]*))$', '/tmp/jgit_test_2412289587651931572_tmp/tmp_8062070046587231599/.git')","[229816, 229962]"
"('FastIgnoreRule.java', 'org.eclipse.jgit.ignore.FastIgnoreRule', 'isMatch', 'a.b', 'a\\b')",[162294]
"('URIish.java', 'org.eclipse.jgit.transport.URIish', '<init>', '^([a-z][a-z0-9+-]+)://(?:(?:([^/:@]+)(?::([^\\\\/]+))?@)?((?:[^\\\\/:]+)|(?:\\[[0-9a-f:]+\\]))(?::(\\d+))?((?:/~(?:[^\\\\/]+))?[\\\\/]))?(.+)?$', 'https://me:wtf@[::1]:80/D:\\x')",[23709]
"('URIish.java', 'org.eclipse.jgit.transport.URIish', '<init>', '^([a-z][a-z0-9+-]+)://(?:(?:([^/:@]+)(?::([^\\\\/]+))?@)?((?:[^\\\\/:]+)|(?:\\[[0-9a-f:]+\\]))(?::(\\d+))?((?:/~(?:[^\\\\/]+))?[\\\\/]))?(.+)?$', 'ssh://me:wtf@[::1]:80//')",[10150]
"('URIish.java', 'org.eclipse.jgit.transport.URIish', '<init>', '^([a-z][a-z0-9+-]+)://(?:(?:([^/:@]+)(?::([^\\\\/]+))?@)?((?:[^\\\\/:]+)|(?:\\[[0-9a-f:]+\\]))(?::(\\d+))?((?:/~(?:[^\\\\/]+))?[\\\\/]))?(.+)?$', 'https://l usr\\example.com@1.2.3.4:80//abc')",[37829]
"('URIish.java', 'org.eclipse.jgit.transport.URIish', '<init>', '^([a-z][a-z0-9+-]+)://(?:(?:([^/:@]+)(?::([^\\\\/]+))?@)?((?:[^\\\\/:]+)|(?:\\[[0-9a-f:]+\\]))(?::(\\d+))?((?:/~(?:[^\\\\/]+))?[\\\\/]))?(.+)?$', 'https://l usr\\example.com:wtf@1.2.3.4:80/D:\\x')",[24445]
"('URIish.java', 'org.eclipse.jgit.transport.URIish', '<init>', '^(file):([\\\\/](?![\\\\/])((?:[A-Za-z]:)?[\\\\/]?(?:(?:[^\\\\/]+[\\\\/]+)*[^\\\\/]+[\\\\/]*)))$', 'https://l usr\\example.com:wtf@example.com:80/D:/x')",[24008]
"('URIish.java', 'org.eclipse.jgit.transport.URIish', '<init>', '^([a-z][a-z0-9+-]+)://(?:(?:([^/:@]+)(?::([^\\\\/]+))?@)?((?:[^\\\\/:]+)|(?:\\[[0-9a-f:]+\\]))(?::(\\d+))?((?:/~(?:[^\\\\/]+))?[\\\\/]))?(.+)?$', 'ssh+git://me@example.com/D:\\x')","[42889, 43073]"
"('Description.java', 'org.junit.runner.Description', 'methodAndClassNamePatternGroupOrDefault', '([\\s\\S]*)\\((.*)\\)', 'testLocalTransportWithRelativePath(org.eclipse.jgit.transport.TransportTest)')","[71612, 71788]"
"('URIish.java', 'org.eclipse.jgit.transport.URIish', '<init>', '^(file):([\\\\/](?![\\\\/])((?:[A-Za-z]:)?[\\\\/]?(?:(?:[^\\\\/]+[\\\\/]+)*[^\\\\/]+[\\\\/]*)))$', 'http://lusr\\example@example.com/D:/x')","[48340, 48524]"
"('URIish.java', 'org.eclipse.jgit.transport.URIish', '<init>', '^(file):([\\\\/](?![\\\\/])((?:[A-Za-z]:)?[\\\\/]?(?:(?:[^\\\\/]+[\\\\/]+)*[^\\\\/]+[\\\\/]*)))$', 'ssh://lusr\\example@[::1]//abc')","[42406, 42590]"
"('Repository.java', 'org.eclipse.jgit.lib.Repository', 'resolve', '^-\\d+$', '7')","[127416, 127443]"
"('Description.java', 'org.junit.runner.Description', 'methodAndClassNamePatternGroupOrDefault', '([\\s\\S]*)\\((.*)\\)', 'testEmpty(org.eclipse.jgit.revwalk.AlwaysEmptyRevQueueTest)')","[82770, 82835]"
"('Description.java', 'org.junit.runner.Description', 'methodAndClassNamePatternGroupOrDefault', '([\\s\\S]*)\\((.*)\\)', 'testInvalidTreeModeStartsWithZero2(org.eclipse.jgit.lib.ObjectCheckerTest)')","[122708, 124877]"
"('Description.java', 'org.junit.runner.Description', 'methodAndClassNamePatternGroupOrDefault', '([\\s\\S]*)\\((.*)\\)', 'testEqualsWithWhitespace(org.eclipse.jgit.diff.RawTextIgnoreWhitespaceChangeTest)')","[98197, 98241]"
"('Description.java', 'org.junit.runner.Description', 'methodAndClassNamePatternGroupOrDefault', '([\\s\\S]*)\\((.*)\\)', 'testMerge_PackedLooseLoose(org.eclipse.jgit.util.RefMapTest)')","[183867, 184334]"
"('FastIgnoreRule.java', 'org.eclipse.jgit.ignore.FastIgnoreRule', 'isMatch', '[A\\p{Ll}C3-5]', 'A')",[160290]
"('Description.java', 'org.junit.runner.Description', 'methodAndClassNamePatternGroupOrDefault', '([\\s\\S]*)\\((.*)\\)', 'testValidTree2(org.eclipse.jgit.lib.ObjectCheckerTest)')","[121217, 123315]"
"('URIish.java', 'org.eclipse.jgit.transport.URIish', '<init>', '^(file):([\\\\/](?![\\\\/])((?:[A-Za-z]:)?[\\\\/]?(?:(?:[^\\\\/]+[\\\\/]+)*[^\\\\/]+[\\\\/]*)))$', 'ssh://me@[::1]:80//abc')",[27071]
"('URIish.java', 'org.eclipse.jgit.transport.URIish', '<init>', '^(file):([\\\\/](?![\\\\/])((?:[A-Za-z]:)?[\\\\/]?(?:(?:[^\\\\/]+[\\\\/]+)*[^\\\\/]+[\\\\/]*)))$', 'file:/tmp/jgit_test_4267913266736872707_tmp/tmp_8595701910287788852/.git/')",[132118]
"('Description.java', 'org.junit.runner.Description', 'methodAndClassNamePatternGroupOrDefault', '([\\s\\S]*)\\((.*)\\)', 'testEnsurePathCapacityFastCase(org.eclipse.jgit.treewalk.AbstractTreeIteratorTest)')","[134408, 134556]"
"('Description.java', 'org.junit.runner.Description', 'methodAndClassNamePatternGroupOrDefault', '([\\s\\S]*)\\((.*)\\)', 'testObjectId_objectid_implicit_firstparent(org.eclipse.jgit.lib.RepositoryResolveTest)')","[125365, 125838]"
"('Description.java', 'org.junit.runner.Description', 'methodAndClassNamePatternGroupOrDefault', '([\\s\\S]*)\\((.*)\\)', 'testDegenerate_InsertStart(org.eclipse.jgit.diff.MyersDiffTest)')","[97232, 97668]"
"('Description.java', 'org.junit.runner.Description', 'methodAndClassNamePatternGroupOrDefault', '([\\s\\S]*)\\((.*)\\)', 'testEscapedBracket1(org.eclipse.jgit.fnmatch.FileNameMatcherTest)')","[104044, 107449]"
"('URIish.java', 'org.eclipse.jgit.transport.URIish', '<init>', '^(file):([\\\\/](?![\\\\/])((?:[A-Za-z]:)?[\\\\/]?(?:(?:[^\\\\/]+[\\\\/]+)*[^\\\\/]+[\\\\/]*)))$', 'ssh+git://lusr\\example:wtf@example.com:80/D:/x')",[17354]
"('URIish.java', 'org.eclipse.jgit.transport.URIish', '<init>', '^(file):([\\\\/](?![\\\\/])((?:[A-Za-z]:)?[\\\\/]?(?:(?:[^\\\\/]+[\\\\/]+)*[^\\\\/]+[\\\\/]*)))$', 'ssh://me:wtf@[::1]:1234//')",[9047]
"('Description.java', 'org.junit.runner.Description', 'methodAndClassNamePatternGroupOrDefault', '([\\s\\S]*)\\((.*)\\)', 'testOnlyOption_f1_9_c(org.eclipse.jgit.api.CommitOnlyTest)')","[236815, 238910]"
"('Description.java', 'org.junit.runner.Description', 'methodAndClassNamePatternGroupOrDefault', '([\\s\\S]*)\\((.*)\\)', 'testSimpleStarCase0[OldRule? true](org.eclipse.jgit.ignore.IgnoreRuleSpecialCasesTest)')","[150789, 157873]"
"('Description.java', 'org.junit.runner.Description', 'methodAndClassNamePatternGroupOrDefault', '([\\s\\S]*)\\((.*)\\)', 'testDeleteDelete(org.eclipse.jgit.notes.DefaultNoteMergerTest)')","[198648, 198777]"
"('Description.java', 'org.junit.runner.Description', 'methodAndClassNamePatternGroupOrDefault', '([\\s\\S]*)\\((.*)\\)', 'testNoFooters_OneLineBodyWithLF(org.eclipse.jgit.revwalk.FooterLineTest)')","[77775, 78193]"
"('Description.java', 'org.junit.runner.Description', 'methodAndClassNamePatternGroupOrDefault', '([\\s\\S]*)\\((.*)\\)', 'testCreate(org.eclipse.jgit.internal.storage.file.RefDirectoryTest)')","[258106, 259298]"
"('Description.java', 'org.junit.runner.Description', 'methodAndClassNamePatternGroupOrDefault', '([\\s\\S]*)\\((.*)\\)', 'org.eclipse.jgit.revwalk.RevObjectTest')","[83745, 84965]"
"('Description.java', 'org.junit.runner.Description', 'methodAndClassNamePatternGroupOrDefault', '([\\s\\S]*)\\((.*)\\)', 'testWrite_CH_DATA(org.eclipse.jgit.transport.SideBandOutputStreamTest)')","[73286, 73520]"
"('Description.java', 'org.junit.runner.Description', 'methodAndClassNamePatternGroupOrDefault', '([\\s\\S]*)\\((.*)\\)', 'testCheckoutSecond(org.eclipse.jgit.api.PathCheckoutCommandTest)')","[224509, 224767]"
"('Description.java', 'org.junit.runner.Description', 'methodAndClassNamePatternGroupOrDefault', '([\\s\\S]*)\\((.*)\\)', 'testACommitWithSubject_NoBodySobAndBug(org.eclipse.jgit.util.ChangeIdUtilTest)')","[185966, 186732]"
"('URIish.java', 'org.eclipse.jgit.transport.URIish', '<init>', '^(file):([\\\\/](?![\\\\/])((?:[A-Za-z]:)?[\\\\/]?(?:(?:[^\\\\/]+[\\\\/]+)*[^\\\\/]+[\\\\/]*)))$', 'file:///tmp/jgit_test_2667716494194561292_tmp/tmp_6337743378885192675/.git/')",[210575]
"('Description.java', 'org.junit.runner.Description', 'methodAndClassNamePatternGroupOrDefault', '([\\s\\S]*)\\((.*)\\)', 'testParseGitFileName_FooSpBar(org.eclipse.jgit.patch.FileHeaderTest)')","[195474, 195933]"
"('Description.java', 'org.junit.runner.Description', 'methodAndClassNamePatternGroupOrDefault', '([\\s\\S]*)\\((.*)\\)', 'testHardResetOnUnbornBranch(org.eclipse.jgit.api.ResetCommandTest)')","[204331, 204668]"
"('URIish.java', 'org.eclipse.jgit.transport.URIish', '<init>', '^([a-z][a-z0-9+-]+)://(?:(?:([^/:@]+)(?::([^\\\\/]+))?@)?((?:[^\\\\/:]+)|(?:\\[[0-9a-f:]+\\]))(?::(\\d+))?((?:/~(?:[^\\\\/]+))?[\\\\/]))?(.+)?$', 'http://me@1.2.3.4/D:\\x')","[46569, 46753]"
"('Description.java', 'org.junit.runner.Description', 'methodAndClassNamePatternGroupOrDefault', '([\\s\\S]*)\\((.*)\\)', 'testDataAfterPackFooterSplitHeaderRead(org.eclipse.jgit.transport.PackParserTest)')","[71981, 72330]"
"('Description.java', 'org.junit.runner.Description', 'methodAndClassNamePatternGroupOrDefault', '([\\s\\S]*)\\((.*)\\)', 'testTagBlob(org.eclipse.jgit.revwalk.RevTagParseTest)')","[80039, 80439]"
"('Description.java', 'org.junit.runner.Description', 'methodAndClassNamePatternGroupOrDefault', '([\\s\\S]*)\\((.*)\\)', 'testFileWithUserHome(org.eclipse.jgit.transport.URIishTest)')","[4203, 5476]"
"('Description.java', 'org.junit.runner.Description', 'methodAndClassNamePatternGroupOrDefault', '([\\s\\S]*)\\((.*)\\)', 'testParse_FixNoNewline(org.eclipse.jgit.patch.PatchTest)')","[196184, 196337]"
"('Description.java', 'org.junit.runner.Description', 'methodAndClassNamePatternGroupOrDefault', '([\\s\\S]*)\\((.*)\\)', 'testTwoEntries_BackwardsOneAtATime(org.eclipse.jgit.treewalk.CanonicalTreeParserTest)')","[136048, 136372]"
"('URIish.java', 'org.eclipse.jgit.transport.URIish', '<init>', '^([a-z][a-z0-9+-]+)://(?:(?:([^/:@]+)(?::([^\\\\/]+))?@)?((?:[^\\\\/:]+)|(?:\\[[0-9a-f:]+\\]))(?::(\\d+))?((?:/~(?:[^\\\\/]+))?[\\\\/]))?(.+)?$', 'ssh+git://l usr\\example.com:wtf@1.2.3.4:1234/D:\\x')",[16480]
"('Description.java', 'org.junit.runner.Description', 'methodAndClassNamePatternGroupOrDefault', '([\\s\\S]*)\\((.*)\\)', 'testParse_ShortLineOnlyEndLF(org.eclipse.jgit.revwalk.RevTagParseTest)')","[80312, 80725]"
"('Description.java', 'org.junit.runner.Description', 'methodAndClassNamePatternGroupOrDefault', '([\\s\\S]*)\\((.*)\\)', 'testIncompleteRangesInOneGroupCase1(org.eclipse.jgit.fnmatch.FileNameMatcherTest)')","[102931, 106283]"
"('Description.java', 'org.junit.runner.Description', 'methodAndClassNamePatternGroupOrDefault', '([\\s\\S]*)\\((.*)\\)', 'testNoRenames_EmptyFile1(org.eclipse.jgit.diff.RenameDetectorTest)')","[93426, 93991]"
"('Description.java', 'org.junit.runner.Description', 'methodAndClassNamePatternGroupOrDefault', '([\\s\\S]*)\\((.*)\\)', 'whileRefLockedRefNotPackedNoError(org.eclipse.jgit.internal.storage.file.GcPackRefsTest)')","[252201, 252331]"
"('Description.java', 'org.junit.runner.Description', 'methodAndClassNamePatternGroupOrDefault', '([\\s\\S]*)\\((.*)\\)', 'testValidTree4(org.eclipse.jgit.lib.ObjectCheckerTest)')","[121259, 123359]"
"('Description.java', 'org.junit.runner.Description', 'methodAndClassNamePatternGroupOrDefault', '([\\s\\S]*)\\((.*)\\)', 'testTwoGroupsCase2[OldRule? false](org.eclipse.jgit.ignore.IgnoreRuleSpecialCasesTest)')","[147180, 154285]"
"('Description.java', 'org.junit.runner.Description', 'methodAndClassNamePatternGroupOrDefault', '([\\s\\S]*)\\((.*)\\)', 'stashedApplyOnOtherBranch(org.eclipse.jgit.api.StashApplyCommandTest)')","[241126, 241692]"
"('Description.java', 'org.junit.runner.Description', 'methodAndClassNamePatternGroupOrDefault', '([\\s\\S]*)\\((.*)\\)', 'testDisallowTreeFilter(org.eclipse.jgit.revwalk.RevWalkMergeBaseTest)')","[81947, 82077]"
"('Description.java', 'org.junit.runner.Description', 'methodAndClassNamePatternGroupOrDefault', '([\\s\\S]*)\\((.*)\\)', 'testVerySimplePatternCase4[OldRule? true](org.eclipse.jgit.ignore.IgnoreRuleSpecialCasesTest)')","[150329, 157413]"
"('URIish.java', 'org.eclipse.jgit.transport.URIish', '<init>', '^([a-z][a-z0-9+-]+)://(?:(?:([^/:@]+)(?::([^\\\\/]+))?@)?((?:[^\\\\/:]+)|(?:\\[[0-9a-f:]+\\]))(?::(\\d+))?((?:/~(?:[^\\\\/]+))?[\\\\/]))?(.+)?$', 'http://me@example.com:80//')",[32999]
"('URIish.java', 'org.eclipse.jgit.transport.URIish', '<init>', '^([a-z][a-z0-9+-]+)://(?:(?:([^/:@]+)(?::([^\\\\/]+))?@)?((?:[^\\\\/:]+)|(?:\\[[0-9a-f:]+\\]))(?::(\\d+))?((?:/~(?:[^\\\\/]+))?[\\\\/]))?(.+)?$', 'https://l usr\\example.com@example.com/D:/x')","[50571, 50755]"
"('QuotedString.java', 'org.eclipse.jgit.util.QuotedString$BourneUserPathStyle', 'quote', '^~[A-Za-z0-9_-]+$', ""'"")","[193591, 193616]"
"('Description.java', 'org.junit.runner.Description', 'methodAndClassNamePatternGroupOrDefault', '([\\s\\S]*)\\((.*)\\)', 'testEmpty_WithPrefix(org.eclipse.jgit.util.RefMapTest)')","[183930, 184400]"
"('URIish.java', 'org.eclipse.jgit.transport.URIish', '<init>', '^(file):([\\\\/](?![\\\\/])((?:[A-Za-z]:)?[\\\\/]?(?:(?:[^\\\\/]+[\\\\/]+)*[^\\\\/]+[\\\\/]*)))$', 'ssh://me@[::1]:80//')",[27025]
"('URIish.java', 'org.eclipse.jgit.transport.URIish', '<init>', '^(file):([\\\\/](?![\\\\/])((?:[A-Za-z]:)?[\\\\/]?(?:(?:[^\\\\/]+[\\\\/]+)*[^\\\\/]+[\\\\/]*)))$', 'ssh://me:wtf@1.2.3.4:1234//abc')",[8112]
"('URIish.java', 'org.eclipse.jgit.transport.URIish', '<init>', '^([a-z][a-z0-9+-]+)://(?:(?:([^/:@]+)(?::([^\\\\/]+))?@)?((?:[^\\\\/:]+)|(?:\\[[0-9a-f:]+\\]))(?::(\\d+))?((?:/~(?:[^\\\\/]+))?[\\\\/]))?(.+)?$', 'https://me:wtf@1.2.3.4:1234/D:/x')",[23111]
"('URIish.java', 'org.eclipse.jgit.transport.URIish', '<init>', '^(file):([\\\\/](?![\\\\/])((?:[A-Za-z]:)?[\\\\/]?(?:(?:[^\\\\/]+[\\\\/]+)*[^\\\\/]+[\\\\/]*)))$', 'file:///tmp/jgit_test_4646074331197424180_tmp/tmp_6800981996560318800')","[222957, 223014, 223336]"
"('Description.java', 'org.junit.runner.Description', 'methodAndClassNamePatternGroupOrDefault', '([\\s\\S]*)\\((.*)\\)', 'testRenameRefNameColission2avoided(org.eclipse.jgit.internal.storage.file.RefUpdateTest)')","[252998, 253828]"
"('Description.java', 'org.junit.runner.Description', 'methodAndClassNamePatternGroupOrDefault', '([\\s\\S]*)\\((.*)\\)', 'testAlnumGroupCase1[OldRule? true](org.eclipse.jgit.ignore.IgnoreRuleSpecialCasesTest)')","[152284, 159368]"
"('URIish.java', 'org.eclipse.jgit.transport.URIish', '<init>', '^(file):([\\\\/](?![\\\\/])((?:[A-Za-z]:)?[\\\\/]?(?:(?:[^\\\\/]+[\\\\/]+)*[^\\\\/]+[\\\\/]*)))$', 'file:/tmp/jgit_test_1094454074177318269_tmp/tmp_3175616056195145359.git/')",[173681]
"('Description.java', 'org.junit.runner.Description', 'methodAndClassNamePatternGroupOrDefault', '([\\s\\S]*)\\((.*)\\)', 'testSpaceGroupCase3[OldRule? true](org.eclipse.jgit.ignore.IgnoreRuleSpecialCasesTest)')","[150628, 157712]"
"('Description.java', 'org.junit.runner.Description', 'methodAndClassNamePatternGroupOrDefault', '([\\s\\S]*)\\((.*)\\)', 'testDegenerate_DeleteStart(org.eclipse.jgit.diff.MyersDiffTest)')","[97127, 97558]"
"('Description.java', 'org.junit.runner.Description', 'methodAndClassNamePatternGroupOrDefault', '([\\s\\S]*)\\((.*)\\)', 'testDigitGroupCase5[OldRule? false](org.eclipse.jgit.ignore.IgnoreRuleSpecialCasesTest)')","[147433, 154538]"
"('Description.java', 'org.junit.runner.Description', 'methodAndClassNamePatternGroupOrDefault', '([\\s\\S]*)\\((.*)\\)', 'testPathsResetToNonexistingRef(org.eclipse.jgit.api.ResetCommandTest)')","[204499, 204844]"
"('URIish.java', 'org.eclipse.jgit.transport.URIish', '<init>', '^([a-z][a-z0-9+-]+)://(?:(?:([^/:@]+)(?::([^\\\\/]+))?@)?((?:[^\\\\/:]+)|(?:\\[[0-9a-f:]+\\]))(?::(\\d+))?((?:/~(?:[^\\\\/]+))?[\\\\/]))?(.+)?$', 'ssh://l usr\\example.com:wtf@example.com:1234//')",[10334]
"('Description.java', 'org.junit.runner.Description', 'methodAndClassNamePatternGroupOrDefault', '([\\s\\S]*)\\((.*)\\)', 'testAddGrowsWithObjects(org.eclipse.jgit.lib.ObjectIdSubclassMapTest)')","[114008, 114158]"
"('Description.java', 'org.junit.runner.Description', 'methodAndClassNamePatternGroupOrDefault', '([\\s\\S]*)\\((.*)\\)', 'testIncompleteRangesInOneGroupCase0[OldRule? false](org.eclipse.jgit.ignore.IgnoreRuleSpecialCasesTest)')","[147870, 154975]"
"('URIish.java', 'org.eclipse.jgit.transport.URIish', '<init>', '^(file):([\\\\/](?![\\\\/])((?:[A-Za-z]:)?[\\\\/]?(?:(?:[^\\\\/]+[\\\\/]+)*[^\\\\/]+[\\\\/]*)))$', 'http://l usr\\example.com:wtf@1.2.3.4:80//')",[20949]
"('Description.java', 'org.junit.runner.Description', 'methodAndClassNamePatternGroupOrDefault', '([\\s\\S]*)\\((.*)\\)', 'testNoFooters_ShortBodyNoLF(org.eclipse.jgit.revwalk.FooterLineTest)')","[77754, 78171]"
"('QuotedString.java', 'org.eclipse.jgit.util.QuotedString$BourneUserPathStyle', 'quote', '^~[A-Za-z0-9_-]+$', '~/')","[193296, 193320]"
"('URIish.java', 'org.eclipse.jgit.transport.URIish', '<init>', '^(file):([\\\\/](?![\\\\/])((?:[A-Za-z]:)?[\\\\/]?(?:(?:[^\\\\/]+[\\\\/]+)*[^\\\\/]+[\\\\/]*)))$', 'file:/tmp/jgit_test_8039684018584715607_tmp/tmp_1550296378721462083/.git/')",[173395]
"('Description.java', 'org.junit.runner.Description', 'methodAndClassNamePatternGroupOrDefault', '([\\s\\S]*)\\((.*)\\)', 'testTimeout_flush_Timeout(org.eclipse.jgit.util.io.TimeoutOutputStreamTest)')","[172707, 172905]"
"('URIish.java', 'org.eclipse.jgit.transport.URIish', '<init>', '^(file):([\\\\/](?![\\\\/])((?:[A-Za-z]:)?[\\\\/]?(?:(?:[^\\\\/]+[\\\\/]+)*[^\\\\/]+[\\\\/]*)))$', 'http://lusr\\example@1.2.3.4/D:/x')","[48708, 48892]"
"('Description.java', 'org.junit.runner.Description', 'methodAndClassNamePatternGroupOrDefault', '([\\s\\S]*)\\((.*)\\)', 'testForceRemotesOrigin(org.eclipse.jgit.transport.RefSpecTest)')","[14314, 15840]"
"('URIish.java', 'org.eclipse.jgit.transport.URIish', '<init>', '^([a-z][a-z0-9+-]+)://(?:(?:([^/:@]+)(?::([^\\\\/]+))?@)?((?:[^\\\\/:]+)|(?:\\[[0-9a-f:]+\\]))(?::(\\d+))?((?:/~(?:[^\\\\/]+))?[\\\\/]))?(.+)?$', 'http://lusr\\example:wtf@1.2.3.4:1234//abc')",[21961]
"('Description.java', 'org.junit.runner.Description', 'methodAndClassNamePatternGroupOrDefault', '([\\s\\S]*)\\((.*)\\)', 'testSuccessfulMergeFailsDueToDirtyIndex(org.eclipse.jgit.api.MergeCommandTest)')","[214080, 215012]"
"('Description.java', 'org.junit.runner.Description', 'methodAndClassNamePatternGroupOrDefault', '([\\s\\S]*)\\((.*)\\)', 'org.eclipse.jgit.api.InitCommandTest')","[234114, 234293]"
"('Description.java', 'org.junit.runner.Description', 'methodAndClassNamePatternGroupOrDefault', '([\\s\\S]*)\\((.*)\\)', 'testQuote_NamedEscapes(org.eclipse.jgit.util.QuotedStringBourneUserPathStyleTest)')","[192639, 192902]"
"('Description.java', 'org.junit.runner.Description', 'methodAndClassNamePatternGroupOrDefault', '([\\s\\S]*)\\((.*)\\)', 'getTrackingBranchShouldReturnMergeBranchForLocalBranch(org.eclipse.jgit.lib.BranchConfigTest)')","[120436, 120605]"
"('URIish.java', 'org.eclipse.jgit.transport.URIish', '<init>', '^([a-z][a-z0-9+-]+)://(?:(?:([^/:@]+)(?::([^\\\\/]+))?@)?((?:[^\\\\/:]+)|(?:\\[[0-9a-f:]+\\]))(?::(\\d+))?((?:/~(?:[^\\\\/]+))?[\\\\/]))?(.+)?$', 'http://me:wtf@1.2.3.4:80/D:\\x')",[20006]
"('Description.java', 'org.junit.runner.Description', 'methodAndClassNamePatternGroupOrDefault', '([\\s\\S]*)\\((.*)\\)', 'testReadBoolean_OnOff2(org.eclipse.jgit.lib.ConfigTest)')","[129029, 129747]"
"('Description.java', 'org.junit.runner.Description', 'methodAndClassNamePatternGroupOrDefault', '([\\s\\S]*)\\((.*)\\)', 'testStopOnConflictCommitAndContinue(org.eclipse.jgit.api.RebaseCommandTest)')","[218404, 219928]"
"('Description.java', 'org.junit.runner.Description', 'methodAndClassNamePatternGroupOrDefault', '([\\s\\S]*)\\((.*)\\)', 'org.eclipse.jgit.api.DescribeCommandTest')","[215725, 216897]"
"('URIish.java', 'org.eclipse.jgit.transport.URIish', '<init>', '^(file):([\\\\/](?![\\\\/])((?:[A-Za-z]:)?[\\\\/]?(?:(?:[^\\\\/]+[\\\\/]+)*[^\\\\/]+[\\\\/]*)))$', 'ssh://me@[::1]/D:\\x')","[40290, 40474]"
"('Description.java', 'org.junit.runner.Description', 'methodAndClassNamePatternGroupOrDefault', '([\\s\\S]*)\\((.*)\\)', 'stashedContentMerge(org.eclipse.jgit.api.StashApplyCommandTest)')","[241147, 241714]"
"('Description.java', 'org.junit.runner.Description', 'methodAndClassNamePatternGroupOrDefault', '([\\s\\S]*)\\((.*)\\)', 'testGetRefs_IgnoresGarbageRef1(org.eclipse.jgit.internal.storage.file.RefDirectoryTest)')","[257476, 258638]"
"('URIish.java', 'org.eclipse.jgit.transport.URIish', '<init>', '^(file):([\\\\/](?![\\\\/])((?:[A-Za-z]:)?[\\\\/]?(?:(?:[^\\\\/]+[\\\\/]+)*[^\\\\/]+[\\\\/]*)))$', 'https://me:wtf@example.com:80/D:\\x')",[22950]
"('Description.java', 'org.junit.runner.Description', 'methodAndClassNamePatternGroupOrDefault', '([\\s\\S]*)\\((.*)\\)', 'testManySolutionsCase4[OldRule? false](org.eclipse.jgit.ignore.IgnoreRuleSpecialCasesTest)')","[148169, 155274]"
"('Description.java', 'org.junit.runner.Description', 'methodAndClassNamePatternGroupOrDefault', '([\\s\\S]*)\\((.*)\\)', 'testValidTagHasNoTaggerHeader(org.eclipse.jgit.lib.ObjectCheckerTest)')","[122435, 124591]"
"('URIish.java', 'org.eclipse.jgit.transport.URIish', '<init>', '^(?:([^/:@]+)(?::([^\\\\/]+))?@)?((?:[^\\\\/:]+)|(?:\\[[0-9a-f:]+\\])):((?:(?:/~(?:[^\\\\/]+))[\\\\/])?(?:(?:[^\\\\/]+[\\\\/]+)*[^\\\\/]+[\\\\/]*))$', '/a/b/c.git/')",[66970]
"('URIish.java', 'org.eclipse.jgit.transport.URIish', '<init>', '^(file):([\\\\/](?![\\\\/])((?:[A-Za-z]:)?[\\\\/]?(?:(?:[^\\\\/]+[\\\\/]+)*[^\\\\/]+[\\\\/]*)))$', 'https://lusr\\example:wtf@example.com:80//')",[25020]
"('Description.java', 'org.junit.runner.Description', 'methodAndClassNamePatternGroupOrDefault', '([\\s\\S]*)\\((.*)\\)', 'testCreateOrphanBranchWithStartPoint(org.eclipse.jgit.api.CheckoutCommandTest)')","[207101, 207624]"
"('FastIgnoreRule.java', 'org.eclipse.jgit.ignore.FastIgnoreRule', 'isMatch', '[b-d][ab]', 'ca')",[161410]
"('Description.java', 'org.junit.runner.Description', 'methodAndClassNamePatternGroupOrDefault', '([\\s\\S]*)\\((.*)\\)', 'testModifyY(org.eclipse.jgit.api.ApplyCommandTest)')","[223610, 223850]"
"('Description.java', 'org.junit.runner.Description', 'methodAndClassNamePatternGroupOrDefault', '([\\s\\S]*)\\((.*)\\)', 'testSpecialGroupCase5[OldRule? false](org.eclipse.jgit.ignore.IgnoreRuleSpecialCasesTest)')","[145823, 152928]"
"('Description.java', 'org.junit.runner.Description', 'methodAndClassNamePatternGroupOrDefault', '([\\s\\S]*)\\((.*)\\)', 'testUnsupportedOptionalExtension(org.eclipse.jgit.dircache.DirCacheCGitCompatabilityTest)')","[90410, 90558]"
"('Description.java', 'org.junit.runner.Description', 'methodAndClassNamePatternGroupOrDefault', '([\\s\\S]*)\\((.*)\\)', 'testMaxObjectSizeDeltaBlock(org.eclipse.jgit.transport.PackParserTest)')","[72113, 72418]"
"('Description.java', 'org.junit.runner.Description', 'methodAndClassNamePatternGroupOrDefault', '([\\s\\S]*)\\((.*)\\)', 'testRefKeySameAsName(org.eclipse.jgit.internal.storage.file.RefUpdateTest)')","[253019, 253850]"
"('FastIgnoreRule.java', 'org.eclipse.jgit.ignore.FastIgnoreRule', 'isMatch', '[[\\p{javaDigit}\\p{javaLetter}_]]', 'ö')",[163284]
"('Description.java', 'org.junit.runner.Description', 'methodAndClassNamePatternGroupOrDefault', '([\\s\\S]*)\\((.*)\\)', 'testInvalidTagInvalidTaggerHeader3(org.eclipse.jgit.lib.ObjectCheckerTest)')","[121952, 124085]"
"('Description.java', 'org.junit.runner.Description', 'methodAndClassNamePatternGroupOrDefault', '([\\s\\S]*)\\((.*)\\)', 'testIteratorReturnedValues2(org.eclipse.jgit.internal.storage.file.PackIndexV1Test)')","[250175, 250306]"
"('Description.java', 'org.junit.runner.Description', 'methodAndClassNamePatternGroupOrDefault', '([\\s\\S]*)\\((.*)\\)', 'testWriteLine2(org.eclipse.jgit.diff.RawTextTest)')","[96493, 96706]"
"('Description.java', 'org.junit.runner.Description', 'methodAndClassNamePatternGroupOrDefault', '([\\s\\S]*)\\((.*)\\)', 'testOnlyOption_f1_1_f2_14_c(org.eclipse.jgit.api.CommitOnlyTest)')","[237791, 239900]"
"('Description.java', 'org.junit.runner.Description', 'methodAndClassNamePatternGroupOrDefault', '([\\s\\S]*)\\((.*)\\)', 'org.eclipse.jgit.internal.storage.file.PackIndexV2Test')","[248028, 248900]"
"('Description.java', 'org.junit.runner.Description', 'methodAndClassNamePatternGroupOrDefault', '([\\s\\S]*)\\((.*)\\)', 'testExecutableRetention(org.eclipse.jgit.api.CommitCommandTest)')","[212393, 212608]"
"('URIish.java', 'org.eclipse.jgit.transport.URIish', '<init>', '^(file):([\\\\/](?![\\\\/])((?:[A-Za-z]:)?[\\\\/]?(?:(?:[^\\\\/]+[\\\\/]+)*[^\\\\/]+[\\\\/]*)))$', 'file:///tmp/jgit_test_4365868416132416411_tmp/tmp_5907296020383359030.git/')",[173085]
"('Description.java', 'org.junit.runner.Description', 'methodAndClassNamePatternGroupOrDefault', '([\\s\\S]*)\\((.*)\\)', 'invalidWhenMoreThanOneWildcardInDestination(org.eclipse.jgit.transport.RefSpecTest)')","[14075, 15594]"
"('Description.java', 'org.junit.runner.Description', 'methodAndClassNamePatternGroupOrDefault', '([\\s\\S]*)\\((.*)\\)', 'testMaliciousAbsoluteWindowsPath1OnUnix(org.eclipse.jgit.lib.DirCacheCheckoutMaliciousPathTest)')","[112500, 113424]"
"('Description.java', 'org.junit.runner.Description', 'methodAndClassNamePatternGroupOrDefault', '([\\s\\S]*)\\((.*)\\)', 'testTrivialTwoWay_conflictSubtreeChange(org.eclipse.jgit.merge.SimpleMergeTest)')","[86544, 86826]"
"('Description.java', 'org.junit.runner.Description', 'methodAndClassNamePatternGroupOrDefault', '([\\s\\S]*)\\((.*)\\)', 'org.eclipse.jgit.util.RawParseUtilsTest')","[183574, 183726]"
"('URIish.java', 'org.eclipse.jgit.transport.URIish', '<init>', '^(file):([\\\\/](?![\\\\/])((?:[A-Za-z]:)?[\\\\/]?(?:(?:[^\\\\/]+[\\\\/]+)*[^\\\\/]+[\\\\/]*)))$', 'https://example.com/D:\\x')","[62738, 62922, 63842, 64026, 64946, 65130]"
"('URIish.java', 'org.eclipse.jgit.transport.URIish', '<init>', '^([a-z][a-z0-9+-]+)://(?:(?:([^/:@]+)(?::([^\\\\/]+))?@)?((?:[^\\\\/:]+)|(?:\\[[0-9a-f:]+\\]))(?::(\\d+))?((?:/~(?:[^\\\\/]+))?[\\\\/]))?(.+)?$', 'file:///tmp/jgit_test_7461712746911923641_tmp/tmp_176487003695858505')","[200701, 200763, 200823]"
"('URIish.java', 'org.eclipse.jgit.transport.URIish', '<init>', '^(file):([\\\\/](?![\\\\/])((?:[A-Za-z]:)?[\\\\/]?(?:(?:[^\\\\/]+[\\\\/]+)*[^\\\\/]+[\\\\/]*)))$', 'file:/tmp/jgit_test_2026574277638248347_tmp/tmp_1405723520377137753/.git/')",[128706]
"('URIish.java', 'org.eclipse.jgit.transport.URIish', '<init>', '^(file):([\\\\/](?![\\\\/])((?:[A-Za-z]:)?[\\\\/]?(?:(?:[^\\\\/]+[\\\\/]+)*[^\\\\/]+[\\\\/]*)))$', 'file:///tmp/jgit_test_6790445454086415234_tmp/tmp_6898910523624612735/.git/')",[175593]
"('Description.java', 'org.junit.runner.Description', 'methodAndClassNamePatternGroupOrDefault', '([\\s\\S]*)\\((.*)\\)', 'org.eclipse.jgit.revwalk.LIFORevQueueTest')","[78354, 78740]"
"('Description.java', 'org.junit.runner.Description', 'methodAndClassNamePatternGroupOrDefault', '([\\s\\S]*)\\((.*)\\)', 'testParseRename100_NewStyle(org.eclipse.jgit.patch.FileHeaderTest)')","[195201, 195647]"
"('Description.java', 'org.junit.runner.Description', 'methodAndClassNamePatternGroupOrDefault', '([\\s\\S]*)\\((.*)\\)', 'testACommitWithSubjectBodyBugLineWithASpaceAndSob(org.eclipse.jgit.util.ChangeIdUtilTest)')","[185672, 186424]"
"('Description.java', 'org.junit.runner.Description', 'methodAndClassNamePatternGroupOrDefault', '([\\s\\S]*)\\((.*)\\)', 'org.eclipse.jgit.transport.URIishTest')","[1066, 71356]"
"('Description.java', 'org.junit.runner.Description', 'methodAndClassNamePatternGroupOrDefault', '([\\s\\S]*)\\((.*)\\)', 'testGraphGroupCase3[OldRule? true](org.eclipse.jgit.ignore.IgnoreRuleSpecialCasesTest)')","[149961, 157045]"
"('URIish.java', 'org.eclipse.jgit.transport.URIish', '<init>', '^([\\\\/]?((?:[A-Za-z]:)?[\\\\/]?(?:(?:[^\\\\/]+[\\\\/]+)*[^\\\\/]+[\\\\/]*)))$', '/~some/p ath')","[68642, 68757]"
"('Description.java', 'org.junit.runner.Description', 'methodAndClassNamePatternGroupOrDefault', '([\\s\\S]*)\\((.*)\\)', 'testDiffRootTreeToNull(org.eclipse.jgit.diff.DiffFormatterTest)')","[96042, 96304]"
"('Description.java', 'org.junit.runner.Description', 'methodAndClassNamePatternGroupOrDefault', '([\\s\\S]*)\\((.*)\\)', 'testOnlyOption_f1_6_f2_14_d(org.eclipse.jgit.api.CommitOnlyTest)')","[237182, 239262]"
"('Description.java', 'org.junit.runner.Description', 'methodAndClassNamePatternGroupOrDefault', '([\\s\\S]*)\\((.*)\\)', 'noPushInsteadOf(org.eclipse.jgit.transport.RemoteConfigTest)')","[1940, 3296]"
"('Description.java', 'org.junit.runner.Description', 'methodAndClassNamePatternGroupOrDefault', '([\\s\\S]*)\\((.*)\\)', 'checkMergeEqualTreesInCore(org.eclipse.jgit.merge.ResolveMergerTest)')","[88183, 88507]"
"('URIish.java', 'org.eclipse.jgit.transport.URIish', '<init>', '^([\\\\/]?((?:[A-Za-z]:)?[\\\\/]?(?:(?:[^\\\\/]+[\\\\/]+)*[^\\\\/]+[\\\\/]*)))$', '/tmp/jgit_test_5311018649809901760_tmp/tmp_2572555623416741506')","[225645, 225790]"
"('URIish.java', 'org.eclipse.jgit.transport.URIish', '<init>', '^(file):([\\\\/](?![\\\\/])((?:[A-Za-z]:)?[\\\\/]?(?:(?:[^\\\\/]+[\\\\/]+)*[^\\\\/]+[\\\\/]*)))$', 'http://lusr\\example@1.2.3.4:80//abc')",[35598]
"('Description.java', 'org.junit.runner.Description', 'methodAndClassNamePatternGroupOrDefault', '([\\s\\S]*)\\((.*)\\)', 'testCheckBlob(org.eclipse.jgit.lib.ObjectCheckerTest)')","[122309, 124459]"
"('URIish.java', 'org.eclipse.jgit.transport.URIish', '<init>', '^(file):([\\\\/](?![\\\\/])((?:[A-Za-z]:)?[\\\\/]?(?:(?:[^\\\\/]+[\\\\/]+)*[^\\\\/]+[\\\\/]*)))$', 'http://me:wtf@1.2.3.4:1234/D:\\x')",[19447]
"('URIish.java', 'org.eclipse.jgit.transport.URIish', '<init>', '^([\\\\/]?((?:[A-Za-z]:)?[\\\\/]?(?:(?:[^\\\\/]+[\\\\/]+)*[^\\\\/]+[\\\\/]*)))$', 'D:/m y')","[69516, 69631]"
"('URIish.java', 'org.eclipse.jgit.transport.URIish', '<init>', '^(file):([\\\\/](?![\\\\/])((?:[A-Za-z]:)?[\\\\/]?(?:(?:[^\\\\/]+[\\\\/]+)*[^\\\\/]+[\\\\/]*)))$', 'file:///tmp/jgit_test_960711879172370885_tmp/tmp_8757266491092025519/.git/')",[173314]
"('Description.java', 'org.junit.runner.Description', 'methodAndClassNamePatternGroupOrDefault', '([\\s\\S]*)\\((.*)\\)', 'testAlias_ConnectionAttempts(org.eclipse.jgit.transport.OpenSshConfigTest)')","[3231, 3812]"
"('Description.java', 'org.junit.runner.Description', 'methodAndClassNamePatternGroupOrDefault', '([\\s\\S]*)\\((.*)\\)', 'testExactRename_DifferentObjects(org.eclipse.jgit.diff.RenameDetectorTest)')","[93405, 93969]"
"('URIish.java', 'org.eclipse.jgit.transport.URIish', '<init>', '^([a-z][a-z0-9+-]+)://(?:(?:([^/:@]+)(?::([^\\\\/]+))?@)?((?:[^\\\\/:]+)|(?:\\[[0-9a-f:]+\\]))(?::(\\d+))?((?:/~(?:[^\\\\/]+))?[\\\\/]))?(.+)?$', 'ssh+git://l usr\\example.com@1.2.3.4/D:\\x')","[44361, 44545]"
"('ChangeIdUtil.java', 'org.eclipse.jgit.util.ChangeIdUtil', 'indexOfChangeId', '(^Change-Id: *I[a-f0-9]{40}$)', 'ftp://example.com/ fixes this')",[190009]
"('Description.java', 'org.junit.runner.Description', 'methodAndClassNamePatternGroupOrDefault', '([\\s\\S]*)\\((.*)\\)', 'testInt4_1(org.eclipse.jgit.util.RawParseUtils_HexParseTest)')","[181133, 181199]"
"('Description.java', 'org.junit.runner.Description', 'methodAndClassNamePatternGroupOrDefault', '([\\s\\S]*)\\((.*)\\)', 'testDeletionAndConflict(org.eclipse.jgit.api.MergeCommandTest)')","[214038, 214968]"
"('Description.java', 'org.junit.runner.Description', 'methodAndClassNamePatternGroupOrDefault', '([\\s\\S]*)\\((.*)\\)', 'testSameModification(org.eclipse.jgit.merge.MergeAlgorithmTest)')","[87204, 87509]"
"('Description.java', 'org.junit.runner.Description', 'methodAndClassNamePatternGroupOrDefault', '([\\s\\S]*)\\((.*)\\)', 'testSimpleStarCase1[OldRule? true](org.eclipse.jgit.ignore.IgnoreRuleSpecialCasesTest)')","[150812, 157896]"
"('Description.java', 'org.junit.runner.Description', 'methodAndClassNamePatternGroupOrDefault', '([\\s\\S]*)\\((.*)\\)', 'org.eclipse.jgit.util.io.AutoCRLFOutputStreamTest')","[173540, 173766]"
"('URIish.java', 'org.eclipse.jgit.transport.URIish', '<init>', '^(file):([\\\\/](?![\\\\/])((?:[A-Za-z]:)?[\\\\/]?(?:(?:[^\\\\/]+[\\\\/]+)*[^\\\\/]+[\\\\/]*)))$', 'file:///tmp/jgit_test_2496960902150233223_tmp/tmp_3983418304402812009/.git/')",[133983]
"('URIish.java', 'org.eclipse.jgit.transport.URIish', '<init>', '^(file):([\\\\/](?![\\\\/])((?:[A-Za-z]:)?[\\\\/]?(?:(?:[^\\\\/]+[\\\\/]+)*[^\\\\/]+[\\\\/]*)))$', 'ssh+git://lusr\\example:wtf@1.2.3.4:80/D:\\x')",[17768]
"('Description.java', 'org.junit.runner.Description', 'methodAndClassNamePatternGroupOrDefault', '([\\s\\S]*)\\((.*)\\)', 'testUnsupportedGroupCase01[OldRule? true](org.eclipse.jgit.ignore.IgnoreRuleSpecialCasesTest)')","[150444, 157528]"
"('Description.java', 'org.junit.runner.Description', 'methodAndClassNamePatternGroupOrDefault', '([\\s\\S]*)\\((.*)\\)', 'testGetEmptyHumanishName(org.eclipse.jgit.transport.URIishTest)')","[1333, 4508]"
"('Description.java', 'org.junit.runner.Description', 'methodAndClassNamePatternGroupOrDefault', '([\\s\\S]*)\\((.*)\\)', 'workingDirectoryModify(org.eclipse.jgit.api.StashApplyCommandTest)')","[241105, 241670]"
"('URIish.java', 'org.eclipse.jgit.transport.URIish', '<init>', '^(file):([\\\\/](?![\\\\/])((?:[A-Za-z]:)?[\\\\/]?(?:(?:[^\\\\/]+[\\\\/]+)*[^\\\\/]+[\\\\/]*)))$', 'http://me@1.2.3.4:1234//abc')",[33206]
"('Description.java', 'org.junit.runner.Description', 'methodAndClassNamePatternGroupOrDefault', '([\\s\\S]*)\\((.*)\\)', 'testCheckoutOutChangesAutoCRLFInput(org.eclipse.jgit.lib.DirCacheCheckoutTest)')","[116473, 117446]"
"('URIish.java', 'org.eclipse.jgit.transport.URIish', '<init>', '^(file):([\\\\/](?![\\\\/])((?:[A-Za-z]:)?[\\\\/]?(?:(?:[^\\\\/]+[\\\\/]+)*[^\\\\/]+[\\\\/]*)))$', 'https://lusr\\example@[::1]:80//')",[39232]
"('Description.java', 'org.junit.runner.Description', 'methodAndClassNamePatternGroupOrDefault', '([\\s\\S]*)\\((.*)\\)', 'testLarge_SingleWrite(org.eclipse.jgit.util.TemporaryBufferTest)')","[178427, 178727]"
"('Description.java', 'org.junit.runner.Description', 'methodAndClassNamePatternGroupOrDefault', '([\\s\\S]*)\\((.*)\\)', 'testTree(org.eclipse.jgit.lib.RepositoryResolveTest)')","[125218, 125684]"
"('Description.java', 'org.junit.runner.Description', 'methodAndClassNamePatternGroupOrDefault', '([\\s\\S]*)\\((.*)\\)', 'testUpdateRefForwardWithCheck1(org.eclipse.jgit.internal.storage.file.RefUpdateTest)')","[253145, 253982]"
"('Description.java', 'org.junit.runner.Description', 'methodAndClassNamePatternGroupOrDefault', '([\\s\\S]*)\\((.*)\\)', 'org.eclipse.jgit.transport.BundleWriterTest')","[26252, 74883]"
"('Description.java', 'org.junit.runner.Description', 'methodAndClassNamePatternGroupOrDefault', '([\\s\\S]*)\\((.*)\\)', 'lockFailedExceptionRecovery(org.eclipse.jgit.internal.storage.file.LockFileTest)')","[252455, 252477]"
"('URIish.java', 'org.eclipse.jgit.transport.URIish', '<init>', '^(file):([\\\\/](?![\\\\/])((?:[A-Za-z]:)?[\\\\/]?(?:(?:[^\\\\/]+[\\\\/]+)*[^\\\\/]+[\\\\/]*)))$', '/tmp/jgit_test_3192177335269722876_tmp/tmp_3678193557651606518')","[225088, 225213, 225393]"
"('Description.java', 'org.junit.runner.Description', 'methodAndClassNamePatternGroupOrDefault', '([\\s\\S]*)\\((.*)\\)', 'testEqualsWithWhitespace(org.eclipse.jgit.diff.RawTextIgnoreLeadingWhitespaceTest)')","[98319, 98363]"
"('Description.java', 'org.junit.runner.Description', 'methodAndClassNamePatternGroupOrDefault', '([\\s\\S]*)\\((.*)\\)', 'testBuilder_Set(org.eclipse.jgit.util.RefListTest)')","[179821, 180352]"
"('FastIgnoreRule.java', 'org.eclipse.jgit.ignore.FastIgnoreRule', 'isMatch', 'a.b', 'b')",[162242]
"('Description.java', 'org.junit.runner.Description', 'methodAndClassNamePatternGroupOrDefault', '([\\s\\S]*)\\((.*)\\)', 'testSimpleCharClass[OldRule? true](org.eclipse.jgit.ignore.FastIgnoreRuleTest)')","[164408, 165144]"
"('Description.java', 'org.junit.runner.Description', 'methodAndClassNamePatternGroupOrDefault', '([\\s\\S]*)\\((.*)\\)', 'test005_addRecursiveTree(org.eclipse.jgit.lib.T0002_TreeTest)')","[119859, 120158]"
"('URIish.java', 'org.eclipse.jgit.transport.URIish', '<init>', '^(file):([\\\\/](?![\\\\/])((?:[A-Za-z]:)?[\\\\/]?(?:(?:[^\\\\/]+[\\\\/]+)*[^\\\\/]+[\\\\/]*)))$', 'ssh://l usr\\example.com:wtf@[::1]:1234//abc')",[11923]
"('ChangeIdUtil.java', 'org.eclipse.jgit.util.ChangeIdUtil', 'indexOfChangeId', '(^Change-Id: *I[a-f0-9]{40}$)', 'more text')",[190767]
"('Description.java', 'org.junit.runner.Description', 'methodAndClassNamePatternGroupOrDefault', '([\\s\\S]*)\\((.*)\\)', 'test000_openrepo_default_gitDirAndWorkTreeSet(org.eclipse.jgit.internal.storage.file.T0003_BasicTest)')","[249062, 249593]"
"('URIish.java', 'org.eclipse.jgit.transport.URIish', '<init>', '^([a-z][a-z0-9+-]+)://(?:(?:([^/:@]+)(?::([^\\\\/]+))?@)?((?:[^\\\\/:]+)|(?:\\[[0-9a-f:]+\\]))(?::(\\d+))?((?:/~(?:[^\\\\/]+))?[\\\\/]))?(.+)?$', 'http://l usr\\example.com@1.2.3.4//')","[47535, 47719]"
"('URIish.java', 'org.eclipse.jgit.transport.URIish', '<init>', '^(file):([\\\\/](?![\\\\/])((?:[A-Za-z]:)?[\\\\/]?(?:(?:[^\\\\/]+[\\\\/]+)*[^\\\\/]+[\\\\/]*)))$', 'https://l usr\\example.com@[::1]:80/D:/x')",[38220]
"('Description.java', 'org.junit.runner.Description', 'methodAndClassNamePatternGroupOrDefault', '([\\s\\S]*)\\((.*)\\)', 'testSplit[OldRule? false](org.eclipse.jgit.ignore.FastIgnoreRuleTest)')","[163996, 164753]"
"('URIish.java', 'org.eclipse.jgit.transport.URIish', '<init>', '^([a-z][a-z0-9+-]+)://(?:(?:([^/:@]+)(?::([^\\\\/]+))?@)?((?:[^\\\\/:]+)|(?:\\[[0-9a-f:]+\\]))(?::(\\d+))?((?:/~(?:[^\\\\/]+))?[\\\\/]))?(.+)?$', 'http://l usr\\example.com@[::1]:80/D:\\x')",[34977]
"('URIish.java', 'org.eclipse.jgit.transport.URIish', '<init>', '^([\\\\/]?((?:[A-Za-z]:)?[\\\\/]?(?:(?:[^\\\\/]+[\\\\/]+)*[^\\\\/]+[\\\\/]*)))$', '/abc.git/')",[66786]
"('Description.java', 'org.junit.runner.Description', 'methodAndClassNamePatternGroupOrDefault', '([\\s\\S]*)\\((.*)\\)', 'invalidSetDestination(org.eclipse.jgit.transport.RefSpecTest)')","[14444, 15974]"
"('Description.java', 'org.junit.runner.Description', 'methodAndClassNamePatternGroupOrDefault', '([\\s\\S]*)\\((.*)\\)', 'org.eclipse.jgit.api.BlameCommandTest')","[244369, 248309]"
"('Description.java', 'org.junit.runner.Description', 'methodAndClassNamePatternGroupOrDefault', '([\\s\\S]*)\\((.*)\\)', 'testWritePack4ThinPack(org.eclipse.jgit.internal.storage.file.PackWriterTest)')","[251428, 251882]"
"('Description.java', 'org.junit.runner.Description', 'methodAndClassNamePatternGroupOrDefault', '([\\s\\S]*)\\((.*)\\)', 'testBug368927(org.eclipse.jgit.revplot.PlotCommitListTest)')","[197024, 197342]"
"('URIish.java', 'org.eclipse.jgit.transport.URIish', '<init>', '^(file):([\\\\/](?![\\\\/])((?:[A-Za-z]:)?[\\\\/]?(?:(?:[^\\\\/]+[\\\\/]+)*[^\\\\/]+[\\\\/]*)))$', 'https://1.2.3.4//')","[62968, 63152, 64072, 64256, 65176, 65360]"
"('Description.java', 'org.junit.runner.Description', 'methodAndClassNamePatternGroupOrDefault', '([\\s\\S]*)\\((.*)\\)', 'testLocalTransportFetchWithoutLocalRepository(org.eclipse.jgit.transport.TransportTest)')","[71570, 71744]"
"('URIish.java', 'org.eclipse.jgit.transport.URIish', '<init>', '^([a-z][a-z0-9+-]+)://(?:(?:([^/:@]+)(?::([^\\\\/]+))?@)?((?:[^\\\\/:]+)|(?:\\[[0-9a-f:]+\\]))(?::(\\d+))?((?:/~(?:[^\\\\/]+))?[\\\\/]))?(.+)?$', 'ssh+git://me:wtf@example.com:80/D:/x')",[14272]
"('URIish.java', 'org.eclipse.jgit.transport.URIish', '<init>', '^(file):([\\\\/](?![\\\\/])((?:[A-Za-z]:)?[\\\\/]?(?:(?:[^\\\\/]+[\\\\/]+)*[^\\\\/]+[\\\\/]*)))$', 'ssh+git://lusr\\example@[::1]:1234//abc')",[32470]
"('FastIgnoreRule.java', 'org.eclipse.jgit.ignore.FastIgnoreRule', 'isMatch', '..', 'a')",[160134]
"('ChangeIdUtil.java', 'org.eclipse.jgit.util.ChangeIdUtil', 'indexOfChangeId', '(^Change-Id: *I[a-f0-9]{40}$)', 'd')",[191027]
"('Description.java', 'org.junit.runner.Description', 'methodAndClassNamePatternGroupOrDefault', '([\\s\\S]*)\\((.*)\\)', 'testBuildEmpty(org.eclipse.jgit.dircache.DirCacheBuilderTest)')","[91736, 91928]"
"('URIish.java', 'org.eclipse.jgit.transport.URIish', '<init>', '^(file):([\\\\/](?![\\\\/])((?:[A-Za-z]:)?[\\\\/]?(?:(?:[^\\\\/]+[\\\\/]+)*[^\\\\/]+[\\\\/]*)))$', 'file:/tmp/jgit_test_2932023989078420112_tmp/tmp_8275709076875192253/.git/')",[174184]
"('Description.java', 'org.junit.runner.Description', 'methodAndClassNamePatternGroupOrDefault', '([\\s\\S]*)\\((.*)\\)', 'testOneByte(org.eclipse.jgit.util.TemporaryBufferTest)')","[178322, 178617]"
"('Description.java', 'org.junit.runner.Description', 'methodAndClassNamePatternGroupOrDefault', '([\\s\\S]*)\\((.*)\\)', 'testCherryPickConflictResolutionNoCOmmit(org.eclipse.jgit.api.CherryPickCommandTest)')","[232295, 232559]"
"('Description.java', 'org.junit.runner.Description', 'methodAndClassNamePatternGroupOrDefault', '([\\s\\S]*)\\((.*)\\)', 'testParseAllFields(org.eclipse.jgit.revwalk.RevTagParseTest)')","[80186, 80593]"
"('Description.java', 'org.junit.runner.Description', 'methodAndClassNamePatternGroupOrDefault', '([\\s\\S]*)\\((.*)\\)', 'testParseGitDescribeOutput(org.eclipse.jgit.lib.RepositoryResolveTest)')","[125449, 125926]"
"('Description.java', 'org.junit.runner.Description', 'methodAndClassNamePatternGroupOrDefault', '([\\s\\S]*)\\((.*)\\)', 'testGrowPath(org.eclipse.jgit.treewalk.AbstractTreeIteratorTest)')","[134534, 134688]"
"('Description.java', 'org.junit.runner.Description', 'methodAndClassNamePatternGroupOrDefault', '([\\s\\S]*)\\((.*)\\)', 'testManySolutionsCase4[OldRule? true](org.eclipse.jgit.ignore.IgnoreRuleSpecialCasesTest)')","[151732, 158816]"
"('URIish.java', 'org.eclipse.jgit.transport.URIish', '<init>', '^([\\\\/]?((?:[A-Za-z]:)?[\\\\/]?(?:(?:[^\\\\/]+[\\\\/]+)*[^\\\\/]+[\\\\/]*)))$', '/tmp/jgit_test_1455034780842305248_tmp/tmp_3250047937077610167')","[232679, 232824, 233020]"
"('URIish.java', 'org.eclipse.jgit.transport.URIish', '<init>', '^([a-z][a-z0-9+-]+)://(?:(?:([^/:@]+)(?::([^\\\\/]+))?@)?((?:[^\\\\/:]+)|(?:\\[[0-9a-f:]+\\]))(?::(\\d+))?((?:/~(?:[^\\\\/]+))?[\\\\/]))?(.+)?$', 'ssh://me@[::1]:80/D:/x')",[27140]
"('Description.java', 'org.junit.runner.Description', 'methodAndClassNamePatternGroupOrDefault', '([\\s\\S]*)\\((.*)\\)', 'testDerefBlob(org.eclipse.jgit.lib.RepositoryResolveTest)')","[125491, 125970]"
"('Description.java', 'org.junit.runner.Description', 'methodAndClassNamePatternGroupOrDefault', '([\\s\\S]*)\\((.*)\\)', 'testTimeout_writeByte_Success2(org.eclipse.jgit.util.io.TimeoutOutputStreamTest)')","[172602, 172795]"
"('Description.java', 'org.junit.runner.Description', 'methodAndClassNamePatternGroupOrDefault', '([\\s\\S]*)\\((.*)\\)', 'testReadSimplePackedRefSameRepo(org.eclipse.jgit.lib.RefTest)')","[115481, 115672]"
"('Description.java', 'org.junit.runner.Description', 'methodAndClassNamePatternGroupOrDefault', '([\\s\\S]*)\\((.*)\\)', 'testRenameBranchHasPreviousLog(org.eclipse.jgit.internal.storage.file.RefUpdateTest)')","[252914, 253740]"
"('Description.java', 'org.junit.runner.Description', 'methodAndClassNamePatternGroupOrDefault', '([\\s\\S]*)\\((.*)\\)', 'testDeleteFile(org.eclipse.jgit.util.FileUtilTest)')","[176701, 177046]"
"('Description.java', 'org.junit.runner.Description', 'methodAndClassNamePatternGroupOrDefault', '([\\s\\S]*)\\((.*)\\)', 'testTwoGroupsCase0[OldRule? true](org.eclipse.jgit.ignore.IgnoreRuleSpecialCasesTest)')","[150697, 157781]"
"('Description.java', 'org.junit.runner.Description', 'methodAndClassNamePatternGroupOrDefault', '([\\s\\S]*)\\((.*)\\)', 'repositoryWithUnconfiguredSubmodule(org.eclipse.jgit.submodule.SubmoduleUpdateTest)')","[107660, 107746]"
"('Description.java', 'org.junit.runner.Description', 'methodAndClassNamePatternGroupOrDefault', '([\\s\\S]*)\\((.*)\\)', 'testUpdateDelete(org.eclipse.jgit.transport.PushProcessTest)')","[73984, 74345]"
"('Description.java', 'org.junit.runner.Description', 'methodAndClassNamePatternGroupOrDefault', '([\\s\\S]*)\\((.*)\\)', 'testStopOnConflictAndSkipWithConflict(org.eclipse.jgit.api.RebaseCommandTest)')","[218719, 220258]"
"('Description.java', 'org.junit.runner.Description', 'methodAndClassNamePatternGroupOrDefault', '([\\s\\S]*)\\((.*)\\)', 'testRenameOverExistingFile(org.eclipse.jgit.util.FileUtilTest)')","[176743, 177090]"
"('URIish.java', 'org.eclipse.jgit.transport.URIish', '<init>', '^(file):([\\\\/](?![\\\\/])((?:[A-Za-z]:)?[\\\\/]?(?:(?:[^\\\\/]+[\\\\/]+)*[^\\\\/]+[\\\\/]*)))$', 'https://[::1]/D:\\x')","[63474, 63658, 64578, 64762, 65705, 65889]"
"('Description.java', 'org.junit.runner.Description', 'methodAndClassNamePatternGroupOrDefault', '([\\s\\S]*)\\((.*)\\)', 'test1(org.eclipse.jgit.revwalk.RevWalkPathFilter6012Test)')","[85699, 85847]"
"('URIish.java', 'org.eclipse.jgit.transport.URIish', '<init>', '^([a-z][a-z0-9+-]+)://(?:(?:([^/:@]+)(?::([^\\\\/]+))?@)?((?:[^\\\\/:]+)|(?:\\[[0-9a-f:]+\\]))(?::(\\d+))?((?:/~(?:[^\\\\/]+))?[\\\\/]))?(.+)?$', 'file:///tmp/jgit_test_9196781976966621040_tmp/tmp_2995568672839144646/.git/')",[132704]
"('Description.java', 'org.junit.runner.Description', 'methodAndClassNamePatternGroupOrDefault', '([\\s\\S]*)\\((.*)\\)', 'testInvalidCommitNoCommitter2(org.eclipse.jgit.lib.ObjectCheckerTest)')","[122120, 124261]"
"('URIish.java', 'org.eclipse.jgit.transport.URIish', '<init>', '^(file):([\\\\/](?![\\\\/])((?:[A-Za-z]:)?[\\\\/]?(?:(?:[^\\\\/]+[\\\\/]+)*[^\\\\/]+[\\\\/]*)))$', 'https://lusr\\example:wtf@1.2.3.4:1234/D:\\x')",[25342]
"('URIish.java', 'org.eclipse.jgit.transport.URIish', '<init>', '^(?:([^/:@]+)(?::([^\\\\/]+))?@)?((?:[^\\\\/:]+)|(?:\\[[0-9a-f:]+\\])):((?:(?:/~(?:[^\\\\/]+))[\\\\/])?(?:(?:[^\\\\/]+[\\\\/]+)*[^\\\\/]+[\\\\/]*))$', '/some/dir')","[5963, 6373, 6681, 6801, 7903, 8284, 8404, 8627, 9350, 9472, 9865, 10620, 10740, 11507]"
"('Description.java', 'org.junit.runner.Description', 'methodAndClassNamePatternGroupOrDefault', '([\\s\\S]*)\\((.*)\\)', 'testLF(org.eclipse.jgit.util.io.EolCanonicalizingInputStreamTest)')","[174682, 174834]"
"('Description.java', 'org.junit.runner.Description', 'methodAndClassNamePatternGroupOrDefault', '([\\s\\S]*)\\((.*)\\)', 'testGetRefs_LooseSorting_Bug_348834(org.eclipse.jgit.internal.storage.file.RefDirectoryTest)')","[257791, 258968]"
"('URIish.java', 'org.eclipse.jgit.transport.URIish', '<init>', '^([a-z][a-z0-9+-]+)://(?:(?:([^/:@]+)(?::([^\\\\/]+))?@)?((?:[^\\\\/:]+)|(?:\\[[0-9a-f:]+\\]))(?::(\\d+))?((?:/~(?:[^\\\\/]+))?[\\\\/]))?(.+)?$', 'ssh://me:wtf@1.2.3.4:1234//')",[8089]
"('Description.java', 'org.junit.runner.Description', 'methodAndClassNamePatternGroupOrDefault', '([\\s\\S]*)\\((.*)\\)', 'testGetRefs_CorruptObjectIdReference(org.eclipse.jgit.internal.storage.file.RefDirectoryTest)')","[257749, 258924]"
"('URIish.java', 'org.eclipse.jgit.transport.URIish', '<init>', '^(file):([\\\\/](?![\\\\/])((?:[A-Za-z]:)?[\\\\/]?(?:(?:[^\\\\/]+[\\\\/]+)*[^\\\\/]+[\\\\/]*)))$', 'ssh+git://me:wtf@example.com:80//')",[14010]
"('URIish.java', 'org.eclipse.jgit.transport.URIish', '<init>', '^([\\\\/]?((?:[A-Za-z]:)?[\\\\/]?(?:(?:[^\\\\/]+[\\\\/]+)*[^\\\\/]+[\\\\/]*)))$', '/tmp/jgit_test_2860132279759404209_tmp/tmp_6329217645268813068')","[229567, 229712, 230142]"
"('Description.java', 'org.junit.runner.Description', 'methodAndClassNamePatternGroupOrDefault', '([\\s\\S]*)\\((.*)\\)', 'testMultipleCreations(org.eclipse.jgit.api.MergeCommandTest)')","[213996, 214924]"
"('Description.java', 'org.junit.runner.Description', 'methodAndClassNamePatternGroupOrDefault', '([\\s\\S]*)\\((.*)\\)', 'testConstructor_Peeled(org.eclipse.jgit.lib.ObjectIdRefTest)')","[109737, 109802]"
"('Description.java', 'org.junit.runner.Description', 'methodAndClassNamePatternGroupOrDefault', '([\\s\\S]*)\\((.*)\\)', 'testRevision(org.eclipse.jgit.gitrepo.RepoCommandTest)')","[139988, 140292]"
"('URIish.java', 'org.eclipse.jgit.transport.URIish', '<init>', '^(file):([\\\\/](?![\\\\/])((?:[A-Za-z]:)?[\\\\/]?(?:(?:[^\\\\/]+[\\\\/]+)*[^\\\\/]+[\\\\/]*)))$', 'ssh://l usr\\example.com:wtf@[::1]:1234/D:/x')",[11969]
"('Description.java', 'org.junit.runner.Description', 'methodAndClassNamePatternGroupOrDefault', '([\\s\\S]*)\\((.*)\\)', 'testEditSameNoteDifferentContent(org.eclipse.jgit.notes.NoteMapMergerTest)')","[199626, 199986]"
"('URIish.java', 'org.eclipse.jgit.transport.URIish', '<init>', '^([a-z][a-z0-9+-]+)://(?:(?:([^/:@]+)(?::([^\\\\/]+))?@)?((?:[^\\\\/:]+)|(?:\\[[0-9a-f:]+\\]))(?::(\\d+))?((?:/~(?:[^\\\\/]+))?[\\\\/]))?(.+)?$', 'file:///tmp/jgit_test_5056712748056798557_tmp/tmp_1508340179061609147/.git/')",[134328]
"('URIish.java', 'org.eclipse.jgit.transport.URIish', 'getHumanishName', '^([\\\\/]?((?:[A-Za-z]:)?[\\\\/]?(?:(?:[^\\\\/]+[\\\\/]+)*[^\\\\/]+[\\\\/]*)))$', '/abc/')","[67200, 71333]"
"('Description.java', 'org.junit.runner.Description', 'methodAndClassNamePatternGroupOrDefault', '([\\s\\S]*)\\((.*)\\)', 'testTwoRangesInOneGroupCase0[OldRule? false](org.eclipse.jgit.ignore.IgnoreRuleSpecialCasesTest)')","[148905, 156010]"
"('Description.java', 'org.junit.runner.Description', 'methodAndClassNamePatternGroupOrDefault', '([\\s\\S]*)\\((.*)\\)', 'testOnlyOption_f1_4_d(org.eclipse.jgit.api.CommitOnlyTest)')","[236311, 238382]"
"('Description.java', 'org.junit.runner.Description', 'methodAndClassNamePatternGroupOrDefault', '([\\s\\S]*)\\((.*)\\)', 'testFormatWithConflictsNoFooter(org.eclipse.jgit.merge.MergeMessageFormatterTest)')","[88905, 89225]"
"('Description.java', 'org.junit.runner.Description', 'methodAndClassNamePatternGroupOrDefault', '([\\s\\S]*)\\((.*)\\)', 'testMixedResetWithUnmerged(org.eclipse.jgit.api.ResetCommandTest)')","[204436, 204778]"
"('URIish.java', 'org.eclipse.jgit.transport.URIish', '<init>', '^([a-z][a-z0-9+-]+)://(?:(?:([^/:@]+)(?::([^\\\\/]+))?@)?((?:[^\\\\/:]+)|(?:\\[[0-9a-f:]+\\]))(?::(\\d+))?((?:/~(?:[^\\\\/]+))?[\\\\/]))?(.+)?$', 'ssh+git://lusr\\example:wtf@example.com:80/D:\\x')",[17423]
"('Description.java', 'org.junit.runner.Description', 'methodAndClassNamePatternGroupOrDefault', '([\\s\\S]*)\\((.*)\\)', 'testInvalidTagNoTagHeader1(org.eclipse.jgit.lib.ObjectCheckerTest)')","[121973, 124107]"
"('Description.java', 'org.junit.runner.Description', 'methodAndClassNamePatternGroupOrDefault', '([\\s\\S]*)\\((.*)\\)', 'testDiffTwoCommits(org.eclipse.jgit.api.DiffCommandTest)')","[234392, 234521]"
"('URIish.java', 'org.eclipse.jgit.transport.URIish', '<init>', '^(file):([\\\\/](?![\\\\/])((?:[A-Za-z]:)?[\\\\/]?(?:(?:[^\\\\/]+[\\\\/]+)*[^\\\\/]+[\\\\/]*)))$', 'https://lusr\\example@1.2.3.4:80/D:/x')",[38956]
"('Description.java', 'org.junit.runner.Description', 'methodAndClassNamePatternGroupOrDefault', '([\\s\\S]*)\\((.*)\\)', 'testNonNotesWithNonNoteConflict(org.eclipse.jgit.notes.NoteMapMergerTest)')","[199689, 200052]"
"('URIish.java', 'org.eclipse.jgit.transport.URIish', '<init>', '^([a-z][a-z0-9+-]+)://(?:(?:([^/:@]+)(?::([^\\\\/]+))?@)?((?:[^\\\\/:]+)|(?:\\[[0-9a-f:]+\\]))(?::(\\d+))?((?:/~(?:[^\\\\/]+))?[\\\\/]))?(.+)?$', '/tmp/jgit_test_2725117978470059884_tmp/tmp_193317894193640660')","[210705, 210866, 211234]"
"('Description.java', 'org.junit.runner.Description', 'methodAndClassNamePatternGroupOrDefault', '([\\s\\S]*)\\((.*)\\)', 'testOnlyOption_f1_7_c(org.eclipse.jgit.api.CommitOnlyTest)')","[236605, 238690]"
"('URIish.java', 'org.eclipse.jgit.transport.URIish', '<init>', '^(file):([\\\\/](?![\\\\/])((?:[A-Za-z]:)?[\\\\/]?(?:(?:[^\\\\/]+[\\\\/]+)*[^\\\\/]+[\\\\/]*)))$', 'ssh://l usr\\example.com:wtf@[::1]:1234/D:\\x')",[12015]
"('URIish.java', 'org.eclipse.jgit.transport.URIish', '<init>', '^([a-z][a-z0-9+-]+)://(?:(?:([^/:@]+)(?::([^\\\\/]+))?@)?((?:[^\\\\/:]+)|(?:\\[[0-9a-f:]+\\]))(?::(\\d+))?((?:/~(?:[^\\\\/]+))?[\\\\/]))?(.+)?$', 'ssh://me@example.com/D:\\x')","[39577, 39761]"
"('URIish.java', 'org.eclipse.jgit.transport.URIish', '<init>', '^(file):([\\\\/](?![\\\\/])((?:[A-Za-z]:)?[\\\\/]?(?:(?:[^\\\\/]+[\\\\/]+)*[^\\\\/]+[\\\\/]*)))$', 'ssh+git://lusr\\example:wtf@[::1]:1234//abc')",[17860]
"('Description.java', 'org.junit.runner.Description', 'methodAndClassNamePatternGroupOrDefault', '([\\s\\S]*)\\((.*)\\)', 'testGraphGroupCase1[OldRule? true](org.eclipse.jgit.ignore.IgnoreRuleSpecialCasesTest)')","[149915, 156999]"
"('Description.java', 'org.junit.runner.Description', 'methodAndClassNamePatternGroupOrDefault', '([\\s\\S]*)\\((.*)\\)', 'testMixedGroupCase6[OldRule? true](org.eclipse.jgit.ignore.IgnoreRuleSpecialCasesTest)')","[149777, 156861]"
"('Description.java', 'org.junit.runner.Description', 'methodAndClassNamePatternGroupOrDefault', '([\\s\\S]*)\\((.*)\\)', 'testEmptyIteratorOnEmptyDirectory(org.eclipse.jgit.treewalk.FileTreeIteratorTest)')","[131354, 131698]"
"('Description.java', 'org.junit.runner.Description', 'methodAndClassNamePatternGroupOrDefault', '([\\s\\S]*)\\((.*)\\)', 'testEscapedBracket6[OldRule? true](org.eclipse.jgit.ignore.IgnoreRuleSpecialCasesTest)')","[152790, 159874]"
"('URIish.java', 'org.eclipse.jgit.transport.URIish', '<init>', '^([a-z][a-z0-9+-]+)://(?:(?:([^/:@]+)(?::([^\\\\/]+))?@)?((?:[^\\\\/:]+)|(?:\\[[0-9a-f:]+\\]))(?::(\\d+))?((?:/~(?:[^\\\\/]+))?[\\\\/]))?(.+)?$', 'https://me:wtf@1.2.3.4:80//abc')",[23249]
"('Description.java', 'org.junit.runner.Description', 'methodAndClassNamePatternGroupOrDefault', '([\\s\\S]*)\\((.*)\\)', 'testNonTranslatedBundle(org.eclipse.jgit.nls.TranslationBundleTest)')","[99, 426]"
"('URIish.java', 'org.eclipse.jgit.transport.URIish', '<init>', '^([a-z][a-z0-9+-]+)://(?:(?:([^/:@]+)(?::([^\\\\/]+))?@)?((?:[^\\\\/:]+)|(?:\\[[0-9a-f:]+\\]))(?::(\\d+))?((?:/~(?:[^\\\\/]+))?[\\\\/]))?(.+)?$', 'ssh://lusr\\example:wtf@example.com:80/D:/x')",[12664]
"('Description.java', 'org.junit.runner.Description', 'methodAndClassNamePatternGroupOrDefault', '([\\s\\S]*)\\((.*)\\)', 'testVerySimpleWildcardCase0[OldRule? false](org.eclipse.jgit.ignore.IgnoreRuleSpecialCasesTest)')","[147640, 154745]"
"('Description.java', 'org.junit.runner.Description', 'methodAndClassNamePatternGroupOrDefault', '([\\s\\S]*)\\((.*)\\)', 'testTypes(org.eclipse.jgit.patch.EditListTest)')","[194386, 194450]"
"('URIish.java', 'org.eclipse.jgit.transport.URIish', '<init>', '^([a-z][a-z0-9+-]+)://(?:(?:([^/:@]+)(?::([^\\\\/]+))?@)?((?:[^\\\\/:]+)|(?:\\[[0-9a-f:]+\\]))(?::(\\d+))?((?:/~(?:[^\\\\/]+))?[\\\\/]))?(.+)?$', 'D:/m y')","[69447, 69562]"
"('URIish.java', 'org.eclipse.jgit.transport.URIish', '<init>', '^([a-z][a-z0-9+-]+)://(?:(?:([^/:@]+)(?::([^\\\\/]+))?@)?((?:[^\\\\/:]+)|(?:\\[[0-9a-f:]+\\]))(?::(\\d+))?((?:/~(?:[^\\\\/]+))?[\\\\/]))?(.+)?$', 'http://l usr\\example.com:wtf@1.2.3.4:1234//abc')",[20834]
"('Description.java', 'org.junit.runner.Description', 'methodAndClassNamePatternGroupOrDefault', '([\\s\\S]*)\\((.*)\\)', 'testModifySettings(org.eclipse.jgit.internal.storage.file.PackWriterTest)')","[251512, 251970]"
"('Description.java', 'org.junit.runner.Description', 'methodAndClassNamePatternGroupOrDefault', '([\\s\\S]*)\\((.*)\\)', 'testRebasePreservingMerges1(org.eclipse.jgit.api.RebaseCommandTest)')","[217417, 218894]"
"('URIish.java', 'org.eclipse.jgit.transport.URIish', '<init>', '^(file):([\\\\/](?![\\\\/])((?:[A-Za-z]:)?[\\\\/]?(?:(?:[^\\\\/]+[\\\\/]+)*[^\\\\/]+[\\\\/]*)))$', 'https://lusr\\example:wtf@[::1]:1234/D:\\x')",[25710]
"('URIish.java', 'org.eclipse.jgit.transport.URIish', '<init>', '^(file):([\\\\/](?![\\\\/])((?:[A-Za-z]:)?[\\\\/]?(?:(?:[^\\\\/]+[\\\\/]+)*[^\\\\/]+[\\\\/]*)))$', 'file:///tmp/jgit_test_8819223662949971083_tmp/tmp_1586135870031276916.git/')","[211091, 211146]"
"('URIish.java', 'org.eclipse.jgit.transport.URIish', '<init>', '^(file):([\\\\/](?![\\\\/])((?:[A-Za-z]:)?[\\\\/]?(?:(?:[^\\\\/]+[\\\\/]+)*[^\\\\/]+[\\\\/]*)))$', 'file:///tmp/jgit_test_8267827428869162458_tmp/tmp_7190135820610932583/.git/')",[205477]
"('Description.java', 'org.junit.runner.Description', 'methodAndClassNamePatternGroupOrDefault', '([\\s\\S]*)\\((.*)\\)', 'testFilter_ALL_Or_NONE(org.eclipse.jgit.revwalk.RevWalkFilterTest)')","[83146, 83466]"
"('URIish.java', 'org.eclipse.jgit.transport.URIish', '<init>', '^([a-z][a-z0-9+-]+)://(?:(?:([^/:@]+)(?::([^\\\\/]+))?@)?((?:[^\\\\/:]+)|(?:\\[[0-9a-f:]+\\]))(?::(\\d+))?((?:/~(?:[^\\\\/]+))?[\\\\/]))?(.+)?$', 'https://l usr\\example.com:wtf@[::1]:80//')",[24675]
"('URIish.java', 'org.eclipse.jgit.transport.URIish', '<init>', '^(file):([\\\\/](?![\\\\/])((?:[A-Za-z]:)?[\\\\/]?(?:(?:[^\\\\/]+[\\\\/]+)*[^\\\\/]+[\\\\/]*)))$', 'https://me@[::1]/D:\\x')","[50226, 50410]"
"('URIish.java', 'org.eclipse.jgit.transport.URIish', 'getHumanishName', '^([\\\\/]?((?:[A-Za-z]:)?[\\\\/]?(?:(?:[^\\\\/]+[\\\\/]+)*[^\\\\/]+[\\\\/]*)))$', '/abc/.git')",[68159]
"('URIish.java', 'org.eclipse.jgit.transport.URIish', '<init>', '^(?:([^/:@]+)(?::([^\\\\/]+))?@)?((?:[^\\\\/:]+)|(?:\\[[0-9a-f:]+\\])):((?:(?:/~(?:[^\\\\/]+))[\\\\/])?(?:(?:[^\\\\/]+[\\\\/]+)*[^\\\\/]+[\\\\/]*))$', '/tmp/jgit_test_47688348811366599_tmp/tmp_1522576617666632427')","[206159, 206364, 207896, 208046, 208386]"
"('Description.java', 'org.junit.runner.Description', 'methodAndClassNamePatternGroupOrDefault', '([\\s\\S]*)\\((.*)\\)', 'org.eclipse.jgit.diff.DiffFormatterReflowTest')","[94204, 94657]"
"('Description.java', 'org.junit.runner.Description', 'methodAndClassNamePatternGroupOrDefault', '([\\s\\S]*)\\((.*)\\)', 'testReadStringRaw2(org.eclipse.jgit.transport.PacketLineInTest)')","[18007, 19178]"
"('Description.java', 'org.junit.runner.Description', 'methodAndClassNamePatternGroupOrDefault', '([\\s\\S]*)\\((.*)\\)', 'testInserterDiscardsPack(org.eclipse.jgit.internal.storage.dfs.DfsInserterTest)')","[246129, 246239]"
"('Description.java', 'org.junit.runner.Description', 'methodAndClassNamePatternGroupOrDefault', '([\\s\\S]*)\\((.*)\\)', 'testRenameBranchCannotLockAFileHEADisOtherLockTo(org.eclipse.jgit.internal.storage.file.RefUpdateTest)')","[253418, 254268]"
"('URIish.java', 'org.eclipse.jgit.transport.URIish', '<init>', '^([a-z][a-z0-9+-]+)://(?:(?:([^/:@]+)(?::([^\\\\/]+))?@)?((?:[^\\\\/:]+)|(?:\\[[0-9a-f:]+\\]))(?::(\\d+))?((?:/~(?:[^\\\\/]+))?[\\\\/]))?(.+)?$', 'https://l usr\\example.com@1.2.3.4:1234/D:\\x')",[37737]
"('URIish.java', 'org.eclipse.jgit.transport.URIish', '<init>', '^(file):([\\\\/](?![\\\\/])((?:[A-Za-z]:)?[\\\\/]?(?:(?:[^\\\\/]+[\\\\/]+)*[^\\\\/]+[\\\\/]*)))$', 'https://lusr\\example:wtf@example.com:80/D:/x')",[25112]
"('Description.java', 'org.junit.runner.Description', 'methodAndClassNamePatternGroupOrDefault', '([\\s\\S]*)\\((.*)\\)', 'testDirtyFileModeEqualHeadMerge(org.eclipse.jgit.lib.DirCacheCheckoutTest)')","[115906, 116852]"
"('FastIgnoreRule.java', 'org.eclipse.jgit.ignore.FastIgnoreRule', 'isMatch', '.*\\.st.', 'anothertest.sta1')","[142119, 142281, 143290, 143425]"
"('Description.java', 'org.junit.runner.Description', 'methodAndClassNamePatternGroupOrDefault', '([\\s\\S]*)\\((.*)\\)', 'testEscapedBracket5(org.eclipse.jgit.fnmatch.FileNameMatcherTest)')","[104128, 107537]"
"('Description.java', 'org.junit.runner.Description', 'methodAndClassNamePatternGroupOrDefault', '([\\s\\S]*)\\((.*)\\)', 'testVerySimpleWildCardCase1(org.eclipse.jgit.fnmatch.FileNameMatcherTest)')","[101125, 104391]"
"('URIish.java', 'org.eclipse.jgit.transport.URIish', '<init>', '^([a-z][a-z0-9+-]+)://(?:(?:([^/:@]+)(?::([^\\\\/]+))?@)?((?:[^\\\\/:]+)|(?:\\[[0-9a-f:]+\\]))(?::(\\d+))?((?:/~(?:[^\\\\/]+))?[\\\\/]))?(.+)?$', 'https://l usr\\example.com@1.2.3.4:80//')",[37783]
"('URIish.java', 'org.eclipse.jgit.transport.URIish', '<init>', '^(?:([^/:@]+)(?::([^\\\\/]+))?@)?([^\\\\/:]{2,}):([\\\\/](?:(?:[^\\\\/]+[\\\\/]+)*[^\\\\/]+[\\\\/]*))$', '/tmp/jgit_test_3983781403271311376_tmp/tmp_8902236642966420184')","[222294, 222434, 222689, 222901]"
"('URIish.java', 'org.eclipse.jgit.transport.URIish', '<init>', '^([a-z][a-z0-9+-]+)://(?:(?:([^/:@]+)(?::([^\\\\/]+))?@)?((?:[^\\\\/:]+)|(?:\\[[0-9a-f:]+\\]))(?::(\\d+))?((?:/~(?:[^\\\\/]+))?[\\\\/]))?(.+)?$', 'https://me@1.2.3.4//abc')","[49789, 49973]"
"('URIish.java', 'org.eclipse.jgit.transport.URIish', '<init>', '^([a-z][a-z0-9+-]+)://(?:(?:([^/:@]+)(?::([^\\\\/]+))?@)?((?:[^\\\\/:]+)|(?:\\[[0-9a-f:]+\\]))(?::(\\d+))?((?:/~(?:[^\\\\/]+))?[\\\\/]))?(.+)?$', 'file:///tmp/jgit_test_4068658224210344193_tmp/tmp_1548633951292865587/.git/')",[128674]
"('FastIgnoreRule.java', 'org.eclipse.jgit.ignore.FastIgnoreRule', 'isMatch', 'a.*a.*a', 'aaaaaaab')",[162658]
"('Description.java', 'org.junit.runner.Description', 'methodAndClassNamePatternGroupOrDefault', '([\\s\\S]*)\\((.*)\\)', 'org.eclipse.jgit.diff.EditListTest')","[94693, 94954]"
"('URIish.java', 'org.eclipse.jgit.transport.URIish', '<init>', '^(file):([\\\\/](?![\\\\/])((?:[A-Za-z]:)?[\\\\/]?(?:(?:[^\\\\/]+[\\\\/]+)*[^\\\\/]+[\\\\/]*)))$', 'http://me@example.com:1234//')",[32792]
"('Description.java', 'org.junit.runner.Description', 'methodAndClassNamePatternGroupOrDefault', '([\\s\\S]*)\\((.*)\\)', 'testDigitGroupCase3[OldRule? true](org.eclipse.jgit.ignore.IgnoreRuleSpecialCasesTest)')","[150950, 158034]"
"('URIish.java', 'org.eclipse.jgit.transport.URIish', '<init>', '^([a-z][a-z0-9+-]+)://(?:(?:([^/:@]+)(?::([^\\\\/]+))?@)?((?:[^\\\\/:]+)|(?:\\[[0-9a-f:]+\\]))(?::(\\d+))?((?:/~(?:[^\\\\/]+))?[\\\\/]))?(.+)?$', 'https://me@[::1]/D:/x')","[50203, 50387]"
"('Description.java', 'org.junit.runner.Description', 'methodAndClassNamePatternGroupOrDefault', '([\\s\\S]*)\\((.*)\\)', 'testUpperGroupCase4(org.eclipse.jgit.fnmatch.FileNameMatcherTest)')","[103288, 106657]"
"('URIish.java', 'org.eclipse.jgit.transport.URIish', '<init>', '^(?:([^/:@]+)(?::([^\\\\/]+))?@)?((?:[^\\\\/:]+)|(?:\\[[0-9a-f:]+\\])):((?:(?:/~(?:[^\\\\/]+))[\\\\/])?(?:(?:[^\\\\/]+[\\\\/]+)*[^\\\\/]+[\\\\/]*))$', '/tmp/jgit_test_5112799029350695586_tmp/tmp_3931614780195894737.git')",[74758]
"('URIish.java', 'org.eclipse.jgit.transport.URIish', '<init>', '^(file):([\\\\/](?![\\\\/])((?:[A-Za-z]:)?[\\\\/]?(?:(?:[^\\\\/]+[\\\\/]+)*[^\\\\/]+[\\\\/]*)))$', 'https://l usr\\example.com:wtf@[::1]:1234//abc')",[24514]
"('URIish.java', 'org.eclipse.jgit.transport.URIish', '<init>', '^([a-z][a-z0-9+-]+)://(?:(?:([^/:@]+)(?::([^\\\\/]+))?@)?((?:[^\\\\/:]+)|(?:\\[[0-9a-f:]+\\]))(?::(\\d+))?((?:/~(?:[^\\\\/]+))?[\\\\/]))?(.+)?$', 'https://l usr\\example.com@[::1]:1234//')",[37967]
"('Description.java', 'org.junit.runner.Description', 'methodAndClassNamePatternGroupOrDefault', '([\\s\\S]*)\\((.*)\\)', 'testRevertConflictResolution(org.eclipse.jgit.api.RevertCommandTest)')","[233469, 233682]"
"('Description.java', 'org.junit.runner.Description', 'methodAndClassNamePatternGroupOrDefault', '([\\s\\S]*)\\((.*)\\)', 'testGetRef_EmptyDatabase(org.eclipse.jgit.internal.storage.file.RefDirectoryTest)')","[258253, 259452]"
"('Description.java', 'org.junit.runner.Description', 'methodAndClassNamePatternGroupOrDefault', '([\\s\\S]*)\\((.*)\\)', 'testConflictingMerge1(org.eclipse.jgit.api.BlameCommandTest)')","[244705, 245099]"
"('URIish.java', 'org.eclipse.jgit.transport.URIish', '<init>', '^(file):([\\\\/](?![\\\\/])((?:[A-Za-z]:)?[\\\\/]?(?:(?:[^\\\\/]+[\\\\/]+)*[^\\\\/]+[\\\\/]*)))$', 'ssh+git://me:wtf@example.com:80//abc')",[14119]
"('Description.java', 'org.junit.runner.Description', 'methodAndClassNamePatternGroupOrDefault', '([\\s\\S]*)\\((.*)\\)', 'testOneliner(org.eclipse.jgit.util.ChangeIdUtilTest)')","[185378, 186116]"
"('Description.java', 'org.junit.runner.Description', 'methodAndClassNamePatternGroupOrDefault', '([\\s\\S]*)\\((.*)\\)', 'testCherryPickConflictMarkers(org.eclipse.jgit.api.CherryPickCommandTest)')","[232190, 232449]"
"('Description.java', 'org.junit.runner.Description', 'methodAndClassNamePatternGroupOrDefault', '([\\s\\S]*)\\((.*)\\)', 'testEdit_CommonReplaceCommonDeleteCommon(org.eclipse.jgit.diff.HistogramDiffTest)')","[98989, 99606]"
"('URIish.java', 'org.eclipse.jgit.transport.URIish', '<init>', '^(file):([\\\\/](?![\\\\/])((?:[A-Za-z]:)?[\\\\/]?(?:(?:[^\\\\/]+[\\\\/]+)*[^\\\\/]+[\\\\/]*)))$', 'https://l usr\\example.com:wtf@1.2.3.4:1234//abc')",[24146]
"('FastIgnoreRule.java', 'org.eclipse.jgit.ignore.FastIgnoreRule', 'isMatch', 'a.', 'abc')","[169999, 170026, 170053, 170107, 170188, 170242, 170296, 170377, 170431, 170485, 170539, 170593, 170674, 170755, 170863, 170944, 170971, 170998, 171025, 171052, 171079, 171106, 171133, 171160, 171187, 171214, 171241, 171268]"
"('Description.java', 'org.junit.runner.Description', 'methodAndClassNamePatternGroupOrDefault', '([\\s\\S]*)\\((.*)\\)', 'RELATIVE(org.eclipse.jgit.util.GitDateFormatterTest)')","[172261, 172459]"
"('URIish.java', 'org.eclipse.jgit.transport.URIish', '<init>', '^(file):([\\\\/](?![\\\\/])((?:[A-Za-z]:)?[\\\\/]?(?:(?:[^\\\\/]+[\\\\/]+)*[^\\\\/]+[\\\\/]*)))$', 'https://me:wtf@[::1]:80//abc')",[23594]
"('URIish.java', 'org.eclipse.jgit.transport.URIish', '<init>', '^(file):([\\\\/](?![\\\\/])((?:[A-Za-z]:)?[\\\\/]?(?:(?:[^\\\\/]+[\\\\/]+)*[^\\\\/]+[\\\\/]*)))$', 'file:/tmp/jgit_test_5056712748056798557_tmp/tmp_1508340179061609147/.git/')",[134256]
"('Description.java', 'org.junit.runner.Description', 'methodAndClassNamePatternGroupOrDefault', '([\\s\\S]*)\\((.*)\\)', 'testLowerGroupCase4[OldRule? true](org.eclipse.jgit.ignore.IgnoreRuleSpecialCasesTest)')","[150145, 157229]"
"('Description.java', 'org.junit.runner.Description', 'methodAndClassNamePatternGroupOrDefault', '([\\s\\S]*)\\((.*)\\)', 'testGetRefs_DeeplyNestedBranch(org.eclipse.jgit.internal.storage.file.RefDirectoryTest)')","[258211, 259408]"
"('URIish.java', 'org.eclipse.jgit.transport.URIish', '<init>', '^(file):([\\\\/](?![\\\\/])((?:[A-Za-z]:)?[\\\\/]?(?:(?:[^\\\\/]+[\\\\/]+)*[^\\\\/]+[\\\\/]*)))$', 'ssh+git://l usr\\example.com:wtf@[::1]:80//abc')",[16917]
"('Description.java', 'org.junit.runner.Description', 'methodAndClassNamePatternGroupOrDefault', '([\\s\\S]*)\\((.*)\\)', 'submoduleWithNoHead(org.eclipse.jgit.treewalk.FileTreeIteratorTest)')","[131459, 131808]"
"('Description.java', 'org.junit.runner.Description', 'methodAndClassNamePatternGroupOrDefault', '([\\s\\S]*)\\((.*)\\)', 'testLowerGroupCase4(org.eclipse.jgit.fnmatch.FileNameMatcherTest)')","[101776, 105073]"
"('Description.java', 'org.junit.runner.Description', 'methodAndClassNamePatternGroupOrDefault', '([\\s\\S]*)\\((.*)\\)', 'testTwoGroupsCase3[OldRule? true](org.eclipse.jgit.ignore.IgnoreRuleSpecialCasesTest)')","[150766, 157850]"
"('Description.java', 'org.junit.runner.Description', 'methodAndClassNamePatternGroupOrDefault', '([\\s\\S]*)\\((.*)\\)', 'testOnlyOption_f1_9_d(org.eclipse.jgit.api.CommitOnlyTest)')","[236836, 238932]"
"('Description.java', 'org.junit.runner.Description', 'methodAndClassNamePatternGroupOrDefault', '([\\s\\S]*)\\((.*)\\)', 'testGetBitmapWithThreeXor(org.eclipse.jgit.internal.storage.file.StoredBitmapTest)')","[247882, 247947]"
"('URIish.java', 'org.eclipse.jgit.transport.URIish', '<init>', '^(file):([\\\\/](?![\\\\/])((?:[A-Za-z]:)?[\\\\/]?(?:(?:[^\\\\/]+[\\\\/]+)*[^\\\\/]+[\\\\/]*)))$', 'file:/tmp/jgit_test_2456524782036824539_tmp/tmp_4193579385899199922/.git/')",[133442]
"('Description.java', 'org.junit.runner.Description', 'methodAndClassNamePatternGroupOrDefault', '([\\s\\S]*)\\((.*)\\)', 'shouldRaiseErrorOnNullURI(org.eclipse.jgit.transport.URIishTest)')","[1150, 4354]"
"('Description.java', 'org.junit.runner.Description', 'methodAndClassNamePatternGroupOrDefault', '([\\s\\S]*)\\((.*)\\)', 'testVerySimpleGroupRangeCase3(org.eclipse.jgit.fnmatch.FileNameMatcherTest)')","[102616, 105953]"
"('URIish.java', 'org.eclipse.jgit.transport.URIish', '<init>', '^(file):([\\\\/](?![\\\\/])((?:[A-Za-z]:)?[\\\\/]?(?:(?:[^\\\\/]+[\\\\/]+)*[^\\\\/]+[\\\\/]*)))$', 'https://lusr\\example@[::1]:1234/D:/x')",[39140]
"('URIish.java', 'org.eclipse.jgit.transport.URIish', '<init>', '^(file):([\\\\/](?![\\\\/])((?:[A-Za-z]:)?[\\\\/]?(?:(?:[^\\\\/]+[\\\\/]+)*[^\\\\/]+[\\\\/]*)))$', 'file:///tmp/jgit_test_7445619050739236936_tmp/tmp_8875140664585085963/.git/')",[133282]
"('URIish.java', 'org.eclipse.jgit.transport.URIish', '<init>', '^([a-z][a-z0-9+-]+)://(?:(?:([^/:@]+)(?::([^\\\\/]+))?@)?((?:[^\\\\/:]+)|(?:\\[[0-9a-f:]+\\]))(?::(\\d+))?((?:/~(?:[^\\\\/]+))?[\\\\/]))?(.+)?$', 'ssh+git://lusr\\example:wtf@1.2.3.4:1234/D:/x')",[17561]
"('Description.java', 'org.junit.runner.Description', 'methodAndClassNamePatternGroupOrDefault', '([\\s\\S]*)\\((.*)\\)', 'testMkdirs(org.eclipse.jgit.util.FileUtilTest)')","[176722, 177068]"
"('Description.java', 'org.junit.runner.Description', 'methodAndClassNamePatternGroupOrDefault', '([\\s\\S]*)\\((.*)\\)', 'testOneEntry_Forward(org.eclipse.jgit.treewalk.CanonicalTreeParserTest)')","[136006, 136328]"
"('Description.java', 'org.junit.runner.Description', 'methodAndClassNamePatternGroupOrDefault', '([\\s\\S]*)\\((.*)\\)', 'testPrintGroupCase1(org.eclipse.jgit.fnmatch.FileNameMatcherTest)')","[102994, 106349]"
"('Description.java', 'org.junit.runner.Description', 'methodAndClassNamePatternGroupOrDefault', '([\\s\\S]*)\\((.*)\\)', 'testTrailingSlash[OldRule? false](org.eclipse.jgit.ignore.IgnoreMatcherParametrizedTest)')","[141484, 141827]"
"('Description.java', 'org.junit.runner.Description', 'methodAndClassNamePatternGroupOrDefault', '([\\s\\S]*)\\((.*)\\)', 'testOldFile(org.eclipse.jgit.internal.storage.file.FileSnapshotTest)')","[250408, 250493]"
"('URIish.java', 'org.eclipse.jgit.transport.URIish', '<init>', '^([a-z][a-z0-9+-]+)://(?:(?:([^/:@]+)(?::([^\\\\/]+))?@)?((?:[^\\\\/:]+)|(?:\\[[0-9a-f:]+\\]))(?::(\\d+))?((?:/~(?:[^\\\\/]+))?[\\\\/]))?(.+)?$', 'ssh+git://lusr\\example:wtf@1.2.3.4:1234//')",[17469]
"('Description.java', 'org.junit.runner.Description', 'methodAndClassNamePatternGroupOrDefault', '([\\s\\S]*)\\((.*)\\)', 'testOnlyOption_f1_1_d(org.eclipse.jgit.api.CommitOnlyTest)')","[235996, 238052]"
"('Description.java', 'org.junit.runner.Description', 'methodAndClassNamePatternGroupOrDefault', '([\\s\\S]*)\\((.*)\\)', 'testWordGroupCase0[OldRule? false](org.eclipse.jgit.ignore.IgnoreRuleSpecialCasesTest)')","[148767, 155872]"
"('Description.java', 'org.junit.runner.Description', 'methodAndClassNamePatternGroupOrDefault', '([\\s\\S]*)\\((.*)\\)', 'testDeleteTrailingLines(org.eclipse.jgit.api.BlameCommandTest)')","[244642, 245033]"
"('URIish.java', 'org.eclipse.jgit.transport.URIish', '<init>', '^([a-z][a-z0-9+-]+)://(?:(?:([^/:@]+)(?::([^\\\\/]+))?@)?((?:[^\\\\/:]+)|(?:\\[[0-9a-f:]+\\]))(?::(\\d+))?((?:/~(?:[^\\\\/]+))?[\\\\/]))?(.+)?$', 'http://l usr\\example.com@1.2.3.4/D:/x')","[47627, 47811]"
"('Description.java', 'org.junit.runner.Description', 'methodAndClassNamePatternGroupOrDefault', '([\\s\\S]*)\\((.*)\\)', 'testParse_ShortLineOnlyNoLF(org.eclipse.jgit.revwalk.RevTagParseTest)')","[80228, 80637]"
"('Description.java', 'org.junit.runner.Description', 'methodAndClassNamePatternGroupOrDefault', '([\\s\\S]*)\\((.*)\\)', 'testBlankGroupCase3(org.eclipse.jgit.fnmatch.FileNameMatcherTest)')","[103393, 106767]"
"('Description.java', 'org.junit.runner.Description', 'methodAndClassNamePatternGroupOrDefault', '([\\s\\S]*)\\((.*)\\)', 'untrackedFileIncluded(org.eclipse.jgit.api.StashCreateCommandTest)')","[202550, 202902]"
"('Description.java', 'org.junit.runner.Description', 'methodAndClassNamePatternGroupOrDefault', '([\\s\\S]*)\\((.*)\\)', 'org.eclipse.jgit.dircache.DirCacheTreeTest')","[91356, 92083]"
"('Description.java', 'org.junit.runner.Description', 'methodAndClassNamePatternGroupOrDefault', '([\\s\\S]*)\\((.*)\\)', 'testObjectId_objectid_explicit_otherparents(org.eclipse.jgit.lib.RepositoryResolveTest)')","[125596, 126080]"
"('Description.java', 'org.junit.runner.Description', 'methodAndClassNamePatternGroupOrDefault', '([\\s\\S]*)\\((.*)\\)', 'testIncompleteRangesInOneGroupCase1[OldRule? true](org.eclipse.jgit.ignore.IgnoreRuleSpecialCasesTest)')","[151456, 158540]"
"('Description.java', 'org.junit.runner.Description', 'methodAndClassNamePatternGroupOrDefault', '([\\s\\S]*)\\((.*)\\)', 'invalidRepositoryFormatVersion(org.eclipse.jgit.internal.storage.file.FileRepositoryBuilderTest)')","[248387, 248536]"
"('URIish.java', 'org.eclipse.jgit.transport.URIish', '<init>', '^(file):([\\\\/](?![\\\\/])((?:[A-Za-z]:)?[\\\\/]?(?:(?:[^\\\\/]+[\\\\/]+)*[^\\\\/]+[\\\\/]*)))$', 'ssh://me@example.com/D:/x')","[39508, 39692]"
"('URIish.java', 'org.eclipse.jgit.transport.URIish', '<init>', '^(file):([\\\\/](?![\\\\/])((?:[A-Za-z]:)?[\\\\/]?(?:(?:[^\\\\/]+[\\\\/]+)*[^\\\\/]+[\\\\/]*)))$', 'file:///tmp/jgit_test_8103818824776981677_tmp/tmp_7899230620267393812')","[222543, 222750]"
"('Description.java', 'org.junit.runner.Description', 'methodAndClassNamePatternGroupOrDefault', '([\\s\\S]*)\\((.*)\\)', 'testEmpty_FromString(org.eclipse.jgit.lib.AbbreviatedObjectIdTest)')","[114473, 115006]"
"('URIish.java', 'org.eclipse.jgit.transport.URIish', '<init>', '^([a-z][a-z0-9+-]+)://(?:(?:([^/:@]+)(?::([^\\\\/]+))?@)?((?:[^\\\\/:]+)|(?:\\[[0-9a-f:]+\\]))(?::(\\d+))?((?:/~(?:[^\\\\/]+))?[\\\\/]))?(.+)?$', 'ssh+git://l usr\\example.com@[::1]//abc')","[44637, 44821]"
"('URIish.java', 'org.eclipse.jgit.transport.URIish', '<init>', '^([a-z][a-z0-9+-]+)://(?:(?:([^/:@]+)(?::([^\\\\/]+))?@)?((?:[^\\\\/:]+)|(?:\\[[0-9a-f:]+\\]))(?::(\\d+))?((?:/~(?:[^\\\\/]+))?[\\\\/]))?(.+)?$', 'https://l usr\\example.com@[::1]:80//abc')",[38197]
"('URIish.java', 'org.eclipse.jgit.transport.URIish', '<init>', '^([a-z][a-z0-9+-]+)://(?:(?:([^/:@]+)(?::([^\\\\/]+))?@)?((?:[^\\\\/:]+)|(?:\\[[0-9a-f:]+\\]))(?::(\\d+))?((?:/~(?:[^\\\\/]+))?[\\\\/]))?(.+)?$', 'ssh://me@1.2.3.4:1234/D:\\x')",[26634]
"('URIish.java', 'org.eclipse.jgit.transport.URIish', '<init>', '^([a-z][a-z0-9+-]+)://(?:(?:([^/:@]+)(?::([^\\\\/]+))?@)?((?:[^\\\\/:]+)|(?:\\[[0-9a-f:]+\\]))(?::(\\d+))?((?:/~(?:[^\\\\/]+))?[\\\\/]))?(.+)?$', 'http://lusr\\example:wtf@example.com:80/D:/x')",[21823]
"('URIish.java', 'org.eclipse.jgit.transport.URIish', '<init>', '^(file):([\\\\/](?![\\\\/])((?:[A-Za-z]:)?[\\\\/]?(?:(?:[^\\\\/]+[\\\\/]+)*[^\\\\/]+[\\\\/]*)))$', 'http://lusr\\example@[::1]:1234//abc')",[35782]
"('URIish.java', 'org.eclipse.jgit.transport.URIish', '<init>', '^(?:([^/:@]+)(?::([^\\\\/]+))?@)?([^\\\\/:]{2,}):([\\\\/](?:(?:[^\\\\/]+[\\\\/]+)*[^\\\\/]+[\\\\/]*))$', '/tmp/jgit_test_1958524625050925037_tmp/tmp_997803827191484605.git')",[9768]
"('URIish.java', 'org.eclipse.jgit.transport.URIish', '<init>', '^(?:([^/:@]+)(?::([^\\\\/]+))?@)?((?:[^\\\\/:]+)|(?:\\[[0-9a-f:]+\\])):((?:(?:/~(?:[^\\\\/]+))[\\\\/])?(?:(?:[^\\\\/]+[\\\\/]+)*[^\\\\/]+[\\\\/]*))$', '/tmp/jgit_test_3192177335269722876_tmp/tmp_3678193557651606518')","[225136, 225271, 225459]"
"('URIish.java', 'org.eclipse.jgit.transport.URIish', '<init>', '^(file):([\\\\/](?![\\\\/])((?:[A-Za-z]:)?[\\\\/]?(?:(?:[^\\\\/]+[\\\\/]+)*[^\\\\/]+[\\\\/]*)))$', 'https://me@example.com:80//')",[36288]
"('Description.java', 'org.junit.runner.Description', 'methodAndClassNamePatternGroupOrDefault', '([\\s\\S]*)\\((.*)\\)', 'testRebaseEndsIfLastStepIsEdit(org.eclipse.jgit.api.RebaseCommandTest)')","[217627, 219114]"
"('ChangeIdUtil.java', 'org.eclipse.jgit.util.ChangeIdUtil', 'indexOfChangeId', '(^Change-Id: *I[a-f0-9]{40}$)', '[bracket]')",[186872]
"('FastIgnoreRule.java', 'org.eclipse.jgit.ignore.FastIgnoreRule', 'isMatch', '[v-z]', 'b')","[165563, 165617, 165671, 165725, 165779, 165833, 166130, 166211]"
"('FastIgnoreRule.java', 'org.eclipse.jgit.ignore.FastIgnoreRule', 'isMatch', '[b-ce-e]', 'a')",[163414]
"('Description.java', 'org.junit.runner.Description', 'methodAndClassNamePatternGroupOrDefault', '([\\s\\S]*)\\((.*)\\)', 'testIgnoreNonExistingObjectsWithBitmaps(org.eclipse.jgit.internal.storage.file.PackWriterTest)')","[251239, 251684]"
"('URIish.java', 'org.eclipse.jgit.transport.URIish', '<init>', '^(file):([\\\\/](?![\\\\/])((?:[A-Za-z]:)?[\\\\/]?(?:(?:[^\\\\/]+[\\\\/]+)*[^\\\\/]+[\\\\/]*)))$', 'https://me@1.2.3.4:80//')",[36656]
"('Description.java', 'org.junit.runner.Description', 'methodAndClassNamePatternGroupOrDefault', '([\\s\\S]*)\\((.*)\\)', 'archiveByIdSpecificFile(org.eclipse.jgit.api.ArchiveCommandTest)')","[240046, 240131]"
"('Description.java', 'org.junit.runner.Description', 'methodAndClassNamePatternGroupOrDefault', '([\\s\\S]*)\\((.*)\\)', 'testPutReplaceEntry(org.eclipse.jgit.util.RefListTest)')","[179485, 180000]"
"('Description.java', 'org.junit.runner.Description', 'methodAndClassNamePatternGroupOrDefault', '([\\s\\S]*)\\((.*)\\)', 'test4_FromString(org.eclipse.jgit.lib.AbbreviatedObjectIdTest)')","[114641, 115182]"
"('Description.java', 'org.junit.runner.Description', 'methodAndClassNamePatternGroupOrDefault', '([\\s\\S]*)\\((.*)\\)', 'testInt32(org.eclipse.jgit.util.RawParseUtils_HexParseTest)')","[181112, 181177]"
"('Description.java', 'org.junit.runner.Description', 'methodAndClassNamePatternGroupOrDefault', '([\\s\\S]*)\\((.*)\\)', 'testFileProtoWindows(org.eclipse.jgit.transport.URIishTest)')","[4160, 5454]"
"('Description.java', 'org.junit.runner.Description', 'methodAndClassNamePatternGroupOrDefault', '([\\s\\S]*)\\((.*)\\)', 'testIncompleteRangesInOneGroupCase2[OldRule? true](org.eclipse.jgit.ignore.IgnoreRuleSpecialCasesTest)')","[151479, 158563]"
"('Description.java', 'org.junit.runner.Description', 'methodAndClassNamePatternGroupOrDefault', '([\\s\\S]*)\\((.*)\\)', 'testRemovedUntracked(org.eclipse.jgit.lib.IndexDiffTest)')","[110301, 110639]"
"('URIish.java', 'org.eclipse.jgit.transport.URIish', '<init>', '^(file):([\\\\/](?![\\\\/])((?:[A-Za-z]:)?[\\\\/]?(?:(?:[^\\\\/]+[\\\\/]+)*[^\\\\/]+[\\\\/]*)))$', 'ssh://lusr\\example@example.com:80//abc')",[28606]
"('Description.java', 'org.junit.runner.Description', 'methodAndClassNamePatternGroupOrDefault', '([\\s\\S]*)\\((.*)\\)', 'testExactRename_PathBreaksTie(org.eclipse.jgit.diff.RenameDetectorTest)')","[93258, 93815]"
"('URIish.java', 'org.eclipse.jgit.transport.URIish', '<init>', '^([\\\\/]?((?:[A-Za-z]:)?[\\\\/]?(?:(?:[^\\\\/]+[\\\\/]+)*[^\\\\/]+[\\\\/]*)))$', '/tmp/jgit_test_2725117978470059884_tmp/tmp_193317894193640660')","[210777, 210984, 211324]"
"('URIish.java', 'org.eclipse.jgit.transport.URIish', '<init>', '^([a-z][a-z0-9+-]+)://(?:(?:([^/:@]+)(?::([^\\\\/]+))?@)?((?:[^\\\\/:]+)|(?:\\[[0-9a-f:]+\\]))(?::(\\d+))?((?:/~(?:[^\\\\/]+))?[\\\\/]))?(.+)?$', 'http://me@1.2.3.4:80/D:/x')",[33459]
"('Description.java', 'org.junit.runner.Description', 'methodAndClassNamePatternGroupOrDefault', '([\\s\\S]*)\\((.*)\\)', 'testAlias_badConnectionAttempts(org.eclipse.jgit.transport.OpenSshConfigTest)')","[3703, 4139]"
"('Description.java', 'org.junit.runner.Description', 'methodAndClassNamePatternGroupOrDefault', '([\\s\\S]*)\\((.*)\\)', 'testTimeout_readBuffer_Success2(org.eclipse.jgit.util.io.TimeoutInputStreamTest)')","[173949, 174124]"
"('Description.java', 'org.junit.runner.Description', 'methodAndClassNamePatternGroupOrDefault', '([\\s\\S]*)\\((.*)\\)', 'testFull_FromByteArray(org.eclipse.jgit.lib.AbbreviatedObjectIdTest)')","[114557, 115094]"
"('Description.java', 'org.junit.runner.Description', 'methodAndClassNamePatternGroupOrDefault', '([\\s\\S]*)\\((.*)\\)', 'testAddFolder(org.eclipse.jgit.api.AddCommandTest)')","[234990, 235424]"
"('Description.java', 'org.junit.runner.Description', 'methodAndClassNamePatternGroupOrDefault', '([\\s\\S]*)\\((.*)\\)', 'invalidWhenDestinationOnlyAndWildcard(org.eclipse.jgit.transport.RefSpecTest)')","[14205, 15728]"
"('Description.java', 'org.junit.runner.Description', 'methodAndClassNamePatternGroupOrDefault', '([\\s\\S]*)\\((.*)\\)', 'testAddWholeRepo(org.eclipse.jgit.api.AddCommandTest)')","[234927, 235358]"
"('Description.java', 'org.junit.runner.Description', 'methodAndClassNamePatternGroupOrDefault', '([\\s\\S]*)\\((.*)\\)', 'testSort_COMMIT_TIME_DESC_OutOfOrder2(org.eclipse.jgit.revwalk.RevWalkSortTest)')","[85085, 85236]"
"('Description.java', 'org.junit.runner.Description', 'methodAndClassNamePatternGroupOrDefault', '([\\s\\S]*)\\((.*)\\)', 'testFileModeChangeAndContentChangeNoConflict(org.eclipse.jgit.lib.DirCacheCheckoutTest)')","[115990, 116940]"
"('Description.java', 'org.junit.runner.Description', 'methodAndClassNamePatternGroupOrDefault', '([\\s\\S]*)\\((.*)\\)', 'testDirectoryFileConflicts_19(org.eclipse.jgit.lib.DirCacheCheckoutTest)')","[116704, 117688]"
"('Description.java', 'org.junit.runner.Description', 'methodAndClassNamePatternGroupOrDefault', '([\\s\\S]*)\\((.*)\\)', 'testSingleLineMessages(org.eclipse.jgit.util.ChangeIdUtilTest)')","[185840, 186600]"
"('URIish.java', 'org.eclipse.jgit.transport.URIish', '<init>', '^([a-z][a-z0-9+-]+)://(?:(?:([^/:@]+)(?::([^\\\\/]+))?@)?((?:[^\\\\/:]+)|(?:\\[[0-9a-f:]+\\]))(?::(\\d+))?((?:/~(?:[^\\\\/]+))?[\\\\/]))?(.+)?$', 'file:///tmp/jgit_test_8267827428869162458_tmp/tmp_1582337896300637096/testCloneRepositoryWithNestedSubmodules1/.git/')","[205089, 206277]"
"('Description.java', 'org.junit.runner.Description', 'methodAndClassNamePatternGroupOrDefault', '([\\s\\S]*)\\((.*)\\)', 'testManySolutionsCase1(org.eclipse.jgit.fnmatch.FileNameMatcherTest)')","[103120, 106481]"
"('Description.java', 'org.junit.runner.Description', 'methodAndClassNamePatternGroupOrDefault', '([\\s\\S]*)\\((.*)\\)', 'testEscapedBracket5[OldRule? true](org.eclipse.jgit.ignore.IgnoreRuleSpecialCasesTest)')","[152767, 159851]"
"('URIish.java', 'org.eclipse.jgit.transport.URIish', '<init>', '^(file):([\\\\/](?![\\\\/])((?:[A-Za-z]:)?[\\\\/]?(?:(?:[^\\\\/]+[\\\\/]+)*[^\\\\/]+[\\\\/]*)))$', 'http://me@[::1]//')","[46776, 46960]"
"('Description.java', 'org.junit.runner.Description', 'methodAndClassNamePatternGroupOrDefault', '([\\s\\S]*)\\((.*)\\)', 'testBackwords_Prebuilts1(org.eclipse.jgit.treewalk.CanonicalTreeParserTest)')","[135901, 136218]"
"('Description.java', 'org.junit.runner.Description', 'methodAndClassNamePatternGroupOrDefault', '([\\s\\S]*)\\((.*)\\)', 'testDequote_Empty2(org.eclipse.jgit.util.QuotedStringBourneUserPathStyleTest)')","[192471, 192726]"
"('Description.java', 'org.junit.runner.Description', 'methodAndClassNamePatternGroupOrDefault', '([\\s\\S]*)\\((.*)\\)', 'testAlias_OptionsSet(org.eclipse.jgit.transport.OpenSshConfigTest)')","[3103, 3768]"
"('Description.java', 'org.junit.runner.Description', 'methodAndClassNamePatternGroupOrDefault', '([\\s\\S]*)\\((.*)\\)', 'testSpecialGroupCase2[OldRule? true](org.eclipse.jgit.ignore.IgnoreRuleSpecialCasesTest)')","[149317, 156401]"
"('URIish.java', 'org.eclipse.jgit.transport.URIish', '<init>', '^(file):([\\\\/](?![\\\\/])((?:[A-Za-z]:)?[\\\\/]?(?:(?:[^\\\\/]+[\\\\/]+)*[^\\\\/]+[\\\\/]*)))$', 'https://l usr\\example.com:wtf@1.2.3.4:80//abc')",[24330]
"('Description.java', 'org.junit.runner.Description', 'methodAndClassNamePatternGroupOrDefault', '([\\s\\S]*)\\((.*)\\)', 'testCherryPickConflictReset(org.eclipse.jgit.api.CherryPickCommandTest)')","[232232, 232493]"
"('Description.java', 'org.junit.runner.Description', 'methodAndClassNamePatternGroupOrDefault', '([\\s\\S]*)\\((.*)\\)', 'testDigitGroupCase4[OldRule? true](org.eclipse.jgit.ignore.IgnoreRuleSpecialCasesTest)')","[150973, 158057]"
"('Description.java', 'org.junit.runner.Description', 'methodAndClassNamePatternGroupOrDefault', '([\\s\\S]*)\\((.*)\\)', 'testVerySimplePatternCase3[OldRule? false](org.eclipse.jgit.ignore.IgnoreRuleSpecialCasesTest)')","[146743, 153848]"
"('Description.java', 'org.junit.runner.Description', 'methodAndClassNamePatternGroupOrDefault', '([\\s\\S]*)\\((.*)\\)', 'testNotEmail(org.eclipse.jgit.revwalk.FooterLineTest)')","[77418, 77819]"
"('Description.java', 'org.junit.runner.Description', 'methodAndClassNamePatternGroupOrDefault', '([\\s\\S]*)\\((.*)\\)', 'testEgitHistory(org.eclipse.jgit.revplot.PlotCommitListTest)')","[197255, 197584]"
"('Description.java', 'org.junit.runner.Description', 'methodAndClassNamePatternGroupOrDefault', '([\\s\\S]*)\\((.*)\\)', 'testCoreAutoCrlf1(org.eclipse.jgit.api.BlameCommandTest)')","[244390, 244769]"
"('Description.java', 'org.junit.runner.Description', 'methodAndClassNamePatternGroupOrDefault', '([\\s\\S]*)\\((.*)\\)', 'submoduleNestedWithHeadMatchingIndex(org.eclipse.jgit.treewalk.FileTreeIteratorTest)')","[131333, 131676]"
"('Description.java', 'org.junit.runner.Description', 'methodAndClassNamePatternGroupOrDefault', '([\\s\\S]*)\\((.*)\\)', 'testFilter_NOT_NONE(org.eclipse.jgit.revwalk.RevWalkFilterTest)')","[83062, 83378]"
"('Description.java', 'org.junit.runner.Description', 'methodAndClassNamePatternGroupOrDefault', '([\\s\\S]*)\\((.*)\\)', 'testAbbreviateIsActuallyUnique(org.eclipse.jgit.internal.storage.file.AbbreviationTest)')","[256785, 256872]"
"('URIish.java', 'org.eclipse.jgit.transport.URIish', '<init>', '^([a-z][a-z0-9+-]+)://(?:(?:([^/:@]+)(?::([^\\\\/]+))?@)?((?:[^\\\\/:]+)|(?:\\[[0-9a-f:]+\\]))(?::(\\d+))?((?:/~(?:[^\\\\/]+))?[\\\\/]))?(.+)?$', '/another/dir')","[6059, 6897, 9984]"
"('URIish.java', 'org.eclipse.jgit.transport.URIish', '<init>', '^([a-z][a-z0-9+-]+)://(?:(?:([^/:@]+)(?::([^\\\\/]+))?@)?((?:[^\\\\/:]+)|(?:\\[[0-9a-f:]+\\]))(?::(\\d+))?((?:/~(?:[^\\\\/]+))?[\\\\/]))?(.+)?$', 'ssh://lusr\\example:wtf@1.2.3.4:1234//')",[12756]
"('Description.java', 'org.junit.runner.Description', 'methodAndClassNamePatternGroupOrDefault', '([\\s\\S]*)\\((.*)\\)', 'testHunkHeader(org.eclipse.jgit.patch.EditListTest)')","[194407, 194472]"
"('Description.java', 'org.junit.runner.Description', 'methodAndClassNamePatternGroupOrDefault', '([\\s\\S]*)\\((.*)\\)', 'org.eclipse.jgit.internal.storage.file.RepositorySetupWorkDirTest')","[255642, 256181]"
"('URIish.java', 'org.eclipse.jgit.transport.URIish', '<init>', '^(file):([\\\\/](?![\\\\/])((?:[A-Za-z]:)?[\\\\/]?(?:(?:[^\\\\/]+[\\\\/]+)*[^\\\\/]+[\\\\/]*)))$', 'https://lusr\\example@1.2.3.4:1234//')",[38680]
"('QuotedString.java', 'org.eclipse.jgit.util.QuotedString$BourneUserPathStyle', 'quote', '^~[A-Za-z0-9_-]+$', '!')","[193693, 193718]"
"('Description.java', 'org.junit.runner.Description', 'methodAndClassNamePatternGroupOrDefault', '([\\s\\S]*)\\((.*)\\)', 'dropSingleStashedCommit(org.eclipse.jgit.api.StashDropCommandTest)')","[243341, 243510]"
"('URIish.java', 'org.eclipse.jgit.transport.URIish', '<init>', '^([a-z][a-z0-9+-]+)://(?:(?:([^/:@]+)(?::([^\\\\/]+))?@)?((?:[^\\\\/:]+)|(?:\\[[0-9a-f:]+\\]))(?::(\\d+))?((?:/~(?:[^\\\\/]+))?[\\\\/]))?(.+)?$', 'ssh://lusr\\example@[::1]:1234//')",[29135]
"('Description.java', 'org.junit.runner.Description', 'methodAndClassNamePatternGroupOrDefault', '([\\s\\S]*)\\((.*)\\)', 'org.eclipse.jgit.lib.RefDatabaseConflictingNamesTest')","[119131, 119197]"
"('URIish.java', 'org.eclipse.jgit.transport.URIish', '<init>', '^([a-z][a-z0-9+-]+)://(?:(?:([^/:@]+)(?::([^\\\\/]+))?@)?((?:[^\\\\/:]+)|(?:\\[[0-9a-f:]+\\]))(?::(\\d+))?((?:/~(?:[^\\\\/]+))?[\\\\/]))?(.+)?$', 'git://host.xy/abc.git/')",[71034]
"('Description.java', 'org.junit.runner.Description', 'methodAndClassNamePatternGroupOrDefault', '([\\s\\S]*)\\((.*)\\)', 'testStringOfPearls_FilePath3_NoParentRewriting(org.eclipse.jgit.revwalk.RevWalkPathFilter1Test)')","[75830, 76108]"
"('Description.java', 'org.junit.runner.Description', 'methodAndClassNamePatternGroupOrDefault', '([\\s\\S]*)\\((.*)\\)', 'testHeap(org.eclipse.jgit.util.TemporaryBufferTest)')","[178385, 178683]"
"('Description.java', 'org.junit.runner.Description', 'methodAndClassNamePatternGroupOrDefault', '([\\s\\S]*)\\((.*)\\)', 'checkMergeConflictingFilesWithTreeInIndex(org.eclipse.jgit.merge.ResolveMergerTest)')","[88204, 88529]"
"('URIish.java', 'org.eclipse.jgit.transport.URIish', '<init>', '^(file):([\\\\/](?![\\\\/])((?:[A-Za-z]:)?[\\\\/]?(?:(?:[^\\\\/]+[\\\\/]+)*[^\\\\/]+[\\\\/]*)))$', 'ssh://me:wtf@[::1]:1234/D:/x')",[9202]
"('Description.java', 'org.junit.runner.Description', 'methodAndClassNamePatternGroupOrDefault', '([\\s\\S]*)\\((.*)\\)', 'testSuccessfulContentMerge(org.eclipse.jgit.api.MergeCommandTest)')","[214164, 215100]"
"('Description.java', 'org.junit.runner.Description', 'methodAndClassNamePatternGroupOrDefault', '([\\s\\S]*)\\((.*)\\)', 'org.eclipse.jgit.dircache.DirCacheBuilderTest')","[91673, 92357]"
"('Description.java', 'org.junit.runner.Description', 'methodAndClassNamePatternGroupOrDefault', '([\\s\\S]*)\\((.*)\\)', 'testToLowerCaseString(org.eclipse.jgit.util.StringUtilsTest)')","[175840, 175988]"
"('Description.java', 'org.junit.runner.Description', 'methodAndClassNamePatternGroupOrDefault', '([\\s\\S]*)\\((.*)\\)', 'testSpecialGroupCase1[OldRule? false](org.eclipse.jgit.ignore.IgnoreRuleSpecialCasesTest)')","[145731, 152836]"
"('URIish.java', 'org.eclipse.jgit.transport.URIish', '<init>', '^([a-z][a-z0-9+-]+)://(?:(?:([^/:@]+)(?::([^\\\\/]+))?@)?((?:[^\\\\/:]+)|(?:\\[[0-9a-f:]+\\]))(?::(\\d+))?((?:/~(?:[^\\\\/]+))?[\\\\/]))?(.+)?$', 'http://lusr\\example@1.2.3.4:80/D:\\x')",[35713]
"('Description.java', 'org.junit.runner.Description', 'methodAndClassNamePatternGroupOrDefault', '([\\s\\S]*)\\((.*)\\)', 'testMixedGroupCase9(org.eclipse.jgit.fnmatch.FileNameMatcherTest)')","[101461, 104743]"
"('Description.java', 'org.junit.runner.Description', 'methodAndClassNamePatternGroupOrDefault', '([\\s\\S]*)\\((.*)\\)', 'testStopOnConflictFileCreationAndDeletion(org.eclipse.jgit.api.RebaseCommandTest)')","[217480, 218960]"
"('Description.java', 'org.junit.runner.Description', 'methodAndClassNamePatternGroupOrDefault', '([\\s\\S]*)\\((.*)\\)', 'testRenameOverExistingEmptyDirectory(org.eclipse.jgit.util.FileUtilTest)')","[176806, 177156]"
"('Description.java', 'org.junit.runner.Description', 'methodAndClassNamePatternGroupOrDefault', '([\\s\\S]*)\\((.*)\\)', 'testAlnumGroupCase1(org.eclipse.jgit.fnmatch.FileNameMatcherTest)')","[103813, 107207]"
"('URIish.java', 'org.eclipse.jgit.transport.URIish', '<init>', '^(file):([\\\\/](?![\\\\/])((?:[A-Za-z]:)?[\\\\/]?(?:(?:[^\\\\/]+[\\\\/]+)*[^\\\\/]+[\\\\/]*)))$', 'https://l usr\\example.com:wtf@[::1]:80/D:/x')",[24744]
"('URIish.java', 'org.eclipse.jgit.transport.URIish', '<init>', '^(file):([\\\\/](?![\\\\/])((?:[A-Za-z]:)?[\\\\/]?(?:(?:[^\\\\/]+[\\\\/]+)*[^\\\\/]+[\\\\/]*)))$', '/tmp/jgit_test_976787373850596776_tmp/tmp_5547895567498631481')","[209533, 209658, 210085, 210235]"
"('Description.java', 'org.junit.runner.Description', 'methodAndClassNamePatternGroupOrDefault', '([\\s\\S]*)\\((.*)\\)', 'testOnlyOption_f1_12_b(org.eclipse.jgit.api.CommitOnlyTest)')","[237455, 239548]"
"('URIish.java', 'org.eclipse.jgit.transport.URIish', '<init>', '^(?:([^/:@]+)(?::([^\\\\/]+))?@)?([^\\\\/:]{2,}):([\\\\/](?:(?:[^\\\\/]+[\\\\/]+)*[^\\\\/]+[\\\\/]*))$', 'user@repo.or.cz:/srv/git/egit.git')",[10938]
"('URIish.java', 'org.eclipse.jgit.transport.URIish', '<init>', '^(file):([\\\\/](?![\\\\/])((?:[A-Za-z]:)?[\\\\/]?(?:(?:[^\\\\/]+[\\\\/]+)*[^\\\\/]+[\\\\/]*)))$', 'http://l usr\\example.com:wtf@example.com:1234//')",[20397]
"('Description.java', 'org.junit.runner.Description', 'methodAndClassNamePatternGroupOrDefault', '([\\s\\S]*)\\((.*)\\)', 'testRebaseShouldFixupInCaseOfConflict(org.eclipse.jgit.api.RebaseCommandTest)')","[218110, 219620]"
"('URIish.java', 'org.eclipse.jgit.transport.URIish', '<init>', '^(file):([\\\\/](?![\\\\/])((?:[A-Za-z]:)?[\\\\/]?(?:(?:[^\\\\/]+[\\\\/]+)*[^\\\\/]+[\\\\/]*)))$', 'file:/tmp/jgit_test_8267827428869162458_tmp/tmp_496968110035574723/testCloneRepositoryWithNestedSubmodules2/.git/')","[204187, 206723]"
"('URIish.java', 'org.eclipse.jgit.transport.URIish', '<init>', '^([\\\\/]?((?:[A-Za-z]:)?[\\\\/]?(?:(?:[^\\\\/]+[\\\\/]+)*[^\\\\/]+[\\\\/]*)))$', '/tmp/jgit_test_1317497064317343419_tmp/tmp_1402166022410132527')","[226340, 226485, 227030]"
"('Description.java', 'org.junit.runner.Description', 'methodAndClassNamePatternGroupOrDefault', '([\\s\\S]*)\\((.*)\\)', 'testFileInFolderCommittedAllDeleted(org.eclipse.jgit.treewalk.filter.IndexDiffFilterTest)')","[137193, 138021]"
"('Description.java', 'org.junit.runner.Description', 'methodAndClassNamePatternGroupOrDefault', '([\\s\\S]*)\\((.*)\\)', 'org.eclipse.jgit.internal.storage.file.WindowCacheReconfigureTest')","[247480, 247804]"
"('Description.java', 'org.junit.runner.Description', 'methodAndClassNamePatternGroupOrDefault', '([\\s\\S]*)\\((.*)\\)', 'testStageNotPossibleWithBranch(org.eclipse.jgit.api.PathCheckoutCommandTest)')","[224572, 224833]"
"('Description.java', 'org.junit.runner.Description', 'methodAndClassNamePatternGroupOrDefault', '([\\s\\S]*)\\((.*)\\)', 'testDequote_BareABCZ_OnlyBC(org.eclipse.jgit.util.QuotedStringGitPathStyleTest)')","[177424, 177846]"
"('Description.java', 'org.junit.runner.Description', 'methodAndClassNamePatternGroupOrDefault', '([\\s\\S]*)\\((.*)\\)', 'testDigitGroupCase0(org.eclipse.jgit.fnmatch.FileNameMatcherTest)')","[102427, 105755]"
"('URIish.java', 'org.eclipse.jgit.transport.URIish', '<init>', '^([a-z][a-z0-9+-]+)://(?:(?:([^/:@]+)(?::([^\\\\/]+))?@)?((?:[^\\\\/:]+)|(?:\\[[0-9a-f:]+\\]))(?::(\\d+))?((?:/~(?:[^\\\\/]+))?[\\\\/]))?(.+)?$', 'ssh+git://lusr\\example@example.com//abc')","[45005, 45189]"
"('URIish.java', 'org.eclipse.jgit.transport.URIish', '<init>', '^(file):([\\\\/](?![\\\\/])((?:[A-Za-z]:)?[\\\\/]?(?:(?:[^\\\\/]+[\\\\/]+)*[^\\\\/]+[\\\\/]*)))$', 'http://me@1.2.3.4:80//')",[33344]
"('URIish.java', 'org.eclipse.jgit.transport.URIish', '<init>', '^(file):([\\\\/](?![\\\\/])((?:[A-Za-z]:)?[\\\\/]?(?:(?:[^\\\\/]+[\\\\/]+)*[^\\\\/]+[\\\\/]*)))$', '/some/dir')","[5915, 6325, 6495, 6753, 7832, 8236, 8356, 8577, 9300, 9424, 9817, 10572, 10692, 11459]"
"('Description.java', 'org.junit.runner.Description', 'methodAndClassNamePatternGroupOrDefault', '([\\s\\S]*)\\((.*)\\)', 'testConflictAtStart(org.eclipse.jgit.merge.MergeAlgorithmTest)')","[87057, 87355]"
"('URIish.java', 'org.eclipse.jgit.transport.URIish', '<init>', '^([a-z][a-z0-9+-]+)://(?:(?:([^/:@]+)(?::([^\\\\/]+))?@)?((?:[^\\\\/:]+)|(?:\\[[0-9a-f:]+\\]))(?::(\\d+))?((?:/~(?:[^\\\\/]+))?[\\\\/]))?(.+)?$', 'ssh+git://l usr\\example.com@[::1]/D:/x')","[44683, 44867]"
"('Description.java', 'org.junit.runner.Description', 'methodAndClassNamePatternGroupOrDefault', '([\\s\\S]*)\\((.*)\\)', 'testRevertMultiple(org.eclipse.jgit.api.RevertCommandTest)')","[233532, 233748]"
"('FastIgnoreRule.java', 'org.eclipse.jgit.ignore.FastIgnoreRule', 'isMatch', '[A\\p{Ll}C3-5]', '4')",[160394]
"('Description.java', 'org.junit.runner.Description', 'methodAndClassNamePatternGroupOrDefault', '([\\s\\S]*)\\((.*)\\)', 'testToString(org.eclipse.jgit.util.RefListTest)')","[179527, 180044]"
"('Description.java', 'org.junit.runner.Description', 'methodAndClassNamePatternGroupOrDefault', '([\\s\\S]*)\\((.*)\\)', 'testVerySimpleGroupRangeCase3[OldRule? true](org.eclipse.jgit.ignore.IgnoreRuleSpecialCasesTest)')","[151088, 158172]"
"('Description.java', 'org.junit.runner.Description', 'methodAndClassNamePatternGroupOrDefault', '([\\s\\S]*)\\((.*)\\)', 'testNoFastForward(org.eclipse.jgit.api.MergeCommandTest)')","[214290, 215232]"
"('URIish.java', 'org.eclipse.jgit.transport.URIish', '<init>', '^(file):([\\\\/](?![\\\\/])((?:[A-Za-z]:)?[\\\\/]?(?:(?:[^\\\\/]+[\\\\/]+)*[^\\\\/]+[\\\\/]*)))$', 'ssh+git://lusr\\example@1.2.3.4:1234//abc')",[32102]
"('Description.java', 'org.junit.runner.Description', 'methodAndClassNamePatternGroupOrDefault', '([\\s\\S]*)\\((.*)\\)', 'testRebasePreservingMerges2(org.eclipse.jgit.api.RebaseCommandTest)')","[217438, 218916]"
"('Description.java', 'org.junit.runner.Description', 'methodAndClassNamePatternGroupOrDefault', '([\\s\\S]*)\\((.*)\\)', 'testManySolutionsCase3[OldRule? false](org.eclipse.jgit.ignore.IgnoreRuleSpecialCasesTest)')","[148146, 155251]"
"('Description.java', 'org.junit.runner.Description', 'methodAndClassNamePatternGroupOrDefault', '([\\s\\S]*)\\((.*)\\)', 'resolveMasterCommits(org.eclipse.jgit.lib.ReflogResolveTest)')","[126258, 126387]"
"('Description.java', 'org.junit.runner.Description', 'methodAndClassNamePatternGroupOrDefault', '([\\s\\S]*)\\((.*)\\)', 'testPackRepoWithCorruptReflog(org.eclipse.jgit.internal.storage.file.GcReflogTest)')","[256512, 256597]"
"('Description.java', 'org.junit.runner.Description', 'methodAndClassNamePatternGroupOrDefault', '([\\s\\S]*)\\((.*)\\)', 'testRebaseWithUncommittedMasterChangeBaseCommit(org.eclipse.jgit.api.RebaseCommandTest)')","[217774, 219268]"
"('Description.java', 'org.junit.runner.Description', 'methodAndClassNamePatternGroupOrDefault', '([\\s\\S]*)\\((.*)\\)', 'testDegenerate_ReplaceMiddle(org.eclipse.jgit.diff.MyersDiffTest)')","[97274, 97712]"
"('Description.java', 'org.junit.runner.Description', 'methodAndClassNamePatternGroupOrDefault', '([\\s\\S]*)\\((.*)\\)', 'testEmptyMap(org.eclipse.jgit.lib.ObjectIdSubclassMapTest)')","[114092, 114246]"
"('URIish.java', 'org.eclipse.jgit.transport.URIish', '<init>', '^([a-z][a-z0-9+-]+)://(?:(?:([^/:@]+)(?::([^\\\\/]+))?@)?((?:[^\\\\/:]+)|(?:\\[[0-9a-f:]+\\]))(?::(\\d+))?((?:/~(?:[^\\\\/]+))?[\\\\/]))?(.+)?$', 'https://l usr\\example.com@example.com:1234/D:\\x')",[37369]
"('Description.java', 'org.junit.runner.Description', 'methodAndClassNamePatternGroupOrDefault', '([\\s\\S]*)\\((.*)\\)', 'testWordGroupCase3[OldRule? false](org.eclipse.jgit.ignore.IgnoreRuleSpecialCasesTest)')","[148836, 155941]"
"('Description.java', 'org.junit.runner.Description', 'methodAndClassNamePatternGroupOrDefault', '([\\s\\S]*)\\((.*)\\)', 'testPathsReset(org.eclipse.jgit.api.ResetCommandTest)')","[204562, 204910]"
"('Description.java', 'org.junit.runner.Description', 'methodAndClassNamePatternGroupOrDefault', '([\\s\\S]*)\\((.*)\\)', 'testRecursiveFiltering(org.eclipse.jgit.treewalk.filter.PathSuffixFilterTest)')","[138298, 138363]"
"('Description.java', 'org.junit.runner.Description', 'methodAndClassNamePatternGroupOrDefault', '([\\s\\S]*)\\((.*)\\)', 'testDotAsteriskMatch[OldRule? false](org.eclipse.jgit.ignore.FastIgnoreRuleTest)')","[164088, 164845]"
"('URIish.java', 'org.eclipse.jgit.transport.URIish', '<init>', '^(file):([\\\\/](?![\\\\/])((?:[A-Za-z]:)?[\\\\/]?(?:(?:[^\\\\/]+[\\\\/]+)*[^\\\\/]+[\\\\/]*)))$', 'ssh+git://me@example.com:1234/D:/x')",[29572]
"('URIish.java', 'org.eclipse.jgit.transport.URIish', '<init>', '^([\\\\/]?((?:[A-Za-z]:)?[\\\\/]?(?:(?:[^\\\\/]+[\\\\/]+)*[^\\\\/]+[\\\\/]*)))$', '/tmp/jgit_test_976787373850596776_tmp/tmp_5547895567498631481')","[209629, 209774, 210205, 210355]"
"('Description.java', 'org.junit.runner.Description', 'methodAndClassNamePatternGroupOrDefault', '([\\s\\S]*)\\((.*)\\)', 'test010_readNamesInSubSection(org.eclipse.jgit.lib.ConfigTest)')","[129428, 130165]"
"('URIish.java', 'org.eclipse.jgit.transport.URIish', '<init>', '^(file):([\\\\/](?![\\\\/])((?:[A-Za-z]:)?[\\\\/]?(?:(?:[^\\\\/]+[\\\\/]+)*[^\\\\/]+[\\\\/]*)))$', '/a/b/.git')",[71080]
"('Description.java', 'org.junit.runner.Description', 'methodAndClassNamePatternGroupOrDefault', '([\\s\\S]*)\\((.*)\\)', 'testMaliciousWindowsADS(org.eclipse.jgit.lib.DirCacheCheckoutMaliciousPathTest)')","[112248, 113160]"
"('PathMatcher.java', 'org.eclipse.jgit.ignore.internal.PathMatcher', 'iterate', 'ne.', 'new')","[142769, 142798, 142827, 142856, 143913, 143942, 143971, 144000]"
"('URIish.java', 'org.eclipse.jgit.transport.URIish', '<init>', '^([a-z][a-z0-9+-]+)://(?:(?:([^/:@]+)(?::([^\\\\/]+))?@)?((?:[^\\\\/:]+)|(?:\\[[0-9a-f:]+\\]))(?::(\\d+))?((?:/~(?:[^\\\\/]+))?[\\\\/]))?(.+)?$', 'ssh+git://me@example.com:80/D:/x')",[29779]
"('Description.java', 'org.junit.runner.Description', 'methodAndClassNamePatternGroupOrDefault', '([\\s\\S]*)\\((.*)\\)', 'untrackedFileConflictsWithCommit(org.eclipse.jgit.api.StashApplyCommandTest)')","[241252, 241824]"
"('URIish.java', 'org.eclipse.jgit.transport.URIish', '<init>', '^([a-z][a-z0-9+-]+)://(?:(?:([^/:@]+)(?::([^\\\\/]+))?@)?((?:[^\\\\/:]+)|(?:\\[[0-9a-f:]+\\]))(?::(\\d+))?((?:/~(?:[^\\\\/]+))?[\\\\/]))?(.+)?$', 'ssh://l usr\\example.com@[::1]//')","[41279, 41463]"
"('Description.java', 'org.junit.runner.Description', 'methodAndClassNamePatternGroupOrDefault', '([\\s\\S]*)\\((.*)\\)', 'testEmpty_NoMatch(org.eclipse.jgit.revwalk.RevWalkPathFilter1Test)')","[75956, 76240]"
"('Description.java', 'org.junit.runner.Description', 'methodAndClassNamePatternGroupOrDefault', '([\\s\\S]*)\\((.*)\\)', 'testTimeout_writeBuffer_Success1(org.eclipse.jgit.util.io.TimeoutOutputStreamTest)')","[172644, 172839]"
"('Description.java', 'org.junit.runner.Description', 'methodAndClassNamePatternGroupOrDefault', '([\\s\\S]*)\\((.*)\\)', 'testCntrlGroupCase0[OldRule? false](org.eclipse.jgit.ignore.IgnoreRuleSpecialCasesTest)')","[146628, 153733]"
"('Description.java', 'org.junit.runner.Description', 'methodAndClassNamePatternGroupOrDefault', '([\\s\\S]*)\\((.*)\\)', 'testOnlyOption_f1_10_c(org.eclipse.jgit.api.CommitOnlyTest)')","[237266, 239350]"
"('Description.java', 'org.junit.runner.Description', 'methodAndClassNamePatternGroupOrDefault', '([\\s\\S]*)\\((.*)\\)', 'testSpaceGroupCase1[OldRule? false](org.eclipse.jgit.ignore.IgnoreRuleSpecialCasesTest)')","[147019, 154124]"
"('Description.java', 'org.junit.runner.Description', 'methodAndClassNamePatternGroupOrDefault', '([\\s\\S]*)\\((.*)\\)', 'testMixedGroupCase0[OldRule? false](org.eclipse.jgit.ignore.IgnoreRuleSpecialCasesTest)')","[146076, 153181]"
"('Description.java', 'org.junit.runner.Description', 'methodAndClassNamePatternGroupOrDefault', '([\\s\\S]*)\\((.*)\\)', 'testTimeout_close_Success(org.eclipse.jgit.util.io.TimeoutOutputStreamTest)')","[172623, 172817]"
"('Description.java', 'org.junit.runner.Description', 'methodAndClassNamePatternGroupOrDefault', '([\\s\\S]*)\\((.*)\\)', 'testParse_NoBinary(org.eclipse.jgit.patch.PatchTest)')","[196079, 196227]"
"('Description.java', 'org.junit.runner.Description', 'methodAndClassNamePatternGroupOrDefault', '([\\s\\S]*)\\((.*)\\)', 'testRenameRefNameColission1avoided(org.eclipse.jgit.internal.storage.file.RefUpdateTest)')","[253565, 254422]"
"('Description.java', 'org.junit.runner.Description', 'methodAndClassNamePatternGroupOrDefault', '([\\s\\S]*)\\((.*)\\)', 'testNonBareFileKey(org.eclipse.jgit.lib.RepositoryCacheTest)')","[111343, 111471]"
"('URIish.java', 'org.eclipse.jgit.transport.URIish', '<init>', '^([a-z][a-z0-9+-]+)://(?:(?:([^/:@]+)(?::([^\\\\/]+))?@)?((?:[^\\\\/:]+)|(?:\\[[0-9a-f:]+\\]))(?::(\\d+))?((?:/~(?:[^\\\\/]+))?[\\\\/]))?(.+)?$', 'https://l usr\\example.com@1.2.3.4//abc')","[50893, 51077]"
"('Description.java', 'org.junit.runner.Description', 'methodAndClassNamePatternGroupOrDefault', '([\\s\\S]*)\\((.*)\\)', 'rfc(org.eclipse.jgit.util.GitDateParserTest)')","[182383, 182663]"
"('Description.java', 'org.junit.runner.Description', 'methodAndClassNamePatternGroupOrDefault', '([\\s\\S]*)\\((.*)\\)', 'testSetFastForwardMergeoptions(org.eclipse.jgit.lib.ConfigTest)')","[129113, 129835]"
"('Description.java', 'org.junit.runner.Description', 'methodAndClassNamePatternGroupOrDefault', '([\\s\\S]*)\\((.*)\\)', 'testIsBare_CreateRepositoryFromArbitraryGitDir(org.eclipse.jgit.internal.storage.file.RepositorySetupWorkDirTest)')","[255894, 256158]"
"('URIish.java', 'org.eclipse.jgit.transport.URIish', '<init>', '^([a-z][a-z0-9+-]+)://(?:(?:([^/:@]+)(?::([^\\\\/]+))?@)?((?:[^\\\\/:]+)|(?:\\[[0-9a-f:]+\\]))(?::(\\d+))?((?:/~(?:[^\\\\/]+))?[\\\\/]))?(.+)?$', 'file:///tmp/jgit_test_8039684018584715607_tmp/tmp_1550296378721462083/.git/')",[173481]
"('Description.java', 'org.junit.runner.Description', 'methodAndClassNamePatternGroupOrDefault', '([\\s\\S]*)\\((.*)\\)', 'org.eclipse.jgit.util.QuotedStringBourneUserPathStyleTest')","[192408, 193996]"
"('Description.java', 'org.junit.runner.Description', 'methodAndClassNamePatternGroupOrDefault', '([\\s\\S]*)\\((.*)\\)', 'indexAdd(org.eclipse.jgit.api.StashApplyCommandTest)')","[240937, 241494]"
"('Description.java', 'org.junit.runner.Description', 'methodAndClassNamePatternGroupOrDefault', '([\\s\\S]*)\\((.*)\\)', 'testManySolutionsCase4(org.eclipse.jgit.fnmatch.FileNameMatcherTest)')","[103183, 106547]"
"('Description.java', 'org.junit.runner.Description', 'methodAndClassNamePatternGroupOrDefault', '([\\s\\S]*)\\((.*)\\)', 'testMaliciousGitPathEndSpaceUnixOk(org.eclipse.jgit.lib.DirCacheCheckoutMaliciousPathTest)')","[112206, 113116]"
"('URIish.java', 'org.eclipse.jgit.transport.URIish', '<init>', '^([a-z][a-z0-9+-]+)://(?:(?:([^/:@]+)(?::([^\\\\/]+))?@)?((?:[^\\\\/:]+)|(?:\\[[0-9a-f:]+\\]))(?::(\\d+))?((?:/~(?:[^\\\\/]+))?[\\\\/]))?(.+)?$', 'ssh://lusr\\example@example.com//abc')","[41693, 41877]"
"('URIish.java', 'org.eclipse.jgit.transport.URIish', '<init>', '^(file):([\\\\/](?![\\\\/])((?:[A-Za-z]:)?[\\\\/]?(?:(?:[^\\\\/]+[\\\\/]+)*[^\\\\/]+[\\\\/]*)))$', 'file:///tmp/jgit_test_8825191104981143089_tmp/tmp_8275953160873311507/.git/')",[212829]
"('FastIgnoreRule.java', 'org.eclipse.jgit.ignore.FastIgnoreRule', 'isMatch', '[b-d]', '-')",[161878]
"('URIish.java', 'org.eclipse.jgit.transport.URIish', '<init>', '^(file):([\\\\/](?![\\\\/])((?:[A-Za-z]:)?[\\\\/]?(?:(?:[^\\\\/]+[\\\\/]+)*[^\\\\/]+[\\\\/]*)))$', 'file:///tmp/jgit_test_4360636382069253103_tmp/tmp_2495677753821017882/.git/')",[200375]
"('Description.java', 'org.junit.runner.Description', 'methodAndClassNamePatternGroupOrDefault', '([\\s\\S]*)\\((.*)\\)', 'testEscapedBracket2[OldRule? true](org.eclipse.jgit.ignore.IgnoreRuleSpecialCasesTest)')","[152698, 159782]"
"('Description.java', 'org.junit.runner.Description', 'methodAndClassNamePatternGroupOrDefault', '([\\s\\S]*)\\((.*)\\)', 'testFileInFolderCommittedNonRecursive(org.eclipse.jgit.treewalk.filter.IndexDiffFilterTest)')","[137235, 138065]"
"('Description.java', 'org.junit.runner.Description', 'methodAndClassNamePatternGroupOrDefault', '([\\s\\S]*)\\((.*)\\)', 'testParseCopy100(org.eclipse.jgit.patch.FileHeaderTest)')","[195348, 195801]"
"('URIish.java', 'org.eclipse.jgit.transport.URIish', '<init>', '^([\\\\/]?((?:[A-Za-z]:)?[\\\\/]?(?:(?:[^\\\\/]+[\\\\/]+)*[^\\\\/]+[\\\\/]*)))$', '/tmp/jgit_test_8384532865018553446_tmp/tmp_7813617932258479589')","[227955, 228100, 228307, 228737]"
"('Description.java', 'org.junit.runner.Description', 'methodAndClassNamePatternGroupOrDefault', '([\\s\\S]*)\\((.*)\\)', 'resolveOneLevelHigherRelativeUrl(org.eclipse.jgit.submodule.SubmoduleInitTest)')","[100662, 100814]"
"('URIish.java', 'org.eclipse.jgit.transport.URIish', '<init>', '^([a-z][a-z0-9+-]+)://(?:(?:([^/:@]+)(?::([^\\\\/]+))?@)?((?:[^\\\\/:]+)|(?:\\[[0-9a-f:]+\\]))(?::(\\d+))?((?:/~(?:[^\\\\/]+))?[\\\\/]))?(.+)?$', 'file:///tmp/jgit_test_3566505892151671262_tmp/tmp_416410885206968028/.git/')",[109695]
"('Description.java', 'org.junit.runner.Description', 'methodAndClassNamePatternGroupOrDefault', '([\\s\\S]*)\\((.*)\\)', 'indexDelete(org.eclipse.jgit.api.StashApplyCommandTest)')","[241084, 241648]"
"('Description.java', 'org.junit.runner.Description', 'methodAndClassNamePatternGroupOrDefault', '([\\s\\S]*)\\((.*)\\)', 'repackEmptyRepo_noPackCreated(org.eclipse.jgit.internal.storage.file.GcBasicPackingTest)')","[247081, 247210]"
"('FastIgnoreRule.java', 'org.eclipse.jgit.ignore.FastIgnoreRule', 'isMatch', '[\\p{XDigit}]', 'd')",[162998]
"('Description.java', 'org.junit.runner.Description', 'methodAndClassNamePatternGroupOrDefault', '([\\s\\S]*)\\((.*)\\)', 'testPullWithoutConfig(org.eclipse.jgit.api.PullCommandTest)')","[220798, 221145]"
"('Description.java', 'org.junit.runner.Description', 'methodAndClassNamePatternGroupOrDefault', '([\\s\\S]*)\\((.*)\\)', 'testCombinedRangesInOneGroupCase1[OldRule? true](org.eclipse.jgit.ignore.IgnoreRuleSpecialCasesTest)')","[149593, 156677]"
"('URIish.java', 'org.eclipse.jgit.transport.URIish', '<init>', '^(file):([\\\\/](?![\\\\/])((?:[A-Za-z]:)?[\\\\/]?(?:(?:[^\\\\/]+[\\\\/]+)*[^\\\\/]+[\\\\/]*)))$', 'http://lusr\\example:wtf@1.2.3.4:1234//abc')",[21938]
"('Description.java', 'org.junit.runner.Description', 'methodAndClassNamePatternGroupOrDefault', '([\\s\\S]*)\\((.*)\\)', 'testGetRef_DiscoversDeletedLoose(org.eclipse.jgit.internal.storage.file.RefDirectoryTest)')","[258190, 259386]"
"('Description.java', 'org.junit.runner.Description', 'methodAndClassNamePatternGroupOrDefault', '([\\s\\S]*)\\((.*)\\)', 'testXDigitGroupCase5(org.eclipse.jgit.fnmatch.FileNameMatcherTest)')","[103603, 106987]"
"('Description.java', 'org.junit.runner.Description', 'methodAndClassNamePatternGroupOrDefault', '([\\s\\S]*)\\((.*)\\)', 'testAlphaGroupCase1[OldRule? false](org.eclipse.jgit.ignore.IgnoreRuleSpecialCasesTest)')","[146835, 153940]"
"('URIish.java', 'org.eclipse.jgit.transport.URIish', '<init>', '^(file):([\\\\/](?![\\\\/])((?:[A-Za-z]:)?[\\\\/]?(?:(?:[^\\\\/]+[\\\\/]+)*[^\\\\/]+[\\\\/]*)))$', 'ssh://l usr\\example.com:wtf@[::1]:1234//')",[11877]
"('URIish.java', 'org.eclipse.jgit.transport.URIish', '<init>', '^([a-z][a-z0-9+-]+)://(?:(?:([^/:@]+)(?::([^\\\\/]+))?@)?((?:[^\\\\/:]+)|(?:\\[[0-9a-f:]+\\]))(?::(\\d+))?((?:/~(?:[^\\\\/]+))?[\\\\/]))?(.+)?$', 'http://me:wtf@example.com:1234/D:/x')",[18858]
"('Description.java', 'org.junit.runner.Description', 'methodAndClassNamePatternGroupOrDefault', '([\\s\\S]*)\\((.*)\\)', 'ISO(org.eclipse.jgit.util.GitDateFormatterTest)')","[172156, 172349]"
"('Description.java', 'org.junit.runner.Description', 'methodAndClassNamePatternGroupOrDefault', '([\\s\\S]*)\\((.*)\\)', 'testTwoSameSameAssumeValidDifferentContent(org.eclipse.jgit.treewalk.filter.InterIndexDiffFilterTest)')","[139586, 139696]"
"('Description.java', 'org.junit.runner.Description', 'methodAndClassNamePatternGroupOrDefault', '([\\s\\S]*)\\((.*)\\)', 'testGetCachedBytes(org.eclipse.jgit.notes.NoteMapTest)')","[199114, 199372]"
"('Description.java', 'org.junit.runner.Description', 'methodAndClassNamePatternGroupOrDefault', '([\\s\\S]*)\\((.*)\\)', 'testWritePack4SizeThinVsNoThin(org.eclipse.jgit.internal.storage.file.PackWriterTest)')","[251449, 251904]"
"('Description.java', 'org.junit.runner.Description', 'methodAndClassNamePatternGroupOrDefault', '([\\s\\S]*)\\((.*)\\)', 'testFileProtoUnix(org.eclipse.jgit.transport.URIishTest)')","[2297, 4882]"
"('URIish.java', 'org.eclipse.jgit.transport.URIish', '<init>', '^(file):([\\\\/](?![\\\\/])((?:[A-Za-z]:)?[\\\\/]?(?:(?:[^\\\\/]+[\\\\/]+)*[^\\\\/]+[\\\\/]*)))$', '/tmp/jgit_test_3752343835297747993_tmp/tmp_2470876455541918618')","[230446, 230571, 231031]"
"('Description.java', 'org.junit.runner.Description', 'methodAndClassNamePatternGroupOrDefault', '([\\s\\S]*)\\((.*)\\)', 'testParseGitFileName_EmptyHeader(org.eclipse.jgit.patch.FileHeaderTest)')","[195327, 195779]"
"('FastIgnoreRule.java', 'org.eclipse.jgit.ignore.FastIgnoreRule', 'isMatch', 'a.*a.*a', 'ababa')",[162606]
"('URIish.java', 'org.eclipse.jgit.transport.URIish', '<init>', '^(file):([\\\\/](?![\\\\/])((?:[A-Za-z]:)?[\\\\/]?(?:(?:[^\\\\/]+[\\\\/]+)*[^\\\\/]+[\\\\/]*)))$', 'http://lusr\\example:wtf@1.2.3.4:80//')",[22076]
"('Description.java', 'org.junit.runner.Description', 'methodAndClassNamePatternGroupOrDefault', '([\\s\\S]*)\\((.*)\\)', 'org.eclipse.jgit.api.StashListCommandTest')","[226544, 226739]"
"('Description.java', 'org.junit.runner.Description', 'methodAndClassNamePatternGroupOrDefault', '([\\s\\S]*)\\((.*)\\)', 'testParseModeChange(org.eclipse.jgit.patch.FileHeaderTest)')","[195285, 195735]"
"('Description.java', 'org.junit.runner.Description', 'methodAndClassNamePatternGroupOrDefault', '([\\s\\S]*)\\((.*)\\)', 'testInvalidTreeNameIsGit(org.eclipse.jgit.lib.ObjectCheckerTest)')","[121889, 124019]"
"('Description.java', 'org.junit.runner.Description', 'methodAndClassNamePatternGroupOrDefault', '([\\s\\S]*)\\((.*)\\)', 'testOneEntry_Seek1IsEOF(org.eclipse.jgit.treewalk.CanonicalTreeParserTest)')","[136069, 136394]"
"('FastIgnoreRule.java', 'org.eclipse.jgit.ignore.FastIgnoreRule', 'isMatch', 'a[b\\-]', 'a-')",[162372]
"('URIish.java', 'org.eclipse.jgit.transport.URIish', '<init>', '^(file):([\\\\/](?![\\\\/])((?:[A-Za-z]:)?[\\\\/]?(?:(?:[^\\\\/]+[\\\\/]+)*[^\\\\/]+[\\\\/]*)))$', 'https://me:wtf@[::1]:1234/D:/x')",[23456]
"('URIish.java', 'org.eclipse.jgit.transport.URIish', '<init>', '^(file):([\\\\/](?![\\\\/])((?:[A-Za-z]:)?[\\\\/]?(?:(?:[^\\\\/]+[\\\\/]+)*[^\\\\/]+[\\\\/]*)))$', 'http://me@[::1]:1234//')",[33528]
"('Description.java', 'org.junit.runner.Description', 'methodAndClassNamePatternGroupOrDefault', '([\\s\\S]*)\\((.*)\\)', 'testFindRemoteRefUpdatesWildcardNoTracking(org.eclipse.jgit.transport.TransportTest)')","[71591, 71766]"
"('Description.java', 'org.junit.runner.Description', 'methodAndClassNamePatternGroupOrDefault', '([\\s\\S]*)\\((.*)\\)', 'testListNotes(org.eclipse.jgit.api.NotesCommandTest)')","[242585, 242628]"
"('URIish.java', 'org.eclipse.jgit.transport.URIish', '<init>', '^(file):([\\\\/](?![\\\\/])((?:[A-Za-z]:)?[\\\\/]?(?:(?:[^\\\\/]+[\\\\/]+)*[^\\\\/]+[\\\\/]*)))$', 'file:///tmp/jgit_test_3566505892151671262_tmp/tmp_416410885206968028/.git/')",[109644]
"('Description.java', 'org.junit.runner.Description', 'methodAndClassNamePatternGroupOrDefault', '([\\s\\S]*)\\((.*)\\)', 'testReadLines_endCRLF(org.eclipse.jgit.util.ReadLinesTest)')","[171776, 171903]"
"('URIish.java', 'org.eclipse.jgit.transport.URIish', '<init>', '^([a-z][a-z0-9+-]+)://(?:(?:([^/:@]+)(?::([^\\\\/]+))?@)?((?:[^\\\\/:]+)|(?:\\[[0-9a-f:]+\\]))(?::(\\d+))?((?:/~(?:[^\\\\/]+))?[\\\\/]))?(.+)?$', '/tmp/jgit_test_1514057598611897554_tmp/tmp_7977849081850125086')","[227618, 227748]"
"('Description.java', 'org.junit.runner.Description', 'methodAndClassNamePatternGroupOrDefault', '([\\s\\S]*)\\((.*)\\)', 'org.eclipse.jgit.api.GarbageCollectCommandTest')","[201234, 202925]"
"('URIish.java', 'org.eclipse.jgit.transport.URIish', '<init>', '^([a-z][a-z0-9+-]+)://(?:(?:([^/:@]+)(?::([^\\\\/]+))?@)?((?:[^\\\\/:]+)|(?:\\[[0-9a-f:]+\\]))(?::(\\d+))?((?:/~(?:[^\\\\/]+))?[\\\\/]))?(.+)?$', 'http://lusr\\example:wtf@example.com:80//')",[21731]
"('URIish.java', 'org.eclipse.jgit.transport.URIish', '<init>', '^(file):([\\\\/](?![\\\\/])((?:[A-Za-z]:)?[\\\\/]?(?:(?:[^\\\\/]+[\\\\/]+)*[^\\\\/]+[\\\\/]*)))$', 'http://lusr\\example@[::1]:1234/D:/x')",[35828]
"('URIish.java', 'org.eclipse.jgit.transport.URIish', '<init>', '^(file):([\\\\/](?![\\\\/])((?:[A-Za-z]:)?[\\\\/]?(?:(?:[^\\\\/]+[\\\\/]+)*[^\\\\/]+[\\\\/]*)))$', 'http://lusr\\example:wtf@1.2.3.4:1234//')",[21892]
"('FastIgnoreRule.java', 'org.eclipse.jgit.ignore.FastIgnoreRule', 'isMatch', '\\[[a]', 'a')",[163700]
"('Description.java', 'org.junit.runner.Description', 'methodAndClassNamePatternGroupOrDefault', '([\\s\\S]*)\\((.*)\\)', 'fetchShouldAutoFollowTag(org.eclipse.jgit.api.FetchCommandTest)')","[242953, 243085]"
"('Description.java', 'org.junit.runner.Description', 'methodAndClassNamePatternGroupOrDefault', '([\\s\\S]*)\\((.*)\\)', 'testEdit_NoUniqueMiddleSide_Insert2(org.eclipse.jgit.diff.HistogramDiffTest)')","[98548, 99144]"
"('URIish.java', 'org.eclipse.jgit.transport.URIish', '<init>', '^([a-z][a-z0-9+-]+)://(?:(?:([^/:@]+)(?::([^\\\\/]+))?@)?((?:[^\\\\/:]+)|(?:\\[[0-9a-f:]+\\]))(?::(\\d+))?((?:/~(?:[^\\\\/]+))?[\\\\/]))?(.+)?$', 'ssh://lusr\\example@[::1]:80//')",[29319]
"('URIish.java', 'org.eclipse.jgit.transport.URIish', '<init>', '^([a-z][a-z0-9+-]+)://(?:(?:([^/:@]+)(?::([^\\\\/]+))?@)?((?:[^\\\\/:]+)|(?:\\[[0-9a-f:]+\\]))(?::(\\d+))?((?:/~(?:[^\\\\/]+))?[\\\\/]))?(.+)?$', 'ssh://l usr\\example.com@1.2.3.4:1234/D:/x')",[27692]
"('Description.java', 'org.junit.runner.Description', 'methodAndClassNamePatternGroupOrDefault', '([\\s\\S]*)\\((.*)\\)', 'archiveHeadAllFiles(org.eclipse.jgit.api.ArchiveCommandTest)')","[240088, 240175]"
"('Description.java', 'org.junit.runner.Description', 'methodAndClassNamePatternGroupOrDefault', '([\\s\\S]*)\\((.*)\\)', 'testOnlyOption_f1_12_f2_14_e(org.eclipse.jgit.api.CommitOnlyTest)')","[237098, 239174]"
"('Description.java', 'org.junit.runner.Description', 'methodAndClassNamePatternGroupOrDefault', '([\\s\\S]*)\\((.*)\\)', 'testFilter_Negate_ALL(org.eclipse.jgit.revwalk.RevWalkFilterTest)')","[83104, 83422]"
"('URIish.java', 'org.eclipse.jgit.transport.URIish', '<init>', '^([a-z][a-z0-9+-]+)://(?:(?:([^/:@]+)(?::([^\\\\/]+))?@)?((?:[^\\\\/:]+)|(?:\\[[0-9a-f:]+\\]))(?::(\\d+))?((?:/~(?:[^\\\\/]+))?[\\\\/]))?(.+)?$', 'https://lusr\\example:wtf@[::1]:80//abc')",[25825]
"('Description.java', 'org.junit.runner.Description', 'methodAndClassNamePatternGroupOrDefault', '([\\s\\S]*)\\((.*)\\)', 'testCreateFile(org.eclipse.jgit.diff.MyersDiffTest)')","[97190, 97624]"
"('Description.java', 'org.junit.runner.Description', 'methodAndClassNamePatternGroupOrDefault', '([\\s\\S]*)\\((.*)\\)', 'testIterator_MissingUnresolvedSymbolicRefIsBug(org.eclipse.jgit.util.RefMapTest)')","[183909, 184378]"
"('URIish.java', 'org.eclipse.jgit.transport.URIish', '<init>', '^(file):([\\\\/](?![\\\\/])((?:[A-Za-z]:)?[\\\\/]?(?:(?:[^\\\\/]+[\\\\/]+)*[^\\\\/]+[\\\\/]*)))$', 'ssh+git://lusr\\example@1.2.3.4:80//')",[32240]
"('Description.java', 'org.junit.runner.Description', 'methodAndClassNamePatternGroupOrDefault', '([\\s\\S]*)\\((.*)\\)', 'test009_readNamesInSection(org.eclipse.jgit.lib.ConfigTest)')","[129260, 129989]"
"('Description.java', 'org.junit.runner.Description', 'methodAndClassNamePatternGroupOrDefault', '([\\s\\S]*)\\((.*)\\)', 'org.eclipse.jgit.internal.storage.file.GcDirCacheSavesObjectsTest')","[254691, 256455]"
"('URIish.java', 'org.eclipse.jgit.transport.URIish', '<init>', '^([a-z][a-z0-9+-]+)://(?:(?:([^/:@]+)(?::([^\\\\/]+))?@)?((?:[^\\\\/:]+)|(?:\\[[0-9a-f:]+\\]))(?::(\\d+))?((?:/~(?:[^\\\\/]+))?[\\\\/]))?(.+)?$', 'http://l usr\\example.com@1.2.3.4//abc')","[47581, 47765]"
"('Description.java', 'org.junit.runner.Description', 'methodAndClassNamePatternGroupOrDefault', '([\\s\\S]*)\\((.*)\\)', 'testInt16(org.eclipse.jgit.util.RawParseUtils_HexParseTest)')","[181091, 181155]"
"('FastIgnoreRule.java', 'org.eclipse.jgit.ignore.FastIgnoreRule', 'isMatch', '.*\\.sta[0-5]', 'anothertest.sta2')","[142497, 143641]"
"('Description.java', 'org.junit.runner.Description', 'methodAndClassNamePatternGroupOrDefault', '([\\s\\S]*)\\((.*)\\)', 'testRebaseInteractiveFixupWithBlankLines(org.eclipse.jgit.api.RebaseCommandTest)')","[217522, 219004]"
"('URIish.java', 'org.eclipse.jgit.transport.URIish', '<init>', '^(?:([^/:@]+)(?::([^\\\\/]+))?@)?([^\\\\/:]{2,}):([\\\\/](?:(?:[^\\\\/]+[\\\\/]+)*[^\\\\/]+[\\\\/]*))$', '/tmp/jgit_test_2065451132428062414_tmp/tmp_1493923410369301041')","[208542, 208682]"
"('URIish.java', 'org.eclipse.jgit.transport.URIish', '<init>', '^(file):([\\\\/](?![\\\\/])((?:[A-Za-z]:)?[\\\\/]?(?:(?:[^\\\\/]+[\\\\/]+)*[^\\\\/]+[\\\\/]*)))$', 'https://l usr\\example.com@[::1]:80//abc')",[38174]
"('Description.java', 'org.junit.runner.Description', 'methodAndClassNamePatternGroupOrDefault', '([\\s\\S]*)\\((.*)\\)', 'testStringOfPearls_FilePath1(org.eclipse.jgit.revwalk.RevWalkPathFilter1Test)')","[75767, 76042]"
"('Description.java', 'org.junit.runner.Description', 'methodAndClassNamePatternGroupOrDefault', '([\\s\\S]*)\\((.*)\\)', 'testLooseDelete(org.eclipse.jgit.internal.storage.file.RefUpdateTest)')","[253040, 253872]"
"('Description.java', 'org.junit.runner.Description', 'methodAndClassNamePatternGroupOrDefault', '([\\s\\S]*)\\((.*)\\)', 'generatorFilteredToOneOfTwoSubmodules(org.eclipse.jgit.submodule.SubmoduleWalkTest)')","[108409, 108603]"
"('URIish.java', 'org.eclipse.jgit.transport.URIish', '<init>', '^(file):([\\\\/](?![\\\\/])((?:[A-Za-z]:)?[\\\\/]?(?:(?:[^\\\\/]+[\\\\/]+)*[^\\\\/]+[\\\\/]*)))$', 'ssh+git://l usr\\example.com:wtf@example.com:80/D:/x')",[16227]
"('Description.java', 'org.junit.runner.Description', 'methodAndClassNamePatternGroupOrDefault', '([\\s\\S]*)\\((.*)\\)', 'testDuplicateParents(org.eclipse.jgit.revplot.PlotCommitListTest)')","[197066, 197386]"
"('Description.java', 'org.junit.runner.Description', 'methodAndClassNamePatternGroupOrDefault', '([\\s\\S]*)\\((.*)\\)', 'testXDigitGroupCase0[OldRule? true](org.eclipse.jgit.ignore.IgnoreRuleSpecialCasesTest)')","[152077, 159161]"
"('Description.java', 'org.junit.runner.Description', 'methodAndClassNamePatternGroupOrDefault', '([\\s\\S]*)\\((.*)\\)', 'testEmpty(org.eclipse.jgit.util.RawParseUtils_LineMapTest)')","[179106, 179212]"
"('Description.java', 'org.junit.runner.Description', 'methodAndClassNamePatternGroupOrDefault', '([\\s\\S]*)\\((.*)\\)', 'testTimeout_skip_Success(org.eclipse.jgit.util.io.TimeoutInputStreamTest)')","[173970, 174146]"
"('Description.java', 'org.junit.runner.Description', 'methodAndClassNamePatternGroupOrDefault', '([\\s\\S]*)\\((.*)\\)', 'testFileCommittedModifiedCommittedComparedWithInitialCommit(org.eclipse.jgit.treewalk.filter.IndexDiffFilterTest)')","[137109, 137933]"
"('URIish.java', 'org.eclipse.jgit.transport.URIish', '<init>', '^(file):([\\\\/](?![\\\\/])((?:[A-Za-z]:)?[\\\\/]?(?:(?:[^\\\\/]+[\\\\/]+)*[^\\\\/]+[\\\\/]*)))$', 'file:///tmp/jgit_test_2932023989078420112_tmp/tmp_8275709076875192253/.git/')",[174227]
"('Description.java', 'org.junit.runner.Description', 'methodAndClassNamePatternGroupOrDefault', '([\\s\\S]*)\\((.*)\\)', 'testFilter_NONE_And_ALL(org.eclipse.jgit.revwalk.RevWalkFilterTest)')","[83251, 83576]"
"('ChangeIdUtil.java', 'org.eclipse.jgit.util.ChangeIdUtil', 'indexOfFirstFooterLine', '(^[a-zA-Z0-9-]+:(?!//).*$)', 'Bug: 42')",[188416]
"('Description.java', 'org.junit.runner.Description', 'methodAndClassNamePatternGroupOrDefault', '([\\s\\S]*)\\((.*)\\)', 'testMultiLineMessagesWithSignedOffBy(org.eclipse.jgit.util.ChangeIdUtilTest)')","[185714, 186468]"
"('Description.java', 'org.junit.runner.Description', 'methodAndClassNamePatternGroupOrDefault', '([\\s\\S]*)\\((.*)\\)', 'testFallbackToMyersDiff(org.eclipse.jgit.diff.HistogramDiffTest)')","[98485, 99055]"
"('Description.java', 'org.junit.runner.Description', 'methodAndClassNamePatternGroupOrDefault', '([\\s\\S]*)\\((.*)\\)', 'testParse_GitStyleMessage(org.eclipse.jgit.revwalk.RevCommitParseTest)')","[84161, 84612]"
"('Description.java', 'org.junit.runner.Description', 'methodAndClassNamePatternGroupOrDefault', '([\\s\\S]*)\\((.*)\\)', 'testDeleteD(org.eclipse.jgit.api.ApplyCommandTest)')","[223652, 223894]"
"('Description.java', 'org.junit.runner.Description', 'methodAndClassNamePatternGroupOrDefault', '([\\s\\S]*)\\((.*)\\)', 'testAddRemovedFile(org.eclipse.jgit.api.AddCommandTest)')","[234780, 235204]"
"('URIish.java', 'org.eclipse.jgit.transport.URIish', '<init>', '^([a-z][a-z0-9+-]+)://(?:(?:([^/:@]+)(?::([^\\\\/]+))?@)?((?:[^\\\\/:]+)|(?:\\[[0-9a-f:]+\\]))(?::(\\d+))?((?:/~(?:[^\\\\/]+))?[\\\\/]))?(.+)?$', 'http://lusr\\example:wtf@[::1]:80/D:\\x')",[22605]
"('URIish.java', 'org.eclipse.jgit.transport.URIish', '<init>', '^(file):([\\\\/](?![\\\\/])((?:[A-Za-z]:)?[\\\\/]?(?:(?:[^\\\\/]+[\\\\/]+)*[^\\\\/]+[\\\\/]*)))$', 'http://me:wtf@1.2.3.4:80//')",[19559]
"('Description.java', 'org.junit.runner.Description', 'methodAndClassNamePatternGroupOrDefault', '([\\s\\S]*)\\((.*)\\)', 'testToString(org.eclipse.jgit.diff.EditTest)')","[99976, 100321]"
"('URIish.java', 'org.eclipse.jgit.transport.URIish', '<init>', '^([a-z][a-z0-9+-]+)://(?:(?:([^/:@]+)(?::([^\\\\/]+))?@)?((?:[^\\\\/:]+)|(?:\\[[0-9a-f:]+\\]))(?::(\\d+))?((?:/~(?:[^\\\\/]+))?[\\\\/]))?(.+)?$', '/tmp/jgit_test_4442660414069404548_tmp/tmp_2197519089635817093')","[221303, 221433, 221694, 221844, 222108]"
"('Description.java', 'org.junit.runner.Description', 'methodAndClassNamePatternGroupOrDefault', '([\\s\\S]*)\\((.*)\\)', 'testScpStyleWithoutUserAbsolutePath(org.eclipse.jgit.transport.URIishTest)')","[2876, 5212]"
"('Description.java', 'org.junit.runner.Description', 'methodAndClassNamePatternGroupOrDefault', '([\\s\\S]*)\\((.*)\\)', 'testGraphGroupCase4[OldRule? false](org.eclipse.jgit.ignore.IgnoreRuleSpecialCasesTest)')","[146421, 153526]"
"('Description.java', 'org.junit.runner.Description', 'methodAndClassNamePatternGroupOrDefault', '([\\s\\S]*)\\((.*)\\)', 'org.eclipse.jgit.util.io.AutoCRLFInputStreamTest')","[175426, 175783]"
"('URIish.java', 'org.eclipse.jgit.transport.URIish', '<init>', '^(file):([\\\\/](?![\\\\/])((?:[A-Za-z]:)?[\\\\/]?(?:(?:[^\\\\/]+[\\\\/]+)*[^\\\\/]+[\\\\/]*)))$', 'ssh+git://me@example.com//abc')","[42774, 42958]"
"('Description.java', 'org.junit.runner.Description', 'methodAndClassNamePatternGroupOrDefault', '([\\s\\S]*)\\((.*)\\)', 'workingDirectoryContentConflict(org.eclipse.jgit.api.StashApplyCommandTest)')","[240727, 241274]"
"('Description.java', 'org.junit.runner.Description', 'methodAndClassNamePatternGroupOrDefault', '([\\s\\S]*)\\((.*)\\)', 'testInvalidCommitInvalidParent4(org.eclipse.jgit.lib.ObjectCheckerTest)')","[121658, 123777]"
"('Description.java', 'org.junit.runner.Description', 'methodAndClassNamePatternGroupOrDefault', '([\\s\\S]*)\\((.*)\\)', 'testLsRemote(org.eclipse.jgit.api.LsRemoteCommandTest)')","[200561, 200649]"
"('URIish.java', 'org.eclipse.jgit.transport.URIish', 'getHumanishName', '^([\\\\/]?((?:[A-Za-z]:)?[\\\\/]?(?:(?:[^\\\\/]+[\\\\/]+)*[^\\\\/]+[\\\\/]*)))$', '/abc.git')",[66395]
"('Description.java', 'org.junit.runner.Description', 'methodAndClassNamePatternGroupOrDefault', '([\\s\\S]*)\\((.*)\\)', 'testFastForwardOnly(org.eclipse.jgit.api.MergeCommandTest)')","[213702, 214616]"
"('Description.java', 'org.junit.runner.Description', 'methodAndClassNamePatternGroupOrDefault', '([\\s\\S]*)\\((.*)\\)', 'testTimeout_readByte_Success2(org.eclipse.jgit.util.io.TimeoutInputStreamTest)')","[173865, 174036]"
"('Description.java', 'org.junit.runner.Description', 'methodAndClassNamePatternGroupOrDefault', '([\\s\\S]*)\\((.*)\\)', 'testEqualsWithoutWhitespace(org.eclipse.jgit.diff.RawTextIgnoreLeadingWhitespaceTest)')","[98298, 98341]"
"('Description.java', 'org.junit.runner.Description', 'methodAndClassNamePatternGroupOrDefault', '([\\s\\S]*)\\((.*)\\)', 'org.eclipse.jgit.ignore.IgnoreNodeTest')","[140416, 141099]"
"('URIish.java', 'org.eclipse.jgit.transport.URIish', '<init>', '^([a-z][a-z0-9+-]+)://(?:(?:([^/:@]+)(?::([^\\\\/]+))?@)?((?:[^\\\\/:]+)|(?:\\[[0-9a-f:]+\\]))(?::(\\d+))?((?:/~(?:[^\\\\/]+))?[\\\\/]))?(.+)?$', 'http://l usr\\example.com@[::1]:80//abc')",[34885]
"('Description.java', 'org.junit.runner.Description', 'methodAndClassNamePatternGroupOrDefault', '([\\s\\S]*)\\((.*)\\)', 'testTwoGroupsCase2(org.eclipse.jgit.fnmatch.FileNameMatcherTest)')","[102301, 105623]"
"('URIish.java', 'org.eclipse.jgit.transport.URIish', '<init>', '^([a-z][a-z0-9+-]+)://(?:(?:([^/:@]+)(?::([^\\\\/]+))?@)?((?:[^\\\\/:]+)|(?:\\[[0-9a-f:]+\\]))(?::(\\d+))?((?:/~(?:[^\\\\/]+))?[\\\\/]))?(.+)?$', 'ssh+git://me@1.2.3.4:1234//')",[29871]
"('Description.java', 'org.junit.runner.Description', 'methodAndClassNamePatternGroupOrDefault', '([\\s\\S]*)\\((.*)\\)', 'testXDigitGroupCase2[OldRule? true](org.eclipse.jgit.ignore.IgnoreRuleSpecialCasesTest)')","[152123, 159207]"
"('URIish.java', 'org.eclipse.jgit.transport.URIish', '<init>', '^(file):([\\\\/](?![\\\\/])((?:[A-Za-z]:)?[\\\\/]?(?:(?:[^\\\\/]+[\\\\/]+)*[^\\\\/]+[\\\\/]*)))$', 'ssh://me:wtf@example.com:80/D:\\x')",[8020]
"('URIish.java', 'org.eclipse.jgit.transport.URIish', '<init>', '^([a-z][a-z0-9+-]+)://(?:(?:([^/:@]+)(?::([^\\\\/]+))?@)?((?:[^\\\\/:]+)|(?:\\[[0-9a-f:]+\\]))(?::(\\d+))?((?:/~(?:[^\\\\/]+))?[\\\\/]))?(.+)?$', 'https://lusr\\example@example.com:80//abc')",[38565]
"('Description.java', 'org.junit.runner.Description', 'methodAndClassNamePatternGroupOrDefault', '([\\s\\S]*)\\((.*)\\)', 'testOnlyOption_f1_12_f2_14_a(org.eclipse.jgit.api.CommitOnlyTest)')","[236983, 239086]"
"('Description.java', 'org.junit.runner.Description', 'methodAndClassNamePatternGroupOrDefault', '([\\s\\S]*)\\((.*)\\)', 'org.eclipse.jgit.dircache.DirCacheLargePathTest')","[92119, 92889]"
"('URIish.java', 'org.eclipse.jgit.transport.URIish', '<init>', '^([a-z][a-z0-9+-]+)://(?:(?:([^/:@]+)(?::([^\\\\/]+))?@)?((?:[^\\\\/:]+)|(?:\\[[0-9a-f:]+\\]))(?::(\\d+))?((?:/~(?:[^\\\\/]+))?[\\\\/]))?(.+)?$', 'http://1.2.3.4/D:\\x')","[59817, 60001, 60921, 61105, 62025, 62209]"
"('URIish.java', 'org.eclipse.jgit.transport.URIish', '<init>', '^([a-z][a-z0-9+-]+)://(?:(?:([^/:@]+)(?::([^\\\\/]+))?@)?((?:[^\\\\/:]+)|(?:\\[[0-9a-f:]+\\]))(?::(\\d+))?((?:/~(?:[^\\\\/]+))?[\\\\/]))?(.+)?$', 'ssh+git://me@example.com//abc')","[42797, 42981]"
"('Description.java', 'org.junit.runner.Description', 'methodAndClassNamePatternGroupOrDefault', '([\\s\\S]*)\\((.*)\\)', 'testNonDefaultRemotes(org.eclipse.jgit.gitrepo.RepoCommandTest)')","[139967, 140270]"
"('Description.java', 'org.junit.runner.Description', 'methodAndClassNamePatternGroupOrDefault', '([\\s\\S]*)\\((.*)\\)', 'testNoSubtree_WithTreeWalk(org.eclipse.jgit.dircache.DirCacheIteratorTest)')","[92414, 92646]"
"('URIish.java', 'org.eclipse.jgit.transport.URIish', '<init>', '^([a-z][a-z0-9+-]+)://(?:(?:([^/:@]+)(?::([^\\\\/]+))?@)?((?:[^\\\\/:]+)|(?:\\[[0-9a-f:]+\\]))(?::(\\d+))?((?:/~(?:[^\\\\/]+))?[\\\\/]))?(.+)?$', 'git:///a/b/c//')",[70045]
"('Description.java', 'org.junit.runner.Description', 'methodAndClassNamePatternGroupOrDefault', '([\\s\\S]*)\\((.*)\\)', 'testOnlyOption_f1_4_e(org.eclipse.jgit.api.CommitOnlyTest)')","[236332, 238404]"
"('Description.java', 'org.junit.runner.Description', 'methodAndClassNamePatternGroupOrDefault', '([\\s\\S]*)\\((.*)\\)', 'testFileModeChangeAndContentChangeConflict(org.eclipse.jgit.lib.DirCacheCheckoutTest)')","[116221, 117182]"
"('FastIgnoreRule.java', 'org.eclipse.jgit.ignore.FastIgnoreRule', 'isMatch', '[A\\p{Ll}C3-5]', '2')",[160472]
"('URIish.java', 'org.eclipse.jgit.transport.URIish', '<init>', '^([a-z][a-z0-9+-]+)://(?:(?:([^/:@]+)(?::([^\\\\/]+))?@)?((?:[^\\\\/:]+)|(?:\\[[0-9a-f:]+\\]))(?::(\\d+))?((?:/~(?:[^\\\\/]+))?[\\\\/]))?(.+)?$', 'https://lusr\\example:wtf@1.2.3.4:1234//abc')",[25273]
"('Description.java', 'org.junit.runner.Description', 'methodAndClassNamePatternGroupOrDefault', '([\\s\\S]*)\\((.*)\\)', 'testUpdateRejectedByConnection(org.eclipse.jgit.transport.PushProcessTest)')","[74047, 74411]"
"('URIish.java', 'org.eclipse.jgit.transport.URIish', '<init>', '^(file):([\\\\/](?![\\\\/])((?:[A-Za-z]:)?[\\\\/]?(?:(?:[^\\\\/]+[\\\\/]+)*[^\\\\/]+[\\\\/]*)))$', 'ssh://l usr\\example.com:wtf@1.2.3.4:80//abc')",[11739]
"('URIish.java', 'org.eclipse.jgit.transport.URIish', '<init>', '^(file):([\\\\/](?![\\\\/])((?:[A-Za-z]:)?[\\\\/]?(?:(?:[^\\\\/]+[\\\\/]+)*[^\\\\/]+[\\\\/]*)))$', '../tmp_6907696380270154428')",[73012]
"('Description.java', 'org.junit.runner.Description', 'methodAndClassNamePatternGroupOrDefault', '([\\s\\S]*)\\((.*)\\)', 'testSimplePatternsDoNotMatch[OldRule? true](org.eclipse.jgit.ignore.FastIgnoreRuleTest)')","[164523, 165259]"
"('URIish.java', 'org.eclipse.jgit.transport.URIish', '<init>', '^(file):([\\\\/](?![\\\\/])((?:[A-Za-z]:)?[\\\\/]?(?:(?:[^\\\\/]+[\\\\/]+)*[^\\\\/]+[\\\\/]*)))$', 'https://me@1.2.3.4:1234//abc')",[36518]
"('URIish.java', 'org.eclipse.jgit.transport.URIish', '<init>', '^(file):([\\\\/](?![\\\\/])((?:[A-Za-z]:)?[\\\\/]?(?:(?:[^\\\\/]+[\\\\/]+)*[^\\\\/]+[\\\\/]*)))$', '/tmp/jgit_test_1317497064317343419_tmp/tmp_1402166022410132527')","[226244, 226369, 226805]"
"('Description.java', 'org.junit.runner.Description', 'methodAndClassNamePatternGroupOrDefault', '([\\s\\S]*)\\((.*)\\)', 'testContainsDot(org.eclipse.jgit.lib.ValidRefNameTest)')","[118572, 118940]"
"('Description.java', 'org.junit.runner.Description', 'methodAndClassNamePatternGroupOrDefault', '([\\s\\S]*)\\((.*)\\)', 'testOnlyOption_f1_2_b(org.eclipse.jgit.api.CommitOnlyTest)')","[236059, 238118]"
"('Description.java', 'org.junit.runner.Description', 'methodAndClassNamePatternGroupOrDefault', '([\\s\\S]*)\\((.*)\\)', 'testQuestionmarkDoNotMatch[OldRule? true](org.eclipse.jgit.ignore.FastIgnoreRuleTest)')","[164546, 165282]"
"('Description.java', 'org.junit.runner.Description', 'methodAndClassNamePatternGroupOrDefault', '([\\s\\S]*)\\((.*)\\)', 'testStringOfPearls_DirPath2(org.eclipse.jgit.revwalk.RevWalkPathFilter1Test)')","[75851, 76130]"
"('Description.java', 'org.junit.runner.Description', 'methodAndClassNamePatternGroupOrDefault', '([\\s\\S]*)\\((.*)\\)', 'testValidTree1(org.eclipse.jgit.lib.ObjectCheckerTest)')","[121196, 123293]"
"('Description.java', 'org.junit.runner.Description', 'methodAndClassNamePatternGroupOrDefault', '([\\s\\S]*)\\((.*)\\)', 'testScpStyleWithoutUserRelativePath(org.eclipse.jgit.transport.URIishTest)')","[1108, 4310]"
"('Description.java', 'org.junit.runner.Description', 'methodAndClassNamePatternGroupOrDefault', '([\\s\\S]*)\\((.*)\\)', 'testSpecialGroupCase1(org.eclipse.jgit.fnmatch.FileNameMatcherTest)')","[100936, 104193]"
"('Description.java', 'org.junit.runner.Description', 'methodAndClassNamePatternGroupOrDefault', '([\\s\\S]*)\\((.*)\\)', 'testUpdateMixedCases(org.eclipse.jgit.transport.PushProcessTest)')","[73921, 74279]"
"('Description.java', 'org.junit.runner.Description', 'methodAndClassNamePatternGroupOrDefault', '([\\s\\S]*)\\((.*)\\)', 'testDrawTextAlignment(org.eclipse.jgit.revplot.AbstractPlotRendererTest)')","[197934, 197956]"
"('URIish.java', 'org.eclipse.jgit.transport.URIish', '<init>', '^(file):([\\\\/](?![\\\\/])((?:[A-Za-z]:)?[\\\\/]?(?:(?:[^\\\\/]+[\\\\/]+)*[^\\\\/]+[\\\\/]*)))$', 'http://lusr\\example@1.2.3.4:80/D:\\x')",[35690]
"('URIish.java', 'org.eclipse.jgit.transport.URIish', '<init>', '^(file):([\\\\/](?![\\\\/])((?:[A-Za-z]:)?[\\\\/]?(?:(?:[^\\\\/]+[\\\\/]+)*[^\\\\/]+[\\\\/]*)))$', 'ssh+git://me:wtf@example.com:80/D:/x')",[14228]
"('Description.java', 'org.junit.runner.Description', 'methodAndClassNamePatternGroupOrDefault', '([\\s\\S]*)\\((.*)\\)', 'testCloneRepositoryWithNestedSubmodules(org.eclipse.jgit.api.CloneCommandTest)')","[203708, 203940]"
"('URIish.java', 'org.eclipse.jgit.transport.URIish', '<init>', '^([a-z][a-z0-9+-]+)://(?:(?:([^/:@]+)(?::([^\\\\/]+))?@)?((?:[^\\\\/:]+)|(?:\\[[0-9a-f:]+\\]))(?::(\\d+))?((?:/~(?:[^\\\\/]+))?[\\\\/]))?(.+)?$', 'ssh+git://l usr\\example.com@[::1]:1234/D:/x')",[31435]
"('URIish.java', 'org.eclipse.jgit.transport.URIish', '<init>', '^([a-z][a-z0-9+-]+)://(?:(?:([^/:@]+)(?::([^\\\\/]+))?@)?((?:[^\\\\/:]+)|(?:\\[[0-9a-f:]+\\]))(?::(\\d+))?((?:/~(?:[^\\\\/]+))?[\\\\/]))?(.+)?$', 'ssh+git://l usr\\example.com@1.2.3.4//')","[44223, 44407]"
"('Description.java', 'org.junit.runner.Description', 'methodAndClassNamePatternGroupOrDefault', '([\\s\\S]*)\\((.*)\\)', 'test002_addFile(org.eclipse.jgit.lib.T0002_TreeTest)')","[120027, 120334]"
"('Description.java', 'org.junit.runner.Description', 'methodAndClassNamePatternGroupOrDefault', '([\\s\\S]*)\\((.*)\\)', 'testFastForwardWithNewFile(org.eclipse.jgit.api.RebaseCommandTest)')","[218509, 220038]"
"('Description.java', 'org.junit.runner.Description', 'methodAndClassNamePatternGroupOrDefault', '([\\s\\S]*)\\((.*)\\)', 'testEdit_LinuxBug(org.eclipse.jgit.diff.MyersDiffTest)')","[96938, 97360]"
"('Description.java', 'org.junit.runner.Description', 'methodAndClassNamePatternGroupOrDefault', '([\\s\\S]*)\\((.*)\\)', 'testCRC32(org.eclipse.jgit.internal.storage.file.PackIndexV2Test)')","[248049, 248176]"
"('Description.java', 'org.junit.runner.Description', 'methodAndClassNamePatternGroupOrDefault', '([\\s\\S]*)\\((.*)\\)', 'testHasChangeidWithSpacesBeforeId(org.eclipse.jgit.util.ChangeIdUtilTest)')","[185735, 186490]"
"('Description.java', 'org.junit.runner.Description', 'methodAndClassNamePatternGroupOrDefault', '([\\s\\S]*)\\((.*)\\)', 'testSimple(org.eclipse.jgit.transport.RemoteConfigTest)')","[2213, 3576]"
"('URIish.java', 'org.eclipse.jgit.transport.URIish', '<init>', '^([a-z][a-z0-9+-]+)://(?:(?:([^/:@]+)(?::([^\\\\/]+))?@)?((?:[^\\\\/:]+)|(?:\\[[0-9a-f:]+\\]))(?::(\\d+))?((?:/~(?:[^\\\\/]+))?[\\\\/]))?(.+)?$', '/tmp/jgit_test_976787373850596776_tmp/tmp_5547895567498631481')","[209557, 209687, 210115, 210265]"
"('Description.java', 'org.junit.runner.Description', 'methodAndClassNamePatternGroupOrDefault', '([\\s\\S]*)\\((.*)\\)', 'renameBranchNoConfigValues(org.eclipse.jgit.api.RenameBranchCommandTest)')","[240308, 240393]"
"('URIish.java', 'org.eclipse.jgit.transport.URIish', '<init>', '^([a-z][a-z0-9+-]+)://(?:(?:([^/:@]+)(?::([^\\\\/]+))?@)?((?:[^\\\\/:]+)|(?:\\[[0-9a-f:]+\\]))(?::(\\d+))?((?:/~(?:[^\\\\/]+))?[\\\\/]))?(.+)?$', 'https://lusr\\example@example.com:1234/D:\\x')",[38473]
"('URIish.java', 'org.eclipse.jgit.transport.URIish', '<init>', '^(?:([^/:@]+)(?::([^\\\\/]+))?@)?((?:[^\\\\/:]+)|(?:\\[[0-9a-f:]+\\])):((?:(?:/~(?:[^\\\\/]+))[\\\\/])?(?:(?:[^\\\\/]+[\\\\/]+)*[^\\\\/]+[\\\\/]*))$', '/tmp/jgit_test_4928645748912589877_tmp/tmp_7570227516241513625/.git')","[230796, 230938]"
"('Description.java', 'org.junit.runner.Description', 'methodAndClassNamePatternGroupOrDefault', '([\\s\\S]*)\\((.*)\\)', 'testParse_implicit_UTF8_encoded(org.eclipse.jgit.revwalk.RevCommitParseTest)')","[84118, 84568]"
"('URIish.java', 'org.eclipse.jgit.transport.URIish', '<init>', '^([a-z][a-z0-9+-]+)://(?:(?:([^/:@]+)(?::([^\\\\/]+))?@)?((?:[^\\\\/:]+)|(?:\\[[0-9a-f:]+\\]))(?::(\\d+))?((?:/~(?:[^\\\\/]+))?[\\\\/]))?(.+)?$', 'https://me@example.com:1234//')",[36127]
"('Description.java', 'org.junit.runner.Description', 'methodAndClassNamePatternGroupOrDefault', '([\\s\\S]*)\\((.*)\\)', 'testObjectInNewPack(org.eclipse.jgit.internal.storage.file.ConcurrentRepackTest)')","[252599, 252686]"
"('Description.java', 'org.junit.runner.Description', 'methodAndClassNamePatternGroupOrDefault', '([\\s\\S]*)\\((.*)\\)', 'testDirectoryFileConflicts_2(org.eclipse.jgit.lib.DirCacheCheckoutTest)')","[116284, 117248]"
"('URIish.java', 'org.eclipse.jgit.transport.URIish', '<init>', '^(file):([\\\\/](?![\\\\/])((?:[A-Za-z]:)?[\\\\/]?(?:(?:[^\\\\/]+[\\\\/]+)*[^\\\\/]+[\\\\/]*)))$', 'ssh://lusr\\example@1.2.3.4//abc')","[42038, 42222]"
"('URIish.java', 'org.eclipse.jgit.transport.URIish', '<init>', '^(?:([^/:@]+)(?::([^\\\\/]+))?@)?((?:[^\\\\/:]+)|(?:\\[[0-9a-f:]+\\])):((?:(?:/~(?:[^\\\\/]+))[\\\\/])?(?:(?:[^\\\\/]+[\\\\/]+)*[^\\\\/]+[\\\\/]*))$', '/tmp/jgit_test_6078415325919108987_tmp/tmp_7117568841738359148')","[224131, 224266, 224998]"
"('URIish.java', 'org.eclipse.jgit.transport.URIish', '<init>', '^(file):([\\\\/](?![\\\\/])((?:[A-Za-z]:)?[\\\\/]?(?:(?:[^\\\\/]+[\\\\/]+)*[^\\\\/]+[\\\\/]*)))$', '/.git')",[66050]
"('URIish.java', 'org.eclipse.jgit.transport.URIish', '<init>', '^([a-z][a-z0-9+-]+)://(?:(?:([^/:@]+)(?::([^\\\\/]+))?@)?((?:[^\\\\/:]+)|(?:\\[[0-9a-f:]+\\]))(?::(\\d+))?((?:/~(?:[^\\\\/]+))?[\\\\/]))?(.+)?$', '/abc/')",[71241]
"('Description.java', 'org.junit.runner.Description', 'methodAndClassNamePatternGroupOrDefault', '([\\s\\S]*)\\((.*)\\)', 'testExactRename_MultipleIdenticalDeletes(org.eclipse.jgit.diff.RenameDetectorTest)')","[93489, 94057]"
"('SideBandInputStream.java', 'org.eclipse.jgit.transport.SideBandInputStream', 'doProgressLine', '^([\\w ]+): +\\d+% +\\( *(\\d+)/ *(\\d+)\\)(?:, done\\.)? *[\r\n]$', 'Updating references: 100% (1/1)\n')","[81405, 203628, 205310, 205673, 206502, 208186, 208791, 209095, 209399, 209908, 210435, 211064, 211769, 212079]"
"('Description.java', 'org.junit.runner.Description', 'methodAndClassNamePatternGroupOrDefault', '([\\s\\S]*)\\((.*)\\)', 'testAlreadyExists(org.eclipse.jgit.api.CheckoutCommandTest)')","[206912, 207426]"
"('Description.java', 'org.junit.runner.Description', 'methodAndClassNamePatternGroupOrDefault', '([\\s\\S]*)\\((.*)\\)', 'org.eclipse.jgit.lib.SymbolicRefTest')","[109883, 110035]"
"('Description.java', 'org.junit.runner.Description', 'methodAndClassNamePatternGroupOrDefault', '([\\s\\S]*)\\((.*)\\)', 'testGetRef_AnyHeadWithGarbage(org.eclipse.jgit.internal.storage.file.RefDirectoryTest)')","[258001, 259188]"
"('Description.java', 'org.junit.runner.Description', 'methodAndClassNamePatternGroupOrDefault', '([\\s\\S]*)\\((.*)\\)', 'testRevObjectTypes(org.eclipse.jgit.revwalk.RevObjectTest)')","[83871, 84590]"
"('URIish.java', 'org.eclipse.jgit.transport.URIish', '<init>', '^([a-z][a-z0-9+-]+)://(?:(?:([^/:@]+)(?::([^\\\\/]+))?@)?((?:[^\\\\/:]+)|(?:\\[[0-9a-f:]+\\]))(?::(\\d+))?((?:/~(?:[^\\\\/]+))?[\\\\/]))?(.+)?$', 'ssh://l usr\\example.com:wtf@[::1]:1234//abc')",[11946]
"('Description.java', 'org.junit.runner.Description', 'methodAndClassNamePatternGroupOrDefault', '([\\s\\S]*)\\((.*)\\)', 'testReadWriteV3(org.eclipse.jgit.dircache.DirCacheCGitCompatabilityTest)')","[90494, 90646]"
"('URIish.java', 'org.eclipse.jgit.transport.URIish', '<init>', '^([a-z][a-z0-9+-]+)://(?:(?:([^/:@]+)(?::([^\\\\/]+))?@)?((?:[^\\\\/:]+)|(?:\\[[0-9a-f:]+\\]))(?::(\\d+))?((?:/~(?:[^\\\\/]+))?[\\\\/]))?(.+)?$', 'http://l usr\\example.com:wtf@[::1]:80/D:/x')",[21455]
"('URIish.java', 'org.eclipse.jgit.transport.URIish', '<init>', '^(file):([\\\\/](?![\\\\/])((?:[A-Za-z]:)?[\\\\/]?(?:(?:[^\\\\/]+[\\\\/]+)*[^\\\\/]+[\\\\/]*)))$', 'file:///tmp/jgit_test_8601326659756184872_tmp/tmp_6509933305582231475')","[201346, 201403, 201464]"
"('Description.java', 'org.junit.runner.Description', 'methodAndClassNamePatternGroupOrDefault', '([\\s\\S]*)\\((.*)\\)', 'testAddTwo(org.eclipse.jgit.diff.EditListTest)')","[94777, 94886]"
"('URIish.java', 'org.eclipse.jgit.transport.URIish', '<init>', '^([a-z][a-z0-9+-]+)://(?:(?:([^/:@]+)(?::([^\\\\/]+))?@)?((?:[^\\\\/:]+)|(?:\\[[0-9a-f:]+\\]))(?::(\\d+))?((?:/~(?:[^\\\\/]+))?[\\\\/]))?(.+)?$', 'https://[::1]//abc')","[63405, 63589, 64509, 64693, 65636, 65820]"
"('Description.java', 'org.junit.runner.Description', 'methodAndClassNamePatternGroupOrDefault', '([\\s\\S]*)\\((.*)\\)', 'testOnlyOption_f1_11_d(org.eclipse.jgit.api.CommitOnlyTest)')","[237392, 239482]"
"('Description.java', 'org.junit.runner.Description', 'methodAndClassNamePatternGroupOrDefault', '([\\s\\S]*)\\((.*)\\)', 'testFindContainsGet(org.eclipse.jgit.util.RefListTest)')","[179737, 180264]"
"('Description.java', 'org.junit.runner.Description', 'methodAndClassNamePatternGroupOrDefault', '([\\s\\S]*)\\((.*)\\)', 'org.eclipse.jgit.util.IntListTest')","[181704, 182200]"
"('URIish.java', 'org.eclipse.jgit.transport.URIish', '<init>', '^(file):([\\\\/](?![\\\\/])((?:[A-Za-z]:)?[\\\\/]?(?:(?:[^\\\\/]+[\\\\/]+)*[^\\\\/]+[\\\\/]*)))$', 'https://me:wtf@1.2.3.4:1234//')",[22996]
"('URIish.java', 'org.eclipse.jgit.transport.URIish', '<init>', '^([a-z][a-z0-9+-]+)://(?:(?:([^/:@]+)(?::([^\\\\/]+))?@)?((?:[^\\\\/:]+)|(?:\\[[0-9a-f:]+\\]))(?::(\\d+))?((?:/~(?:[^\\\\/]+))?[\\\\/]))?(.+)?$', 'ssh+git://me@1.2.3.4//')","[43119, 43303]"
"('Description.java', 'org.junit.runner.Description', 'methodAndClassNamePatternGroupOrDefault', '([\\s\\S]*)\\((.*)\\)', 'testIdenticalEdit(org.eclipse.jgit.notes.DefaultNoteMergerTest)')","[198589, 198755]"
"('Description.java', 'org.junit.runner.Description', 'methodAndClassNamePatternGroupOrDefault', '([\\s\\S]*)\\((.*)\\)', 'testSpecialGroupCase8[OldRule? true](org.eclipse.jgit.ignore.IgnoreRuleSpecialCasesTest)')","[149455, 156539]"
"('URIish.java', 'org.eclipse.jgit.transport.URIish', '<init>', '^(file):([\\\\/](?![\\\\/])((?:[A-Za-z]:)?[\\\\/]?(?:(?:[^\\\\/]+[\\\\/]+)*[^\\\\/]+[\\\\/]*)))$', 'https://lusr\\example@example.com:80/D:/x')",[38588]
"('URIish.java', 'org.eclipse.jgit.transport.URIish', '<init>', '^([a-z][a-z0-9+-]+)://(?:(?:([^/:@]+)(?::([^\\\\/]+))?@)?((?:[^\\\\/:]+)|(?:\\[[0-9a-f:]+\\]))(?::(\\d+))?((?:/~(?:[^\\\\/]+))?[\\\\/]))?(.+)?$', 'https://l usr\\example.com@example.com//')","[50479, 50663]"
"('URIish.java', 'org.eclipse.jgit.transport.URIish', '<init>', '^(file):([\\\\/](?![\\\\/])((?:[A-Za-z]:)?[\\\\/]?(?:(?:[^\\\\/]+[\\\\/]+)*[^\\\\/]+[\\\\/]*)))$', 'ssh+git://me:wtf@[::1]:80//abc')",[15527]
"('Description.java', 'org.junit.runner.Description', 'methodAndClassNamePatternGroupOrDefault', '([\\s\\S]*)\\((.*)\\)', 'testPunctGroupCase3(org.eclipse.jgit.fnmatch.FileNameMatcherTest)')","[102805, 106151]"
"('Description.java', 'org.junit.runner.Description', 'methodAndClassNamePatternGroupOrDefault', '([\\s\\S]*)\\((.*)\\)', 'testEdits_MatchNone(org.eclipse.jgit.revwalk.RevWalkPathFilter1Test)')","[75935, 76218]"
"('Description.java', 'org.junit.runner.Description', 'methodAndClassNamePatternGroupOrDefault', '([\\s\\S]*)\\((.*)\\)', 'testInvalidTreeDuplicateNames2(org.eclipse.jgit.lib.ObjectCheckerTest)')","[122771, 124943]"
"('URIish.java', 'org.eclipse.jgit.transport.URIish', '<init>', '^(file):([\\\\/](?![\\\\/])((?:[A-Za-z]:)?[\\\\/]?(?:(?:[^\\\\/]+[\\\\/]+)*[^\\\\/]+[\\\\/]*)))$', 'file:///tmp/jgit_test_9088460190373350985_tmp/tmp_1606361160327154642/.git/')",[128425]
"('URIish.java', 'org.eclipse.jgit.transport.URIish', '<init>', '^([a-z][a-z0-9+-]+)://(?:(?:([^/:@]+)(?::([^\\\\/]+))?@)?((?:[^\\\\/:]+)|(?:\\[[0-9a-f:]+\\]))(?::(\\d+))?((?:/~(?:[^\\\\/]+))?[\\\\/]))?(.+)?$', 'ssh://l usr\\example.com@1.2.3.4:1234//')",[27600]
"('URIish.java', 'org.eclipse.jgit.transport.URIish', '<init>', '^(file):([\\\\/](?![\\\\/])((?:[A-Za-z]:)?[\\\\/]?(?:(?:[^\\\\/]+[\\\\/]+)*[^\\\\/]+[\\\\/]*)))$', 'file:/tmp/jgit_test_6285626331586997239_tmp/tmp_1735056061205602756/.git/')",[132224]
"('Description.java', 'org.junit.runner.Description', 'methodAndClassNamePatternGroupOrDefault', '([\\s\\S]*)\\((.*)\\)', 'testFastForwardNoCommit(org.eclipse.jgit.api.MergeCommandTest)')","[213828, 214748]"
"('Description.java', 'org.junit.runner.Description', 'methodAndClassNamePatternGroupOrDefault', '([\\s\\S]*)\\((.*)\\)', 'testMixedGroupCase7[OldRule? false](org.eclipse.jgit.ignore.IgnoreRuleSpecialCasesTest)')","[146237, 153342]"
"('Description.java', 'org.junit.runner.Description', 'methodAndClassNamePatternGroupOrDefault', '([\\s\\S]*)\\((.*)\\)', 'testInsertHeadMiddle(org.eclipse.jgit.internal.storage.pack.DeltaIndexTest)')","[246508, 246791]"
"('URIish.java', 'org.eclipse.jgit.transport.URIish', '<init>', '^([a-z][a-z0-9+-]+)://(?:(?:([^/:@]+)(?::([^\\\\/]+))?@)?((?:[^\\\\/:]+)|(?:\\[[0-9a-f:]+\\]))(?::(\\d+))?((?:/~(?:[^\\\\/]+))?[\\\\/]))?(.+)?$', 'http://lusr\\example@example.com/D:\\x')","[48409, 48593]"
"('Description.java', 'org.junit.runner.Description', 'methodAndClassNamePatternGroupOrDefault', '([\\s\\S]*)\\((.*)\\)', 'testMixedGroupCase4(org.eclipse.jgit.fnmatch.FileNameMatcherTest)')","[101356, 104633]"
"('Description.java', 'org.junit.runner.Description', 'methodAndClassNamePatternGroupOrDefault', '([\\s\\S]*)\\((.*)\\)', 'workingDirectoryDelete(org.eclipse.jgit.api.StashApplyCommandTest)')","[241063, 241626]"
"('URIish.java', 'org.eclipse.jgit.transport.URIish', '<init>', '^(file):([\\\\/](?![\\\\/])((?:[A-Za-z]:)?[\\\\/]?(?:(?:[^\\\\/]+[\\\\/]+)*[^\\\\/]+[\\\\/]*)))$', 'http://me@[::1]/D:/x')","[46868, 47052]"
"('URIish.java', 'org.eclipse.jgit.transport.URIish', '<init>', '^([\\\\/]?((?:[A-Za-z]:)?[\\\\/]?(?:(?:[^\\\\/]+[\\\\/]+)*[^\\\\/]+[\\\\/]*)))$', '/tmp/jgit_test_8282599337916693551_tmp/tmp_748218085915783388.git')","[79454, 81325]"
"('URIish.java', 'org.eclipse.jgit.transport.URIish', '<init>', '^(?:([^/:@]+)(?::([^\\\\/]+))?@)?((?:[^\\\\/:]+)|(?:\\[[0-9a-f:]+\\])):((?:(?:/~(?:[^\\\\/]+))[\\\\/])?(?:(?:[^\\\\/]+[\\\\/]+)*[^\\\\/]+[\\\\/]*))$', '\\\\some\\place')","[7038, 7153]"
"('URIish.java', 'org.eclipse.jgit.transport.URIish', '<init>', '^(file):([\\\\/](?![\\\\/])((?:[A-Za-z]:)?[\\\\/]?(?:(?:[^\\\\/]+[\\\\/]+)*[^\\\\/]+[\\\\/]*)))$', '/tmp/jgit_test_1653911944562620756_tmp/tmp_8778582607667217527')","[233075, 233200, 233869]"
"('Description.java', 'org.junit.runner.Description', 'methodAndClassNamePatternGroupOrDefault', '([\\s\\S]*)\\((.*)\\)', 'testWriteEnd(org.eclipse.jgit.transport.PacketLineOutTest)')","[75024, 75197]"
"('Description.java', 'org.junit.runner.Description', 'methodAndClassNamePatternGroupOrDefault', '([\\s\\S]*)\\((.*)\\)', 'workingDirectoryDeleteIndexEdit(org.eclipse.jgit.api.StashApplyCommandTest)')","[241000, 241560]"
"('FastIgnoreRule.java', 'org.eclipse.jgit.ignore.FastIgnoreRule', 'isMatch', 'a.', 'a')","[169891, 169945]"
"('URIish.java', 'org.eclipse.jgit.transport.URIish', '<init>', '^(file):([\\\\/](?![\\\\/])((?:[A-Za-z]:)?[\\\\/]?(?:(?:[^\\\\/]+[\\\\/]+)*[^\\\\/]+[\\\\/]*)))$', 'file:///tmp/jgit_test_8292165206576585499_tmp/tmp_5546200320806045825/.git/')",[243173]
"('Description.java', 'org.junit.runner.Description', 'methodAndClassNamePatternGroupOrDefault', '([\\s\\S]*)\\((.*)\\)', 'testEmptyInputs(org.eclipse.jgit.diff.HistogramDiffTest)')","[98779, 99386]"
"('URIish.java', 'org.eclipse.jgit.transport.URIish', '<init>', '^([a-z][a-z0-9+-]+)://(?:(?:([^/:@]+)(?::([^\\\\/]+))?@)?((?:[^\\\\/:]+)|(?:\\[[0-9a-f:]+\\]))(?::(\\d+))?((?:/~(?:[^\\\\/]+))?[\\\\/]))?(.+)?$', 'https://l usr\\example.com:wtf@[::1]:80//abc')",[24721]
"('Description.java', 'org.junit.runner.Description', 'methodAndClassNamePatternGroupOrDefault', '([\\s\\S]*)\\((.*)\\)', 'testDirCacheMatchingId(org.eclipse.jgit.treewalk.FileTreeIteratorTest)')","[131375, 131720]"
"('Description.java', 'org.junit.runner.Description', 'methodAndClassNamePatternGroupOrDefault', '([\\s\\S]*)\\((.*)\\)', 'testWriteEmptyReadEmpty_RealIndex(org.eclipse.jgit.dircache.DirCacheBasicTest)')","[90088, 90330]"
"('URIish.java', 'org.eclipse.jgit.transport.URIish', '<init>', '^([a-z][a-z0-9+-]+)://(?:(?:([^/:@]+)(?::([^\\\\/]+))?@)?((?:[^\\\\/:]+)|(?:\\[[0-9a-f:]+\\]))(?::(\\d+))?((?:/~(?:[^\\\\/]+))?[\\\\/]))?(.+)?$', 'https://me@1.2.3.4/D:/x')","[49835, 50019]"
"('URIish.java', 'org.eclipse.jgit.transport.URIish', '<init>', '^(file):([\\\\/](?![\\\\/])((?:[A-Za-z]:)?[\\\\/]?(?:(?:[^\\\\/]+[\\\\/]+)*[^\\\\/]+[\\\\/]*)))$', 'http://lusr\\example@example.com:80//abc')",[35230]
"('URIish.java', 'org.eclipse.jgit.transport.URIish', '<init>', '^(file):([\\\\/](?![\\\\/])((?:[A-Za-z]:)?[\\\\/]?(?:(?:[^\\\\/]+[\\\\/]+)*[^\\\\/]+[\\\\/]*)))$', '/tmp/jgit_test_4002911052512723791_tmp/tmp_1346628727612174896.git')","[78594, 78766]"
"('URIish.java', 'org.eclipse.jgit.transport.URIish', '<init>', '^(file):([\\\\/](?![\\\\/])((?:[A-Za-z]:)?[\\\\/]?(?:(?:[^\\\\/]+[\\\\/]+)*[^\\\\/]+[\\\\/]*)))$', 'http://lusr\\example:wtf@example.com:80//abc')",[21754]
"('URIish.java', 'org.eclipse.jgit.transport.URIish', '<init>', '^(file):([\\\\/](?![\\\\/])((?:[A-Za-z]:)?[\\\\/]?(?:(?:[^\\\\/]+[\\\\/]+)*[^\\\\/]+[\\\\/]*)))$', 'https://me:wtf@example.com:80/D:/x')",[22904]
"('URIish.java', 'org.eclipse.jgit.transport.URIish', '<init>', '^([a-z][a-z0-9+-]+)://(?:(?:([^/:@]+)(?::([^\\\\/]+))?@)?((?:[^\\\\/:]+)|(?:\\[[0-9a-f:]+\\]))(?::(\\d+))?((?:/~(?:[^\\\\/]+))?[\\\\/]))?(.+)?$', 'ssh://lusr\\example@[::1]:80//abc')",[29365]
"('Description.java', 'org.junit.runner.Description', 'methodAndClassNamePatternGroupOrDefault', '([\\s\\S]*)\\((.*)\\)', 'testGetValidGitSchemeWithTwoSlashesHumanishName(org.eclipse.jgit.transport.URIishTest)')","[2918, 5256]"
"('Description.java', 'org.junit.runner.Description', 'methodAndClassNamePatternGroupOrDefault', '([\\s\\S]*)\\((.*)\\)', 'testContainsOne(org.eclipse.jgit.internal.storage.file.InflatingBitSetTest)')","[250785, 250871]"
"('URIish.java', 'org.eclipse.jgit.transport.URIish', 'getHumanishName', '^([\\\\/]?((?:[A-Za-z]:)?[\\\\/]?(?:(?:[^\\\\/]+[\\\\/]+)*[^\\\\/]+[\\\\/]*)))$', '/a/b/c.git/')",[67039]
"('URIish.java', 'org.eclipse.jgit.transport.URIish', '<init>', '^(file):([\\\\/](?![\\\\/])((?:[A-Za-z]:)?[\\\\/]?(?:(?:[^\\\\/]+[\\\\/]+)*[^\\\\/]+[\\\\/]*)))$', 'https://l usr\\example.com@1.2.3.4//abc')","[50870, 51054]"
"('Description.java', 'org.junit.runner.Description', 'methodAndClassNamePatternGroupOrDefault', '([\\s\\S]*)\\((.*)\\)', 'testFlush(org.eclipse.jgit.transport.SideBandOutputStreamTest)')","[73265, 73498]"
"('FastIgnoreRule.java', 'org.eclipse.jgit.ignore.FastIgnoreRule', 'isMatch', '[tv]est\\.sta[a-d]', 'test.stac')","[142632, 143776]"
"('Description.java', 'org.junit.runner.Description', 'methodAndClassNamePatternGroupOrDefault', '([\\s\\S]*)\\((.*)\\)', 'commandWithEmptyPath(org.eclipse.jgit.submodule.SubmoduleAddTest)')","[108855, 109028]"
"('Description.java', 'org.junit.runner.Description', 'methodAndClassNamePatternGroupOrDefault', '([\\s\\S]*)\\((.*)\\)', 'invalidWhenOnlySourceWildcard(org.eclipse.jgit.transport.RefSpecTest)')","[14293, 15795]"
"('ChangeIdUtil.java', 'org.eclipse.jgit.util.ChangeIdUtil', 'indexOfChangeId', '(^Change-Id: *I[a-f0-9]{40}$)', 'git://example.com/ fixes this')",[190087]
"('FastIgnoreRule.java', 'org.eclipse.jgit.ignore.FastIgnoreRule', 'isMatch', '[\\p{Alnum}]', ':')",[163232]
"('Description.java', 'org.junit.runner.Description', 'methodAndClassNamePatternGroupOrDefault', '([\\s\\S]*)\\((.*)\\)', 'testCreateOrigin(org.eclipse.jgit.transport.RemoteConfigTest)')","[1522, 2448]"
"('Description.java', 'org.junit.runner.Description', 'methodAndClassNamePatternGroupOrDefault', '([\\s\\S]*)\\((.*)\\)', 'testCreate_ByStringPathAndStage(org.eclipse.jgit.dircache.DirCacheEntryTest)')","[90977, 91109]"
"('Description.java', 'org.junit.runner.Description', 'methodAndClassNamePatternGroupOrDefault', '([\\s\\S]*)\\((.*)\\)', 'testCommonScore_SimiliarBy75(org.eclipse.jgit.diff.SimilarityIndexTest)')","[97857, 97985]"
"('Description.java', 'org.junit.runner.Description', 'methodAndClassNamePatternGroupOrDefault', '([\\s\\S]*)\\((.*)\\)', 'testFileInFolderUntracked(org.eclipse.jgit.treewalk.filter.IndexDiffFilterTest)')","[136647, 137449]"
"('URIish.java', 'org.eclipse.jgit.transport.URIish', '<init>', '^([a-z][a-z0-9+-]+)://(?:(?:([^/:@]+)(?::([^\\\\/]+))?@)?((?:[^\\\\/:]+)|(?:\\[[0-9a-f:]+\\]))(?::(\\d+))?((?:/~(?:[^\\\\/]+))?[\\\\/]))?(.+)?$', 'git+ssh://example.com/some/p ath')","[69355, 69401]"
"('Description.java', 'org.junit.runner.Description', 'methodAndClassNamePatternGroupOrDefault', '([\\s\\S]*)\\((.*)\\)', 'treeIdWithGitmodules(org.eclipse.jgit.submodule.SubmoduleWalkTest)')","[108367, 108559]"
"('Description.java', 'org.junit.runner.Description', 'methodAndClassNamePatternGroupOrDefault', '([\\s\\S]*)\\((.*)\\)', 'testType_Delete(org.eclipse.jgit.diff.EditTest)')","[99955, 100299]"
"('Description.java', 'org.junit.runner.Description', 'methodAndClassNamePatternGroupOrDefault', '([\\s\\S]*)\\((.*)\\)', 'testContext1(org.eclipse.jgit.diff.DiffFormatterReflowTest)')","[94288, 94502]"
"('Description.java', 'org.junit.runner.Description', 'methodAndClassNamePatternGroupOrDefault', '([\\s\\S]*)\\((.*)\\)', 'testPullWithRebaseConfig3(org.eclipse.jgit.api.PullCommandTest)')","[220672, 221013]"
"('Description.java', 'org.junit.runner.Description', 'methodAndClassNamePatternGroupOrDefault', '([\\s\\S]*)\\((.*)\\)', 'testNonRecursiveTreeWalk(org.eclipse.jgit.treewalk.filter.IndexDiffFilterTest)')","[136857, 137669]"
"('Description.java', 'org.junit.runner.Description', 'methodAndClassNamePatternGroupOrDefault', '([\\s\\S]*)\\((.*)\\)', 'testDegenerate_DeleteMiddle(org.eclipse.jgit.diff.HistogramDiffTest)')","[98737, 99342]"
"('Description.java', 'org.junit.runner.Description', 'methodAndClassNamePatternGroupOrDefault', '([\\s\\S]*)\\((.*)\\)', 'testFormatYears(org.eclipse.jgit.util.RelativeDateFormatterTest)')","[181384, 181579]"
"('URIish.java', 'org.eclipse.jgit.transport.URIish', '<init>', '^([a-z][a-z0-9+-]+)://(?:(?:([^/:@]+)(?::([^\\\\/]+))?@)?((?:[^\\\\/:]+)|(?:\\[[0-9a-f:]+\\]))(?::(\\d+))?((?:/~(?:[^\\\\/]+))?[\\\\/]))?(.+)?$', 'https://me@example.com:1234//abc')",[36173]
"('Description.java', 'org.junit.runner.Description', 'methodAndClassNamePatternGroupOrDefault', '([\\s\\S]*)\\((.*)\\)', 'testNoRenames_EmptyFile2(org.eclipse.jgit.diff.RenameDetectorTest)')","[93447, 94013]"
"('Description.java', 'org.junit.runner.Description', 'methodAndClassNamePatternGroupOrDefault', '([\\s\\S]*)\\((.*)\\)', 'testReplaceLineBreaks(org.eclipse.jgit.util.StringUtilsTest)')","[175945, 176098]"
"('Description.java', 'org.junit.runner.Description', 'methodAndClassNamePatternGroupOrDefault', '([\\s\\S]*)\\((.*)\\)', 'testValidTreeSorting6(org.eclipse.jgit.lib.ObjectCheckerTest)')","[121532, 123645]"
"('Description.java', 'org.junit.runner.Description', 'methodAndClassNamePatternGroupOrDefault', '([\\s\\S]*)\\((.*)\\)', 'org.eclipse.jgit.api.CherryPickCommandTest')","[232043, 234610]"
"('Description.java', 'org.junit.runner.Description', 'methodAndClassNamePatternGroupOrDefault', '([\\s\\S]*)\\((.*)\\)', 'checkMergeConflictingNewTrees(org.eclipse.jgit.merge.ResolveMergerTest)')","[88057, 88375]"
"('URIish.java', 'org.eclipse.jgit.transport.URIish', '<init>', '^(file):([\\\\/](?![\\\\/])((?:[A-Za-z]:)?[\\\\/]?(?:(?:[^\\\\/]+[\\\\/]+)*[^\\\\/]+[\\\\/]*)))$', 'file:///tmp/jgit_test_7795766867048310974_tmp/tmp_6578180669122549493.git/')",[173202]
"('URIish.java', 'org.eclipse.jgit.transport.URIish', '<init>', '^([a-z][a-z0-9+-]+)://(?:(?:([^/:@]+)(?::([^\\\\/]+))?@)?((?:[^\\\\/:]+)|(?:\\[[0-9a-f:]+\\]))(?::(\\d+))?((?:/~(?:[^\\\\/]+))?[\\\\/]))?(.+)?$', 'http://l usr\\example.com@[::1]:80//')",[34839]
"('URIish.java', 'org.eclipse.jgit.transport.URIish', '<init>', '^([a-z][a-z0-9+-]+)://(?:(?:([^/:@]+)(?::([^\\\\/]+))?@)?((?:[^\\\\/:]+)|(?:\\[[0-9a-f:]+\\]))(?::(\\d+))?((?:/~(?:[^\\\\/]+))?[\\\\/]))?(.+)?$', 'user@repo.or.cz:/srv/git/egit.git')",[10888]
"('Description.java', 'org.junit.runner.Description', 'methodAndClassNamePatternGroupOrDefault', '([\\s\\S]*)\\((.*)\\)', 'testAbbreviateLooseBlob(org.eclipse.jgit.internal.storage.file.AbbreviationTest)')","[256764, 256850]"
"('Description.java', 'org.junit.runner.Description', 'methodAndClassNamePatternGroupOrDefault', '([\\s\\S]*)\\((.*)\\)', 'testFastForward(org.eclipse.jgit.api.MergeCommandTest)')","[213576, 214484]"
"('URIish.java', 'org.eclipse.jgit.transport.URIish', '<init>', '^([a-z][a-z0-9+-]+)://(?:(?:([^/:@]+)(?::([^\\\\/]+))?@)?((?:[^\\\\/:]+)|(?:\\[[0-9a-f:]+\\]))(?::(\\d+))?((?:/~(?:[^\\\\/]+))?[\\\\/]))?(.+)?$', 'ssh://lusr\\example@1.2.3.4:80/D:/x')",[29043]
"('Description.java', 'org.junit.runner.Description', 'methodAndClassNamePatternGroupOrDefault', '([\\s\\S]*)\\((.*)\\)', 'testIteratorReturnedValues1(org.eclipse.jgit.internal.storage.file.PackIndexV1Test)')","[250154, 250284]"
"('Description.java', 'org.junit.runner.Description', 'methodAndClassNamePatternGroupOrDefault', '([\\s\\S]*)\\((.*)\\)', 'shouldThrowIAEWhenTreeWalkHasMoreThanTwoTrees(org.eclipse.jgit.diff.DiffEntryTest)')","[95299, 95553]"
"('Description.java', 'org.junit.runner.Description', 'methodAndClassNamePatternGroupOrDefault', '([\\s\\S]*)\\((.*)\\)', 'testNotEmpty_WithPrefix(org.eclipse.jgit.util.RefMapTest)')","[183804, 184268]"
"('Description.java', 'org.junit.runner.Description', 'methodAndClassNamePatternGroupOrDefault', '([\\s\\S]*)\\((.*)\\)', 'testDepth1(org.eclipse.jgit.revwalk.RevWalkShallowTest)')","[86122, 86252]"
"('URIish.java', 'org.eclipse.jgit.transport.URIish', '<init>', '^(file):([\\\\/](?![\\\\/])((?:[A-Za-z]:)?[\\\\/]?(?:(?:[^\\\\/]+[\\\\/]+)*[^\\\\/]+[\\\\/]*)))$', 'http://me:wtf@1.2.3.4:80/D:/x')",[19893]
"('Description.java', 'org.junit.runner.Description', 'methodAndClassNamePatternGroupOrDefault', '([\\s\\S]*)\\((.*)\\)', 'testDataAfterPackFooterSplitObjectRead(org.eclipse.jgit.transport.PackParserTest)')","[72218, 72528]"
"('URIish.java', 'org.eclipse.jgit.transport.URIish', '<init>', '^(file):([\\\\/](?![\\\\/])((?:[A-Za-z]:)?[\\\\/]?(?:(?:[^\\\\/]+[\\\\/]+)*[^\\\\/]+[\\\\/]*)))$', 'file:///tmp/jgit_test_6769790516931586883_tmp/tmp_2209554516347518597/.git/')",[128319]
"('Description.java', 'org.junit.runner.Description', 'methodAndClassNamePatternGroupOrDefault', '([\\s\\S]*)\\((.*)\\)', 'test000_openRepoBadArgs(org.eclipse.jgit.internal.storage.file.T0003_BasicTest)')","[249272, 249813]"
"('Description.java', 'org.junit.runner.Description', 'methodAndClassNamePatternGroupOrDefault', '([\\s\\S]*)\\((.*)\\)', 'testReadString2(org.eclipse.jgit.transport.PacketLineInTest)')","[18703, 19848]"
"('URIish.java', 'org.eclipse.jgit.transport.URIish', '<init>', '^(file):([\\\\/](?![\\\\/])((?:[A-Za-z]:)?[\\\\/]?(?:(?:[^\\\\/]+[\\\\/]+)*[^\\\\/]+[\\\\/]*)))$', 'ssh://me:wtf@1.2.3.4:1234/D:/x')",[8771]
"('Description.java', 'org.junit.runner.Description', 'methodAndClassNamePatternGroupOrDefault', '([\\s\\S]*)\\((.*)\\)', 'testPullConfigRemoteBranch(org.eclipse.jgit.api.BranchCommandTest)')","[227051, 227372]"
"('Description.java', 'org.junit.runner.Description', 'methodAndClassNamePatternGroupOrDefault', '([\\s\\S]*)\\((.*)\\)', 'testCheckoutRemoteTrackingWithUpstream(org.eclipse.jgit.api.CheckoutCommandTest)')","[207143, 207668]"
"('Description.java', 'org.junit.runner.Description', 'methodAndClassNamePatternGroupOrDefault', '([\\s\\S]*)\\((.*)\\)', 'testSimpleStarCase3(org.eclipse.jgit.fnmatch.FileNameMatcherTest)')","[102406, 105733]"
"('URIish.java', 'org.eclipse.jgit.transport.URIish', '<init>', '^(file):([\\\\/](?![\\\\/])((?:[A-Za-z]:)?[\\\\/]?(?:(?:[^\\\\/]+[\\\\/]+)*[^\\\\/]+[\\\\/]*)))$', 'http://l usr\\example.com:wtf@1.2.3.4:80/D:/x')",[21041]
"('Description.java', 'org.junit.runner.Description', 'methodAndClassNamePatternGroupOrDefault', '([\\s\\S]*)\\((.*)\\)', 'testFilter_MY_ALL_And_NONE(org.eclipse.jgit.revwalk.RevWalkFilterTest)')","[83293, 83620]"
"('Description.java', 'org.junit.runner.Description', 'methodAndClassNamePatternGroupOrDefault', '([\\s\\S]*)\\((.*)\\)', 'testInvalidCommitNoTree2(org.eclipse.jgit.lib.ObjectCheckerTest)')","[122498, 124657]"
"('URIish.java', 'org.eclipse.jgit.transport.URIish', '<init>', '^(file):([\\\\/](?![\\\\/])((?:[A-Za-z]:)?[\\\\/]?(?:(?:[^\\\\/]+[\\\\/]+)*[^\\\\/]+[\\\\/]*)))$', 'https://l usr\\example.com@example.com:80/D:/x')",[37484]
"('QuotedString.java', 'org.eclipse.jgit.util.QuotedString$BourneUserPathStyle', 'quote', '^~[A-Za-z0-9_-]*/.*$', 'a!b')","[193948, 193973]"
"('Description.java', 'org.junit.runner.Description', 'methodAndClassNamePatternGroupOrDefault', '([\\s\\S]*)\\((.*)\\)', 'testEntryObjectId(org.eclipse.jgit.treewalk.EmptyTreeIteratorTest)')","[135647, 135778]"
"('URIish.java', 'org.eclipse.jgit.transport.URIish', '<init>', '^(file):([\\\\/](?![\\\\/])((?:[A-Za-z]:)?[\\\\/]?(?:(?:[^\\\\/]+[\\\\/]+)*[^\\\\/]+[\\\\/]*)))$', 'http://l usr\\example.com@1.2.3.4/D:/x')","[47604, 47788]"
"('Description.java', 'org.junit.runner.Description', 'methodAndClassNamePatternGroupOrDefault', '([\\s\\S]*)\\((.*)\\)', 'testAddIfAbsent(org.eclipse.jgit.lib.ObjectIdOwnerMapTest)')","[113627, 113776]"
"('Description.java', 'org.junit.runner.Description', 'methodAndClassNamePatternGroupOrDefault', '([\\s\\S]*)\\((.*)\\)', 'submoduleHeadMatchesIndex(org.eclipse.jgit.treewalk.FileTreeIteratorTest)')","[131396, 131742]"
"('Description.java', 'org.junit.runner.Description', 'methodAndClassNamePatternGroupOrDefault', '([\\s\\S]*)\\((.*)\\)', 'testNoCommits(org.eclipse.jgit.revwalk.ObjectWalkTest)')","[76364, 76554]"
"('URIish.java', 'org.eclipse.jgit.transport.URIish', '<init>', '^([a-z][a-z0-9+-]+)://(?:(?:([^/:@]+)(?::([^\\\\/]+))?@)?((?:[^\\\\/:]+)|(?:\\[[0-9a-f:]+\\]))(?::(\\d+))?((?:/~(?:[^\\\\/]+))?[\\\\/]))?(.+)?$', 'ssh+git://l usr\\example.com@1.2.3.4:80//abc')",[31205]
"('Description.java', 'org.junit.runner.Description', 'methodAndClassNamePatternGroupOrDefault', '([\\s\\S]*)\\((.*)\\)', 'testFileModeChangeWithNoContentChangeUpdate(org.eclipse.jgit.lib.DirCacheCheckoutTest)')","[116158, 117116]"
"('Description.java', 'org.junit.runner.Description', 'methodAndClassNamePatternGroupOrDefault', '([\\s\\S]*)\\((.*)\\)', 'testInvalidTreeNameIsEmpty(org.eclipse.jgit.lib.ObjectCheckerTest)')","[120860, 122941]"
"('URIish.java', 'org.eclipse.jgit.transport.URIish', '<init>', '^(file):([\\\\/](?![\\\\/])((?:[A-Za-z]:)?[\\\\/]?(?:(?:[^\\\\/]+[\\\\/]+)*[^\\\\/]+[\\\\/]*)))$', 'ssh+git://me:wtf@[::1]:1234/D:/x')",[15169]
"('URIish.java', 'org.eclipse.jgit.transport.URIish', '<init>', '^(file):([\\\\/](?![\\\\/])((?:[A-Za-z]:)?[\\\\/]?(?:(?:[^\\\\/]+[\\\\/]+)*[^\\\\/]+[\\\\/]*)))$', 'http://me@example.com:80/D:\\x')",[33114]
"('Description.java', 'org.junit.runner.Description', 'methodAndClassNamePatternGroupOrDefault', '([\\s\\S]*)\\((.*)\\)', 'testSimpleStarCase2[OldRule? true](org.eclipse.jgit.ignore.IgnoreRuleSpecialCasesTest)')","[150835, 157919]"
"('Description.java', 'org.junit.runner.Description', 'methodAndClassNamePatternGroupOrDefault', '([\\s\\S]*)\\((.*)\\)', 'testCreateFileHeaderForRenameModeChange(org.eclipse.jgit.diff.DiffFormatterTest)')","[95895, 96150]"
"('Description.java', 'org.junit.runner.Description', 'methodAndClassNamePatternGroupOrDefault', '([\\s\\S]*)\\((.*)\\)', 'testDigitGroupCase1[OldRule? false](org.eclipse.jgit.ignore.IgnoreRuleSpecialCasesTest)')","[147341, 154446]"
"('Description.java', 'org.junit.runner.Description', 'methodAndClassNamePatternGroupOrDefault', '([\\s\\S]*)\\((.*)\\)', 'testPrintGroupCase2[OldRule? false](org.eclipse.jgit.ignore.IgnoreRuleSpecialCasesTest)')","[147985, 155090]"
"('FastIgnoreRule.java', 'org.eclipse.jgit.ignore.FastIgnoreRule', 'isMatch', '[^b-c]', 'c')",[161174]
"('URIish.java', 'org.eclipse.jgit.transport.URIish', '<init>', '^([\\\\/]?((?:[A-Za-z]:)?[\\\\/]?(?:(?:[^\\\\/]+[\\\\/]+)*[^\\\\/]+[\\\\/]*)))$', '/tmp/jgit_test_4416073704389025597_tmp/tmp_7357052360559725349/.git')","[229297, 229447]"
"('FastIgnoreRule.java', 'org.eclipse.jgit.ignore.FastIgnoreRule', 'isMatch', '[\\p{Ll}]', 'H')",[160836]
"('URIish.java', 'org.eclipse.jgit.transport.URIish', '<init>', '^(file):([\\\\/](?![\\\\/])((?:[A-Za-z]:)?[\\\\/]?(?:(?:[^\\\\/]+[\\\\/]+)*[^\\\\/]+[\\\\/]*)))$', 'file:/tmp/jgit_test_245831401761691588_tmp/tmp_6526835764811304817/.git/')",[133741]
"('URIish.java', 'org.eclipse.jgit.transport.URIish', '<init>', '^(file):([\\\\/](?![\\\\/])((?:[A-Za-z]:)?[\\\\/]?(?:(?:[^\\\\/]+[\\\\/]+)*[^\\\\/]+[\\\\/]*)))$', 'ssh://l usr\\example.com:wtf@1.2.3.4:1234//')",[11191]
"('Description.java', 'org.junit.runner.Description', 'methodAndClassNamePatternGroupOrDefault', '([\\s\\S]*)\\((.*)\\)', 'testFillTo100(org.eclipse.jgit.util.IntListTest)')","[181914, 182155]"
"('Description.java', 'org.junit.runner.Description', 'methodAndClassNamePatternGroupOrDefault', '([\\s\\S]*)\\((.*)\\)', 'workingDirectoryModify(org.eclipse.jgit.api.StashCreateCommandTest)')","[202487, 202836]"
"('URIish.java', 'org.eclipse.jgit.transport.URIish', '<init>', '^([a-z][a-z0-9+-]+)://(?:(?:([^/:@]+)(?::([^\\\\/]+))?@)?((?:[^\\\\/:]+)|(?:\\[[0-9a-f:]+\\]))(?::(\\d+))?((?:/~(?:[^\\\\/]+))?[\\\\/]))?(.+)?$', 'https://me:wtf@1.2.3.4:1234//abc')",[23065]
"('URIish.java', 'org.eclipse.jgit.transport.URIish', '<init>', '^([a-z][a-z0-9+-]+)://(?:(?:([^/:@]+)(?::([^\\\\/]+))?@)?((?:[^\\\\/:]+)|(?:\\[[0-9a-f:]+\\]))(?::(\\d+))?((?:/~(?:[^\\\\/]+))?[\\\\/]))?(.+)?$', 'ssh://me:wtf@[::1]:80/D:\\x')",[10288]
"('Description.java', 'org.junit.runner.Description', 'methodAndClassNamePatternGroupOrDefault', '([\\s\\S]*)\\((.*)\\)', 'testRemoveOne(org.eclipse.jgit.transport.LongMapTest)')","[75490, 75666]"
"('Description.java', 'org.junit.runner.Description', 'methodAndClassNamePatternGroupOrDefault', '([\\s\\S]*)\\((.*)\\)', 'testParse_ShortLineOnlyNoLF(org.eclipse.jgit.revwalk.RevCommitParseTest)')","[84204, 84634]"
"('Description.java', 'org.junit.runner.Description', 'methodAndClassNamePatternGroupOrDefault', '([\\s\\S]*)\\((.*)\\)', 'testCleanDirsWithDryRunAndNoIgnore(org.eclipse.jgit.api.CleanCommandTest)')","[217059, 217212]"
"('Description.java', 'org.junit.runner.Description', 'methodAndClassNamePatternGroupOrDefault', '([\\s\\S]*)\\((.*)\\)', 'org.eclipse.jgit.internal.storage.file.WindowCacheGetTest')","[254503, 254655]"
"('Description.java', 'org.junit.runner.Description', 'methodAndClassNamePatternGroupOrDefault', '([\\s\\S]*)\\((.*)\\)', 'testEmptyTexts(org.eclipse.jgit.merge.MergeAlgorithmTest)')","[86994, 87289]"
"('Description.java', 'org.junit.runner.Description', 'methodAndClassNamePatternGroupOrDefault', '([\\s\\S]*)\\((.*)\\)', 'testDegenerate_InsertsIntoMidPosition(org.eclipse.jgit.diff.MyersDiffTest)')","[97001, 97426]"
"('URIish.java', 'org.eclipse.jgit.transport.URIish', '<init>', '^([a-z][a-z0-9+-]+)://(?:(?:([^/:@]+)(?::([^\\\\/]+))?@)?((?:[^\\\\/:]+)|(?:\\[[0-9a-f:]+\\]))(?::(\\d+))?((?:/~(?:[^\\\\/]+))?[\\\\/]))?(.+)?$', 'https://me:wtf@example.com:1234//')",[22651]
"('Description.java', 'org.junit.runner.Description', 'methodAndClassNamePatternGroupOrDefault', '([\\s\\S]*)\\((.*)\\)', 'testDirectoryFileConflicts_3(org.eclipse.jgit.lib.DirCacheCheckoutTest)')","[116305, 117270]"
"('Description.java', 'org.junit.runner.Description', 'methodAndClassNamePatternGroupOrDefault', '([\\s\\S]*)\\((.*)\\)', 'testParse_ShortLineOnlyEndLF(org.eclipse.jgit.revwalk.RevCommitParseTest)')","[84353, 84832]"
"('Description.java', 'org.junit.runner.Description', 'methodAndClassNamePatternGroupOrDefault', '([\\s\\S]*)\\((.*)\\)', 'testGetValidHumanishName(org.eclipse.jgit.transport.URIishTest)')","[1354, 4530]"
"('URIish.java', 'org.eclipse.jgit.transport.URIish', '<init>', '^([a-z][a-z0-9+-]+)://(?:(?:([^/:@]+)(?::([^\\\\/]+))?@)?((?:[^\\\\/:]+)|(?:\\[[0-9a-f:]+\\]))(?::(\\d+))?((?:/~(?:[^\\\\/]+))?[\\\\/]))?(.+)?$', 'http://l usr\\example.com@1.2.3.4:1234/D:\\x')",[34425]
"('URIish.java', 'org.eclipse.jgit.transport.URIish', '<init>', '^(file):([\\\\/](?![\\\\/])((?:[A-Za-z]:)?[\\\\/]?(?:(?:[^\\\\/]+[\\\\/]+)*[^\\\\/]+[\\\\/]*)))$', 'ssh+git://l usr\\example.com:wtf@[::1]:80/D:/x')",[16963]
"('URIish.java', 'org.eclipse.jgit.transport.URIish', '<init>', '^([a-z][a-z0-9+-]+)://(?:(?:([^/:@]+)(?::([^\\\\/]+))?@)?((?:[^\\\\/:]+)|(?:\\[[0-9a-f:]+\\]))(?::(\\d+))?((?:/~(?:[^\\\\/]+))?[\\\\/]))?(.+)?$', 'ssh://me:wtf@example.com:1234//abc')",[7452]
"('URIish.java', 'org.eclipse.jgit.transport.URIish', '<init>', '^(file):([\\\\/](?![\\\\/])((?:[A-Za-z]:)?[\\\\/]?(?:(?:[^\\\\/]+[\\\\/]+)*[^\\\\/]+[\\\\/]*)))$', 'https://me@example.com//abc')","[49398, 49582]"
"('URIish.java', 'org.eclipse.jgit.transport.URIish', '<init>', '^(file):([\\\\/](?![\\\\/])((?:[A-Za-z]:)?[\\\\/]?(?:(?:[^\\\\/]+[\\\\/]+)*[^\\\\/]+[\\\\/]*)))$', 'ssh://me:wtf@example.com:1234//')",[7383]
"('Description.java', 'org.junit.runner.Description', 'methodAndClassNamePatternGroupOrDefault', '([\\s\\S]*)\\((.*)\\)', 'testXDigitGroupCase3[OldRule? false](org.eclipse.jgit.ignore.IgnoreRuleSpecialCasesTest)')","[148583, 155688]"
"('Description.java', 'org.junit.runner.Description', 'methodAndClassNamePatternGroupOrDefault', '([\\s\\S]*)\\((.*)\\)', 'testWriteIndex(org.eclipse.jgit.internal.storage.file.PackWriterTest)')","[251302, 251750]"
"('URIish.java', 'org.eclipse.jgit.transport.URIish', '<init>', '^([a-z][a-z0-9+-]+)://(?:(?:([^/:@]+)(?::([^\\\\/]+))?@)?((?:[^\\\\/:]+)|(?:\\[[0-9a-f:]+\\]))(?::(\\d+))?((?:/~(?:[^\\\\/]+))?[\\\\/]))?(.+)?$', 'ssh://l usr\\example.com:wtf@1.2.3.4:1234//abc')",[11260]
"('URIish.java', 'org.eclipse.jgit.transport.URIish', '<init>', '^(file):([\\\\/](?![\\\\/])((?:[A-Za-z]:)?[\\\\/]?(?:(?:[^\\\\/]+[\\\\/]+)*[^\\\\/]+[\\\\/]*)))$', 'https://me@[::1]:80//')",[37024]
"('Description.java', 'org.junit.runner.Description', 'methodAndClassNamePatternGroupOrDefault', '([\\s\\S]*)\\((.*)\\)', 'testVerySimpleStarCase1(org.eclipse.jgit.fnmatch.FileNameMatcherTest)')","[103456, 106833]"
"('URIish.java', 'org.eclipse.jgit.transport.URIish', '<init>', '^(file):([\\\\/](?![\\\\/])((?:[A-Za-z]:)?[\\\\/]?(?:(?:[^\\\\/]+[\\\\/]+)*[^\\\\/]+[\\\\/]*)))$', 'http://lusr\\example@1.2.3.4//abc')","[48662, 48846]"
"('Description.java', 'org.junit.runner.Description', 'methodAndClassNamePatternGroupOrDefault', '([\\s\\S]*)\\((.*)\\)', 'testInvalidCommitNoAuthor(org.eclipse.jgit.lib.ObjectCheckerTest)')","[122393, 124547]"
"('URIish.java', 'org.eclipse.jgit.transport.URIish', '<init>', '^([a-z][a-z0-9+-]+)://(?:(?:([^/:@]+)(?::([^\\\\/]+))?@)?((?:[^\\\\/:]+)|(?:\\[[0-9a-f:]+\\]))(?::(\\d+))?((?:/~(?:[^\\\\/]+))?[\\\\/]))?(.+)?$', 'ssh+git://l usr\\example.com@example.com:1234//')",[30607]
"('FastIgnoreRule.java', 'org.eclipse.jgit.ignore.FastIgnoreRule', 'isMatch', '[[\\p{Print}\\p{javaDigit}\\p{javaLetter}]]', ']')",[162398]
"('URIish.java', 'org.eclipse.jgit.transport.URIish', '<init>', '^([a-z][a-z0-9+-]+)://(?:(?:([^/:@]+)(?::([^\\\\/]+))?@)?((?:[^\\\\/:]+)|(?:\\[[0-9a-f:]+\\]))(?::(\\d+))?((?:/~(?:[^\\\\/]+))?[\\\\/]))?(.+)?$', 'ssh://lusr\\example:wtf@[::1]:1234/D:\\x')",[13325]
"('Description.java', 'org.junit.runner.Description', 'methodAndClassNamePatternGroupOrDefault', '([\\s\\S]*)\\((.*)\\)', 'testUpdateRefLockFailureWrongOldValue(org.eclipse.jgit.internal.storage.file.RefUpdateTest)')","[253229, 254070]"
"('URIish.java', 'org.eclipse.jgit.transport.URIish', '<init>', '^([a-z][a-z0-9+-]+)://(?:(?:([^/:@]+)(?::([^\\\\/]+))?@)?((?:[^\\\\/:]+)|(?:\\[[0-9a-f:]+\\]))(?::(\\d+))?((?:/~(?:[^\\\\/]+))?[\\\\/]))?(.+)?$', 'ssh+git://lusr\\example@1.2.3.4/D:\\x')","[45465, 45649]"
"('Description.java', 'org.junit.runner.Description', 'methodAndClassNamePatternGroupOrDefault', '([\\s\\S]*)\\((.*)\\)', 'testIntoSymbolicRefHeadPointingToMaster(org.eclipse.jgit.merge.MergeMessageFormatterTest)')","[89073, 89401]"
"('Description.java', 'org.junit.runner.Description', 'methodAndClassNamePatternGroupOrDefault', '([\\s\\S]*)\\((.*)\\)', 'testEdit_UniqueCommonLargerThanMatchPoint(org.eclipse.jgit.diff.MyersDiffTest)')","[97148, 97580]"
"('URIish.java', 'org.eclipse.jgit.transport.URIish', '<init>', '^(file):([\\\\/](?![\\\\/])((?:[A-Za-z]:)?[\\\\/]?(?:(?:[^\\\\/]+[\\\\/]+)*[^\\\\/]+[\\\\/]*)))$', 'file:///home/m%c3%a5y')","[5565, 5611]"
"('Description.java', 'org.junit.runner.Description', 'methodAndClassNamePatternGroupOrDefault', '([\\s\\S]*)\\((.*)\\)', 'testMethodsOkOnMainThread(org.eclipse.jgit.lib.ThreadSafeProgressMonitorTest)')","[110092, 110156]"
"('URIish.java', 'org.eclipse.jgit.transport.URIish', '<init>', '^([a-z][a-z0-9+-]+)://(?:(?:([^/:@]+)(?::([^\\\\/]+))?@)?((?:[^\\\\/:]+)|(?:\\[[0-9a-f:]+\\]))(?::(\\d+))?((?:/~(?:[^\\\\/]+))?[\\\\/]))?(.+)?$', 'file:///tmp/jgit_test_4891911102535552827_tmp/tmp_5487204894428132903/.git/')",[108245]
"('FastIgnoreRule.java', 'org.eclipse.jgit.ignore.FastIgnoreRule', 'isMatch', '[\\p{Lu}]', 'Ä')",[162788]
"('Description.java', 'org.junit.runner.Description', 'methodAndClassNamePatternGroupOrDefault', '([\\s\\S]*)\\((.*)\\)', 'testXDigitGroupCase3(org.eclipse.jgit.fnmatch.FileNameMatcherTest)')","[103561, 106943]"
"('Description.java', 'org.junit.runner.Description', 'methodAndClassNamePatternGroupOrDefault', '([\\s\\S]*)\\((.*)\\)', 'testSpecialGroupCase7[OldRule? true](org.eclipse.jgit.ignore.IgnoreRuleSpecialCasesTest)')","[149432, 156516]"
"('URIish.java', 'org.eclipse.jgit.transport.URIish', '<init>', '^([a-z][a-z0-9+-]+)://(?:(?:([^/:@]+)(?::([^\\\\/]+))?@)?((?:[^\\\\/:]+)|(?:\\[[0-9a-f:]+\\]))(?::(\\d+))?((?:/~(?:[^\\\\/]+))?[\\\\/]))?(.+)?$', 'ssh://me@example.com/D:/x')","[39531, 39715]"
"('Description.java', 'org.junit.runner.Description', 'methodAndClassNamePatternGroupOrDefault', '([\\s\\S]*)\\((.*)\\)', 'testMaliciousPathEmptyUnix(org.eclipse.jgit.lib.DirCacheCheckoutMaliciousPathTest)')","[111891, 112786]"
"('URIish.java', 'org.eclipse.jgit.transport.URIish', '<init>', '^(file):([\\\\/](?![\\\\/])((?:[A-Za-z]:)?[\\\\/]?(?:(?:[^\\\\/]+[\\\\/]+)*[^\\\\/]+[\\\\/]*)))$', 'ssh+git://me@1.2.3.4:80/D:\\x')",[30170]
"('URIish.java', 'org.eclipse.jgit.transport.URIish', '<init>', '^([a-z][a-z0-9+-]+)://(?:(?:([^/:@]+)(?::([^\\\\/]+))?@)?((?:[^\\\\/:]+)|(?:\\[[0-9a-f:]+\\]))(?::(\\d+))?((?:/~(?:[^\\\\/]+))?[\\\\/]))?(.+)?$', 'ssh://1.2.3.4//abc')","[53101, 53285, 54205, 54389, 55309, 55493]"
"('Description.java', 'org.junit.runner.Description', 'methodAndClassNamePatternGroupOrDefault', '([\\s\\S]*)\\((.*)\\)', 'testLowerGroupCase0[OldRule? true](org.eclipse.jgit.ignore.IgnoreRuleSpecialCasesTest)')","[150053, 157137]"
"('Description.java', 'org.junit.runner.Description', 'methodAndClassNamePatternGroupOrDefault', '([\\s\\S]*)\\((.*)\\)', 'dropBoundaryStashedCommits(org.eclipse.jgit.api.StashDropCommandTest)')","[243446, 243620]"
"('URIish.java', 'org.eclipse.jgit.transport.URIish', '<init>', '^(file):([\\\\/](?![\\\\/])((?:[A-Za-z]:)?[\\\\/]?(?:(?:[^\\\\/]+[\\\\/]+)*[^\\\\/]+[\\\\/]*)))$', 'http://lusr\\example@1.2.3.4:1234/D:\\x')",[35506]
"('Description.java', 'org.junit.runner.Description', 'methodAndClassNamePatternGroupOrDefault', '([\\s\\S]*)\\((.*)\\)', 'org.eclipse.jgit.api.ResetCommandTest')","[204310, 206635]"
"('Description.java', 'org.junit.runner.Description', 'methodAndClassNamePatternGroupOrDefault', '([\\s\\S]*)\\((.*)\\)', 'testTwoRenames(org.eclipse.jgit.api.BlameCommandTest)')","[244621, 245011]"
"('URIish.java', 'org.eclipse.jgit.transport.URIish', '<init>', '^(file):([\\\\/](?![\\\\/])((?:[A-Za-z]:)?[\\\\/]?(?:(?:[^\\\\/]+[\\\\/]+)*[^\\\\/]+[\\\\/]*)))$', 'ssh+git://l usr\\example.com:wtf@[::1]:1234//abc')",[16733]
"('Description.java', 'org.junit.runner.Description', 'methodAndClassNamePatternGroupOrDefault', '([\\s\\S]*)\\((.*)\\)', 'testInCoreInputStream(org.eclipse.jgit.util.TemporaryBufferTest)')","[178595, 178903]"
"('Description.java', 'org.junit.runner.Description', 'methodAndClassNamePatternGroupOrDefault', '([\\s\\S]*)\\((.*)\\)', 'testTrackingUpdate(org.eclipse.jgit.api.PushCommandTest)')","[203087, 203219]"
"('URIish.java', 'org.eclipse.jgit.transport.URIish', '<init>', '^(?:([^/:@]+)(?::([^\\\\/]+))?@)?([^\\\\/:]{2,}):([\\\\/](?:(?:[^\\\\/]+[\\\\/]+)*[^\\\\/]+[\\\\/]*))$', '/another/dir')","[6107, 6945, 10032]"
"('URIish.java', 'org.eclipse.jgit.transport.URIish', '<init>', '^(file):([\\\\/](?![\\\\/])((?:[A-Za-z]:)?[\\\\/]?(?:(?:[^\\\\/]+[\\\\/]+)*[^\\\\/]+[\\\\/]*)))$', 'ssh://l usr\\example.com@example.com:1234/D:/x')",[27301]
"('Description.java', 'org.junit.runner.Description', 'methodAndClassNamePatternGroupOrDefault', '([\\s\\S]*)\\((.*)\\)', 'testEdit_MoveBlock(org.eclipse.jgit.diff.MyersDiffTest)')","[97022, 97448]"
"('Description.java', 'org.junit.runner.Description', 'methodAndClassNamePatternGroupOrDefault', '([\\s\\S]*)\\((.*)\\)', 'org.eclipse.jgit.treewalk.PostOrderTreeWalkTest')","[135123, 135404]"
"('URIish.java', 'org.eclipse.jgit.transport.URIish', '<init>', '^(file):([\\\\/](?![\\\\/])((?:[A-Za-z]:)?[\\\\/]?(?:(?:[^\\\\/]+[\\\\/]+)*[^\\\\/]+[\\\\/]*)))$', 'https://lusr\\example@example.com:1234/D:\\x')",[38450]
"('FastIgnoreRule.java', 'org.eclipse.jgit.ignore.FastIgnoreRule', 'isMatch', '[\\p{Blank}]', '\t')",[162866]
"('URIish.java', 'org.eclipse.jgit.transport.URIish', '<init>', '^([a-z][a-z0-9+-]+)://(?:(?:([^/:@]+)(?::([^\\\\/]+))?@)?((?:[^\\\\/:]+)|(?:\\[[0-9a-f:]+\\]))(?::(\\d+))?((?:/~(?:[^\\\\/]+))?[\\\\/]))?(.+)?$', 'http://lusr\\example@[::1]:80//abc')",[35989]
"('URIish.java', 'org.eclipse.jgit.transport.URIish', '<init>', '^(file):([\\\\/](?![\\\\/])((?:[A-Za-z]:)?[\\\\/]?(?:(?:[^\\\\/]+[\\\\/]+)*[^\\\\/]+[\\\\/]*)))$', 'ssh://lusr\\example@1.2.3.4:1234/D:/x')",[28836]
"('URIish.java', 'org.eclipse.jgit.transport.URIish', '<init>', '^(file):([\\\\/](?![\\\\/])((?:[A-Za-z]:)?[\\\\/]?(?:(?:[^\\\\/]+[\\\\/]+)*[^\\\\/]+[\\\\/]*)))$', 'file:/tmp/jgit_test_7262235360055106235_tmp/tmp_1266587865663820294/.git/')",[141047]
"('URIish.java', 'org.eclipse.jgit.transport.URIish', '<init>', '^(file):([\\\\/](?![\\\\/])((?:[A-Za-z]:)?[\\\\/]?(?:(?:[^\\\\/]+[\\\\/]+)*[^\\\\/]+[\\\\/]*)))$', 'https://l usr\\example.com:wtf@1.2.3.4:80/D:/x')",[24376]
"('Description.java', 'org.junit.runner.Description', 'methodAndClassNamePatternGroupOrDefault', '([\\s\\S]*)\\((.*)\\)', 'invalidWhenWildcardBeforeTextAtEnd(org.eclipse.jgit.transport.RefSpecTest)')","[12440, 14466]"
"('URIish.java', 'org.eclipse.jgit.transport.URIish', '<init>', '^([a-z][a-z0-9+-]+)://(?:(?:([^/:@]+)(?::([^\\\\/]+))?@)?((?:[^\\\\/:]+)|(?:\\[[0-9a-f:]+\\]))(?::(\\d+))?((?:/~(?:[^\\\\/]+))?[\\\\/]))?(.+)?$', 'ssh+git://lusr\\example:wtf@[::1]:80/D:/x')",[18443]
"('Description.java', 'org.junit.runner.Description', 'methodAndClassNamePatternGroupOrDefault', '([\\s\\S]*)\\((.*)\\)', 'testLimitedGetCachedBytesExceedsJavaLimits(org.eclipse.jgit.lib.ObjectLoaderTest)')","[119296, 119383]"
"('FastIgnoreRule.java', 'org.eclipse.jgit.ignore.FastIgnoreRule', 'isMatch', '[\\.a\\.]', '.')",[161982]
"('Description.java', 'org.junit.runner.Description', 'methodAndClassNamePatternGroupOrDefault', '([\\s\\S]*)\\((.*)\\)', 'testRenameBranchCannotLockAFileHEADisToLockFrom(org.eclipse.jgit.internal.storage.file.RefUpdateTest)')","[253187, 254026]"
"('Description.java', 'org.junit.runner.Description', 'methodAndClassNamePatternGroupOrDefault', '([\\s\\S]*)\\((.*)\\)', 'onePathMergeSecondParent(org.eclipse.jgit.api.NameRevCommandTest)')","[242162, 242402]"
"('URIish.java', 'org.eclipse.jgit.transport.URIish', '<init>', '^(file):([\\\\/](?![\\\\/])((?:[A-Za-z]:)?[\\\\/]?(?:(?:[^\\\\/]+[\\\\/]+)*[^\\\\/]+[\\\\/]*)))$', 'http://me@1.2.3.4/D:/x')","[46500, 46684]"
"('URIish.java', 'org.eclipse.jgit.transport.URIish', 'getHumanishName', '^([\\\\/]?((?:[A-Za-z]:)?[\\\\/]?(?:(?:[^\\\\/]+[\\\\/]+)*[^\\\\/]+[\\\\/]*)))$', 'abc.git')",[7360]
"('URIish.java', 'org.eclipse.jgit.transport.URIish', '<init>', '^([a-z][a-z0-9+-]+)://(?:(?:([^/:@]+)(?::([^\\\\/]+))?@)?((?:[^\\\\/:]+)|(?:\\[[0-9a-f:]+\\]))(?::(\\d+))?((?:/~(?:[^\\\\/]+))?[\\\\/]))?(.+)?$', 'https://me@1.2.3.4:80//abc')",[36725]
"('Description.java', 'org.junit.runner.Description', 'methodAndClassNamePatternGroupOrDefault', '([\\s\\S]*)\\((.*)\\)', 'testTrivialTwoWay_disjointhistories(org.eclipse.jgit.merge.SimpleMergeTest)')","[86586, 86870]"
"('Description.java', 'org.junit.runner.Description', 'methodAndClassNamePatternGroupOrDefault', '([\\s\\S]*)\\((.*)\\)', 'org.eclipse.jgit.ignore.IgnoreRuleSpecialCasesTest')",[145664]
"('Description.java', 'org.junit.runner.Description', 'methodAndClassNamePatternGroupOrDefault', '([\\s\\S]*)\\((.*)\\)', 'testCompareEntriesOffsetsWithGetOffsets(org.eclipse.jgit.internal.storage.file.PackIndexV1Test)')","[250133, 250262]"
"('Description.java', 'org.junit.runner.Description', 'methodAndClassNamePatternGroupOrDefault', '([\\s\\S]*)\\((.*)\\)', 'testNotEquals2(org.eclipse.jgit.diff.EditTest)')","[100039, 100387]"
"('URIish.java', 'org.eclipse.jgit.transport.URIish', '<init>', '^([a-z][a-z0-9+-]+)://(?:(?:([^/:@]+)(?::([^\\\\/]+))?@)?((?:[^\\\\/:]+)|(?:\\[[0-9a-f:]+\\]))(?::(\\d+))?((?:/~(?:[^\\\\/]+))?[\\\\/]))?(.+)?$', 'file:///tmp/jgit_test_2140460810154107885_tmp/tmp_5054924878953738138/.git/')",[211885]
"('URIish.java', 'org.eclipse.jgit.transport.URIish', '<init>', '^(file):([\\\\/](?![\\\\/])((?:[A-Za-z]:)?[\\\\/]?(?:(?:[^\\\\/]+[\\\\/]+)*[^\\\\/]+[\\\\/]*)))$', 'https://[::1]//abc')","[63382, 63566, 64486, 64670, 65613, 65797]"
"('URIish.java', 'org.eclipse.jgit.transport.URIish', '<init>', '^(file):([\\\\/](?![\\\\/])((?:[A-Za-z]:)?[\\\\/]?(?:(?:[^\\\\/]+[\\\\/]+)*[^\\\\/]+[\\\\/]*)))$', 'ssh://l usr\\example.com@[::1]//abc')","[41302, 41486]"
"('Description.java', 'org.junit.runner.Description', 'methodAndClassNamePatternGroupOrDefault', '([\\s\\S]*)\\((.*)\\)', 'testSimpleIterate(org.eclipse.jgit.treewalk.FileTreeIteratorTest)')","[131522, 131874]"
"('Description.java', 'org.junit.runner.Description', 'methodAndClassNamePatternGroupOrDefault', '([\\s\\S]*)\\((.*)\\)', 'testParse_OneFileCc(org.eclipse.jgit.patch.PatchCcTest)')","[196439, 196503]"
"('Description.java', 'org.junit.runner.Description', 'methodAndClassNamePatternGroupOrDefault', '([\\s\\S]*)\\((.*)\\)', 'testBlankGroupCase2[OldRule? true](org.eclipse.jgit.ignore.IgnoreRuleSpecialCasesTest)')","[151939, 159023]"
"('Description.java', 'org.junit.runner.Description', 'methodAndClassNamePatternGroupOrDefault', '([\\s\\S]*)\\((.*)\\)', 'testVerySimpleStarCase1[OldRule? false](org.eclipse.jgit.ignore.IgnoreRuleSpecialCasesTest)')","[148468, 155573]"
"('Description.java', 'org.junit.runner.Description', 'methodAndClassNamePatternGroupOrDefault', '([\\s\\S]*)\\((.*)\\)', 'org.eclipse.jgit.transport.SideBandOutputStreamTest')","[73223, 73719]"
"('URIish.java', 'org.eclipse.jgit.transport.URIish', '<init>', '^([a-z][a-z0-9+-]+)://(?:(?:([^/:@]+)(?::([^\\\\/]+))?@)?((?:[^\\\\/:]+)|(?:\\[[0-9a-f:]+\\]))(?::(\\d+))?((?:/~(?:[^\\\\/]+))?[\\\\/]))?(.+)?$', 'file:///tmp/jgit_test_9088460190373350985_tmp/tmp_1606361160327154642/.git/')",[128462]
"('Description.java', 'org.junit.runner.Description', 'methodAndClassNamePatternGroupOrDefault', '([\\s\\S]*)\\((.*)\\)', 'testVerySimpleWildCardCase3[OldRule? false](org.eclipse.jgit.ignore.IgnoreRuleSpecialCasesTest)')","[145984, 153089]"
"('Description.java', 'org.junit.runner.Description', 'methodAndClassNamePatternGroupOrDefault', '([\\s\\S]*)\\((.*)\\)', 'testDeletionOnMasterConflict(org.eclipse.jgit.api.MergeCommandTest)')","[214206, 215144]"
"('Description.java', 'org.junit.runner.Description', 'methodAndClassNamePatternGroupOrDefault', '([\\s\\S]*)\\((.*)\\)', 'testOnlyOption_f1_13_c(org.eclipse.jgit.api.CommitOnlyTest)')","[237581, 239680]"
"('URIish.java', 'org.eclipse.jgit.transport.URIish', '<init>', '^([a-z][a-z0-9+-]+)://(?:(?:([^/:@]+)(?::([^\\\\/]+))?@)?((?:[^\\\\/:]+)|(?:\\[[0-9a-f:]+\\]))(?::(\\d+))?((?:/~(?:[^\\\\/]+))?[\\\\/]))?(.+)?$', 'http://me@[::1]:80/D:\\x')",[33873]
"('Description.java', 'org.junit.runner.Description', 'methodAndClassNamePatternGroupOrDefault', '([\\s\\S]*)\\((.*)\\)', 'refLogIncludesCommitMessage(org.eclipse.jgit.api.StashCreateCommandTest)')","[202424, 202770]"
"('URIish.java', 'org.eclipse.jgit.transport.URIish', '<init>', '^([a-z][a-z0-9+-]+)://(?:(?:([^/:@]+)(?::([^\\\\/]+))?@)?((?:[^\\\\/:]+)|(?:\\[[0-9a-f:]+\\]))(?::(\\d+))?((?:/~(?:[^\\\\/]+))?[\\\\/]))?(.+)?$', 'http://me@[::1]:1234//abc')",[33597]
"('URIish.java', 'org.eclipse.jgit.transport.URIish', '<init>', '^([a-z][a-z0-9+-]+)://(?:(?:([^/:@]+)(?::([^\\\\/]+))?@)?((?:[^\\\\/:]+)|(?:\\[[0-9a-f:]+\\]))(?::(\\d+))?((?:/~(?:[^\\\\/]+))?[\\\\/]))?(.+)?$', 'http://l usr\\example.com@example.com//abc')","[47213, 47397]"
"('URIish.java', 'org.eclipse.jgit.transport.URIish', '<init>', '^(file):([\\\\/](?![\\\\/])((?:[A-Za-z]:)?[\\\\/]?(?:(?:[^\\\\/]+[\\\\/]+)*[^\\\\/]+[\\\\/]*)))$', 'D:\\m y')","[68182, 68297]"
"('Description.java', 'org.junit.runner.Description', 'methodAndClassNamePatternGroupOrDefault', '([\\s\\S]*)\\((.*)\\)', 'withCommitLoadedByDifferentRevWalk(org.eclipse.jgit.revwalk.RevWalkUtilsReachableTest)')","[77144, 77251]"
"('URIish.java', 'org.eclipse.jgit.transport.URIish', '<init>', '^(file):([\\\\/](?![\\\\/])((?:[A-Za-z]:)?[\\\\/]?(?:(?:[^\\\\/]+[\\\\/]+)*[^\\\\/]+[\\\\/]*)))$', 'ssh+git://l usr\\example.com@1.2.3.4//abc')","[44246, 44430]"
"('URIish.java', 'org.eclipse.jgit.transport.URIish', '<init>', '^(file):([\\\\/](?![\\\\/])((?:[A-Za-z]:)?[\\\\/]?(?:(?:[^\\\\/]+[\\\\/]+)*[^\\\\/]+[\\\\/]*)))$', 'https://lusr\\example@1.2.3.4/D:/x')","[52020, 52204]"
"('ChangeIdUtil.java', 'org.eclipse.jgit.util.ChangeIdUtil', 'indexOfFirstFooterLine', '(^[a-zA-Z0-9-]+:(?!//).*$)', 'ChangeId: I123456789123456789123456789123456789')","[89497, 89627]"
"('Description.java', 'org.junit.runner.Description', 'methodAndClassNamePatternGroupOrDefault', '([\\s\\S]*)\\((.*)\\)', 'testMaliciousGitPath1Case(org.eclipse.jgit.lib.DirCacheCheckoutMaliciousPathTest)')","[111912, 112808]"
"('URIish.java', 'org.eclipse.jgit.transport.URIish', '<init>', '^([a-z][a-z0-9+-]+)://(?:(?:([^/:@]+)(?::([^\\\\/]+))?@)?((?:[^\\\\/:]+)|(?:\\[[0-9a-f:]+\\]))(?::(\\d+))?((?:/~(?:[^\\\\/]+))?[\\\\/]))?(.+)?$', 'ssh+git://l usr\\example.com:wtf@[::1]:80/D:\\x')",[17032]
"('Description.java', 'org.junit.runner.Description', 'methodAndClassNamePatternGroupOrDefault', '([\\s\\S]*)\\((.*)\\)', 'testAddFails(org.eclipse.jgit.revwalk.AlwaysEmptyRevQueueTest)')","[82791, 82857]"
"('Description.java', 'org.junit.runner.Description', 'methodAndClassNamePatternGroupOrDefault', '([\\s\\S]*)\\((.*)\\)', 'testCacheRegisterOpen(org.eclipse.jgit.lib.RepositoryCacheTest)')","[111406, 111537]"
"('Description.java', 'org.junit.runner.Description', 'methodAndClassNamePatternGroupOrDefault', '([\\s\\S]*)\\((.*)\\)', 'testVerySimpleGroupCase1(org.eclipse.jgit.fnmatch.FileNameMatcherTest)')","[104002, 107405]"
"('URIish.java', 'org.eclipse.jgit.transport.URIish', '<init>', '^([a-z][a-z0-9+-]+)://(?:(?:([^/:@]+)(?::([^\\\\/]+))?@)?((?:[^\\\\/:]+)|(?:\\[[0-9a-f:]+\\]))(?::(\\d+))?((?:/~(?:[^\\\\/]+))?[\\\\/]))?(.+)?$', 'https://l usr\\example.com:wtf@1.2.3.4:80/D:/x')",[24399]
"('Description.java', 'org.junit.runner.Description', 'methodAndClassNamePatternGroupOrDefault', '([\\s\\S]*)\\((.*)\\)', 'testRemoteBranch(org.eclipse.jgit.merge.MergeMessageFormatterTest)')","[89010, 89335]"
"('Description.java', 'org.junit.runner.Description', 'methodAndClassNamePatternGroupOrDefault', '([\\s\\S]*)\\((.*)\\)', 'org.eclipse.jgit.transport.RefSpecTest')","[12373, 17216]"
"('URIish.java', 'org.eclipse.jgit.transport.URIish', '<init>', '^([a-z][a-z0-9+-]+)://(?:(?:([^/:@]+)(?::([^\\\\/]+))?@)?((?:[^\\\\/:]+)|(?:\\[[0-9a-f:]+\\]))(?::(\\d+))?((?:/~(?:[^\\\\/]+))?[\\\\/]))?(.+)?$', 'http://me@example.com:1234//abc')",[32861]
"('Description.java', 'org.junit.runner.Description', 'methodAndClassNamePatternGroupOrDefault', '([\\s\\S]*)\\((.*)\\)', 'testBare_CreateRepositoryFromGitDirOnlyWithBareConfigTrue(org.eclipse.jgit.internal.storage.file.RepositorySetupWorkDirTest)')","[255684, 255938]"
"('FastIgnoreRule.java', 'org.eclipse.jgit.ignore.FastIgnoreRule', 'isMatch', '[[\\p{javaDigit}\\p{javaLetter}_]]', '_')",[163336]
"('URIish.java', 'org.eclipse.jgit.transport.URIish', '<init>', '^([a-z][a-z0-9+-]+)://(?:(?:([^/:@]+)(?::([^\\\\/]+))?@)?((?:[^\\\\/:]+)|(?:\\[[0-9a-f:]+\\]))(?::(\\d+))?((?:/~(?:[^\\\\/]+))?[\\\\/]))?(.+)?$', 'http://me@1.2.3.4:1234//')",[33183]
"('Description.java', 'org.junit.runner.Description', 'methodAndClassNamePatternGroupOrDefault', '([\\s\\S]*)\\((.*)\\)', 'testContainsAll(org.eclipse.jgit.revwalk.RevFlagSetTest)')","[79723, 79872]"
"('URIish.java', 'org.eclipse.jgit.transport.URIish', '<init>', '^([a-z][a-z0-9+-]+)://(?:(?:([^/:@]+)(?::([^\\\\/]+))?@)?((?:[^\\\\/:]+)|(?:\\[[0-9a-f:]+\\]))(?::(\\d+))?((?:/~(?:[^\\\\/]+))?[\\\\/]))?(.+)?$', 'file:///tmp/jgit_test_7006767190575786317_tmp/tmp_2995333056993761501')","[216126, 216188, 216240, 216325]"
"('URIish.java', 'org.eclipse.jgit.transport.URIish', '<init>', '^(?:([^/:@]+)(?::([^\\\\/]+))?@)?([^\\\\/:]{2,}):([\\\\/](?:(?:[^\\\\/]+[\\\\/]+)*[^\\\\/]+[\\\\/]*))$', '/tmp/jgit_test_1653911944562620756_tmp/tmp_8778582607667217527')","[233147, 233287, 233968]"
"('URIish.java', 'org.eclipse.jgit.transport.URIish', '<init>', '^(file):([\\\\/](?![\\\\/])((?:[A-Za-z]:)?[\\\\/]?(?:(?:[^\\\\/]+[\\\\/]+)*[^\\\\/]+[\\\\/]*)))$', 'http://me@[::1]:80//')",[33712]
"('URIish.java', 'org.eclipse.jgit.transport.URIish', '<init>', '^([a-z][a-z0-9+-]+)://(?:(?:([^/:@]+)(?::([^\\\\/]+))?@)?((?:[^\\\\/:]+)|(?:\\[[0-9a-f:]+\\]))(?::(\\d+))?((?:/~(?:[^\\\\/]+))?[\\\\/]))?(.+)?$', 'http://me@example.com:1234/D:\\x')",[32953]
"('Description.java', 'org.junit.runner.Description', 'methodAndClassNamePatternGroupOrDefault', '([\\s\\S]*)\\((.*)\\)', 'testOnlyOption_f1_5_a(org.eclipse.jgit.api.CommitOnlyTest)')","[236353, 238426]"
"('Description.java', 'org.junit.runner.Description', 'methodAndClassNamePatternGroupOrDefault', '([\\s\\S]*)\\((.*)\\)', 'testTwoCommitDeepTree2(org.eclipse.jgit.revwalk.ObjectWalkTest)')","[76469, 76664]"
"('Description.java', 'org.junit.runner.Description', 'methodAndClassNamePatternGroupOrDefault', '([\\s\\S]*)\\((.*)\\)', 'testDescribe(org.eclipse.jgit.api.DescribeCommandTest)')","[215878, 216010]"
"('FastIgnoreRule.java', 'org.eclipse.jgit.ignore.FastIgnoreRule', 'isMatch', '[\\p{XDigit}]', 'f')",[163024]
"('Description.java', 'org.junit.runner.Description', 'methodAndClassNamePatternGroupOrDefault', '([\\s\\S]*)\\((.*)\\)', 'testDeleteVsModify(org.eclipse.jgit.merge.MergeAlgorithmTest)')","[87246, 87553]"
"('URIish.java', 'org.eclipse.jgit.transport.URIish', '<init>', '^(?:([^/:@]+)(?::([^\\\\/]+))?@)?([^\\\\/:]{2,}):([\\\\/](?:(?:[^\\\\/]+[\\\\/]+)*[^\\\\/]+[\\\\/]*))$', '/tmp/jgit_test_228114219831588372_tmp/tmp_8226897773376440333')","[223141, 223281, 224026]"
"('Description.java', 'org.junit.runner.Description', 'methodAndClassNamePatternGroupOrDefault', '([\\s\\S]*)\\((.*)\\)', 'testExactRename_OneRename(org.eclipse.jgit.diff.RenameDetectorTest)')","[93195, 93749]"
"('Description.java', 'org.junit.runner.Description', 'methodAndClassNamePatternGroupOrDefault', '([\\s\\S]*)\\((.*)\\)', 'testEmpty_DefaultCapacity(org.eclipse.jgit.util.IntListTest)')","[181872, 182111]"
"('URIish.java', 'org.eclipse.jgit.transport.URIish', '<init>', '^(file):([\\\\/](?![\\\\/])((?:[A-Za-z]:)?[\\\\/]?(?:(?:[^\\\\/]+[\\\\/]+)*[^\\\\/]+[\\\\/]*)))$', 'https://me@example.com:80/D:/x')",[36380]
"('Description.java', 'org.junit.runner.Description', 'methodAndClassNamePatternGroupOrDefault', '([\\s\\S]*)\\((.*)\\)', 'testSpecialGroupCase9[OldRule? false](org.eclipse.jgit.ignore.IgnoreRuleSpecialCasesTest)')","[145915, 153020]"
"('URIish.java', 'org.eclipse.jgit.transport.URIish', '<init>', '^(file):([\\\\/](?![\\\\/])((?:[A-Za-z]:)?[\\\\/]?(?:(?:[^\\\\/]+[\\\\/]+)*[^\\\\/]+[\\\\/]*)))$', 'ssh://lusr\\example@1.2.3.4//')","[41992, 42176]"
"('URIish.java', 'org.eclipse.jgit.transport.URIish', '<init>', '^(?:([^/:@]+)(?::([^\\\\/]+))?@)?((?:[^\\\\/:]+)|(?:\\[[0-9a-f:]+\\])):((?:(?:/~(?:[^\\\\/]+))[\\\\/])?(?:(?:[^\\\\/]+[\\\\/]+)*[^\\\\/]+[\\\\/]*))$', '/a/b/c/')",[67499]
"('URIish.java', 'org.eclipse.jgit.transport.URIish', '<init>', '^(file):([\\\\/](?![\\\\/])((?:[A-Za-z]:)?[\\\\/]?(?:(?:[^\\\\/]+[\\\\/]+)*[^\\\\/]+[\\\\/]*)))$', 'http://l usr\\example.com@[::1]/D:\\x')","[48018, 48202]"
"('Description.java', 'org.junit.runner.Description', 'methodAndClassNamePatternGroupOrDefault', '([\\s\\S]*)\\((.*)\\)', 'testAddNonExistingSingleFile(org.eclipse.jgit.api.AddCommandTest)')","[235074, 235512]"
"('Description.java', 'org.junit.runner.Description', 'methodAndClassNamePatternGroupOrDefault', '([\\s\\S]*)\\((.*)\\)', 'org.eclipse.jgit.lib.ConstantsEncodingTest')","[118067, 118305]"
"('Description.java', 'org.junit.runner.Description', 'methodAndClassNamePatternGroupOrDefault', '([\\s\\S]*)\\((.*)\\)', 'testVerySimpleGroupRangeCase1[OldRule? true](org.eclipse.jgit.ignore.IgnoreRuleSpecialCasesTest)')","[151042, 158126]"
"('Description.java', 'org.junit.runner.Description', 'methodAndClassNamePatternGroupOrDefault', '([\\s\\S]*)\\((.*)\\)', 'testFanoutAndLeafWithoutConflict(org.eclipse.jgit.notes.NoteMapMergerTest)')","[199857, 200228]"
"('URIish.java', 'org.eclipse.jgit.transport.URIish', '<init>', '^(file):([\\\\/](?![\\\\/])((?:[A-Za-z]:)?[\\\\/]?(?:(?:[^\\\\/]+[\\\\/]+)*[^\\\\/]+[\\\\/]*)))$', 'ssh+git://l usr\\example.com@[::1]:1234//abc')",[31366]
"('URIish.java', 'org.eclipse.jgit.transport.URIish', '<init>', '^(file):([\\\\/](?![\\\\/])((?:[A-Za-z]:)?[\\\\/]?(?:(?:[^\\\\/]+[\\\\/]+)*[^\\\\/]+[\\\\/]*)))$', 'http://lusr\\example@[::1]:80/D:/x')",[36012]
"('FastIgnoreRule.java', 'org.eclipse.jgit.ignore.FastIgnoreRule', 'isMatch', '.*\\.st.', 'test.sta1')",[142173]
"('Description.java', 'org.junit.runner.Description', 'methodAndClassNamePatternGroupOrDefault', '([\\s\\S]*)\\((.*)\\)', 'testReadString1(org.eclipse.jgit.transport.PacketLineInTest)')","[18682, 19826]"
"('URIish.java', 'org.eclipse.jgit.transport.URIish', '<init>', '^([a-z][a-z0-9+-]+)://(?:(?:([^/:@]+)(?::([^\\\\/]+))?@)?((?:[^\\\\/:]+)|(?:\\[[0-9a-f:]+\\]))(?::(\\d+))?((?:/~(?:[^\\\\/]+))?[\\\\/]))?(.+)?$', 'ssh://me@1.2.3.4:1234/D:/x')",[26588]
"('Description.java', 'org.junit.runner.Description', 'methodAndClassNamePatternGroupOrDefault', '([\\s\\S]*)\\((.*)\\)', 'testTargetWithoutLeadingSlash(org.eclipse.jgit.ignore.IgnoreMatcherTest)')","[145302, 145495]"
"('URIish.java', 'org.eclipse.jgit.transport.URIish', '<init>', '^([a-z][a-z0-9+-]+)://(?:(?:([^/:@]+)(?::([^\\\\/]+))?@)?((?:[^\\\\/:]+)|(?:\\[[0-9a-f:]+\\]))(?::(\\d+))?((?:/~(?:[^\\\\/]+))?[\\\\/]))?(.+)?$', 'ssh://l usr\\example.com@example.com:1234/D:\\x')",[27370]
"('FastIgnoreRule.java', 'org.eclipse.jgit.ignore.FastIgnoreRule', 'isMatch', '[\\p{Space}]', '\t')",[161252]
"('URIish.java', 'org.eclipse.jgit.transport.URIish', '<init>', '^([a-z][a-z0-9+-]+)://(?:(?:([^/:@]+)(?::([^\\\\/]+))?@)?((?:[^\\\\/:]+)|(?:\\[[0-9a-f:]+\\]))(?::(\\d+))?((?:/~(?:[^\\\\/]+))?[\\\\/]))?(.+)?$', 'ssh://me:wtf@[::1]:80//abc')",[10196]
"('URIish.java', 'org.eclipse.jgit.transport.URIish', '<init>', '^(?:([^/:@]+)(?::([^\\\\/]+))?@)?([^\\\\/:]{2,}):([\\\\/](?:(?:[^\\\\/]+[\\\\/]+)*[^\\\\/]+[\\\\/]*))$', '/tmp/jgit_test_8384532865018553446_tmp/tmp_7813617932258479589')","[227931, 228071, 228277, 228707]"
"('Description.java', 'org.junit.runner.Description', 'methodAndClassNamePatternGroupOrDefault', '([\\s\\S]*)\\((.*)\\)', 'testQuote_BareA(org.eclipse.jgit.util.QuotedStringBourneUserPathStyleTest)')","[192576, 192836]"
"('Description.java', 'org.junit.runner.Description', 'methodAndClassNamePatternGroupOrDefault', '([\\s\\S]*)\\((.*)\\)', 'org.eclipse.jgit.lib.AbbreviatedObjectIdTest')","[114305, 115403]"
"('URIish.java', 'org.eclipse.jgit.transport.URIish', '<init>', '^([a-z][a-z0-9+-]+)://(?:(?:([^/:@]+)(?::([^\\\\/]+))?@)?((?:[^\\\\/:]+)|(?:\\[[0-9a-f:]+\\]))(?::(\\d+))?((?:/~(?:[^\\\\/]+))?[\\\\/]))?(.+)?$', 'ssh+git://me:wtf@example.com:1234/D:\\x')",[13924]
"('Description.java', 'org.junit.runner.Description', 'methodAndClassNamePatternGroupOrDefault', '([\\s\\S]*)\\((.*)\\)', 'testSshGitProto(org.eclipse.jgit.transport.URIishTest)')","[2003, 4728]"
"('Description.java', 'org.junit.runner.Description', 'methodAndClassNamePatternGroupOrDefault', '([\\s\\S]*)\\((.*)\\)', 'testOnlyOption_f1_10_d(org.eclipse.jgit.api.CommitOnlyTest)')","[237287, 239372]"
"('Description.java', 'org.junit.runner.Description', 'methodAndClassNamePatternGroupOrDefault', '([\\s\\S]*)\\((.*)\\)', 'testUpperGroupCase5[OldRule? false](org.eclipse.jgit.ignore.IgnoreRuleSpecialCasesTest)')","[148307, 155412]"
"('Description.java', 'org.junit.runner.Description', 'methodAndClassNamePatternGroupOrDefault', '([\\s\\S]*)\\((.*)\\)', 'testCheckoutAnnotatedTag(org.eclipse.jgit.api.CheckoutCommandTest)')","[206996, 207514]"
"('URIish.java', 'org.eclipse.jgit.transport.URIish', '<init>', '^([a-z][a-z0-9+-]+)://(?:(?:([^/:@]+)(?::([^\\\\/]+))?@)?((?:[^\\\\/:]+)|(?:\\[[0-9a-f:]+\\]))(?::(\\d+))?((?:/~(?:[^\\\\/]+))?[\\\\/]))?(.+)?$', 'ssh+git://l usr\\example.com:wtf@[::1]:80//')",[16894]
"('Description.java', 'org.junit.runner.Description', 'methodAndClassNamePatternGroupOrDefault', '([\\s\\S]*)\\((.*)\\)', 'relativeGitDirRef(org.eclipse.jgit.internal.storage.file.FileRepositoryBuilderTest)')","[248429, 248580]"
"('Description.java', 'org.junit.runner.Description', 'methodAndClassNamePatternGroupOrDefault', '([\\s\\S]*)\\((.*)\\)', 'testDataAfterPackFooterSingleRead(org.eclipse.jgit.transport.PackParserTest)')","[72197, 72506]"
"('FS_POSIX_Java7.java', 'org.eclipse.jgit.util.FS_POSIX_Java7', '<clinit>', '\\d{3,4}', '0002')","[1595, 1646, 9102, 9133, 27908, 27985, 71821, 71853]"
"('Description.java', 'org.junit.runner.Description', 'methodAndClassNamePatternGroupOrDefault', '([\\s\\S]*)\\((.*)\\)', 'testStringOfPearls_FilePath2(org.eclipse.jgit.revwalk.TreeRevFilterTest)')","[81631, 81738]"
"('URIish.java', 'org.eclipse.jgit.transport.URIish', '<init>', '^(file):([\\\\/](?![\\\\/])((?:[A-Za-z]:)?[\\\\/]?(?:(?:[^\\\\/]+[\\\\/]+)*[^\\\\/]+[\\\\/]*)))$', 'https://l usr\\example.com:wtf@example.com:80//')",[23916]
"('Description.java', 'org.junit.runner.Description', 'methodAndClassNamePatternGroupOrDefault', '([\\s\\S]*)\\((.*)\\)', 'workingDirectoryContentMerge(org.eclipse.jgit.api.StashApplyCommandTest)')","[240769, 241318]"
"('URIish.java', 'org.eclipse.jgit.transport.URIish', '<init>', '^(?:([^/:@]+)(?::([^\\\\/]+))?@)?((?:[^\\\\/:]+)|(?:\\[[0-9a-f:]+\\])):((?:(?:/~(?:[^\\\\/]+))[\\\\/])?(?:(?:[^\\\\/]+[\\\\/]+)*[^\\\\/]+[\\\\/]*))$', '//.git')",[70413]
"('Description.java', 'org.junit.runner.Description', 'methodAndClassNamePatternGroupOrDefault', '([\\s\\S]*)\\((.*)\\)', 'shouldThrowIAEWhenScanShouldIncludeTreesAndWalkIsRecursive(org.eclipse.jgit.diff.DiffEntryTest)')","[95383, 95641]"
"('Description.java', 'org.junit.runner.Description', 'methodAndClassNamePatternGroupOrDefault', '([\\s\\S]*)\\((.*)\\)', 'org.eclipse.jgit.internal.storage.file.ObjectDirectoryTest')","[250618, 250684]"
"('URIish.java', 'org.eclipse.jgit.transport.URIish', '<init>', '^([a-z][a-z0-9+-]+)://(?:(?:([^/:@]+)(?::([^\\\\/]+))?@)?((?:[^\\\\/:]+)|(?:\\[[0-9a-f:]+\\]))(?::(\\d+))?((?:/~(?:[^\\\\/]+))?[\\\\/]))?(.+)?$', 'ssh+git://l usr\\example.com@1.2.3.4:1234/D:/x')",[31067]
"('FastIgnoreRule.java', 'org.eclipse.jgit.ignore.FastIgnoreRule', 'isMatch', '[A\\p{Ll}C3-5]', 'C')",[160316]
"('URIish.java', 'org.eclipse.jgit.transport.URIish', '<init>', '^(file):([\\\\/](?![\\\\/])((?:[A-Za-z]:)?[\\\\/]?(?:(?:[^\\\\/]+[\\\\/]+)*[^\\\\/]+[\\\\/]*)))$', 'https://l usr\\example.com@[::1]:80//')",[38128]
"('URIish.java', 'org.eclipse.jgit.transport.URIish', '<init>', '^([a-z][a-z0-9+-]+)://(?:(?:([^/:@]+)(?::([^\\\\/]+))?@)?((?:[^\\\\/:]+)|(?:\\[[0-9a-f:]+\\]))(?::(\\d+))?((?:/~(?:[^\\\\/]+))?[\\\\/]))?(.+)?$', 'https://server/repos/project.git')","[5891, 6301, 8502, 10548]"
"('URIish.java', 'org.eclipse.jgit.transport.URIish', '<init>', '^(file):([\\\\/](?![\\\\/])((?:[A-Za-z]:)?[\\\\/]?(?:(?:[^\\\\/]+[\\\\/]+)*[^\\\\/]+[\\\\/]*)))$', 'ssh://lusr\\example@[::1]:80//')",[29296]
"('Description.java', 'org.junit.runner.Description', 'methodAndClassNamePatternGroupOrDefault', '([\\s\\S]*)\\((.*)\\)', 'testWordGroupCase1[OldRule? true](org.eclipse.jgit.ignore.IgnoreRuleSpecialCasesTest)')","[152353, 159437]"
"('Description.java', 'org.junit.runner.Description', 'methodAndClassNamePatternGroupOrDefault', '([\\s\\S]*)\\((.*)\\)', 'org.eclipse.jgit.revwalk.RevWalkUtilsReachableTest')","[77102, 78216]"
"('Description.java', 'org.junit.runner.Description', 'methodAndClassNamePatternGroupOrDefault', '([\\s\\S]*)\\((.*)\\)', 'testFileInFolderAllIgnored(org.eclipse.jgit.treewalk.filter.IndexDiffFilterTest)')","[137151, 137977]"
"('URIish.java', 'org.eclipse.jgit.transport.URIish', '<init>', '^(file):([\\\\/](?![\\\\/])((?:[A-Za-z]:)?[\\\\/]?(?:(?:[^\\\\/]+[\\\\/]+)*[^\\\\/]+[\\\\/]*)))$', 'http://lusr\\example@1.2.3.4//')","[48616, 48800]"
"('Description.java', 'org.junit.runner.Description', 'methodAndClassNamePatternGroupOrDefault', '([\\s\\S]*)\\((.*)\\)', 'testEdgeCases(org.eclipse.jgit.treewalk.filter.PathSuffixFilterTest)')","[138277, 138341]"
"('QuotedString.java', 'org.eclipse.jgit.util.QuotedString$BourneUserPathStyle', 'quote', '^~[A-Za-z0-9_-]*/.*$', '~foo/')","[193247, 193271]"
"('Description.java', 'org.junit.runner.Description', 'methodAndClassNamePatternGroupOrDefault', '([\\s\\S]*)\\((.*)\\)', 'testSkip(org.eclipse.jgit.util.io.UnionInputStreamTest)')","[174979, 175191]"
"('Description.java', 'org.junit.runner.Description', 'methodAndClassNamePatternGroupOrDefault', '([\\s\\S]*)\\((.*)\\)', 'testGCmoreCommits(org.eclipse.jgit.api.GarbageCollectCommandTest)')","[201276, 201320]"
"('Description.java', 'org.junit.runner.Description', 'methodAndClassNamePatternGroupOrDefault', '([\\s\\S]*)\\((.*)\\)', 'testInvalidTreeModeNotSupportedMode2(org.eclipse.jgit.lib.ObjectCheckerTest)')","[121175, 123271]"
"('URIish.java', 'org.eclipse.jgit.transport.URIish', '<init>', '^(file):([\\\\/](?![\\\\/])((?:[A-Za-z]:)?[\\\\/]?(?:(?:[^\\\\/]+[\\\\/]+)*[^\\\\/]+[\\\\/]*)))$', 'file:///tmp/jgit_test_3520123581738796132_tmp/tmp_4444582433628548112/.git/')",[133086]
"('Description.java', 'org.junit.runner.Description', 'methodAndClassNamePatternGroupOrDefault', '([\\s\\S]*)\\((.*)\\)', 'testAddExistingSingleSmallFileWithNewLine(org.eclipse.jgit.api.AddCommandTest)')","[235116, 235556]"
"('Description.java', 'org.junit.runner.Description', 'methodAndClassNamePatternGroupOrDefault', '([\\s\\S]*)\\((.*)\\)', 'testAlias_ConnectionAttemptsDefault(org.eclipse.jgit.transport.OpenSshConfigTest)')","[3597, 3988]"
"('URIish.java', 'org.eclipse.jgit.transport.URIish', '<init>', '^([a-z][a-z0-9+-]+)://(?:(?:([^/:@]+)(?::([^\\\\/]+))?@)?((?:[^\\\\/:]+)|(?:\\[[0-9a-f:]+\\]))(?::(\\d+))?((?:/~(?:[^\\\\/]+))?[\\\\/]))?(.+)?$', 'https://l usr\\example.com:wtf@example.com:1234/D:/x')",[23847]
"('Description.java', 'org.junit.runner.Description', 'methodAndClassNamePatternGroupOrDefault', '([\\s\\S]*)\\((.*)\\)', 'org.eclipse.jgit.diff.PatchIdDiffFormatterTest')","[95090, 95796]"
"('Description.java', 'org.junit.runner.Description', 'methodAndClassNamePatternGroupOrDefault', '([\\s\\S]*)\\((.*)\\)', 'testInexactRenames_OnePair2(org.eclipse.jgit.diff.RenameDetectorTest)')","[93111, 93661]"
"('URIish.java', 'org.eclipse.jgit.transport.URIish', '<init>', '^([a-z][a-z0-9+-]+)://(?:(?:([^/:@]+)(?::([^\\\\/]+))?@)?((?:[^\\\\/:]+)|(?:\\[[0-9a-f:]+\\]))(?::(\\d+))?((?:/~(?:[^\\\\/]+))?[\\\\/]))?(.+)?$', 'https://me@[::1]//abc')","[50157, 50341]"
"('URIish.java', 'org.eclipse.jgit.transport.URIish', '<init>', '^([a-z][a-z0-9+-]+)://(?:(?:([^/:@]+)(?::([^\\\\/]+))?@)?((?:[^\\\\/:]+)|(?:\\[[0-9a-f:]+\\]))(?::(\\d+))?((?:/~(?:[^\\\\/]+))?[\\\\/]))?(.+)?$', 'example.com:some/p%20ath')","[69217, 69286]"
"('Description.java', 'org.junit.runner.Description', 'methodAndClassNamePatternGroupOrDefault', '([\\s\\S]*)\\((.*)\\)', 'indexWithGitmodules(org.eclipse.jgit.submodule.SubmoduleWalkTest)')","[108388, 108581]"
"('Description.java', 'org.junit.runner.Description', 'methodAndClassNamePatternGroupOrDefault', '([\\s\\S]*)\\((.*)\\)', 'org.eclipse.jgit.internal.storage.file.UnpackedObjectTest')","[254938, 255606]"
"('Description.java', 'org.junit.runner.Description', 'methodAndClassNamePatternGroupOrDefault', '([\\s\\S]*)\\((.*)\\)', 'testFillToHighMark4(org.eclipse.jgit.revwalk.RevCommitListTest)')","[80999, 81151]"
"('Description.java', 'org.junit.runner.Description', 'methodAndClassNamePatternGroupOrDefault', '([\\s\\S]*)\\((.*)\\)', 'testNotEquals3(org.eclipse.jgit.diff.EditTest)')","[100060, 100409]"
"('URIish.java', 'org.eclipse.jgit.transport.URIish', 'getHumanishName', '^([\\\\/]?((?:[A-Za-z]:)?[\\\\/]?(?:(?:[^\\\\/]+[\\\\/]+)*[^\\\\/]+[\\\\/]*)))$', '/abc.git/')","[66809, 71057]"
"('Description.java', 'org.junit.runner.Description', 'methodAndClassNamePatternGroupOrDefault', '([\\s\\S]*)\\((.*)\\)', 'commandWithNullPath(org.eclipse.jgit.submodule.SubmoduleAddTest)')","[108771, 108940]"
"('URIish.java', 'org.eclipse.jgit.transport.URIish', '<init>', '^(file):([\\\\/](?![\\\\/])((?:[A-Za-z]:)?[\\\\/]?(?:(?:[^\\\\/]+[\\\\/]+)*[^\\\\/]+[\\\\/]*)))$', 'file:///tmp/jgit_test_3047862731010516352_tmp/tmp_828193169175075630/.git/')",[195017]
"('Description.java', 'org.junit.runner.Description', 'methodAndClassNamePatternGroupOrDefault', '([\\s\\S]*)\\((.*)\\)', 'testRemoveOverlappingBare(org.eclipse.jgit.gitrepo.RepoCommandTest)')","[139799, 140094]"
"('Description.java', 'org.junit.runner.Description', 'methodAndClassNamePatternGroupOrDefault', '([\\s\\S]*)\\((.*)\\)', 'test026_CreateCommitMultipleparents(org.eclipse.jgit.internal.storage.file.T0003_BasicTest)')","[249398, 249945]"
"('URIish.java', 'org.eclipse.jgit.transport.URIish', '<init>', '^(file):([\\\\/](?![\\\\/])((?:[A-Za-z]:)?[\\\\/]?(?:(?:[^\\\\/]+[\\\\/]+)*[^\\\\/]+[\\\\/]*)))$', 'ssh://lusr\\example:wtf@[::1]:1234/D:\\x')",[13302]
"('Description.java', 'org.junit.runner.Description', 'methodAndClassNamePatternGroupOrDefault', '([\\s\\S]*)\\((.*)\\)', 'testDeleteNonExisting(org.eclipse.jgit.api.TagCommandTest)')","[201658, 201957]"
"('Description.java', 'org.junit.runner.Description', 'methodAndClassNamePatternGroupOrDefault', '([\\s\\S]*)\\((.*)\\)', 'testFormatMonths(org.eclipse.jgit.util.RelativeDateFormatterTest)')","[181279, 181469]"
"('Description.java', 'org.junit.runner.Description', 'methodAndClassNamePatternGroupOrDefault', '([\\s\\S]*)\\((.*)\\)', 'invalidSlashAtStart(org.eclipse.jgit.transport.RefSpecTest)')","[13966, 15482]"
"('Description.java', 'org.junit.runner.Description', 'methodAndClassNamePatternGroupOrDefault', '([\\s\\S]*)\\((.*)\\)', 'testParse_implicit_UTF8_encoded(org.eclipse.jgit.revwalk.RevTagParseTest)')","[80165, 80571]"
"('URIish.java', 'org.eclipse.jgit.transport.URIish', '<init>', '^(file):([\\\\/](?![\\\\/])((?:[A-Za-z]:)?[\\\\/]?(?:(?:[^\\\\/]+[\\\\/]+)*[^\\\\/]+[\\\\/]*)))$', 'ssh+git://me@example.com:80/D:\\x')",[29802]
"('Description.java', 'org.junit.runner.Description', 'methodAndClassNamePatternGroupOrDefault', '([\\s\\S]*)\\((.*)\\)', 'testAddRevFlag(org.eclipse.jgit.revwalk.RevObjectTest)')","[83766, 84076]"
"('FastIgnoreRule.java', 'org.eclipse.jgit.ignore.FastIgnoreRule', 'isMatch', '[[\\p{Print}\\p{javaDigit}\\p{javaLetter}]]', '0')",[162476]
"('Description.java', 'org.junit.runner.Description', 'methodAndClassNamePatternGroupOrDefault', '([\\s\\S]*)\\((.*)\\)', 'testOnlyOption_f1_7_f2_14_b(org.eclipse.jgit.api.CommitOnlyTest)')","[235849, 237898]"
"('Description.java', 'org.junit.runner.Description', 'methodAndClassNamePatternGroupOrDefault', '([\\s\\S]*)\\((.*)\\)', 'org.eclipse.jgit.internal.storage.file.AbbreviationTest')","[256722, 256917]"
"('Description.java', 'org.junit.runner.Description', 'methodAndClassNamePatternGroupOrDefault', '([\\s\\S]*)\\((.*)\\)', 'testOnlyOption_f1_14_d(org.eclipse.jgit.api.CommitOnlyTest)')","[237707, 239812]"
"('URIish.java', 'org.eclipse.jgit.transport.URIish', '<init>', '^(file):([\\\\/](?![\\\\/])((?:[A-Za-z]:)?[\\\\/]?(?:(?:[^\\\\/]+[\\\\/]+)*[^\\\\/]+[\\\\/]*)))$', 'file:/tmp/jgit_test_3387739597023240848_tmp/tmp_5822056172154043562/.git/')",[215857]
"('Description.java', 'org.junit.runner.Description', 'methodAndClassNamePatternGroupOrDefault', '([\\s\\S]*)\\((.*)\\)', 'testCombinedRangesInOneGroupCase2[OldRule? false](org.eclipse.jgit.ignore.IgnoreRuleSpecialCasesTest)')","[146053, 153158]"
"('Description.java', 'org.junit.runner.Description', 'methodAndClassNamePatternGroupOrDefault', '([\\s\\S]*)\\((.*)\\)', 'testInvalidCommitInvalidTree2(org.eclipse.jgit.lib.ObjectCheckerTest)')","[121028, 123117]"
"('URIish.java', 'org.eclipse.jgit.transport.URIish', '<init>', '^(file):([\\\\/](?![\\\\/])((?:[A-Za-z]:)?[\\\\/]?(?:(?:[^\\\\/]+[\\\\/]+)*[^\\\\/]+[\\\\/]*)))$', 'file:/tmp/jgit_test_6769790516931586883_tmp/tmp_2209554516347518597/.git/')",[128282]
"('Description.java', 'org.junit.runner.Description', 'methodAndClassNamePatternGroupOrDefault', '([\\s\\S]*)\\((.*)\\)', 'testTrivialTwoWay_concurrentSubtreeChange(org.eclipse.jgit.merge.SimpleMergeTest)')","[86628, 86914]"
"('URIish.java', 'org.eclipse.jgit.transport.URIish', '<init>', '^([a-z][a-z0-9+-]+)://(?:(?:([^/:@]+)(?::([^\\\\/]+))?@)?((?:[^\\\\/:]+)|(?:\\[[0-9a-f:]+\\]))(?::(\\d+))?((?:/~(?:[^\\\\/]+))?[\\\\/]))?(.+)?$', 'http://me@[::1]:1234//')",[33551]
"('Description.java', 'org.junit.runner.Description', 'methodAndClassNamePatternGroupOrDefault', '([\\s\\S]*)\\((.*)\\)', 'testCommit(org.eclipse.jgit.merge.SquashMessageFormatterTest)')","[88719, 88741]"
"('Description.java', 'org.junit.runner.Description', 'methodAndClassNamePatternGroupOrDefault', '([\\s\\S]*)\\((.*)\\)', 'testPrintGroupCase4[OldRule? false](org.eclipse.jgit.ignore.IgnoreRuleSpecialCasesTest)')","[148031, 155136]"
"('Description.java', 'org.junit.runner.Description', 'methodAndClassNamePatternGroupOrDefault', '([\\s\\S]*)\\((.*)\\)', 'test30_stripWorkDir(org.eclipse.jgit.internal.storage.file.T0003_BasicTest)')","[248999, 249527]"
"('Description.java', 'org.junit.runner.Description', 'methodAndClassNamePatternGroupOrDefault', '([\\s\\S]*)\\((.*)\\)', 'getRemoteTrackingBranchShouldReturnNullWithoutMergeBranch(org.eclipse.jgit.lib.BranchConfigTest)')","[120457, 120627]"
"('Description.java', 'org.junit.runner.Description', 'methodAndClassNamePatternGroupOrDefault', '([\\s\\S]*)\\((.*)\\)', 'testAlias_InheritBatchMode(org.eclipse.jgit.transport.OpenSshConfigTest)')","[3167, 3790]"
"('Description.java', 'org.junit.runner.Description', 'methodAndClassNamePatternGroupOrDefault', '([\\s\\S]*)\\((.*)\\)', 'testNoRenames_SymlinkAndFile(org.eclipse.jgit.diff.RenameDetectorTest)')","[93174, 93727]"
"('URIish.java', 'org.eclipse.jgit.transport.URIish', '<init>', '^(file):([\\\\/](?![\\\\/])((?:[A-Za-z]:)?[\\\\/]?(?:(?:[^\\\\/]+[\\\\/]+)*[^\\\\/]+[\\\\/]*)))$', 'https://lusr\\example@example.com/D:/x')","[51652, 51836]"
"('Description.java', 'org.junit.runner.Description', 'methodAndClassNamePatternGroupOrDefault', '([\\s\\S]*)\\((.*)\\)', 'RFC(org.eclipse.jgit.util.GitDateFormatterTest)')","[172198, 172393]"
"('Description.java', 'org.junit.runner.Description', 'methodAndClassNamePatternGroupOrDefault', '([\\s\\S]*)\\((.*)\\)', 'org.eclipse.jgit.api.blame.BlameGeneratorTest')","[235642, 239989]"
"('Description.java', 'org.junit.runner.Description', 'methodAndClassNamePatternGroupOrDefault', '([\\s\\S]*)\\((.*)\\)', 'testSpaceGroupCase0[OldRule? false](org.eclipse.jgit.ignore.IgnoreRuleSpecialCasesTest)')","[146996, 154101]"
"('Description.java', 'org.junit.runner.Description', 'methodAndClassNamePatternGroupOrDefault', '([\\s\\S]*)\\((.*)\\)', 'org.eclipse.jgit.merge.SimpleMergeTest')","[86355, 88662]"
"('Description.java', 'org.junit.runner.Description', 'methodAndClassNamePatternGroupOrDefault', '([\\s\\S]*)\\((.*)\\)', 'testDirtySubmoduleIndexAndWorktree(org.eclipse.jgit.lib.IndexDiffSubmoduleTest)')","[127990, 128144]"
"('URIish.java', 'org.eclipse.jgit.transport.URIish', '<init>', '^([a-z][a-z0-9+-]+)://(?:(?:([^/:@]+)(?::([^\\\\/]+))?@)?((?:[^\\\\/:]+)|(?:\\[[0-9a-f:]+\\]))(?::(\\d+))?((?:/~(?:[^\\\\/]+))?[\\\\/]))?(.+)?$', 'http://l usr\\example.com@[::1]/D:/x')","[47995, 48179]"
"('Description.java', 'org.junit.runner.Description', 'methodAndClassNamePatternGroupOrDefault', '([\\s\\S]*)\\((.*)\\)', 'testModified(org.eclipse.jgit.lib.IndexDiffTest)')","[110490, 110837]"
"('Description.java', 'org.junit.runner.Description', 'methodAndClassNamePatternGroupOrDefault', '([\\s\\S]*)\\((.*)\\)', 'testGetInvalidEnum(org.eclipse.jgit.lib.ConfigTest)')","[129491, 130231]"
"('Description.java', 'org.junit.runner.Description', 'methodAndClassNamePatternGroupOrDefault', '([\\s\\S]*)\\((.*)\\)', 'testSimpleStarCase1(org.eclipse.jgit.fnmatch.FileNameMatcherTest)')","[102364, 105689]"
"('URIish.java', 'org.eclipse.jgit.transport.URIish', '<init>', '^(file):([\\\\/](?![\\\\/])((?:[A-Za-z]:)?[\\\\/]?(?:(?:[^\\\\/]+[\\\\/]+)*[^\\\\/]+[\\\\/]*)))$', 'http://me:wtf@example.com:80/D:\\x')",[19065]
"('URIish.java', 'org.eclipse.jgit.transport.URIish', '<init>', '^([a-z][a-z0-9+-]+)://(?:(?:([^/:@]+)(?::([^\\\\/]+))?@)?((?:[^\\\\/:]+)|(?:\\[[0-9a-f:]+\\]))(?::(\\d+))?((?:/~(?:[^\\\\/]+))?[\\\\/]))?(.+)?$', 'http://me:wtf@example.com:80//')",[18950]
"('URIish.java', 'org.eclipse.jgit.transport.URIish', '<init>', '^(file):([\\\\/](?![\\\\/])((?:[A-Za-z]:)?[\\\\/]?(?:(?:[^\\\\/]+[\\\\/]+)*[^\\\\/]+[\\\\/]*)))$', 'ssh+git://me@1.2.3.4:1234//')",[29848]
"('Description.java', 'org.junit.runner.Description', 'methodAndClassNamePatternGroupOrDefault', '([\\s\\S]*)\\((.*)\\)', 'testMergeConflictFileFolder(org.eclipse.jgit.api.MergeCommandTest)')","[213954, 214880]"
"('Description.java', 'org.junit.runner.Description', 'methodAndClassNamePatternGroupOrDefault', '([\\s\\S]*)\\((.*)\\)', 'test006_ReadUglyConfig(org.eclipse.jgit.internal.storage.file.T0003_BasicTest)')","[249041, 249571]"
"('Description.java', 'org.junit.runner.Description', 'methodAndClassNamePatternGroupOrDefault', '([\\s\\S]*)\\((.*)\\)', 'test2_FromString(org.eclipse.jgit.lib.AbbreviatedObjectIdTest)')","[114599, 115138]"
"('URIish.java', 'org.eclipse.jgit.transport.URIish', '<init>', '^(file):([\\\\/](?![\\\\/])((?:[A-Za-z]:)?[\\\\/]?(?:(?:[^\\\\/]+[\\\\/]+)*[^\\\\/]+[\\\\/]*)))$', 'ssh+git://l usr\\example.com@example.com:1234//')",[30584]
"('URIish.java', 'org.eclipse.jgit.transport.URIish', '<init>', '^([a-z][a-z0-9+-]+)://(?:(?:([^/:@]+)(?::([^\\\\/]+))?@)?((?:[^\\\\/:]+)|(?:\\[[0-9a-f:]+\\]))(?::(\\d+))?((?:/~(?:[^\\\\/]+))?[\\\\/]))?(.+)?$', 'ssh+git://me:wtf@example.com:1234/D:/x')",[13836]
"('URIish.java', 'org.eclipse.jgit.transport.URIish', '<init>', '^([\\\\/]?((?:[A-Za-z]:)?[\\\\/]?(?:(?:[^\\\\/]+[\\\\/]+)*[^\\\\/]+[\\\\/]*)))$', '/a/b/c.git')",[6610]
"('URIish.java', 'org.eclipse.jgit.transport.URIish', '<init>', '^(file):([\\\\/](?![\\\\/])((?:[A-Za-z]:)?[\\\\/]?(?:(?:[^\\\\/]+[\\\\/]+)*[^\\\\/]+[\\\\/]*)))$', '/tmp/jgit_test_7866988883983564781_tmp/tmp_1286542265509971418')","[231187, 231312, 231821]"
"('URIish.java', 'org.eclipse.jgit.transport.URIish', '<init>', '^(file):([\\\\/](?![\\\\/])((?:[A-Za-z]:)?[\\\\/]?(?:(?:[^\\\\/]+[\\\\/]+)*[^\\\\/]+[\\\\/]*)))$', '/tmp/jgit_test_2860132279759404209_tmp/tmp_6329217645268813068')","[229471, 229596, 230022]"
"('Description.java', 'org.junit.runner.Description', 'methodAndClassNamePatternGroupOrDefault', '([\\s\\S]*)\\((.*)\\)', 'org.eclipse.jgit.events.ConfigChangeEventTest')","[194032, 194098]"
"('URIish.java', 'org.eclipse.jgit.transport.URIish', '<init>', '^([a-z][a-z0-9+-]+)://(?:(?:([^/:@]+)(?::([^\\\\/]+))?@)?((?:[^\\\\/:]+)|(?:\\[[0-9a-f:]+\\]))(?::(\\d+))?((?:/~(?:[^\\\\/]+))?[\\\\/]))?(.+)?$', 'ssh://me@1.2.3.4//abc')","[39853, 40037]"
"('Description.java', 'org.junit.runner.Description', 'methodAndClassNamePatternGroupOrDefault', '([\\s\\S]*)\\((.*)\\)', 'onePathMergeLongerFirstParentPath(org.eclipse.jgit.api.NameRevCommandTest)')","[242183, 242424]"
"('URIish.java', 'org.eclipse.jgit.transport.URIish', '<init>', '^([a-z][a-z0-9+-]+)://(?:(?:([^/:@]+)(?::([^\\\\/]+))?@)?((?:[^\\\\/:]+)|(?:\\[[0-9a-f:]+\\]))(?::(\\d+))?((?:/~(?:[^\\\\/]+))?[\\\\/]))?(.+)?$', 'ssh://me@1.2.3.4:80/D:/x')",[26772]
"('Description.java', 'org.junit.runner.Description', 'methodAndClassNamePatternGroupOrDefault', '([\\s\\S]*)\\((.*)\\)', 'testDirCacheAltersId(org.eclipse.jgit.util.ChangeIdUtilTest)')","[186050, 186820]"
"('Description.java', 'org.junit.runner.Description', 'methodAndClassNamePatternGroupOrDefault', '([\\s\\S]*)\\((.*)\\)', 'testAlphaGroupCase1[OldRule? true](org.eclipse.jgit.ignore.IgnoreRuleSpecialCasesTest)')","[150398, 157482]"
"('Description.java', 'org.junit.runner.Description', 'methodAndClassNamePatternGroupOrDefault', '([\\s\\S]*)\\((.*)\\)', 'testFormatSeconds(org.eclipse.jgit.util.RelativeDateFormatterTest)')","[181405, 181601]"
"('Description.java', 'org.junit.runner.Description', 'methodAndClassNamePatternGroupOrDefault', '([\\s\\S]*)\\((.*)\\)', 'testDequote_UTF8(org.eclipse.jgit.util.QuotedStringGitPathStyleTest)')","[177781, 178220]"
"('URIish.java', 'org.eclipse.jgit.transport.URIish', '<init>', '^([a-z][a-z0-9+-]+)://(?:(?:([^/:@]+)(?::([^\\\\/]+))?@)?((?:[^\\\\/:]+)|(?:\\[[0-9a-f:]+\\]))(?::(\\d+))?((?:/~(?:[^\\\\/]+))?[\\\\/]))?(.+)?$', 'https://l usr\\example.com:wtf@1.2.3.4:1234/D:/x')",[24215]
"('Description.java', 'org.junit.runner.Description', 'methodAndClassNamePatternGroupOrDefault', '([\\s\\S]*)\\((.*)\\)', 'testMultipleHeads(org.eclipse.jgit.api.MergeCommandTest)')","[214122, 215056]"
"('FastIgnoreRule.java', 'org.eclipse.jgit.ignore.FastIgnoreRule', 'isMatch', '[\\p{XDigit}]', '۹')",[163128]
"('Description.java', 'org.junit.runner.Description', 'methodAndClassNamePatternGroupOrDefault', '([\\s\\S]*)\\((.*)\\)', 'testCreateFromCommit(org.eclipse.jgit.api.BranchCommandTest)')","[226826, 227262]"
"('URIish.java', 'org.eclipse.jgit.transport.URIish', '<init>', '^([a-z][a-z0-9+-]+)://(?:(?:([^/:@]+)(?::([^\\\\/]+))?@)?((?:[^\\\\/:]+)|(?:\\[[0-9a-f:]+\\]))(?::(\\d+))?((?:/~(?:[^\\\\/]+))?[\\\\/]))?(.+)?$', 'http://me:wtf@[::1]:80//abc')",[20282]
"('URIish.java', 'org.eclipse.jgit.transport.URIish', '<init>', '^(file):([\\\\/](?![\\\\/])((?:[A-Za-z]:)?[\\\\/]?(?:(?:[^\\\\/]+[\\\\/]+)*[^\\\\/]+[\\\\/]*)))$', 'https://lusr\\example:wtf@example.com:1234/D:\\x')",[24974]
"('Description.java', 'org.junit.runner.Description', 'methodAndClassNamePatternGroupOrDefault', '([\\s\\S]*)\\((.*)\\)', 'repositoryWithNoHeadInSubmodule(org.eclipse.jgit.submodule.SubmoduleStatusTest)')","[109286, 109435]"
"('Description.java', 'org.junit.runner.Description', 'methodAndClassNamePatternGroupOrDefault', '([\\s\\S]*)\\((.*)\\)', 'testRemoveCollision2(org.eclipse.jgit.transport.LongMapTest)')","[75364, 75534]"
"('Description.java', 'org.junit.runner.Description', 'methodAndClassNamePatternGroupOrDefault', '([\\s\\S]*)\\((.*)\\)', 'testGetRefs_LooseSortedCorrectly(org.eclipse.jgit.internal.storage.file.RefDirectoryTest)')","[258022, 259210]"
"('Description.java', 'org.junit.runner.Description', 'methodAndClassNamePatternGroupOrDefault', '([\\s\\S]*)\\((.*)\\)', 'testUpdateFastForward(org.eclipse.jgit.transport.PushProcessTest)')","[74005, 74367]"
"('Description.java', 'org.junit.runner.Description', 'methodAndClassNamePatternGroupOrDefault', '([\\s\\S]*)\\((.*)\\)', 'testNoOutputStreamSet(org.eclipse.jgit.api.DiffCommandTest)')","[234455, 234587]"
"('URIish.java', 'org.eclipse.jgit.transport.URIish', '<init>', '^([a-z][a-z0-9+-]+)://(?:(?:([^/:@]+)(?::([^\\\\/]+))?@)?((?:[^\\\\/:]+)|(?:\\[[0-9a-f:]+\\]))(?::(\\d+))?((?:/~(?:[^\\\\/]+))?[\\\\/]))?(.+)?$', 'ssh://some-host:/path/to/repository.git')",[67815]
"('Description.java', 'org.junit.runner.Description', 'methodAndClassNamePatternGroupOrDefault', '([\\s\\S]*)\\((.*)\\)', 'testNotALL_IncludesNothing(org.eclipse.jgit.treewalk.filter.TreeFilterTest)')","[138528, 138679]"
"('Description.java', 'org.junit.runner.Description', 'methodAndClassNamePatternGroupOrDefault', '([\\s\\S]*)\\((.*)\\)', 'org.eclipse.jgit.merge.RecursiveMergerTest')","[87634, 197877]"
"('ChangeIdUtil.java', 'org.eclipse.jgit.util.ChangeIdUtil', 'insertId', '^(Bug|Issue)[a-zA-Z0-9-]*:.*$', ' ')","[189003, 191648]"
"('Description.java', 'org.junit.runner.Description', 'methodAndClassNamePatternGroupOrDefault', '([\\s\\S]*)\\((.*)\\)', 'testQuote_NamedEscapes(org.eclipse.jgit.util.QuotedStringGitPathStyleTest)')","[177760, 178198]"
"('Description.java', 'org.junit.runner.Description', 'methodAndClassNamePatternGroupOrDefault', '([\\s\\S]*)\\((.*)\\)', 'org.eclipse.jgit.transport.PacketLineInTest')","[17965, 21064]"
"('Description.java', 'org.junit.runner.Description', 'methodAndClassNamePatternGroupOrDefault', '([\\s\\S]*)\\((.*)\\)', 'testGetByte(org.eclipse.jgit.lib.ObjectIdTest)')","[130592, 130871]"
"('URIish.java', 'org.eclipse.jgit.transport.URIish', '<init>', '^(file):([\\\\/](?![\\\\/])((?:[A-Za-z]:)?[\\\\/]?(?:(?:[^\\\\/]+[\\\\/]+)*[^\\\\/]+[\\\\/]*)))$', 'ssh://me@[::1]:80/D:\\x')",[27163]
"('Description.java', 'org.junit.runner.Description', 'methodAndClassNamePatternGroupOrDefault', '([\\s\\S]*)\\((.*)\\)', 'checkMergeConflictingTreesWithoutIndex(org.eclipse.jgit.merge.ResolveMergerTest)')","[88099, 88419]"
"('URIish.java', 'org.eclipse.jgit.transport.URIish', '<init>', '^(file):([\\\\/](?![\\\\/])((?:[A-Za-z]:)?[\\\\/]?(?:(?:[^\\\\/]+[\\\\/]+)*[^\\\\/]+[\\\\/]*)))$', 'https://me@example.com:80/D:\\x')",[36426]
"('Description.java', 'org.junit.runner.Description', 'methodAndClassNamePatternGroupOrDefault', '([\\s\\S]*)\\((.*)\\)', 'testDifferentStatesWithPaths(org.eclipse.jgit.api.StatusCommandTest)')","[216671, 216737]"
"('URIish.java', 'org.eclipse.jgit.transport.URIish', '<init>', '^(file):([\\\\/](?![\\\\/])((?:[A-Za-z]:)?[\\\\/]?(?:(?:[^\\\\/]+[\\\\/]+)*[^\\\\/]+[\\\\/]*)))$', 'http://lusr\\example@[::1]:1234/D:\\x')",[35874]
"('URIish.java', 'org.eclipse.jgit.transport.URIish', '<init>', '^(file):([\\\\/](?![\\\\/])((?:[A-Za-z]:)?[\\\\/]?(?:(?:[^\\\\/]+[\\\\/]+)*[^\\\\/]+[\\\\/]*)))$', 'http://l usr\\example.com@example.com//abc')","[47190, 47374]"
"('Description.java', 'org.junit.runner.Description', 'methodAndClassNamePatternGroupOrDefault', '([\\s\\S]*)\\((.*)\\)', 'testCheckoutRemoteTrackingWithoutLocalBranch(org.eclipse.jgit.api.CheckoutCommandTest)')","[207017, 207536]"
"('Description.java', 'org.junit.runner.Description', 'methodAndClassNamePatternGroupOrDefault', '([\\s\\S]*)\\((.*)\\)', 'testMixedGroupCase4[OldRule? false](org.eclipse.jgit.ignore.IgnoreRuleSpecialCasesTest)')","[146168, 153273]"
"('Description.java', 'org.junit.runner.Description', 'methodAndClassNamePatternGroupOrDefault', '([\\s\\S]*)\\((.*)\\)', 'testRecursiveTreeWalk(org.eclipse.jgit.treewalk.filter.IndexDiffFilterTest)')","[136605, 137405]"
"('URIish.java', 'org.eclipse.jgit.transport.URIish', '<init>', '^([a-z][a-z0-9+-]+)://(?:(?:([^/:@]+)(?::([^\\\\/]+))?@)?((?:[^\\\\/:]+)|(?:\\[[0-9a-f:]+\\]))(?::(\\d+))?((?:/~(?:[^\\\\/]+))?[\\\\/]))?(.+)?$', 'http://me:wtf@example.com:1234//')",[18661]
"('Description.java', 'org.junit.runner.Description', 'methodAndClassNamePatternGroupOrDefault', '([\\s\\S]*)\\((.*)\\)', 'test028_LockPackedRef(org.eclipse.jgit.internal.storage.file.T0003_BasicTest)')","[249188, 249725]"
"('URIish.java', 'org.eclipse.jgit.transport.URIish', '<init>', '^(file):([\\\\/](?![\\\\/])((?:[A-Za-z]:)?[\\\\/]?(?:(?:[^\\\\/]+[\\\\/]+)*[^\\\\/]+[\\\\/]*)))$', 'https://lusr\\example:wtf@[::1]:80//')",[25756]
"('URIish.java', 'org.eclipse.jgit.transport.URIish', '<init>', '^(?:([^/:@]+)(?::([^\\\\/]+))?@)?([^\\\\/:]{2,}):([\\\\/](?:(?:[^\\\\/]+[\\\\/]+)*[^\\\\/]+[\\\\/]*))$', '/~some/p ath')","[68619, 68734]"
"('URIish.java', 'org.eclipse.jgit.transport.URIish', '<init>', '^(file):([\\\\/](?![\\\\/])((?:[A-Za-z]:)?[\\\\/]?(?:(?:[^\\\\/]+[\\\\/]+)*[^\\\\/]+[\\\\/]*)))$', 'ssh+git://me:wtf@1.2.3.4:80/D:\\x')",[14833]
"('URIish.java', 'org.eclipse.jgit.transport.URIish', '<init>', '^([a-z][a-z0-9+-]+)://(?:(?:([^/:@]+)(?::([^\\\\/]+))?@)?((?:[^\\\\/:]+)|(?:\\[[0-9a-f:]+\\]))(?::(\\d+))?((?:/~(?:[^\\\\/]+))?[\\\\/]))?(.+)?$', 'http://lusr\\example@1.2.3.4/D:\\x')","[48777, 48961]"
"('Description.java', 'org.junit.runner.Description', 'methodAndClassNamePatternGroupOrDefault', '([\\s\\S]*)\\((.*)\\)', 'testPrefixCompare_9(org.eclipse.jgit.lib.AbbreviatedObjectIdTest)')","[114452, 114984]"
"('URIish.java', 'org.eclipse.jgit.transport.URIish', '<init>', '^(file):([\\\\/](?![\\\\/])((?:[A-Za-z]:)?[\\\\/]?(?:(?:[^\\\\/]+[\\\\/]+)*[^\\\\/]+[\\\\/]*)))$', 'http://lusr\\example@1.2.3.4:1234//')",[35368]
"('URIish.java', 'org.eclipse.jgit.transport.URIish', '<init>', '^([a-z][a-z0-9+-]+)://(?:(?:([^/:@]+)(?::([^\\\\/]+))?@)?((?:[^\\\\/:]+)|(?:\\[[0-9a-f:]+\\]))(?::(\\d+))?((?:/~(?:[^\\\\/]+))?[\\\\/]))?(.+)?$', 'ssh://lusr\\example@1.2.3.4:1234/D:/x')",[28859]
"('Description.java', 'org.junit.runner.Description', 'methodAndClassNamePatternGroupOrDefault', '([\\s\\S]*)\\((.*)\\)', 'testGetRefs_TagsOnly_AllPacked(org.eclipse.jgit.internal.storage.file.RefDirectoryTest)')","[257602, 258770]"
"('Description.java', 'org.junit.runner.Description', 'methodAndClassNamePatternGroupOrDefault', '([\\s\\S]*)\\((.*)\\)', 'testMaliciousAbsoluteWindowsPath1(org.eclipse.jgit.lib.DirCacheCheckoutMaliciousPathTest)')","[112332, 113248]"
"('URIish.java', 'org.eclipse.jgit.transport.URIish', '<init>', '^(file):([\\\\/](?![\\\\/])((?:[A-Za-z]:)?[\\\\/]?(?:(?:[^\\\\/]+[\\\\/]+)*[^\\\\/]+[\\\\/]*)))$', 'ssh://[::1]/D:/x')","[53492, 53676, 54596, 54780, 55700, 55884]"
"('Description.java', 'org.junit.runner.Description', 'methodAndClassNamePatternGroupOrDefault', '([\\s\\S]*)\\((.*)\\)', 'testDeleteForce(org.eclipse.jgit.internal.storage.file.RefUpdateTest)')","[252809, 253630]"
"('Description.java', 'org.junit.runner.Description', 'methodAndClassNamePatternGroupOrDefault', '([\\s\\S]*)\\((.*)\\)', 'test004_lookupDeltifiedObject(org.eclipse.jgit.internal.storage.file.T0004_PackReaderTest)')","[247377, 247421]"
"('Description.java', 'org.junit.runner.Description', 'methodAndClassNamePatternGroupOrDefault', '([\\s\\S]*)\\((.*)\\)', 'testMaxObjectSizeFullBlob(org.eclipse.jgit.transport.PackParserTest)')","[72134, 72440]"
"('Description.java', 'org.junit.runner.Description', 'methodAndClassNamePatternGroupOrDefault', '([\\s\\S]*)\\((.*)\\)', 'testNoRename(org.eclipse.jgit.revwalk.RevWalkFollowFilterTest)')","[79263, 79329]"
"('Description.java', 'org.junit.runner.Description', 'methodAndClassNamePatternGroupOrDefault', '([\\s\\S]*)\\((.*)\\)', 'testPullFastForwardWithLocalCommitAndRebaseFlagSet(org.eclipse.jgit.api.PullCommandWithRebaseTest)')","[205977, 206087]"
"('Description.java', 'org.junit.runner.Description', 'methodAndClassNamePatternGroupOrDefault', '([\\s\\S]*)\\((.*)\\)', 'testThreadTranslationBundleInheritance(org.eclipse.jgit.nls.NLSTest)')","[339, 602]"
"('Description.java', 'org.junit.runner.Description', 'methodAndClassNamePatternGroupOrDefault', '([\\s\\S]*)\\((.*)\\)', 'testLowerGroupCase2[OldRule? false](org.eclipse.jgit.ignore.IgnoreRuleSpecialCasesTest)')","[146536, 153641]"
"('URIish.java', 'org.eclipse.jgit.transport.URIish', '<init>', '^(file):([\\\\/](?![\\\\/])((?:[A-Za-z]:)?[\\\\/]?(?:(?:[^\\\\/]+[\\\\/]+)*[^\\\\/]+[\\\\/]*)))$', '/abc/.git')",[68044]
"('URIish.java', 'org.eclipse.jgit.transport.URIish', '<init>', '^(file):([\\\\/](?![\\\\/])((?:[A-Za-z]:)?[\\\\/]?(?:(?:[^\\\\/]+[\\\\/]+)*[^\\\\/]+[\\\\/]*)))$', 'https://me@1.2.3.4:80//abc')",[36702]
"('Description.java', 'org.junit.runner.Description', 'methodAndClassNamePatternGroupOrDefault', '([\\s\\S]*)\\((.*)\\)', 'testDirectoryFileConflicts_1(org.eclipse.jgit.lib.DirCacheCheckoutTest)')","[116263, 117226]"
"('Description.java', 'org.junit.runner.Description', 'methodAndClassNamePatternGroupOrDefault', '([\\s\\S]*)\\((.*)\\)', 'testEdit_CommonGrowsPrefixAndSuffix(org.eclipse.jgit.diff.MyersDiffTest)')","[97295, 97734]"
"('Description.java', 'org.junit.runner.Description', 'methodAndClassNamePatternGroupOrDefault', '([\\s\\S]*)\\((.*)\\)', 'testConfigureCache_PackedGitWindowSize_0(org.eclipse.jgit.internal.storage.file.WindowCacheReconfigureTest)')","[247564, 247715]"
"('URIish.java', 'org.eclipse.jgit.transport.URIish', '<init>', '^([a-z][a-z0-9+-]+)://(?:(?:([^/:@]+)(?::([^\\\\/]+))?@)?((?:[^\\\\/:]+)|(?:\\[[0-9a-f:]+\\]))(?::(\\d+))?((?:/~(?:[^\\\\/]+))?[\\\\/]))?(.+)?$', 'ssh+git://l usr\\example.com:wtf@example.com:80/D:/x')",[16250]
"('Description.java', 'org.junit.runner.Description', 'methodAndClassNamePatternGroupOrDefault', '([\\s\\S]*)\\((.*)\\)', 'workingDirectoryModifyIndexChanged(org.eclipse.jgit.api.StashCreateCommandTest)')","[202403, 202748]"
"('Description.java', 'org.junit.runner.Description', 'methodAndClassNamePatternGroupOrDefault', '([\\s\\S]*)\\((.*)\\)', 'testGraphGroupCase0[OldRule? false](org.eclipse.jgit.ignore.IgnoreRuleSpecialCasesTest)')","[146329, 153434]"
"('Description.java', 'org.junit.runner.Description', 'methodAndClassNamePatternGroupOrDefault', '([\\s\\S]*)\\((.*)\\)', 'org.eclipse.jgit.fnmatch.FileNameMatcherTest')","[100894, 107813]"
"('Description.java', 'org.junit.runner.Description', 'methodAndClassNamePatternGroupOrDefault', '([\\s\\S]*)\\((.*)\\)', 'testUpperGroupCase0[OldRule? false](org.eclipse.jgit.ignore.IgnoreRuleSpecialCasesTest)')","[148192, 155297]"
"('Description.java', 'org.junit.runner.Description', 'methodAndClassNamePatternGroupOrDefault', '([\\s\\S]*)\\((.*)\\)', 'testVerySimplePatternCase1(org.eclipse.jgit.fnmatch.FileNameMatcherTest)')","[101881, 105183]"
"('Description.java', 'org.junit.runner.Description', 'methodAndClassNamePatternGroupOrDefault', '([\\s\\S]*)\\((.*)\\)', 'testTimeout_readBuffer_Success1(org.eclipse.jgit.util.io.TimeoutInputStreamTest)')","[173928, 174102]"
"('Description.java', 'org.junit.runner.Description', 'methodAndClassNamePatternGroupOrDefault', '([\\s\\S]*)\\((.*)\\)', 'logAllCommitsWithMaxCount(org.eclipse.jgit.api.LogCommandTest)')","[231508, 231656]"
"('URIish.java', 'org.eclipse.jgit.transport.URIish', '<init>', '^(file):([\\\\/](?![\\\\/])((?:[A-Za-z]:)?[\\\\/]?(?:(?:[^\\\\/]+[\\\\/]+)*[^\\\\/]+[\\\\/]*)))$', 'file:/tmp/jgit_test_85796152169093670_tmp/tmp_8177404251779927825/.git/')",[132436]
"('Description.java', 'org.junit.runner.Description', 'methodAndClassNamePatternGroupOrDefault', '([\\s\\S]*)\\((.*)\\)', 'testAddIfAbsentGrowsWithObjects(org.eclipse.jgit.lib.ObjectIdSubclassMapTest)')","[114029, 114180]"
"('Description.java', 'org.junit.runner.Description', 'methodAndClassNamePatternGroupOrDefault', '([\\s\\S]*)\\((.*)\\)', 'addSubmodule(org.eclipse.jgit.submodule.SubmoduleAddTest)')","[108834, 109006]"
"('Description.java', 'org.junit.runner.Description', 'methodAndClassNamePatternGroupOrDefault', '([\\s\\S]*)\\((.*)\\)', 'testCommitRange(org.eclipse.jgit.api.CommitAndLogCommandTest)')","[213129, 213346]"
"('URIish.java', 'org.eclipse.jgit.transport.URIish', '<init>', '^([a-z][a-z0-9+-]+)://(?:(?:([^/:@]+)(?::([^\\\\/]+))?@)?((?:[^\\\\/:]+)|(?:\\[[0-9a-f:]+\\]))(?::(\\d+))?((?:/~(?:[^\\\\/]+))?[\\\\/]))?(.+)?$', 'https://l usr\\example.com@[::1]:80/D:\\x')",[38289]
"('Description.java', 'org.junit.runner.Description', 'methodAndClassNamePatternGroupOrDefault', '([\\s\\S]*)\\((.*)\\)', 'testPrintGroupCase5[OldRule? true](org.eclipse.jgit.ignore.IgnoreRuleSpecialCasesTest)')","[151617, 158701]"
"('Description.java', 'org.junit.runner.Description', 'methodAndClassNamePatternGroupOrDefault', '([\\s\\S]*)\\((.*)\\)', 'testWrite_Small(org.eclipse.jgit.transport.SideBandOutputStreamTest)')","[73433, 73674]"
"('Description.java', 'org.junit.runner.Description', 'methodAndClassNamePatternGroupOrDefault', '([\\s\\S]*)\\((.*)\\)', 'testNameOnlyMatches(org.eclipse.jgit.ignore.IgnoreMatcherTest)')","[145323, 145517]"
"('FastIgnoreRule.java', 'org.eclipse.jgit.ignore.FastIgnoreRule', 'isMatch', '.*\\.sta[0-5]', 'test.sta3')","[142389, 143533]"
"('URIish.java', 'org.eclipse.jgit.transport.URIish', '<init>', '^([a-z][a-z0-9+-]+)://(?:(?:([^/:@]+)(?::([^\\\\/]+))?@)?((?:[^\\\\/:]+)|(?:\\[[0-9a-f:]+\\]))(?::(\\d+))?((?:/~(?:[^\\\\/]+))?[\\\\/]))?(.+)?$', 'ssh+git://me:wtf@example.com:1234//')",[13723]
"('Description.java', 'org.junit.runner.Description', 'methodAndClassNamePatternGroupOrDefault', '([\\s\\S]*)\\((.*)\\)', 'testUpdateRefForward(org.eclipse.jgit.internal.storage.file.RefUpdateTest)')","[253502, 254356]"
"('URIish.java', 'org.eclipse.jgit.transport.URIish', '<init>', '^([a-z][a-z0-9+-]+)://(?:(?:([^/:@]+)(?::([^\\\\/]+))?@)?((?:[^\\\\/:]+)|(?:\\[[0-9a-f:]+\\]))(?::(\\d+))?((?:/~(?:[^\\\\/]+))?[\\\\/]))?(.+)?$', 'http://l usr\\example.com:wtf@1.2.3.4:80/D:/x')",[21087]
"('URIish.java', 'org.eclipse.jgit.transport.URIish', '<init>', '^([a-z][a-z0-9+-]+)://(?:(?:([^/:@]+)(?::([^\\\\/]+))?@)?((?:[^\\\\/:]+)|(?:\\[[0-9a-f:]+\\]))(?::(\\d+))?((?:/~(?:[^\\\\/]+))?[\\\\/]))?(.+)?$', 'ssh+git://me:wtf@[::1]:80//')",[15460]
"('URIish.java', 'org.eclipse.jgit.transport.URIish', '<init>', '^([a-z][a-z0-9+-]+)://(?:(?:([^/:@]+)(?::([^\\\\/]+))?@)?((?:[^\\\\/:]+)|(?:\\[[0-9a-f:]+\\]))(?::(\\d+))?((?:/~(?:[^\\\\/]+))?[\\\\/]))?(.+)?$', 'ssh://me@1.2.3.4:80//')",[26680]
"('URIish.java', 'org.eclipse.jgit.transport.URIish', '<init>', '^([a-z][a-z0-9+-]+)://(?:(?:([^/:@]+)(?::([^\\\\/]+))?@)?((?:[^\\\\/:]+)|(?:\\[[0-9a-f:]+\\]))(?::(\\d+))?((?:/~(?:[^\\\\/]+))?[\\\\/]))?(.+)?$', 'ssh+git://lusr\\example@[::1]//')","[45695, 45879]"
"('Description.java', 'org.junit.runner.Description', 'methodAndClassNamePatternGroupOrDefault', '([\\s\\S]*)\\((.*)\\)', 'testPullWithRebaseConfig1(org.eclipse.jgit.api.PullCommandTest)')","[220630, 220969]"
"('URIish.java', 'org.eclipse.jgit.transport.URIish', '<init>', '^(file):([\\\\/](?![\\\\/])((?:[A-Za-z]:)?[\\\\/]?(?:(?:[^\\\\/]+[\\\\/]+)*[^\\\\/]+[\\\\/]*)))$', 'file:///tmp/jgit_test_4264970772913866100_tmp/tmp_2649031798121898662')","[221960, 222017, 222490]"
"('URIish.java', 'org.eclipse.jgit.transport.URIish', '<init>', '^([a-z][a-z0-9+-]+)://(?:(?:([^/:@]+)(?::([^\\\\/]+))?@)?((?:[^\\\\/:]+)|(?:\\[[0-9a-f:]+\\]))(?::(\\d+))?((?:/~(?:[^\\\\/]+))?[\\\\/]))?(.+)?$', 'http://l usr\\example.com:wtf@[::1]:80//')",[21363]
"('URIish.java', 'org.eclipse.jgit.transport.URIish', '<init>', '^([a-z][a-z0-9+-]+)://(?:(?:([^/:@]+)(?::([^\\\\/]+))?@)?((?:[^\\\\/:]+)|(?:\\[[0-9a-f:]+\\]))(?::(\\d+))?((?:/~(?:[^\\\\/]+))?[\\\\/]))?(.+)?$', 'https://lusr\\example:wtf@1.2.3.4:80/D:\\x')",[25549]
"('URIish.java', 'org.eclipse.jgit.transport.URIish', '<init>', '^(file):([\\\\/](?![\\\\/])((?:[A-Za-z]:)?[\\\\/]?(?:(?:[^\\\\/]+[\\\\/]+)*[^\\\\/]+[\\\\/]*)))$', 'https://l usr\\example.com@example.com:80//abc')",[37438]
"('Description.java', 'org.junit.runner.Description', 'methodAndClassNamePatternGroupOrDefault', '([\\s\\S]*)\\((.*)\\)', 'testTwoGroupsCase3[OldRule? false](org.eclipse.jgit.ignore.IgnoreRuleSpecialCasesTest)')","[147203, 154308]"
"('Description.java', 'org.junit.runner.Description', 'methodAndClassNamePatternGroupOrDefault', '([\\s\\S]*)\\((.*)\\)', 'testSpecificEntryNumber(org.eclipse.jgit.internal.storage.file.ReflogReaderTest)')","[259879, 260053]"
"('URIish.java', 'org.eclipse.jgit.transport.URIish', '<init>', '^([a-z][a-z0-9+-]+)://(?:(?:([^/:@]+)(?::([^\\\\/]+))?@)?((?:[^\\\\/:]+)|(?:\\[[0-9a-f:]+\\]))(?::(\\d+))?((?:/~(?:[^\\\\/]+))?[\\\\/]))?(.+)?$', 'ssh+git://me:wtf@1.2.3.4:1234//abc')",[14580]
"('Description.java', 'org.junit.runner.Description', 'methodAndClassNamePatternGroupOrDefault', '([\\s\\S]*)\\((.*)\\)', 'testQuote_User(org.eclipse.jgit.util.QuotedStringBourneUserPathStyleTest)')","[192618, 192880]"
"('URIish.java', 'org.eclipse.jgit.transport.URIish', '<init>', '^([a-z][a-z0-9+-]+)://(?:(?:([^/:@]+)(?::([^\\\\/]+))?@)?((?:[^\\\\/:]+)|(?:\\[[0-9a-f:]+\\]))(?::(\\d+))?((?:/~(?:[^\\\\/]+))?[\\\\/]))?(.+)?$', 'https://lusr\\example@example.com/D:\\x')","[51721, 51905]"
"('FastIgnoreRule.java', 'org.eclipse.jgit.ignore.FastIgnoreRule', 'isMatch', '[^b-c]', 'd')",[161200]
"('URIish.java', 'org.eclipse.jgit.transport.URIish', '<init>', '^(file):([\\\\/](?![\\\\/])((?:[A-Za-z]:)?[\\\\/]?(?:(?:[^\\\\/]+[\\\\/]+)*[^\\\\/]+[\\\\/]*)))$', 'ssh+git://me@[::1]//')","[43464, 43648]"
"('Description.java', 'org.junit.runner.Description', 'methodAndClassNamePatternGroupOrDefault', '([\\s\\S]*)\\((.*)\\)', 'testToString(org.eclipse.jgit.ignore.IgnoreNodeTest)')","[140458, 140754]"
"('Description.java', 'org.junit.runner.Description', 'methodAndClassNamePatternGroupOrDefault', '([\\s\\S]*)\\((.*)\\)', 'testInvalidCommitInvalidAuthor6(org.eclipse.jgit.lib.ObjectCheckerTest)')","[121826, 123953]"
"('Description.java', 'org.junit.runner.Description', 'methodAndClassNamePatternGroupOrDefault', '([\\s\\S]*)\\((.*)\\)', 'testSet(org.eclipse.jgit.diff.EditListTest)')","[94714, 94820]"
"('Description.java', 'org.junit.runner.Description', 'methodAndClassNamePatternGroupOrDefault', '([\\s\\S]*)\\((.*)\\)', 'testDirectoryFileConflicts_5b(org.eclipse.jgit.lib.DirCacheCheckoutTest)')","[116725, 117710]"
"('Description.java', 'org.junit.runner.Description', 'methodAndClassNamePatternGroupOrDefault', '([\\s\\S]*)\\((.*)\\)', 'testLargeMap(org.eclipse.jgit.transport.LongMapTest)')","[75406, 75578]"
"('FastIgnoreRule.java', 'org.eclipse.jgit.ignore.FastIgnoreRule', 'isMatch', 'a.', 'c')","[169181, 169235, 169289, 169370, 170647, 170728, 170809, 170890]"
"('Description.java', 'org.junit.runner.Description', 'methodAndClassNamePatternGroupOrDefault', '([\\s\\S]*)\\((.*)\\)', 'dropAll(org.eclipse.jgit.api.StashDropCommandTest)')","[243488, 243664]"
"('Description.java', 'org.junit.runner.Description', 'methodAndClassNamePatternGroupOrDefault', '([\\s\\S]*)\\((.*)\\)', 'testCloneRepositoryOnlyOneBranch(org.eclipse.jgit.api.CloneCommandTest)')","[203813, 204050]"
"('Description.java', 'org.junit.runner.Description', 'methodAndClassNamePatternGroupOrDefault', '([\\s\\S]*)\\((.*)\\)', 'testALL_IncludesAnything(org.eclipse.jgit.treewalk.filter.TreeFilterTest)')","[138570, 138723]"
"('Description.java', 'org.junit.runner.Description', 'methodAndClassNamePatternGroupOrDefault', '([\\s\\S]*)\\((.*)\\)', 'org.eclipse.jgit.dircache.DirCacheBuilderIteratorTest')","[90749, 90815]"
"('URIish.java', 'org.eclipse.jgit.transport.URIish', '<init>', '^(file):([\\\\/](?![\\\\/])((?:[A-Za-z]:)?[\\\\/]?(?:(?:[^\\\\/]+[\\\\/]+)*[^\\\\/]+[\\\\/]*)))$', 'http://me@1.2.3.4:1234/D:/x')",[33252]
"('Description.java', 'org.junit.runner.Description', 'methodAndClassNamePatternGroupOrDefault', '([\\s\\S]*)\\((.*)\\)', 'org.eclipse.jgit.lib.BranchConfigTest')","[120415, 120782]"
"('Description.java', 'org.junit.runner.Description', 'methodAndClassNamePatternGroupOrDefault', '([\\s\\S]*)\\((.*)\\)', 'testDirectoryFileConflicts_15b(org.eclipse.jgit.lib.DirCacheCheckoutTest)')","[116032, 116984]"
"('Description.java', 'org.junit.runner.Description', 'methodAndClassNamePatternGroupOrDefault', '([\\s\\S]*)\\((.*)\\)', 'testEmptyPattern(org.eclipse.jgit.util.RawSubStringPatternTest)')","[176242, 176329]"
"('URIish.java', 'org.eclipse.jgit.transport.URIish', '<init>', '^(file):([\\\\/](?![\\\\/])((?:[A-Za-z]:)?[\\\\/]?(?:(?:[^\\\\/]+[\\\\/]+)*[^\\\\/]+[\\\\/]*)))$', 'https://me:wtf@example.com:80//')",[22812]
"('Description.java', 'org.junit.runner.Description', 'methodAndClassNamePatternGroupOrDefault', '([\\s\\S]*)\\((.*)\\)', 'testSuccessfulContentMergeNoCommit(org.eclipse.jgit.api.MergeCommandTest)')","[213723, 214638]"
"('URIish.java', 'org.eclipse.jgit.transport.URIish', '<init>', '^([a-z][a-z0-9+-]+)://(?:(?:([^/:@]+)(?::([^\\\\/]+))?@)?((?:[^\\\\/:]+)|(?:\\[[0-9a-f:]+\\]))(?::(\\d+))?((?:/~(?:[^\\\\/]+))?[\\\\/]))?(.+)?$', 'https://lusr\\example@example.com:80//')",[38519]
"('Description.java', 'org.junit.runner.Description', 'methodAndClassNamePatternGroupOrDefault', '([\\s\\S]*)\\((.*)\\)', 'testInCoreLimit_SwitchOnCopy(org.eclipse.jgit.util.TemporaryBufferTest)')","[178343, 178639]"
"('URIish.java', 'org.eclipse.jgit.transport.URIish', '<init>', '^([a-z][a-z0-9+-]+)://(?:(?:([^/:@]+)(?::([^\\\\/]+))?@)?((?:[^\\\\/:]+)|(?:\\[[0-9a-f:]+\\]))(?::(\\d+))?((?:/~(?:[^\\\\/]+))?[\\\\/]))?(.+)?$', 'file:///tmp/jgit_test_7795766867048310974_tmp/tmp_6578180669122549493.git/')",[173233]
"('Description.java', 'org.junit.runner.Description', 'methodAndClassNamePatternGroupOrDefault', '([\\s\\S]*)\\((.*)\\)', 'testGetRefs_PackedWithPeeled(org.eclipse.jgit.internal.storage.file.RefDirectoryTest)')","[257665, 258836]"
"('Description.java', 'org.junit.runner.Description', 'methodAndClassNamePatternGroupOrDefault', '([\\s\\S]*)\\((.*)\\)', 'testReadACK_Invalid1(org.eclipse.jgit.transport.PacketLineInTest)')","[18420, 19626]"
"('URIish.java', 'org.eclipse.jgit.transport.URIish', '<init>', '^(?:([^/:@]+)(?::([^\\\\/]+))?@)?([^\\\\/:]{2,}):([\\\\/](?:(?:[^\\\\/]+[\\\\/]+)*[^\\\\/]+[\\\\/]*))$', '/tmp/jgit_test_3192177335269722876_tmp/tmp_3678193557651606518')","[225160, 225300, 225492]"
"('Description.java', 'org.junit.runner.Description', 'methodAndClassNamePatternGroupOrDefault', '([\\s\\S]*)\\((.*)\\)', 'testEscapedBackslash(org.eclipse.jgit.fnmatch.FileNameMatcherTest)')","[102721, 106063]"
"('URIish.java', 'org.eclipse.jgit.transport.URIish', '<init>', '^([a-z][a-z0-9+-]+)://(?:(?:([^/:@]+)(?::([^\\\\/]+))?@)?((?:[^\\\\/:]+)|(?:\\[[0-9a-f:]+\\]))(?::(\\d+))?((?:/~(?:[^\\\\/]+))?[\\\\/]))?(.+)?$', 'ssh+git://lusr\\example@1.2.3.4:80/D:\\x')",[32401]
"('Description.java', 'org.junit.runner.Description', 'methodAndClassNamePatternGroupOrDefault', '([\\s\\S]*)\\((.*)\\)', 'testDigitGroupCase0[OldRule? true](org.eclipse.jgit.ignore.IgnoreRuleSpecialCasesTest)')","[150881, 157965]"
"('Description.java', 'org.junit.runner.Description', 'methodAndClassNamePatternGroupOrDefault', '([\\s\\S]*)\\((.*)\\)', 'testRevertMultipleWithFail(org.eclipse.jgit.api.RevertCommandTest)')","[233511, 233726]"
"('URIish.java', 'org.eclipse.jgit.transport.URIish', '<init>', '^(file):([\\\\/](?![\\\\/])((?:[A-Za-z]:)?[\\\\/]?(?:(?:[^\\\\/]+[\\\\/]+)*[^\\\\/]+[\\\\/]*)))$', 'https://me:wtf@example.com:1234/D:/x')",[22720]
"('URIish.java', 'org.eclipse.jgit.transport.URIish', '<init>', '^([a-z][a-z0-9+-]+)://(?:(?:([^/:@]+)(?::([^\\\\/]+))?@)?((?:[^\\\\/:]+)|(?:\\[[0-9a-f:]+\\]))(?::(\\d+))?((?:/~(?:[^\\\\/]+))?[\\\\/]))?(.+)?$', 'https://me@example.com:80/D:\\x')",[36449]
"('Description.java', 'org.junit.runner.Description', 'methodAndClassNamePatternGroupOrDefault', '([\\s\\S]*)\\((.*)\\)', 'testDequote_Empty1(org.eclipse.jgit.util.QuotedStringBourneStyleTest)')","[182896, 183108]"
"('Description.java', 'org.junit.runner.Description', 'methodAndClassNamePatternGroupOrDefault', '([\\s\\S]*)\\((.*)\\)', 'org.eclipse.jgit.revwalk.FooterLineTest')","[77376, 78717]"
"('Description.java', 'org.junit.runner.Description', 'methodAndClassNamePatternGroupOrDefault', '([\\s\\S]*)\\((.*)\\)', 'testShellGlob(org.eclipse.jgit.lib.ValidRefNameTest)')","[118404, 118764]"
"('Description.java', 'org.junit.runner.Description', 'methodAndClassNamePatternGroupOrDefault', '([\\s\\S]*)\\((.*)\\)', 'testBatchRefUpdateSimpleForce(org.eclipse.jgit.internal.storage.file.RefDirectoryTest)')","[257371, 258528]"
"('URIish.java', 'org.eclipse.jgit.transport.URIish', '<init>', '^(file):([\\\\/](?![\\\\/])((?:[A-Za-z]:)?[\\\\/]?(?:(?:[^\\\\/]+[\\\\/]+)*[^\\\\/]+[\\\\/]*)))$', 'ssh://me:wtf@[::1]:80/D:/x')",[10219]
"('URIish.java', 'org.eclipse.jgit.transport.URIish', '<init>', '^([a-z][a-z0-9+-]+)://(?:(?:([^/:@]+)(?::([^\\\\/]+))?@)?((?:[^\\\\/:]+)|(?:\\[[0-9a-f:]+\\]))(?::(\\d+))?((?:/~(?:[^\\\\/]+))?[\\\\/]))?(.+)?$', 'ssh+git://me:wtf@[::1]:1234//abc')",[15146]
"('FastIgnoreRule.java', 'org.eclipse.jgit.ignore.FastIgnoreRule', 'isMatch', '[\\p{javaDigit}]', '5')",[161618]
"('URIish.java', 'org.eclipse.jgit.transport.URIish', '<init>', '^([a-z][a-z0-9+-]+)://(?:(?:([^/:@]+)(?::([^\\\\/]+))?@)?((?:[^\\\\/:]+)|(?:\\[[0-9a-f:]+\\]))(?::(\\d+))?((?:/~(?:[^\\\\/]+))?[\\\\/]))?(.+)?$', 'https://lusr\\example@1.2.3.4//')","[51951, 52135]"
"('Description.java', 'org.junit.runner.Description', 'methodAndClassNamePatternGroupOrDefault', '([\\s\\S]*)\\((.*)\\)', 'testInversedGroupCase0(org.eclipse.jgit.fnmatch.FileNameMatcherTest)')","[102049, 105359]"
"('Description.java', 'org.junit.runner.Description', 'methodAndClassNamePatternGroupOrDefault', '([\\s\\S]*)\\((.*)\\)', 'testDeleteBadName(org.eclipse.jgit.api.TagCommandTest)')","[201826, 202133]"
"('Description.java', 'org.junit.runner.Description', 'methodAndClassNamePatternGroupOrDefault', '([\\s\\S]*)\\((.*)\\)', 'testCombinedRangesInOneGroupCase1[OldRule? false](org.eclipse.jgit.ignore.IgnoreRuleSpecialCasesTest)')","[146030, 153135]"
"('Description.java', 'org.junit.runner.Description', 'methodAndClassNamePatternGroupOrDefault', '([\\s\\S]*)\\((.*)\\)', 'test001_toString(org.eclipse.jgit.lib.ObjectIdTest)')","[130655, 130937]"
"('FastIgnoreRule.java', 'org.eclipse.jgit.ignore.FastIgnoreRule', 'isMatch', '[b-ce-e]', 'f')",[163544]
"('Description.java', 'org.junit.runner.Description', 'methodAndClassNamePatternGroupOrDefault', '([\\s\\S]*)\\((.*)\\)', 'testSetFive_InOrder(org.eclipse.jgit.notes.LeafBucketTest)')","[198206, 198445]"
"('Description.java', 'org.junit.runner.Description', 'methodAndClassNamePatternGroupOrDefault', '([\\s\\S]*)\\((.*)\\)', 'testOnlyOption_f1_12_a(org.eclipse.jgit.api.CommitOnlyTest)')","[237434, 239526]"
"('URIish.java', 'org.eclipse.jgit.transport.URIish', '<init>', '^(file):([\\\\/](?![\\\\/])((?:[A-Za-z]:)?[\\\\/]?(?:(?:[^\\\\/]+[\\\\/]+)*[^\\\\/]+[\\\\/]*)))$', 'http://l usr\\example.com:wtf@1.2.3.4:1234/D:\\x')",[20903]
"('URIish.java', 'org.eclipse.jgit.transport.URIish', '<init>', '^([a-z][a-z0-9+-]+)://(?:(?:([^/:@]+)(?::([^\\\\/]+))?@)?((?:[^\\\\/:]+)|(?:\\[[0-9a-f:]+\\]))(?::(\\d+))?((?:/~(?:[^\\\\/]+))?[\\\\/]))?(.+)?$', 'ssh+git://lusr\\example@1.2.3.4:1234/D:/x')",[32171]
"('Description.java', 'org.junit.runner.Description', 'methodAndClassNamePatternGroupOrDefault', '([\\s\\S]*)\\((.*)\\)', 'logAllCommits(org.eclipse.jgit.api.LogCommandTest)')","[231529, 231678]"
"('FastIgnoreRule.java', 'org.eclipse.jgit.ignore.FastIgnoreRule', 'isMatch', 'ne.', 'src')","[142912, 142966, 143020, 143074, 143155, 144056, 144110, 144164, 144218, 144299]"
"('FastIgnoreRule.java', 'org.eclipse.jgit.ignore.FastIgnoreRule', 'isMatch', '[A\\p{Ll}C3-5]', '.')",[160524]
"('Description.java', 'org.junit.runner.Description', 'methodAndClassNamePatternGroupOrDefault', '([\\s\\S]*)\\((.*)\\)', 'testParse_GitBinaryDelta(org.eclipse.jgit.patch.PatchTest)')","[196121, 196271]"
"('URIish.java', 'org.eclipse.jgit.transport.URIish', '<init>', '^(file):([\\\\/](?![\\\\/])((?:[A-Za-z]:)?[\\\\/]?(?:(?:[^\\\\/]+[\\\\/]+)*[^\\\\/]+[\\\\/]*)))$', 'ssh://l usr\\example.com@[::1]:80//')",[28192]
"('URIish.java', 'org.eclipse.jgit.transport.URIish', '<init>', '^([a-z][a-z0-9+-]+)://(?:(?:([^/:@]+)(?::([^\\\\/]+))?@)?((?:[^\\\\/:]+)|(?:\\[[0-9a-f:]+\\]))(?::(\\d+))?((?:/~(?:[^\\\\/]+))?[\\\\/]))?(.+)?$', 'ssh+git://1.2.3.4/D:/x')","[56459, 56643, 57563, 57747, 58667, 58851]"
"('URIish.java', 'org.eclipse.jgit.transport.URIish', '<init>', '^([a-z][a-z0-9+-]+)://(?:(?:([^/:@]+)(?::([^\\\\/]+))?@)?((?:[^\\\\/:]+)|(?:\\[[0-9a-f:]+\\]))(?::(\\d+))?((?:/~(?:[^\\\\/]+))?[\\\\/]))?(.+)?$', 'ssh://l usr\\example.com@1.2.3.4/D:\\x')","[41049, 41233]"
"('URIish.java', 'org.eclipse.jgit.transport.URIish', '<init>', '^([a-z][a-z0-9+-]+)://(?:(?:([^/:@]+)(?::([^\\\\/]+))?@)?((?:[^\\\\/:]+)|(?:\\[[0-9a-f:]+\\]))(?::(\\d+))?((?:/~(?:[^\\\\/]+))?[\\\\/]))?(.+)?$', 'https://me@example.com:1234/D:/x')",[36219]
"('Description.java', 'org.junit.runner.Description', 'methodAndClassNamePatternGroupOrDefault', '([\\s\\S]*)\\((.*)\\)', 'testCaseInsensitive(org.eclipse.jgit.util.RawSubStringPatternTest)')","[176221, 176307]"
"('Description.java', 'org.junit.runner.Description', 'methodAndClassNamePatternGroupOrDefault', '([\\s\\S]*)\\((.*)\\)', 'org.eclipse.jgit.lib.ObjectIdSubclassMapTest')","[113945, 114269]"
"('URIish.java', 'org.eclipse.jgit.transport.URIish', '<init>', '^([a-z][a-z0-9+-]+)://(?:(?:([^/:@]+)(?::([^\\\\/]+))?@)?((?:[^\\\\/:]+)|(?:\\[[0-9a-f:]+\\]))(?::(\\d+))?((?:/~(?:[^\\\\/]+))?[\\\\/]))?(.+)?$', 'ssh+git://lusr\\example@1.2.3.4:1234//abc')",[32125]
"('Description.java', 'org.junit.runner.Description', 'methodAndClassNamePatternGroupOrDefault', '([\\s\\S]*)\\((.*)\\)', 'testMaliciousAbsolutePathSecondCheckout(org.eclipse.jgit.lib.DirCacheCheckoutMaliciousPathTest)')","[112017, 112918]"
"('Description.java', 'org.junit.runner.Description', 'methodAndClassNamePatternGroupOrDefault', '([\\s\\S]*)\\((.*)\\)', 'testAdded(org.eclipse.jgit.lib.IndexDiffTest)')","[110343, 110683]"
"('URIish.java', 'org.eclipse.jgit.transport.URIish', '<init>', '^([a-z][a-z0-9+-]+)://(?:(?:([^/:@]+)(?::([^\\\\/]+))?@)?((?:[^\\\\/:]+)|(?:\\[[0-9a-f:]+\\]))(?::(\\d+))?((?:/~(?:[^\\\\/]+))?[\\\\/]))?(.+)?$', 'https://me@[::1]:1234//abc')",[36909]
"('Description.java', 'org.junit.runner.Description', 'methodAndClassNamePatternGroupOrDefault', '([\\s\\S]*)\\((.*)\\)', 'testCopyWholeObject_Length123(org.eclipse.jgit.internal.storage.pack.DeltaIndexTest)')","[246424, 246703]"
"('URIish.java', 'org.eclipse.jgit.transport.URIish', '<init>', '^([\\\\/]?((?:[A-Za-z]:)?[\\\\/]?(?:(?:[^\\\\/]+[\\\\/]+)*[^\\\\/]+[\\\\/]*)))$', '/tmp/jgit_test_4442660414069404548_tmp/tmp_2197519089635817093')","[221375, 221520, 221784, 221934, 222198]"
"('URIish.java', 'org.eclipse.jgit.transport.URIish', '<init>', '^(file):([\\\\/](?![\\\\/])((?:[A-Za-z]:)?[\\\\/]?(?:(?:[^\\\\/]+[\\\\/]+)*[^\\\\/]+[\\\\/]*)))$', 'https://me:wtf@example.com:1234//')",[22628]
"('Description.java', 'org.junit.runner.Description', 'methodAndClassNamePatternGroupOrDefault', '([\\s\\S]*)\\((.*)\\)', 'testParse_explicit_bad_encoded2(org.eclipse.jgit.revwalk.RevCommitParseTest)')","[84225, 84678]"
"('Description.java', 'org.junit.runner.Description', 'methodAndClassNamePatternGroupOrDefault', '([\\s\\S]*)\\((.*)\\)', 'testCntrlGroupCase1[OldRule? false](org.eclipse.jgit.ignore.IgnoreRuleSpecialCasesTest)')","[146651, 153756]"
"('ChangeIdUtil.java', 'org.eclipse.jgit.util.ChangeIdUtil', 'indexOfChangeId', '(^Change-Id: *I[a-f0-9]{40}$)', 'Signed-off-by: me@you.too')","[186846, 187742, 188797, 190508, 190741, 191313, 191442, 191724]"
"('Description.java', 'org.junit.runner.Description', 'methodAndClassNamePatternGroupOrDefault', '([\\s\\S]*)\\((.*)\\)', 'testInvalidTagNoType2(org.eclipse.jgit.lib.ObjectCheckerTest)')","[122582, 124745]"
"('Description.java', 'org.junit.runner.Description', 'methodAndClassNamePatternGroupOrDefault', '([\\s\\S]*)\\((.*)\\)', 'testAddWithParameterUpdate(org.eclipse.jgit.api.AddCommandTest)')","[234906, 235336]"
"('FastIgnoreRule.java', 'org.eclipse.jgit.ignore.FastIgnoreRule', 'isMatch', '[tv]est\\.sta[a-d]', 'vest.stac')","[142686, 143830]"
"('Description.java', 'org.junit.runner.Description', 'methodAndClassNamePatternGroupOrDefault', '([\\s\\S]*)\\((.*)\\)', 'testOnlyOption_f1_4_a(org.eclipse.jgit.api.CommitOnlyTest)')","[236248, 238316]"
"('Description.java', 'org.junit.runner.Description', 'methodAndClassNamePatternGroupOrDefault', '([\\s\\S]*)\\((.*)\\)', 'testCheckoutToNonExistingBranch(org.eclipse.jgit.api.CheckoutCommandTest)')","[206975, 207492]"
"('URIish.java', 'org.eclipse.jgit.transport.URIish', '<init>', '^([a-z][a-z0-9+-]+)://(?:(?:([^/:@]+)(?::([^\\\\/]+))?@)?((?:[^\\\\/:]+)|(?:\\[[0-9a-f:]+\\]))(?::(\\d+))?((?:/~(?:[^\\\\/]+))?[\\\\/]))?(.+)?$', 'ssh://me@1.2.3.4/D:\\x')","[39945, 40129]"
"('Description.java', 'org.junit.runner.Description', 'methodAndClassNamePatternGroupOrDefault', '([\\s\\S]*)\\((.*)\\)', 'testSetFastForwardMerge(org.eclipse.jgit.lib.ConfigTest)')","[129470, 130209]"
"('Description.java', 'org.junit.runner.Description', 'methodAndClassNamePatternGroupOrDefault', '([\\s\\S]*)\\((.*)\\)', 'testMaliciousAbsoluteUNCPathWindows2OnUnix(org.eclipse.jgit.lib.DirCacheCheckoutMaliciousPathTest)')","[111870, 112764]"
"('ChangeIdUtil.java', 'org.eclipse.jgit.util.ChangeIdUtil', 'indexOfChangeId', '(^Change-Id: *I[a-f0-9]{40}$)', 'Some detail explanation')",[215521]
"('URIish.java', 'org.eclipse.jgit.transport.URIish', '<init>', '^([\\\\/]?((?:[A-Za-z]:)?[\\\\/]?(?:(?:[^\\\\/]+[\\\\/]+)*[^\\\\/]+[\\\\/]*)))$', '/home/m y')","[67315, 67430]"
"('URIish.java', 'org.eclipse.jgit.transport.URIish', '<init>', '^([a-z][a-z0-9+-]+)://(?:(?:([^/:@]+)(?::([^\\\\/]+))?@)?((?:[^\\\\/:]+)|(?:\\[[0-9a-f:]+\\]))(?::(\\d+))?((?:/~(?:[^\\\\/]+))?[\\\\/]))?(.+)?$', 'file:///tmp/jgit_test_2890579450514771731_tmp/tmp_434550698765585976/.git/')",[245965]
"('Description.java', 'org.junit.runner.Description', 'methodAndClassNamePatternGroupOrDefault', '([\\s\\S]*)\\((.*)\\)', 'dropWithInvalidLogIndex(org.eclipse.jgit.api.StashDropCommandTest)')","[243467, 243642]"
"('Description.java', 'org.junit.runner.Description', 'methodAndClassNamePatternGroupOrDefault', '([\\s\\S]*)\\((.*)\\)', 'test009_CreateCommitOldFormat(org.eclipse.jgit.internal.storage.file.T0003_BasicTest)')","[249377, 249923]"
"('Description.java', 'org.junit.runner.Description', 'methodAndClassNamePatternGroupOrDefault', '([\\s\\S]*)\\((.*)\\)', 'testSimpleNoTags(org.eclipse.jgit.transport.RemoteConfigTest)')","[1730, 2770]"
"('URIish.java', 'org.eclipse.jgit.transport.URIish', '<init>', '^([a-z][a-z0-9+-]+)://(?:(?:([^/:@]+)(?::([^\\\\/]+))?@)?((?:[^\\\\/:]+)|(?:\\[[0-9a-f:]+\\]))(?::(\\d+))?((?:/~(?:[^\\\\/]+))?[\\\\/]))?(.+)?$', 'http://l usr\\example.com@example.com:80//abc')",[34149]
"('URIish.java', 'org.eclipse.jgit.transport.URIish', '<init>', '^([a-z][a-z0-9+-]+)://(?:(?:([^/:@]+)(?::([^\\\\/]+))?@)?((?:[^\\\\/:]+)|(?:\\[[0-9a-f:]+\\]))(?::(\\d+))?((?:/~(?:[^\\\\/]+))?[\\\\/]))?(.+)?$', 'https://lusr\\example@example.com/D:/x')","[51675, 51859]"
"('URIish.java', 'org.eclipse.jgit.transport.URIish', '<init>', '^([a-z][a-z0-9+-]+)://(?:(?:([^/:@]+)(?::([^\\\\/]+))?@)?((?:[^\\\\/:]+)|(?:\\[[0-9a-f:]+\\]))(?::(\\d+))?((?:/~(?:[^\\\\/]+))?[\\\\/]))?(.+)?$', 'ssh+git://l usr\\example.com:wtf@[::1]:1234/D:/x')",[16802]
"('URIish.java', 'org.eclipse.jgit.transport.URIish', '<init>', '^(file):([\\\\/](?![\\\\/])((?:[A-Za-z]:)?[\\\\/]?(?:(?:[^\\\\/]+[\\\\/]+)*[^\\\\/]+[\\\\/]*)))$', 'ssh+git://me@1.2.3.4:1234/D:/x')",[29940]
"('URIish.java', 'org.eclipse.jgit.transport.URIish', '<init>', '^(?:([^/:@]+)(?::([^\\\\/]+))?@)?([^\\\\/:]{2,}):([\\\\/](?:(?:[^\\\\/]+[\\\\/]+)*[^\\\\/]+[\\\\/]*))$', '/tmp/jgit_test_8282599337916693551_tmp/tmp_748218085915783388.git')","[79429, 81299]"
"('Description.java', 'org.junit.runner.Description', 'methodAndClassNamePatternGroupOrDefault', '([\\s\\S]*)\\((.*)\\)', 'testVerySimpleStarCase0(org.eclipse.jgit.fnmatch.FileNameMatcherTest)')","[103435, 106811]"
"('Description.java', 'org.junit.runner.Description', 'methodAndClassNamePatternGroupOrDefault', '([\\s\\S]*)\\((.*)\\)', 'testDeleteRecursiveEmptyNeedsToCheckFilesFirst(org.eclipse.jgit.util.FileUtilTest)')","[176827, 177178]"
"('Description.java', 'org.junit.runner.Description', 'methodAndClassNamePatternGroupOrDefault', '([\\s\\S]*)\\((.*)\\)', 'testOneBranch(org.eclipse.jgit.merge.MergeMessageFormatterTest)')","[89115, 89445]"
"('URIish.java', 'org.eclipse.jgit.transport.URIish', '<init>', '^([a-z][a-z0-9+-]+)://(?:(?:([^/:@]+)(?::([^\\\\/]+))?@)?((?:[^\\\\/:]+)|(?:\\[[0-9a-f:]+\\]))(?::(\\d+))?((?:/~(?:[^\\\\/]+))?[\\\\/]))?(.+)?$', '/tmp/jgit_test_1958524625050925037_tmp/tmp_997803827191484605.git')",[9695]
"('Description.java', 'org.junit.runner.Description', 'methodAndClassNamePatternGroupOrDefault', '([\\s\\S]*)\\((.*)\\)', 'testAutoCloseDuringRead(org.eclipse.jgit.util.io.UnionInputStreamTest)')","[174958, 175169]"
"('Description.java', 'org.junit.runner.Description', 'methodAndClassNamePatternGroupOrDefault', '([\\s\\S]*)\\((.*)\\)', 'testGetRefs_CorruptSymbolicReference(org.eclipse.jgit.internal.storage.file.RefDirectoryTest)')","[257350, 258506]"
"('URIish.java', 'org.eclipse.jgit.transport.URIish', '<init>', '^(file):([\\\\/](?![\\\\/])((?:[A-Za-z]:)?[\\\\/]?(?:(?:[^\\\\/]+[\\\\/]+)*[^\\\\/]+[\\\\/]*)))$', 'ssh+git://me:wtf@1.2.3.4:1234/D:/x')",[14603]
"('FastIgnoreRule.java', 'org.eclipse.jgit.ignore.FastIgnoreRule', 'isMatch', '[A\\p{Ll}C3-5]', '3')",[160368]
"('URIish.java', 'org.eclipse.jgit.transport.URIish', '<init>', '^(file):([\\\\/](?![\\\\/])((?:[A-Za-z]:)?[\\\\/]?(?:(?:[^\\\\/]+[\\\\/]+)*[^\\\\/]+[\\\\/]*)))$', 'file:/tmp/jgit_test_1849034642501262929_tmp/tmp_4113554689023405894/.git/')",[132012]
"('Description.java', 'org.junit.runner.Description', 'methodAndClassNamePatternGroupOrDefault', '([\\s\\S]*)\\((.*)\\)', 'testRebaseShouldBeAbleToHandleEmptyLinesInRebaseTodoFile(org.eclipse.jgit.api.RebaseCommandTest)')","[217606, 219092]"
"('URIish.java', 'org.eclipse.jgit.transport.URIish', '<init>', '^([a-z][a-z0-9+-]+)://(?:(?:([^/:@]+)(?::([^\\\\/]+))?@)?((?:[^\\\\/:]+)|(?:\\[[0-9a-f:]+\\]))(?::(\\d+))?((?:/~(?:[^\\\\/]+))?[\\\\/]))?(.+)?$', 'https://1.2.3.4//abc')","[63037, 63221, 64141, 64325, 65245, 65429]"
"('URIish.java', 'org.eclipse.jgit.transport.URIish', '<init>', '^([\\\\/]?((?:[A-Za-z]:)?[\\\\/]?(?:(?:[^\\\\/]+[\\\\/]+)*[^\\\\/]+[\\\\/]*)))$', '/some/dir')","[6011, 6421, 6729, 6849, 7974, 8332, 8452, 8677, 9400, 9520, 9936, 10668, 10788, 11555]"
"('URIish.java', 'org.eclipse.jgit.transport.URIish', '<init>', '^([a-z][a-z0-9+-]+)://(?:(?:([^/:@]+)(?::([^\\\\/]+))?@)?((?:[^\\\\/:]+)|(?:\\[[0-9a-f:]+\\]))(?::(\\d+))?((?:/~(?:[^\\\\/]+))?[\\\\/]))?(.+)?$', 'ssh+git://lusr\\example@example.com:1234/D:\\x')",[31849]
"('URIish.java', 'org.eclipse.jgit.transport.URIish', '<init>', '^([a-z][a-z0-9+-]+)://(?:(?:([^/:@]+)(?::([^\\\\/]+))?@)?((?:[^\\\\/:]+)|(?:\\[[0-9a-f:]+\\]))(?::(\\d+))?((?:/~(?:[^\\\\/]+))?[\\\\/]))?(.+)?$', '/a/b/c.git/')",[66947]
"('Description.java', 'org.junit.runner.Description', 'methodAndClassNamePatternGroupOrDefault', '([\\s\\S]*)\\((.*)\\)', 'testIteratorMethodsContract(org.eclipse.jgit.internal.storage.file.PackIndexV1Test)')","[250112, 250240]"
"('Description.java', 'org.junit.runner.Description', 'methodAndClassNamePatternGroupOrDefault', '([\\s\\S]*)\\((.*)\\)', 'testTwoRangesInOneGroupCase2[OldRule? false](org.eclipse.jgit.ignore.IgnoreRuleSpecialCasesTest)')","[148951, 156056]"
"('URIish.java', 'org.eclipse.jgit.transport.URIish', '<init>', '^([a-z][a-z0-9+-]+)://(?:(?:([^/:@]+)(?::([^\\\\/]+))?@)?((?:[^\\\\/:]+)|(?:\\[[0-9a-f:]+\\]))(?::(\\d+))?((?:/~(?:[^\\\\/]+))?[\\\\/]))?(.+)?$', 'ssh+git://[::1]//')","[56735, 56919, 57839, 58023, 58943, 59127]"
"('URIish.java', 'org.eclipse.jgit.transport.URIish', '<init>', '^([a-z][a-z0-9+-]+)://(?:(?:([^/:@]+)(?::([^\\\\/]+))?@)?((?:[^\\\\/:]+)|(?:\\[[0-9a-f:]+\\]))(?::(\\d+))?((?:/~(?:[^\\\\/]+))?[\\\\/]))?(.+)?$', '/tmp/jgit_test_7866988883983564781_tmp/tmp_1286542265509971418')","[231211, 231341, 231854]"
"('Description.java', 'org.junit.runner.Description', 'methodAndClassNamePatternGroupOrDefault', '([\\s\\S]*)\\((.*)\\)', 'testInvalidTreeBadSorting3(org.eclipse.jgit.lib.ObjectCheckerTest)')","[121385, 123491]"
"('Description.java', 'org.junit.runner.Description', 'methodAndClassNamePatternGroupOrDefault', '([\\s\\S]*)\\((.*)\\)', 'testVerySimpleStarCase1[OldRule? true](org.eclipse.jgit.ignore.IgnoreRuleSpecialCasesTest)')","[152031, 159115]"
"('URIish.java', 'org.eclipse.jgit.transport.URIish', '<init>', '^(file):([\\\\/](?![\\\\/])((?:[A-Za-z]:)?[\\\\/]?(?:(?:[^\\\\/]+[\\\\/]+)*[^\\\\/]+[\\\\/]*)))$', 'http://l usr\\example.com:wtf@1.2.3.4:80//abc')",[20995]
"('Description.java', 'org.junit.runner.Description', 'methodAndClassNamePatternGroupOrDefault', '([\\s\\S]*)\\((.*)\\)', 'testTargetWithoutLeadingSlash[OldRule? true](org.eclipse.jgit.ignore.IgnoreMatcherParametrizedTest)')","[141620, 141942]"
"('URIish.java', 'org.eclipse.jgit.transport.URIish', '<init>', '^([a-z][a-z0-9+-]+)://(?:(?:([^/:@]+)(?::([^\\\\/]+))?@)?((?:[^\\\\/:]+)|(?:\\[[0-9a-f:]+\\]))(?::(\\d+))?((?:/~(?:[^\\\\/]+))?[\\\\/]))?(.+)?$', 'ssh://l usr\\example.com:wtf@1.2.3.4:80/D:\\x')",[11854]
"('Description.java', 'org.junit.runner.Description', 'methodAndClassNamePatternGroupOrDefault', '([\\s\\S]*)\\((.*)\\)', 'testExactRename_OneDeleteManyAdds(org.eclipse.jgit.diff.RenameDetectorTest)')","[93153, 93705]"
"('URIish.java', 'org.eclipse.jgit.transport.URIish', '<init>', '^([a-z][a-z0-9+-]+)://(?:(?:([^/:@]+)(?::([^\\\\/]+))?@)?((?:[^\\\\/:]+)|(?:\\[[0-9a-f:]+\\]))(?::(\\d+))?((?:/~(?:[^\\\\/]+))?[\\\\/]))?(.+)?$', 'https://me@[::1]:80/D:\\x')",[37185]
"('Description.java', 'org.junit.runner.Description', 'methodAndClassNamePatternGroupOrDefault', '([\\s\\S]*)\\((.*)\\)', 'crissCrossMerge_mergeable2(org.eclipse.jgit.merge.RecursiveMergerTest)')","[87676, 87825]"
"('Description.java', 'org.junit.runner.Description', 'methodAndClassNamePatternGroupOrDefault', '([\\s\\S]*)\\((.*)\\)', 'testDeleteLooseAndItsDirectory(org.eclipse.jgit.internal.storage.file.RefUpdateTest)')","[253082, 253916]"
"('URIish.java', 'org.eclipse.jgit.transport.URIish', '<init>', '^(?:([^/:@]+)(?::([^\\\\/]+))?@)?([^\\\\/:]{2,}):([\\\\/](?:(?:[^\\\\/]+[\\\\/]+)*[^\\\\/]+[\\\\/]*))$', '../../foo/bar')","[68941, 69056]"
"('URIish.java', 'org.eclipse.jgit.transport.URIish', '<init>', '^(file):([\\\\/](?![\\\\/])((?:[A-Za-z]:)?[\\\\/]?(?:(?:[^\\\\/]+[\\\\/]+)*[^\\\\/]+[\\\\/]*)))$', 'http://l usr\\example.com@example.com:80/D:\\x')",[34218]
"('Description.java', 'org.junit.runner.Description', 'methodAndClassNamePatternGroupOrDefault', '([\\s\\S]*)\\((.*)\\)', 'testStopOnLastConflictAndContinue(org.eclipse.jgit.api.RebaseCommandTest)')","[217564, 219048]"
"('Description.java', 'org.junit.runner.Description', 'methodAndClassNamePatternGroupOrDefault', '([\\s\\S]*)\\((.*)\\)', 'testFilePathCase0[OldRule? true](org.eclipse.jgit.ignore.IgnoreRuleSpecialCasesTest)')","[151341, 158425]"
"('FastIgnoreRule.java', 'org.eclipse.jgit.ignore.FastIgnoreRule', 'isMatch', '[v-z]', 'c')","[165995, 166049, 166103, 166184]"
"('Description.java', 'org.junit.runner.Description', 'methodAndClassNamePatternGroupOrDefault', '([\\s\\S]*)\\((.*)\\)', 'testALL_IdentityClone(org.eclipse.jgit.treewalk.filter.TreeFilterTest)')","[138486, 138635]"
"('URIish.java', 'org.eclipse.jgit.transport.URIish', '<init>', '^([a-z][a-z0-9+-]+)://(?:(?:([^/:@]+)(?::([^\\\\/]+))?@)?((?:[^\\\\/:]+)|(?:\\[[0-9a-f:]+\\]))(?::(\\d+))?((?:/~(?:[^\\\\/]+))?[\\\\/]))?(.+)?$', 'file:///tmp/jgit_test_6790445454086415234_tmp/tmp_3647197744466266699/.git/.')",[174518]
"('URIish.java', 'org.eclipse.jgit.transport.URIish', '<init>', '^(file):([\\\\/](?![\\\\/])((?:[A-Za-z]:)?[\\\\/]?(?:(?:[^\\\\/]+[\\\\/]+)*[^\\\\/]+[\\\\/]*)))$', 'http://me:wtf@[::1]:80//abc')",[20259]
"('URIish.java', 'org.eclipse.jgit.transport.URIish', '<init>', '^([a-z][a-z0-9+-]+)://(?:(?:([^/:@]+)(?::([^\\\\/]+))?@)?((?:[^\\\\/:]+)|(?:\\[[0-9a-f:]+\\]))(?::(\\d+))?((?:/~(?:[^\\\\/]+))?[\\\\/]))?(.+)?$', 'https://lusr\\example:wtf@example.com:1234/D:\\x')",[24997]
"('Description.java', 'org.junit.runner.Description', 'methodAndClassNamePatternGroupOrDefault', '([\\s\\S]*)\\((.*)\\)', 'testParse_CcNewFile(org.eclipse.jgit.patch.PatchCcTest)')","[196460, 196525]"
"('Description.java', 'org.junit.runner.Description', 'methodAndClassNamePatternGroupOrDefault', '([\\s\\S]*)\\((.*)\\)', 'testFileModeMergeWithDirtyWorkTree(org.eclipse.jgit.api.MergeCommandTest)')","[213765, 214682]"
"('URIish.java', 'org.eclipse.jgit.transport.URIish', '<init>', '^(file):([\\\\/](?![\\\\/])((?:[A-Za-z]:)?[\\\\/]?(?:(?:[^\\\\/]+[\\\\/]+)*[^\\\\/]+[\\\\/]*)))$', 'ssh://me@example.com:1234/D:\\x')",[26078]
"('URIish.java', 'org.eclipse.jgit.transport.URIish', '<init>', '^(file):([\\\\/](?![\\\\/])((?:[A-Za-z]:)?[\\\\/]?(?:(?:[^\\\\/]+[\\\\/]+)*[^\\\\/]+[\\\\/]*)))$', 'ssh://lusr\\example@example.com:80/D:/x')",[28652]
"('URIish.java', 'org.eclipse.jgit.transport.URIish', 'getHumanishName', '^([\\\\/]?((?:[A-Za-z]:)?[\\\\/]?(?:(?:[^\\\\/]+[\\\\/]+)*[^\\\\/]+[\\\\/]*)))$', '/a/b/c//')","[70068, 70804]"
"('URIish.java', 'org.eclipse.jgit.transport.URIish', '<init>', '^(file):([\\\\/](?![\\\\/])((?:[A-Za-z]:)?[\\\\/]?(?:(?:[^\\\\/]+[\\\\/]+)*[^\\\\/]+[\\\\/]*)))$', 'ssh+git://me:wtf@1.2.3.4:80//')",[14695]
"('URIish.java', 'org.eclipse.jgit.transport.URIish', '<init>', '^([a-z][a-z0-9+-]+)://(?:(?:([^/:@]+)(?::([^\\\\/]+))?@)?((?:[^\\\\/:]+)|(?:\\[[0-9a-f:]+\\]))(?::(\\d+))?((?:/~(?:[^\\\\/]+))?[\\\\/]))?(.+)?$', 'http://l usr\\example.com:wtf@1.2.3.4:80/D:\\x')",[21133]
"('Description.java', 'org.junit.runner.Description', 'methodAndClassNamePatternGroupOrDefault', '([\\s\\S]*)\\((.*)\\)', 'testRenamedBoundLineDelete(org.eclipse.jgit.api.blame.BlameGeneratorTest)')","[235684, 235749]"
"('URIish.java', 'org.eclipse.jgit.transport.URIish', '<init>', '^(file):([\\\\/](?![\\\\/])((?:[A-Za-z]:)?[\\\\/]?(?:(?:[^\\\\/]+[\\\\/]+)*[^\\\\/]+[\\\\/]*)))$', 'ssh+git://l usr\\example.com@[::1]:80//abc')",[31550]
"('ChangeIdUtil.java', 'org.eclipse.jgit.util.ChangeIdUtil', 'insertId', '^(Bug|Issue)[a-zA-Z0-9-]*:.*$', '[bracket]')",[187104]
"('Description.java', 'org.junit.runner.Description', 'methodAndClassNamePatternGroupOrDefault', '([\\s\\S]*)\\((.*)\\)', 'testSetFive_ReverseOrder(org.eclipse.jgit.notes.LeafBucketTest)')","[198059, 198291]"
"('URIish.java', 'org.eclipse.jgit.transport.URIish', '<init>', '^(file):([\\\\/](?![\\\\/])((?:[A-Za-z]:)?[\\\\/]?(?:(?:[^\\\\/]+[\\\\/]+)*[^\\\\/]+[\\\\/]*)))$', 'ssh://l usr\\example.com@[::1]:80//abc')",[28238]
"('Description.java', 'org.junit.runner.Description', 'methodAndClassNamePatternGroupOrDefault', '([\\s\\S]*)\\((.*)\\)', 'testSimple(org.eclipse.jgit.revwalk.RevWalkMergeBaseTest)')","[81968, 82099]"
"('Description.java', 'org.junit.runner.Description', 'methodAndClassNamePatternGroupOrDefault', '([\\s\\S]*)\\((.*)\\)', 'testVerySimpleGroupCase0(org.eclipse.jgit.fnmatch.FileNameMatcherTest)')","[103981, 107383]"
"('Description.java', 'org.junit.runner.Description', 'methodAndClassNamePatternGroupOrDefault', '([\\s\\S]*)\\((.*)\\)', 'testHEAD(org.eclipse.jgit.lib.RepositoryResolveTest)')","[125197, 125662]"
"('Description.java', 'org.junit.runner.Description', 'methodAndClassNamePatternGroupOrDefault', '([\\s\\S]*)\\((.*)\\)', 'testUnsupportedGroupCase0(org.eclipse.jgit.fnmatch.FileNameMatcherTest)')","[102679, 106019]"
"('Description.java', 'org.junit.runner.Description', 'methodAndClassNamePatternGroupOrDefault', '([\\s\\S]*)\\((.*)\\)', 'testSquashFastForward(org.eclipse.jgit.api.MergeCommandTest)')","[214227, 215166]"
"('URIish.java', 'org.eclipse.jgit.transport.URIish', '<init>', '^([a-z][a-z0-9+-]+)://(?:(?:([^/:@]+)(?::([^\\\\/]+))?@)?((?:[^\\\\/:]+)|(?:\\[[0-9a-f:]+\\]))(?::(\\d+))?((?:/~(?:[^\\\\/]+))?[\\\\/]))?(.+)?$', 'ssh://me@example.com:80//')",[26147]
"('URIish.java', 'org.eclipse.jgit.transport.URIish', '<init>', '^([a-z][a-z0-9+-]+)://(?:(?:([^/:@]+)(?::([^\\\\/]+))?@)?((?:[^\\\\/:]+)|(?:\\[[0-9a-f:]+\\]))(?::(\\d+))?((?:/~(?:[^\\\\/]+))?[\\\\/]))?(.+)?$', 'http://me@1.2.3.4:1234/D:\\x')",[33321]
"('URIish.java', 'org.eclipse.jgit.transport.URIish', '<init>', '^([a-z][a-z0-9+-]+)://(?:(?:([^/:@]+)(?::([^\\\\/]+))?@)?((?:[^\\\\/:]+)|(?:\\[[0-9a-f:]+\\]))(?::(\\d+))?((?:/~(?:[^\\\\/]+))?[\\\\/]))?(.+)?$', 'http://lusr\\example@[::1]:1234/D:\\x')",[35897]
"('Description.java', 'org.junit.runner.Description', 'methodAndClassNamePatternGroupOrDefault', '([\\s\\S]*)\\((.*)\\)', 'testMarkUninterestingPropagation(org.eclipse.jgit.revwalk.ObjectWalkTest)')","[76427, 76620]"
"('URIish.java', 'org.eclipse.jgit.transport.URIish', '<init>', '^([a-z][a-z0-9+-]+)://(?:(?:([^/:@]+)(?::([^\\\\/]+))?@)?((?:[^\\\\/:]+)|(?:\\[[0-9a-f:]+\\]))(?::(\\d+))?((?:/~(?:[^\\\\/]+))?[\\\\/]))?(.+)?$', 'https://lusr\\example@example.com:1234/D:/x')",[38427]
"('Description.java', 'org.junit.runner.Description', 'methodAndClassNamePatternGroupOrDefault', '([\\s\\S]*)\\((.*)\\)', 'testSignedOffBy_SkipNonFooter(org.eclipse.jgit.revwalk.FooterLineTest)')","[77649, 78061]"
"('URIish.java', 'org.eclipse.jgit.transport.URIish', '<init>', '^([a-z][a-z0-9+-]+)://(?:(?:([^/:@]+)(?::([^\\\\/]+))?@)?((?:[^\\\\/:]+)|(?:\\[[0-9a-f:]+\\]))(?::(\\d+))?((?:/~(?:[^\\\\/]+))?[\\\\/]))?(.+)?$', 'ssh+git://me:wtf@[::1]:1234/D:\\x')",[15326]
"('Description.java', 'org.junit.runner.Description', 'methodAndClassNamePatternGroupOrDefault', '([\\s\\S]*)\\((.*)\\)', 'testDegenerate_InsertMiddle(org.eclipse.jgit.diff.MyersDiffTest)')","[97253, 97690]"
"('Description.java', 'org.junit.runner.Description', 'methodAndClassNamePatternGroupOrDefault', '([\\s\\S]*)\\((.*)\\)', 'testEscapedBackslash[OldRule? true](org.eclipse.jgit.ignore.IgnoreRuleSpecialCasesTest)')","[151226, 158310]"
"('Description.java', 'org.junit.runner.Description', 'methodAndClassNamePatternGroupOrDefault', '([\\s\\S]*)\\((.*)\\)', 'commandWithEmptyUri(org.eclipse.jgit.submodule.SubmoduleAddTest)')","[108897, 109072]"
"('URIish.java', 'org.eclipse.jgit.transport.URIish', '<init>', '^(file):([\\\\/](?![\\\\/])((?:[A-Za-z]:)?[\\\\/]?(?:(?:[^\\\\/]+[\\\\/]+)*[^\\\\/]+[\\\\/]*)))$', 'http://lusr\\example@1.2.3.4/D:\\x')","[48754, 48938]"
"('Description.java', 'org.junit.runner.Description', 'methodAndClassNamePatternGroupOrDefault', '([\\s\\S]*)\\((.*)\\)', 'testSignedOffBy_OneUserWithLF(org.eclipse.jgit.revwalk.FooterLineTest)')","[77397, 77797]"
"('URIish.java', 'org.eclipse.jgit.transport.URIish', '<init>', '^([a-z][a-z0-9+-]+)://(?:(?:([^/:@]+)(?::([^\\\\/]+))?@)?((?:[^\\\\/:]+)|(?:\\[[0-9a-f:]+\\]))(?::(\\d+))?((?:/~(?:[^\\\\/]+))?[\\\\/]))?(.+)?$', 'https://lusr\\example@1.2.3.4:80/D:\\x')",[39025]
"('FastIgnoreRule.java', 'org.eclipse.jgit.ignore.FastIgnoreRule', 'isMatch', '[\\p{XDigit}]', '.')",[163154]
"('Description.java', 'org.junit.runner.Description', 'methodAndClassNamePatternGroupOrDefault', '([\\s\\S]*)\\((.*)\\)', 'testOnlyOption_f1_6_e(org.eclipse.jgit.api.CommitOnlyTest)')","[236542, 238624]"
"('Description.java', 'org.junit.runner.Description', 'methodAndClassNamePatternGroupOrDefault', '([\\s\\S]*)\\((.*)\\)', 'testOnlyOption_f1_1_f2_14_b(org.eclipse.jgit.api.CommitOnlyTest)')","[237770, 239878]"
"('URIish.java', 'org.eclipse.jgit.transport.URIish', '<init>', '^([a-z][a-z0-9+-]+)://(?:(?:([^/:@]+)(?::([^\\\\/]+))?@)?((?:[^\\\\/:]+)|(?:\\[[0-9a-f:]+\\]))(?::(\\d+))?((?:/~(?:[^\\\\/]+))?[\\\\/]))?(.+)?$', 'ssh://l usr\\example.com:wtf@[::1]:1234/D:/x')",[11992]
"('QuotedString.java', 'org.eclipse.jgit.util.QuotedString$BourneUserPathStyle', 'quote', '^~[A-Za-z0-9_-]+$', '~foo/a')","[193394, 193418]"
"('Description.java', 'org.junit.runner.Description', 'methodAndClassNamePatternGroupOrDefault', '([\\s\\S]*)\\((.*)\\)', 'testMultipleDeletions(org.eclipse.jgit.api.MergeCommandTest)')","[213807, 214726]"
"('Description.java', 'org.junit.runner.Description', 'methodAndClassNamePatternGroupOrDefault', '([\\s\\S]*)\\((.*)\\)', 'testSpecialGroupCase8(org.eclipse.jgit.fnmatch.FileNameMatcherTest)')","[101083, 104347]"
"('URIish.java', 'org.eclipse.jgit.transport.URIish', '<init>', '^(file):([\\\\/](?![\\\\/])((?:[A-Za-z]:)?[\\\\/]?(?:(?:[^\\\\/]+[\\\\/]+)*[^\\\\/]+[\\\\/]*)))$', 'https://lusr\\example:wtf@[::1]:1234//')",[25572]
"('Description.java', 'org.junit.runner.Description', 'methodAndClassNamePatternGroupOrDefault', '([\\s\\S]*)\\((.*)\\)', 'testVerySimplePatternCase2[OldRule? false](org.eclipse.jgit.ignore.IgnoreRuleSpecialCasesTest)')","[146720, 153825]"
"('Description.java', 'org.junit.runner.Description', 'methodAndClassNamePatternGroupOrDefault', '([\\s\\S]*)\\((.*)\\)', 'testNoAgainstOneModification(org.eclipse.jgit.merge.MergeAlgorithmTest)')","[87267, 87575]"
"('URIish.java', 'org.eclipse.jgit.transport.URIish', '<init>', '^([a-z][a-z0-9+-]+)://(?:(?:([^/:@]+)(?::([^\\\\/]+))?@)?((?:[^\\\\/:]+)|(?:\\[[0-9a-f:]+\\]))(?::(\\d+))?((?:/~(?:[^\\\\/]+))?[\\\\/]))?(.+)?$', 'https://lusr\\example@[::1]/D:/x')","[52411, 52595]"
"('URIish.java', 'org.eclipse.jgit.transport.URIish', '<init>', '^(file):([\\\\/](?![\\\\/])((?:[A-Za-z]:)?[\\\\/]?(?:(?:[^\\\\/]+[\\\\/]+)*[^\\\\/]+[\\\\/]*)))$', 'file:/tmp/jgit_test_1473506600966761045_tmp/tmp_6676395047777785088/.git/')",[133535]
"('Description.java', 'org.junit.runner.Description', 'methodAndClassNamePatternGroupOrDefault', '([\\s\\S]*)\\((.*)\\)', 'testALot(org.eclipse.jgit.transport.URIishTest)')","[1312, 4486]"
"('URIish.java', 'org.eclipse.jgit.transport.URIish', '<init>', '^(?:([^/:@]+)(?::([^\\\\/]+))?@)?([^\\\\/:]{2,}):([\\\\/](?:(?:[^\\\\/]+[\\\\/]+)*[^\\\\/]+[\\\\/]*))$', 'D:/m y')","[69493, 69608]"
"('URIish.java', 'org.eclipse.jgit.transport.URIish', '<init>', '^([a-z][a-z0-9+-]+)://(?:(?:([^/:@]+)(?::([^\\\\/]+))?@)?((?:[^\\\\/:]+)|(?:\\[[0-9a-f:]+\\]))(?::(\\d+))?((?:/~(?:[^\\\\/]+))?[\\\\/]))?(.+)?$', 'https://l usr\\example.com:wtf@example.com:1234//')",[23755]
"('URIish.java', 'org.eclipse.jgit.transport.URIish', '<init>', '^(file):([\\\\/](?![\\\\/])((?:[A-Za-z]:)?[\\\\/]?(?:(?:[^\\\\/]+[\\\\/]+)*[^\\\\/]+[\\\\/]*)))$', 'ssh://me@example.com:80//abc')",[26170]
"('URIish.java', 'org.eclipse.jgit.transport.URIish', '<init>', '^([a-z][a-z0-9+-]+)://(?:(?:([^/:@]+)(?::([^\\\\/]+))?@)?((?:[^\\\\/:]+)|(?:\\[[0-9a-f:]+\\]))(?::(\\d+))?((?:/~(?:[^\\\\/]+))?[\\\\/]))?(.+)?$', 'https://l usr\\example.com@[::1]//')","[51215, 51399]"
"('URIish.java', 'org.eclipse.jgit.transport.URIish', '<init>', '^(file):([\\\\/](?![\\\\/])((?:[A-Za-z]:)?[\\\\/]?(?:(?:[^\\\\/]+[\\\\/]+)*[^\\\\/]+[\\\\/]*)))$', 'file:///tmp/jgit_test_1849034642501262929_tmp/tmp_4113554689023405894/.git/')",[132049]
"('URIish.java', 'org.eclipse.jgit.transport.URIish', '<init>', '^([a-z][a-z0-9+-]+)://(?:(?:([^/:@]+)(?::([^\\\\/]+))?@)?((?:[^\\\\/:]+)|(?:\\[[0-9a-f:]+\\]))(?::(\\d+))?((?:/~(?:[^\\\\/]+))?[\\\\/]))?(.+)?$', 'ssh+git://lusr\\example:wtf@example.com:80/D:/x')",[17377]
"('URIish.java', 'org.eclipse.jgit.transport.URIish', '<init>', '^(file):([\\\\/](?![\\\\/])((?:[A-Za-z]:)?[\\\\/]?(?:(?:[^\\\\/]+[\\\\/]+)*[^\\\\/]+[\\\\/]*)))$', 'ssh+git://lusr\\example@[::1]:80/D:/x')",[32700]
"('URIish.java', 'org.eclipse.jgit.transport.URIish', '<init>', '^([a-z][a-z0-9+-]+)://(?:(?:([^/:@]+)(?::([^\\\\/]+))?@)?((?:[^\\\\/:]+)|(?:\\[[0-9a-f:]+\\]))(?::(\\d+))?((?:/~(?:[^\\\\/]+))?[\\\\/]))?(.+)?$', 'http://me@example.com:80/D:/x')",[33091]
"('URIish.java', 'org.eclipse.jgit.transport.URIish', '<init>', '^([a-z][a-z0-9+-]+)://(?:(?:([^/:@]+)(?::([^\\\\/]+))?@)?((?:[^\\\\/:]+)|(?:\\[[0-9a-f:]+\\]))(?::(\\d+))?((?:/~(?:[^\\\\/]+))?[\\\\/]))?(.+)?$', 'ssh+git://me:wtf@1.2.3.4:80//abc')",[14764]
"('Description.java', 'org.junit.runner.Description', 'methodAndClassNamePatternGroupOrDefault', '([\\s\\S]*)\\((.*)\\)', 'testReadACK_ACK1(org.eclipse.jgit.transport.PacketLineInTest)')","[18112, 19357]"
"('URIish.java', 'org.eclipse.jgit.transport.URIish', '<init>', '^([a-z][a-z0-9+-]+)://(?:(?:([^/:@]+)(?::([^\\\\/]+))?@)?((?:[^\\\\/:]+)|(?:\\[[0-9a-f:]+\\]))(?::(\\d+))?((?:/~(?:[^\\\\/]+))?[\\\\/]))?(.+)?$', 'https://lusr\\example@1.2.3.4:1234/D:\\x')",[38841]
"('ChangeIdUtil.java', 'org.eclipse.jgit.util.ChangeIdUtil', 'indexOfFirstFooterLine', '(^[a-zA-Z0-9-]+:(?!//).*$)', '[bracket]')",[186976]
"('Description.java', 'org.junit.runner.Description', 'methodAndClassNamePatternGroupOrDefault', '([\\s\\S]*)\\((.*)\\)', 'testTrackingRefUpdateOnReject(org.eclipse.jgit.transport.PushProcessTest)')","[73963, 74323]"
"('Description.java', 'org.junit.runner.Description', 'methodAndClassNamePatternGroupOrDefault', '([\\s\\S]*)\\((.*)\\)', 'multipleStashedCommits(org.eclipse.jgit.api.StashListCommandTest)')","[226565, 226650]"
"('Description.java', 'org.junit.runner.Description', 'methodAndClassNamePatternGroupOrDefault', '([\\s\\S]*)\\((.*)\\)', 'testConflictingFromMultipleCreations(org.eclipse.jgit.lib.IndexDiffTest)')","[110553, 110903]"
"('Description.java', 'org.junit.runner.Description', 'methodAndClassNamePatternGroupOrDefault', '([\\s\\S]*)\\((.*)\\)', 'testRebaseWithAutoStash(org.eclipse.jgit.api.RebaseCommandTest)')","[218467, 219994]"
"('URIish.java', 'org.eclipse.jgit.transport.URIish', '<init>', '^(file):([\\\\/](?![\\\\/])((?:[A-Za-z]:)?[\\\\/]?(?:(?:[^\\\\/]+[\\\\/]+)*[^\\\\/]+[\\\\/]*)))$', 'ssh://example.com//abc')","[52710, 52894, 53814, 53998, 54918, 55102]"
"('Description.java', 'org.junit.runner.Description', 'methodAndClassNamePatternGroupOrDefault', '([\\s\\S]*)\\((.*)\\)', 'LOCALE(org.eclipse.jgit.util.GitDateFormatterTest)')","[172093, 172283]"
"('URIish.java', 'org.eclipse.jgit.transport.URIish', '<init>', '^(file):([\\\\/](?![\\\\/])((?:[A-Za-z]:)?[\\\\/]?(?:(?:[^\\\\/]+[\\\\/]+)*[^\\\\/]+[\\\\/]*)))$', '/tmp/jgit_test_3983781403271311376_tmp/tmp_8902236642966420184')","[222222, 222347, 222599, 222811]"
"('Description.java', 'org.junit.runner.Description', 'methodAndClassNamePatternGroupOrDefault', '([\\s\\S]*)\\((.*)\\)', 'testRenameOverExistingNonEmptyDirectory(org.eclipse.jgit.util.FileUtilTest)')","[176617, 176958]"
"('URIish.java', 'org.eclipse.jgit.transport.URIish', '<init>', '^(file):([\\\\/](?![\\\\/])((?:[A-Za-z]:)?[\\\\/]?(?:(?:[^\\\\/]+[\\\\/]+)*[^\\\\/]+[\\\\/]*)))$', 'ssh+git://l usr\\example.com:wtf@[::1]:80/D:\\x')",[17009]
"('URIish.java', 'org.eclipse.jgit.transport.URIish', '<init>', '^(file):([\\\\/](?![\\\\/])((?:[A-Za-z]:)?[\\\\/]?(?:(?:[^\\\\/]+[\\\\/]+)*[^\\\\/]+[\\\\/]*)))$', 'ssh://lusr\\example:wtf@example.com:80/D:/x')",[12641]
"('FastIgnoreRule.java', 'org.eclipse.jgit.ignore.FastIgnoreRule', 'isMatch', '[\\p{Cntrl}]', '\x07')",[160940]
"('Description.java', 'org.junit.runner.Description', 'methodAndClassNamePatternGroupOrDefault', '([\\s\\S]*)\\((.*)\\)', 'testSuccessfulContentMergeAndDirtyworkingTree(org.eclipse.jgit.api.MergeCommandTest)')","[214101, 215034]"
"('Description.java', 'org.junit.runner.Description', 'methodAndClassNamePatternGroupOrDefault', '([\\s\\S]*)\\((.*)\\)', 'testDirectoryFileConflicts_6b(org.eclipse.jgit.lib.DirCacheCheckoutTest)')","[116746, 117732]"
"('Description.java', 'org.junit.runner.Description', 'methodAndClassNamePatternGroupOrDefault', '([\\s\\S]*)\\((.*)\\)', 'test3_FromString(org.eclipse.jgit.lib.AbbreviatedObjectIdTest)')","[114620, 115160]"
"('URIish.java', 'org.eclipse.jgit.transport.URIish', '<init>', '^([\\\\/]?((?:[A-Za-z]:)?[\\\\/]?(?:(?:[^\\\\/]+[\\\\/]+)*[^\\\\/]+[\\\\/]*)))$', '/tmp/jgit_test_1653911944562620756_tmp/tmp_8778582607667217527')","[233171, 233316, 234001]"
"('Description.java', 'org.junit.runner.Description', 'methodAndClassNamePatternGroupOrDefault', '([\\s\\S]*)\\((.*)\\)', 'testTargetWithoutLeadingSlash[OldRule? false](org.eclipse.jgit.ignore.IgnoreMatcherParametrizedTest)')","[141438, 141781]"
"('URIish.java', 'org.eclipse.jgit.transport.URIish', '<init>', '^(file):([\\\\/](?![\\\\/])((?:[A-Za-z]:)?[\\\\/]?(?:(?:[^\\\\/]+[\\\\/]+)*[^\\\\/]+[\\\\/]*)))$', 'ssh://lusr\\example@1.2.3.4:1234//')",[28744]
"('URIish.java', 'org.eclipse.jgit.transport.URIish', '<init>', '^(file):([\\\\/](?![\\\\/])((?:[A-Za-z]:)?[\\\\/]?(?:(?:[^\\\\/]+[\\\\/]+)*[^\\\\/]+[\\\\/]*)))$', 'ssh+git://l usr\\example.com:wtf@1.2.3.4:80//abc')",[16549]
"('URIish.java', 'org.eclipse.jgit.transport.URIish', '<init>', '^(file):([\\\\/](?![\\\\/])((?:[A-Za-z]:)?[\\\\/]?(?:(?:[^\\\\/]+[\\\\/]+)*[^\\\\/]+[\\\\/]*)))$', 'https://me:wtf@1.2.3.4:80/D:\\x')",[23318]
"('URIish.java', 'org.eclipse.jgit.transport.URIish', '<init>', '^([\\\\/]?((?:[A-Za-z]:)?[\\\\/]?(?:(?:[^\\\\/]+[\\\\/]+)*[^\\\\/]+[\\\\/]*)))$', '/tmp/jgit_test_873718593406949091_tmp/tmp_6143507308402612209.git')",[76855]
"('URIish.java', 'org.eclipse.jgit.transport.URIish', '<init>', '^(file):([\\\\/](?![\\\\/])((?:[A-Za-z]:)?[\\\\/]?(?:(?:[^\\\\/]+[\\\\/]+)*[^\\\\/]+[\\\\/]*)))$', 'https://me:wtf@1.2.3.4:1234/D:/x')",[23088]
"('Description.java', 'org.junit.runner.Description', 'methodAndClassNamePatternGroupOrDefault', '([\\s\\S]*)\\((.*)\\)', 'testOnlyOption_f1_1_e(org.eclipse.jgit.api.CommitOnlyTest)')","[236017, 238074]"
"('URIish.java', 'org.eclipse.jgit.transport.URIish', '<init>', '^(file):([\\\\/](?![\\\\/])((?:[A-Za-z]:)?[\\\\/]?(?:(?:[^\\\\/]+[\\\\/]+)*[^\\\\/]+[\\\\/]*)))$', 'user@example.com:some/p ath')","[68412, 68481]"
"('URIish.java', 'org.eclipse.jgit.transport.URIish', '<init>', '^(file):([\\\\/](?![\\\\/])((?:[A-Za-z]:)?[\\\\/]?(?:(?:[^\\\\/]+[\\\\/]+)*[^\\\\/]+[\\\\/]*)))$', 'git://example.com/D:/m y')","[70505, 70551]"
"('Description.java', 'org.junit.runner.Description', 'methodAndClassNamePatternGroupOrDefault', '([\\s\\S]*)\\((.*)\\)', 'testMultipleEscapedCharacters1[OldRule? true](org.eclipse.jgit.ignore.IgnoreRuleSpecialCasesTest)')","[150674, 157758]"
"('URIish.java', 'org.eclipse.jgit.transport.URIish', '<init>', '^([a-z][a-z0-9+-]+)://(?:(?:([^/:@]+)(?::([^\\\\/]+))?@)?((?:[^\\\\/:]+)|(?:\\[[0-9a-f:]+\\]))(?::(\\d+))?((?:/~(?:[^\\\\/]+))?[\\\\/]))?(.+)?$', 'http://lusr\\example:wtf@1.2.3.4:80/D:/x')",[22191]
"('URIish.java', 'org.eclipse.jgit.transport.URIish', '<init>', '^(file):([\\\\/](?![\\\\/])((?:[A-Za-z]:)?[\\\\/]?(?:(?:[^\\\\/]+[\\\\/]+)*[^\\\\/]+[\\\\/]*)))$', 'ssh://lusr\\example:wtf@example.com:1234//')",[12245]
"('Description.java', 'org.junit.runner.Description', 'methodAndClassNamePatternGroupOrDefault', '([\\s\\S]*)\\((.*)\\)', 'testGetRefs_HeadsOnly_AllPacked1(org.eclipse.jgit.internal.storage.file.RefDirectoryTest)')","[257980, 259166]"
"('Description.java', 'org.junit.runner.Description', 'methodAndClassNamePatternGroupOrDefault', '([\\s\\S]*)\\((.*)\\)', 'testWhitespaceMerge(org.eclipse.jgit.api.BlameCommandTest)')","[244537, 244923]"
"('URIish.java', 'org.eclipse.jgit.transport.URIish', '<init>', '^(file):([\\\\/](?![\\\\/])((?:[A-Za-z]:)?[\\\\/]?(?:(?:[^\\\\/]+[\\\\/]+)*[^\\\\/]+[\\\\/]*)))$', 'ssh://lusr\\example:wtf@example.com:80/D:\\x')",[12687]
"('Description.java', 'org.junit.runner.Description', 'methodAndClassNamePatternGroupOrDefault', '([\\s\\S]*)\\((.*)\\)', 'testRebasePreservingMergesWithUnrelatedSide1(org.eclipse.jgit.api.RebaseCommandTest)')","[217690, 219180]"
"('Description.java', 'org.junit.runner.Description', 'methodAndClassNamePatternGroupOrDefault', '([\\s\\S]*)\\((.*)\\)', 'testDiffModified(org.eclipse.jgit.api.DiffCommandTest)')","[234350, 234477]"
"('Description.java', 'org.junit.runner.Description', 'methodAndClassNamePatternGroupOrDefault', '([\\s\\S]*)\\((.*)\\)', 'testNewNamespaceConflictWithPackedPrefixNameExists(org.eclipse.jgit.internal.storage.file.RefUpdateTest)')","[252788, 253608]"
"('URIish.java', 'org.eclipse.jgit.transport.URIish', '<init>', '^(file):([\\\\/](?![\\\\/])((?:[A-Za-z]:)?[\\\\/]?(?:(?:[^\\\\/]+[\\\\/]+)*[^\\\\/]+[\\\\/]*)))$', 'https://lusr\\example@[::1]:80/D:/x')",[39324]
"('URIish.java', 'org.eclipse.jgit.transport.URIish', '<init>', '^(file):([\\\\/](?![\\\\/])((?:[A-Za-z]:)?[\\\\/]?(?:(?:[^\\\\/]+[\\\\/]+)*[^\\\\/]+[\\\\/]*)))$', 'http://me@example.com/D:/x')","[46132, 46316]"
"('Description.java', 'org.junit.runner.Description', 'methodAndClassNamePatternGroupOrDefault', '([\\s\\S]*)\\((.*)\\)', 'testSplitLastColon(org.eclipse.jgit.transport.RefSpecTest)')","[14423, 15952]"
"('Description.java', 'org.junit.runner.Description', 'methodAndClassNamePatternGroupOrDefault', '([\\s\\S]*)\\((.*)\\)', 'testOnlyOption_f1_5_c(org.eclipse.jgit.api.CommitOnlyTest)')","[236395, 238470]"
"('Description.java', 'org.junit.runner.Description', 'methodAndClassNamePatternGroupOrDefault', '([\\s\\S]*)\\((.*)\\)', 'crissCrossMerge_ParentsNotMergeable(org.eclipse.jgit.merge.RecursiveMergerTest)')","[87760, 87913]"
"('URIish.java', 'org.eclipse.jgit.transport.URIish', '<init>', '^([a-z][a-z0-9+-]+)://(?:(?:([^/:@]+)(?::([^\\\\/]+))?@)?((?:[^\\\\/:]+)|(?:\\[[0-9a-f:]+\\]))(?::(\\d+))?((?:/~(?:[^\\\\/]+))?[\\\\/]))?(.+)?$', 'ssh+git://lusr\\example:wtf@example.com:1234//abc')",[17124]
"('URIish.java', 'org.eclipse.jgit.transport.URIish', '<init>', '^(file):([\\\\/](?![\\\\/])((?:[A-Za-z]:)?[\\\\/]?(?:(?:[^\\\\/]+[\\\\/]+)*[^\\\\/]+[\\\\/]*)))$', 'ssh+git://lusr\\example:wtf@1.2.3.4:1234//abc')",[17492]
"('Description.java', 'org.junit.runner.Description', 'methodAndClassNamePatternGroupOrDefault', '([\\s\\S]*)\\((.*)\\)', 'testMaxObjectSizeDeltaResultSize(org.eclipse.jgit.transport.PackParserTest)')","[72239, 72550]"
"('Description.java', 'org.junit.runner.Description', 'methodAndClassNamePatternGroupOrDefault', '([\\s\\S]*)\\((.*)\\)', 'testAsteriskDot[OldRule? true](org.eclipse.jgit.ignore.FastIgnoreRuleTest)')","[164638, 165374]"
"('Description.java', 'org.junit.runner.Description', 'methodAndClassNamePatternGroupOrDefault', '([\\s\\S]*)\\((.*)\\)', 'testEncodeMatchesDecode(org.eclipse.jgit.util.Base64Test)')","[183427, 183515]"
"('Description.java', 'org.junit.runner.Description', 'methodAndClassNamePatternGroupOrDefault', '([\\s\\S]*)\\((.*)\\)', 'testTwoLineNoLF(org.eclipse.jgit.util.RawParseUtils_LineMapTest)')","[179190, 179300]"
"('URIish.java', 'org.eclipse.jgit.transport.URIish', '<init>', '^(file):([\\\\/](?![\\\\/])((?:[A-Za-z]:)?[\\\\/]?(?:(?:[^\\\\/]+[\\\\/]+)*[^\\\\/]+[\\\\/]*)))$', 'https://me@1.2.3.4:1234//')",[36472]
"('URIish.java', 'org.eclipse.jgit.transport.URIish', '<init>', '^(file):([\\\\/](?![\\\\/])((?:[A-Za-z]:)?[\\\\/]?(?:(?:[^\\\\/]+[\\\\/]+)*[^\\\\/]+[\\\\/]*)))$', 'ssh+git://l usr\\example.com@1.2.3.4:80/D:/x')",[31228]
"('Description.java', 'org.junit.runner.Description', 'methodAndClassNamePatternGroupOrDefault', '([\\s\\S]*)\\((.*)\\)', 'testRules(org.eclipse.jgit.ignore.IgnoreNodeTest)')","[140437, 140732]"
"('Description.java', 'org.junit.runner.Description', 'methodAndClassNamePatternGroupOrDefault', '([\\s\\S]*)\\((.*)\\)', 'test007_manyFileLookup(org.eclipse.jgit.lib.T0002_TreeTest)')","[119880, 120180]"
"('URIish.java', 'org.eclipse.jgit.transport.URIish', '<init>', '^(file):([\\\\/](?![\\\\/])((?:[A-Za-z]:)?[\\\\/]?(?:(?:[^\\\\/]+[\\\\/]+)*[^\\\\/]+[\\\\/]*)))$', 'file:///tmp/jgit_test_1342417779279722556_tmp/tmp_9074189985993827829/.git/')",[174351]
"('FastIgnoreRule.java', 'org.eclipse.jgit.ignore.FastIgnoreRule', 'isMatch', '.r[a-c]', 'new')","[144596, 144785, 144974]"
"('Description.java', 'org.junit.runner.Description', 'methodAndClassNamePatternGroupOrDefault', '([\\s\\S]*)\\((.*)\\)', 'testDirectoryFileConflicts_6(org.eclipse.jgit.lib.DirCacheCheckoutTest)')","[116368, 117336]"
"('URIish.java', 'org.eclipse.jgit.transport.URIish', '<init>', '^(?:([^/:@]+)(?::([^\\\\/]+))?@)?((?:[^\\\\/:]+)|(?:\\[[0-9a-f:]+\\])):((?:(?:/~(?:[^\\\\/]+))[\\\\/])?(?:(?:[^\\\\/]+[\\\\/]+)*[^\\\\/]+[\\\\/]*))$', '/tmp/jgit_test_5311018649809901760_tmp/tmp_2572555623416741506')","[225597, 225732]"
"('Description.java', 'org.junit.runner.Description', 'methodAndClassNamePatternGroupOrDefault', '([\\s\\S]*)\\((.*)\\)', 'testPunctGroupCase2[OldRule? false](org.eclipse.jgit.ignore.IgnoreRuleSpecialCasesTest)')","[147732, 154837]"
"('Description.java', 'org.junit.runner.Description', 'methodAndClassNamePatternGroupOrDefault', '([\\s\\S]*)\\((.*)\\)', 'testType_Empty(org.eclipse.jgit.diff.EditTest)')","[99829, 100167]"
"('URIish.java', 'org.eclipse.jgit.transport.URIish', '<init>', '^(file):([\\\\/](?![\\\\/])((?:[A-Za-z]:)?[\\\\/]?(?:(?:[^\\\\/]+[\\\\/]+)*[^\\\\/]+[\\\\/]*)))$', 'ssh+git://[::1]/D:/x')","[56804, 56988, 57908, 58092, 59012, 59196]"
"('URIish.java', 'org.eclipse.jgit.transport.URIish', '<init>', '^(?:([^/:@]+)(?::([^\\\\/]+))?@)?((?:[^\\\\/:]+)|(?:\\[[0-9a-f:]+\\])):((?:(?:/~(?:[^\\\\/]+))[\\\\/])?(?:(?:[^\\\\/]+[\\\\/]+)*[^\\\\/]+[\\\\/]*))$', '/tmp/jgit_test_2860132279759404209_tmp/tmp_6329217645268813068')","[229519, 229654, 230082]"
"('URIish.java', 'org.eclipse.jgit.transport.URIish', '<init>', '^([a-z][a-z0-9+-]+)://(?:(?:([^/:@]+)(?::([^\\\\/]+))?@)?((?:[^\\\\/:]+)|(?:\\[[0-9a-f:]+\\]))(?::(\\d+))?((?:/~(?:[^\\\\/]+))?[\\\\/]))?(.+)?$', 'ssh+git://lusr\\example@1.2.3.4:80//abc')",[32309]
"('Description.java', 'org.junit.runner.Description', 'methodAndClassNamePatternGroupOrDefault', '([\\s\\S]*)\\((.*)\\)', 'testIgnoreNonExistingObjects(org.eclipse.jgit.internal.storage.file.PackWriterTest)')","[251491, 251948]"
"('Description.java', 'org.junit.runner.Description', 'methodAndClassNamePatternGroupOrDefault', '([\\s\\S]*)\\((.*)\\)', 'testRules4thru13_IndexEntryNotInHead(org.eclipse.jgit.lib.DirCacheCheckoutTest)')","[116452, 117424]"
"('URIish.java', 'org.eclipse.jgit.transport.URIish', '<init>', '^(file):([\\\\/](?![\\\\/])((?:[A-Za-z]:)?[\\\\/]?(?:(?:[^\\\\/]+[\\\\/]+)*[^\\\\/]+[\\\\/]*)))$', 'ssh+git://l usr\\example.com:wtf@1.2.3.4:1234//abc')",[16365]
"('URIish.java', 'org.eclipse.jgit.transport.URIish', '<init>', '^([\\\\/]?((?:[A-Za-z]:)?[\\\\/]?(?:(?:[^\\\\/]+[\\\\/]+)*[^\\\\/]+[\\\\/]*)))$', '//.git')",[70459]
"('URIish.java', 'org.eclipse.jgit.transport.URIish', '<init>', '^(file):([\\\\/](?![\\\\/])((?:[A-Za-z]:)?[\\\\/]?(?:(?:[^\\\\/]+[\\\\/]+)*[^\\\\/]+[\\\\/]*)))$', 'ssh+git://l usr\\example.com@1.2.3.4:1234/D:/x')",[31044]
"('Description.java', 'org.junit.runner.Description', 'methodAndClassNamePatternGroupOrDefault', '([\\s\\S]*)\\((.*)\\)', 'testConfigureCache_PackedGitLimit_0(org.eclipse.jgit.internal.storage.file.WindowCacheReconfigureTest)')","[247585, 247737]"
"('URIish.java', 'org.eclipse.jgit.transport.URIish', '<init>', '^(file):([\\\\/](?![\\\\/])((?:[A-Za-z]:)?[\\\\/]?(?:(?:[^\\\\/]+[\\\\/]+)*[^\\\\/]+[\\\\/]*)))$', 'ssh+git://me@[::1]:80//abc')",[30446]
"('PathMatcher.java', 'org.eclipse.jgit.ignore.internal.PathMatcher', 'iterate', 'ne.', 'new.c')","[142885, 144029]"
"('Description.java', 'org.junit.runner.Description', 'methodAndClassNamePatternGroupOrDefault', '([\\s\\S]*)\\((.*)\\)', 'testStringOfPearls_DirPath2(org.eclipse.jgit.revwalk.TreeRevFilterTest)')","[81673, 81782]"
"('Description.java', 'org.junit.runner.Description', 'methodAndClassNamePatternGroupOrDefault', '([\\s\\S]*)\\((.*)\\)', 'testLowerGroupCase4[OldRule? false](org.eclipse.jgit.ignore.IgnoreRuleSpecialCasesTest)')","[146582, 153687]"
"('Description.java', 'org.junit.runner.Description', 'methodAndClassNamePatternGroupOrDefault', '([\\s\\S]*)\\((.*)\\)', 'testAddA2(org.eclipse.jgit.api.ApplyCommandTest)')","[223484, 223718]"
"('Description.java', 'org.junit.runner.Description', 'methodAndClassNamePatternGroupOrDefault', '([\\s\\S]*)\\((.*)\\)', 'testGetSlashValidSlashDotGitSlashHumanishName(org.eclipse.jgit.transport.URIishTest)')","[2426, 4948]"
"('Description.java', 'org.junit.runner.Description', 'methodAndClassNamePatternGroupOrDefault', '([\\s\\S]*)\\((.*)\\)', 'testParsePersonIdent_legalCases(org.eclipse.jgit.util.RawParseUtils_ParsePersonIdentTest)')","[171566, 171652]"
"('URIish.java', 'org.eclipse.jgit.transport.URIish', '<init>', '^([a-z][a-z0-9+-]+)://(?:(?:([^/:@]+)(?::([^\\\\/]+))?@)?((?:[^\\\\/:]+)|(?:\\[[0-9a-f:]+\\]))(?::(\\d+))?((?:/~(?:[^\\\\/]+))?[\\\\/]))?(.+)?$', 'https://lusr\\example:wtf@[::1]:1234/D:\\x')",[25733]
"('Description.java', 'org.junit.runner.Description', 'methodAndClassNamePatternGroupOrDefault', '([\\s\\S]*)\\((.*)\\)', 'testSaveRemoveFirstURI(org.eclipse.jgit.transport.RemoteConfigTest)')","[1814, 3146]"
"('Description.java', 'org.junit.runner.Description', 'methodAndClassNamePatternGroupOrDefault', '([\\s\\S]*)\\((.*)\\)', 'testOneBlockAndHalf_Copy(org.eclipse.jgit.util.TemporaryBufferTest)')","[178574, 178881]"
"('Description.java', 'org.junit.runner.Description', 'methodAndClassNamePatternGroupOrDefault', '([\\s\\S]*)\\((.*)\\)', 'testOnlyOption_f1_4_c(org.eclipse.jgit.api.CommitOnlyTest)')","[236290, 238360]"
"('Description.java', 'org.junit.runner.Description', 'methodAndClassNamePatternGroupOrDefault', '([\\s\\S]*)\\((.*)\\)', 'testTrackingRefUpdateEnabled(org.eclipse.jgit.transport.PushProcessTest)')","[74215, 74587]"
"('URIish.java', 'org.eclipse.jgit.transport.URIish', '<init>', '^([a-z][a-z0-9+-]+)://(?:(?:([^/:@]+)(?::([^\\\\/]+))?@)?((?:[^\\\\/:]+)|(?:\\[[0-9a-f:]+\\]))(?::(\\d+))?((?:/~(?:[^\\\\/]+))?[\\\\/]))?(.+)?$', 'file:///tmp/jgit_test_6790445454086415234_tmp/tmp_6898910523624612735/.git/')",[175636]
"('QuotedString.java', 'org.eclipse.jgit.util.QuotedString$BourneUserPathStyle', 'quote', '^~[A-Za-z0-9_-]*/.*$', ""a'b"")","[193846, 193871]"
"('Description.java', 'org.junit.runner.Description', 'methodAndClassNamePatternGroupOrDefault', '([\\s\\S]*)\\((.*)\\)', 'testSpaceGroupCase1(org.eclipse.jgit.fnmatch.FileNameMatcherTest)')","[102154, 105469]"
"('ChangeIdUtil.java', 'org.eclipse.jgit.util.ChangeIdUtil', 'indexOfChangeId', '(^Change-Id: *I[a-f0-9]{40}$)', '[ja: Fixed')",[187975]
"('URIish.java', 'org.eclipse.jgit.transport.URIish', '<init>', '^([a-z][a-z0-9+-]+)://(?:(?:([^/:@]+)(?::([^\\\\/]+))?@)?((?:[^\\\\/:]+)|(?:\\[[0-9a-f:]+\\]))(?::(\\d+))?((?:/~(?:[^\\\\/]+))?[\\\\/]))?(.+)?$', 'ssh+git://1.2.3.4/D:\\x')","[56505, 56689, 57609, 57793, 58713, 58897]"
"('Description.java', 'org.junit.runner.Description', 'methodAndClassNamePatternGroupOrDefault', '([\\s\\S]*)\\((.*)\\)', 'testRemoveFirst(org.eclipse.jgit.notes.LeafBucketTest)')","[198122, 198357]"
"('URIish.java', 'org.eclipse.jgit.transport.URIish', '<init>', '^(file):([\\\\/](?![\\\\/])((?:[A-Za-z]:)?[\\\\/]?(?:(?:[^\\\\/]+[\\\\/]+)*[^\\\\/]+[\\\\/]*)))$', 'example.com:some/p%20ath')","[69194, 69263]"
"('Description.java', 'org.junit.runner.Description', 'methodAndClassNamePatternGroupOrDefault', '([\\s\\S]*)\\((.*)\\)', 'testEmpty_EmptyTree(org.eclipse.jgit.revwalk.RevWalkPathFilter1Test)')","[75746, 76020]"
"('Description.java', 'org.junit.runner.Description', 'methodAndClassNamePatternGroupOrDefault', '([\\s\\S]*)\\((.*)\\)', 'logPathWithSkip(org.eclipse.jgit.api.LogCommandTest)')","[231613, 231766]"
"('URIish.java', 'org.eclipse.jgit.transport.URIish', '<init>', '^([a-z][a-z0-9+-]+)://(?:(?:([^/:@]+)(?::([^\\\\/]+))?@)?((?:[^\\\\/:]+)|(?:\\[[0-9a-f:]+\\]))(?::(\\d+))?((?:/~(?:[^\\\\/]+))?[\\\\/]))?(.+)?$', 'ssh+git://l usr\\example.com@example.com:80//abc')",[30837]
"('Description.java', 'org.junit.runner.Description', 'methodAndClassNamePatternGroupOrDefault', '([\\s\\S]*)\\((.*)\\)', 'testDirectoryFileConflicts_4(org.eclipse.jgit.lib.DirCacheCheckoutTest)')","[116326, 117292]"
"('URIish.java', 'org.eclipse.jgit.transport.URIish', '<init>', '^(?:([^/:@]+)(?::([^\\\\/]+))?@)?((?:[^\\\\/:]+)|(?:\\[[0-9a-f:]+\\])):((?:(?:/~(?:[^\\\\/]+))[\\\\/])?(?:(?:[^\\\\/]+[\\\\/]+)*[^\\\\/]+[\\\\/]*))$', 'example.com:/some/p ath')","[69792, 69884]"
"('Description.java', 'org.junit.runner.Description', 'methodAndClassNamePatternGroupOrDefault', '([\\s\\S]*)\\((.*)\\)', 'testGraphGroupCase5[OldRule? true](org.eclipse.jgit.ignore.IgnoreRuleSpecialCasesTest)')","[150007, 157091]"
"('Description.java', 'org.junit.runner.Description', 'methodAndClassNamePatternGroupOrDefault', '([\\s\\S]*)\\((.*)\\)', 'testFileCommittedDeletedCommittedComparedWithInitialCommit(org.eclipse.jgit.treewalk.filter.IndexDiffFilterTest)')","[136899, 137713]"
"('Description.java', 'org.junit.runner.Description', 'methodAndClassNamePatternGroupOrDefault', '([\\s\\S]*)\\((.*)\\)', 'testValidCommitNoParent(org.eclipse.jgit.lib.ObjectCheckerTest)')","[122351, 124503]"
"('URIish.java', 'org.eclipse.jgit.transport.URIish', '<init>', '^([a-z][a-z0-9+-]+)://(?:(?:([^/:@]+)(?::([^\\\\/]+))?@)?((?:[^\\\\/:]+)|(?:\\[[0-9a-f:]+\\]))(?::(\\d+))?((?:/~(?:[^\\\\/]+))?[\\\\/]))?(.+)?$', 'http://lusr\\example@[::1]:1234//abc')",[35805]
"('Description.java', 'org.junit.runner.Description', 'methodAndClassNamePatternGroupOrDefault', '([\\s\\S]*)\\((.*)\\)', 'testPeelCommit(org.eclipse.jgit.internal.storage.file.RefDirectoryTest)')","[257728, 258902]"
"('Description.java', 'org.junit.runner.Description', 'methodAndClassNamePatternGroupOrDefault', '([\\s\\S]*)\\((.*)\\)', 'testOnlyOption_f1_4_b(org.eclipse.jgit.api.CommitOnlyTest)')","[236269, 238338]"
"('Description.java', 'org.junit.runner.Description', 'methodAndClassNamePatternGroupOrDefault', '([\\s\\S]*)\\((.*)\\)', 'idOffset(org.eclipse.jgit.treewalk.FileTreeIteratorTest)')","[131291, 131632]"
"('URIish.java', 'org.eclipse.jgit.transport.URIish', '<init>', '^(file):([\\\\/](?![\\\\/])((?:[A-Za-z]:)?[\\\\/]?(?:(?:[^\\\\/]+[\\\\/]+)*[^\\\\/]+[\\\\/]*)))$', 'file:///tmp/jgit_test_4677475895609519006_tmp/tmp_285690349059558438/.git/')",[108037]
"('URIish.java', 'org.eclipse.jgit.transport.URIish', '<init>', '^([a-z][a-z0-9+-]+)://(?:(?:([^/:@]+)(?::([^\\\\/]+))?@)?((?:[^\\\\/:]+)|(?:\\[[0-9a-f:]+\\]))(?::(\\d+))?((?:/~(?:[^\\\\/]+))?[\\\\/]))?(.+)?$', 'file:///tmp/jgit_test_960711879172370885_tmp/tmp_8757266491092025519/.git/')",[173357]
"('ChangeIdUtil.java', 'org.eclipse.jgit.util.ChangeIdUtil', 'indexOfFirstFooterLine', '(^[a-zA-Z0-9-]+:(?!//).*$)', 'Commit body')","[89549, 89575]"
"('URIish.java', 'org.eclipse.jgit.transport.URIish', '<init>', '^([a-z][a-z0-9+-]+)://(?:(?:([^/:@]+)(?::([^\\\\/]+))?@)?((?:[^\\\\/:]+)|(?:\\[[0-9a-f:]+\\]))(?::(\\d+))?((?:/~(?:[^\\\\/]+))?[\\\\/]))?(.+)?$', 'ssh+git://l usr\\example.com@example.com/D:/x')","[43947, 44131]"
"('URIish.java', 'org.eclipse.jgit.transport.URIish', '<init>', '^(file):([\\\\/](?![\\\\/])((?:[A-Za-z]:)?[\\\\/]?(?:(?:[^\\\\/]+[\\\\/]+)*[^\\\\/]+[\\\\/]*)))$', 'ssh+git://me@[::1]:1234//abc')",[30262]
"('Description.java', 'org.junit.runner.Description', 'methodAndClassNamePatternGroupOrDefault', '([\\s\\S]*)\\((.*)\\)', 'testInvalidCommitInvalidTree1(org.eclipse.jgit.lib.ObjectCheckerTest)')","[121007, 123095]"
"('Description.java', 'org.junit.runner.Description', 'methodAndClassNamePatternGroupOrDefault', '([\\s\\S]*)\\((.*)\\)', 'repositoryWithSubmodule(org.eclipse.jgit.submodule.SubmoduleUpdateTest)')","[107639, 107724]"
"('Description.java', 'org.junit.runner.Description', 'methodAndClassNamePatternGroupOrDefault', '([\\s\\S]*)\\((.*)\\)', 'testSameDiff(org.eclipse.jgit.diff.PatchIdDiffFormatterTest)')","[95111, 95176]"
"('Description.java', 'org.junit.runner.Description', 'methodAndClassNamePatternGroupOrDefault', '([\\s\\S]*)\\((.*)\\)', 'testURIEncodeDecode(org.eclipse.jgit.transport.URIishTest)')","[2276, 4860]"
"('URIish.java', 'org.eclipse.jgit.transport.URIish', '<init>', '^([a-z][a-z0-9+-]+)://(?:(?:([^/:@]+)(?::([^\\\\/]+))?@)?((?:[^\\\\/:]+)|(?:\\[[0-9a-f:]+\\]))(?::(\\d+))?((?:/~(?:[^\\\\/]+))?[\\\\/]))?(.+)?$', 'ssh://l usr\\example.com:wtf@1.2.3.4:1234/D:/x')",[11624]
"('URIish.java', 'org.eclipse.jgit.transport.URIish', '<init>', '^([a-z][a-z0-9+-]+)://(?:(?:([^/:@]+)(?::([^\\\\/]+))?@)?((?:[^\\\\/:]+)|(?:\\[[0-9a-f:]+\\]))(?::(\\d+))?((?:/~(?:[^\\\\/]+))?[\\\\/]))?(.+)?$', 'ssh+git://me@example.com:1234//abc')",[29549]
"('URIish.java', 'org.eclipse.jgit.transport.URIish', '<init>', '^([a-z][a-z0-9+-]+)://(?:(?:([^/:@]+)(?::([^\\\\/]+))?@)?((?:[^\\\\/:]+)|(?:\\[[0-9a-f:]+\\]))(?::(\\d+))?((?:/~(?:[^\\\\/]+))?[\\\\/]))?(.+)?$', '/some/dir')","[5939, 6349, 6657, 6777, 7879, 8260, 8380, 8602, 9325, 9448, 9841, 10596, 10716, 11483]"
"('URIish.java', 'org.eclipse.jgit.transport.URIish', '<init>', '^(file):([\\\\/](?![\\\\/])((?:[A-Za-z]:)?[\\\\/]?(?:(?:[^\\\\/]+[\\\\/]+)*[^\\\\/]+[\\\\/]*)))$', 'file:/tmp/jgit_test_4068658224210344193_tmp/tmp_1548633951292865587/.git/')",[128600]
"('Description.java', 'org.junit.runner.Description', 'methodAndClassNamePatternGroupOrDefault', '([\\s\\S]*)\\((.*)\\)', 'workingDirectoryDelete(org.eclipse.jgit.api.StashCreateCommandTest)')","[202445, 202792]"
"('FastIgnoreRule.java', 'org.eclipse.jgit.ignore.FastIgnoreRule', 'isMatch', '[[\\p{Graph}\\p{javaDigit}\\p{javaLetter}]]', '0')",[160680]
"('URIish.java', 'org.eclipse.jgit.transport.URIish', '<init>', '^([a-z][a-z0-9+-]+)://(?:(?:([^/:@]+)(?::([^\\\\/]+))?@)?((?:[^\\\\/:]+)|(?:\\[[0-9a-f:]+\\]))(?::(\\d+))?((?:/~(?:[^\\\\/]+))?[\\\\/]))?(.+)?$', 'http://l usr\\example.com@[::1]//')","[47903, 48087]"
"('Description.java', 'org.junit.runner.Description', 'methodAndClassNamePatternGroupOrDefault', '([\\s\\S]*)\\((.*)\\)', 'testListAllTagsInRepositoryInOrder(org.eclipse.jgit.api.TagCommandTest)')","[201763, 202067]"
"('FastIgnoreRule.java', 'org.eclipse.jgit.ignore.FastIgnoreRule', 'isMatch', '..', 'ab')",[160160]
"('Description.java', 'org.junit.runner.Description', 'methodAndClassNamePatternGroupOrDefault', '([\\s\\S]*)\\((.*)\\)', 'testFileUntracked(org.eclipse.jgit.treewalk.filter.IndexDiffFilterTest)')","[137361, 138197]"
"('Description.java', 'org.junit.runner.Description', 'methodAndClassNamePatternGroupOrDefault', '([\\s\\S]*)\\((.*)\\)', 'testTwoRangesInOneGroupCase5[OldRule? true](org.eclipse.jgit.ignore.IgnoreRuleSpecialCasesTest)')","[152583, 159667]"
"('URIish.java', 'org.eclipse.jgit.transport.URIish', '<init>', '^(file):([\\\\/](?![\\\\/])((?:[A-Za-z]:)?[\\\\/]?(?:(?:[^\\\\/]+[\\\\/]+)*[^\\\\/]+[\\\\/]*)))$', 'ssh://lusr\\example:wtf@[::1]:80//abc')",[13394]
"('URIish.java', 'org.eclipse.jgit.transport.URIish', '<init>', '^(file):([\\\\/](?![\\\\/])((?:[A-Za-z]:)?[\\\\/]?(?:(?:[^\\\\/]+[\\\\/]+)*[^\\\\/]+[\\\\/]*)))$', 'ssh+git://[::1]//abc')","[56758, 56942, 57862, 58046, 58966, 59150]"
"('Description.java', 'org.junit.runner.Description', 'methodAndClassNamePatternGroupOrDefault', '([\\s\\S]*)\\((.*)\\)', 'testVerySimpleWildCardCase2[OldRule? true](org.eclipse.jgit.ignore.IgnoreRuleSpecialCasesTest)')","[149524, 156608]"
"('URIish.java', 'org.eclipse.jgit.transport.URIish', '<init>', '^([a-z][a-z0-9+-]+)://(?:(?:([^/:@]+)(?::([^\\\\/]+))?@)?((?:[^\\\\/:]+)|(?:\\[[0-9a-f:]+\\]))(?::(\\d+))?((?:/~(?:[^\\\\/]+))?[\\\\/]))?(.+)?$', 'ssh+git://lusr\\example@[::1]:80//')",[32631]
"('Description.java', 'org.junit.runner.Description', 'methodAndClassNamePatternGroupOrDefault', '([\\s\\S]*)\\((.*)\\)', 'invalidWhenSourceOnlyAndWildcard(org.eclipse.jgit.transport.RefSpecTest)')","[12911, 14966]"
"('Description.java', 'org.junit.runner.Description', 'methodAndClassNamePatternGroupOrDefault', '([\\s\\S]*)\\((.*)\\)', 'testGitProtoWindows(org.eclipse.jgit.transport.URIishTest)')","[3124, 5344]"
"('URIish.java', 'org.eclipse.jgit.transport.URIish', '<init>', '^([a-z][a-z0-9+-]+)://(?:(?:([^/:@]+)(?::([^\\\\/]+))?@)?((?:[^\\\\/:]+)|(?:\\[[0-9a-f:]+\\]))(?::(\\d+))?((?:/~(?:[^\\\\/]+))?[\\\\/]))?(.+)?$', 'https://1.2.3.4/D:\\x')","[63129, 63313, 64233, 64417, 65337, 65544]"
"('Description.java', 'org.junit.runner.Description', 'methodAndClassNamePatternGroupOrDefault', '([\\s\\S]*)\\((.*)\\)', 'org.eclipse.jgit.treewalk.filter.TreeFilterTest')","[138444, 139229]"
"('Description.java', 'org.junit.runner.Description', 'methodAndClassNamePatternGroupOrDefault', '([\\s\\S]*)\\((.*)\\)', 'test009_SymlinkAndGitlink(org.eclipse.jgit.lib.T0002_TreeTest)')","[119775, 120070]"
"('Description.java', 'org.junit.runner.Description', 'methodAndClassNamePatternGroupOrDefault', '([\\s\\S]*)\\((.*)\\)', 'testGetBitmapWithOneXor(org.eclipse.jgit.internal.storage.file.StoredBitmapTest)')","[247903, 247969]"
"('URIish.java', 'org.eclipse.jgit.transport.URIish', '<init>', '^(file):([\\\\/](?![\\\\/])((?:[A-Za-z]:)?[\\\\/]?(?:(?:[^\\\\/]+[\\\\/]+)*[^\\\\/]+[\\\\/]*)))$', 'ssh+git://lusr\\example@1.2.3.4:1234/D:\\x')",[32194]
"('URIish.java', 'org.eclipse.jgit.transport.URIish', '<init>', '^([a-z][a-z0-9+-]+)://(?:(?:([^/:@]+)(?::([^\\\\/]+))?@)?((?:[^\\\\/:]+)|(?:\\[[0-9a-f:]+\\]))(?::(\\d+))?((?:/~(?:[^\\\\/]+))?[\\\\/]))?(.+)?$', 'file:///tmp/jgit_test_8267827428869162458_tmp/tmp_496968110035574723/testCloneRepositoryWithNestedSubmodules2/.git/')","[204251, 207806]"
"('Description.java', 'org.junit.runner.Description', 'methodAndClassNamePatternGroupOrDefault', '([\\s\\S]*)\\((.*)\\)', 'testMergeNonVersionedPaths(org.eclipse.jgit.api.MergeCommandTest)')","[213597, 214506]"
"('URIish.java', 'org.eclipse.jgit.transport.URIish', '<init>', '^([a-z][a-z0-9+-]+)://(?:(?:([^/:@]+)(?::([^\\\\/]+))?@)?((?:[^\\\\/:]+)|(?:\\[[0-9a-f:]+\\]))(?::(\\d+))?((?:/~(?:[^\\\\/]+))?[\\\\/]))?(.+)?$', '/tmp/jgit_test_873718593406949091_tmp/tmp_6143507308402612209.git')",[76780]
"('URIish.java', 'org.eclipse.jgit.transport.URIish', '<init>', '^(file):([\\\\/](?![\\\\/])((?:[A-Za-z]:)?[\\\\/]?(?:(?:[^\\\\/]+[\\\\/]+)*[^\\\\/]+[\\\\/]*)))$', 'ssh+git://me@[::1]:1234/D:/x')",[30308]
"('Description.java', 'org.junit.runner.Description', 'methodAndClassNamePatternGroupOrDefault', '([\\s\\S]*)\\((.*)\\)', 'testDequote_FooTabBar(org.eclipse.jgit.util.QuotedStringGitPathStyleTest)')","[177739, 178176]"
"('FastIgnoreRule.java', 'org.eclipse.jgit.ignore.FastIgnoreRule', 'isMatch', '[a\\]]', ']')",[163752]
"('Description.java', 'org.junit.runner.Description', 'methodAndClassNamePatternGroupOrDefault', '([\\s\\S]*)\\((.*)\\)', 'testCull(org.eclipse.jgit.revwalk.ObjectWalkTest)')","[76406, 76598]"
"('URIish.java', 'org.eclipse.jgit.transport.URIish', '<init>', '^(?:([^/:@]+)(?::([^\\\\/]+))?@)?((?:[^\\\\/:]+)|(?:\\[[0-9a-f:]+\\])):((?:(?:/~(?:[^\\\\/]+))[\\\\/])?(?:(?:[^\\\\/]+[\\\\/]+)*[^\\\\/]+[\\\\/]*))$', 'D:/m y')","[69470, 69585]"
"('URIish.java', 'org.eclipse.jgit.transport.URIish', '<init>', '^(file):([\\\\/](?![\\\\/])((?:[A-Za-z]:)?[\\\\/]?(?:(?:[^\\\\/]+[\\\\/]+)*[^\\\\/]+[\\\\/]*)))$', '/another/dir')","[6035, 6873, 9960]"
"('URIish.java', 'org.eclipse.jgit.transport.URIish', '<init>', '^(file):([\\\\/](?![\\\\/])((?:[A-Za-z]:)?[\\\\/]?(?:(?:[^\\\\/]+[\\\\/]+)*[^\\\\/]+[\\\\/]*)))$', 'ssh://lusr\\example:wtf@1.2.3.4:1234//')",[12733]
"('Description.java', 'org.junit.runner.Description', 'methodAndClassNamePatternGroupOrDefault', '([\\s\\S]*)\\((.*)\\)', 'indexContentConflict(org.eclipse.jgit.api.StashApplyCommandTest)')","[240895, 241450]"
"('Description.java', 'org.junit.runner.Description', 'methodAndClassNamePatternGroupOrDefault', '([\\s\\S]*)\\((.*)\\)', 'testOnlyOption_f1_14_a(org.eclipse.jgit.api.CommitOnlyTest)')","[237644, 239746]"
"('Description.java', 'org.junit.runner.Description', 'methodAndClassNamePatternGroupOrDefault', '([\\s\\S]*)\\((.*)\\)', 'testCombinedRangesInOneGroupCase0[OldRule? true](org.eclipse.jgit.ignore.IgnoreRuleSpecialCasesTest)')","[149570, 156654]"
"('URIish.java', 'org.eclipse.jgit.transport.URIish', '<init>', '^([a-z][a-z0-9+-]+)://(?:(?:([^/:@]+)(?::([^\\\\/]+))?@)?((?:[^\\\\/:]+)|(?:\\[[0-9a-f:]+\\]))(?::(\\d+))?((?:/~(?:[^\\\\/]+))?[\\\\/]))?(.+)?$', 'http://[::1]/D:/x')","[60139, 60323, 61243, 61427, 62347, 62531]"
"('Description.java', 'org.junit.runner.Description', 'methodAndClassNamePatternGroupOrDefault', '([\\s\\S]*)\\((.*)\\)', 'testEncode_Unicode(org.eclipse.jgit.lib.ConstantsEncodingTest)')","[118088, 118194]"
"('URIish.java', 'org.eclipse.jgit.transport.URIish', '<init>', '^(file):([\\\\/](?![\\\\/])((?:[A-Za-z]:)?[\\\\/]?(?:(?:[^\\\\/]+[\\\\/]+)*[^\\\\/]+[\\\\/]*)))$', 'http://user:secret@pass@host.xy:80/some/path')","[70275, 70321]"
"('Description.java', 'org.junit.runner.Description', 'methodAndClassNamePatternGroupOrDefault', '([\\s\\S]*)\\((.*)\\)', 'org.eclipse.jgit.treewalk.filter.NotTreeFilterTest')","[139164, 139742]"
"('Description.java', 'org.junit.runner.Description', 'methodAndClassNamePatternGroupOrDefault', '([\\s\\S]*)\\((.*)\\)', 'testEmpty(org.eclipse.jgit.revwalk.FIFORevQueueTest)')","[85403, 85531]"
"('URIish.java', 'org.eclipse.jgit.transport.URIish', '<init>', '^(file):([\\\\/](?![\\\\/])((?:[A-Za-z]:)?[\\\\/]?(?:(?:[^\\\\/]+[\\\\/]+)*[^\\\\/]+[\\\\/]*)))$', 'http://me@example.com//abc')","[46086, 46270]"
"('URIish.java', 'org.eclipse.jgit.transport.URIish', '<init>', '^(file):([\\\\/](?![\\\\/])((?:[A-Za-z]:)?[\\\\/]?(?:(?:[^\\\\/]+[\\\\/]+)*[^\\\\/]+[\\\\/]*)))$', 'https://l usr\\example.com@[::1]:1234/D:/x')",[38036]
"('URIish.java', 'org.eclipse.jgit.transport.URIish', '<init>', '^([a-z][a-z0-9+-]+)://(?:(?:([^/:@]+)(?::([^\\\\/]+))?@)?((?:[^\\\\/:]+)|(?:\\[[0-9a-f:]+\\]))(?::(\\d+))?((?:/~(?:[^\\\\/]+))?[\\\\/]))?(.+)?$', 'http://l usr\\example.com@example.com:1234/D:\\x')",[34057]
"('Description.java', 'org.junit.runner.Description', 'methodAndClassNamePatternGroupOrDefault', '([\\s\\S]*)\\((.*)\\)', 'invalidWhenMoreThanOneWildcardInSource(org.eclipse.jgit.transport.RefSpecTest)')","[13901, 15392]"
"('Description.java', 'org.junit.runner.Description', 'methodAndClassNamePatternGroupOrDefault', '([\\s\\S]*)\\((.*)\\)', 'testCherryPickMerge(org.eclipse.jgit.api.CherryPickCommandTest)')","[232169, 232427]"
"('Description.java', 'org.junit.runner.Description', 'methodAndClassNamePatternGroupOrDefault', '([\\s\\S]*)\\((.*)\\)', 'invalidSourceDoubleSlashes(org.eclipse.jgit.transport.RefSpecTest)')","[13677, 15303]"
"('Description.java', 'org.junit.runner.Description', 'methodAndClassNamePatternGroupOrDefault', '([\\s\\S]*)\\((.*)\\)', 'repositoryWithRelativeUriSubmodule(org.eclipse.jgit.submodule.SubmoduleSyncTest)')","[107891, 107956]"
"('Repository.java', 'org.eclipse.jgit.lib.Repository', 'resolve', '^-\\d+$', '1')","[126536, 126563, 126646, 126673, 126756, 126783, 127361, 127388]"
"('Description.java', 'org.junit.runner.Description', 'methodAndClassNamePatternGroupOrDefault', '([\\s\\S]*)\\((.*)\\)', 'testMustHaveTwoComponents(org.eclipse.jgit.lib.ValidRefNameTest)')","[118656, 119028]"
"('URIish.java', 'org.eclipse.jgit.transport.URIish', '<init>', '^([a-z][a-z0-9+-]+)://(?:(?:([^/:@]+)(?::([^\\\\/]+))?@)?((?:[^\\\\/:]+)|(?:\\[[0-9a-f:]+\\]))(?::(\\d+))?((?:/~(?:[^\\\\/]+))?[\\\\/]))?(.+)?$', 'ssh://lusr\\example@example.com:80/D:/x')",[28675]
"('Description.java', 'org.junit.runner.Description', 'methodAndClassNamePatternGroupOrDefault', '([\\s\\S]*)\\((.*)\\)', 'testSpecialGroupCase1[OldRule? true](org.eclipse.jgit.ignore.IgnoreRuleSpecialCasesTest)')","[149294, 156378]"
"('URIish.java', 'org.eclipse.jgit.transport.URIish', '<init>', '^([a-z][a-z0-9+-]+)://(?:(?:([^/:@]+)(?::([^\\\\/]+))?@)?((?:[^\\\\/:]+)|(?:\\[[0-9a-f:]+\\]))(?::(\\d+))?((?:/~(?:[^\\\\/]+))?[\\\\/]))?(.+)?$', 'https://[::1]//')","[63359, 63543, 64463, 64647, 65590, 65774]"
"('Description.java', 'org.junit.runner.Description', 'methodAndClassNamePatternGroupOrDefault', '([\\s\\S]*)\\((.*)\\)', 'untrackedFileConflictsWithWorkingDirectory(org.eclipse.jgit.api.StashApplyCommandTest)')","[241021, 241582]"
"('Description.java', 'org.junit.runner.Description', 'methodAndClassNamePatternGroupOrDefault', '([\\s\\S]*)\\((.*)\\)', 'org.eclipse.jgit.dircache.DirCacheCGitCompatabilityTest')","[90389, 90713]"
"('Description.java', 'org.junit.runner.Description', 'methodAndClassNamePatternGroupOrDefault', '([\\s\\S]*)\\((.*)\\)', 'testOnlyOption_f1_12_f2_14_b(org.eclipse.jgit.api.CommitOnlyTest)')","[237004, 239108]"
"('Description.java', 'org.junit.runner.Description', 'methodAndClassNamePatternGroupOrDefault', '([\\s\\S]*)\\((.*)\\)', 'testFilePathCase1[OldRule? false](org.eclipse.jgit.ignore.IgnoreRuleSpecialCasesTest)')","[147801, 154906]"
"('Description.java', 'org.junit.runner.Description', 'methodAndClassNamePatternGroupOrDefault', '([\\s\\S]*)\\((.*)\\)', 'shouldReturnZeroOnSameCommit(org.eclipse.jgit.revwalk.RevWalkUtilsCountTest)')","[79032, 79164]"
"('Description.java', 'org.junit.runner.Description', 'methodAndClassNamePatternGroupOrDefault', '([\\s\\S]*)\\((.*)\\)', 'testUpperGroupCase3(org.eclipse.jgit.fnmatch.FileNameMatcherTest)')","[103267, 106635]"
"('Description.java', 'org.junit.runner.Description', 'methodAndClassNamePatternGroupOrDefault', '([\\s\\S]*)\\((.*)\\)', 'testInvalidTreeDuplicateNames8(org.eclipse.jgit.lib.ObjectCheckerTest)')","[122897, 125075]"
"('Description.java', 'org.junit.runner.Description', 'methodAndClassNamePatternGroupOrDefault', '([\\s\\S]*)\\((.*)\\)', 'testId(org.eclipse.jgit.revwalk.RevObjectTest)')","[83808, 84183]"
"('Description.java', 'org.junit.runner.Description', 'methodAndClassNamePatternGroupOrDefault', '([\\s\\S]*)\\((.*)\\)', 'testMatch_Equal(org.eclipse.jgit.util.RawParseUtils_MatchTest)')","[192031, 192117]"
"('Description.java', 'org.junit.runner.Description', 'methodAndClassNamePatternGroupOrDefault', '([\\s\\S]*)\\((.*)\\)', 'testWordroupCase5(org.eclipse.jgit.fnmatch.FileNameMatcherTest)')","[103771, 107163]"
"('Description.java', 'org.junit.runner.Description', 'methodAndClassNamePatternGroupOrDefault', '([\\s\\S]*)\\((.*)\\)', 'org.eclipse.jgit.treewalk.filter.PathSuffixFilterTest')","[138256, 138408]"
"('Description.java', 'org.junit.runner.Description', 'methodAndClassNamePatternGroupOrDefault', '([\\s\\S]*)\\((.*)\\)', 'test003_equals(org.eclipse.jgit.lib.ObjectIdTest)')","[130697, 130981]"
"('FastIgnoreRule.java', 'org.eclipse.jgit.ignore.FastIgnoreRule', 'isMatch', '[\\p{Lu}]', 'h')",[162710]
"('URIish.java', 'org.eclipse.jgit.transport.URIish', '<init>', '^(file):([\\\\/](?![\\\\/])((?:[A-Za-z]:)?[\\\\/]?(?:(?:[^\\\\/]+[\\\\/]+)*[^\\\\/]+[\\\\/]*)))$', 'http://me:wtf@[::1]:80//')",[20213]
"('URIish.java', 'org.eclipse.jgit.transport.URIish', '<init>', '^(file):([\\\\/](?![\\\\/])((?:[A-Za-z]:)?[\\\\/]?(?:(?:[^\\\\/]+[\\\\/]+)*[^\\\\/]+[\\\\/]*)))$', 'http://me@1.2.3.4/D:\\x')","[46546, 46730]"
"('Description.java', 'org.junit.runner.Description', 'methodAndClassNamePatternGroupOrDefault', '([\\s\\S]*)\\((.*)\\)', 'testInitiallyClean(org.eclipse.jgit.lib.IndexDiffSubmoduleTest)')","[127906, 128056]"
"('URIish.java', 'org.eclipse.jgit.transport.URIish', '<init>', '^(file):([\\\\/](?![\\\\/])((?:[A-Za-z]:)?[\\\\/]?(?:(?:[^\\\\/]+[\\\\/]+)*[^\\\\/]+[\\\\/]*)))$', 'ssh+git://lusr\\example@example.com//abc')","[44982, 45166]"
"('URIish.java', 'org.eclipse.jgit.transport.URIish', '<init>', '^([a-z][a-z0-9+-]+)://(?:(?:([^/:@]+)(?::([^\\\\/]+))?@)?((?:[^\\\\/:]+)|(?:\\[[0-9a-f:]+\\]))(?::(\\d+))?((?:/~(?:[^\\\\/]+))?[\\\\/]))?(.+)?$', 'http://me@example.com//abc')","[46109, 46293]"
"('Description.java', 'org.junit.runner.Description', 'methodAndClassNamePatternGroupOrDefault', '([\\s\\S]*)\\((.*)\\)', 'testInvalidCommitInvalidAuthor4(org.eclipse.jgit.lib.ObjectCheckerTest)')","[121784, 123909]"
"('URIish.java', 'org.eclipse.jgit.transport.URIish', '<init>', '^(?:([^/:@]+)(?::([^\\\\/]+))?@)?([^\\\\/:]{2,}):([\\\\/](?:(?:[^\\\\/]+[\\\\/]+)*[^\\\\/]+[\\\\/]*))$', '/tmp/jgit_test_3752343835297747993_tmp/tmp_2470876455541918618')","[230518, 230658, 231130]"
"('URIish.java', 'org.eclipse.jgit.transport.URIish', '<init>', '^(file):([\\\\/](?![\\\\/])((?:[A-Za-z]:)?[\\\\/]?(?:(?:[^\\\\/]+[\\\\/]+)*[^\\\\/]+[\\\\/]*)))$', 'https://lusr\\example@1.2.3.4:1234/D:\\x')",[38818]
"('URIish.java', 'org.eclipse.jgit.transport.URIish', '<init>', '^([a-z][a-z0-9+-]+)://(?:(?:([^/:@]+)(?::([^\\\\/]+))?@)?((?:[^\\\\/:]+)|(?:\\[[0-9a-f:]+\\]))(?::(\\d+))?((?:/~(?:[^\\\\/]+))?[\\\\/]))?(.+)?$', 'ssh+git://lusr\\example@example.com:1234//')",[31711]
"('Description.java', 'org.junit.runner.Description', 'methodAndClassNamePatternGroupOrDefault', '([\\s\\S]*)\\((.*)\\)', 'testEmptyStatus(org.eclipse.jgit.api.StatusCommandTest)')","[216650, 216715]"
"('URIish.java', 'org.eclipse.jgit.transport.URIish', '<init>', '^([a-z][a-z0-9+-]+)://(?:(?:([^/:@]+)(?::([^\\\\/]+))?@)?((?:[^\\\\/:]+)|(?:\\[[0-9a-f:]+\\]))(?::(\\d+))?((?:/~(?:[^\\\\/]+))?[\\\\/]))?(.+)?$', 'https://l usr\\example.com@1.2.3.4/D:/x')","[50939, 51123]"
"('URIish.java', 'org.eclipse.jgit.transport.URIish', '<init>', '^(file):([\\\\/](?![\\\\/])((?:[A-Za-z]:)?[\\\\/]?(?:(?:[^\\\\/]+[\\\\/]+)*[^\\\\/]+[\\\\/]*)))$', 'ssh://some-host:/path/to/repository.git')",[67775]
"('URIish.java', 'org.eclipse.jgit.transport.URIish', '<init>', '^([a-z][a-z0-9+-]+)://(?:(?:([^/:@]+)(?::([^\\\\/]+))?@)?((?:[^\\\\/:]+)|(?:\\[[0-9a-f:]+\\]))(?::(\\d+))?((?:/~(?:[^\\\\/]+))?[\\\\/]))?(.+)?$', 'file:///tmp/jgit_test_3515941071985452796_tmp/tmp_8174175230849322016/.git/')",[205230]
"('Description.java', 'org.junit.runner.Description', 'methodAndClassNamePatternGroupOrDefault', '([\\s\\S]*)\\((.*)\\)', 'test(org.eclipse.jgit.util.io.AutoCRLFInputStreamTest)')","[175468, 175512]"
"('URIish.java', 'org.eclipse.jgit.transport.URIish', '<init>', '^([a-z][a-z0-9+-]+)://(?:(?:([^/:@]+)(?::([^\\\\/]+))?@)?((?:[^\\\\/:]+)|(?:\\[[0-9a-f:]+\\]))(?::(\\d+))?((?:/~(?:[^\\\\/]+))?[\\\\/]))?(.+)?$', 'https://l usr\\example.com:wtf@example.com:80/D:/x')",[24031]
"('Description.java', 'org.junit.runner.Description', 'methodAndClassNamePatternGroupOrDefault', '([\\s\\S]*)\\((.*)\\)', 'testEmptyString(org.eclipse.jgit.lib.ConfigTest)')","[129386, 130121]"
"('URIish.java', 'org.eclipse.jgit.transport.URIish', '<init>', '^(file):([\\\\/](?![\\\\/])((?:[A-Za-z]:)?[\\\\/]?(?:(?:[^\\\\/]+[\\\\/]+)*[^\\\\/]+[\\\\/]*)))$', 'ssh+git://me@1.2.3.4:1234//abc')",[29894]
"('URIish.java', 'org.eclipse.jgit.transport.URIish', '<init>', '^(file):([\\\\/](?![\\\\/])((?:[A-Za-z]:)?[\\\\/]?(?:(?:[^\\\\/]+[\\\\/]+)*[^\\\\/]+[\\\\/]*)))$', 'file:/tmp/jgit_test_4365868416132416411_tmp/tmp_5907296020383359030.git/')",[173054]
"('URIish.java', 'org.eclipse.jgit.transport.URIish', '<init>', '^(file):([\\\\/](?![\\\\/])((?:[A-Za-z]:)?[\\\\/]?(?:(?:[^\\\\/]+[\\\\/]+)*[^\\\\/]+[\\\\/]*)))$', 'file:/tmp/jgit_test_7262235360055106235_tmp/tmp_918532890276576429/.git/')",[141076]
"('Description.java', 'org.junit.runner.Description', 'methodAndClassNamePatternGroupOrDefault', '([\\s\\S]*)\\((.*)\\)', 'testLargeObjectLoader(org.eclipse.jgit.lib.ObjectLoaderTest)')","[119254, 119339]"
"('Description.java', 'org.junit.runner.Description', 'methodAndClassNamePatternGroupOrDefault', '([\\s\\S]*)\\((.*)\\)', 'testContains(org.eclipse.jgit.revwalk.RevFlagSetTest)')","[79744, 79894]"
"('Description.java', 'org.junit.runner.Description', 'methodAndClassNamePatternGroupOrDefault', '([\\s\\S]*)\\((.*)\\)', 'testIterable(org.eclipse.jgit.util.RefListTest)')","[179800, 180330]"
"('Description.java', 'org.junit.runner.Description', 'methodAndClassNamePatternGroupOrDefault', '([\\s\\S]*)\\((.*)\\)', 'testEdit_LinuxBug(org.eclipse.jgit.diff.HistogramDiffTest)')","[98611, 99210]"
"('URIish.java', 'org.eclipse.jgit.transport.URIish', '<init>', '^(file):([\\\\/](?![\\\\/])((?:[A-Za-z]:)?[\\\\/]?(?:(?:[^\\\\/]+[\\\\/]+)*[^\\\\/]+[\\\\/]*)))$', '/tmp/jgit_test_4928645748912589877_tmp/tmp_7570227516241513625/.git')","[230744, 230878]"
"('Description.java', 'org.junit.runner.Description', 'methodAndClassNamePatternGroupOrDefault', '([\\s\\S]*)\\((.*)\\)', 'testWrongParams(org.eclipse.jgit.api.CommitAndLogCommandTest)')","[213045, 213258]"
"('Description.java', 'org.junit.runner.Description', 'methodAndClassNamePatternGroupOrDefault', '([\\s\\S]*)\\((.*)\\)', 'testTwoRangesInOneGroupCase3[OldRule? false](org.eclipse.jgit.ignore.IgnoreRuleSpecialCasesTest)')","[148974, 156079]"
"('ChangeIdUtil.java', 'org.eclipse.jgit.util.ChangeIdUtil', 'indexOfFirstFooterLine', '(^[a-zA-Z0-9-]+:(?!//).*$)', 'ftp://example.com/ fixes this')",[190061]
"('URIish.java', 'org.eclipse.jgit.transport.URIish', '<init>', '^(file):([\\\\/](?![\\\\/])((?:[A-Za-z]:)?[\\\\/]?(?:(?:[^\\\\/]+[\\\\/]+)*[^\\\\/]+[\\\\/]*)))$', 'http://l usr\\example.com:wtf@1.2.3.4:1234//')",[20765]
"('Description.java', 'org.junit.runner.Description', 'methodAndClassNamePatternGroupOrDefault', '([\\s\\S]*)\\((.*)\\)', 'checkMergeMergeableTreesWithoutIndex(org.eclipse.jgit.merge.ResolveMergerTest)')","[88078, 88397]"
"('Description.java', 'org.junit.runner.Description', 'methodAndClassNamePatternGroupOrDefault', '([\\s\\S]*)\\((.*)\\)', 'testParentDirectoryGitIgnores[OldRule? true](org.eclipse.jgit.ignore.IgnoreMatcherParametrizedTest)')","[141551, 141873]"
"('Description.java', 'org.junit.runner.Description', 'methodAndClassNamePatternGroupOrDefault', '([\\s\\S]*)\\((.*)\\)', 'testError_GarbageBetweenFiles(org.eclipse.jgit.patch.PatchErrorTest)')","[194637, 194767]"
"('URIish.java', 'org.eclipse.jgit.transport.URIish', '<init>', '^(file):([\\\\/](?![\\\\/])((?:[A-Za-z]:)?[\\\\/]?(?:(?:[^\\\\/]+[\\\\/]+)*[^\\\\/]+[\\\\/]*)))$', 'https://me:wtf@1.2.3.4:80//abc')",[23226]
"('Description.java', 'org.junit.runner.Description', 'methodAndClassNamePatternGroupOrDefault', '([\\s\\S]*)\\((.*)\\)', 'testChangeIdAlreadySetWithReplacement(org.eclipse.jgit.util.ChangeIdUtilTest)')","[185651, 186402]"
"('URIish.java', 'org.eclipse.jgit.transport.URIish', '<init>', '^([a-z][a-z0-9+-]+)://(?:(?:([^/:@]+)(?::([^\\\\/]+))?@)?((?:[^\\\\/:]+)|(?:\\[[0-9a-f:]+\\]))(?::(\\d+))?((?:/~(?:[^\\\\/]+))?[\\\\/]))?(.+)?$', 'ssh://l usr\\example.com@example.com//')","[40543, 40727]"
"('Description.java', 'org.junit.runner.Description', 'methodAndClassNamePatternGroupOrDefault', '([\\s\\S]*)\\((.*)\\)', 'testExecutableRetention(org.eclipse.jgit.api.AddCommandTest)')","[234948, 235380]"
"('URIish.java', 'org.eclipse.jgit.transport.URIish', '<init>', '^(file):([\\\\/](?![\\\\/])((?:[A-Za-z]:)?[\\\\/]?(?:(?:[^\\\\/]+[\\\\/]+)*[^\\\\/]+[\\\\/]*)))$', 'ssh+git://me:wtf@example.com:1234//')",[13700]
"('Description.java', 'org.junit.runner.Description', 'methodAndClassNamePatternGroupOrDefault', '([\\s\\S]*)\\((.*)\\)', 'testParse_explicit_encoded(org.eclipse.jgit.revwalk.RevTagParseTest)')","[80417, 80835]"
"('Description.java', 'org.junit.runner.Description', 'methodAndClassNamePatternGroupOrDefault', '([\\s\\S]*)\\((.*)\\)', 'testOnlyOption_f1_2_f2_14_d(org.eclipse.jgit.api.CommitOnlyTest)')","[236941, 239042]"
"('Description.java', 'org.junit.runner.Description', 'methodAndClassNamePatternGroupOrDefault', '([\\s\\S]*)\\((.*)\\)', 'testInvalidTagNoTagHeader3(org.eclipse.jgit.lib.ObjectCheckerTest)')","[122015, 124151]"
"('URIish.java', 'org.eclipse.jgit.transport.URIish', '<init>', '^(file):([\\\\/](?![\\\\/])((?:[A-Za-z]:)?[\\\\/]?(?:(?:[^\\\\/]+[\\\\/]+)*[^\\\\/]+[\\\\/]*)))$', 'ssh://me@example.com:1234/D:/x')",[26032]
"('URIish.java', 'org.eclipse.jgit.transport.URIish', '<init>', '^(file):([\\\\/](?![\\\\/])((?:[A-Za-z]:)?[\\\\/]?(?:(?:[^\\\\/]+[\\\\/]+)*[^\\\\/]+[\\\\/]*)))$', 'D:/m y')","[69424, 69539]"
"('Description.java', 'org.junit.runner.Description', 'methodAndClassNamePatternGroupOrDefault', '([\\s\\S]*)\\((.*)\\)', 'testEquals(org.eclipse.jgit.revwalk.RevObjectTest)')","[83951, 84766]"
"('URIish.java', 'org.eclipse.jgit.transport.URIish', '<init>', '^(file):([\\\\/](?![\\\\/])((?:[A-Za-z]:)?[\\\\/]?(?:(?:[^\\\\/]+[\\\\/]+)*[^\\\\/]+[\\\\/]*)))$', 'file:/tmp/jgit_test_4365868416132416411_tmp/tmp_1267754585471745565/.git/')","[172934, 172962]"
"('Description.java', 'org.junit.runner.Description', 'methodAndClassNamePatternGroupOrDefault', '([\\s\\S]*)\\((.*)\\)', 'testOnlyOption_f1_6_f2_14_b(org.eclipse.jgit.api.CommitOnlyTest)')","[237140, 239218]"
"('URIish.java', 'org.eclipse.jgit.transport.URIish', '<init>', '^([a-z][a-z0-9+-]+)://(?:(?:([^/:@]+)(?::([^\\\\/]+))?@)?((?:[^\\\\/:]+)|(?:\\[[0-9a-f:]+\\]))(?::(\\d+))?((?:/~(?:[^\\\\/]+))?[\\\\/]))?(.+)?$', 'http://l usr\\example.com@example.com:80/D:/x')",[34195]
"('URIish.java', 'org.eclipse.jgit.transport.URIish', '<init>', '^([a-z][a-z0-9+-]+)://(?:(?:([^/:@]+)(?::([^\\\\/]+))?@)?((?:[^\\\\/:]+)|(?:\\[[0-9a-f:]+\\]))(?::(\\d+))?((?:/~(?:[^\\\\/]+))?[\\\\/]))?(.+)?$', 'https://lusr\\example@example.com:1234//')",[38335]
"('FastIgnoreRule.java', 'org.eclipse.jgit.ignore.FastIgnoreRule', 'isMatch', '[\\]a]', ']')",[159952]
"('QuotedString.java', 'org.eclipse.jgit.util.QuotedString$BourneUserPathStyle', 'quote', '^~[A-Za-z0-9_-]*/.*$', ""'"")","[193642, 193667]"
"('URIish.java', 'org.eclipse.jgit.transport.URIish', '<init>', '^([a-z][a-z0-9+-]+)://(?:(?:([^/:@]+)(?::([^\\\\/]+))?@)?((?:[^\\\\/:]+)|(?:\\[[0-9a-f:]+\\]))(?::(\\d+))?((?:/~(?:[^\\\\/]+))?[\\\\/]))?(.+)?$', 'file:///tmp/jgit_test_4264970772913866100_tmp/tmp_2649031798121898662')","[221986, 222048, 222517]"
"('Description.java', 'org.junit.runner.Description', 'methodAndClassNamePatternGroupOrDefault', '([\\s\\S]*)\\((.*)\\)', 'testParseSquashFixupSequenceCount(org.eclipse.jgit.api.RebaseCommandTest)')","[217795, 219290]"
"('URIish.java', 'org.eclipse.jgit.transport.URIish', '<init>', '^([a-z][a-z0-9+-]+)://(?:(?:([^/:@]+)(?::([^\\\\/]+))?@)?((?:[^\\\\/:]+)|(?:\\[[0-9a-f:]+\\]))(?::(\\d+))?((?:/~(?:[^\\\\/]+))?[\\\\/]))?(.+)?$', 'file:///tmp/jgit_test_8267827428869162458_tmp/tmp_7190135820610932583/.git/')",[205533]
"('Description.java', 'org.junit.runner.Description', 'methodAndClassNamePatternGroupOrDefault', '([\\s\\S]*)\\((.*)\\)', 'testFillToCommit(org.eclipse.jgit.revwalk.RevCommitListTest)')","[81041, 81195]"
"('URIish.java', 'org.eclipse.jgit.transport.URIish', '<init>', '^(file):([\\\\/](?![\\\\/])((?:[A-Za-z]:)?[\\\\/]?(?:(?:[^\\\\/]+[\\\\/]+)*[^\\\\/]+[\\\\/]*)))$', 'http://lusr\\example@[::1]:1234//')",[35736]
"('Description.java', 'org.junit.runner.Description', 'methodAndClassNamePatternGroupOrDefault', '([\\s\\S]*)\\((.*)\\)', 'testInvalidCommitInvalidParent3(org.eclipse.jgit.lib.ObjectCheckerTest)')","[121637, 123755]"
"('Description.java', 'org.junit.runner.Description', 'methodAndClassNamePatternGroupOrDefault', '([\\s\\S]*)\\((.*)\\)', 'testParse_incompleteAuthorAndCommitter(org.eclipse.jgit.revwalk.RevCommitParseTest)')","[84416, 84898]"
"('URIish.java', 'org.eclipse.jgit.transport.URIish', '<init>', '^(file):([\\\\/](?![\\\\/])((?:[A-Za-z]:)?[\\\\/]?(?:(?:[^\\\\/]+[\\\\/]+)*[^\\\\/]+[\\\\/]*)))$', 'ssh+git://l usr\\example.com:wtf@1.2.3.4:1234/D:\\x')",[16457]
"('URIish.java', 'org.eclipse.jgit.transport.URIish', '<init>', '^(file):([\\\\/](?![\\\\/])((?:[A-Za-z]:)?[\\\\/]?(?:(?:[^\\\\/]+[\\\\/]+)*[^\\\\/]+[\\\\/]*)))$', 'file:/tmp/jgit_test_7403941928277025754_tmp/tmp_3969541369690137868/.git/')",[133638]
"('URIish.java', 'org.eclipse.jgit.transport.URIish', '<init>', '^(file):([\\\\/](?![\\\\/])((?:[A-Za-z]:)?[\\\\/]?(?:(?:[^\\\\/]+[\\\\/]+)*[^\\\\/]+[\\\\/]*)))$', '/tmp/jgit_test_7106031566354756827_tmp/tmp_4400850410867597182')","[228761, 228886, 229035]"
"('Description.java', 'org.junit.runner.Description', 'methodAndClassNamePatternGroupOrDefault', '([\\s\\S]*)\\((.*)\\)', 'ref(org.eclipse.jgit.api.NameRevCommandTest)')","[242099, 242336]"
"('Description.java', 'org.junit.runner.Description', 'methodAndClassNamePatternGroupOrDefault', '([\\s\\S]*)\\((.*)\\)', 'testReadLines_endLF(org.eclipse.jgit.util.ReadLinesTest)')","[171818, 171947]"
"('Description.java', 'org.junit.runner.Description', 'methodAndClassNamePatternGroupOrDefault', '([\\s\\S]*)\\((.*)\\)', 'testDirectoryFileConflicts_10(org.eclipse.jgit.lib.DirCacheCheckoutTest)')","[116515, 117490]"
"('Description.java', 'org.junit.runner.Description', 'methodAndClassNamePatternGroupOrDefault', '([\\s\\S]*)\\((.*)\\)', 'testFolderChangedToFile(org.eclipse.jgit.treewalk.filter.IndexDiffFilterTest)')","[136815, 137625]"
"('Description.java', 'org.junit.runner.Description', 'methodAndClassNamePatternGroupOrDefault', '([\\s\\S]*)\\((.*)\\)', 'testNotPackTwice(org.eclipse.jgit.internal.storage.file.GcBasicPackingTest)')","[247039, 247166]"
"('Description.java', 'org.junit.runner.Description', 'methodAndClassNamePatternGroupOrDefault', '([\\s\\S]*)\\((.*)\\)', 'testInversedGroupCase3(org.eclipse.jgit.fnmatch.FileNameMatcherTest)')","[102112, 105425]"
"('Description.java', 'org.junit.runner.Description', 'methodAndClassNamePatternGroupOrDefault', '([\\s\\S]*)\\((.*)\\)', 'testTwoRangesInOneGroupCase3[OldRule? true](org.eclipse.jgit.ignore.IgnoreRuleSpecialCasesTest)')","[152537, 159621]"
"('Description.java', 'org.junit.runner.Description', 'methodAndClassNamePatternGroupOrDefault', '([\\s\\S]*)\\((.*)\\)', 'testCheckoutOutChangesAutoCRLFtrueBinary(org.eclipse.jgit.lib.DirCacheCheckoutTest)')","[116830, 117820]"
"('URIish.java', 'org.eclipse.jgit.transport.URIish', '<init>', '^(file):([\\\\/](?![\\\\/])((?:[A-Za-z]:)?[\\\\/]?(?:(?:[^\\\\/]+[\\\\/]+)*[^\\\\/]+[\\\\/]*)))$', 'ssh+git://lusr\\example:wtf@[::1]:80//abc')",[18290]
"('URIish.java', 'org.eclipse.jgit.transport.URIish', '<init>', '^([a-z][a-z0-9+-]+)://(?:(?:([^/:@]+)(?::([^\\\\/]+))?@)?((?:[^\\\\/:]+)|(?:\\[[0-9a-f:]+\\]))(?::(\\d+))?((?:/~(?:[^\\\\/]+))?[\\\\/]))?(.+)?$', 'ssh://lusr\\example@example.com:1234//')",[28399]
"('Description.java', 'org.junit.runner.Description', 'methodAndClassNamePatternGroupOrDefault', '([\\s\\S]*)\\((.*)\\)', 'testStandardFormat_SmallObject_TruncatedZLibStream(org.eclipse.jgit.internal.storage.file.UnpackedObjectTest)')","[255043, 255363]"
"('Description.java', 'org.junit.runner.Description', 'methodAndClassNamePatternGroupOrDefault', '([\\s\\S]*)\\((.*)\\)', 'checkMergeMergeableFilesWithTreeInIndex(org.eclipse.jgit.merge.ResolveMergerTest)')","[88141, 88463]"
"('Description.java', 'org.junit.runner.Description', 'methodAndClassNamePatternGroupOrDefault', '([\\s\\S]*)\\((.*)\\)', 'testWindowsFile(org.eclipse.jgit.transport.URIishTest)')","[2834, 5168]"
"('Description.java', 'org.junit.runner.Description', 'methodAndClassNamePatternGroupOrDefault', '([\\s\\S]*)\\((.*)\\)', 'testCopyWholeObject_Length128(org.eclipse.jgit.internal.storage.pack.DeltaIndexTest)')","[246445, 246725]"
"('URIish.java', 'org.eclipse.jgit.transport.URIish', '<init>', '^([a-z][a-z0-9+-]+)://(?:(?:([^/:@]+)(?::([^\\\\/]+))?@)?((?:[^\\\\/:]+)|(?:\\[[0-9a-f:]+\\]))(?::(\\d+))?((?:/~(?:[^\\\\/]+))?[\\\\/]))?(.+)?$', 'http://lusr\\example:wtf@example.com:1234//')",[21547]
"('Description.java', 'org.junit.runner.Description', 'methodAndClassNamePatternGroupOrDefault', '([\\s\\S]*)\\((.*)\\)', 'org.eclipse.jgit.api.RenameBranchCommandTest')","[240287, 240482]"
"('URIish.java', 'org.eclipse.jgit.transport.URIish', '<init>', '^(file):([\\\\/](?![\\\\/])((?:[A-Za-z]:)?[\\\\/]?(?:(?:[^\\\\/]+[\\\\/]+)*[^\\\\/]+[\\\\/]*)))$', 'https://me:wtf@[::1]:1234//abc')",[23410]
"('Description.java', 'org.junit.runner.Description', 'methodAndClassNamePatternGroupOrDefault', '([\\s\\S]*)\\((.*)\\)', 'testLimitObjectSize_Length130CopyFails(org.eclipse.jgit.internal.storage.pack.DeltaIndexTest)')","[246529, 246813]"
"('ChangeIdUtil.java', 'org.eclipse.jgit.util.ChangeIdUtil', 'indexOfChangeId', '(^Change-Id: *I[a-f0-9]{40}$)', 'fix-a-widget: this thing')",[190352]
"('URIish.java', 'org.eclipse.jgit.transport.URIish', '<init>', '^(file):([\\\\/](?![\\\\/])((?:[A-Za-z]:)?[\\\\/]?(?:(?:[^\\\\/]+[\\\\/]+)*[^\\\\/]+[\\\\/]*)))$', 'http://me:wtf@example.com:80/D:/x')",[19019]
"('URIish.java', 'org.eclipse.jgit.transport.URIish', '<init>', '^([a-z][a-z0-9+-]+)://(?:(?:([^/:@]+)(?::([^\\\\/]+))?@)?((?:[^\\\\/:]+)|(?:\\[[0-9a-f:]+\\]))(?::(\\d+))?((?:/~(?:[^\\\\/]+))?[\\\\/]))?(.+)?$', 'https://me:wtf@example.com:80//')",[22835]
"('Description.java', 'org.junit.runner.Description', 'methodAndClassNamePatternGroupOrDefault', '([\\s\\S]*)\\((.*)\\)', 'testTagTag(org.eclipse.jgit.revwalk.RevTagParseTest)')","[80375, 80791]"
"('URIish.java', 'org.eclipse.jgit.transport.URIish', '<init>', '^(?:([^/:@]+)(?::([^\\\\/]+))?@)?([^\\\\/:]{2,}):([\\\\/](?:(?:[^\\\\/]+[\\\\/]+)*[^\\\\/]+[\\\\/]*))$', 'example.com:/some/p ath')","[69815, 69907]"
"('URIish.java', 'org.eclipse.jgit.transport.URIish', '<init>', '^([a-z][a-z0-9+-]+)://(?:(?:([^/:@]+)(?::([^\\\\/]+))?@)?((?:[^\\\\/:]+)|(?:\\[[0-9a-f:]+\\]))(?::(\\d+))?((?:/~(?:[^\\\\/]+))?[\\\\/]))?(.+)?$', '/tmp/jgit_test_6469622341025982846_tmp/tmp_1440713819350639853.git')",[81455]
"('Description.java', 'org.junit.runner.Description', 'methodAndClassNamePatternGroupOrDefault', '([\\s\\S]*)\\((.*)\\)', 'testProperlyCullAllAncestors2(org.eclipse.jgit.revwalk.RevWalkCullTest)')","[76977, 77043]"
"('URIish.java', 'org.eclipse.jgit.transport.URIish', '<init>', '^([\\\\/]?((?:[A-Za-z]:)?[\\\\/]?(?:(?:[^\\\\/]+[\\\\/]+)*[^\\\\/]+[\\\\/]*)))$', '\\\\some\\place')","[7084, 7199]"
"('Description.java', 'org.junit.runner.Description', 'methodAndClassNamePatternGroupOrDefault', '([\\s\\S]*)\\((.*)\\)', 'testInexactRename_OneRenameTwoUnrelatedFiles(org.eclipse.jgit.diff.RenameDetectorTest)')","[93363, 93925]"
"('Description.java', 'org.junit.runner.Description', 'methodAndClassNamePatternGroupOrDefault', '([\\s\\S]*)\\((.*)\\)', 'testQuote_Ang(org.eclipse.jgit.util.QuotedStringGitPathStyleTest)')","[177550, 177978]"
"('Description.java', 'org.junit.runner.Description', 'methodAndClassNamePatternGroupOrDefault', '([\\s\\S]*)\\((.*)\\)', 'testFilePathCase3(org.eclipse.jgit.fnmatch.FileNameMatcherTest)')","[102889, 106239]"
"('Description.java', 'org.junit.runner.Description', 'methodAndClassNamePatternGroupOrDefault', '([\\s\\S]*)\\((.*)\\)', 'testContainsMany(org.eclipse.jgit.internal.storage.file.InflatingBitSetTest)')","[250764, 250849]"
"('URIish.java', 'org.eclipse.jgit.transport.URIish', '<init>', '^(file):([\\\\/](?![\\\\/])((?:[A-Za-z]:)?[\\\\/]?(?:(?:[^\\\\/]+[\\\\/]+)*[^\\\\/]+[\\\\/]*)))$', 'ssh://example.com/D:/x')","[52756, 52940, 53860, 54044, 54964, 55148]"
"('URIish.java', 'org.eclipse.jgit.transport.URIish', '<init>', '^(file):([\\\\/](?![\\\\/])((?:[A-Za-z]:)?[\\\\/]?(?:(?:[^\\\\/]+[\\\\/]+)*[^\\\\/]+[\\\\/]*)))$', 'https://lusr\\example@[::1]:80/D:\\x')",[39370]
"('URIish.java', 'org.eclipse.jgit.transport.URIish', '<init>', '^(file):([\\\\/](?![\\\\/])((?:[A-Za-z]:)?[\\\\/]?(?:(?:[^\\\\/]+[\\\\/]+)*[^\\\\/]+[\\\\/]*)))$', '/tmp/jgit_test_2412289587651931572_tmp/tmp_8062070046587231599/.git')","[229738, 229872]"
"('URIish.java', 'org.eclipse.jgit.transport.URIish', '<init>', '^([a-z][a-z0-9+-]+)://(?:(?:([^/:@]+)(?::([^\\\\/]+))?@)?((?:[^\\\\/:]+)|(?:\\[[0-9a-f:]+\\]))(?::(\\d+))?((?:/~(?:[^\\\\/]+))?[\\\\/]))?(.+)?$', 'file:///tmp/jgit_test_4267913266736872707_tmp/tmp_8595701910287788852/.git/')",[132192]
"('URIish.java', 'org.eclipse.jgit.transport.URIish', '<init>', '^(file):([\\\\/](?![\\\\/])((?:[A-Za-z]:)?[\\\\/]?(?:(?:[^\\\\/]+[\\\\/]+)*[^\\\\/]+[\\\\/]*)))$', 'ssh+git://me:wtf@1.2.3.4:1234/D:\\x')",[14649]
"('URIish.java', 'org.eclipse.jgit.transport.URIish', '<init>', '^([a-z][a-z0-9+-]+)://(?:(?:([^/:@]+)(?::([^\\\\/]+))?@)?((?:[^\\\\/:]+)|(?:\\[[0-9a-f:]+\\]))(?::(\\d+))?((?:/~(?:[^\\\\/]+))?[\\\\/]))?(.+)?$', 'ssh://l usr\\example.com@example.com:1234//abc')",[27278]
"('Description.java', 'org.junit.runner.Description', 'methodAndClassNamePatternGroupOrDefault', '([\\s\\S]*)\\((.*)\\)', 'testFindObjects(org.eclipse.jgit.treewalk.ForPathTest)')","[135461, 135483]"
"('URIish.java', 'org.eclipse.jgit.transport.URIish', '<init>', '^([a-z][a-z0-9+-]+)://(?:(?:([^/:@]+)(?::([^\\\\/]+))?@)?((?:[^\\\\/:]+)|(?:\\[[0-9a-f:]+\\]))(?::(\\d+))?((?:/~(?:[^\\\\/]+))?[\\\\/]))?(.+)?$', 'http://lusr\\example:wtf@example.com:1234//abc')",[21593]
"('Description.java', 'org.junit.runner.Description', 'methodAndClassNamePatternGroupOrDefault', '([\\s\\S]*)\\((.*)\\)', 'org.eclipse.jgit.api.CommitAndLogCommandTest')","[212982, 215689]"
"('Description.java', 'org.junit.runner.Description', 'methodAndClassNamePatternGroupOrDefault', '([\\s\\S]*)\\((.*)\\)', 'testDeleteNotFound(org.eclipse.jgit.internal.storage.file.RefUpdateTest)')","[252830, 253652]"
"('Description.java', 'org.junit.runner.Description', 'methodAndClassNamePatternGroupOrDefault', '([\\s\\S]*)\\((.*)\\)', 'testReadSingleBytes(org.eclipse.jgit.util.io.UnionInputStreamTest)')","[175147, 175367]"
"('Description.java', 'org.junit.runner.Description', 'methodAndClassNamePatternGroupOrDefault', '([\\s\\S]*)\\((.*)\\)', 'testMultipleHeads_SameBase1(org.eclipse.jgit.revwalk.RevWalkMergeBaseTest)')","[81884, 82011]"
"('URIish.java', 'org.eclipse.jgit.transport.URIish', '<init>', '^([a-z][a-z0-9+-]+)://(?:(?:([^/:@]+)(?::([^\\\\/]+))?@)?((?:[^\\\\/:]+)|(?:\\[[0-9a-f:]+\\]))(?::(\\d+))?((?:/~(?:[^\\\\/]+))?[\\\\/]))?(.+)?$', 'ssh://lusr\\example:wtf@[::1]:80/D:/x')",[13526]
"('URIish.java', 'org.eclipse.jgit.transport.URIish', '<init>', '^([a-z][a-z0-9+-]+)://(?:(?:([^/:@]+)(?::([^\\\\/]+))?@)?((?:[^\\\\/:]+)|(?:\\[[0-9a-f:]+\\]))(?::(\\d+))?((?:/~(?:[^\\\\/]+))?[\\\\/]))?(.+)?$', 'https://lusr\\example@[::1]:1234/D:/x')",[39163]
"('URIish.java', 'org.eclipse.jgit.transport.URIish', '<init>', '^(file):([\\\\/](?![\\\\/])((?:[A-Za-z]:)?[\\\\/]?(?:(?:[^\\\\/]+[\\\\/]+)*[^\\\\/]+[\\\\/]*)))$', 'file:/tmp/jgit_test_5920102574607815165_tmp/tmp_7490007573307047225/.git/')",[108095]
"('Description.java', 'org.junit.runner.Description', 'methodAndClassNamePatternGroupOrDefault', '([\\s\\S]*)\\((.*)\\)', 'testTagging(org.eclipse.jgit.api.TagCommandTest)')","[201595, 201891]"
"('URIish.java', 'org.eclipse.jgit.transport.URIish', '<init>', '^(file):([\\\\/](?![\\\\/])((?:[A-Za-z]:)?[\\\\/]?(?:(?:[^\\\\/]+[\\\\/]+)*[^\\\\/]+[\\\\/]*)))$', 'http://l usr\\example.com:wtf@example.com:80//')",[20581]
"('URIish.java', 'org.eclipse.jgit.transport.URIish', '<init>', '^(file):([\\\\/](?![\\\\/])((?:[A-Za-z]:)?[\\\\/]?(?:(?:[^\\\\/]+[\\\\/]+)*[^\\\\/]+[\\\\/]*)))$', 'https://lusr\\example@example.com//')","[51560, 51744]"
"('URIish.java', 'org.eclipse.jgit.transport.URIish', '<init>', '^([a-z][a-z0-9+-]+)://(?:(?:([^/:@]+)(?::([^\\\\/]+))?@)?((?:[^\\\\/:]+)|(?:\\[[0-9a-f:]+\\]))(?::(\\d+))?((?:/~(?:[^\\\\/]+))?[\\\\/]))?(.+)?$', 'http://lusr\\example:wtf@1.2.3.4:1234//')",[21915]
"('URIish.java', 'org.eclipse.jgit.transport.URIish', '<init>', '^([a-z][a-z0-9+-]+)://(?:(?:([^/:@]+)(?::([^\\\\/]+))?@)?((?:[^\\\\/:]+)|(?:\\[[0-9a-f:]+\\]))(?::(\\d+))?((?:/~(?:[^\\\\/]+))?[\\\\/]))?(.+)?$', 'git://host/abc/')",[67177]
"('Description.java', 'org.junit.runner.Description', 'methodAndClassNamePatternGroupOrDefault', '([\\s\\S]*)\\((.*)\\)', 'repositoryWithDifferentRevCheckedOutSubmodule(org.eclipse.jgit.submodule.SubmoduleStatusTest)')","[109370, 109523]"
"('Description.java', 'org.junit.runner.Description', 'methodAndClassNamePatternGroupOrDefault', '([\\s\\S]*)\\((.*)\\)', 'testCRC32(org.eclipse.jgit.internal.storage.file.PackIndexV1Test)')","[250091, 250218]"
"('Description.java', 'org.junit.runner.Description', 'methodAndClassNamePatternGroupOrDefault', '([\\s\\S]*)\\((.*)\\)', 'workingDirectoryDeleteIndexEdit(org.eclipse.jgit.api.StashCreateCommandTest)')","[202382, 202726]"
"('FastIgnoreRule.java', 'org.eclipse.jgit.ignore.FastIgnoreRule', 'isMatch', '[b-d]', 'b')",[161774]
"('URIish.java', 'org.eclipse.jgit.transport.URIish', '<init>', '^([a-z][a-z0-9+-]+)://(?:(?:([^/:@]+)(?::([^\\\\/]+))?@)?((?:[^\\\\/:]+)|(?:\\[[0-9a-f:]+\\]))(?::(\\d+))?((?:/~(?:[^\\\\/]+))?[\\\\/]))?(.+)?$', 'https://me:wtf@[::1]:80//')",[23571]
"('URIish.java', 'org.eclipse.jgit.transport.URIish', '<init>', '^([a-z][a-z0-9+-]+)://(?:(?:([^/:@]+)(?::([^\\\\/]+))?@)?((?:[^\\\\/:]+)|(?:\\[[0-9a-f:]+\\]))(?::(\\d+))?((?:/~(?:[^\\\\/]+))?[\\\\/]))?(.+)?$', 'http://l usr\\example.com:wtf@1.2.3.4:1234/D:\\x')",[20926]
"('URIish.java', 'org.eclipse.jgit.transport.URIish', '<init>', '^(file):([\\\\/](?![\\\\/])((?:[A-Za-z]:)?[\\\\/]?(?:(?:[^\\\\/]+[\\\\/]+)*[^\\\\/]+[\\\\/]*)))$', 'ssh+git://lusr\\example@1.2.3.4:1234/D:/x')",[32148]
"('Description.java', 'org.junit.runner.Description', 'methodAndClassNamePatternGroupOrDefault', '([\\s\\S]*)\\((.*)\\)', 'testCleanWithPaths(org.eclipse.jgit.api.CleanCommandTest)')","[216975, 217124]"
"('URIish.java', 'org.eclipse.jgit.transport.URIish', '<init>', '^([a-z][a-z0-9+-]+)://(?:(?:([^/:@]+)(?::([^\\\\/]+))?@)?((?:[^\\\\/:]+)|(?:\\[[0-9a-f:]+\\]))(?::(\\d+))?((?:/~(?:[^\\\\/]+))?[\\\\/]))?(.+)?$', 'ssh+git://l usr\\example.com:wtf@example.com:80//')",[16158]
"('Description.java', 'org.junit.runner.Description', 'methodAndClassNamePatternGroupOrDefault', '([\\s\\S]*)\\((.*)\\)', 'testClear(org.eclipse.jgit.revwalk.LIFORevQueueTest)')","[78438, 78547]"
"('Description.java', 'org.junit.runner.Description', 'methodAndClassNamePatternGroupOrDefault', '([\\s\\S]*)\\((.*)\\)', 'testDequote_Empty2(org.eclipse.jgit.util.QuotedStringGitPathStyleTest)')","[177466, 177890]"
"('URIish.java', 'org.eclipse.jgit.transport.URIish', '<init>', '^([a-z][a-z0-9+-]+)://(?:(?:([^/:@]+)(?::([^\\\\/]+))?@)?((?:[^\\\\/:]+)|(?:\\[[0-9a-f:]+\\]))(?::(\\d+))?((?:/~(?:[^\\\\/]+))?[\\\\/]))?(.+)?$', 'http://l usr\\example.com:wtf@[::1]:80//abc')",[21409]
"('Description.java', 'org.junit.runner.Description', 'methodAndClassNamePatternGroupOrDefault', '([\\s\\S]*)\\((.*)\\)', 'testOnlyOption_f1_8_c(org.eclipse.jgit.api.CommitOnlyTest)')","[236710, 238800]"
"('QuotedString.java', 'org.eclipse.jgit.util.QuotedString$BourneUserPathStyle', 'quote', '^~[A-Za-z0-9_-]+$', 'a')","[192950, 192975]"
"('Description.java', 'org.junit.runner.Description', 'methodAndClassNamePatternGroupOrDefault', '([\\s\\S]*)\\((.*)\\)', 'testDiffRootNullToTree(org.eclipse.jgit.diff.DiffFormatterTest)')","[95874, 96128]"
"('URIish.java', 'org.eclipse.jgit.transport.URIish', 'getHumanishName', '^([\\\\/]?((?:[A-Za-z]:)?[\\\\/]?(?:(?:[^\\\\/]+[\\\\/]+)*[^\\\\/]+[\\\\/]*)))$', 'abc')",[66027]
"('URIish.java', 'org.eclipse.jgit.transport.URIish', '<init>', '^([a-z][a-z0-9+-]+)://(?:(?:([^/:@]+)(?::([^\\\\/]+))?@)?((?:[^\\\\/:]+)|(?:\\[[0-9a-f:]+\\]))(?::(\\d+))?((?:/~(?:[^\\\\/]+))?[\\\\/]))?(.+)?$', 'ssh+git://l usr\\example.com:wtf@1.2.3.4:1234//')",[16342]
"('Description.java', 'org.junit.runner.Description', 'methodAndClassNamePatternGroupOrDefault', '([\\s\\S]*)\\((.*)\\)', 'submoduleWithNoGitDirectory(org.eclipse.jgit.treewalk.FileTreeIteratorTest)')","[131270, 131610]"
"('URIish.java', 'org.eclipse.jgit.transport.URIish', '<init>', '^(file):([\\\\/](?![\\\\/])((?:[A-Za-z]:)?[\\\\/]?(?:(?:[^\\\\/]+[\\\\/]+)*[^\\\\/]+[\\\\/]*)))$', '/abc.git')",[66280]
"('Description.java', 'org.junit.runner.Description', 'methodAndClassNamePatternGroupOrDefault', '([\\s\\S]*)\\((.*)\\)', 'testEscapedBracket1[OldRule? false](org.eclipse.jgit.ignore.IgnoreRuleSpecialCasesTest)')","[149112, 156217]"
"('Repository.java', 'org.eclipse.jgit.lib.Repository', 'resolve', '^-\\d+$', '-1')","[126866, 126893, 127031, 127058]"
"('URIish.java', 'org.eclipse.jgit.transport.URIish', '<init>', '^(file):([\\\\/](?![\\\\/])((?:[A-Za-z]:)?[\\\\/]?(?:(?:[^\\\\/]+[\\\\/]+)*[^\\\\/]+[\\\\/]*)))$', 'https://example.com//abc')","[62646, 62830, 63750, 63934, 64854, 65038]"
"('Description.java', 'org.junit.runner.Description', 'methodAndClassNamePatternGroupOrDefault', '([\\s\\S]*)\\((.*)\\)', 'testTagTree(org.eclipse.jgit.revwalk.RevTagParseTest)')","[80060, 80461]"
"('URIish.java', 'org.eclipse.jgit.transport.URIish', '<init>', '^([a-z][a-z0-9+-]+)://(?:(?:([^/:@]+)(?::([^\\\\/]+))?@)?((?:[^\\\\/:]+)|(?:\\[[0-9a-f:]+\\]))(?::(\\d+))?((?:/~(?:[^\\\\/]+))?[\\\\/]))?(.+)?$', 'https://me:wtf@1.2.3.4:80/D:\\x')",[23341]
"('URIish.java', 'org.eclipse.jgit.transport.URIish', '<init>', '^([a-z][a-z0-9+-]+)://(?:(?:([^/:@]+)(?::([^\\\\/]+))?@)?((?:[^\\\\/:]+)|(?:\\[[0-9a-f:]+\\]))(?::(\\d+))?((?:/~(?:[^\\\\/]+))?[\\\\/]))?(.+)?$', 'file:///tmp/jgit_test_8806619254737089499_tmp/tmp_2300954382523582170/.git/')",[245378]
"('URIish.java', 'org.eclipse.jgit.transport.URIish', '<init>', '^([a-z][a-z0-9+-]+)://(?:(?:([^/:@]+)(?::([^\\\\/]+))?@)?((?:[^\\\\/:]+)|(?:\\[[0-9a-f:]+\\]))(?::(\\d+))?((?:/~(?:[^\\\\/]+))?[\\\\/]))?(.+)?$', 'http://lusr\\example@example.com:80//')",[35207]
"('Description.java', 'org.junit.runner.Description', 'methodAndClassNamePatternGroupOrDefault', '([\\s\\S]*)\\((.*)\\)', 'testParseAbbrIndexLine_WithMode(org.eclipse.jgit.patch.FileHeaderTest)')","[195264, 195713]"
"('Description.java', 'org.junit.runner.Description', 'methodAndClassNamePatternGroupOrDefault', '([\\s\\S]*)\\((.*)\\)', 'org.eclipse.jgit.internal.storage.file.FileRepositoryBuilderTest')","[248345, 248669]"
"('URIish.java', 'org.eclipse.jgit.transport.URIish', '<init>', '^(file):([\\\\/](?![\\\\/])((?:[A-Za-z]:)?[\\\\/]?(?:(?:[^\\\\/]+[\\\\/]+)*[^\\\\/]+[\\\\/]*)))$', 'https://l usr\\example.com@[::1]/D:/x')","[51284, 51468]"
"('URIish.java', 'org.eclipse.jgit.transport.URIish', '<init>', '^(file):([\\\\/](?![\\\\/])((?:[A-Za-z]:)?[\\\\/]?(?:(?:[^\\\\/]+[\\\\/]+)*[^\\\\/]+[\\\\/]*)))$', '/home/m y')","[67223, 67338]"
"('Description.java', 'org.junit.runner.Description', 'methodAndClassNamePatternGroupOrDefault', '([\\s\\S]*)\\((.*)\\)', 'nonReferencedNonExpiredObject_notPruned(org.eclipse.jgit.internal.storage.file.GcPruneNonReferencedTest)')","[256259, 256366]"
"('Description.java', 'org.junit.runner.Description', 'methodAndClassNamePatternGroupOrDefault', '([\\s\\S]*)\\((.*)\\)', 'org.eclipse.jgit.util.io.UnionInputStreamTest')","[174937, 175390]"
"('Description.java', 'org.junit.runner.Description', 'methodAndClassNamePatternGroupOrDefault', '([\\s\\S]*)\\((.*)\\)', 'testFormatWeeks(org.eclipse.jgit.util.RelativeDateFormatterTest)')","[181363, 181557]"
"('URIish.java', 'org.eclipse.jgit.transport.URIish', '<init>', '^(file):([\\\\/](?![\\\\/])((?:[A-Za-z]:)?[\\\\/]?(?:(?:[^\\\\/]+[\\\\/]+)*[^\\\\/]+[\\\\/]*)))$', 'file:/tmp/jgit_test_4250465133596588734_tmp/tmp_290954966130449691/.git/')","[209935, 211354]"
"('Description.java', 'org.junit.runner.Description', 'methodAndClassNamePatternGroupOrDefault', '([\\s\\S]*)\\((.*)\\)', 'testDirectoryFileConflicts_11(org.eclipse.jgit.lib.DirCacheCheckoutTest)')","[116536, 117512]"
"('Description.java', 'org.junit.runner.Description', 'methodAndClassNamePatternGroupOrDefault', '([\\s\\S]*)\\((.*)\\)', 'testAddA1(org.eclipse.jgit.api.ApplyCommandTest)')","[223463, 223696]"
"('Description.java', 'org.junit.runner.Description', 'methodAndClassNamePatternGroupOrDefault', '([\\s\\S]*)\\((.*)\\)', 'testOnlyOption_f1_2_d(org.eclipse.jgit.api.CommitOnlyTest)')","[236101, 238162]"
"('URIish.java', 'org.eclipse.jgit.transport.URIish', '<init>', '^(file):([\\\\/](?![\\\\/])((?:[A-Za-z]:)?[\\\\/]?(?:(?:[^\\\\/]+[\\\\/]+)*[^\\\\/]+[\\\\/]*)))$', 'https://l usr\\example.com@example.com:80/D:\\x')",[37530]
"('Description.java', 'org.junit.runner.Description', 'methodAndClassNamePatternGroupOrDefault', '([\\s\\S]*)\\((.*)\\)', 'testMaster(org.eclipse.jgit.transport.RefSpecTest)')","[14249, 15750]"
"('Description.java', 'org.junit.runner.Description', 'methodAndClassNamePatternGroupOrDefault', '([\\s\\S]*)\\((.*)\\)', 'test000_openrepo_default_workDirSet(org.eclipse.jgit.internal.storage.file.T0003_BasicTest)')","[249461, 250011]"
"('URIish.java', 'org.eclipse.jgit.transport.URIish', '<init>', '^(file):([\\\\/](?![\\\\/])((?:[A-Za-z]:)?[\\\\/]?(?:(?:[^\\\\/]+[\\\\/]+)*[^\\\\/]+[\\\\/]*)))$', 'file:/tmp/jgit_test_1342417779279722556_tmp/tmp_9074189985993827829/.git/')",[174308]
"('URIish.java', 'org.eclipse.jgit.transport.URIish', '<init>', '^(file):([\\\\/](?![\\\\/])((?:[A-Za-z]:)?[\\\\/]?(?:(?:[^\\\\/]+[\\\\/]+)*[^\\\\/]+[\\\\/]*)))$', 'ssh+git://me@example.com:1234//abc')",[29526]
"('Description.java', 'org.junit.runner.Description', 'methodAndClassNamePatternGroupOrDefault', '([\\s\\S]*)\\((.*)\\)', 'testSpecialGroupCase6[OldRule? false](org.eclipse.jgit.ignore.IgnoreRuleSpecialCasesTest)')","[145846, 152951]"
"('Description.java', 'org.junit.runner.Description', 'methodAndClassNamePatternGroupOrDefault', '([\\s\\S]*)\\((.*)\\)', 'org.eclipse.jgit.internal.storage.pack.IntSetTest')","[246916, 246982]"
"('Description.java', 'org.junit.runner.Description', 'methodAndClassNamePatternGroupOrDefault', '([\\s\\S]*)\\((.*)\\)', 'testMixedGroupCase0(org.eclipse.jgit.fnmatch.FileNameMatcherTest)')","[101272, 104545]"
"('Description.java', 'org.junit.runner.Description', 'methodAndClassNamePatternGroupOrDefault', '([\\s\\S]*)\\((.*)\\)', 'getRemoteTrackingBranchShouldReturnNullWithoutFetchSpec(org.eclipse.jgit.lib.BranchConfigTest)')","[120499, 120671]"
"('Description.java', 'org.junit.runner.Description', 'methodAndClassNamePatternGroupOrDefault', '([\\s\\S]*)\\((.*)\\)', 'testEncodeInt16(org.eclipse.jgit.util.NBTest)')","[184893, 185067]"
"('Description.java', 'org.junit.runner.Description', 'methodAndClassNamePatternGroupOrDefault', '([\\s\\S]*)\\((.*)\\)', 'testAddOne(org.eclipse.jgit.revwalk.RevFlagSetTest)')","[79765, 79916]"
"('Description.java', 'org.junit.runner.Description', 'methodAndClassNamePatternGroupOrDefault', '([\\s\\S]*)\\((.*)\\)', 'testNoPostOrder(org.eclipse.jgit.treewalk.PostOrderTreeWalkTest)')","[135144, 135271]"
"('Description.java', 'org.junit.runner.Description', 'methodAndClassNamePatternGroupOrDefault', '([\\s\\S]*)\\((.*)\\)', 'testReadACK_ERR(org.eclipse.jgit.transport.PacketLineInTest)')","[18594, 19782]"
"('Description.java', 'org.junit.runner.Description', 'methodAndClassNamePatternGroupOrDefault', '([\\s\\S]*)\\((.*)\\)', 'testTreeIteratorWithGitmodules(org.eclipse.jgit.submodule.SubmoduleWalkTest)')","[108472, 108669]"
"('URIish.java', 'org.eclipse.jgit.transport.URIish', '<init>', '^([a-z][a-z0-9+-]+)://(?:(?:([^/:@]+)(?::([^\\\\/]+))?@)?((?:[^\\\\/:]+)|(?:\\[[0-9a-f:]+\\]))(?::(\\d+))?((?:/~(?:[^\\\\/]+))?[\\\\/]))?(.+)?$', 'ssh+git://lusr\\example@[::1]/D:/x')","[45787, 45971]"
"('URIish.java', 'org.eclipse.jgit.transport.URIish', '<init>', '^([a-z][a-z0-9+-]+)://(?:(?:([^/:@]+)(?::([^\\\\/]+))?@)?((?:[^\\\\/:]+)|(?:\\[[0-9a-f:]+\\]))(?::(\\d+))?((?:/~(?:[^\\\\/]+))?[\\\\/]))?(.+)?$', 'ssh+git://l usr\\example.com@example.com:1234/D:/x')",[30699]
"('URIish.java', 'org.eclipse.jgit.transport.URIish', '<init>', '^(file):([\\\\/](?![\\\\/])((?:[A-Za-z]:)?[\\\\/]?(?:(?:[^\\\\/]+[\\\\/]+)*[^\\\\/]+[\\\\/]*)))$', 'git://example.com:333/home/m y')","[67926, 67972]"
"('Description.java', 'org.junit.runner.Description', 'methodAndClassNamePatternGroupOrDefault', '([\\s\\S]*)\\((.*)\\)', 'shouldMarkEntriesWhenGivenMarkTreeFilter(org.eclipse.jgit.diff.DiffEntryTest)')","[95278, 95531]"
"('Description.java', 'org.junit.runner.Description', 'methodAndClassNamePatternGroupOrDefault', '([\\s\\S]*)\\((.*)\\)', 'testSpecialGroupCase3[OldRule? false](org.eclipse.jgit.ignore.IgnoreRuleSpecialCasesTest)')","[145777, 152882]"
"('URIish.java', 'org.eclipse.jgit.transport.URIish', '<init>', '^([a-z][a-z0-9+-]+)://(?:(?:([^/:@]+)(?::([^\\\\/]+))?@)?((?:[^\\\\/:]+)|(?:\\[[0-9a-f:]+\\]))(?::(\\d+))?((?:/~(?:[^\\\\/]+))?[\\\\/]))?(.+)?$', 'ssh://lusr\\example:wtf@[::1]:80//abc')",[13438]
"('Description.java', 'org.junit.runner.Description', 'methodAndClassNamePatternGroupOrDefault', '([\\s\\S]*)\\((.*)\\)', 'testReset(org.eclipse.jgit.dircache.DirCacheIteratorTest)')","[92456, 92690]"
"('Description.java', 'org.junit.runner.Description', 'methodAndClassNamePatternGroupOrDefault', '([\\s\\S]*)\\((.*)\\)', 'testUntrackedFolders(org.eclipse.jgit.lib.IndexDiffTest)')","[110385, 110727]"
"('Description.java', 'org.junit.runner.Description', 'methodAndClassNamePatternGroupOrDefault', '([\\s\\S]*)\\((.*)\\)', 'testSpecialGroupCase4[OldRule? true](org.eclipse.jgit.ignore.IgnoreRuleSpecialCasesTest)')","[149363, 156447]"
"('URIish.java', 'org.eclipse.jgit.transport.URIish', '<init>', '^([a-z][a-z0-9+-]+)://(?:(?:([^/:@]+)(?::([^\\\\/]+))?@)?((?:[^\\\\/:]+)|(?:\\[[0-9a-f:]+\\]))(?::(\\d+))?((?:/~(?:[^\\\\/]+))?[\\\\/]))?(.+)?$', 'ssh+git://lusr\\example:wtf@1.2.3.4:80//abc')",[17699]
"('URIish.java', 'org.eclipse.jgit.transport.URIish', '<init>', '^(file):([\\\\/](?![\\\\/])((?:[A-Za-z]:)?[\\\\/]?(?:(?:[^\\\\/]+[\\\\/]+)*[^\\\\/]+[\\\\/]*)))$', 'http://l usr\\example.com@[::1]:80/D:\\x')",[34954]
"('URIish.java', 'org.eclipse.jgit.transport.URIish', '<init>', '^(file):([\\\\/](?![\\\\/])((?:[A-Za-z]:)?[\\\\/]?(?:(?:[^\\\\/]+[\\\\/]+)*[^\\\\/]+[\\\\/]*)))$', 'file:///D:/m y')","[70919, 70965]"
"('Description.java', 'org.junit.runner.Description', 'methodAndClassNamePatternGroupOrDefault', '([\\s\\S]*)\\((.*)\\)', 'testApplyStashWithDeletedFile(org.eclipse.jgit.api.StashApplyCommandTest)')","[241210, 241780]"
"('Description.java', 'org.junit.runner.Description', 'methodAndClassNamePatternGroupOrDefault', '([\\s\\S]*)\\((.*)\\)', 'testEncode(org.eclipse.jgit.util.Base64Test)')","[183406, 183493]"
"('URIish.java', 'org.eclipse.jgit.transport.URIish', '<init>', '^(?:([^/:@]+)(?::([^\\\\/]+))?@)?((?:[^\\\\/:]+)|(?:\\[[0-9a-f:]+\\])):((?:(?:/~(?:[^\\\\/]+))[\\\\/])?(?:(?:[^\\\\/]+[\\\\/]+)*[^\\\\/]+[\\\\/]*))$', 'D:\\m y')","[68228, 68343]"
"('Description.java', 'org.junit.runner.Description', 'methodAndClassNamePatternGroupOrDefault', '([\\s\\S]*)\\((.*)\\)', 'testKeyIsPrefixOfFilter(org.eclipse.jgit.treewalk.filter.PathFilterGroupTest)')","[138951, 139105]"
"('Description.java', 'org.junit.runner.Description', 'methodAndClassNamePatternGroupOrDefault', '([\\s\\S]*)\\((.*)\\)', 't1sameDepthT2(org.eclipse.jgit.api.DescribeCommandTest)')","[215767, 215922]"
"('URIish.java', 'org.eclipse.jgit.transport.URIish', '<init>', '^(file):([\\\\/](?![\\\\/])((?:[A-Za-z]:)?[\\\\/]?(?:(?:[^\\\\/]+[\\\\/]+)*[^\\\\/]+[\\\\/]*)))$', 'https://lusr\\example@1.2.3.4:80//abc')",[38910]
"('Description.java', 'org.junit.runner.Description', 'methodAndClassNamePatternGroupOrDefault', '([\\s\\S]*)\\((.*)\\)', 'testIterator(org.eclipse.jgit.lib.ObjectIdSubclassMapTest)')","[114071, 114224]"
"('URIish.java', 'org.eclipse.jgit.transport.URIish', '<init>', '^(file):([\\\\/](?![\\\\/])((?:[A-Za-z]:)?[\\\\/]?(?:(?:[^\\\\/]+[\\\\/]+)*[^\\\\/]+[\\\\/]*)))$', '/tmp/jgit_test_873718593406949091_tmp/tmp_6143507308402612209.git')",[76755]
"('URIish.java', 'org.eclipse.jgit.transport.URIish', '<init>', '^(file):([\\\\/](?![\\\\/])((?:[A-Za-z]:)?[\\\\/]?(?:(?:[^\\\\/]+[\\\\/]+)*[^\\\\/]+[\\\\/]*)))$', 'file:/tmp/jgit_test_6790445454086415234_tmp/tmp_3647197744466266699/.git/.')",[174432]
"('Description.java', 'org.junit.runner.Description', 'methodAndClassNamePatternGroupOrDefault', '([\\s\\S]*)\\((.*)\\)', 'testAlnumGroupCase0[OldRule? true](org.eclipse.jgit.ignore.IgnoreRuleSpecialCasesTest)')","[152261, 159345]"
"('URIish.java', 'org.eclipse.jgit.transport.URIish', '<init>', '^([a-z][a-z0-9+-]+)://(?:(?:([^/:@]+)(?::([^\\\\/]+))?@)?((?:[^\\\\/:]+)|(?:\\[[0-9a-f:]+\\]))(?::(\\d+))?((?:/~(?:[^\\\\/]+))?[\\\\/]))?(.+)?$', 'ssh+git://l usr\\example.com:wtf@example.com:80//abc')",[16204]
"('Description.java', 'org.junit.runner.Description', 'methodAndClassNamePatternGroupOrDefault', '([\\s\\S]*)\\((.*)\\)', 'testRebaseInteractiveMixedSquashAndFixup(org.eclipse.jgit.api.RebaseCommandTest)')","[218488, 220016]"
"('Description.java', 'org.junit.runner.Description', 'methodAndClassNamePatternGroupOrDefault', '([\\s\\S]*)\\((.*)\\)', 'testAlias_invalidConnectionAttempts(org.eclipse.jgit.transport.OpenSshConfigTest)')","[3640, 4010]"
"('Description.java', 'org.junit.runner.Description', 'methodAndClassNamePatternGroupOrDefault', '([\\s\\S]*)\\((.*)\\)', 'testDequote_UnknownEscapeQ(org.eclipse.jgit.util.QuotedStringGitPathStyleTest)')","[177655, 178088]"
"('Description.java', 'org.junit.runner.Description', 'methodAndClassNamePatternGroupOrDefault', '([\\s\\S]*)\\((.*)\\)', 'testGraphGroupCase3[OldRule? false](org.eclipse.jgit.ignore.IgnoreRuleSpecialCasesTest)')","[146398, 153503]"
"('URIish.java', 'org.eclipse.jgit.transport.URIish', '<init>', '^([a-z][a-z0-9+-]+)://(?:(?:([^/:@]+)(?::([^\\\\/]+))?@)?((?:[^\\\\/:]+)|(?:\\[[0-9a-f:]+\\]))(?::(\\d+))?((?:/~(?:[^\\\\/]+))?[\\\\/]))?(.+)?$', '../tmp_6907696380270154428')",[73037]
"('Description.java', 'org.junit.runner.Description', 'methodAndClassNamePatternGroupOrDefault', '([\\s\\S]*)\\((.*)\\)', 'testLongPaths(org.eclipse.jgit.treewalk.filter.PathFilterGroupTest)')","[138930, 139083]"
"('URIish.java', 'org.eclipse.jgit.transport.URIish', '<init>', '^([a-z][a-z0-9+-]+)://(?:(?:([^/:@]+)(?::([^\\\\/]+))?@)?((?:[^\\\\/:]+)|(?:\\[[0-9a-f:]+\\]))(?::(\\d+))?((?:/~(?:[^\\\\/]+))?[\\\\/]))?(.+)?$', '/tmp/jgit_test_1317497064317343419_tmp/tmp_1402166022410132527')","[226268, 226398, 226877]"
"('Description.java', 'org.junit.runner.Description', 'methodAndClassNamePatternGroupOrDefault', '([\\s\\S]*)\\((.*)\\)', 'testVerySimpleGroupCase0[OldRule? true](org.eclipse.jgit.ignore.IgnoreRuleSpecialCasesTest)')","[152606, 159690]"
"('URIish.java', 'org.eclipse.jgit.transport.URIish', '<init>', '^(file):([\\\\/](?![\\\\/])((?:[A-Za-z]:)?[\\\\/]?(?:(?:[^\\\\/]+[\\\\/]+)*[^\\\\/]+[\\\\/]*)))$', 'ssh://me@1.2.3.4:1234//')",[26473]
"('Description.java', 'org.junit.runner.Description', 'methodAndClassNamePatternGroupOrDefault', '([\\s\\S]*)\\((.*)\\)', 'testFileRepository_ChangeEventsOnlyOnSave(org.eclipse.jgit.events.ConfigChangeEventTest)')","[194053, 194075]"
"('URIish.java', 'org.eclipse.jgit.transport.URIish', '<init>', '^(file):([\\\\/](?![\\\\/])((?:[A-Za-z]:)?[\\\\/]?(?:(?:[^\\\\/]+[\\\\/]+)*[^\\\\/]+[\\\\/]*)))$', 'ssh+git://me@1.2.3.4:80//')",[30032]
"('URIish.java', 'org.eclipse.jgit.transport.URIish', '<init>', '^([a-z][a-z0-9+-]+)://(?:(?:([^/:@]+)(?::([^\\\\/]+))?@)?((?:[^\\\\/:]+)|(?:\\[[0-9a-f:]+\\]))(?::(\\d+))?((?:/~(?:[^\\\\/]+))?[\\\\/]))?(.+)?$', 'ssh://l usr\\example.com:wtf@example.com:1234//abc')",[10452]
"('URIish.java', 'org.eclipse.jgit.transport.URIish', '<init>', '^(?:([^/:@]+)(?::([^\\\\/]+))?@)?([^\\\\/:]{2,}):([\\\\/](?:(?:[^\\\\/]+[\\\\/]+)*[^\\\\/]+[\\\\/]*))$', '/abc.git/')",[66763]
"('URIish.java', 'org.eclipse.jgit.transport.URIish', '<init>', '^(file):([\\\\/](?![\\\\/])((?:[A-Za-z]:)?[\\\\/]?(?:(?:[^\\\\/]+[\\\\/]+)*[^\\\\/]+[\\\\/]*)))$', 'file:///tmp/jgit_test_4047924909598757188_tmp/tmp_5305605284190767544/.git/')",[209963]
"('Description.java', 'org.junit.runner.Description', 'methodAndClassNamePatternGroupOrDefault', '([\\s\\S]*)\\((.*)\\)', 'testBlankGroupCase1(org.eclipse.jgit.fnmatch.FileNameMatcherTest)')","[103351, 106723]"
"('URIish.java', 'org.eclipse.jgit.transport.URIish', '<init>', '^([a-z][a-z0-9+-]+)://(?:(?:([^/:@]+)(?::([^\\\\/]+))?@)?((?:[^\\\\/:]+)|(?:\\[[0-9a-f:]+\\]))(?::(\\d+))?((?:/~(?:[^\\\\/]+))?[\\\\/]))?(.+)?$', 'https://l usr\\example.com@[::1]:1234/D:/x')",[38059]
"('URIish.java', 'org.eclipse.jgit.transport.URIish', '<init>', '^(file):([\\\\/](?![\\\\/])((?:[A-Za-z]:)?[\\\\/]?(?:(?:[^\\\\/]+[\\\\/]+)*[^\\\\/]+[\\\\/]*)))$', 'http://l usr\\example.com@example.com:1234/D:\\x')",[34034]
"('Description.java', 'org.junit.runner.Description', 'methodAndClassNamePatternGroupOrDefault', '([\\s\\S]*)\\((.*)\\)', 'testMatchesBugId(org.eclipse.jgit.revwalk.FooterLineTest)')","[77565, 77973]"
"('Description.java', 'org.junit.runner.Description', 'methodAndClassNamePatternGroupOrDefault', '([\\s\\S]*)\\((.*)\\)', 'testRebaseWithUnstagedMasterChangeOtherCommit(org.eclipse.jgit.api.RebaseCommandTest)')","[217732, 219224]"
"('Description.java', 'org.junit.runner.Description', 'methodAndClassNamePatternGroupOrDefault', '([\\s\\S]*)\\((.*)\\)', 'testCherryPick(org.eclipse.jgit.api.CherryPickCommandTest)')","[232148, 232405]"
"('URIish.java', 'org.eclipse.jgit.transport.URIish', '<init>', '^(file):([\\\\/](?![\\\\/])((?:[A-Za-z]:)?[\\\\/]?(?:(?:[^\\\\/]+[\\\\/]+)*[^\\\\/]+[\\\\/]*)))$', 'ssh://1.2.3.4/D:\\x')","[53170, 53354, 54274, 54458, 55378, 55562]"
"('Description.java', 'org.junit.runner.Description', 'methodAndClassNamePatternGroupOrDefault', '([\\s\\S]*)\\((.*)\\)', 'testWildmatchDoNotMatch[OldRule? true](org.eclipse.jgit.ignore.FastIgnoreRuleTest)')","[164431, 165167]"
"('URIish.java', 'org.eclipse.jgit.transport.URIish', '<init>', '^([a-z][a-z0-9+-]+)://(?:(?:([^/:@]+)(?::([^\\\\/]+))?@)?((?:[^\\\\/:]+)|(?:\\[[0-9a-f:]+\\]))(?::(\\d+))?((?:/~(?:[^\\\\/]+))?[\\\\/]))?(.+)?$', 'https://me@example.com/D:/x')","[49467, 49651]"
"('Description.java', 'org.junit.runner.Description', 'methodAndClassNamePatternGroupOrDefault', '([\\s\\S]*)\\((.*)\\)', 'testTimeout_readByte_Success1(org.eclipse.jgit.util.io.TimeoutInputStreamTest)')","[173844, 174014]"
"('Description.java', 'org.junit.runner.Description', 'methodAndClassNamePatternGroupOrDefault', '([\\s\\S]*)\\((.*)\\)', 'testArrayConstructor(org.eclipse.jgit.util.io.UnionInputStreamTest)')","[175021, 175235]"
"('Description.java', 'org.junit.runner.Description', 'methodAndClassNamePatternGroupOrDefault', '([\\s\\S]*)\\((.*)\\)', 'testCommitAmend(org.eclipse.jgit.api.CommitAndLogCommandTest)')","[213108, 213324]"
"('Description.java', 'org.junit.runner.Description', 'methodAndClassNamePatternGroupOrDefault', '([\\s\\S]*)\\((.*)\\)', 'org.eclipse.jgit.internal.storage.dfs.DfsInserterTest')","[246024, 246262]"
"('URIish.java', 'org.eclipse.jgit.transport.URIish', '<init>', '^(file):([\\\\/](?![\\\\/])((?:[A-Za-z]:)?[\\\\/]?(?:(?:[^\\\\/]+[\\\\/]+)*[^\\\\/]+[\\\\/]*)))$', 'ssh://lusr\\example@[::1]/D:/x')","[42452, 42636]"
"('Description.java', 'org.junit.runner.Description', 'methodAndClassNamePatternGroupOrDefault', '([\\s\\S]*)\\((.*)\\)', 'testUntrackedConflicts(org.eclipse.jgit.lib.DirCacheCheckoutTest)')","[116116, 117072]"
"('URIish.java', 'org.eclipse.jgit.transport.URIish', '<init>', '^(file):([\\\\/](?![\\\\/])((?:[A-Za-z]:)?[\\\\/]?(?:(?:[^\\\\/]+[\\\\/]+)*[^\\\\/]+[\\\\/]*)))$', 'ssh+git://me:wtf@[::1]:1234/D:\\x')",[15281]
"('Description.java', 'org.junit.runner.Description', 'methodAndClassNamePatternGroupOrDefault', '([\\s\\S]*)\\((.*)\\)', 'shouldListAddedFileInInitialCommit(org.eclipse.jgit.diff.DiffEntryTest)')","[95320, 95575]"
"('Description.java', 'org.junit.runner.Description', 'methodAndClassNamePatternGroupOrDefault', '([\\s\\S]*)\\((.*)\\)', 'testError_DisconnectedHunk(org.eclipse.jgit.patch.PatchErrorTest)')","[194574, 194701]"
"('Description.java', 'org.junit.runner.Description', 'methodAndClassNamePatternGroupOrDefault', '([\\s\\S]*)\\((.*)\\)', 'testDegenerate_InsertEnd(org.eclipse.jgit.diff.HistogramDiffTest)')","[98632, 99232]"
"('Description.java', 'org.junit.runner.Description', 'methodAndClassNamePatternGroupOrDefault', '([\\s\\S]*)\\((.*)\\)', 'testEmptyString(org.eclipse.jgit.lib.ValidRefNameTest)')","[118635, 119006]"
"('Description.java', 'org.junit.runner.Description', 'methodAndClassNamePatternGroupOrDefault', '([\\s\\S]*)\\((.*)\\)', 'testFilterFootersIgnoreCase(org.eclipse.jgit.revwalk.FooterLineTest)')","[77628, 78039]"
"('Description.java', 'org.junit.runner.Description', 'methodAndClassNamePatternGroupOrDefault', '([\\s\\S]*)\\((.*)\\)', 'testMaliciousGitPathEndDotWindows3(org.eclipse.jgit.lib.DirCacheCheckoutMaliciousPathTest)')","[111849, 112742]"
"('Description.java', 'org.junit.runner.Description', 'methodAndClassNamePatternGroupOrDefault', '([\\s\\S]*)\\((.*)\\)', 'org.eclipse.jgit.api.StashApplyCommandTest')","[240706, 245988]"
"('Description.java', 'org.junit.runner.Description', 'methodAndClassNamePatternGroupOrDefault', '([\\s\\S]*)\\((.*)\\)', 'test006_addDeepTree(org.eclipse.jgit.lib.T0002_TreeTest)')","[120048, 120356]"
"('Description.java', 'org.junit.runner.Description', 'methodAndClassNamePatternGroupOrDefault', '([\\s\\S]*)\\((.*)\\)', 'testWriteEmptyPack1(org.eclipse.jgit.internal.storage.file.PackWriterTest)')","[251197, 251640]"
"('URIish.java', 'org.eclipse.jgit.transport.URIish', '<init>', '^([a-z][a-z0-9+-]+)://(?:(?:([^/:@]+)(?::([^\\\\/]+))?@)?((?:[^\\\\/:]+)|(?:\\[[0-9a-f:]+\\]))(?::(\\d+))?((?:/~(?:[^\\\\/]+))?[\\\\/]))?(.+)?$', 'ssh+git://l usr\\example.com:wtf@1.2.3.4:1234/D:/x')",[16434]
"('Description.java', 'org.junit.runner.Description', 'methodAndClassNamePatternGroupOrDefault', '([\\s\\S]*)\\((.*)\\)', 'repositoryWithNoSubmoduleRepository(org.eclipse.jgit.submodule.SubmoduleStatusTest)')","[109265, 109413]"
"('Description.java', 'org.junit.runner.Description', 'methodAndClassNamePatternGroupOrDefault', '([\\s\\S]*)\\((.*)\\)', 'testSpecialGroupCase3(org.eclipse.jgit.fnmatch.FileNameMatcherTest)')","[100978, 104237]"
"('Description.java', 'org.junit.runner.Description', 'methodAndClassNamePatternGroupOrDefault', '([\\s\\S]*)\\((.*)\\)', 'testWordGroupCase2[OldRule? false](org.eclipse.jgit.ignore.IgnoreRuleSpecialCasesTest)')","[148813, 155918]"
"('Description.java', 'org.junit.runner.Description', 'methodAndClassNamePatternGroupOrDefault', '([\\s\\S]*)\\((.*)\\)', 'testStringOfPearls_FilePath2_NoParentRewriting(org.eclipse.jgit.revwalk.RevWalkPathFilter1Test)')","[75872, 76152]"
"('URIish.java', 'org.eclipse.jgit.transport.URIish', '<init>', '^(file):([\\\\/](?![\\\\/])((?:[A-Za-z]:)?[\\\\/]?(?:(?:[^\\\\/]+[\\\\/]+)*[^\\\\/]+[\\\\/]*)))$', 'ssh+git://example.com/D:/x')","[56068, 56252, 57172, 57356, 58276, 58460]"
"('Description.java', 'org.junit.runner.Description', 'methodAndClassNamePatternGroupOrDefault', '([\\s\\S]*)\\((.*)\\)', 'testSpecialGroupCase2(org.eclipse.jgit.fnmatch.FileNameMatcherTest)')","[100957, 104215]"
"('Description.java', 'org.junit.runner.Description', 'methodAndClassNamePatternGroupOrDefault', '([\\s\\S]*)\\((.*)\\)', 'testTimeout_close_Timeout(org.eclipse.jgit.util.io.TimeoutOutputStreamTest)')","[172686, 172883]"
"('Description.java', 'org.junit.runner.Description', 'methodAndClassNamePatternGroupOrDefault', '([\\s\\S]*)\\((.*)\\)', 'testPut_WithPrefix(org.eclipse.jgit.util.RefMapTest)')","[184161, 184642]"
"('Description.java', 'org.junit.runner.Description', 'methodAndClassNamePatternGroupOrDefault', '([\\s\\S]*)\\((.*)\\)', 'testSpecialGroupCase4(org.eclipse.jgit.fnmatch.FileNameMatcherTest)')","[100999, 104259]"
"('URIish.java', 'org.eclipse.jgit.transport.URIish', '<init>', '^([a-z][a-z0-9+-]+)://(?:(?:([^/:@]+)(?::([^\\\\/]+))?@)?((?:[^\\\\/:]+)|(?:\\[[0-9a-f:]+\\]))(?::(\\d+))?((?:/~(?:[^\\\\/]+))?[\\\\/]))?(.+)?$', 'http://me@[::1]:1234/D:\\x')",[33689]
"('URIish.java', 'org.eclipse.jgit.transport.URIish', '<init>', '^(file):([\\\\/](?![\\\\/])((?:[A-Za-z]:)?[\\\\/]?(?:(?:[^\\\\/]+[\\\\/]+)*[^\\\\/]+[\\\\/]*)))$', 'ssh://me@example.com:1234//abc')",[25986]
"('URIish.java', 'org.eclipse.jgit.transport.URIish', '<init>', '^([\\\\/]?((?:[A-Za-z]:)?[\\\\/]?(?:(?:[^\\\\/]+[\\\\/]+)*[^\\\\/]+[\\\\/]*)))$', '/tmp/jgit_test_2065451132428062414_tmp/tmp_1493923410369301041')","[208566, 208711]"
"('URIish.java', 'org.eclipse.jgit.transport.URIish', '<init>', '^(?:([^/:@]+)(?::([^\\\\/]+))?@)?((?:[^\\\\/:]+)|(?:\\[[0-9a-f:]+\\])):((?:(?:/~(?:[^\\\\/]+))[\\\\/])?(?:(?:[^\\\\/]+[\\\\/]+)*[^\\\\/]+[\\\\/]*))$', '/a/b/c.git')",[6564]
"('URIish.java', 'org.eclipse.jgit.transport.URIish', '<init>', '^(file):([\\\\/](?![\\\\/])((?:[A-Za-z]:)?[\\\\/]?(?:(?:[^\\\\/]+[\\\\/]+)*[^\\\\/]+[\\\\/]*)))$', 'ssh+git://lusr\\example@example.com:1234//abc')",[31734]
"('Description.java', 'org.junit.runner.Description', 'methodAndClassNamePatternGroupOrDefault', '([\\s\\S]*)\\((.*)\\)', 'testIdenticalAdd(org.eclipse.jgit.notes.DefaultNoteMergerTest)')","[198669, 198799]"
"('FastIgnoreRule.java', 'org.eclipse.jgit.ignore.FastIgnoreRule', 'isMatch', 'a.*c', 'ab')",[161540]
"('Description.java', 'org.junit.runner.Description', 'methodAndClassNamePatternGroupOrDefault', '([\\s\\S]*)\\((.*)\\)', 'testMergeMessage(org.eclipse.jgit.api.MergeCommandTest)')","[214143, 215078]"
"('Description.java', 'org.junit.runner.Description', 'methodAndClassNamePatternGroupOrDefault', '([\\s\\S]*)\\((.*)\\)', 'testGetRef_FetchHead(org.eclipse.jgit.internal.storage.file.RefDirectoryTest)')","[257644, 258814]"
"('Description.java', 'org.junit.runner.Description', 'methodAndClassNamePatternGroupOrDefault', '([\\s\\S]*)\\((.*)\\)', 'testReadLong(org.eclipse.jgit.lib.ConfigTest)')","[129302, 130033]"
"('Description.java', 'org.junit.runner.Description', 'methodAndClassNamePatternGroupOrDefault', '([\\s\\S]*)\\((.*)\\)', 'testBlankGroupCase0(org.eclipse.jgit.fnmatch.FileNameMatcherTest)')","[103330, 106701]"
"('Description.java', 'org.junit.runner.Description', 'methodAndClassNamePatternGroupOrDefault', '([\\s\\S]*)\\((.*)\\)', 'testBatchRefUpdateNonFastForwardDoesNotDoExpensiveMergeCheck(org.eclipse.jgit.internal.storage.file.RefDirectoryTest)')","[257833, 259012]"
"('URIish.java', 'org.eclipse.jgit.transport.URIish', '<init>', '^(file):([\\\\/](?![\\\\/])((?:[A-Za-z]:)?[\\\\/]?(?:(?:[^\\\\/]+[\\\\/]+)*[^\\\\/]+[\\\\/]*)))$', 'http://lusr\\example@example.com/D:\\x')","[48386, 48570]"
"('URIish.java', 'org.eclipse.jgit.transport.URIish', '<init>', '^([a-z][a-z0-9+-]+)://(?:(?:([^/:@]+)(?::([^\\\\/]+))?@)?((?:[^\\\\/:]+)|(?:\\[[0-9a-f:]+\\]))(?::(\\d+))?((?:/~(?:[^\\\\/]+))?[\\\\/]))?(.+)?$', 'ssh+git://lusr\\example:wtf@[::1]:1234//abc')",[17883]
"('Description.java', 'org.junit.runner.Description', 'methodAndClassNamePatternGroupOrDefault', '([\\s\\S]*)\\((.*)\\)', 'testFileNameWildcards[OldRule? false](org.eclipse.jgit.ignore.IgnoreMatcherParametrizedTest)')","[141392, 141735]"
"('URIish.java', 'org.eclipse.jgit.transport.URIish', '<init>', '^(file):([\\\\/](?![\\\\/])((?:[A-Za-z]:)?[\\\\/]?(?:(?:[^\\\\/]+[\\\\/]+)*[^\\\\/]+[\\\\/]*)))$', 'https://l usr\\example.com@1.2.3.4:80/D:\\x')",[37898]
"('Description.java', 'org.junit.runner.Description', 'methodAndClassNamePatternGroupOrDefault', '([\\s\\S]*)\\((.*)\\)', 'testUnchangedSimple(org.eclipse.jgit.lib.IndexDiffTest)')","[110322, 110661]"
"('Description.java', 'org.junit.runner.Description', 'methodAndClassNamePatternGroupOrDefault', '([\\s\\S]*)\\((.*)\\)', 'testPush(org.eclipse.jgit.api.PushCommandTest)')","[203024, 203153]"
"('Description.java', 'org.junit.runner.Description', 'methodAndClassNamePatternGroupOrDefault', '([\\s\\S]*)\\((.*)\\)', 'testGraphGroupCase5[OldRule? false](org.eclipse.jgit.ignore.IgnoreRuleSpecialCasesTest)')","[146444, 153549]"
"('Description.java', 'org.junit.runner.Description', 'methodAndClassNamePatternGroupOrDefault', '([\\s\\S]*)\\((.*)\\)', 'testVerySimplePatternCase2[OldRule? true](org.eclipse.jgit.ignore.IgnoreRuleSpecialCasesTest)')","[150283, 157367]"
"('URIish.java', 'org.eclipse.jgit.transport.URIish', '<init>', '^([a-z][a-z0-9+-]+)://(?:(?:([^/:@]+)(?::([^\\\\/]+))?@)?((?:[^\\\\/:]+)|(?:\\[[0-9a-f:]+\\]))(?::(\\d+))?((?:/~(?:[^\\\\/]+))?[\\\\/]))?(.+)?$', 'ssh+git://l usr\\example.com@example.com:80//')",[30791]
"('URIish.java', 'org.eclipse.jgit.transport.URIish', '<init>', '^([a-z][a-z0-9+-]+)://(?:(?:([^/:@]+)(?::([^\\\\/]+))?@)?((?:[^\\\\/:]+)|(?:\\[[0-9a-f:]+\\]))(?::(\\d+))?((?:/~(?:[^\\\\/]+))?[\\\\/]))?(.+)?$', 'ssh://lusr\\example@[::1]:80/D:/x')",[29411]
"('URIish.java', 'org.eclipse.jgit.transport.URIish', '<init>', '^(file):([\\\\/](?![\\\\/])((?:[A-Za-z]:)?[\\\\/]?(?:(?:[^\\\\/]+[\\\\/]+)*[^\\\\/]+[\\\\/]*)))$', 'ssh+git://l usr\\example.com:wtf@1.2.3.4:80//')",[16503]
"('URIish.java', 'org.eclipse.jgit.transport.URIish', '<init>', '^(file):([\\\\/](?![\\\\/])((?:[A-Za-z]:)?[\\\\/]?(?:(?:[^\\\\/]+[\\\\/]+)*[^\\\\/]+[\\\\/]*)))$', 'https://l usr\\example.com@example.com:1234/D:/x')",[37300]
"('URIish.java', 'org.eclipse.jgit.transport.URIish', '<init>', '^([a-z][a-z0-9+-]+)://(?:(?:([^/:@]+)(?::([^\\\\/]+))?@)?((?:[^\\\\/:]+)|(?:\\[[0-9a-f:]+\\]))(?::(\\d+))?((?:/~(?:[^\\\\/]+))?[\\\\/]))?(.+)?$', 'file:///tmp/jgit_test_85796152169093670_tmp/tmp_8177404251779927825/.git/')",[132510]
"('Description.java', 'org.junit.runner.Description', 'methodAndClassNamePatternGroupOrDefault', '([\\s\\S]*)\\((.*)\\)', 'testWildmatch[OldRule? true](org.eclipse.jgit.ignore.FastIgnoreRuleTest)')","[164362, 165098]"
"('Description.java', 'org.junit.runner.Description', 'methodAndClassNamePatternGroupOrDefault', '([\\s\\S]*)\\((.*)\\)', 'testManySolutionsCase0[OldRule? true](org.eclipse.jgit.ignore.IgnoreRuleSpecialCasesTest)')","[151640, 158724]"
"('Description.java', 'org.junit.runner.Description', 'methodAndClassNamePatternGroupOrDefault', '([\\s\\S]*)\\((.*)\\)', 'test025_computeSha1NoStore(org.eclipse.jgit.internal.storage.file.T0003_BasicTest)')","[249146, 249681]"
"('Description.java', 'org.junit.runner.Description', 'methodAndClassNamePatternGroupOrDefault', '([\\s\\S]*)\\((.*)\\)', 'testId(org.eclipse.jgit.util.ChangeIdUtilTest)')","[185546, 186292]"
"('ChangeIdUtil.java', 'org.eclipse.jgit.util.ChangeIdUtil', 'insertId', '^(Bug|Issue)[a-zA-Z0-9-]*:.*$', 'Signed-off-by: me@you.too')","[187819, 190611, 191416, 191878]"
"('URIish.java', 'org.eclipse.jgit.transport.URIish', '<init>', '^(file):([\\\\/](?![\\\\/])((?:[A-Za-z]:)?[\\\\/]?(?:(?:[^\\\\/]+[\\\\/]+)*[^\\\\/]+[\\\\/]*)))$', 'https://me@example.com/D:\\x')","[49490, 49674]"
"('Description.java', 'org.junit.runner.Description', 'methodAndClassNamePatternGroupOrDefault', '([\\s\\S]*)\\((.*)\\)', 'test7(org.eclipse.jgit.revwalk.RevWalkPathFilter6012Test)')","[85825, 85979]"
"('Description.java', 'org.junit.runner.Description', 'methodAndClassNamePatternGroupOrDefault', '([\\s\\S]*)\\((.*)\\)', 'testAddToFrontOfList(org.eclipse.jgit.util.RefListTest)')","[179611, 180132]"
"('URIish.java', 'org.eclipse.jgit.transport.URIish', '<init>', '^([a-z][a-z0-9+-]+)://(?:(?:([^/:@]+)(?::([^\\\\/]+))?@)?((?:[^\\\\/:]+)|(?:\\[[0-9a-f:]+\\]))(?::(\\d+))?((?:/~(?:[^\\\\/]+))?[\\\\/]))?(.+)?$', 'file:///tmp/jgit_test_245831401761691588_tmp/tmp_6526835764811304817/.git/')",[133813]
"('ChangeIdUtil.java', 'org.eclipse.jgit.util.ChangeIdUtil', 'indexOfFirstFooterLine', '(^[a-zA-Z0-9-]+:(?!//).*$)', '[ja: Fixed')",[188131]
"('Description.java', 'org.junit.runner.Description', 'methodAndClassNamePatternGroupOrDefault', '([\\s\\S]*)\\((.*)\\)', 'testWriteString1(org.eclipse.jgit.transport.PacketLineOutTest)')","[75045, 75219]"
"('Description.java', 'org.junit.runner.Description', 'methodAndClassNamePatternGroupOrDefault', '([\\s\\S]*)\\((.*)\\)', 'testStandardFormat_LargeObject(org.eclipse.jgit.internal.storage.file.UnpackedObjectTest)')","[255253, 255583]"
"('URIish.java', 'org.eclipse.jgit.transport.URIish', '<init>', '^([a-z][a-z0-9+-]+)://(?:(?:([^/:@]+)(?::([^\\\\/]+))?@)?((?:[^\\\\/:]+)|(?:\\[[0-9a-f:]+\\]))(?::(\\d+))?((?:/~(?:[^\\\\/]+))?[\\\\/]))?(.+)?$', 'file:///tmp/jgit_test_4201770803038451844_tmp/tmp_9073105048792238449/.git/')",[205593]
"('URIish.java', 'org.eclipse.jgit.transport.URIish', '<init>', '^(file):([\\\\/](?![\\\\/])((?:[A-Za-z]:)?[\\\\/]?(?:(?:[^\\\\/]+[\\\\/]+)*[^\\\\/]+[\\\\/]*)))$', 'ssh+git://lusr\\example:wtf@[::1]:1234//')",[17814]
"('URIish.java', 'org.eclipse.jgit.transport.URIish', '<init>', '^([a-z][a-z0-9+-]+)://(?:(?:([^/:@]+)(?::([^\\\\/]+))?@)?((?:[^\\\\/:]+)|(?:\\[[0-9a-f:]+\\]))(?::(\\d+))?((?:/~(?:[^\\\\/]+))?[\\\\/]))?(.+)?$', 'https://lusr\\example@1.2.3.4:1234/D:/x')",[38795]
"('URIish.java', 'org.eclipse.jgit.transport.URIish', '<init>', '^([a-z][a-z0-9+-]+)://(?:(?:([^/:@]+)(?::([^\\\\/]+))?@)?((?:[^\\\\/:]+)|(?:\\[[0-9a-f:]+\\]))(?::(\\d+))?((?:/~(?:[^\\\\/]+))?[\\\\/]))?(.+)?$', 'ssh://lusr\\example@1.2.3.4/D:\\x')","[42153, 42337]"
"('URIish.java', 'org.eclipse.jgit.transport.URIish', '<init>', '^(file):([\\\\/](?![\\\\/])((?:[A-Za-z]:)?[\\\\/]?(?:(?:[^\\\\/]+[\\\\/]+)*[^\\\\/]+[\\\\/]*)))$', 'ssh+git://lusr\\example:wtf@example.com:1234/D:\\x')",[17193]
"('Description.java', 'org.junit.runner.Description', 'methodAndClassNamePatternGroupOrDefault', '([\\s\\S]*)\\((.*)\\)', 'testVerySimpleWildCardCase1[OldRule? true](org.eclipse.jgit.ignore.IgnoreRuleSpecialCasesTest)')","[149501, 156585]"
"('Description.java', 'org.junit.runner.Description', 'methodAndClassNamePatternGroupOrDefault', '([\\s\\S]*)\\((.*)\\)', 'testCheckoutOrphanBranch(org.eclipse.jgit.api.CheckoutCommandTest)')","[207122, 207646]"
"('Description.java', 'org.junit.runner.Description', 'methodAndClassNamePatternGroupOrDefault', '([\\s\\S]*)\\((.*)\\)', 'testQuote_BareA(org.eclipse.jgit.util.QuotedStringGitPathStyleTest)')","[177676, 178110]"
"('Description.java', 'org.junit.runner.Description', 'methodAndClassNamePatternGroupOrDefault', '([\\s\\S]*)\\((.*)\\)', 'org.eclipse.jgit.internal.storage.file.ReflogReaderTest')","[259753, 260120]"
"('URIish.java', 'org.eclipse.jgit.transport.URIish', '<init>', '^([a-z][a-z0-9+-]+)://(?:(?:([^/:@]+)(?::([^\\\\/]+))?@)?((?:[^\\\\/:]+)|(?:\\[[0-9a-f:]+\\]))(?::(\\d+))?((?:/~(?:[^\\\\/]+))?[\\\\/]))?(.+)?$', 'https://lusr\\example@[::1]:80/D:/x')",[39347]
"('Description.java', 'org.junit.runner.Description', 'methodAndClassNamePatternGroupOrDefault', '([\\s\\S]*)\\((.*)\\)', 'testPullWithUri(org.eclipse.jgit.merge.MergeMessageFormatterTest)')","[88884, 89203]"
"('URIish.java', 'org.eclipse.jgit.transport.URIish', '<init>', '^([a-z][a-z0-9+-]+)://(?:(?:([^/:@]+)(?::([^\\\\/]+))?@)?((?:[^\\\\/:]+)|(?:\\[[0-9a-f:]+\\]))(?::(\\d+))?((?:/~(?:[^\\\\/]+))?[\\\\/]))?(.+)?$', 'http://me:wtf@example.com:80//abc')",[18996]
"('Description.java', 'org.junit.runner.Description', 'methodAndClassNamePatternGroupOrDefault', '([\\s\\S]*)\\((.*)\\)', 'testBoundary(org.eclipse.jgit.util.io.AutoCRLFOutputStreamTest)')","[173561, 173604]"
"('Description.java', 'org.junit.runner.Description', 'methodAndClassNamePatternGroupOrDefault', '([\\s\\S]*)\\((.*)\\)', 'testSpecialGroupCase0[OldRule? true](org.eclipse.jgit.ignore.IgnoreRuleSpecialCasesTest)')","[149271, 156355]"
"('URIish.java', 'org.eclipse.jgit.transport.URIish', '<init>', '^(file):([\\\\/](?![\\\\/])((?:[A-Za-z]:)?[\\\\/]?(?:(?:[^\\\\/]+[\\\\/]+)*[^\\\\/]+[\\\\/]*)))$', 'file:///tmp/jgit_test_5894805465915130405_tmp/tmp_6468847463949528491')","[200849, 200906, 201091]"
"('Description.java', 'org.junit.runner.Description', 'methodAndClassNamePatternGroupOrDefault', '([\\s\\S]*)\\((.*)\\)', 'nonReferencedExpiredObjectTree_pruned(org.eclipse.jgit.internal.storage.file.GcPruneNonReferencedTest)')","[256280, 256388]"
"('URIish.java', 'org.eclipse.jgit.transport.URIish', '<init>', '^(file):([\\\\/](?![\\\\/])((?:[A-Za-z]:)?[\\\\/]?(?:(?:[^\\\\/]+[\\\\/]+)*[^\\\\/]+[\\\\/]*)))$', 'ssh+git://lusr\\example:wtf@example.com:1234//abc')",[17101]
"('Description.java', 'org.junit.runner.Description', 'methodAndClassNamePatternGroupOrDefault', '([\\s\\S]*)\\((.*)\\)', 'testWordroupCase0(org.eclipse.jgit.fnmatch.FileNameMatcherTest)')","[103666, 107053]"
"('URIish.java', 'org.eclipse.jgit.transport.URIish', '<init>', '^(file):([\\\\/](?![\\\\/])((?:[A-Za-z]:)?[\\\\/]?(?:(?:[^\\\\/]+[\\\\/]+)*[^\\\\/]+[\\\\/]*)))$', 'ssh+git://me:wtf@1.2.3.4:80/D:/x')",[14787]
"('Description.java', 'org.junit.runner.Description', 'methodAndClassNamePatternGroupOrDefault', '([\\s\\S]*)\\((.*)\\)', 'logAllCommitsWithTag(org.eclipse.jgit.api.LogCommandTest)')","[231634, 231788]"
"('Description.java', 'org.junit.runner.Description', 'methodAndClassNamePatternGroupOrDefault', '([\\s\\S]*)\\((.*)\\)', 'testManySolutionsCase2[OldRule? false](org.eclipse.jgit.ignore.IgnoreRuleSpecialCasesTest)')","[148123, 155228]"
"('Description.java', 'org.junit.runner.Description', 'methodAndClassNamePatternGroupOrDefault', '([\\s\\S]*)\\((.*)\\)', 'testEncode_SimpleASCII(org.eclipse.jgit.lib.ConstantsEncodingTest)')","[118130, 118238]"
"('URIish.java', 'org.eclipse.jgit.transport.URIish', '<init>', '^(file):([\\\\/](?![\\\\/])((?:[A-Za-z]:)?[\\\\/]?(?:(?:[^\\\\/]+[\\\\/]+)*[^\\\\/]+[\\\\/]*)))$', 'ssh://DOMAIN%5cüser:pass@example.com:33/some/p ath')","[70091, 70137]"
"('Description.java', 'org.junit.runner.Description', 'methodAndClassNamePatternGroupOrDefault', '([\\s\\S]*)\\((.*)\\)', 'indexAdd(org.eclipse.jgit.api.StashCreateCommandTest)')","[202340, 202682]"
"('URIish.java', 'org.eclipse.jgit.transport.URIish', '<init>', '^(file):([\\\\/](?![\\\\/])((?:[A-Za-z]:)?[\\\\/]?(?:(?:[^\\\\/]+[\\\\/]+)*[^\\\\/]+[\\\\/]*)))$', 'ssh://l usr\\example.com@1.2.3.4:1234/D:\\x')",[27715]
"('Description.java', 'org.junit.runner.Description', 'methodAndClassNamePatternGroupOrDefault', '([\\s\\S]*)\\((.*)\\)', 'testInvalidTagInvalidTaggerHeader1(org.eclipse.jgit.lib.ObjectCheckerTest)')","[121931, 124063]"
"('URIish.java', 'org.eclipse.jgit.transport.URIish', '<init>', '^(file):([\\\\/](?![\\\\/])((?:[A-Za-z]:)?[\\\\/]?(?:(?:[^\\\\/]+[\\\\/]+)*[^\\\\/]+[\\\\/]*)))$', 'file:///tmp/jgit_test_7477458086125555260_tmp/tmp_7191108422991619607')","[209231, 209288, 209801]"
"('URIish.java', 'org.eclipse.jgit.transport.URIish', '<init>', '^(file):([\\\\/](?![\\\\/])((?:[A-Za-z]:)?[\\\\/]?(?:(?:[^\\\\/]+[\\\\/]+)*[^\\\\/]+[\\\\/]*)))$', 'ssh+git://lusr\\example@[::1]:1234/D:/x')",[32516]
"('FastIgnoreRule.java', 'org.eclipse.jgit.ignore.FastIgnoreRule', 'isMatch', '[\\p{javaDigit}]', '9')",[161644]
"('Description.java', 'org.junit.runner.Description', 'methodAndClassNamePatternGroupOrDefault', '([\\s\\S]*)\\((.*)\\)', 'testRejectNulInPathSegment(org.eclipse.jgit.lib.ObjectCheckerTest)')","[122141, 124283]"
"('URIish.java', 'org.eclipse.jgit.transport.URIish', '<init>', '^([a-z][a-z0-9+-]+)://(?:(?:([^/:@]+)(?::([^\\\\/]+))?@)?((?:[^\\\\/:]+)|(?:\\[[0-9a-f:]+\\]))(?::(\\d+))?((?:/~(?:[^\\\\/]+))?[\\\\/]))?(.+)?$', 'short:project.git')","[9620, 11360]"
"('URIish.java', 'org.eclipse.jgit.transport.URIish', '<init>', '^([a-z][a-z0-9+-]+)://(?:(?:([^/:@]+)(?::([^\\\\/]+))?@)?((?:[^\\\\/:]+)|(?:\\[[0-9a-f:]+\\]))(?::(\\d+))?((?:/~(?:[^\\\\/]+))?[\\\\/]))?(.+)?$', 'http://me:wtf@example.com:80/D:/x')",[19042]
"('URIish.java', 'org.eclipse.jgit.transport.URIish', '<init>', '^(file):([\\\\/](?![\\\\/])((?:[A-Za-z]:)?[\\\\/]?(?:(?:[^\\\\/]+[\\\\/]+)*[^\\\\/]+[\\\\/]*)))$', 'ssh://me:wtf@1.2.3.4:80/D:\\x')",[9001]
"('URIish.java', 'org.eclipse.jgit.transport.URIish', '<init>', '^(file):([\\\\/](?![\\\\/])((?:[A-Za-z]:)?[\\\\/]?(?:(?:[^\\\\/]+[\\\\/]+)*[^\\\\/]+[\\\\/]*)))$', 'ssh://me:wtf@example.com:80//abc')",[7808]
"('Description.java', 'org.junit.runner.Description', 'methodAndClassNamePatternGroupOrDefault', '([\\s\\S]*)\\((.*)\\)', 'testALL_ShouldNotBeRecursive(org.eclipse.jgit.treewalk.filter.TreeFilterTest)')","[138591, 138745]"
"('Description.java', 'org.junit.runner.Description', 'methodAndClassNamePatternGroupOrDefault', '([\\s\\S]*)\\((.*)\\)', 'testBoundLineDelete(org.eclipse.jgit.api.blame.BlameGeneratorTest)')","[235705, 235771]"
"('Description.java', 'org.junit.runner.Description', 'methodAndClassNamePatternGroupOrDefault', '([\\s\\S]*)\\((.*)\\)', 'testParsePersonIdent_incompleteCases(org.eclipse.jgit.util.RawParseUtils_ParsePersonIdentTest)')","[171545, 171630]"
"('Description.java', 'org.junit.runner.Description', 'methodAndClassNamePatternGroupOrDefault', '([\\s\\S]*)\\((.*)\\)', 'testVerySimpleWirdcardCase0(org.eclipse.jgit.fnmatch.FileNameMatcherTest)')","[101188, 104457]"
"('Description.java', 'org.junit.runner.Description', 'methodAndClassNamePatternGroupOrDefault', '([\\s\\S]*)\\((.*)\\)', 'testNewNamespaceConflictWithLoosePrefixOfExisting(org.eclipse.jgit.internal.storage.file.RefUpdateTest)')","[253355, 254202]"
"('URIish.java', 'org.eclipse.jgit.transport.URIish', '<init>', '^(file):([\\\\/](?![\\\\/])((?:[A-Za-z]:)?[\\\\/]?(?:(?:[^\\\\/]+[\\\\/]+)*[^\\\\/]+[\\\\/]*)))$', 'https://lusr\\example@[::1]:1234/D:\\x')",[39186]
"('URIish.java', 'org.eclipse.jgit.transport.URIish', '<init>', '^([a-z][a-z0-9+-]+)://(?:(?:([^/:@]+)(?::([^\\\\/]+))?@)?((?:[^\\\\/:]+)|(?:\\[[0-9a-f:]+\\]))(?::(\\d+))?((?:/~(?:[^\\\\/]+))?[\\\\/]))?(.+)?$', 'file:///tmp/jgit_test_7262235360055106235_tmp/tmp_7762292172063665766.git/')",[141289]
"('Description.java', 'org.junit.runner.Description', 'methodAndClassNamePatternGroupOrDefault', '([\\s\\S]*)\\((.*)\\)', 'testOnlyOption_f1_1_b(org.eclipse.jgit.api.CommitOnlyTest)')","[235954, 238008]"
"('URIish.java', 'org.eclipse.jgit.transport.URIish', '<init>', '^([a-z][a-z0-9+-]+)://(?:(?:([^/:@]+)(?::([^\\\\/]+))?@)?((?:[^\\\\/:]+)|(?:\\[[0-9a-f:]+\\]))(?::(\\d+))?((?:/~(?:[^\\\\/]+))?[\\\\/]))?(.+)?$', 'ssh://l usr\\example.com@example.com/D:\\x')","[40681, 40865]"
"('Description.java', 'org.junit.runner.Description', 'methodAndClassNamePatternGroupOrDefault', '([\\s\\S]*)\\((.*)\\)', 'testReadBoolean_OnOff1(org.eclipse.jgit.lib.ConfigTest)')","[129008, 129725]"
"('Description.java', 'org.junit.runner.Description', 'methodAndClassNamePatternGroupOrDefault', '([\\s\\S]*)\\((.*)\\)', 'testParseGitFileName_FailFooBar(org.eclipse.jgit.patch.FileHeaderTest)')","[195243, 195691]"
"('Description.java', 'org.junit.runner.Description', 'methodAndClassNamePatternGroupOrDefault', '([\\s\\S]*)\\((.*)\\)', 'testMultipleMerges(org.eclipse.jgit.revplot.PlotCommitListTest)')","[197003, 197320]"
"('Description.java', 'org.junit.runner.Description', 'methodAndClassNamePatternGroupOrDefault', '([\\s\\S]*)\\((.*)\\)', 'checkMergeEqualTreesWithoutIndex(org.eclipse.jgit.merge.ResolveMergerTest)')","[88246, 88573]"
"('URIish.java', 'org.eclipse.jgit.transport.URIish', '<init>', '^(file):([\\\\/](?![\\\\/])((?:[A-Za-z]:)?[\\\\/]?(?:(?:[^\\\\/]+[\\\\/]+)*[^\\\\/]+[\\\\/]*)))$', 'http://lusr\\example@example.com:1234//')",[35000]
"('URIish.java', 'org.eclipse.jgit.transport.URIish', '<init>', '^([a-z][a-z0-9+-]+)://(?:(?:([^/:@]+)(?::([^\\\\/]+))?@)?((?:[^\\\\/:]+)|(?:\\[[0-9a-f:]+\\]))(?::(\\d+))?((?:/~(?:[^\\\\/]+))?[\\\\/]))?(.+)?$', 'git://example.com/here')",[126136]
"('Description.java', 'org.junit.runner.Description', 'methodAndClassNamePatternGroupOrDefault', '([\\s\\S]*)\\((.*)\\)', 'testResolvedNamesBranch(org.eclipse.jgit.lib.RefTest)')","[115544, 115738]"
"('URIish.java', 'org.eclipse.jgit.transport.URIish', '<init>', '^(file):([\\\\/](?![\\\\/])((?:[A-Za-z]:)?[\\\\/]?(?:(?:[^\\\\/]+[\\\\/]+)*[^\\\\/]+[\\\\/]*)))$', 'ssh+git://me@[::1]:1234/D:\\x')",[30354]
"('URIish.java', 'org.eclipse.jgit.transport.URIish', '<init>', '^([a-z][a-z0-9+-]+)://(?:(?:([^/:@]+)(?::([^\\\\/]+))?@)?((?:[^\\\\/:]+)|(?:\\[[0-9a-f:]+\\]))(?::(\\d+))?((?:/~(?:[^\\\\/]+))?[\\\\/]))?(.+)?$', 'ssh+git://l usr\\example.com@example.com//')","[43855, 44039]"
"('URIish.java', 'org.eclipse.jgit.transport.URIish', '<init>', '^([a-z][a-z0-9+-]+)://(?:(?:([^/:@]+)(?::([^\\\\/]+))?@)?((?:[^\\\\/:]+)|(?:\\[[0-9a-f:]+\\]))(?::(\\d+))?((?:/~(?:[^\\\\/]+))?[\\\\/]))?(.+)?$', 'ssh://l usr\\example.com@1.2.3.4//')","[40911, 41095]"
"('URIish.java', 'org.eclipse.jgit.transport.URIish', '<init>', '^(file):([\\\\/](?![\\\\/])((?:[A-Za-z]:)?[\\\\/]?(?:(?:[^\\\\/]+[\\\\/]+)*[^\\\\/]+[\\\\/]*)))$', 'https://lusr\\example@1.2.3.4/D:\\x')","[52066, 52250]"
"('URIish.java', 'org.eclipse.jgit.transport.URIish', '<init>', '^([a-z][a-z0-9+-]+)://(?:(?:([^/:@]+)(?::([^\\\\/]+))?@)?((?:[^\\\\/:]+)|(?:\\[[0-9a-f:]+\\]))(?::(\\d+))?((?:/~(?:[^\\\\/]+))?[\\\\/]))?(.+)?$', 'ssh://l usr\\example.com@example.com:80//')",[27416]
"('Description.java', 'org.junit.runner.Description', 'methodAndClassNamePatternGroupOrDefault', '([\\s\\S]*)\\((.*)\\)', 'testGetRefs_DiscoversDeletedLoose1(org.eclipse.jgit.internal.storage.file.RefDirectoryTest)')","[258274, 259474]"
"('Description.java', 'org.junit.runner.Description', 'methodAndClassNamePatternGroupOrDefault', '([\\s\\S]*)\\((.*)\\)', 'testXDigitGroupCase6(org.eclipse.jgit.fnmatch.FileNameMatcherTest)')","[103624, 107009]"
"('Description.java', 'org.junit.runner.Description', 'methodAndClassNamePatternGroupOrDefault', '([\\s\\S]*)\\((.*)\\)', 'testMaliciousAbsoluteUNCPathWindows1OnUnix(org.eclipse.jgit.lib.DirCacheCheckoutMaliciousPathTest)')","[111723, 112610]"
"('Description.java', 'org.junit.runner.Description', 'methodAndClassNamePatternGroupOrDefault', '([\\s\\S]*)\\((.*)\\)', 'testFileInFolderCommitted(org.eclipse.jgit.treewalk.filter.IndexDiffFilterTest)')","[137277, 138109]"
"('Description.java', 'org.junit.runner.Description', 'methodAndClassNamePatternGroupOrDefault', '([\\s\\S]*)\\((.*)\\)', 'testNextDoesNothing(org.eclipse.jgit.treewalk.EmptyTreeIteratorTest)')","[135668, 135800]"
"('URIish.java', 'org.eclipse.jgit.transport.URIish', '<init>', '^([\\\\/]?((?:[A-Za-z]:)?[\\\\/]?(?:(?:[^\\\\/]+[\\\\/]+)*[^\\\\/]+[\\\\/]*)))$', '/more/dirs')","[6251, 7618, 10429]"
"('Description.java', 'org.junit.runner.Description', 'methodAndClassNamePatternGroupOrDefault', '([\\s\\S]*)\\((.*)\\)', 'testMixedGroupCase5(org.eclipse.jgit.fnmatch.FileNameMatcherTest)')","[101377, 104655]"
"('URIish.java', 'org.eclipse.jgit.transport.URIish', '<init>', '^([a-z][a-z0-9+-]+)://(?:(?:([^/:@]+)(?::([^\\\\/]+))?@)?((?:[^\\\\/:]+)|(?:\\[[0-9a-f:]+\\]))(?::(\\d+))?((?:/~(?:[^\\\\/]+))?[\\\\/]))?(.+)?$', 'http://l usr\\example.com:wtf@example.com:1234/D:/x')",[20512]
"('Description.java', 'org.junit.runner.Description', 'methodAndClassNamePatternGroupOrDefault', '([\\s\\S]*)\\((.*)\\)', 'testRefsCacheAfterUpdate(org.eclipse.jgit.internal.storage.file.RefUpdateTest)')","[253481, 254334]"
"('URIish.java', 'org.eclipse.jgit.transport.URIish', '<init>', '^(file):([\\\\/](?![\\\\/])((?:[A-Za-z]:)?[\\\\/]?(?:(?:[^\\\\/]+[\\\\/]+)*[^\\\\/]+[\\\\/]*)))$', 'https://me@[::1]:1234/D:\\x')",[36978]
"('Description.java', 'org.junit.runner.Description', 'methodAndClassNamePatternGroupOrDefault', '([\\s\\S]*)\\((.*)\\)', 'testOnlyOption_f1_6_c(org.eclipse.jgit.api.CommitOnlyTest)')","[236500, 238580]"
"('URIish.java', 'org.eclipse.jgit.transport.URIish', '<init>', '^([a-z][a-z0-9+-]+)://(?:(?:([^/:@]+)(?::([^\\\\/]+))?@)?((?:[^\\\\/:]+)|(?:\\[[0-9a-f:]+\\]))(?::(\\d+))?((?:/~(?:[^\\\\/]+))?[\\\\/]))?(.+)?$', 'https://l usr\\example.com@1.2.3.4:80/D:\\x')",[37921]
"('Description.java', 'org.junit.runner.Description', 'methodAndClassNamePatternGroupOrDefault', '([\\s\\S]*)\\((.*)\\)', 'org.eclipse.jgit.submodule.SubmoduleSyncTest')","[107849, 108714]"
"('Description.java', 'org.junit.runner.Description', 'methodAndClassNamePatternGroupOrDefault', '([\\s\\S]*)\\((.*)\\)', 'testFilterIsPrefixOfKey(org.eclipse.jgit.treewalk.filter.PathFilterGroupTest)')","[138867, 139017]"
"('URIish.java', 'org.eclipse.jgit.transport.URIish', '<init>', '^([a-z][a-z0-9+-]+)://(?:(?:([^/:@]+)(?::([^\\\\/]+))?@)?((?:[^\\\\/:]+)|(?:\\[[0-9a-f:]+\\]))(?::(\\d+))?((?:/~(?:[^\\\\/]+))?[\\\\/]))?(.+)?$', 'ssh://me:wtf@[::1]:1234/D:/x')",[9225]
"('URIish.java', 'org.eclipse.jgit.transport.URIish', '<init>', '^([a-z][a-z0-9+-]+)://(?:(?:([^/:@]+)(?::([^\\\\/]+))?@)?((?:[^\\\\/:]+)|(?:\\[[0-9a-f:]+\\]))(?::(\\d+))?((?:/~(?:[^\\\\/]+))?[\\\\/]))?(.+)?$', 'http://l usr\\example.com@[::1]:80/D:/x')",[34931]
"('URIish.java', 'org.eclipse.jgit.transport.URIish', '<init>', '^([a-z][a-z0-9+-]+)://(?:(?:([^/:@]+)(?::([^\\\\/]+))?@)?((?:[^\\\\/:]+)|(?:\\[[0-9a-f:]+\\]))(?::(\\d+))?((?:/~(?:[^\\\\/]+))?[\\\\/]))?(.+)?$', 'http://lusr\\example:wtf@[::1]:1234/D:\\x')",[22421]
"('URIish.java', 'org.eclipse.jgit.transport.URIish', '<init>', '^([a-z][a-z0-9+-]+)://(?:(?:([^/:@]+)(?::([^\\\\/]+))?@)?((?:[^\\\\/:]+)|(?:\\[[0-9a-f:]+\\]))(?::(\\d+))?((?:/~(?:[^\\\\/]+))?[\\\\/]))?(.+)?$', 'ssh+git://me@[::1]:80/D:\\x')",[30561]
"('Description.java', 'org.junit.runner.Description', 'methodAndClassNamePatternGroupOrDefault', '([\\s\\S]*)\\((.*)\\)', 'testStringOfPearls_DirPath2_NoParentRewriting(org.eclipse.jgit.revwalk.RevWalkPathFilter1Test)')","[75914, 76196]"
"('Description.java', 'org.junit.runner.Description', 'methodAndClassNamePatternGroupOrDefault', '([\\s\\S]*)\\((.*)\\)', 'testTwoBranches(org.eclipse.jgit.merge.MergeMessageFormatterTest)')","[89031, 89357]"
"('Description.java', 'org.junit.runner.Description', 'methodAndClassNamePatternGroupOrDefault', '([\\s\\S]*)\\((.*)\\)', 'testRebaseWithAutoStashConflictOnApply(org.eclipse.jgit.api.RebaseCommandTest)')","[217816, 219312]"
"('FastIgnoreRule.java', 'org.eclipse.jgit.ignore.FastIgnoreRule', 'isMatch', '[a]', 'b')","[167183, 167237, 167291, 167345, 167399, 167453, 167750, 167831]"
"('Description.java', 'org.junit.runner.Description', 'methodAndClassNamePatternGroupOrDefault', '([\\s\\S]*)\\((.*)\\)', 'shouldListDeletionBetweenTwoCommits(org.eclipse.jgit.diff.DiffEntryTest)')","[95425, 95685]"
"('Description.java', 'org.junit.runner.Description', 'methodAndClassNamePatternGroupOrDefault', '([\\s\\S]*)\\((.*)\\)', 'testConflictAtEnd(org.eclipse.jgit.merge.MergeAlgorithmTest)')","[87015, 87311]"
"('Description.java', 'org.junit.runner.Description', 'methodAndClassNamePatternGroupOrDefault', '([\\s\\S]*)\\((.*)\\)', 'test012_SubtreeExternalSorting(org.eclipse.jgit.internal.storage.file.T0003_BasicTest)')","[249356, 249901]"
"('URIish.java', 'org.eclipse.jgit.transport.URIish', '<init>', '^([a-z][a-z0-9+-]+)://(?:(?:([^/:@]+)(?::([^\\\\/]+))?@)?((?:[^\\\\/:]+)|(?:\\[[0-9a-f:]+\\]))(?::(\\d+))?((?:/~(?:[^\\\\/]+))?[\\\\/]))?(.+)?$', 'ssh+git://lusr\\example:wtf@[::1]:80//')",[18246]
"('URIish.java', 'org.eclipse.jgit.transport.URIish', '<init>', '^([a-z][a-z0-9+-]+)://(?:(?:([^/:@]+)(?::([^\\\\/]+))?@)?((?:[^\\\\/:]+)|(?:\\[[0-9a-f:]+\\]))(?::(\\d+))?((?:/~(?:[^\\\\/]+))?[\\\\/]))?(.+)?$', 'file:///a/b.txt')",[7245]
"('URIish.java', 'org.eclipse.jgit.transport.URIish', '<init>', '^([a-z][a-z0-9+-]+)://(?:(?:([^/:@]+)(?::([^\\\\/]+))?@)?((?:[^\\\\/:]+)|(?:\\[[0-9a-f:]+\\]))(?::(\\d+))?((?:/~(?:[^\\\\/]+))?[\\\\/]))?(.+)?$', '/home/m y')","[67246, 67361]"
"('Description.java', 'org.junit.runner.Description', 'methodAndClassNamePatternGroupOrDefault', '([\\s\\S]*)\\((.*)\\)', 'testCherryPickOverExecutableChangeOnNonExectuableFileSystem(org.eclipse.jgit.api.CherryPickCommandTest)')","[232064, 232317]"
"('Description.java', 'org.junit.runner.Description', 'methodAndClassNamePatternGroupOrDefault', '([\\s\\S]*)\\((.*)\\)', 'testDegenerate_InsertEnd(org.eclipse.jgit.diff.MyersDiffTest)')","[96959, 97382]"
"('URIish.java', 'org.eclipse.jgit.transport.URIish', '<init>', '^(file):([\\\\/](?![\\\\/])((?:[A-Za-z]:)?[\\\\/]?(?:(?:[^\\\\/]+[\\\\/]+)*[^\\\\/]+[\\\\/]*)))$', 'http://me:wtf@[::1]:1234/D:/x')",[20121]
"('Description.java', 'org.junit.runner.Description', 'methodAndClassNamePatternGroupOrDefault', '([\\s\\S]*)\\((.*)\\)', 'org.eclipse.jgit.transport.PackParserTest')","[71960, 81553]"
"('URIish.java', 'org.eclipse.jgit.transport.URIish', '<init>', '^(file):([\\\\/](?![\\\\/])((?:[A-Za-z]:)?[\\\\/]?(?:(?:[^\\\\/]+[\\\\/]+)*[^\\\\/]+[\\\\/]*)))$', 'ssh://l usr\\example.com:wtf@example.com:80/D:\\x')",[11145]
"('URIish.java', 'org.eclipse.jgit.transport.URIish', '<init>', '^(file):([\\\\/](?![\\\\/])((?:[A-Za-z]:)?[\\\\/]?(?:(?:[^\\\\/]+[\\\\/]+)*[^\\\\/]+[\\\\/]*)))$', 'http://example.com//abc')","[59334, 59518, 60438, 60622, 61542, 61726]"
"('Description.java', 'org.junit.runner.Description', 'methodAndClassNamePatternGroupOrDefault', '([\\s\\S]*)\\((.*)\\)', 'testWordGroupCase0[OldRule? true](org.eclipse.jgit.ignore.IgnoreRuleSpecialCasesTest)')","[152330, 159414]"
"('Description.java', 'org.junit.runner.Description', 'methodAndClassNamePatternGroupOrDefault', '([\\s\\S]*)\\((.*)\\)', 'testReadTwoLine(org.eclipse.jgit.internal.storage.file.ReflogReaderTest)')","[259921, 260097]"
"('Description.java', 'org.junit.runner.Description', 'methodAndClassNamePatternGroupOrDefault', '([\\s\\S]*)\\((.*)\\)', 'org.eclipse.jgit.util.RefListTest')","[179359, 180459]"
"('URIish.java', 'org.eclipse.jgit.transport.URIish', '<init>', '^(?:([^/:@]+)(?::([^\\\\/]+))?@)?([^\\\\/:]{2,}):([\\\\/](?:(?:[^\\\\/]+[\\\\/]+)*[^\\\\/]+[\\\\/]*))$', '/tmp/jgit_test_6469622341025982846_tmp/tmp_1440713819350639853.git')",[81505]
"('Description.java', 'org.junit.runner.Description', 'methodAndClassNamePatternGroupOrDefault', '([\\s\\S]*)\\((.*)\\)', 'testUnixFile(org.eclipse.jgit.transport.URIishTest)')","[2192, 4816]"
"('Description.java', 'org.junit.runner.Description', 'methodAndClassNamePatternGroupOrDefault', '([\\s\\S]*)\\((.*)\\)', 'testTwoEntries_ForwardOneAtATime(org.eclipse.jgit.treewalk.CanonicalTreeParserTest)')","[135985, 136306]"
"('URIish.java', 'org.eclipse.jgit.transport.URIish', '<init>', '^([a-z][a-z0-9+-]+)://(?:(?:([^/:@]+)(?::([^\\\\/]+))?@)?((?:[^\\\\/:]+)|(?:\\[[0-9a-f:]+\\]))(?::(\\d+))?((?:/~(?:[^\\\\/]+))?[\\\\/]))?(.+)?$', 'file:///tmp/jgit_test_2833063507789227488_tmp/tmp_6575983387995976123/.git/')",[201061]
"('URIish.java', 'org.eclipse.jgit.transport.URIish', '<init>', '^([a-z][a-z0-9+-]+)://(?:(?:([^/:@]+)(?::([^\\\\/]+))?@)?((?:[^\\\\/:]+)|(?:\\[[0-9a-f:]+\\]))(?::(\\d+))?((?:/~(?:[^\\\\/]+))?[\\\\/]))?(.+)?$', 'file:///tmp/jgit_test_4250465133596588734_tmp/tmp_290954966130449691/.git/')","[210055, 211424]"
"('Description.java', 'org.junit.runner.Description', 'methodAndClassNamePatternGroupOrDefault', '([\\s\\S]*)\\((.*)\\)', 'testRemoveMakesEmpty(org.eclipse.jgit.notes.LeafBucketTest)')","[198248, 198489]"
"('URIish.java', 'org.eclipse.jgit.transport.URIish', '<init>', '^(file):([\\\\/](?![\\\\/])((?:[A-Za-z]:)?[\\\\/]?(?:(?:[^\\\\/]+[\\\\/]+)*[^\\\\/]+[\\\\/]*)))$', 'file:/tmp/jgit_test_7262235360055106235_tmp/tmp_7762292172063665766.git/')",[141227]
"('Description.java', 'org.junit.runner.Description', 'methodAndClassNamePatternGroupOrDefault', '([\\s\\S]*)\\((.*)\\)', 'testEscapedBracket3[OldRule? false](org.eclipse.jgit.ignore.IgnoreRuleSpecialCasesTest)')","[149158, 156263]"
"('Description.java', 'org.junit.runner.Description', 'methodAndClassNamePatternGroupOrDefault', '([\\s\\S]*)\\((.*)\\)', 'testTrivialTwoWay_rightDFconflict1(org.eclipse.jgit.merge.SimpleMergeTest)')","[86376, 86650]"
"('Description.java', 'org.junit.runner.Description', 'methodAndClassNamePatternGroupOrDefault', '([\\s\\S]*)\\((.*)\\)', 'testTwoGroupsCase1(org.eclipse.jgit.fnmatch.FileNameMatcherTest)')","[102280, 105601]"
"('Description.java', 'org.junit.runner.Description', 'methodAndClassNamePatternGroupOrDefault', '([\\s\\S]*)\\((.*)\\)', 'org.eclipse.jgit.dircache.DirCachePathEditTest')","[91168, 91379]"
"('URIish.java', 'org.eclipse.jgit.transport.URIish', '<init>', '^(file):([\\\\/](?![\\\\/])((?:[A-Za-z]:)?[\\\\/]?(?:(?:[^\\\\/]+[\\\\/]+)*[^\\\\/]+[\\\\/]*)))$', 'ssh+git://l usr\\example.com:wtf@[::1]:1234/D:\\x')",[16825]
"('Description.java', 'org.junit.runner.Description', 'methodAndClassNamePatternGroupOrDefault', '([\\s\\S]*)\\((.*)\\)', 'testANY_DIFF_IncludesSingleTreeCase(org.eclipse.jgit.treewalk.filter.TreeFilterTest)')","[138465, 138613]"
"('Description.java', 'org.junit.runner.Description', 'methodAndClassNamePatternGroupOrDefault', '([\\s\\S]*)\\((.*)\\)', 'test004_PutGetSimple(org.eclipse.jgit.lib.ConfigTest)')","[129449, 130187]"
"('URIish.java', 'org.eclipse.jgit.transport.URIish', '<init>', '^([a-z][a-z0-9+-]+)://(?:(?:([^/:@]+)(?::([^\\\\/]+))?@)?((?:[^\\\\/:]+)|(?:\\[[0-9a-f:]+\\]))(?::(\\d+))?((?:/~(?:[^\\\\/]+))?[\\\\/]))?(.+)?$', 'ssh+git://l usr\\example.com@example.com:80/D:/x')",[30883]
"('URIish.java', 'org.eclipse.jgit.transport.URIish', '<init>', '^([\\\\/]?((?:[A-Za-z]:)?[\\\\/]?(?:(?:[^\\\\/]+[\\\\/]+)*[^\\\\/]+[\\\\/]*)))$', '/tmp/jgit_test_7866988883983564781_tmp/tmp_1286542265509971418')","[231283, 231428, 231953]"
"('Description.java', 'org.junit.runner.Description', 'methodAndClassNamePatternGroupOrDefault', '([\\s\\S]*)\\((.*)\\)', 'testManySolutionsCase3[OldRule? true](org.eclipse.jgit.ignore.IgnoreRuleSpecialCasesTest)')","[151709, 158793]"
"('URIish.java', 'org.eclipse.jgit.transport.URIish', '<init>', '^(file):([\\\\/](?![\\\\/])((?:[A-Za-z]:)?[\\\\/]?(?:(?:[^\\\\/]+[\\\\/]+)*[^\\\\/]+[\\\\/]*)))$', 'https://l usr\\example.com:wtf@1.2.3.4:1234/D:\\x')",[24238]
"('URIish.java', 'org.eclipse.jgit.transport.URIish', '<init>', '^(file):([\\\\/](?![\\\\/])((?:[A-Za-z]:)?[\\\\/]?(?:(?:[^\\\\/]+[\\\\/]+)*[^\\\\/]+[\\\\/]*)))$', 'file:///tmp/jgit_test_8267827428869162458_tmp/tmp_496968110035574723/testCloneRepositoryWithNestedSubmodules2/.git/')","[204219, 207770]"
"('Description.java', 'org.junit.runner.Description', 'methodAndClassNamePatternGroupOrDefault', '([\\s\\S]*)\\((.*)\\)', 'testManySolutionsCase2(org.eclipse.jgit.fnmatch.FileNameMatcherTest)')","[103141, 106503]"
"('Description.java', 'org.junit.runner.Description', 'methodAndClassNamePatternGroupOrDefault', '([\\s\\S]*)\\((.*)\\)', 'testRenameBranchNoPreviousLog(org.eclipse.jgit.internal.storage.file.RefUpdateTest)')","[253523, 254378]"
"('Description.java', 'org.junit.runner.Description', 'methodAndClassNamePatternGroupOrDefault', '([\\s\\S]*)\\((.*)\\)', 'testStringOfPearls_FilePath1_NoParentRewriting(org.eclipse.jgit.revwalk.RevWalkPathFilter1Test)')","[75893, 76174]"
"('URIish.java', 'org.eclipse.jgit.transport.URIish', '<init>', '^(file):([\\\\/](?![\\\\/])((?:[A-Za-z]:)?[\\\\/]?(?:(?:[^\\\\/]+[\\\\/]+)*[^\\\\/]+[\\\\/]*)))$', 'ssh+git://lusr\\example:wtf@1.2.3.4:80//abc')",[17676]
"('Description.java', 'org.junit.runner.Description', 'methodAndClassNamePatternGroupOrDefault', '([\\s\\S]*)\\((.*)\\)', 'testCharClass[OldRule? false](org.eclipse.jgit.ignore.FastIgnoreRuleTest)')","[163927, 164684]"
"('Description.java', 'org.junit.runner.Description', 'methodAndClassNamePatternGroupOrDefault', '([\\s\\S]*)\\((.*)\\)', 'test008_readSectionNames(org.eclipse.jgit.lib.ConfigTest)')","[129554, 130297]"
"('URIish.java', 'org.eclipse.jgit.transport.URIish', '<init>', '^([a-z][a-z0-9+-]+)://(?:(?:([^/:@]+)(?::([^\\\\/]+))?@)?((?:[^\\\\/:]+)|(?:\\[[0-9a-f:]+\\]))(?::(\\d+))?((?:/~(?:[^\\\\/]+))?[\\\\/]))?(.+)?$', 'http://me:wtf@1.2.3.4:1234//abc')",[19268]
"('URIish.java', 'org.eclipse.jgit.transport.URIish', '<init>', '^(file):([\\\\/](?![\\\\/])((?:[A-Za-z]:)?[\\\\/]?(?:(?:[^\\\\/]+[\\\\/]+)*[^\\\\/]+[\\\\/]*)))$', 'ssh://me@example.com:80/D:\\x')",[26427]
"('URIish.java', 'org.eclipse.jgit.transport.URIish', '<init>', '^(file):([\\\\/](?![\\\\/])((?:[A-Za-z]:)?[\\\\/]?(?:(?:[^\\\\/]+[\\\\/]+)*[^\\\\/]+[\\\\/]*)))$', 'ssh://l usr\\example.com@1.2.3.4//abc')","[40934, 41118]"
"('Description.java', 'org.junit.runner.Description', 'methodAndClassNamePatternGroupOrDefault', '([\\s\\S]*)\\((.*)\\)', 'test008_notIsId(org.eclipse.jgit.lib.ObjectIdTest)')","[130550, 130827]"
"('Description.java', 'org.junit.runner.Description', 'methodAndClassNamePatternGroupOrDefault', '([\\s\\S]*)\\((.*)\\)', 'testBug419359(org.eclipse.jgit.revplot.PlotCommitListTest)')","[197045, 197364]"
"('URIish.java', 'org.eclipse.jgit.transport.URIish', '<init>', '^([a-z][a-z0-9+-]+)://(?:(?:([^/:@]+)(?::([^\\\\/]+))?@)?((?:[^\\\\/:]+)|(?:\\[[0-9a-f:]+\\]))(?::(\\d+))?((?:/~(?:[^\\\\/]+))?[\\\\/]))?(.+)?$', 'https://lusr\\example@1.2.3.4:80//abc')",[38933]
"('Description.java', 'org.junit.runner.Description', 'methodAndClassNamePatternGroupOrDefault', '([\\s\\S]*)\\((.*)\\)', 'org.eclipse.jgit.submodule.SubmoduleStatusTest')","[109244, 109568]"
"('URIish.java', 'org.eclipse.jgit.transport.URIish', '<init>', '^([a-z][a-z0-9+-]+)://(?:(?:([^/:@]+)(?::([^\\\\/]+))?@)?((?:[^\\\\/:]+)|(?:\\[[0-9a-f:]+\\]))(?::(\\d+))?((?:/~(?:[^\\\\/]+))?[\\\\/]))?(.+)?$', 'http://lusr\\example@[::1]//')","[49007, 49191]"
"('Description.java', 'org.junit.runner.Description', 'methodAndClassNamePatternGroupOrDefault', '([\\s\\S]*)\\((.*)\\)', 'testReadWhileAppendIsInProgress(org.eclipse.jgit.internal.storage.file.ReflogReaderTest)')","[259816, 259987]"
"('Description.java', 'org.junit.runner.Description', 'methodAndClassNamePatternGroupOrDefault', '([\\s\\S]*)\\((.*)\\)', 'testShouldBeRecursive_ALL(org.eclipse.jgit.treewalk.filter.NotTreeFilterTest)')","[139313, 139445]"
"('URIish.java', 'org.eclipse.jgit.transport.URIish', '<init>', '^(file):([\\\\/](?![\\\\/])((?:[A-Za-z]:)?[\\\\/]?(?:(?:[^\\\\/]+[\\\\/]+)*[^\\\\/]+[\\\\/]*)))$', 'ssh://lusr\\example@[::1]:1234//')",[29112]
"('ChangeIdUtil.java', 'org.eclipse.jgit.util.ChangeIdUtil', 'indexOfChangeId', '(^Change-Id: *I[a-f0-9]{40}$)', 'Change-Id: I1b55098b5a2cce0b3f3da783dda50d5f79f873fa')","[188746, 190247]"
"('Description.java', 'org.junit.runner.Description', 'methodAndClassNamePatternGroupOrDefault', '([\\s\\S]*)\\((.*)\\)', 'testLowerGroupCase3(org.eclipse.jgit.fnmatch.FileNameMatcherTest)')","[101755, 105051]"
"('Description.java', 'org.junit.runner.Description', 'methodAndClassNamePatternGroupOrDefault', '([\\s\\S]*)\\((.*)\\)', 'testParseGitFileName_DqFooTabBar(org.eclipse.jgit.patch.FileHeaderTest)')","[195222, 195669]"
"('Description.java', 'org.junit.runner.Description', 'methodAndClassNamePatternGroupOrDefault', '([\\s\\S]*)\\((.*)\\)', 'testRemove(org.eclipse.jgit.revwalk.RevFlagSetTest)')","[79828, 79982]"
"('Description.java', 'org.junit.runner.Description', 'methodAndClassNamePatternGroupOrDefault', '([\\s\\S]*)\\((.*)\\)', 'testMixedGroupCase1[OldRule? true](org.eclipse.jgit.ignore.IgnoreRuleSpecialCasesTest)')","[149662, 156746]"
"('Description.java', 'org.junit.runner.Description', 'methodAndClassNamePatternGroupOrDefault', '([\\s\\S]*)\\((.*)\\)', 'testDigitGroupCase1(org.eclipse.jgit.fnmatch.FileNameMatcherTest)')","[102448, 105777]"
"('FastIgnoreRule.java', 'org.eclipse.jgit.ignore.FastIgnoreRule', 'isMatch', '[\\p{Alnum}]', '1')",[163206]
"('Description.java', 'org.junit.runner.Description', 'methodAndClassNamePatternGroupOrDefault', '([\\s\\S]*)\\((.*)\\)', 'testCache_Defaults(org.eclipse.jgit.internal.storage.file.WindowCacheGetTest)')","[254566, 254632]"
"('Description.java', 'org.junit.runner.Description', 'methodAndClassNamePatternGroupOrDefault', '([\\s\\S]*)\\((.*)\\)', 'testNoFooters_OneLineBodyNoLF(org.eclipse.jgit.revwalk.FooterLineTest)')","[77481, 77885]"
"('URIish.java', 'org.eclipse.jgit.transport.URIish', '<init>', '^([a-z][a-z0-9+-]+)://(?:(?:([^/:@]+)(?::([^\\\\/]+))?@)?((?:[^\\\\/:]+)|(?:\\[[0-9a-f:]+\\]))(?::(\\d+))?((?:/~(?:[^\\\\/]+))?[\\\\/]))?(.+)?$', 'file:///tmp/jgit_test_3047862731010516352_tmp/tmp_4732003647806853687/.git/')","[196902, 197854]"
"('Description.java', 'org.junit.runner.Description', 'methodAndClassNamePatternGroupOrDefault', '([\\s\\S]*)\\((.*)\\)', 'testMixedGroupCase2[OldRule? true](org.eclipse.jgit.ignore.IgnoreRuleSpecialCasesTest)')","[149685, 156769]"
"('URIish.java', 'org.eclipse.jgit.transport.URIish', '<init>', '^(file):([\\\\/](?![\\\\/])((?:[A-Za-z]:)?[\\\\/]?(?:(?:[^\\\\/]+[\\\\/]+)*[^\\\\/]+[\\\\/]*)))$', 'ssh+git://me@[::1]/D:\\x')","[43602, 43786]"
"('Description.java', 'org.junit.runner.Description', 'methodAndClassNamePatternGroupOrDefault', '([\\s\\S]*)\\((.*)\\)', 'org.eclipse.jgit.ignore.IgnoreMatcherTest')","[145218, 145628]"
"('Description.java', 'org.junit.runner.Description', 'methodAndClassNamePatternGroupOrDefault', '([\\s\\S]*)\\((.*)\\)', 'testNewFileWithWait(org.eclipse.jgit.internal.storage.file.FileSnapshotTest)')","[250471, 250559]"
"('Description.java', 'org.junit.runner.Description', 'methodAndClassNamePatternGroupOrDefault', '([\\s\\S]*)\\((.*)\\)', 'testUsingHiddenDeltaBaseFails(org.eclipse.jgit.transport.ReceivePackAdvertiseRefsHookTest)')","[681, 852]"
"('URIish.java', 'org.eclipse.jgit.transport.URIish', '<init>', '^(?:([^/:@]+)(?::([^\\\\/]+))?@)?([^\\\\/:]{2,}):([\\\\/](?:(?:[^\\\\/]+[\\\\/]+)*[^\\\\/]+[\\\\/]*))$', '/tmp/jgit_test_2725117978470059884_tmp/tmp_193317894193640660')","[210753, 210955, 211294]"
"('Description.java', 'org.junit.runner.Description', 'methodAndClassNamePatternGroupOrDefault', '([\\s\\S]*)\\((.*)\\)', 'testDeleteMiddleLines(org.eclipse.jgit.api.BlameCommandTest)')","[244516, 244901]"
"('URIish.java', 'org.eclipse.jgit.transport.URIish', '<init>', '^([a-z][a-z0-9+-]+)://(?:(?:([^/:@]+)(?::([^\\\\/]+))?@)?((?:[^\\\\/:]+)|(?:\\[[0-9a-f:]+\\]))(?::(\\d+))?((?:/~(?:[^\\\\/]+))?[\\\\/]))?(.+)?$', 'ssh+git://l usr\\example.com:wtf@[::1]:1234//abc')",[16756]
"('Description.java', 'org.junit.runner.Description', 'methodAndClassNamePatternGroupOrDefault', '([\\s\\S]*)\\((.*)\\)', 'org.eclipse.jgit.lib.MergeHeadMsgTest')","[119464, 119573]"
"('URIish.java', 'org.eclipse.jgit.transport.URIish', '<init>', '^([a-z][a-z0-9+-]+)://(?:(?:([^/:@]+)(?::([^\\\\/]+))?@)?((?:[^\\\\/:]+)|(?:\\[[0-9a-f:]+\\]))(?::(\\d+))?((?:/~(?:[^\\\\/]+))?[\\\\/]))?(.+)?$', 'https://l usr\\example.com:wtf@[::1]:80/D:/x')",[24767]
"('URIish.java', 'org.eclipse.jgit.transport.URIish', '<init>', '^([a-z][a-z0-9+-]+)://(?:(?:([^/:@]+)(?::([^\\\\/]+))?@)?((?:[^\\\\/:]+)|(?:\\[[0-9a-f:]+\\]))(?::(\\d+))?((?:/~(?:[^\\\\/]+))?[\\\\/]))?(.+)?$', 'http://example.com/D:\\x')","[59449, 59633, 60553, 60737, 61657, 61841]"
"('URIish.java', 'org.eclipse.jgit.transport.URIish', '<init>', '^(file):([\\\\/](?![\\\\/])((?:[A-Za-z]:)?[\\\\/]?(?:(?:[^\\\\/]+[\\\\/]+)*[^\\\\/]+[\\\\/]*)))$', 'http://lusr\\example:wtf@example.com:1234//abc')",[21570]
"('Description.java', 'org.junit.runner.Description', 'methodAndClassNamePatternGroupOrDefault', '([\\s\\S]*)\\((.*)\\)', 'testMaliciousAbsoluteUNCPathWindows1(org.eclipse.jgit.lib.DirCacheCheckoutMaliciousPathTest)')","[112059, 112962]"
"('Description.java', 'org.junit.runner.Description', 'methodAndClassNamePatternGroupOrDefault', '([\\s\\S]*)\\((.*)\\)', 'test6_FromString(org.eclipse.jgit.lib.AbbreviatedObjectIdTest)')","[114683, 115226]"
"('Description.java', 'org.junit.runner.Description', 'methodAndClassNamePatternGroupOrDefault', '([\\s\\S]*)\\((.*)\\)', 'testWritePacket2(org.eclipse.jgit.transport.PacketLineOutTest)')","[74961, 75131]"
"('Description.java', 'org.junit.runner.Description', 'methodAndClassNamePatternGroupOrDefault', '([\\s\\S]*)\\((.*)\\)', 'testGraphGroupCase0(org.eclipse.jgit.fnmatch.FileNameMatcherTest)')","[101503, 104787]"
"('Description.java', 'org.junit.runner.Description', 'methodAndClassNamePatternGroupOrDefault', '([\\s\\S]*)\\((.*)\\)', 'testVerySimplePatternCase1[OldRule? true](org.eclipse.jgit.ignore.IgnoreRuleSpecialCasesTest)')","[150260, 157344]"
"('Description.java', 'org.junit.runner.Description', 'methodAndClassNamePatternGroupOrDefault', '([\\s\\S]*)\\((.*)\\)', 'testNetRCDefault(org.eclipse.jgit.transport.NetRCTest)')","[73797, 73841]"
"('Description.java', 'org.junit.runner.Description', 'methodAndClassNamePatternGroupOrDefault', '([\\s\\S]*)\\((.*)\\)', 'testUpperGroupCase0[OldRule? true](org.eclipse.jgit.ignore.IgnoreRuleSpecialCasesTest)')","[151755, 158839]"
"('Description.java', 'org.junit.runner.Description', 'methodAndClassNamePatternGroupOrDefault', '([\\s\\S]*)\\((.*)\\)', 'testUpdateUpToDate(org.eclipse.jgit.transport.PushProcessTest)')","[74068, 74433]"
"('URIish.java', 'org.eclipse.jgit.transport.URIish', '<init>', '^([a-z][a-z0-9+-]+)://(?:(?:([^/:@]+)(?::([^\\\\/]+))?@)?((?:[^\\\\/:]+)|(?:\\[[0-9a-f:]+\\]))(?::(\\d+))?((?:/~(?:[^\\\\/]+))?[\\\\/]))?(.+)?$', 'http://me:wtf@[::1]:80//')",[20236]
"('Description.java', 'org.junit.runner.Description', 'methodAndClassNamePatternGroupOrDefault', '([\\s\\S]*)\\((.*)\\)', 'testStandardFormat_InvalidType(org.eclipse.jgit.internal.storage.file.UnpackedObjectTest)')","[254980, 255297]"
"('URIish.java', 'org.eclipse.jgit.transport.URIish', '<init>', '^(?:([^/:@]+)(?::([^\\\\/]+))?@)?((?:[^\\\\/:]+)|(?:\\[[0-9a-f:]+\\])):((?:(?:/~(?:[^\\\\/]+))[\\\\/])?(?:(?:[^\\\\/]+[\\\\/]+)*[^\\\\/]+[\\\\/]*))$', '/abc/')",[71264]
"('Description.java', 'org.junit.runner.Description', 'methodAndClassNamePatternGroupOrDefault', '([\\s\\S]*)\\((.*)\\)', 'testCreateBranchOnCheckout(org.eclipse.jgit.api.CheckoutCommandTest)')","[206933, 207448]"
"('Description.java', 'org.junit.runner.Description', 'methodAndClassNamePatternGroupOrDefault', '([\\s\\S]*)\\((.*)\\)', 'noStashRef(org.eclipse.jgit.api.StashListCommandTest)')","[226586, 226672]"
"('URIish.java', 'org.eclipse.jgit.transport.URIish', '<init>', '^(file):([\\\\/](?![\\\\/])((?:[A-Za-z]:)?[\\\\/]?(?:(?:[^\\\\/]+[\\\\/]+)*[^\\\\/]+[\\\\/]*)))$', 'file:///tmp/jgit_test_2708460262653309306_tmp/tmp_1359715560973146015/.git/')",[243752]
"('Description.java', 'org.junit.runner.Description', 'methodAndClassNamePatternGroupOrDefault', '([\\s\\S]*)\\((.*)\\)', 'org.eclipse.jgit.util.GitDateFormatterTest')","[172072, 172482]"
"('Description.java', 'org.junit.runner.Description', 'methodAndClassNamePatternGroupOrDefault', '([\\s\\S]*)\\((.*)\\)', 'testWriteEmptyLockEmpty_RealIndex(org.eclipse.jgit.dircache.DirCacheBasicTest)')","[90046, 90286]"
"('Description.java', 'org.junit.runner.Description', 'methodAndClassNamePatternGroupOrDefault', '([\\s\\S]*)\\((.*)\\)', 'testEmpty(org.eclipse.jgit.treewalk.filter.InterIndexDiffFilterTest)')","[139544, 139652]"
"('URIish.java', 'org.eclipse.jgit.transport.URIish', '<init>', '^(file):([\\\\/](?![\\\\/])((?:[A-Za-z]:)?[\\\\/]?(?:(?:[^\\\\/]+[\\\\/]+)*[^\\\\/]+[\\\\/]*)))$', 'https://l usr\\example.com@1.2.3.4/D:/x')","[50916, 51100]"
"('URIish.java', 'org.eclipse.jgit.transport.URIish', '<init>', '^(file):([\\\\/](?![\\\\/])((?:[A-Za-z]:)?[\\\\/]?(?:(?:[^\\\\/]+[\\\\/]+)*[^\\\\/]+[\\\\/]*)))$', 'http://me:wtf@[::1]:1234//abc')",[20075]
"('Description.java', 'org.junit.runner.Description', 'methodAndClassNamePatternGroupOrDefault', '([\\s\\S]*)\\((.*)\\)', 'testTwoSimilarModsAndOneInsert(org.eclipse.jgit.merge.MergeAlgorithmTest)')","[87120, 87421]"
"('URIish.java', 'org.eclipse.jgit.transport.URIish', '<init>', '^([a-z][a-z0-9+-]+)://(?:(?:([^/:@]+)(?::([^\\\\/]+))?@)?((?:[^\\\\/:]+)|(?:\\[[0-9a-f:]+\\]))(?::(\\d+))?((?:/~(?:[^\\\\/]+))?[\\\\/]))?(.+)?$', 'ssh://l usr\\example.com@[::1]/D:\\x')","[41417, 41601]"
"('Description.java', 'org.junit.runner.Description', 'methodAndClassNamePatternGroupOrDefault', '([\\s\\S]*)\\((.*)\\)', 'org.eclipse.jgit.api.CommitCommandTest')","[212288, 216263]"
"('Description.java', 'org.junit.runner.Description', 'methodAndClassNamePatternGroupOrDefault', '([\\s\\S]*)\\((.*)\\)', 'testPath_4094(org.eclipse.jgit.dircache.DirCacheLargePathTest)')","[92161, 92268]"
"('Description.java', 'org.junit.runner.Description', 'methodAndClassNamePatternGroupOrDefault', '([\\s\\S]*)\\((.*)\\)', 'testValidTree3(org.eclipse.jgit.lib.ObjectCheckerTest)')","[121238, 123337]"
"('URIish.java', 'org.eclipse.jgit.transport.URIish', '<init>', '^(?:([^/:@]+)(?::([^\\\\/]+))?@)?([^\\\\/:]{2,}):([\\\\/](?:(?:[^\\\\/]+[\\\\/]+)*[^\\\\/]+[\\\\/]*))$', '/tmp/jgit_test_5311018649809901760_tmp/tmp_2572555623416741506')","[225621, 225761]"
"('URIish.java', 'org.eclipse.jgit.transport.URIish', '<init>', '^([a-z][a-z0-9+-]+)://(?:(?:([^/:@]+)(?::([^\\\\/]+))?@)?((?:[^\\\\/:]+)|(?:\\[[0-9a-f:]+\\]))(?::(\\d+))?((?:/~(?:[^\\\\/]+))?[\\\\/]))?(.+)?$', 'file:///tmp/jgit_test_5759483036504177498_tmp/tmp_2056104723408913642/.git/')",[203548]
"('Description.java', 'org.junit.runner.Description', 'methodAndClassNamePatternGroupOrDefault', '([\\s\\S]*)\\((.*)\\)', 'testHttpAuthScanResponse(org.eclipse.jgit.transport.HttpAuthTest)')","[67855, 67877]"
"('FastIgnoreRule.java', 'org.eclipse.jgit.ignore.FastIgnoreRule', 'isMatch', '[[\\p{Print}\\p{javaDigit}\\p{javaLetter}]]', 'a')",[162424]
"('Description.java', 'org.junit.runner.Description', 'methodAndClassNamePatternGroupOrDefault', '([\\s\\S]*)\\((.*)\\)', 'testShouldAutomagicallyDetectGitDirectory(org.eclipse.jgit.internal.storage.file.FileRepositoryBuilderTest)')","[248492, 248646]"
"('URIish.java', 'org.eclipse.jgit.transport.URIish', '<init>', '^([a-z][a-z0-9+-]+)://(?:(?:([^/:@]+)(?::([^\\\\/]+))?@)?((?:[^\\\\/:]+)|(?:\\[[0-9a-f:]+\\]))(?::(\\d+))?((?:/~(?:[^\\\\/]+))?[\\\\/]))?(.+)?$', '/more/dirs')","[6179, 7500, 10104]"
"('Description.java', 'org.junit.runner.Description', 'methodAndClassNamePatternGroupOrDefault', '([\\s\\S]*)\\((.*)\\)', 'org.eclipse.jgit.diff.HistogramDiffTest')","[98422, 100521]"
"('URIish.java', 'org.eclipse.jgit.transport.URIish', '<init>', '^([a-z][a-z0-9+-]+)://(?:(?:([^/:@]+)(?::([^\\\\/]+))?@)?((?:[^\\\\/:]+)|(?:\\[[0-9a-f:]+\\]))(?::(\\d+))?((?:/~(?:[^\\\\/]+))?[\\\\/]))?(.+)?$', 'ssh://%3ax%25:%40%41x@example.com:33/some%c3%a5/p%20a th')","[67614, 67660]"
"('URIish.java', 'org.eclipse.jgit.transport.URIish', '<init>', '^([a-z][a-z0-9+-]+)://(?:(?:([^/:@]+)(?::([^\\\\/]+))?@)?((?:[^\\\\/:]+)|(?:\\[[0-9a-f:]+\\]))(?::(\\d+))?((?:/~(?:[^\\\\/]+))?[\\\\/]))?(.+)?$', 'ssh://lusr\\example@1.2.3.4:1234//abc')",[28813]
"('Description.java', 'org.junit.runner.Description', 'methodAndClassNamePatternGroupOrDefault', '([\\s\\S]*)\\((.*)\\)', 'testUsingUnknownTreeFails(org.eclipse.jgit.transport.ReceivePackAdvertiseRefsHookTest)')","[807, 984]"
"('Description.java', 'org.junit.runner.Description', 'methodAndClassNamePatternGroupOrDefault', '([\\s\\S]*)\\((.*)\\)', 'testPathFilterGroup_DoesNotSkipTail(org.eclipse.jgit.dircache.DirCacheBuilderIteratorTest)')","[90770, 90792]"
"('URIish.java', 'org.eclipse.jgit.transport.URIish', '<init>', '^([a-z][a-z0-9+-]+)://(?:(?:([^/:@]+)(?::([^\\\\/]+))?@)?((?:[^\\\\/:]+)|(?:\\[[0-9a-f:]+\\]))(?::(\\d+))?((?:/~(?:[^\\\\/]+))?[\\\\/]))?(.+)?$', '/tmp/jgit_test_47688348811366599_tmp/tmp_1522576617666632427')","[206135, 206335, 207866, 208016, 208356]"
"('Description.java', 'org.junit.runner.Description', 'methodAndClassNamePatternGroupOrDefault', '([\\s\\S]*)\\((.*)\\)', 'testFileInFolderCommittedDeleted(org.eclipse.jgit.treewalk.filter.IndexDiffFilterTest)')","[136689, 137493]"
"('Description.java', 'org.junit.runner.Description', 'methodAndClassNamePatternGroupOrDefault', '([\\s\\S]*)\\((.*)\\)', 'testNegation(org.eclipse.jgit.ignore.IgnoreNodeTest)')","[140626, 140930]"
"('URIish.java', 'org.eclipse.jgit.transport.URIish', '<init>', '^([a-z][a-z0-9+-]+)://(?:(?:([^/:@]+)(?::([^\\\\/]+))?@)?((?:[^\\\\/:]+)|(?:\\[[0-9a-f:]+\\]))(?::(\\d+))?((?:/~(?:[^\\\\/]+))?[\\\\/]))?(.+)?$', '/tmp/jgit_test_1653911944562620756_tmp/tmp_8778582607667217527')","[233099, 233229, 233902]"
"('Description.java', 'org.junit.runner.Description', 'methodAndClassNamePatternGroupOrDefault', '([\\s\\S]*)\\((.*)\\)', 'getTrackingBranchShouldHandleNormalCaseForRemoteTrackingBranch(org.eclipse.jgit.lib.BranchConfigTest)')","[120583, 120759]"
"('Description.java', 'org.junit.runner.Description', 'methodAndClassNamePatternGroupOrDefault', '([\\s\\S]*)\\((.*)\\)', 'testValidCommit2Parent(org.eclipse.jgit.lib.ObjectCheckerTest)')","[121700, 123821]"
"('Description.java', 'org.junit.runner.Description', 'methodAndClassNamePatternGroupOrDefault', '([\\s\\S]*)\\((.*)\\)', 'testReadFromFallback(org.eclipse.jgit.internal.storage.dfs.DfsInserterTest)')","[246087, 246195]"
"('Description.java', 'org.junit.runner.Description', 'methodAndClassNamePatternGroupOrDefault', '([\\s\\S]*)\\((.*)\\)', 'testDerefTag(org.eclipse.jgit.lib.RepositoryResolveTest)')","[125554, 126036]"
"('Description.java', 'org.junit.runner.Description', 'methodAndClassNamePatternGroupOrDefault', '([\\s\\S]*)\\((.*)\\)', 'lightweightTag_objectNotPruned(org.eclipse.jgit.internal.storage.file.GcTagTest)')","[256995, 257039]"
"('PathMatcher.java', 'org.eclipse.jgit.ignore.internal.PathMatcher', 'iterate', 'a.', 'abc')","[171297, 171326, 171355, 171384]"
"('URIish.java', 'org.eclipse.jgit.transport.URIish', '<init>', '^(file):([\\\\/](?![\\\\/])((?:[A-Za-z]:)?[\\\\/]?(?:(?:[^\\\\/]+[\\\\/]+)*[^\\\\/]+[\\\\/]*)))$', 'http://l usr\\example.com@1.2.3.4:80//')",[34448]
"('URIish.java', 'org.eclipse.jgit.transport.URIish', '<init>', '^([a-z][a-z0-9+-]+)://(?:(?:([^/:@]+)(?::([^\\\\/]+))?@)?((?:[^\\\\/:]+)|(?:\\[[0-9a-f:]+\\]))(?::(\\d+))?((?:/~(?:[^\\\\/]+))?[\\\\/]))?(.+)?$', 'ssh://l usr\\example.com:wtf@1.2.3.4:80//')",[11716]
"('URIish.java', 'org.eclipse.jgit.transport.URIish', '<init>', '^([a-z][a-z0-9+-]+)://(?:(?:([^/:@]+)(?::([^\\\\/]+))?@)?((?:[^\\\\/:]+)|(?:\\[[0-9a-f:]+\\]))(?::(\\d+))?((?:/~(?:[^\\\\/]+))?[\\\\/]))?(.+)?$', 'https://lusr\\example@1.2.3.4/D:/x')","[52043, 52227]"
"('Description.java', 'org.junit.runner.Description', 'methodAndClassNamePatternGroupOrDefault', '([\\s\\S]*)\\((.*)\\)', 'testCloneRepositoryWithBranchShortName(org.eclipse.jgit.api.CloneCommandTest)')","[203729, 203962]"
"('Description.java', 'org.junit.runner.Description', 'methodAndClassNamePatternGroupOrDefault', '([\\s\\S]*)\\((.*)\\)', 'testRebaseInteractiveSingleSquashAndModifyMessage(org.eclipse.jgit.api.RebaseCommandTest)')","[217753, 219246]"
"('Description.java', 'org.junit.runner.Description', 'methodAndClassNamePatternGroupOrDefault', '([\\s\\S]*)\\((.*)\\)', 'testReadAllIncludingSymrefs(org.eclipse.jgit.lib.RefTest)')","[115460, 115650]"
"('Description.java', 'org.junit.runner.Description', 'methodAndClassNamePatternGroupOrDefault', '([\\s\\S]*)\\((.*)\\)', 'testFilter_NONE_And_MY_ALL(org.eclipse.jgit.revwalk.RevWalkFilterTest)')","[83272, 83598]"
"('Description.java', 'org.junit.runner.Description', 'methodAndClassNamePatternGroupOrDefault', '([\\s\\S]*)\\((.*)\\)', 'testAdd(org.eclipse.jgit.internal.storage.pack.IntSetTest)')","[246937, 246959]"
"('Description.java', 'org.junit.runner.Description', 'methodAndClassNamePatternGroupOrDefault', '([\\s\\S]*)\\((.*)\\)', 'testInvalidTreeModeNotOctal1(org.eclipse.jgit.lib.ObjectCheckerTest)')","[120965, 123051]"
"('Description.java', 'org.junit.runner.Description', 'methodAndClassNamePatternGroupOrDefault', '([\\s\\S]*)\\((.*)\\)', 'testRevertOverExecutableChangeOnNonExectuableFileSystem(org.eclipse.jgit.api.RevertCommandTest)')","[233490, 233704]"
"('Description.java', 'org.junit.runner.Description', 'methodAndClassNamePatternGroupOrDefault', '([\\s\\S]*)\\((.*)\\)', 'testInvalidCommitInvalidCommitter(org.eclipse.jgit.lib.ObjectCheckerTest)')","[122330, 124481]"
"('Description.java', 'org.junit.runner.Description', 'methodAndClassNamePatternGroupOrDefault', '([\\s\\S]*)\\((.*)\\)', 'shortWithDots(org.eclipse.jgit.util.GitDateParserTest)')","[182257, 182531]"
"('Description.java', 'org.junit.runner.Description', 'methodAndClassNamePatternGroupOrDefault', '([\\s\\S]*)\\((.*)\\)', 'testDecodeUInt64(org.eclipse.jgit.util.NBTest)')","[184830, 185001]"
"('Description.java', 'org.junit.runner.Description', 'methodAndClassNamePatternGroupOrDefault', '([\\s\\S]*)\\((.*)\\)', 'testOnlyOption_f1_2_f2_14_c(org.eclipse.jgit.api.CommitOnlyTest)')","[236920, 239020]"
"('Description.java', 'org.junit.runner.Description', 'methodAndClassNamePatternGroupOrDefault', '([\\s\\S]*)\\((.*)\\)', 'testAssumeUnchanged(org.eclipse.jgit.api.AddCommandTest)')","[234864, 235292]"
"('Description.java', 'org.junit.runner.Description', 'methodAndClassNamePatternGroupOrDefault', '([\\s\\S]*)\\((.*)\\)', 'testGetEnum(org.eclipse.jgit.lib.ConfigTest)')","[129197, 129923]"
"('Description.java', 'org.junit.runner.Description', 'methodAndClassNamePatternGroupOrDefault', '([\\s\\S]*)\\((.*)\\)', 'testPathEditShouldBeCalledForEachStage(org.eclipse.jgit.dircache.DirCachePathEditTest)')","[91210, 91275]"
"('URIish.java', 'org.eclipse.jgit.transport.URIish', '<init>', '^([a-z][a-z0-9+-]+)://(?:(?:([^/:@]+)(?::([^\\\\/]+))?@)?((?:[^\\\\/:]+)|(?:\\[[0-9a-f:]+\\]))(?::(\\d+))?((?:/~(?:[^\\\\/]+))?[\\\\/]))?(.+)?$', 'http://example.com//')","[59311, 59495, 60415, 60599, 61519, 61703]"
"('Description.java', 'org.junit.runner.Description', 'methodAndClassNamePatternGroupOrDefault', '([\\s\\S]*)\\((.*)\\)', 'resolveSameLevelRelativeUrl(org.eclipse.jgit.submodule.SubmoduleInitTest)')","[100683, 100836]"
"('Description.java', 'org.junit.runner.Description', 'methodAndClassNamePatternGroupOrDefault', '([\\s\\S]*)\\((.*)\\)', 'testDigitGroupCase4[OldRule? false](org.eclipse.jgit.ignore.IgnoreRuleSpecialCasesTest)')","[147410, 154515]"
"('Description.java', 'org.junit.runner.Description', 'methodAndClassNamePatternGroupOrDefault', '([\\s\\S]*)\\((.*)\\)', 'testPullConflict(org.eclipse.jgit.api.PullCommandWithRebaseTest)')","[205935, 206043]"
"('URIish.java', 'org.eclipse.jgit.transport.URIish', '<init>', '^([a-z][a-z0-9+-]+)://(?:(?:([^/:@]+)(?::([^\\\\/]+))?@)?((?:[^\\\\/:]+)|(?:\\[[0-9a-f:]+\\]))(?::(\\d+))?((?:/~(?:[^\\\\/]+))?[\\\\/]))?(.+)?$', 'file:///tmp/jgit_test_1646167366253468193_tmp/tmp_4210899106286484405/.git/')",[128568]
"('URIish.java', 'org.eclipse.jgit.transport.URIish', '<init>', '^([a-z][a-z0-9+-]+)://(?:(?:([^/:@]+)(?::([^\\\\/]+))?@)?((?:[^\\\\/:]+)|(?:\\[[0-9a-f:]+\\]))(?::(\\d+))?((?:/~(?:[^\\\\/]+))?[\\\\/]))?(.+)?$', 'http://www.spearce.org/egit.git')","[6471, 8162, 8212, 8552, 8725, 9275, 9570, 10838, 11310, 11435]"
"('URIish.java', 'org.eclipse.jgit.transport.URIish', '<init>', '^(file):([\\\\/](?![\\\\/])((?:[A-Za-z]:)?[\\\\/]?(?:(?:[^\\\\/]+[\\\\/]+)*[^\\\\/]+[\\\\/]*)))$', 'http://lusr\\example:wtf@example.com:1234//')",[21524]
"('FastIgnoreRule.java', 'org.eclipse.jgit.ignore.FastIgnoreRule', 'isMatch', '.*\\.sta[0-5]', 'test.sta2')","[142416, 143560]"
"('Description.java', 'org.junit.runner.Description', 'methodAndClassNamePatternGroupOrDefault', '([\\s\\S]*)\\((.*)\\)', 'testExceptionThrown_BareRepoGetIndexFile(org.eclipse.jgit.internal.storage.file.RepositorySetupWorkDirTest)')","[255873, 256136]"
"('FastIgnoreRule.java', 'org.eclipse.jgit.ignore.FastIgnoreRule', 'isMatch', '[\\[]', '[')",[159900]
"('Description.java', 'org.junit.runner.Description', 'methodAndClassNamePatternGroupOrDefault', '([\\s\\S]*)\\((.*)\\)', 'testGetText_NoBinary(org.eclipse.jgit.patch.GetTextTest)')","[196648, 196734]"
"('URIish.java', 'org.eclipse.jgit.transport.URIish', '<init>', '^([a-z][a-z0-9+-]+)://(?:(?:([^/:@]+)(?::([^\\\\/]+))?@)?((?:[^\\\\/:]+)|(?:\\[[0-9a-f:]+\\]))(?::(\\d+))?((?:/~(?:[^\\\\/]+))?[\\\\/]))?(.+)?$', 'ssh+git://lusr\\example@example.com:1234//abc')",[31757]
"('Description.java', 'org.junit.runner.Description', 'methodAndClassNamePatternGroupOrDefault', '([\\s\\S]*)\\((.*)\\)', 'testChangeIdAlreadySet(org.eclipse.jgit.util.ChangeIdUtilTest)')","[185819, 186578]"
"('FastIgnoreRule.java', 'org.eclipse.jgit.ignore.FastIgnoreRule', 'isMatch', '.r[a-c]', '3ra')",[144920]
"('Description.java', 'org.junit.runner.Description', 'methodAndClassNamePatternGroupOrDefault', '([\\s\\S]*)\\((.*)\\)', 'testEnsurePathCapacityGrows(org.eclipse.jgit.treewalk.AbstractTreeIteratorTest)')","[134450, 134600]"
"('URIish.java', 'org.eclipse.jgit.transport.URIish', '<init>', '^(file):([\\\\/](?![\\\\/])((?:[A-Za-z]:)?[\\\\/]?(?:(?:[^\\\\/]+[\\\\/]+)*[^\\\\/]+[\\\\/]*)))$', 'https://me@example.com:1234//abc')",[36150]
"('URIish.java', 'org.eclipse.jgit.transport.URIish', '<init>', '^([a-z][a-z0-9+-]+)://(?:(?:([^/:@]+)(?::([^\\\\/]+))?@)?((?:[^\\\\/:]+)|(?:\\[[0-9a-f:]+\\]))(?::(\\d+))?((?:/~(?:[^\\\\/]+))?[\\\\/]))?(.+)?$', 'http://lusr\\example:wtf@example.com:1234/D:/x')",[21639]
"('URIish.java', 'org.eclipse.jgit.transport.URIish', '<init>', '^(file):([\\\\/](?![\\\\/])((?:[A-Za-z]:)?[\\\\/]?(?:(?:[^\\\\/]+[\\\\/]+)*[^\\\\/]+[\\\\/]*)))$', 'ssh://me:wtf@example.com:80//')",[7737]
"('Description.java', 'org.junit.runner.Description', 'methodAndClassNamePatternGroupOrDefault', '([\\s\\S]*)\\((.*)\\)', 'testWorkdirIsParentDir_CreateRepositoryFromDotGitGitDir(org.eclipse.jgit.internal.storage.file.RepositorySetupWorkDirTest)')","[255663, 255916]"
"('Description.java', 'org.junit.runner.Description', 'methodAndClassNamePatternGroupOrDefault', '([\\s\\S]*)\\((.*)\\)', 'testVerySimpleWildCardCase3(org.eclipse.jgit.fnmatch.FileNameMatcherTest)')","[101167, 104435]"
"('Description.java', 'org.junit.runner.Description', 'methodAndClassNamePatternGroupOrDefault', '([\\s\\S]*)\\((.*)\\)', 'testCheckoutOfDirectoryShouldBeRecursive(org.eclipse.jgit.api.CheckoutCommandTest)')","[206744, 207250]"
"('Description.java', 'org.junit.runner.Description', 'methodAndClassNamePatternGroupOrDefault', '([\\s\\S]*)\\((.*)\\)', 'testEquals(org.eclipse.jgit.diff.RawTextTest)')","[96619, 96838]"
"('URIish.java', 'org.eclipse.jgit.transport.URIish', '<init>', '^(file):([\\\\/](?![\\\\/])((?:[A-Za-z]:)?[\\\\/]?(?:(?:[^\\\\/]+[\\\\/]+)*[^\\\\/]+[\\\\/]*)))$', 'ssh://lusr\\example@1.2.3.4:80/D:/x')",[29020]
"('ChangeIdUtil.java', 'org.eclipse.jgit.util.ChangeIdUtil', 'indexOfChangeId', '(^Change-Id: *I[a-f0-9]{40}$)', 'Change-Id: Id3bc5359d768a6400450283e12bdfb6cd135ea4b')","[188721, 190220]"
"('URIish.java', 'org.eclipse.jgit.transport.URIish', '<init>', '^(?:([^/:@]+)(?::([^\\\\/]+))?@)?([^\\\\/:]{2,}):([\\\\/](?:(?:[^\\\\/]+[\\\\/]+)*[^\\\\/]+[\\\\/]*))$', '\\\\some\\place')","[7061, 7176]"
"('Description.java', 'org.junit.runner.Description', 'methodAndClassNamePatternGroupOrDefault', '([\\s\\S]*)\\((.*)\\)', 'testNonBlockingPartialRead(org.eclipse.jgit.util.io.UnionInputStreamTest)')","[175105, 175323]"
"('FastIgnoreRule.java', 'org.eclipse.jgit.ignore.FastIgnoreRule', 'isMatch', '[[\\p{Graph}\\p{javaDigit}\\p{javaLetter}]]', 'ö')",[160732]
"('Description.java', 'org.junit.runner.Description', 'methodAndClassNamePatternGroupOrDefault', '([\\s\\S]*)\\((.*)\\)', 'testOnlyOption_f1_7_b(org.eclipse.jgit.api.CommitOnlyTest)')","[236584, 238668]"
"('URIish.java', 'org.eclipse.jgit.transport.URIish', '<init>', '^(file):([\\\\/](?![\\\\/])((?:[A-Za-z]:)?[\\\\/]?(?:(?:[^\\\\/]+[\\\\/]+)*[^\\\\/]+[\\\\/]*)))$', 'file:///tmp/jgit_test_4267913266736872707_tmp/tmp_8595701910287788852/.git/')",[132155]
"('URIish.java', 'org.eclipse.jgit.transport.URIish', '<init>', '^([a-z][a-z0-9+-]+)://(?:(?:([^/:@]+)(?::([^\\\\/]+))?@)?((?:[^\\\\/:]+)|(?:\\[[0-9a-f:]+\\]))(?::(\\d+))?((?:/~(?:[^\\\\/]+))?[\\\\/]))?(.+)?$', 'ssh+git://me:wtf@1.2.3.4:1234/D:\\x')",[14672]
"('Description.java', 'org.junit.runner.Description', 'methodAndClassNamePatternGroupOrDefault', '([\\s\\S]*)\\((.*)\\)', 'testVerySimpleGroupCase2[OldRule? true](org.eclipse.jgit.ignore.IgnoreRuleSpecialCasesTest)')","[152652, 159736]"
"('Description.java', 'org.junit.runner.Description', 'methodAndClassNamePatternGroupOrDefault', '([\\s\\S]*)\\((.*)\\)', 'testInvalidTagNoObject6(org.eclipse.jgit.lib.ObjectCheckerTest)')","[122267, 124415]"
"('URIish.java', 'org.eclipse.jgit.transport.URIish', '<init>', '^(file):([\\\\/](?![\\\\/])((?:[A-Za-z]:)?[\\\\/]?(?:(?:[^\\\\/]+[\\\\/]+)*[^\\\\/]+[\\\\/]*)))$', 'file:/tmp/jgit_test_3520123581738796132_tmp/tmp_4444582433628548112/.git/')",[133050]
"('URIish.java', 'org.eclipse.jgit.transport.URIish', 'getHumanishName', '^([\\\\/]?((?:[A-Za-z]:)?[\\\\/]?(?:(?:[^\\\\/]+[\\\\/]+)*[^\\\\/]+[\\\\/]*)))$', '/a/b/.git')",[71195]
"('URIish.java', 'org.eclipse.jgit.transport.URIish', '<init>', '^(file):([\\\\/](?![\\\\/])((?:[A-Za-z]:)?[\\\\/]?(?:(?:[^\\\\/]+[\\\\/]+)*[^\\\\/]+[\\\\/]*)))$', 'ssh+git://l usr\\example.com@[::1]//')","[44568, 44752]"
"('Description.java', 'org.junit.runner.Description', 'methodAndClassNamePatternGroupOrDefault', '([\\s\\S]*)\\((.*)\\)', 'testCntrlGroupCase0[OldRule? true](org.eclipse.jgit.ignore.IgnoreRuleSpecialCasesTest)')","[150191, 157275]"
"('URIish.java', 'org.eclipse.jgit.transport.URIish', '<init>', '^(file):([\\\\/](?![\\\\/])((?:[A-Za-z]:)?[\\\\/]?(?:(?:[^\\\\/]+[\\\\/]+)*[^\\\\/]+[\\\\/]*)))$', 'file:/tmp/jgit_test_7795766867048310974_tmp/tmp_6578180669122549493.git/')",[173171]
"('URIish.java', 'org.eclipse.jgit.transport.URIish', '<init>', '^(file):([\\\\/](?![\\\\/])((?:[A-Za-z]:)?[\\\\/]?(?:(?:[^\\\\/]+[\\\\/]+)*[^\\\\/]+[\\\\/]*)))$', 'https://lusr\\example@[::1]:80//abc')",[39278]
"('Description.java', 'org.junit.runner.Description', 'methodAndClassNamePatternGroupOrDefault', '([\\s\\S]*)\\((.*)\\)', 'org.eclipse.jgit.notes.LeafBucketTest')","[198038, 198952]"
"('Description.java', 'org.junit.runner.Description', 'methodAndClassNamePatternGroupOrDefault', '([\\s\\S]*)\\((.*)\\)', 'testParse_AddNoNewline(org.eclipse.jgit.patch.PatchTest)')","[196163, 196315]"
"('URIish.java', 'org.eclipse.jgit.transport.URIish', '<init>', '^([a-z][a-z0-9+-]+)://(?:(?:([^/:@]+)(?::([^\\\\/]+))?@)?((?:[^\\\\/:]+)|(?:\\[[0-9a-f:]+\\]))(?::(\\d+))?((?:/~(?:[^\\\\/]+))?[\\\\/]))?(.+)?$', 'http://me@[::1]//abc')","[46845, 47029]"
"('URIish.java', 'org.eclipse.jgit.transport.URIish', '<init>', '^([a-z][a-z0-9+-]+)://(?:(?:([^/:@]+)(?::([^\\\\/]+))?@)?((?:[^\\\\/:]+)|(?:\\[[0-9a-f:]+\\]))(?::(\\d+))?((?:/~(?:[^\\\\/]+))?[\\\\/]))?(.+)?$', 'ssh://me@[::1]:1234//')",[26864]
"('URIish.java', 'org.eclipse.jgit.transport.URIish', '<init>', '^([a-z][a-z0-9+-]+)://(?:(?:([^/:@]+)(?::([^\\\\/]+))?@)?((?:[^\\\\/:]+)|(?:\\[[0-9a-f:]+\\]))(?::(\\d+))?((?:/~(?:[^\\\\/]+))?[\\\\/]))?(.+)?$', 'ssh://me@example.com//')","[39439, 39623]"
"('URIish.java', 'org.eclipse.jgit.transport.URIish', '<init>', '^([a-z][a-z0-9+-]+)://(?:(?:([^/:@]+)(?::([^\\\\/]+))?@)?((?:[^\\\\/:]+)|(?:\\[[0-9a-f:]+\\]))(?::(\\d+))?((?:/~(?:[^\\\\/]+))?[\\\\/]))?(.+)?$', 'https://lusr\\example@example.com//')","[51583, 51767]"
"('Description.java', 'org.junit.runner.Description', 'methodAndClassNamePatternGroupOrDefault', '([\\s\\S]*)\\((.*)\\)', 'testCreateFileHeader_Add(org.eclipse.jgit.diff.DiffFormatterTest)')","[95979, 96238]"
"('Description.java', 'org.junit.runner.Description', 'methodAndClassNamePatternGroupOrDefault', '([\\s\\S]*)\\((.*)\\)', 'test6(org.eclipse.jgit.revwalk.RevWalkPathFilter6012Test)')","[85804, 85957]"
"('Description.java', 'org.junit.runner.Description', 'methodAndClassNamePatternGroupOrDefault', '([\\s\\S]*)\\((.*)\\)', 'testSort_REVERSE(org.eclipse.jgit.revwalk.RevWalkSortTest)')","[85148, 85302]"
"('Description.java', 'org.junit.runner.Description', 'methodAndClassNamePatternGroupOrDefault', '([\\s\\S]*)\\((.*)\\)', 'testReadUserConfigWithInvalidCharactersStripped(org.eclipse.jgit.lib.ConfigTest)')","[129512, 130253]"
"('URIish.java', 'org.eclipse.jgit.transport.URIish', '<init>', '^(file):([\\\\/](?![\\\\/])((?:[A-Za-z]:)?[\\\\/]?(?:(?:[^\\\\/]+[\\\\/]+)*[^\\\\/]+[\\\\/]*)))$', 'ssh+git://lusr\\example@[::1]:80/D:\\x')",[32746]
"('URIish.java', 'org.eclipse.jgit.transport.URIish', '<init>', '^(?:([^/:@]+)(?::([^\\\\/]+))?@)?((?:[^\\\\/:]+)|(?:\\[[0-9a-f:]+\\])):((?:(?:/~(?:[^\\\\/]+))[\\\\/])?(?:(?:[^\\\\/]+[\\\\/]+)*[^\\\\/]+[\\\\/]*))$', '/tmp/jgit_test_1317497064317343419_tmp/tmp_1402166022410132527')","[226292, 226427, 226928]"
"('URIish.java', 'org.eclipse.jgit.transport.URIish', '<init>', '^([a-z][a-z0-9+-]+)://(?:(?:([^/:@]+)(?::([^\\\\/]+))?@)?((?:[^\\\\/:]+)|(?:\\[[0-9a-f:]+\\]))(?::(\\d+))?((?:/~(?:[^\\\\/]+))?[\\\\/]))?(.+)?$', 'ssh://l usr\\example.com@example.com:80//abc')",[27462]
"('QuotedString.java', 'org.eclipse.jgit.util.QuotedString$BourneUserPathStyle', 'quote', '^~[A-Za-z0-9_-]*/.*$', '~/a')","[193541, 193565]"
"('Description.java', 'org.junit.runner.Description', 'methodAndClassNamePatternGroupOrDefault', '([\\s\\S]*)\\((.*)\\)', 'testRenameLimit(org.eclipse.jgit.diff.RenameDetectorTest)')","[93279, 93837]"
"('URIish.java', 'org.eclipse.jgit.transport.URIish', '<init>', '^(?:([^/:@]+)(?::([^\\\\/]+))?@)?([^\\\\/:]{2,}):([\\\\/](?:(?:[^\\\\/]+[\\\\/]+)*[^\\\\/]+[\\\\/]*))$', '/a/b/.git')",[71149]
"('FastIgnoreRule.java', 'org.eclipse.jgit.ignore.FastIgnoreRule', 'isMatch', '[\\p{XDigit}]', '0')",[163050]
"('URIish.java', 'org.eclipse.jgit.transport.URIish', '<init>', '^(file):([\\\\/](?![\\\\/])((?:[A-Za-z]:)?[\\\\/]?(?:(?:[^\\\\/]+[\\\\/]+)*[^\\\\/]+[\\\\/]*)))$', 'https://l usr\\example.com@example.com/D:\\x')","[50594, 50778]"
"('URIish.java', 'org.eclipse.jgit.transport.URIish', '<init>', '^(file):([\\\\/](?![\\\\/])((?:[A-Za-z]:)?[\\\\/]?(?:(?:[^\\\\/]+[\\\\/]+)*[^\\\\/]+[\\\\/]*)))$', 'ssh+git://lusr\\example@1.2.3.4//abc')","[45350, 45534]"
"('Description.java', 'org.junit.runner.Description', 'methodAndClassNamePatternGroupOrDefault', '([\\s\\S]*)\\((.*)\\)', 'testPullConflict(org.eclipse.jgit.api.PullCommandTest)')","[220777, 221123]"
"('Description.java', 'org.junit.runner.Description', 'methodAndClassNamePatternGroupOrDefault', '([\\s\\S]*)\\((.*)\\)', 'org.eclipse.jgit.api.PushCommandTest')","[202961, 212252]"
"('Description.java', 'org.junit.runner.Description', 'methodAndClassNamePatternGroupOrDefault', '([\\s\\S]*)\\((.*)\\)', 'test006_readCaseInsensitive(org.eclipse.jgit.lib.ConfigTest)')","[128966, 129681]"
"('Description.java', 'org.junit.runner.Description', 'methodAndClassNamePatternGroupOrDefault', '([\\s\\S]*)\\((.*)\\)', 'testRenameBranchCannotLockAFileHEADisFromLockFrom(org.eclipse.jgit.internal.storage.file.RefUpdateTest)')","[253271, 254114]"
"('URIish.java', 'org.eclipse.jgit.transport.URIish', '<init>', '^(file):([\\\\/](?![\\\\/])((?:[A-Za-z]:)?[\\\\/]?(?:(?:[^\\\\/]+[\\\\/]+)*[^\\\\/]+[\\\\/]*)))$', 'http://l usr\\example.com:wtf@example.com:80/D:/x')",[20673]
"('Description.java', 'org.junit.runner.Description', 'methodAndClassNamePatternGroupOrDefault', '([\\s\\S]*)\\((.*)\\)', 'testLowerGroupCase0[OldRule? false](org.eclipse.jgit.ignore.IgnoreRuleSpecialCasesTest)')","[146490, 153595]"
"('URIish.java', 'org.eclipse.jgit.transport.URIish', '<init>', '^([a-z][a-z0-9+-]+)://(?:(?:([^/:@]+)(?::([^\\\\/]+))?@)?((?:[^\\\\/:]+)|(?:\\[[0-9a-f:]+\\]))(?::(\\d+))?((?:/~(?:[^\\\\/]+))?[\\\\/]))?(.+)?$', 'http://lusr\\example@1.2.3.4//')","[48639, 48823]"
"('Description.java', 'org.junit.runner.Description', 'methodAndClassNamePatternGroupOrDefault', '([\\s\\S]*)\\((.*)\\)', 'testPunctGroupCase3[OldRule? true](org.eclipse.jgit.ignore.IgnoreRuleSpecialCasesTest)')","[151318, 158402]"
"('URIish.java', 'org.eclipse.jgit.transport.URIish', '<init>', '^([a-z][a-z0-9+-]+)://(?:(?:([^/:@]+)(?::([^\\\\/]+))?@)?((?:[^\\\\/:]+)|(?:\\[[0-9a-f:]+\\]))(?::(\\d+))?((?:/~(?:[^\\\\/]+))?[\\\\/]))?(.+)?$', 'http://lusr\\example@[::1]//abc')","[49053, 49237]"
"('Description.java', 'org.junit.runner.Description', 'methodAndClassNamePatternGroupOrDefault', '([\\s\\S]*)\\((.*)\\)', 'testDeleteNotEmptyTreeNotOk(org.eclipse.jgit.util.FileUtilTest)')","[176596, 176936]"
"('URIish.java', 'org.eclipse.jgit.transport.URIish', '<init>', '^([a-z][a-z0-9+-]+)://(?:(?:([^/:@]+)(?::([^\\\\/]+))?@)?((?:[^\\\\/:]+)|(?:\\[[0-9a-f:]+\\]))(?::(\\d+))?((?:/~(?:[^\\\\/]+))?[\\\\/]))?(.+)?$', 'ssh://l usr\\example.com:wtf@1.2.3.4:1234//')",[11214]
"('URIish.java', 'org.eclipse.jgit.transport.URIish', '<init>', '^(file):([\\\\/](?![\\\\/])((?:[A-Za-z]:)?[\\\\/]?(?:(?:[^\\\\/]+[\\\\/]+)*[^\\\\/]+[\\\\/]*)))$', 'file:///tmp/jgit_test_5055048526053498016_tmp/tmp_1936130010314046125.git/')",[180405]
"('Description.java', 'org.junit.runner.Description', 'methodAndClassNamePatternGroupOrDefault', '([\\s\\S]*)\\((.*)\\)', 'testQuoteAtAndNumber(org.eclipse.jgit.util.QuotedStringGitPathStyleTest)')","[177802, 178242]"
"('ChangeIdUtil.java', 'org.eclipse.jgit.util.ChangeIdUtil', 'indexOfFirstFooterLine', '(^[a-zA-Z0-9-]+:(?!//).*$)', 'http://example.com/ fixes this')",[189905]
"('Description.java', 'org.junit.runner.Description', 'methodAndClassNamePatternGroupOrDefault', '([\\s\\S]*)\\((.*)\\)', 'testEqualsWithoutWhitespace(org.eclipse.jgit.diff.RawTextIgnoreTrailingWhitespaceTest)')","[95011, 95071]"
"('ChangeIdUtil.java', 'org.eclipse.jgit.util.ChangeIdUtil', 'indexOfFirstFooterLine', '(^[a-zA-Z0-9-]+:(?!//).*$)', 'https://example.com/ fixes this')",[189983]
"('URIish.java', 'org.eclipse.jgit.transport.URIish', '<init>', '^(file):([\\\\/](?![\\\\/])((?:[A-Za-z]:)?[\\\\/]?(?:(?:[^\\\\/]+[\\\\/]+)*[^\\\\/]+[\\\\/]*)))$', 'http://lusr\\example:wtf@1.2.3.4:80//abc')",[22122]
"('Description.java', 'org.junit.runner.Description', 'methodAndClassNamePatternGroupOrDefault', '([\\s\\S]*)\\((.*)\\)', 'org.eclipse.jgit.api.NotesCommandTest')","[242564, 242791]"
"('URIish.java', 'org.eclipse.jgit.transport.URIish', '<init>', '^(file):([\\\\/](?![\\\\/])((?:[A-Za-z]:)?[\\\\/]?(?:(?:[^\\\\/]+[\\\\/]+)*[^\\\\/]+[\\\\/]*)))$', 'http://me:wtf@[::1]:1234//')",[20029]
"('Description.java', 'org.junit.runner.Description', 'methodAndClassNamePatternGroupOrDefault', '([\\s\\S]*)\\((.*)\\)', 'testVerySimpleGroupRangeCase2[OldRule? true](org.eclipse.jgit.ignore.IgnoreRuleSpecialCasesTest)')","[151065, 158149]"
"('URIish.java', 'org.eclipse.jgit.transport.URIish', '<init>', '^([a-z][a-z0-9+-]+)://(?:(?:([^/:@]+)(?::([^\\\\/]+))?@)?((?:[^\\\\/:]+)|(?:\\[[0-9a-f:]+\\]))(?::(\\d+))?((?:/~(?:[^\\\\/]+))?[\\\\/]))?(.+)?$', 'http://l usr\\example.com:wtf@example.com:1234//abc')",[20466]
"('Description.java', 'org.junit.runner.Description', 'methodAndClassNamePatternGroupOrDefault', '([\\s\\S]*)\\((.*)\\)', 'testMultipleHeads_SameBase2(org.eclipse.jgit.revwalk.RevWalkMergeBaseTest)')","[81905, 82033]"
"('Description.java', 'org.junit.runner.Description', 'methodAndClassNamePatternGroupOrDefault', '([\\s\\S]*)\\((.*)\\)', 'testConfigureCache_PackedGitWindowSize_512(org.eclipse.jgit.internal.storage.file.WindowCacheReconfigureTest)')","[247501, 247649]"
"('Description.java', 'org.junit.runner.Description', 'methodAndClassNamePatternGroupOrDefault', '([\\s\\S]*)\\((.*)\\)', 'testWritePack4(org.eclipse.jgit.internal.storage.file.PackWriterTest)')","[251386, 251838]"
"('Description.java', 'org.junit.runner.Description', 'methodAndClassNamePatternGroupOrDefault', '([\\s\\S]*)\\((.*)\\)', 'testTrivialTwoWay_rightDFconflict2(org.eclipse.jgit.merge.SimpleMergeTest)')","[86397, 86672]"
"('URIish.java', 'org.eclipse.jgit.transport.URIish', '<init>', '^([a-z][a-z0-9+-]+)://(?:(?:([^/:@]+)(?::([^\\\\/]+))?@)?((?:[^\\\\/:]+)|(?:\\[[0-9a-f:]+\\]))(?::(\\d+))?((?:/~(?:[^\\\\/]+))?[\\\\/]))?(.+)?$', 'file:///tmp/jgit_test_8819223662949971083_tmp/tmp_1586135870031276916.git/')","[211118, 211174]"
"('Description.java', 'org.junit.runner.Description', 'methodAndClassNamePatternGroupOrDefault', '([\\s\\S]*)\\((.*)\\)', 'testTwoCommitTwoTreeTwoBlob(org.eclipse.jgit.revwalk.ObjectWalkTest)')","[76490, 76686]"
"('URIish.java', 'org.eclipse.jgit.transport.URIish', '<init>', '^(file):([\\\\/](?![\\\\/])((?:[A-Za-z]:)?[\\\\/]?(?:(?:[^\\\\/]+[\\\\/]+)*[^\\\\/]+[\\\\/]*)))$', 'ssh://me@1.2.3.4:80/D:\\x')",[26795]
"('Description.java', 'org.junit.runner.Description', 'methodAndClassNamePatternGroupOrDefault', '([\\s\\S]*)\\((.*)\\)', 'testFileInFolderCommittedModified(org.eclipse.jgit.treewalk.filter.IndexDiffFilterTest)')","[136836, 137647]"
"('URIish.java', 'org.eclipse.jgit.transport.URIish', '<init>', '^(file):([\\\\/](?![\\\\/])((?:[A-Za-z]:)?[\\\\/]?(?:(?:[^\\\\/]+[\\\\/]+)*[^\\\\/]+[\\\\/]*)))$', '/tmp/jgit_test_4337800104653581569_tmp/tmp_3318288783057189273/.git')","[110974, 111114]"
"('URIish.java', 'org.eclipse.jgit.transport.URIish', '<init>', '^([\\\\/]?((?:[A-Za-z]:)?[\\\\/]?(?:(?:[^\\\\/]+[\\\\/]+)*[^\\\\/]+[\\\\/]*)))$', '/tmp/jgit_test_47688348811366599_tmp/tmp_1522576617666632427')","[206207, 206422, 207956, 208106, 208446]"
"('Description.java', 'org.junit.runner.Description', 'methodAndClassNamePatternGroupOrDefault', '([\\s\\S]*)\\((.*)\\)', 'testLockMissing_TempIndex(org.eclipse.jgit.dircache.DirCacheBasicTest)')","[89878, 90110]"
"('Description.java', 'org.junit.runner.Description', 'methodAndClassNamePatternGroupOrDefault', '([\\s\\S]*)\\((.*)\\)', 'testTheirs(org.eclipse.jgit.merge.SimpleMergeTest)')","[86607, 86892]"
"('URIish.java', 'org.eclipse.jgit.transport.URIish', '<init>', '^([a-z][a-z0-9+-]+)://(?:(?:([^/:@]+)(?::([^\\\\/]+))?@)?((?:[^\\\\/:]+)|(?:\\[[0-9a-f:]+\\]))(?::(\\d+))?((?:/~(?:[^\\\\/]+))?[\\\\/]))?(.+)?$', 'https://me@example.com:1234/D:\\x')",[36265]
"('Description.java', 'org.junit.runner.Description', 'methodAndClassNamePatternGroupOrDefault', '([\\s\\S]*)\\((.*)\\)', 'DEFAULT(org.eclipse.jgit.util.GitDateFormatterTest)')","[172114, 172305]"
"('Description.java', 'org.junit.runner.Description', 'methodAndClassNamePatternGroupOrDefault', '([\\s\\S]*)\\((.*)\\)', 'testReadBoolean_YesNo2(org.eclipse.jgit.lib.ConfigTest)')","[129092, 129813]"
"('Description.java', 'org.junit.runner.Description', 'methodAndClassNamePatternGroupOrDefault', '([\\s\\S]*)\\((.*)\\)', 'testHasChangeidWithReplacementWithChangeIdInCommitMessage(org.eclipse.jgit.util.ChangeIdUtilTest)')","[185357, 186094]"
"('Description.java', 'org.junit.runner.Description', 'methodAndClassNamePatternGroupOrDefault', '([\\s\\S]*)\\((.*)\\)', 'testThreeBranches(org.eclipse.jgit.merge.MergeMessageFormatterTest)')","[88968, 89291]"
"('Description.java', 'org.junit.runner.Description', 'methodAndClassNamePatternGroupOrDefault', '([\\s\\S]*)\\((.*)\\)', 'testDeleteFile(org.eclipse.jgit.diff.HistogramDiffTest)')","[98884, 99496]"
"('URIish.java', 'org.eclipse.jgit.transport.URIish', '<init>', '^(file):([\\\\/](?![\\\\/])((?:[A-Za-z]:)?[\\\\/]?(?:(?:[^\\\\/]+[\\\\/]+)*[^\\\\/]+[\\\\/]*)))$', 'ssh://l usr\\example.com:wtf@1.2.3.4:1234//abc')",[11237]
"('Description.java', 'org.junit.runner.Description', 'methodAndClassNamePatternGroupOrDefault', '([\\s\\S]*)\\((.*)\\)', 'testCoreAutoCrlf3(org.eclipse.jgit.api.BlameCommandTest)')","[244432, 244813]"
"('Description.java', 'org.junit.runner.Description', 'methodAndClassNamePatternGroupOrDefault', '([\\s\\S]*)\\((.*)\\)', 'testDeletionOnSideConflict(org.eclipse.jgit.api.MergeCommandTest)')","[213492, 214396]"
"('Description.java', 'org.junit.runner.Description', 'methodAndClassNamePatternGroupOrDefault', '([\\s\\S]*)\\((.*)\\)', 'checkLockedFilesToBeDeleted(org.eclipse.jgit.merge.ResolveMergerTest)')","[88015, 88331]"
"('Description.java', 'org.junit.runner.Description', 'methodAndClassNamePatternGroupOrDefault', '([\\s\\S]*)\\((.*)\\)', 'testDigitGroupCase1[OldRule? true](org.eclipse.jgit.ignore.IgnoreRuleSpecialCasesTest)')","[150904, 157988]"
"('Description.java', 'org.junit.runner.Description', 'methodAndClassNamePatternGroupOrDefault', '([\\s\\S]*)\\((.*)\\)', 'testGetValidWithSlashDotGitHumanishName(org.eclipse.jgit.transport.URIishTest)')","[1417, 4596]"
"('Description.java', 'org.junit.runner.Description', 'methodAndClassNamePatternGroupOrDefault', '([\\s\\S]*)\\((.*)\\)', 'testSmallMap(org.eclipse.jgit.transport.LongMapTest)')","[75427, 75600]"
"('URIish.java', 'org.eclipse.jgit.transport.URIish', '<init>', '^([a-z][a-z0-9+-]+)://(?:(?:([^/:@]+)(?::([^\\\\/]+))?@)?((?:[^\\\\/:]+)|(?:\\[[0-9a-f:]+\\]))(?::(\\d+))?((?:/~(?:[^\\\\/]+))?[\\\\/]))?(.+)?$', 'https://l usr\\example.com:wtf@example.com:80/D:\\x')",[24077]
"('URIish.java', 'org.eclipse.jgit.transport.URIish', '<init>', '^(file):([\\\\/](?![\\\\/])((?:[A-Za-z]:)?[\\\\/]?(?:(?:[^\\\\/]+[\\\\/]+)*[^\\\\/]+[\\\\/]*)))$', 'ssh://me:wtf@[::1]:1234//abc')",[9156]
"('Description.java', 'org.junit.runner.Description', 'methodAndClassNamePatternGroupOrDefault', '([\\s\\S]*)\\((.*)\\)', 'testAlphaGroupCase2(org.eclipse.jgit.fnmatch.FileNameMatcherTest)')","[102028, 105337]"
"('URIish.java', 'org.eclipse.jgit.transport.URIish', '<init>', '^(file):([\\\\/](?![\\\\/])((?:[A-Za-z]:)?[\\\\/]?(?:(?:[^\\\\/]+[\\\\/]+)*[^\\\\/]+[\\\\/]*)))$', 'ssh://l usr\\example.com:wtf@example.com:80//')",[11007]
"('URIish.java', 'org.eclipse.jgit.transport.URIish', '<init>', '^(file):([\\\\/](?![\\\\/])((?:[A-Za-z]:)?[\\\\/]?(?:(?:[^\\\\/]+[\\\\/]+)*[^\\\\/]+[\\\\/]*)))$', 'https://me@[::1]:80/D:/x')",[37116]
"('URIish.java', 'org.eclipse.jgit.transport.URIish', '<init>', '^(file):([\\\\/](?![\\\\/])((?:[A-Za-z]:)?[\\\\/]?(?:(?:[^\\\\/]+[\\\\/]+)*[^\\\\/]+[\\\\/]*)))$', 'http://lusr\\example:wtf@[::1]:80//')",[22444]
"('Description.java', 'org.junit.runner.Description', 'methodAndClassNamePatternGroupOrDefault', '([\\s\\S]*)\\((.*)\\)', 'testInvalidTagNoObject2(org.eclipse.jgit.lib.ObjectCheckerTest)')","[122183, 124327]"
"('ChangeIdUtil.java', 'org.eclipse.jgit.util.ChangeIdUtil', 'indexOfChangeId', '(^Change-Id: *I[a-f0-9]{40}$)', 'does not fix it.')",[190637]
"('Description.java', 'org.junit.runner.Description', 'methodAndClassNamePatternGroupOrDefault', '([\\s\\S]*)\\((.*)\\)', 'testParseGitFileName_Empty(org.eclipse.jgit.patch.FileHeaderTest)')","[195411, 195867]"
"('Description.java', 'org.junit.runner.Description', 'methodAndClassNamePatternGroupOrDefault', '([\\s\\S]*)\\((.*)\\)', 'unmergedPathsShouldCauseException(org.eclipse.jgit.api.StashCreateCommandTest)')","[202235, 202572]"
"('URIish.java', 'org.eclipse.jgit.transport.URIish', '<init>', '^([a-z][a-z0-9+-]+)://(?:(?:([^/:@]+)(?::([^\\\\/]+))?@)?((?:[^\\\\/:]+)|(?:\\[[0-9a-f:]+\\]))(?::(\\d+))?((?:/~(?:[^\\\\/]+))?[\\\\/]))?(.+)?$', 'ssh://me@example.com:80/D:\\x')",[26450]
"('URIish.java', 'org.eclipse.jgit.transport.URIish', '<init>', '^([a-z][a-z0-9+-]+)://(?:(?:([^/:@]+)(?::([^\\\\/]+))?@)?((?:[^\\\\/:]+)|(?:\\[[0-9a-f:]+\\]))(?::(\\d+))?((?:/~(?:[^\\\\/]+))?[\\\\/]))?(.+)?$', 'ssh://l usr\\example.com@1.2.3.4//abc')","[40957, 41141]"
"('Description.java', 'org.junit.runner.Description', 'methodAndClassNamePatternGroupOrDefault', '([\\s\\S]*)\\((.*)\\)', 'org.eclipse.jgit.lib.IndexDiffSubmoduleTest')","[127843, 134351]"
"('URIish.java', 'org.eclipse.jgit.transport.URIish', '<init>', '^([a-z][a-z0-9+-]+)://(?:(?:([^/:@]+)(?::([^\\\\/]+))?@)?((?:[^\\\\/:]+)|(?:\\[[0-9a-f:]+\\]))(?::(\\d+))?((?:/~(?:[^\\\\/]+))?[\\\\/]))?(.+)?$', 'ssh+git://l usr\\example.com@1.2.3.4:1234//abc')",[31021]
"('Description.java', 'org.junit.runner.Description', 'methodAndClassNamePatternGroupOrDefault', '([\\s\\S]*)\\((.*)\\)', 'testParentDirectoryGitIgnores[OldRule? false](org.eclipse.jgit.ignore.IgnoreMatcherParametrizedTest)')","[141369, 141712]"
"('Description.java', 'org.junit.runner.Description', 'methodAndClassNamePatternGroupOrDefault', '([\\s\\S]*)\\((.*)\\)', 'testMiddleClearAllLines(org.eclipse.jgit.api.BlameCommandTest)')","[244600, 244989]"
"('URIish.java', 'org.eclipse.jgit.transport.URIish', '<init>', '^(file):([\\\\/](?![\\\\/])((?:[A-Za-z]:)?[\\\\/]?(?:(?:[^\\\\/]+[\\\\/]+)*[^\\\\/]+[\\\\/]*)))$', 'git:///a/b/c//')",[70022]
"('URIish.java', 'org.eclipse.jgit.transport.URIish', '<init>', '^(file):([\\\\/](?![\\\\/])((?:[A-Za-z]:)?[\\\\/]?(?:(?:[^\\\\/]+[\\\\/]+)*[^\\\\/]+[\\\\/]*)))$', 'http://lusr\\example@[::1]//')","[48984, 49168]"
"('Description.java', 'org.junit.runner.Description', 'methodAndClassNamePatternGroupOrDefault', '([\\s\\S]*)\\((.*)\\)', 'testCloneIsSparseWhenPossible(org.eclipse.jgit.treewalk.filter.NotTreeFilterTest)')","[139292, 139423]"
"('Description.java', 'org.junit.runner.Description', 'methodAndClassNamePatternGroupOrDefault', '([\\s\\S]*)\\((.*)\\)', 'testLowerGroupCase2[OldRule? true](org.eclipse.jgit.ignore.IgnoreRuleSpecialCasesTest)')","[150099, 157183]"
"('Description.java', 'org.junit.runner.Description', 'methodAndClassNamePatternGroupOrDefault', '([\\s\\S]*)\\((.*)\\)', 'resolveDate(org.eclipse.jgit.lib.ReflogResolveTest)')","[126321, 126453]"
"('Description.java', 'org.junit.runner.Description', 'methodAndClassNamePatternGroupOrDefault', '([\\s\\S]*)\\((.*)\\)', 'testInvalidTagNoType4(org.eclipse.jgit.lib.ObjectCheckerTest)')","[122624, 124789]"
"('URIish.java', 'org.eclipse.jgit.transport.URIish', '<init>', '^(file):([\\\\/](?![\\\\/])((?:[A-Za-z]:)?[\\\\/]?(?:(?:[^\\\\/]+[\\\\/]+)*[^\\\\/]+[\\\\/]*)))$', 'file:///tmp/jgit_test_5920102574607815165_tmp/tmp_7490007573307047225/.git/')",[108126]
"('Description.java', 'org.junit.runner.Description', 'methodAndClassNamePatternGroupOrDefault', '([\\s\\S]*)\\((.*)\\)', 'testPrintGroupCase1[OldRule? false](org.eclipse.jgit.ignore.IgnoreRuleSpecialCasesTest)')","[147962, 155067]"
"('Description.java', 'org.junit.runner.Description', 'methodAndClassNamePatternGroupOrDefault', '([\\s\\S]*)\\((.*)\\)', 'testOnlyOption_f1_1_c(org.eclipse.jgit.api.CommitOnlyTest)')","[235975, 238030]"
"('Description.java', 'org.junit.runner.Description', 'methodAndClassNamePatternGroupOrDefault', '([\\s\\S]*)\\((.*)\\)', 'testPullFastForwardWithBranchInSource(org.eclipse.jgit.api.PullCommandWithRebaseTest)')","[205956, 206065]"
"('URIish.java', 'org.eclipse.jgit.transport.URIish', '<init>', '^([a-z][a-z0-9+-]+)://(?:(?:([^/:@]+)(?::([^\\\\/]+))?@)?((?:[^\\\\/:]+)|(?:\\[[0-9a-f:]+\\]))(?::(\\d+))?((?:/~(?:[^\\\\/]+))?[\\\\/]))?(.+)?$', 'http://me:wtf@[::1]:80/D:/x')",[20328]
"('Description.java', 'org.junit.runner.Description', 'methodAndClassNamePatternGroupOrDefault', '([\\s\\S]*)\\((.*)\\)', 'testReadIndex_LsFiles(org.eclipse.jgit.dircache.DirCacheCGitCompatabilityTest)')","[90515, 90668]"
"('Description.java', 'org.junit.runner.Description', 'methodAndClassNamePatternGroupOrDefault', '([\\s\\S]*)\\((.*)\\)', 'testParse_PublicParseMethod(org.eclipse.jgit.revwalk.RevCommitParseTest)')","[84374, 84854]"
"('URIish.java', 'org.eclipse.jgit.transport.URIish', '<init>', '^(file):([\\\\/](?![\\\\/])((?:[A-Za-z]:)?[\\\\/]?(?:(?:[^\\\\/]+[\\\\/]+)*[^\\\\/]+[\\\\/]*)))$', 'ssh://lusr\\example:wtf@example.com:80//abc')",[12595]
"('Description.java', 'org.junit.runner.Description', 'methodAndClassNamePatternGroupOrDefault', '([\\s\\S]*)\\((.*)\\)', 'testParse_GitStyleMessageWithCRLF(org.eclipse.jgit.revwalk.RevCommitParseTest)')","[84311, 84744]"
"('Description.java', 'org.junit.runner.Description', 'methodAndClassNamePatternGroupOrDefault', '([\\s\\S]*)\\((.*)\\)', 'testBreakModify_RejoinIfUnpaired(org.eclipse.jgit.diff.RenameDetectorTest)')","[93069, 93617]"
"('Description.java', 'org.junit.runner.Description', 'methodAndClassNamePatternGroupOrDefault', '([\\s\\S]*)\\((.*)\\)', 'testNoRenames_GitlinkAndFile(org.eclipse.jgit.diff.RenameDetectorTest)')","[93510, 94079]"
"('Description.java', 'org.junit.runner.Description', 'methodAndClassNamePatternGroupOrDefault', '([\\s\\S]*)\\((.*)\\)', 'testInvalidCommitInvalidAuthor7(org.eclipse.jgit.lib.ObjectCheckerTest)')","[121847, 123975]"
"('Description.java', 'org.junit.runner.Description', 'methodAndClassNamePatternGroupOrDefault', '([\\s\\S]*)\\((.*)\\)', 'testOnlyOptionWithDirectory(org.eclipse.jgit.api.CommitOnlyTest)')","[237854, 239966]"
"('Description.java', 'org.junit.runner.Description', 'methodAndClassNamePatternGroupOrDefault', '([\\s\\S]*)\\((.*)\\)', 'testReadSymRefToLoosePacked(org.eclipse.jgit.lib.RefTest)')","[115523, 115716]"
"('URIish.java', 'org.eclipse.jgit.transport.URIish', '<init>', '^(file):([\\\\/](?![\\\\/])((?:[A-Za-z]:)?[\\\\/]?(?:(?:[^\\\\/]+[\\\\/]+)*[^\\\\/]+[\\\\/]*)))$', 'ssh+git://l usr\\example.com@1.2.3.4//')","[44200, 44384]"
"('Description.java', 'org.junit.runner.Description', 'methodAndClassNamePatternGroupOrDefault', '([\\s\\S]*)\\((.*)\\)', 'testRevertOurCommitName(org.eclipse.jgit.api.RevertCommandTest)')","[233595, 233814]"
"('Description.java', 'org.junit.runner.Description', 'methodAndClassNamePatternGroupOrDefault', '([\\s\\S]*)\\((.*)\\)', 'org.eclipse.jgit.merge.CherryPickTest')","[89712, 89821]"
"('Description.java', 'org.junit.runner.Description', 'methodAndClassNamePatternGroupOrDefault', '([\\s\\S]*)\\((.*)\\)', 'testCheckoutOurs(org.eclipse.jgit.api.PathCheckoutCommandTest)')","[224404, 224657]"
"('Description.java', 'org.junit.runner.Description', 'methodAndClassNamePatternGroupOrDefault', '([\\s\\S]*)\\((.*)\\)', 'crissCrossMerge_mergeable(org.eclipse.jgit.merge.RecursiveMergerTest)')","[87718, 87869]"
"('URIish.java', 'org.eclipse.jgit.transport.URIish', '<init>', '^(file):([\\\\/](?![\\\\/])((?:[A-Za-z]:)?[\\\\/]?(?:(?:[^\\\\/]+[\\\\/]+)*[^\\\\/]+[\\\\/]*)))$', 'file:///tmp/jgit_test_3403792092104358493_tmp/tmp_2501936140417005984/.git/')",[134189]
"('URIish.java', 'org.eclipse.jgit.transport.URIish', '<init>', '^([a-z][a-z0-9+-]+)://(?:(?:([^/:@]+)(?::([^\\\\/]+))?@)?((?:[^\\\\/:]+)|(?:\\[[0-9a-f:]+\\]))(?::(\\d+))?((?:/~(?:[^\\\\/]+))?[\\\\/]))?(.+)?$', 'ssh+git://lusr\\example@1.2.3.4/D:/x')","[45419, 45603]"
"('URIish.java', 'org.eclipse.jgit.transport.URIish', '<init>', '^([a-z][a-z0-9+-]+)://(?:(?:([^/:@]+)(?::([^\\\\/]+))?@)?((?:[^\\\\/:]+)|(?:\\[[0-9a-f:]+\\]))(?::(\\d+))?((?:/~(?:[^\\\\/]+))?[\\\\/]))?(.+)?$', 'http://me:wtf@[::1]:1234/D:\\x')",[20190]
"('Description.java', 'org.junit.runner.Description', 'methodAndClassNamePatternGroupOrDefault', '([\\s\\S]*)\\((.*)\\)', 'test000_sort_04(org.eclipse.jgit.lib.T0002_TreeTest)')","[119964, 120268]"
"('URIish.java', 'org.eclipse.jgit.transport.URIish', '<init>', '^([a-z][a-z0-9+-]+)://(?:(?:([^/:@]+)(?::([^\\\\/]+))?@)?((?:[^\\\\/:]+)|(?:\\[[0-9a-f:]+\\]))(?::(\\d+))?((?:/~(?:[^\\\\/]+))?[\\\\/]))?(.+)?$', 'ssh+git://lusr\\example@example.com//')","[44959, 45143]"
"('Description.java', 'org.junit.runner.Description', 'methodAndClassNamePatternGroupOrDefault', '([\\s\\S]*)\\((.*)\\)', 'testDequote_BareA(org.eclipse.jgit.util.QuotedStringGitPathStyleTest)')","[177592, 178022]"
"('URIish.java', 'org.eclipse.jgit.transport.URIish', '<init>', '^(?:([^/:@]+)(?::([^\\\\/]+))?@)?((?:[^\\\\/:]+)|(?:\\[[0-9a-f:]+\\])):((?:(?:/~(?:[^\\\\/]+))[\\\\/])?(?:(?:[^\\\\/]+[\\\\/]+)*[^\\\\/]+[\\\\/]*))$', '/tmp/jgit_test_3752343835297747993_tmp/tmp_2470876455541918618')","[230494, 230629, 231097]"
"('URIish.java', 'org.eclipse.jgit.transport.URIish', '<init>', '^([a-z][a-z0-9+-]+)://(?:(?:([^/:@]+)(?::([^\\\\/]+))?@)?((?:[^\\\\/:]+)|(?:\\[[0-9a-f:]+\\]))(?::(\\d+))?((?:/~(?:[^\\\\/]+))?[\\\\/]))?(.+)?$', 'http://me@[::1]:80//')",[33735]
"('URIish.java', 'org.eclipse.jgit.transport.URIish', '<init>', '^(file):([\\\\/](?![\\\\/])((?:[A-Za-z]:)?[\\\\/]?(?:(?:[^\\\\/]+[\\\\/]+)*[^\\\\/]+[\\\\/]*)))$', 'https://me@1.2.3.4/D:\\x')","[49858, 50042]"
"('Description.java', 'org.junit.runner.Description', 'methodAndClassNamePatternGroupOrDefault', '([\\s\\S]*)\\((.*)\\)', 'test000_sort_02(org.eclipse.jgit.lib.T0002_TreeTest)')","[119922, 120224]"
"('ChangeIdUtil.java', 'org.eclipse.jgit.util.ChangeIdUtil', 'indexOfChangeId', '(^Change-Id: *I[a-f0-9]{40}$)', 'g')",[191183]
"('Description.java', 'org.junit.runner.Description', 'methodAndClassNamePatternGroupOrDefault', '([\\s\\S]*)\\((.*)\\)', 'testInvalidTreeNameIsDot(org.eclipse.jgit.lib.ObjectCheckerTest)')","[121868, 123997]"
"('URIish.java', 'org.eclipse.jgit.transport.URIish', '<init>', '^([a-z][a-z0-9+-]+)://(?:(?:([^/:@]+)(?::([^\\\\/]+))?@)?((?:[^\\\\/:]+)|(?:\\[[0-9a-f:]+\\]))(?::(\\d+))?((?:/~(?:[^\\\\/]+))?[\\\\/]))?(.+)?$', 'http://lusr\\example@example.com:1234/D:/x')",[35115]
"('Description.java', 'org.junit.runner.Description', 'methodAndClassNamePatternGroupOrDefault', '([\\s\\S]*)\\((.*)\\)', 'testVerySimpleGroupRangeCase2[OldRule? false](org.eclipse.jgit.ignore.IgnoreRuleSpecialCasesTest)')","[147502, 154607]"
"('Description.java', 'org.junit.runner.Description', 'methodAndClassNamePatternGroupOrDefault', '([\\s\\S]*)\\((.*)\\)', 'org.eclipse.jgit.internal.storage.file.GcBasicPackingTest')","[247018, 252731]"
"('Description.java', 'org.junit.runner.Description', 'methodAndClassNamePatternGroupOrDefault', '([\\s\\S]*)\\((.*)\\)', 'test000_openrepo_default_absolute_workdirconfig(org.eclipse.jgit.internal.storage.file.T0003_BasicTest)')","[249083, 249615]"
"('Description.java', 'org.junit.runner.Description', 'methodAndClassNamePatternGroupOrDefault', '([\\s\\S]*)\\((.*)\\)', 'testDeleteDifferentNotes(org.eclipse.jgit.notes.NoteMapMergerTest)')","[199668, 200030]"
"('URIish.java', 'org.eclipse.jgit.transport.URIish', '<init>', '^([a-z][a-z0-9+-]+)://(?:(?:([^/:@]+)(?::([^\\\\/]+))?@)?((?:[^\\\\/:]+)|(?:\\[[0-9a-f:]+\\]))(?::(\\d+))?((?:/~(?:[^\\\\/]+))?[\\\\/]))?(.+)?$', 'http://lusr\\example@example.com/D:/x')","[48363, 48547]"
"('Description.java', 'org.junit.runner.Description', 'methodAndClassNamePatternGroupOrDefault', '([\\s\\S]*)\\((.*)\\)', 'testUserPasswordAndPort(org.eclipse.jgit.transport.URIishTest)')","[3018, 5300]"
"('URIish.java', 'org.eclipse.jgit.transport.URIish', '<init>', '^(file):([\\\\/](?![\\\\/])((?:[A-Za-z]:)?[\\\\/]?(?:(?:[^\\\\/]+[\\\\/]+)*[^\\\\/]+[\\\\/]*)))$', 'http://me@example.com:80//abc')",[33022]
"('Description.java', 'org.junit.runner.Description', 'methodAndClassNamePatternGroupOrDefault', '([\\s\\S]*)\\((.*)\\)', 'org.eclipse.jgit.ignore.FastIgnoreRuleTest')",[163860]
"('Description.java', 'org.junit.runner.Description', 'methodAndClassNamePatternGroupOrDefault', '([\\s\\S]*)\\((.*)\\)', 'testUnsupportedGroupCase01[OldRule? false](org.eclipse.jgit.ignore.IgnoreRuleSpecialCasesTest)')","[146881, 153986]"
"('URIish.java', 'org.eclipse.jgit.transport.URIish', '<init>', '^(file):([\\\\/](?![\\\\/])((?:[A-Za-z]:)?[\\\\/]?(?:(?:[^\\\\/]+[\\\\/]+)*[^\\\\/]+[\\\\/]*)))$', 'ssh://me@1.2.3.4:80//abc')",[26703]
"('Description.java', 'org.junit.runner.Description', 'methodAndClassNamePatternGroupOrDefault', '([\\s\\S]*)\\((.*)\\)', 'testObjectId_objectid_explicit_firstparent(org.eclipse.jgit.lib.RepositoryResolveTest)')","[125533, 126014]"
"('Description.java', 'org.junit.runner.Description', 'methodAndClassNamePatternGroupOrDefault', '([\\s\\S]*)\\((.*)\\)', 'org.eclipse.jgit.treewalk.ForPathTest')","[135440, 135506]"
"('Description.java', 'org.junit.runner.Description', 'methodAndClassNamePatternGroupOrDefault', '([\\s\\S]*)\\((.*)\\)', 'testAddTwoFiles(org.eclipse.jgit.api.AddCommandTest)')","[234969, 235402]"
"('Description.java', 'org.junit.runner.Description', 'methodAndClassNamePatternGroupOrDefault', '([\\s\\S]*)\\((.*)\\)', 'testGetRef_PackedNotPeeled_WrongSort(org.eclipse.jgit.internal.storage.file.RefDirectoryTest)')","[258127, 259320]"
"('FastIgnoreRule.java', 'org.eclipse.jgit.ignore.FastIgnoreRule', 'isMatch', '.*\\.sta[0-5]', 'test.sta1')","[142443, 143587]"
"('Description.java', 'org.junit.runner.Description', 'methodAndClassNamePatternGroupOrDefault', '([\\s\\S]*)\\((.*)\\)', '[OldRule? false]')","[141346, 145685, 163881]"
"('Description.java', 'org.junit.runner.Description', 'methodAndClassNamePatternGroupOrDefault', '([\\s\\S]*)\\((.*)\\)', 'unknownRepositoryFormatVersion(org.eclipse.jgit.internal.storage.file.FileRepositoryBuilderTest)')","[248471, 248624]"
"('Description.java', 'org.junit.runner.Description', 'methodAndClassNamePatternGroupOrDefault', '([\\s\\S]*)\\((.*)\\)', 'testPunctGroupCase0(org.eclipse.jgit.fnmatch.FileNameMatcherTest)')","[102742, 106085]"
"('FastIgnoreRule.java', 'org.eclipse.jgit.ignore.FastIgnoreRule', 'isMatch', '[[\\p{Graph}\\p{javaDigit}\\p{javaLetter}]]', ']')",[160602]
"('Description.java', 'org.junit.runner.Description', 'methodAndClassNamePatternGroupOrDefault', '([\\s\\S]*)\\((.*)\\)', 'testDerefTree(org.eclipse.jgit.lib.RepositoryResolveTest)')","[125512, 125992]"
"('URIish.java', 'org.eclipse.jgit.transport.URIish', '<init>', '^(file):([\\\\/](?![\\\\/])((?:[A-Za-z]:)?[\\\\/]?(?:(?:[^\\\\/]+[\\\\/]+)*[^\\\\/]+[\\\\/]*)))$', 'ssh://lusr\\example@1.2.3.4:1234//abc')",[28790]
"('Description.java', 'org.junit.runner.Description', 'methodAndClassNamePatternGroupOrDefault', '([\\s\\S]*)\\((.*)\\)', 'testReplaceMaxValue(org.eclipse.jgit.transport.LongMapTest)')","[75448, 75622]"
"('Description.java', 'org.junit.runner.Description', 'methodAndClassNamePatternGroupOrDefault', '([\\s\\S]*)\\((.*)\\)', 'org.eclipse.jgit.internal.storage.file.GcKeepFilesTest')","[251076, 252081]"
"('URIish.java', 'org.eclipse.jgit.transport.URIish', '<init>', '^([a-z][a-z0-9+-]+)://(?:(?:([^/:@]+)(?::([^\\\\/]+))?@)?((?:[^\\\\/:]+)|(?:\\[[0-9a-f:]+\\]))(?::(\\d+))?((?:/~(?:[^\\\\/]+))?[\\\\/]))?(.+)?$', 'https://l usr\\example.com@example.com:80//')",[37415]
"('URIish.java', 'org.eclipse.jgit.transport.URIish', '<init>', '^([a-z][a-z0-9+-]+)://(?:(?:([^/:@]+)(?::([^\\\\/]+))?@)?((?:[^\\\\/:]+)|(?:\\[[0-9a-f:]+\\]))(?::(\\d+))?((?:/~(?:[^\\\\/]+))?[\\\\/]))?(.+)?$', 'http://lusr\\example@example.com:80/D:\\x')",[35345]
"('Description.java', 'org.junit.runner.Description', 'methodAndClassNamePatternGroupOrDefault', '([\\s\\S]*)\\((.*)\\)', 'org.eclipse.jgit.revwalk.RevFlagSetTest')","[79681, 80858]"
"('Description.java', 'org.junit.runner.Description', 'methodAndClassNamePatternGroupOrDefault', '([\\s\\S]*)\\((.*)\\)', 'testOnlyOption_f1_8_a(org.eclipse.jgit.api.CommitOnlyTest)')","[236668, 238756]"
"('Description.java', 'org.junit.runner.Description', 'methodAndClassNamePatternGroupOrDefault', '([\\s\\S]*)\\((.*)\\)', 'testAlias_DoesNotMatch(org.eclipse.jgit.transport.OpenSshConfigTest)')","[3039, 3746]"
"('ChangeIdUtil.java', 'org.eclipse.jgit.util.ChangeIdUtil', 'indexOfChangeId', '(^Change-Id: *I[a-f0-9]{40}$)', 'e')",[191001]
"('URIish.java', 'org.eclipse.jgit.transport.URIish', '<init>', '^(file):([\\\\/](?![\\\\/])((?:[A-Za-z]:)?[\\\\/]?(?:(?:[^\\\\/]+[\\\\/]+)*[^\\\\/]+[\\\\/]*)))$', 'ssh://lusr\\example@[::1]:80/D:\\x')",[29434]
"('Description.java', 'org.junit.runner.Description', 'methodAndClassNamePatternGroupOrDefault', '([\\s\\S]*)\\((.*)\\)', 'testWriteEmptyUnlock_RealIndex(org.eclipse.jgit.dircache.DirCacheBasicTest)')","[89962, 90198]"
"('Description.java', 'org.junit.runner.Description', 'methodAndClassNamePatternGroupOrDefault', '([\\s\\S]*)\\((.*)\\)', 'testSomeCommits(org.eclipse.jgit.api.CommitAndLogCommandTest)')","[213192, 213412]"
"('Description.java', 'org.junit.runner.Description', 'methodAndClassNamePatternGroupOrDefault', '([\\s\\S]*)\\((.*)\\)', 'testWriteEmptyPack2(org.eclipse.jgit.internal.storage.file.PackWriterTest)')","[251218, 251662]"
"('URIish.java', 'org.eclipse.jgit.transport.URIish', '<init>', '^(file):([\\\\/](?![\\\\/])((?:[A-Za-z]:)?[\\\\/]?(?:(?:[^\\\\/]+[\\\\/]+)*[^\\\\/]+[\\\\/]*)))$', 'example.com:/some/p ath')","[69746, 69838]"
"('Description.java', 'org.junit.runner.Description', 'methodAndClassNamePatternGroupOrDefault', '([\\s\\S]*)\\((.*)\\)', 'testPrefixCompare_8(org.eclipse.jgit.lib.AbbreviatedObjectIdTest)')","[114431, 114962]"
"('Description.java', 'org.junit.runner.Description', 'methodAndClassNamePatternGroupOrDefault', '([\\s\\S]*)\\((.*)\\)', 'testUnicodeNames(org.eclipse.jgit.lib.ValidRefNameTest)')","[118446, 118808]"
"('Description.java', 'org.junit.runner.Description', 'methodAndClassNamePatternGroupOrDefault', '([\\s\\S]*)\\((.*)\\)', 'testEdit_ReplaceCommonDelete(org.eclipse.jgit.diff.MyersDiffTest)')","[96917, 97338]"
"('Description.java', 'org.junit.runner.Description', 'methodAndClassNamePatternGroupOrDefault', '([\\s\\S]*)\\((.*)\\)', 'testCreateMatcherForSuffix(org.eclipse.jgit.fnmatch.FileNameMatcherTest)')","[101650, 104941]"
"('URIish.java', 'org.eclipse.jgit.transport.URIish', '<init>', '^(file):([\\\\/](?![\\\\/])((?:[A-Za-z]:)?[\\\\/]?(?:(?:[^\\\\/]+[\\\\/]+)*[^\\\\/]+[\\\\/]*)))$', 'ssh://lusr\\example:wtf@[::1]:80/D:\\x')",[13591]
"('Description.java', 'org.junit.runner.Description', 'methodAndClassNamePatternGroupOrDefault', '([\\s\\S]*)\\((.*)\\)', 'testFindOnEmpty(org.eclipse.jgit.dircache.DirCacheBasicTest)')","[89899, 90132]"
"('URIish.java', 'org.eclipse.jgit.transport.URIish', '<init>', '^([a-z][a-z0-9+-]+)://(?:(?:([^/:@]+)(?::([^\\\\/]+))?@)?((?:[^\\\\/:]+)|(?:\\[[0-9a-f:]+\\]))(?::(\\d+))?((?:/~(?:[^\\\\/]+))?[\\\\/]))?(.+)?$', 'file:///tmp/jgit_test_6348790915699321214_tmp/tmp_3279445110844604601/.git/')",[132404]
"('URIish.java', 'org.eclipse.jgit.transport.URIish', '<init>', '^([a-z][a-z0-9+-]+)://(?:(?:([^/:@]+)(?::([^\\\\/]+))?@)?((?:[^\\\\/:]+)|(?:\\[[0-9a-f:]+\\]))(?::(\\d+))?((?:/~(?:[^\\\\/]+))?[\\\\/]))?(.+)?$', 'ssh://me@[::1]:80//')",[27048]
"('Description.java', 'org.junit.runner.Description', 'methodAndClassNamePatternGroupOrDefault', '([\\s\\S]*)\\((.*)\\)', 'org.eclipse.jgit.util.FileUtilTest')","[176512, 177346]"
"('URIish.java', 'org.eclipse.jgit.transport.URIish', '<init>', '^(file):([\\\\/](?![\\\\/])((?:[A-Za-z]:)?[\\\\/]?(?:(?:[^\\\\/]+[\\\\/]+)*[^\\\\/]+[\\\\/]*)))$', 'https://lusr\\example:wtf@example.com:1234/D:/x')",[24928]
"('Description.java', 'org.junit.runner.Description', 'methodAndClassNamePatternGroupOrDefault', '([\\s\\S]*)\\((.*)\\)', 'testVerySimplePatternCase0(org.eclipse.jgit.fnmatch.FileNameMatcherTest)')","[101860, 105161]"
"('URIish.java', 'org.eclipse.jgit.transport.URIish', '<init>', '^([a-z][a-z0-9+-]+)://(?:(?:([^/:@]+)(?::([^\\\\/]+))?@)?((?:[^\\\\/:]+)|(?:\\[[0-9a-f:]+\\]))(?::(\\d+))?((?:/~(?:[^\\\\/]+))?[\\\\/]))?(.+)?$', '/tmp/jgit_test_4002911052512723791_tmp/tmp_1346628727612174896.git')","[78619, 78792]"
"('URIish.java', 'org.eclipse.jgit.transport.URIish', '<init>', '^(file):([\\\\/](?![\\\\/])((?:[A-Za-z]:)?[\\\\/]?(?:(?:[^\\\\/]+[\\\\/]+)*[^\\\\/]+[\\\\/]*)))$', 'file:///tmp/jgit_test_8538461263074940761_tmp/tmp_9105454306462814760')","[208927, 208984]"
"('URIish.java', 'org.eclipse.jgit.transport.URIish', '<init>', '^([a-z][a-z0-9+-]+)://(?:(?:([^/:@]+)(?::([^\\\\/]+))?@)?((?:[^\\\\/:]+)|(?:\\[[0-9a-f:]+\\]))(?::(\\d+))?((?:/~(?:[^\\\\/]+))?[\\\\/]))?(.+)?$', 'ssh://l usr\\example.com@[::1]:80/D:/x')",[28307]
"('FastIgnoreRule.java', 'org.eclipse.jgit.ignore.FastIgnoreRule', 'isMatch', '[a\\[]', '[')",[159978]
"('Description.java', 'org.junit.runner.Description', 'methodAndClassNamePatternGroupOrDefault', '([\\s\\S]*)\\((.*)\\)', 'testFilePathCase2[OldRule? false](org.eclipse.jgit.ignore.IgnoreRuleSpecialCasesTest)')","[147824, 154929]"
"('URIish.java', 'org.eclipse.jgit.transport.URIish', '<init>', '^(file):([\\\\/](?![\\\\/])((?:[A-Za-z]:)?[\\\\/]?(?:(?:[^\\\\/]+[\\\\/]+)*[^\\\\/]+[\\\\/]*)))$', 'file:/tmp/jgit_test_8825191104981143089_tmp/tmp_8275953160873311507/.git/')",[212797]
"('URIish.java', 'org.eclipse.jgit.transport.URIish', '<init>', '^([\\\\/]?((?:[A-Za-z]:)?[\\\\/]?(?:(?:[^\\\\/]+[\\\\/]+)*[^\\\\/]+[\\\\/]*)))$', '/tmp/jgit_test_6469622341025982846_tmp/tmp_1440713819350639853.git')",[81530]
"('URIish.java', 'org.eclipse.jgit.transport.URIish', '<init>', '^(file):([\\\\/](?![\\\\/])((?:[A-Za-z]:)?[\\\\/]?(?:(?:[^\\\\/]+[\\\\/]+)*[^\\\\/]+[\\\\/]*)))$', 'ssh+git://lusr\\example@1.2.3.4/D:/x')","[45396, 45580]"
"('URIish.java', 'org.eclipse.jgit.transport.URIish', '<init>', '^([a-z][a-z0-9+-]+)://(?:(?:([^/:@]+)(?::([^\\\\/]+))?@)?((?:[^\\\\/:]+)|(?:\\[[0-9a-f:]+\\]))(?::(\\d+))?((?:/~(?:[^\\\\/]+))?[\\\\/]))?(.+)?$', '\\\\some\\place')","[7015, 7130]"
"('Description.java', 'org.junit.runner.Description', 'methodAndClassNamePatternGroupOrDefault', '([\\s\\S]*)\\((.*)\\)', 'testOurs(org.eclipse.jgit.merge.SimpleMergeTest)')","[86460, 86738]"
"('Description.java', 'org.junit.runner.Description', 'methodAndClassNamePatternGroupOrDefault', '([\\s\\S]*)\\((.*)\\)', 'org.eclipse.jgit.internal.storage.file.T0004_PackReaderTest')","[247335, 247444]"
"('Description.java', 'org.junit.runner.Description', 'methodAndClassNamePatternGroupOrDefault', '([\\s\\S]*)\\((.*)\\)', 'workingDirectoryModifyIndexChanged(org.eclipse.jgit.api.StashApplyCommandTest)')","[241042, 241604]"
"('Description.java', 'org.junit.runner.Description', 'methodAndClassNamePatternGroupOrDefault', '([\\s\\S]*)\\((.*)\\)', 'emptyRepositoryFormatVersion(org.eclipse.jgit.internal.storage.file.FileRepositoryBuilderTest)')","[248408, 248558]"
"('URIish.java', 'org.eclipse.jgit.transport.URIish', '<init>', '^([a-z][a-z0-9+-]+)://(?:(?:([^/:@]+)(?::([^\\\\/]+))?@)?((?:[^\\\\/:]+)|(?:\\[[0-9a-f:]+\\]))(?::(\\d+))?((?:/~(?:[^\\\\/]+))?[\\\\/]))?(.+)?$', 'https://me@1.2.3.4:80//')",[36679]
"('Description.java', 'org.junit.runner.Description', 'methodAndClassNamePatternGroupOrDefault', '([\\s\\S]*)\\((.*)\\)', 'testCloneRepositoryWithSubmodules(org.eclipse.jgit.api.CloneCommandTest)')","[203771, 204006]"
"('Description.java', 'org.junit.runner.Description', 'methodAndClassNamePatternGroupOrDefault', '([\\s\\S]*)\\((.*)\\)', 'testToString(org.eclipse.jgit.lib.ObjectIdRefTest)')","[109716, 109780]"
"('Description.java', 'org.junit.runner.Description', 'methodAndClassNamePatternGroupOrDefault', '([\\s\\S]*)\\((.*)\\)', 'testVerySimpleWildCardCase2(org.eclipse.jgit.fnmatch.FileNameMatcherTest)')","[101146, 104413]"
"('URIish.java', 'org.eclipse.jgit.transport.URIish', '<init>', '^([a-z][a-z0-9+-]+)://(?:(?:([^/:@]+)(?::([^\\\\/]+))?@)?((?:[^\\\\/:]+)|(?:\\[[0-9a-f:]+\\]))(?::(\\d+))?((?:/~(?:[^\\\\/]+))?[\\\\/]))?(.+)?$', 'ssh://l usr\\example.com:wtf@1.2.3.4:1234/D:\\x')",[11670]
"('URIish.java', 'org.eclipse.jgit.transport.URIish', '<init>', '^([a-z][a-z0-9+-]+)://(?:(?:([^/:@]+)(?::([^\\\\/]+))?@)?((?:[^\\\\/:]+)|(?:\\[[0-9a-f:]+\\]))(?::(\\d+))?((?:/~(?:[^\\\\/]+))?[\\\\/]))?(.+)?$', 'ssh+git://me@1.2.3.4:80/D:/x')",[30147]
"('URIish.java', 'org.eclipse.jgit.transport.URIish', '<init>', '^([a-z][a-z0-9+-]+)://(?:(?:([^/:@]+)(?::([^\\\\/]+))?@)?((?:[^\\\\/:]+)|(?:\\[[0-9a-f:]+\\]))(?::(\\d+))?((?:/~(?:[^\\\\/]+))?[\\\\/]))?(.+)?$', 'ssh://DOMAIN%5cüser:pass@example.com:33/some/p ath')","[70114, 70160]"
"('Description.java', 'org.junit.runner.Description', 'methodAndClassNamePatternGroupOrDefault', '([\\s\\S]*)\\((.*)\\)', 'testDegenerate_DeleteEnd(org.eclipse.jgit.diff.HistogramDiffTest)')","[98653, 99254]"
"('Description.java', 'org.junit.runner.Description', 'methodAndClassNamePatternGroupOrDefault', '([\\s\\S]*)\\((.*)\\)', 'crissCrossMerge_nonmergeable(org.eclipse.jgit.merge.RecursiveMergerTest)')","[87655, 87803]"
"('Description.java', 'org.junit.runner.Description', 'methodAndClassNamePatternGroupOrDefault', '([\\s\\S]*)\\((.*)\\)', 'testWildmatchDoNotMatch[OldRule? false](org.eclipse.jgit.ignore.FastIgnoreRuleTest)')","[164042, 164799]"
"('Description.java', 'org.junit.runner.Description', 'methodAndClassNamePatternGroupOrDefault', '([\\s\\S]*)\\((.*)\\)', 'testUpdateWorkingDirectoryFromIndex(org.eclipse.jgit.api.PathCheckoutCommandTest)')","[224635, 224899]"
"('Description.java', 'org.junit.runner.Description', 'methodAndClassNamePatternGroupOrDefault', '([\\s\\S]*)\\((.*)\\)', 'testGetWithSlashDotGitHumanishName(org.eclipse.jgit.transport.URIishTest)')","[1375, 4552]"
"('URIish.java', 'org.eclipse.jgit.transport.URIish', '<init>', '^([a-z][a-z0-9+-]+)://(?:(?:([^/:@]+)(?::([^\\\\/]+))?@)?((?:[^\\\\/:]+)|(?:\\[[0-9a-f:]+\\]))(?::(\\d+))?((?:/~(?:[^\\\\/]+))?[\\\\/]))?(.+)?$', 'ssh+git://l usr\\example.com:wtf@1.2.3.4:1234//abc')",[16388]
"('Description.java', 'org.junit.runner.Description', 'methodAndClassNamePatternGroupOrDefault', '([\\s\\S]*)\\((.*)\\)', 'testMaliciousAbsoluteUNCPathWindows2(org.eclipse.jgit.lib.DirCacheCheckoutMaliciousPathTest)')","[112080, 112984]"
"('URIish.java', 'org.eclipse.jgit.transport.URIish', '<init>', '^(?:([^/:@]+)(?::([^\\\\/]+))?@)?((?:[^\\\\/:]+)|(?:\\[[0-9a-f:]+\\])):((?:(?:/~(?:[^\\\\/]+))[\\\\/])?(?:(?:[^\\\\/]+[\\\\/]+)*[^\\\\/]+[\\\\/]*))$', '/.git')",[66096]
"('URIish.java', 'org.eclipse.jgit.transport.URIish', '<init>', '^(file):([\\\\/](?![\\\\/])((?:[A-Za-z]:)?[\\\\/]?(?:(?:[^\\\\/]+[\\\\/]+)*[^\\\\/]+[\\\\/]*)))$', 'ssh+git://me:wtf@example.com:1234/D:\\x')",[13880]
"('Description.java', 'org.junit.runner.Description', 'methodAndClassNamePatternGroupOrDefault', '([\\s\\S]*)\\((.*)\\)', 'org.eclipse.jgit.merge.MergeAlgorithmTest')","[86973, 87598]"
"('URIish.java', 'org.eclipse.jgit.transport.URIish', '<init>', '^(file):([\\\\/](?![\\\\/])((?:[A-Za-z]:)?[\\\\/]?(?:(?:[^\\\\/]+[\\\\/]+)*[^\\\\/]+[\\\\/]*)))$', 'http://l usr\\example.com@[::1]:80//abc')",[34862]
"('URIish.java', 'org.eclipse.jgit.transport.URIish', '<init>', '^(file):([\\\\/](?![\\\\/])((?:[A-Za-z]:)?[\\\\/]?(?:(?:[^\\\\/]+[\\\\/]+)*[^\\\\/]+[\\\\/]*)))$', 'ssh://me@1.2.3.4/D:/x')","[39876, 40060]"
"('Description.java', 'org.junit.runner.Description', 'methodAndClassNamePatternGroupOrDefault', '([\\s\\S]*)\\((.*)\\)', 'org.eclipse.jgit.transport.RemoteConfigTest')","[1228, 11601]"
"('URIish.java', 'org.eclipse.jgit.transport.URIish', '<init>', '^(?:([^/:@]+)(?::([^\\\\/]+))?@)?((?:[^\\\\/:]+)|(?:\\[[0-9a-f:]+\\])):((?:(?:/~(?:[^\\\\/]+))[\\\\/])?(?:(?:[^\\\\/]+[\\\\/]+)*[^\\\\/]+[\\\\/]*))$', '/tmp/jgit_test_4416073704389025597_tmp/tmp_7357052360559725349/.git')","[229245, 229387]"
"('Description.java', 'org.junit.runner.Description', 'methodAndClassNamePatternGroupOrDefault', '([\\s\\S]*)\\((.*)\\)', 'testSort_TOPO_REVERSE(org.eclipse.jgit.revwalk.RevWalkSortTest)')","[85106, 85258]"
"('Description.java', 'org.junit.runner.Description', 'methodAndClassNamePatternGroupOrDefault', '([\\s\\S]*)\\((.*)\\)', 'resolveUpstream(org.eclipse.jgit.lib.RepositoryResolveTest)')","[125281, 125750]"
"('Description.java', 'org.junit.runner.Description', 'methodAndClassNamePatternGroupOrDefault', '([\\s\\S]*)\\((.*)\\)', 'testSpaceGroupCase2(org.eclipse.jgit.fnmatch.FileNameMatcherTest)')","[102175, 105491]"
"('Description.java', 'org.junit.runner.Description', 'methodAndClassNamePatternGroupOrDefault', '([\\s\\S]*)\\((.*)\\)', 'shouldListAddedFileBetweenTwoCommits(org.eclipse.jgit.diff.DiffEntryTest)')","[95488, 95751]"
"('URIish.java', 'org.eclipse.jgit.transport.URIish', '<init>', '^(file):([\\\\/](?![\\\\/])((?:[A-Za-z]:)?[\\\\/]?(?:(?:[^\\\\/]+[\\\\/]+)*[^\\\\/]+[\\\\/]*)))$', 'ssh+git://lusr\\example@1.2.3.4:80/D:/x')",[32332]
"('Description.java', 'org.junit.runner.Description', 'methodAndClassNamePatternGroupOrDefault', '([\\s\\S]*)\\((.*)\\)', 'testSmallObjectLoader(org.eclipse.jgit.lib.ObjectLoaderTest)')","[119317, 119405]"
"('ChangeIdUtil.java', 'org.eclipse.jgit.util.ChangeIdUtil', 'indexOfFirstFooterLine', '(^[a-zA-Z0-9-]+:(?!//).*$)', ' ')","[188875, 191520]"
"('URIish.java', 'org.eclipse.jgit.transport.URIish', '<init>', '^(?:([^/:@]+)(?::([^\\\\/]+))?@)?([^\\\\/:]{2,}):([\\\\/](?:(?:[^\\\\/]+[\\\\/]+)*[^\\\\/]+[\\\\/]*))$', '/more/dirs')","[6227, 7571, 10382]"
"('Description.java', 'org.junit.runner.Description', 'methodAndClassNamePatternGroupOrDefault', '([\\s\\S]*)\\((.*)\\)', 'testModeChange(org.eclipse.jgit.api.CommitAndLogCommandTest)')","[213066, 213280]"
"('Description.java', 'org.junit.runner.Description', 'methodAndClassNamePatternGroupOrDefault', '([\\s\\S]*)\\((.*)\\)', 'testWrite_SmallBlocks3(org.eclipse.jgit.transport.SideBandOutputStreamTest)')","[73370, 73608]"
"('FastIgnoreRule.java', 'org.eclipse.jgit.ignore.FastIgnoreRule', 'isMatch', '.*\\.sta[0-5]', 'test.stag')","[142524, 143668]"
"('Description.java', 'org.junit.runner.Description', 'methodAndClassNamePatternGroupOrDefault', '([\\s\\S]*)\\((.*)\\)', 'testRef_refname(org.eclipse.jgit.lib.RepositoryResolveTest)')","[125575, 126058]"
"('Description.java', 'org.junit.runner.Description', 'methodAndClassNamePatternGroupOrDefault', '([\\s\\S]*)\\((.*)\\)', 'testDirectoryFileConflicts_12(org.eclipse.jgit.lib.DirCacheCheckoutTest)')","[116557, 117534]"
"('URIish.java', 'org.eclipse.jgit.transport.URIish', '<init>', '^([a-z][a-z0-9+-]+)://(?:(?:([^/:@]+)(?::([^\\\\/]+))?@)?((?:[^\\\\/:]+)|(?:\\[[0-9a-f:]+\\]))(?::(\\d+))?((?:/~(?:[^\\\\/]+))?[\\\\/]))?(.+)?$', 'http://lusr\\example@example.com:1234//')",[35023]
"('Description.java', 'org.junit.runner.Description', 'methodAndClassNamePatternGroupOrDefault', '([\\s\\S]*)\\((.*)\\)', 'testEquals(org.eclipse.jgit.revwalk.RevFlagSetTest)')","[79807, 79960]"
"('URIish.java', 'org.eclipse.jgit.transport.URIish', '<init>', '^([a-z][a-z0-9+-]+)://(?:(?:([^/:@]+)(?::([^\\\\/]+))?@)?((?:[^\\\\/:]+)|(?:\\[[0-9a-f:]+\\]))(?::(\\d+))?((?:/~(?:[^\\\\/]+))?[\\\\/]))?(.+)?$', '/tmp/jgit_test_8282599337916693551_tmp/tmp_748218085915783388.git')","[79379, 81247]"
"('URIish.java', 'org.eclipse.jgit.transport.URIish', '<init>', '^(file):([\\\\/](?![\\\\/])((?:[A-Za-z]:)?[\\\\/]?(?:(?:[^\\\\/]+[\\\\/]+)*[^\\\\/]+[\\\\/]*)))$', 'http://me@[::1]:80//abc')",[33758]
"('Description.java', 'org.junit.runner.Description', 'methodAndClassNamePatternGroupOrDefault', '([\\s\\S]*)\\((.*)\\)', 'testBlankGroupCase0[OldRule? true](org.eclipse.jgit.ignore.IgnoreRuleSpecialCasesTest)')","[151893, 158977]"
"('Description.java', 'org.junit.runner.Description', 'methodAndClassNamePatternGroupOrDefault', '([\\s\\S]*)\\((.*)\\)', 'testExpandFromDestination_Wildcard(org.eclipse.jgit.transport.RefSpecTest)')","[14381, 15862]"
"('Description.java', 'org.junit.runner.Description', 'methodAndClassNamePatternGroupOrDefault', '([\\s\\S]*)\\((.*)\\)', 'testFilter_NONE(org.eclipse.jgit.revwalk.RevWalkFilterTest)')","[83083, 83400]"
"('URIish.java', 'org.eclipse.jgit.transport.URIish', '<init>', '^([a-z][a-z0-9+-]+)://(?:(?:([^/:@]+)(?::([^\\\\/]+))?@)?((?:[^\\\\/:]+)|(?:\\[[0-9a-f:]+\\]))(?::(\\d+))?((?:/~(?:[^\\\\/]+))?[\\\\/]))?(.+)?$', 'http://l usr\\example.com@1.2.3.4:80/D:/x')",[34563]
"('URIish.java', 'org.eclipse.jgit.transport.URIish', '<init>', '^(file):([\\\\/](?![\\\\/])((?:[A-Za-z]:)?[\\\\/]?(?:(?:[^\\\\/]+[\\\\/]+)*[^\\\\/]+[\\\\/]*)))$', 'https://lusr\\example:wtf@1.2.3.4:1234//')",[25204]
"('URIish.java', 'org.eclipse.jgit.transport.URIish', '<init>', '^(file):([\\\\/](?![\\\\/])((?:[A-Za-z]:)?[\\\\/]?(?:(?:[^\\\\/]+[\\\\/]+)*[^\\\\/]+[\\\\/]*)))$', '/tmp/jgit_test_2725117978470059884_tmp/tmp_193317894193640660')","[210681, 210837, 211204]"
"('Description.java', 'org.junit.runner.Description', 'methodAndClassNamePatternGroupOrDefault', '([\\s\\S]*)\\((.*)\\)', 'noInsteadOf(org.eclipse.jgit.transport.RemoteConfigTest)')","[2171, 3533]"
"('URIish.java', 'org.eclipse.jgit.transport.URIish', '<init>', '^([a-z][a-z0-9+-]+)://(?:(?:([^/:@]+)(?::([^\\\\/]+))?@)?((?:[^\\\\/:]+)|(?:\\[[0-9a-f:]+\\]))(?::(\\d+))?((?:/~(?:[^\\\\/]+))?[\\\\/]))?(.+)?$', 'file:///tmp/jgit_test_3520123581738796132_tmp/tmp_4444582433628548112/.git/')",[133122]
"('URIish.java', 'org.eclipse.jgit.transport.URIish', '<init>', '^(file):([\\\\/](?![\\\\/])((?:[A-Za-z]:)?[\\\\/]?(?:(?:[^\\\\/]+[\\\\/]+)*[^\\\\/]+[\\\\/]*)))$', 'https://lusr\\example@[::1]/D:\\x')","[52434, 52618]"
"('Description.java', 'org.junit.runner.Description', 'methodAndClassNamePatternGroupOrDefault', '([\\s\\S]*)\\((.*)\\)', 'singleStashedCommit(org.eclipse.jgit.api.StashListCommandTest)')","[226628, 226716]"
"('Description.java', 'org.junit.runner.Description', 'methodAndClassNamePatternGroupOrDefault', '([\\s\\S]*)\\((.*)\\)', 'testVerySimpleGroupRangeCase0[OldRule? true](org.eclipse.jgit.ignore.IgnoreRuleSpecialCasesTest)')","[151019, 158103]"
"('Description.java', 'org.junit.runner.Description', 'methodAndClassNamePatternGroupOrDefault', '([\\s\\S]*)\\((.*)\\)', 'testNoRenames_SingleByteFiles(org.eclipse.jgit.diff.RenameDetectorTest)')","[93573, 94145]"
"('URIish.java', 'org.eclipse.jgit.transport.URIish', '<init>', '^([a-z][a-z0-9+-]+)://(?:(?:([^/:@]+)(?::([^\\\\/]+))?@)?((?:[^\\\\/:]+)|(?:\\[[0-9a-f:]+\\]))(?::(\\d+))?((?:/~(?:[^\\\\/]+))?[\\\\/]))?(.+)?$', 'https://l usr\\example.com@1.2.3.4//')","[50847, 51031]"
"('Description.java', 'org.junit.runner.Description', 'methodAndClassNamePatternGroupOrDefault', '([\\s\\S]*)\\((.*)\\)', 'testGraphGroupCase3(org.eclipse.jgit.fnmatch.FileNameMatcherTest)')","[101566, 104853]"
"('URIish.java', 'org.eclipse.jgit.transport.URIish', '<init>', '^([a-z][a-z0-9+-]+)://(?:(?:([^/:@]+)(?::([^\\\\/]+))?@)?((?:[^\\\\/:]+)|(?:\\[[0-9a-f:]+\\]))(?::(\\d+))?((?:/~(?:[^\\\\/]+))?[\\\\/]))?(.+)?$', 'ssh://l usr\\example.com@example.com:1234//')",[27232]
"('Description.java', 'org.junit.runner.Description', 'methodAndClassNamePatternGroupOrDefault', '([\\s\\S]*)\\((.*)\\)', 'testComparatorReduceCommonStartButLastLineNoEol(org.eclipse.jgit.diff.RawTextTest)')","[96451, 96662]"
"('URIish.java', 'org.eclipse.jgit.transport.URIish', '<init>', '^(file):([\\\\/](?![\\\\/])((?:[A-Za-z]:)?[\\\\/]?(?:(?:[^\\\\/]+[\\\\/]+)*[^\\\\/]+[\\\\/]*)))$', 'file:///tmp/jgit_test_4365868416132416411_tmp/tmp_1267754585471745565/.git/')",[172995]
"('Description.java', 'org.junit.runner.Description', 'methodAndClassNamePatternGroupOrDefault', '([\\s\\S]*)\\((.*)\\)', 'dropMiddleStashCommit(org.eclipse.jgit.api.StashDropCommandTest)')","[243362, 243532]"
"('URIish.java', 'org.eclipse.jgit.transport.URIish', '<init>', '^([a-z][a-z0-9+-]+)://(?:(?:([^/:@]+)(?::([^\\\\/]+))?@)?((?:[^\\\\/:]+)|(?:\\[[0-9a-f:]+\\]))(?::(\\d+))?((?:/~(?:[^\\\\/]+))?[\\\\/]))?(.+)?$', 'ssh://me:wtf@example.com:1234/D:/x')",[7594]
"('Description.java', 'org.junit.runner.Description', 'methodAndClassNamePatternGroupOrDefault', '([\\s\\S]*)\\((.*)\\)', 'testDegenerate_DeleteEnd(org.eclipse.jgit.diff.MyersDiffTest)')","[96980, 97404]"
"('Description.java', 'org.junit.runner.Description', 'methodAndClassNamePatternGroupOrDefault', '([\\s\\S]*)\\((.*)\\)', 'testFileInFolderCommittedAllDeletedCommittedAllIgnoredComparedWithInitialCommit(org.eclipse.jgit.treewalk.filter.IndexDiffFilterTest)')","[136731, 137537]"
"('URIish.java', 'org.eclipse.jgit.transport.URIish', '<init>', '^(?:([^/:@]+)(?::([^\\\\/]+))?@)?((?:[^\\\\/:]+)|(?:\\[[0-9a-f:]+\\])):((?:(?:/~(?:[^\\\\/]+))[\\\\/])?(?:(?:[^\\\\/]+[\\\\/]+)*[^\\\\/]+[\\\\/]*))$', '/tmp/jgit_test_4337800104653581569_tmp/tmp_3318288783057189273/.git')","[111028, 111178]"
"('URIish.java', 'org.eclipse.jgit.transport.URIish', '<init>', '^([a-z][a-z0-9+-]+)://(?:(?:([^/:@]+)(?::([^\\\\/]+))?@)?((?:[^\\\\/:]+)|(?:\\[[0-9a-f:]+\\]))(?::(\\d+))?((?:/~(?:[^\\\\/]+))?[\\\\/]))?(.+)?$', 'ssh://lusr\\example:wtf@example.com:80//')",[12572]
"('URIish.java', 'org.eclipse.jgit.transport.URIish', '<init>', '^(file):([\\\\/](?![\\\\/])((?:[A-Za-z]:)?[\\\\/]?(?:(?:[^\\\\/]+[\\\\/]+)*[^\\\\/]+[\\\\/]*)))$', 'ssh://me@1.2.3.4:1234/D:\\x')",[26611]
"('Description.java', 'org.junit.runner.Description', 'methodAndClassNamePatternGroupOrDefault', '([\\s\\S]*)\\((.*)\\)', 'testEmptyStream(org.eclipse.jgit.util.io.UnionInputStreamTest)')","[175063, 175279]"
"('FastIgnoreRule.java', 'org.eclipse.jgit.ignore.FastIgnoreRule', 'isMatch', '[[\\p{javaDigit}\\p{javaLetter}_]]', '.')",[163388]
"('Description.java', 'org.junit.runner.Description', 'methodAndClassNamePatternGroupOrDefault', '([\\s\\S]*)\\((.*)\\)', 'testClear(org.eclipse.jgit.lib.ObjectIdSubclassMapTest)')","[113966, 114114]"
"('URIish.java', 'org.eclipse.jgit.transport.URIish', '<init>', '^(file):([\\\\/](?![\\\\/])((?:[A-Za-z]:)?[\\\\/]?(?:(?:[^\\\\/]+[\\\\/]+)*[^\\\\/]+[\\\\/]*)))$', 'ssh+git://me@[::1]:80/D:\\x')",[30538]
"('Description.java', 'org.junit.runner.Description', 'methodAndClassNamePatternGroupOrDefault', '([\\s\\S]*)\\((.*)\\)', 'testSetEnum(org.eclipse.jgit.lib.ConfigTest)')","[129575, 130319]"
"('URIish.java', 'org.eclipse.jgit.transport.URIish', '<init>', '^(file):([\\\\/](?![\\\\/])((?:[A-Za-z]:)?[\\\\/]?(?:(?:[^\\\\/]+[\\\\/]+)*[^\\\\/]+[\\\\/]*)))$', 'https://me@example.com:1234/D:/x')",[36196]
"('Description.java', 'org.junit.runner.Description', 'methodAndClassNamePatternGroupOrDefault', '([\\s\\S]*)\\((.*)\\)', 'onePathMerge(org.eclipse.jgit.api.NameRevCommandTest)')","[242141, 242380]"
"('URIish.java', 'org.eclipse.jgit.transport.URIish', '<init>', '^(file):([\\\\/](?![\\\\/])((?:[A-Za-z]:)?[\\\\/]?(?:(?:[^\\\\/]+[\\\\/]+)*[^\\\\/]+[\\\\/]*)))$', 'http://me@1.2.3.4:80//abc')",[33390]
"('Description.java', 'org.junit.runner.Description', 'methodAndClassNamePatternGroupOrDefault', '([\\s\\S]*)\\((.*)\\)', 'org.eclipse.jgit.transport.ReceivePackAdvertiseRefsHookTest')","[660, 82880]"
"('Description.java', 'org.junit.runner.Description', 'methodAndClassNamePatternGroupOrDefault', '([\\s\\S]*)\\((.*)\\)', 'testFormatWithConflictsNoFooterNoLineBreak(org.eclipse.jgit.merge.MergeMessageFormatterTest)')","[88842, 89159]"
"('Description.java', 'org.junit.runner.Description', 'methodAndClassNamePatternGroupOrDefault', '([\\s\\S]*)\\((.*)\\)', 'testGetText_BothISO88591(org.eclipse.jgit.patch.GetTextTest)')","[196669, 196756]"
"('Description.java', 'org.junit.runner.Description', 'methodAndClassNamePatternGroupOrDefault', '([\\s\\S]*)\\((.*)\\)', 'testConfigureCache_PackedGitWindowSize_4097(org.eclipse.jgit.internal.storage.file.WindowCacheReconfigureTest)')","[247606, 247759]"
"('Description.java', 'org.junit.runner.Description', 'methodAndClassNamePatternGroupOrDefault', '([\\s\\S]*)\\((.*)\\)', 'testWritePack3(org.eclipse.jgit.internal.storage.file.PackWriterTest)')","[251365, 251816]"
"('Description.java', 'org.junit.runner.Description', 'methodAndClassNamePatternGroupOrDefault', '([\\s\\S]*)\\((.*)\\)', 'testRebaseWithUnstagedTopicChange(org.eclipse.jgit.api.RebaseCommandTest)')","[217543, 219026]"
"('URIish.java', 'org.eclipse.jgit.transport.URIish', '<init>', '^(file):([\\\\/](?![\\\\/])((?:[A-Za-z]:)?[\\\\/]?(?:(?:[^\\\\/]+[\\\\/]+)*[^\\\\/]+[\\\\/]*)))$', 'file:/tmp/jgit_test_4386752617164971455_tmp/tmp_2049061224455897551/.git/')",[131906]
"('URIish.java', 'org.eclipse.jgit.transport.URIish', '<init>', '^(file):([\\\\/](?![\\\\/])((?:[A-Za-z]:)?[\\\\/]?(?:(?:[^\\\\/]+[\\\\/]+)*[^\\\\/]+[\\\\/]*)))$', 'ssh+git://l usr\\example.com@1.2.3.4/D:\\x')","[44338, 44522]"
"('Description.java', 'org.junit.runner.Description', 'methodAndClassNamePatternGroupOrDefault', '([\\s\\S]*)\\((.*)\\)', 'testAddDifferentNotes(org.eclipse.jgit.notes.NoteMapMergerTest)')","[199920, 200294]"
"('Description.java', 'org.junit.runner.Description', 'methodAndClassNamePatternGroupOrDefault', '([\\s\\S]*)\\((.*)\\)', 'testEmptyTreeCorruption(org.eclipse.jgit.revwalk.ObjectWalkTest)')","[76511, 76708]"
"('Description.java', 'org.junit.runner.Description', 'methodAndClassNamePatternGroupOrDefault', '([\\s\\S]*)\\((.*)\\)', 'testFetch(org.eclipse.jgit.api.FetchCommandTest)')","[242848, 242975]"
"('URIish.java', 'org.eclipse.jgit.transport.URIish', '<init>', '^([\\\\/]?((?:[A-Za-z]:)?[\\\\/]?(?:(?:[^\\\\/]+[\\\\/]+)*[^\\\\/]+[\\\\/]*)))$', '/.git')",[66142]
"('Description.java', 'org.junit.runner.Description', 'methodAndClassNamePatternGroupOrDefault', '([\\s\\S]*)\\((.*)\\)', 'testTrailingSlash[OldRule? true](org.eclipse.jgit.ignore.IgnoreMatcherParametrizedTest)')","[141666, 141988]"
"('Description.java', 'org.junit.runner.Description', 'methodAndClassNamePatternGroupOrDefault', '([\\s\\S]*)\\((.*)\\)', 'org.eclipse.jgit.treewalk.CanonicalTreeParserTest')","[135859, 136527]"
"('URIish.java', 'org.eclipse.jgit.transport.URIish', '<init>', '^(file):([\\\\/](?![\\\\/])((?:[A-Za-z]:)?[\\\\/]?(?:(?:[^\\\\/]+[\\\\/]+)*[^\\\\/]+[\\\\/]*)))$', 'https://l usr\\example.com@1.2.3.4:1234//abc')",[37622]
"('Description.java', 'org.junit.runner.Description', 'methodAndClassNamePatternGroupOrDefault', '([\\s\\S]*)\\((.*)\\)', 'testSpaceGroupCase4(org.eclipse.jgit.fnmatch.FileNameMatcherTest)')","[102217, 105535]"
"('URIish.java', 'org.eclipse.jgit.transport.URIish', '<init>', '^(file):([\\\\/](?![\\\\/])((?:[A-Za-z]:)?[\\\\/]?(?:(?:[^\\\\/]+[\\\\/]+)*[^\\\\/]+[\\\\/]*)))$', 'ssh://l usr\\example.com:wtf@example.com:1234/D:/x')",[10475]
"('Description.java', 'org.junit.runner.Description', 'methodAndClassNamePatternGroupOrDefault', '([\\s\\S]*)\\((.*)\\)', 'testStageState(org.eclipse.jgit.lib.IndexDiffTest)')","[110511, 110859]"
"('Description.java', 'org.junit.runner.Description', 'methodAndClassNamePatternGroupOrDefault', '([\\s\\S]*)\\((.*)\\)', 'testStopOnConflictAndContinueWithNoDeltaToMaster(org.eclipse.jgit.api.RebaseCommandTest)')","[218320, 219840]"
"('Description.java', 'org.junit.runner.Description', 'methodAndClassNamePatternGroupOrDefault', '([\\s\\S]*)\\((.*)\\)', 'testCheckoutRepository(org.eclipse.jgit.api.PathCheckoutCommandTest)')","[224467, 224723]"
"('Description.java', 'org.junit.runner.Description', 'methodAndClassNamePatternGroupOrDefault', '([\\s\\S]*)\\((.*)\\)', 'testParseEncoding_ISO8859_1_encoding(org.eclipse.jgit.util.RawParseUtilsTest)')","[183616, 183681]"
"('URIish.java', 'org.eclipse.jgit.transport.URIish', '<init>', '^(file):([\\\\/](?![\\\\/])((?:[A-Za-z]:)?[\\\\/]?(?:(?:[^\\\\/]+[\\\\/]+)*[^\\\\/]+[\\\\/]*)))$', 'https://me@example.com:1234/D:\\x')",[36242]
"('URIish.java', 'org.eclipse.jgit.transport.URIish', '<init>', '^([a-z][a-z0-9+-]+)://(?:(?:([^/:@]+)(?::([^\\\\/]+))?@)?((?:[^\\\\/:]+)|(?:\\[[0-9a-f:]+\\]))(?::(\\d+))?((?:/~(?:[^\\\\/]+))?[\\\\/]))?(.+)?$', 'http://lusr\\example:wtf@example.com:80/D:\\x')",[21869]
"('URIish.java', 'org.eclipse.jgit.transport.URIish', '<init>', '^(file):([\\\\/](?![\\\\/])((?:[A-Za-z]:)?[\\\\/]?(?:(?:[^\\\\/]+[\\\\/]+)*[^\\\\/]+[\\\\/]*)))$', 'ssh+git://l usr\\example.com@example.com/D:\\x')","[43970, 44154]"
"('Description.java', 'org.junit.runner.Description', 'methodAndClassNamePatternGroupOrDefault', '([\\s\\S]*)\\((.*)\\)', 'testOnlyOption_f1_7_f2_14_a(org.eclipse.jgit.api.CommitOnlyTest)')","[235828, 237876]"
"('URIish.java', 'org.eclipse.jgit.transport.URIish', '<init>', '^([a-z][a-z0-9+-]+)://(?:(?:([^/:@]+)(?::([^\\\\/]+))?@)?((?:[^\\\\/:]+)|(?:\\[[0-9a-f:]+\\]))(?::(\\d+))?((?:/~(?:[^\\\\/]+))?[\\\\/]))?(.+)?$', '/tmp/jgit_test_3192177335269722876_tmp/tmp_3678193557651606518')","[225112, 225242, 225426]"
"('Description.java', 'org.junit.runner.Description', 'methodAndClassNamePatternGroupOrDefault', '([\\s\\S]*)\\((.*)\\)', 'org.eclipse.jgit.ignore.BasicRuleTest')","[141135, 141201]"
"('Description.java', 'org.junit.runner.Description', 'methodAndClassNamePatternGroupOrDefault', '([\\s\\S]*)\\((.*)\\)', 'testOnlyOption_f1_3_c(org.eclipse.jgit.api.CommitOnlyTest)')","[236185, 238250]"
"('Description.java', 'org.junit.runner.Description', 'methodAndClassNamePatternGroupOrDefault', '([\\s\\S]*)\\((.*)\\)', 'testURIEncode_00(org.eclipse.jgit.transport.URIishTest)')","[1438, 4618]"
"('URIish.java', 'org.eclipse.jgit.transport.URIish', '<init>', '^(file):([\\\\/](?![\\\\/])((?:[A-Za-z]:)?[\\\\/]?(?:(?:[^\\\\/]+[\\\\/]+)*[^\\\\/]+[\\\\/]*)))$', '/tmp/jgit_test_5311018649809901760_tmp/tmp_2572555623416741506')","[225549, 225674]"
"('Description.java', 'org.junit.runner.Description', 'methodAndClassNamePatternGroupOrDefault', '([\\s\\S]*)\\((.*)\\)', 'testRenameBranchCannotLockAFileHEADisFromLockHEAD(org.eclipse.jgit.internal.storage.file.RefUpdateTest)')","[253292, 254136]"
"('URIish.java', 'org.eclipse.jgit.transport.URIish', '<init>', '^(file):([\\\\/](?![\\\\/])((?:[A-Za-z]:)?[\\\\/]?(?:(?:[^\\\\/]+[\\\\/]+)*[^\\\\/]+[\\\\/]*)))$', '/tmp/jgit_test_1958524625050925037_tmp/tmp_997803827191484605.git')",[9670]
"('Description.java', 'org.junit.runner.Description', 'methodAndClassNamePatternGroupOrDefault', '([\\s\\S]*)\\((.*)\\)', 'testDirtySubmoduleWorktree(org.eclipse.jgit.lib.IndexDiffSubmoduleTest)')","[127927, 128078]"
"('Description.java', 'org.junit.runner.Description', 'methodAndClassNamePatternGroupOrDefault', '([\\s\\S]*)\\((.*)\\)', 'testAddRemoveAdd(org.eclipse.jgit.util.BlockListTest)')","[180516, 180769]"
"('URIish.java', 'org.eclipse.jgit.transport.URIish', '<init>', '^([a-z][a-z0-9+-]+)://(?:(?:([^/:@]+)(?::([^\\\\/]+))?@)?((?:[^\\\\/:]+)|(?:\\[[0-9a-f:]+\\]))(?::(\\d+))?((?:/~(?:[^\\\\/]+))?[\\\\/]))?(.+)?$', 'ssh://lusr\\example:wtf@[::1]:80//')",[13371]
"('Description.java', 'org.junit.runner.Description', 'methodAndClassNamePatternGroupOrDefault', '([\\s\\S]*)\\((.*)\\)', 'testOnlyOption_f1_11_e(org.eclipse.jgit.api.CommitOnlyTest)')","[237413, 239504]"
"('Description.java', 'org.junit.runner.Description', 'methodAndClassNamePatternGroupOrDefault', '([\\s\\S]*)\\((.*)\\)', 'testReadBoolean_YesNo1(org.eclipse.jgit.lib.ConfigTest)')","[129071, 129791]"
"('URIish.java', 'org.eclipse.jgit.transport.URIish', '<init>', '^(file):([\\\\/](?![\\\\/])((?:[A-Za-z]:)?[\\\\/]?(?:(?:[^\\\\/]+[\\\\/]+)*[^\\\\/]+[\\\\/]*)))$', 'https://1.2.3.4//abc')","[63014, 63198, 64118, 64302, 65222, 65406]"
"('Description.java', 'org.junit.runner.Description', 'methodAndClassNamePatternGroupOrDefault', '([\\s\\S]*)\\((.*)\\)', 'testMaliciousAbsolutePathTwoLevelsFirstBad(org.eclipse.jgit.lib.DirCacheCheckoutMaliciousPathTest)')","[112038, 112940]"
"('URIish.java', 'org.eclipse.jgit.transport.URIish', '<init>', '^(file):([\\\\/](?![\\\\/])((?:[A-Za-z]:)?[\\\\/]?(?:(?:[^\\\\/]+[\\\\/]+)*[^\\\\/]+[\\\\/]*)))$', '/tmp/jgit_test_489293450821421843_tmp/tmp_6013690132655096981')","[225814, 225939, 226088]"
"('Description.java', 'org.junit.runner.Description', 'methodAndClassNamePatternGroupOrDefault', '([\\s\\S]*)\\((.*)\\)', 'testAsteriskDot[OldRule? false](org.eclipse.jgit.ignore.FastIgnoreRuleTest)')","[164249, 165006]"
"('URIish.java', 'org.eclipse.jgit.transport.URIish', '<init>', '^(file):([\\\\/](?![\\\\/])((?:[A-Za-z]:)?[\\\\/]?(?:(?:[^\\\\/]+[\\\\/]+)*[^\\\\/]+[\\\\/]*)))$', '/a/b/c.git/')",[66924]
"('URIish.java', 'org.eclipse.jgit.transport.URIish', '<init>', '^(file):([\\\\/](?![\\\\/])((?:[A-Za-z]:)?[\\\\/]?(?:(?:[^\\\\/]+[\\\\/]+)*[^\\\\/]+[\\\\/]*)))$', 'ssh://lusr\\example:wtf@1.2.3.4:1234//abc')",[12779]
"('URIish.java', 'org.eclipse.jgit.transport.URIish', '<init>', '^(?:([^/:@]+)(?::([^\\\\/]+))?@)?([^\\\\/:]{2,}):([\\\\/](?:(?:[^\\\\/]+[\\\\/]+)*[^\\\\/]+[\\\\/]*))$', '/tmp/jgit_test_848094205772547537_tmp/tmp_2447967114920000272.git')",[72720]
"('Description.java', 'org.junit.runner.Description', 'methodAndClassNamePatternGroupOrDefault', '([\\s\\S]*)\\((.*)\\)', 'testBlankGroupCase2(org.eclipse.jgit.fnmatch.FileNameMatcherTest)')","[103372, 106745]"
"('URIish.java', 'org.eclipse.jgit.transport.URIish', '<init>', '^([a-z][a-z0-9+-]+)://(?:(?:([^/:@]+)(?::([^\\\\/]+))?@)?((?:[^\\\\/:]+)|(?:\\[[0-9a-f:]+\\]))(?::(\\d+))?((?:/~(?:[^\\\\/]+))?[\\\\/]))?(.+)?$', 'https://lusr\\example:wtf@[::1]:1234//abc')",[25641]
"('URIish.java', 'org.eclipse.jgit.transport.URIish', '<init>', '^(?:([^/:@]+)(?::([^\\\\/]+))?@)?((?:[^\\\\/:]+)|(?:\\[[0-9a-f:]+\\])):((?:(?:/~(?:[^\\\\/]+))[\\\\/])?(?:(?:[^\\\\/]+[\\\\/]+)*[^\\\\/]+[\\\\/]*))$', '/tmp/jgit_test_8282599337916693551_tmp/tmp_748218085915783388.git')","[79404, 81273]"
"('URIish.java', 'org.eclipse.jgit.transport.URIish', '<init>', '^(file):([\\\\/](?![\\\\/])((?:[A-Za-z]:)?[\\\\/]?(?:(?:[^\\\\/]+[\\\\/]+)*[^\\\\/]+[\\\\/]*)))$', 'https://me@[::1]:80/D:\\x')",[37162]
"('FastIgnoreRule.java', 'org.eclipse.jgit.ignore.FastIgnoreRule', 'isMatch', '[^\\]]', ']')",[160030]
"('Description.java', 'org.junit.runner.Description', 'methodAndClassNamePatternGroupOrDefault', '([\\s\\S]*)\\((.*)\\)', 'testReadFanout2_38(org.eclipse.jgit.notes.NoteMapTest)')","[199135, 199394]"
"('Description.java', 'org.junit.runner.Description', 'methodAndClassNamePatternGroupOrDefault', '([\\s\\S]*)\\((.*)\\)', 'testLimitObjectSize_InsertFrontFails(org.eclipse.jgit.internal.storage.pack.DeltaIndexTest)')","[246382, 246659]"
"('Description.java', 'org.junit.runner.Description', 'methodAndClassNamePatternGroupOrDefault', '([\\s\\S]*)\\((.*)\\)', 'testPunctGroupCase1(org.eclipse.jgit.fnmatch.FileNameMatcherTest)')","[102763, 106107]"
"('Description.java', 'org.junit.runner.Description', 'methodAndClassNamePatternGroupOrDefault', '([\\s\\S]*)\\((.*)\\)', 'testEscapedBracket2[OldRule? false](org.eclipse.jgit.ignore.IgnoreRuleSpecialCasesTest)')","[149135, 156240]"
"('Description.java', 'org.junit.runner.Description', 'methodAndClassNamePatternGroupOrDefault', '([\\s\\S]*)\\((.*)\\)', 'testReadACK_ACKready1(org.eclipse.jgit.transport.PacketLineInTest)')","[18091, 19312]"
"('Description.java', 'org.junit.runner.Description', 'methodAndClassNamePatternGroupOrDefault', '([\\s\\S]*)\\((.*)\\)', 'testValidCommit128Parent(org.eclipse.jgit.lib.ObjectCheckerTest)')","[122414, 124569]"
"('Description.java', 'org.junit.runner.Description', 'methodAndClassNamePatternGroupOrDefault', '([\\s\\S]*)\\((.*)\\)', 'testError_BodyTooLong(org.eclipse.jgit.patch.PatchErrorTest)')","[194679, 194811]"
"('URIish.java', 'org.eclipse.jgit.transport.URIish', '<init>', '^(file):([\\\\/](?![\\\\/])((?:[A-Za-z]:)?[\\\\/]?(?:(?:[^\\\\/]+[\\\\/]+)*[^\\\\/]+[\\\\/]*)))$', 'ssh://DOMAIN\\user:pass@example.com:33/some/p ath')","[67062, 67108]"
"('FastIgnoreRule.java', 'org.eclipse.jgit.ignore.FastIgnoreRule', 'isMatch', 'ne.', 'neb')","[143128, 144272]"
"('URIish.java', 'org.eclipse.jgit.transport.URIish', '<init>', '^([a-z][a-z0-9+-]+)://(?:(?:([^/:@]+)(?::([^\\\\/]+))?@)?((?:[^\\\\/:]+)|(?:\\[[0-9a-f:]+\\]))(?::(\\d+))?((?:/~(?:[^\\\\/]+))?[\\\\/]))?(.+)?$', 'ssh+git://lusr\\example@1.2.3.4//')","[45327, 45511]"
"('Description.java', 'org.junit.runner.Description', 'methodAndClassNamePatternGroupOrDefault', '([\\s\\S]*)\\((.*)\\)', 'testPut_KeyMustMatchName_NoPrefix(org.eclipse.jgit.util.RefMapTest)')","[183846, 184312]"
"('URIish.java', 'org.eclipse.jgit.transport.URIish', '<init>', '^([a-z][a-z0-9+-]+)://(?:(?:([^/:@]+)(?::([^\\\\/]+))?@)?((?:[^\\\\/:]+)|(?:\\[[0-9a-f:]+\\]))(?::(\\d+))?((?:/~(?:[^\\\\/]+))?[\\\\/]))?(.+)?$', 'ssh://me@example.com:1234/D:\\x')",[26101]
"('FastIgnoreRule.java', 'org.eclipse.jgit.ignore.FastIgnoreRule', 'isMatch', '.*\\.sta[0-5]', 'test.sta6')","[142551, 143695]"
"('URIish.java', 'org.eclipse.jgit.transport.URIish', '<init>', '^([a-z][a-z0-9+-]+)://(?:(?:([^/:@]+)(?::([^\\\\/]+))?@)?((?:[^\\\\/:]+)|(?:\\[[0-9a-f:]+\\]))(?::(\\d+))?((?:/~(?:[^\\\\/]+))?[\\\\/]))?(.+)?$', 'ssh://l usr\\example.com:wtf@[::1]:80//abc')",[12130]
"('URIish.java', 'org.eclipse.jgit.transport.URIish', '<init>', '^(file):([\\\\/](?![\\\\/])((?:[A-Za-z]:)?[\\\\/]?(?:(?:[^\\\\/]+[\\\\/]+)*[^\\\\/]+[\\\\/]*)))$', 'http://l usr\\example.com@example.com:1234/D:/x')",[33988]
"('Description.java', 'org.junit.runner.Description', 'methodAndClassNamePatternGroupOrDefault', '([\\s\\S]*)\\((.*)\\)', 'testIndexSize(org.eclipse.jgit.internal.storage.pack.DeltaIndexTest)')","[246466, 246747]"
"('Description.java', 'org.junit.runner.Description', 'methodAndClassNamePatternGroupOrDefault', '([\\s\\S]*)\\((.*)\\)', 'testReadFullyFannedOut(org.eclipse.jgit.notes.NoteMapTest)')","[199198, 199460]"
"('URIish.java', 'org.eclipse.jgit.transport.URIish', '<init>', '^([a-z][a-z0-9+-]+)://(?:(?:([^/:@]+)(?::([^\\\\/]+))?@)?((?:[^\\\\/:]+)|(?:\\[[0-9a-f:]+\\]))(?::(\\d+))?((?:/~(?:[^\\\\/]+))?[\\\\/]))?(.+)?$', 'https://me:wtf@1.2.3.4:80/D:/x')",[23295]
"('URIish.java', 'org.eclipse.jgit.transport.URIish', '<init>', '^([a-z][a-z0-9+-]+)://(?:(?:([^/:@]+)(?::([^\\\\/]+))?@)?((?:[^\\\\/:]+)|(?:\\[[0-9a-f:]+\\]))(?::(\\d+))?((?:/~(?:[^\\\\/]+))?[\\\\/]))?(.+)?$', 'ssh://l usr\\example.com@[::1]:80//abc')",[28261]
"('Description.java', 'org.junit.runner.Description', 'methodAndClassNamePatternGroupOrDefault', '([\\s\\S]*)\\((.*)\\)', 'testWritePack2SizeOffsetsVsRefs(org.eclipse.jgit.internal.storage.file.PackWriterTest)')","[251554, 252014]"
"('URIish.java', 'org.eclipse.jgit.transport.URIish', '<init>', '^(file):([\\\\/](?![\\\\/])((?:[A-Za-z]:)?[\\\\/]?(?:(?:[^\\\\/]+[\\\\/]+)*[^\\\\/]+[\\\\/]*)))$', 'https://lusr\\example:wtf@1.2.3.4:80//abc')",[25434]
"('Description.java', 'org.junit.runner.Description', 'methodAndClassNamePatternGroupOrDefault', '([\\s\\S]*)\\((.*)\\)', 'testAddToMiddleOfListByInsertionPosition(org.eclipse.jgit.util.RefListTest)')","[179569, 180088]"
"('Description.java', 'org.junit.runner.Description', 'methodAndClassNamePatternGroupOrDefault', '([\\s\\S]*)\\((.*)\\)', 'testCloneRepositoryWithMultipleHeadBranches(org.eclipse.jgit.api.CloneCommandTest)')","[203897, 204138]"
"('URIish.java', 'org.eclipse.jgit.transport.URIish', '<init>', '^(file):([\\\\/](?![\\\\/])((?:[A-Za-z]:)?[\\\\/]?(?:(?:[^\\\\/]+[\\\\/]+)*[^\\\\/]+[\\\\/]*)))$', 'ssh://lusr\\example@[::1]:1234/D:/x')",[29204]
"('Description.java', 'org.junit.runner.Description', 'methodAndClassNamePatternGroupOrDefault', '([\\s\\S]*)\\((.*)\\)', 'testGetRefs_CycleInSymbolicRef(org.eclipse.jgit.internal.storage.file.RefDirectoryTest)')","[258148, 259342]"
"('URIish.java', 'org.eclipse.jgit.transport.URIish', '<init>', '^(file):([\\\\/](?![\\\\/])((?:[A-Za-z]:)?[\\\\/]?(?:(?:[^\\\\/]+[\\\\/]+)*[^\\\\/]+[\\\\/]*)))$', 'ssh://me:wtf@1.2.3.4:80//')",[8863]
"('Description.java', 'org.junit.runner.Description', 'methodAndClassNamePatternGroupOrDefault', '([\\s\\S]*)\\((.*)\\)', 'testMaliciousAbsolutePath(org.eclipse.jgit.lib.DirCacheCheckoutMaliciousPathTest)')","[112395, 113314]"
"('Description.java', 'org.junit.runner.Description', 'methodAndClassNamePatternGroupOrDefault', '([\\s\\S]*)\\((.*)\\)', 'testPackAllObjectsInOnePack(org.eclipse.jgit.internal.storage.file.GcBasicPackingTest)')","[247060, 247188]"
"('Description.java', 'org.junit.runner.Description', 'methodAndClassNamePatternGroupOrDefault', '([\\s\\S]*)\\((.*)\\)', 'testLowerGroupCase5[OldRule? false](org.eclipse.jgit.ignore.IgnoreRuleSpecialCasesTest)')","[146605, 153710]"
"('URIish.java', 'org.eclipse.jgit.transport.URIish', '<init>', '^([a-z][a-z0-9+-]+)://(?:(?:([^/:@]+)(?::([^\\\\/]+))?@)?((?:[^\\\\/:]+)|(?:\\[[0-9a-f:]+\\]))(?::(\\d+))?((?:/~(?:[^\\\\/]+))?[\\\\/]))?(.+)?$', 'https://me@1.2.3.4:80/D:\\x')",[36817]
"('Description.java', 'org.junit.runner.Description', 'methodAndClassNamePatternGroupOrDefault', '([\\s\\S]*)\\((.*)\\)', 'testAlphaGroupCase0(org.eclipse.jgit.fnmatch.FileNameMatcherTest)')","[101986, 105293]"
"('Description.java', 'org.junit.runner.Description', 'methodAndClassNamePatternGroupOrDefault', '([\\s\\S]*)\\((.*)\\)', 'org.eclipse.jgit.internal.storage.file.ReflogWriterTest')","[250951, 251017]"
"('Description.java', 'org.junit.runner.Description', 'methodAndClassNamePatternGroupOrDefault', '([\\s\\S]*)\\((.*)\\)', 'testAbortShouldAlsoAbortNonInteractiveRebaseWithRebaseApplyDir(org.eclipse.jgit.api.RebaseCommandTest)')","[218740, 220280]"
"('Description.java', 'org.junit.runner.Description', 'methodAndClassNamePatternGroupOrDefault', '([\\s\\S]*)\\((.*)\\)', 'testCloneWithAutoSetupRebase(org.eclipse.jgit.api.CloneCommandTest)')","[203792, 204028]"
"('FastIgnoreRule.java', 'org.eclipse.jgit.ignore.FastIgnoreRule', 'isMatch', '[tv]est\\.sta[a-d]', 'test.stab')","[142605, 143749]"
"('FastIgnoreRule.java', 'org.eclipse.jgit.ignore.FastIgnoreRule', 'isMatch', '[tv]est\\.sta[a-d]', 'test.stae')","[142713, 143857]"
"('Description.java', 'org.junit.runner.Description', 'methodAndClassNamePatternGroupOrDefault', '([\\s\\S]*)\\((.*)\\)', 'testSimpleCheckout(org.eclipse.jgit.api.CheckoutCommandTest)')","[207080, 207602]"
"('FastIgnoreRule.java', 'org.eclipse.jgit.ignore.FastIgnoreRule', 'isMatch', '[[\\p{Graph}\\p{javaDigit}\\p{javaLetter}]]', ' ')",[160706]
"('Description.java', 'org.junit.runner.Description', 'methodAndClassNamePatternGroupOrDefault', '([\\s\\S]*)\\((.*)\\)', 'testWrite_Large(org.eclipse.jgit.transport.SideBandOutputStreamTest)')","[73412, 73652]"
"('Description.java', 'org.junit.runner.Description', 'methodAndClassNamePatternGroupOrDefault', '([\\s\\S]*)\\((.*)\\)', 'org.eclipse.jgit.ignore.IgnoreMatcherParametrizedTest')",[141325]
"('Description.java', 'org.junit.runner.Description', 'methodAndClassNamePatternGroupOrDefault', '([\\s\\S]*)\\((.*)\\)', 'testRebaseWithModificationShouldNotDeleteData(org.eclipse.jgit.api.RebaseCommandTest)')","[218131, 219642]"
"('Description.java', 'org.junit.runner.Description', 'methodAndClassNamePatternGroupOrDefault', '([\\s\\S]*)\\((.*)\\)', 'testFuture(org.eclipse.jgit.util.RelativeDateFormatterTest)')","[181426, 181623]"
"('ChangeIdUtil.java', 'org.eclipse.jgit.util.ChangeIdUtil', 'indexOfFirstFooterLine', '(^[a-zA-Z0-9-]+:(?!//).*$)', 'Bug:1234567')","[89471, 89601]"
"('URIish.java', 'org.eclipse.jgit.transport.URIish', '<init>', '^([a-z][a-z0-9+-]+)://(?:(?:([^/:@]+)(?::([^\\\\/]+))?@)?((?:[^\\\\/:]+)|(?:\\[[0-9a-f:]+\\]))(?::(\\d+))?((?:/~(?:[^\\\\/]+))?[\\\\/]))?(.+)?$', 'ssh://lusr\\example@1.2.3.4:80//')",[28951]
"('URIish.java', 'org.eclipse.jgit.transport.URIish', '<init>', '^(file):([\\\\/](?![\\\\/])((?:[A-Za-z]:)?[\\\\/]?(?:(?:[^\\\\/]+[\\\\/]+)*[^\\\\/]+[\\\\/]*)))$', 'ssh://lusr\\example@1.2.3.4:1234/D:\\x')",[28882]
"('Description.java', 'org.junit.runner.Description', 'methodAndClassNamePatternGroupOrDefault', '([\\s\\S]*)\\((.*)\\)', 'testSplit[OldRule? true](org.eclipse.jgit.ignore.FastIgnoreRuleTest)')","[164385, 165121]"
"('URIish.java', 'org.eclipse.jgit.transport.URIish', '<init>', '^([a-z][a-z0-9+-]+)://(?:(?:([^/:@]+)(?::([^\\\\/]+))?@)?((?:[^\\\\/:]+)|(?:\\[[0-9a-f:]+\\]))(?::(\\d+))?((?:/~(?:[^\\\\/]+))?[\\\\/]))?(.+)?$', 'https://me@1.2.3.4:1234//abc')",[36541]
"('Description.java', 'org.junit.runner.Description', 'methodAndClassNamePatternGroupOrDefault', '([\\s\\S]*)\\((.*)\\)', 'testValidTreeSorting3(org.eclipse.jgit.lib.ObjectCheckerTest)')","[121469, 123579]"
"('Description.java', 'org.junit.runner.Description', 'methodAndClassNamePatternGroupOrDefault', '([\\s\\S]*)\\((.*)\\)', 'testReadACK_ACKcontinue1(org.eclipse.jgit.transport.PacketLineInTest)')","[18156, 19402]"
"('Description.java', 'org.junit.runner.Description', 'methodAndClassNamePatternGroupOrDefault', '([\\s\\S]*)\\((.*)\\)', 'testConfigureCache_Limits1(org.eclipse.jgit.internal.storage.file.WindowCacheReconfigureTest)')","[247543, 247693]"
"('Description.java', 'org.junit.runner.Description', 'methodAndClassNamePatternGroupOrDefault', '([\\s\\S]*)\\((.*)\\)', 'testReadStringRaw1(org.eclipse.jgit.transport.PacketLineInTest)')","[17986, 19133]"
"('Description.java', 'org.junit.runner.Description', 'methodAndClassNamePatternGroupOrDefault', '([\\s\\S]*)\\((.*)\\)', 'testGetFastForwardMerge(org.eclipse.jgit.lib.ConfigTest)')","[128987, 129703]"
"('URIish.java', 'org.eclipse.jgit.transport.URIish', '<init>', '^(file):([\\\\/](?![\\\\/])((?:[A-Za-z]:)?[\\\\/]?(?:(?:[^\\\\/]+[\\\\/]+)*[^\\\\/]+[\\\\/]*)))$', 'ssh+git://l usr\\example.com@example.com:1234/D:\\x')",[30722]
"('URIish.java', 'org.eclipse.jgit.transport.URIish', '<init>', '^([a-z][a-z0-9+-]+)://(?:(?:([^/:@]+)(?::([^\\\\/]+))?@)?((?:[^\\\\/:]+)|(?:\\[[0-9a-f:]+\\]))(?::(\\d+))?((?:/~(?:[^\\\\/]+))?[\\\\/]))?(.+)?$', 'ssh://me:wtf@1.2.3.4:80//abc')",[8932]
"('Description.java', 'org.junit.runner.Description', 'methodAndClassNamePatternGroupOrDefault', '([\\s\\S]*)\\((.*)\\)', 'org.eclipse.jgit.api.DiffCommandTest')","[234329, 234660]"
"('Description.java', 'org.junit.runner.Description', 'methodAndClassNamePatternGroupOrDefault', '([\\s\\S]*)\\((.*)\\)', 'concurrentOnlyOneWritesPackedRefs(org.eclipse.jgit.internal.storage.file.GcPackRefsTest)')","[252222, 252353]"
"('URIish.java', 'org.eclipse.jgit.transport.URIish', '<init>', '^(?:([^/:@]+)(?::([^\\\\/]+))?@)?([^\\\\/:]{2,}):([\\\\/](?:(?:[^\\\\/]+[\\\\/]+)*[^\\\\/]+[\\\\/]*))$', '/tmp/jgit_test_976787373850596776_tmp/tmp_5547895567498631481')","[209605, 209745, 210175, 210325]"
"('FastIgnoreRule.java', 'org.eclipse.jgit.ignore.FastIgnoreRule', 'isMatch', '[\\p{javaDigit}]', ']')",[161722]
"('Description.java', 'org.junit.runner.Description', 'methodAndClassNamePatternGroupOrDefault', '([\\s\\S]*)\\((.*)\\)', 'testFormatBase10(org.eclipse.jgit.util.RawParseUtils_FormatTest)')","[176431, 176453]"
"('Description.java', 'org.junit.runner.Description', 'methodAndClassNamePatternGroupOrDefault', '([\\s\\S]*)\\((.*)\\)', 'org.eclipse.jgit.diff.DiffEntryTest')","[95257, 96371]"
"('URIish.java', 'org.eclipse.jgit.transport.URIish', '<init>', '^([a-z][a-z0-9+-]+)://(?:(?:([^/:@]+)(?::([^\\\\/]+))?@)?((?:[^\\\\/:]+)|(?:\\[[0-9a-f:]+\\]))(?::(\\d+))?((?:/~(?:[^\\\\/]+))?[\\\\/]))?(.+)?$', 'file:///tmp/jgit_test_1849034642501262929_tmp/tmp_4113554689023405894/.git/')",[132086]
"('Description.java', 'org.junit.runner.Description', 'methodAndClassNamePatternGroupOrDefault', '([\\s\\S]*)\\((.*)\\)', 'testWordGroupCase1[OldRule? false](org.eclipse.jgit.ignore.IgnoreRuleSpecialCasesTest)')","[148790, 155895]"
"('URIish.java', 'org.eclipse.jgit.transport.URIish', '<init>', '^(?:([^/:@]+)(?::([^\\\\/]+))?@)?([^\\\\/:]{2,}):([\\\\/](?:(?:[^\\\\/]+[\\\\/]+)*[^\\\\/]+[\\\\/]*))$', '/tmp/jgit_test_4416073704389025597_tmp/tmp_7357052360559725349/.git')","[229271, 229417]"
"('URIish.java', 'org.eclipse.jgit.transport.URIish', '<init>', '^([a-z][a-z0-9+-]+)://(?:(?:([^/:@]+)(?::([^\\\\/]+))?@)?((?:[^\\\\/:]+)|(?:\\[[0-9a-f:]+\\]))(?::(\\d+))?((?:/~(?:[^\\\\/]+))?[\\\\/]))?(.+)?$', 'https://me:wtf@[::1]:80/D:/x')",[23663]
"('FastIgnoreRule.java', 'org.eclipse.jgit.ignore.FastIgnoreRule', 'isMatch', '[b-d]', 'a')",[161748]
"('URIish.java', 'org.eclipse.jgit.transport.URIish', '<init>', '^(file):([\\\\/](?![\\\\/])((?:[A-Za-z]:)?[\\\\/]?(?:(?:[^\\\\/]+[\\\\/]+)*[^\\\\/]+[\\\\/]*)))$', 'ssh://l usr\\example.com@[::1]:1234/D:\\x')",[28146]
"('Description.java', 'org.junit.runner.Description', 'methodAndClassNamePatternGroupOrDefault', '([\\s\\S]*)\\((.*)\\)', 'testProperlyCullAllAncestors_LongHistory(org.eclipse.jgit.revwalk.RevWalkCullTest)')","[76935, 76999]"
"('Description.java', 'org.junit.runner.Description', 'methodAndClassNamePatternGroupOrDefault', '([\\s\\S]*)\\((.*)\\)', 'testFileModeMerge(org.eclipse.jgit.api.MergeCommandTest)')","[213744, 214660]"
"('Description.java', 'org.junit.runner.Description', 'methodAndClassNamePatternGroupOrDefault', '([\\s\\S]*)\\((.*)\\)', 'testHasChangeidWithReplacementInLastLine(org.eclipse.jgit.util.ChangeIdUtilTest)')","[185756, 186512]"
"('URIish.java', 'org.eclipse.jgit.transport.URIish', '<init>', '^(file):([\\\\/](?![\\\\/])((?:[A-Za-z]:)?[\\\\/]?(?:(?:[^\\\\/]+[\\\\/]+)*[^\\\\/]+[\\\\/]*)))$', 'ssh+git://l usr\\example.com@1.2.3.4:1234//')",[30952]
"('Description.java', 'org.junit.runner.Description', 'methodAndClassNamePatternGroupOrDefault', '([\\s\\S]*)\\((.*)\\)', 'org.eclipse.jgit.internal.storage.file.PackFileTest')","[248705, 250034]"
"('Description.java', 'org.junit.runner.Description', 'methodAndClassNamePatternGroupOrDefault', '([\\s\\S]*)\\((.*)\\)', 'testAddAllFromOtherList(org.eclipse.jgit.util.BlockListTest)')","[180537, 180791]"
"('Description.java', 'org.junit.runner.Description', 'methodAndClassNamePatternGroupOrDefault', '([\\s\\S]*)\\((.*)\\)', 'testCheckout(org.eclipse.jgit.api.CheckoutCommandTest)')","[206692, 207228]"
"('URIish.java', 'org.eclipse.jgit.transport.URIish', '<init>', '^(file):([\\\\/](?![\\\\/])((?:[A-Za-z]:)?[\\\\/]?(?:(?:[^\\\\/]+[\\\\/]+)*[^\\\\/]+[\\\\/]*)))$', 'ssh://lusr\\example@example.com:1234/D:/x')",[28468]
"('Description.java', 'org.junit.runner.Description', 'methodAndClassNamePatternGroupOrDefault', '([\\s\\S]*)\\((.*)\\)', 'testUpperGroupCase5(org.eclipse.jgit.fnmatch.FileNameMatcherTest)')","[103309, 106679]"
"('Description.java', 'org.junit.runner.Description', 'methodAndClassNamePatternGroupOrDefault', '([\\s\\S]*)\\((.*)\\)', 'testWrite_CH_ERROR(org.eclipse.jgit.transport.SideBandOutputStreamTest)')","[73244, 73476]"
"('Description.java', 'org.junit.runner.Description', 'methodAndClassNamePatternGroupOrDefault', '([\\s\\S]*)\\((.*)\\)', 'testParseRewordCommand(org.eclipse.jgit.api.RebaseCommandTest)')","[217669, 219158]"
"('Description.java', 'org.junit.runner.Description', 'methodAndClassNamePatternGroupOrDefault', '([\\s\\S]*)\\((.*)\\)', 'testMergeRemovingFolders(org.eclipse.jgit.api.MergeCommandTest)')","[213681, 214594]"
"('URIish.java', 'org.eclipse.jgit.transport.URIish', '<init>', '^([a-z][a-z0-9+-]+)://(?:(?:([^/:@]+)(?::([^\\\\/]+))?@)?((?:[^\\\\/:]+)|(?:\\[[0-9a-f:]+\\]))(?::(\\d+))?((?:/~(?:[^\\\\/]+))?[\\\\/]))?(.+)?$', 'http://l usr\\example.com@example.com/D:\\x')","[47305, 47489]"
"('FastIgnoreRule.java', 'org.eclipse.jgit.ignore.FastIgnoreRule', 'isMatch', '[a\\]]', 'a')",[163778]
"('Description.java', 'org.junit.runner.Description', 'methodAndClassNamePatternGroupOrDefault', '([\\s\\S]*)\\((.*)\\)', 'testModifyZ(org.eclipse.jgit.api.ApplyCommandTest)')","[223631, 223872]"
"('Description.java', 'org.junit.runner.Description', 'methodAndClassNamePatternGroupOrDefault', '([\\s\\S]*)\\((.*)\\)', 'testGConeCommit(org.eclipse.jgit.api.GarbageCollectCommandTest)')","[201255, 201298]"
"('Description.java', 'org.junit.runner.Description', 'methodAndClassNamePatternGroupOrDefault', '([\\s\\S]*)\\((.*)\\)', 'testDequote_User(org.eclipse.jgit.util.QuotedStringBourneUserPathStyleTest)')","[192660, 192924]"
"('Description.java', 'org.junit.runner.Description', 'methodAndClassNamePatternGroupOrDefault', '([\\s\\S]*)\\((.*)\\)', 'testDiffWithNegativeLineCount(org.eclipse.jgit.api.DiffCommandTest)')","[234371, 234499]"
"('Description.java', 'org.junit.runner.Description', 'methodAndClassNamePatternGroupOrDefault', '([\\s\\S]*)\\((.*)\\)', 'testDecodeUInt32(org.eclipse.jgit.util.NBTest)')","[184809, 184979]"
"('URIish.java', 'org.eclipse.jgit.transport.URIish', '<init>', '^(file):([\\\\/](?![\\\\/])((?:[A-Za-z]:)?[\\\\/]?(?:(?:[^\\\\/]+[\\\\/]+)*[^\\\\/]+[\\\\/]*)))$', 'http://example.com//')","[59288, 59472, 60392, 60576, 61496, 61680]"
"('Description.java', 'org.junit.runner.Description', 'methodAndClassNamePatternGroupOrDefault', '([\\s\\S]*)\\((.*)\\)', 'deleteBranch_historyPruned(org.eclipse.jgit.internal.storage.file.GcBranchPrunedTest)')","[260219, 260285]"
"('Description.java', 'org.junit.runner.Description', 'methodAndClassNamePatternGroupOrDefault', '([\\s\\S]*)\\((.*)\\)', 'testInvalidTreeDuplicateNames3(org.eclipse.jgit.lib.ObjectCheckerTest)')","[122792, 124965]"
"('URIish.java', 'org.eclipse.jgit.transport.URIish', '<init>', '^([a-z][a-z0-9+-]+)://(?:(?:([^/:@]+)(?::([^\\\\/]+))?@)?((?:[^\\\\/:]+)|(?:\\[[0-9a-f:]+\\]))(?::(\\d+))?((?:/~(?:[^\\\\/]+))?[\\\\/]))?(.+)?$', 'ssh://me@[::1]:1234/D:\\x')",[27002]
"('Description.java', 'org.junit.runner.Description', 'methodAndClassNamePatternGroupOrDefault', '([\\s\\S]*)\\((.*)\\)', 'testHasFlags(org.eclipse.jgit.revwalk.LIFORevQueueTest)')","[78459, 78569]"
"('Description.java', 'org.junit.runner.Description', 'methodAndClassNamePatternGroupOrDefault', '([\\s\\S]*)\\((.*)\\)', 'testUnknown(org.eclipse.jgit.transport.RemoteConfigTest)')","[1709, 2748]"
"('URIish.java', 'org.eclipse.jgit.transport.URIish', '<init>', '^(file):([\\\\/](?![\\\\/])((?:[A-Za-z]:)?[\\\\/]?(?:(?:[^\\\\/]+[\\\\/]+)*[^\\\\/]+[\\\\/]*)))$', 'file:///tmp/jgit_test_4068658224210344193_tmp/tmp_1548633951292865587/.git/')",[128637]
"('URIish.java', 'org.eclipse.jgit.transport.URIish', '<init>', '^([\\\\/]?((?:[A-Za-z]:)?[\\\\/]?(?:(?:[^\\\\/]+[\\\\/]+)*[^\\\\/]+[\\\\/]*)))$', '/tmp/jgit_test_3192177335269722876_tmp/tmp_3678193557651606518')","[225184, 225329, 225525]"
"('Description.java', 'org.junit.runner.Description', 'methodAndClassNamePatternGroupOrDefault', '([\\s\\S]*)\\((.*)\\)', 'testEdit_InvertBlocks(org.eclipse.jgit.diff.HistogramDiffTest)')","[98842, 99452]"
"('Description.java', 'org.junit.runner.Description', 'methodAndClassNamePatternGroupOrDefault', '([\\s\\S]*)\\((.*)\\)', 'testBlankGroupCase2[OldRule? false](org.eclipse.jgit.ignore.IgnoreRuleSpecialCasesTest)')","[148376, 155481]"
"('Description.java', 'org.junit.runner.Description', 'methodAndClassNamePatternGroupOrDefault', '([\\s\\S]*)\\((.*)\\)', 'test001_NewIdent(org.eclipse.jgit.lib.T0001_PersonIdentTest)')","[127654, 127740]"
"('URIish.java', 'org.eclipse.jgit.transport.URIish', '<init>', '^([a-z][a-z0-9+-]+)://(?:(?:([^/:@]+)(?::([^\\\\/]+))?@)?((?:[^\\\\/:]+)|(?:\\[[0-9a-f:]+\\]))(?::(\\d+))?((?:/~(?:[^\\\\/]+))?[\\\\/]))?(.+)?$', 'http://1.2.3.4//abc')","[59725, 59909, 60829, 61013, 61933, 62117]"
"('URIish.java', 'org.eclipse.jgit.transport.URIish', '<init>', '^([a-z][a-z0-9+-]+)://(?:(?:([^/:@]+)(?::([^\\\\/]+))?@)?((?:[^\\\\/:]+)|(?:\\[[0-9a-f:]+\\]))(?::(\\d+))?((?:/~(?:[^\\\\/]+))?[\\\\/]))?(.+)?$', 'ssh://lusr\\example:wtf@example.com:1234//abc')",[12314]
"('Description.java', 'org.junit.runner.Description', 'methodAndClassNamePatternGroupOrDefault', '([\\s\\S]*)\\((.*)\\)', 'testReadString_Len0001(org.eclipse.jgit.transport.PacketLineInTest)')","[18177, 19424]"
"('URIish.java', 'org.eclipse.jgit.transport.URIish', '<init>', '^(file):([\\\\/](?![\\\\/])((?:[A-Za-z]:)?[\\\\/]?(?:(?:[^\\\\/]+[\\\\/]+)*[^\\\\/]+[\\\\/]*)))$', 'https://me@[::1]/D:/x')","[50180, 50364]"
"('Description.java', 'org.junit.runner.Description', 'methodAndClassNamePatternGroupOrDefault', '([\\s\\S]*)\\((.*)\\)', 'checkMergeCrissCross(org.eclipse.jgit.merge.ResolveMergerTest)')","[88288, 88617]"
"('URIish.java', 'org.eclipse.jgit.transport.URIish', '<init>', '^([a-z][a-z0-9+-]+)://(?:(?:([^/:@]+)(?::([^\\\\/]+))?@)?((?:[^\\\\/:]+)|(?:\\[[0-9a-f:]+\\]))(?::(\\d+))?((?:/~(?:[^\\\\/]+))?[\\\\/]))?(.+)?$', 'https://l usr\\example.com:wtf@[::1]:1234//abc')",[24537]
"('URIish.java', 'org.eclipse.jgit.transport.URIish', '<init>', '^([a-z][a-z0-9+-]+)://(?:(?:([^/:@]+)(?::([^\\\\/]+))?@)?((?:[^\\\\/:]+)|(?:\\[[0-9a-f:]+\\]))(?::(\\d+))?((?:/~(?:[^\\\\/]+))?[\\\\/]))?(.+)?$', 'http://lusr\\example@[::1]/D:/x')","[49099, 49283]"
"('URIish.java', 'org.eclipse.jgit.transport.URIish', '<init>', '^(file):([\\\\/](?![\\\\/])((?:[A-Za-z]:)?[\\\\/]?(?:(?:[^\\\\/]+[\\\\/]+)*[^\\\\/]+[\\\\/]*)))$', 'ssh+git://l usr\\example.com@1.2.3.4/D:/x')","[44292, 44476]"
"('Description.java', 'org.junit.runner.Description', 'methodAndClassNamePatternGroupOrDefault', '([\\s\\S]*)\\((.*)\\)', 'shouldListModificationInDirWithoutModifiedTrees(org.eclipse.jgit.diff.DiffEntryTest)')","[95362, 95619]"
"('URIish.java', 'org.eclipse.jgit.transport.URIish', '<init>', '^([a-z][a-z0-9+-]+)://(?:(?:([^/:@]+)(?::([^\\\\/]+))?@)?((?:[^\\\\/:]+)|(?:\\[[0-9a-f:]+\\]))(?::(\\d+))?((?:/~(?:[^\\\\/]+))?[\\\\/]))?(.+)?$', 'ssh+git://me:wtf@example.com:80//abc')",[14163]
"('Description.java', 'org.junit.runner.Description', 'methodAndClassNamePatternGroupOrDefault', '([\\s\\S]*)\\((.*)\\)', 'test2AlphaGroupsCase0[OldRule? true](org.eclipse.jgit.ignore.IgnoreRuleSpecialCasesTest)')","[150352, 157436]"
"('URIish.java', 'org.eclipse.jgit.transport.URIish', '<init>', '^([a-z][a-z0-9+-]+)://(?:(?:([^/:@]+)(?::([^\\\\/]+))?@)?((?:[^\\\\/:]+)|(?:\\[[0-9a-f:]+\\]))(?::(\\d+))?((?:/~(?:[^\\\\/]+))?[\\\\/]))?(.+)?$', 'file:///tmp/jgit_test_4250465133596588734_tmp/tmp_290954966130449691')","[210657, 210926]"
"('Description.java', 'org.junit.runner.Description', 'methodAndClassNamePatternGroupOrDefault', '([\\s\\S]*)\\((.*)\\)', 'testNegateIsUnwrap(org.eclipse.jgit.treewalk.filter.NotTreeFilterTest)')","[139185, 139335]"
"('URIish.java', 'org.eclipse.jgit.transport.URIish', '<init>', '^(file):([\\\\/](?![\\\\/])((?:[A-Za-z]:)?[\\\\/]?(?:(?:[^\\\\/]+[\\\\/]+)*[^\\\\/]+[\\\\/]*)))$', 'ssh+git://lusr\\example@1.2.3.4:80/D:\\x')",[32378]
"('Description.java', 'org.junit.runner.Description', 'methodAndClassNamePatternGroupOrDefault', '([\\s\\S]*)\\((.*)\\)', 'testPutNewEntry(org.eclipse.jgit.util.RefListTest)')","[179674, 180198]"
"('FastIgnoreRule.java', 'org.eclipse.jgit.ignore.FastIgnoreRule', 'isMatch', '.r[a-c]', 'dra')",[145055]
"('Description.java', 'org.junit.runner.Description', 'methodAndClassNamePatternGroupOrDefault', '([\\s\\S]*)\\((.*)\\)', 'testForbiddenNamesOnWindowsEgLpt1DotSuffix(org.eclipse.jgit.lib.DirCacheCheckoutMaliciousPathTest)')","[111744, 112632]"
"('Description.java', 'org.junit.runner.Description', 'methodAndClassNamePatternGroupOrDefault', '([\\s\\S]*)\\((.*)\\)', 'testEdit_CommonGrowsPrefixAndSuffix(org.eclipse.jgit.diff.HistogramDiffTest)')","[98968, 99584]"
"('Description.java', 'org.junit.runner.Description', 'methodAndClassNamePatternGroupOrDefault', '([\\s\\S]*)\\((.*)\\)', 'testRepositoryStateChecks(org.eclipse.jgit.api.RebaseCommandTest)')","[217984, 219488]"
"('Description.java', 'org.junit.runner.Description', 'methodAndClassNamePatternGroupOrDefault', '([\\s\\S]*)\\((.*)\\)', 'commandWithNullUri(org.eclipse.jgit.submodule.SubmoduleAddTest)')","[108918, 109094]"
"('URIish.java', 'org.eclipse.jgit.transport.URIish', '<init>', '^(file):([\\\\/](?![\\\\/])((?:[A-Za-z]:)?[\\\\/]?(?:(?:[^\\\\/]+[\\\\/]+)*[^\\\\/]+[\\\\/]*)))$', 'ssh+git://me:wtf@example.com:80/D:\\x')",[14337]
"('Description.java', 'org.junit.runner.Description', 'methodAndClassNamePatternGroupOrDefault', '([\\s\\S]*)\\((.*)\\)', 'org.eclipse.jgit.revwalk.FIFORevQueueTest')","[85361, 87958]"
"('FastIgnoreRule.java', 'org.eclipse.jgit.ignore.FastIgnoreRule', 'isMatch', '[[\\p{Graph}\\p{javaDigit}\\p{javaLetter}]]', 'a')",[160628]
"('URIish.java', 'org.eclipse.jgit.transport.URIish', '<init>', '^([a-z][a-z0-9+-]+)://(?:(?:([^/:@]+)(?::([^\\\\/]+))?@)?((?:[^\\\\/:]+)|(?:\\[[0-9a-f:]+\\]))(?::(\\d+))?((?:/~(?:[^\\\\/]+))?[\\\\/]))?(.+)?$', 'file:///tmp/jgit_test_7680982075725649689_tmp/tmp_7673010578674662223')",[201175]
"('URIish.java', 'org.eclipse.jgit.transport.URIish', '<init>', '^(file):([\\\\/](?![\\\\/])((?:[A-Za-z]:)?[\\\\/]?(?:(?:[^\\\\/]+[\\\\/]+)*[^\\\\/]+[\\\\/]*)))$', 'ssh://me@[::1]:1234//')",[26841]
"('Description.java', 'org.junit.runner.Description', 'methodAndClassNamePatternGroupOrDefault', '([\\s\\S]*)\\((.*)\\)', 'testParseOldStyleNoTagger(org.eclipse.jgit.revwalk.RevTagParseTest)')","[80102, 80505]"
"('Description.java', 'org.junit.runner.Description', 'methodAndClassNamePatternGroupOrDefault', '([\\s\\S]*)\\((.*)\\)', 'testGetRefs_PackedNotPeeled_Sorted(org.eclipse.jgit.internal.storage.file.RefDirectoryTest)')","[258043, 259232]"
"('Description.java', 'org.junit.runner.Description', 'methodAndClassNamePatternGroupOrDefault', '([\\s\\S]*)\\((.*)\\)', 'testEdits_MatchAll(org.eclipse.jgit.revwalk.RevWalkPathFilter1Test)')","[75998, 76284]"
"('Description.java', 'org.junit.runner.Description', 'methodAndClassNamePatternGroupOrDefault', '([\\s\\S]*)\\((.*)\\)', 'testMixedGroupCase6(org.eclipse.jgit.fnmatch.FileNameMatcherTest)')","[101398, 104677]"
"('URIish.java', 'org.eclipse.jgit.transport.URIish', '<init>', '^([a-z][a-z0-9+-]+)://(?:(?:([^/:@]+)(?::([^\\\\/]+))?@)?((?:[^\\\\/:]+)|(?:\\[[0-9a-f:]+\\]))(?::(\\d+))?((?:/~(?:[^\\\\/]+))?[\\\\/]))?(.+)?$', 'file:///tmp/jgit_test_7445619050739236936_tmp/tmp_8875140664585085963/.git/')",[133313]
"('URIish.java', 'org.eclipse.jgit.transport.URIish', '<init>', '^([a-z][a-z0-9+-]+)://(?:(?:([^/:@]+)(?::([^\\\\/]+))?@)?((?:[^\\\\/:]+)|(?:\\[[0-9a-f:]+\\]))(?::(\\d+))?((?:/~(?:[^\\\\/]+))?[\\\\/]))?(.+)?$', 'file:///tmp/jgit_test_4365868416132416411_tmp/tmp_1267754585471745565/.git/')",[173028]
"('QuotedString.java', 'org.eclipse.jgit.util.QuotedString$BourneUserPathStyle', 'quote', '^~[A-Za-z0-9_-]+$', '~foo/')","[193198, 193222]"
"('Description.java', 'org.junit.runner.Description', 'methodAndClassNamePatternGroupOrDefault', '([\\s\\S]*)\\((.*)\\)', 'repositoryWithInitializedSubmodule(org.eclipse.jgit.submodule.SubmoduleStatusTest)')","[109328, 109479]"
"('URIish.java', 'org.eclipse.jgit.transport.URIish', '<init>', '^([a-z][a-z0-9+-]+)://(?:(?:([^/:@]+)(?::([^\\\\/]+))?@)?((?:[^\\\\/:]+)|(?:\\[[0-9a-f:]+\\]))(?::(\\d+))?((?:/~(?:[^\\\\/]+))?[\\\\/]))?(.+)?$', 'http://user:secret@host.xy:80/some%2Fpath')","[69125, 69171]"
"('Description.java', 'org.junit.runner.Description', 'methodAndClassNamePatternGroupOrDefault', '([\\s\\S]*)\\((.*)\\)', 'org.eclipse.jgit.lib.IndexModificationTimesTest')","[119609, 128909]"
"('URIish.java', 'org.eclipse.jgit.transport.URIish', '<init>', '^(file):([\\\\/](?![\\\\/])((?:[A-Za-z]:)?[\\\\/]?(?:(?:[^\\\\/]+[\\\\/]+)*[^\\\\/]+[\\\\/]*)))$', 'http://me@[::1]:1234/D:/x')",[33620]
"('Description.java', 'org.junit.runner.Description', 'methodAndClassNamePatternGroupOrDefault', '([\\s\\S]*)\\((.*)\\)', 'testPullFastForward(org.eclipse.jgit.api.PullCommandTest)')","[220588, 220925]"
"('Description.java', 'org.junit.runner.Description', 'methodAndClassNamePatternGroupOrDefault', '([\\s\\S]*)\\((.*)\\)', 'testSuccessfulMergeFailsDueToDirtyWorktree(org.eclipse.jgit.api.MergeCommandTest)')","[214185, 215122]"
"('Description.java', 'org.junit.runner.Description', 'methodAndClassNamePatternGroupOrDefault', '([\\s\\S]*)\\((.*)\\)', 'test006_notIsId(org.eclipse.jgit.lib.ObjectIdTest)')","[130739, 131025]"
"('Description.java', 'org.junit.runner.Description', 'methodAndClassNamePatternGroupOrDefault', '([\\s\\S]*)\\((.*)\\)', 'testScpStyleWithUser(org.eclipse.jgit.transport.URIishTest)')","[2555, 5014]"
"('ChangeIdUtil.java', 'org.eclipse.jgit.util.ChangeIdUtil', 'indexOfChangeId', '(^Change-Id: *I[a-f0-9]{40}$)', 'Some foooter lines')","[215492, 215637]"
"('Description.java', 'org.junit.runner.Description', 'methodAndClassNamePatternGroupOrDefault', '([\\s\\S]*)\\((.*)\\)', 'testSuccess(org.eclipse.jgit.transport.ReceivePackAdvertiseRefsHookTest)')","[786, 962]"
"('URIish.java', 'org.eclipse.jgit.transport.URIish', '<init>', '^([a-z][a-z0-9+-]+)://(?:(?:([^/:@]+)(?::([^\\\\/]+))?@)?((?:[^\\\\/:]+)|(?:\\[[0-9a-f:]+\\]))(?::(\\d+))?((?:/~(?:[^\\\\/]+))?[\\\\/]))?(.+)?$', 'ssh://lusr\\example:wtf@1.2.3.4:80/D:\\x')",[13141]
"('Description.java', 'org.junit.runner.Description', 'methodAndClassNamePatternGroupOrDefault', '([\\s\\S]*)\\((.*)\\)', 'test2AlphaGroupsCase0[OldRule? false](org.eclipse.jgit.ignore.IgnoreRuleSpecialCasesTest)')","[146789, 153894]"
"('URIish.java', 'org.eclipse.jgit.transport.URIish', '<init>', '^(file):([\\\\/](?![\\\\/])((?:[A-Za-z]:)?[\\\\/]?(?:(?:[^\\\\/]+[\\\\/]+)*[^\\\\/]+[\\\\/]*)))$', 'file:/tmp/jgit_test_3927059431209010032_tmp/tmp_6602889767515057631/.git/')",[133153]
"('Description.java', 'org.junit.runner.Description', 'methodAndClassNamePatternGroupOrDefault', '([\\s\\S]*)\\((.*)\\)', 'testPackFormat_DeltaNotAllowed(org.eclipse.jgit.internal.storage.file.UnpackedObjectTest)')","[255148, 255473]"
"('URIish.java', 'org.eclipse.jgit.transport.URIish', '<init>', '^([a-z][a-z0-9+-]+)://(?:(?:([^/:@]+)(?::([^\\\\/]+))?@)?((?:[^\\\\/:]+)|(?:\\[[0-9a-f:]+\\]))(?::(\\d+))?((?:/~(?:[^\\\\/]+))?[\\\\/]))?(.+)?$', 'file:///tmp/jgit_test_2663806198163942744_tmp/tmp_6433336437702982400')","[221572, 221634]"
"('Description.java', 'org.junit.runner.Description', 'methodAndClassNamePatternGroupOrDefault', '([\\s\\S]*)\\((.*)\\)', 'testStringOfPearls_FilePath3(org.eclipse.jgit.revwalk.RevWalkPathFilter1Test)')","[75809, 76086]"
"('URIish.java', 'org.eclipse.jgit.transport.URIish', '<init>', '^([a-z][a-z0-9+-]+)://(?:(?:([^/:@]+)(?::([^\\\\/]+))?@)?((?:[^\\\\/:]+)|(?:\\[[0-9a-f:]+\\]))(?::(\\d+))?((?:/~(?:[^\\\\/]+))?[\\\\/]))?(.+)?$', 'https://l usr\\example.com:wtf@[::1]:1234//')",[24491]
"('Description.java', 'org.junit.runner.Description', 'methodAndClassNamePatternGroupOrDefault', '([\\s\\S]*)\\((.*)\\)', 'test007_isId(org.eclipse.jgit.lib.ObjectIdTest)')","[130676, 130959]"
"('Description.java', 'org.junit.runner.Description', 'methodAndClassNamePatternGroupOrDefault', '([\\s\\S]*)\\((.*)\\)', 'testVerySimpleGroupRangeCase5(org.eclipse.jgit.fnmatch.FileNameMatcherTest)')","[102658, 105997]"
"('URIish.java', 'org.eclipse.jgit.transport.URIish', '<init>', '^([a-z][a-z0-9+-]+)://(?:(?:([^/:@]+)(?::([^\\\\/]+))?@)?((?:[^\\\\/:]+)|(?:\\[[0-9a-f:]+\\]))(?::(\\d+))?((?:/~(?:[^\\\\/]+))?[\\\\/]))?(.+)?$', 'ssh://l usr\\example.com@[::1]:80//')",[28215]
"('URIish.java', 'org.eclipse.jgit.transport.URIish', '<init>', '^(?:([^/:@]+)(?::([^\\\\/]+))?@)?((?:[^\\\\/:]+)|(?:\\[[0-9a-f:]+\\])):((?:(?:/~(?:[^\\\\/]+))[\\\\/])?(?:(?:[^\\\\/]+[\\\\/]+)*[^\\\\/]+[\\\\/]*))$', '/tmp/jgit_test_1653911944562620756_tmp/tmp_8778582607667217527')","[233123, 233258, 233935]"
"('Description.java', 'org.junit.runner.Description', 'methodAndClassNamePatternGroupOrDefault', '([\\s\\S]*)\\((.*)\\)', 'archiveByDirectoryPath(org.eclipse.jgit.api.ArchiveCommandTest)')","[240067, 240153]"
"('URIish.java', 'org.eclipse.jgit.transport.URIish', '<init>', '^([a-z][a-z0-9+-]+)://(?:(?:([^/:@]+)(?::([^\\\\/]+))?@)?((?:[^\\\\/:]+)|(?:\\[[0-9a-f:]+\\]))(?::(\\d+))?((?:/~(?:[^\\\\/]+))?[\\\\/]))?(.+)?$', 'file:///tmp/jgit_test_8103818824776981677_tmp/tmp_7899230620267393812')","[222569, 222781]"
"('Description.java', 'org.junit.runner.Description', 'methodAndClassNamePatternGroupOrDefault', '([\\s\\S]*)\\((.*)\\)', 'testConflicts(org.eclipse.jgit.treewalk.filter.IndexDiffFilterTest)')","[137130, 137955]"
"('Description.java', 'org.junit.runner.Description', 'methodAndClassNamePatternGroupOrDefault', '([\\s\\S]*)\\((.*)\\)', 'testAlias_InheritPreferredAuthentications(org.eclipse.jgit.transport.OpenSshConfigTest)')","[3724, 4182]"
"('Description.java', 'org.junit.runner.Description', 'methodAndClassNamePatternGroupOrDefault', '([\\s\\S]*)\\((.*)\\)', 'testSimplePatterns[OldRule? true](org.eclipse.jgit.ignore.FastIgnoreRuleTest)')","[164592, 165328]"
"('URIish.java', 'org.eclipse.jgit.transport.URIish', '<init>', '^([a-z][a-z0-9+-]+)://(?:(?:([^/:@]+)(?::([^\\\\/]+))?@)?((?:[^\\\\/:]+)|(?:\\[[0-9a-f:]+\\]))(?::(\\d+))?((?:/~(?:[^\\\\/]+))?[\\\\/]))?(.+)?$', 'ssh+git://me@example.com:80//abc')",[29733]
"('Description.java', 'org.junit.runner.Description', 'methodAndClassNamePatternGroupOrDefault', '([\\s\\S]*)\\((.*)\\)', 'testSignedOffBy_ManyUsers(org.eclipse.jgit.revwalk.FooterLineTest)')","[77712, 78127]"
"('URIish.java', 'org.eclipse.jgit.transport.URIish', '<init>', '^(file):([\\\\/](?![\\\\/])((?:[A-Za-z]:)?[\\\\/]?(?:(?:[^\\\\/]+[\\\\/]+)*[^\\\\/]+[\\\\/]*)))$', 'http://lusr\\example:wtf@[::1]:80//abc')",[22490]
"('Description.java', 'org.junit.runner.Description', 'methodAndClassNamePatternGroupOrDefault', '([\\s\\S]*)\\((.*)\\)', 'testAddIfAbsentGrowsWithObjects(org.eclipse.jgit.lib.ObjectIdOwnerMapTest)')","[113669, 113820]"
"('URIish.java', 'org.eclipse.jgit.transport.URIish', '<init>', '^([a-z][a-z0-9+-]+)://(?:(?:([^/:@]+)(?::([^\\\\/]+))?@)?((?:[^\\\\/:]+)|(?:\\[[0-9a-f:]+\\]))(?::(\\d+))?((?:/~(?:[^\\\\/]+))?[\\\\/]))?(.+)?$', 'http://lusr\\example@[::1]:80/D:\\x')",[36081]
"('URIish.java', 'org.eclipse.jgit.transport.URIish', '<init>', '^(file):([\\\\/](?![\\\\/])((?:[A-Za-z]:)?[\\\\/]?(?:(?:[^\\\\/]+[\\\\/]+)*[^\\\\/]+[\\\\/]*)))$', 'https://l usr\\example.com@example.com:1234/D:\\x')",[37346]
"('Description.java', 'org.junit.runner.Description', 'methodAndClassNamePatternGroupOrDefault', '([\\s\\S]*)\\((.*)\\)', 'testEdit_InsertNearCommonTail(org.eclipse.jgit.diff.HistogramDiffTest)')","[98758, 99364]"
"('Description.java', 'org.junit.runner.Description', 'methodAndClassNamePatternGroupOrDefault', '([\\s\\S]*)\\((.*)\\)', 'unstashNonStashCommit(org.eclipse.jgit.api.StashApplyCommandTest)')","[241231, 241802]"
"('URIish.java', 'org.eclipse.jgit.transport.URIish', '<init>', '^([a-z][a-z0-9+-]+)://(?:(?:([^/:@]+)(?::([^\\\\/]+))?@)?((?:[^\\\\/:]+)|(?:\\[[0-9a-f:]+\\]))(?::(\\d+))?((?:/~(?:[^\\\\/]+))?[\\\\/]))?(.+)?$', 'ssh+git://me@example.com:80/D:\\x')",[29825]
"('Description.java', 'org.junit.runner.Description', 'methodAndClassNamePatternGroupOrDefault', '([\\s\\S]*)\\((.*)\\)', 'testSignedOffBy_OneUserNoLF(org.eclipse.jgit.revwalk.FooterLineTest)')","[77502, 77907]"
"('Description.java', 'org.junit.runner.Description', 'methodAndClassNamePatternGroupOrDefault', '([\\s\\S]*)\\((.*)\\)', 'testVerySimpleGroupRangeCase0[OldRule? false](org.eclipse.jgit.ignore.IgnoreRuleSpecialCasesTest)')","[147456, 154561]"
"('Description.java', 'org.junit.runner.Description', 'methodAndClassNamePatternGroupOrDefault', '([\\s\\S]*)\\((.*)\\)', 'testMaliciousGitPathEndDotWindows2(org.eclipse.jgit.lib.DirCacheCheckoutMaliciousPathTest)')","[111828, 112720]"
"('URIish.java', 'org.eclipse.jgit.transport.URIish', '<init>', '^([a-z][a-z0-9+-]+)://(?:(?:([^/:@]+)(?::([^\\\\/]+))?@)?((?:[^\\\\/:]+)|(?:\\[[0-9a-f:]+\\]))(?::(\\d+))?((?:/~(?:[^\\\\/]+))?[\\\\/]))?(.+)?$', 'ssh+git://me@1.2.3.4/D:/x')","[43211, 43395]"
"('Description.java', 'org.junit.runner.Description', 'methodAndClassNamePatternGroupOrDefault', '([\\s\\S]*)\\((.*)\\)', 'badlyFormattedWithoutRef(org.eclipse.jgit.util.GitDateParserBadlyFormattedTest)')","[185212, 185256]"
"('Description.java', 'org.junit.runner.Description', 'methodAndClassNamePatternGroupOrDefault', '([\\s\\S]*)\\((.*)\\)', 'testEscapedBracket2(org.eclipse.jgit.fnmatch.FileNameMatcherTest)')","[104065, 107471]"
"('Description.java', 'org.junit.runner.Description', 'methodAndClassNamePatternGroupOrDefault', '([\\s\\S]*)\\((.*)\\)', 'testGetRefs_DeatchedHead1(org.eclipse.jgit.internal.storage.file.RefDirectoryTest)')","[257875, 259056]"
"('Description.java', 'org.junit.runner.Description', 'methodAndClassNamePatternGroupOrDefault', '([\\s\\S]*)\\((.*)\\)', 'testHasFlags(org.eclipse.jgit.revwalk.DateRevQueueTest)')","[82515, 82669]"
"('URIish.java', 'org.eclipse.jgit.transport.URIish', '<init>', '^([a-z][a-z0-9+-]+)://(?:(?:([^/:@]+)(?::([^\\\\/]+))?@)?((?:[^\\\\/:]+)|(?:\\[[0-9a-f:]+\\]))(?::(\\d+))?((?:/~(?:[^\\\\/]+))?[\\\\/]))?(.+)?$', 'https://me@1.2.3.4:1234/D:/x')",[36587]
"('URIish.java', 'org.eclipse.jgit.transport.URIish', '<init>', '^(file):([\\\\/](?![\\\\/])((?:[A-Za-z]:)?[\\\\/]?(?:(?:[^\\\\/]+[\\\\/]+)*[^\\\\/]+[\\\\/]*)))$', 'ssh://lusr\\example@example.com:1234//abc')",[28422]
"('Description.java', 'org.junit.runner.Description', 'methodAndClassNamePatternGroupOrDefault', '([\\s\\S]*)\\((.*)\\)', 'testCopyMetaDataWithoutStage(org.eclipse.jgit.dircache.DirCacheEntryTest)')","[90956, 91087]"
"('URIish.java', 'org.eclipse.jgit.transport.URIish', '<init>', '^(file):([\\\\/](?![\\\\/])((?:[A-Za-z]:)?[\\\\/]?(?:(?:[^\\\\/]+[\\\\/]+)*[^\\\\/]+[\\\\/]*)))$', 'http://l usr\\example.com@example.com:80//abc')",[34126]
"('Description.java', 'org.junit.runner.Description', 'methodAndClassNamePatternGroupOrDefault', '([\\s\\S]*)\\((.*)\\)', 'testDirectoryFileConflicts_13(org.eclipse.jgit.lib.DirCacheCheckoutTest)')","[116578, 117556]"
"('URIish.java', 'org.eclipse.jgit.transport.URIish', '<init>', '^([a-z][a-z0-9+-]+)://(?:(?:([^/:@]+)(?::([^\\\\/]+))?@)?((?:[^\\\\/:]+)|(?:\\[[0-9a-f:]+\\]))(?::(\\d+))?((?:/~(?:[^\\\\/]+))?[\\\\/]))?(.+)?$', 'ssh+git://lusr\\example@example.com/D:\\x')","[45097, 45281]"
"('URIish.java', 'org.eclipse.jgit.transport.URIish', '<init>', '^(file):([\\\\/](?![\\\\/])((?:[A-Za-z]:)?[\\\\/]?(?:(?:[^\\\\/]+[\\\\/]+)*[^\\\\/]+[\\\\/]*)))$', 'ssh://l usr\\example.com@1.2.3.4:1234//abc')",[27623]
"('Description.java', 'org.junit.runner.Description', 'methodAndClassNamePatternGroupOrDefault', '([\\s\\S]*)\\((.*)\\)', 'testDF_GapByOne(org.eclipse.jgit.treewalk.NameConflictTreeWalkTest)')","[134831, 134940]"
"('URIish.java', 'org.eclipse.jgit.transport.URIish', '<init>', '^(file):([\\\\/](?![\\\\/])((?:[A-Za-z]:)?[\\\\/]?(?:(?:[^\\\\/]+[\\\\/]+)*[^\\\\/]+[\\\\/]*)))$', 'ssh://lusr\\example@1.2.3.4/D:\\x')","[42130, 42314]"
"('URIish.java', 'org.eclipse.jgit.transport.URIish', '<init>', '^(file):([\\\\/](?![\\\\/])((?:[A-Za-z]:)?[\\\\/]?(?:(?:[^\\\\/]+[\\\\/]+)*[^\\\\/]+[\\\\/]*)))$', 'https://me@[::1]:1234//abc')",[36886]
"('Description.java', 'org.junit.runner.Description', 'methodAndClassNamePatternGroupOrDefault', '([\\s\\S]*)\\((.*)\\)', 'testFileInFolderCommittedModifiedAllIgnored(org.eclipse.jgit.treewalk.filter.IndexDiffFilterTest)')","[136668, 137471]"
"('URIish.java', 'org.eclipse.jgit.transport.URIish', '<init>', '^([a-z][a-z0-9+-]+)://(?:(?:([^/:@]+)(?::([^\\\\/]+))?@)?((?:[^\\\\/:]+)|(?:\\[[0-9a-f:]+\\]))(?::(\\d+))?((?:/~(?:[^\\\\/]+))?[\\\\/]))?(.+)?$', 'ssh+git://l usr\\example.com@example.com/D:\\x')","[43993, 44177]"
"('Description.java', 'org.junit.runner.Description', 'methodAndClassNamePatternGroupOrDefault', '([\\s\\S]*)\\((.*)\\)', 'testInsertChangeId(org.eclipse.jgit.api.CommitAndLogCommandTest)')","[213171, 213390]"
"('Description.java', 'org.junit.runner.Description', 'methodAndClassNamePatternGroupOrDefault', '([\\s\\S]*)\\((.*)\\)', 'testRenameLocalBranch(org.eclipse.jgit.api.BranchCommandTest)')","[227093, 227416]"
"('URIish.java', 'org.eclipse.jgit.transport.URIish', '<init>', '^([a-z][a-z0-9+-]+)://(?:(?:([^/:@]+)(?::([^\\\\/]+))?@)?((?:[^\\\\/:]+)|(?:\\[[0-9a-f:]+\\]))(?::(\\d+))?((?:/~(?:[^\\\\/]+))?[\\\\/]))?(.+)?$', 'file:///tmp/jgit_test_7403941928277025754_tmp/tmp_3969541369690137868/.git/')",[133710]
"('Description.java', 'org.junit.runner.Description', 'methodAndClassNamePatternGroupOrDefault', '([\\s\\S]*)\\((.*)\\)', 'testDiff(org.eclipse.jgit.diff.PatchIdDiffFormatterTest)')","[95154, 95198]"
"('Description.java', 'org.junit.runner.Description', 'methodAndClassNamePatternGroupOrDefault', '([\\s\\S]*)\\((.*)\\)', 'testDirectoryFileSimple(org.eclipse.jgit.lib.DirCacheCheckoutTest)')","[116011, 116962]"
"('Description.java', 'org.junit.runner.Description', 'methodAndClassNamePatternGroupOrDefault', '([\\s\\S]*)\\((.*)\\)', 'multiplePathsSecondParent(org.eclipse.jgit.api.NameRevCommandTest)')","[242015, 242248]"
"('URIish.java', 'org.eclipse.jgit.transport.URIish', '<init>', '^(file):([\\\\/](?![\\\\/])((?:[A-Za-z]:)?[\\\\/]?(?:(?:[^\\\\/]+[\\\\/]+)*[^\\\\/]+[\\\\/]*)))$', 'https://1.2.3.4/D:\\x')","[63106, 63290, 64210, 64394, 65314, 65521]"
"('Description.java', 'org.junit.runner.Description', 'methodAndClassNamePatternGroupOrDefault', '([\\s\\S]*)\\((.*)\\)', 'testIncompleteRangesInOneGroupCase1[OldRule? false](org.eclipse.jgit.ignore.IgnoreRuleSpecialCasesTest)')","[147893, 154998]"
"('Description.java', 'org.junit.runner.Description', 'methodAndClassNamePatternGroupOrDefault', '([\\s\\S]*)\\((.*)\\)', 'testInexactRename_SameContentMultipleTimes(org.eclipse.jgit.diff.RenameDetectorTest)')","[93321, 93881]"
"('FastIgnoreRule.java', 'org.eclipse.jgit.ignore.FastIgnoreRule', 'isMatch', '[\\p{Blank}]', '\r')",[162893]
"('Description.java', 'org.junit.runner.Description', 'methodAndClassNamePatternGroupOrDefault', '([\\s\\S]*)\\((.*)\\)', 'testRemoveMiddleURI(org.eclipse.jgit.transport.RemoteConfigTest)')","[1480, 2362]"
"('Description.java', 'org.junit.runner.Description', 'methodAndClassNamePatternGroupOrDefault', '([\\s\\S]*)\\((.*)\\)', 'testMergeTag(org.eclipse.jgit.api.MergeCommandTest)')","[213933, 214858]"
"('Description.java', 'org.junit.runner.Description', 'methodAndClassNamePatternGroupOrDefault', '([\\s\\S]*)\\((.*)\\)', 'testResetDoesNotAffectPostOrder(org.eclipse.jgit.treewalk.PostOrderTreeWalkTest)')","[135207, 135337]"
"('Description.java', 'org.junit.runner.Description', 'methodAndClassNamePatternGroupOrDefault', '([\\s\\S]*)\\((.*)\\)', 'testUNC(org.eclipse.jgit.transport.URIishTest)')","[1192, 4398]"
"('Description.java', 'org.junit.runner.Description', 'methodAndClassNamePatternGroupOrDefault', '([\\s\\S]*)\\((.*)\\)', 'testBug300282_1(org.eclipse.jgit.revplot.PlotCommitListTest)')","[197087, 197408]"
"('URIish.java', 'org.eclipse.jgit.transport.URIish', '<init>', '^([a-z][a-z0-9+-]+)://(?:(?:([^/:@]+)(?::([^\\\\/]+))?@)?((?:[^\\\\/:]+)|(?:\\[[0-9a-f:]+\\]))(?::(\\d+))?((?:/~(?:[^\\\\/]+))?[\\\\/]))?(.+)?$', '/tmp/jgit_test_2860132279759404209_tmp/tmp_6329217645268813068')","[229495, 229625, 230052]"
"('Description.java', 'org.junit.runner.Description', 'methodAndClassNamePatternGroupOrDefault', '([\\s\\S]*)\\((.*)\\)', 'shouldListModificationInDirWithModifiedTrees(org.eclipse.jgit.diff.DiffEntryTest)')","[95509, 95773]"
"('Description.java', 'org.junit.runner.Description', 'methodAndClassNamePatternGroupOrDefault', '([\\s\\S]*)\\((.*)\\)', 'test7_FromString(org.eclipse.jgit.lib.AbbreviatedObjectIdTest)')","[114725, 115270]"
"('FastIgnoreRule.java', 'org.eclipse.jgit.ignore.FastIgnoreRule', 'isMatch', '[\\p{Punct}]', '.')",[162060]
"('Description.java', 'org.junit.runner.Description', 'methodAndClassNamePatternGroupOrDefault', '([\\s\\S]*)\\((.*)\\)', 'testVerySimpleStarCase2[OldRule? false](org.eclipse.jgit.ignore.IgnoreRuleSpecialCasesTest)')","[148491, 155596]"
"('Description.java', 'org.junit.runner.Description', 'methodAndClassNamePatternGroupOrDefault', '([\\s\\S]*)\\((.*)\\)', 'testNoDirectorySuffix(org.eclipse.jgit.lib.ValidRefNameTest)')","[118614, 118984]"
"('Description.java', 'org.junit.runner.Description', 'methodAndClassNamePatternGroupOrDefault', '([\\s\\S]*)\\((.*)\\)', 'testUpdateRefDetached(org.eclipse.jgit.internal.storage.file.RefUpdateTest)')","[253313, 254158]"
"('Description.java', 'org.junit.runner.Description', 'methodAndClassNamePatternGroupOrDefault', '([\\s\\S]*)\\((.*)\\)', 'testParse_ConfigCaseInsensitive(org.eclipse.jgit.patch.PatchTest)')","[196205, 196359]"
"('Description.java', 'org.junit.runner.Description', 'methodAndClassNamePatternGroupOrDefault', '([\\s\\S]*)\\((.*)\\)', 'testMaliciousWindowsADSOnUnix(org.eclipse.jgit.lib.DirCacheCheckoutMaliciousPathTest)')","[112164, 113072]"
"('Description.java', 'org.junit.runner.Description', 'methodAndClassNamePatternGroupOrDefault', '([\\s\\S]*)\\((.*)\\)', 'testCreateEmpty(org.eclipse.jgit.diff.EditTest)')","[99913, 100255]"
"('URIish.java', 'org.eclipse.jgit.transport.URIish', '<init>', '^([a-z][a-z0-9+-]+)://(?:(?:([^/:@]+)(?::([^\\\\/]+))?@)?((?:[^\\\\/:]+)|(?:\\[[0-9a-f:]+\\]))(?::(\\d+))?((?:/~(?:[^\\\\/]+))?[\\\\/]))?(.+)?$', 'http://user:secret@pass@host.xy:80/some/path')","[70298, 70344]"
"('Description.java', 'org.junit.runner.Description', 'methodAndClassNamePatternGroupOrDefault', '([\\s\\S]*)\\((.*)\\)', 'testTwoRangesInOneGroupCase4[OldRule? true](org.eclipse.jgit.ignore.IgnoreRuleSpecialCasesTest)')","[152560, 159644]"
"('Description.java', 'org.junit.runner.Description', 'methodAndClassNamePatternGroupOrDefault', '([\\s\\S]*)\\((.*)\\)', 'testFull_FromString(org.eclipse.jgit.lib.AbbreviatedObjectIdTest)')","[114746, 115292]"
"('Description.java', 'org.junit.runner.Description', 'methodAndClassNamePatternGroupOrDefault', '([\\s\\S]*)\\((.*)\\)', 'testRemoveRevFlagSet(org.eclipse.jgit.revwalk.RevObjectTest)')","[84012, 84810]"
"('Description.java', 'org.junit.runner.Description', 'methodAndClassNamePatternGroupOrDefault', '([\\s\\S]*)\\((.*)\\)', 'testOnlyOption_f1_10_e(org.eclipse.jgit.api.CommitOnlyTest)')","[237308, 239394]"
"('ChangeIdUtil.java', 'org.eclipse.jgit.util.ChangeIdUtil', 'indexOfFirstFooterLine', '^[ \\[].*$', '     the indentation]')",[188105]
"('ChangeIdUtil.java', 'org.eclipse.jgit.util.ChangeIdUtil', 'indexOfFirstFooterLine', '(^[a-zA-Z0-9-]+:(?!//).*$)', 'b')",[190975]
"('Description.java', 'org.junit.runner.Description', 'methodAndClassNamePatternGroupOrDefault', '([\\s\\S]*)\\((.*)\\)', 'testAsteriskDotDoNotMatch[OldRule? false](org.eclipse.jgit.ignore.FastIgnoreRuleTest)')","[163950, 164707]"
"('Description.java', 'org.junit.runner.Description', 'methodAndClassNamePatternGroupOrDefault', '([\\s\\S]*)\\((.*)\\)', 'testIndexingSmallObject(org.eclipse.jgit.diff.SimilarityIndexTest)')","[97941, 98073]"
"('Description.java', 'org.junit.runner.Description', 'methodAndClassNamePatternGroupOrDefault', '([\\s\\S]*)\\((.*)\\)', 'testUpperGroupCase2[OldRule? false](org.eclipse.jgit.ignore.IgnoreRuleSpecialCasesTest)')","[148238, 155343]"
"('URIish.java', 'org.eclipse.jgit.transport.URIish', '<init>', '^(file):([\\\\/](?![\\\\/])((?:[A-Za-z]:)?[\\\\/]?(?:(?:[^\\\\/]+[\\\\/]+)*[^\\\\/]+[\\\\/]*)))$', 'ssh+git://me@1.2.3.4//abc')","[43142, 43326]"
"('Description.java', 'org.junit.runner.Description', 'methodAndClassNamePatternGroupOrDefault', '([\\s\\S]*)\\((.*)\\)', 'testInitNonEmptyRepository(org.eclipse.jgit.api.InitCommandTest)')","[234156, 234221]"
"('URIish.java', 'org.eclipse.jgit.transport.URIish', '<init>', '^([a-z][a-z0-9+-]+)://(?:(?:([^/:@]+)(?::([^\\\\/]+))?@)?((?:[^\\\\/:]+)|(?:\\[[0-9a-f:]+\\]))(?::(\\d+))?((?:/~(?:[^\\\\/]+))?[\\\\/]))?(.+)?$', 'http://me:wtf@example.com:1234//abc')",[18770]
"('Description.java', 'org.junit.runner.Description', 'methodAndClassNamePatternGroupOrDefault', '([\\s\\S]*)\\((.*)\\)', 'testExceptionDuringClose(org.eclipse.jgit.util.io.UnionInputStreamTest)')","[175126, 175345]"
"('Description.java', 'org.junit.runner.Description', 'methodAndClassNamePatternGroupOrDefault', '([\\s\\S]*)\\((.*)\\)', 'testCreateFileHeader_Modify(org.eclipse.jgit.diff.DiffFormatterTest)')","[95853, 96106]"
"('Description.java', 'org.junit.runner.Description', 'methodAndClassNamePatternGroupOrDefault', '([\\s\\S]*)\\((.*)\\)', 'testRepeatedNegationInDifferentFiles4(org.eclipse.jgit.ignore.IgnoreNodeTest)')","[140542, 140842]"
"('Description.java', 'org.junit.runner.Description', 'methodAndClassNamePatternGroupOrDefault', '([\\s\\S]*)\\((.*)\\)', 'testAddExistingSingleFileTwiceWithCommit(org.eclipse.jgit.api.AddCommandTest)')","[235011, 235446]"
"('URIish.java', 'org.eclipse.jgit.transport.URIish', '<init>', '^([a-z][a-z0-9+-]+)://(?:(?:([^/:@]+)(?::([^\\\\/]+))?@)?((?:[^\\\\/:]+)|(?:\\[[0-9a-f:]+\\]))(?::(\\d+))?((?:/~(?:[^\\\\/]+))?[\\\\/]))?(.+)?$', 'https://[::1]/D:\\x')","[63497, 63681, 64601, 64785, 65728, 65912]"
"('Description.java', 'org.junit.runner.Description', 'methodAndClassNamePatternGroupOrDefault', '([\\s\\S]*)\\((.*)\\)', 'testCreateSubtreeIterator(org.eclipse.jgit.treewalk.EmptyTreeIteratorTest)')","[135584, 135712]"
"('FastIgnoreRule.java', 'org.eclipse.jgit.ignore.FastIgnoreRule', 'isMatch', '.r[a-c]', 'crg')",[145109]
"('URIish.java', 'org.eclipse.jgit.transport.URIish', '<init>', '^(file):([\\\\/](?![\\\\/])((?:[A-Za-z]:)?[\\\\/]?(?:(?:[^\\\\/]+[\\\\/]+)*[^\\\\/]+[\\\\/]*)))$', 'ssh://lusr\\example@example.com/D:/x')","[41716, 41900]"
"('Description.java', 'org.junit.runner.Description', 'methodAndClassNamePatternGroupOrDefault', '([\\s\\S]*)\\((.*)\\)', 'testExtendB(org.eclipse.jgit.diff.EditTest)')","[99871, 100211]"
"('ChangeIdUtil.java', 'org.eclipse.jgit.util.ChangeIdUtil', 'indexOfFirstFooterLine', '(^[a-zA-Z0-9-]+:(?!//).*$)', '     the indentation]')",[188079]
"('URIish.java', 'org.eclipse.jgit.transport.URIish', '<init>', '^([a-z][a-z0-9+-]+)://(?:(?:([^/:@]+)(?::([^\\\\/]+))?@)?((?:[^\\\\/:]+)|(?:\\[[0-9a-f:]+\\]))(?::(\\d+))?((?:/~(?:[^\\\\/]+))?[\\\\/]))?(.+)?$', 'https://lusr\\example:wtf@[::1]:80//')",[25779]
"('Description.java', 'org.junit.runner.Description', 'methodAndClassNamePatternGroupOrDefault', '([\\s\\S]*)\\((.*)\\)', 'testCopyFileBare(org.eclipse.jgit.gitrepo.RepoCommandTest)')","[139820, 140116]"
"('URIish.java', 'org.eclipse.jgit.transport.URIish', '<init>', '^(file):([\\\\/](?![\\\\/])((?:[A-Za-z]:)?[\\\\/]?(?:(?:[^\\\\/]+[\\\\/]+)*[^\\\\/]+[\\\\/]*)))$', 'file:/tmp/jgit_test_4757869241683822401_tmp/tmp_7198850080551859564/.git/')",[128176]
"('URIish.java', 'org.eclipse.jgit.transport.URIish', '<init>', '^(file):([\\\\/](?![\\\\/])((?:[A-Za-z]:)?[\\\\/]?(?:(?:[^\\\\/]+[\\\\/]+)*[^\\\\/]+[\\\\/]*)))$', 'ssh://l usr\\example.com@[::1]:80/D:/x')",[28284]
"('Description.java', 'org.junit.runner.Description', 'methodAndClassNamePatternGroupOrDefault', '([\\s\\S]*)\\((.*)\\)', 'testCR(org.eclipse.jgit.util.io.EolCanonicalizingInputStreamTest)')","[174661, 174812]"
"('Description.java', 'org.junit.runner.Description', 'methodAndClassNamePatternGroupOrDefault', '([\\s\\S]*)\\((.*)\\)', 'testPullEmptyRepository(org.eclipse.jgit.api.PullCommandTest)')","[220756, 221101]"
"('URIish.java', 'org.eclipse.jgit.transport.URIish', '<init>', '^(file):([\\\\/](?![\\\\/])((?:[A-Za-z]:)?[\\\\/]?(?:(?:[^\\\\/]+[\\\\/]+)*[^\\\\/]+[\\\\/]*)))$', 'file:/tmp/jgit_test_7795766867048310974_tmp/tmp_459515156367528372/.git/')",[173145]
"('Description.java', 'org.junit.runner.Description', 'methodAndClassNamePatternGroupOrDefault', '([\\s\\S]*)\\((.*)\\)', 'testClean(org.eclipse.jgit.util.ChangeIdUtilTest)')","[185441, 186182]"
"('URIish.java', 'org.eclipse.jgit.transport.URIish', '<init>', '^(file):([\\\\/](?![\\\\/])((?:[A-Za-z]:)?[\\\\/]?(?:(?:[^\\\\/]+[\\\\/]+)*[^\\\\/]+[\\\\/]*)))$', 'http://l usr\\example.com@example.com:80//')",[34080]
"('URIish.java', 'org.eclipse.jgit.transport.URIish', '<init>', '^([a-z][a-z0-9+-]+)://(?:(?:([^/:@]+)(?::([^\\\\/]+))?@)?((?:[^\\\\/:]+)|(?:\\[[0-9a-f:]+\\]))(?::(\\d+))?((?:/~(?:[^\\\\/]+))?[\\\\/]))?(.+)?$', 'ssh+git://[::1]/D:\\x')","[56873, 57057, 57977, 58161, 59081, 59265]"
"('Description.java', 'org.junit.runner.Description', 'methodAndClassNamePatternGroupOrDefault', '([\\s\\S]*)\\((.*)\\)', 'org.eclipse.jgit.internal.storage.file.StoredBitmapTest')","[247840, 247992]"
"('URIish.java', 'org.eclipse.jgit.transport.URIish', '<init>', '^(file):([\\\\/](?![\\\\/])((?:[A-Za-z]:)?[\\\\/]?(?:(?:[^\\\\/]+[\\\\/]+)*[^\\\\/]+[\\\\/]*)))$', 'ssh://lusr\\example@1.2.3.4:80//')",[28928]
"('URIish.java', 'org.eclipse.jgit.transport.URIish', '<init>', '^([a-z][a-z0-9+-]+)://(?:(?:([^/:@]+)(?::([^\\\\/]+))?@)?((?:[^\\\\/:]+)|(?:\\[[0-9a-f:]+\\]))(?::(\\d+))?((?:/~(?:[^\\\\/]+))?[\\\\/]))?(.+)?$', 'https://lusr\\example:wtf@example.com:80/D:\\x')",[25181]
"('Description.java', 'org.junit.runner.Description', 'methodAndClassNamePatternGroupOrDefault', '([\\s\\S]*)\\((.*)\\)', 'testGetValidLocalWithTwoSlashesHumanishName(org.eclipse.jgit.transport.URIishTest)')","[4074, 5410]"
"('Description.java', 'org.junit.runner.Description', 'methodAndClassNamePatternGroupOrDefault', '([\\s\\S]*)\\((.*)\\)', 'testValidEmptyTree(org.eclipse.jgit.lib.ObjectCheckerTest)')","[122036, 124173]"
"('Description.java', 'org.junit.runner.Description', 'methodAndClassNamePatternGroupOrDefault', '([\\s\\S]*)\\((.*)\\)', 'testRemoveMakesEmpty(org.eclipse.jgit.util.RefListTest)')","[179695, 180220]"
"('Description.java', 'org.junit.runner.Description', 'methodAndClassNamePatternGroupOrDefault', '([\\s\\S]*)\\((.*)\\)', 'testWildmatch[OldRule? false](org.eclipse.jgit.ignore.FastIgnoreRuleTest)')","[163973, 164730]"
"('Description.java', 'org.junit.runner.Description', 'methodAndClassNamePatternGroupOrDefault', '([\\s\\S]*)\\((.*)\\)', 'org.eclipse.jgit.revwalk.RevCommitListTest')","[80894, 91320]"
"('Description.java', 'org.junit.runner.Description', 'methodAndClassNamePatternGroupOrDefault', '([\\s\\S]*)\\((.*)\\)', 'testBasic[OldRule? true](org.eclipse.jgit.ignore.IgnoreMatcherParametrizedTest)')","[141597, 141919]"
"('URIish.java', 'org.eclipse.jgit.transport.URIish', '<init>', '^([a-z][a-z0-9+-]+)://(?:(?:([^/:@]+)(?::([^\\\\/]+))?@)?((?:[^\\\\/:]+)|(?:\\[[0-9a-f:]+\\]))(?::(\\d+))?((?:/~(?:[^\\\\/]+))?[\\\\/]))?(.+)?$', 'https://l usr\\example.com@1.2.3.4:1234/D:/x')",[37691]
"('URIish.java', 'org.eclipse.jgit.transport.URIish', '<init>', '^([a-z][a-z0-9+-]+)://(?:(?:([^/:@]+)(?::([^\\\\/]+))?@)?((?:[^\\\\/:]+)|(?:\\[[0-9a-f:]+\\]))(?::(\\d+))?((?:/~(?:[^\\\\/]+))?[\\\\/]))?(.+)?$', '/a/b/.git')",[71103]
"('Description.java', 'org.junit.runner.Description', 'methodAndClassNamePatternGroupOrDefault', '([\\s\\S]*)\\((.*)\\)', 'testMaliciousGitPathEndSpaceWindows(org.eclipse.jgit.lib.DirCacheCheckoutMaliciousPathTest)')","[112479, 113402]"
"('Description.java', 'org.junit.runner.Description', 'methodAndClassNamePatternGroupOrDefault', '([\\s\\S]*)\\((.*)\\)', 'testSetSource(org.eclipse.jgit.transport.RefSpecTest)')","[14184, 15706]"
"('Description.java', 'org.junit.runner.Description', 'methodAndClassNamePatternGroupOrDefault', '([\\s\\S]*)\\((.*)\\)', 'testSaveAllTags(org.eclipse.jgit.transport.RemoteConfigTest)')","[1688, 2726]"
"('Description.java', 'org.junit.runner.Description', 'methodAndClassNamePatternGroupOrDefault', '([\\s\\S]*)\\((.*)\\)', 'org.eclipse.jgit.patch.EditListTest')","[194365, 194517]"
"('URIish.java', 'org.eclipse.jgit.transport.URIish', '<init>', '^(file):([\\\\/](?![\\\\/])((?:[A-Za-z]:)?[\\\\/]?(?:(?:[^\\\\/]+[\\\\/]+)*[^\\\\/]+[\\\\/]*)))$', 'ssh+git://lusr\\example@[::1]:80//abc')",[32654]
"('URIish.java', 'org.eclipse.jgit.transport.URIish', '<init>', '^(file):([\\\\/](?![\\\\/])((?:[A-Za-z]:)?[\\\\/]?(?:(?:[^\\\\/]+[\\\\/]+)*[^\\\\/]+[\\\\/]*)))$', 'http://lusr\\example@example.com:80/D:\\x')",[35322]
"('URIish.java', 'org.eclipse.jgit.transport.URIish', '<init>', '^(file):([\\\\/](?![\\\\/])((?:[A-Za-z]:)?[\\\\/]?(?:(?:[^\\\\/]+[\\\\/]+)*[^\\\\/]+[\\\\/]*)))$', 'git+ssh://example.com/some/p ath')","[69332, 69378]"
"('URIish.java', 'org.eclipse.jgit.transport.URIish', '<init>', '^(file):([\\\\/](?![\\\\/])((?:[A-Za-z]:)?[\\\\/]?(?:(?:[^\\\\/]+[\\\\/]+)*[^\\\\/]+[\\\\/]*)))$', 'http://me@[::1]/D:\\x')","[46914, 47098]"
"('URIish.java', 'org.eclipse.jgit.transport.URIish', '<init>', '^(file):([\\\\/](?![\\\\/])((?:[A-Za-z]:)?[\\\\/]?(?:(?:[^\\\\/]+[\\\\/]+)*[^\\\\/]+[\\\\/]*)))$', 'ssh://me@1.2.3.4:1234//abc')",[26519]
"('Description.java', 'org.junit.runner.Description', 'methodAndClassNamePatternGroupOrDefault', '([\\s\\S]*)\\((.*)\\)', 'testFormatMinutes(org.eclipse.jgit.util.RelativeDateFormatterTest)')","[181321, 181513]"
"('URIish.java', 'org.eclipse.jgit.transport.URIish', '<init>', '^(file):([\\\\/](?![\\\\/])((?:[A-Za-z]:)?[\\\\/]?(?:(?:[^\\\\/]+[\\\\/]+)*[^\\\\/]+[\\\\/]*)))$', 'https://l usr\\example.com@[::1]:80/D:\\x')",[38266]
"('FastIgnoreRule.java', 'org.eclipse.jgit.ignore.FastIgnoreRule', 'isMatch', '[\\]]', ']')",[159926]
"('Description.java', 'org.junit.runner.Description', 'methodAndClassNamePatternGroupOrDefault', '([\\s\\S]*)\\((.*)\\)', 'testDirtyRootWorktree(org.eclipse.jgit.lib.IndexDiffSubmoduleTest)')","[127864, 128012]"
"('URIish.java', 'org.eclipse.jgit.transport.URIish', '<init>', '^(file):([\\\\/](?![\\\\/])((?:[A-Za-z]:)?[\\\\/]?(?:(?:[^\\\\/]+[\\\\/]+)*[^\\\\/]+[\\\\/]*)))$', 'ssh://lusr\\example@[::1]:1234/D:\\x')",[29250]
"('URIish.java', 'org.eclipse.jgit.transport.URIish', '<init>', '^(file):([\\\\/](?![\\\\/])((?:[A-Za-z]:)?[\\\\/]?(?:(?:[^\\\\/]+[\\\\/]+)*[^\\\\/]+[\\\\/]*)))$', 'ssh+git://me@[::1]:1234//')",[30216]
"('URIish.java', 'org.eclipse.jgit.transport.URIish', '<init>', '^([a-z][a-z0-9+-]+)://(?:(?:([^/:@]+)(?::([^\\\\/]+))?@)?((?:[^\\\\/:]+)|(?:\\[[0-9a-f:]+\\]))(?::(\\d+))?((?:/~(?:[^\\\\/]+))?[\\\\/]))?(.+)?$', 'example.com:/some/p ath')","[69769, 69861]"
"('Description.java', 'org.junit.runner.Description', 'methodAndClassNamePatternGroupOrDefault', '([\\s\\S]*)\\((.*)\\)', 'testSpecialGroupCase7(org.eclipse.jgit.fnmatch.FileNameMatcherTest)')","[101062, 104325]"
"('Description.java', 'org.junit.runner.Description', 'methodAndClassNamePatternGroupOrDefault', '([\\s\\S]*)\\((.*)\\)', 'org.eclipse.jgit.treewalk.filter.IndexDiffFilterTest')","[136563, 138220]"
"('URIish.java', 'org.eclipse.jgit.transport.URIish', '<init>', '^(file):([\\\\/](?![\\\\/])((?:[A-Za-z]:)?[\\\\/]?(?:(?:[^\\\\/]+[\\\\/]+)*[^\\\\/]+[\\\\/]*)))$', 'ssh://lusr\\example:wtf@1.2.3.4:80//')",[12980]
"('URIish.java', 'org.eclipse.jgit.transport.URIish', '<init>', '^(file):([\\\\/](?![\\\\/])((?:[A-Za-z]:)?[\\\\/]?(?:(?:[^\\\\/]+[\\\\/]+)*[^\\\\/]+[\\\\/]*)))$', 'ssh://l usr\\example.com@example.com:80/D:/x')",[27485]
"('Description.java', 'org.junit.runner.Description', 'methodAndClassNamePatternGroupOrDefault', '([\\s\\S]*)\\((.*)\\)', 'testSshProtoWithUserAndPort(org.eclipse.jgit.transport.URIishTest)')","[1877, 4662]"
"('Description.java', 'org.junit.runner.Description', 'methodAndClassNamePatternGroupOrDefault', '([\\s\\S]*)\\((.*)\\)', 'resolveNonExistingBranch(org.eclipse.jgit.lib.ReflogResolveTest)')","[126279, 126409]"
"('FastIgnoreRule.java', 'org.eclipse.jgit.ignore.FastIgnoreRule', 'isMatch', '\\[', '[')",[163648]
"('URIish.java', 'org.eclipse.jgit.transport.URIish', '<init>', '^([a-z][a-z0-9+-]+)://(?:(?:([^/:@]+)(?::([^\\\\/]+))?@)?((?:[^\\\\/:]+)|(?:\\[[0-9a-f:]+\\]))(?::(\\d+))?((?:/~(?:[^\\\\/]+))?[\\\\/]))?(.+)?$', 'ssh://l usr\\example.com:wtf@example.com:80/D:/x')",[11122]
"('Description.java', 'org.junit.runner.Description', 'methodAndClassNamePatternGroupOrDefault', '([\\s\\S]*)\\((.*)\\)', 'testRevisionTag(org.eclipse.jgit.gitrepo.RepoCommandTest)')","[139925, 140226]"
"('URIish.java', 'org.eclipse.jgit.transport.URIish', '<init>', '^([a-z][a-z0-9+-]+)://(?:(?:([^/:@]+)(?::([^\\\\/]+))?@)?((?:[^\\\\/:]+)|(?:\\[[0-9a-f:]+\\]))(?::(\\d+))?((?:/~(?:[^\\\\/]+))?[\\\\/]))?(.+)?$', 'ssh+git://l usr\\example.com:wtf@example.com:1234//')",[15908]
"('URIish.java', 'org.eclipse.jgit.transport.URIish', '<init>', '^([a-z][a-z0-9+-]+)://(?:(?:([^/:@]+)(?::([^\\\\/]+))?@)?((?:[^\\\\/:]+)|(?:\\[[0-9a-f:]+\\]))(?::(\\d+))?((?:/~(?:[^\\\\/]+))?[\\\\/]))?(.+)?$', 'https://lusr\\example:wtf@example.com:1234/D:/x')",[24951]
"('Description.java', 'org.junit.runner.Description', 'methodAndClassNamePatternGroupOrDefault', '([\\s\\S]*)\\((.*)\\)', 'testWrap(org.eclipse.jgit.treewalk.filter.NotTreeFilterTest)')","[139250, 139379]"
"('Description.java', 'org.junit.runner.Description', 'methodAndClassNamePatternGroupOrDefault', '([\\s\\S]*)\\((.*)\\)', 'testOneBlankLine(org.eclipse.jgit.util.RawParseUtils_LineMapTest)')","[179127, 179234]"
"('Description.java', 'org.junit.runner.Description', 'methodAndClassNamePatternGroupOrDefault', '([\\s\\S]*)\\((.*)\\)', 'org.eclipse.jgit.diff.RawTextTest')","[96430, 97779]"
"('Description.java', 'org.junit.runner.Description', 'methodAndClassNamePatternGroupOrDefault', '([\\s\\S]*)\\((.*)\\)', 'testRemoveLast(org.eclipse.jgit.notes.LeafBucketTest)')","[198185, 198423]"
"('Description.java', 'org.junit.runner.Description', 'methodAndClassNamePatternGroupOrDefault', '([\\s\\S]*)\\((.*)\\)', 'testObjectId_nonexisting(org.eclipse.jgit.lib.RepositoryResolveTest)')","[125155, 125618]"
"('FastIgnoreRule.java', 'org.eclipse.jgit.ignore.FastIgnoreRule', 'isMatch', '.*\\.st.', 'anothertest.stg')","[142065, 142227, 143236, 143371]"
"('URIish.java', 'org.eclipse.jgit.transport.URIish', '<init>', '^([a-z][a-z0-9+-]+)://(?:(?:([^/:@]+)(?::([^\\\\/]+))?@)?((?:[^\\\\/:]+)|(?:\\[[0-9a-f:]+\\]))(?::(\\d+))?((?:/~(?:[^\\\\/]+))?[\\\\/]))?(.+)?$', 'file:///tmp/jgit_test_5639268017763295644_tmp/tmp_3481766947146202913/.git/')",[133019]
"('Description.java', 'org.junit.runner.Description', 'methodAndClassNamePatternGroupOrDefault', '([\\s\\S]*)\\((.*)\\)', 'test2(org.eclipse.jgit.revwalk.RevWalkPathFilter6012Test)')","[85720, 85869]"
"('Description.java', 'org.junit.runner.Description', 'methodAndClassNamePatternGroupOrDefault', '([\\s\\S]*)\\((.*)\\)', 'testSystemEncoding(org.eclipse.jgit.storage.file.FileBasedConfigTest)')","[194218, 194306]"
"('FastIgnoreRule.java', 'org.eclipse.jgit.ignore.FastIgnoreRule', 'isMatch', '[\\p{Cntrl}]', 'a')",[160914]
"('URIish.java', 'org.eclipse.jgit.transport.URIish', '<init>', '^(file):([\\\\/](?![\\\\/])((?:[A-Za-z]:)?[\\\\/]?(?:(?:[^\\\\/]+[\\\\/]+)*[^\\\\/]+[\\\\/]*)))$', 'file:/tmp/jgit_test_4282693968719835734_tmp/tmp_387389566156283921/.git/')",[128812]
"('Description.java', 'org.junit.runner.Description', 'methodAndClassNamePatternGroupOrDefault', '([\\s\\S]*)\\((.*)\\)', 'testCloneRepositoryWhenDestinationDirectoryExistsAndIsNotEmpty(org.eclipse.jgit.api.CloneCommandTest)')","[203918, 204160]"
"('Description.java', 'org.junit.runner.Description', 'methodAndClassNamePatternGroupOrDefault', '([\\s\\S]*)\\((.*)\\)', 'testBareRepo(org.eclipse.jgit.gitrepo.RepoCommandTest)')","[139841, 140138]"
"('URIish.java', 'org.eclipse.jgit.transport.URIish', '<init>', '^([a-z][a-z0-9+-]+)://(?:(?:([^/:@]+)(?::([^\\\\/]+))?@)?((?:[^\\\\/:]+)|(?:\\[[0-9a-f:]+\\]))(?::(\\d+))?((?:/~(?:[^\\\\/]+))?[\\\\/]))?(.+)?$', 'http://me@example.com/D:/x')","[46155, 46339]"
"('URIish.java', 'org.eclipse.jgit.transport.URIish', '<init>', '^(file):([\\\\/](?![\\\\/])((?:[A-Za-z]:)?[\\\\/]?(?:(?:[^\\\\/]+[\\\\/]+)*[^\\\\/]+[\\\\/]*)))$', 'ssh://l usr\\example.com:wtf@1.2.3.4:1234/D:\\x')",[11647]
"('Description.java', 'org.junit.runner.Description', 'methodAndClassNamePatternGroupOrDefault', '([\\s\\S]*)\\((.*)\\)', 'shouldListChangesInWorkingTree(org.eclipse.jgit.diff.DiffEntryTest)')","[95446, 95707]"
"('Description.java', 'org.junit.runner.Description', 'methodAndClassNamePatternGroupOrDefault', '([\\s\\S]*)\\((.*)\\)', 'testBackwords_Prebuilts2(org.eclipse.jgit.treewalk.CanonicalTreeParserTest)')","[135922, 136240]"
"('Description.java', 'org.junit.runner.Description', 'methodAndClassNamePatternGroupOrDefault', '([\\s\\S]*)\\((.*)\\)', 'testTrivialTwoWay_leftDFconflict1(org.eclipse.jgit.merge.SimpleMergeTest)')","[86502, 86782]"
"('Description.java', 'org.junit.runner.Description', 'methodAndClassNamePatternGroupOrDefault', '([\\s\\S]*)\\((.*)\\)', 'org.eclipse.jgit.lib.SquashCommitMsgTest')","[131084, 131150]"
"('Description.java', 'org.junit.runner.Description', 'methodAndClassNamePatternGroupOrDefault', '([\\s\\S]*)\\((.*)\\)', 'testAddToEmptyList(org.eclipse.jgit.util.RefListTest)')","[179758, 180286]"
"('Description.java', 'org.junit.runner.Description', 'methodAndClassNamePatternGroupOrDefault', '([\\s\\S]*)\\((.*)\\)', 'testLowerGroupCase2(org.eclipse.jgit.fnmatch.FileNameMatcherTest)')","[101734, 105029]"
"('Description.java', 'org.junit.runner.Description', 'methodAndClassNamePatternGroupOrDefault', '([\\s\\S]*)\\((.*)\\)', 'testDeleteEmptyTagNames(org.eclipse.jgit.api.TagCommandTest)')","[201679, 201979]"
"('Description.java', 'org.junit.runner.Description', 'methodAndClassNamePatternGroupOrDefault', '([\\s\\S]*)\\((.*)\\)', 'org.eclipse.jgit.submodule.SubmoduleWalkTest')","[108304, 109208]"
"('Description.java', 'org.junit.runner.Description', 'methodAndClassNamePatternGroupOrDefault', '([\\s\\S]*)\\((.*)\\)', 'testSetForceUpdate(org.eclipse.jgit.transport.RefSpecTest)')","[13945, 15437]"
"('Description.java', 'org.junit.runner.Description', 'methodAndClassNamePatternGroupOrDefault', '([\\s\\S]*)\\((.*)\\)', 'testBoundary(org.eclipse.jgit.util.io.AutoCRLFInputStreamTest)')","[175447, 175490]"
"('Description.java', 'org.junit.runner.Description', 'methodAndClassNamePatternGroupOrDefault', '([\\s\\S]*)\\((.*)\\)', 'testGetRefs_HeadBranchNotBorn(org.eclipse.jgit.internal.storage.file.RefDirectoryTest)')","[258232, 259430]"
"('URIish.java', 'org.eclipse.jgit.transport.URIish', '<init>', '^(file):([\\\\/](?![\\\\/])((?:[A-Za-z]:)?[\\\\/]?(?:(?:[^\\\\/]+[\\\\/]+)*[^\\\\/]+[\\\\/]*)))$', 'http://me@1.2.3.4:80/D:\\x')",[33482]
"('Description.java', 'org.junit.runner.Description', 'methodAndClassNamePatternGroupOrDefault', '([\\s\\S]*)\\((.*)\\)', 'org.eclipse.jgit.treewalk.AbstractTreeIteratorTest')","[134387, 134711]"
"('Description.java', 'org.junit.runner.Description', 'methodAndClassNamePatternGroupOrDefault', '([\\s\\S]*)\\((.*)\\)', 'testDeleteLoosePackedRejected(org.eclipse.jgit.internal.storage.file.RefUpdateTest)')","[252893, 253718]"
"('URIish.java', 'org.eclipse.jgit.transport.URIish', '<init>', '^([a-z][a-z0-9+-]+)://(?:(?:([^/:@]+)(?::([^\\\\/]+))?@)?((?:[^\\\\/:]+)|(?:\\[[0-9a-f:]+\\]))(?::(\\d+))?((?:/~(?:[^\\\\/]+))?[\\\\/]))?(.+)?$', 'file:///tmp/jgit_test_1342417779279722556_tmp/tmp_9074189985993827829/.git/')",[174394]
"('URIish.java', 'org.eclipse.jgit.transport.URIish', '<init>', '^(file):([\\\\/](?![\\\\/])((?:[A-Za-z]:)?[\\\\/]?(?:(?:[^\\\\/]+[\\\\/]+)*[^\\\\/]+[\\\\/]*)))$', 'https://l usr\\example.com@example.com//abc')","[50502, 50686]"
"('Description.java', 'org.junit.runner.Description', 'methodAndClassNamePatternGroupOrDefault', '([\\s\\S]*)\\((.*)\\)', 'testXDigitGroupCase5[OldRule? true](org.eclipse.jgit.ignore.IgnoreRuleSpecialCasesTest)')","[152192, 159276]"
"('URIish.java', 'org.eclipse.jgit.transport.URIish', '<init>', '^(file):([\\\\/](?![\\\\/])((?:[A-Za-z]:)?[\\\\/]?(?:(?:[^\\\\/]+[\\\\/]+)*[^\\\\/]+[\\\\/]*)))$', 'file:///tmp/jgit_test_6811710720935520240_tmp/tmp_8740581029245250870/.git/')",[132879]
"('URIish.java', 'org.eclipse.jgit.transport.URIish', '<init>', '^(file):([\\\\/](?![\\\\/])((?:[A-Za-z]:)?[\\\\/]?(?:(?:[^\\\\/]+[\\\\/]+)*[^\\\\/]+[\\\\/]*)))$', '/tmp/jgit_test_3935765607714589377_tmp/tmp_2556057231773619862/.git')","[230168, 230302]"
"('URIish.java', 'org.eclipse.jgit.transport.URIish', '<init>', '^(file):([\\\\/](?![\\\\/])((?:[A-Za-z]:)?[\\\\/]?(?:(?:[^\\\\/]+[\\\\/]+)*[^\\\\/]+[\\\\/]*)))$', 'http://lusr\\example@example.com:1234/D:/x')",[35092]
"('Description.java', 'org.junit.runner.Description', 'methodAndClassNamePatternGroupOrDefault', '([\\s\\S]*)\\((.*)\\)', 'testCheckoutOutChangesAutoCRLFtrue(org.eclipse.jgit.lib.DirCacheCheckoutTest)')","[116809, 117798]"
"('Description.java', 'org.junit.runner.Description', 'methodAndClassNamePatternGroupOrDefault', '([\\s\\S]*)\\((.*)\\)', 'testGet(org.eclipse.jgit.util.BlockListTest)')","[180600, 180857]"
"('Description.java', 'org.junit.runner.Description', 'methodAndClassNamePatternGroupOrDefault', '([\\s\\S]*)\\((.*)\\)', 'testFastForwardOnlyNotPossible(org.eclipse.jgit.api.MergeCommandTest)')","[214248, 215188]"
"('Description.java', 'org.junit.runner.Description', 'methodAndClassNamePatternGroupOrDefault', '([\\s\\S]*)\\((.*)\\)', 'testRemove(org.eclipse.jgit.api.RmCommandTest)')","[216403, 216447]"
"('Description.java', 'org.junit.runner.Description', 'methodAndClassNamePatternGroupOrDefault', '([\\s\\S]*)\\((.*)\\)', 'testUpdateRefForwardWithCheck2(org.eclipse.jgit.internal.storage.file.RefUpdateTest)')","[253166, 254004]"
"('URIish.java', 'org.eclipse.jgit.transport.URIish', '<init>', '^(file):([\\\\/](?![\\\\/])((?:[A-Za-z]:)?[\\\\/]?(?:(?:[^\\\\/]+[\\\\/]+)*[^\\\\/]+[\\\\/]*)))$', 'https://lusr\\example:wtf@example.com:1234//')",[24836]
"('URIish.java', 'org.eclipse.jgit.transport.URIish', '<init>', '^(file):([\\\\/](?![\\\\/])((?:[A-Za-z]:)?[\\\\/]?(?:(?:[^\\\\/]+[\\\\/]+)*[^\\\\/]+[\\\\/]*)))$', 'file:/tmp/jgit_test_7445619050739236936_tmp/tmp_8875140664585085963/.git/')",[133251]
"('URIish.java', 'org.eclipse.jgit.transport.URIish', '<init>', '^(file):([\\\\/](?![\\\\/])((?:[A-Za-z]:)?[\\\\/]?(?:(?:[^\\\\/]+[\\\\/]+)*[^\\\\/]+[\\\\/]*)))$', '/tmp/jgit_test_6469622341025982846_tmp/tmp_1440713819350639853.git')",[81430]
"('QuotedString.java', 'org.eclipse.jgit.util.QuotedString$BourneUserPathStyle', 'quote', '^~[A-Za-z0-9_-]+$', 'a!b')","[193897, 193922]"
"('URIish.java', 'org.eclipse.jgit.transport.URIish', '<init>', '^([a-z][a-z0-9+-]+)://(?:(?:([^/:@]+)(?::([^\\\\/]+))?@)?((?:[^\\\\/:]+)|(?:\\[[0-9a-f:]+\\]))(?::(\\d+))?((?:/~(?:[^\\\\/]+))?[\\\\/]))?(.+)?$', 'ssh://me@1.2.3.4:80/D:\\x')",[26818]
"('Description.java', 'org.junit.runner.Description', 'methodAndClassNamePatternGroupOrDefault', '([\\s\\S]*)\\((.*)\\)', 'testVerySimplePatternCase3[OldRule? true](org.eclipse.jgit.ignore.IgnoreRuleSpecialCasesTest)')","[150306, 157390]"
"('Repository.java', 'org.eclipse.jgit.lib.Repository', 'resolve', '^-\\d+$', '-2')","[126921, 126948, 127086, 127113]"
"('Description.java', 'org.junit.runner.Description', 'methodAndClassNamePatternGroupOrDefault', '([\\s\\S]*)\\((.*)\\)', 'testMaliciousAbsoluteWindowsPath2(org.eclipse.jgit.lib.DirCacheCheckoutMaliciousPathTest)')","[112353, 113270]"
"('Description.java', 'org.junit.runner.Description', 'methodAndClassNamePatternGroupOrDefault', '([\\s\\S]*)\\((.*)\\)', 'testXDigitGroupCase5[OldRule? false](org.eclipse.jgit.ignore.IgnoreRuleSpecialCasesTest)')","[148629, 155734]"
"('Description.java', 'org.junit.runner.Description', 'methodAndClassNamePatternGroupOrDefault', '([\\s\\S]*)\\((.*)\\)', 'testLowerGroupCase0(org.eclipse.jgit.fnmatch.FileNameMatcherTest)')","[101692, 104985]"
"('URIish.java', 'org.eclipse.jgit.transport.URIish', '<init>', '^(?:([^/:@]+)(?::([^\\\\/]+))?@)?([^\\\\/:]{2,}):([\\\\/](?:(?:[^\\\\/]+[\\\\/]+)*[^\\\\/]+[\\\\/]*))$', '/abc/.git')",[68113]
"('Description.java', 'org.junit.runner.Description', 'methodAndClassNamePatternGroupOrDefault', '([\\s\\S]*)\\((.*)\\)', 'org.eclipse.jgit.internal.storage.file.GcPruneNonReferencedTest')","[256217, 257062]"
"('ChangeIdUtil.java', 'org.eclipse.jgit.util.ChangeIdUtil', 'indexOfFirstFooterLine', '(^[a-zA-Z0-9-]+:(?!//).*$)', 'e')",[191131]
"('Description.java', 'org.junit.runner.Description', 'methodAndClassNamePatternGroupOrDefault', '([\\s\\S]*)\\((.*)\\)', 'testAddWithoutParameterUpdate(org.eclipse.jgit.api.AddCommandTest)')","[234801, 235226]"
"('Description.java', 'org.junit.runner.Description', 'methodAndClassNamePatternGroupOrDefault', '([\\s\\S]*)\\((.*)\\)', 'resolveExprSimple(org.eclipse.jgit.lib.RepositoryResolveTest)')","[125323, 125794]"
"('URIish.java', 'org.eclipse.jgit.transport.URIish', '<init>', '^([a-z][a-z0-9+-]+)://(?:(?:([^/:@]+)(?::([^\\\\/]+))?@)?((?:[^\\\\/:]+)|(?:\\[[0-9a-f:]+\\]))(?::(\\d+))?((?:/~(?:[^\\\\/]+))?[\\\\/]))?(.+)?$', 'https://lusr\\example:wtf@1.2.3.4:1234//')",[25227]
"('Description.java', 'org.junit.runner.Description', 'methodAndClassNamePatternGroupOrDefault', '([\\s\\S]*)\\((.*)\\)', 'testEditDeleteConflict(org.eclipse.jgit.notes.NoteMapMergerTest)')","[199773, 200140]"
"('Description.java', 'org.junit.runner.Description', 'methodAndClassNamePatternGroupOrDefault', '([\\s\\S]*)\\((.*)\\)', 'testRegularCommitWithSob_ButNoBody(org.eclipse.jgit.util.ChangeIdUtilTest)')","[185504, 186248]"
"('Description.java', 'org.junit.runner.Description', 'methodAndClassNamePatternGroupOrDefault', '([\\s\\S]*)\\((.*)\\)', 'concurrentRepack(org.eclipse.jgit.internal.storage.file.GcConcurrentTest)')","[254857, 254879]"
"('URIish.java', 'org.eclipse.jgit.transport.URIish', '<init>', '^(file):([\\\\/](?![\\\\/])((?:[A-Za-z]:)?[\\\\/]?(?:(?:[^\\\\/]+[\\\\/]+)*[^\\\\/]+[\\\\/]*)))$', 'ssh://l usr\\example.com@example.com:1234//')",[27209]
"('Description.java', 'org.junit.runner.Description', 'methodAndClassNamePatternGroupOrDefault', '([\\s\\S]*)\\((.*)\\)', 'testMixedGroupCase2(org.eclipse.jgit.fnmatch.FileNameMatcherTest)')","[101314, 104589]"
"('Description.java', 'org.junit.runner.Description', 'methodAndClassNamePatternGroupOrDefault', '([\\s\\S]*)\\((.*)\\)', 'org.eclipse.jgit.util.TemporaryBufferTest')","[178301, 179049]"
"('URIish.java', 'org.eclipse.jgit.transport.URIish', '<init>', '^([a-z][a-z0-9+-]+)://(?:(?:([^/:@]+)(?::([^\\\\/]+))?@)?((?:[^\\\\/:]+)|(?:\\[[0-9a-f:]+\\]))(?::(\\d+))?((?:/~(?:[^\\\\/]+))?[\\\\/]))?(.+)?$', 'http://lusr\\example@1.2.3.4:80/D:/x')",[35667]
"('URIish.java', 'org.eclipse.jgit.transport.URIish', '<init>', '^(file):([\\\\/](?![\\\\/])((?:[A-Za-z]:)?[\\\\/]?(?:(?:[^\\\\/]+[\\\\/]+)*[^\\\\/]+[\\\\/]*)))$', 'file:///tmp/jgit_test_6905220243359603297_tmp/tmp_240630787012220869/.git/')","[243987, 244222]"
"('Description.java', 'org.junit.runner.Description', 'methodAndClassNamePatternGroupOrDefault', '([\\s\\S]*)\\((.*)\\)', 'testGetRefs_DiscoversDeletedLoose4(org.eclipse.jgit.internal.storage.file.RefDirectoryTest)')","[258337, 259540]"
"('Description.java', 'org.junit.runner.Description', 'methodAndClassNamePatternGroupOrDefault', '([\\s\\S]*)\\((.*)\\)', 'testMaliciousGitPathEndDotWindows1(org.eclipse.jgit.lib.DirCacheCheckoutMaliciousPathTest)')","[111807, 112698]"
"('Description.java', 'org.junit.runner.Description', 'methodAndClassNamePatternGroupOrDefault', '([\\s\\S]*)\\((.*)\\)', 'testValidTreeSorting5(org.eclipse.jgit.lib.ObjectCheckerTest)')","[121511, 123623]"
"('Description.java', 'org.junit.runner.Description', 'methodAndClassNamePatternGroupOrDefault', '([\\s\\S]*)\\((.*)\\)', 'org.eclipse.jgit.lib.RepositoryResolveTest')","[125134, 126159]"
"('Description.java', 'org.junit.runner.Description', 'methodAndClassNamePatternGroupOrDefault', '([\\s\\S]*)\\((.*)\\)', 'testAlias_OptionsKeywordCaseInsensitive(org.eclipse.jgit.transport.OpenSshConfigTest)')","[3554, 3966]"
"('URIish.java', 'org.eclipse.jgit.transport.URIish', '<init>', '^(file):([\\\\/](?![\\\\/])((?:[A-Za-z]:)?[\\\\/]?(?:(?:[^\\\\/]+[\\\\/]+)*[^\\\\/]+[\\\\/]*)))$', 'http://l usr\\example.com@1.2.3.4//abc')","[47558, 47742]"
"('URIish.java', 'org.eclipse.jgit.transport.URIish', '<init>', '^(?:([^/:@]+)(?::([^\\\\/]+))?@)?([^\\\\/:]{2,}):([\\\\/](?:(?:[^\\\\/]+[\\\\/]+)*[^\\\\/]+[\\\\/]*))$', '/tmp/jgit_test_5112799029350695586_tmp/tmp_3931614780195894737.git')",[74783]
"('URIish.java', 'org.eclipse.jgit.transport.URIish', '<init>', '^(file):([\\\\/](?![\\\\/])((?:[A-Za-z]:)?[\\\\/]?(?:(?:[^\\\\/]+[\\\\/]+)*[^\\\\/]+[\\\\/]*)))$', 'file:/tmp/jgit_test_8267827428869162458_tmp/tmp_1582337896300637096/testCloneRepositoryWithNestedSubmodules1/.git/')","[205025, 205836]"
"('Description.java', 'org.junit.runner.Description', 'methodAndClassNamePatternGroupOrDefault', '([\\s\\S]*)\\((.*)\\)', 'testPrintGroupCase0[OldRule? false](org.eclipse.jgit.ignore.IgnoreRuleSpecialCasesTest)')","[147939, 155044]"
"('URIish.java', 'org.eclipse.jgit.transport.URIish', '<init>', '^(file):([\\\\/](?![\\\\/])((?:[A-Za-z]:)?[\\\\/]?(?:(?:[^\\\\/]+[\\\\/]+)*[^\\\\/]+[\\\\/]*)))$', 'file:///tmp/jgit_test_3766881034479946510_tmp/tmp_3002358776781837063/.git/')",[133880]
"('FastIgnoreRule.java', 'org.eclipse.jgit.ignore.FastIgnoreRule', 'isMatch', '.rc', 'file')",[144461]
"('Description.java', 'org.junit.runner.Description', 'methodAndClassNamePatternGroupOrDefault', '([\\s\\S]*)\\((.*)\\)', 'testStandardFormat_GarbageAfterSize(org.eclipse.jgit.internal.storage.file.UnpackedObjectTest)')","[255106, 255429]"
"('URIish.java', 'org.eclipse.jgit.transport.URIish', '<init>', '^([a-z][a-z0-9+-]+)://(?:(?:([^/:@]+)(?::([^\\\\/]+))?@)?((?:[^\\\\/:]+)|(?:\\[[0-9a-f:]+\\]))(?::(\\d+))?((?:/~(?:[^\\\\/]+))?[\\\\/]))?(.+)?$', 'http://me@1.2.3.4:80//abc')",[33413]
"('URIish.java', 'org.eclipse.jgit.transport.URIish', '<init>', '^([a-z][a-z0-9+-]+)://(?:(?:([^/:@]+)(?::([^\\\\/]+))?@)?((?:[^\\\\/:]+)|(?:\\[[0-9a-f:]+\\]))(?::(\\d+))?((?:/~(?:[^\\\\/]+))?[\\\\/]))?(.+)?$', 'ssh://lusr\\example:wtf@example.com:1234/D:\\x')",[12463]
"('URIish.java', 'org.eclipse.jgit.transport.URIish', '<init>', '^(file):([\\\\/](?![\\\\/])((?:[A-Za-z]:)?[\\\\/]?(?:(?:[^\\\\/]+[\\\\/]+)*[^\\\\/]+[\\\\/]*)))$', 'ssh+git://1.2.3.4/D:/x')","[56436, 56620, 57540, 57724, 58644, 58828]"
"('FastIgnoreRule.java', 'org.eclipse.jgit.ignore.FastIgnoreRule', 'isMatch', '[A\\p{Ll}C3-5]', 'B')",[160446]
"('Description.java', 'org.junit.runner.Description', 'methodAndClassNamePatternGroupOrDefault', '([\\s\\S]*)\\((.*)\\)', 'testIteratorMethodsContract(org.eclipse.jgit.internal.storage.file.PackIndexV2Test)')","[248070, 248198]"
"('URIish.java', 'org.eclipse.jgit.transport.URIish', '<init>', '^([a-z][a-z0-9+-]+)://(?:(?:([^/:@]+)(?::([^\\\\/]+))?@)?((?:[^\\\\/:]+)|(?:\\[[0-9a-f:]+\\]))(?::(\\d+))?((?:/~(?:[^\\\\/]+))?[\\\\/]))?(.+)?$', 'ssh+git://me@example.com:80//')",[29687]
"('URIish.java', 'org.eclipse.jgit.transport.URIish', '<init>', '^(file):([\\\\/](?![\\\\/])((?:[A-Za-z]:)?[\\\\/]?(?:(?:[^\\\\/]+[\\\\/]+)*[^\\\\/]+[\\\\/]*)))$', 'ssh+git://l usr\\example.com@[::1]:1234//')",[31320]
"('ChangeIdUtil.java', 'org.eclipse.jgit.util.ChangeIdUtil', 'indexOfChangeId', '(^Change-Id: *I[a-f0-9]{40}$)', 'c')",[191053]
"('Description.java', 'org.junit.runner.Description', 'methodAndClassNamePatternGroupOrDefault', '([\\s\\S]*)\\((.*)\\)', 'testFreakingHugePathName(org.eclipse.jgit.treewalk.CanonicalTreeParserTest)')","[136111, 136438]"
"('URIish.java', 'org.eclipse.jgit.transport.URIish', '<init>', '^(file):([\\\\/](?![\\\\/])((?:[A-Za-z]:)?[\\\\/]?(?:(?:[^\\\\/]+[\\\\/]+)*[^\\\\/]+[\\\\/]*)))$', 'file:///tmp/jgit_test_2890579450514771731_tmp/tmp_434550698765585976/.git/')",[245936]
"('Description.java', 'org.junit.runner.Description', 'methodAndClassNamePatternGroupOrDefault', '([\\s\\S]*)\\((.*)\\)', 'org.eclipse.jgit.merge.MergeMessageFormatterTest')","[88800, 89676]"
"('Description.java', 'org.junit.runner.Description', 'methodAndClassNamePatternGroupOrDefault', '([\\s\\S]*)\\((.*)\\)', 'testTimeout_readByte_Timeout(org.eclipse.jgit.util.io.TimeoutInputStreamTest)')","[173886, 174058]"
"('Description.java', 'org.junit.runner.Description', 'methodAndClassNamePatternGroupOrDefault', '([\\s\\S]*)\\((.*)\\)', 'testEdit_NoUniqueMiddleSide_FlipBlocks(org.eclipse.jgit.diff.HistogramDiffTest)')","[98506, 99077]"
"('ChangeIdUtil.java', 'org.eclipse.jgit.util.ChangeIdUtil', 'indexOfChangeId', '(^Change-Id: *I[a-f0-9]{40}$)', 'a two lines')",[187690]
"('URIish.java', 'org.eclipse.jgit.transport.URIish', '<init>', '^(file):([\\\\/](?![\\\\/])((?:[A-Za-z]:)?[\\\\/]?(?:(?:[^\\\\/]+[\\\\/]+)*[^\\\\/]+[\\\\/]*)))$', 'ssh+git://l usr\\example.com@1.2.3.4:1234/D:\\x')",[31090]
"('URIish.java', 'org.eclipse.jgit.transport.URIish', '<init>', '^(file):([\\\\/](?![\\\\/])((?:[A-Za-z]:)?[\\\\/]?(?:(?:[^\\\\/]+[\\\\/]+)*[^\\\\/]+[\\\\/]*)))$', 'ssh://l usr\\example.com:wtf@1.2.3.4:1234/D:/x')",[11578]
"('FastIgnoreRule.java', 'org.eclipse.jgit.ignore.FastIgnoreRule', 'isMatch', 'a.', 'ab')","[168641, 168668, 168695, 168722, 168776, 168830, 168884, 168938, 168992, 169046, 169073, 169100, 169127, 169154, 169208, 169262, 169343, 169424, 169451, 169478, 169505, 169532, 169559, 169586, 169613, 169640, 169667, 169694, 169721, 169748]"
"('Description.java', 'org.junit.runner.Description', 'methodAndClassNamePatternGroupOrDefault', '([\\s\\S]*)\\((.*)\\)', 'testXDigitGroupCase2(org.eclipse.jgit.fnmatch.FileNameMatcherTest)')","[103540, 106921]"
"('URIish.java', 'org.eclipse.jgit.transport.URIish', '<init>', '^([a-z][a-z0-9+-]+)://(?:(?:([^/:@]+)(?::([^\\\\/]+))?@)?((?:[^\\\\/:]+)|(?:\\[[0-9a-f:]+\\]))(?::(\\d+))?((?:/~(?:[^\\\\/]+))?[\\\\/]))?(.+)?$', 'https://lusr\\example:wtf@[::1]:80/D:/x')",[25871]
"('Description.java', 'org.junit.runner.Description', 'methodAndClassNamePatternGroupOrDefault', '([\\s\\S]*)\\((.*)\\)', 'testFastIterator(org.eclipse.jgit.util.BlockListTest)')","[180705, 180967]"
"('URIish.java', 'org.eclipse.jgit.transport.URIish', '<init>', '^([a-z][a-z0-9+-]+)://(?:(?:([^/:@]+)(?::([^\\\\/]+))?@)?((?:[^\\\\/:]+)|(?:\\[[0-9a-f:]+\\]))(?::(\\d+))?((?:/~(?:[^\\\\/]+))?[\\\\/]))?(.+)?$', 'https://l usr\\example.com@example.com:80/D:\\x')",[37553]
"('Description.java', 'org.junit.runner.Description', 'methodAndClassNamePatternGroupOrDefault', '([\\s\\S]*)\\((.*)\\)', 'testParse_explicit_bad_encoded(org.eclipse.jgit.revwalk.RevCommitParseTest)')","[84268, 84722]"
"('URIish.java', 'org.eclipse.jgit.transport.URIish', '<init>', '^([a-z][a-z0-9+-]+)://(?:(?:([^/:@]+)(?::([^\\\\/]+))?@)?((?:[^\\\\/:]+)|(?:\\[[0-9a-f:]+\\]))(?::(\\d+))?((?:/~(?:[^\\\\/]+))?[\\\\/]))?(.+)?$', 'ssh://lusr\\example@example.com:80//abc')",[28629]
"('Description.java', 'org.junit.runner.Description', 'methodAndClassNamePatternGroupOrDefault', '([\\s\\S]*)\\((.*)\\)', 'shouldWorkInNormalCase(org.eclipse.jgit.lib.BranchTrackingStatusTest)')","[117900, 117964]"
"('Description.java', 'org.junit.runner.Description', 'methodAndClassNamePatternGroupOrDefault', '([\\s\\S]*)\\((.*)\\)', 'test4(org.eclipse.jgit.revwalk.RevWalkPathFilter6012Test)')","[85762, 85913]"
"('Description.java', 'org.junit.runner.Description', 'methodAndClassNamePatternGroupOrDefault', '([\\s\\S]*)\\((.*)\\)', 'testSshProto(org.eclipse.jgit.transport.URIishTest)')","[2855, 5190]"
"('Description.java', 'org.junit.runner.Description', 'methodAndClassNamePatternGroupOrDefault', '([\\s\\S]*)\\((.*)\\)', 'testCommitTimeRevFilter(org.eclipse.jgit.revwalk.RevWalkFilterTest)')","[83356, 83709]"
"('URIish.java', 'org.eclipse.jgit.transport.URIish', '<init>', '^([a-z][a-z0-9+-]+)://(?:(?:([^/:@]+)(?::([^\\\\/]+))?@)?((?:[^\\\\/:]+)|(?:\\[[0-9a-f:]+\\]))(?::(\\d+))?((?:/~(?:[^\\\\/]+))?[\\\\/]))?(.+)?$', 'https://me:wtf@[::1]:80//abc')",[23617]
"('Description.java', 'org.junit.runner.Description', 'methodAndClassNamePatternGroupOrDefault', '([\\s\\S]*)\\((.*)\\)', 'testEncodeInt32(org.eclipse.jgit.util.NBTest)')","[184914, 185089]"
"('Description.java', 'org.junit.runner.Description', 'methodAndClassNamePatternGroupOrDefault', '([\\s\\S]*)\\((.*)\\)', 'testEmptyValueNoLF(org.eclipse.jgit.revwalk.FooterLineTest)')","[77670, 78083]"
"('Description.java', 'org.junit.runner.Description', 'methodAndClassNamePatternGroupOrDefault', '([\\s\\S]*)\\((.*)\\)', 'testBuildOneFile_FinishWriteCommit(org.eclipse.jgit.dircache.DirCacheBuilderTest)')","[91694, 91884]"
"('Description.java', 'org.junit.runner.Description', 'methodAndClassNamePatternGroupOrDefault', '([\\s\\S]*)\\((.*)\\)', 'testOnlyOption_f1_13_a(org.eclipse.jgit.api.CommitOnlyTest)')","[237539, 239636]"
"('URIish.java', 'org.eclipse.jgit.transport.URIish', '<init>', '^([a-z][a-z0-9+-]+)://(?:(?:([^/:@]+)(?::([^\\\\/]+))?@)?((?:[^\\\\/:]+)|(?:\\[[0-9a-f:]+\\]))(?::(\\d+))?((?:/~(?:[^\\\\/]+))?[\\\\/]))?(.+)?$', 'file:///tmp/jgit_test_3702206072697457221_tmp/tmp_3106514423251538628')","[211937, 211999, 212770, 212946, 215372, 215434]"
"('URIish.java', 'org.eclipse.jgit.transport.URIish', '<init>', '^([a-z][a-z0-9+-]+)://(?:(?:([^/:@]+)(?::([^\\\\/]+))?@)?((?:[^\\\\/:]+)|(?:\\[[0-9a-f:]+\\]))(?::(\\d+))?((?:/~(?:[^\\\\/]+))?[\\\\/]))?(.+)?$', 'ssh+git://me@1.2.3.4:80//abc')",[30101]
"('Description.java', 'org.junit.runner.Description', 'methodAndClassNamePatternGroupOrDefault', '([\\s\\S]*)\\((.*)\\)', 'indexDelete(org.eclipse.jgit.api.StashCreateCommandTest)')","[202466, 202814]"
"('Description.java', 'org.junit.runner.Description', 'methodAndClassNamePatternGroupOrDefault', '([\\s\\S]*)\\((.*)\\)', 'testRebaseShouldNotFailIfUserAddCommentLinesInPrepareSteps(org.eclipse.jgit.api.RebaseCommandTest)')","[217879, 219378]"
"('Description.java', 'org.junit.runner.Description', 'methodAndClassNamePatternGroupOrDefault', '([\\s\\S]*)\\((.*)\\)', 'logAllCommitsWithSkipAndMaxCount(org.eclipse.jgit.api.LogCommandTest)')","[231550, 231700]"
"('URIish.java', 'org.eclipse.jgit.transport.URIish', '<init>', '^(file):([\\\\/](?![\\\\/])((?:[A-Za-z]:)?[\\\\/]?(?:(?:[^\\\\/]+[\\\\/]+)*[^\\\\/]+[\\\\/]*)))$', 'ssh+git://lusr\\example@example.com/D:\\x')","[45074, 45258]"
"('Description.java', 'org.junit.runner.Description', 'methodAndClassNamePatternGroupOrDefault', '([\\s\\S]*)\\((.*)\\)', 'org.eclipse.jgit.lib.ThreadSafeProgressMonitorTest')","[110071, 110223]"
"('Description.java', 'org.junit.runner.Description', 'methodAndClassNamePatternGroupOrDefault', '([\\s\\S]*)\\((.*)\\)', 'testDigitGroupCase0[OldRule? false](org.eclipse.jgit.ignore.IgnoreRuleSpecialCasesTest)')","[147318, 154423]"
"('Description.java', 'org.junit.runner.Description', 'methodAndClassNamePatternGroupOrDefault', '([\\s\\S]*)\\((.*)\\)', 'test008_FailOnWrongVersion(org.eclipse.jgit.internal.storage.file.T0003_BasicTest)')","[249335, 249879]"
"('URIish.java', 'org.eclipse.jgit.transport.URIish', '<init>', '^([a-z][a-z0-9+-]+)://(?:(?:([^/:@]+)(?::([^\\\\/]+))?@)?((?:[^\\\\/:]+)|(?:\\[[0-9a-f:]+\\]))(?::(\\d+))?((?:/~(?:[^\\\\/]+))?[\\\\/]))?(.+)?$', 'ssh+git://me@1.2.3.4/D:\\x')","[43257, 43441]"
"('Description.java', 'org.junit.runner.Description', 'methodAndClassNamePatternGroupOrDefault', '([\\s\\S]*)\\((.*)\\)', 'testRebaseInteractiveEdit(org.eclipse.jgit.api.RebaseCommandTest)')","[217942, 219444]"
"('URIish.java', 'org.eclipse.jgit.transport.URIish', '<init>', '^(file):([\\\\/](?![\\\\/])((?:[A-Za-z]:)?[\\\\/]?(?:(?:[^\\\\/]+[\\\\/]+)*[^\\\\/]+[\\\\/]*)))$', 'ssh://lusr\\example:wtf@1.2.3.4:80//abc')",[13026]
"('URIish.java', 'org.eclipse.jgit.transport.URIish', '<init>', '^(file):([\\\\/](?![\\\\/])((?:[A-Za-z]:)?[\\\\/]?(?:(?:[^\\\\/]+[\\\\/]+)*[^\\\\/]+[\\\\/]*)))$', 'ssh://l usr\\example.com:wtf@example.com:80//abc')",[11053]
"('Description.java', 'org.junit.runner.Description', 'methodAndClassNamePatternGroupOrDefault', '([\\s\\S]*)\\((.*)\\)', 'test(org.eclipse.jgit.ignore.BasicRuleTest)')","[141156, 141178]"
"('Description.java', 'org.junit.runner.Description', 'methodAndClassNamePatternGroupOrDefault', '([\\s\\S]*)\\((.*)\\)', 'testEmptyTree_NoTreeWalk(org.eclipse.jgit.dircache.DirCacheIteratorTest)')","[92624, 92866]"
"('URIish.java', 'org.eclipse.jgit.transport.URIish', '<init>', '^(file):([\\\\/](?![\\\\/])((?:[A-Za-z]:)?[\\\\/]?(?:(?:[^\\\\/]+[\\\\/]+)*[^\\\\/]+[\\\\/]*)))$', 'ssh://me@[::1]//abc')","[40198, 40382]"
"('Description.java', 'org.junit.runner.Description', 'methodAndClassNamePatternGroupOrDefault', '([\\s\\S]*)\\((.*)\\)', 'testCheckoutWithConflict(org.eclipse.jgit.api.CheckoutCommandTest)')","[206765, 207272]"
"('Description.java', 'org.junit.runner.Description', 'methodAndClassNamePatternGroupOrDefault', '([\\s\\S]*)\\((.*)\\)', 'testStandardFormat_SmallObject_CorruptZLibStream(org.eclipse.jgit.internal.storage.file.UnpackedObjectTest)')","[255232, 255561]"
"('Description.java', 'org.junit.runner.Description', 'methodAndClassNamePatternGroupOrDefault', '([\\s\\S]*)\\((.*)\\)', 'testInversedGroupCase2(org.eclipse.jgit.fnmatch.FileNameMatcherTest)')","[102091, 105403]"
"('Description.java', 'org.junit.runner.Description', 'methodAndClassNamePatternGroupOrDefault', '([\\s\\S]*)\\((.*)\\)', 'testRebaseInteractiveReword(org.eclipse.jgit.api.RebaseCommandTest)')","[217837, 219334]"
"('Description.java', 'org.junit.runner.Description', 'methodAndClassNamePatternGroupOrDefault', '([\\s\\S]*)\\((.*)\\)', 'testDeleteMaster(org.eclipse.jgit.transport.RefSpecTest)')","[13744, 15348]"
"('URIish.java', 'org.eclipse.jgit.transport.URIish', '<init>', '^([a-z][a-z0-9+-]+)://(?:(?:([^/:@]+)(?::([^\\\\/]+))?@)?((?:[^\\\\/:]+)|(?:\\[[0-9a-f:]+\\]))(?::(\\d+))?((?:/~(?:[^\\\\/]+))?[\\\\/]))?(.+)?$', 'ssh://l usr\\example.com:wtf@[::1]:80/D:\\x')",[12222]
"('Description.java', 'org.junit.runner.Description', 'methodAndClassNamePatternGroupOrDefault', '([\\s\\S]*)\\((.*)\\)', 'testRenameBranchAlsoInPack(org.eclipse.jgit.internal.storage.file.RefUpdateTest)')","[253376, 254224]"
"('URIish.java', 'org.eclipse.jgit.transport.URIish', '<init>', '^([a-z][a-z0-9+-]+)://(?:(?:([^/:@]+)(?::([^\\\\/]+))?@)?((?:[^\\\\/:]+)|(?:\\[[0-9a-f:]+\\]))(?::(\\d+))?((?:/~(?:[^\\\\/]+))?[\\\\/]))?(.+)?$', 'ssh://[::1]//')","[53423, 53607, 54527, 54711, 55631, 55815]"
"('Description.java', 'org.junit.runner.Description', 'methodAndClassNamePatternGroupOrDefault', '([\\s\\S]*)\\((.*)\\)', 'testNameOnlyMatches[OldRule? true](org.eclipse.jgit.ignore.IgnoreMatcherParametrizedTest)')","[141643, 141965]"
"('URIish.java', 'org.eclipse.jgit.transport.URIish', '<init>', '^(file):([\\\\/](?![\\\\/])((?:[A-Za-z]:)?[\\\\/]?(?:(?:[^\\\\/]+[\\\\/]+)*[^\\\\/]+[\\\\/]*)))$', 'ssh://l usr\\example.com:wtf@1.2.3.4:80/D:\\x')",[11831]
"('Description.java', 'org.junit.runner.Description', 'methodAndClassNamePatternGroupOrDefault', '([\\s\\S]*)\\((.*)\\)', 'testGetRefs_DiscoversNewLoose1(org.eclipse.jgit.internal.storage.file.RefDirectoryTest)')","[258421, 259628]"
"('Description.java', 'org.junit.runner.Description', 'methodAndClassNamePatternGroupOrDefault', '([\\s\\S]*)\\((.*)\\)', 'testExceedsChainLength_DuringScanOfA(org.eclipse.jgit.diff.HistogramDiffTest)')","[98443, 99011]"
"('Description.java', 'org.junit.runner.Description', 'methodAndClassNamePatternGroupOrDefault', '([\\s\\S]*)\\((.*)\\)', 'testMixedGroupCase5[OldRule? true](org.eclipse.jgit.ignore.IgnoreRuleSpecialCasesTest)')","[149754, 156838]"
"('URIish.java', 'org.eclipse.jgit.transport.URIish', '<init>', '^([a-z][a-z0-9+-]+)://(?:(?:([^/:@]+)(?::([^\\\\/]+))?@)?((?:[^\\\\/:]+)|(?:\\[[0-9a-f:]+\\]))(?::(\\d+))?((?:/~(?:[^\\\\/]+))?[\\\\/]))?(.+)?$', 'https://l usr\\example.com@[::1]:1234/D:\\x')",[38105]
"('Description.java', 'org.junit.runner.Description', 'methodAndClassNamePatternGroupOrDefault', '([\\s\\S]*)\\((.*)\\)', 'testForbiddenWindowsNamesOnUnixEgCon(org.eclipse.jgit.lib.DirCacheCheckoutMaliciousPathTest)')","[112269, 113182]"
"('Description.java', 'org.junit.runner.Description', 'methodAndClassNamePatternGroupOrDefault', '([\\s\\S]*)\\((.*)\\)', 'emptyStashReflog(org.eclipse.jgit.api.StashListCommandTest)')","[226607, 226694]"
"('ChangeIdUtil.java', 'org.eclipse.jgit.util.ChangeIdUtil', 'indexOfChangeId', '(^Change-Id: *I[a-f0-9]{40}$)', '\t Change-Id:  I3b7e4e16b503ce00f07ba6ad01d97a356dad7701')",[187316]
"('Description.java', 'org.junit.runner.Description', 'methodAndClassNamePatternGroupOrDefault', '([\\s\\S]*)\\((.*)\\)', 'testGitProtoUnixPort(org.eclipse.jgit.transport.URIishTest)')","[2383, 4926]"
"('URIish.java', 'org.eclipse.jgit.transport.URIish', '<init>', '^([a-z][a-z0-9+-]+)://(?:(?:([^/:@]+)(?::([^\\\\/]+))?@)?((?:[^\\\\/:]+)|(?:\\[[0-9a-f:]+\\]))(?::(\\d+))?((?:/~(?:[^\\\\/]+))?[\\\\/]))?(.+)?$', 'file:///tmp/jgit_test_4047924909598757188_tmp/tmp_5305605284190767544/.git/')",[209991]
"('Description.java', 'org.junit.runner.Description', 'methodAndClassNamePatternGroupOrDefault', '([\\s\\S]*)\\((.*)\\)', 'testEdit_CommonReplaceCommonDeleteCommon(org.eclipse.jgit.diff.MyersDiffTest)')","[97316, 97756]"
"('Description.java', 'org.junit.runner.Description', 'methodAndClassNamePatternGroupOrDefault', '([\\s\\S]*)\\((.*)\\)', 'org.eclipse.jgit.util.Base64Test')","[183343, 183538]"
"('URIish.java', 'org.eclipse.jgit.transport.URIish', '<init>', '^([a-z][a-z0-9+-]+)://(?:(?:([^/:@]+)(?::([^\\\\/]+))?@)?((?:[^\\\\/:]+)|(?:\\[[0-9a-f:]+\\]))(?::(\\d+))?((?:/~(?:[^\\\\/]+))?[\\\\/]))?(.+)?$', 'http://lusr\\example@example.com:1234/D:\\x')",[35161]
"('Description.java', 'org.junit.runner.Description', 'methodAndClassNamePatternGroupOrDefault', '([\\s\\S]*)\\((.*)\\)', 'testReadFromInserterSmallObjects(org.eclipse.jgit.internal.storage.dfs.DfsInserterTest)')","[246045, 246151]"
"('Description.java', 'org.junit.runner.Description', 'methodAndClassNamePatternGroupOrDefault', '([\\s\\S]*)\\((.*)\\)', 'testSet_Replace(org.eclipse.jgit.notes.LeafBucketTest)')","[198269, 198511]"
"('Description.java', 'org.junit.runner.Description', 'methodAndClassNamePatternGroupOrDefault', '([\\s\\S]*)\\((.*)\\)', 'testCreateSymlink(org.eclipse.jgit.util.FileUtilTest)')","[176533, 176870]"
"('Description.java', 'org.junit.runner.Description', 'methodAndClassNamePatternGroupOrDefault', '([\\s\\S]*)\\((.*)\\)', 'org.eclipse.jgit.storage.file.FileBasedConfigTest')","[194134, 194329]"
"('Description.java', 'org.junit.runner.Description', 'methodAndClassNamePatternGroupOrDefault', '([\\s\\S]*)\\((.*)\\)', 'testEquals1(org.eclipse.jgit.diff.EditTest)')","[99808, 100145]"
"('Description.java', 'org.junit.runner.Description', 'methodAndClassNamePatternGroupOrDefault', '([\\s\\S]*)\\((.*)\\)', 'testSpaceGroupCase4[OldRule? true](org.eclipse.jgit.ignore.IgnoreRuleSpecialCasesTest)')","[150651, 157735]"
"('URIish.java', 'org.eclipse.jgit.transport.URIish', '<init>', '^([a-z][a-z0-9+-]+)://(?:(?:([^/:@]+)(?::([^\\\\/]+))?@)?((?:[^\\\\/:]+)|(?:\\[[0-9a-f:]+\\]))(?::(\\d+))?((?:/~(?:[^\\\\/]+))?[\\\\/]))?(.+)?$', 'ssh://l usr\\example.com:wtf@1.2.3.4:80/D:/x')",[11808]
"('Description.java', 'org.junit.runner.Description', 'methodAndClassNamePatternGroupOrDefault', '([\\s\\S]*)\\((.*)\\)', 'testRemoveSlowPath(org.eclipse.jgit.util.BlockListTest)')","[180726, 180989]"
"('Description.java', 'org.junit.runner.Description', 'methodAndClassNamePatternGroupOrDefault', '([\\s\\S]*)\\((.*)\\)', 'testInvalidCommitInvalidAuthor1(org.eclipse.jgit.lib.ObjectCheckerTest)')","[121721, 123843]"
"('URIish.java', 'org.eclipse.jgit.transport.URIish', '<init>', '^(file):([\\\\/](?![\\\\/])((?:[A-Za-z]:)?[\\\\/]?(?:(?:[^\\\\/]+[\\\\/]+)*[^\\\\/]+[\\\\/]*)))$', 'http://me:wtf@example.com:1234//abc')",[18726]
"('Description.java', 'org.junit.runner.Description', 'methodAndClassNamePatternGroupOrDefault', '([\\s\\S]*)\\((.*)\\)', 'testCreateAndList(org.eclipse.jgit.api.BranchCommandTest)')","[227072, 227394]"
"('Description.java', 'org.junit.runner.Description', 'methodAndClassNamePatternGroupOrDefault', '([\\s\\S]*)\\((.*)\\)', 'testDequote_Empty1(org.eclipse.jgit.util.QuotedStringBourneUserPathStyleTest)')","[192450, 192704]"
"('Description.java', 'org.junit.runner.Description', 'methodAndClassNamePatternGroupOrDefault', '([\\s\\S]*)\\((.*)\\)', 'testResetHard(org.eclipse.jgit.lib.DirCacheCheckoutTest)')","[115927, 116874]"
"('FastIgnoreRule.java', 'org.eclipse.jgit.ignore.FastIgnoreRule', 'isMatch', '[a-c-e]', 'e')",[160264]
"('Description.java', 'org.junit.runner.Description', 'methodAndClassNamePatternGroupOrDefault', '([\\s\\S]*)\\((.*)\\)', 'testGetRefs_SkipsLockFiles(org.eclipse.jgit.internal.storage.file.RefDirectoryTest)')","[258484, 259694]"
"('Description.java', 'org.junit.runner.Description', 'methodAndClassNamePatternGroupOrDefault', '([\\s\\S]*)\\((.*)\\)', 'org.eclipse.jgit.dircache.DirCacheFindTest')","[92925, 92991]"
"('Description.java', 'org.junit.runner.Description', 'methodAndClassNamePatternGroupOrDefault', '([\\s\\S]*)\\((.*)\\)', 'test2AlphaGroupsCase0(org.eclipse.jgit.fnmatch.FileNameMatcherTest)')","[101965, 105271]"
"('Description.java', 'org.junit.runner.Description', 'methodAndClassNamePatternGroupOrDefault', '([\\s\\S]*)\\((.*)\\)', 'testAdjacentModifications(org.eclipse.jgit.merge.MergeAlgorithmTest)')","[87225, 87531]"
"('Description.java', 'org.junit.runner.Description', 'methodAndClassNamePatternGroupOrDefault', '([\\s\\S]*)\\((.*)\\)', 'testAddLargeBlocks(org.eclipse.jgit.revwalk.FIFORevQueueTest)')","[85445, 85575]"
"('URIish.java', 'org.eclipse.jgit.transport.URIish', '<init>', '^(file):([\\\\/](?![\\\\/])((?:[A-Za-z]:)?[\\\\/]?(?:(?:[^\\\\/]+[\\\\/]+)*[^\\\\/]+[\\\\/]*)))$', 'https://lusr\\example@example.com:1234/D:/x')",[38404]
"('Description.java', 'org.junit.runner.Description', 'methodAndClassNamePatternGroupOrDefault', '([\\s\\S]*)\\((.*)\\)', 'testMixedGroupCase0[OldRule? true](org.eclipse.jgit.ignore.IgnoreRuleSpecialCasesTest)')","[149639, 156723]"
"('URIish.java', 'org.eclipse.jgit.transport.URIish', '<init>', '^([a-z][a-z0-9+-]+)://(?:(?:([^/:@]+)(?::([^\\\\/]+))?@)?((?:[^\\\\/:]+)|(?:\\[[0-9a-f:]+\\]))(?::(\\d+))?((?:/~(?:[^\\\\/]+))?[\\\\/]))?(.+)?$', 'ssh://lusr\\example:wtf@1.2.3.4:1234/D:\\x')",[12957]
"('URIish.java', 'org.eclipse.jgit.transport.URIish', '<init>', '^([a-z][a-z0-9+-]+)://(?:(?:([^/:@]+)(?::([^\\\\/]+))?@)?((?:[^\\\\/:]+)|(?:\\[[0-9a-f:]+\\]))(?::(\\d+))?((?:/~(?:[^\\\\/]+))?[\\\\/]))?(.+)?$', 'http://l usr\\example.com@[::1]:1234/D:\\x')",[34793]
"('Description.java', 'org.junit.runner.Description', 'methodAndClassNamePatternGroupOrDefault', '([\\s\\S]*)\\((.*)\\)', 'testMergeConflictWithMessageOption(org.eclipse.jgit.api.MergeCommandTest)')","[213912, 214836]"
"('Description.java', 'org.junit.runner.Description', 'methodAndClassNamePatternGroupOrDefault', '([\\s\\S]*)\\((.*)\\)', 'org.eclipse.jgit.submodule.SubmoduleInitTest')","[100557, 107582]"
"('Description.java', 'org.junit.runner.Description', 'methodAndClassNamePatternGroupOrDefault', '([\\s\\S]*)\\((.*)\\)', 'testMergeFailingWithDirtyWorkingTree(org.eclipse.jgit.api.MergeCommandTest)')","[214332, 215276]"
"('URIish.java', 'org.eclipse.jgit.transport.URIish', '<init>', '^([a-z][a-z0-9+-]+)://(?:(?:([^/:@]+)(?::([^\\\\/]+))?@)?((?:[^\\\\/:]+)|(?:\\[[0-9a-f:]+\\]))(?::(\\d+))?((?:/~(?:[^\\\\/]+))?[\\\\/]))?(.+)?$', 'user@example.com:egit.git')",[7714]
"('Description.java', 'org.junit.runner.Description', 'methodAndClassNamePatternGroupOrDefault', '([\\s\\S]*)\\((.*)\\)', 'testBuilder_ToString(org.eclipse.jgit.util.RefListTest)')","[179422, 179934]"
"('URIish.java', 'org.eclipse.jgit.transport.URIish', '<init>', '^(file):([\\\\/](?![\\\\/])((?:[A-Za-z]:)?[\\\\/]?(?:(?:[^\\\\/]+[\\\\/]+)*[^\\\\/]+[\\\\/]*)))$', 'ssh+git://l usr\\example.com@[::1]/D:/x')","[44660, 44844]"
"('URIish.java', 'org.eclipse.jgit.transport.URIish', '<init>', '^([a-z][a-z0-9+-]+)://(?:(?:([^/:@]+)(?::([^\\\\/]+))?@)?((?:[^\\\\/:]+)|(?:\\[[0-9a-f:]+\\]))(?::(\\d+))?((?:/~(?:[^\\\\/]+))?[\\\\/]))?(.+)?$', 'ssh+git://lusr\\example:wtf@example.com:80//')",[17285]
"('URIish.java', 'org.eclipse.jgit.transport.URIish', '<init>', '^(file):([\\\\/](?![\\\\/])((?:[A-Za-z]:)?[\\\\/]?(?:(?:[^\\\\/]+[\\\\/]+)*[^\\\\/]+[\\\\/]*)))$', 'ssh+git://l usr\\example.com:wtf@1.2.3.4:1234/D:/x')",[16411]
"('Description.java', 'org.junit.runner.Description', 'methodAndClassNamePatternGroupOrDefault', '([\\s\\S]*)\\((.*)\\)', 'yesterday(org.eclipse.jgit.util.GitDateParserTest)')","[182278, 182553]"
"('Description.java', 'org.junit.runner.Description', 'methodAndClassNamePatternGroupOrDefault', '([\\s\\S]*)\\((.*)\\)', 'testCreateOrphanBranchWithStartCommit(org.eclipse.jgit.api.CheckoutCommandTest)')","[206891, 207404]"
"('Description.java', 'org.junit.runner.Description', 'methodAndClassNamePatternGroupOrDefault', '([\\s\\S]*)\\((.*)\\)', 'testEscapedBracket6(org.eclipse.jgit.fnmatch.FileNameMatcherTest)')","[104149, 107559]"
"('URIish.java', 'org.eclipse.jgit.transport.URIish', '<init>', '^(file):([\\\\/](?![\\\\/])((?:[A-Za-z]:)?[\\\\/]?(?:(?:[^\\\\/]+[\\\\/]+)*[^\\\\/]+[\\\\/]*)))$', 'https://l usr\\example.com@1.2.3.4:80/D:/x')",[37852]
"('URIish.java', 'org.eclipse.jgit.transport.URIish', '<init>', '^([a-z][a-z0-9+-]+)://(?:(?:([^/:@]+)(?::([^\\\\/]+))?@)?((?:[^\\\\/:]+)|(?:\\[[0-9a-f:]+\\]))(?::(\\d+))?((?:/~(?:[^\\\\/]+))?[\\\\/]))?(.+)?$', 'http://l usr\\example.com@example.com:80//')",[34103]
"('Description.java', 'org.junit.runner.Description', 'methodAndClassNamePatternGroupOrDefault', '([\\s\\S]*)\\((.*)\\)', 'testShouldBeRecursive_PathFilter(org.eclipse.jgit.treewalk.filter.NotTreeFilterTest)')","[139271, 139401]"
"('Description.java', 'org.junit.runner.Description', 'methodAndClassNamePatternGroupOrDefault', '([\\s\\S]*)\\((.*)\\)', 'testWriteSingleRef(org.eclipse.jgit.transport.BundleWriterTest)')","[26294, 26359]"
"('Description.java', 'org.junit.runner.Description', 'methodAndClassNamePatternGroupOrDefault', '([\\s\\S]*)\\((.*)\\)', 'testGraphGroupCase1[OldRule? false](org.eclipse.jgit.ignore.IgnoreRuleSpecialCasesTest)')","[146352, 153457]"
"('URIish.java', 'org.eclipse.jgit.transport.URIish', '<init>', '^([a-z][a-z0-9+-]+)://(?:(?:([^/:@]+)(?::([^\\\\/]+))?@)?((?:[^\\\\/:]+)|(?:\\[[0-9a-f:]+\\]))(?::(\\d+))?((?:/~(?:[^\\\\/]+))?[\\\\/]))?(.+)?$', 'ssh://[::1]/D:\\x')","[53561, 53745, 54665, 54849, 55769, 55953]"
"('Description.java', 'org.junit.runner.Description', 'methodAndClassNamePatternGroupOrDefault', '([\\s\\S]*)\\((.*)\\)', 'testAdd_ZeroCapacity(org.eclipse.jgit.util.IntListTest)')","[181725, 181957]"
"('Description.java', 'org.junit.runner.Description', 'methodAndClassNamePatternGroupOrDefault', '([\\s\\S]*)\\((.*)\\)', 'testBatchRefUpdateSimpleNoForce(org.eclipse.jgit.internal.storage.file.RefDirectoryTest)')","[257770, 258946]"
"('Description.java', 'org.junit.runner.Description', 'methodAndClassNamePatternGroupOrDefault', '([\\s\\S]*)\\((.*)\\)', 'testNoFinalNewline(org.eclipse.jgit.lib.ConfigTest)')","[129407, 130143]"
"('URIish.java', 'org.eclipse.jgit.transport.URIish', '<init>', '^(file):([\\\\/](?![\\\\/])((?:[A-Za-z]:)?[\\\\/]?(?:(?:[^\\\\/]+[\\\\/]+)*[^\\\\/]+[\\\\/]*)))$', 'https://me@1.2.3.4:1234/D:/x')",[36564]
"('Description.java', 'org.junit.runner.Description', 'methodAndClassNamePatternGroupOrDefault', '([\\s\\S]*)\\((.*)\\)', 'testTwoRangesInOneGroupCase5(org.eclipse.jgit.fnmatch.FileNameMatcherTest)')","[103960, 107361]"
"('Description.java', 'org.junit.runner.Description', 'methodAndClassNamePatternGroupOrDefault', '([\\s\\S]*)\\((.*)\\)', 'testGetBitmapWithoutXor(org.eclipse.jgit.internal.storage.file.StoredBitmapTest)')","[247861, 247925]"
"('Description.java', 'org.junit.runner.Description', 'methodAndClassNamePatternGroupOrDefault', '([\\s\\S]*)\\((.*)\\)', 'testANY_DIFF_ShouldNotBeRecursive(org.eclipse.jgit.treewalk.filter.TreeFilterTest)')","[138507, 138657]"
"('Description.java', 'org.junit.runner.Description', 'methodAndClassNamePatternGroupOrDefault', '([\\s\\S]*)\\((.*)\\)', 'testOnlyOption_f1_3_b(org.eclipse.jgit.api.CommitOnlyTest)')","[236164, 238228]"
"('Description.java', 'org.junit.runner.Description', 'methodAndClassNamePatternGroupOrDefault', '([\\s\\S]*)\\((.*)\\)', 'noLocalChanges(org.eclipse.jgit.api.StashCreateCommandTest)')","[202508, 202858]"
"('URIish.java', 'org.eclipse.jgit.transport.URIish', '<init>', '^(file):([\\\\/](?![\\\\/])((?:[A-Za-z]:)?[\\\\/]?(?:(?:[^\\\\/]+[\\\\/]+)*[^\\\\/]+[\\\\/]*)))$', 'ssh://lusr\\example:wtf@1.2.3.4:80/D:/x')",[13072]
"('URIish.java', 'org.eclipse.jgit.transport.URIish', '<init>', '^([a-z][a-z0-9+-]+)://(?:(?:([^/:@]+)(?::([^\\\\/]+))?@)?((?:[^\\\\/:]+)|(?:\\[[0-9a-f:]+\\]))(?::(\\d+))?((?:/~(?:[^\\\\/]+))?[\\\\/]))?(.+)?$', '/~some/p ath')","[68573, 68688]"
"('Description.java', 'org.junit.runner.Description', 'methodAndClassNamePatternGroupOrDefault', '([\\s\\S]*)\\((.*)\\)', 'test1(org.eclipse.jgit.transport.PackParserTest)')","[72050, 72352]"
"('Description.java', 'org.junit.runner.Description', 'methodAndClassNamePatternGroupOrDefault', '([\\s\\S]*)\\((.*)\\)', 'testUpdateRefDetachedUnbornHead(org.eclipse.jgit.internal.storage.file.RefUpdateTest)')","[253586, 254444]"
"('URIish.java', 'org.eclipse.jgit.transport.URIish', '<init>', '^([a-z][a-z0-9+-]+)://(?:(?:([^/:@]+)(?::([^\\\\/]+))?@)?((?:[^\\\\/:]+)|(?:\\[[0-9a-f:]+\\]))(?::(\\d+))?((?:/~(?:[^\\\\/]+))?[\\\\/]))?(.+)?$', 'ssh+git://lusr\\example@[::1]:80//abc')",[32677]
"('URIish.java', 'org.eclipse.jgit.transport.URIish', '<init>', '^([a-z][a-z0-9+-]+)://(?:(?:([^/:@]+)(?::([^\\\\/]+))?@)?((?:[^\\\\/:]+)|(?:\\[[0-9a-f:]+\\]))(?::(\\d+))?((?:/~(?:[^\\\\/]+))?[\\\\/]))?(.+)?$', 'ssh+git://me:wtf@[::1]:80//abc')",[15572]
"('FastIgnoreRule.java', 'org.eclipse.jgit.ignore.FastIgnoreRule', 'isMatch', '[A\\p{Ll}C3-5]', '5')",[160420]
"('Description.java', 'org.junit.runner.Description', 'methodAndClassNamePatternGroupOrDefault', '([\\s\\S]*)\\((.*)\\)', 'testNoCacheObjectIdSubclass(org.eclipse.jgit.internal.storage.file.RefUpdateTest)')","[252872, 253696]"
"('Description.java', 'org.junit.runner.Description', 'methodAndClassNamePatternGroupOrDefault', '([\\s\\S]*)\\((.*)\\)', 'testInvalidCommitNoTree1(org.eclipse.jgit.lib.ObjectCheckerTest)')","[122477, 124635]"
"('Description.java', 'org.junit.runner.Description', 'methodAndClassNamePatternGroupOrDefault', '([\\s\\S]*)\\((.*)\\)', 'testIndexOfChangeId(org.eclipse.jgit.util.ChangeIdUtilTest)')","[185420, 186160]"
"('FastIgnoreRule.java', 'org.eclipse.jgit.ignore.FastIgnoreRule', 'isMatch', 'a.*a.*a', 'aaaa')",[162580]
"('Description.java', 'org.junit.runner.Description', 'methodAndClassNamePatternGroupOrDefault', '([\\s\\S]*)\\((.*)\\)', 'testTimeout_skip_Timeout(org.eclipse.jgit.util.io.TimeoutInputStreamTest)')","[173823, 173992]"
"('Description.java', 'org.junit.runner.Description', 'methodAndClassNamePatternGroupOrDefault', '([\\s\\S]*)\\((.*)\\)', 'testInvalidTagNoType1(org.eclipse.jgit.lib.ObjectCheckerTest)')","[122561, 124723]"
"('FastIgnoreRule.java', 'org.eclipse.jgit.ignore.FastIgnoreRule', 'isMatch', '[=a=]', '=')",[161930]
"('Description.java', 'org.junit.runner.Description', 'methodAndClassNamePatternGroupOrDefault', '([\\s\\S]*)\\((.*)\\)', 'testNotBare_CreateRepositoryFromGitDirOnlyWithBareConfigFalse(org.eclipse.jgit.internal.storage.file.RepositorySetupWorkDirTest)')","[255810, 256070]"
"('URIish.java', 'org.eclipse.jgit.transport.URIish', '<init>', '^(file):([\\\\/](?![\\\\/])((?:[A-Za-z]:)?[\\\\/]?(?:(?:[^\\\\/]+[\\\\/]+)*[^\\\\/]+[\\\\/]*)))$', 'https://me@1.2.3.4/D:/x')","[49812, 49996]"
"('Description.java', 'org.junit.runner.Description', 'methodAndClassNamePatternGroupOrDefault', '([\\s\\S]*)\\((.*)\\)', 'testConstructor_PeeledStatusNotKnown(org.eclipse.jgit.lib.ObjectIdRefTest)')","[109758, 109824]"
"('Description.java', 'org.junit.runner.Description', 'methodAndClassNamePatternGroupOrDefault', '([\\s\\S]*)\\((.*)\\)', 'testManySolutionsCase2[OldRule? true](org.eclipse.jgit.ignore.IgnoreRuleSpecialCasesTest)')","[151686, 158770]"
"('Description.java', 'org.junit.runner.Description', 'methodAndClassNamePatternGroupOrDefault', '([\\s\\S]*)\\((.*)\\)', 'testRevertkConflictReset(org.eclipse.jgit.api.RevertCommandTest)')","[233616, 233836]"
"('Description.java', 'org.junit.runner.Description', 'methodAndClassNamePatternGroupOrDefault', '([\\s\\S]*)\\((.*)\\)', 'testFilePathSimpleCase(org.eclipse.jgit.fnmatch.FileNameMatcherTest)')","[101629, 104919]"
"('URIish.java', 'org.eclipse.jgit.transport.URIish', '<init>', '^(file):([\\\\/](?![\\\\/])((?:[A-Za-z]:)?[\\\\/]?(?:(?:[^\\\\/]+[\\\\/]+)*[^\\\\/]+[\\\\/]*)))$', 'https://lusr\\example:wtf@1.2.3.4:1234/D:/x')",[25296]
"('URIish.java', 'org.eclipse.jgit.transport.URIish', '<init>', '^(?:([^/:@]+)(?::([^\\\\/]+))?@)?((?:[^\\\\/:]+)|(?:\\[[0-9a-f:]+\\])):((?:(?:/~(?:[^\\\\/]+))[\\\\/])?(?:(?:[^\\\\/]+[\\\\/]+)*[^\\\\/]+[\\\\/]*))$', '../tmp_6907696380270154428')",[73062]
"('URIish.java', 'org.eclipse.jgit.transport.URIish', '<init>', '^([a-z][a-z0-9+-]+)://(?:(?:([^/:@]+)(?::([^\\\\/]+))?@)?((?:[^\\\\/:]+)|(?:\\[[0-9a-f:]+\\]))(?::(\\d+))?((?:/~(?:[^\\\\/]+))?[\\\\/]))?(.+)?$', 'http://me@[::1]/D:\\x')","[46937, 47121]"
"('Description.java', 'org.junit.runner.Description', 'methodAndClassNamePatternGroupOrDefault', '([\\s\\S]*)\\((.*)\\)', 'org.eclipse.jgit.api.GitConstructionTest')","[203278, 205806]"
"('Description.java', 'org.junit.runner.Description', 'methodAndClassNamePatternGroupOrDefault', '([\\s\\S]*)\\((.*)\\)', 'testQuestionmark[OldRule? true](org.eclipse.jgit.ignore.FastIgnoreRuleTest)')","[164500, 165236]"
"('Description.java', 'org.junit.runner.Description', 'methodAndClassNamePatternGroupOrDefault', '([\\s\\S]*)\\((.*)\\)', 'testPrintGroupCase5[OldRule? false](org.eclipse.jgit.ignore.IgnoreRuleSpecialCasesTest)')","[148054, 155159]"
"('FastIgnoreRule.java', 'org.eclipse.jgit.ignore.FastIgnoreRule', 'isMatch', '[\\p{Lu}]', 'a')",[162684]
"('Description.java', 'org.junit.runner.Description', 'methodAndClassNamePatternGroupOrDefault', '([\\s\\S]*)\\((.*)\\)', 'testLsRemoteWithoutLocalRepository(org.eclipse.jgit.api.LsRemoteCommandTest)')","[200540, 200627]"
"('Description.java', 'org.junit.runner.Description', 'methodAndClassNamePatternGroupOrDefault', '([\\s\\S]*)\\((.*)\\)', 'testEqualsIgnoreCase2(org.eclipse.jgit.util.StringUtilsTest)')","[175882, 176032]"
"('URIish.java', 'org.eclipse.jgit.transport.URIish', '<init>', '^([a-z][a-z0-9+-]+)://(?:(?:([^/:@]+)(?::([^\\\\/]+))?@)?((?:[^\\\\/:]+)|(?:\\[[0-9a-f:]+\\]))(?::(\\d+))?((?:/~(?:[^\\\\/]+))?[\\\\/]))?(.+)?$', 'https://l usr\\example.com@[::1]:80//')",[38151]
"('Description.java', 'org.junit.runner.Description', 'methodAndClassNamePatternGroupOrDefault', '([\\s\\S]*)\\((.*)\\)', 'testFileCommittedChangedNotModified(org.eclipse.jgit.treewalk.filter.IndexDiffFilterTest)')","[137319, 138153]"
"('Description.java', 'org.junit.runner.Description', 'methodAndClassNamePatternGroupOrDefault', '([\\s\\S]*)\\((.*)\\)', 'testVerySimpleGroupRangeCase1(org.eclipse.jgit.fnmatch.FileNameMatcherTest)')","[102574, 105909]"
"('URIish.java', 'org.eclipse.jgit.transport.URIish', '<init>', '^(file):([\\\\/](?![\\\\/])((?:[A-Za-z]:)?[\\\\/]?(?:(?:[^\\\\/]+[\\\\/]+)*[^\\\\/]+[\\\\/]*)))$', 'http://lusr\\example@1.2.3.4:80//')",[35552]
"('Description.java', 'org.junit.runner.Description', 'methodAndClassNamePatternGroupOrDefault', '([\\s\\S]*)\\((.*)\\)', 'testMergeCommitEntirelyShallow(org.eclipse.jgit.revwalk.RevWalkShallowTest)')","[86059, 86186]"
"('Description.java', 'org.junit.runner.Description', 'methodAndClassNamePatternGroupOrDefault', '([\\s\\S]*)\\((.*)\\)', 'testOnlyCommentRebaseTodo(org.eclipse.jgit.api.RebaseCommandTest)')","[218341, 219862]"
"('Description.java', 'org.junit.runner.Description', 'methodAndClassNamePatternGroupOrDefault', '([\\s\\S]*)\\((.*)\\)', 'shouldWorkWithZeroAsEnd(org.eclipse.jgit.revwalk.RevWalkUtilsCountTest)')","[79011, 79142]"
"('Description.java', 'org.junit.runner.Description', 'methodAndClassNamePatternGroupOrDefault', '([\\s\\S]*)\\((.*)\\)', 'testEditEdit(org.eclipse.jgit.notes.DefaultNoteMergerTest)')","[198568, 198733]"
"('Description.java', 'org.junit.runner.Description', 'methodAndClassNamePatternGroupOrDefault', '([\\s\\S]*)\\((.*)\\)', 'testXDigitGroupCase7[OldRule? true](org.eclipse.jgit.ignore.IgnoreRuleSpecialCasesTest)')","[152238, 159322]"
"('Description.java', 'org.junit.runner.Description', 'methodAndClassNamePatternGroupOrDefault', '([\\s\\S]*)\\((.*)\\)', 'testNonNotesWithoutNonNoteConflict(org.eclipse.jgit.notes.NoteMapMergerTest)')","[199731, 200096]"
"('Description.java', 'org.junit.runner.Description', 'methodAndClassNamePatternGroupOrDefault', '([\\s\\S]*)\\((.*)\\)', 'testSpaceGroupCase2[OldRule? false](org.eclipse.jgit.ignore.IgnoreRuleSpecialCasesTest)')","[147042, 154147]"
"('URIish.java', 'org.eclipse.jgit.transport.URIish', '<init>', '^([a-z][a-z0-9+-]+)://(?:(?:([^/:@]+)(?::([^\\\\/]+))?@)?((?:[^\\\\/:]+)|(?:\\[[0-9a-f:]+\\]))(?::(\\d+))?((?:/~(?:[^\\\\/]+))?[\\\\/]))?(.+)?$', 'ssh://me@example.com:80/D:/x')",[26404]
"('URIish.java', 'org.eclipse.jgit.transport.URIish', '<init>', '^(file):([\\\\/](?![\\\\/])((?:[A-Za-z]:)?[\\\\/]?(?:(?:[^\\\\/]+[\\\\/]+)*[^\\\\/]+[\\\\/]*)))$', 'file:/tmp/jgit_test_4677475895609519006_tmp/tmp_285690349059558438/.git/')",[108005]
"('URIish.java', 'org.eclipse.jgit.transport.URIish', '<init>', '^(file):([\\\\/](?![\\\\/])((?:[A-Za-z]:)?[\\\\/]?(?:(?:[^\\\\/]+[\\\\/]+)*[^\\\\/]+[\\\\/]*)))$', 'http://l usr\\example.com@[::1]:80//')",[34816]
"('URIish.java', 'org.eclipse.jgit.transport.URIish', '<init>', '^(file):([\\\\/](?![\\\\/])((?:[A-Za-z]:)?[\\\\/]?(?:(?:[^\\\\/]+[\\\\/]+)*[^\\\\/]+[\\\\/]*)))$', 'ssh+git://lusr\\example:wtf@[::1]:80/D:\\x')",[18508]
"('Description.java', 'org.junit.runner.Description', 'methodAndClassNamePatternGroupOrDefault', '([\\s\\S]*)\\((.*)\\)', 'testOneBlockAndHalf_SingleWrite(org.eclipse.jgit.util.TemporaryBufferTest)')","[178532, 178837]"
"('Description.java', 'org.junit.runner.Description', 'methodAndClassNamePatternGroupOrDefault', '([\\s\\S]*)\\((.*)\\)', 'testCombinedRangesInOneGroupCase0[OldRule? false](org.eclipse.jgit.ignore.IgnoreRuleSpecialCasesTest)')","[146007, 153112]"
"('Description.java', 'org.junit.runner.Description', 'methodAndClassNamePatternGroupOrDefault', '([\\s\\S]*)\\((.*)\\)', 'testFastForwardWithFiles(org.eclipse.jgit.api.MergeCommandTest)')","[213975, 214902]"
"('Description.java', 'org.junit.runner.Description', 'methodAndClassNamePatternGroupOrDefault', '([\\s\\S]*)\\((.*)\\)', 'testCLIText(org.eclipse.jgit.nls.RootLocaleTest)')","[198, 492]"
"('Description.java', 'org.junit.runner.Description', 'methodAndClassNamePatternGroupOrDefault', '([\\s\\S]*)\\((.*)\\)', 'testExceptionThrown_BareRepoGetWorkDir(org.eclipse.jgit.internal.storage.file.RepositorySetupWorkDirTest)')","[255705, 255960]"
"('URIish.java', 'org.eclipse.jgit.transport.URIish', '<init>', '^(file):([\\\\/](?![\\\\/])((?:[A-Za-z]:)?[\\\\/]?(?:(?:[^\\\\/]+[\\\\/]+)*[^\\\\/]+[\\\\/]*)))$', '/tmp/jgit_test_6078415325919108987_tmp/tmp_7117568841738359148')","[224083, 224208, 224932]"
"('Description.java', 'org.junit.runner.Description', 'methodAndClassNamePatternGroupOrDefault', '([\\s\\S]*)\\((.*)\\)', 'testManySolutionsCase0(org.eclipse.jgit.fnmatch.FileNameMatcherTest)')","[103099, 106459]"
"('Description.java', 'org.junit.runner.Description', 'methodAndClassNamePatternGroupOrDefault', '([\\s\\S]*)\\((.*)\\)', 'shouldRaiseErrorOnEmptyURI(org.eclipse.jgit.transport.URIishTest)')","[4031, 5388]"
"('Description.java', 'org.junit.runner.Description', 'methodAndClassNamePatternGroupOrDefault', '([\\s\\S]*)\\((.*)\\)', 'testFileProtocol(org.eclipse.jgit.transport.URIishTest)')","[1270, 4442]"
"('URIish.java', 'org.eclipse.jgit.transport.URIish', '<init>', '^(file):([\\\\/](?![\\\\/])((?:[A-Za-z]:)?[\\\\/]?(?:(?:[^\\\\/]+[\\\\/]+)*[^\\\\/]+[\\\\/]*)))$', 'file:/tmp/jgit_test_5759483036504177498_tmp/tmp_2056104723408913642/.git/')",[203432]
"('URIish.java', 'org.eclipse.jgit.transport.URIish', '<init>', '^([\\\\/]?((?:[A-Za-z]:)?[\\\\/]?(?:(?:[^\\\\/]+[\\\\/]+)*[^\\\\/]+[\\\\/]*)))$', '/tmp/jgit_test_3752343835297747993_tmp/tmp_2470876455541918618')","[230542, 230687, 231163]"
"('URIish.java', 'org.eclipse.jgit.transport.URIish', '<init>', '^([a-z][a-z0-9+-]+)://(?:(?:([^/:@]+)(?::([^\\\\/]+))?@)?((?:[^\\\\/:]+)|(?:\\[[0-9a-f:]+\\]))(?::(\\d+))?((?:/~(?:[^\\\\/]+))?[\\\\/]))?(.+)?$', 'ssh+git://example.com/D:\\x')","[56137, 56321, 57241, 57425, 58345, 58529]"
"('Description.java', 'org.junit.runner.Description', 'methodAndClassNamePatternGroupOrDefault', '([\\s\\S]*)\\((.*)\\)', 'testTaggingOnHead(org.eclipse.jgit.api.TagCommandTest)')","[201721, 202023]"
"('URIish.java', 'org.eclipse.jgit.transport.URIish', '<init>', '^(?:([^/:@]+)(?::([^\\\\/]+))?@)?((?:[^\\\\/:]+)|(?:\\[[0-9a-f:]+\\])):((?:(?:/~(?:[^\\\\/]+))[\\\\/])?(?:(?:[^\\\\/]+[\\\\/]+)*[^\\\\/]+[\\\\/]*))$', '/tmp/jgit_test_976787373850596776_tmp/tmp_5547895567498631481')","[209581, 209716, 210145, 210295]"
"('URIish.java', 'org.eclipse.jgit.transport.URIish', '<init>', '^(file):([\\\\/](?![\\\\/])((?:[A-Za-z]:)?[\\\\/]?(?:(?:[^\\\\/]+[\\\\/]+)*[^\\\\/]+[\\\\/]*)))$', 'http://1.2.3.4/D:/x')","[59748, 59932, 60852, 61036, 61956, 62140]"
"('Description.java', 'org.junit.runner.Description', 'methodAndClassNamePatternGroupOrDefault', '([\\s\\S]*)\\((.*)\\)', 'testFilePathCase0[OldRule? false](org.eclipse.jgit.ignore.IgnoreRuleSpecialCasesTest)')","[147778, 154883]"
"('URIish.java', 'org.eclipse.jgit.transport.URIish', '<init>', '^([a-z][a-z0-9+-]+)://(?:(?:([^/:@]+)(?::([^\\\\/]+))?@)?((?:[^\\\\/:]+)|(?:\\[[0-9a-f:]+\\]))(?::(\\d+))?((?:/~(?:[^\\\\/]+))?[\\\\/]))?(.+)?$', 'http://l usr\\example.com:wtf@example.com:80//')",[20604]
"('Description.java', 'org.junit.runner.Description', 'methodAndClassNamePatternGroupOrDefault', '([\\s\\S]*)\\((.*)\\)', 'testBuilder_AddThenSort(org.eclipse.jgit.util.RefListTest)')","[179632, 180154]"
"('Description.java', 'org.junit.runner.Description', 'methodAndClassNamePatternGroupOrDefault', '([\\s\\S]*)\\((.*)\\)', 'testEmptyMap(org.eclipse.jgit.lib.ObjectIdOwnerMapTest)')","[113732, 113886]"
"('URIish.java', 'org.eclipse.jgit.transport.URIish', '<init>', '^(file):([\\\\/](?![\\\\/])((?:[A-Za-z]:)?[\\\\/]?(?:(?:[^\\\\/]+[\\\\/]+)*[^\\\\/]+[\\\\/]*)))$', 'http://user:secret@host.xy:80/some%2Fpath')","[69102, 69148]"
"('URIish.java', 'org.eclipse.jgit.transport.URIish', '<init>', '^(file):([\\\\/](?![\\\\/])((?:[A-Za-z]:)?[\\\\/]?(?:(?:[^\\\\/]+[\\\\/]+)*[^\\\\/]+[\\\\/]*)))$', '/tmp/jgit_test_228114219831588372_tmp/tmp_8226897773376440333')","[223069, 223194, 223927]"
"('Description.java', 'org.junit.runner.Description', 'methodAndClassNamePatternGroupOrDefault', '([\\s\\S]*)\\((.*)\\)', 'testPut_CollapseResolved(org.eclipse.jgit.util.RefMapTest)')","[184140, 184620]"
"('Description.java', 'org.junit.runner.Description', 'methodAndClassNamePatternGroupOrDefault', '([\\s\\S]*)\\((.*)\\)', 'testDetachedHeadOnCheckout(org.eclipse.jgit.api.CheckoutCommandTest)')","[207164, 207690]"
"('URIish.java', 'org.eclipse.jgit.transport.URIish', '<init>', '^([a-z][a-z0-9+-]+)://(?:(?:([^/:@]+)(?::([^\\\\/]+))?@)?((?:[^\\\\/:]+)|(?:\\[[0-9a-f:]+\\]))(?::(\\d+))?((?:/~(?:[^\\\\/]+))?[\\\\/]))?(.+)?$', 'file:///tmp/jgit_test_7969338902980709964_tmp/tmp_644534926566183242/.git/')","[203488, 205145]"
"('URIish.java', 'org.eclipse.jgit.transport.URIish', '<init>', '^([a-z][a-z0-9+-]+)://(?:(?:([^/:@]+)(?::([^\\\\/]+))?@)?((?:[^\\\\/:]+)|(?:\\[[0-9a-f:]+\\]))(?::(\\d+))?((?:/~(?:[^\\\\/]+))?[\\\\/]))?(.+)?$', 'ssh+git://l usr\\example.com@example.com:1234//abc')",[30653]
"('Description.java', 'org.junit.runner.Description', 'methodAndClassNamePatternGroupOrDefault', '([\\s\\S]*)\\((.*)\\)', 'testUpdateUnexpectedRemote(org.eclipse.jgit.transport.PushProcessTest)')","[73942, 74301]"
"('Description.java', 'org.junit.runner.Description', 'methodAndClassNamePatternGroupOrDefault', '([\\s\\S]*)\\((.*)\\)', 'testFilter_NONE_Or_MY_ALL(org.eclipse.jgit.revwalk.RevWalkFilterTest)')","[83230, 83554]"
"('URIish.java', 'org.eclipse.jgit.transport.URIish', '<init>', '^(file):([\\\\/](?![\\\\/])((?:[A-Za-z]:)?[\\\\/]?(?:(?:[^\\\\/]+[\\\\/]+)*[^\\\\/]+[\\\\/]*)))$', 'ssh://l usr\\example.com:wtf@example.com:1234/D:\\x')",[10961]
"('Description.java', 'org.junit.runner.Description', 'methodAndClassNamePatternGroupOrDefault', '([\\s\\S]*)\\((.*)\\)', 'testCrissCross(org.eclipse.jgit.revwalk.RevWalkMergeBaseTest)')","[81989, 82121]"
"('URIish.java', 'org.eclipse.jgit.transport.URIish', '<init>', '^(file):([\\\\/](?![\\\\/])((?:[A-Za-z]:)?[\\\\/]?(?:(?:[^\\\\/]+[\\\\/]+)*[^\\\\/]+[\\\\/]*)))$', 'file:/tmp/jgit_test_3047862731010516352_tmp/tmp_828193169175075630/.git/')",[194974]
"('Description.java', 'org.junit.runner.Description', 'methodAndClassNamePatternGroupOrDefault', '([\\s\\S]*)\\((.*)\\)', 'testOnlyOption_f1_13_b(org.eclipse.jgit.api.CommitOnlyTest)')","[237560, 239658]"
"('Description.java', 'org.junit.runner.Description', 'methodAndClassNamePatternGroupOrDefault', '([\\s\\S]*)\\((.*)\\)', 'testFilter_ALL(org.eclipse.jgit.revwalk.RevWalkFilterTest)')","[83335, 83687]"
"('URIish.java', 'org.eclipse.jgit.transport.URIish', '<init>', '^([a-z][a-z0-9+-]+)://(?:(?:([^/:@]+)(?::([^\\\\/]+))?@)?((?:[^\\\\/:]+)|(?:\\[[0-9a-f:]+\\]))(?::(\\d+))?((?:/~(?:[^\\\\/]+))?[\\\\/]))?(.+)?$', 'http://lusr\\example:wtf@[::1]:1234//abc')",[22329]
"('Description.java', 'org.junit.runner.Description', 'methodAndClassNamePatternGroupOrDefault', '([\\s\\S]*)\\((.*)\\)', 'org.eclipse.jgit.internal.storage.file.InflatingBitSetTest')","[250743, 251040]"
"('Description.java', 'org.junit.runner.Description', 'methodAndClassNamePatternGroupOrDefault', '([\\s\\S]*)\\((.*)\\)', 'testReadString4(org.eclipse.jgit.transport.PacketLineInTest)')","[18747, 19870]"
"('URIish.java', 'org.eclipse.jgit.transport.URIish', '<init>', '^([a-z][a-z0-9+-]+)://(?:(?:([^/:@]+)(?::([^\\\\/]+))?@)?((?:[^\\\\/:]+)|(?:\\[[0-9a-f:]+\\]))(?::(\\d+))?((?:/~(?:[^\\\\/]+))?[\\\\/]))?(.+)?$', 'ssh://l usr\\example.com:wtf@example.com:80/D:\\x')",[11168]
"('Description.java', 'org.junit.runner.Description', 'methodAndClassNamePatternGroupOrDefault', '([\\s\\S]*)\\((.*)\\)', 'testOnlyOption_f1_13_d(org.eclipse.jgit.api.CommitOnlyTest)')","[237602, 239702]"
"('Description.java', 'org.junit.runner.Description', 'methodAndClassNamePatternGroupOrDefault', '([\\s\\S]*)\\((.*)\\)', 'testEmptyTree_AtEOF(org.eclipse.jgit.treewalk.CanonicalTreeParserTest)')","[136174, 136504]"
"('Description.java', 'org.junit.runner.Description', 'methodAndClassNamePatternGroupOrDefault', '([\\s\\S]*)\\((.*)\\)', 'testManySolutionsCase1[OldRule? true](org.eclipse.jgit.ignore.IgnoreRuleSpecialCasesTest)')","[151663, 158747]"
"('Description.java', 'org.junit.runner.Description', 'methodAndClassNamePatternGroupOrDefault', '([\\s\\S]*)\\((.*)\\)', 'org.eclipse.jgit.diff.EditTest')","[99787, 100498]"
"('URIish.java', 'org.eclipse.jgit.transport.URIish', '<init>', '^([a-z][a-z0-9+-]+)://(?:(?:([^/:@]+)(?::([^\\\\/]+))?@)?((?:[^\\\\/:]+)|(?:\\[[0-9a-f:]+\\]))(?::(\\d+))?((?:/~(?:[^\\\\/]+))?[\\\\/]))?(.+)?$', 'https://lusr\\example@example.com:1234//abc')",[38381]
"('URIish.java', 'org.eclipse.jgit.transport.URIish', '<init>', '^([a-z][a-z0-9+-]+)://(?:(?:([^/:@]+)(?::([^\\\\/]+))?@)?((?:[^\\\\/:]+)|(?:\\[[0-9a-f:]+\\]))(?::(\\d+))?((?:/~(?:[^\\\\/]+))?[\\\\/]))?(.+)?$', 'file:///tmp/jgit_test_9002537952631302656_tmp/tmp_9121310160384659146/.git/')",[134122]
"('URIish.java', 'org.eclipse.jgit.transport.URIish', '<init>', '^([a-z][a-z0-9+-]+)://(?:(?:([^/:@]+)(?::([^\\\\/]+))?@)?((?:[^\\\\/:]+)|(?:\\[[0-9a-f:]+\\]))(?::(\\d+))?((?:/~(?:[^\\\\/]+))?[\\\\/]))?(.+)?$', '/tmp/jgit_test_848094205772547537_tmp/tmp_2447967114920000272.git')",[72670]
"('Description.java', 'org.junit.runner.Description', 'methodAndClassNamePatternGroupOrDefault', '([\\s\\S]*)\\((.*)\\)', 'testFillToNullCommit(org.eclipse.jgit.revwalk.RevCommitListTest)')","[80957, 81107]"
"('Description.java', 'org.junit.runner.Description', 'methodAndClassNamePatternGroupOrDefault', '([\\s\\S]*)\\((.*)\\)', 'testTwoSameDifferByAssumeValid(org.eclipse.jgit.treewalk.filter.InterIndexDiffFilterTest)')","[139565, 139674]"
"('URIish.java', 'org.eclipse.jgit.transport.URIish', '<init>', '^(file):([\\\\/](?![\\\\/])((?:[A-Za-z]:)?[\\\\/]?(?:(?:[^\\\\/]+[\\\\/]+)*[^\\\\/]+[\\\\/]*)))$', 'http://lusr\\example:wtf@[::1]:1234/D:\\x')",[22398]
"('URIish.java', 'org.eclipse.jgit.transport.URIish', '<init>', '^(file):([\\\\/](?![\\\\/])((?:[A-Za-z]:)?[\\\\/]?(?:(?:[^\\\\/]+[\\\\/]+)*[^\\\\/]+[\\\\/]*)))$', 'ssh+git://lusr\\example@example.com:1234/D:/x')",[31780]
"('Description.java', 'org.junit.runner.Description', 'methodAndClassNamePatternGroupOrDefault', '([\\s\\S]*)\\((.*)\\)', 'testURIEncode_unicode(org.eclipse.jgit.transport.URIishTest)')","[1087, 4288]"
"('Description.java', 'org.junit.runner.Description', 'methodAndClassNamePatternGroupOrDefault', '([\\s\\S]*)\\((.*)\\)', 'testlogAllRefUpdates(org.eclipse.jgit.lib.ReflogConfigTest)')","[113504, 113526]"
"('Description.java', 'org.junit.runner.Description', 'methodAndClassNamePatternGroupOrDefault', '([\\s\\S]*)\\((.*)\\)', 'testWriteLine3(org.eclipse.jgit.diff.RawTextTest)')","[96514, 96728]"
"('Description.java', 'org.junit.runner.Description', 'methodAndClassNamePatternGroupOrDefault', '([\\s\\S]*)\\((.*)\\)', 'testRemoveMiddleOfList(org.eclipse.jgit.util.RefListTest)')","[179653, 180176]"
"('URIish.java', 'org.eclipse.jgit.transport.URIish', '<init>', '^(file):([\\\\/](?![\\\\/])((?:[A-Za-z]:)?[\\\\/]?(?:(?:[^\\\\/]+[\\\\/]+)*[^\\\\/]+[\\\\/]*)))$', 'ssh+git://me@example.com:80//')",[29664]
"('Description.java', 'org.junit.runner.Description', 'methodAndClassNamePatternGroupOrDefault', '([\\s\\S]*)\\((.*)\\)', 'testDigitGroupCase2[OldRule? false](org.eclipse.jgit.ignore.IgnoreRuleSpecialCasesTest)')","[147364, 154469]"
"('URIish.java', 'org.eclipse.jgit.transport.URIish', '<init>', '^([a-z][a-z0-9+-]+)://(?:(?:([^/:@]+)(?::([^\\\\/]+))?@)?((?:[^\\\\/:]+)|(?:\\[[0-9a-f:]+\\]))(?::(\\d+))?((?:/~(?:[^\\\\/]+))?[\\\\/]))?(.+)?$', 'file:///tmp/jgit_test_4677475895609519006_tmp/tmp_285690349059558438/.git/')",[108069]
"('URIish.java', 'org.eclipse.jgit.transport.URIish', '<init>', '^(file):([\\\\/](?![\\\\/])((?:[A-Za-z]:)?[\\\\/]?(?:(?:[^\\\\/]+[\\\\/]+)*[^\\\\/]+[\\\\/]*)))$', 'file:///tmp/jgit_test_3702206072697457221_tmp/tmp_3106514423251538628')","[211911, 211968, 212744, 212915, 215346, 215403]"
"('Description.java', 'org.junit.runner.Description', 'methodAndClassNamePatternGroupOrDefault', '([\\s\\S]*)\\((.*)\\)', 'testEmptyFolderUntracked(org.eclipse.jgit.treewalk.filter.IndexDiffFilterTest)')","[137256, 138087]"
"('Description.java', 'org.junit.runner.Description', 'methodAndClassNamePatternGroupOrDefault', '([\\s\\S]*)\\((.*)\\)', 'testMergeSuccessAllStrategiesNoCommit(org.eclipse.jgit.api.MergeCommandTest)')","[214353, 215298]"
"('URIish.java', 'org.eclipse.jgit.transport.URIish', '<init>', '^([a-z][a-z0-9+-]+)://(?:(?:([^/:@]+)(?::([^\\\\/]+))?@)?((?:[^\\\\/:]+)|(?:\\[[0-9a-f:]+\\]))(?::(\\d+))?((?:/~(?:[^\\\\/]+))?[\\\\/]))?(.+)?$', 'git://')",[65958]
"('URIish.java', 'org.eclipse.jgit.transport.URIish', '<init>', '^(file):([\\\\/](?![\\\\/])((?:[A-Za-z]:)?[\\\\/]?(?:(?:[^\\\\/]+[\\\\/]+)*[^\\\\/]+[\\\\/]*)))$', 'file:///tmp/jgit_test_4978457602680357164_tmp/tmp_3426910796876573259/.git/')",[132567]
"('URIish.java', 'org.eclipse.jgit.transport.URIish', '<init>', '^(file):([\\\\/](?![\\\\/])((?:[A-Za-z]:)?[\\\\/]?(?:(?:[^\\\\/]+[\\\\/]+)*[^\\\\/]+[\\\\/]*)))$', 'ssh://me:wtf@example.com:1234/D:\\x')",[7641]
"('Description.java', 'org.junit.runner.Description', 'methodAndClassNamePatternGroupOrDefault', '([\\s\\S]*)\\((.*)\\)', 'testOneBlockAndHalf_BulkWrite(org.eclipse.jgit.util.TemporaryBufferTest)')","[178511, 178815]"
"('Description.java', 'org.junit.runner.Description', 'methodAndClassNamePatternGroupOrDefault', '([\\s\\S]*)\\((.*)\\)', 'testSort_COMMIT_TIME_DESC_OutOfOrder1(org.eclipse.jgit.revwalk.RevWalkSortTest)')","[85064, 85214]"
"('URIish.java', 'org.eclipse.jgit.transport.URIish', '<init>', '^(file):([\\\\/](?![\\\\/])((?:[A-Za-z]:)?[\\\\/]?(?:(?:[^\\\\/]+[\\\\/]+)*[^\\\\/]+[\\\\/]*)))$', 'https://me@[::1]//')","[50088, 50272]"
"('Description.java', 'org.junit.runner.Description', 'methodAndClassNamePatternGroupOrDefault', '([\\s\\S]*)\\((.*)\\)', 'checkMergeEqualNewTrees(org.eclipse.jgit.merge.ResolveMergerTest)')","[88036, 88353]"
"('URIish.java', 'org.eclipse.jgit.transport.URIish', '<init>', '^([a-z][a-z0-9+-]+)://(?:(?:([^/:@]+)(?::([^\\\\/]+))?@)?((?:[^\\\\/:]+)|(?:\\[[0-9a-f:]+\\]))(?::(\\d+))?((?:/~(?:[^\\\\/]+))?[\\\\/]))?(.+)?$', 'https://me@example.com//abc')","[49421, 49605]"
"('FastIgnoreRule.java', 'org.eclipse.jgit.ignore.FastIgnoreRule', 'isMatch', '[tv]est\\.sta[a-d]', 'test.stad')","[142659, 143803]"
"('URIish.java', 'org.eclipse.jgit.transport.URIish', '<init>', '^(file):([\\\\/](?![\\\\/])((?:[A-Za-z]:)?[\\\\/]?(?:(?:[^\\\\/]+[\\\\/]+)*[^\\\\/]+[\\\\/]*)))$', 'ssh+git://l usr\\example.com@example.com:1234/D:/x')",[30676]
"('Description.java', 'org.junit.runner.Description', 'methodAndClassNamePatternGroupOrDefault', '([\\s\\S]*)\\((.*)\\)', 'testFileIgnoredNotHonored(org.eclipse.jgit.treewalk.filter.IndexDiffFilterTest)')","[136584, 137383]"
"('URIish.java', 'org.eclipse.jgit.transport.URIish', '<init>', '^(file):([\\\\/](?![\\\\/])((?:[A-Za-z]:)?[\\\\/]?(?:(?:[^\\\\/]+[\\\\/]+)*[^\\\\/]+[\\\\/]*)))$', '/tmp/jgit_test_4442660414069404548_tmp/tmp_2197519089635817093')","[221279, 221404, 221664, 221814, 222078]"
"('Description.java', 'org.junit.runner.Description', 'methodAndClassNamePatternGroupOrDefault', '([\\s\\S]*)\\((.*)\\)', 'testSingleRevision(org.eclipse.jgit.api.BlameCommandTest)')","[244558, 244945]"
"('URIish.java', 'org.eclipse.jgit.transport.URIish', '<init>', '^(file):([\\\\/](?![\\\\/])((?:[A-Za-z]:)?[\\\\/]?(?:(?:[^\\\\/]+[\\\\/]+)*[^\\\\/]+[\\\\/]*)))$', 'http://l usr\\example.com@[::1]//')","[47880, 48064]"
"('URIish.java', 'org.eclipse.jgit.transport.URIish', '<init>', '^([a-z][a-z0-9+-]+)://(?:(?:([^/:@]+)(?::([^\\\\/]+))?@)?((?:[^\\\\/:]+)|(?:\\[[0-9a-f:]+\\]))(?::(\\d+))?((?:/~(?:[^\\\\/]+))?[\\\\/]))?(.+)?$', 'http://l usr\\example.com:wtf@example.com:80//abc')",[20650]
"('URIish.java', 'org.eclipse.jgit.transport.URIish', '<init>', '^([a-z][a-z0-9+-]+)://(?:(?:([^/:@]+)(?::([^\\\\/]+))?@)?((?:[^\\\\/:]+)|(?:\\[[0-9a-f:]+\\]))(?::(\\d+))?((?:/~(?:[^\\\\/]+))?[\\\\/]))?(.+)?$', 'ssh://user@example.com:33/some/p ath')","[66625, 66671]"
"('Description.java', 'org.junit.runner.Description', 'methodAndClassNamePatternGroupOrDefault', '([\\s\\S]*)\\((.*)\\)', 'testAddRevFlagSet(org.eclipse.jgit.revwalk.RevObjectTest)')","[83829, 84247]"
"('Description.java', 'org.junit.runner.Description', 'methodAndClassNamePatternGroupOrDefault', '([\\s\\S]*)\\((.*)\\)', 'testForbiddenNamesOnWindowsEgDotCon(org.eclipse.jgit.lib.DirCacheCheckoutMaliciousPathTest)')","[111702, 112588]"
"('Description.java', 'org.junit.runner.Description', 'methodAndClassNamePatternGroupOrDefault', '([\\s\\S]*)\\((.*)\\)', 'testMasterMaster(org.eclipse.jgit.transport.RefSpecTest)')","[13568, 15191]"
"('Description.java', 'org.junit.runner.Description', 'methodAndClassNamePatternGroupOrDefault', '([\\s\\S]*)\\((.*)\\)', 'testTwoRangesInOneGroupCase3(org.eclipse.jgit.fnmatch.FileNameMatcherTest)')","[103918, 107317]"
"('Description.java', 'org.junit.runner.Description', 'methodAndClassNamePatternGroupOrDefault', '([\\s\\S]*)\\((.*)\\)', 'testFilePathCase1(org.eclipse.jgit.fnmatch.FileNameMatcherTest)')","[102847, 106195]"
"('Description.java', 'org.junit.runner.Description', 'methodAndClassNamePatternGroupOrDefault', '([\\s\\S]*)\\((.*)\\)', 'testCheckoutUncachedChanges(org.eclipse.jgit.lib.DirCacheCheckoutTest)')","[115969, 116918]"
"('URIish.java', 'org.eclipse.jgit.transport.URIish', '<init>', '^([\\\\/]?((?:[A-Za-z]:)?[\\\\/]?(?:(?:[^\\\\/]+[\\\\/]+)*[^\\\\/]+[\\\\/]*)))$', '/abc/')",[71310]
"('Description.java', 'org.junit.runner.Description', 'methodAndClassNamePatternGroupOrDefault', '([\\s\\S]*)\\((.*)\\)', 'test004_addTree(org.eclipse.jgit.lib.T0002_TreeTest)')","[119796, 120092]"
"('URIish.java', 'org.eclipse.jgit.transport.URIish', '<init>', '^([a-z][a-z0-9+-]+)://(?:(?:([^/:@]+)(?::([^\\\\/]+))?@)?((?:[^\\\\/:]+)|(?:\\[[0-9a-f:]+\\]))(?::(\\d+))?((?:/~(?:[^\\\\/]+))?[\\\\/]))?(.+)?$', 'http://l usr\\example.com@1.2.3.4:1234//abc')",[34333]
"('URIish.java', 'org.eclipse.jgit.transport.URIish', '<init>', '^([a-z][a-z0-9+-]+)://(?:(?:([^/:@]+)(?::([^\\\\/]+))?@)?((?:[^\\\\/:]+)|(?:\\[[0-9a-f:]+\\]))(?::(\\d+))?((?:/~(?:[^\\\\/]+))?[\\\\/]))?(.+)?$', 'ssh://me@[::1]//abc')","[40221, 40405]"
"('Description.java', 'org.junit.runner.Description', 'methodAndClassNamePatternGroupOrDefault', '([\\s\\S]*)\\((.*)\\)', 'test022_createCommitTag(org.eclipse.jgit.internal.storage.file.T0003_BasicTest)')","[249293, 249835]"
"('URIish.java', 'org.eclipse.jgit.transport.URIish', '<init>', '^(file):([\\\\/](?![\\\\/])((?:[A-Za-z]:)?[\\\\/]?(?:(?:[^\\\\/]+[\\\\/]+)*[^\\\\/]+[\\\\/]*)))$', 'http://l usr\\example.com@[::1]//abc')","[47926, 48110]"
"('Description.java', 'org.junit.runner.Description', 'methodAndClassNamePatternGroupOrDefault', '([\\s\\S]*)\\((.*)\\)', 'shouldFilterLineFeedFromMessage(org.eclipse.jgit.internal.storage.file.ReflogWriterTest)')","[250972, 250994]"
"('URIish.java', 'org.eclipse.jgit.transport.URIish', '<init>', '^(file):([\\\\/](?![\\\\/])((?:[A-Za-z]:)?[\\\\/]?(?:(?:[^\\\\/]+[\\\\/]+)*[^\\\\/]+[\\\\/]*)))$', 'file:/tmp/jgit_test_1094454074177318269_tmp/tmp_1052074793992381290/.git/')",[173655]
"('Description.java', 'org.junit.runner.Description', 'methodAndClassNamePatternGroupOrDefault', '([\\s\\S]*)\\((.*)\\)', 'testCreateFileHeader_GitLink(org.eclipse.jgit.diff.DiffFormatterTest)')","[95937, 96194]"
"('Description.java', 'org.junit.runner.Description', 'methodAndClassNamePatternGroupOrDefault', '([\\s\\S]*)\\((.*)\\)', 'testSpecialGroupCase0(org.eclipse.jgit.fnmatch.FileNameMatcherTest)')","[100915, 104171]"
"('Description.java', 'org.junit.runner.Description', 'methodAndClassNamePatternGroupOrDefault', '([\\s\\S]*)\\((.*)\\)', 'testParse_implicit_mixed_encoded(org.eclipse.jgit.revwalk.RevCommitParseTest)')","[83991, 84480]"
"('URIish.java', 'org.eclipse.jgit.transport.URIish', '<init>', '^([a-z][a-z0-9+-]+)://(?:(?:([^/:@]+)(?::([^\\\\/]+))?@)?((?:[^\\\\/:]+)|(?:\\[[0-9a-f:]+\\]))(?::(\\d+))?((?:/~(?:[^\\\\/]+))?[\\\\/]))?(.+)?$', 'http://lusr\\example@1.2.3.4/D:/x')","[48731, 48915]"
"('Description.java', 'org.junit.runner.Description', 'methodAndClassNamePatternGroupOrDefault', '([\\s\\S]*)\\((.*)\\)', 'testDequote_NamedEscapes(org.eclipse.jgit.util.QuotedStringBourneStyleTest)')","[183001, 183218]"
"('Description.java', 'org.junit.runner.Description', 'methodAndClassNamePatternGroupOrDefault', '([\\s\\S]*)\\((.*)\\)', 'testFillTo0(org.eclipse.jgit.util.IntListTest)')","[181809, 182045]"
"('Description.java', 'org.junit.runner.Description', 'methodAndClassNamePatternGroupOrDefault', '([\\s\\S]*)\\((.*)\\)', 'testDeleteLoosePacked(org.eclipse.jgit.internal.storage.file.RefUpdateTest)')","[252851, 253674]"
"('Description.java', 'org.junit.runner.Description', 'methodAndClassNamePatternGroupOrDefault', '([\\s\\S]*)\\((.*)\\)', 'testBuildOneFile_Commit(org.eclipse.jgit.dircache.DirCacheBuilderTest)')","[91820, 92016]"
"('Description.java', 'org.junit.runner.Description', 'methodAndClassNamePatternGroupOrDefault', '([\\s\\S]*)\\((.*)\\)', 'testEqualsWithWhitespace(org.eclipse.jgit.diff.RawTextIgnoreTrailingWhitespaceTest)')","[95032, 95133]"
"('URIish.java', 'org.eclipse.jgit.transport.URIish', '<init>', '^(file):([\\\\/](?![\\\\/])((?:[A-Za-z]:)?[\\\\/]?(?:(?:[^\\\\/]+[\\\\/]+)*[^\\\\/]+[\\\\/]*)))$', 'example.com:some/p ath')","[5657, 5726]"
"('Description.java', 'org.junit.runner.Description', 'methodAndClassNamePatternGroupOrDefault', '([\\s\\S]*)\\((.*)\\)', 'testMaliciousAbsolutePathIsOkTwoLevels(org.eclipse.jgit.lib.DirCacheCheckoutMaliciousPathTest)')","[112143, 113050]"
"('URIish.java', 'org.eclipse.jgit.transport.URIish', '<init>', '^([a-z][a-z0-9+-]+)://(?:(?:([^/:@]+)(?::([^\\\\/]+))?@)?((?:[^\\\\/:]+)|(?:\\[[0-9a-f:]+\\]))(?::(\\d+))?((?:/~(?:[^\\\\/]+))?[\\\\/]))?(.+)?$', 'file:///tmp/jgit_test_5055048526053498016_tmp/tmp_1936130010314046125.git/')",[180436]
"('URIish.java', 'org.eclipse.jgit.transport.URIish', '<init>', '^([a-z][a-z0-9+-]+)://(?:(?:([^/:@]+)(?::([^\\\\/]+))?@)?((?:[^\\\\/:]+)|(?:\\[[0-9a-f:]+\\]))(?::(\\d+))?((?:/~(?:[^\\\\/]+))?[\\\\/]))?(.+)?$', 'ssh+git://l usr\\example.com:wtf@[::1]:80//abc')",[16940]
"('Description.java', 'org.junit.runner.Description', 'methodAndClassNamePatternGroupOrDefault', '([\\s\\S]*)\\((.*)\\)', 'testFileCommittedDeletedCommittedIgnoredComparedWithInitialCommit(org.eclipse.jgit.treewalk.filter.IndexDiffFilterTest)')","[136794, 137603]"
"('URIish.java', 'org.eclipse.jgit.transport.URIish', '<init>', '^(file):([\\\\/](?![\\\\/])((?:[A-Za-z]:)?[\\\\/]?(?:(?:[^\\\\/]+[\\\\/]+)*[^\\\\/]+[\\\\/]*)))$', 'https://l usr\\example.com:wtf@example.com:1234//abc')",[23778]
"('URIish.java', 'org.eclipse.jgit.transport.URIish', '<init>', '^([a-z][a-z0-9+-]+)://(?:(?:([^/:@]+)(?::([^\\\\/]+))?@)?((?:[^\\\\/:]+)|(?:\\[[0-9a-f:]+\\]))(?::(\\d+))?((?:/~(?:[^\\\\/]+))?[\\\\/]))?(.+)?$', 'https://lusr\\example:wtf@[::1]:1234/D:/x')",[25687]
"('URIish.java', 'org.eclipse.jgit.transport.URIish', '<init>', '^(file):([\\\\/](?![\\\\/])((?:[A-Za-z]:)?[\\\\/]?(?:(?:[^\\\\/]+[\\\\/]+)*[^\\\\/]+[\\\\/]*)))$', 'http://l usr\\example.com@1.2.3.4:1234/D:\\x')",[34402]
"('URIish.java', 'org.eclipse.jgit.transport.URIish', '<init>', '^([a-z][a-z0-9+-]+)://(?:(?:([^/:@]+)(?::([^\\\\/]+))?@)?((?:[^\\\\/:]+)|(?:\\[[0-9a-f:]+\\]))(?::(\\d+))?((?:/~(?:[^\\\\/]+))?[\\\\/]))?(.+)?$', 'file:///tmp/jgit_test_6811481335877422117_tmp/tmp_7886630499899572320.git/')","[205364, 205420, 205727, 205783, 206556, 206612, 208240, 208296, 208845, 208901, 209149, 209205, 209453, 209509]"
"('Description.java', 'org.junit.runner.Description', 'methodAndClassNamePatternGroupOrDefault', '([\\s\\S]*)\\((.*)\\)', 'testWritePacket1(org.eclipse.jgit.transport.PacketLineOutTest)')","[74940, 75109]"
"('URIish.java', 'org.eclipse.jgit.transport.URIish', '<init>', '^([a-z][a-z0-9+-]+)://(?:(?:([^/:@]+)(?::([^\\\\/]+))?@)?((?:[^\\\\/:]+)|(?:\\[[0-9a-f:]+\\]))(?::(\\d+))?((?:/~(?:[^\\\\/]+))?[\\\\/]))?(.+)?$', 'ssh+git://me@[::1]/D:\\x')","[43625, 43809]"
"('Description.java', 'org.junit.runner.Description', 'methodAndClassNamePatternGroupOrDefault', '([\\s\\S]*)\\((.*)\\)', 'org.eclipse.jgit.treewalk.filter.InterIndexDiffFilterTest')","[139481, 139719]"
"('Description.java', 'org.junit.runner.Description', 'methodAndClassNamePatternGroupOrDefault', '([\\s\\S]*)\\((.*)\\)', 'org.eclipse.jgit.nls.RootLocaleTest')","[156, 1030]"
"('Description.java', 'org.junit.runner.Description', 'methodAndClassNamePatternGroupOrDefault', '([\\s\\S]*)\\((.*)\\)', 'testFilesAddedFromTwoBranches(org.eclipse.jgit.api.RebaseCommandTest)')","[218362, 219884]"
"('Description.java', 'org.junit.runner.Description', 'methodAndClassNamePatternGroupOrDefault', '([\\s\\S]*)\\((.*)\\)', 'testLowerGroupCase1(org.eclipse.jgit.fnmatch.FileNameMatcherTest)')","[101713, 105007]"
"('Description.java', 'org.junit.runner.Description', 'methodAndClassNamePatternGroupOrDefault', '([\\s\\S]*)\\((.*)\\)', 'testInvalidTagNoType3(org.eclipse.jgit.lib.ObjectCheckerTest)')","[122603, 124767]"
"('FastIgnoreRule.java', 'org.eclipse.jgit.ignore.FastIgnoreRule', 'isMatch', '[\\p{Space}]', '\r')",[161279]
"('Description.java', 'org.junit.runner.Description', 'methodAndClassNamePatternGroupOrDefault', '([\\s\\S]*)\\((.*)\\)', 'testDirectoryFileConflicts_16(org.eclipse.jgit.lib.DirCacheCheckoutTest)')","[116641, 117622]"
"('Description.java', 'org.junit.runner.Description', 'methodAndClassNamePatternGroupOrDefault', '([\\s\\S]*)\\((.*)\\)', 'testParseGitFileName_DqFooSpLfNulBar(org.eclipse.jgit.patch.FileHeaderTest)')","[195159, 195603]"
"('URIish.java', 'org.eclipse.jgit.transport.URIish', '<init>', '^(file):([\\\\/](?![\\\\/])((?:[A-Za-z]:)?[\\\\/]?(?:(?:[^\\\\/]+[\\\\/]+)*[^\\\\/]+[\\\\/]*)))$', 'https://[::1]//')","[63336, 63520, 64440, 64624, 65567, 65751]"
"('URIish.java', 'org.eclipse.jgit.transport.URIish', '<init>', '^([a-z][a-z0-9+-]+)://(?:(?:([^/:@]+)(?::([^\\\\/]+))?@)?((?:[^\\\\/:]+)|(?:\\[[0-9a-f:]+\\]))(?::(\\d+))?((?:/~(?:[^\\\\/]+))?[\\\\/]))?(.+)?$', 'ssh+git://me@example.com/D:/x')","[42843, 43027]"
"('URIish.java', 'org.eclipse.jgit.transport.URIish', '<init>', '^([a-z][a-z0-9+-]+)://(?:(?:([^/:@]+)(?::([^\\\\/]+))?@)?((?:[^\\\\/:]+)|(?:\\[[0-9a-f:]+\\]))(?::(\\d+))?((?:/~(?:[^\\\\/]+))?[\\\\/]))?(.+)?$', 'ssh://l usr\\example.com@example.com:80/D:\\x')",[27554]
"('Description.java', 'org.junit.runner.Description', 'methodAndClassNamePatternGroupOrDefault', '([\\s\\S]*)\\((.*)\\)', 'annotatedTags(org.eclipse.jgit.api.NameRevCommandTest)')","[242057, 242292]"
"('Description.java', 'org.junit.runner.Description', 'methodAndClassNamePatternGroupOrDefault', '([\\s\\S]*)\\((.*)\\)', 'testGetValidWithSlashesDotGitHumanishName(org.eclipse.jgit.transport.URIishTest)')","[1171, 4376]"
"('Description.java', 'org.junit.runner.Description', 'methodAndClassNamePatternGroupOrDefault', '([\\s\\S]*)\\((.*)\\)', 'testDiffWithPrefixes(org.eclipse.jgit.api.DiffCommandTest)')","[234434, 234565]"
"('URIish.java', 'org.eclipse.jgit.transport.URIish', '<init>', '^(file):([\\\\/](?![\\\\/])((?:[A-Za-z]:)?[\\\\/]?(?:(?:[^\\\\/]+[\\\\/]+)*[^\\\\/]+[\\\\/]*)))$', 'https://me@example.com:1234//')",[36104]
"('URIish.java', 'org.eclipse.jgit.transport.URIish', '<init>', '^(file):([\\\\/](?![\\\\/])((?:[A-Za-z]:)?[\\\\/]?(?:(?:[^\\\\/]+[\\\\/]+)*[^\\\\/]+[\\\\/]*)))$', 'ssh://l usr\\example.com:wtf@1.2.3.4:80/D:/x')",[11785]
"('Description.java', 'org.junit.runner.Description', 'methodAndClassNamePatternGroupOrDefault', '([\\s\\S]*)\\((.*)\\)', 'testMixedGroupCase1(org.eclipse.jgit.fnmatch.FileNameMatcherTest)')","[101293, 104567]"
"('FastIgnoreRule.java', 'org.eclipse.jgit.ignore.FastIgnoreRule', 'isMatch', '.*\\.st.', 'another')","[142146, 142308, 143317, 143452]"
"('URIish.java', 'org.eclipse.jgit.transport.URIish', '<init>', '^(file):([\\\\/](?![\\\\/])((?:[A-Za-z]:)?[\\\\/]?(?:(?:[^\\\\/]+[\\\\/]+)*[^\\\\/]+[\\\\/]*)))$', 'http://lusr\\example@example.com//')","[48248, 48432]"
"('URIish.java', 'org.eclipse.jgit.transport.URIish', '<init>', '^(file):([\\\\/](?![\\\\/])((?:[A-Za-z]:)?[\\\\/]?(?:(?:[^\\\\/]+[\\\\/]+)*[^\\\\/]+[\\\\/]*)))$', 'ssh+git://lusr\\example:wtf@example.com:80//abc')",[17308]
"('Description.java', 'org.junit.runner.Description', 'methodAndClassNamePatternGroupOrDefault', '([\\s\\S]*)\\((.*)\\)', 'testInvalidTreeBadSorting2(org.eclipse.jgit.lib.ObjectCheckerTest)')","[121364, 123469]"
"('Description.java', 'org.junit.runner.Description', 'methodAndClassNamePatternGroupOrDefault', '([\\s\\S]*)\\((.*)\\)', 'testNotBare_CreateRepositoryFromWorkDirOnly(org.eclipse.jgit.internal.storage.file.RepositorySetupWorkDirTest)')","[255747, 256004]"
"('URIish.java', 'org.eclipse.jgit.transport.URIish', '<init>', '^([a-z][a-z0-9+-]+)://(?:(?:([^/:@]+)(?::([^\\\\/]+))?@)?((?:[^\\\\/:]+)|(?:\\[[0-9a-f:]+\\]))(?::(\\d+))?((?:/~(?:[^\\\\/]+))?[\\\\/]))?(.+)?$', '/.git')",[66073]
"('URIish.java', 'org.eclipse.jgit.transport.URIish', '<init>', '^(file):([\\\\/](?![\\\\/])((?:[A-Za-z]:)?[\\\\/]?(?:(?:[^\\\\/]+[\\\\/]+)*[^\\\\/]+[\\\\/]*)))$', '/abc/')",[71218]
"('Description.java', 'org.junit.runner.Description', 'methodAndClassNamePatternGroupOrDefault', '([\\s\\S]*)\\((.*)\\)', 'testRebaseShouldSquashInCaseOfConflict(org.eclipse.jgit.api.RebaseCommandTest)')","[218677, 220214]"
"('Description.java', 'org.junit.runner.Description', 'methodAndClassNamePatternGroupOrDefault', '([\\s\\S]*)\\((.*)\\)', 'fetchShouldAutoFollowTagForFetchedObjects(org.eclipse.jgit.api.FetchCommandTest)')","[242911, 243041]"
"('Description.java', 'org.junit.runner.Description', 'methodAndClassNamePatternGroupOrDefault', '([\\s\\S]*)\\((.*)\\)', 'testDeleteNotEmptyTreeNotOkButIgnoreFail(org.eclipse.jgit.util.FileUtilTest)')","[176848, 177200]"
"('Description.java', 'org.junit.runner.Description', 'methodAndClassNamePatternGroupOrDefault', '([\\s\\S]*)\\((.*)\\)', 'testPut_NoPrefix(org.eclipse.jgit.util.RefMapTest)')","[183783, 184246]"
"('URIish.java', 'org.eclipse.jgit.transport.URIish', '<init>', '^([a-z][a-z0-9+-]+)://(?:(?:([^/:@]+)(?::([^\\\\/]+))?@)?((?:[^\\\\/:]+)|(?:\\[[0-9a-f:]+\\]))(?::(\\d+))?((?:/~(?:[^\\\\/]+))?[\\\\/]))?(.+)?$', '../../foo/bar')","[68895, 69010]"
"('Description.java', 'org.junit.runner.Description', 'methodAndClassNamePatternGroupOrDefault', '([\\s\\S]*)\\((.*)\\)', 'testForbiddenNamesOnWindowsEgLpr(org.eclipse.jgit.lib.DirCacheCheckoutMaliciousPathTest)')","[111681, 112566]"
"('URIish.java', 'org.eclipse.jgit.transport.URIish', '<init>', '^(file):([\\\\/](?![\\\\/])((?:[A-Za-z]:)?[\\\\/]?(?:(?:[^\\\\/]+[\\\\/]+)*[^\\\\/]+[\\\\/]*)))$', 'http://l usr\\example.com:wtf@example.com:1234//abc')",[20443]
"('Description.java', 'org.junit.runner.Description', 'methodAndClassNamePatternGroupOrDefault', '([\\s\\S]*)\\((.*)\\)', 'testOursEqualsTheirs(org.eclipse.jgit.notes.NoteMapMergerTest)')","[199836, 200206]"
"('Description.java', 'org.junit.runner.Description', 'methodAndClassNamePatternGroupOrDefault', '([\\s\\S]*)\\((.*)\\)', 'testNoFooters_NewlineOnlyBody1(org.eclipse.jgit.revwalk.FooterLineTest)')","[77523, 77929]"
"('URIish.java', 'org.eclipse.jgit.transport.URIish', '<init>', '^(file):([\\\\/](?![\\\\/])((?:[A-Za-z]:)?[\\\\/]?(?:(?:[^\\\\/]+[\\\\/]+)*[^\\\\/]+[\\\\/]*)))$', 'http://l usr\\example.com@[::1]:1234/D:\\x')",[34770]
"('Description.java', 'org.junit.runner.Description', 'methodAndClassNamePatternGroupOrDefault', '([\\s\\S]*)\\((.*)\\)', 'testParse_ShortLineOnlyEmbeddedLF(org.eclipse.jgit.revwalk.RevCommitParseTest)')","[84332, 84788]"
"('URIish.java', 'org.eclipse.jgit.transport.URIish', '<init>', '^([a-z][a-z0-9+-]+)://(?:(?:([^/:@]+)(?::([^\\\\/]+))?@)?((?:[^\\\\/:]+)|(?:\\[[0-9a-f:]+\\]))(?::(\\d+))?((?:/~(?:[^\\\\/]+))?[\\\\/]))?(.+)?$', 'ssh://lusr\\example@[::1]//abc')","[42429, 42613]"
"('URIish.java', 'org.eclipse.jgit.transport.URIish', '<init>', '^(file):([\\\\/](?![\\\\/])((?:[A-Za-z]:)?[\\\\/]?(?:(?:[^\\\\/]+[\\\\/]+)*[^\\\\/]+[\\\\/]*)))$', 'https://lusr\\example:wtf@example.com:80/D:\\x')",[25158]
"('Description.java', 'org.junit.runner.Description', 'methodAndClassNamePatternGroupOrDefault', '([\\s\\S]*)\\((.*)\\)', 'testFileCommittedModified(org.eclipse.jgit.treewalk.filter.IndexDiffFilterTest)')","[136752, 137559]"
"('Description.java', 'org.junit.runner.Description', 'methodAndClassNamePatternGroupOrDefault', '([\\s\\S]*)\\((.*)\\)', 'testError_TruncatedNew(org.eclipse.jgit.patch.PatchErrorTest)')","[194595, 194723]"
"('URIish.java', 'org.eclipse.jgit.transport.URIish', '<init>', '^(file):([\\\\/](?![\\\\/])((?:[A-Za-z]:)?[\\\\/]?(?:(?:[^\\\\/]+[\\\\/]+)*[^\\\\/]+[\\\\/]*)))$', 'https://l usr\\example.com@1.2.3.4:1234/D:/x')",[37668]
"('URIish.java', 'org.eclipse.jgit.transport.URIish', '<init>', '^([a-z][a-z0-9+-]+)://(?:(?:([^/:@]+)(?::([^\\\\/]+))?@)?((?:[^\\\\/:]+)|(?:\\[[0-9a-f:]+\\]))(?::(\\d+))?((?:/~(?:[^\\\\/]+))?[\\\\/]))?(.+)?$', 'https://l usr\\example.com@1.2.3.4:80/D:/x')",[37875]
"('Description.java', 'org.junit.runner.Description', 'methodAndClassNamePatternGroupOrDefault', '([\\s\\S]*)\\((.*)\\)', 'testToString(org.eclipse.jgit.lib.SymbolicRefTest)')","[109925, 109990]"
"('URIish.java', 'org.eclipse.jgit.transport.URIish', '<init>', '^(file):([\\\\/](?![\\\\/])((?:[A-Za-z]:)?[\\\\/]?(?:(?:[^\\\\/]+[\\\\/]+)*[^\\\\/]+[\\\\/]*)))$', 'http://me@[::1]:1234/D:\\x')",[33666]
"('URIish.java', 'org.eclipse.jgit.transport.URIish', '<init>', '^([a-z][a-z0-9+-]+)://(?:(?:([^/:@]+)(?::([^\\\\/]+))?@)?((?:[^\\\\/:]+)|(?:\\[[0-9a-f:]+\\]))(?::(\\d+))?((?:/~(?:[^\\\\/]+))?[\\\\/]))?(.+)?$', 'ssh://me@example.com:1234//abc')",[26009]
"('FastIgnoreRule.java', 'org.eclipse.jgit.ignore.FastIgnoreRule', 'isMatch', '[\\p{Punct}]', '@')",[162086]
"('Description.java', 'org.junit.runner.Description', 'methodAndClassNamePatternGroupOrDefault', '([\\s\\S]*)\\((.*)\\)', 'testXDigitGroupCase4(org.eclipse.jgit.fnmatch.FileNameMatcherTest)')","[103582, 106965]"
"('URIish.java', 'org.eclipse.jgit.transport.URIish', '<init>', '^(?:([^/:@]+)(?::([^\\\\/]+))?@)?([^\\\\/:]{2,}):([\\\\/](?:(?:[^\\\\/]+[\\\\/]+)*[^\\\\/]+[\\\\/]*))$', '/tmp/jgit_test_1514057598611897554_tmp/tmp_7977849081850125086')","[227666, 227806]"
"('URIish.java', 'org.eclipse.jgit.transport.URIish', '<init>', '^([a-z][a-z0-9+-]+)://(?:(?:([^/:@]+)(?::([^\\\\/]+))?@)?((?:[^\\\\/:]+)|(?:\\[[0-9a-f:]+\\]))(?::(\\d+))?((?:/~(?:[^\\\\/]+))?[\\\\/]))?(.+)?$', 'ssh+git://me@1.2.3.4:1234//abc')",[29917]
"('FastIgnoreRule.java', 'org.eclipse.jgit.ignore.FastIgnoreRule', 'isMatch', '[b-ce-e]', 'e')",[163518]
"('Description.java', 'org.junit.runner.Description', 'methodAndClassNamePatternGroupOrDefault', '([\\s\\S]*)\\((.*)\\)', 'testShouldNotBlowUpIfThereAreNoTagsInRepository(org.eclipse.jgit.api.TagCommandTest)')","[201742, 202045]"
"('Description.java', 'org.junit.runner.Description', 'methodAndClassNamePatternGroupOrDefault', '([\\s\\S]*)\\((.*)\\)', 'testModifyX(org.eclipse.jgit.api.ApplyCommandTest)')","[223589, 223828]"
"('Description.java', 'org.junit.runner.Description', 'methodAndClassNamePatternGroupOrDefault', '([\\s\\S]*)\\((.*)\\)', 'testCheckoutFirst(org.eclipse.jgit.api.PathCheckoutCommandTest)')","[224551, 224811]"
"('ChangeIdUtil.java', 'org.eclipse.jgit.util.ChangeIdUtil', 'indexOfChangeId', '(^Change-Id: *I[a-f0-9]{40}$)', 'Change-Id:')",[187362]
"('Description.java', 'org.junit.runner.Description', 'methodAndClassNamePatternGroupOrDefault', '([\\s\\S]*)\\((.*)\\)', 'testFastForwardWithMultipleCommitsOnDifferentBranches(org.eclipse.jgit.api.RebaseCommandTest)')","[218068, 219576]"
"('URIish.java', 'org.eclipse.jgit.transport.URIish', '<init>', '^(file):([\\\\/](?![\\\\/])((?:[A-Za-z]:)?[\\\\/]?(?:(?:[^\\\\/]+[\\\\/]+)*[^\\\\/]+[\\\\/]*)))$', 'https://lusr\\example:wtf@[::1]:80/D:\\x')",[25894]
"('Description.java', 'org.junit.runner.Description', 'methodAndClassNamePatternGroupOrDefault', '([\\s\\S]*)\\((.*)\\)', 'testMixedGroupCase7[OldRule? true](org.eclipse.jgit.ignore.IgnoreRuleSpecialCasesTest)')","[149800, 156884]"
"('Description.java', 'org.junit.runner.Description', 'methodAndClassNamePatternGroupOrDefault', '([\\s\\S]*)\\((.*)\\)', 'testBeforeAfterCuts(org.eclipse.jgit.diff.EditTest)')","[100102, 100453]"
"('URIish.java', 'org.eclipse.jgit.transport.URIish', '<init>', '^(?:([^/:@]+)(?::([^\\\\/]+))?@)?((?:[^\\\\/:]+)|(?:\\[[0-9a-f:]+\\])):((?:(?:/~(?:[^\\\\/]+))[\\\\/])?(?:(?:[^\\\\/]+[\\\\/]+)*[^\\\\/]+[\\\\/]*))$', '/tmp/jgit_test_4002911052512723791_tmp/tmp_1346628727612174896.git')","[78644, 78818]"
"('Description.java', 'org.junit.runner.Description', 'methodAndClassNamePatternGroupOrDefault', '([\\s\\S]*)\\((.*)\\)', 'untrackedFileNotIncluded(org.eclipse.jgit.api.StashApplyCommandTest)')","[241168, 241736]"
"('Description.java', 'org.junit.runner.Description', 'methodAndClassNamePatternGroupOrDefault', '([\\s\\S]*)\\((.*)\\)', 'testRandomWrites(org.eclipse.jgit.util.TemporaryBufferTest)')","[178490, 178793]"
"('URIish.java', 'org.eclipse.jgit.transport.URIish', '<init>', '^(file):([\\\\/](?![\\\\/])((?:[A-Za-z]:)?[\\\\/]?(?:(?:[^\\\\/]+[\\\\/]+)*[^\\\\/]+[\\\\/]*)))$', '/~some/p ath')","[68550, 68665]"
"('Description.java', 'org.junit.runner.Description', 'methodAndClassNamePatternGroupOrDefault', '([\\s\\S]*)\\((.*)\\)', 'testActuallyIsModifiedTrivial(org.eclipse.jgit.internal.storage.file.FileSnapshotTest)')","[250429, 250515]"
"('Description.java', 'org.junit.runner.Description', 'methodAndClassNamePatternGroupOrDefault', '([\\s\\S]*)\\((.*)\\)', 'testSlashOnlyMatchesDirectory(org.eclipse.jgit.ignore.IgnoreNodeTest)')","[140647, 140952]"
"('URIish.java', 'org.eclipse.jgit.transport.URIish', '<init>', '^([a-z][a-z0-9+-]+)://(?:(?:([^/:@]+)(?::([^\\\\/]+))?@)?((?:[^\\\\/:]+)|(?:\\[[0-9a-f:]+\\]))(?::(\\d+))?((?:/~(?:[^\\\\/]+))?[\\\\/]))?(.+)?$', 'ssh://lusr\\example:wtf@1.2.3.4:80//')",[13003]
"('Description.java', 'org.junit.runner.Description', 'methodAndClassNamePatternGroupOrDefault', '([\\s\\S]*)\\((.*)\\)', 'testMergeInItself(org.eclipse.jgit.api.MergeCommandTest)')","[213891, 214814]"
"('Description.java', 'org.junit.runner.Description', 'methodAndClassNamePatternGroupOrDefault', '([\\s\\S]*)\\((.*)\\)', 'testTimeout_flush_Success(org.eclipse.jgit.util.io.TimeoutOutputStreamTest)')","[172665, 172861]"
"('URIish.java', 'org.eclipse.jgit.transport.URIish', '<init>', '^(file):([\\\\/](?![\\\\/])((?:[A-Za-z]:)?[\\\\/]?(?:(?:[^\\\\/]+[\\\\/]+)*[^\\\\/]+[\\\\/]*)))$', 'ssh+git://l usr\\example.com@example.com//abc')","[43878, 44062]"
"('Description.java', 'org.junit.runner.Description', 'methodAndClassNamePatternGroupOrDefault', '([\\s\\S]*)\\((.*)\\)', 'checkForCorrectIndex(org.eclipse.jgit.merge.ResolveMergerTest)')","[88309, 88639]"
"('Description.java', 'org.junit.runner.Description', 'methodAndClassNamePatternGroupOrDefault', '([\\s\\S]*)\\((.*)\\)', 'testSetByte(org.eclipse.jgit.lib.ObjectIdTest)')","[130718, 131003]"
"('URIish.java', 'org.eclipse.jgit.transport.URIish', '<init>', '^([a-z][a-z0-9+-]+)://(?:(?:([^/:@]+)(?::([^\\\\/]+))?@)?((?:[^\\\\/:]+)|(?:\\[[0-9a-f:]+\\]))(?::(\\d+))?((?:/~(?:[^\\\\/]+))?[\\\\/]))?(.+)?$', 'ssh+git://lusr\\example@[::1]:1234//')",[32447]
"('URIish.java', 'org.eclipse.jgit.transport.URIish', '<init>', '^(file):([\\\\/](?![\\\\/])((?:[A-Za-z]:)?[\\\\/]?(?:(?:[^\\\\/]+[\\\\/]+)*[^\\\\/]+[\\\\/]*)))$', 'ssh://l usr\\example.com:wtf@example.com:80/D:/x')",[11099]
"('Description.java', 'org.junit.runner.Description', 'methodAndClassNamePatternGroupOrDefault', '([\\s\\S]*)\\((.*)\\)', 'testStandardFormat_LargeObject_TruncatedZLibStream(org.eclipse.jgit.internal.storage.file.UnpackedObjectTest)')","[255001, 255319]"
"('Description.java', 'org.junit.runner.Description', 'methodAndClassNamePatternGroupOrDefault', '([\\s\\S]*)\\((.*)\\)', 'org.eclipse.jgit.api.BranchCommandTest')","[226775, 231451]"
"('URIish.java', 'org.eclipse.jgit.transport.URIish', '<init>', '^(file):([\\\\/](?![\\\\/])((?:[A-Za-z]:)?[\\\\/]?(?:(?:[^\\\\/]+[\\\\/]+)*[^\\\\/]+[\\\\/]*)))$', 'http://me@example.com:1234//abc')",[32838]
"('URIish.java', 'org.eclipse.jgit.transport.URIish', '<init>', '^(file):([\\\\/](?![\\\\/])((?:[A-Za-z]:)?[\\\\/]?(?:(?:[^\\\\/]+[\\\\/]+)*[^\\\\/]+[\\\\/]*)))$', 'ssh+git://lusr\\example@1.2.3.4:1234//')",[32056]
"('Description.java', 'org.junit.runner.Description', 'methodAndClassNamePatternGroupOrDefault', '([\\s\\S]*)\\((.*)\\)', 'testAuthorScriptConverter(org.eclipse.jgit.api.RebaseCommandTest)')","[218194, 219708]"
"('Description.java', 'org.junit.runner.Description', 'methodAndClassNamePatternGroupOrDefault', '([\\s\\S]*)\\((.*)\\)', 'testReadBoolean_TrueFalse1(org.eclipse.jgit.lib.ConfigTest)')","[129617, 130363]"
"('URIish.java', 'org.eclipse.jgit.transport.URIish', '<init>', '^([a-z][a-z0-9+-]+)://(?:(?:([^/:@]+)(?::([^\\\\/]+))?@)?((?:[^\\\\/:]+)|(?:\\[[0-9a-f:]+\\]))(?::(\\d+))?((?:/~(?:[^\\\\/]+))?[\\\\/]))?(.+)?$', '/a/b/c//')",[70712]
"('Description.java', 'org.junit.runner.Description', 'methodAndClassNamePatternGroupOrDefault', '([\\s\\S]*)\\((.*)\\)', 'testUnchangedComplex(org.eclipse.jgit.lib.IndexDiffTest)')","[110280, 110617]"
"('URIish.java', 'org.eclipse.jgit.transport.URIish', '<init>', '^(file):([\\\\/](?![\\\\/])((?:[A-Za-z]:)?[\\\\/]?(?:(?:[^\\\\/]+[\\\\/]+)*[^\\\\/]+[\\\\/]*)))$', 'http://me@example.com:80//')",[32976]
"('Description.java', 'org.junit.runner.Description', 'methodAndClassNamePatternGroupOrDefault', '([\\s\\S]*)\\((.*)\\)', 'testPushWithRefSpecFromConfig(org.eclipse.jgit.api.PushCommandTest)')","[203045, 203175]"
"('Description.java', 'org.junit.runner.Description', 'methodAndClassNamePatternGroupOrDefault', '([\\s\\S]*)\\((.*)\\)', 'testGetText_Convert(org.eclipse.jgit.patch.GetTextTest)')","[196690, 196778]"
"('URIish.java', 'org.eclipse.jgit.transport.URIish', '<init>', '^([a-z][a-z0-9+-]+)://(?:(?:([^/:@]+)(?::([^\\\\/]+))?@)?((?:[^\\\\/:]+)|(?:\\[[0-9a-f:]+\\]))(?::(\\d+))?((?:/~(?:[^\\\\/]+))?[\\\\/]))?(.+)?$', 'ssh+git://lusr\\example:wtf@1.2.3.4:1234//abc')",[17515]
"('URIish.java', 'org.eclipse.jgit.transport.URIish', '<init>', '^(file):([\\\\/](?![\\\\/])((?:[A-Za-z]:)?[\\\\/]?(?:(?:[^\\\\/]+[\\\\/]+)*[^\\\\/]+[\\\\/]*)))$', 'file:/tmp/jgit_test_5055048526053498016_tmp/tmp_2027499772864651717/.git/')","[177229, 177257, 178932, 178960]"
"('ChangeIdUtil.java', 'org.eclipse.jgit.util.ChangeIdUtil', 'indexOfChangeId', '(^Change-Id: *I[a-f0-9]{40}$)', 'Change-Id: I388bdaf52ed05b55e62a22d0a20d2c1ae0d33e7e')","[188696, 190193]"
"('URIish.java', 'org.eclipse.jgit.transport.URIish', '<init>', '^(file):([\\\\/](?![\\\\/])((?:[A-Za-z]:)?[\\\\/]?(?:(?:[^\\\\/]+[\\\\/]+)*[^\\\\/]+[\\\\/]*)))$', 'ssh://l usr\\example.com:wtf@example.com:1234//')",[10311]
"('URIish.java', 'org.eclipse.jgit.transport.URIish', '<init>', '^([a-z][a-z0-9+-]+)://(?:(?:([^/:@]+)(?::([^\\\\/]+))?@)?((?:[^\\\\/:]+)|(?:\\[[0-9a-f:]+\\]))(?::(\\d+))?((?:/~(?:[^\\\\/]+))?[\\\\/]))?(.+)?$', 'https://me@example.com:80/D:/x')",[36403]
"('URIish.java', 'org.eclipse.jgit.transport.URIish', '<init>', '^([a-z][a-z0-9+-]+)://(?:(?:([^/:@]+)(?::([^\\\\/]+))?@)?((?:[^\\\\/:]+)|(?:\\[[0-9a-f:]+\\]))(?::(\\d+))?((?:/~(?:[^\\\\/]+))?[\\\\/]))?(.+)?$', 'ssh://me@example.com:80//abc')",[26193]
"('URIish.java', 'org.eclipse.jgit.transport.URIish', '<init>', '^(file):([\\\\/](?![\\\\/])((?:[A-Za-z]:)?[\\\\/]?(?:(?:[^\\\\/]+[\\\\/]+)*[^\\\\/]+[\\\\/]*)))$', 'http://lusr\\example:wtf@[::1]:1234/D:/x')",[22352]
"('URIish.java', 'org.eclipse.jgit.transport.URIish', '<init>', '^(?:([^/:@]+)(?::([^\\\\/]+))?@)?([^\\\\/:]{2,}):([\\\\/](?:(?:[^\\\\/]+[\\\\/]+)*[^\\\\/]+[\\\\/]*))$', '/tmp/jgit_test_4337800104653581569_tmp/tmp_3318288783057189273/.git')","[111055, 111210]"
"('FastIgnoreRule.java', 'org.eclipse.jgit.ignore.FastIgnoreRule', 'isMatch', '[\\[:]', ':')",[160550]
"('Description.java', 'org.junit.runner.Description', 'methodAndClassNamePatternGroupOrDefault', '([\\s\\S]*)\\((.*)\\)', 'testSimpleStarCase0(org.eclipse.jgit.fnmatch.FileNameMatcherTest)')","[102343, 105667]"
"('Description.java', 'org.junit.runner.Description', 'methodAndClassNamePatternGroupOrDefault', '([\\s\\S]*)\\((.*)\\)', 'testValidSpecialCharacterUnixs(org.eclipse.jgit.lib.ValidRefNameTest)')","[118425, 118786]"
"('FastIgnoreRule.java', 'org.eclipse.jgit.ignore.FastIgnoreRule', 'isMatch', '[\\.a\\.]', 'a')",[161956]
"('Description.java', 'org.junit.runner.Description', 'methodAndClassNamePatternGroupOrDefault', '([\\s\\S]*)\\((.*)\\)', 'invalidNames(org.eclipse.jgit.lib.RepositoryResolveTest)')","[125344, 125816]"
"('URIish.java', 'org.eclipse.jgit.transport.URIish', '<init>', '^(file):([\\\\/](?![\\\\/])((?:[A-Za-z]:)?[\\\\/]?(?:(?:[^\\\\/]+[\\\\/]+)*[^\\\\/]+[\\\\/]*)))$', 'https://l usr\\example.com@1.2.3.4/D:\\x')","[50962, 51146]"
"('Description.java', 'org.junit.runner.Description', 'methodAndClassNamePatternGroupOrDefault', '([\\s\\S]*)\\((.*)\\)', 'test011_toString(org.eclipse.jgit.lib.ObjectIdTest)')","[130487, 130761]"
"('Description.java', 'org.junit.runner.Description', 'methodAndClassNamePatternGroupOrDefault', '([\\s\\S]*)\\((.*)\\)', 'testRepoManifestCopyFile(org.eclipse.jgit.gitrepo.RepoCommandTest)')","[140051, 140358]"
"('URIish.java', 'org.eclipse.jgit.transport.URIish', '<init>', '^([a-z][a-z0-9+-]+)://(?:(?:([^/:@]+)(?::([^\\\\/]+))?@)?((?:[^\\\\/:]+)|(?:\\[[0-9a-f:]+\\]))(?::(\\d+))?((?:/~(?:[^\\\\/]+))?[\\\\/]))?(.+)?$', 'ssh://me:wtf@1.2.3.4:80/D:\\x')",[9024]
"('URIish.java', 'org.eclipse.jgit.transport.URIish', '<init>', '^([a-z][a-z0-9+-]+)://(?:(?:([^/:@]+)(?::([^\\\\/]+))?@)?((?:[^\\\\/:]+)|(?:\\[[0-9a-f:]+\\]))(?::(\\d+))?((?:/~(?:[^\\\\/]+))?[\\\\/]))?(.+)?$', '/tmp/jgit_test_3935765607714589377_tmp/tmp_2556057231773619862/.git')","[230194, 230332]"
"('URIish.java', 'org.eclipse.jgit.transport.URIish', '<init>', '^([a-z][a-z0-9+-]+)://(?:(?:([^/:@]+)(?::([^\\\\/]+))?@)?((?:[^\\\\/:]+)|(?:\\[[0-9a-f:]+\\]))(?::(\\d+))?((?:/~(?:[^\\\\/]+))?[\\\\/]))?(.+)?$', '/tmp/jgit_test_3729351677476967516_tmp/tmp_3631166462441270745/.git')","[228359, 228497]"
"('ChangeIdUtil.java', 'org.eclipse.jgit.util.ChangeIdUtil', 'indexOfFirstFooterLine', '(^[a-zA-Z0-9-]+:(?!//).*$)', 'Issue: 42')",[188596]
"('URIish.java', 'org.eclipse.jgit.transport.URIish', '<init>', '^([a-z][a-z0-9+-]+)://(?:(?:([^/:@]+)(?::([^\\\\/]+))?@)?((?:[^\\\\/:]+)|(?:\\[[0-9a-f:]+\\]))(?::(\\d+))?((?:/~(?:[^\\\\/]+))?[\\\\/]))?(.+)?$', 'http://me:wtf@[::1]:80/D:\\x')",[20374]
"('URIish.java', 'org.eclipse.jgit.transport.URIish', '<init>', '^(file):([\\\\/](?![\\\\/])((?:[A-Za-z]:)?[\\\\/]?(?:(?:[^\\\\/]+[\\\\/]+)*[^\\\\/]+[\\\\/]*)))$', 'ssh://l usr\\example.com@1.2.3.4:1234/D:/x')",[27669]
"('URIish.java', 'org.eclipse.jgit.transport.URIish', '<init>', '^([a-z][a-z0-9+-]+)://(?:(?:([^/:@]+)(?::([^\\\\/]+))?@)?((?:[^\\\\/:]+)|(?:\\[[0-9a-f:]+\\]))(?::(\\d+))?((?:/~(?:[^\\\\/]+))?[\\\\/]))?(.+)?$', 'https://me:wtf@example.com:80/D:\\x')",[22973]
"('Description.java', 'org.junit.runner.Description', 'methodAndClassNamePatternGroupOrDefault', '([\\s\\S]*)\\((.*)\\)', 'org.eclipse.jgit.internal.storage.file.GcConcurrentTest')","[254836, 254902]"
"('Description.java', 'org.junit.runner.Description', 'methodAndClassNamePatternGroupOrDefault', '([\\s\\S]*)\\((.*)\\)', 'testCRLF(org.eclipse.jgit.util.io.EolCanonicalizingInputStreamTest)')","[174619, 174768]"
"('URIish.java', 'org.eclipse.jgit.transport.URIish', '<init>', '^([a-z][a-z0-9+-]+)://(?:(?:([^/:@]+)(?::([^\\\\/]+))?@)?((?:[^\\\\/:]+)|(?:\\[[0-9a-f:]+\\]))(?::(\\d+))?((?:/~(?:[^\\\\/]+))?[\\\\/]))?(.+)?$', 'http://l usr\\example.com@[::1]/D:\\x')","[48041, 48225]"
"('URIish.java', 'org.eclipse.jgit.transport.URIish', '<init>', '^([a-z][a-z0-9+-]+)://(?:(?:([^/:@]+)(?::([^\\\\/]+))?@)?((?:[^\\\\/:]+)|(?:\\[[0-9a-f:]+\\]))(?::(\\d+))?((?:/~(?:[^\\\\/]+))?[\\\\/]))?(.+)?$', 'https://lusr\\example:wtf@example.com:1234//')",[24859]
"('Description.java', 'org.junit.runner.Description', 'methodAndClassNamePatternGroupOrDefault', '([\\s\\S]*)\\((.*)\\)', 'testFilter_NONE_Or_ALL(org.eclipse.jgit.revwalk.RevWalkFilterTest)')","[83167, 83488]"
"('URIish.java', 'org.eclipse.jgit.transport.URIish', '<init>', '^([a-z][a-z0-9+-]+)://(?:(?:([^/:@]+)(?::([^\\\\/]+))?@)?((?:[^\\\\/:]+)|(?:\\[[0-9a-f:]+\\]))(?::(\\d+))?((?:/~(?:[^\\\\/]+))?[\\\\/]))?(.+)?$', 'https://lusr\\example@example.com//abc')","[51629, 51813]"
"('Description.java', 'org.junit.runner.Description', 'methodAndClassNamePatternGroupOrDefault', '([\\s\\S]*)\\((.*)\\)', 'testInitRepository(org.eclipse.jgit.api.InitCommandTest)')","[234177, 234243]"
"('Description.java', 'org.junit.runner.Description', 'methodAndClassNamePatternGroupOrDefault', '([\\s\\S]*)\\((.*)\\)', 'testPackCommitsAndLooseOne(org.eclipse.jgit.internal.storage.file.GcBasicPackingTest)')","[247123, 247254]"
"('Description.java', 'org.junit.runner.Description', 'methodAndClassNamePatternGroupOrDefault', '([\\s\\S]*)\\((.*)\\)', 'testRebaseWithUncommittedDelete(org.eclipse.jgit.api.RebaseCommandTest)')","[217375, 218850]"
"('Description.java', 'org.junit.runner.Description', 'methodAndClassNamePatternGroupOrDefault', '([\\s\\S]*)\\((.*)\\)', 'testHasChangeidWithReplacementInLastLineNoLineBreak(org.eclipse.jgit.util.ChangeIdUtilTest)')","[185777, 186534]"
"('Description.java', 'org.junit.runner.Description', 'methodAndClassNamePatternGroupOrDefault', '([\\s\\S]*)\\((.*)\\)', 'testNegateAllExceptJavaInSrc(org.eclipse.jgit.ignore.IgnoreNodeTest)')","[140584, 140886]"
"('Description.java', 'org.junit.runner.Description', 'methodAndClassNamePatternGroupOrDefault', '([\\s\\S]*)\\((.*)\\)', 'testEqualsIgnoreCase3(org.eclipse.jgit.util.StringUtilsTest)')","[175903, 176054]"
"('URIish.java', 'org.eclipse.jgit.transport.URIish', '<init>', '^([a-z][a-z0-9+-]+)://(?:(?:([^/:@]+)(?::([^\\\\/]+))?@)?((?:[^\\\\/:]+)|(?:\\[[0-9a-f:]+\\]))(?::(\\d+))?((?:/~(?:[^\\\\/]+))?[\\\\/]))?(.+)?$', 'https://l usr\\example.com:wtf@example.com:80//')",[23939]
"('Description.java', 'org.junit.runner.Description', 'methodAndClassNamePatternGroupOrDefault', '([\\s\\S]*)\\((.*)\\)', 'org.eclipse.jgit.util.RawSubStringPatternTest')","[176179, 176374]"
"('URIish.java', 'org.eclipse.jgit.transport.URIish', '<init>', '^(file):([\\\\/](?![\\\\/])((?:[A-Za-z]:)?[\\\\/]?(?:(?:[^\\\\/]+[\\\\/]+)*[^\\\\/]+[\\\\/]*)))$', 'ssh+git://l usr\\example.com:wtf@[::1]:80//')",[16871]
"('URIish.java', 'org.eclipse.jgit.transport.URIish', '<init>', '^(file):([\\\\/](?![\\\\/])((?:[A-Za-z]:)?[\\\\/]?(?:(?:[^\\\\/]+[\\\\/]+)*[^\\\\/]+[\\\\/]*)))$', 'ssh+git://example.com/D:\\x')","[56114, 56298, 57218, 57402, 58322, 58506]"
"('URIish.java', 'org.eclipse.jgit.transport.URIish', '<init>', '^(file):([\\\\/](?![\\\\/])((?:[A-Za-z]:)?[\\\\/]?(?:(?:[^\\\\/]+[\\\\/]+)*[^\\\\/]+[\\\\/]*)))$', 'git://example.com/here')",[126108]
"('Description.java', 'org.junit.runner.Description', 'methodAndClassNamePatternGroupOrDefault', '([\\s\\S]*)\\((.*)\\)', 'testTwoLevelSubtree_Recursive(org.eclipse.jgit.dircache.DirCacheIteratorTest)')","[92603, 92844]"
"('Description.java', 'org.junit.runner.Description', 'methodAndClassNamePatternGroupOrDefault', '([\\s\\S]*)\\((.*)\\)', 'noStashedCommits(org.eclipse.jgit.api.StashApplyCommandTest)')","[240874, 241428]"
"('URIish.java', 'org.eclipse.jgit.transport.URIish', '<init>', '^(file):([\\\\/](?![\\\\/])((?:[A-Za-z]:)?[\\\\/]?(?:(?:[^\\\\/]+[\\\\/]+)*[^\\\\/]+[\\\\/]*)))$', 'ssh+git://l usr\\example.com@[::1]/D:\\x')","[44706, 44890]"
"('URIish.java', 'org.eclipse.jgit.transport.URIish', '<init>', '^([a-z][a-z0-9+-]+)://(?:(?:([^/:@]+)(?::([^\\\\/]+))?@)?((?:[^\\\\/:]+)|(?:\\[[0-9a-f:]+\\]))(?::(\\d+))?((?:/~(?:[^\\\\/]+))?[\\\\/]))?(.+)?$', 'ssh://me:wtf@1.2.3.4:1234/D:/x')",[8794]
"('Description.java', 'org.junit.runner.Description', 'methodAndClassNamePatternGroupOrDefault', '([\\s\\S]*)\\((.*)\\)', 'testWindowsReservedNames(org.eclipse.jgit.lib.ValidRefNameTest)')","[118551, 118918]"
"('Description.java', 'org.junit.runner.Description', 'methodAndClassNamePatternGroupOrDefault', '([\\s\\S]*)\\((.*)\\)', 'testReadWriteMergeMsg(org.eclipse.jgit.lib.SquashCommitMsgTest)')","[131105, 131127]"
"('URIish.java', 'org.eclipse.jgit.transport.URIish', '<init>', '^([\\\\/]?((?:[A-Za-z]:)?[\\\\/]?(?:(?:[^\\\\/]+[\\\\/]+)*[^\\\\/]+[\\\\/]*)))$', '/abc/.git')",[68136]
"('URIish.java', 'org.eclipse.jgit.transport.URIish', '<init>', '^(file):([\\\\/](?![\\\\/])((?:[A-Za-z]:)?[\\\\/]?(?:(?:[^\\\\/]+[\\\\/]+)*[^\\\\/]+[\\\\/]*)))$', 'ssh://l usr\\example.com@example.com:80//')",[27393]
"('Description.java', 'org.junit.runner.Description', 'methodAndClassNamePatternGroupOrDefault', '([\\s\\S]*)\\((.*)\\)', 'testClear(org.eclipse.jgit.revwalk.DateRevQueueTest)')","[82494, 82647]"
"('URIish.java', 'org.eclipse.jgit.transport.URIish', '<init>', '^([a-z][a-z0-9+-]+)://(?:(?:([^/:@]+)(?::([^\\\\/]+))?@)?((?:[^\\\\/:]+)|(?:\\[[0-9a-f:]+\\]))(?::(\\d+))?((?:/~(?:[^\\\\/]+))?[\\\\/]))?(.+)?$', 'https://example.com/D:\\x')","[62761, 62945, 63865, 64049, 64969, 65153]"
"('URIish.java', 'org.eclipse.jgit.transport.URIish', '<init>', '^(file):([\\\\/](?![\\\\/])((?:[A-Za-z]:)?[\\\\/]?(?:(?:[^\\\\/]+[\\\\/]+)*[^\\\\/]+[\\\\/]*)))$', 'file:///tmp/jgit_test_7461712746911923641_tmp/tmp_176487003695858505')","[200675, 200732, 200793]"
"('URIish.java', 'org.eclipse.jgit.transport.URIish', '<init>', '^(file):([\\\\/](?![\\\\/])((?:[A-Za-z]:)?[\\\\/]?(?:(?:[^\\\\/]+[\\\\/]+)*[^\\\\/]+[\\\\/]*)))$', 'ssh://example.com/some/p ath')","[69654, 69700]"
"('Description.java', 'org.junit.runner.Description', 'methodAndClassNamePatternGroupOrDefault', '([\\s\\S]*)\\((.*)\\)', 'commitNewSubmodule(org.eclipse.jgit.api.CommitCommandTest)')","[212456, 212674]"
"('Description.java', 'org.junit.runner.Description', 'methodAndClassNamePatternGroupOrDefault', '([\\s\\S]*)\\((.*)\\)', 'test000_sort_01(org.eclipse.jgit.lib.T0002_TreeTest)')","[119901, 120202]"
"('Description.java', 'org.junit.runner.Description', 'methodAndClassNamePatternGroupOrDefault', '([\\s\\S]*)\\((.*)\\)', 'testDeleteFile(org.eclipse.jgit.diff.MyersDiffTest)')","[97211, 97646]"
"('URIish.java', 'org.eclipse.jgit.transport.URIish', '<init>', '^([a-z][a-z0-9+-]+)://(?:(?:([^/:@]+)(?::([^\\\\/]+))?@)?((?:[^\\\\/:]+)|(?:\\[[0-9a-f:]+\\]))(?::(\\d+))?((?:/~(?:[^\\\\/]+))?[\\\\/]))?(.+)?$', 'ssh://l usr\\example.com:wtf@example.com:1234/D:\\x')",[10984]
"('URIish.java', 'org.eclipse.jgit.transport.URIish', '<init>', '^([a-z][a-z0-9+-]+)://(?:(?:([^/:@]+)(?::([^\\\\/]+))?@)?((?:[^\\\\/:]+)|(?:\\[[0-9a-f:]+\\]))(?::(\\d+))?((?:/~(?:[^\\\\/]+))?[\\\\/]))?(.+)?$', 'https://l usr\\example.com@example.com:1234//')",[37231]
"('URIish.java', 'org.eclipse.jgit.transport.URIish', '<init>', '^([a-z][a-z0-9+-]+)://(?:(?:([^/:@]+)(?::([^\\\\/]+))?@)?((?:[^\\\\/:]+)|(?:\\[[0-9a-f:]+\\]))(?::(\\d+))?((?:/~(?:[^\\\\/]+))?[\\\\/]))?(.+)?$', 'https://me@[::1]:1234/D:\\x')",[37001]
"('FastIgnoreRule.java', 'org.eclipse.jgit.ignore.FastIgnoreRule', 'isMatch', 'a.', 'b')","[168749, 168803, 168857, 168911, 168965, 169019, 169316, 169397, 170161, 170215, 170269, 170350, 170566, 170620, 170701, 170782, 170836, 170917]"
"('ChangeIdUtil.java', 'org.eclipse.jgit.util.ChangeIdUtil', 'indexOfChangeId', '(^Change-Id: *I[a-f0-9]{40}$)', 'x')","[187477, 187523]"
"('Description.java', 'org.junit.runner.Description', 'methodAndClassNamePatternGroupOrDefault', '([\\s\\S]*)\\((.*)\\)', 'testRevFilterReceivesParsedCommits(org.eclipse.jgit.revwalk.RevWalkResetTest)')","[82937, 82959]"
"('Description.java', 'org.junit.runner.Description', 'methodAndClassNamePatternGroupOrDefault', '([\\s\\S]*)\\((.*)\\)', 'test9_FromString(org.eclipse.jgit.lib.AbbreviatedObjectIdTest)')","[114788, 115336]"
"('URIish.java', 'org.eclipse.jgit.transport.URIish', '<init>', '^(file):([\\\\/](?![\\\\/])((?:[A-Za-z]:)?[\\\\/]?(?:(?:[^\\\\/]+[\\\\/]+)*[^\\\\/]+[\\\\/]*)))$', 'http://me@1.2.3.4:1234//')",[33160]
"('Description.java', 'org.junit.runner.Description', 'methodAndClassNamePatternGroupOrDefault', '([\\s\\S]*)\\((.*)\\)', 'testRemoveCollision1(org.eclipse.jgit.transport.LongMapTest)')","[75343, 75512]"
"('Description.java', 'org.junit.runner.Description', 'methodAndClassNamePatternGroupOrDefault', '([\\s\\S]*)\\((.*)\\)', 'org.eclipse.jgit.revwalk.SkipRevFilterTest')","[82180, 82332]"
"('Description.java', 'org.junit.runner.Description', 'methodAndClassNamePatternGroupOrDefault', '([\\s\\S]*)\\((.*)\\)', 'org.eclipse.jgit.util.RawParseUtils_MatchTest')","[191989, 192184]"
"('URIish.java', 'org.eclipse.jgit.transport.URIish', '<init>', '^([a-z][a-z0-9+-]+)://(?:(?:([^/:@]+)(?::([^\\\\/]+))?@)?((?:[^\\\\/:]+)|(?:\\[[0-9a-f:]+\\]))(?::(\\d+))?((?:/~(?:[^\\\\/]+))?[\\\\/]))?(.+)?$', 'http://user:secret@host.xy:80/some/path')","[70206, 70252]"
"('Description.java', 'org.junit.runner.Description', 'methodAndClassNamePatternGroupOrDefault', '([\\s\\S]*)\\((.*)\\)', 'testDerefCommit(org.eclipse.jgit.lib.RepositoryResolveTest)')","[125260, 125728]"
"('Description.java', 'org.junit.runner.Description', 'methodAndClassNamePatternGroupOrDefault', '([\\s\\S]*)\\((.*)\\)', 'stashedApplyOnOtherBranchWithStagedChange(org.eclipse.jgit.api.StashApplyCommandTest)')","[240958, 241516]"
"('URIish.java', 'org.eclipse.jgit.transport.URIish', '<init>', '^([a-z][a-z0-9+-]+)://(?:(?:([^/:@]+)(?::([^\\\\/]+))?@)?((?:[^\\\\/:]+)|(?:\\[[0-9a-f:]+\\]))(?::(\\d+))?((?:/~(?:[^\\\\/]+))?[\\\\/]))?(.+)?$', 'https://example.com//abc')","[62669, 62853, 63773, 63957, 64877, 65061]"
"('URIish.java', 'org.eclipse.jgit.transport.URIish', '<init>', '^([a-z][a-z0-9+-]+)://(?:(?:([^/:@]+)(?::([^\\\\/]+))?@)?((?:[^\\\\/:]+)|(?:\\[[0-9a-f:]+\\]))(?::(\\d+))?((?:/~(?:[^\\\\/]+))?[\\\\/]))?(.+)?$', 'http://me:wtf@1.2.3.4:1234/D:\\x')",[19492]
"('URIish.java', 'org.eclipse.jgit.transport.URIish', '<init>', '^([a-z][a-z0-9+-]+)://(?:(?:([^/:@]+)(?::([^\\\\/]+))?@)?((?:[^\\\\/:]+)|(?:\\[[0-9a-f:]+\\]))(?::(\\d+))?((?:/~(?:[^\\\\/]+))?[\\\\/]))?(.+)?$', 'ssh+git://lusr\\example@[::1]:1234/D:/x')",[32539]
"('URIish.java', 'org.eclipse.jgit.transport.URIish', '<init>', '^(file):([\\\\/](?![\\\\/])((?:[A-Za-z]:)?[\\\\/]?(?:(?:[^\\\\/]+[\\\\/]+)*[^\\\\/]+[\\\\/]*)))$', 'ssh://me:wtf@[::1]:80/D:\\x')",[10265]
"('Description.java', 'org.junit.runner.Description', 'methodAndClassNamePatternGroupOrDefault', '([\\s\\S]*)\\((.*)\\)', 'testFileInFolderCommittedAllDeletedCommittedComparedWithInitialCommit(org.eclipse.jgit.treewalk.filter.IndexDiffFilterTest)')","[137004, 137823]"
"('Description.java', 'org.junit.runner.Description', 'methodAndClassNamePatternGroupOrDefault', '([\\s\\S]*)\\((.*)\\)', 'testFindSingleFile(org.eclipse.jgit.dircache.DirCacheBuilderTest)')","[91715, 91906]"
"('Description.java', 'org.junit.runner.Description', 'methodAndClassNamePatternGroupOrDefault', '([\\s\\S]*)\\((.*)\\)', 'testGetNullHumanishName(org.eclipse.jgit.transport.URIishTest)')","[1249, 4420]"
"('Description.java', 'org.junit.runner.Description', 'methodAndClassNamePatternGroupOrDefault', '([\\s\\S]*)\\((.*)\\)', 'testFileInFolderCommittedDeletedCommittedComparedWithInitialCommit(org.eclipse.jgit.treewalk.filter.IndexDiffFilterTest)')","[136878, 137691]"
"('Description.java', 'org.junit.runner.Description', 'methodAndClassNamePatternGroupOrDefault', '([\\s\\S]*)\\((.*)\\)', 'testMatch_TooSmall(org.eclipse.jgit.util.RawParseUtils_MatchTest)')","[192073, 192161]"
"('Description.java', 'org.junit.runner.Description', 'methodAndClassNamePatternGroupOrDefault', '([\\s\\S]*)\\((.*)\\)', 'workingDirectoryCleanIndexModify(org.eclipse.jgit.api.StashApplyCommandTest)')","[240790, 241340]"
"('Description.java', 'org.junit.runner.Description', 'methodAndClassNamePatternGroupOrDefault', '([\\s\\S]*)\\((.*)\\)', 'testNoMatches(org.eclipse.jgit.util.RawSubStringPatternTest)')","[176263, 176351]"
"('URIish.java', 'org.eclipse.jgit.transport.URIish', '<init>', '^([a-z][a-z0-9+-]+)://(?:(?:([^/:@]+)(?::([^\\\\/]+))?@)?((?:[^\\\\/:]+)|(?:\\[[0-9a-f:]+\\]))(?::(\\d+))?((?:/~(?:[^\\\\/]+))?[\\\\/]))?(.+)?$', '/tmp/jgit_test_8384532865018553446_tmp/tmp_7813617932258479589')","[227883, 228013, 228217, 228647]"
"('ChangeIdUtil.java', 'org.eclipse.jgit.util.ChangeIdUtil', 'indexOfChangeId', '(^Change-Id: *I[a-f0-9]{40}$)', 'Change-Id:  I3b7e4e16b503ce00f07ba6ad01d97a356dad7701')",[187247]
"('URIish.java', 'org.eclipse.jgit.transport.URIish', '<init>', '^(file):([\\\\/](?![\\\\/])((?:[A-Za-z]:)?[\\\\/]?(?:(?:[^\\\\/]+[\\\\/]+)*[^\\\\/]+[\\\\/]*)))$', 'https://me:wtf@1.2.3.4:80//')",[23180]
"('Description.java', 'org.junit.runner.Description', 'methodAndClassNamePatternGroupOrDefault', '([\\s\\S]*)\\((.*)\\)', 'testWriteString2(org.eclipse.jgit.transport.PacketLineOutTest)')","[75066, 75241]"
"('URIish.java', 'org.eclipse.jgit.transport.URIish', '<init>', '^([a-z][a-z0-9+-]+)://(?:(?:([^/:@]+)(?::([^\\\\/]+))?@)?((?:[^\\\\/:]+)|(?:\\[[0-9a-f:]+\\]))(?::(\\d+))?((?:/~(?:[^\\\\/]+))?[\\\\/]))?(.+)?$', 'ssh+git://me@[::1]:80//abc')",[30469]
"('URIish.java', 'org.eclipse.jgit.transport.URIish', '<init>', '^(file):([\\\\/](?![\\\\/])((?:[A-Za-z]:)?[\\\\/]?(?:(?:[^\\\\/]+[\\\\/]+)*[^\\\\/]+[\\\\/]*)))$', 'ssh+git://l usr\\example.com@1.2.3.4:80/D:\\x')",[31274]
"('Description.java', 'org.junit.runner.Description', 'methodAndClassNamePatternGroupOrDefault', '([\\s\\S]*)\\((.*)\\)', 'testPack2Commits(org.eclipse.jgit.internal.storage.file.GcBasicPackingTest)')","[247144, 247276]"
"('FastIgnoreRule.java', 'org.eclipse.jgit.ignore.FastIgnoreRule', 'isMatch', '[^\\]]', 'x')",[160056]
"('Description.java', 'org.junit.runner.Description', 'methodAndClassNamePatternGroupOrDefault', '([\\s\\S]*)\\((.*)\\)', 'testRemove(org.eclipse.jgit.diff.EditListTest)')","[94798, 94908]"
"('Description.java', 'org.junit.runner.Description', 'methodAndClassNamePatternGroupOrDefault', '([\\s\\S]*)\\((.*)\\)', 'test001_createEmpty(org.eclipse.jgit.lib.T0002_TreeTest)')","[119817, 120114]"
"('Repository.java', 'org.eclipse.jgit.lib.Repository', 'resolve', '^-\\d+$', 'yesterday')","[127526, 127553]"
"('URIish.java', 'org.eclipse.jgit.transport.URIish', '<init>', '^(file):([\\\\/](?![\\\\/])((?:[A-Za-z]:)?[\\\\/]?(?:(?:[^\\\\/]+[\\\\/]+)*[^\\\\/]+[\\\\/]*)))$', 'http://lusr\\example@1.2.3.4:1234/D:/x')",[35460]
"('URIish.java', 'org.eclipse.jgit.transport.URIish', '<init>', '^(file):([\\\\/](?![\\\\/])((?:[A-Za-z]:)?[\\\\/]?(?:(?:[^\\\\/]+[\\\\/]+)*[^\\\\/]+[\\\\/]*)))$', 'http://l usr\\example.com@1.2.3.4:80/D:\\x')",[34586]
"('Description.java', 'org.junit.runner.Description', 'methodAndClassNamePatternGroupOrDefault', '([\\s\\S]*)\\((.*)\\)', 'untrackedFileIncluded(org.eclipse.jgit.api.StashApplyCommandTest)')","[241189, 241758]"
"('Description.java', 'org.junit.runner.Description', 'methodAndClassNamePatternGroupOrDefault', '([\\s\\S]*)\\((.*)\\)', 'testOnlyOption_f1_6_f2_14_c(org.eclipse.jgit.api.CommitOnlyTest)')","[237161, 239240]"
"('Description.java', 'org.junit.runner.Description', 'methodAndClassNamePatternGroupOrDefault', '([\\s\\S]*)\\((.*)\\)', 'testAlphaGroupCase0[OldRule? false](org.eclipse.jgit.ignore.IgnoreRuleSpecialCasesTest)')","[146812, 153917]"
"('FastIgnoreRule.java', 'org.eclipse.jgit.ignore.FastIgnoreRule', 'isMatch', '[\\p{Alnum}]', 'a')",[163180]
"('URIish.java', 'org.eclipse.jgit.transport.URIish', '<init>', '^(file):([\\\\/](?![\\\\/])((?:[A-Za-z]:)?[\\\\/]?(?:(?:[^\\\\/]+[\\\\/]+)*[^\\\\/]+[\\\\/]*)))$', 'file:/tmp/jgit_test_8267827428869162458_tmp/tmp_7190135820610932583/.git/')",[205446]
"('Description.java', 'org.junit.runner.Description', 'methodAndClassNamePatternGroupOrDefault', '([\\s\\S]*)\\((.*)\\)', 'testAddRemovedCommittedFile(org.eclipse.jgit.api.AddCommandTest)')","[234885, 235314]"
"('URIish.java', 'org.eclipse.jgit.transport.URIish', '<init>', '^(file):([\\\\/](?![\\\\/])((?:[A-Za-z]:)?[\\\\/]?(?:(?:[^\\\\/]+[\\\\/]+)*[^\\\\/]+[\\\\/]*)))$', 'ssh://me:wtf@example.com:1234//abc')",[7429]
"('Description.java', 'org.junit.runner.Description', 'methodAndClassNamePatternGroupOrDefault', '([\\s\\S]*)\\((.*)\\)', 'testResetDefaultMode(org.eclipse.jgit.api.ResetCommandTest)')","[204478, 204822]"
"('Description.java', 'org.junit.runner.Description', 'methodAndClassNamePatternGroupOrDefault', '([\\s\\S]*)\\((.*)\\)', 'testIsNameConflicting(org.eclipse.jgit.internal.storage.file.RefDirectoryTest)')","[258463, 259672]"
"('Description.java', 'org.junit.runner.Description', 'methodAndClassNamePatternGroupOrDefault', '([\\s\\S]*)\\((.*)\\)', 'test023_createCommitNonAnullii(org.eclipse.jgit.internal.storage.file.T0003_BasicTest)')","[249440, 249989]"
"('URIish.java', 'org.eclipse.jgit.transport.URIish', '<init>', '^([a-z][a-z0-9+-]+)://(?:(?:([^/:@]+)(?::([^\\\\/]+))?@)?((?:[^\\\\/:]+)|(?:\\[[0-9a-f:]+\\]))(?::(\\d+))?((?:/~(?:[^\\\\/]+))?[\\\\/]))?(.+)?$', 'https://me:wtf@example.com:1234//abc')",[22697]
"('URIish.java', 'org.eclipse.jgit.transport.URIish', '<init>', '^([a-z][a-z0-9+-]+)://(?:(?:([^/:@]+)(?::([^\\\\/]+))?@)?((?:[^\\\\/:]+)|(?:\\[[0-9a-f:]+\\]))(?::(\\d+))?((?:/~(?:[^\\\\/]+))?[\\\\/]))?(.+)?$', 'git://example.com:333/home/m y')","[67949, 68021]"
"('Description.java', 'org.junit.runner.Description', 'methodAndClassNamePatternGroupOrDefault', '([\\s\\S]*)\\((.*)\\)', 'testForbiddenNamesOnWindowsEgConDotSuffix(org.eclipse.jgit.lib.DirCacheCheckoutMaliciousPathTest)')","[112437, 113358]"
"('Description.java', 'org.junit.runner.Description', 'methodAndClassNamePatternGroupOrDefault', '([\\s\\S]*)\\((.*)\\)', 'testInvalidTreeNameIsMixedCaseGitWindows(org.eclipse.jgit.lib.ObjectCheckerTest)')","[120839, 122919]"
"('Description.java', 'org.junit.runner.Description', 'methodAndClassNamePatternGroupOrDefault', '([\\s\\S]*)\\((.*)\\)', 'testDegenerate_InsertsIntoMidPosition(org.eclipse.jgit.diff.HistogramDiffTest)')","[98674, 99276]"
"('Description.java', 'org.junit.runner.Description', 'methodAndClassNamePatternGroupOrDefault', '([\\s\\S]*)\\((.*)\\)', 'org.eclipse.jgit.api.StashCreateCommandTest')","[202214, 203651]"
"('URIish.java', 'org.eclipse.jgit.transport.URIish', '<init>', '^([a-z][a-z0-9+-]+)://(?:(?:([^/:@]+)(?::([^\\\\/]+))?@)?((?:[^\\\\/:]+)|(?:\\[[0-9a-f:]+\\]))(?::(\\d+))?((?:/~(?:[^\\\\/]+))?[\\\\/]))?(.+)?$', 'https://l usr\\example.com@[::1]:80/D:/x')",[38243]
"('Description.java', 'org.junit.runner.Description', 'methodAndClassNamePatternGroupOrDefault', '([\\s\\S]*)\\((.*)\\)', 'testEmptyFolderCommitted(org.eclipse.jgit.treewalk.filter.IndexDiffFilterTest)')","[136626, 137427]"
"('Description.java', 'org.junit.runner.Description', 'methodAndClassNamePatternGroupOrDefault', '([\\s\\S]*)\\((.*)\\)', 'testValidTreeSorting7(org.eclipse.jgit.lib.ObjectCheckerTest)')","[121553, 123667]"
"('URIish.java', 'org.eclipse.jgit.transport.URIish', '<init>', '^([a-z][a-z0-9+-]+)://(?:(?:([^/:@]+)(?::([^\\\\/]+))?@)?((?:[^\\\\/:]+)|(?:\\[[0-9a-f:]+\\]))(?::(\\d+))?((?:/~(?:[^\\\\/]+))?[\\\\/]))?(.+)?$', 'ssh://l usr\\example.com:wtf@example.com:80//abc')",[11076]
"('URIish.java', 'org.eclipse.jgit.transport.URIish', '<init>', '^(file):([\\\\/](?![\\\\/])((?:[A-Za-z]:)?[\\\\/]?(?:(?:[^\\\\/]+[\\\\/]+)*[^\\\\/]+[\\\\/]*)))$', 'https://l usr\\example.com:wtf@example.com:80/D:\\x')",[24054]
"('URIish.java', 'org.eclipse.jgit.transport.URIish', '<init>', '^(?:([^/:@]+)(?::([^\\\\/]+))?@)?([^\\\\/:]{2,}):([\\\\/](?:(?:[^\\\\/]+[\\\\/]+)*[^\\\\/]+[\\\\/]*))$', '/tmp/jgit_test_47688348811366599_tmp/tmp_1522576617666632427')","[206183, 206393, 207926, 208076, 208416]"
"('Description.java', 'org.junit.runner.Description', 'methodAndClassNamePatternGroupOrDefault', '([\\s\\S]*)\\((.*)\\)', 'testSshProtoWithADUserPassAndPort(org.eclipse.jgit.transport.URIishTest)')","[2087, 4772]"
"('Description.java', 'org.junit.runner.Description', 'methodAndClassNamePatternGroupOrDefault', '([\\s\\S]*)\\((.*)\\)', 'workingDirectoryModifyInSubfolder(org.eclipse.jgit.api.StashApplyCommandTest)')","[240853, 241406]"
"('URIish.java', 'org.eclipse.jgit.transport.URIish', '<init>', '^(file):([\\\\/](?![\\\\/])((?:[A-Za-z]:)?[\\\\/]?(?:(?:[^\\\\/]+[\\\\/]+)*[^\\\\/]+[\\\\/]*)))$', 'ssh+git://lusr\\example@1.2.3.4/D:\\x')","[45442, 45626]"
"('Description.java', 'org.junit.runner.Description', 'methodAndClassNamePatternGroupOrDefault', '([\\s\\S]*)\\((.*)\\)', 'org.eclipse.jgit.util.QuotedStringBourneStyleTest')","[182854, 183307]"
"('Description.java', 'org.junit.runner.Description', 'methodAndClassNamePatternGroupOrDefault', '([\\s\\S]*)\\((.*)\\)', 'test3(org.eclipse.jgit.revwalk.RevWalkPathFilter6012Test)')","[85741, 85891]"
"('URIish.java', 'org.eclipse.jgit.transport.URIish', '<init>', '^([a-z][a-z0-9+-]+)://(?:(?:([^/:@]+)(?::([^\\\\/]+))?@)?((?:[^\\\\/:]+)|(?:\\[[0-9a-f:]+\\]))(?::(\\d+))?((?:/~(?:[^\\\\/]+))?[\\\\/]))?(.+)?$', 'ssh+git://l usr\\example.com:wtf@1.2.3.4:80/D:\\x')",[16664]
"('URIish.java', 'org.eclipse.jgit.transport.URIish', '<init>', '^(file):([\\\\/](?![\\\\/])((?:[A-Za-z]:)?[\\\\/]?(?:(?:[^\\\\/]+[\\\\/]+)*[^\\\\/]+[\\\\/]*)))$', 'https://me@1.2.3.4:1234/D:\\x')",[36610]
"('Description.java', 'org.junit.runner.Description', 'methodAndClassNamePatternGroupOrDefault', '([\\s\\S]*)\\((.*)\\)', 'testCloneRepository(org.eclipse.jgit.api.CloneCommandTest)')","[203876, 204116]"
"('Description.java', 'org.junit.runner.Description', 'methodAndClassNamePatternGroupOrDefault', '([\\s\\S]*)\\((.*)\\)', 'testRenameBranchCannotLockAFileHEADisToLockTo(org.eclipse.jgit.internal.storage.file.RefUpdateTest)')","[252977, 253806]"
"('URIish.java', 'org.eclipse.jgit.transport.URIish', '<init>', '^([a-z][a-z0-9+-]+)://(?:(?:([^/:@]+)(?::([^\\\\/]+))?@)?((?:[^\\\\/:]+)|(?:\\[[0-9a-f:]+\\]))(?::(\\d+))?((?:/~(?:[^\\\\/]+))?[\\\\/]))?(.+)?$', 'http://l usr\\example.com@[::1]//abc')","[47949, 48133]"
"('URIish.java', 'org.eclipse.jgit.transport.URIish', '<init>', '^(file):([\\\\/](?![\\\\/])((?:[A-Za-z]:)?[\\\\/]?(?:(?:[^\\\\/]+[\\\\/]+)*[^\\\\/]+[\\\\/]*)))$', 'ssh+git://l usr\\example.com:wtf@example.com:80//abc')",[16181]
"('URIish.java', 'org.eclipse.jgit.transport.URIish', '<init>', '^(file):([\\\\/](?![\\\\/])((?:[A-Za-z]:)?[\\\\/]?(?:(?:[^\\\\/]+[\\\\/]+)*[^\\\\/]+[\\\\/]*)))$', 'file:///tmp/jgit_test_4891911102535552827_tmp/tmp_5487204894428132903/.git/')",[108214]
"('URIish.java', 'org.eclipse.jgit.transport.URIish', '<init>', '^([a-z][a-z0-9+-]+)://(?:(?:([^/:@]+)(?::([^\\\\/]+))?@)?((?:[^\\\\/:]+)|(?:\\[[0-9a-f:]+\\]))(?::(\\d+))?((?:/~(?:[^\\\\/]+))?[\\\\/]))?(.+)?$', 'ssh+git://lusr\\example:wtf@1.2.3.4:80//')",[17653]
"('Description.java', 'org.junit.runner.Description', 'methodAndClassNamePatternGroupOrDefault', '([\\s\\S]*)\\((.*)\\)', 'testDF_SkipsSeenSubtree(org.eclipse.jgit.treewalk.NameConflictTreeWalkTest)')","[134852, 134962]"
"('Description.java', 'org.junit.runner.Description', 'methodAndClassNamePatternGroupOrDefault', '([\\s\\S]*)\\((.*)\\)', 'testCheckout(org.eclipse.jgit.internal.storage.file.ReflogReaderTest)')","[259774, 259943]"
"('Description.java', 'org.junit.runner.Description', 'methodAndClassNamePatternGroupOrDefault', '([\\s\\S]*)\\((.*)\\)', 'testReadACK_NAK(org.eclipse.jgit.transport.PacketLineInTest)')","[18638, 19804]"
"('Description.java', 'org.junit.runner.Description', 'methodAndClassNamePatternGroupOrDefault', '([\\s\\S]*)\\((.*)\\)', 'testIncompleteRangesInOneGroupCase0(org.eclipse.jgit.fnmatch.FileNameMatcherTest)')","[102910, 106261]"
"('URIish.java', 'org.eclipse.jgit.transport.URIish', '<init>', '^([a-z][a-z0-9+-]+)://(?:(?:([^/:@]+)(?::([^\\\\/]+))?@)?((?:[^\\\\/:]+)|(?:\\[[0-9a-f:]+\\]))(?::(\\d+))?((?:/~(?:[^\\\\/]+))?[\\\\/]))?(.+)?$', 'example.com:some/p ath')","[5680, 5749]"
"('Description.java', 'org.junit.runner.Description', 'methodAndClassNamePatternGroupOrDefault', '([\\s\\S]*)\\((.*)\\)', 'testWithPostOrder_EnterSubtree(org.eclipse.jgit.treewalk.PostOrderTreeWalkTest)')","[135249, 135381]"
"('Description.java', 'org.junit.runner.Description', 'methodAndClassNamePatternGroupOrDefault', '([\\s\\S]*)\\((.*)\\)', 'testNotEquals_SameLength(org.eclipse.jgit.lib.AbbreviatedObjectIdTest)')","[114347, 114874]"
"('Description.java', 'org.junit.runner.Description', 'methodAndClassNamePatternGroupOrDefault', '([\\s\\S]*)\\((.*)\\)', 'testFormatYearsMonths(org.eclipse.jgit.util.RelativeDateFormatterTest)')","[181447, 181645]"
"('Description.java', 'org.junit.runner.Description', 'methodAndClassNamePatternGroupOrDefault', '([\\s\\S]*)\\((.*)\\)', 'stashChangeInANewSubdirectory(org.eclipse.jgit.api.StashApplyCommandTest)')","[240916, 241472]"
"('Description.java', 'org.junit.runner.Description', 'methodAndClassNamePatternGroupOrDefault', '([\\s\\S]*)\\((.*)\\)', 'testCloneEmpty(org.eclipse.jgit.revwalk.LIFORevQueueTest)')","[78396, 78503]"
"('Description.java', 'org.junit.runner.Description', 'methodAndClassNamePatternGroupOrDefault', '([\\s\\S]*)\\((.*)\\)', 'testRebaseInteractiveSingleFixup(org.eclipse.jgit.api.RebaseCommandTest)')","[217291, 218762]"
"('Description.java', 'org.junit.runner.Description', 'methodAndClassNamePatternGroupOrDefault', '([\\s\\S]*)\\((.*)\\)', 'testEmptyCache_Clear_NoCacheTree(org.eclipse.jgit.dircache.DirCacheTreeTest)')","[91421, 91549]"
"('URIish.java', 'org.eclipse.jgit.transport.URIish', '<init>', '^(file):([\\\\/](?![\\\\/])((?:[A-Za-z]:)?[\\\\/]?(?:(?:[^\\\\/]+[\\\\/]+)*[^\\\\/]+[\\\\/]*)))$', 'https://lusr\\example:wtf@[::1]:1234/D:/x')",[25664]
"('URIish.java', 'org.eclipse.jgit.transport.URIish', '<init>', '^(file):([\\\\/](?![\\\\/])((?:[A-Za-z]:)?[\\\\/]?(?:(?:[^\\\\/]+[\\\\/]+)*[^\\\\/]+[\\\\/]*)))$', 'http://me:wtf@[::1]:80/D:/x')",[20305]
"('Description.java', 'org.junit.runner.Description', 'methodAndClassNamePatternGroupOrDefault', '([\\s\\S]*)\\((.*)\\)', 'testOnlyOption_f1_12_e(org.eclipse.jgit.api.CommitOnlyTest)')","[237518, 239614]"
"('URIish.java', 'org.eclipse.jgit.transport.URIish', '<init>', '^([a-z][a-z0-9+-]+)://(?:(?:([^/:@]+)(?::([^\\\\/]+))?@)?((?:[^\\\\/:]+)|(?:\\[[0-9a-f:]+\\]))(?::(\\d+))?((?:/~(?:[^\\\\/]+))?[\\\\/]))?(.+)?$', 'ssh+git://me@1.2.3.4:80//')",[30055]
"('URIish.java', 'org.eclipse.jgit.transport.URIish', '<init>', '^(file):([\\\\/](?![\\\\/])((?:[A-Za-z]:)?[\\\\/]?(?:(?:[^\\\\/]+[\\\\/]+)*[^\\\\/]+[\\\\/]*)))$', 'ssh+git://example.com//')","[55976, 56160, 57080, 57264, 58184, 58368]"
"('Description.java', 'org.junit.runner.Description', 'methodAndClassNamePatternGroupOrDefault', '([\\s\\S]*)\\((.*)\\)', 'testBreakModify_DontBreakAboveScore(org.eclipse.jgit.diff.RenameDetectorTest)')","[93384, 93947]"
"('Description.java', 'org.junit.runner.Description', 'methodAndClassNamePatternGroupOrDefault', '([\\s\\S]*)\\((.*)\\)', 'org.eclipse.jgit.internal.storage.file.GcReflogTest')","[256491, 259717]"
"('Description.java', 'org.junit.runner.Description', 'methodAndClassNamePatternGroupOrDefault', '([\\s\\S]*)\\((.*)\\)', 'org.eclipse.jgit.util.RawCharUtilTest')","[192220, 192372]"
"('Description.java', 'org.junit.runner.Description', 'methodAndClassNamePatternGroupOrDefault', '([\\s\\S]*)\\((.*)\\)', 'testWildcardMirror(org.eclipse.jgit.transport.RefSpecTest)')","[13857, 15370]"
"('Description.java', 'org.junit.runner.Description', 'methodAndClassNamePatternGroupOrDefault', '([\\s\\S]*)\\((.*)\\)', 'testKernelStyleFooter(org.eclipse.jgit.util.ChangeIdUtilTest)')","[185567, 186314]"
"('QuotedString.java', 'org.eclipse.jgit.util.QuotedString$BourneUserPathStyle', 'quote', '^~[A-Za-z0-9_-]*/.*$', '~foo/a')","[193443, 193467]"
"('Description.java', 'org.junit.runner.Description', 'methodAndClassNamePatternGroupOrDefault', '([\\s\\S]*)\\((.*)\\)', 'testFailureOnSignedTags(org.eclipse.jgit.api.TagCommandTest)')","[201637, 201935]"
"('Description.java', 'org.junit.runner.Description', 'methodAndClassNamePatternGroupOrDefault', '([\\s\\S]*)\\((.*)\\)', 'testDigitGroupCase4(org.eclipse.jgit.fnmatch.FileNameMatcherTest)')","[102511, 105843]"
"('URIish.java', 'org.eclipse.jgit.transport.URIish', '<init>', '^(file):([\\\\/](?![\\\\/])((?:[A-Za-z]:)?[\\\\/]?(?:(?:[^\\\\/]+[\\\\/]+)*[^\\\\/]+[\\\\/]*)))$', 'file:/tmp/jgit_test_3566505892151671262_tmp/tmp_416410885206968028/.git/')",[109595]
"('FastIgnoreRule.java', 'org.eclipse.jgit.ignore.FastIgnoreRule', 'isMatch', 'a\\\\b', 'a\\b')",[162034]
"('Description.java', 'org.junit.runner.Description', 'methodAndClassNamePatternGroupOrDefault', '([\\s\\S]*)\\((.*)\\)', 'testCherryPickDirtyWorktree(org.eclipse.jgit.api.CherryPickCommandTest)')","[232253, 232515]"
"('Description.java', 'org.junit.runner.Description', 'methodAndClassNamePatternGroupOrDefault', '([\\s\\S]*)\\((.*)\\)', 'testWordGroupCase5[OldRule? false](org.eclipse.jgit.ignore.IgnoreRuleSpecialCasesTest)')","[148882, 155987]"
"('Description.java', 'org.junit.runner.Description', 'methodAndClassNamePatternGroupOrDefault', '([\\s\\S]*)\\((.*)\\)', 'testShouldNotBlowUpIfThereAreNoCommitsInRepository(org.eclipse.jgit.api.TagCommandTest)')","[201616, 201913]"
"('Description.java', 'org.junit.runner.Description', 'methodAndClassNamePatternGroupOrDefault', '([\\s\\S]*)\\((.*)\\)', 'testOnlyOption_f1_8_e(org.eclipse.jgit.api.CommitOnlyTest)')","[236752, 238844]"
"('Description.java', 'org.junit.runner.Description', 'methodAndClassNamePatternGroupOrDefault', '([\\s\\S]*)\\((.*)\\)', 'testNone(org.eclipse.jgit.revwalk.RevWalkMergeBaseTest)')","[81926, 82055]"
"('Description.java', 'org.junit.runner.Description', 'methodAndClassNamePatternGroupOrDefault', '([\\s\\S]*)\\((.*)\\)', 'testMergeWithMessageOption(org.eclipse.jgit.api.MergeCommandTest)')","[213786, 214704]"
"('Description.java', 'org.junit.runner.Description', 'methodAndClassNamePatternGroupOrDefault', '([\\s\\S]*)\\((.*)\\)', 'daysAndWeeksAgo(org.eclipse.jgit.util.GitDateParserTest)')","[182509, 182795]"
"('URIish.java', 'org.eclipse.jgit.transport.URIish', '<init>', '^(file):([\\\\/](?![\\\\/])((?:[A-Za-z]:)?[\\\\/]?(?:(?:[^\\\\/]+[\\\\/]+)*[^\\\\/]+[\\\\/]*)))$', 'file:///tmp/jgit_test_7403941928277025754_tmp/tmp_3969541369690137868/.git/')",[133674]
"('ChangeIdUtil.java', 'org.eclipse.jgit.util.ChangeIdUtil', 'indexOfFirstFooterLine', '(^[a-zA-Z0-9-]+:(?!//).*$)', 'Signed-off-by: J Author <ja@example.com>')","[188183, 188390, 188570, 189081, 189236, 189339, 189520, 189701]"
"('FastIgnoreRule.java', 'org.eclipse.jgit.ignore.FastIgnoreRule', 'isMatch', '.rc', 'new')",[144407]
"('Description.java', 'org.junit.runner.Description', 'methodAndClassNamePatternGroupOrDefault', '([\\s\\S]*)\\((.*)\\)', 'testPrintGroupCase5(org.eclipse.jgit.fnmatch.FileNameMatcherTest)')","[103078, 106437]"
"('Description.java', 'org.junit.runner.Description', 'methodAndClassNamePatternGroupOrDefault', '([\\s\\S]*)\\((.*)\\)', 'testEmptyValueWithLF(org.eclipse.jgit.revwalk.FooterLineTest)')","[77460, 77863]"
"('Description.java', 'org.junit.runner.Description', 'methodAndClassNamePatternGroupOrDefault', '([\\s\\S]*)\\((.*)\\)', 'testCompareEntriesOffsetsWithGetOffsets(org.eclipse.jgit.internal.storage.file.PackIndexV2Test)')","[248091, 248220]"
"('Description.java', 'org.junit.runner.Description', 'methodAndClassNamePatternGroupOrDefault', '([\\s\\S]*)\\((.*)\\)', 'testMixedGroupCase3[OldRule? true](org.eclipse.jgit.ignore.IgnoreRuleSpecialCasesTest)')","[149708, 156792]"
"('Description.java', 'org.junit.runner.Description', 'methodAndClassNamePatternGroupOrDefault', '([\\s\\S]*)\\((.*)\\)', 'testWordroupCase3(org.eclipse.jgit.fnmatch.FileNameMatcherTest)')","[103729, 107119]"
"('URIish.java', 'org.eclipse.jgit.transport.URIish', '<init>', '^(file):([\\\\/](?![\\\\/])((?:[A-Za-z]:)?[\\\\/]?(?:(?:[^\\\\/]+[\\\\/]+)*[^\\\\/]+[\\\\/]*)))$', '../../foo/bar')","[68872, 68987]"
"('Description.java', 'org.junit.runner.Description', 'methodAndClassNamePatternGroupOrDefault', '([\\s\\S]*)\\((.*)\\)', 'shouldWorkWithoutMergeBase(org.eclipse.jgit.lib.BranchTrackingStatusTest)')","[117921, 117986]"
"('Description.java', 'org.junit.runner.Description', 'methodAndClassNamePatternGroupOrDefault', '([\\s\\S]*)\\((.*)\\)', 'testLargeTreesWithoutConflict(org.eclipse.jgit.notes.NoteMapMergerTest)')","[199815, 200184]"
"('URIish.java', 'org.eclipse.jgit.transport.URIish', '<init>', '^(?:([^/:@]+)(?::([^\\\\/]+))?@)?((?:[^\\\\/:]+)|(?:\\[[0-9a-f:]+\\])):((?:(?:/~(?:[^\\\\/]+))[\\\\/])?(?:(?:[^\\\\/]+[\\\\/]+)*[^\\\\/]+[\\\\/]*))$', '/tmp/jgit_test_848094205772547537_tmp/tmp_2447967114920000272.git')",[72695]
"('Description.java', 'org.junit.runner.Description', 'methodAndClassNamePatternGroupOrDefault', '([\\s\\S]*)\\((.*)\\)', 'testRepeatedNegation(org.eclipse.jgit.ignore.IgnoreNodeTest)')","[140710, 141018]"
"('URIish.java', 'org.eclipse.jgit.transport.URIish', '<init>', '^(file):([\\\\/](?![\\\\/])((?:[A-Za-z]:)?[\\\\/]?(?:(?:[^\\\\/]+[\\\\/]+)*[^\\\\/]+[\\\\/]*)))$', 'file:///tmp/jgit_test_4282693968719835734_tmp/tmp_387389566156283921/.git/')",[128849]
"('Description.java', 'org.junit.runner.Description', 'methodAndClassNamePatternGroupOrDefault', '([\\s\\S]*)\\((.*)\\)', 'testFindRemoteRefUpdatesNoWildcardNoDestination(org.eclipse.jgit.transport.TransportTest)')","[71549, 71722]"
"('Description.java', 'org.junit.runner.Description', 'methodAndClassNamePatternGroupOrDefault', '([\\s\\S]*)\\((.*)\\)', 'testRebaseShouldStopForRewordInCaseOfConflict(org.eclipse.jgit.api.RebaseCommandTest)')","[217648, 219136]"
"('Description.java', 'org.junit.runner.Description', 'methodAndClassNamePatternGroupOrDefault', '([\\s\\S]*)\\((.*)\\)', 'testMixedGroupCase5[OldRule? false](org.eclipse.jgit.ignore.IgnoreRuleSpecialCasesTest)')","[146191, 153296]"
"('Description.java', 'org.junit.runner.Description', 'methodAndClassNamePatternGroupOrDefault', '([\\s\\S]*)\\((.*)\\)', 'testDeleteWithoutHead(org.eclipse.jgit.internal.storage.file.RefUpdateTest)')","[253124, 253960]"
"('Description.java', 'org.junit.runner.Description', 'methodAndClassNamePatternGroupOrDefault', '([\\s\\S]*)\\((.*)\\)', 'testCommonScore_SameFiles(org.eclipse.jgit.diff.SimilarityIndexTest)')","[97836, 97963]"
"('Description.java', 'org.junit.runner.Description', 'methodAndClassNamePatternGroupOrDefault', '([\\s\\S]*)\\((.*)\\)', 'org.eclipse.jgit.patch.PatchCcErrorTest')","[194870, 194936]"
"('URIish.java', 'org.eclipse.jgit.transport.URIish', '<init>', '^(file):([\\\\/](?![\\\\/])((?:[A-Za-z]:)?[\\\\/]?(?:(?:[^\\\\/]+[\\\\/]+)*[^\\\\/]+[\\\\/]*)))$', '/more/dirs')","[6155, 7476, 10080]"
"('FastIgnoreRule.java', 'org.eclipse.jgit.ignore.FastIgnoreRule', 'isMatch', 'a.*c', 'ac')",[161514]
"('URIish.java', 'org.eclipse.jgit.transport.URIish', '<init>', '^(?:([^/:@]+)(?::([^\\\\/]+))?@)?([^\\\\/:]{2,}):([\\\\/](?:(?:[^\\\\/]+[\\\\/]+)*[^\\\\/]+[\\\\/]*))$', '/tmp/jgit_test_8377865151388464425_tmp/tmp_8247112886499178725')","[211520, 211660, 212199]"
"('Description.java', 'org.junit.runner.Description', 'methodAndClassNamePatternGroupOrDefault', '([\\s\\S]*)\\((.*)\\)', 'testForceMasterMaster(org.eclipse.jgit.transport.RefSpecTest)')","[12484, 14488]"
"('URIish.java', 'org.eclipse.jgit.transport.URIish', '<init>', '^([a-z][a-z0-9+-]+)://(?:(?:([^/:@]+)(?::([^\\\\/]+))?@)?((?:[^\\\\/:]+)|(?:\\[[0-9a-f:]+\\]))(?::(\\d+))?((?:/~(?:[^\\\\/]+))?[\\\\/]))?(.+)?$', 'ssh://me:wtf@1.2.3.4:80//')",[8886]
"('Description.java', 'org.junit.runner.Description', 'methodAndClassNamePatternGroupOrDefault', '([\\s\\S]*)\\((.*)\\)', 'testOnlyOption_f1_8_d(org.eclipse.jgit.api.CommitOnlyTest)')","[236731, 238822]"
"('URIish.java', 'org.eclipse.jgit.transport.URIish', '<init>', '^(file):([\\\\/](?![\\\\/])((?:[A-Za-z]:)?[\\\\/]?(?:(?:[^\\\\/]+[\\\\/]+)*[^\\\\/]+[\\\\/]*)))$', 'http://l usr\\example.com@1.2.3.4:80/D:/x')",[34540]
"('Description.java', 'org.junit.runner.Description', 'methodAndClassNamePatternGroupOrDefault', '([\\s\\S]*)\\((.*)\\)', 'org.eclipse.jgit.notes.DefaultNoteMergerTest')","[198547, 199527]"
"('URIish.java', 'org.eclipse.jgit.transport.URIish', '<init>', '^(file):([\\\\/](?![\\\\/])((?:[A-Za-z]:)?[\\\\/]?(?:(?:[^\\\\/]+[\\\\/]+)*[^\\\\/]+[\\\\/]*)))$', 'http://me@1.2.3.4//')","[46408, 46592]"
"('Description.java', 'org.junit.runner.Description', 'methodAndClassNamePatternGroupOrDefault', '([\\s\\S]*)\\((.*)\\)', 'testDirectoryFileConflicts_5(org.eclipse.jgit.lib.DirCacheCheckoutTest)')","[116347, 117314]"
"('URIish.java', 'org.eclipse.jgit.transport.URIish', '<init>', '^([\\\\/]?((?:[A-Za-z]:)?[\\\\/]?(?:(?:[^\\\\/]+[\\\\/]+)*[^\\\\/]+[\\\\/]*)))$', '/a/b/c/')",[67545]
"('Description.java', 'org.junit.runner.Description', 'methodAndClassNamePatternGroupOrDefault', '([\\s\\S]*)\\((.*)\\)', 'testDirectoryFileConflicts_17(org.eclipse.jgit.lib.DirCacheCheckoutTest)')","[116662, 117644]"
"('Description.java', 'org.junit.runner.Description', 'methodAndClassNamePatternGroupOrDefault', '([\\s\\S]*)\\((.*)\\)', 'testDequote_BareABCZ_OnlyBC(org.eclipse.jgit.util.QuotedStringBourneStyleTest)')","[182875, 183086]"
"('Description.java', 'org.junit.runner.Description', 'methodAndClassNamePatternGroupOrDefault', '([\\s\\S]*)\\((.*)\\)', 'commitAfterSquashMerge(org.eclipse.jgit.api.CommitCommandTest)')","[212309, 212520]"
"('URIish.java', 'org.eclipse.jgit.transport.URIish', '<init>', '^([a-z][a-z0-9+-]+)://(?:(?:([^/:@]+)(?::([^\\\\/]+))?@)?((?:[^\\\\/:]+)|(?:\\[[0-9a-f:]+\\]))(?::(\\d+))?((?:/~(?:[^\\\\/]+))?[\\\\/]))?(.+)?$', 'ssh://me@example.com:1234/D:/x')",[26055]
"('Description.java', 'org.junit.runner.Description', 'methodAndClassNamePatternGroupOrDefault', '([\\s\\S]*)\\((.*)\\)', 'testNoMagicRefCharacters(org.eclipse.jgit.lib.ValidRefNameTest)')","[118362, 118720]"
"('Description.java', 'org.junit.runner.Description', 'methodAndClassNamePatternGroupOrDefault', '([\\s\\S]*)\\((.*)\\)', 'testValidTreeSorting1(org.eclipse.jgit.lib.ObjectCheckerTest)')","[121427, 123535]"
"('Description.java', 'org.junit.runner.Description', 'methodAndClassNamePatternGroupOrDefault', '([\\s\\S]*)\\((.*)\\)', 'org.eclipse.jgit.util.RefMapTest')","[183762, 184731]"
"('Description.java', 'org.junit.runner.Description', 'methodAndClassNamePatternGroupOrDefault', '([\\s\\S]*)\\((.*)\\)', 'testBlankGroupCase4[OldRule? false](org.eclipse.jgit.ignore.IgnoreRuleSpecialCasesTest)')","[148422, 155527]"
"('Description.java', 'org.junit.runner.Description', 'methodAndClassNamePatternGroupOrDefault', '([\\s\\S]*)\\((.*)\\)', 'testCleanWithDryRun(org.eclipse.jgit.api.CleanCommandTest)')","[217017, 217168]"
"('Description.java', 'org.junit.runner.Description', 'methodAndClassNamePatternGroupOrDefault', '([\\s\\S]*)\\((.*)\\)', 'testCheckoutLightweightTag(org.eclipse.jgit.api.CheckoutCommandTest)')","[207185, 207712]"
"('Description.java', 'org.junit.runner.Description', 'methodAndClassNamePatternGroupOrDefault', '([\\s\\S]*)\\((.*)\\)', 'testXDigitGroupCase2[OldRule? false](org.eclipse.jgit.ignore.IgnoreRuleSpecialCasesTest)')","[148560, 155665]"
"('URIish.java', 'org.eclipse.jgit.transport.URIish', '<init>', '^(file):([\\\\/](?![\\\\/])((?:[A-Za-z]:)?[\\\\/]?(?:(?:[^\\\\/]+[\\\\/]+)*[^\\\\/]+[\\\\/]*)))$', 'ssh+git://me:wtf@example.com:1234/D:/x')",[13813]
"('Description.java', 'org.junit.runner.Description', 'methodAndClassNamePatternGroupOrDefault', '([\\s\\S]*)\\((.*)\\)', 'testParentDirectoryGitIgnores(org.eclipse.jgit.ignore.IgnoreMatcherTest)')","[145239, 145429]"
"('Description.java', 'org.junit.runner.Description', 'methodAndClassNamePatternGroupOrDefault', '([\\s\\S]*)\\((.*)\\)', 'testConstructor_RejectsBadBufferSize(org.eclipse.jgit.transport.SideBandOutputStreamTest)')","[73454, 73696]"
"('Description.java', 'org.junit.runner.Description', 'methodAndClassNamePatternGroupOrDefault', '([\\s\\S]*)\\((.*)\\)', 'testPick(org.eclipse.jgit.merge.CherryPickTest)')","[89733, 89776]"
"('URIish.java', 'org.eclipse.jgit.transport.URIish', '<init>', '^([a-z][a-z0-9+-]+)://(?:(?:([^/:@]+)(?::([^\\\\/]+))?@)?((?:[^\\\\/:]+)|(?:\\[[0-9a-f:]+\\]))(?::(\\d+))?((?:/~(?:[^\\\\/]+))?[\\\\/]))?(.+)?$', 'ssh+git://lusr\\example@example.com:80/D:\\x')",[32033]
"('URIish.java', 'org.eclipse.jgit.transport.URIish', '<init>', '^([a-z][a-z0-9+-]+)://(?:(?:([^/:@]+)(?::([^\\\\/]+))?@)?((?:[^\\\\/:]+)|(?:\\[[0-9a-f:]+\\]))(?::(\\d+))?((?:/~(?:[^\\\\/]+))?[\\\\/]))?(.+)?$', 'https://l usr\\example.com@example.com:80//abc')",[37461]
"('URIish.java', 'org.eclipse.jgit.transport.URIish', '<init>', '^(file):([\\\\/](?![\\\\/])((?:[A-Za-z]:)?[\\\\/]?(?:(?:[^\\\\/]+[\\\\/]+)*[^\\\\/]+[\\\\/]*)))$', 'https://l usr\\example.com:wtf@[::1]:1234//')",[24468]
"('Description.java', 'org.junit.runner.Description', 'methodAndClassNamePatternGroupOrDefault', '([\\s\\S]*)\\((.*)\\)', 'org.eclipse.jgit.api.HugeFileTest')","[216506, 216572]"
"('URIish.java', 'org.eclipse.jgit.transport.URIish', '<init>', '^(file):([\\\\/](?![\\\\/])((?:[A-Za-z]:)?[\\\\/]?(?:(?:[^\\\\/]+[\\\\/]+)*[^\\\\/]+[\\\\/]*)))$', 'ssh+git://lusr\\example@[::1]:1234//')",[32424]
"('Description.java', 'org.junit.runner.Description', 'methodAndClassNamePatternGroupOrDefault', '([\\s\\S]*)\\((.*)\\)', 'testDequote_Empty1(org.eclipse.jgit.util.QuotedStringGitPathStyleTest)')","[177445, 177868]"
"('URIish.java', 'org.eclipse.jgit.transport.URIish', '<init>', '^([a-z][a-z0-9+-]+)://(?:(?:([^/:@]+)(?::([^\\\\/]+))?@)?((?:[^\\\\/:]+)|(?:\\[[0-9a-f:]+\\]))(?::(\\d+))?((?:/~(?:[^\\\\/]+))?[\\\\/]))?(.+)?$', 'https://lusr\\example:wtf@example.com:1234//abc')",[24905]
"('URIish.java', 'org.eclipse.jgit.transport.URIish', '<init>', '^([a-z][a-z0-9+-]+)://(?:(?:([^/:@]+)(?::([^\\\\/]+))?@)?((?:[^\\\\/:]+)|(?:\\[[0-9a-f:]+\\]))(?::(\\d+))?((?:/~(?:[^\\\\/]+))?[\\\\/]))?(.+)?$', 'https://lusr\\example:wtf@1.2.3.4:1234/D:/x')",[25319]
"('Description.java', 'org.junit.runner.Description', 'methodAndClassNamePatternGroupOrDefault', '([\\s\\S]*)\\((.*)\\)', 'testWriteHEAD(org.eclipse.jgit.transport.BundleWriterTest)')","[26273, 26337]"
"('Description.java', 'org.junit.runner.Description', 'methodAndClassNamePatternGroupOrDefault', '([\\s\\S]*)\\((.*)\\)', 'testRebaseWithUnstagedMasterChangeBaseCommit(org.eclipse.jgit.api.RebaseCommandTest)')","[218026, 219532]"
"('Description.java', 'org.junit.runner.Description', 'methodAndClassNamePatternGroupOrDefault', '([\\s\\S]*)\\((.*)\\)', 'testFileNameWildcards(org.eclipse.jgit.ignore.IgnoreMatcherTest)')","[145260, 145451]"
"('Description.java', 'org.junit.runner.Description', 'methodAndClassNamePatternGroupOrDefault', '([\\s\\S]*)\\((.*)\\)', 'testPath_4096(org.eclipse.jgit.dircache.DirCacheLargePathTest)')","[92203, 92312]"
"('URIish.java', 'org.eclipse.jgit.transport.URIish', '<init>', '^(file):([\\\\/](?![\\\\/])((?:[A-Za-z]:)?[\\\\/]?(?:(?:[^\\\\/]+[\\\\/]+)*[^\\\\/]+[\\\\/]*)))$', 'file:///tmp/jgit_test_1646167366253468193_tmp/tmp_4210899106286484405/.git/')",[128531]
"('Description.java', 'org.junit.runner.Description', 'methodAndClassNamePatternGroupOrDefault', '([\\s\\S]*)\\((.*)\\)', 'org.eclipse.jgit.internal.storage.file.GcTagTest')","[256953, 260331]"
"('Description.java', 'org.junit.runner.Description', 'methodAndClassNamePatternGroupOrDefault', '([\\s\\S]*)\\((.*)\\)', 'testMultiLineMessagesWithoutFooter(org.eclipse.jgit.util.ChangeIdUtilTest)')","[185945, 186710]"
"('URIish.java', 'org.eclipse.jgit.transport.URIish', '<init>', '^([a-z][a-z0-9+-]+)://(?:(?:([^/:@]+)(?::([^\\\\/]+))?@)?((?:[^\\\\/:]+)|(?:\\[[0-9a-f:]+\\]))(?::(\\d+))?((?:/~(?:[^\\\\/]+))?[\\\\/]))?(.+)?$', 'https://l usr\\example.com@[::1]:1234//abc')",[38013]
"('Description.java', 'org.junit.runner.Description', 'methodAndClassNamePatternGroupOrDefault', '([\\s\\S]*)\\((.*)\\)', 'testFilePathCase1[OldRule? true](org.eclipse.jgit.ignore.IgnoreRuleSpecialCasesTest)')","[151364, 158448]"
"('Description.java', 'org.junit.runner.Description', 'methodAndClassNamePatternGroupOrDefault', '([\\s\\S]*)\\((.*)\\)', 'dropWithNoStashedCommits(org.eclipse.jgit.api.StashDropCommandTest)')","[243425, 243598]"
"('Description.java', 'org.junit.runner.Description', 'methodAndClassNamePatternGroupOrDefault', '([\\s\\S]*)\\((.*)\\)', 'failingDeleteOfDirectoryWithUntrackedContent(org.eclipse.jgit.merge.ResolveMergerTest)')","[88120, 88441]"
"('Description.java', 'org.junit.runner.Description', 'methodAndClassNamePatternGroupOrDefault', '([\\s\\S]*)\\((.*)\\)', 'testPrefixCompare_7(org.eclipse.jgit.lib.AbbreviatedObjectIdTest)')","[114410, 114940]"
"('URIish.java', 'org.eclipse.jgit.transport.URIish', '<init>', '^([a-z][a-z0-9+-]+)://(?:(?:([^/:@]+)(?::([^\\\\/]+))?@)?((?:[^\\\\/:]+)|(?:\\[[0-9a-f:]+\\]))(?::(\\d+))?((?:/~(?:[^\\\\/]+))?[\\\\/]))?(.+)?$', 'http://me@1.2.3.4:1234/D:/x')",[33275]
"('URIish.java', 'org.eclipse.jgit.transport.URIish', '<init>', '^([a-z][a-z0-9+-]+)://(?:(?:([^/:@]+)(?::([^\\\\/]+))?@)?((?:[^\\\\/:]+)|(?:\\[[0-9a-f:]+\\]))(?::(\\d+))?((?:/~(?:[^\\\\/]+))?[\\\\/]))?(.+)?$', 'git://abc.git')",[7337]
"('ChangeIdUtil.java', 'org.eclipse.jgit.util.ChangeIdUtil', 'indexOfChangeId', '(^Change-Id: *I[a-f0-9]{40}$)', '')","[186924, 187293, 187339, 187385, 187500, 187546, 187768, 188027, 188364, 188544, 188823, 189055, 189184, 189313, 189468, 189649, 189879, 189957, 190035, 190113, 190456, 190534, 190689, 190819, 190949, 191105, 191235, 191339, 191468, 191776, 215550]"
"('Description.java', 'org.junit.runner.Description', 'methodAndClassNamePatternGroupOrDefault', '([\\s\\S]*)\\((.*)\\)', 'testInvalidTreeModeNotOctal2(org.eclipse.jgit.lib.ObjectCheckerTest)')","[120986, 123073]"
"('URIish.java', 'org.eclipse.jgit.transport.URIish', '<init>', '^(file):([\\\\/](?![\\\\/])((?:[A-Za-z]:)?[\\\\/]?(?:(?:[^\\\\/]+[\\\\/]+)*[^\\\\/]+[\\\\/]*)))$', 'ssh+git://me:wtf@1.2.3.4:1234//')",[14511]
"('URIish.java', 'org.eclipse.jgit.transport.URIish', '<init>', '^(file):([\\\\/](?![\\\\/])((?:[A-Za-z]:)?[\\\\/]?(?:(?:[^\\\\/]+[\\\\/]+)*[^\\\\/]+[\\\\/]*)))$', 'https://me@1.2.3.4//abc')","[49766, 49950]"
"('URIish.java', 'org.eclipse.jgit.transport.URIish', '<init>', '^(file):([\\\\/](?![\\\\/])((?:[A-Za-z]:)?[\\\\/]?(?:(?:[^\\\\/]+[\\\\/]+)*[^\\\\/]+[\\\\/]*)))$', 'http://l usr\\example.com@example.com:80/D:/x')",[34172]
"('URIish.java', 'org.eclipse.jgit.transport.URIish', '<init>', '^([a-z][a-z0-9+-]+)://(?:(?:([^/:@]+)(?::([^\\\\/]+))?@)?((?:[^\\\\/:]+)|(?:\\[[0-9a-f:]+\\]))(?::(\\d+))?((?:/~(?:[^\\\\/]+))?[\\\\/]))?(.+)?$', '//.git')",[70390]
"('ChangeIdUtil.java', 'org.eclipse.jgit.util.ChangeIdUtil', 'indexOfFirstFooterLine', '^[ \\[].*$', '[bracket]')",[187002]
"('Description.java', 'org.junit.runner.Description', 'methodAndClassNamePatternGroupOrDefault', '([\\s\\S]*)\\((.*)\\)', 'org.eclipse.jgit.revwalk.TreeRevFilterTest')","[81589, 82144]"
"('Description.java', 'org.junit.runner.Description', 'methodAndClassNamePatternGroupOrDefault', '([\\s\\S]*)\\((.*)\\)', 'testGetRefs_IgnoresGarbageRef4(org.eclipse.jgit.internal.storage.file.RefDirectoryTest)')","[257539, 258704]"
"('Description.java', 'org.junit.runner.Description', 'methodAndClassNamePatternGroupOrDefault', '([\\s\\S]*)\\((.*)\\)', 'testBackwards_ConfusingPathName(org.eclipse.jgit.treewalk.CanonicalTreeParserTest)')","[136132, 136460]"
"('Description.java', 'org.junit.runner.Description', 'methodAndClassNamePatternGroupOrDefault', '([\\s\\S]*)\\((.*)\\)', 'invalidDestinationDoubleSlashes(org.eclipse.jgit.transport.RefSpecTest)')","[12890, 14944]"
"('Description.java', 'org.junit.runner.Description', 'methodAndClassNamePatternGroupOrDefault', '([\\s\\S]*)\\((.*)\\)', 'testIterator(org.eclipse.jgit.lib.ObjectIdOwnerMapTest)')","[113711, 113864]"
"('Description.java', 'org.junit.runner.Description', 'methodAndClassNamePatternGroupOrDefault', '([\\s\\S]*)\\((.*)\\)', 'testListBranchesWithContains(org.eclipse.jgit.api.BranchCommandTest)')","[227114, 227438]"
"('Description.java', 'org.junit.runner.Description', 'methodAndClassNamePatternGroupOrDefault', '([\\s\\S]*)\\((.*)\\)', 'testAlphaGroupCase2[OldRule? true](org.eclipse.jgit.ignore.IgnoreRuleSpecialCasesTest)')","[150421, 157505]"
"('URIish.java', 'org.eclipse.jgit.transport.URIish', '<init>', '^([a-z][a-z0-9+-]+)://(?:(?:([^/:@]+)(?::([^\\\\/]+))?@)?((?:[^\\\\/:]+)|(?:\\[[0-9a-f:]+\\]))(?::(\\d+))?((?:/~(?:[^\\\\/]+))?[\\\\/]))?(.+)?$', 'ssh+git://l usr\\example.com@[::1]//')","[44591, 44775]"
"('URIish.java', 'org.eclipse.jgit.transport.URIish', '<init>', '^([a-z][a-z0-9+-]+)://(?:(?:([^/:@]+)(?::([^\\\\/]+))?@)?((?:[^\\\\/:]+)|(?:\\[[0-9a-f:]+\\]))(?::(\\d+))?((?:/~(?:[^\\\\/]+))?[\\\\/]))?(.+)?$', 'https://me:wtf@example.com:1234/D:/x')",[22743]
"('Description.java', 'org.junit.runner.Description', 'methodAndClassNamePatternGroupOrDefault', '([\\s\\S]*)\\((.*)\\)', 'isWildcardShouldWorkForWildcardSuffixAndComponent(org.eclipse.jgit.transport.RefSpecTest)')","[14031, 15549]"
"('Description.java', 'org.junit.runner.Description', 'methodAndClassNamePatternGroupOrDefault', '([\\s\\S]*)\\((.*)\\)', 'testError_TruncatedOld(org.eclipse.jgit.patch.PatchErrorTest)')","[194616, 194745]"
"('Description.java', 'org.junit.runner.Description', 'methodAndClassNamePatternGroupOrDefault', '([\\s\\S]*)\\((.*)\\)', 'testMixedGroupCase3(org.eclipse.jgit.fnmatch.FileNameMatcherTest)')","[101335, 104611]"
"('Description.java', 'org.junit.runner.Description', 'methodAndClassNamePatternGroupOrDefault', '([\\s\\S]*)\\((.*)\\)', 'testBackBug396127(org.eclipse.jgit.dircache.DirCacheIteratorTest)')","[92435, 92668]"
"('Description.java', 'org.junit.runner.Description', 'methodAndClassNamePatternGroupOrDefault', '([\\s\\S]*)\\((.*)\\)', 'testBareCloneRepository(org.eclipse.jgit.api.CloneCommandTest)')","[203750, 203984]"
"('Description.java', 'org.junit.runner.Description', 'methodAndClassNamePatternGroupOrDefault', '([\\s\\S]*)\\((.*)\\)', 'testGraphGroupCase1(org.eclipse.jgit.fnmatch.FileNameMatcherTest)')","[101524, 104809]"
"('URIish.java', 'org.eclipse.jgit.transport.URIish', '<init>', '^(file):([\\\\/](?![\\\\/])((?:[A-Za-z]:)?[\\\\/]?(?:(?:[^\\\\/]+[\\\\/]+)*[^\\\\/]+[\\\\/]*)))$', 'file:/tmp/jgit_test_5457282241759243552_tmp/tmp_6811893643033562885/.git/')",[175674]
"('Description.java', 'org.junit.runner.Description', 'methodAndClassNamePatternGroupOrDefault', '([\\s\\S]*)\\((.*)\\)', 'testRemoveRejectsBadIndexes(org.eclipse.jgit.util.BlockListTest)')","[180579, 180835]"
"('Description.java', 'org.junit.runner.Description', 'methodAndClassNamePatternGroupOrDefault', '([\\s\\S]*)\\((.*)\\)', 'testWriteUnchangedFlat(org.eclipse.jgit.notes.NoteMapTest)')","[199240, 199504]"
"('URIish.java', 'org.eclipse.jgit.transport.URIish', '<init>', '^([a-z][a-z0-9+-]+)://(?:(?:([^/:@]+)(?::([^\\\\/]+))?@)?((?:[^\\\\/:]+)|(?:\\[[0-9a-f:]+\\]))(?::(\\d+))?((?:/~(?:[^\\\\/]+))?[\\\\/]))?(.+)?$', 'ssh://me:wtf@[::1]:80/D:/x')",[10242]
"('Description.java', 'org.junit.runner.Description', 'methodAndClassNamePatternGroupOrDefault', '([\\s\\S]*)\\((.*)\\)', 'test000_openrepo_default_relative_workdirconfig(org.eclipse.jgit.internal.storage.file.T0003_BasicTest)')","[249419, 249967]"
"('Description.java', 'org.junit.runner.Description', 'methodAndClassNamePatternGroupOrDefault', '([\\s\\S]*)\\((.*)\\)', 'testGetValidWithEmptySlashDotGitHumanishName(org.eclipse.jgit.transport.URIishTest)')","[4245, 5520]"
"('URIish.java', 'org.eclipse.jgit.transport.URIish', '<init>', '^([a-z][a-z0-9+-]+)://(?:(?:([^/:@]+)(?::([^\\\\/]+))?@)?((?:[^\\\\/:]+)|(?:\\[[0-9a-f:]+\\]))(?::(\\d+))?((?:/~(?:[^\\\\/]+))?[\\\\/]))?(.+)?$', 'https://lusr\\example:wtf@1.2.3.4:80//')",[25411]
"('Description.java', 'org.junit.runner.Description', 'methodAndClassNamePatternGroupOrDefault', '([\\s\\S]*)\\((.*)\\)', 'testOnlyOption_f1_2_f2_14_e(org.eclipse.jgit.api.CommitOnlyTest)')","[236962, 239064]"
"('URIish.java', 'org.eclipse.jgit.transport.URIish', '<init>', '^(file):([\\\\/](?![\\\\/])((?:[A-Za-z]:)?[\\\\/]?(?:(?:[^\\\\/]+[\\\\/]+)*[^\\\\/]+[\\\\/]*)))$', 'file:///tmp/jgit_test_2663806198163942744_tmp/tmp_6433336437702982400')","[221546, 221603]"
"('URIish.java', 'org.eclipse.jgit.transport.URIish', '<init>', '^(?:([^/:@]+)(?::([^\\\\/]+))?@)?([^\\\\/:]{2,}):([\\\\/](?:(?:[^\\\\/]+[\\\\/]+)*[^\\\\/]+[\\\\/]*))$', '/tmp/jgit_test_489293450821421843_tmp/tmp_6013690132655096981')","[225886, 226026, 226187]"
"('Description.java', 'org.junit.runner.Description', 'methodAndClassNamePatternGroupOrDefault', '([\\s\\S]*)\\((.*)\\)', 'testExtendA(org.eclipse.jgit.diff.EditTest)')","[99850, 100189]"
"('Description.java', 'org.junit.runner.Description', 'methodAndClassNamePatternGroupOrDefault', '([\\s\\S]*)\\((.*)\\)', 'testReadMissing_TempIndex(org.eclipse.jgit.dircache.DirCacheBasicTest)')","[89983, 90220]"
"('URIish.java', 'org.eclipse.jgit.transport.URIish', '<init>', '^(?:([^/:@]+)(?::([^\\\\/]+))?@)?([^\\\\/:]{2,}):([\\\\/](?:(?:[^\\\\/]+[\\\\/]+)*[^\\\\/]+[\\\\/]*))$', '/a/b/c.git/')",[66993]
"('Description.java', 'org.junit.runner.Description', 'methodAndClassNamePatternGroupOrDefault', '([\\s\\S]*)\\((.*)\\)', 'org.eclipse.jgit.util.ChangeIdUtilTest')","[185315, 191953]"
"('Description.java', 'org.junit.runner.Description', 'methodAndClassNamePatternGroupOrDefault', '([\\s\\S]*)\\((.*)\\)', 'testDegenerate_DeleteStart(org.eclipse.jgit.diff.HistogramDiffTest)')","[98800, 99408]"
"('Description.java', 'org.junit.runner.Description', 'methodAndClassNamePatternGroupOrDefault', '([\\s\\S]*)\\((.*)\\)', 'testPullMergeProgrammaticConfiguration(org.eclipse.jgit.api.PullCommandTest)')","[220819, 221167]"
"('URIish.java', 'org.eclipse.jgit.transport.URIish', '<init>', '^(file):([\\\\/](?![\\\\/])((?:[A-Za-z]:)?[\\\\/]?(?:(?:[^\\\\/]+[\\\\/]+)*[^\\\\/]+[\\\\/]*)))$', 'file:/tmp/jgit_test_4360636382069253103_tmp/tmp_2495677753821017882/.git/')",[200332]
"('Description.java', 'org.junit.runner.Description', 'methodAndClassNamePatternGroupOrDefault', '([\\s\\S]*)\\((.*)\\)', 'test_ReadNamesInSectionRecursive(org.eclipse.jgit.lib.ConfigTest)')","[129134, 129857]"
"('URIish.java', 'org.eclipse.jgit.transport.URIish', '<init>', '^(file):([\\\\/](?![\\\\/])((?:[A-Za-z]:)?[\\\\/]?(?:(?:[^\\\\/]+[\\\\/]+)*[^\\\\/]+[\\\\/]*)))$', 'https://me:wtf@example.com:1234/D:\\x')",[22766]
"('Description.java', 'org.junit.runner.Description', 'methodAndClassNamePatternGroupOrDefault', '([\\s\\S]*)\\((.*)\\)', 'testLargeTreesWithConflict(org.eclipse.jgit.notes.NoteMapMergerTest)')","[199794, 200162]"
"('Description.java', 'org.junit.runner.Description', 'methodAndClassNamePatternGroupOrDefault', '([\\s\\S]*)\\((.*)\\)', 'testEscapedBracket4[OldRule? false](org.eclipse.jgit.ignore.IgnoreRuleSpecialCasesTest)')","[149181, 156286]"
"('Description.java', 'org.junit.runner.Description', 'methodAndClassNamePatternGroupOrDefault', '([\\s\\S]*)\\((.*)\\)', 'testRejectDotAtEndOnWindows(org.eclipse.jgit.lib.ObjectCheckerTest)')","[122372, 124525]"
"('Description.java', 'org.junit.runner.Description', 'methodAndClassNamePatternGroupOrDefault', '([\\s\\S]*)\\((.*)\\)', 'testWindowsFile2(org.eclipse.jgit.transport.URIishTest)')","[2512, 4992]"
"('PathMatcher.java', 'org.eclipse.jgit.ignore.internal.PathMatcher', 'iterate', 'a.', 'ab')","[169777, 169806, 169835, 169864]"
"('Description.java', 'org.junit.runner.Description', 'methodAndClassNamePatternGroupOrDefault', '([\\s\\S]*)\\((.*)\\)', 'testLogWithFilter(org.eclipse.jgit.api.CommitAndLogCommandTest)')","[213087, 213302]"
"('Description.java', 'org.junit.runner.Description', 'methodAndClassNamePatternGroupOrDefault', '([\\s\\S]*)\\((.*)\\)', 'testSpaceGroupCase0[OldRule? true](org.eclipse.jgit.ignore.IgnoreRuleSpecialCasesTest)')","[150559, 157643]"
"('Description.java', 'org.junit.runner.Description', 'methodAndClassNamePatternGroupOrDefault', '([\\s\\S]*)\\((.*)\\)', 'testToString(org.eclipse.jgit.util.IntListTest)')","[181893, 182133]"
"('Description.java', 'org.junit.runner.Description', 'methodAndClassNamePatternGroupOrDefault', '([\\s\\S]*)\\((.*)\\)', 'testFileKeyOpenExisting(org.eclipse.jgit.lib.RepositoryCacheTest)')","[111427, 111559]"
"('URIish.java', 'org.eclipse.jgit.transport.URIish', '<init>', '^(file):([\\\\/](?![\\\\/])((?:[A-Za-z]:)?[\\\\/]?(?:(?:[^\\\\/]+[\\\\/]+)*[^\\\\/]+[\\\\/]*)))$', 'ssh+git://1.2.3.4/D:\\x')","[56482, 56666, 57586, 57770, 58690, 58874]"
"('Description.java', 'org.junit.runner.Description', 'methodAndClassNamePatternGroupOrDefault', '([\\s\\S]*)\\((.*)\\)', 'testCleanDirs(org.eclipse.jgit.api.CleanCommandTest)')","[216996, 217146]"
"('URIish.java', 'org.eclipse.jgit.transport.URIish', '<init>', '^(file):([\\\\/](?![\\\\/])((?:[A-Za-z]:)?[\\\\/]?(?:(?:[^\\\\/]+[\\\\/]+)*[^\\\\/]+[\\\\/]*)))$', 'http://l usr\\example.com:wtf@[::1]:80//')",[21340]
"('Description.java', 'org.junit.runner.Description', 'methodAndClassNamePatternGroupOrDefault', '([\\s\\S]*)\\((.*)\\)', 'testWriteString3(org.eclipse.jgit.transport.PacketLineOutTest)')","[75087, 75263]"
"('Description.java', 'org.junit.runner.Description', 'methodAndClassNamePatternGroupOrDefault', '([\\s\\S]*)\\((.*)\\)', 'testGetRefs_DiscoversDeletedLoose3(org.eclipse.jgit.internal.storage.file.RefDirectoryTest)')","[258316, 259518]"
"('Description.java', 'org.junit.runner.Description', 'methodAndClassNamePatternGroupOrDefault', '([\\s\\S]*)\\((.*)\\)', 'testEmpty(org.eclipse.jgit.patch.PatchTest)')","[196100, 196249]"
"('Description.java', 'org.junit.runner.Description', 'methodAndClassNamePatternGroupOrDefault', '([\\s\\S]*)\\((.*)\\)', 'testMaliciousGitPath1(org.eclipse.jgit.lib.DirCacheCheckoutMaliciousPathTest)')","[112290, 113204]"
"('Description.java', 'org.junit.runner.Description', 'methodAndClassNamePatternGroupOrDefault', '([\\s\\S]*)\\((.*)\\)', 'testInexactRename_LastByteDifferent(org.eclipse.jgit.diff.RenameDetectorTest)')","[93342, 93903]"
"('Description.java', 'org.junit.runner.Description', 'methodAndClassNamePatternGroupOrDefault', '([\\s\\S]*)\\((.*)\\)', 'testParseGitFileName_NoSecondLine(org.eclipse.jgit.patch.FileHeaderTest)')","[195138, 195581]"
"('URIish.java', 'org.eclipse.jgit.transport.URIish', '<init>', '^(file):([\\\\/](?![\\\\/])((?:[A-Za-z]:)?[\\\\/]?(?:(?:[^\\\\/]+[\\\\/]+)*[^\\\\/]+[\\\\/]*)))$', 'https://l usr\\example.com:wtf@example.com:1234/D:/x')",[23824]
"('Description.java', 'org.junit.runner.Description', 'methodAndClassNamePatternGroupOrDefault', '([\\s\\S]*)\\((.*)\\)', 'testBlankGroupCase4[OldRule? true](org.eclipse.jgit.ignore.IgnoreRuleSpecialCasesTest)')","[151985, 159069]"
"('Description.java', 'org.junit.runner.Description', 'methodAndClassNamePatternGroupOrDefault', '([\\s\\S]*)\\((.*)\\)', 'testEncodeInt64(org.eclipse.jgit.util.NBTest)')","[184935, 185111]"
"('URIish.java', 'org.eclipse.jgit.transport.URIish', '<init>', '^(file):([\\\\/](?![\\\\/])((?:[A-Za-z]:)?[\\\\/]?(?:(?:[^\\\\/]+[\\\\/]+)*[^\\\\/]+[\\\\/]*)))$', 'ssh://lusr\\example:wtf@example.com:80//')",[12528]
"('URIish.java', 'org.eclipse.jgit.transport.URIish', '<init>', '^(?:([^/:@]+)(?::([^\\\\/]+))?@)?([^\\\\/:]{2,}):([\\\\/](?:(?:[^\\\\/]+[\\\\/]+)*[^\\\\/]+[\\\\/]*))$', '/a/b/c//')",[70758]
"('URIish.java', 'org.eclipse.jgit.transport.URIish', '<init>', '^(file):([\\\\/](?![\\\\/])((?:[A-Za-z]:)?[\\\\/]?(?:(?:[^\\\\/]+[\\\\/]+)*[^\\\\/]+[\\\\/]*)))$', 'http://me:wtf@1.2.3.4:1234//')",[19111]
"('Description.java', 'org.junit.runner.Description', 'methodAndClassNamePatternGroupOrDefault', '([\\s\\S]*)\\((.*)\\)', 'testCopyMetaDataWithStage(org.eclipse.jgit.dircache.DirCacheEntryTest)')","[90872, 90999]"
"('Description.java', 'org.junit.runner.Description', 'methodAndClassNamePatternGroupOrDefault', '([\\s\\S]*)\\((.*)\\)', 'testMissingPort(org.eclipse.jgit.transport.URIishTest)')","[2340, 4904]"
"('URIish.java', 'org.eclipse.jgit.transport.URIish', '<init>', '^([a-z][a-z0-9+-]+)://(?:(?:([^/:@]+)(?::([^\\\\/]+))?@)?((?:[^\\\\/:]+)|(?:\\[[0-9a-f:]+\\]))(?::(\\d+))?((?:/~(?:[^\\\\/]+))?[\\\\/]))?(.+)?$', 'http://lusr\\example@example.com//abc')","[48317, 48501]"
"('Description.java', 'org.junit.runner.Description', 'methodAndClassNamePatternGroupOrDefault', '([\\s\\S]*)\\((.*)\\)', 'testSimpleStarCase0[OldRule? false](org.eclipse.jgit.ignore.IgnoreRuleSpecialCasesTest)')","[147226, 154331]"
"('Description.java', 'org.junit.runner.Description', 'methodAndClassNamePatternGroupOrDefault', '([\\s\\S]*)\\((.*)\\)', 'testTwoNonConflictingModifications(org.eclipse.jgit.merge.MergeAlgorithmTest)')","[87036, 87333]"
"('Description.java', 'org.junit.runner.Description', 'methodAndClassNamePatternGroupOrDefault', '([\\s\\S]*)\\((.*)\\)', 'testVerySimpleGroupRangeCase5[OldRule? true](org.eclipse.jgit.ignore.IgnoreRuleSpecialCasesTest)')","[151134, 158218]"
"('Description.java', 'org.junit.runner.Description', 'methodAndClassNamePatternGroupOrDefault', '([\\s\\S]*)\\((.*)\\)', 'testParseFullIndexLine_NoMode(org.eclipse.jgit.patch.FileHeaderTest)')","[195306, 195757]"
"('Description.java', 'org.junit.runner.Description', 'methodAndClassNamePatternGroupOrDefault', '([\\s\\S]*)\\((.*)\\)', 'nullForEmailShouldThrowIllegalArgumentException(org.eclipse.jgit.lib.T0001_PersonIdentTest)')","[127675, 127762]"
"('URIish.java', 'org.eclipse.jgit.transport.URIish', '<init>', '^([a-z][a-z0-9+-]+)://(?:(?:([^/:@]+)(?::([^\\\\/]+))?@)?((?:[^\\\\/:]+)|(?:\\[[0-9a-f:]+\\]))(?::(\\d+))?((?:/~(?:[^\\\\/]+))?[\\\\/]))?(.+)?$', 'ssh+git://l usr\\example.com:wtf@example.com:1234//abc')",[16020]
"('URIish.java', 'org.eclipse.jgit.transport.URIish', '<init>', '^(?:([^/:@]+)(?::([^\\\\/]+))?@)?((?:[^\\\\/:]+)|(?:\\[[0-9a-f:]+\\])):((?:(?:/~(?:[^\\\\/]+))[\\\\/])?(?:(?:[^\\\\/]+[\\\\/]+)*[^\\\\/]+[\\\\/]*))$', '/abc.git/')",[66740]
"('ChangeIdUtil.java', 'org.eclipse.jgit.util.ChangeIdUtil', 'indexOfFirstFooterLine', '(^[a-zA-Z0-9-]+:(?!//).*$)', 'Bug: 33')","[187028, 188927, 191365, 191572, 191828]"
"('FastIgnoreRule.java', 'org.eclipse.jgit.ignore.FastIgnoreRule', 'isMatch', '[A\\p{Ll}C3-5]', '6')",[160498]
"('Description.java', 'org.junit.runner.Description', 'methodAndClassNamePatternGroupOrDefault', '([\\s\\S]*)\\((.*)\\)', 'testRejectDevicesOnWindows(org.eclipse.jgit.lib.ObjectCheckerTest)')","[122456, 124613]"
"('URIish.java', 'org.eclipse.jgit.transport.URIish', '<init>', '^([a-z][a-z0-9+-]+)://(?:(?:([^/:@]+)(?::([^\\\\/]+))?@)?((?:[^\\\\/:]+)|(?:\\[[0-9a-f:]+\\]))(?::(\\d+))?((?:/~(?:[^\\\\/]+))?[\\\\/]))?(.+)?$', 'ssh://lusr\\example@1.2.3.4:80//abc')",[28997]
"('Description.java', 'org.junit.runner.Description', 'methodAndClassNamePatternGroupOrDefault', '([\\s\\S]*)\\((.*)\\)', 'testTag(org.eclipse.jgit.merge.MergeMessageFormatterTest)')","[88863, 89181]"
"('URIish.java', 'org.eclipse.jgit.transport.URIish', '<init>', '^([a-z][a-z0-9+-]+)://(?:(?:([^/:@]+)(?::([^\\\\/]+))?@)?((?:[^\\\\/:]+)|(?:\\[[0-9a-f:]+\\]))(?::(\\d+))?((?:/~(?:[^\\\\/]+))?[\\\\/]))?(.+)?$', 'file:///tmp/jgit_test_4978457602680357164_tmp/tmp_3426910796876573259/.git/')",[132598]
"('FastIgnoreRule.java', 'org.eclipse.jgit.ignore.FastIgnoreRule', 'isMatch', '[\\p{Blank}]', ' ')",[162840]
"('Description.java', 'org.junit.runner.Description', 'methodAndClassNamePatternGroupOrDefault', '([\\s\\S]*)\\((.*)\\)', 'testDequote_LoneBackslash(org.eclipse.jgit.util.QuotedStringBourneUserPathStyleTest)')","[192492, 192748]"
"('URIish.java', 'org.eclipse.jgit.transport.URIish', '<init>', '^([a-z][a-z0-9+-]+)://(?:(?:([^/:@]+)(?::([^\\\\/]+))?@)?((?:[^\\\\/:]+)|(?:\\[[0-9a-f:]+\\]))(?::(\\d+))?((?:/~(?:[^\\\\/]+))?[\\\\/]))?(.+)?$', 'https://l usr\\example.com@[::1]/D:\\x')","[51353, 51537]"
"('Description.java', 'org.junit.runner.Description', 'methodAndClassNamePatternGroupOrDefault', '([\\s\\S]*)\\((.*)\\)', 'commitAmendWithoutAuthorShouldSetOriginalAuthorAndAuthorTime(org.eclipse.jgit.api.CommitCommandTest)')","[212372, 212586]"
"('Description.java', 'org.junit.runner.Description', 'methodAndClassNamePatternGroupOrDefault', '([\\s\\S]*)\\((.*)\\)', 'testNonRecursiveFiltering(org.eclipse.jgit.treewalk.filter.PathSuffixFilterTest)')","[138319, 138385]"
"('Description.java', 'org.junit.runner.Description', 'methodAndClassNamePatternGroupOrDefault', '([\\s\\S]*)\\((.*)\\)', 'testDistance(org.eclipse.jgit.lib.RepositoryResolveTest)')","[125428, 125904]"
"('URIish.java', 'org.eclipse.jgit.transport.URIish', '<init>', '^([a-z][a-z0-9+-]+)://(?:(?:([^/:@]+)(?::([^\\\\/]+))?@)?((?:[^\\\\/:]+)|(?:\\[[0-9a-f:]+\\]))(?::(\\d+))?((?:/~(?:[^\\\\/]+))?[\\\\/]))?(.+)?$', 'https://me:wtf@1.2.3.4:80//')",[23203]
"('Description.java', 'org.junit.runner.Description', 'methodAndClassNamePatternGroupOrDefault', '([\\s\\S]*)\\((.*)\\)', 'testLowerGroupCase3[OldRule? true](org.eclipse.jgit.ignore.IgnoreRuleSpecialCasesTest)')","[150122, 157206]"
"('Description.java', 'org.junit.runner.Description', 'methodAndClassNamePatternGroupOrDefault', '([\\s\\S]*)\\((.*)\\)', 'testEqualsIgnoreCase1(org.eclipse.jgit.util.StringUtilsTest)')","[175861, 176010]"
"('Description.java', 'org.junit.runner.Description', 'methodAndClassNamePatternGroupOrDefault', '([\\s\\S]*)\\((.*)\\)', 'addSubmoduleWithRelativeUri(org.eclipse.jgit.submodule.SubmoduleAddTest)')","[108876, 109050]"
"('Description.java', 'org.junit.runner.Description', 'methodAndClassNamePatternGroupOrDefault', '([\\s\\S]*)\\((.*)\\)', 'testDepth3(org.eclipse.jgit.revwalk.RevWalkShallowTest)')","[86164, 86296]"
"('Description.java', 'org.junit.runner.Description', 'methodAndClassNamePatternGroupOrDefault', '([\\s\\S]*)\\((.*)\\)', 'testEmptyCache_NoCacheTree(org.eclipse.jgit.dircache.DirCacheTreeTest)')","[91400, 91527]"
"('URIish.java', 'org.eclipse.jgit.transport.URIish', '<init>', '^(file):([\\\\/](?![\\\\/])((?:[A-Za-z]:)?[\\\\/]?(?:(?:[^\\\\/]+[\\\\/]+)*[^\\\\/]+[\\\\/]*)))$', 'http://l usr\\example.com:wtf@[::1]:1234//abc')",[21202]
"('URIish.java', 'org.eclipse.jgit.transport.URIish', '<init>', '^([a-z][a-z0-9+-]+)://(?:(?:([^/:@]+)(?::([^\\\\/]+))?@)?((?:[^\\\\/:]+)|(?:\\[[0-9a-f:]+\\]))(?::(\\d+))?((?:/~(?:[^\\\\/]+))?[\\\\/]))?(.+)?$', '/a/b/c/')",[67476]
"('Description.java', 'org.junit.runner.Description', 'methodAndClassNamePatternGroupOrDefault', '([\\s\\S]*)\\((.*)\\)', 'testCommonScore_TotallyDifferentFiles(org.eclipse.jgit.diff.SimilarityIndexTest)')","[97920, 98051]"
"('URIish.java', 'org.eclipse.jgit.transport.URIish', '<init>', '^(file):([\\\\/](?![\\\\/])((?:[A-Za-z]:)?[\\\\/]?(?:(?:[^\\\\/]+[\\\\/]+)*[^\\\\/]+[\\\\/]*)))$', 'ssh+git://l usr\\example.com:wtf@[::1]:1234/D:/x')",[16779]
"('Description.java', 'org.junit.runner.Description', 'methodAndClassNamePatternGroupOrDefault', '([\\s\\S]*)\\((.*)\\)', 'testConstructor_RejectsBadChannel(org.eclipse.jgit.transport.SideBandOutputStreamTest)')","[73307, 73542]"
"('Description.java', 'org.junit.runner.Description', 'methodAndClassNamePatternGroupOrDefault', '([\\s\\S]*)\\((.*)\\)', 'testOnlyOption_f1_7_a(org.eclipse.jgit.api.CommitOnlyTest)')","[236563, 238646]"
"('URIish.java', 'org.eclipse.jgit.transport.URIish', '<init>', '^(file):([\\\\/](?![\\\\/])((?:[A-Za-z]:)?[\\\\/]?(?:(?:[^\\\\/]+[\\\\/]+)*[^\\\\/]+[\\\\/]*)))$', 'file:///tmp/jgit_test_4250465133596588734_tmp/tmp_290954966130449691/.git/')","[210023, 211389]"
"('Description.java', 'org.junit.runner.Description', 'methodAndClassNamePatternGroupOrDefault', '([\\s\\S]*)\\((.*)\\)', 'testAddAndRemoveNote(org.eclipse.jgit.api.NotesCommandTest)')","[242606, 242650]"
"('Description.java', 'org.junit.runner.Description', 'methodAndClassNamePatternGroupOrDefault', '([\\s\\S]*)\\((.*)\\)', 'testNoFooters_NewlineOnlyBody5(org.eclipse.jgit.revwalk.FooterLineTest)')","[77544, 77951]"
"('URIish.java', 'org.eclipse.jgit.transport.URIish', '<init>', '^([a-z][a-z0-9+-]+)://(?:(?:([^/:@]+)(?::([^\\\\/]+))?@)?((?:[^\\\\/:]+)|(?:\\[[0-9a-f:]+\\]))(?::(\\d+))?((?:/~(?:[^\\\\/]+))?[\\\\/]))?(.+)?$', 'file:///tmp/jgit_test_1473506600966761045_tmp/tmp_6676395047777785088/.git/')",[133607]
"('URIish.java', 'org.eclipse.jgit.transport.URIish', '<init>', '^([a-z][a-z0-9+-]+)://(?:(?:([^/:@]+)(?::([^\\\\/]+))?@)?((?:[^\\\\/:]+)|(?:\\[[0-9a-f:]+\\]))(?::(\\d+))?((?:/~(?:[^\\\\/]+))?[\\\\/]))?(.+)?$', 'https://me@example.com:80//')",[36311]
"('Description.java', 'org.junit.runner.Description', 'methodAndClassNamePatternGroupOrDefault', '([\\s\\S]*)\\((.*)\\)', 'testFileWithNoneUserHomeWithTilde(org.eclipse.jgit.transport.URIishTest)')","[2576, 5036]"
"('Description.java', 'org.junit.runner.Description', 'methodAndClassNamePatternGroupOrDefault', '([\\s\\S]*)\\((.*)\\)', 'testPunctGroupCase1[OldRule? true](org.eclipse.jgit.ignore.IgnoreRuleSpecialCasesTest)')","[151272, 158356]"
"('Description.java', 'org.junit.runner.Description', 'methodAndClassNamePatternGroupOrDefault', '([\\s\\S]*)\\((.*)\\)', 'testOnlyOption_f1_6_d(org.eclipse.jgit.api.CommitOnlyTest)')","[236521, 238602]"
"('URIish.java', 'org.eclipse.jgit.transport.URIish', '<init>', '^(file):([\\\\/](?![\\\\/])((?:[A-Za-z]:)?[\\\\/]?(?:(?:[^\\\\/]+[\\\\/]+)*[^\\\\/]+[\\\\/]*)))$', 'http://lusr\\example@[::1]:80//')",[35920]
"('Description.java', 'org.junit.runner.Description', 'methodAndClassNamePatternGroupOrDefault', '([\\s\\S]*)\\((.*)\\)', 'testReadString5(org.eclipse.jgit.transport.PacketLineInTest)')","[18791, 19915]"
"('Description.java', 'org.junit.runner.Description', 'methodAndClassNamePatternGroupOrDefault', '([\\s\\S]*)\\((.*)\\)', 'workingDirectoryDeleteIndexAdd(org.eclipse.jgit.api.StashApplyCommandTest)')","[240979, 241538]"
"('Description.java', 'org.junit.runner.Description', 'methodAndClassNamePatternGroupOrDefault', '([\\s\\S]*)\\((.*)\\)', 'workingDirectoryEditPreCommit(org.eclipse.jgit.api.StashApplyCommandTest)')","[240748, 241296]"
"('Description.java', 'org.junit.runner.Description', 'methodAndClassNamePatternGroupOrDefault', '([\\s\\S]*)\\((.*)\\)', 'org.eclipse.jgit.revwalk.RevTagParseTest')","[80018, 81827]"
"('Description.java', 'org.junit.runner.Description', 'methodAndClassNamePatternGroupOrDefault', '([\\s\\S]*)\\((.*)\\)', 'testSimpleStarCase1[OldRule? false](org.eclipse.jgit.ignore.IgnoreRuleSpecialCasesTest)')","[147249, 154354]"
"('Description.java', 'org.junit.runner.Description', 'methodAndClassNamePatternGroupOrDefault', '([\\s\\S]*)\\((.*)\\)', 'testAdd_InGitSortOrder(org.eclipse.jgit.dircache.DirCacheBuilderTest)')","[91841, 92038]"
"('URIish.java', 'org.eclipse.jgit.transport.URIish', '<init>', '^([a-z][a-z0-9+-]+)://(?:(?:([^/:@]+)(?::([^\\\\/]+))?@)?((?:[^\\\\/:]+)|(?:\\[[0-9a-f:]+\\]))(?::(\\d+))?((?:/~(?:[^\\\\/]+))?[\\\\/]))?(.+)?$', 'https://l usr\\example.com:wtf@1.2.3.4:1234/D:\\x')",[24261]
"('URIish.java', 'org.eclipse.jgit.transport.URIish', '<init>', '^(file):([\\\\/](?![\\\\/])((?:[A-Za-z]:)?[\\\\/]?(?:(?:[^\\\\/]+[\\\\/]+)*[^\\\\/]+[\\\\/]*)))$', 'file:/tmp/jgit_test_4201770803038451844_tmp/tmp_9073105048792238449/.git/')",[205502]
"('URIish.java', 'org.eclipse.jgit.transport.URIish', '<init>', '^([a-z][a-z0-9+-]+)://(?:(?:([^/:@]+)(?::([^\\\\/]+))?@)?((?:[^\\\\/:]+)|(?:\\[[0-9a-f:]+\\]))(?::(\\d+))?((?:/~(?:[^\\\\/]+))?[\\\\/]))?(.+)?$', 'https://me:wtf@example.com:80/D:/x')",[22927]
"('Description.java', 'org.junit.runner.Description', 'methodAndClassNamePatternGroupOrDefault', '([\\s\\S]*)\\((.*)\\)', 'testNegation[OldRule? true](org.eclipse.jgit.ignore.IgnoreMatcherParametrizedTest)')","[141689, 142011]"
"('URIish.java', 'org.eclipse.jgit.transport.URIish', '<init>', '^(file):([\\\\/](?![\\\\/])((?:[A-Za-z]:)?[\\\\/]?(?:(?:[^\\\\/]+[\\\\/]+)*[^\\\\/]+[\\\\/]*)))$', 'ssh://lusr\\example:wtf@[::1]:80//')",[13348]
"('Description.java', 'org.junit.runner.Description', 'methodAndClassNamePatternGroupOrDefault', '([\\s\\S]*)\\((.*)\\)', 'testAddExistingSingleMediumSizeFileWithNewLine(org.eclipse.jgit.api.AddCommandTest)')","[234822, 235248]"
"('Description.java', 'org.junit.runner.Description', 'methodAndClassNamePatternGroupOrDefault', '([\\s\\S]*)\\((.*)\\)', 'testValidCommit1Parent(org.eclipse.jgit.lib.ObjectCheckerTest)')","[121091, 123183]"
"('Description.java', 'org.junit.runner.Description', 'methodAndClassNamePatternGroupOrDefault', '([\\s\\S]*)\\((.*)\\)', 'testGetSlashesValidSlashHumanishName(org.eclipse.jgit.transport.URIishTest)')","[2234, 4838]"
"('Description.java', 'org.junit.runner.Description', 'methodAndClassNamePatternGroupOrDefault', '([\\s\\S]*)\\((.*)\\)', 'testEmptyList(org.eclipse.jgit.util.BlockListTest)')","[180642, 180901]"
"('URIish.java', 'org.eclipse.jgit.transport.URIish', '<init>', '^([a-z][a-z0-9+-]+)://(?:(?:([^/:@]+)(?::([^\\\\/]+))?@)?((?:[^\\\\/:]+)|(?:\\[[0-9a-f:]+\\]))(?::(\\d+))?((?:/~(?:[^\\\\/]+))?[\\\\/]))?(.+)?$', 'ssh+git://me:wtf@[::1]:80/D:/x')",[15684]
"('Description.java', 'org.junit.runner.Description', 'methodAndClassNamePatternGroupOrDefault', '([\\s\\S]*)\\((.*)\\)', 'workingDirectoryModifyInSubfolder(org.eclipse.jgit.api.StashCreateCommandTest)')","[202298, 202638]"
"('Description.java', 'org.junit.runner.Description', 'methodAndClassNamePatternGroupOrDefault', '([\\s\\S]*)\\((.*)\\)', 'testVerySimpleGroupCase1[OldRule? true](org.eclipse.jgit.ignore.IgnoreRuleSpecialCasesTest)')","[152629, 159713]"
"('Description.java', 'org.junit.runner.Description', 'methodAndClassNamePatternGroupOrDefault', '([\\s\\S]*)\\((.*)\\)', 'org.eclipse.jgit.internal.storage.file.ConcurrentRepackTest')","[252536, 256686]"
"('Description.java', 'org.junit.runner.Description', 'methodAndClassNamePatternGroupOrDefault', '([\\s\\S]*)\\((.*)\\)', 'testMirror(org.eclipse.jgit.transport.RemoteConfigTest)')","[2129, 3490]"
"('URIish.java', 'org.eclipse.jgit.transport.URIish', '<init>', '^([a-z][a-z0-9+-]+)://(?:(?:([^/:@]+)(?::([^\\\\/]+))?@)?((?:[^\\\\/:]+)|(?:\\[[0-9a-f:]+\\]))(?::(\\d+))?((?:/~(?:[^\\\\/]+))?[\\\\/]))?(.+)?$', 'http://me@example.com//')","[46063, 46247]"
"('Description.java', 'org.junit.runner.Description', 'methodAndClassNamePatternGroupOrDefault', '([\\s\\S]*)\\((.*)\\)', 'testInversedGroupCase1(org.eclipse.jgit.fnmatch.FileNameMatcherTest)')","[102070, 105381]"
"('Description.java', 'org.junit.runner.Description', 'methodAndClassNamePatternGroupOrDefault', '([\\s\\S]*)\\((.*)\\)', 'testWriteUnchangedFanout2_38(org.eclipse.jgit.notes.NoteMapTest)')","[199051, 199306]"
"('Description.java', 'org.junit.runner.Description', 'methodAndClassNamePatternGroupOrDefault', '([\\s\\S]*)\\((.*)\\)', 'testWordGroupCase4[OldRule? false](org.eclipse.jgit.ignore.IgnoreRuleSpecialCasesTest)')","[148859, 155964]"
"('Description.java', 'org.junit.runner.Description', 'methodAndClassNamePatternGroupOrDefault', '([\\s\\S]*)\\((.*)\\)', 'testNullRefName(org.eclipse.jgit.api.CheckoutCommandTest)')","[207206, 207734]"
"('URIish.java', 'org.eclipse.jgit.transport.URIish', '<init>', '^([a-z][a-z0-9+-]+)://(?:(?:([^/:@]+)(?::([^\\\\/]+))?@)?((?:[^\\\\/:]+)|(?:\\[[0-9a-f:]+\\]))(?::(\\d+))?((?:/~(?:[^\\\\/]+))?[\\\\/]))?(.+)?$', 'http://l usr\\example.com@example.com:1234//abc')",[33965]
"('Description.java', 'org.junit.runner.Description', 'methodAndClassNamePatternGroupOrDefault', '([\\s\\S]*)\\((.*)\\)', 'testNonDelimtedEmail(org.eclipse.jgit.revwalk.FooterLineTest)')","[77586, 77995]"
"('URIish.java', 'org.eclipse.jgit.transport.URIish', '<init>', '^([a-z][a-z0-9+-]+)://(?:(?:([^/:@]+)(?::([^\\\\/]+))?@)?((?:[^\\\\/:]+)|(?:\\[[0-9a-f:]+\\]))(?::(\\d+))?((?:/~(?:[^\\\\/]+))?[\\\\/]))?(.+)?$', 'ssh+git://lusr\\example@1.2.3.4//abc')","[45373, 45557]"
"('Description.java', 'org.junit.runner.Description', 'methodAndClassNamePatternGroupOrDefault', '([\\s\\S]*)\\((.*)\\)', 'org.eclipse.jgit.api.FetchCommandTest')","[242827, 247299]"
"('Description.java', 'org.junit.runner.Description', 'methodAndClassNamePatternGroupOrDefault', '([\\s\\S]*)\\((.*)\\)', 'testVerySimplePatternCase2(org.eclipse.jgit.fnmatch.FileNameMatcherTest)')","[101902, 105205]"
"('URIish.java', 'org.eclipse.jgit.transport.URIish', '<init>', '^(?:([^/:@]+)(?::([^\\\\/]+))?@)?([^\\\\/:]{2,}):([\\\\/](?:(?:[^\\\\/]+[\\\\/]+)*[^\\\\/]+[\\\\/]*))$', '/abc/')",[71287]
"('Description.java', 'org.junit.runner.Description', 'methodAndClassNamePatternGroupOrDefault', '([\\s\\S]*)\\((.*)\\)', 'testCleanDirsWithDryRun(org.eclipse.jgit.api.CleanCommandTest)')","[217038, 217190]"
"('Description.java', 'org.junit.runner.Description', 'methodAndClassNamePatternGroupOrDefault', '([\\s\\S]*)\\((.*)\\)', 'testAddGetAndContains(org.eclipse.jgit.lib.ObjectIdOwnerMapTest)')","[113690, 113842]"
"('Description.java', 'org.junit.runner.Description', 'methodAndClassNamePatternGroupOrDefault', '([\\s\\S]*)\\((.*)\\)', 'testTimeout_writeByte_Timeout(org.eclipse.jgit.util.io.TimeoutOutputStreamTest)')","[172560, 172751]"
"('ChangeIdUtil.java', 'org.eclipse.jgit.util.ChangeIdUtil', 'indexOfFirstFooterLine', '^[ \\[].*$', 'more text')",[190897]
"('Description.java', 'org.junit.runner.Description', 'methodAndClassNamePatternGroupOrDefault', '([\\s\\S]*)\\((.*)\\)', 'testSetSourceDestination(org.eclipse.jgit.transport.RefSpecTest)')","[13503, 15032]"
"('Description.java', 'org.junit.runner.Description', 'methodAndClassNamePatternGroupOrDefault', '([\\s\\S]*)\\((.*)\\)', 'testEdit_UniqueCommonLargerThanMatchPoint(org.eclipse.jgit.diff.HistogramDiffTest)')","[98821, 99430]"
"('Description.java', 'org.junit.runner.Description', 'methodAndClassNamePatternGroupOrDefault', '([\\s\\S]*)\\((.*)\\)', 'resolveUnnamedCurrentBranchCommits(org.eclipse.jgit.lib.ReflogResolveTest)')","[126216, 126343]"
"('Description.java', 'org.junit.runner.Description', 'methodAndClassNamePatternGroupOrDefault', '([\\s\\S]*)\\((.*)\\)', 'testTreeWalk_LsFiles(org.eclipse.jgit.dircache.DirCacheCGitCompatabilityTest)')","[90536, 90690]"
"('URIish.java', 'org.eclipse.jgit.transport.URIish', '<init>', '^(file):([\\\\/](?![\\\\/])((?:[A-Za-z]:)?[\\\\/]?(?:(?:[^\\\\/]+[\\\\/]+)*[^\\\\/]+[\\\\/]*)))$', 'file:///tmp/jgit_test_6790445454086415234_tmp/tmp_3647197744466266699/.git/.')",[174475]
"('URIish.java', 'org.eclipse.jgit.transport.URIish', '<init>', '^([a-z][a-z0-9+-]+)://(?:(?:([^/:@]+)(?::([^\\\\/]+))?@)?((?:[^\\\\/:]+)|(?:\\[[0-9a-f:]+\\]))(?::(\\d+))?((?:/~(?:[^\\\\/]+))?[\\\\/]))?(.+)?$', 'http://l usr\\example.com:wtf@1.2.3.4:1234/D:/x')",[20880]
"('Description.java', 'org.junit.runner.Description', 'methodAndClassNamePatternGroupOrDefault', '([\\s\\S]*)\\((.*)\\)', 'testEmptyFolderIgnored(org.eclipse.jgit.treewalk.filter.IndexDiffFilterTest)')","[137214, 138043]"
"('Description.java', 'org.junit.runner.Description', 'methodAndClassNamePatternGroupOrDefault', '([\\s\\S]*)\\((.*)\\)', 'testSwap(org.eclipse.jgit.diff.EditTest)')","[99934, 100277]"
"('FastIgnoreRule.java', 'org.eclipse.jgit.ignore.FastIgnoreRule', 'isMatch', '[\\p{javaDigit}]', '0')",[161592]
"('URIish.java', 'org.eclipse.jgit.transport.URIish', '<init>', '^([a-z][a-z0-9+-]+)://(?:(?:([^/:@]+)(?::([^\\\\/]+))?@)?((?:[^\\\\/:]+)|(?:\\[[0-9a-f:]+\\]))(?::(\\d+))?((?:/~(?:[^\\\\/]+))?[\\\\/]))?(.+)?$', 'file:///tmp/jgit_test_3786320727865834716_tmp/tmp_7743320247374569502/.git/')",[109185]
"('Description.java', 'org.junit.runner.Description', 'methodAndClassNamePatternGroupOrDefault', '([\\s\\S]*)\\((.*)\\)', 'testError_CcTruncatedOld(org.eclipse.jgit.patch.PatchCcErrorTest)')","[194891, 194913]"
"('Description.java', 'org.junit.runner.Description', 'methodAndClassNamePatternGroupOrDefault', '([\\s\\S]*)\\((.*)\\)', 'testEdit_InvertBlocks(org.eclipse.jgit.diff.MyersDiffTest)')","[97169, 97602]"
"('URIish.java', 'org.eclipse.jgit.transport.URIish', '<init>', '^(file):([\\\\/](?![\\\\/])((?:[A-Za-z]:)?[\\\\/]?(?:(?:[^\\\\/]+[\\\\/]+)*[^\\\\/]+[\\\\/]*)))$', '/tmp/jgit_test_2065451132428062414_tmp/tmp_1493923410369301041')","[208470, 208595]"
"('Description.java', 'org.junit.runner.Description', 'methodAndClassNamePatternGroupOrDefault', '([\\s\\S]*)\\((.*)\\)', 'testSort_COMMIT_TIME_DESC(org.eclipse.jgit.revwalk.RevWalkSortTest)')","[85043, 85192]"
"('ChangeIdUtil.java', 'org.eclipse.jgit.util.ChangeIdUtil', 'indexOfChangeId', '(^Change-Id: *I[a-f0-9]{40}$)', 'a')","[187845, 187871, 187897, 188260, 188286, 190300, 191904, 191930]"
"('Description.java', 'org.junit.runner.Description', 'methodAndClassNamePatternGroupOrDefault', '([\\s\\S]*)\\((.*)\\)', 'commitIgnoresSmudgedEntryWithDifferentId(org.eclipse.jgit.api.CommitCommandTest)')","[212435, 212652]"
"('Description.java', 'org.junit.runner.Description', 'methodAndClassNamePatternGroupOrDefault', '([\\s\\S]*)\\((.*)\\)', 'testReadLines_CRLF(org.eclipse.jgit.util.ReadLinesTest)')","[171860, 171991]"
"('URIish.java', 'org.eclipse.jgit.transport.URIish', '<init>', '^([a-z][a-z0-9+-]+)://(?:(?:([^/:@]+)(?::([^\\\\/]+))?@)?((?:[^\\\\/:]+)|(?:\\[[0-9a-f:]+\\]))(?::(\\d+))?((?:/~(?:[^\\\\/]+))?[\\\\/]))?(.+)?$', 'http://lusr\\example:wtf@1.2.3.4:1234/D:\\x')",[22053]
"('URIish.java', 'org.eclipse.jgit.transport.URIish', '<init>', '^([a-z][a-z0-9+-]+)://(?:(?:([^/:@]+)(?::([^\\\\/]+))?@)?((?:[^\\\\/:]+)|(?:\\[[0-9a-f:]+\\]))(?::(\\d+))?((?:/~(?:[^\\\\/]+))?[\\\\/]))?(.+)?$', 'ssh+git://me@[::1]:1234//')",[30239]
"('URIish.java', 'org.eclipse.jgit.transport.URIish', '<init>', '^(file):([\\\\/](?![\\\\/])((?:[A-Za-z]:)?[\\\\/]?(?:(?:[^\\\\/]+[\\\\/]+)*[^\\\\/]+[\\\\/]*)))$', 'file:/tmp/jgit_test_9196781976966621040_tmp/tmp_2995568672839144646/.git/')",[132630]
"('Description.java', 'org.junit.runner.Description', 'methodAndClassNamePatternGroupOrDefault', '([\\s\\S]*)\\((.*)\\)', 'test020_createBlobTag(org.eclipse.jgit.internal.storage.file.T0003_BasicTest)')","[249167, 249703]"
"('URIish.java', 'org.eclipse.jgit.transport.URIish', '<init>', '^(?:([^/:@]+)(?::([^\\\\/]+))?@)?((?:[^\\\\/:]+)|(?:\\[[0-9a-f:]+\\])):((?:(?:/~(?:[^\\\\/]+))[\\\\/])?(?:(?:[^\\\\/]+[\\\\/]+)*[^\\\\/]+[\\\\/]*))$', '/tmp/jgit_test_2412289587651931572_tmp/tmp_8062070046587231599/.git')","[229790, 229932]"
"('Description.java', 'org.junit.runner.Description', 'methodAndClassNamePatternGroupOrDefault', '([\\s\\S]*)\\((.*)\\)', 'testEmptyIgnoreNode(org.eclipse.jgit.ignore.IgnoreNodeTest)')","[140689, 140996]"
"('URIish.java', 'org.eclipse.jgit.transport.URIish', '<init>', '^(file):([\\\\/](?![\\\\/])((?:[A-Za-z]:)?[\\\\/]?(?:(?:[^\\\\/]+[\\\\/]+)*[^\\\\/]+[\\\\/]*)))$', 'ssh://l usr\\example.com@example.com//abc')","[40566, 40750]"
"('Description.java', 'org.junit.runner.Description', 'methodAndClassNamePatternGroupOrDefault', '([\\s\\S]*)\\((.*)\\)', 'testEdit_InsertNearCommonTail(org.eclipse.jgit.diff.MyersDiffTest)')","[97085, 97514]"
"('URIish.java', 'org.eclipse.jgit.transport.URIish', '<init>', '^(file):([\\\\/](?![\\\\/])((?:[A-Za-z]:)?[\\\\/]?(?:(?:[^\\\\/]+[\\\\/]+)*[^\\\\/]+[\\\\/]*)))$', 'file:/tmp/jgit_test_6811710720935520240_tmp/tmp_8740581029245250870/.git/')",[132842]
"('Description.java', 'org.junit.runner.Description', 'methodAndClassNamePatternGroupOrDefault', '([\\s\\S]*)\\((.*)\\)', 'org.eclipse.jgit.internal.storage.file.GcBranchPrunedTest')","[260156, 260354]"
"('Description.java', 'org.junit.runner.Description', 'methodAndClassNamePatternGroupOrDefault', '([\\s\\S]*)\\((.*)\\)', 'testInvalidCommitInvalidTree4(org.eclipse.jgit.lib.ObjectCheckerTest)')","[121070, 123161]"
"('Description.java', 'org.junit.runner.Description', 'methodAndClassNamePatternGroupOrDefault', '([\\s\\S]*)\\((.*)\\)', 'testUntrackedNotIgnoredFolders(org.eclipse.jgit.lib.IndexDiffTest)')","[110574, 110925]"
"('Description.java', 'org.junit.runner.Description', 'methodAndClassNamePatternGroupOrDefault', '([\\s\\S]*)\\((.*)\\)', 'testSaveTimeout(org.eclipse.jgit.transport.RemoteConfigTest)')","[1564, 2534]"
"('URIish.java', 'org.eclipse.jgit.transport.URIish', '<init>', '^([a-z][a-z0-9+-]+)://(?:(?:([^/:@]+)(?::([^\\\\/]+))?@)?((?:[^\\\\/:]+)|(?:\\[[0-9a-f:]+\\]))(?::(\\d+))?((?:/~(?:[^\\\\/]+))?[\\\\/]))?(.+)?$', 'ssh+git://me:wtf@[::1]:1234//')",[15100]
"('Description.java', 'org.junit.runner.Description', 'methodAndClassNamePatternGroupOrDefault', '([\\s\\S]*)\\((.*)\\)', 'testMultipleInvocations(org.eclipse.jgit.api.CommitAndLogCommandTest)')","[213003, 213214]"
"('URIish.java', 'org.eclipse.jgit.transport.URIish', '<init>', '^([a-z][a-z0-9+-]+)://(?:(?:([^/:@]+)(?::([^\\\\/]+))?@)?((?:[^\\\\/:]+)|(?:\\[[0-9a-f:]+\\]))(?::(\\d+))?((?:/~(?:[^\\\\/]+))?[\\\\/]))?(.+)?$', 'in-memory://')","[67998, 71408, 73164, 74683, 74860]"
"('Description.java', 'org.junit.runner.Description', 'methodAndClassNamePatternGroupOrDefault', '([\\s\\S]*)\\((.*)\\)', 'testOnlyOption_f1_2_a(org.eclipse.jgit.api.CommitOnlyTest)')","[236038, 238096]"
"('URIish.java', 'org.eclipse.jgit.transport.URIish', '<init>', '^(file):([\\\\/](?![\\\\/])((?:[A-Za-z]:)?[\\\\/]?(?:(?:[^\\\\/]+[\\\\/]+)*[^\\\\/]+[\\\\/]*)))$', 'ssh://me:wtf@[::1]:80//')",[10127]
"('URIish.java', 'org.eclipse.jgit.transport.URIish', '<init>', '^([a-z][a-z0-9+-]+)://(?:(?:([^/:@]+)(?::([^\\\\/]+))?@)?((?:[^\\\\/:]+)|(?:\\[[0-9a-f:]+\\]))(?::(\\d+))?((?:/~(?:[^\\\\/]+))?[\\\\/]))?(.+)?$', 'file:///tmp/jgit_test_8538461263074940761_tmp/tmp_9105454306462814760')","[208953, 209015]"
"('URIish.java', 'org.eclipse.jgit.transport.URIish', '<init>', '^(file):([\\\\/](?![\\\\/])((?:[A-Za-z]:)?[\\\\/]?(?:(?:[^\\\\/]+[\\\\/]+)*[^\\\\/]+[\\\\/]*)))$', 'https://l usr\\example.com:wtf@example.com:1234//')",[23732]
"('Description.java', 'org.junit.runner.Description', 'methodAndClassNamePatternGroupOrDefault', '([\\s\\S]*)\\((.*)\\)', 'testOnlyOption_f1_14_c(org.eclipse.jgit.api.CommitOnlyTest)')","[237686, 239790]"
"('Description.java', 'org.junit.runner.Description', 'methodAndClassNamePatternGroupOrDefault', '([\\s\\S]*)\\((.*)\\)', 'testParse_WeirdHeaderOnlyCommit(org.eclipse.jgit.revwalk.RevCommitParseTest)')","[84033, 84502]"
"('Description.java', 'org.junit.runner.Description', 'methodAndClassNamePatternGroupOrDefault', '([\\s\\S]*)\\((.*)\\)', 'testMoveToOtherDir(org.eclipse.jgit.api.BlameCommandTest)')","[244579, 244967]"
"('Description.java', 'org.junit.runner.Description', 'methodAndClassNamePatternGroupOrDefault', '([\\s\\S]*)\\((.*)\\)', 'testResetState(org.eclipse.jgit.ignore.IgnoreMatcherTest)')","[145407, 145605]"
"('Description.java', 'org.junit.runner.Description', 'methodAndClassNamePatternGroupOrDefault', '([\\s\\S]*)\\((.*)\\)', 'absoluteGitDirRef(org.eclipse.jgit.internal.storage.file.FileRepositoryBuilderTest)')","[248450, 248602]"
"('Description.java', 'org.junit.runner.Description', 'methodAndClassNamePatternGroupOrDefault', '([\\s\\S]*)\\((.*)\\)', 'testTwoGroupsCase1[OldRule? false](org.eclipse.jgit.ignore.IgnoreRuleSpecialCasesTest)')","[147157, 154262]"
"('Description.java', 'org.junit.runner.Description', 'methodAndClassNamePatternGroupOrDefault', '([\\s\\S]*)\\((.*)\\)', 'testWorkdirIsDotGit_CreateRepositoryFromWorkDirOnly(org.eclipse.jgit.internal.storage.file.RepositorySetupWorkDirTest)')","[255768, 256026]"
"('Description.java', 'org.junit.runner.Description', 'methodAndClassNamePatternGroupOrDefault', '([\\s\\S]*)\\((.*)\\)', 'testUnsetBranchSection(org.eclipse.jgit.lib.ConfigTest)')","[129239, 129967]"
"('Description.java', 'org.junit.runner.Description', 'methodAndClassNamePatternGroupOrDefault', '([\\s\\S]*)\\((.*)\\)', 'testParseAbbrIndexLine_NoMode(org.eclipse.jgit.patch.FileHeaderTest)')","[195495, 195955]"
"('Description.java', 'org.junit.runner.Description', 'methodAndClassNamePatternGroupOrDefault', '([\\s\\S]*)\\((.*)\\)', 'testWithSlashDoesNotMatchInSubDirectory(org.eclipse.jgit.ignore.IgnoreNodeTest)')","[140605, 140908]"
"('Description.java', 'org.junit.runner.Description', 'methodAndClassNamePatternGroupOrDefault', '([\\s\\S]*)\\((.*)\\)', 'testMixedResetRetainsSizeAndModifiedTime(org.eclipse.jgit.api.ResetCommandTest)')","[204415, 204756]"
"('Description.java', 'org.junit.runner.Description', 'methodAndClassNamePatternGroupOrDefault', '([\\s\\S]*)\\((.*)\\)', 'testResetHardFromIndexEntryWithoutFileToTreeWithoutFile(org.eclipse.jgit.lib.DirCacheCheckoutTest)')","[116179, 117138]"
"('Description.java', 'org.junit.runner.Description', 'methodAndClassNamePatternGroupOrDefault', '([\\s\\S]*)\\((.*)\\)', 'testEqualsWithoutWhitespace(org.eclipse.jgit.diff.RawTextIgnoreAllWhitespaceTest)')","[99663, 99706]"
"('Description.java', 'org.junit.runner.Description', 'methodAndClassNamePatternGroupOrDefault', '([\\s\\S]*)\\((.*)\\)', 'test000_openrepo_alternate_index_file_and_objdirs(org.eclipse.jgit.internal.storage.file.T0003_BasicTest)')","[249125, 249659]"
"('Description.java', 'org.junit.runner.Description', 'methodAndClassNamePatternGroupOrDefault', '([\\s\\S]*)\\((.*)\\)', 'testCloneIsDeepClone(org.eclipse.jgit.treewalk.filter.NotTreeFilterTest)')","[139206, 139357]"
"('URIish.java', 'org.eclipse.jgit.transport.URIish', '<init>', '^([\\\\/]?((?:[A-Za-z]:)?[\\\\/]?(?:(?:[^\\\\/]+[\\\\/]+)*[^\\\\/]+[\\\\/]*)))$', '/tmp/jgit_test_5112799029350695586_tmp/tmp_3931614780195894737.git')",[74808]
"('Description.java', 'org.junit.runner.Description', 'methodAndClassNamePatternGroupOrDefault', '([\\s\\S]*)\\((.*)\\)', 'testAddNothing(org.eclipse.jgit.api.AddCommandTest)')","[234759, 235182]"
"('Description.java', 'org.junit.runner.Description', 'methodAndClassNamePatternGroupOrDefault', '([\\s\\S]*)\\((.*)\\)', 'testPunctGroupCase3[OldRule? false](org.eclipse.jgit.ignore.IgnoreRuleSpecialCasesTest)')","[147755, 154860]"
"('Description.java', 'org.junit.runner.Description', 'methodAndClassNamePatternGroupOrDefault', '([\\s\\S]*)\\((.*)\\)', 'testQuoteParsing(org.eclipse.jgit.transport.OpenSshConfigTest)')","[3468, 3922]"
"('Description.java', 'org.junit.runner.Description', 'methodAndClassNamePatternGroupOrDefault', '([\\s\\S]*)\\((.*)\\)', 'testGraphGroupCase2(org.eclipse.jgit.fnmatch.FileNameMatcherTest)')","[101545, 104831]"
"('Description.java', 'org.junit.runner.Description', 'methodAndClassNamePatternGroupOrDefault', '([\\s\\S]*)\\((.*)\\)', 'testUpdateWorkingDirectoryFromIndex2(org.eclipse.jgit.api.PathCheckoutCommandTest)')","[224614, 224877]"
"('FastIgnoreRule.java', 'org.eclipse.jgit.ignore.FastIgnoreRule', 'isMatch', '[\\p{Space}]', 'a')",[161332]
"('Description.java', 'org.junit.runner.Description', 'methodAndClassNamePatternGroupOrDefault', '([\\s\\S]*)\\((.*)\\)', 'testRebaseWithUntrackedFile(org.eclipse.jgit.api.RebaseCommandTest)')","[217858, 219356]"
"('URIish.java', 'org.eclipse.jgit.transport.URIish', '<init>', '^([a-z][a-z0-9+-]+)://(?:(?:([^/:@]+)(?::([^\\\\/]+))?@)?((?:[^\\\\/:]+)|(?:\\[[0-9a-f:]+\\]))(?::(\\d+))?((?:/~(?:[^\\\\/]+))?[\\\\/]))?(.+)?$', 'ssh://lusr\\example:wtf@[::1]:80/D:\\x')",[13635]
"('Description.java', 'org.junit.runner.Description', 'methodAndClassNamePatternGroupOrDefault', '([\\s\\S]*)\\((.*)\\)', 'testCheckoutMultiple(org.eclipse.jgit.api.PathCheckoutCommandTest)')","[224425, 224679]"
"('Description.java', 'org.junit.runner.Description', 'methodAndClassNamePatternGroupOrDefault', '([\\s\\S]*)\\((.*)\\)', 'testRefLogQueryIsValidRef(org.eclipse.jgit.lib.ValidRefNameTest)')","[118383, 118742]"
"('Description.java', 'org.junit.runner.Description', 'methodAndClassNamePatternGroupOrDefault', '([\\s\\S]*)\\((.*)\\)', 'testParsePersonIdent_malformedCases(org.eclipse.jgit.util.RawParseUtils_ParsePersonIdentTest)')","[171587, 171674]"
"('Description.java', 'org.junit.runner.Description', 'methodAndClassNamePatternGroupOrDefault', '([\\s\\S]*)\\((.*)\\)', 'testReadLoosePackedRef(org.eclipse.jgit.lib.RefTest)')","[115607, 115804]"
"('URIish.java', 'org.eclipse.jgit.transport.URIish', '<init>', '^(file):([\\\\/](?![\\\\/])((?:[A-Za-z]:)?[\\\\/]?(?:(?:[^\\\\/]+[\\\\/]+)*[^\\\\/]+[\\\\/]*)))$', 'http://lusr\\example:wtf@example.com:1234/D:\\x')",[21662]
"('Description.java', 'org.junit.runner.Description', 'methodAndClassNamePatternGroupOrDefault', '([\\s\\S]*)\\((.*)\\)', 'testCloneEmpty(org.eclipse.jgit.revwalk.DateRevQueueTest)')","[82473, 82625]"
"('Description.java', 'org.junit.runner.Description', 'methodAndClassNamePatternGroupOrDefault', '([\\s\\S]*)\\((.*)\\)', 'org.eclipse.jgit.lib.RefTest')","[115439, 115849]"
"('Description.java', 'org.junit.runner.Description', 'methodAndClassNamePatternGroupOrDefault', '([\\s\\S]*)\\((.*)\\)', 'testPut_KeyMustMatchName_WithPrefix(org.eclipse.jgit.util.RefMapTest)')","[184056, 184532]"
"('URIish.java', 'org.eclipse.jgit.transport.URIish', '<init>', '^([a-z][a-z0-9+-]+)://(?:(?:([^/:@]+)(?::([^\\\\/]+))?@)?((?:[^\\\\/:]+)|(?:\\[[0-9a-f:]+\\]))(?::(\\d+))?((?:/~(?:[^\\\\/]+))?[\\\\/]))?(.+)?$', 'user@example.com:some/p ath')","[68435, 68504]"
"('Description.java', 'org.junit.runner.Description', 'methodAndClassNamePatternGroupOrDefault', '([\\s\\S]*)\\((.*)\\)', 'testEqualsIgnoreCase4(org.eclipse.jgit.util.StringUtilsTest)')","[175924, 176076]"
"('Description.java', 'org.junit.runner.Description', 'methodAndClassNamePatternGroupOrDefault', '([\\s\\S]*)\\((.*)\\)', 'testWildcardAtStart(org.eclipse.jgit.transport.RefSpecTest)')","[13656, 15258]"
"('Description.java', 'org.junit.runner.Description', 'methodAndClassNamePatternGroupOrDefault', '([\\s\\S]*)\\((.*)\\)', 'testOpen(org.eclipse.jgit.api.GitConstructionTest)')","[203320, 203385]"
"('Description.java', 'org.junit.runner.Description', 'methodAndClassNamePatternGroupOrDefault', '([\\s\\S]*)\\((.*)\\)', 'testBlankGroupCase0[OldRule? false](org.eclipse.jgit.ignore.IgnoreRuleSpecialCasesTest)')","[148330, 155435]"
"('Description.java', 'org.junit.runner.Description', 'methodAndClassNamePatternGroupOrDefault', '([\\s\\S]*)\\((.*)\\)', 'testReadOneLine(org.eclipse.jgit.internal.storage.file.ReflogReaderTest)')","[259900, 260075]"
"('Description.java', 'org.junit.runner.Description', 'methodAndClassNamePatternGroupOrDefault', '([\\s\\S]*)\\((.*)\\)', 'commitAmendOnInitialShouldFail(org.eclipse.jgit.api.CommitCommandTest)')","[212477, 212696]"
"('URIish.java', 'org.eclipse.jgit.transport.URIish', '<init>', '^(file):([\\\\/](?![\\\\/])((?:[A-Za-z]:)?[\\\\/]?(?:(?:[^\\\\/]+[\\\\/]+)*[^\\\\/]+[\\\\/]*)))$', 'https://lusr\\example:wtf@example.com:1234//abc')",[24882]
"('Description.java', 'org.junit.runner.Description', 'methodAndClassNamePatternGroupOrDefault', '([\\s\\S]*)\\((.*)\\)', 'testEditAllLines(org.eclipse.jgit.api.BlameCommandTest)')","[244663, 245055]"
"('Description.java', 'org.junit.runner.Description', 'methodAndClassNamePatternGroupOrDefault', '([\\s\\S]*)\\((.*)\\)', 'testMerge_WithPrefix(org.eclipse.jgit.util.RefMapTest)')","[184077, 184554]"
"('URIish.java', 'org.eclipse.jgit.transport.URIish', '<init>', '^(file):([\\\\/](?![\\\\/])((?:[A-Za-z]:)?[\\\\/]?(?:(?:[^\\\\/]+[\\\\/]+)*[^\\\\/]+[\\\\/]*)))$', 'file:///tmp/jgit_test_8039684018584715607_tmp/tmp_1550296378721462083/.git/')",[173438]
"('Description.java', 'org.junit.runner.Description', 'methodAndClassNamePatternGroupOrDefault', '([\\s\\S]*)\\((.*)\\)', 'testIsId(org.eclipse.jgit.lib.AbbreviatedObjectIdTest)')","[114368, 114896]"
"('Description.java', 'org.junit.runner.Description', 'methodAndClassNamePatternGroupOrDefault', '([\\s\\S]*)\\((.*)\\)', 'testReadLineWithMissingComment(org.eclipse.jgit.internal.storage.file.ReflogReaderTest)')","[259858, 260031]"
"('Description.java', 'org.junit.runner.Description', 'methodAndClassNamePatternGroupOrDefault', '([\\s\\S]*)\\((.*)\\)', 'test1_FromString(org.eclipse.jgit.lib.AbbreviatedObjectIdTest)')","[114578, 115116]"
"('Description.java', 'org.junit.runner.Description', 'methodAndClassNamePatternGroupOrDefault', '([\\s\\S]*)\\((.*)\\)', 'testNoBareDot(org.eclipse.jgit.lib.ValidRefNameTest)')","[118677, 119050]"
"('Description.java', 'org.junit.runner.Description', 'methodAndClassNamePatternGroupOrDefault', '([\\s\\S]*)\\((.*)\\)', 'testFileKeyOpenNew(org.eclipse.jgit.lib.RepositoryCacheTest)')","[111364, 111493]"
"('Description.java', 'org.junit.runner.Description', 'methodAndClassNamePatternGroupOrDefault', '([\\s\\S]*)\\((.*)\\)', 'testCherryPickDirtyIndex(org.eclipse.jgit.api.CherryPickCommandTest)')","[232085, 232339]"
"('Description.java', 'org.junit.runner.Description', 'methodAndClassNamePatternGroupOrDefault', '([\\s\\S]*)\\((.*)\\)', 'testForceMaster(org.eclipse.jgit.transport.RefSpecTest)')","[12846, 14922]"
"('Description.java', 'org.junit.runner.Description', 'methodAndClassNamePatternGroupOrDefault', '([\\s\\S]*)\\((.*)\\)', 'testDF_DetectConflict(org.eclipse.jgit.treewalk.NameConflictTreeWalkTest)')","[134810, 134918]"
"('Description.java', 'org.junit.runner.Description', 'methodAndClassNamePatternGroupOrDefault', '([\\s\\S]*)\\((.*)\\)', 'testSimpleTimeout(org.eclipse.jgit.transport.RemoteConfigTest)')","[1543, 2491]"
"('FastIgnoreRule.java', 'org.eclipse.jgit.ignore.FastIgnoreRule', 'isMatch', '[\\p{javaLetter}]', 'd')",[161018]
"('Description.java', 'org.junit.runner.Description', 'methodAndClassNamePatternGroupOrDefault', '([\\s\\S]*)\\((.*)\\)', 'testRebaseShouldTryToParseValidLineMarkedAsComment(org.eclipse.jgit.api.RebaseCommandTest)')","[218656, 220192]"
"('URIish.java', 'org.eclipse.jgit.transport.URIish', '<init>', '^([a-z][a-z0-9+-]+)://(?:(?:([^/:@]+)(?::([^\\\\/]+))?@)?((?:[^\\\\/:]+)|(?:\\[[0-9a-f:]+\\]))(?::(\\d+))?((?:/~(?:[^\\\\/]+))?[\\\\/]))?(.+)?$', 'https://me@[::1]//')","[50111, 50295]"
"('Description.java', 'org.junit.runner.Description', 'methodAndClassNamePatternGroupOrDefault', '([\\s\\S]*)\\((.*)\\)', 'testFileCommittedModifiedIgnored(org.eclipse.jgit.treewalk.filter.IndexDiffFilterTest)')","[137025, 137845]"
"('URIish.java', 'org.eclipse.jgit.transport.URIish', '<init>', '^([a-z][a-z0-9+-]+)://(?:(?:([^/:@]+)(?::([^\\\\/]+))?@)?((?:[^\\\\/:]+)|(?:\\[[0-9a-f:]+\\]))(?::(\\d+))?((?:/~(?:[^\\\\/]+))?[\\\\/]))?(.+)?$', '/tmp/jgit_test_3752343835297747993_tmp/tmp_2470876455541918618')","[230470, 230600, 231064]"
"('URIish.java', 'org.eclipse.jgit.transport.URIish', '<init>', '^([\\\\/]?((?:[A-Za-z]:)?[\\\\/]?(?:(?:[^\\\\/]+[\\\\/]+)*[^\\\\/]+[\\\\/]*)))$', '/tmp/jgit_test_4337800104653581569_tmp/tmp_3318288783057189273/.git')","[111082, 111242]"
"('Description.java', 'org.junit.runner.Description', 'methodAndClassNamePatternGroupOrDefault', '([\\s\\S]*)\\((.*)\\)', 'testDequote_Latin1(org.eclipse.jgit.util.QuotedStringGitPathStyleTest)')","[177508, 177934]"
"('Description.java', 'org.junit.runner.Description', 'methodAndClassNamePatternGroupOrDefault', '([\\s\\S]*)\\((.*)\\)', 'testWritePacket3(org.eclipse.jgit.transport.PacketLineOutTest)')","[74982, 75153]"
"('URIish.java', 'org.eclipse.jgit.transport.URIish', '<init>', '^([a-z][a-z0-9+-]+)://(?:(?:([^/:@]+)(?::([^\\\\/]+))?@)?((?:[^\\\\/:]+)|(?:\\[[0-9a-f:]+\\]))(?::(\\d+))?((?:/~(?:[^\\\\/]+))?[\\\\/]))?(.+)?$', 'ssh://l usr\\example.com:wtf@[::1]:1234//')",[11900]
"('URIish.java', 'org.eclipse.jgit.transport.URIish', '<init>', '^(file):([\\\\/](?![\\\\/])((?:[A-Za-z]:)?[\\\\/]?(?:(?:[^\\\\/]+[\\\\/]+)*[^\\\\/]+[\\\\/]*)))$', 'https://lusr\\example@example.com//abc')","[51606, 51790]"
"('URIish.java', 'org.eclipse.jgit.transport.URIish', '<init>', '^(file):([\\\\/](?![\\\\/])((?:[A-Za-z]:)?[\\\\/]?(?:(?:[^\\\\/]+[\\\\/]+)*[^\\\\/]+[\\\\/]*)))$', 'http://lusr\\example:wtf@example.com:1234/D:/x')",[21616]
"('Description.java', 'org.junit.runner.Description', 'methodAndClassNamePatternGroupOrDefault', '([\\s\\S]*)\\((.*)\\)', 'testUpperGroupCase1(org.eclipse.jgit.fnmatch.FileNameMatcherTest)')","[103225, 106591]"
"('Description.java', 'org.junit.runner.Description', 'methodAndClassNamePatternGroupOrDefault', '([\\s\\S]*)\\((.*)\\)', 'org.eclipse.jgit.internal.storage.file.RefUpdateTest')","[252767, 260377]"
"('URIish.java', 'org.eclipse.jgit.transport.URIish', '<init>', '^([a-z][a-z0-9+-]+)://(?:(?:([^/:@]+)(?::([^\\\\/]+))?@)?((?:[^\\\\/:]+)|(?:\\[[0-9a-f:]+\\]))(?::(\\d+))?((?:/~(?:[^\\\\/]+))?[\\\\/]))?(.+)?$', 'http://lusr\\example:wtf@1.2.3.4:80//')",[22099]
"('URIish.java', 'org.eclipse.jgit.transport.URIish', '<init>', '^(file):([\\\\/](?![\\\\/])((?:[A-Za-z]:)?[\\\\/]?(?:(?:[^\\\\/]+[\\\\/]+)*[^\\\\/]+[\\\\/]*)))$', 'http://l usr\\example.com:wtf@[::1]:1234/D:/x')",[21248]
"('URIish.java', 'org.eclipse.jgit.transport.URIish', '<init>', '^([a-z][a-z0-9+-]+)://(?:(?:([^/:@]+)(?::([^\\\\/]+))?@)?((?:[^\\\\/:]+)|(?:\\[[0-9a-f:]+\\]))(?::(\\d+))?((?:/~(?:[^\\\\/]+))?[\\\\/]))?(.+)?$', 'ssh+git://me@example.com//')","[42751, 42935]"
"('URIish.java', 'org.eclipse.jgit.transport.URIish', '<init>', '^(file):([\\\\/](?![\\\\/])((?:[A-Za-z]:)?[\\\\/]?(?:(?:[^\\\\/]+[\\\\/]+)*[^\\\\/]+[\\\\/]*)))$', 'http://l usr\\example.com:wtf@example.com:1234/D:\\x')",[20535]
"('URIish.java', 'org.eclipse.jgit.transport.URIish', '<init>', '^(file):([\\\\/](?![\\\\/])((?:[A-Za-z]:)?[\\\\/]?(?:(?:[^\\\\/]+[\\\\/]+)*[^\\\\/]+[\\\\/]*)))$', 'ssh+git://lusr\\example@example.com:80//')",[31872]
"('Description.java', 'org.junit.runner.Description', 'methodAndClassNamePatternGroupOrDefault', '([\\s\\S]*)\\((.*)\\)', 'testAsteriskDotDoNotMatch[OldRule? true](org.eclipse.jgit.ignore.FastIgnoreRuleTest)')","[164339, 165075]"
"('ChangeIdUtil.java', 'org.eclipse.jgit.util.ChangeIdUtil', 'indexOfFirstFooterLine', '(^[a-zA-Z0-9-]+:(?!//).*$)', 'with header and body')",[190482]
"('Description.java', 'org.junit.runner.Description', 'methodAndClassNamePatternGroupOrDefault', '([\\s\\S]*)\\((.*)\\)', 'org.eclipse.jgit.treewalk.FileTreeIteratorTest')","[131186, 138768]"
"('QuotedString.java', 'org.eclipse.jgit.util.QuotedString$BourneUserPathStyle', 'quote', '^~[A-Za-z0-9_-]+$', '~/a')","[193492, 193516]"
"('Description.java', 'org.junit.runner.Description', 'methodAndClassNamePatternGroupOrDefault', '([\\s\\S]*)\\((.*)\\)', 'testParse_OnlyLFMessage(org.eclipse.jgit.revwalk.RevCommitParseTest)')","[84097, 84546]"
"('Description.java', 'org.junit.runner.Description', 'methodAndClassNamePatternGroupOrDefault', '([\\s\\S]*)\\((.*)\\)', 'testOnlyOption_f1_2_f2_14_a(org.eclipse.jgit.api.CommitOnlyTest)')","[236878, 238976]"
"('Description.java', 'org.junit.runner.Description', 'methodAndClassNamePatternGroupOrDefault', '([\\s\\S]*)\\((.*)\\)', 'testConfigureCache_PackedGitOpenFiles_0(org.eclipse.jgit.internal.storage.file.WindowCacheReconfigureTest)')","[247627, 247781]"
"('URIish.java', 'org.eclipse.jgit.transport.URIish', '<init>', '^(file):([\\\\/](?![\\\\/])((?:[A-Za-z]:)?[\\\\/]?(?:(?:[^\\\\/]+[\\\\/]+)*[^\\\\/]+[\\\\/]*)))$', 'https://l usr\\example.com@1.2.3.4:80//abc')",[37806]
"('Description.java', 'org.junit.runner.Description', 'methodAndClassNamePatternGroupOrDefault', '([\\s\\S]*)\\((.*)\\)', 'testDequote_LoneBackslash(org.eclipse.jgit.util.QuotedStringBourneStyleTest)')","[182938, 183152]"
"('URIish.java', 'org.eclipse.jgit.transport.URIish', '<init>', '^(?:([^/:@]+)(?::([^\\\\/]+))?@)?((?:[^\\\\/:]+)|(?:\\[[0-9a-f:]+\\])):((?:(?:/~(?:[^\\\\/]+))[\\\\/])?(?:(?:[^\\\\/]+[\\\\/]+)*[^\\\\/]+[\\\\/]*))$', 'example.com:some/p ath')","[5703, 5772]"
"('Description.java', 'org.junit.runner.Description', 'methodAndClassNamePatternGroupOrDefault', '([\\s\\S]*)\\((.*)\\)', 'testTwoGroupsCase3(org.eclipse.jgit.fnmatch.FileNameMatcherTest)')","[102322, 105645]"
"('URIish.java', 'org.eclipse.jgit.transport.URIish', '<init>', '^(file):([\\\\/](?![\\\\/])((?:[A-Za-z]:)?[\\\\/]?(?:(?:[^\\\\/]+[\\\\/]+)*[^\\\\/]+[\\\\/]*)))$', 'https://l usr\\example.com@1.2.3.4//')","[50824, 51008]"
"('FastIgnoreRule.java', 'org.eclipse.jgit.ignore.FastIgnoreRule', 'isMatch', 'a.*a.*a', 'aaa')",[162554]
"('Description.java', 'org.junit.runner.Description', 'methodAndClassNamePatternGroupOrDefault', '([\\s\\S]*)\\((.*)\\)', 'testInvalidTagNoObject5(org.eclipse.jgit.lib.ObjectCheckerTest)')","[122246, 124393]"
"('Description.java', 'org.junit.runner.Description', 'methodAndClassNamePatternGroupOrDefault', '([\\s\\S]*)\\((.*)\\)', 'testResetToNonexistingHEAD(org.eclipse.jgit.api.ResetCommandTest)')","[204583, 204932]"
"('URIish.java', 'org.eclipse.jgit.transport.URIish', '<init>', '^([\\\\/]?((?:[A-Za-z]:)?[\\\\/]?(?:(?:[^\\\\/]+[\\\\/]+)*[^\\\\/]+[\\\\/]*)))$', '/tmp/jgit_test_4928645748912589877_tmp/tmp_7570227516241513625/.git')","[230848, 230998]"
"('URIish.java', 'org.eclipse.jgit.transport.URIish', '<init>', '^([a-z][a-z0-9+-]+)://(?:(?:([^/:@]+)(?::([^\\\\/]+))?@)?((?:[^\\\\/:]+)|(?:\\[[0-9a-f:]+\\]))(?::(\\d+))?((?:/~(?:[^\\\\/]+))?[\\\\/]))?(.+)?$', 'ssh://me:wtf@example.com:1234/D:\\x')",[7664]
"('Description.java', 'org.junit.runner.Description', 'methodAndClassNamePatternGroupOrDefault', '([\\s\\S]*)\\((.*)\\)', 'testSimpleRules[OldRule? false](org.eclipse.jgit.ignore.FastIgnoreRuleTest)')","[163904, 164661]"
"('Description.java', 'org.junit.runner.Description', 'methodAndClassNamePatternGroupOrDefault', '([\\s\\S]*)\\((.*)\\)', 'testExactRename_ManyRenames(org.eclipse.jgit.diff.RenameDetectorTest)')","[93048, 93595]"
"('URIish.java', 'org.eclipse.jgit.transport.URIish', '<init>', '^(file):([\\\\/](?![\\\\/])((?:[A-Za-z]:)?[\\\\/]?(?:(?:[^\\\\/]+[\\\\/]+)*[^\\\\/]+[\\\\/]*)))$', 'ssh+git://l usr\\example.com@example.com:80//abc')",[30814]
"('Description.java', 'org.junit.runner.Description', 'methodAndClassNamePatternGroupOrDefault', '([\\s\\S]*)\\((.*)\\)', 'testWritePack2SizeDeltasVsNoDeltas(org.eclipse.jgit.internal.storage.file.PackWriterTest)')","[251596, 252058]"
"('URIish.java', 'org.eclipse.jgit.transport.URIish', '<init>', '^(file):([\\\\/](?![\\\\/])((?:[A-Za-z]:)?[\\\\/]?(?:(?:[^\\\\/]+[\\\\/]+)*[^\\\\/]+[\\\\/]*)))$', 'https://lusr\\example@1.2.3.4:80//')",[38864]
"('Description.java', 'org.junit.runner.Description', 'methodAndClassNamePatternGroupOrDefault', '([\\s\\S]*)\\((.*)\\)', 'testRemoveOnlyURI(org.eclipse.jgit.transport.RemoteConfigTest)')","[2255, 3619]"
"('URIish.java', 'org.eclipse.jgit.transport.URIish', '<init>', '^(file):([\\\\/](?![\\\\/])((?:[A-Za-z]:)?[\\\\/]?(?:(?:[^\\\\/]+[\\\\/]+)*[^\\\\/]+[\\\\/]*)))$', 'ssh+git://lusr\\example:wtf@[::1]:80//')",[18223]
"('URIish.java', 'org.eclipse.jgit.transport.URIish', '<init>', '^([a-z][a-z0-9+-]+)://(?:(?:([^/:@]+)(?::([^\\\\/]+))?@)?((?:[^\\\\/:]+)|(?:\\[[0-9a-f:]+\\]))(?::(\\d+))?((?:/~(?:[^\\\\/]+))?[\\\\/]))?(.+)?$', 'https://lusr\\example@1.2.3.4//abc')","[51997, 52181]"
"('URIish.java', 'org.eclipse.jgit.transport.URIish', '<init>', '^([a-z][a-z0-9+-]+)://(?:(?:([^/:@]+)(?::([^\\\\/]+))?@)?((?:[^\\\\/:]+)|(?:\\[[0-9a-f:]+\\]))(?::(\\d+))?((?:/~(?:[^\\\\/]+))?[\\\\/]))?(.+)?$', 'ssh+git://me@example.com:1234/D:\\x')",[29641]
"('Description.java', 'org.junit.runner.Description', 'methodAndClassNamePatternGroupOrDefault', '([\\s\\S]*)\\((.*)\\)', 'testConflictFreeWithSingleFile(org.eclipse.jgit.api.RebaseCommandTest)')","[218698, 220236]"
"('Description.java', 'org.junit.runner.Description', 'methodAndClassNamePatternGroupOrDefault', '([\\s\\S]*)\\((.*)\\)', 'testSpaceGroupCase1[OldRule? true](org.eclipse.jgit.ignore.IgnoreRuleSpecialCasesTest)')","[150582, 157666]"
"('FastIgnoreRule.java', 'org.eclipse.jgit.ignore.FastIgnoreRule', 'isMatch', '[:]\\]', ':')",[160108]
"('Description.java', 'org.junit.runner.Description', 'methodAndClassNamePatternGroupOrDefault', '([\\s\\S]*)\\((.*)\\)', 'test000_openrepo_default_gitDirSet(org.eclipse.jgit.internal.storage.file.T0003_BasicTest)')","[248957, 249483]"
"('Description.java', 'org.junit.runner.Description', 'methodAndClassNamePatternGroupOrDefault', '([\\s\\S]*)\\((.*)\\)', 'testThreeEntries_BackwardsTwo(org.eclipse.jgit.treewalk.CanonicalTreeParserTest)')","[135943, 136262]"
"('URIish.java', 'org.eclipse.jgit.transport.URIish', '<init>', '^([a-z][a-z0-9+-]+)://(?:(?:([^/:@]+)(?::([^\\\\/]+))?@)?((?:[^\\\\/:]+)|(?:\\[[0-9a-f:]+\\]))(?::(\\d+))?((?:/~(?:[^\\\\/]+))?[\\\\/]))?(.+)?$', 'http://lusr\\example@[::1]:80//')",[35943]
"('Description.java', 'org.junit.runner.Description', 'methodAndClassNamePatternGroupOrDefault', '([\\s\\S]*)\\((.*)\\)', 'testRemoveDeletesTreeFanout2_38(org.eclipse.jgit.notes.NoteMapTest)')","[199093, 199350]"
"('Description.java', 'org.junit.runner.Description', 'methodAndClassNamePatternGroupOrDefault', '([\\s\\S]*)\\((.*)\\)', 'testNoFastForwardNoCommit(org.eclipse.jgit.api.MergeCommandTest)')","[213513, 214418]"
"('URIish.java', 'org.eclipse.jgit.transport.URIish', '<init>', '^([\\\\/]?((?:[A-Za-z]:)?[\\\\/]?(?:(?:[^\\\\/]+[\\\\/]+)*[^\\\\/]+[\\\\/]*)))$', 'D:\\m y')","[68274, 68389]"
"('URIish.java', 'org.eclipse.jgit.transport.URIish', '<init>', '^(file):([\\\\/](?![\\\\/])((?:[A-Za-z]:)?[\\\\/]?(?:(?:[^\\\\/]+[\\\\/]+)*[^\\\\/]+[\\\\/]*)))$', 'file:///tmp/jgit_test_3387739597023240848_tmp/tmp_5822056172154043562/.git/')",[216042]
"('Description.java', 'org.junit.runner.Description', 'methodAndClassNamePatternGroupOrDefault', '([\\s\\S]*)\\((.*)\\)', 'testStageState_mergeAndReset_bug(org.eclipse.jgit.lib.IndexDiffTest)')","[110364, 110705]"
"('URIish.java', 'org.eclipse.jgit.transport.URIish', '<init>', '^(file):([\\\\/](?![\\\\/])((?:[A-Za-z]:)?[\\\\/]?(?:(?:[^\\\\/]+[\\\\/]+)*[^\\\\/]+[\\\\/]*)))$', 'ssh+git://l usr\\example.com@example.com/D:/x')","[43924, 44108]"
"('FastIgnoreRule.java', 'org.eclipse.jgit.ignore.FastIgnoreRule', 'isMatch', '[\\p{Ll}]', 'h')",[160784]
"('Description.java', 'org.junit.runner.Description', 'methodAndClassNamePatternGroupOrDefault', '([\\s\\S]*)\\((.*)\\)', 'testPackCommitsAndLooseOneWithPruneNowNoReflog(org.eclipse.jgit.internal.storage.file.GcReflogTest)')","[256554, 256641]"
"('Description.java', 'org.junit.runner.Description', 'methodAndClassNamePatternGroupOrDefault', '([\\s\\S]*)\\((.*)\\)', 'testPunctGroupCase0[OldRule? false](org.eclipse.jgit.ignore.IgnoreRuleSpecialCasesTest)')","[147686, 154791]"
"('URIish.java', 'org.eclipse.jgit.transport.URIish', '<init>', '^(file):([\\\\/](?![\\\\/])((?:[A-Za-z]:)?[\\\\/]?(?:(?:[^\\\\/]+[\\\\/]+)*[^\\\\/]+[\\\\/]*)))$', 'ssh://l usr\\example.com@example.com:1234//abc')",[27255]
"('Description.java', 'org.junit.runner.Description', 'methodAndClassNamePatternGroupOrDefault', '([\\s\\S]*)\\((.*)\\)', 'testUnsupportedGroupCase0[OldRule? true](org.eclipse.jgit.ignore.IgnoreRuleSpecialCasesTest)')","[151157, 158241]"
"('URIish.java', 'org.eclipse.jgit.transport.URIish', '<init>', '^(file):([\\\\/](?![\\\\/])((?:[A-Za-z]:)?[\\\\/]?(?:(?:[^\\\\/]+[\\\\/]+)*[^\\\\/]+[\\\\/]*)))$', 'http://me@example.com//')","[46040, 46224]"
"('Description.java', 'org.junit.runner.Description', 'methodAndClassNamePatternGroupOrDefault', '([\\s\\S]*)\\((.*)\\)', 'testSpecialGroupCase2[OldRule? false](org.eclipse.jgit.ignore.IgnoreRuleSpecialCasesTest)')","[145754, 152859]"
"('Description.java', 'org.junit.runner.Description', 'methodAndClassNamePatternGroupOrDefault', '([\\s\\S]*)\\((.*)\\)', 'testMergeFirstStopOnLastConflictAndSkip(org.eclipse.jgit.api.RebaseCommandTest)')","[218089, 219598]"
"('Description.java', 'org.junit.runner.Description', 'methodAndClassNamePatternGroupOrDefault', '([\\s\\S]*)\\((.*)\\)', 'testAddIgnoredFile(org.eclipse.jgit.api.AddCommandTest)')","[235032, 235468]"
"('URIish.java', 'org.eclipse.jgit.transport.URIish', '<init>', '^(file):([\\\\/](?![\\\\/])((?:[A-Za-z]:)?[\\\\/]?(?:(?:[^\\\\/]+[\\\\/]+)*[^\\\\/]+[\\\\/]*)))$', 'file:/tmp/jgit_test_3047862731010516352_tmp/tmp_4732003647806853687/.git/')","[196816, 197768]"
"('Description.java', 'org.junit.runner.Description', 'methodAndClassNamePatternGroupOrDefault', '([\\s\\S]*)\\((.*)\\)', 'testBlankGroupCase1[OldRule? true](org.eclipse.jgit.ignore.IgnoreRuleSpecialCasesTest)')","[151916, 159000]"
"('URIish.java', 'org.eclipse.jgit.transport.URIish', '<init>', '^([a-z][a-z0-9+-]+)://(?:(?:([^/:@]+)(?::([^\\\\/]+))?@)?((?:[^\\\\/:]+)|(?:\\[[0-9a-f:]+\\]))(?::(\\d+))?((?:/~(?:[^\\\\/]+))?[\\\\/]))?(.+)?$', 'https://l usr\\example.com@1.2.3.4:1234//abc')",[37645]
"('Description.java', 'org.junit.runner.Description', 'methodAndClassNamePatternGroupOrDefault', '([\\s\\S]*)\\((.*)\\)', 'testWhole_SmallObject(org.eclipse.jgit.internal.storage.file.PackFileTest)')","[248789, 248877]"
"('URIish.java', 'org.eclipse.jgit.transport.URIish', '<init>', '^(file):([\\\\/](?![\\\\/])((?:[A-Za-z]:)?[\\\\/]?(?:(?:[^\\\\/]+[\\\\/]+)*[^\\\\/]+[\\\\/]*)))$', 'ssh://me@1.2.3.4/D:\\x')","[39922, 40106]"
"('Description.java', 'org.junit.runner.Description', 'methodAndClassNamePatternGroupOrDefault', '([\\s\\S]*)\\((.*)\\)', 'testXDigitGroupCase1[OldRule? true](org.eclipse.jgit.ignore.IgnoreRuleSpecialCasesTest)')","[152100, 159184]"
"('URIish.java', 'org.eclipse.jgit.transport.URIish', '<init>', '^(file):([\\\\/](?![\\\\/])((?:[A-Za-z]:)?[\\\\/]?(?:(?:[^\\\\/]+[\\\\/]+)*[^\\\\/]+[\\\\/]*)))$', 'file:///tmp/jgit_test_3047862731010516352_tmp/tmp_4247968197460650075/.git/')",[197687]
"('Description.java', 'org.junit.runner.Description', 'methodAndClassNamePatternGroupOrDefault', '([\\s\\S]*)\\((.*)\\)', 'testUpperGroupCase3[OldRule? true](org.eclipse.jgit.ignore.IgnoreRuleSpecialCasesTest)')","[151824, 158908]"
"('Description.java', 'org.junit.runner.Description', 'methodAndClassNamePatternGroupOrDefault', '([\\s\\S]*)\\((.*)\\)', 'testPullMerge(org.eclipse.jgit.api.PullCommandTest)')","[220609, 220947]"
"('URIish.java', 'org.eclipse.jgit.transport.URIish', '<init>', '^(file):([\\\\/](?![\\\\/])((?:[A-Za-z]:)?[\\\\/]?(?:(?:[^\\\\/]+[\\\\/]+)*[^\\\\/]+[\\\\/]*)))$', 'file:///tmp/jgit_test_597571121998277222_tmp/tmp_8440426839489351226/.git/')",[132773]
"('Description.java', 'org.junit.runner.Description', 'methodAndClassNamePatternGroupOrDefault', '([\\s\\S]*)\\((.*)\\)', 'org.eclipse.jgit.api.MergeCommandTest')","[213471, 226508]"
"('Description.java', 'org.junit.runner.Description', 'methodAndClassNamePatternGroupOrDefault', '([\\s\\S]*)\\((.*)\\)', 'testPunctGroupCase2[OldRule? true](org.eclipse.jgit.ignore.IgnoreRuleSpecialCasesTest)')","[151295, 158379]"
"('URIish.java', 'org.eclipse.jgit.transport.URIish', '<init>', '^(file):([\\\\/](?![\\\\/])((?:[A-Za-z]:)?[\\\\/]?(?:(?:[^\\\\/]+[\\\\/]+)*[^\\\\/]+[\\\\/]*)))$', '/a/b/c/')",[67453]
