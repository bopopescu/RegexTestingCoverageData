"('Description.java', 'org.junit.runner.Description', 'methodAndClassNamePatternGroupOrDefault', '([\\s\\S]*)\\((.*)\\)', 'shouldAcceptMaximalCargoSize(directdronedelivery.warehouse.businessrules.CargoSpecyficationTest)')","[698, 1731]"
"('Description.java', 'org.junit.runner.Description', 'methodAndClassNamePatternGroupOrDefault', '([\\s\\S]*)\\((.*)\\)', 'shouldAcceptMaximalWindStrength(directdronedelivery.warehouse.businessrules.WeatherSpecyficationTest)')","[927, 1951]"
"('Description.java', 'org.junit.runner.Description', 'methodAndClassNamePatternGroupOrDefault', '([\\s\\S]*)\\((.*)\\)', 'directdronedelivery.warehouse.businessrules.CargoSpecyficationTest')","[551, 3672]"
"('Description.java', 'org.junit.runner.Description', 'methodAndClassNamePatternGroupOrDefault', '([\\s\\S]*)\\((.*)\\)', 'shouldDecideToStartDronsWhenDeliveryTimeIsChangedToAcceptable(directdronedelivery.warehouse.process.VesselChooseProcessExampleScenariosTest)')","[242, 1313]"
"('AcceptableDeliveryTimeBuilder.java', 'directdronedelivery.cargo.AcceptableDeliveryTimeBuilder', 'addInterval', '([0-9]{1,2}):([0-9]{2}) *- *([0-9]{1,2}):([0-9]{2})', '17:00 - 21:00')","[2476, 2630, 2680]"
"('Description.java', 'org.junit.runner.Description', 'methodAndClassNamePatternGroupOrDefault', '([\\s\\S]*)\\((.*)\\)', 'shouldAllowTimeInInterval(directdronedelivery.cargo.AcceptableDeliveryTimeTest)')","[120, 1225]"
"('Description.java', 'org.junit.runner.Description', 'methodAndClassNamePatternGroupOrDefault', '([\\s\\S]*)\\((.*)\\)', 'shouldCloseTaskAttachCargoToDroneAndEmitDroneLoadEventAfterTaskConfirmation(directdronedelivery.warehouse.process.CargoLoadProcessServiceTest)')","[511, 1555]"
"('Description.java', 'org.junit.runner.Description', 'methodAndClassNamePatternGroupOrDefault', '([\\s\\S]*)\\((.*)\\)', 'shouldNotAcceptDangerousGoods(directdronedelivery.warehouse.businessrules.CargoSpecyficationTest)')","[572, 1599]"
"('Description.java', 'org.junit.runner.Description', 'methodAndClassNamePatternGroupOrDefault', '([\\s\\S]*)\\((.*)\\)', 'shouldNotAcceptCargoWeighingOver5Kilos(directdronedelivery.warehouse.businessrules.CargoSpecyficationTest)')","[593, 1621]"
"('Description.java', 'org.junit.runner.Description', 'methodAndClassNamePatternGroupOrDefault', '([\\s\\S]*)\\((.*)\\)', 'shouldPreferBigBox(directdronedelivery.warehouse.process.BoxSpecificationTest)')","[387, 1445]"
"('Description.java', 'org.junit.runner.Description', 'methodAndClassNamePatternGroupOrDefault', '([\\s\\S]*)\\((.*)\\)', 'shouldAcceptCargoSizeAfterRotationWH(directdronedelivery.warehouse.businessrules.CargoSpecyficationTest)')","[740, 1775]"
"('Description.java', 'org.junit.runner.Description', 'methodAndClassNamePatternGroupOrDefault', '([\\s\\S]*)\\((.*)\\)', 'shouldAcceptCargoSizeAfterRotationLH(directdronedelivery.warehouse.businessrules.CargoSpecyficationTest)')","[719, 1753]"
"('Description.java', 'org.junit.runner.Description', 'methodAndClassNamePatternGroupOrDefault', '([\\s\\S]*)\\((.*)\\)', 'shouldNotAcceptWeatherWithHighHumidity(directdronedelivery.warehouse.businessrules.WeatherSpecyficationTest)')","[990, 2017]"
"('Description.java', 'org.junit.runner.Description', 'methodAndClassNamePatternGroupOrDefault', '([\\s\\S]*)\\((.*)\\)', 'shouldAcceptCargoWeighingExactly5Kilos(directdronedelivery.warehouse.businessrules.CargoSpecyficationTest)')","[635, 1665]"
"('Description.java', 'org.junit.runner.Description', 'methodAndClassNamePatternGroupOrDefault', '([\\s\\S]*)\\((.*)\\)', 'directdronedelivery.warehouse.process.CargoLoadProcessServiceTest')","[469, 2891]"
"('Description.java', 'org.junit.runner.Description', 'methodAndClassNamePatternGroupOrDefault', '([\\s\\S]*)\\((.*)\\)', 'shouldCreateCargoLoadTaskForEmployeeAndDecrementBoxStocks(directdronedelivery.warehouse.process.CargoLoadProcessServiceTest)')","[490, 1533]"
"('Description.java', 'org.junit.runner.Description', 'methodAndClassNamePatternGroupOrDefault', '([\\s\\S]*)\\((.*)\\)', 'shouldNotAcceptCargoSizeEvenWhenItMatchesAfterRotationLHWhenFixedOrientationIsChecked(directdronedelivery.warehouse.businessrules.CargoSpecyficationTest)')","[782, 1819]"
"('Description.java', 'org.junit.runner.Description', 'methodAndClassNamePatternGroupOrDefault', '([\\s\\S]*)\\((.*)\\)', 'directdronedelivery.warehouse.process.DroneStartProcessServiceTest')","[139, 2426]"
"('Description.java', 'org.junit.runner.Description', 'methodAndClassNamePatternGroupOrDefault', '([\\s\\S]*)\\((.*)\\)', 'shouldPreferBigFragileBox(directdronedelivery.warehouse.process.BoxSpecificationTest)')","[450, 1511]"
"('Description.java', 'org.junit.runner.Description', 'methodAndClassNamePatternGroupOrDefault', '([\\s\\S]*)\\((.*)\\)', 'shouldNotAcceptTemperatureOverUpperBoundry(directdronedelivery.warehouse.businessrules.WeatherSpecyficationTest)')","[969, 1995]"
"('Description.java', 'org.junit.runner.Description', 'methodAndClassNamePatternGroupOrDefault', '([\\s\\S]*)\\((.*)\\)', 'shouldAcceptWeatherWithMaximalHumidity(directdronedelivery.warehouse.businessrules.WeatherSpecyficationTest)')","[1032, 2061]"
"('AcceptableDeliveryTimeBuilder.java', 'directdronedelivery.cargo.AcceptableDeliveryTimeBuilder', 'addInterval', '([0-9]{1,2}):([0-9]{2}) *- *([0-9]{1,2}):([0-9]{2})', '16:30-24:00')",[2267]
"('Description.java', 'org.junit.runner.Description', 'methodAndClassNamePatternGroupOrDefault', '([\\s\\S]*)\\((.*)\\)', 'directdronedelivery.cargo.AcceptableDeliveryTimeTest')","[36, 2318]"
"('Description.java', 'org.junit.runner.Description', 'methodAndClassNamePatternGroupOrDefault', '([\\s\\S]*)\\((.*)\\)', 'shouldNotAcceptTemperatureUnderLowerBoundry(directdronedelivery.warehouse.businessrules.WeatherSpecyficationTest)')","[885, 1907]"
"('Description.java', 'org.junit.runner.Description', 'methodAndClassNamePatternGroupOrDefault', '([\\s\\S]*)\\((.*)\\)', 'shouldAllowTimeInIntervalTillMidnight(directdronedelivery.cargo.AcceptableDeliveryTimeTest)')","[99, 1203]"
"('Description.java', 'org.junit.runner.Description', 'methodAndClassNamePatternGroupOrDefault', '([\\s\\S]*)\\((.*)\\)', 'shouldPreferSmallFragileBox(directdronedelivery.warehouse.process.BoxSpecificationTest)')","[408, 1467]"
"('Description.java', 'org.junit.runner.Description', 'methodAndClassNamePatternGroupOrDefault', '([\\s\\S]*)\\((.*)\\)', 'shouldAcceptCargoWeighingUnder5Kilos(directdronedelivery.warehouse.businessrules.CargoSpecyficationTest)')","[677, 1709]"
"('Description.java', 'org.junit.runner.Description', 'methodAndClassNamePatternGroupOrDefault', '([\\s\\S]*)\\((.*)\\)', 'shouldAcceptWeatherWithLowHumidity(directdronedelivery.warehouse.businessrules.WeatherSpecyficationTest)')","[948, 1973]"
"('AcceptableDeliveryTimeBuilder.java', 'directdronedelivery.cargo.AcceptableDeliveryTimeBuilder', 'addInterval', '([0-9]{1,2}):([0-9]{2}) *- *([0-9]{1,2}):([0-9]{2})', '22:30-24:00')",[2195]
"('Description.java', 'org.junit.runner.Description', 'methodAndClassNamePatternGroupOrDefault', '([\\s\\S]*)\\((.*)\\)', 'shouldDecideToStartDronWhenCargoIsDeliverableDronesAreAvaliableAndWeatherIsOK(directdronedelivery.warehouse.process.VesselChooseProcessExampleScenariosTest)')","[347, 1423]"
"('Description.java', 'org.junit.runner.Description', 'methodAndClassNamePatternGroupOrDefault', '([\\s\\S]*)\\((.*)\\)', 'shouldAcceptWeatherWihtNoLightningsAndPrecipitation(directdronedelivery.warehouse.businessrules.WeatherSpecyficationTest)')","[1053, 2083]"
"('Description.java', 'org.junit.runner.Description', 'methodAndClassNamePatternGroupOrDefault', '([\\s\\S]*)\\((.*)\\)', 'shouldDisallowTimeOutsideInterval(directdronedelivery.cargo.AcceptableDeliveryTimeTest)')","[78, 1181]"
"('Description.java', 'org.junit.runner.Description', 'methodAndClassNamePatternGroupOrDefault', '([\\s\\S]*)\\((.*)\\)', 'directdronedelivery.warehouse.businessrules.WeatherSpecyficationTest')","[843, 3695]"
"('Description.java', 'org.junit.runner.Description', 'methodAndClassNamePatternGroupOrDefault', '([\\s\\S]*)\\((.*)\\)', 'shouldAcceptWeakWind(directdronedelivery.warehouse.businessrules.WeatherSpecyficationTest)')","[1011, 2039]"
"('Description.java', 'org.junit.runner.Description', 'methodAndClassNamePatternGroupOrDefault', '([\\s\\S]*)\\((.*)\\)', 'shouldIgnoreCargoAlreadyDeliveredWithTruck(directdronedelivery.warehouse.process.VesselChooseProcessExampleScenariosTest)')","[263, 1335]"
"('Description.java', 'org.junit.runner.Description', 'methodAndClassNamePatternGroupOrDefault', '([\\s\\S]*)\\((.*)\\)', 'shouldAcceptTemperatureOnLowerBoundry(directdronedelivery.warehouse.businessrules.WeatherSpecyficationTest)')","[1074, 2105]"
"('Description.java', 'org.junit.runner.Description', 'methodAndClassNamePatternGroupOrDefault', '([\\s\\S]*)\\((.*)\\)', 'vesselStartShouldFailCauseOfUpload(directdronedelivery.warehouse.process.DroneStartProcessServiceTest)')","[202, 1291]"
"('Description.java', 'org.junit.runner.Description', 'methodAndClassNamePatternGroupOrDefault', '([\\s\\S]*)\\((.*)\\)', 'shouldDecideToStartDronWhenOrderInformationsAreUpdatedAndNowCargoIsDeliverable(directdronedelivery.warehouse.process.VesselChooseProcessExampleScenariosTest)')","[284, 1357]"
"('Description.java', 'org.junit.runner.Description', 'methodAndClassNamePatternGroupOrDefault', '([\\s\\S]*)\\((.*)\\)', 'shouldPreferSmallBox(directdronedelivery.warehouse.process.BoxSpecificationTest)')","[429, 1489]"
"('Description.java', 'org.junit.runner.Description', 'methodAndClassNamePatternGroupOrDefault', '([\\s\\S]*)\\((.*)\\)', 'vesselStartShouldSucceed(directdronedelivery.warehouse.process.DroneStartProcessServiceTest)')","[160, 1247]"
"('Description.java', 'org.junit.runner.Description', 'methodAndClassNamePatternGroupOrDefault', '([\\s\\S]*)\\((.*)\\)', 'shouldNotAcceptPrecipitation(directdronedelivery.warehouse.businessrules.WeatherSpecyficationTest)')","[1137, 2171]"
"('Description.java', 'org.junit.runner.Description', 'methodAndClassNamePatternGroupOrDefault', '([\\s\\S]*)\\((.*)\\)', 'directdronedelivery.warehouse.process.BoxSpecificationTest')","[366, 2838]"
"('Description.java', 'org.junit.runner.Description', 'methodAndClassNamePatternGroupOrDefault', '([\\s\\S]*)\\((.*)\\)', 'shouldAcceptNonDangerousGoods(directdronedelivery.warehouse.businessrules.CargoSpecyficationTest)')","[824, 1863]"
"('AcceptableDeliveryTimeBuilder.java', 'directdronedelivery.cargo.AcceptableDeliveryTimeBuilder', 'addInterval', '([0-9]{1,2}):([0-9]{2}) *- *([0-9]{1,2}):([0-9]{2})', '16:30-22:30')","[2243, 2291]"
"('Description.java', 'org.junit.runner.Description', 'methodAndClassNamePatternGroupOrDefault', '([\\s\\S]*)\\((.*)\\)', 'shouldNotAcceptFragileCommodityInCargo(directdronedelivery.warehouse.businessrules.CargoSpecyficationTest)')","[803, 1841]"
"('Description.java', 'org.junit.runner.Description', 'methodAndClassNamePatternGroupOrDefault', '([\\s\\S]*)\\((.*)\\)', 'shouldNotAcceptCargoSizeEvenWhenItMatchesAfterRotationWHWhenFixedOrientationIsChecked(directdronedelivery.warehouse.businessrules.CargoSpecyficationTest)')","[761, 1797]"
"('Description.java', 'org.junit.runner.Description', 'methodAndClassNamePatternGroupOrDefault', '([\\s\\S]*)\\((.*)\\)', 'null')",[17]
"('Description.java', 'org.junit.runner.Description', 'methodAndClassNamePatternGroupOrDefault', '([\\s\\S]*)\\((.*)\\)', 'shouldDecideToStartDronsWhenWeatherChangesToAcceptable(directdronedelivery.warehouse.process.VesselChooseProcessExampleScenariosTest)')","[326, 1401]"
"('Description.java', 'org.junit.runner.Description', 'methodAndClassNamePatternGroupOrDefault', '([\\s\\S]*)\\((.*)\\)', 'shouldAcceptTemperatureOnUpperBoundry(directdronedelivery.warehouse.businessrules.WeatherSpecyficationTest)')","[1116, 2149]"
"('Description.java', 'org.junit.runner.Description', 'methodAndClassNamePatternGroupOrDefault', '([\\s\\S]*)\\((.*)\\)', 'shouldAllowTimeDuringNight(directdronedelivery.cargo.AcceptableDeliveryTimeTest)')","[57, 1159]"
"('Description.java', 'org.junit.runner.Description', 'methodAndClassNamePatternGroupOrDefault', '([\\s\\S]*)\\((.*)\\)', 'shouldNotAcceptStrongWind(directdronedelivery.warehouse.businessrules.WeatherSpecyficationTest)')","[1095, 2127]"
"('AcceptableDeliveryTimeBuilder.java', 'directdronedelivery.cargo.AcceptableDeliveryTimeBuilder', 'addInterval', '([0-9]{1,2}):([0-9]{2}) *- *([0-9]{1,2}):([0-9]{2})', '00:00-06:00')",[2219]
"('Description.java', 'org.junit.runner.Description', 'methodAndClassNamePatternGroupOrDefault', '([\\s\\S]*)\\((.*)\\)', 'shouldAcceptNonFragileCommodityInCargo(directdronedelivery.warehouse.businessrules.CargoSpecyficationTest)')","[614, 1643]"
"('Description.java', 'org.junit.runner.Description', 'methodAndClassNamePatternGroupOrDefault', '([\\s\\S]*)\\((.*)\\)', 'shouldAcceptTemperatureInAcceptableRange(directdronedelivery.warehouse.businessrules.WeatherSpecyficationTest)')","[906, 1929]"
"('Description.java', 'org.junit.runner.Description', 'methodAndClassNamePatternGroupOrDefault', '([\\s\\S]*)\\((.*)\\)', 'shouldAcceptWeatherWhenLightningsArePossible(directdronedelivery.warehouse.businessrules.WeatherSpecyficationTest)')","[864, 1885]"
"('Description.java', 'org.junit.runner.Description', 'methodAndClassNamePatternGroupOrDefault', '([\\s\\S]*)\\((.*)\\)', 'shouldNotAcceptToBigCargoSize(directdronedelivery.warehouse.businessrules.CargoSpecyficationTest)')","[656, 1687]"
"('Description.java', 'org.junit.runner.Description', 'methodAndClassNamePatternGroupOrDefault', '([\\s\\S]*)\\((.*)\\)', 'shouldRevertBoxStocksAndStartAbortProcedure(directdronedelivery.warehouse.process.CargoLoadProcessServiceTest)')","[532, 1577]"
"('Description.java', 'org.junit.runner.Description', 'methodAndClassNamePatternGroupOrDefault', '([\\s\\S]*)\\((.*)\\)', 'shouldDecideToStartDronWhenDroneIsBackToWarehouse(directdronedelivery.warehouse.process.VesselChooseProcessExampleScenariosTest)')","[305, 1379]"
"('AcceptableDeliveryTimeBuilder.java', 'directdronedelivery.cargo.AcceptableDeliveryTimeBuilder', 'addInterval', '([0-9]{1,2}):([0-9]{2}) *- *([0-9]{1,2}):([0-9]{2})', '00:00-24:00')","[2345, 2372, 2399, 2452, 2502, 2528, 2554, 2580, 2606, 2656, 2733, 2759, 2785, 2811, 2864, 2917, 2943, 2969, 2995, 3021, 3047, 3073, 3099, 3125, 3151, 3177, 3203, 3229, 3255, 3281, 3307, 3333, 3359, 3385, 3411, 3437, 3463, 3489, 3515, 3541, 3567, 3593, 3619, 3645]"
"('Description.java', 'org.junit.runner.Description', 'methodAndClassNamePatternGroupOrDefault', '([\\s\\S]*)\\((.*)\\)', 'vesselStartShouldFailCauseOfCheckStartList(directdronedelivery.warehouse.process.DroneStartProcessServiceTest)')","[181, 1269]"
"('Description.java', 'org.junit.runner.Description', 'methodAndClassNamePatternGroupOrDefault', '([\\s\\S]*)\\((.*)\\)', 'directdronedelivery.warehouse.process.VesselChooseProcessExampleScenariosTest')","[221, 2707]"
