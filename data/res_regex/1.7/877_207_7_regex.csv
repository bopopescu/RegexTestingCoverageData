"('Grok.java', 'oi.thekraken.grok.api.Grok', 'addPatternFromReader', '^([A-z0-9_]+)\\s+(.*)$', 'TTY (?:/dev/(pts|tty([pq])?)(\\w+)?/?(?:[0-9]+))')",[1071]
"('Grok.java', 'oi.thekraken.grok.api.Grok', 'addPatternFromReader', '^([A-z0-9_]+)\\s+(.*)$', ""# '60' is a leap second in most time standards and thus is valid."")",[1821]
"('Grok.java', 'oi.thekraken.grok.api.Grok', 'addPatternFromReader', '^([A-z0-9_]+)\\s+(.*)$', 'QUOTEDSTRING (?>(?<!\\\\)(?>""(?>\\\\.|[^\\\\""]+)+""|""""|(?>\'(?>\\\\.|[^\\\\\']+)+\')|\'\'|(?>`(?>\\\\.|[^\\\\`]+)+`)|``))')",[571]
"('Grok.java', 'oi.thekraken.grok.api.Grok', 'addPatternFromReader', '^([A-z0-9_]+)\\s+(.*)$', 'DATE_US %{MONTHNUM}[/-]%{MONTHDAY}[/-]%{YEAR}')",[1921]
"('Grok.java', 'oi.thekraken.grok.api.Grok', 'addPatternFromReader', '^([A-z0-9_]+)\\s+(.*)$', '# Syslog Dates: Month Day HH:MM:SS')",[2271]
"('Grok.java', 'oi.thekraken.grok.api.Grok', 'addPatternFromReader', '^([A-z0-9_]+)\\s+(.*)$', 'CISCOFW313001_313004_313008 : %{CISCO_ACTION:action} %{WORD:protocol} type=%{INT:icmp_type}, code=%{INT:icmp_code} from %{IP:src_ip} on interface %{DATA:interface}( to %{IP:dst_ip})?')",[3721]
"('Grok.java', 'oi.thekraken.grok.api.Grok', 'addPatternFromReader', '^([A-z0-9_]+)\\s+(.*)$', 'CISCOFW106015 : %{CISCO_ACTION:action} %{WORD:protocol} \\(%{DATA:policy_id}\\) from %{IP:src_ip}/%{INT:src_port} to %{IP:dst_ip}/%{INT:dst_port} flags %{DATA:tcp_flags}  on interface %{GREEDYDATA:interface}')",[3271]
"('Grok.java', 'oi.thekraken.grok.api.Grok', 'addPatternFromReader', '^([A-z0-9_]+)\\s+(.*)$', 'MAC (?:%{CISCOMAC:UNWANTED}|%{WINDOWSMAC:UNWANTED}|%{COMMONMAC:UNWANTED})')",[671]
"('Grok.java', 'oi.thekraken.grok.api.Grok', 'addPatternFromReader', '^([A-z0-9_]+)\\s+(.*)$', 'CISCOFW106014 : %{CISCO_ACTION:action} %{CISCO_DIRECTION:direction} %{WORD:protocol} src %{DATA:src_interface}:%{IP:src_ip}(\\(%{DATA:src_fwuser}\\))? dst %{DATA:dst_interface}:%{IP:dst_ip}(\\(%{DATA:dst_fwuser}\\))? \\(type %{INT:icmp_type}, code %{INT:icmp_code}\\)')",[3221]
"('Grok.java', 'oi.thekraken.grok.api.Grok', 'addPatternFromReader', '^([A-z0-9_]+)\\s+(.*)$', 'MONTHDAY (?:(?:0[1-9])|(?:[12][0-9])|(?:3[01])|[1-9])')",[1471]
"('Grok.java', 'oi.thekraken.grok.api.Grok', 'addPatternFromReader', '^([A-z0-9_]+)\\s+(.*)$', '# ASA-6-305012')",[4296]
"('Grok.java', 'oi.thekraken.grok.api.Grok', 'addPatternFromReader', '^([A-z0-9_]+)\\s+(.*)$', '#URIPARAM \\?(?:[A-Za-z0-9]+(?:=(?:[^&]*))?(?:&(?:[A-Za-z0-9]+(?:=(?:[^&]*))?)?)*)?')",[1246]
"('Grok.java', 'oi.thekraken.grok.api.Grok', 'addPatternFromReader', '^([A-z0-9_]+)\\s+(.*)$', 'DATESTAMP_RFC2822 %{DAY}, %{MONTHDAY} %{MONTH} %{YEAR} %{TIME} %{ISO8601_TIMEZONE}')",[2146]
"('Grok.java', 'oi.thekraken.grok.api.Grok', 'addPatternFromReader', '^([A-z0-9_]+)\\s+(.*)$', '# Log formats')",[2546]
"('Grok.java', 'oi.thekraken.grok.api.Grok', 'addPatternFromReader', '^([A-z0-9_]+)\\s+(.*)$', 'URIHOST %{IPORHOST}(?::%{POSINT:port})?')",[1146]
"('Grok.java', 'oi.thekraken.grok.api.Grok', 'addPatternFromReader', '^([A-z0-9_]+)\\s+(.*)$', 'CISCOFW110002 : %{CISCO_REASON:reason} for %{WORD:protocol} from %{DATA:src_interface}:%{IP:src_ip}/%{INT:src_port} to %{IP:dst_ip}/%{INT:dst_port}')",[3471]
"('Grok.java', 'oi.thekraken.grok.api.Grok', 'addPatternFromReader', '^([A-z0-9_]+)\\s+(.*)$', ""# I'm still on the fence about using grok to perform the time match,"")",[1696]
"('Grok.java', 'oi.thekraken.grok.api.Grok', 'addPatternFromReader', '^([A-z0-9_]+)\\s+(.*)$', 'CISCOFW713172 : Group = %{GREEDYDATA:group}, IP = %{IP:src_ip}, Automatic NAT Detection Status:\\s+Remote end\\s*%{DATA:is_remote_natted}\\s*behind a NAT device\\s+This\\s+end\\s*%{DATA:is_local_natted}\\s*behind a NAT device')",[4171]
"('Grok.java', 'oi.thekraken.grok.api.Grok', 'addPatternFromReader', '^([A-z0-9_]+)\\s+(.*)$', '# ASA-4-313005')",[3746]
"('PropertiesConfiguration.java', 'org.apache.commons.configuration.PropertiesConfiguration$PropertiesReader', 'doParseProperty', '(([\\S&&[^\\\\=:]]|\\\\.)*)(\\s*(\\s+|[=:])\\s*)(.*)', 'logFile=src/test/resources/LancopeParserTest.log')",[32]
"('Grok.java', 'oi.thekraken.grok.api.Grok', 'addPatternFromReader', '^([A-z0-9_]+)\\s+(.*)$', 'BASE10NUM (?<![0-9.+-])(?>[+-]?(?:(?:[0-9]+(?:\\.[0-9]+)?)|(?:\\.[0-9]+)))')",[246]
"('Grok.java', 'oi.thekraken.grok.api.Grok', 'addPatternFromReader', '^([A-z0-9_]+)\\s+(.*)$', 'CISCOFW710001_710002_710003_710005_710006 : %{WORD:protocol} (?:request|access) %{CISCO_ACTION:action} from %{IP:src_ip}/%{INT:src_port} to %{DATA:dst_interface}:%{IP:dst_ip}/%{INT:dst_port}')",[4121]
"('Grok.java', 'oi.thekraken.grok.api.Grok', 'addPatternFromReader', '^([A-z0-9_]+)\\s+(.*)$', 'CISCOFW305012 : %{CISCO_ACTION:action} %{CISCO_XLATE_TYPE:xlate_type} %{WORD:protocol} translation from %{DATA:src_interface}:%{IP:src_ip}(/%{INT:src_port})?(\\(%{DATA:src_fwuser}\\))? to %{DATA:src_xlated_interface}:%{IP:src_xlated_ip}/%{DATA:src_xlated_port} duration %{TIME:duration}')",[4321]
"('Grok.java', 'oi.thekraken.grok.api.Grok', 'addPatternFromReader', '^([A-z0-9_]+)\\s+(.*)$', 'DATESTAMP_RFC822 %{DAY} %{MONTH} %{MONTHDAY} %{YEAR} %{TIME} %{TZ}')",[2121]
"('Grok.java', 'oi.thekraken.grok.api.Grok', 'addPatternFromReader', '^([A-z0-9_]+)\\s+(.*)$', 'MINUTE (?:[0-5][0-9])')",[1796]
"('Grok.java', 'oi.thekraken.grok.api.Grok', 'addPatternFromReader', '^([A-z0-9_]+)\\s+(.*)$', 'INT (?:[+-]?(?:[0-9]+))')",[221]
"('Grok.java', 'oi.thekraken.grok.api.Grok', 'addPatternFromReader', '^([A-z0-9_]+)\\s+(.*)$', 'WORD \\b\\w+\\b')",[421]
"('Grok.java', 'oi.thekraken.grok.api.Grok', 'addPatternFromReader', '^([A-z0-9_]+)\\s+(.*)$', 'DATA .*?')",[496]
"('Grok.java', 'oi.thekraken.grok.api.Grok', 'addPatternFromReader', '^([A-z0-9_]+)\\s+(.*)$', 'CISCOFW419001 : %{CISCO_ACTION:action} %{WORD:protocol} packet from %{DATA:src_interface}:%{IP:src_ip}/%{INT:src_port} to %{DATA:dst_interface}:%{IP:dst_ip}/%{INT:dst_port}, reason: %{GREEDYDATA:reason}')",[3921]
"('Grok.java', 'oi.thekraken.grok.api.Grok', 'addPatternFromReader', '^([A-z0-9_]+)\\s+(.*)$', 'HOSTNAME \\b(?:[0-9A-Za-z][0-9A-Za-z-]{0,62})(?:\\.(?:[0-9A-Za-z][0-9A-Za-z-]{0,62}))*(\\.?|\\b)')",[846]
"('Grok.java', 'oi.thekraken.grok.api.Grok', 'addPatternFromReader', '^([A-z0-9_]+)\\s+(.*)$', 'CISCO_XLATE_TYPE static|dynamic')",[3071]
"('Grok.java', 'oi.thekraken.grok.api.Grok', 'addPatternFromReader', '^([A-z0-9_]+)\\s+(.*)$', 'SYSLOGBASE %{SYSLOGTIMESTAMP:timestamp} (?:%{SYSLOGFACILITY} )?%{SYSLOGHOST:logsource} %{SYSLOGPROG}:')",[2571]
"('Grok.java', 'oi.thekraken.grok.api.Grok', 'addPatternFromReader', '^([A-z0-9_]+)\\s+(.*)$', 'PATH (?:%{UNIXPATH}|%{WINPATH})')",[996]
"('Grok.java', 'oi.thekraken.grok.api.Grok', 'addPatternFromReader', '^([A-z0-9_]+)\\s+(.*)$', 'CISCOFW609001 : %{CISCO_ACTION:action} %{WORD:protocol} %{DATA:src_interface}:%{IP:src_ip}(/%{INT:src_port})?(\\(%{DATA:src_fwuser}\\))?')",[4371]
"('Grok.java', 'oi.thekraken.grok.api.Grok', 'addPatternFromReader', '^([A-z0-9_]+)\\s+(.*)$', '# ASA-6-602303, ASA-6-602304')",[4046]
"('Grok.java', 'oi.thekraken.grok.api.Grok', 'addPatternFromReader', '^([A-z0-9_]+)\\s+(.*)$', 'POSINT \\b(?:[1-9][0-9]*)\\b')",[371]
"('Grok.java', 'oi.thekraken.grok.api.Grok', 'addPatternFromReader', '^([A-z0-9_]+)\\s+(.*)$', ""# since it's probably slower."")",[1721]
"('Grok.java', 'oi.thekraken.grok.api.Grok', 'addPatternFromReader', '^([A-z0-9_]+)\\s+(.*)$', '# ASA-6-305011')",[3646]
"('Grok.java', 'oi.thekraken.grok.api.Grok', 'addPatternFromReader', '^([A-z0-9_]+)\\s+(.*)$', 'CISCO_TAGGED_SYSLOG ^<%{POSINT:syslog_pri}>%{CISCOTIMESTAMP:timestamp}( %{SYSLOGHOST:sysloghost})? ?:? %%{CISCOTAG:ciscotag}:')",[2846]
"('Grok.java', 'oi.thekraken.grok.api.Grok', 'addPatternFromReader', '^([A-z0-9_]+)\\s+(.*)$', 'CISCOFW609002 : %{CISCO_ACTION:action} %{WORD:protocol} %{DATA:src_interface}:%{IP:src_ip}(/%{INT:src_port})?(\\(%{DATA:src_fwuser}\\))? duration %{TIME:duration}')",[4421]
"('Grok.java', 'oi.thekraken.grok.api.Grok', 'addPatternFromReader', '^([A-z0-9_]+)\\s+(.*)$', 'CISCO_REASON Duplicate TCP SYN|Failed to locate egress interface|Invalid transport field|No matching connection|DNS Response|DNS Query|(?:%{WORD}\\s*)*')",[2996]
"('Grok.java', 'oi.thekraken.grok.api.Grok', 'addPatternFromReader', '^([A-z0-9_]+)\\s+(.*)$', 'BASE16NUM (?<![0-9A-Fa-f])(?:[+-]?(?:0x)?(?:[0-9A-Fa-f]+))')",[296]
"('Grok.java', 'oi.thekraken.grok.api.Grok', 'addPatternFromReader', '^([A-z0-9_]+)\\s+(.*)$', 'USER %{USERNAME:UNWANTED}')",[196]
"('Grok.java', 'oi.thekraken.grok.api.Grok', 'addPatternFromReader', '^([A-z0-9_]+)\\s+(.*)$', 'CISCO_DIRECTION Inbound|inbound|Outbound|outbound')",[3021]
"('PropertiesConfiguration.java', 'org.apache.commons.configuration.PropertiesConfiguration$PropertiesReader', 'doParseProperty', '(([\\S&&[^\\\\=:]]|\\\\.)*)(\\s*(\\s+|[=:])\\s*)(.*)', 'logFile=src/test/resources/BroParserTest.log')",[4624]
"('Grok.java', 'oi.thekraken.grok.api.Grok', 'addPatternFromReader', '^([A-z0-9_]+)\\s+(.*)$', '# ASA-3-106014')",[3196]
"('Grok.java', 'oi.thekraken.grok.api.Grok', 'addPatternFromReader', '^([A-z0-9_]+)\\s+(.*)$', '# uripath comes loosely from RFC1738, but mostly from what Firefox')",[1171]
"('Grok.java', 'oi.thekraken.grok.api.Grok', 'addPatternFromReader', '^([A-z0-9_]+)\\s+(.*)$', 'CISCOFW302020_302021 : %{CISCO_ACTION:action}(?: %{CISCO_DIRECTION:direction})? %{WORD:protocol} connection for faddr %{IP:dst_ip}/%{INT:icmp_seq_num}(?:\\(%{DATA:fwuser}\\))? gaddr %{IP:src_xlated_ip}/%{INT:icmp_code_xlated} laddr %{IP:src_ip}/%{INT:icmp_code}( \\(%{DATA:user}\\))?')",[3621]
"('Grok.java', 'oi.thekraken.grok.api.Grok', 'addPatternFromReader', '^([A-z0-9_]+)\\s+(.*)$', 'CISCOFW106021 : %{CISCO_ACTION:action} %{WORD:protocol} reverse path check from %{IP:src_ip} to %{IP:dst_ip} on interface %{GREEDYDATA:interface}')",[3321]
"('Grok.java', 'oi.thekraken.grok.api.Grok', 'addPatternFromReader', '^([A-z0-9_]+)\\s+(.*)$', 'GREEDYDATA .*')","[521, 2221]"
"('Grok.java', 'oi.thekraken.grok.api.Grok', 'addPatternFromReader', '^([A-z0-9_]+)\\s+(.*)$', '# datestamp is YYYY/MM/DD-HH:MM:SS.UUUU (or something like it)')",[1896]
"('Grok.java', 'oi.thekraken.grok.api.Grok', 'addPatternFromReader', '^([A-z0-9_]+)\\s+(.*)$', 'WINDOWSMAC (?:(?:[A-Fa-f0-9]{2}-){5}[A-Fa-f0-9]{2})')",[721]
"('Grok.java', 'oi.thekraken.grok.api.Grok', 'addPatternFromReader', '^([A-z0-9_]+)\\s+(.*)$', 'CISCOFW500004 : %{CISCO_REASON:reason} for protocol=%{WORD:protocol}, from %{IP:src_ip}/%{INT:src_port} to %{IP:dst_ip}/%{INT:dst_port}')",[4021]
"('Grok.java', 'oi.thekraken.grok.api.Grok', 'addPatternFromReader', '^([A-z0-9_]+)\\s+(.*)$', '# ASA-6-106015')",[3246]
"('Grok.java', 'oi.thekraken.grok.api.Grok', 'addPatternFromReader', '^([A-z0-9_]+)\\s+(.*)$', 'CISCO_INTERVAL first hit|%{INT}-second interval')",[3046]
"('Grok.java', 'oi.thekraken.grok.api.Grok', 'addPatternFromReader', '^([A-z0-9_]+)\\s+(.*)$', 'CISCOFW106001 : %{CISCO_DIRECTION:direction} %{WORD:protocol} connection %{CISCO_ACTION:action} from %{IP:src_ip}/%{INT:src_port} to %{IP:dst_ip}/%{INT:dst_port} flags %{GREEDYDATA:tcp_flags} on interface %{GREEDYDATA:interface}')",[3121]
"('Grok.java', 'oi.thekraken.grok.api.Grok', 'addPatternFromReader', '^([A-z0-9_]+)\\s+(.*)$', 'URIPATHPARAM %{URIPATH}(?:%{URIPARAM})?')",[1296]
"('Grok.java', 'oi.thekraken.grok.api.Grok', 'addPatternFromReader', '^([A-z0-9_]+)\\s+(.*)$', '# ASA-7-609002')",[4396]
"('Grok.java', 'oi.thekraken.grok.api.Grok', 'addPatternFromReader', '^([A-z0-9_]+)\\s+(.*)$', 'CISCOFW106100 : access-list %{WORD:policy_id} %{CISCO_ACTION:action} %{WORD:protocol} %{DATA:src_interface}/%{IP:src_ip}\\(%{INT:src_port}\\)(\\(%{DATA:src_fwuser}\\))? -> %{DATA:dst_interface}/%{IP:dst_ip}\\(%{INT:dst_port}\\)(\\(%{DATA:src_fwuser}\\))? hit-cnt %{INT:hit_count} %{CISCO_INTERVAL:interval} \\[%{DATA:hashcode1}, %{DATA:hashcode2}\\]')",[3421]
"('PropertiesConfiguration.java', 'org.apache.commons.configuration.PropertiesConfiguration$PropertiesReader', 'doParseProperty', '(([\\S&&[^\\\\=:]]|\\\\.)*)(\\s*(\\s+|[=:])\\s*)(.*)', 'logFile=src/test/resources/FireEyeParserTest.log')",[4592]
"('Grok.java', 'oi.thekraken.grok.api.Grok', 'addPatternFromReader', '^([A-z0-9_]+)\\s+(.*)$', 'CISCOMAC (?:(?:[A-Fa-f0-9]{4}\\.){2}[A-Fa-f0-9]{4})')",[696]
"('Grok.java', 'oi.thekraken.grok.api.Grok', 'addPatternFromReader', '^([A-z0-9_]+)\\s+(.*)$', '')","[146, 346, 621, 946, 1346, 1496, 1571, 2246, 2446, 2521, 2596, 2646, 2721, 2796, 2921, 4246, 4271, 4446, 4471]"
"('Grok.java', 'oi.thekraken.grok.api.Grok', 'addPatternFromReader', '^([A-z0-9_]+)\\s+(.*)$', '# ASA-4-500004')",[3996]
"('Grok.java', 'oi.thekraken.grok.api.Grok', 'addPatternFromReader', '^([A-z0-9_]+)\\s+(.*)$', ""# doesn't turn into %XX"")",[1196]
"('Grok.java', 'oi.thekraken.grok.api.Grok', 'addPatternFromReader', '^([A-z0-9_]+)\\s+(.*)$', '# TIME %{POSINT<24}:%{POSINT<60}(?::%{POSINT<60}(?:\\.%{POSINT})?)?')",[1746]
"('Grok.java', 'oi.thekraken.grok.api.Grok', 'addPatternFromReader', '^([A-z0-9_]+)\\s+(.*)$', '# Years?')",[1596]
"('Grok.java', 'oi.thekraken.grok.api.Grok', 'addPatternFromReader', '^([A-z0-9_]+)\\s+(.*)$', '#== Cisco ASA ==')",[2821]
"('Grok.java', 'oi.thekraken.grok.api.Grok', 'addPatternFromReader', '^([A-z0-9_]+)\\s+(.*)$', 'SYSLOGPROG %{PROG:program}(?:\\[%{POSINT:pid}\\])?')",[2346]
"('Grok.java', 'oi.thekraken.grok.api.Grok', 'addPatternFromReader', '^([A-z0-9_]+)\\s+(.*)$', '# ASA-7-710001, ASA-7-710002, ASA-7-710003, ASA-7-710005, ASA-7-710006')",[4096]
"('Grok.java', 'oi.thekraken.grok.api.Grok', 'addPatternFromReader', '^([A-z0-9_]+)\\s+(.*)$', 'CISCOFW602303_602304 : %{WORD:protocol}: An %{CISCO_DIRECTION:direction} %{GREEDYDATA:tunnel_type} SA \\(SPI= %{DATA:spi}\\) between %{IP:src_ip} and %{IP:dst_ip} \\(user= %{DATA:user}\\) has been %{CISCO_ACTION:action}')",[4071]
"('Grok.java', 'oi.thekraken.grok.api.Grok', 'addPatternFromReader', '^([A-z0-9_]+)\\s+(.*)$', '# Common Particles')",[2946]
"('Grok.java', 'oi.thekraken.grok.api.Grok', 'addPatternFromReader', '^([A-z0-9_]+)\\s+(.*)$', 'CISCOTAG [A-Z0-9]+-%{INT}-(?:[A-Z0-9_]+)')",[2896]
"('Grok.java', 'oi.thekraken.grok.api.Grok', 'addPatternFromReader', '^([A-z0-9_]+)\\s+(.*)$', ""URIPARAM \\?[A-Za-z0-9$.+!*'|(){},~@#%&/=:;_?\\-\\[\\]]*"")",[1271]
"('Grok.java', 'oi.thekraken.grok.api.Grok', 'addPatternFromReader', '^([A-z0-9_]+)\\s+(.*)$', 'IPORHOST (?:%{HOSTNAME:UNWANTED}|%{IP:UNWANTED})')",[896]
"('Grok.java', 'oi.thekraken.grok.api.Grok', 'addPatternFromReader', '^([A-z0-9_]+)\\s+(.*)$', 'DAY (?:Mon(?:day)?|Tue(?:sday)?|Wed(?:nesday)?|Thu(?:rsday)?|Fri(?:day)?|Sat(?:urday)?|Sun(?:day)?)')",[1546]
"('Grok.java', 'oi.thekraken.grok.api.Grok', 'addPatternFromReader', '^([A-z0-9_]+)\\s+(.*)$', '# Forked from https://github.com/elasticsearch/logstash/tree/v1.4.0/patterns')",[121]
"('Grok.java', 'oi.thekraken.grok.api.Grok', 'addPatternFromReader', '^([A-z0-9_]+)\\s+(.*)$', '# ASA-1-106021')",[3296]
"('Grok.java', 'oi.thekraken.grok.api.Grok', 'addPatternFromReader', '^([A-z0-9_]+)\\s+(.*)$', 'DATESTAMP %{DATE}[- ]%{TIME}')",[2071]
"('Grok.java', 'oi.thekraken.grok.api.Grok', 'addPatternFromReader', '^([A-z0-9_]+)\\s+(.*)$', '# Time: HH:MM:SS')",[1646]
"('Grok.java', 'oi.thekraken.grok.api.Grok', 'addPatternFromReader', '^([A-z0-9_]+)\\s+(.*)$', 'UNIXPATH (?>/(?>[\\w_%!$@:.,~-]+|\\\\.)*)+')",[1021]
"('Grok.java', 'oi.thekraken.grok.api.Grok', 'addPatternFromReader', '^([A-z0-9_]+)\\s+(.*)$', 'CISCOFW305011 : %{CISCO_ACTION:action} %{CISCO_XLATE_TYPE:xlate_type} %{WORD:protocol} translation from %{DATA:src_interface}:%{IP:src_ip}(/%{INT:src_port})?(\\(%{DATA:src_fwuser}\\))? to %{DATA:src_xlated_interface}:%{IP:src_xlated_ip}/%{DATA:src_xlated_port}')",[3671]
"('Grok.java', 'oi.thekraken.grok.api.Grok', 'addPatternFromReader', '^([A-z0-9_]+)\\s+(.*)$', '#TIME \\d{2}:\\d{2}(?::\\d{2}(?:\\.\\d+)?)?')",[1671]
"('Grok.java', 'oi.thekraken.grok.api.Grok', 'addPatternFromReader', '^([A-z0-9_]+)\\s+(.*)$', 'URI %{URIPROTO}://(?:%{USER}(?::[^@]*)?@)?(?:%{URIHOST})?(?:%{URIPATHPARAM})?')",[1321]
"('PropertiesConfiguration.java', 'org.apache.commons.configuration.PropertiesConfiguration$PropertiesReader', 'doParseProperty', '(([\\S&&[^\\\\=:]]|\\\\.)*)(\\s*(\\s+|[=:])\\s*)(.*)', 'logFile=src/test/resources/IseParserTest.log')",[64]
"('Grok.java', 'oi.thekraken.grok.api.Grok', 'addPatternFromReader', '^([A-z0-9_]+)\\s+(.*)$', '# Days: Monday, Tue, Thu, etc...')",[1521]
"('Grok.java', 'oi.thekraken.grok.api.Grok', 'addPatternFromReader', '^([A-z0-9_]+)\\s+(.*)$', 'NUMBER (?:%{BASE10NUM:UNWANTED})')",[271]
"('Grok.java', 'oi.thekraken.grok.api.Grok', 'addPatternFromReader', '^([A-z0-9_]+)\\s+(.*)$', '# ASA-2-106001')",[3096]
"('Grok.java', 'oi.thekraken.grok.api.Grok', 'addPatternFromReader', '^([A-z0-9_]+)\\s+(.*)$', '#UNIXPATH (?<![\\w\\/])(?:/[^\\/\\s?*]*)+')",[1046]
"('PropertiesConfiguration.java', 'org.apache.commons.configuration.PropertiesConfiguration$PropertiesReader', 'doParseProperty', '(([\\S&&[^\\\\=:]]|\\\\.)*)(\\s*(\\s+|[=:])\\s*)(.*)', 'logFile=src/test/resources/SourceFireTest.log')",[4528]
"('Grok.java', 'oi.thekraken.grok.api.Grok', 'addPatternFromReader', '^([A-z0-9_]+)\\s+(.*)$', 'MONTHNUM2 (?:0[1-9]|1[0-2])')",[1446]
"('Grok.java', 'oi.thekraken.grok.api.Grok', 'addPatternFromReader', '^([A-z0-9_]+)\\s+(.*)$', '# ASA-7-609001')",[4346]
"('Grok.java', 'oi.thekraken.grok.api.Grok', 'addPatternFromReader', '^([A-z0-9_]+)\\s+(.*)$', '# Networking')",[646]
"('Grok.java', 'oi.thekraken.grok.api.Grok', 'addPatternFromReader', '^([A-z0-9_]+)\\s+(.*)$', 'CISCOFW106023 : %{CISCO_ACTION:action} %{WORD:protocol} src %{DATA:src_interface}:%{IP:src_ip}(/%{INT:src_port})?(\\(%{DATA:src_fwuser}\\))? dst %{DATA:dst_interface}:%{IP:dst_ip}(/%{INT:dst_port})?(\\(%{DATA:dst_fwuser}\\))?( \\(type %{INT:icmp_type}, code %{INT:icmp_code}\\))? by access-group %{DATA:policy_id} \\[%{DATA:hashcode1}, %{DATA:hashcode2}\\]')",[3371]
"('Grok.java', 'oi.thekraken.grok.api.Grok', 'addPatternFromReader', '^([A-z0-9_]+)\\s+(.*)$', 'MONTHNUM (?:0?[1-9]|1[0-2])')",[1421]
"('Grok.java', 'oi.thekraken.grok.api.Grok', 'addPatternFromReader', '^([A-z0-9_]+)\\s+(.*)$', '#== End Cisco ASA ==')",[4496]
"('Grok.java', 'oi.thekraken.grok.api.Grok', 'addPatternFromReader', '^([A-z0-9_]+)\\s+(.*)$', 'IP (?:%{IPV6:UNWANTED}|%{IPV4:UNWANTED})')",[821]
"('Grok.java', 'oi.thekraken.grok.api.Grok', 'addPatternFromReader', '^([A-z0-9_]+)\\s+(.*)$', '# ASA-6-713172')",[4146]
"('Grok.java', 'oi.thekraken.grok.api.Grok', 'addPatternFromReader', '^([A-z0-9_]+)\\s+(.*)$', '# paths')",[971]
"('Grok.java', 'oi.thekraken.grok.api.Grok', 'addPatternFromReader', '^([A-z0-9_]+)\\s+(.*)$', '# ASA-6-302013, ASA-6-302014, ASA-6-302015, ASA-6-302016')",[3546]
"('Grok.java', 'oi.thekraken.grok.api.Grok', 'addPatternFromReader', '^([A-z0-9_]+)\\s+(.*)$', 'NONNEGINT \\b(?:[0-9]+)\\b')",[396]
"('Grok.java', 'oi.thekraken.grok.api.Grok', 'addPatternFromReader', '^([A-z0-9_]+)\\s+(.*)$', 'IPV6 ((([0-9A-Fa-f]{1,4}:){7}([0-9A-Fa-f]{1,4}|:))|(([0-9A-Fa-f]{1,4}:){6}(:[0-9A-Fa-f]{1,4}|((25[0-5]|2[0-4]\\d|1\\d\\d|[1-9]?\\d)(\\.(25[0-5]|2[0-4]\\d|1\\d\\d|[1-9]?\\d)){3})|:))|(([0-9A-Fa-f]{1,4}:){5}(((:[0-9A-Fa-f]{1,4}){1,2})|:((25[0-5]|2[0-4]\\d|1\\d\\d|[1-9]?\\d)(\\.(25[0-5]|2[0-4]\\d|1\\d\\d|[1-9]?\\d)){3})|:))|(([0-9A-Fa-f]{1,4}:){4}(((:[0-9A-Fa-f]{1,4}){1,3})|((:[0-9A-Fa-f]{1,4})?:((25[0-5]|2[0-4]\\d|1\\d\\d|[1-9]?\\d)(\\.(25[0-5]|2[0-4]\\d|1\\d\\d|[1-9]?\\d)){3}))|:))|(([0-9A-Fa-f]{1,4}:){3}(((:[0-9A-Fa-f]{1,4}){1,4})|((:[0-9A-Fa-f]{1,4}){0,2}:((25[0-5]|2[0-4]\\d|1\\d\\d|[1-9]?\\d)(\\.(25[0-5]|2[0-4]\\d|1\\d\\d|[1-9]?\\d)){3}))|:))|(([0-9A-Fa-f]{1,4}:){2}(((:[0-9A-Fa-f]{1,4}){1,5})|((:[0-9A-Fa-f]{1,4}){0,3}:((25[0-5]|2[0-4]\\d|1\\d\\d|[1-9]?\\d)(\\.(25[0-5]|2[0-4]\\d|1\\d\\d|[1-9]?\\d)){3}))|:))|(([0-9A-Fa-f]{1,4}:){1}(((:[0-9A-Fa-f]{1,4}){1,6})|((:[0-9A-Fa-f]{1,4}){0,4}:((25[0-5]|2[0-4]\\d|1\\d\\d|[1-9]?\\d)(\\.(25[0-5]|2[0-4]\\d|1\\d\\d|[1-9]?\\d)){3}))|:))|(:(((:[0-9A-Fa-f]{1,4}){1,7})|((:[0-9A-Fa-f]{1,4}){0,5}:((25[0-5]|2[0-4]\\d|1\\d\\d|[1-9]?\\d)(\\.(25[0-5]|2[0-4]\\d|1\\d\\d|[1-9]?\\d)){3}))|:)))(%.+)?')",[771]
"('Grok.java', 'oi.thekraken.grok.api.Grok', 'addPatternFromReader', '^([A-z0-9_]+)\\s+(.*)$', '# ASA-4-106023')",[3346]
"('Grok.java', 'oi.thekraken.grok.api.Grok', 'addPatternFromReader', '^([A-z0-9_]+)\\s+(.*)$', 'DATESTAMP_EVENTLOG %{YEAR}%{MONTHNUM2}%{MONTHDAY}%{HOUR}%{MINUTE}%{SECOND}')",[2196]
"('Grok.java', 'oi.thekraken.grok.api.Grok', 'addPatternFromReader', '^([A-z0-9_]+)\\s+(.*)$', 'CISCOFW106006_106007_106010 : %{CISCO_ACTION:action} %{CISCO_DIRECTION:direction} %{WORD:protocol} (?:from|src) %{IP:src_ip}/%{INT:src_port}(\\(%{DATA:src_fwuser}\\))? (?:to|dst) %{IP:dst_ip}/%{INT:dst_port}(\\(%{DATA:dst_fwuser}\\))? (?:on interface %{DATA:interface}|due to %{CISCO_REASON:reason})')",[3171]
"('Grok.java', 'oi.thekraken.grok.api.Grok', 'addPatternFromReader', '^([A-z0-9_]+)\\s+(.*)$', 'SYSLOGFACILITY <%{NONNEGINT:facility}.%{NONNEGINT:priority}>')",[2396]
"('Grok.java', 'oi.thekraken.grok.api.Grok', 'addPatternFromReader', '^([A-z0-9_]+)\\s+(.*)$', '# ASA-6-302010')",[3496]
"('Grok.java', 'oi.thekraken.grok.api.Grok', 'addPatternFromReader', '^([A-z0-9_]+)\\s+(.*)$', 'ISO8601_SECOND (?:%{SECOND}|60)')",[1996]
"('Grok.java', 'oi.thekraken.grok.api.Grok', 'addPatternFromReader', '^([A-z0-9_]+)\\s+(.*)$', 'COMMONMAC (?:(?:[A-Fa-f0-9]{2}:){5}[A-Fa-f0-9]{2})')",[746]
"('Grok.java', 'oi.thekraken.grok.api.Grok', 'addPatternFromReader', '^([A-z0-9_]+)\\s+(.*)$', 'COMBINEDAPACHELOG %{COMMONAPACHELOG} %{QS:referrer} %{QS:agent}')",[2696]
"('Grok.java', 'oi.thekraken.grok.api.Grok', 'addPatternFromReader', '^([A-z0-9_]+)\\s+(.*)$', 'MONTH \\b(?:Jan(?:uary)?|Feb(?:ruary)?|Mar(?:ch)?|Apr(?:il)?|May|Jun(?:e)?|Jul(?:y)?|Aug(?:ust)?|Sep(?:tember)?|Oct(?:ober)?|Nov(?:ember)?|Dec(?:ember)?)\\b')",[1396]
"('Grok.java', 'oi.thekraken.grok.api.Grok', 'addPatternFromReader', '^([A-z0-9_]+)\\s+(.*)$', 'IPV4 (?<![0-9])(?:(?:25[0-5]|2[0-4][0-9]|[0-1]?[0-9]{1,2})[.](?:25[0-5]|2[0-4][0-9]|[0-1]?[0-9]{1,2})[.](?:25[0-5]|2[0-4][0-9]|[0-1]?[0-9]{1,2})[.](?:25[0-5]|2[0-4][0-9]|[0-1]?[0-9]{1,2}))(?![0-9])')",[796]
"('Grok.java', 'oi.thekraken.grok.api.Grok', 'addPatternFromReader', '^([A-z0-9_]+)\\s+(.*)$', 'CISCOFW733100 : \\[\\s*%{DATA:drop_type}\\s*\\] drop %{DATA:drop_rate_id} exceeded. Current burst rate is %{INT:drop_rate_current_burst} per second, max configured rate is %{INT:drop_rate_max_burst}; Current average rate is %{INT:drop_rate_current_avg} per second, max configured rate is %{INT:drop_rate_max_avg}; Cumulative total count is %{INT:drop_total_count}')",[4221]
"('Grok.java', 'oi.thekraken.grok.api.Grok', 'addPatternFromReader', '^([A-z0-9_]+)\\s+(.*)$', 'DATE %{DATE_US}|%{DATE_EU}')",[2046]
"('Grok.java', 'oi.thekraken.grok.api.Grok', 'addPatternFromReader', '^([A-z0-9_]+)\\s+(.*)$', 'LOGLEVEL ([A|a]lert|ALERT|[T|t]race|TRACE|[D|d]ebug|DEBUG|[N|n]otice|NOTICE|[I|i]nfo|INFO|[W|w]arn?(?:ing)?|WARN?(?:ING)?|[E|e]rr?(?:or)?|ERR?(?:OR)?|[C|c]rit?(?:ical)?|CRIT?(?:ICAL)?|[F|f]atal|FATAL|[S|s]evere|SEVERE|EMERG(?:ENCY)?|[Ee]merg(?:ency)?)')",[2771]
"('Grok.java', 'oi.thekraken.grok.api.Grok', 'addPatternFromReader', '^([A-z0-9_]+)\\s+(.*)$', 'HOST %{HOSTNAME:UNWANTED}')",[871]
"('Grok.java', 'oi.thekraken.grok.api.Grok', 'addPatternFromReader', '^([A-z0-9_]+)\\s+(.*)$', 'ISO8601_TIMEZONE (?:Z|[+-]%{HOUR}(?::?%{MINUTE}))')",[1971]
"('Grok.java', 'oi.thekraken.grok.api.Grok', 'addPatternFromReader', '^([A-z0-9_]+)\\s+(.*)$', '# ASA-4-402117')",[3796]
"('Grok.java', 'oi.thekraken.grok.api.Grok', 'addPatternFromReader', '^([A-z0-9_]+)\\s+(.*)$', '# ASA-4-419002')",[3946]
"('Grok.java', 'oi.thekraken.grok.api.Grok', 'addPatternFromReader', '^([A-z0-9_]+)\\s+(.*)$', 'TIMESTAMP_ISO8601 %{YEAR}-%{MONTHNUM}-%{MONTHDAY}[T ]%{HOUR}:?%{MINUTE}(?::?%{SECOND})?%{ISO8601_TIMEZONE}?')",[2021]
"('Grok.java', 'oi.thekraken.grok.api.Grok', 'addPatternFromReader', '^([A-z0-9_]+)\\s+(.*)$', '# Shortcuts')",[2471]
"('Grok.java', 'oi.thekraken.grok.api.Grok', 'addPatternFromReader', '^([A-z0-9_]+)\\s+(.*)$', '# ASA-3-313001, ASA-3-313004, ASA-3-313008')",[3696]
"('Grok.java', 'oi.thekraken.grok.api.Grok', 'addPatternFromReader', '^([A-z0-9_]+)\\s+(.*)$', 'TIME (?!<[0-9])%{HOUR}:%{MINUTE}(?::%{SECOND})(?![0-9])')",[1871]
"('Grok.java', 'oi.thekraken.grok.api.Grok', 'addPatternFromReader', '^([A-z0-9_]+)\\s+(.*)$', '# ASA-4-402119')",[3846]
"('Grok.java', 'oi.thekraken.grok.api.Grok', 'addPatternFromReader', '^([A-z0-9_]+)\\s+(.*)$', '# Log Levels')",[2746]
"('Grok.java', 'oi.thekraken.grok.api.Grok', 'addPatternFromReader', '^([A-z0-9_]+)\\s+(.*)$', 'YEAR (?>\\d\\d){1,2}')",[1621]
"('Grok.java', 'oi.thekraken.grok.api.Grok', 'addPatternFromReader', '^([A-z0-9_]+)\\s+(.*)$', '# ASA-5-106100')",[3396]
"('Grok.java', 'oi.thekraken.grok.api.Grok', 'addPatternFromReader', '^([A-z0-9_]+)\\s+(.*)$', 'MESSAGESLOG %{SYSLOGBASE} %{DATA}')",[2621]
"('Grok.java', 'oi.thekraken.grok.api.Grok', 'addPatternFromReader', '^([A-z0-9_]+)\\s+(.*)$', '# Months: January, Feb, 3, 03, 12, December')",[1371]
"('Grok.java', 'oi.thekraken.grok.api.Grok', 'addPatternFromReader', '^([A-z0-9_]+)\\s+(.*)$', 'CISCOTIMESTAMP %{MONTH} +%{MONTHDAY}(?: %{YEAR})? %{TIME}')",[2871]
"('Grok.java', 'oi.thekraken.grok.api.Grok', 'addPatternFromReader', '^([A-z0-9_]+)\\s+(.*)$', '# ASA-6-110002')",[3446]
"('Grok.java', 'oi.thekraken.grok.api.Grok', 'addPatternFromReader', '^([A-z0-9_]+)\\s+(.*)$', 'HTTPDATE %{MONTHDAY}/%{MONTH}/%{YEAR}:%{TIME} %{INT}')",[2421]
"('Grok.java', 'oi.thekraken.grok.api.Grok', 'addPatternFromReader', '^([A-z0-9_]+)\\s+(.*)$', 'NOTSPACE \\S+')",[446]
"('Grok.java', 'oi.thekraken.grok.api.Grok', 'addPatternFromReader', '^([A-z0-9_]+)\\s+(.*)$', 'COMMONAPACHELOG %{IPORHOST:clientip} %{USER:ident} %{USER:auth} \\[%{HTTPDATE:timestamp}\\] ""(?:%{WORD:verb} %{NOTSPACE:request}(?: HTTP/%{NUMBER:httpversion})?|%{DATA:rawrequest})"" %{NUMBER:response} (?:%{NUMBER:bytes}|-)')",[2671]
"('Grok.java', 'oi.thekraken.grok.api.Grok', 'addPatternFromReader', '^([A-z0-9_]+)\\s+(.*)$', 'DATE_EU %{MONTHDAY}[./-]%{MONTHNUM}[./-]%{YEAR}')",[1946]
"('Grok.java', 'oi.thekraken.grok.api.Grok', 'addPatternFromReader', '^([A-z0-9_]+)\\s+(.*)$', 'SPACE \\s*')",[471]
"('Grok.java', 'oi.thekraken.grok.api.Grok', 'addPatternFromReader', '^([A-z0-9_]+)\\s+(.*)$', 'URIPROTO [A-Za-z]+(\\+[A-Za-z+]+)?')",[1121]
"('Grok.java', 'oi.thekraken.grok.api.Grok', 'addPatternFromReader', '^([A-z0-9_]+)\\s+(.*)$', 'CISCOFW419002 : %{CISCO_REASON:reason} from %{DATA:src_interface}:%{IP:src_ip}/%{INT:src_port} to %{DATA:dst_interface}:%{IP:dst_ip}/%{INT:dst_port} with different initial sequence number')",[3971]
"('Grok.java', 'oi.thekraken.grok.api.Grok', 'addPatternFromReader', '^([A-z0-9_]+)\\s+(.*)$', 'BASE16FLOAT \\b(?<![0-9A-Fa-f.])(?:[+-]?(?:0x)?(?:(?:[0-9A-Fa-f]+(?:\\.[0-9A-Fa-f]*)?)|(?:\\.[0-9A-Fa-f]+)))\\b')",[321]
"('Grok.java', 'oi.thekraken.grok.api.Grok', 'addPatternFromReader', '^([A-z0-9_]+)\\s+(.*)$', 'TZ (?:[PMCE][SD]T|UTC)')",[2096]
"('Grok.java', 'oi.thekraken.grok.api.Grok', 'addPatternFromReader', '^([A-z0-9_]+)\\s+(.*)$', 'CISCOFW313005 : %{CISCO_REASON:reason} for %{WORD:protocol} error message: %{WORD:err_protocol} src %{DATA:err_src_interface}:%{IP:err_src_ip}(\\(%{DATA:err_src_fwuser}\\))? dst %{DATA:err_dst_interface}:%{IP:err_dst_ip}(\\(%{DATA:err_dst_fwuser}\\))? \\(type %{INT:err_icmp_type}, code %{INT:err_icmp_code}\\) on %{DATA:interface} interface\\.  Original IP payload: %{WORD:protocol} src %{IP:orig_src_ip}/%{INT:orig_src_port}(\\(%{DATA:orig_src_fwuser}\\))? dst %{IP:orig_dst_ip}/%{INT:orig_dst_port}(\\(%{DATA:orig_dst_fwuser}\\))?')",[3771]
"('Grok.java', 'oi.thekraken.grok.api.Grok', 'addPatternFromReader', '^([A-z0-9_]+)\\s+(.*)$', '# ASA-2-106006, ASA-2-106007, ASA-2-106010')",[3146]
"('Grok.java', 'oi.thekraken.grok.api.Grok', 'addPatternFromReader', '^([A-z0-9_]+)\\s+(.*)$', 'USERNAME [a-zA-Z0-9._-]+')",[171]
"('Grok.java', 'oi.thekraken.grok.api.Grok', 'addPatternFromReader', '^([A-z0-9_]+)\\s+(.*)$', 'DATESTAMP_OTHER %{DAY} %{MONTH} %{MONTHDAY} %{TIME} %{TZ} %{YEAR}')",[2171]
"('Grok.java', 'oi.thekraken.grok.api.Grok', 'addPatternFromReader', '^([A-z0-9_]+)\\s+(.*)$', 'QS %{QUOTEDSTRING:UNWANTED}')",[2496]
"('Grok.java', 'oi.thekraken.grok.api.Grok', 'addPatternFromReader', '^([A-z0-9_]+)\\s+(.*)$', 'HOSTPORT (?:%{IPORHOST}:%{POSINT:PORT})')",[921]
"('Grok.java', 'oi.thekraken.grok.api.Grok', 'addPatternFromReader', '^([A-z0-9_]+)\\s+(.*)$', '#QUOTEDSTRING (?:(?<!\\\\)(?:""(?:\\\\.|[^\\\\""])*""|(?:\'(?:\\\\.|[^\\\\\'])*\')|(?:`(?:\\\\.|[^\\\\`])*`)))')",[546]
"('PropertiesConfiguration.java', 'org.apache.commons.configuration.PropertiesConfiguration$PropertiesReader', 'doParseProperty', '(([\\S&&[^\\\\=:]]|\\\\.)*)(\\s*(\\s+|[=:])\\s*)(.*)', 'logFile=src/test/resources/PaloAltoFirewallParserTest.log')",[4560]
"('Grok.java', 'oi.thekraken.grok.api.Grok', 'addPatternFromReader', '^([A-z0-9_]+)\\s+(.*)$', '# ASA-6-302020, ASA-6-302021')",[3596]
"('Grok.java', 'oi.thekraken.grok.api.Grok', 'addPatternFromReader', '^([A-z0-9_]+)\\s+(.*)$', 'CISCOFW402117 : %{WORD:protocol}: Received a non-IPSec packet \\(protocol= %{WORD:orig_protocol}\\) from %{IP:src_ip} to %{IP:dst_ip}')",[3821]
"('Grok.java', 'oi.thekraken.grok.api.Grok', 'addPatternFromReader', '^([A-z0-9_]+)\\s+(.*)$', 'SECOND (?:(?:[0-5]?[0-9]|60)(?:[:.,][0-9]+)?)')",[1846]
"('Grok.java', 'oi.thekraken.grok.api.Grok', 'addPatternFromReader', '^([A-z0-9_]+)\\s+(.*)$', 'SYSLOGTIMESTAMP %{MONTH} +%{MONTHDAY} %{TIME}')",[2296]
"('Grok.java', 'oi.thekraken.grok.api.Grok', 'addPatternFromReader', '^([A-z0-9_]+)\\s+(.*)$', 'WINPATH (?>[A-Za-z]+:|\\\\)(?:\\\\[^\\\\?*]*)+')",[1096]
"('Grok.java', 'oi.thekraken.grok.api.Grok', 'addPatternFromReader', '^([A-z0-9_]+)\\s+(.*)$', ""URIPATH (?:/[A-Za-z0-9$.+!*'(){},~:;=@#%_\\-]*)+"")",[1221]
"('Grok.java', 'oi.thekraken.grok.api.Grok', 'addPatternFromReader', '^([A-z0-9_]+)\\s+(.*)$', 'HOUR (?:2[0123]|[01]?[0-9])')",[1771]
"('PropertiesConfiguration.java', 'org.apache.commons.configuration.PropertiesConfiguration$PropertiesReader', 'doParseProperty', '(([\\S&&[^\\\\=:]]|\\\\.)*)(\\s*(\\s+|[=:])\\s*)(.*)', 'logFile=src/test/resources/GrokParserTest.log')",[96]
"('Grok.java', 'oi.thekraken.grok.api.Grok', 'addPatternFromReader', '^([A-z0-9_]+)\\s+(.*)$', 'CISCO_ACTION Built|Teardown|Deny|Denied|denied|requested|permitted|denied by ACL|discarded|est-allowed|Dropping|created|deleted')",[2971]
"('Grok.java', 'oi.thekraken.grok.api.Grok', 'addPatternFromReader', '^([A-z0-9_]+)\\s+(.*)$', 'CISCOFW302010 : %{INT:connection_count} in use, %{INT:connection_count_max} most used')",[3521]
"('Grok.java', 'oi.thekraken.grok.api.Grok', 'addPatternFromReader', '^([A-z0-9_]+)\\s+(.*)$', 'SYSLOGHOST %{IPORHOST}')",[2371]
"('Grok.java', 'oi.thekraken.grok.api.Grok', 'addPatternFromReader', '^([A-z0-9_]+)\\s+(.*)$', 'PROG (?:[\\w._/%-]+)')",[2321]
"('Grok.java', 'oi.thekraken.grok.api.Grok', 'addPatternFromReader', '^([A-z0-9_]+)\\s+(.*)$', '# ASA-4-419001')",[3896]
"('Grok.java', 'oi.thekraken.grok.api.Grok', 'addPatternFromReader', '^([A-z0-9_]+)\\s+(.*)$', 'CISCOFW302013_302014_302015_302016 : %{CISCO_ACTION:action}(?: %{CISCO_DIRECTION:direction})? %{WORD:protocol} connection %{INT:connection_id} for %{DATA:src_interface}:%{IP:src_ip}/%{INT:src_port}( \\(%{IP:src_mapped_ip}/%{INT:src_mapped_port}\\))?(\\(%{DATA:src_fwuser}\\))? to %{DATA:dst_interface}:%{IP:dst_ip}/%{INT:dst_port}( \\(%{IP:dst_mapped_ip}/%{INT:dst_mapped_port}\\))?(\\(%{DATA:dst_fwuser}\\))?( duration %{TIME:duration} bytes %{INT:bytes})?(?: %{CISCO_REASON:reason})?( \\(%{DATA:user}\\))?')",[3571]
"('Grok.java', 'oi.thekraken.grok.api.Grok', 'addPatternFromReader', '^([A-z0-9_]+)\\s+(.*)$', 'CISCOFW402119 : %{WORD:protocol}: Received an %{WORD:orig_protocol} packet \\(SPI= %{DATA:spi}, sequence number= %{DATA:seq_num}\\) from %{IP:src_ip} \\(user= %{DATA:user}\\) to %{IP:dst_ip} that failed anti-replay checking')",[3871]
"('Grok.java', 'oi.thekraken.grok.api.Grok', 'addPatternFromReader', '^([A-z0-9_]+)\\s+(.*)$', 'UUID [A-Fa-f0-9]{8}-(?:[A-Fa-f0-9]{4}-){3}[A-Fa-f0-9]{12}')",[596]
"('Grok.java', 'oi.thekraken.grok.api.Grok', 'addPatternFromReader', '^([A-z0-9_]+)\\s+(.*)$', '# ASA-4-733100')",[4196]
