"('Description.java', 'org.junit.runner.Description', 'methodAndClassNamePatternGroupOrDefault', '([\\s\\S]*)\\((.*)\\)', 'testArchiveWithLongFilename(org.eclipse.jgit.pgm.ArchiveTest)')","[412, 1191]"
"('Description.java', 'org.junit.runner.Description', 'methodAndClassNamePatternGroupOrDefault', '([\\s\\S]*)\\((.*)\\)', 'testClean(org.eclipse.jgit.pgm.ReflogTest)')","[3769, 3834]"
"('SideBandInputStream.java', 'org.eclipse.jgit.transport.SideBandInputStream', 'doProgressLine', '^([\\w ]+): +\\d+% +\\( *(\\d+)/ *(\\d+)\\)(?:, done\\.)? *[\r\n]$', 'Counting objects: 1   \r')","[4923, 5630]"
"('Description.java', 'org.junit.runner.Description', 'methodAndClassNamePatternGroupOrDefault', '([\\s\\S]*)\\((.*)\\)', 'testFastForwardOnly(org.eclipse.jgit.pgm.MergeTest)')","[4159, 4395]"
"('Description.java', 'org.junit.runner.Description', 'methodAndClassNamePatternGroupOrDefault', '([\\s\\S]*)\\((.*)\\)', 'testZipExtension(org.eclipse.jgit.pgm.ArchiveTest)')","[580, 1367]"
"('Description.java', 'org.junit.runner.Description', 'methodAndClassNamePatternGroupOrDefault', '([\\s\\S]*)\\((.*)\\)', 'testAddAlreadyAdded(org.eclipse.jgit.pgm.AddTest)')","[1015, 1565]"
"('Description.java', 'org.junit.runner.Description', 'methodAndClassNamePatternGroupOrDefault', '([\\s\\S]*)\\((.*)\\)', 'testSquash(org.eclipse.jgit.pgm.MergeTest)')","[4264, 4505]"
"('Description.java', 'org.junit.runner.Description', 'methodAndClassNamePatternGroupOrDefault', '([\\s\\S]*)\\((.*)\\)', 'testTagTwice(org.eclipse.jgit.pgm.TagTest)')","[2287, 2309]"
"('URIish.java', 'org.eclipse.jgit.transport.URIish', '<init>', '^([a-z][a-z0-9+-]+)://(?:(?:([^/:@]+)(?::([^\\\\/]+))?@)?((?:[^\\\\/:]+)|(?:\\[[0-9a-f:]+\\]))(?::(\\d+))?((?:/~(?:[^\\\\/]+))?[\\\\/]))?(.+)?$', 'file:///tmp/jgit_test_6349890611572124140_tmp/tmp_8424421254604758346/.git/')",[4783]
"('SideBandInputStream.java', 'org.eclipse.jgit.transport.SideBandInputStream', 'doProgressLine', '^([\\w ]+): +\\d+% +\\( *(\\d+)/ *(\\d+)\\)(?:, done\\.)? *[\r\n]$', 'Total 3 (delta 0), reused 0 (delta 0)\n')",[6022]
"('Description.java', 'org.junit.runner.Description', 'methodAndClassNamePatternGroupOrDefault', '([\\s\\S]*)\\((.*)\\)', 'org.eclipse.jgit.pgm.CommitAndLogTest')","[2164, 2332]"
"('Description.java', 'org.junit.runner.Description', 'methodAndClassNamePatternGroupOrDefault', '([\\s\\S]*)\\((.*)\\)', 'testMergeNoCommitSquash(org.eclipse.jgit.pgm.MergeTest)')","[4180, 4417]"
"('Description.java', 'org.junit.runner.Description', 'methodAndClassNamePatternGroupOrDefault', '([\\s\\S]*)\\((.*)\\)', 'testCheckoutPath(org.eclipse.jgit.pgm.CheckoutTest)')","[2410, 2790]"
"('Description.java', 'org.junit.runner.Description', 'methodAndClassNamePatternGroupOrDefault', '([\\s\\S]*)\\((.*)\\)', 'testTarPrefixOption(org.eclipse.jgit.pgm.ArchiveTest)')","[265, 1037]"
"('URIish.java', 'org.eclipse.jgit.transport.URIish', '<init>', '^([\\\\/]?((?:[A-Za-z]:)?[\\\\/]?(?:(?:[^\\\\/]+[\\\\/]+)*[^\\\\/]+[\\\\/]*)))$', '/tmp/jgit_test_2316828743783284379_tmp/tmp_822229746508625149/.')","[6252, 6412]"
"('Description.java', 'org.junit.runner.Description', 'methodAndClassNamePatternGroupOrDefault', '([\\s\\S]*)\\((.*)\\)', 'testCheckoutSelf(org.eclipse.jgit.pgm.CheckoutTest)')","[2431, 2812]"
"('Description.java', 'org.junit.runner.Description', 'methodAndClassNamePatternGroupOrDefault', '([\\s\\S]*)\\((.*)\\)', 'testCheckoutNewBranchOnBranchToBeBorn(org.eclipse.jgit.pgm.CheckoutTest)')","[2704, 3098]"
"('Description.java', 'org.junit.runner.Description', 'methodAndClassNamePatternGroupOrDefault', '([\\s\\S]*)\\((.*)\\)', 'testFetchNoTags(org.eclipse.jgit.pgm.FetchTest)')","[4607, 4671]"
"('URIish.java', 'org.eclipse.jgit.transport.URIish', '<init>', '^(file):([\\\\/](?![\\\\/])((?:[A-Za-z]:)?[\\\\/]?(?:(?:[^\\\\/]+[\\\\/]+)*[^\\\\/]+[\\\\/]*)))$', 'file:///tmp/jgit_test_714924325553424322_tmp/tmp_5563212392800137801/.git/')",[3947]
"('URIish.java', 'org.eclipse.jgit.transport.URIish', '<init>', '^(file):([\\\\/](?![\\\\/])((?:[A-Za-z]:)?[\\\\/]?(?:(?:[^\\\\/]+[\\\\/]+)*[^\\\\/]+[\\\\/]*)))$', 'file:/tmp/jgit_test_714924325553424322_tmp/tmp_5563212392800137801/.git/')",[3899]
"('Description.java', 'org.junit.runner.Description', 'methodAndClassNamePatternGroupOrDefault', '([\\s\\S]*)\\((.*)\\)', 'testStatus(org.eclipse.jgit.pgm.StatusTest)')","[5446, 5490]"
"('SideBandInputStream.java', 'org.eclipse.jgit.transport.SideBandInputStream', 'doProgressLine', '^([\\w ]+): +\\d+% +\\( *(\\d+)/ *(\\d+)\\)(?:, done\\.)? *[\r\n]$', 'Finding sources:  33% (1/3)   \r')",[5826]
"('Description.java', 'org.junit.runner.Description', 'methodAndClassNamePatternGroupOrDefault', '([\\s\\S]*)\\((.*)\\)', 'testAddFileTwice(org.eclipse.jgit.pgm.AddTest)')","[994, 1543]"
"('Description.java', 'org.junit.runner.Description', 'methodAndClassNamePatternGroupOrDefault', '([\\s\\S]*)\\((.*)\\)', 'testSquashSelf(org.eclipse.jgit.pgm.MergeTest)')","[4243, 4483]"
"('Description.java', 'org.junit.runner.Description', 'methodAndClassNamePatternGroupOrDefault', '([\\s\\S]*)\\((.*)\\)', 'org.eclipse.jgit.pgm.BranchTest')","[36, 2085]"
"('Description.java', 'org.junit.runner.Description', 'methodAndClassNamePatternGroupOrDefault', '([\\s\\S]*)\\((.*)\\)', 'testTxzExtension(org.eclipse.jgit.pgm.ArchiveTest)')","[685, 1587]"
"('Description.java', 'org.junit.runner.Description', 'methodAndClassNamePatternGroupOrDefault', '([\\s\\S]*)\\((.*)\\)', 'testExistingBranch(org.eclipse.jgit.pgm.BranchTest)')","[57, 142]"
"('URIish.java', 'org.eclipse.jgit.transport.URIish', '<init>', '^(file):([\\\\/](?![\\\\/])((?:[A-Za-z]:)?[\\\\/]?(?:(?:[^\\\\/]+[\\\\/]+)*[^\\\\/]+[\\\\/]*)))$', '/tmp/jgit_test_7470201770266968542_tmp/tmp_4217932507643802380/.')","[3400, 3540]"
"('Description.java', 'org.junit.runner.Description', 'methodAndClassNamePatternGroupOrDefault', '([\\s\\S]*)\\((.*)\\)', 'org.eclipse.jgit.pgm.AddTest')","[910, 1930]"
"('Description.java', 'org.junit.runner.Description', 'methodAndClassNamePatternGroupOrDefault', '([\\s\\S]*)\\((.*)\\)', 'testStatusPorcelain(org.eclipse.jgit.pgm.StatusTest)')","[5425, 5468]"
"('Description.java', 'org.junit.runner.Description', 'methodAndClassNamePatternGroupOrDefault', '([\\s\\S]*)\\((.*)\\)', 'org.eclipse.jgit.pgm.CheckoutTest')","[2368, 4874]"
"('Description.java', 'org.junit.runner.Description', 'methodAndClassNamePatternGroupOrDefault', '([\\s\\S]*)\\((.*)\\)', 'org.eclipse.jgit.pgm.CLIGitCommandTest')","[2062, 2230]"
"('Description.java', 'org.junit.runner.Description', 'methodAndClassNamePatternGroupOrDefault', '([\\s\\S]*)\\((.*)\\)', 'testListDetached(org.eclipse.jgit.pgm.BranchTest)')","[99, 186]"
"('Description.java', 'org.junit.runner.Description', 'methodAndClassNamePatternGroupOrDefault', '([\\s\\S]*)\\((.*)\\)', 'testCheckoutBranch(org.eclipse.jgit.pgm.CheckoutTest)')","[2578, 2966]"
"('Description.java', 'org.junit.runner.Description', 'methodAndClassNamePatternGroupOrDefault', '([\\s\\S]*)\\((.*)\\)', 'testArchivePreservesContent(org.eclipse.jgit.pgm.ArchiveTest)')","[622, 1411]"
"('Description.java', 'org.junit.runner.Description', 'methodAndClassNamePatternGroupOrDefault', '([\\s\\S]*)\\((.*)\\)', 'testDescribeCommit(org.eclipse.jgit.pgm.DescribeTest)')","[3222, 3307]"
"('Description.java', 'org.junit.runner.Description', 'methodAndClassNamePatternGroupOrDefault', '([\\s\\S]*)\\((.*)\\)', 'testDefaultFormatIsTar(org.eclipse.jgit.pgm.ArchiveTest)')","[601, 1389]"
"('SideBandInputStream.java', 'org.eclipse.jgit.transport.SideBandInputStream', 'doProgressLine', '^([\\w ]+): +\\d+% +\\( *(\\d+)/ *(\\d+)\\)(?:, done\\.)? *[\r\n]$', 'Finding sources: 100% (1/1)\n')",[5168]
"('Description.java', 'org.junit.runner.Description', 'methodAndClassNamePatternGroupOrDefault', '([\\s\\S]*)\\((.*)\\)', 'testFormatOverridesFilename(org.eclipse.jgit.pgm.ArchiveTest)')","[811, 1719]"
"('Description.java', 'org.junit.runner.Description', 'methodAndClassNamePatternGroupOrDefault', '([\\s\\S]*)\\((.*)\\)', 'testArchiveWithSubdir(org.eclipse.jgit.pgm.ArchiveTest)')","[517, 1301]"
"('Description.java', 'org.junit.runner.Description', 'methodAndClassNamePatternGroupOrDefault', '([\\s\\S]*)\\((.*)\\)', 'testAddAFile(org.eclipse.jgit.pgm.AddTest)')","[952, 1499]"
"('Description.java', 'org.junit.runner.Description', 'methodAndClassNamePatternGroupOrDefault', '([\\s\\S]*)\\((.*)\\)', 'testCheckoutHead(org.eclipse.jgit.pgm.CheckoutTest)')","[2389, 2768]"
"('SideBandInputStream.java', 'org.eclipse.jgit.transport.SideBandInputStream', 'doProgressLine', '^([\\w ]+): +(\\d+)(?:, done\\.)? *[\r\n]$', 'Total 1 (delta 0), reused 0 (delta 0)\n')",[5266]
"('SideBandInputStream.java', 'org.eclipse.jgit.transport.SideBandInputStream', 'doProgressLine', '^([\\w ]+): +\\d+% +\\( *(\\d+)/ *(\\d+)\\)(?:, done\\.)? *[\r\n]$', 'Counting objects: 3, done\n')",[5728]
"('Description.java', 'org.junit.runner.Description', 'methodAndClassNamePatternGroupOrDefault', '([\\s\\S]*)\\((.*)\\)', 'org.eclipse.jgit.pgm.FetchTest')","[4586, 6094]"
"('URIish.java', 'org.eclipse.jgit.transport.URIish', '<init>', '^(?:([^/:@]+)(?::([^\\\\/]+))?@)?((?:[^\\\\/:]+)|(?:\\[[0-9a-f:]+\\])):((?:(?:/~(?:[^\\\\/]+))[\\\\/])?(?:(?:[^\\\\/]+[\\\\/]+)*[^\\\\/]+[\\\\/]*))$', '/tmp/jgit_test_7470201770266968542_tmp/tmp_4217932507643802380/.')","[3454, 3604]"
"('URIish.java', 'org.eclipse.jgit.transport.URIish', '<init>', '^([a-z][a-z0-9+-]+)://(?:(?:([^/:@]+)(?::([^\\\\/]+))?@)?((?:[^\\\\/:]+)|(?:\\[[0-9a-f:]+\\]))(?::(\\d+))?((?:/~(?:[^\\\\/]+))?[\\\\/]))?(.+)?$', 'file:///tmp/jgit_test_714924325553424322_tmp/tmp_5563212392800137801/.git/')",[3995]
"('Description.java', 'org.junit.runner.Description', 'methodAndClassNamePatternGroupOrDefault', '([\\s\\S]*)\\((.*)\\)', 'testMergeWithUserMessage(org.eclipse.jgit.pgm.MergeTest)')","[4222, 4461]"
"('Description.java', 'org.junit.runner.Description', 'methodAndClassNamePatternGroupOrDefault', '([\\s\\S]*)\\((.*)\\)', 'testFetchAllTags(org.eclipse.jgit.pgm.FetchTest)')","[4649, 4715]"
"('Description.java', 'org.junit.runner.Description', 'methodAndClassNamePatternGroupOrDefault', '([\\s\\S]*)\\((.*)\\)', 'testNoHead(org.eclipse.jgit.pgm.DescribeTest)')","[3264, 3351]"
"('Description.java', 'org.junit.runner.Description', 'methodAndClassNamePatternGroupOrDefault', '([\\s\\S]*)\\((.*)\\)', 'null')","[17, 225, 891, 1802, 2043, 2145, 2247, 2349, 3182, 3708, 4035, 4567, 5283, 5385]"
"('Description.java', 'org.junit.runner.Description', 'methodAndClassNamePatternGroupOrDefault', '([\\s\\S]*)\\((.*)\\)', 'org.eclipse.jgit.pgm.ReflogTest')","[3727, 4018]"
"('Description.java', 'org.junit.runner.Description', 'methodAndClassNamePatternGroupOrDefault', '([\\s\\S]*)\\((.*)\\)', 'testSplit(org.eclipse.jgit.pgm.CLIGitCommandTest)')","[2106, 2128]"
"('Description.java', 'org.junit.runner.Description', 'methodAndClassNamePatternGroupOrDefault', '([\\s\\S]*)\\((.*)\\)', 'org.eclipse.jgit.pgm.ArchiveTest')","[244, 6435]"
"('SideBandInputStream.java', 'org.eclipse.jgit.transport.SideBandInputStream', 'doProgressLine', '^([\\w ]+): +\\d+% +\\( *(\\d+)/ *(\\d+)\\)(?:, done\\.)? *[\r\n]$', 'Finding sources:  66% (2/3)   \r')",[5875]
"('Description.java', 'org.junit.runner.Description', 'methodAndClassNamePatternGroupOrDefault', '([\\s\\S]*)\\((.*)\\)', 'testTarExtension(org.eclipse.jgit.pgm.ArchiveTest)')","[643, 1433]"
"('Description.java', 'org.junit.runner.Description', 'methodAndClassNamePatternGroupOrDefault', '([\\s\\S]*)\\((.*)\\)', 'org.eclipse.jgit.pgm.RepoTest')","[1821, 4550]"
"('URIish.java', 'org.eclipse.jgit.transport.URIish', '<init>', '^([\\\\/]?((?:[A-Za-z]:)?[\\\\/]?(?:(?:[^\\\\/]+[\\\\/]+)*[^\\\\/]+[\\\\/]*)))$', '/tmp/jgit_test_7470201770266968542_tmp/tmp_4217932507643802380/.')","[3508, 3668]"
"('Description.java', 'org.junit.runner.Description', 'methodAndClassNamePatternGroupOrDefault', '([\\s\\S]*)\\((.*)\\)', 'testBranch(org.eclipse.jgit.pgm.ReflogTest)')","[3790, 3856]"
"('Description.java', 'org.junit.runner.Description', 'methodAndClassNamePatternGroupOrDefault', '([\\s\\S]*)\\((.*)\\)', 'testArchiveIncludesSubmoduleDirectory(org.eclipse.jgit.pgm.ArchiveTest)')","[328, 1103]"
"('Description.java', 'org.junit.runner.Description', 'methodAndClassNamePatternGroupOrDefault', '([\\s\\S]*)\\((.*)\\)', 'testTarIncludesSubmoduleDirectory(org.eclipse.jgit.pgm.ArchiveTest)')","[727, 1631]"
"('Description.java', 'org.junit.runner.Description', 'methodAndClassNamePatternGroupOrDefault', '([\\s\\S]*)\\((.*)\\)', 'testTarPreservesMode(org.eclipse.jgit.pgm.ArchiveTest)')","[433, 1213]"
"('Description.java', 'org.junit.runner.Description', 'methodAndClassNamePatternGroupOrDefault', '([\\s\\S]*)\\((.*)\\)', 'testFetchDefault(org.eclipse.jgit.pgm.FetchTest)')","[4628, 4693]"
"('URIish.java', 'org.eclipse.jgit.transport.URIish', '<init>', '^(file):([\\\\/](?![\\\\/])((?:[A-Za-z]:)?[\\\\/]?(?:(?:[^\\\\/]+[\\\\/]+)*[^\\\\/]+[\\\\/]*)))$', 'file:///tmp/jgit_test_7939686900262987369_tmp/tmp_4281287028841964199/.git/')",[5547]
"('Description.java', 'org.junit.runner.Description', 'methodAndClassNamePatternGroupOrDefault', '([\\s\\S]*)\\((.*)\\)', 'testEmptyArchive(org.eclipse.jgit.pgm.ArchiveTest)')","[475, 1257]"
"('Description.java', 'org.junit.runner.Description', 'methodAndClassNamePatternGroupOrDefault', '([\\s\\S]*)\\((.*)\\)', 'org.eclipse.jgit.pgm.TagTest')","[2266, 3165]"
"('SideBandInputStream.java', 'org.eclipse.jgit.transport.SideBandInputStream', 'doProgressLine', '^([\\w ]+): +(\\d+)(?:, done\\.)? *[\r\n]$', 'Counting objects: 1, done\n')",[5070]
"('URIish.java', 'org.eclipse.jgit.transport.URIish', '<init>', '^(?:([^/:@]+)(?::([^\\\\/]+))?@)?([^\\\\/:]{2,}):([\\\\/](?:(?:[^\\\\/]+[\\\\/]+)*[^\\\\/]+[\\\\/]*))$', '/tmp/jgit_test_2316828743783284379_tmp/tmp_822229746508625149/.')","[6225, 6380]"
"('URIish.java', 'org.eclipse.jgit.transport.URIish', '<init>', '^(file):([\\\\/](?![\\\\/])((?:[A-Za-z]:)?[\\\\/]?(?:(?:[^\\\\/]+[\\\\/]+)*[^\\\\/]+[\\\\/]*)))$', 'file:///tmp/jgit_test_8336600631138309233_tmp/tmp_1532230984646764230/.git/')",[4817]
"('URIish.java', 'org.eclipse.jgit.transport.URIish', '<init>', '^([a-z][a-z0-9+-]+)://(?:(?:([^/:@]+)(?::([^\\\\/]+))?@)?((?:[^\\\\/:]+)|(?:\\[[0-9a-f:]+\\]))(?::(\\d+))?((?:/~(?:[^\\\\/]+))?[\\\\/]))?(.+)?$', 'file:///tmp/jgit_test_7939686900262987369_tmp/tmp_4281287028841964199/.git/')",[5581]
"('Description.java', 'org.junit.runner.Description', 'methodAndClassNamePatternGroupOrDefault', '([\\s\\S]*)\\((.*)\\)', 'testCheckoutExistingBranchWithConflict(org.eclipse.jgit.pgm.CheckoutTest)')","[2536, 2922]"
"('Description.java', 'org.junit.runner.Description', 'methodAndClassNamePatternGroupOrDefault', '([\\s\\S]*)\\((.*)\\)', 'testNoExtensionMeansTar(org.eclipse.jgit.pgm.ArchiveTest)')","[454, 1235]"
"('Description.java', 'org.junit.runner.Description', 'methodAndClassNamePatternGroupOrDefault', '([\\s\\S]*)\\((.*)\\)', 'testUnrecognizedFormat(org.eclipse.jgit.pgm.ArchiveTest)')","[391, 1169]"
"('Description.java', 'org.junit.runner.Description', 'methodAndClassNamePatternGroupOrDefault', '([\\s\\S]*)\\((.*)\\)', 'testCheckoutUnresolvedHead(org.eclipse.jgit.pgm.CheckoutTest)')","[2452, 2834]"
"('Description.java', 'org.junit.runner.Description', 'methodAndClassNamePatternGroupOrDefault', '([\\s\\S]*)\\((.*)\\)', 'testMergeNoCommit(org.eclipse.jgit.pgm.MergeTest)')","[4201, 4439]"
"('Description.java', 'org.junit.runner.Description', 'methodAndClassNamePatternGroupOrDefault', '([\\s\\S]*)\\((.*)\\)', 'testHeadNoTag(org.eclipse.jgit.pgm.DescribeTest)')","[3243, 3329]"
"('Description.java', 'org.junit.runner.Description', 'methodAndClassNamePatternGroupOrDefault', '([\\s\\S]*)\\((.*)\\)', 'testUnrecognizedExtensionMeansTar(org.eclipse.jgit.pgm.ArchiveTest)')","[559, 1345]"
"('Description.java', 'org.junit.runner.Description', 'methodAndClassNamePatternGroupOrDefault', '([\\s\\S]*)\\((.*)\\)', 'testPrefixDoesNotNormalizeDoubleSlash(org.eclipse.jgit.pgm.ArchiveTest)')","[790, 1697]"
"('Description.java', 'org.junit.runner.Description', 'methodAndClassNamePatternGroupOrDefault', '([\\s\\S]*)\\((.*)\\)', 'testMergeSelf(org.eclipse.jgit.pgm.MergeTest)')","[4075, 4307]"
"('Description.java', 'org.junit.runner.Description', 'methodAndClassNamePatternGroupOrDefault', '([\\s\\S]*)\\((.*)\\)', 'testMerge(org.eclipse.jgit.pgm.MergeTest)')","[4138, 4373]"
"('Description.java', 'org.junit.runner.Description', 'methodAndClassNamePatternGroupOrDefault', '([\\s\\S]*)\\((.*)\\)', 'testArchivePrefixOption(org.eclipse.jgit.pgm.ArchiveTest)')","[496, 1279]"
"('Description.java', 'org.junit.runner.Description', 'methodAndClassNamePatternGroupOrDefault', '([\\s\\S]*)\\((.*)\\)', 'testDescribeTag(org.eclipse.jgit.pgm.DescribeTest)')","[3285, 3373]"
"('Description.java', 'org.junit.runner.Description', 'methodAndClassNamePatternGroupOrDefault', '([\\s\\S]*)\\((.*)\\)', 'fileModeTestFolderWithMissingInWorkingTree(org.eclipse.jgit.pgm.CheckoutTest)')","[2599, 2988]"
"('URIish.java', 'org.eclipse.jgit.transport.URIish', '<init>', '^([a-z][a-z0-9+-]+)://(?:(?:([^/:@]+)(?::([^\\\\/]+))?@)?((?:[^\\\\/:]+)|(?:\\[[0-9a-f:]+\\]))(?::(\\d+))?((?:/~(?:[^\\\\/]+))?[\\\\/]))?(.+)?$', 'file:///tmp/jgit_test_714924325553424322_tmp/tmp_8398566643684770106/.git/')",[2026]
"('Description.java', 'org.junit.runner.Description', 'methodAndClassNamePatternGroupOrDefault', '([\\s\\S]*)\\((.*)\\)', 'fileModeTestMissingWithFolderInWorkingTree(org.eclipse.jgit.pgm.CheckoutTest)')","[2725, 3120]"
"('Description.java', 'org.junit.runner.Description', 'methodAndClassNamePatternGroupOrDefault', '([\\s\\S]*)\\((.*)\\)', 'testFastForward(org.eclipse.jgit.pgm.MergeTest)')","[4096, 4329]"
"('SideBandInputStream.java', 'org.eclipse.jgit.transport.SideBandInputStream', 'doProgressLine', '^([\\w ]+): +\\d+% +\\( *(\\d+)/ *(\\d+)\\)(?:, done\\.)? *[\r\n]$', 'Finding sources: 100% (1/1)   \r')",[5119]
"('Description.java', 'org.junit.runner.Description', 'methodAndClassNamePatternGroupOrDefault', '([\\s\\S]*)\\((.*)\\)', 'testArchivePreservesMode(org.eclipse.jgit.pgm.ArchiveTest)')","[538, 1323]"
"('SideBandInputStream.java', 'org.eclipse.jgit.transport.SideBandInputStream', 'doProgressLine', '^([\\w ]+): +(\\d+)(?:, done\\.)? *[\r\n]$', 'Counting objects: 1   \r')","[4972, 5679]"
"('Description.java', 'org.junit.runner.Description', 'methodAndClassNamePatternGroupOrDefault', '([\\s\\S]*)\\((.*)\\)', 'org.eclipse.jgit.pgm.ConfigTest')","[5302, 5368]"
"('URIish.java', 'org.eclipse.jgit.transport.URIish', '<init>', '^([a-z][a-z0-9+-]+)://(?:(?:([^/:@]+)(?::([^\\\\/]+))?@)?((?:[^\\\\/:]+)|(?:\\[[0-9a-f:]+\\]))(?::(\\d+))?((?:/~(?:[^\\\\/]+))?[\\\\/]))?(.+)?$', '/tmp/jgit_test_7470201770266968542_tmp/tmp_4217932507643802380/.')","[3427, 3572]"
"('Description.java', 'org.junit.runner.Description', 'methodAndClassNamePatternGroupOrDefault', '([\\s\\S]*)\\((.*)\\)', 'testTarWithSubdir(org.eclipse.jgit.pgm.ArchiveTest)')","[349, 1125]"
"('Description.java', 'org.junit.runner.Description', 'methodAndClassNamePatternGroupOrDefault', '([\\s\\S]*)\\((.*)\\)', 'org.eclipse.jgit.pgm.DescribeTest')","[3201, 3691]"
"('URIish.java', 'org.eclipse.jgit.transport.URIish', '<init>', '^(?:([^/:@]+)(?::([^\\\\/]+))?@)?([^\\\\/:]{2,}):([\\\\/](?:(?:[^\\\\/]+[\\\\/]+)*[^\\\\/]+[\\\\/]*))$', '/tmp/jgit_test_7470201770266968542_tmp/tmp_4217932507643802380/.')","[3481, 3636]"
"('URIish.java', 'org.eclipse.jgit.transport.URIish', '<init>', '^(?:([^/:@]+)(?::([^\\\\/]+))?@)?((?:[^\\\\/:]+)|(?:\\[[0-9a-f:]+\\])):((?:(?:/~(?:[^\\\\/]+))[\\\\/])?(?:(?:[^\\\\/]+[\\\\/]+)*[^\\\\/]+[\\\\/]*))$', '/tmp/jgit_test_2316828743783284379_tmp/tmp_822229746508625149/.')","[6198, 6348]"
"('Description.java', 'org.junit.runner.Description', 'methodAndClassNamePatternGroupOrDefault', '([\\s\\S]*)\\((.*)\\)', 'testTarPreservesContent(org.eclipse.jgit.pgm.ArchiveTest)')","[307, 1081]"
"('Description.java', 'org.junit.runner.Description', 'methodAndClassNamePatternGroupOrDefault', '([\\s\\S]*)\\((.*)\\)', 'testPrefixWithoutTrailingSlash(org.eclipse.jgit.pgm.ArchiveTest)')","[706, 1609]"
"('URIish.java', 'org.eclipse.jgit.transport.URIish', '<init>', '^(file):([\\\\/](?![\\\\/])((?:[A-Za-z]:)?[\\\\/]?(?:(?:[^\\\\/]+[\\\\/]+)*[^\\\\/]+[\\\\/]*)))$', 'file:///tmp/jgit_test_6349890611572124140_tmp/tmp_8424421254604758346/.git/')",[4749]
"('URIish.java', 'org.eclipse.jgit.transport.URIish', '<init>', '^([a-z][a-z0-9+-]+)://(?:(?:([^/:@]+)(?::([^\\\\/]+))?@)?((?:[^\\\\/:]+)|(?:\\[[0-9a-f:]+\\]))(?::(\\d+))?((?:/~(?:[^\\\\/]+))?[\\\\/]))?(.+)?$', '/tmp/jgit_test_2316828743783284379_tmp/tmp_822229746508625149/.')","[6171, 6316]"
"('SideBandInputStream.java', 'org.eclipse.jgit.transport.SideBandInputStream', 'doProgressLine', '^([\\w ]+): +(\\d+)(?:, done\\.)? *[\r\n]$', 'Total 3 (delta 0), reused 0 (delta 0)\n')",[6071]
"('Description.java', 'org.junit.runner.Description', 'methodAndClassNamePatternGroupOrDefault', '([\\s\\S]*)\\((.*)\\)', 'testAddRepoManifest(org.eclipse.jgit.pgm.RepoTest)')","[1842, 1864]"
"('Description.java', 'org.junit.runner.Description', 'methodAndClassNamePatternGroupOrDefault', '([\\s\\S]*)\\((.*)\\)', 'fileModeTestFolderThenMissingWithFileInWorkingTree(org.eclipse.jgit.pgm.CheckoutTest)')","[2683, 3076]"
"('Description.java', 'org.junit.runner.Description', 'methodAndClassNamePatternGroupOrDefault', '([\\s\\S]*)\\((.*)\\)', 'testTarPrefixWithoutTrailingSlash(org.eclipse.jgit.pgm.ArchiveTest)')","[748, 1653]"
"('Description.java', 'org.junit.runner.Description', 'methodAndClassNamePatternGroupOrDefault', '([\\s\\S]*)\\((.*)\\)', 'org.eclipse.jgit.pgm.StatusTest')","[5404, 6117]"
"('Description.java', 'org.junit.runner.Description', 'methodAndClassNamePatternGroupOrDefault', '([\\s\\S]*)\\((.*)\\)', 'fileModeTestFileThenFileWithFolderInIndex(org.eclipse.jgit.pgm.CheckoutTest)')","[2473, 2856]"
"('Description.java', 'org.junit.runner.Description', 'methodAndClassNamePatternGroupOrDefault', '([\\s\\S]*)\\((.*)\\)', 'testTarWithLongFilename(org.eclipse.jgit.pgm.ArchiveTest)')","[664, 1455]"
"('SideBandInputStream.java', 'org.eclipse.jgit.transport.SideBandInputStream', 'doProgressLine', '^([\\w ]+): +\\d+% +\\( *(\\d+)/ *(\\d+)\\)(?:, done\\.)? *[\r\n]$', 'Counting objects: 1, done\n')",[5021]
"('Description.java', 'org.junit.runner.Description', 'methodAndClassNamePatternGroupOrDefault', '([\\s\\S]*)\\((.*)\\)', 'testArchiveWithFiles(org.eclipse.jgit.pgm.ArchiveTest)')","[769, 1675]"
"('URIish.java', 'org.eclipse.jgit.transport.URIish', '<init>', '^([a-z][a-z0-9+-]+)://(?:(?:([^/:@]+)(?::([^\\\\/]+))?@)?((?:[^\\\\/:]+)|(?:\\[[0-9a-f:]+\\]))(?::(\\d+))?((?:/~(?:[^\\\\/]+))?[\\\\/]))?(.+)?$', 'file:///tmp/jgit_test_8336600631138309233_tmp/tmp_1532230984646764230/.git/')",[4851]
"('Description.java', 'org.junit.runner.Description', 'methodAndClassNamePatternGroupOrDefault', '([\\s\\S]*)\\((.*)\\)', 'testCheckoutNonExistingBranch(org.eclipse.jgit.pgm.CheckoutTest)')","[2620, 3010]"
"('Description.java', 'org.junit.runner.Description', 'methodAndClassNamePatternGroupOrDefault', '([\\s\\S]*)\\((.*)\\)', 'testAddUsage(org.eclipse.jgit.pgm.AddTest)')","[973, 1521]"
"('SideBandInputStream.java', 'org.eclipse.jgit.transport.SideBandInputStream', 'doProgressLine', '^([\\w ]+): +\\d+% +\\( *(\\d+)/ *(\\d+)\\)(?:, done\\.)? *[\r\n]$', 'Total 1 (delta 0), reused 0 (delta 0)\n')",[5217]
"('Description.java', 'org.junit.runner.Description', 'methodAndClassNamePatternGroupOrDefault', '([\\s\\S]*)\\((.*)\\)', 'testCheckoutWithMissingWorkingTreeFile(org.eclipse.jgit.pgm.CheckoutTest)')","[2641, 3032]"
"('Description.java', 'org.junit.runner.Description', 'methodAndClassNamePatternGroupOrDefault', '([\\s\\S]*)\\((.*)\\)', 'org.eclipse.jgit.pgm.MergeTest')","[4054, 5513]"
"('Description.java', 'org.junit.runner.Description', 'methodAndClassNamePatternGroupOrDefault', '([\\s\\S]*)\\((.*)\\)', 'testTbz2Extension(org.eclipse.jgit.pgm.ArchiveTest)')","[874, 1785]"
"('SideBandInputStream.java', 'org.eclipse.jgit.transport.SideBandInputStream', 'doProgressLine', '^([\\w ]+): +(\\d+)(?:, done\\.)? *[\r\n]$', 'Counting objects: 3, done\n')",[5777]
"('Description.java', 'org.junit.runner.Description', 'methodAndClassNamePatternGroupOrDefault', '([\\s\\S]*)\\((.*)\\)', 'testList(org.eclipse.jgit.pgm.BranchTest)')","[78, 164]"
"('Description.java', 'org.junit.runner.Description', 'methodAndClassNamePatternGroupOrDefault', '([\\s\\S]*)\\((.*)\\)', 'testNoFastForward(org.eclipse.jgit.pgm.MergeTest)')","[4285, 4527]"
"('Description.java', 'org.junit.runner.Description', 'methodAndClassNamePatternGroupOrDefault', '([\\s\\S]*)\\((.*)\\)', 'testAddNothing(org.eclipse.jgit.pgm.AddTest)')","[931, 1477]"
"('SideBandInputStream.java', 'org.eclipse.jgit.transport.SideBandInputStream', 'doProgressLine', '^([\\w ]+): +\\d+% +\\( *(\\d+)/ *(\\d+)\\)(?:, done\\.)? *[\r\n]$', 'Finding sources: 100% (3/3)   \r')",[5924]
"('Description.java', 'org.junit.runner.Description', 'methodAndClassNamePatternGroupOrDefault', '([\\s\\S]*)\\((.*)\\)', 'testExtensionMatchIsAnchored(org.eclipse.jgit.pgm.ArchiveTest)')","[370, 1147]"
"('Description.java', 'org.junit.runner.Description', 'methodAndClassNamePatternGroupOrDefault', '([\\s\\S]*)\\((.*)\\)', 'testCommitAmend(org.eclipse.jgit.pgm.CommitAndLogTest)')","[2185, 2207]"
"('URIish.java', 'org.eclipse.jgit.transport.URIish', '<init>', '^(file):([\\\\/](?![\\\\/])((?:[A-Za-z]:)?[\\\\/]?(?:(?:[^\\\\/]+[\\\\/]+)*[^\\\\/]+[\\\\/]*)))$', '/tmp/jgit_test_2316828743783284379_tmp/tmp_822229746508625149/.')","[6144, 6284]"
"('Description.java', 'org.junit.runner.Description', 'methodAndClassNamePatternGroupOrDefault', '([\\s\\S]*)\\((.*)\\)', 'testListConfig(org.eclipse.jgit.pgm.ConfigTest)')","[5323, 5345]"
"('Description.java', 'org.junit.runner.Description', 'methodAndClassNamePatternGroupOrDefault', '([\\s\\S]*)\\((.*)\\)', 'testCheckoutNewBranchThatAlreadyExists(org.eclipse.jgit.pgm.CheckoutTest)')","[2494, 2878]"
"('Description.java', 'org.junit.runner.Description', 'methodAndClassNamePatternGroupOrDefault', '([\\s\\S]*)\\((.*)\\)', 'fileModeTestFolderThenFileWithMissingInWorkingTree(org.eclipse.jgit.pgm.CheckoutTest)')","[2557, 2944]"
"('Description.java', 'org.junit.runner.Description', 'methodAndClassNamePatternGroupOrDefault', '([\\s\\S]*)\\((.*)\\)', 'fileModeTestFileWithFolderInIndex(org.eclipse.jgit.pgm.CheckoutTest)')","[2515, 2900]"
"('Description.java', 'org.junit.runner.Description', 'methodAndClassNamePatternGroupOrDefault', '([\\s\\S]*)\\((.*)\\)', 'testCheckoutNewBranch(org.eclipse.jgit.pgm.CheckoutTest)')","[2662, 3054]"
"('Description.java', 'org.junit.runner.Description', 'methodAndClassNamePatternGroupOrDefault', '([\\s\\S]*)\\((.*)\\)', 'testNoFastForwardAndSquash(org.eclipse.jgit.pgm.MergeTest)')","[4117, 4351]"
"('Description.java', 'org.junit.runner.Description', 'methodAndClassNamePatternGroupOrDefault', '([\\s\\S]*)\\((.*)\\)', 'testTgzExtensions(org.eclipse.jgit.pgm.ArchiveTest)')","[286, 1059]"
"('SideBandInputStream.java', 'org.eclipse.jgit.transport.SideBandInputStream', 'doProgressLine', '^([\\w ]+): +\\d+% +\\( *(\\d+)/ *(\\d+)\\)(?:, done\\.)? *[\r\n]$', 'Finding sources: 100% (3/3)\n')",[5973]
"('URIish.java', 'org.eclipse.jgit.transport.URIish', '<init>', '^(file):([\\\\/](?![\\\\/])((?:[A-Za-z]:)?[\\\\/]?(?:(?:[^\\\\/]+[\\\\/]+)*[^\\\\/]+[\\\\/]*)))$', 'file:///tmp/jgit_test_714924325553424322_tmp/tmp_8398566643684770106/.git/')",[1978]
"('Description.java', 'org.junit.runner.Description', 'methodAndClassNamePatternGroupOrDefault', '([\\s\\S]*)\\((.*)\\)', 'testListContains(org.eclipse.jgit.pgm.BranchTest)')","[120, 208]"
"('URIish.java', 'org.eclipse.jgit.transport.URIish', '<init>', '^(file):([\\\\/](?![\\\\/])((?:[A-Za-z]:)?[\\\\/]?(?:(?:[^\\\\/]+[\\\\/]+)*[^\\\\/]+[\\\\/]*)))$', 'file:/tmp/jgit_test_714924325553424322_tmp/tmp_8398566643684770106/.git/')",[1907]
"('Description.java', 'org.junit.runner.Description', 'methodAndClassNamePatternGroupOrDefault', '([\\s\\S]*)\\((.*)\\)', 'fileModeTestMissingThenFolderWithFileInWorkingTree(org.eclipse.jgit.pgm.CheckoutTest)')","[2746, 3142]"
"('Description.java', 'org.junit.runner.Description', 'methodAndClassNamePatternGroupOrDefault', '([\\s\\S]*)\\((.*)\\)', 'testEmptyTar(org.eclipse.jgit.pgm.ArchiveTest)')","[853, 1763]"
"('Description.java', 'org.junit.runner.Description', 'methodAndClassNamePatternGroupOrDefault', '([\\s\\S]*)\\((.*)\\)', 'testPrefixDoesNotNormalizeDoubleSlashInTar(org.eclipse.jgit.pgm.ArchiveTest)')","[832, 1741]"
"('Description.java', 'org.junit.runner.Description', 'methodAndClassNamePatternGroupOrDefault', '([\\s\\S]*)\\((.*)\\)', 'testSingleCommit(org.eclipse.jgit.pgm.ReflogTest)')","[3748, 3812]"
